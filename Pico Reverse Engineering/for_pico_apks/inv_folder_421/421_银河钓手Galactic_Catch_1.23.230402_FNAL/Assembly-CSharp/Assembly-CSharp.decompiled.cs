using System;
using System.Collections;
using System.Collections.Generic;
using System.Diagnostics;
using System.Globalization;
using System.IO;
using System.Linq;
using System.Reflection;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Text;
using System.Text.RegularExpressions;
using System.Xml;
using BigCatch;
using DG.Tweening;
using DigitalRuby.LightningBolt;
using I2.Loc;
using Il2CppDummyDll;
using Obi;
using PathologicalGames;
using RogoDigital.Lipsync;
using TMPro;
using TriangleNet.Geometry;
using TriangleNet.Logging;
using TriangleNet.Meshing;
using TriangleNet.Meshing.Data;
using TriangleNet.Meshing.Iterators;
using TriangleNet.Topology;
using TriangleNet.Topology.DCEL;
using TriangleNet.Voronoi;
using UnityEngine;
using UnityEngine.AI;
using UnityEngine.Audio;
using UnityEngine.EventSystems;
using UnityEngine.Events;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;
using UnityEngine.Networking;
using UnityEngine.Playables;
using UnityEngine.Rendering;
using UnityEngine.SceneManagement;
using UnityEngine.Timeline;
using UnityEngine.UI;
using UnityEngine.Video;
using UnityEngine.XR.Interaction.Toolkit;
using UnityEngine.XR.Interaction.Toolkit.UI;
using UnityStandardAssets.Effects;

[assembly: AssemblyVersion("1.0.0.0")]
[Serializable]
[Token(Token = "0x2000002")]
public class LightControlBehaviour : PlayableBehaviour
{
	[Token(Token = "0x4000001")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Color color;

	[Token(Token = "0x4000002")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float intensity;

	[Token(Token = "0x4000003")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float bounceIntensity;

	[Token(Token = "0x4000004")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float range;

	[Token(Token = "0x6000001")]
	[Address(RVA = "0xF3CE30", Offset = "0xF3CE30", VA = "0xF3CE30")]
	public LightControlBehaviour()
	{
	}
}
[Serializable]
[Token(Token = "0x2000003")]
public class LightControlClip : PlayableAsset, ITimelineClipAsset
{
	[Token(Token = "0x4000005")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LightControlBehaviour template;

	[Token(Token = "0x17000001")]
	public ClipCaps clipCaps
	{
		[Token(Token = "0x6000002")]
		[Address(RVA = "0xF3CE74", Offset = "0xF3CE74", VA = "0xF3CE74", Slot = "9")]
		get
		{
			return default(ClipCaps);
		}
	}

	[Token(Token = "0x6000003")]
	[Address(RVA = "0xF3CE7C", Offset = "0xF3CE7C", VA = "0xF3CE7C", Slot = "6")]
	public override Playable CreatePlayable(PlayableGraph graph, GameObject owner)
	{
		return default(Playable);
	}

	[Token(Token = "0x6000004")]
	[Address(RVA = "0xF3CF1C", Offset = "0xF3CF1C", VA = "0xF3CF1C")]
	public LightControlClip()
	{
	}
}
[Token(Token = "0x2000004")]
public class LightControlMixerBehaviour : PlayableBehaviour
{
	[Token(Token = "0x4000006")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Color m_DefaultColor;

	[Token(Token = "0x4000007")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float m_DefaultIntensity;

	[Token(Token = "0x4000008")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float m_DefaultBounceIntensity;

	[Token(Token = "0x4000009")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float m_DefaultRange;

	[Token(Token = "0x400000A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Light m_TrackBinding;

	[Token(Token = "0x400000B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool m_FirstFrameHappened;

	[Token(Token = "0x6000005")]
	[Address(RVA = "0xF3CF8C", Offset = "0xF3CF8C", VA = "0xF3CF8C", Slot = "20")]
	public override void ProcessFrame(Playable playable, FrameData info, object playerData)
	{
	}

	[Token(Token = "0x6000006")]
	[Address(RVA = "0xF3D370", Offset = "0xF3D370", VA = "0xF3D370", Slot = "16")]
	public override void OnPlayableDestroy(Playable playable)
	{
	}

	[Token(Token = "0x6000007")]
	[Address(RVA = "0xF3D44C", Offset = "0xF3D44C", VA = "0xF3D44C")]
	public LightControlMixerBehaviour()
	{
	}
}
[Token(Token = "0x2000005")]
[AttributeAttribute(Name = "TrackColorAttribute", RVA = "0x9E4740", Offset = "0x9E4740")]
[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0x9E4740", Offset = "0x9E4740")]
[AttributeAttribute(Name = "TrackBindingTypeAttribute", RVA = "0x9E4740", Offset = "0x9E4740")]
public class LightControlTrack : TrackAsset
{
	[Token(Token = "0x6000008")]
	[Address(RVA = "0xF3D454", Offset = "0xF3D454", VA = "0xF3D454", Slot = "24")]
	public override Playable CreateTrackMixer(PlayableGraph graph, GameObject go, int inputCount)
	{
		return default(Playable);
	}

	[Token(Token = "0x6000009")]
	[Address(RVA = "0xF3D4EC", Offset = "0xF3D4EC", VA = "0xF3D4EC", Slot = "29")]
	public override void GatherProperties(PlayableDirector director, IPropertyCollector driver)
	{
	}

	[Token(Token = "0x600000A")]
	[Address(RVA = "0xF3D4F4", Offset = "0xF3D4F4", VA = "0xF3D4F4")]
	public LightControlTrack()
	{
	}
}
[Serializable]
[Token(Token = "0x2000006")]
public class NavMeshAgentControlBehaviour : PlayableBehaviour
{
	[Token(Token = "0x400000C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Transform destination;

	[Token(Token = "0x400000D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool destinationSet;

	[Token(Token = "0x600000B")]
	[Address(RVA = "0xF4C990", Offset = "0xF4C990", VA = "0xF4C990", Slot = "15")]
	public override void OnPlayableCreate(Playable playable)
	{
	}

	[Token(Token = "0x600000C")]
	[Address(RVA = "0xF4C998", Offset = "0xF4C998", VA = "0xF4C998")]
	public NavMeshAgentControlBehaviour()
	{
	}
}
[Serializable]
[Token(Token = "0x2000007")]
public class NavMeshAgentControlClip : PlayableAsset, ITimelineClipAsset
{
	[Token(Token = "0x400000E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ExposedReference<Transform> destination;

	[Token(Token = "0x400000F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public NavMeshAgentControlBehaviour template;

	[Token(Token = "0x17000002")]
	public ClipCaps clipCaps
	{
		[Token(Token = "0x600000D")]
		[Address(RVA = "0xF4C9A0", Offset = "0xF4C9A0", VA = "0xF4C9A0", Slot = "9")]
		get
		{
			return default(ClipCaps);
		}
	}

	[Token(Token = "0x600000E")]
	[Address(RVA = "0xF4C9A8", Offset = "0xF4C9A8", VA = "0xF4C9A8", Slot = "6")]
	public override Playable CreatePlayable(PlayableGraph graph, GameObject owner)
	{
		return default(Playable);
	}

	[Token(Token = "0x600000F")]
	[Address(RVA = "0xF4CAC0", Offset = "0xF4CAC0", VA = "0xF4CAC0")]
	public NavMeshAgentControlClip()
	{
	}
}
[Token(Token = "0x2000008")]
public class NavMeshAgentControlMixerBehaviour : PlayableBehaviour
{
	[Token(Token = "0x6000010")]
	[Address(RVA = "0xF4CB34", Offset = "0xF4CB34", VA = "0xF4CB34", Slot = "20")]
	public override void ProcessFrame(Playable playable, FrameData info, object playerData)
	{
	}

	[Token(Token = "0x6000011")]
	[Address(RVA = "0xF4CD64", Offset = "0xF4CD64", VA = "0xF4CD64")]
	public NavMeshAgentControlMixerBehaviour()
	{
	}
}
[Token(Token = "0x2000009")]
[AttributeAttribute(Name = "TrackColorAttribute", RVA = "0x9E47F4", Offset = "0x9E47F4")]
[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0x9E47F4", Offset = "0x9E47F4")]
[AttributeAttribute(Name = "TrackBindingTypeAttribute", RVA = "0x9E47F4", Offset = "0x9E47F4")]
public class NavMeshAgentControlTrack : TrackAsset
{
	[Token(Token = "0x6000012")]
	[Address(RVA = "0xF4CD6C", Offset = "0xF4CD6C", VA = "0xF4CD6C", Slot = "24")]
	public override Playable CreateTrackMixer(PlayableGraph graph, GameObject go, int inputCount)
	{
		return default(Playable);
	}

	[Token(Token = "0x6000013")]
	[Address(RVA = "0xF4CE04", Offset = "0xF4CE04", VA = "0xF4CE04")]
	public NavMeshAgentControlTrack()
	{
	}
}
[Serializable]
[Token(Token = "0x200000A")]
public class ScreenFaderBehaviour : PlayableBehaviour
{
	[Token(Token = "0x4000010")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Color color;

	[Token(Token = "0x6000014")]
	[Address(RVA = "0xE3FDC4", Offset = "0xE3FDC4", VA = "0xE3FDC4")]
	public ScreenFaderBehaviour()
	{
	}
}
[Serializable]
[Token(Token = "0x200000B")]
public class ScreenFaderClip : PlayableAsset, ITimelineClipAsset
{
	[Token(Token = "0x4000011")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ScreenFaderBehaviour template;

	[Token(Token = "0x17000003")]
	public ClipCaps clipCaps
	{
		[Token(Token = "0x6000015")]
		[Address(RVA = "0xE3FDF8", Offset = "0xE3FDF8", VA = "0xE3FDF8", Slot = "9")]
		get
		{
			return default(ClipCaps);
		}
	}

	[Token(Token = "0x6000016")]
	[Address(RVA = "0xE3FE00", Offset = "0xE3FE00", VA = "0xE3FE00", Slot = "6")]
	public override Playable CreatePlayable(PlayableGraph graph, GameObject owner)
	{
		return default(Playable);
	}

	[Token(Token = "0x6000017")]
	[Address(RVA = "0xE3FEA0", Offset = "0xE3FEA0", VA = "0xE3FEA0")]
	public ScreenFaderClip()
	{
	}
}
[Token(Token = "0x200000C")]
public class ScreenFaderMixerBehaviour : PlayableBehaviour
{
	[Token(Token = "0x4000012")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Color m_DefaultColor;

	[Token(Token = "0x4000013")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Image m_TrackBinding;

	[Token(Token = "0x4000014")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool m_FirstFrameHappened;

	[Token(Token = "0x6000018")]
	[Address(RVA = "0xE3FF10", Offset = "0xE3FF10", VA = "0xE3FF10", Slot = "20")]
	public override void ProcessFrame(Playable playable, FrameData info, object playerData)
	{
	}

	[Token(Token = "0x6000019")]
	[Address(RVA = "0xE40234", Offset = "0xE40234", VA = "0xE40234", Slot = "16")]
	public override void OnPlayableDestroy(Playable playable)
	{
	}

	[Token(Token = "0x600001A")]
	[Address(RVA = "0xE402DC", Offset = "0xE402DC", VA = "0xE402DC")]
	public ScreenFaderMixerBehaviour()
	{
	}
}
[Token(Token = "0x200000D")]
[AttributeAttribute(Name = "TrackColorAttribute", RVA = "0x9E48A8", Offset = "0x9E48A8")]
[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0x9E48A8", Offset = "0x9E48A8")]
[AttributeAttribute(Name = "TrackBindingTypeAttribute", RVA = "0x9E48A8", Offset = "0x9E48A8")]
public class ScreenFaderTrack : TrackAsset
{
	[Token(Token = "0x600001B")]
	[Address(RVA = "0xE402E4", Offset = "0xE402E4", VA = "0xE402E4", Slot = "24")]
	public override Playable CreateTrackMixer(PlayableGraph graph, GameObject go, int inputCount)
	{
		return default(Playable);
	}

	[Token(Token = "0x600001C")]
	[Address(RVA = "0xE4037C", Offset = "0xE4037C", VA = "0xE4037C", Slot = "29")]
	public override void GatherProperties(PlayableDirector director, IPropertyCollector driver)
	{
	}

	[Token(Token = "0x600001D")]
	[Address(RVA = "0xE40384", Offset = "0xE40384", VA = "0xE40384")]
	public ScreenFaderTrack()
	{
	}
}
[Serializable]
[Token(Token = "0x200000E")]
public class TextSwitcherBehaviour : PlayableBehaviour
{
	[Token(Token = "0x4000015")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Color color;

	[Token(Token = "0x4000016")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int fontSize;

	[Token(Token = "0x4000017")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string text;

	[Token(Token = "0x600001E")]
	[Address(RVA = "0xE46ADC", Offset = "0xE46ADC", VA = "0xE46ADC")]
	public TextSwitcherBehaviour()
	{
	}
}
[Serializable]
[Token(Token = "0x200000F")]
public class TextSwitcherClip : PlayableAsset, ITimelineClipAsset
{
	[Token(Token = "0x4000018")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextSwitcherBehaviour template;

	[Token(Token = "0x17000004")]
	public ClipCaps clipCaps
	{
		[Token(Token = "0x600001F")]
		[Address(RVA = "0xE46B18", Offset = "0xE46B18", VA = "0xE46B18", Slot = "9")]
		get
		{
			return default(ClipCaps);
		}
	}

	[Token(Token = "0x6000020")]
	[Address(RVA = "0xE46B20", Offset = "0xE46B20", VA = "0xE46B20", Slot = "6")]
	public override Playable CreatePlayable(PlayableGraph graph, GameObject owner)
	{
		return default(Playable);
	}

	[Token(Token = "0x6000021")]
	[Address(RVA = "0xE46BC0", Offset = "0xE46BC0", VA = "0xE46BC0")]
	public TextSwitcherClip()
	{
	}
}
[Token(Token = "0x2000010")]
public class TextSwitcherMixerBehaviour : PlayableBehaviour
{
	[Token(Token = "0x4000019")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Color m_DefaultColor;

	[Token(Token = "0x400001A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int m_DefaultFontSize;

	[Token(Token = "0x400001B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string m_DefaultText;

	[Token(Token = "0x400001C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Text m_TrackBinding;

	[Token(Token = "0x400001D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool m_FirstFrameHappened;

	[Token(Token = "0x6000022")]
	[Address(RVA = "0xE46C30", Offset = "0xE46C30", VA = "0xE46C30", Slot = "20")]
	public override void ProcessFrame(Playable playable, FrameData info, object playerData)
	{
	}

	[Token(Token = "0x6000023")]
	[Address(RVA = "0xE4709C", Offset = "0xE4709C", VA = "0xE4709C", Slot = "16")]
	public override void OnPlayableDestroy(Playable playable)
	{
	}

	[Token(Token = "0x6000024")]
	[Address(RVA = "0xE47174", Offset = "0xE47174", VA = "0xE47174")]
	public TextSwitcherMixerBehaviour()
	{
	}
}
[Token(Token = "0x2000011")]
[AttributeAttribute(Name = "TrackColorAttribute", RVA = "0x9E4958", Offset = "0x9E4958")]
[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0x9E4958", Offset = "0x9E4958")]
[AttributeAttribute(Name = "TrackBindingTypeAttribute", RVA = "0x9E4958", Offset = "0x9E4958")]
public class TextSwitcherTrack : TrackAsset
{
	[Token(Token = "0x6000025")]
	[Address(RVA = "0xE4717C", Offset = "0xE4717C", VA = "0xE4717C", Slot = "24")]
	public override Playable CreateTrackMixer(PlayableGraph graph, GameObject go, int inputCount)
	{
		return default(Playable);
	}

	[Token(Token = "0x6000026")]
	[Address(RVA = "0xE47214", Offset = "0xE47214", VA = "0xE47214", Slot = "29")]
	public override void GatherProperties(PlayableDirector director, IPropertyCollector driver)
	{
	}

	[Token(Token = "0x6000027")]
	[Address(RVA = "0xE4721C", Offset = "0xE4721C", VA = "0xE4721C")]
	public TextSwitcherTrack()
	{
	}
}
[Serializable]
[Token(Token = "0x2000012")]
public class TimeDilationBehaviour : PlayableBehaviour
{
	[Token(Token = "0x400001E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float timeScale;

	[Token(Token = "0x6000028")]
	[Address(RVA = "0xE47284", Offset = "0xE47284", VA = "0xE47284")]
	public TimeDilationBehaviour()
	{
	}
}
[Serializable]
[Token(Token = "0x2000013")]
public class TimeDilationClip : PlayableAsset, ITimelineClipAsset
{
	[Token(Token = "0x400001F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TimeDilationBehaviour template;

	[Token(Token = "0x17000005")]
	public ClipCaps clipCaps
	{
		[Token(Token = "0x6000029")]
		[Address(RVA = "0xE47294", Offset = "0xE47294", VA = "0xE47294", Slot = "9")]
		get
		{
			return default(ClipCaps);
		}
	}

	[Token(Token = "0x600002A")]
	[Address(RVA = "0xE4729C", Offset = "0xE4729C", VA = "0xE4729C", Slot = "6")]
	public override Playable CreatePlayable(PlayableGraph graph, GameObject owner)
	{
		return default(Playable);
	}

	[Token(Token = "0x600002B")]
	[Address(RVA = "0xE4733C", Offset = "0xE4733C", VA = "0xE4733C")]
	public TimeDilationClip()
	{
	}
}
[Token(Token = "0x2000014")]
public class TimeDilationMixerBehaviour : PlayableBehaviour
{
	[Token(Token = "0x4000020")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private readonly float defaultTimeScale;

	[Token(Token = "0x600002C")]
	[Address(RVA = "0xE473B8", Offset = "0xE473B8", VA = "0xE473B8", Slot = "20")]
	public override void ProcessFrame(Playable playable, FrameData info, object playerData)
	{
	}

	[Token(Token = "0x600002D")]
	[Address(RVA = "0xE47584", Offset = "0xE47584", VA = "0xE47584", Slot = "18")]
	public override void OnBehaviourPause(Playable playable, FrameData info)
	{
	}

	[Token(Token = "0x600002E")]
	[Address(RVA = "0xE47590", Offset = "0xE47590", VA = "0xE47590", Slot = "14")]
	public override void OnGraphStop(Playable playable)
	{
	}

	[Token(Token = "0x600002F")]
	[Address(RVA = "0xE4759C", Offset = "0xE4759C", VA = "0xE4759C", Slot = "16")]
	public override void OnPlayableDestroy(Playable playable)
	{
	}

	[Token(Token = "0x6000030")]
	[Address(RVA = "0xE475A8", Offset = "0xE475A8", VA = "0xE475A8")]
	public TimeDilationMixerBehaviour()
	{
	}
}
[Token(Token = "0x2000015")]
[AttributeAttribute(Name = "TrackColorAttribute", RVA = "0x9E4A0C", Offset = "0x9E4A0C")]
[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0x9E4A0C", Offset = "0x9E4A0C")]
public class TimeDilationTrack : TrackAsset
{
	[Token(Token = "0x6000031")]
	[Address(RVA = "0xE475B8", Offset = "0xE475B8", VA = "0xE475B8", Slot = "24")]
	public override Playable CreateTrackMixer(PlayableGraph graph, GameObject go, int inputCount)
	{
		return default(Playable);
	}

	[Token(Token = "0x6000032")]
	[Address(RVA = "0xE47650", Offset = "0xE47650", VA = "0xE47650")]
	public TimeDilationTrack()
	{
	}
}
[Serializable]
[Token(Token = "0x2000016")]
public class TransformTweenBehaviour : PlayableBehaviour
{
	[Token(Token = "0x200033A")]
	public enum TweenType
	{
		[Token(Token = "0x400172D")]
		Linear,
		[Token(Token = "0x400172E")]
		Deceleration,
		[Token(Token = "0x400172F")]
		Harmonic,
		[Token(Token = "0x4001730")]
		Custom
	}

	[Token(Token = "0x4000021")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Transform startLocation;

	[Token(Token = "0x4000022")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform endLocation;

	[Token(Token = "0x4000023")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool tweenPosition;

	[Token(Token = "0x4000024")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool tweenRotation;

	[Token(Token = "0x4000025")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public TweenType tweenType;

	[Token(Token = "0x4000026")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AnimationCurve customCurve;

	[Token(Token = "0x4000027")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector3 startingPosition;

	[Token(Token = "0x4000028")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Quaternion startingRotation;

	[Token(Token = "0x4000029")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private AnimationCurve m_LinearCurve;

	[Token(Token = "0x400002A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private AnimationCurve m_DecelerationCurve;

	[Token(Token = "0x400002B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private AnimationCurve m_HarmonicCurve;

	[Token(Token = "0x400002C")]
	private const float k_RightAngleInRads = (float)Math.PI / 2f;

	[Token(Token = "0x6000033")]
	[Address(RVA = "0xE476B8", Offset = "0xE476B8", VA = "0xE476B8", Slot = "19")]
	public override void PrepareFrame(Playable playable, FrameData info)
	{
	}

	[Token(Token = "0x6000034")]
	[Address(RVA = "0xE47760", Offset = "0xE47760", VA = "0xE47760")]
	public float EvaluateCurrentCurve(float time)
	{
		return default(float);
	}

	[Token(Token = "0x6000035")]
	[Address(RVA = "0xE47858", Offset = "0xE47858", VA = "0xE47858")]
	private bool IsCustomCurveNormalised()
	{
		return default(bool);
	}

	[Token(Token = "0x6000036")]
	[Address(RVA = "0xE47A80", Offset = "0xE47A80", VA = "0xE47A80")]
	public TransformTweenBehaviour()
	{
	}
}
[Serializable]
[Token(Token = "0x2000017")]
public class TransformTweenClip : PlayableAsset, ITimelineClipAsset
{
	[Token(Token = "0x400002D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TransformTweenBehaviour template;

	[Token(Token = "0x400002E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ExposedReference<Transform> startLocation;

	[Token(Token = "0x400002F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ExposedReference<Transform> endLocation;

	[Token(Token = "0x17000006")]
	public ClipCaps clipCaps
	{
		[Token(Token = "0x6000037")]
		[Address(RVA = "0xE47C94", Offset = "0xE47C94", VA = "0xE47C94", Slot = "9")]
		get
		{
			return default(ClipCaps);
		}
	}

	[Token(Token = "0x6000038")]
	[Address(RVA = "0xE47C9C", Offset = "0xE47C9C", VA = "0xE47C9C", Slot = "6")]
	public override Playable CreatePlayable(PlayableGraph graph, GameObject owner)
	{
		return default(Playable);
	}

	[Token(Token = "0x6000039")]
	[Address(RVA = "0xE47DE4", Offset = "0xE47DE4", VA = "0xE47DE4")]
	public TransformTweenClip()
	{
	}
}
[Token(Token = "0x2000018")]
public class TransformTweenMixerBehaviour : PlayableBehaviour
{
	[Token(Token = "0x4000030")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private bool m_FirstFrameHappened;

	[Token(Token = "0x600003A")]
	[Address(RVA = "0xE47E54", Offset = "0xE47E54", VA = "0xE47E54", Slot = "20")]
	public override void ProcessFrame(Playable playable, FrameData info, object playerData)
	{
	}

	[Token(Token = "0x600003B")]
	[Address(RVA = "0xE4857C", Offset = "0xE4857C", VA = "0xE4857C", Slot = "16")]
	public override void OnPlayableDestroy(Playable playable)
	{
	}

	[Token(Token = "0x600003C")]
	[Address(RVA = "0xE48568", Offset = "0xE48568", VA = "0xE48568")]
	private static Quaternion AddQuaternions(Quaternion first, Quaternion second)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x600003D")]
	[Address(RVA = "0xE48554", Offset = "0xE48554", VA = "0xE48554")]
	private static Quaternion ScaleQuaternion(Quaternion rotation, float multiplier)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x600003E")]
	[Address(RVA = "0xE48584", Offset = "0xE48584", VA = "0xE48584")]
	private static float QuaternionMagnitude(Quaternion rotation)
	{
		return default(float);
	}

	[Token(Token = "0x600003F")]
	[Address(RVA = "0xE48464", Offset = "0xE48464", VA = "0xE48464")]
	private static Quaternion NormalizeQuaternion(Quaternion rotation)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000040")]
	[Address(RVA = "0xE48670", Offset = "0xE48670", VA = "0xE48670")]
	public TransformTweenMixerBehaviour()
	{
	}
}
[Token(Token = "0x2000019")]
[AttributeAttribute(Name = "TrackColorAttribute", RVA = "0x9E4A98", Offset = "0x9E4A98")]
[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0x9E4A98", Offset = "0x9E4A98")]
[AttributeAttribute(Name = "TrackBindingTypeAttribute", RVA = "0x9E4A98", Offset = "0x9E4A98")]
public class TransformTweenTrack : TrackAsset
{
	[Token(Token = "0x6000041")]
	[Address(RVA = "0xE48678", Offset = "0xE48678", VA = "0xE48678", Slot = "24")]
	public override Playable CreateTrackMixer(PlayableGraph graph, GameObject go, int inputCount)
	{
		return default(Playable);
	}

	[Token(Token = "0x6000042")]
	[Address(RVA = "0xE48710", Offset = "0xE48710", VA = "0xE48710", Slot = "29")]
	public override void GatherProperties(PlayableDirector director, IPropertyCollector driver)
	{
	}

	[Token(Token = "0x6000043")]
	[Address(RVA = "0xE48718", Offset = "0xE48718", VA = "0xE48718")]
	public TransformTweenTrack()
	{
	}
}
[Token(Token = "0x200001A")]
public class ChangeParameter : MonoBehaviour
{
	[Token(Token = "0x4000031")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Renderer rend;

	[Token(Token = "0x4000032")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float tweak;

	[Token(Token = "0x6000044")]
	[Address(RVA = "0xE29734", Offset = "0xE29734", VA = "0xE29734")]
	private void Start()
	{
	}

	[Token(Token = "0x6000045")]
	[Address(RVA = "0xE29794", Offset = "0xE29794", VA = "0xE29794")]
	private void Update()
	{
	}

	[Token(Token = "0x6000046")]
	[Address(RVA = "0xE29800", Offset = "0xE29800", VA = "0xE29800")]
	public ChangeParameter()
	{
	}
}
[Token(Token = "0x200001B")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x9E4B4C", Offset = "0x9E4B4C")]
public class CFX_AutoStopLoopedEffect : MonoBehaviour
{
	[Token(Token = "0x4000033")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float effectDuration;

	[Token(Token = "0x4000034")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float d;

	[Token(Token = "0x6000047")]
	[Address(RVA = "0xE27348", Offset = "0xE27348", VA = "0xE27348")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000048")]
	[Address(RVA = "0xE27354", Offset = "0xE27354", VA = "0xE27354")]
	private void Update()
	{
	}

	[Token(Token = "0x6000049")]
	[Address(RVA = "0xE27464", Offset = "0xE27464", VA = "0xE27464")]
	public CFX_AutoStopLoopedEffect()
	{
	}
}
[Token(Token = "0x200001C")]
public class CFX_Demo_New : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200033B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E7AE0", Offset = "0x9E7AE0")]
	private sealed class <>c
	{
		[Token(Token = "0x4001731")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001732")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Comparison<GameObject> <>9__16_0;

		[Token(Token = "0x6001771")]
		[Address(RVA = "0xE282C0", Offset = "0xE282C0", VA = "0xE282C0")]
		public <>c()
		{
		}

		[Token(Token = "0x6001772")]
		[Address(RVA = "0xE282C8", Offset = "0xE282C8", VA = "0xE282C8")]
		internal int <Awake>b__16_0(GameObject o1, GameObject o2)
		{
			return default(int);
		}
	}

	[Token(Token = "0x200033C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E7AF0", Offset = "0x9E7AF0")]
	private sealed class <CheckForDeletedParticles>d__25 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001733")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001734")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001735")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CFX_Demo_New <>4__this;

		[Token(Token = "0x170001BA")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001776")]
			[Address(RVA = "0xE28488", Offset = "0xE28488", VA = "0xE28488", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001BB")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001778")]
			[Address(RVA = "0xE284F0", Offset = "0xE284F0", VA = "0xE284F0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001773")]
		[Address(RVA = "0xE281B0", Offset = "0xE281B0", VA = "0xE281B0")]
		[DebuggerHidden]
		public <CheckForDeletedParticles>d__25(int <>1__state)
		{
		}

		[Token(Token = "0x6001774")]
		[Address(RVA = "0xE2831C", Offset = "0xE2831C", VA = "0xE2831C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001775")]
		[Address(RVA = "0xE28320", Offset = "0xE28320", VA = "0xE28320", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001777")]
		[Address(RVA = "0xE28490", Offset = "0xE28490", VA = "0xE28490", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000035")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Renderer groundRenderer;

	[Token(Token = "0x4000036")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Collider groundCollider;

	[Token(Token = "0x4000037")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x9E8658", Offset = "0x9E8658")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x9E8658", Offset = "0x9E8658")]
	public Image slowMoBtn;

	[Token(Token = "0x4000038")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text slowMoLabel;

	[Token(Token = "0x4000039")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Image camRotBtn;

	[Token(Token = "0x400003A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Text camRotLabel;

	[Token(Token = "0x400003B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Image groundBtn;

	[Token(Token = "0x400003C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Text groundLabel;

	[Token(Token = "0x400003D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x9E8690", Offset = "0x9E8690")]
	public Text EffectLabel;

	[Token(Token = "0x400003E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Text EffectIndexLabel;

	[Token(Token = "0x400003F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private GameObject[] ParticleExamples;

	[Token(Token = "0x4000040")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private int exampleIndex;

	[Token(Token = "0x4000041")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private bool slowMo;

	[Token(Token = "0x4000042")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Vector3 defaultCamPosition;

	[Token(Token = "0x4000043")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private Quaternion defaultCamRotation;

	[Token(Token = "0x4000044")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private List<GameObject> onScreenParticles;

	[Token(Token = "0x600004A")]
	[Address(RVA = "0xE27474", Offset = "0xE27474", VA = "0xE27474")]
	private void Awake()
	{
	}

	[Token(Token = "0x600004B")]
	[Address(RVA = "0xE277D8", Offset = "0xE277D8", VA = "0xE277D8")]
	private void Update()
	{
	}

	[Token(Token = "0x600004C")]
	[Address(RVA = "0xE27E78", Offset = "0xE27E78", VA = "0xE27E78")]
	public void OnToggleGround()
	{
	}

	[Token(Token = "0x600004D")]
	[Address(RVA = "0xE27F58", Offset = "0xE27F58", VA = "0xE27F58")]
	public void OnToggleCamera()
	{
	}

	[Token(Token = "0x600004E")]
	[Address(RVA = "0xE28060", Offset = "0xE28060", VA = "0xE28060")]
	public void OnToggleSlowMo()
	{
	}

	[Token(Token = "0x600004F")]
	[Address(RVA = "0xE2812C", Offset = "0xE2812C", VA = "0xE2812C")]
	public void OnPreviousEffect()
	{
	}

	[Token(Token = "0x6000050")]
	[Address(RVA = "0xE28130", Offset = "0xE28130", VA = "0xE28130")]
	public void OnNextEffect()
	{
	}

	[Token(Token = "0x6000051")]
	[Address(RVA = "0xE276A8", Offset = "0xE276A8", VA = "0xE276A8")]
	private void UpdateUI()
	{
	}

	[Token(Token = "0x6000052")]
	[Address(RVA = "0xE27CA4", Offset = "0xE27CA4", VA = "0xE27CA4")]
	private GameObject spawnParticle()
	{
		return null;
	}

	[Token(Token = "0x6000053")]
	[Address(RVA = "0xE28134", Offset = "0xE28134", VA = "0xE28134")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9EE260", Offset = "0x9EE260")]
	private IEnumerator CheckForDeletedParticles()
	{
		return null;
	}

	[Token(Token = "0x6000054")]
	[Address(RVA = "0xE27AF0", Offset = "0xE27AF0", VA = "0xE27AF0")]
	private void prevParticle()
	{
	}

	[Token(Token = "0x6000055")]
	[Address(RVA = "0xE27B28", Offset = "0xE27B28", VA = "0xE27B28")]
	private void nextParticle()
	{
	}

	[Token(Token = "0x6000056")]
	[Address(RVA = "0xE27B5C", Offset = "0xE27B5C", VA = "0xE27B5C")]
	private void destroyParticles()
	{
	}

	[Token(Token = "0x6000057")]
	[Address(RVA = "0xE281DC", Offset = "0xE281DC", VA = "0xE281DC")]
	public CFX_Demo_New()
	{
	}
}
[Token(Token = "0x200001D")]
public class CFX_Demo_RandomDir : MonoBehaviour
{
	[Token(Token = "0x4000045")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 min;

	[Token(Token = "0x4000046")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector3 max;

	[Token(Token = "0x6000058")]
	[Address(RVA = "0xE284F8", Offset = "0xE284F8", VA = "0xE284F8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000059")]
	[Address(RVA = "0xE285AC", Offset = "0xE285AC", VA = "0xE285AC")]
	public CFX_Demo_RandomDir()
	{
	}
}
[Token(Token = "0x200001E")]
public class CFX_Demo_RandomDirectionTranslate : MonoBehaviour
{
	[Token(Token = "0x4000047")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float speed;

	[Token(Token = "0x4000048")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector3 baseDir;

	[Token(Token = "0x4000049")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector3 axis;

	[Token(Token = "0x400004A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool gravity;

	[Token(Token = "0x400004B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 dir;

	[Token(Token = "0x600005A")]
	[Address(RVA = "0xE28640", Offset = "0xE28640", VA = "0xE28640")]
	private void Start()
	{
	}

	[Token(Token = "0x600005B")]
	[Address(RVA = "0xE287A4", Offset = "0xE287A4", VA = "0xE287A4")]
	private void Update()
	{
	}

	[Token(Token = "0x600005C")]
	[Address(RVA = "0xE28920", Offset = "0xE28920", VA = "0xE28920")]
	public CFX_Demo_RandomDirectionTranslate()
	{
	}
}
[Token(Token = "0x200001F")]
public class CFX_Demo_RotateCamera : MonoBehaviour
{
	[Token(Token = "0x400004C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool rotating;

	[Token(Token = "0x400004D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float speed;

	[Token(Token = "0x400004E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform rotationCenter;

	[Token(Token = "0x600005D")]
	[Address(RVA = "0xE289B0", Offset = "0xE289B0", VA = "0xE289B0")]
	private void Update()
	{
	}

	[Token(Token = "0x600005E")]
	[Address(RVA = "0xE28AF8", Offset = "0xE28AF8", VA = "0xE28AF8")]
	public CFX_Demo_RotateCamera()
	{
	}
}
[Token(Token = "0x2000020")]
public class CFX_Demo_Translate : MonoBehaviour
{
	[Token(Token = "0x400004F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float speed;

	[Token(Token = "0x4000050")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector3 rotation;

	[Token(Token = "0x4000051")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector3 axis;

	[Token(Token = "0x4000052")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool gravity;

	[Token(Token = "0x4000053")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 dir;

	[Token(Token = "0x6000060")]
	[Address(RVA = "0xE28B5C", Offset = "0xE28B5C", VA = "0xE28B5C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000061")]
	[Address(RVA = "0xE28C38", Offset = "0xE28C38", VA = "0xE28C38")]
	private void Update()
	{
	}

	[Token(Token = "0x6000062")]
	[Address(RVA = "0xE28D20", Offset = "0xE28D20", VA = "0xE28D20")]
	public CFX_Demo_Translate()
	{
	}
}
[Token(Token = "0x2000021")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x9E4BB0", Offset = "0x9E4BB0")]
public class CFX_AutoDestructShuriken : MonoBehaviour
{
	[Token(Token = "0x200033D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E7B00", Offset = "0x9E7B00")]
	private sealed class <CheckIfAlive>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001736")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001737")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001738")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CFX_AutoDestructShuriken <>4__this;

		[Token(Token = "0x4001739")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private ParticleSystem <ps>5__2;

		[Token(Token = "0x170001BC")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600177C")]
			[Address(RVA = "0xE27208", Offset = "0xE27208", VA = "0xE27208", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001BD")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600177E")]
			[Address(RVA = "0xE27270", Offset = "0xE27270", VA = "0xE27270", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001779")]
		[Address(RVA = "0xE2703C", Offset = "0xE2703C", VA = "0xE2703C")]
		[DebuggerHidden]
		public <CheckIfAlive>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x600177A")]
		[Address(RVA = "0xE27070", Offset = "0xE27070", VA = "0xE27070", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600177B")]
		[Address(RVA = "0xE27074", Offset = "0xE27074", VA = "0xE27074", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600177D")]
		[Address(RVA = "0xE27210", Offset = "0xE27210", VA = "0xE27210", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000054")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool OnlyDeactivate;

	[Token(Token = "0x6000063")]
	[Address(RVA = "0xE26F6C", Offset = "0xE26F6C", VA = "0xE26F6C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000064")]
	[Address(RVA = "0xE26FC0", Offset = "0xE26FC0", VA = "0xE26FC0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9EE2C4", Offset = "0x9EE2C4")]
	private IEnumerator CheckIfAlive()
	{
		return null;
	}

	[Token(Token = "0x6000065")]
	[Address(RVA = "0xE27068", Offset = "0xE27068", VA = "0xE27068")]
	public CFX_AutoDestructShuriken()
	{
	}
}
[Token(Token = "0x2000022")]
public class CFX_AutoRotate : MonoBehaviour
{
	[Token(Token = "0x4000055")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 rotation;

	[Token(Token = "0x4000056")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Space space;

	[Token(Token = "0x6000066")]
	[Address(RVA = "0xE27278", Offset = "0xE27278", VA = "0xE27278")]
	private void Update()
	{
	}

	[Token(Token = "0x6000067")]
	[Address(RVA = "0xE27338", Offset = "0xE27338", VA = "0xE27338")]
	public CFX_AutoRotate()
	{
	}
}
[Token(Token = "0x2000023")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x9E4C14", Offset = "0x9E4C14")]
public class CFX_LightFlicker : MonoBehaviour
{
	[Token(Token = "0x4000057")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool loop;

	[Token(Token = "0x4000058")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float smoothFactor;

	[Token(Token = "0x4000059")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float addIntensity;

	[Token(Token = "0x400005A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float minIntensity;

	[Token(Token = "0x400005B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float maxIntensity;

	[Token(Token = "0x400005C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float baseIntensity;

	[Token(Token = "0x6000068")]
	[Address(RVA = "0xE28DB0", Offset = "0xE28DB0", VA = "0xE28DB0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000069")]
	[Address(RVA = "0xE28E18", Offset = "0xE28E18", VA = "0xE28E18")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600006A")]
	[Address(RVA = "0xE28E2C", Offset = "0xE28E2C", VA = "0xE28E2C")]
	private void Update()
	{
	}

	[Token(Token = "0x600006B")]
	[Address(RVA = "0xE28EFC", Offset = "0xE28EFC", VA = "0xE28EFC")]
	public CFX_LightFlicker()
	{
	}
}
[Token(Token = "0x2000024")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x9E4C78", Offset = "0x9E4C78")]
public class CFX_LightIntensityFade : MonoBehaviour
{
	[Token(Token = "0x400005D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float duration;

	[Token(Token = "0x400005E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float delay;

	[Token(Token = "0x400005F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float finalIntensity;

	[Token(Token = "0x4000060")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float baseIntensity;

	[Token(Token = "0x4000061")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool autodestruct;

	[Token(Token = "0x4000062")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float p_lifetime;

	[Token(Token = "0x4000063")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float p_delay;

	[Token(Token = "0x600006C")]
	[Address(RVA = "0xE28F0C", Offset = "0xE28F0C", VA = "0xE28F0C")]
	private void Start()
	{
	}

	[Token(Token = "0x600006D")]
	[Address(RVA = "0xE28F74", Offset = "0xE28F74", VA = "0xE28F74")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600006E")]
	[Address(RVA = "0xE28FF8", Offset = "0xE28FF8", VA = "0xE28FF8")]
	private void Update()
	{
	}

	[Token(Token = "0x600006F")]
	[Address(RVA = "0xE29198", Offset = "0xE29198", VA = "0xE29198")]
	public CFX_LightIntensityFade()
	{
	}
}
[Token(Token = "0x2000025")]
public class ParticleSpawner : MonoBehaviour
{
	[Token(Token = "0x4000064")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] particles;

	[Token(Token = "0x4000065")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int maxButtons;

	[Token(Token = "0x4000066")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool showInfo;

	[Token(Token = "0x4000067")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string removeTextFromButton;

	[Token(Token = "0x4000068")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int page;

	[Token(Token = "0x4000069")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int pages;

	[Token(Token = "0x400006A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private string currentPSInfo;

	[Token(Token = "0x400006B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GameObject currentPS;

	[Token(Token = "0x6000070")]
	[Address(RVA = "0xF5139C", Offset = "0xF5139C", VA = "0xF5139C")]
	public void Start()
	{
	}

	[Token(Token = "0x6000071")]
	[Address(RVA = "0xF51448", Offset = "0xF51448", VA = "0xF51448")]
	public void OnGUI()
	{
	}

	[Token(Token = "0x6000072")]
	[Address(RVA = "0xF51B3C", Offset = "0xF51B3C", VA = "0xF51B3C")]
	public void PlayPS(ParticleSystem _ps, int _nr)
	{
	}

	[Token(Token = "0x6000073")]
	[Address(RVA = "0xF51B74", Offset = "0xF51B74", VA = "0xF51B74")]
	public void InfoPS(ParticleSystem _ps, int _nr)
	{
	}

	[Token(Token = "0x6000074")]
	[Address(RVA = "0xF520A0", Offset = "0xF520A0", VA = "0xF520A0")]
	public ParticleSpawner()
	{
	}
}
[Token(Token = "0x2000026")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x9E4CDC", Offset = "0x9E4CDC")]
public class SmoothCameraOrbit : MonoBehaviour
{
	[Token(Token = "0x400006C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform target;

	[Token(Token = "0x400006D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3 targetOffset;

	[Token(Token = "0x400006E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float distance;

	[Token(Token = "0x400006F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float maxDistance;

	[Token(Token = "0x4000070")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float minDistance;

	[Token(Token = "0x4000071")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float xSpeed;

	[Token(Token = "0x4000072")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float ySpeed;

	[Token(Token = "0x4000073")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int yMinLimit;

	[Token(Token = "0x4000074")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public int yMaxLimit;

	[Token(Token = "0x4000075")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int zoomRate;

	[Token(Token = "0x4000076")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float panSpeed;

	[Token(Token = "0x4000077")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float zoomDampening;

	[Token(Token = "0x4000078")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float autoRotate;

	[Token(Token = "0x4000079")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float xDeg;

	[Token(Token = "0x400007A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float yDeg;

	[Token(Token = "0x400007B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float currentDistance;

	[Token(Token = "0x400007C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float desiredDistance;

	[Token(Token = "0x400007D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Quaternion currentRotation;

	[Token(Token = "0x400007E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Quaternion desiredRotation;

	[Token(Token = "0x400007F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Quaternion rotation;

	[Token(Token = "0x4000080")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Vector3 position;

	[Token(Token = "0x4000081")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private float idleTimer;

	[Token(Token = "0x4000082")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private float idleSmooth;

	[Token(Token = "0x6000075")]
	[Address(RVA = "0xE40AB4", Offset = "0xE40AB4", VA = "0xE40AB4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000076")]
	[Address(RVA = "0xE40E7C", Offset = "0xE40E7C", VA = "0xE40E7C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000077")]
	[Address(RVA = "0xE40AB8", Offset = "0xE40AB8", VA = "0xE40AB8")]
	public void Init()
	{
	}

	[Token(Token = "0x6000078")]
	[Address(RVA = "0xE40E80", Offset = "0xE40E80", VA = "0xE40E80")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000079")]
	[Address(RVA = "0xE413AC", Offset = "0xE413AC", VA = "0xE413AC")]
	private static float ClampAngle(float angle, float min, float max)
	{
		return default(float);
	}

	[Token(Token = "0x600007A")]
	[Address(RVA = "0xE4145C", Offset = "0xE4145C", VA = "0xE4145C")]
	public SmoothCameraOrbit()
	{
	}
}
[Token(Token = "0x2000027")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x9E4D14", Offset = "0x9E4D14")]
public class cameraRotateAroundTarget : MonoBehaviour
{
	[Token(Token = "0x4000083")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform target;

	[Token(Token = "0x4000084")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float distance;

	[Token(Token = "0x4000085")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float xSpeed;

	[Token(Token = "0x4000086")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float ySpeed;

	[Token(Token = "0x4000087")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int yMinLimit;

	[Token(Token = "0x4000088")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int yMaxLimit;

	[Token(Token = "0x4000089")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int zoomRate;

	[Token(Token = "0x400008A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float yOffset;

	[Token(Token = "0x400008B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float x;

	[Token(Token = "0x400008C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float y;

	[Token(Token = "0x600007B")]
	[Address(RVA = "0x148F844", Offset = "0x148F844", VA = "0x148F844")]
	public void Start()
	{
	}

	[Token(Token = "0x600007C")]
	[Address(RVA = "0x148F910", Offset = "0x148F910", VA = "0x148F910")]
	public void Update()
	{
	}

	[Token(Token = "0x600007D")]
	[Address(RVA = "0x148FC54", Offset = "0x148FC54", VA = "0x148FC54")]
	public static float ClampAngle(float angle, float min, float max)
	{
		return default(float);
	}

	[Token(Token = "0x600007E")]
	[Address(RVA = "0x148FD04", Offset = "0x148FD04", VA = "0x148FD04")]
	public cameraRotateAroundTarget()
	{
	}
}
[Token(Token = "0x2000028")]
public class randomRotate : MonoBehaviour
{
	[Token(Token = "0x400008D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Quaternion rotTarget;

	[Token(Token = "0x400008E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float rotateEverySecond;

	[Token(Token = "0x600007F")]
	[Address(RVA = "0x148FD34", Offset = "0x148FD34", VA = "0x148FD34")]
	public void Start()
	{
	}

	[Token(Token = "0x6000080")]
	[Address(RVA = "0x148FDCC", Offset = "0x148FDCC", VA = "0x148FDCC")]
	public void Update()
	{
	}

	[Token(Token = "0x6000081")]
	[Address(RVA = "0x148FDA0", Offset = "0x148FDA0", VA = "0x148FDA0")]
	public void randomRot()
	{
	}

	[Token(Token = "0x6000082")]
	[Address(RVA = "0x148FEE4", Offset = "0x148FEE4", VA = "0x148FEE4")]
	public randomRotate()
	{
	}
}
[Token(Token = "0x2000029")]
public class MagicProjectileScript : MonoBehaviour
{
	[Token(Token = "0x400008F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject impactParticle;

	[Token(Token = "0x4000090")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject projectileParticle;

	[Token(Token = "0x4000091")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject muzzleParticle;

	[Token(Token = "0x4000092")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject[] trailParticles;

	[Token(Token = "0x4000093")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public Vector3 impactNormal;

	[Token(Token = "0x4000094")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private bool hasCollided;

	[Token(Token = "0x6000083")]
	[Address(RVA = "0xF414F8", Offset = "0xF414F8", VA = "0xF414F8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000084")]
	[Address(RVA = "0xF41738", Offset = "0xF41738", VA = "0xF41738")]
	private void OnCollisionEnter(Collision hit)
	{
	}

	[Token(Token = "0x6000085")]
	[Address(RVA = "0xF41B8C", Offset = "0xF41B8C", VA = "0xF41B8C")]
	public MagicProjectileScript()
	{
	}
}
[Token(Token = "0x200002A")]
public class MantisLODEditorProfessional : MonoBehaviour
{
	[Token(Token = "0x6000086")]
	[Address(RVA = "0xF4B744", Offset = "0xF4B744", VA = "0xF4B744")]
	public MantisLODEditorProfessional()
	{
	}
}
[Token(Token = "0x200002B")]
public class MoveMe : MonoBehaviour
{
	[Token(Token = "0x4000095")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool forwarding;

	[Token(Token = "0x4000096")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float delta;

	[Token(Token = "0x6000087")]
	[Address(RVA = "0xF4C8D0", Offset = "0xF4C8D0", VA = "0xF4C8D0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000088")]
	[Address(RVA = "0xF4C8D4", Offset = "0xF4C8D4", VA = "0xF4C8D4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000089")]
	[Address(RVA = "0xF4C980", Offset = "0xF4C980", VA = "0xF4C980")]
	public MoveMe()
	{
	}
}
[Token(Token = "0x200002C")]
public class RotateMe : MonoBehaviour
{
	[Token(Token = "0x4000097")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3 center_to_ratate;

	[Token(Token = "0x600008A")]
	[Address(RVA = "0xE3F288", Offset = "0xE3F288", VA = "0xE3F288")]
	private void Start()
	{
	}

	[Token(Token = "0x600008B")]
	[Address(RVA = "0xE3F4E4", Offset = "0xE3F4E4", VA = "0xE3F4E4")]
	private void Update()
	{
	}

	[Token(Token = "0x600008C")]
	[Address(RVA = "0xE3F640", Offset = "0xE3F640", VA = "0xE3F640")]
	public RotateMe()
	{
	}
}
[Token(Token = "0x200002D")]
public class Car : MonoBehaviour
{
	[Token(Token = "0x4000098")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float turnspeed;

	[Token(Token = "0x4000099")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float destination;

	[Token(Token = "0x400009A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float direction;

	[Token(Token = "0x600008D")]
	[Address(RVA = "0xE292FC", Offset = "0xE292FC", VA = "0xE292FC")]
	private void Update()
	{
	}

	[Token(Token = "0x600008E")]
	[Address(RVA = "0xE29694", Offset = "0xE29694", VA = "0xE29694")]
	private void FindDestination(Vector3 tPos)
	{
	}

	[Token(Token = "0x600008F")]
	[Address(RVA = "0xE29710", Offset = "0xE29710", VA = "0xE29710")]
	private float mod(float a)
	{
		return default(float);
	}

	[Token(Token = "0x6000090")]
	[Address(RVA = "0xE29720", Offset = "0xE29720", VA = "0xE29720")]
	public Car()
	{
	}
}
[Token(Token = "0x200002E")]
public class Move : MonoBehaviour
{
	[Token(Token = "0x400009B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float speed;

	[Token(Token = "0x400009C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private Vector3 forward;

	[Token(Token = "0x400009D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<GameObject> Tiles;

	[Token(Token = "0x400009E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float zPos;

	[Token(Token = "0x400009F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int starTiles;

	[Token(Token = "0x40000A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int prevRand;

	[Token(Token = "0x40000A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int num;

	[Token(Token = "0x6000091")]
	[Address(RVA = "0xF4C32C", Offset = "0xF4C32C", VA = "0xF4C32C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000092")]
	[Address(RVA = "0xF4C594", Offset = "0xF4C594", VA = "0xF4C594")]
	private void Update()
	{
	}

	[Token(Token = "0x6000093")]
	[Address(RVA = "0xF4C81C", Offset = "0xF4C81C", VA = "0xF4C81C")]
	public Move()
	{
	}
}
[Token(Token = "0x200002F")]
public class PoolManager : MonoBehaviour
{
	[Token(Token = "0x40000A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E86B0", Offset = "0x9E86B0")]
	private static PoolManager <Instance>k__BackingField;

	[Token(Token = "0x40000A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Dictionary<int, Queue<GameObject>> pool;

	[Token(Token = "0x40000A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Camera cam;

	[Token(Token = "0x17000007")]
	public static PoolManager Instance
	{
		[Token(Token = "0x6000094")]
		[Address(RVA = "0x154911C", Offset = "0x154911C", VA = "0x154911C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EE328", Offset = "0x9EE328")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000095")]
		[Address(RVA = "0x154916C", Offset = "0x154916C", VA = "0x154916C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EE338", Offset = "0x9EE338")]
		set
		{
		}
	}

	[Token(Token = "0x6000096")]
	[Address(RVA = "0x15491C4", Offset = "0x15491C4", VA = "0x15491C4")]
	public void Awake()
	{
	}

	[Token(Token = "0x6000097")]
	[Address(RVA = "0x154921C", Offset = "0x154921C", VA = "0x154921C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000098")]
	[Address(RVA = "0x1549294", Offset = "0x1549294", VA = "0x1549294")]
	public void CreatePool(GameObject gameObj, int numberOfObj)
	{
	}

	[Token(Token = "0x6000099")]
	[Address(RVA = "0x1549414", Offset = "0x1549414", VA = "0x1549414")]
	public void Reuse(int gameObjKey, Vector3 position, Quaternion orientation)
	{
	}

	[Token(Token = "0x600009A")]
	[Address(RVA = "0x1549558", Offset = "0x1549558", VA = "0x1549558")]
	public void Reuse(int gameObjKey)
	{
	}

	[Token(Token = "0x600009B")]
	[Address(RVA = "0x1549614", Offset = "0x1549614", VA = "0x1549614")]
	private void Update()
	{
	}

	[Token(Token = "0x600009C")]
	[Address(RVA = "0x15498E4", Offset = "0x15498E4", VA = "0x15498E4")]
	public PoolManager()
	{
	}
}
[Token(Token = "0x2000030")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x9E4D4C", Offset = "0x9E4D4C")]
public class Buoyancy : MonoBehaviour
{
	[Token(Token = "0x40000A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float buoyancy;

	[Token(Token = "0x40000A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float viscosity;

	[Token(Token = "0x40000A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float viscosityAngular;

	[Token(Token = "0x40000A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public LayerMask layer;

	[Token(Token = "0x40000A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public BoxCollider boxCollider;

	[Token(Token = "0x40000AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Rigidbody rigidbody;

	[Token(Token = "0x40000AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static RamSpline[] ramSplines;

	[Token(Token = "0x40000AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static LakePolygon[] lakePolygons;

	[Token(Token = "0x40000AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3[] vertices;

	[Token(Token = "0x40000AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3[] verticesMatrix;

	[Token(Token = "0x40000AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector3 lowestPoint;

	[Token(Token = "0x40000B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private Vector3 center;

	[Token(Token = "0x40000B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public bool debug;

	[Token(Token = "0x600009D")]
	[Address(RVA = "0xE24D48", Offset = "0xE24D48", VA = "0xE24D48")]
	private void Start()
	{
	}

	[Token(Token = "0x600009E")]
	[Address(RVA = "0xE254F0", Offset = "0xE254F0", VA = "0xE254F0")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x600009F")]
	[Address(RVA = "0xE254F4", Offset = "0xE254F4", VA = "0xE254F4")]
	public void WaterPhysics()
	{
	}

	[Token(Token = "0x60000A0")]
	[Address(RVA = "0xE26748", Offset = "0xE26748", VA = "0xE26748")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x60000A1")]
	[Address(RVA = "0xE26EA0", Offset = "0xE26EA0", VA = "0xE26EA0")]
	public Buoyancy()
	{
	}
}
[Token(Token = "0x2000031")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x9E4DB0", Offset = "0x9E4DB0")]
public class LakePolygon : MonoBehaviour
{
	[Token(Token = "0x40000B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int toolbarInt;

	[Token(Token = "0x40000B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public LakePolygonProfile currentProfile;

	[Token(Token = "0x40000B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public LakePolygonProfile oldProfile;

	[Token(Token = "0x40000B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<Vector3> points;

	[Token(Token = "0x40000B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<Vector3> splinePoints;

	[Token(Token = "0x40000B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AnimationCurve terrainCarve;

	[Token(Token = "0x40000B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float distSmooth;

	[Token(Token = "0x40000B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float terrainSmoothMultiplier;

	[Token(Token = "0x40000BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool overrideLakeRender;

	[Token(Token = "0x40000BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float uvScale;

	[Token(Token = "0x40000BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool receiveShadows;

	[Token(Token = "0x40000BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public ShadowCastingMode shadowCastingMode;

	[Token(Token = "0x40000BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public AnimationCurve terrainPaintCarve;

	[Token(Token = "0x40000BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public int currentSplatMap;

	[Token(Token = "0x40000C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float distanceClearFoliage;

	[Token(Token = "0x40000C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float distanceClearFoliageTrees;

	[Token(Token = "0x40000C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public bool mixTwoSplatMaps;

	[Token(Token = "0x40000C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public int secondSplatMap;

	[Token(Token = "0x40000C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public bool addCliffSplatMap;

	[Token(Token = "0x40000C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public int cliffSplatMap;

	[Token(Token = "0x40000C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public float cliffAngle;

	[Token(Token = "0x40000C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public float cliffBlend;

	[Token(Token = "0x40000C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public int cliffSplatMapOutside;

	[Token(Token = "0x40000C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public float cliffAngleOutside;

	[Token(Token = "0x40000CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public float cliffBlendOutside;

	[Token(Token = "0x40000CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public bool noiseCarve;

	[Token(Token = "0x40000CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public float noiseMultiplierInside;

	[Token(Token = "0x40000CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public float noiseMultiplierOutside;

	[Token(Token = "0x40000CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public float noiseSizeX;

	[Token(Token = "0x40000CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public float noiseSizeZ;

	[Token(Token = "0x40000D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	public bool noisePaint;

	[Token(Token = "0x40000D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public float noiseMultiplierInsidePaint;

	[Token(Token = "0x40000D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	public float noiseMultiplierOutsidePaint;

	[Token(Token = "0x40000D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public float noiseSizeXPaint;

	[Token(Token = "0x40000D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	public float noiseSizeZPaint;

	[Token(Token = "0x40000D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public float maximumTriangleSize;

	[Token(Token = "0x40000D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	public float traingleDensity;

	[Token(Token = "0x40000D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public float height;

	[Token(Token = "0x40000D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	public bool lockHeight;

	[Token(Token = "0x40000D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public float yOffset;

	[Token(Token = "0x40000DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	public float trianglesGenerated;

	[Token(Token = "0x40000DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public float vertsGenerated;

	[Token(Token = "0x40000DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public Mesh currentMesh;

	[Token(Token = "0x40000DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public MeshFilter meshfilter;

	[Token(Token = "0x40000DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public bool showVertexColors;

	[Token(Token = "0x40000DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF1")]
	public bool showFlowMap;

	[Token(Token = "0x40000E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF2")]
	public bool overrideFlowMap;

	[Token(Token = "0x40000E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	public float automaticFlowMapScale;

	[Token(Token = "0x40000E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public bool noiseflowMap;

	[Token(Token = "0x40000E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	public float noiseMultiplierflowMap;

	[Token(Token = "0x40000E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public float noiseSizeXflowMap;

	[Token(Token = "0x40000E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	public float noiseSizeZflowMap;

	[Token(Token = "0x40000E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public bool drawOnMesh;

	[Token(Token = "0x40000E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x109")]
	public bool drawOnMeshFlowMap;

	[Token(Token = "0x40000E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	public Color drawColor;

	[Token(Token = "0x40000E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
	public bool drawColorR;

	[Token(Token = "0x40000EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11D")]
	public bool drawColorG;

	[Token(Token = "0x40000EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11E")]
	public bool drawColorB;

	[Token(Token = "0x40000EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11F")]
	public bool drawColorA;

	[Token(Token = "0x40000ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public bool drawOnMultiple;

	[Token(Token = "0x40000EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	public float opacity;

	[Token(Token = "0x40000EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public float drawSize;

	[Token(Token = "0x40000F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public Material oldMaterial;

	[Token(Token = "0x40000F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public Color[] colors;

	[Token(Token = "0x40000F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public List<Vector2> colorsFlowMap;

	[Token(Token = "0x40000F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public float floatSpeed;

	[Token(Token = "0x40000F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
	public float flowSpeed;

	[Token(Token = "0x40000F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public float flowDirection;

	[Token(Token = "0x40000F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
	public float closeDistanceSimulation;

	[Token(Token = "0x40000F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public int angleSimulation;

	[Token(Token = "0x40000F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
	public float checkDistanceSimulation;

	[Token(Token = "0x40000F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public bool removeFirstPointSimulation;

	[Token(Token = "0x40000FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public LakePolygonCarveData lakePolygonCarveData;

	[Token(Token = "0x40000FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public LakePolygonCarveData lakePolygonPaintData;

	[Token(Token = "0x40000FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public LakePolygonCarveData lakePolygonClearData;

	[Token(Token = "0x40000FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public List<GameObject> meshGOs;

	[Token(Token = "0x60000A2")]
	[Address(RVA = "0xD3E9C4", Offset = "0xD3E9C4", VA = "0xD3E9C4")]
	public void AddPoint(Vector3 position)
	{
	}

	[Token(Token = "0x60000A3")]
	[Address(RVA = "0xD3EA44", Offset = "0xD3EA44", VA = "0xD3EA44")]
	public void AddPointAfter(int i)
	{
	}

	[Token(Token = "0x60000A4")]
	[Address(RVA = "0xD3ECC4", Offset = "0xD3ECC4", VA = "0xD3ECC4")]
	public void ChangePointPosition(int i, Vector3 position)
	{
	}

	[Token(Token = "0x60000A5")]
	[Address(RVA = "0xD3ED54", Offset = "0xD3ED54", VA = "0xD3ED54")]
	public void RemovePoint(int i)
	{
	}

	[Token(Token = "0x60000A6")]
	[Address(RVA = "0xD3EDD8", Offset = "0xD3EDD8", VA = "0xD3EDD8")]
	public void RemovePoints(int fromID = -1)
	{
	}

	[Token(Token = "0x60000A7")]
	[Address(RVA = "0xD3EE54", Offset = "0xD3EE54", VA = "0xD3EE54")]
	private void CenterPivot()
	{
	}

	[Token(Token = "0x60000A8")]
	[Address(RVA = "0xD3F0C8", Offset = "0xD3F0C8", VA = "0xD3F0C8")]
	public void GeneratePolygon()
	{
	}

	[Token(Token = "0x60000A9")]
	[Address(RVA = "0xD405A4", Offset = "0xD405A4", VA = "0xD405A4")]
	public static LakePolygon CreatePolygon(Material material, [Optional] List<Vector3> positions)
	{
		return null;
	}

	[Token(Token = "0x60000AA")]
	[Address(RVA = "0xD402A8", Offset = "0xD402A8", VA = "0xD402A8")]
	private void CalculateCatmullRomSpline(int pos)
	{
	}

	[Token(Token = "0x60000AB")]
	[Address(RVA = "0xD40734", Offset = "0xD40734", VA = "0xD40734")]
	public int ClampListPos(int pos)
	{
		return default(int);
	}

	[Token(Token = "0x60000AC")]
	[Address(RVA = "0xD407C0", Offset = "0xD407C0", VA = "0xD407C0")]
	private Vector3 GetCatmullRomPosition(float t, Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60000AD")]
	[Address(RVA = "0xD404D8", Offset = "0xD404D8", VA = "0xD404D8")]
	public float DistancePointLine(Vector2 point, Vector2 lineStart, Vector2 lineEnd, out Vector2 pointProject)
	{
		return default(float);
	}

	[Token(Token = "0x60000AE")]
	[Address(RVA = "0xD40B50", Offset = "0xD40B50", VA = "0xD40B50")]
	public Vector2 ProjectPointLine(Vector2 point, Vector2 lineStart, Vector2 lineEnd)
	{
		return default(Vector2);
	}

	[Token(Token = "0x60000AF")]
	[Address(RVA = "0xD40D18", Offset = "0xD40D18", VA = "0xD40D18")]
	public void TerrainCarve(bool terrainShow = false)
	{
	}

	[Token(Token = "0x60000B0")]
	[Address(RVA = "0xD42B50", Offset = "0xD42B50", VA = "0xD42B50")]
	public void TerrainPaint(bool terrainShow = false)
	{
	}

	[Token(Token = "0x60000B1")]
	[Address(RVA = "0xD44834", Offset = "0xD44834", VA = "0xD44834")]
	public void TerrainClearTrees(bool details = true)
	{
	}

	[Token(Token = "0x60000B2")]
	[Address(RVA = "0xD45B98", Offset = "0xD45B98", VA = "0xD45B98")]
	public void Simulation()
	{
	}

	[Token(Token = "0x60000B3")]
	[Address(RVA = "0xD46734", Offset = "0xD46734", VA = "0xD46734")]
	public static bool AreLinesIntersecting(Vector3 l1_p1, Vector3 l1_p2, Vector3 l2_p1, Vector3 l2_p2, bool shouldIncludeEndPoints = true)
	{
		return default(bool);
	}

	[Token(Token = "0x60000B4")]
	[Address(RVA = "0xD42A50", Offset = "0xD42A50", VA = "0xD42A50")]
	public static float DistancePointLine(Vector3 point, Vector3 lineStart, Vector3 lineEnd)
	{
		return default(float);
	}

	[Token(Token = "0x60000B5")]
	[Address(RVA = "0xD46808", Offset = "0xD46808", VA = "0xD46808")]
	public static Vector3 ProjectPointLine(Vector3 point, Vector3 lineStart, Vector3 lineEnd)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60000B6")]
	[Address(RVA = "0xD46A18", Offset = "0xD46A18", VA = "0xD46A18")]
	public LakePolygon()
	{
	}
}
[Token(Token = "0x2000032")]
public class LakePolygonCarveData
{
	[Token(Token = "0x40000FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float distSmooth;

	[Token(Token = "0x40000FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float minX;

	[Token(Token = "0x4000100")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float maxX;

	[Token(Token = "0x4000101")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float minZ;

	[Token(Token = "0x4000102")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float maxZ;

	[Token(Token = "0x4000103")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector4[,] distances;

	[Token(Token = "0x60000B7")]
	[Address(RVA = "0xF3C090", Offset = "0xF3C090", VA = "0xF3C090")]
	public LakePolygonCarveData()
	{
	}
}
[Token(Token = "0x2000033")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x9E4E14", Offset = "0x9E4E14")]
public class LakePolygonProfile : ScriptableObject
{
	[Token(Token = "0x4000104")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material lakeMaterial;

	[Token(Token = "0x4000105")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float distSmooth;

	[Token(Token = "0x4000106")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float uvScale;

	[Token(Token = "0x4000107")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float maximumTriangleSize;

	[Token(Token = "0x4000108")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float traingleDensity;

	[Token(Token = "0x4000109")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool receiveShadows;

	[Token(Token = "0x400010A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public ShadowCastingMode shadowCastingMode;

	[Token(Token = "0x400010B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float automaticFlowMapScale;

	[Token(Token = "0x400010C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public bool noiseflowMap;

	[Token(Token = "0x400010D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float noiseMultiplierflowMap;

	[Token(Token = "0x400010E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float noiseSizeXflowMap;

	[Token(Token = "0x400010F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float noiseSizeZflowMap;

	[Token(Token = "0x4000110")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AnimationCurve terrainCarve;

	[Token(Token = "0x4000111")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float terrainSmoothMultiplier;

	[Token(Token = "0x4000112")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public AnimationCurve terrainPaintCarve;

	[Token(Token = "0x4000113")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public bool noiseCarve;

	[Token(Token = "0x4000114")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float noiseMultiplierInside;

	[Token(Token = "0x4000115")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float noiseMultiplierOutside;

	[Token(Token = "0x4000116")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float noiseSizeX;

	[Token(Token = "0x4000117")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float noiseSizeZ;

	[Token(Token = "0x4000118")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public int currentSplatMap;

	[Token(Token = "0x4000119")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public bool noisePaint;

	[Token(Token = "0x400011A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public float noiseMultiplierInsidePaint;

	[Token(Token = "0x400011B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public float noiseMultiplierOutsidePaint;

	[Token(Token = "0x400011C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public float noiseSizeXPaint;

	[Token(Token = "0x400011D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public float noiseSizeZPaint;

	[Token(Token = "0x400011E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public bool mixTwoSplatMaps;

	[Token(Token = "0x400011F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public int secondSplatMap;

	[Token(Token = "0x4000120")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public bool addCliffSplatMap;

	[Token(Token = "0x4000121")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public int cliffSplatMap;

	[Token(Token = "0x4000122")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public float cliffAngle;

	[Token(Token = "0x4000123")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public float cliffBlend;

	[Token(Token = "0x4000124")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	public int cliffSplatMapOutside;

	[Token(Token = "0x4000125")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public float cliffAngleOutside;

	[Token(Token = "0x4000126")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	public float cliffBlendOutside;

	[Token(Token = "0x4000127")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public float distanceClearFoliage;

	[Token(Token = "0x4000128")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	public float distanceClearFoliageTrees;

	[Token(Token = "0x4000129")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public int biomeType;

	[Token(Token = "0x60000B8")]
	[Address(RVA = "0xF3C0A4", Offset = "0xF3C0A4", VA = "0xF3C0A4")]
	public LakePolygonProfile()
	{
	}
}
[Token(Token = "0x2000034")]
public class LakePolygonSwitch : MonoBehaviour
{
	[Token(Token = "0x400012A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LakePolygon Polygon;

	[Token(Token = "0x400012B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public LakePolygonProfile Profile;

	[Token(Token = "0x60000B9")]
	[Address(RVA = "0xF3C350", Offset = "0xF3C350", VA = "0xF3C350")]
	public void Switch()
	{
	}

	[Token(Token = "0x60000BA")]
	[Address(RVA = "0xF3C384", Offset = "0xF3C384", VA = "0xF3C384")]
	public void SetProfile(LakePolygonProfile lakeProfile)
	{
	}

	[Token(Token = "0x60000BB")]
	[Address(RVA = "0xF3C814", Offset = "0xF3C814", VA = "0xF3C814")]
	public LakePolygonSwitch()
	{
	}
}
[Token(Token = "0x2000035")]
public class RamSwitch : MonoBehaviour
{
	[Token(Token = "0x400012C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RamSpline spline;

	[Token(Token = "0x400012D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SplineProfile Profile;

	[Token(Token = "0x60000BC")]
	[Address(RVA = "0x1559ACC", Offset = "0x1559ACC", VA = "0x1559ACC")]
	public void Switch()
	{
	}

	[Token(Token = "0x60000BD")]
	[Address(RVA = "0x1559AFC", Offset = "0x1559AFC", VA = "0x1559AFC")]
	public void SetProfile(SplineProfile splineProfile)
	{
	}

	[Token(Token = "0x60000BE")]
	[Address(RVA = "0x155A224", Offset = "0x155A224", VA = "0x155A224")]
	public RamSwitch()
	{
	}
}
[Token(Token = "0x2000036")]
public class MeshColoringRam : MonoBehaviour
{
	[Token(Token = "0x400012E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float height;

	[Token(Token = "0x400012F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float threshold;

	[Token(Token = "0x4000130")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool autoColor;

	[Token(Token = "0x4000131")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool newMesh;

	[Token(Token = "0x4000132")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector3 oldPosition;

	[Token(Token = "0x4000133")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool colorMeshLive;

	[Token(Token = "0x4000134")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public LayerMask layer;

	[Token(Token = "0x4000135")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private MeshFilter[] meshFilters;

	[Token(Token = "0x4000136")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool colored;

	[Token(Token = "0x4000137")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static RamSpline[] ramSplines;

	[Token(Token = "0x4000138")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static LakePolygon[] lakePolygons;

	[Token(Token = "0x60000BF")]
	[Address(RVA = "0xF4B9E8", Offset = "0xF4B9E8", VA = "0xF4B9E8")]
	private void Start()
	{
	}

	[Token(Token = "0x60000C0")]
	[Address(RVA = "0xF4BB28", Offset = "0xF4BB28", VA = "0xF4BB28")]
	private void Update()
	{
	}

	[Token(Token = "0x60000C1")]
	[Address(RVA = "0xF4BB38", Offset = "0xF4BB38", VA = "0xF4BB38")]
	public void ColorMeshLive()
	{
	}

	[Token(Token = "0x60000C2")]
	[Address(RVA = "0xF4C2A4", Offset = "0xF4C2A4", VA = "0xF4C2A4")]
	public MeshColoringRam()
	{
	}
}
[Token(Token = "0x2000037")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x9E4E80", Offset = "0x9E4E80")]
public class RamBuoyancy : MonoBehaviour
{
	[Token(Token = "0x4000139")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float buoyancy;

	[Token(Token = "0x400013A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float viscosity;

	[Token(Token = "0x400013B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float viscosityAngular;

	[Token(Token = "0x400013C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public LayerMask layer;

	[Token(Token = "0x400013D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Collider collider;

	[Token(Token = "0x400013E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9E86C0", Offset = "0x9E86C0")]
	public int pointsInAxis;

	[Token(Token = "0x400013F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Rigidbody rigidbody;

	[Token(Token = "0x4000140")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static RamSpline[] ramSplines;

	[Token(Token = "0x4000141")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static LakePolygon[] lakePolygons;

	[Token(Token = "0x4000142")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public List<Vector3> volumePoints;

	[Token(Token = "0x4000143")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool autoGenerateVolumePoints;

	[Token(Token = "0x4000144")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3[] volumePointsMatrix;

	[Token(Token = "0x4000145")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Vector3 lowestPoint;

	[Token(Token = "0x4000146")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private Vector3 center;

	[Token(Token = "0x4000147")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool debug;

	[Token(Token = "0x60000C3")]
	[Address(RVA = "0x154A8E0", Offset = "0x154A8E0", VA = "0x154A8E0")]
	private void Start()
	{
	}

	[Token(Token = "0x60000C4")]
	[Address(RVA = "0x154AD48", Offset = "0x154AD48", VA = "0x154AD48")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60000C5")]
	[Address(RVA = "0x154AD4C", Offset = "0x154AD4C", VA = "0x154AD4C")]
	public void WaterPhysics()
	{
	}

	[Token(Token = "0x60000C6")]
	[Address(RVA = "0x154BE18", Offset = "0x154BE18", VA = "0x154BE18")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x60000C7")]
	[Address(RVA = "0x154BFAC", Offset = "0x154BFAC", VA = "0x154BFAC")]
	public RamBuoyancy()
	{
	}
}
[Token(Token = "0x2000038")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x9E4EE4", Offset = "0x9E4EE4")]
public class RamSpline : MonoBehaviour
{
	[Token(Token = "0x4000148")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SplineProfile currentProfile;

	[Token(Token = "0x4000149")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SplineProfile oldProfile;

	[Token(Token = "0x400014A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<RamSpline> beginnigChildSplines;

	[Token(Token = "0x400014B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<RamSpline> endingChildSplines;

	[Token(Token = "0x400014C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public RamSpline beginningSpline;

	[Token(Token = "0x400014D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public RamSpline endingSpline;

	[Token(Token = "0x400014E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int beginningConnectionID;

	[Token(Token = "0x400014F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public int endingConnectionID;

	[Token(Token = "0x4000150")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float beginningMinWidth;

	[Token(Token = "0x4000151")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float beginningMaxWidth;

	[Token(Token = "0x4000152")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float endingMinWidth;

	[Token(Token = "0x4000153")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float endingMaxWidth;

	[Token(Token = "0x4000154")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public int toolbarInt;

	[Token(Token = "0x4000155")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public bool invertUVDirection;

	[Token(Token = "0x4000156")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
	public bool uvRotation;

	[Token(Token = "0x4000157")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public MeshFilter meshfilter;

	[Token(Token = "0x4000158")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public List<Vector4> controlPoints;

	[Token(Token = "0x4000159")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public List<Quaternion> controlPointsRotations;

	[Token(Token = "0x400015A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public List<Quaternion> controlPointsOrientation;

	[Token(Token = "0x400015B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public List<Vector3> controlPointsUp;

	[Token(Token = "0x400015C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public List<Vector3> controlPointsDown;

	[Token(Token = "0x400015D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public List<float> controlPointsSnap;

	[Token(Token = "0x400015E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public AnimationCurve meshCurve;

	[Token(Token = "0x400015F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public List<AnimationCurve> controlPointsMeshCurves;

	[Token(Token = "0x4000160")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public bool normalFromRaycast;

	[Token(Token = "0x4000161")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB1")]
	public bool snapToTerrain;

	[Token(Token = "0x4000162")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	public LayerMask snapMask;

	[Token(Token = "0x4000163")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public List<Vector3> points;

	[Token(Token = "0x4000164")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public List<Vector3> pointsUp;

	[Token(Token = "0x4000165")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public List<Vector3> pointsDown;

	[Token(Token = "0x4000166")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public List<Vector3> points2;

	[Token(Token = "0x4000167")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public List<Vector3> verticesBeginning;

	[Token(Token = "0x4000168")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public List<Vector3> verticesEnding;

	[Token(Token = "0x4000169")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public List<Vector3> normalsBeginning;

	[Token(Token = "0x400016A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public List<Vector3> normalsEnding;

	[Token(Token = "0x400016B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public List<float> widths;

	[Token(Token = "0x400016C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public List<float> snaps;

	[Token(Token = "0x400016D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public List<float> lerpValues;

	[Token(Token = "0x400016E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public List<Quaternion> orientations;

	[Token(Token = "0x400016F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public List<Vector3> tangents;

	[Token(Token = "0x4000170")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public List<Vector3> normalsList;

	[Token(Token = "0x4000171")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public Color[] colors;

	[Token(Token = "0x4000172")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public List<Vector2> colorsFlowMap;

	[Token(Token = "0x4000173")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public List<Vector3> verticeDirection;

	[Token(Token = "0x4000174")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public float floatSpeed;

	[Token(Token = "0x4000175")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	public bool generateOnStart;

	[Token(Token = "0x4000176")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public float minVal;

	[Token(Token = "0x4000177")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
	public float maxVal;

	[Token(Token = "0x4000178")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public float width;

	[Token(Token = "0x4000179")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
	public int vertsInShape;

	[Token(Token = "0x400017A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public float traingleDensity;

	[Token(Token = "0x400017B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
	public float uvScale;

	[Token(Token = "0x400017C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public Material oldMaterial;

	[Token(Token = "0x400017D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public bool showVertexColors;

	[Token(Token = "0x400017E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x169")]
	public bool showFlowMap;

	[Token(Token = "0x400017F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16A")]
	public bool overrideFlowMap;

	[Token(Token = "0x4000180")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16B")]
	public bool drawOnMesh;

	[Token(Token = "0x4000181")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
	public bool drawOnMeshFlowMap;

	[Token(Token = "0x4000182")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16D")]
	public bool uvScaleOverride;

	[Token(Token = "0x4000183")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16E")]
	public bool debug;

	[Token(Token = "0x4000184")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16F")]
	public bool debugNormals;

	[Token(Token = "0x4000185")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public bool debugTangents;

	[Token(Token = "0x4000186")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x171")]
	public bool debugBitangent;

	[Token(Token = "0x4000187")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x172")]
	public bool debugFlowmap;

	[Token(Token = "0x4000188")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x173")]
	public bool debugPoints;

	[Token(Token = "0x4000189")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
	public bool debugPointsConnect;

	[Token(Token = "0x400018A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x175")]
	public bool debugMesh;

	[Token(Token = "0x400018B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public float distanceToDebug;

	[Token(Token = "0x400018C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
	public Color drawColor;

	[Token(Token = "0x400018D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
	public bool drawColorR;

	[Token(Token = "0x400018E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18D")]
	public bool drawColorG;

	[Token(Token = "0x400018F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18E")]
	public bool drawColorB;

	[Token(Token = "0x4000190")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18F")]
	public bool drawColorA;

	[Token(Token = "0x4000191")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public bool drawOnMultiple;

	[Token(Token = "0x4000192")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x194")]
	public float flowSpeed;

	[Token(Token = "0x4000193")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public float flowDirection;

	[Token(Token = "0x4000194")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public AnimationCurve flowFlat;

	[Token(Token = "0x4000195")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public AnimationCurve flowWaterfall;

	[Token(Token = "0x4000196")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	public bool noiseflowMap;

	[Token(Token = "0x4000197")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B4")]
	public float noiseMultiplierflowMap;

	[Token(Token = "0x4000198")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	public float noiseSizeXflowMap;

	[Token(Token = "0x4000199")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1BC")]
	public float noiseSizeZflowMap;

	[Token(Token = "0x400019A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	public float opacity;

	[Token(Token = "0x400019B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C4")]
	public float drawSize;

	[Token(Token = "0x400019C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	public float length;

	[Token(Token = "0x400019D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
	public float fulllength;

	[Token(Token = "0x400019E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	public float minMaxWidth;

	[Token(Token = "0x400019F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D4")]
	public float uvWidth;

	[Token(Token = "0x40001A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	public float uvBeginning;

	[Token(Token = "0x40001A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1DC")]
	public bool receiveShadows;

	[Token(Token = "0x40001A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	public ShadowCastingMode shadowCastingMode;

	[Token(Token = "0x40001A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E4")]
	public bool generateMeshParts;

	[Token(Token = "0x40001A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	public int meshPartsCount;

	[Token(Token = "0x40001A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	public List<Transform> meshesPartTransforms;

	[Token(Token = "0x40001A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	public float simulatedRiverLength;

	[Token(Token = "0x40001A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1FC")]
	public int simulatedRiverPoints;

	[Token(Token = "0x40001A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	public float simulatedMinStepSize;

	[Token(Token = "0x40001A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x204")]
	public bool simulatedNoUp;

	[Token(Token = "0x40001AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x205")]
	public bool simulatedBreakOnUp;

	[Token(Token = "0x40001AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	public int detailTerrain;

	[Token(Token = "0x40001AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20C")]
	public int detailTerrainForward;

	[Token(Token = "0x40001AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	public float terrainAdditionalWidth;

	[Token(Token = "0x40001AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x214")]
	public float terrainSmoothMultiplier;

	[Token(Token = "0x40001AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	public bool overrideRiverRender;

	[Token(Token = "0x40001B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x219")]
	public bool noiseWidth;

	[Token(Token = "0x40001B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21C")]
	public float noiseMultiplierWidth;

	[Token(Token = "0x40001B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
	public float noiseSizeWidth;

	[Token(Token = "0x40001B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x224")]
	public bool noiseCarve;

	[Token(Token = "0x40001B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
	public float noiseMultiplierInside;

	[Token(Token = "0x40001B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22C")]
	public float noiseMultiplierOutside;

	[Token(Token = "0x40001B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
	public float noiseSizeX;

	[Token(Token = "0x40001B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x234")]
	public float noiseSizeZ;

	[Token(Token = "0x40001B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
	public bool noisePaint;

	[Token(Token = "0x40001B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x23C")]
	public float noiseMultiplierInsidePaint;

	[Token(Token = "0x40001BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
	public float noiseMultiplierOutsidePaint;

	[Token(Token = "0x40001BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x244")]
	public float noiseSizeXPaint;

	[Token(Token = "0x40001BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
	public float noiseSizeZPaint;

	[Token(Token = "0x40001BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24C")]
	public LayerMask maskCarve;

	[Token(Token = "0x40001BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
	public AnimationCurve terrainCarve;

	[Token(Token = "0x40001BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
	public float distSmooth;

	[Token(Token = "0x40001C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25C")]
	public float distSmoothStart;

	[Token(Token = "0x40001C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
	public AnimationCurve terrainPaintCarve;

	[Token(Token = "0x40001C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
	public int currentSplatMap;

	[Token(Token = "0x40001C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x26C")]
	public bool mixTwoSplatMaps;

	[Token(Token = "0x40001C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
	public int secondSplatMap;

	[Token(Token = "0x40001C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x274")]
	public bool addCliffSplatMap;

	[Token(Token = "0x40001C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
	public int cliffSplatMap;

	[Token(Token = "0x40001C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x27C")]
	public float cliffAngle;

	[Token(Token = "0x40001C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
	public float cliffBlend;

	[Token(Token = "0x40001C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x284")]
	public int cliffSplatMapOutside;

	[Token(Token = "0x40001CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
	public float cliffAngleOutside;

	[Token(Token = "0x40001CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28C")]
	public float cliffBlendOutside;

	[Token(Token = "0x40001CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
	public float distanceClearFoliage;

	[Token(Token = "0x40001CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x294")]
	public float distanceClearFoliageTrees;

	[Token(Token = "0x40001CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
	public GameObject meshGO;

	[Token(Token = "0x60000C8")]
	[Address(RVA = "0x154C090", Offset = "0x154C090", VA = "0x154C090")]
	public void Start()
	{
	}

	[Token(Token = "0x60000C9")]
	[Address(RVA = "0x154CD70", Offset = "0x154CD70", VA = "0x154CD70")]
	public static RamSpline CreateSpline([Optional] Material splineMaterial, [Optional] List<Vector4> positions, string name = "RamSpline")
	{
		return null;
	}

	[Token(Token = "0x60000CA")]
	[Address(RVA = "0x154CEFC", Offset = "0x154CEFC", VA = "0x154CEFC")]
	public void AddPoint(Vector4 position)
	{
	}

	[Token(Token = "0x60000CB")]
	[Address(RVA = "0x154D124", Offset = "0x154D124", VA = "0x154D124")]
	public void AddPointAfter(int i)
	{
	}

	[Token(Token = "0x60000CC")]
	[Address(RVA = "0x154D630", Offset = "0x154D630", VA = "0x154D630")]
	public void ChangePointPosition(int i, Vector3 position)
	{
	}

	[Token(Token = "0x60000CD")]
	[Address(RVA = "0x154D680", Offset = "0x154D680", VA = "0x154D680")]
	public void ChangePointPosition(int i, Vector4 position)
	{
	}

	[Token(Token = "0x60000CE")]
	[Address(RVA = "0x154D748", Offset = "0x154D748", VA = "0x154D748")]
	public void RemovePoint(int i)
	{
	}

	[Token(Token = "0x60000CF")]
	[Address(RVA = "0x154D820", Offset = "0x154D820", VA = "0x154D820")]
	public void RemovePoints(int fromID = -1)
	{
	}

	[Token(Token = "0x60000D0")]
	[Address(RVA = "0x154D89C", Offset = "0x154D89C", VA = "0x154D89C")]
	public void GenerateBeginningParentBased()
	{
	}

	[Token(Token = "0x60000D1")]
	[Address(RVA = "0x154DC30", Offset = "0x154DC30", VA = "0x154DC30")]
	public void GenerateEndingParentBased()
	{
	}

	[Token(Token = "0x60000D2")]
	[Address(RVA = "0x154C0A0", Offset = "0x154C0A0", VA = "0x154C0A0")]
	public void GenerateSpline([Optional] List<RamSpline> generatedSplines)
	{
	}

	[Token(Token = "0x60000D3")]
	[Address(RVA = "0x154DFCC", Offset = "0x154DFCC", VA = "0x154DFCC")]
	private void CalculateCatmullRomSideSplines(List<Vector4> controlPoints, int pos)
	{
	}

	[Token(Token = "0x60000D4")]
	[Address(RVA = "0x154E73C", Offset = "0x154E73C", VA = "0x154E73C")]
	private void CalculateCatmullRomSplineParameters(List<Vector4> controlPoints, int pos, bool initialPoints = false)
	{
	}

	[Token(Token = "0x60000D5")]
	[Address(RVA = "0x154EB20", Offset = "0x154EB20", VA = "0x154EB20")]
	private void CalculateCatmullRomSpline(List<Vector3> controlPoints, int pos, ref List<Vector3> points)
	{
	}

	[Token(Token = "0x60000D6")]
	[Address(RVA = "0x1552568", Offset = "0x1552568", VA = "0x1552568")]
	private void CalculatePointPosition(List<Vector3> controlPoints, int pos, Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3, float t, ref List<Vector3> points)
	{
	}

	[Token(Token = "0x60000D7")]
	[Address(RVA = "0x1551F30", Offset = "0x1551F30", VA = "0x1551F30")]
	private void CalculatePointParameters(List<Vector4> controlPoints, int pos, Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3, float t)
	{
	}

	[Token(Token = "0x60000D8")]
	[Address(RVA = "0x1551724", Offset = "0x1551724", VA = "0x1551724")]
	private int ClampListPos(int pos)
	{
		return default(int);
	}

	[Token(Token = "0x60000D9")]
	[Address(RVA = "0x15517B0", Offset = "0x15517B0", VA = "0x15517B0")]
	private Vector3 GetCatmullRomPosition(float t, Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60000DA")]
	[Address(RVA = "0x1551B40", Offset = "0x1551B40", VA = "0x1551B40")]
	private Vector3 GetCatmullRomTangent(float t, Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60000DB")]
	[Address(RVA = "0x1551E68", Offset = "0x1551E68", VA = "0x1551E68")]
	private Vector3 CalculateNormal(Vector3 tangent, Vector3 up)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60000DC")]
	[Address(RVA = "0x154EE2C", Offset = "0x154EE2C", VA = "0x154EE2C")]
	private void GenerateMesh(ref Mesh mesh)
	{
	}

	[Token(Token = "0x60000DD")]
	[Address(RVA = "0x155289C", Offset = "0x155289C", VA = "0x155289C")]
	public void GenerateMeshParts(Mesh baseMesh)
	{
	}

	[Token(Token = "0x60000DE")]
	[Address(RVA = "0x1553328", Offset = "0x1553328", VA = "0x1553328")]
	public void AddNoiseToWidths()
	{
	}

	[Token(Token = "0x60000DF")]
	[Address(RVA = "0x1553478", Offset = "0x1553478", VA = "0x1553478")]
	public void SimulateRiver(bool generate = true)
	{
	}

	[Token(Token = "0x60000E0")]
	[Address(RVA = "0x1554B9C", Offset = "0x1554B9C", VA = "0x1554B9C")]
	public void ShowTerrainCarve(float differentSize = 0f)
	{
	}

	[Token(Token = "0x60000E1")]
	[Address(RVA = "0x155653C", Offset = "0x155653C", VA = "0x155653C")]
	public void TerrainCarve()
	{
	}

	[Token(Token = "0x60000E2")]
	[Address(RVA = "0x1556F94", Offset = "0x1556F94", VA = "0x1556F94")]
	public void TerrainPaintMeshBased()
	{
	}

	[Token(Token = "0x60000E3")]
	[Address(RVA = "0x1558378", Offset = "0x1558378", VA = "0x1558378")]
	public void TerrainClearFoliage(bool details = true)
	{
	}

	[Token(Token = "0x60000E4")]
	[Address(RVA = "0x155273C", Offset = "0x155273C", VA = "0x155273C")]
	private float FlowCalculate(float u, float normalY, Vector3 vertice)
	{
		return default(float);
	}

	[Token(Token = "0x60000E5")]
	[Address(RVA = "0x1559030", Offset = "0x1559030", VA = "0x1559030")]
	public RamSpline()
	{
	}
}
[Token(Token = "0x2000039")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x9E4F48", Offset = "0x9E4F48")]
public class SplineProfile : ScriptableObject
{
	[Token(Token = "0x40001CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material splineMaterial;

	[Token(Token = "0x40001D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AnimationCurve meshCurve;

	[Token(Token = "0x40001D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float minVal;

	[Token(Token = "0x40001D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float maxVal;

	[Token(Token = "0x40001D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int vertsInShape;

	[Token(Token = "0x40001D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float traingleDensity;

	[Token(Token = "0x40001D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float uvScale;

	[Token(Token = "0x40001D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public bool uvRotation;

	[Token(Token = "0x40001D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
	public bool receiveShadows;

	[Token(Token = "0x40001D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ShadowCastingMode shadowCastingMode;

	[Token(Token = "0x40001D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AnimationCurve flowFlat;

	[Token(Token = "0x40001DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AnimationCurve flowWaterfall;

	[Token(Token = "0x40001DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool noiseflowMap;

	[Token(Token = "0x40001DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float noiseMultiplierflowMap;

	[Token(Token = "0x40001DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float noiseSizeXflowMap;

	[Token(Token = "0x40001DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float noiseSizeZflowMap;

	[Token(Token = "0x40001DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float floatSpeed;

	[Token(Token = "0x40001E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public AnimationCurve terrainCarve;

	[Token(Token = "0x40001E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float distSmooth;

	[Token(Token = "0x40001E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public float distSmoothStart;

	[Token(Token = "0x40001E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public AnimationCurve terrainPaintCarve;

	[Token(Token = "0x40001E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public LayerMask maskCarve;

	[Token(Token = "0x40001E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public bool noiseCarve;

	[Token(Token = "0x40001E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public float noiseMultiplierInside;

	[Token(Token = "0x40001E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public float noiseMultiplierOutside;

	[Token(Token = "0x40001E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public float noiseSizeX;

	[Token(Token = "0x40001E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public float noiseSizeZ;

	[Token(Token = "0x40001EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public float terrainSmoothMultiplier;

	[Token(Token = "0x40001EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public int currentSplatMap;

	[Token(Token = "0x40001EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public bool mixTwoSplatMaps;

	[Token(Token = "0x40001ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	public int secondSplatMap;

	[Token(Token = "0x40001EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public bool addCliffSplatMap;

	[Token(Token = "0x40001EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	public int cliffSplatMap;

	[Token(Token = "0x40001F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public float cliffAngle;

	[Token(Token = "0x40001F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	public float cliffBlend;

	[Token(Token = "0x40001F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public int cliffSplatMapOutside;

	[Token(Token = "0x40001F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	public float cliffAngleOutside;

	[Token(Token = "0x40001F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public float cliffBlendOutside;

	[Token(Token = "0x40001F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	public float distanceClearFoliage;

	[Token(Token = "0x40001F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public float distanceClearFoliageTrees;

	[Token(Token = "0x40001F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	public bool noisePaint;

	[Token(Token = "0x40001F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public float noiseMultiplierInsidePaint;

	[Token(Token = "0x40001F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	public float noiseMultiplierOutsidePaint;

	[Token(Token = "0x40001FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public float noiseSizeXPaint;

	[Token(Token = "0x40001FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	public float noiseSizeZPaint;

	[Token(Token = "0x40001FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public float simulatedRiverLength;

	[Token(Token = "0x40001FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	public int simulatedRiverPoints;

	[Token(Token = "0x40001FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public float simulatedMinStepSize;

	[Token(Token = "0x40001FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	public bool simulatedNoUp;

	[Token(Token = "0x4000200")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF5")]
	public bool simulatedBreakOnUp;

	[Token(Token = "0x4000201")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF6")]
	public bool noiseWidth;

	[Token(Token = "0x4000202")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public float noiseMultiplierWidth;

	[Token(Token = "0x4000203")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	public float noiseSizeWidth;

	[Token(Token = "0x4000204")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public int biomeType;

	[Token(Token = "0x60000E6")]
	[Address(RVA = "0xE41B30", Offset = "0xE41B30", VA = "0xE41B30")]
	public SplineProfile()
	{
	}
}
[Token(Token = "0x200003A")]
[ExecuteAlways]
public class PipeLineAssetScene : MonoBehaviour
{
	[Token(Token = "0x4000205")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RenderPipelineAsset renderPipelineAsset;

	[Token(Token = "0x60000E7")]
	[Address(RVA = "0xF52214", Offset = "0xF52214", VA = "0xF52214")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60000E8")]
	[Address(RVA = "0xF52244", Offset = "0xF52244", VA = "0xF52244")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x60000E9")]
	[Address(RVA = "0xF52274", Offset = "0xF52274", VA = "0xF52274")]
	public PipeLineAssetScene()
	{
	}
}
[Token(Token = "0x200003B")]
public class MaterialShowcaseRotationScript : MonoBehaviour
{
	[Token(Token = "0x4000206")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 localRotationVelocityEuler;

	[Token(Token = "0x60000EA")]
	[Address(RVA = "0xF4B74C", Offset = "0xF4B74C", VA = "0xF4B74C")]
	private void Update()
	{
	}

	[Token(Token = "0x60000EB")]
	[Address(RVA = "0xF4B898", Offset = "0xF4B898", VA = "0xF4B898")]
	public MaterialShowcaseRotationScript()
	{
	}
}
[Token(Token = "0x200003C")]
public class ActorCOMTransform : MonoBehaviour
{
	[Token(Token = "0x4000207")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 offset;

	[Token(Token = "0x4000208")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ObiActor actor;

	[Token(Token = "0x60000EC")]
	[Address(RVA = "0xCAD1F8", Offset = "0xCAD1F8", VA = "0xCAD1F8")]
	public void Update()
	{
	}

	[Token(Token = "0x60000ED")]
	[Address(RVA = "0xCAD358", Offset = "0xCAD358", VA = "0xCAD358")]
	public ActorCOMTransform()
	{
	}
}
[Token(Token = "0x200003D")]
public class ActorSpawner : MonoBehaviour
{
	[Token(Token = "0x4000209")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ObiActor template;

	[Token(Token = "0x400020A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int basePhase;

	[Token(Token = "0x400020B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int maxInstances;

	[Token(Token = "0x400020C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float spawnDelay;

	[Token(Token = "0x400020D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private int phase;

	[Token(Token = "0x400020E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int instances;

	[Token(Token = "0x400020F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float timeFromLastSpawn;

	[Token(Token = "0x60000EE")]
	[Address(RVA = "0xCAD360", Offset = "0xCAD360", VA = "0xCAD360")]
	private void Update()
	{
	}

	[Token(Token = "0x60000EF")]
	[Address(RVA = "0xCAD550", Offset = "0xCAD550", VA = "0xCAD550")]
	public ActorSpawner()
	{
	}
}
[Token(Token = "0x200003E")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x9E4FC4", Offset = "0x9E4FC4")]
public class AddRandomVelocity : MonoBehaviour
{
	[Token(Token = "0x4000210")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float intensity;

	[Token(Token = "0x60000F0")]
	[Address(RVA = "0xCAD570", Offset = "0xCAD570", VA = "0xCAD570")]
	private void Update()
	{
	}

	[Token(Token = "0x60000F1")]
	[Address(RVA = "0xCAD660", Offset = "0xCAD660", VA = "0xCAD660")]
	public AddRandomVelocity()
	{
	}
}
[Token(Token = "0x200003F")]
public class Blinker : MonoBehaviour
{
	[Token(Token = "0x4000211")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Color highlightColor;

	[Token(Token = "0x4000212")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Renderer rend;

	[Token(Token = "0x4000213")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Color original;

	[Token(Token = "0x60000F2")]
	[Address(RVA = "0xE22E8C", Offset = "0xE22E8C", VA = "0xE22E8C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60000F3")]
	[Address(RVA = "0xE22F18", Offset = "0xE22F18", VA = "0xE22F18")]
	public void Blink()
	{
	}

	[Token(Token = "0x60000F4")]
	[Address(RVA = "0xE22F58", Offset = "0xE22F58", VA = "0xE22F58")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60000F5")]
	[Address(RVA = "0xE23084", Offset = "0xE23084", VA = "0xE23084")]
	public Blinker()
	{
	}
}
[Token(Token = "0x2000040")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x9E6028", Offset = "0x9E6028")]
public class ColliderHighlighter : MonoBehaviour
{
	[Token(Token = "0x4000214")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ObiSolver solver;

	[Token(Token = "0x60000F6")]
	[Address(RVA = "0xE29CEC", Offset = "0xE29CEC", VA = "0xE29CEC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60000F7")]
	[Address(RVA = "0xE29D4C", Offset = "0xE29D4C", VA = "0xE29D4C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60000F8")]
	[Address(RVA = "0xE29DD8", Offset = "0xE29DD8", VA = "0xE29DD8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60000F9")]
	[Address(RVA = "0xE29E64", Offset = "0xE29E64", VA = "0xE29E64")]
	private void Solver_OnCollision(object sender, ObiSolver.ObiCollisionEventArgs e)
	{
	}

	[Token(Token = "0x60000FA")]
	[Address(RVA = "0xE2A000", Offset = "0xE2A000", VA = "0xE2A000")]
	public ColliderHighlighter()
	{
	}
}
[Token(Token = "0x2000041")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x9E608C", Offset = "0x9E608C")]
public class CollisionEventHandler : MonoBehaviour
{
	[Token(Token = "0x4000215")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ObiSolver solver;

	[Token(Token = "0x4000216")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int contactCount;

	[Token(Token = "0x4000217")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private ObiSolver.ObiCollisionEventArgs frame;

	[Token(Token = "0x60000FB")]
	[Address(RVA = "0xE2A008", Offset = "0xE2A008", VA = "0xE2A008")]
	private void Awake()
	{
	}

	[Token(Token = "0x60000FC")]
	[Address(RVA = "0xE2A068", Offset = "0xE2A068", VA = "0xE2A068")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60000FD")]
	[Address(RVA = "0xE2A0F4", Offset = "0xE2A0F4", VA = "0xE2A0F4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60000FE")]
	[Address(RVA = "0xE2A180", Offset = "0xE2A180", VA = "0xE2A180")]
	private void Solver_OnCollision(object sender, ObiSolver.ObiCollisionEventArgs e)
	{
	}

	[Token(Token = "0x60000FF")]
	[Address(RVA = "0xE2A18C", Offset = "0xE2A18C", VA = "0xE2A18C")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000100")]
	[Address(RVA = "0xE2A4C4", Offset = "0xE2A4C4", VA = "0xE2A4C4")]
	public CollisionEventHandler()
	{
	}
}
[Token(Token = "0x2000042")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x9E60F0", Offset = "0x9E60F0")]
public class DebugParticleFrames : MonoBehaviour
{
	[Token(Token = "0x4000218")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ObiActor actor;

	[Token(Token = "0x4000219")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float size;

	[Token(Token = "0x6000101")]
	[Address(RVA = "0xE2B410", Offset = "0xE2B410", VA = "0xE2B410")]
	public void Awake()
	{
	}

	[Token(Token = "0x6000102")]
	[Address(RVA = "0xE2B470", Offset = "0xE2B470", VA = "0xE2B470")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000103")]
	[Address(RVA = "0xE2B7D0", Offset = "0xE2B7D0", VA = "0xE2B7D0")]
	public DebugParticleFrames()
	{
	}
}
[Token(Token = "0x2000043")]
public class ExtrapolationCamera : MonoBehaviour
{
	[Token(Token = "0x400021A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform target;

	[Token(Token = "0x400021B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float extrapolation;

	[Token(Token = "0x400021C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9E86D8", Offset = "0x9E86D8")]
	public float smoothness;

	[Token(Token = "0x400021D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9E86F0", Offset = "0x9E86F0")]
	public float linearSpeed;

	[Token(Token = "0x400021E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9E8708", Offset = "0x9E8708")]
	public float rotationalSpeed;

	[Token(Token = "0x400021F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "MinAttribute", RVA = "0x9E8720", Offset = "0x9E8720")]
	public float distanceFromTarget;

	[Token(Token = "0x4000220")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Vector3 lastPosition;

	[Token(Token = "0x4000221")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3 extrapolatedPos;

	[Token(Token = "0x6000104")]
	[Address(RVA = "0xE2E044", Offset = "0xE2E044", VA = "0xE2E044")]
	private void Start()
	{
	}

	[Token(Token = "0x6000105")]
	[Address(RVA = "0xE2E0D8", Offset = "0xE2E0D8", VA = "0xE2E0D8")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000106")]
	[Address(RVA = "0xE2E260", Offset = "0xE2E260", VA = "0xE2E260")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000107")]
	[Address(RVA = "0xE2E4DC", Offset = "0xE2E4DC", VA = "0xE2E4DC")]
	public void Teleport(Vector3 position, Quaternion rotation)
	{
	}

	[Token(Token = "0x6000108")]
	[Address(RVA = "0xE2E5FC", Offset = "0xE2E5FC", VA = "0xE2E5FC")]
	public ExtrapolationCamera()
	{
	}
}
[Token(Token = "0x2000044")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x9E6164", Offset = "0x9E6164")]
public class FPSDisplay : MonoBehaviour
{
	[Token(Token = "0x4000222")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float updateInterval;

	[Token(Token = "0x4000223")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool showMedian;

	[Token(Token = "0x4000224")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float medianLearnrate;

	[Token(Token = "0x4000225")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float accum;

	[Token(Token = "0x4000226")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int frames;

	[Token(Token = "0x4000227")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float timeleft;

	[Token(Token = "0x4000228")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float currentFPS;

	[Token(Token = "0x4000229")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float median;

	[Token(Token = "0x400022A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float average;

	[Token(Token = "0x400022B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Text uguiText;

	[Token(Token = "0x17000008")]
	public float CurrentFPS
	{
		[Token(Token = "0x6000109")]
		[Address(RVA = "0xE2E618", Offset = "0xE2E618", VA = "0xE2E618")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000009")]
	public float FPSMedian
	{
		[Token(Token = "0x600010A")]
		[Address(RVA = "0xE2E620", Offset = "0xE2E620", VA = "0xE2E620")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700000A")]
	public float FPSAverage
	{
		[Token(Token = "0x600010B")]
		[Address(RVA = "0xE2E628", Offset = "0xE2E628", VA = "0xE2E628")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x600010C")]
	[Address(RVA = "0xE2E630", Offset = "0xE2E630", VA = "0xE2E630")]
	private void Start()
	{
	}

	[Token(Token = "0x600010D")]
	[Address(RVA = "0xE2E69C", Offset = "0xE2E69C", VA = "0xE2E69C")]
	private void Update()
	{
	}

	[Token(Token = "0x600010E")]
	[Address(RVA = "0xE2E878", Offset = "0xE2E878", VA = "0xE2E878")]
	public void ResetMedianAndAverage()
	{
	}

	[Token(Token = "0x600010F")]
	[Address(RVA = "0xE2E880", Offset = "0xE2E880", VA = "0xE2E880")]
	public FPSDisplay()
	{
	}
}
[Token(Token = "0x2000045")]
public class ObiActorTeleport : MonoBehaviour
{
	[Token(Token = "0x400022C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ObiActor actor;

	[Token(Token = "0x400022D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform target;

	[Token(Token = "0x6000110")]
	[Address(RVA = "0xF4F340", Offset = "0xF4F340", VA = "0xF4F340")]
	public void Teleport()
	{
	}

	[Token(Token = "0x6000111")]
	[Address(RVA = "0xF4F3E0", Offset = "0xF4F3E0", VA = "0xF4F3E0")]
	public ObiActorTeleport()
	{
	}
}
[Token(Token = "0x2000046")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x9E61C8", Offset = "0x9E61C8")]
public class ObiParticleCounter : MonoBehaviour
{
	[Token(Token = "0x400022E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ObiSolver solver;

	[Token(Token = "0x400022F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int counter;

	[Token(Token = "0x4000230")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Collider2D targetCollider;

	[Token(Token = "0x4000231")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private ObiSolver.ObiCollisionEventArgs frame;

	[Token(Token = "0x4000232")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private HashSet<int> particles;

	[Token(Token = "0x6000112")]
	[Address(RVA = "0xF4F3E8", Offset = "0xF4F3E8", VA = "0xF4F3E8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000113")]
	[Address(RVA = "0xF4F448", Offset = "0xF4F448", VA = "0xF4F448")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000114")]
	[Address(RVA = "0xF4F4D4", Offset = "0xF4F4D4", VA = "0xF4F4D4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000115")]
	[Address(RVA = "0xF4F560", Offset = "0xF4F560", VA = "0xF4F560")]
	private void Solver_OnCollision(object sender, ObiSolver.ObiCollisionEventArgs e)
	{
	}

	[Token(Token = "0x6000116")]
	[Address(RVA = "0xF4F6B4", Offset = "0xF4F6B4", VA = "0xF4F6B4")]
	public ObiParticleCounter()
	{
	}
}
[Token(Token = "0x2000047")]
public class ObjectDragger : MonoBehaviour
{
	[Token(Token = "0x4000233")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3 screenPoint;

	[Token(Token = "0x4000234")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector3 offset;

	[Token(Token = "0x6000117")]
	[Address(RVA = "0xF4F730", Offset = "0xF4F730", VA = "0xF4F730")]
	private void OnMouseDown()
	{
	}

	[Token(Token = "0x6000118")]
	[Address(RVA = "0xF4F8B4", Offset = "0xF4F8B4", VA = "0xF4F8B4")]
	private void OnMouseDrag()
	{
	}

	[Token(Token = "0x6000119")]
	[Address(RVA = "0xF4F9D8", Offset = "0xF4F9D8", VA = "0xF4F9D8")]
	public ObjectDragger()
	{
	}
}
[Token(Token = "0x2000048")]
public class ObjectLimit : MonoBehaviour
{
	[Token(Token = "0x4000235")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float minX;

	[Token(Token = "0x4000236")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float maxX;

	[Token(Token = "0x4000237")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float minY;

	[Token(Token = "0x4000238")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float maxY;

	[Token(Token = "0x4000239")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float minZ;

	[Token(Token = "0x400023A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float maxZ;

	[Token(Token = "0x600011A")]
	[Address(RVA = "0xF4F9E0", Offset = "0xF4F9E0", VA = "0xF4F9E0")]
	private void Update()
	{
	}

	[Token(Token = "0x600011B")]
	[Address(RVA = "0xF4FB5C", Offset = "0xF4FB5C", VA = "0xF4FB5C")]
	public ObjectLimit()
	{
	}
}
[Token(Token = "0x2000049")]
public class SlowmoToggler : MonoBehaviour
{
	[Token(Token = "0x600011C")]
	[Address(RVA = "0xE40798", Offset = "0xE40798", VA = "0xE40798")]
	public void Slowmo(bool slowmo)
	{
	}

	[Token(Token = "0x600011D")]
	[Address(RVA = "0xE407B0", Offset = "0xE407B0", VA = "0xE407B0")]
	public SlowmoToggler()
	{
	}
}
[Token(Token = "0x200004A")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x9E622C", Offset = "0x9E622C")]
public class WorldSpaceGravity : MonoBehaviour
{
	[Token(Token = "0x400023B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ObiSolver solver;

	[Token(Token = "0x400023C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3 worldGravity;

	[Token(Token = "0x600011E")]
	[Address(RVA = "0x1480B4C", Offset = "0x1480B4C", VA = "0x1480B4C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600011F")]
	[Address(RVA = "0x1480BAC", Offset = "0x1480BAC", VA = "0x1480BAC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000120")]
	[Address(RVA = "0x1480C04", Offset = "0x1480C04", VA = "0x1480C04")]
	public WorldSpaceGravity()
	{
	}
}
[Token(Token = "0x200004B")]
public class CharacterControl2D : MonoBehaviour
{
	[Token(Token = "0x400023D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float acceleration;

	[Token(Token = "0x400023E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float maxSpeed;

	[Token(Token = "0x400023F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float jumpPower;

	[Token(Token = "0x4000240")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Rigidbody unityRigidbody;

	[Token(Token = "0x6000121")]
	[Address(RVA = "0xE29808", Offset = "0xE29808", VA = "0xE29808")]
	public void Awake()
	{
	}

	[Token(Token = "0x6000122")]
	[Address(RVA = "0xE29868", Offset = "0xE29868", VA = "0xE29868")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000123")]
	[Address(RVA = "0xE299E4", Offset = "0xE299E4", VA = "0xE299E4")]
	public CharacterControl2D()
	{
	}
}
[Token(Token = "0x200004C")]
public class CraneController : MonoBehaviour, XRIDefaultInputActions.IXRILeftHandActions
{
	[Token(Token = "0x4000241")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ObiRopeCursor cursor;

	[Token(Token = "0x4000242")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ObiRope rope;

	[Token(Token = "0x4000243")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool up;

	[Token(Token = "0x4000244")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	private bool down;

	[Token(Token = "0x4000245")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
	private bool left;

	[Token(Token = "0x4000246")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B")]
	private bool right;

	[Token(Token = "0x6000124")]
	[Address(RVA = "0xE2A4CC", Offset = "0xE2A4CC", VA = "0xE2A4CC", Slot = "7")]
	public void OnActivate(InputAction.CallbackContext context)
	{
	}

	[Token(Token = "0x6000125")]
	[Address(RVA = "0xE2A52C", Offset = "0xE2A52C", VA = "0xE2A52C", Slot = "9")]
	public void OnHapticDevice(InputAction.CallbackContext context)
	{
	}

	[Token(Token = "0x6000126")]
	[Address(RVA = "0xE2A58C", Offset = "0xE2A58C", VA = "0xE2A58C", Slot = "15")]
	public void OnMove(InputAction.CallbackContext context)
	{
	}

	[Token(Token = "0x6000127")]
	[Address(RVA = "0xE2A5EC", Offset = "0xE2A5EC", VA = "0xE2A5EC", Slot = "4")]
	public void OnPosition(InputAction.CallbackContext context)
	{
	}

	[Token(Token = "0x6000128")]
	[Address(RVA = "0xE2A64C", Offset = "0xE2A64C", VA = "0xE2A64C", Slot = "18")]
	public void OnReset(InputAction.CallbackContext context)
	{
	}

	[Token(Token = "0x6000129")]
	[Address(RVA = "0xE2A6AC", Offset = "0xE2A6AC", VA = "0xE2A6AC", Slot = "16")]
	public void OnRotateAnchor(InputAction.CallbackContext context)
	{
	}

	[Token(Token = "0x600012A")]
	[Address(RVA = "0xE2A70C", Offset = "0xE2A70C", VA = "0xE2A70C", Slot = "5")]
	public void OnRotation(InputAction.CallbackContext context)
	{
	}

	[Token(Token = "0x600012B")]
	[Address(RVA = "0xE2A76C", Offset = "0xE2A76C", VA = "0xE2A76C", Slot = "6")]
	public void OnSelect(InputAction.CallbackContext context)
	{
	}

	[Token(Token = "0x600012C")]
	[Address(RVA = "0xE2A7CC", Offset = "0xE2A7CC", VA = "0xE2A7CC", Slot = "11")]
	public void OnTeleportModeActivate(InputAction.CallbackContext context)
	{
	}

	[Token(Token = "0x600012D")]
	[Address(RVA = "0xE2A82C", Offset = "0xE2A82C", VA = "0xE2A82C", Slot = "12")]
	public void OnTeleportModeCancel(InputAction.CallbackContext context)
	{
	}

	[Token(Token = "0x600012E")]
	[Address(RVA = "0xE2A88C", Offset = "0xE2A88C", VA = "0xE2A88C", Slot = "10")]
	public void OnTeleportSelect(InputAction.CallbackContext context)
	{
	}

	[Token(Token = "0x600012F")]
	[Address(RVA = "0xE2A8EC", Offset = "0xE2A8EC", VA = "0xE2A8EC", Slot = "17")]
	public void OnTranslateAnchor(InputAction.CallbackContext context)
	{
	}

	[Token(Token = "0x6000130")]
	[Address(RVA = "0xE2A94C", Offset = "0xE2A94C", VA = "0xE2A94C", Slot = "13")]
	public void OnTurn(InputAction.CallbackContext context)
	{
	}

	[Token(Token = "0x6000131")]
	[Address(RVA = "0xE2A9AC", Offset = "0xE2A9AC", VA = "0xE2A9AC", Slot = "8")]
	public void OnUIPress(InputAction.CallbackContext context)
	{
	}

	[Token(Token = "0x6000132")]
	[Address(RVA = "0xE2AA0C", Offset = "0xE2AA0C", VA = "0xE2AA0C", Slot = "20")]
	public void OnAutoReel(InputAction.CallbackContext context)
	{
	}

	[Token(Token = "0x6000133")]
	[Address(RVA = "0xE2AA10", Offset = "0xE2AA10", VA = "0xE2AA10", Slot = "23")]
	public void OnMenu(InputAction.CallbackContext context)
	{
	}

	[Token(Token = "0x6000134")]
	[Address(RVA = "0xE2AA14", Offset = "0xE2AA14", VA = "0xE2AA14", Slot = "21")]
	public void OnBoost(InputAction.CallbackContext context)
	{
	}

	[Token(Token = "0x6000135")]
	[Address(RVA = "0xE2AA18", Offset = "0xE2AA18", VA = "0xE2AA18", Slot = "22")]
	public void OnGrabHandle(InputAction.CallbackContext context)
	{
	}

	[Token(Token = "0x6000136")]
	[Address(RVA = "0xE2AA1C", Offset = "0xE2AA1C", VA = "0xE2AA1C", Slot = "14")]
	public void OnThumbUp(InputAction.CallbackContext context)
	{
	}

	[Token(Token = "0x6000137")]
	[Address(RVA = "0xE2AA20", Offset = "0xE2AA20", VA = "0xE2AA20")]
	private void Start()
	{
	}

	[Token(Token = "0x6000138")]
	[Address(RVA = "0xE2AAAC", Offset = "0xE2AAAC", VA = "0xE2AAAC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000139")]
	[Address(RVA = "0xE2AAB0", Offset = "0xE2AAB0", VA = "0xE2AAB0", Slot = "24")]
	public void OnPickup(InputAction.CallbackContext context)
	{
	}

	[Token(Token = "0x600013A")]
	[Address(RVA = "0xE2AB10", Offset = "0xE2AB10", VA = "0xE2AB10", Slot = "25")]
	public void OnDialogAdvance(InputAction.CallbackContext context)
	{
	}

	[Token(Token = "0x600013B")]
	[Address(RVA = "0xE2AB70", Offset = "0xE2AB70", VA = "0xE2AB70")]
	public void OnAnimateLeftHand(InputAction.CallbackContext context)
	{
	}

	[Token(Token = "0x600013C")]
	[Address(RVA = "0xE2ABD0", Offset = "0xE2ABD0", VA = "0xE2ABD0", Slot = "26")]
	public void OnAnimateIndexLeft(InputAction.CallbackContext context)
	{
	}

	[Token(Token = "0x600013D")]
	[Address(RVA = "0xE2AC30", Offset = "0xE2AC30", VA = "0xE2AC30", Slot = "27")]
	public void OnAnimateFingersLeft(InputAction.CallbackContext context)
	{
	}

	[Token(Token = "0x600013E")]
	[Address(RVA = "0xE2AC90", Offset = "0xE2AC90", VA = "0xE2AC90", Slot = "28")]
	public void OnAnimateThumbLeft(InputAction.CallbackContext context)
	{
	}

	[Token(Token = "0x600013F")]
	[Address(RVA = "0xE2ACF0", Offset = "0xE2ACF0", VA = "0xE2ACF0", Slot = "19")]
	public void OnSwitchRod(InputAction.CallbackContext context)
	{
	}

	[Token(Token = "0x6000140")]
	[Address(RVA = "0xE2ACF4", Offset = "0xE2ACF4", VA = "0xE2ACF4")]
	public CraneController()
	{
	}
}
[Token(Token = "0x200004D")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x9E6290", Offset = "0x9E6290")]
public class CursorController : MonoBehaviour
{
	[Token(Token = "0x4000247")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ObiRopeCursor cursor;

	[Token(Token = "0x4000248")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ObiRope rope;

	[Token(Token = "0x4000249")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float minLength;

	[Token(Token = "0x400024A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float speed;

	[Token(Token = "0x6000141")]
	[Address(RVA = "0xE2AE38", Offset = "0xE2AE38", VA = "0xE2AE38")]
	private void Start()
	{
	}

	[Token(Token = "0x6000142")]
	[Address(RVA = "0xE2AEBC", Offset = "0xE2AEBC", VA = "0xE2AEBC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000143")]
	[Address(RVA = "0xE2B144", Offset = "0xE2B144", VA = "0xE2B144")]
	public CursorController()
	{
	}
}
[Token(Token = "0x200004E")]
public class GrapplingHook : MonoBehaviour
{
	[Token(Token = "0x200033E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E7B10", Offset = "0x9E7B10")]
	private sealed class <AttachHook>d__13 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400173A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400173B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400173C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GrapplingHook <>4__this;

		[Token(Token = "0x170001BE")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001782")]
			[Address(RVA = "0xE2F860", Offset = "0xE2F860", VA = "0xE2F860", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001BF")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001784")]
			[Address(RVA = "0xE2F8C8", Offset = "0xE2F8C8", VA = "0xE2F8C8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600177F")]
		[Address(RVA = "0xE2F080", Offset = "0xE2F080", VA = "0xE2F080")]
		[DebuggerHidden]
		public <AttachHook>d__13(int <>1__state)
		{
		}

		[Token(Token = "0x6001780")]
		[Address(RVA = "0xE2F238", Offset = "0xE2F238", VA = "0xE2F238", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001781")]
		[Address(RVA = "0xE2F23C", Offset = "0xE2F23C", VA = "0xE2F23C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001783")]
		[Address(RVA = "0xE2F868", Offset = "0xE2F868", VA = "0xE2F868", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400024B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ObiSolver solver;

	[Token(Token = "0x400024C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ObiCollider character;

	[Token(Token = "0x400024D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float hookExtendRetractSpeed;

	[Token(Token = "0x400024E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Material material;

	[Token(Token = "0x400024F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ObiRopeSection section;

	[Token(Token = "0x4000250")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private ObiRope rope;

	[Token(Token = "0x4000251")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private ObiRopeBlueprint blueprint;

	[Token(Token = "0x4000252")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private ObiRopeExtrudedRenderer ropeRenderer;

	[Token(Token = "0x4000253")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private ObiRopeCursor cursor;

	[Token(Token = "0x4000254")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private RaycastHit hookAttachment;

	[Token(Token = "0x6000144")]
	[Address(RVA = "0xE2EBE4", Offset = "0xE2EBE4", VA = "0xE2EBE4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000145")]
	[Address(RVA = "0xE2EDC0", Offset = "0xE2EDC0", VA = "0xE2EDC0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000146")]
	[Address(RVA = "0xE2EE2C", Offset = "0xE2EE2C", VA = "0xE2EE2C")]
	private void LaunchHook()
	{
	}

	[Token(Token = "0x6000147")]
	[Address(RVA = "0xE2F004", Offset = "0xE2F004", VA = "0xE2F004")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9EE348", Offset = "0x9EE348")]
	private IEnumerator AttachHook()
	{
		return null;
	}

	[Token(Token = "0x6000148")]
	[Address(RVA = "0xE2F0AC", Offset = "0xE2F0AC", VA = "0xE2F0AC")]
	private void DetachHook()
	{
	}

	[Token(Token = "0x6000149")]
	[Address(RVA = "0xE2F128", Offset = "0xE2F128", VA = "0xE2F128")]
	private void Update()
	{
	}

	[Token(Token = "0x600014A")]
	[Address(RVA = "0xE2F228", Offset = "0xE2F228", VA = "0xE2F228")]
	public GrapplingHook()
	{
	}
}
[Token(Token = "0x200004F")]
public class RobotArmController : MonoBehaviour
{
	[Token(Token = "0x4000255")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform section1;

	[Token(Token = "0x4000256")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform section2;

	[Token(Token = "0x4000257")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform actuator;

	[Token(Token = "0x4000258")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float speed;

	[Token(Token = "0x600014B")]
	[Address(RVA = "0x155A720", Offset = "0x155A720", VA = "0x155A720")]
	private void Update()
	{
	}

	[Token(Token = "0x600014C")]
	[Address(RVA = "0x155A954", Offset = "0x155A954", VA = "0x155A954")]
	public RobotArmController()
	{
	}
}
[Token(Token = "0x2000050")]
public class RopeNet : MonoBehaviour
{
	[Token(Token = "0x4000259")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material material;

	[Token(Token = "0x400025A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector2Int resolution;

	[Token(Token = "0x400025B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector2 size;

	[Token(Token = "0x400025C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float nodeSize;

	[Token(Token = "0x600014D")]
	[Address(RVA = "0xE3DCD8", Offset = "0xE3DCD8", VA = "0xE3DCD8")]
	private void Awake()
	{
	}

	[Token(Token = "0x600014E")]
	[Address(RVA = "0xE3DED4", Offset = "0xE3DED4", VA = "0xE3DED4")]
	private void CreateNet(ObiSolver solver)
	{
	}

	[Token(Token = "0x600014F")]
	[Address(RVA = "0xE3EC14", Offset = "0xE3EC14", VA = "0xE3EC14")]
	private void PinRope(ObiRope rope, ObiCollider bodyA, ObiCollider bodyB, Vector3 offsetA, Vector3 offsetB)
	{
	}

	[Token(Token = "0x6000150")]
	[Address(RVA = "0xE3E76C", Offset = "0xE3E76C", VA = "0xE3E76C")]
	private ObiRope CreateRope(Vector3 pointA, Vector3 pointB)
	{
		return null;
	}

	[Token(Token = "0x6000151")]
	[Address(RVA = "0xE3EE70", Offset = "0xE3EE70", VA = "0xE3EE70")]
	public RopeNet()
	{
	}
}
[Token(Token = "0x2000051")]
public class RopeTenser : MonoBehaviour
{
	[Token(Token = "0x400025D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float force;

	[Token(Token = "0x6000152")]
	[Address(RVA = "0xE3EEEC", Offset = "0xE3EEEC", VA = "0xE3EEEC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000153")]
	[Address(RVA = "0xE3EF8C", Offset = "0xE3EF8C", VA = "0xE3EF8C")]
	public RopeTenser()
	{
	}
}
[Token(Token = "0x2000052")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x9E62F4", Offset = "0x9E62F4")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x9E62F4", Offset = "0x9E62F4")]
public class RopeTensionColorizer : MonoBehaviour
{
	[Token(Token = "0x400025E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float minTension;

	[Token(Token = "0x400025F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float maxTension;

	[Token(Token = "0x4000260")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Color normalColor;

	[Token(Token = "0x4000261")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Color tensionColor;

	[Token(Token = "0x4000262")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public RopeTenser tenser;

	[Token(Token = "0x4000263")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float tenserThreshold;

	[Token(Token = "0x4000264")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float tenserMax;

	[Token(Token = "0x4000265")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private ObiRope rope;

	[Token(Token = "0x4000266")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Material localMaterial;

	[Token(Token = "0x6000154")]
	[Address(RVA = "0xE3EF9C", Offset = "0xE3EF9C", VA = "0xE3EF9C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000155")]
	[Address(RVA = "0xE3F030", Offset = "0xE3F030", VA = "0xE3F030")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000156")]
	[Address(RVA = "0xE3F09C", Offset = "0xE3F09C", VA = "0xE3F09C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000157")]
	[Address(RVA = "0xE3F22C", Offset = "0xE3F22C", VA = "0xE3F22C")]
	public RopeTensionColorizer()
	{
	}
}
[Token(Token = "0x2000053")]
public class RuntimeRopeGenerator
{
	[Token(Token = "0x200033F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E7B20", Offset = "0x9E7B20")]
	private sealed class <MakeRope>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400173D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400173E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x170001C0")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001788")]
			[Address(RVA = "0xE3F7A0", Offset = "0xE3F7A0", VA = "0xE3F7A0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001C1")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600178A")]
			[Address(RVA = "0xE3F808", Offset = "0xE3F808", VA = "0xE3F808", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001785")]
		[Address(RVA = "0xE3F6A8", Offset = "0xE3F6A8", VA = "0xE3F6A8")]
		[DebuggerHidden]
		public <MakeRope>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x6001786")]
		[Address(RVA = "0xE3F6F4", Offset = "0xE3F6F4", VA = "0xE3F6F4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001787")]
		[Address(RVA = "0xE3F6F8", Offset = "0xE3F6F8", VA = "0xE3F6F8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001789")]
		[Address(RVA = "0xE3F7A8", Offset = "0xE3F7A8", VA = "0xE3F7A8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000267")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private ObiSolver solver;

	[Token(Token = "0x4000268")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int pinnedParticle;

	[Token(Token = "0x6000158")]
	[Address(RVA = "0xE3F648", Offset = "0xE3F648", VA = "0xE3F648")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9EE3AC", Offset = "0x9EE3AC")]
	public IEnumerator MakeRope(Transform anchoredTo, Vector3 attachmentOffset, float ropeLength)
	{
		return null;
	}

	[Token(Token = "0x6000159")]
	[Address(RVA = "0xE3F6D4", Offset = "0xE3F6D4", VA = "0xE3F6D4")]
	public void AddPendulum(ObiCollider pendulum, Vector3 attachmentOffset)
	{
	}

	[Token(Token = "0x600015A")]
	[Address(RVA = "0xE3F6D8", Offset = "0xE3F6D8", VA = "0xE3F6D8")]
	public void RemovePendulum()
	{
	}

	[Token(Token = "0x600015B")]
	[Address(RVA = "0xE3F6DC", Offset = "0xE3F6DC", VA = "0xE3F6DC")]
	public void ChangeRopeLength(float changeAmount)
	{
	}

	[Token(Token = "0x600015C")]
	[Address(RVA = "0xE3F6E0", Offset = "0xE3F6E0", VA = "0xE3F6E0")]
	private void UpdateTethers()
	{
	}

	[Token(Token = "0x600015D")]
	[Address(RVA = "0xE3F6E4", Offset = "0xE3F6E4", VA = "0xE3F6E4")]
	public RuntimeRopeGenerator()
	{
	}
}
[Token(Token = "0x2000054")]
public class RuntimeRopeGeneratorUse : MonoBehaviour
{
	[Token(Token = "0x2000340")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E7B30", Offset = "0x9E7B30")]
	private sealed class <Start>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400173F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001740")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001741")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RuntimeRopeGeneratorUse <>4__this;

		[Token(Token = "0x170001C2")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600178E")]
			[Address(RVA = "0xE3FA6C", Offset = "0xE3FA6C", VA = "0xE3FA6C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001C3")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001790")]
			[Address(RVA = "0xE3FAD4", Offset = "0xE3FAD4", VA = "0xE3FAD4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600178B")]
		[Address(RVA = "0xE3F88C", Offset = "0xE3F88C", VA = "0xE3F88C")]
		[DebuggerHidden]
		public <Start>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x600178C")]
		[Address(RVA = "0xE3F920", Offset = "0xE3F920", VA = "0xE3F920", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600178D")]
		[Address(RVA = "0xE3F924", Offset = "0xE3F924", VA = "0xE3F924", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600178F")]
		[Address(RVA = "0xE3FA74", Offset = "0xE3FA74", VA = "0xE3FA74", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000269")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ObiCollider pendulum;

	[Token(Token = "0x400026A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private RuntimeRopeGenerator rg;

	[Token(Token = "0x600015E")]
	[Address(RVA = "0xE3F810", Offset = "0xE3F810", VA = "0xE3F810")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9EE410", Offset = "0x9EE410")]
	public IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x600015F")]
	[Address(RVA = "0xE3F8B8", Offset = "0xE3F8B8", VA = "0xE3F8B8")]
	public void Update()
	{
	}

	[Token(Token = "0x6000160")]
	[Address(RVA = "0xE3F918", Offset = "0xE3F918", VA = "0xE3F918")]
	public RuntimeRopeGeneratorUse()
	{
	}
}
[Token(Token = "0x2000055")]
[ExecuteInEditMode]
public class SpiralCurve : MonoBehaviour
{
	[Token(Token = "0x400026B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float radius;

	[Token(Token = "0x400026C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float radialStep;

	[Token(Token = "0x400026D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float heightStep;

	[Token(Token = "0x400026E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float points;

	[Token(Token = "0x400026F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float rotationalMass;

	[Token(Token = "0x4000270")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float thickness;

	[Token(Token = "0x6000161")]
	[Address(RVA = "0xE41714", Offset = "0xE41714", VA = "0xE41714")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000162")]
	[Address(RVA = "0xE41718", Offset = "0xE41718", VA = "0xE41718")]
	public void Generate()
	{
	}

	[Token(Token = "0x6000163")]
	[Address(RVA = "0xE41B14", Offset = "0xE41B14", VA = "0xE41B14")]
	public SpiralCurve()
	{
	}
}
[Token(Token = "0x2000056")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x9E6390", Offset = "0x9E6390")]
public class WrapRopeGameController : MonoBehaviour
{
	[Token(Token = "0x4000271")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ObiSolver solver;

	[Token(Token = "0x4000272")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Wrappable[] wrappables;

	[Token(Token = "0x4000273")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public UnityEvent onFinish;

	[Token(Token = "0x6000164")]
	[Address(RVA = "0x1480C68", Offset = "0x1480C68", VA = "0x1480C68")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000165")]
	[Address(RVA = "0x1480CC8", Offset = "0x1480CC8", VA = "0x1480CC8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000166")]
	[Address(RVA = "0x1480D54", Offset = "0x1480D54", VA = "0x1480D54")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000167")]
	[Address(RVA = "0x1480DE0", Offset = "0x1480DE0", VA = "0x1480DE0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000168")]
	[Address(RVA = "0x1480E54", Offset = "0x1480E54", VA = "0x1480E54")]
	private void Solver_OnCollision(ObiSolver s, ObiSolver.ObiCollisionEventArgs e)
	{
	}

	[Token(Token = "0x6000169")]
	[Address(RVA = "0x1481244", Offset = "0x1481244", VA = "0x1481244")]
	public WrapRopeGameController()
	{
	}
}
[Token(Token = "0x2000057")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x9E63F4", Offset = "0x9E63F4")]
public class WrapRopePlayerController : MonoBehaviour
{
	[Token(Token = "0x4000274")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float acceleration;

	[Token(Token = "0x4000275")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Rigidbody rb;

	[Token(Token = "0x600016A")]
	[Address(RVA = "0x14812B8", Offset = "0x14812B8", VA = "0x14812B8")]
	private void Awake()
	{
	}

	[Token(Token = "0x600016B")]
	[Address(RVA = "0x1481318", Offset = "0x1481318", VA = "0x1481318")]
	private void Update()
	{
	}

	[Token(Token = "0x600016C")]
	[Address(RVA = "0x14815D8", Offset = "0x14815D8", VA = "0x14815D8")]
	public WrapRopePlayerController()
	{
	}
}
[Token(Token = "0x2000058")]
public class Wrappable : MonoBehaviour
{
	[Token(Token = "0x4000276")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool wrapped;

	[Token(Token = "0x4000277")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Color normalColor;

	[Token(Token = "0x4000278")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Color wrappedColor;

	[Token(Token = "0x4000279")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Material localMaterial;

	[Token(Token = "0x600016D")]
	[Address(RVA = "0x14815E8", Offset = "0x14815E8", VA = "0x14815E8")]
	public void Awake()
	{
	}

	[Token(Token = "0x600016E")]
	[Address(RVA = "0x1481658", Offset = "0x1481658", VA = "0x1481658")]
	public void OnDestroy()
	{
	}

	[Token(Token = "0x600016F")]
	[Address(RVA = "0x14811E8", Offset = "0x14811E8", VA = "0x14811E8")]
	public void Reset()
	{
	}

	[Token(Token = "0x6000170")]
	[Address(RVA = "0x1481214", Offset = "0x1481214", VA = "0x1481214")]
	public void SetWrapped()
	{
	}

	[Token(Token = "0x6000171")]
	[Address(RVA = "0x14816C4", Offset = "0x14816C4", VA = "0x14816C4")]
	public bool IsWrapped()
	{
		return default(bool);
	}

	[Token(Token = "0x6000172")]
	[Address(RVA = "0x14816CC", Offset = "0x14816CC", VA = "0x14816CC")]
	public Wrappable()
	{
	}
}
[Token(Token = "0x2000059")]
[DisallowMultipleComponent]
public class Outline : MonoBehaviour
{
	[Token(Token = "0x2000341")]
	public enum Mode
	{
		[Token(Token = "0x4001743")]
		OutlineAll,
		[Token(Token = "0x4001744")]
		OutlineVisible,
		[Token(Token = "0x4001745")]
		OutlineHidden,
		[Token(Token = "0x4001746")]
		OutlineAndSilhouette,
		[Token(Token = "0x4001747")]
		SilhouetteOnly
	}

	[Serializable]
	[Token(Token = "0x2000342")]
	private class ListVector3
	{
		[Token(Token = "0x4001748")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<Vector3> data;

		[Token(Token = "0x6001791")]
		[Address(RVA = "0xF510EC", Offset = "0xF510EC", VA = "0xF510EC")]
		public ListVector3()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000343")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E7B40", Offset = "0x9E7B40")]
	private sealed class <>c
	{
		[Token(Token = "0x4001749")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x400174A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<Vector3, int, KeyValuePair<Vector3, int>> <>9__30_0;

		[Token(Token = "0x400174B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Func<KeyValuePair<Vector3, int>, Vector3> <>9__30_1;

		[Token(Token = "0x6001793")]
		[Address(RVA = "0xF5129C", Offset = "0xF5129C", VA = "0xF5129C")]
		public <>c()
		{
		}

		[Token(Token = "0x6001794")]
		[Address(RVA = "0xF512A4", Offset = "0xF512A4", VA = "0xF512A4")]
		internal KeyValuePair<Vector3, int> <SmoothNormals>b__30_0(Vector3 vertex, int index)
		{
			return default(KeyValuePair<Vector3, int>);
		}

		[Token(Token = "0x6001795")]
		[Address(RVA = "0xF51334", Offset = "0xF51334", VA = "0xF51334")]
		internal Vector3 <SmoothNormals>b__30_1(KeyValuePair<Vector3, int> pair)
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x400027A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static HashSet<Mesh> registeredMeshes;

	[Token(Token = "0x400027B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Mode outlineMode;

	[Token(Token = "0x400027C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private Color outlineColor;

	[Token(Token = "0x400027D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9E8754", Offset = "0x9E8754")]
	private float outlineWidth;

	[Token(Token = "0x400027E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9E8794", Offset = "0x9E8794")]
	[SerializeField]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E8794", Offset = "0x9E8794")]
	private bool precomputeOutline;

	[Token(Token = "0x400027F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	[HideInInspector]
	private List<Mesh> bakeKeys;

	[Token(Token = "0x4000280")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	[HideInInspector]
	private List<ListVector3> bakeValues;

	[Token(Token = "0x4000281")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Renderer[] renderers;

	[Token(Token = "0x4000282")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Material outlineMaskMaterial;

	[Token(Token = "0x4000283")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Material outlineFillMaterial;

	[Token(Token = "0x4000284")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool needsUpdate;

	[Token(Token = "0x1700000B")]
	public Mode OutlineMode
	{
		[Token(Token = "0x6000173")]
		[Address(RVA = "0xF4FB74", Offset = "0xF4FB74", VA = "0xF4FB74")]
		get
		{
			return default(Mode);
		}
		[Token(Token = "0x6000174")]
		[Address(RVA = "0xF4FB7C", Offset = "0xF4FB7C", VA = "0xF4FB7C")]
		set
		{
		}
	}

	[Token(Token = "0x1700000C")]
	public Color OutlineColor
	{
		[Token(Token = "0x6000175")]
		[Address(RVA = "0xF4FB8C", Offset = "0xF4FB8C", VA = "0xF4FB8C")]
		get
		{
			return default(Color);
		}
		[Token(Token = "0x6000176")]
		[Address(RVA = "0xF4FB98", Offset = "0xF4FB98", VA = "0xF4FB98")]
		set
		{
		}
	}

	[Token(Token = "0x1700000D")]
	public float OutlineWidth
	{
		[Token(Token = "0x6000177")]
		[Address(RVA = "0xF4FBAC", Offset = "0xF4FBAC", VA = "0xF4FBAC")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000178")]
		[Address(RVA = "0xF4FBB4", Offset = "0xF4FBB4", VA = "0xF4FBB4")]
		set
		{
		}
	}

	[Token(Token = "0x6000179")]
	[Address(RVA = "0xF4FBC4", Offset = "0xF4FBC4", VA = "0xF4FBC4")]
	private void Awake()
	{
	}

	[Token(Token = "0x600017A")]
	[Address(RVA = "0xF4FFD4", Offset = "0xF4FFD4", VA = "0xF4FFD4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600017B")]
	[Address(RVA = "0xF500E4", Offset = "0xF500E4", VA = "0xF500E4")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x600017C")]
	[Address(RVA = "0xF50360", Offset = "0xF50360", VA = "0xF50360")]
	private void Update()
	{
	}

	[Token(Token = "0x600017D")]
	[Address(RVA = "0xF5052C", Offset = "0xF5052C", VA = "0xF5052C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600017E")]
	[Address(RVA = "0xF5063C", Offset = "0xF5063C", VA = "0xF5063C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600017F")]
	[Address(RVA = "0xF501BC", Offset = "0xF501BC", VA = "0xF501BC")]
	private void Bake()
	{
	}

	[Token(Token = "0x6000180")]
	[Address(RVA = "0xF4FD20", Offset = "0xF4FD20", VA = "0xF4FD20")]
	private void LoadSmoothNormals()
	{
	}

	[Token(Token = "0x6000181")]
	[Address(RVA = "0xF506B4", Offset = "0xF506B4", VA = "0xF506B4")]
	private List<Vector3> SmoothNormals(Mesh mesh)
	{
		return null;
	}

	[Token(Token = "0x6000182")]
	[Address(RVA = "0xF50374", Offset = "0xF50374", VA = "0xF50374")]
	private void UpdateMaterialProperties()
	{
	}

	[Token(Token = "0x6000183")]
	[Address(RVA = "0xF510F4", Offset = "0xF510F4", VA = "0xF510F4")]
	public Outline()
	{
	}
}
[Token(Token = "0x200005A")]
public class BonesOnlyBlendSystem : BlendSystem
{
	[Token(Token = "0x6000185")]
	[Address(RVA = "0xE24D34", Offset = "0xE24D34", VA = "0xE24D34", Slot = "6")]
	public override void OnVariableChanged()
	{
	}

	[Token(Token = "0x6000186")]
	[Address(RVA = "0xE24D40", Offset = "0xE24D40", VA = "0xE24D40")]
	public BonesOnlyBlendSystem()
	{
	}
}
[Serializable]
[Token(Token = "0x200005B")]
public class GestureInstance
{
	[Token(Token = "0x4000285")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	public string gesture;

	[Token(Token = "0x4000286")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public AnimationClip clip;

	[Token(Token = "0x4000287")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	public string triggerName;

	[Token(Token = "0x6000187")]
	[Address(RVA = "0xE2EAC4", Offset = "0xE2EAC4", VA = "0xE2EAC4")]
	public GestureInstance(string gesture, AnimationClip clip, string triggerName)
	{
	}

	[Token(Token = "0x6000188")]
	[Address(RVA = "0xE2EB28", Offset = "0xE2EB28", VA = "0xE2EB28")]
	public bool IsValid(Animator animator)
	{
		return default(bool);
	}
}
[Token(Token = "0x200005C")]
public class MenuSceneLoader : MonoBehaviour
{
	[Token(Token = "0x4000288")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject menuUI;

	[Token(Token = "0x4000289")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject m_Go;

	[Token(Token = "0x6000189")]
	[Address(RVA = "0xF4B910", Offset = "0xF4B910", VA = "0xF4B910")]
	private void Awake()
	{
	}

	[Token(Token = "0x600018A")]
	[Address(RVA = "0xF4B9E0", Offset = "0xF4B9E0", VA = "0xF4B9E0")]
	public MenuSceneLoader()
	{
	}
}
[Token(Token = "0x200005D")]
public class PauseMenu : MonoBehaviour
{
	[Token(Token = "0x400028A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Toggle m_MenuToggle;

	[Token(Token = "0x400028B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float m_TimeScaleRef;

	[Token(Token = "0x400028C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float m_VolumeRef;

	[Token(Token = "0x400028D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool m_Paused;

	[Token(Token = "0x600018B")]
	[Address(RVA = "0xF520B0", Offset = "0xF520B0", VA = "0xF520B0")]
	private void Awake()
	{
	}

	[Token(Token = "0x600018C")]
	[Address(RVA = "0xF52110", Offset = "0xF52110", VA = "0xF52110")]
	private void MenuOn()
	{
	}

	[Token(Token = "0x600018D")]
	[Address(RVA = "0xF52164", Offset = "0xF52164", VA = "0xF52164")]
	public void MenuOff()
	{
	}

	[Token(Token = "0x600018E")]
	[Address(RVA = "0xF5219C", Offset = "0xF5219C", VA = "0xF5219C")]
	public void OnMenuStatusChange()
	{
	}

	[Token(Token = "0x600018F")]
	[Address(RVA = "0xF52204", Offset = "0xF52204", VA = "0xF52204")]
	public PauseMenu()
	{
	}
}
[Token(Token = "0x200005E")]
public class SceneAndURLLoader : MonoBehaviour
{
	[Token(Token = "0x400028E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private PauseMenu m_PauseMenu;

	[Token(Token = "0x6000190")]
	[Address(RVA = "0xE3FADC", Offset = "0xE3FADC", VA = "0xE3FADC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000191")]
	[Address(RVA = "0xE3FB3C", Offset = "0xE3FB3C", VA = "0xE3FB3C")]
	public void SceneLoad(string sceneName)
	{
	}

	[Token(Token = "0x6000192")]
	[Address(RVA = "0xE3FBC4", Offset = "0xE3FBC4", VA = "0xE3FBC4")]
	public void LoadURL(string url)
	{
	}

	[Token(Token = "0x6000193")]
	[Address(RVA = "0xE3FBD0", Offset = "0xE3FBD0", VA = "0xE3FBD0")]
	public SceneAndURLLoader()
	{
	}
}
[Token(Token = "0x200005F")]
public class CameraSwitch : MonoBehaviour
{
	[Token(Token = "0x400028F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] objects;

	[Token(Token = "0x4000290")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text text;

	[Token(Token = "0x4000291")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int m_CurrentActiveObject;

	[Token(Token = "0x6000194")]
	[Address(RVA = "0xE291A8", Offset = "0xE291A8", VA = "0xE291A8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000195")]
	[Address(RVA = "0xE2921C", Offset = "0xE2921C", VA = "0xE2921C")]
	public void NextCamera()
	{
	}

	[Token(Token = "0x6000196")]
	[Address(RVA = "0xE292F4", Offset = "0xE292F4", VA = "0xE292F4")]
	public CameraSwitch()
	{
	}
}
[Token(Token = "0x2000060")]
public class LevelReset : MonoBehaviour, IPointerClickHandler, IEventSystemHandler
{
	[Token(Token = "0x6000197")]
	[Address(RVA = "0xF3CDA4", Offset = "0xF3CDA4", VA = "0xF3CDA4", Slot = "4")]
	public void OnPointerClick(PointerEventData data)
	{
	}

	[Token(Token = "0x6000198")]
	[Address(RVA = "0xF3CE28", Offset = "0xF3CE28", VA = "0xF3CE28")]
	public LevelReset()
	{
	}
}
[Token(Token = "0x2000061")]
public class XRIDefaultInputActions : IInputActionCollection, IEnumerable<InputAction>, IEnumerable, IDisposable
{
	[Token(Token = "0x2000344")]
	public struct XRIHMDActions
	{
		[Token(Token = "0x400174C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private XRIDefaultInputActions m_Wrapper;

		[Token(Token = "0x170001C4")]
		public InputAction Position
		{
			[Token(Token = "0x6001797")]
			[Address(RVA = "0x1482750", Offset = "0x1482750", VA = "0x1482750")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001C5")]
		public InputAction Rotation
		{
			[Token(Token = "0x6001798")]
			[Address(RVA = "0x148276C", Offset = "0x148276C", VA = "0x148276C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001C6")]
		public bool enabled
		{
			[Token(Token = "0x600179C")]
			[Address(RVA = "0x14827F4", Offset = "0x14827F4", VA = "0x14827F4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001796")]
		[Address(RVA = "0x1482748", Offset = "0x1482748", VA = "0x1482748")]
		public XRIHMDActions(XRIDefaultInputActions wrapper)
		{
		}

		[Token(Token = "0x6001799")]
		[Address(RVA = "0x1482788", Offset = "0x1482788", VA = "0x1482788")]
		public InputActionMap Get()
		{
			return null;
		}

		[Token(Token = "0x600179A")]
		[Address(RVA = "0x14827A4", Offset = "0x14827A4", VA = "0x14827A4")]
		public void Enable()
		{
		}

		[Token(Token = "0x600179B")]
		[Address(RVA = "0x14827CC", Offset = "0x14827CC", VA = "0x14827CC")]
		public void Disable()
		{
		}

		[Token(Token = "0x600179D")]
		[Address(RVA = "0x148281C", Offset = "0x148281C", VA = "0x148281C")]
		public static implicit operator InputActionMap(XRIHMDActions set)
		{
			return null;
		}

		[Token(Token = "0x600179E")]
		[Address(RVA = "0x1482834", Offset = "0x1482834", VA = "0x1482834")]
		public void SetCallbacks(IXRIHMDActions instance)
		{
		}
	}

	[Token(Token = "0x2000345")]
	public struct XRILeftHandActions
	{
		[Token(Token = "0x400174D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private XRIDefaultInputActions m_Wrapper;

		[Token(Token = "0x170001C7")]
		public InputAction Position
		{
			[Token(Token = "0x60017A0")]
			[Address(RVA = "0x1483028", Offset = "0x1483028", VA = "0x1483028")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001C8")]
		public InputAction Rotation
		{
			[Token(Token = "0x60017A1")]
			[Address(RVA = "0x1483044", Offset = "0x1483044", VA = "0x1483044")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001C9")]
		public InputAction Select
		{
			[Token(Token = "0x60017A2")]
			[Address(RVA = "0x1483060", Offset = "0x1483060", VA = "0x1483060")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001CA")]
		public InputAction Activate
		{
			[Token(Token = "0x60017A3")]
			[Address(RVA = "0x148307C", Offset = "0x148307C", VA = "0x148307C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001CB")]
		public InputAction UIPress
		{
			[Token(Token = "0x60017A4")]
			[Address(RVA = "0x1483098", Offset = "0x1483098", VA = "0x1483098")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001CC")]
		public InputAction HapticDevice
		{
			[Token(Token = "0x60017A5")]
			[Address(RVA = "0x14830B4", Offset = "0x14830B4", VA = "0x14830B4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001CD")]
		public InputAction TeleportSelect
		{
			[Token(Token = "0x60017A6")]
			[Address(RVA = "0x14830D0", Offset = "0x14830D0", VA = "0x14830D0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001CE")]
		public InputAction TeleportModeActivate
		{
			[Token(Token = "0x60017A7")]
			[Address(RVA = "0x14830EC", Offset = "0x14830EC", VA = "0x14830EC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001CF")]
		public InputAction TeleportModeCancel
		{
			[Token(Token = "0x60017A8")]
			[Address(RVA = "0x1483108", Offset = "0x1483108", VA = "0x1483108")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001D0")]
		public InputAction Turn
		{
			[Token(Token = "0x60017A9")]
			[Address(RVA = "0x1483124", Offset = "0x1483124", VA = "0x1483124")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001D1")]
		public InputAction ThumbUp
		{
			[Token(Token = "0x60017AA")]
			[Address(RVA = "0x1483140", Offset = "0x1483140", VA = "0x1483140")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001D2")]
		public InputAction Move
		{
			[Token(Token = "0x60017AB")]
			[Address(RVA = "0x148315C", Offset = "0x148315C", VA = "0x148315C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001D3")]
		public InputAction RotateAnchor
		{
			[Token(Token = "0x60017AC")]
			[Address(RVA = "0x1483178", Offset = "0x1483178", VA = "0x1483178")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001D4")]
		public InputAction TranslateAnchor
		{
			[Token(Token = "0x60017AD")]
			[Address(RVA = "0x1483194", Offset = "0x1483194", VA = "0x1483194")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001D5")]
		public InputAction Reset
		{
			[Token(Token = "0x60017AE")]
			[Address(RVA = "0x14831B0", Offset = "0x14831B0", VA = "0x14831B0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001D6")]
		public InputAction SwitchRod
		{
			[Token(Token = "0x60017AF")]
			[Address(RVA = "0x14831CC", Offset = "0x14831CC", VA = "0x14831CC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001D7")]
		public InputAction AutoReel
		{
			[Token(Token = "0x60017B0")]
			[Address(RVA = "0x14831E8", Offset = "0x14831E8", VA = "0x14831E8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001D8")]
		public InputAction Boost
		{
			[Token(Token = "0x60017B1")]
			[Address(RVA = "0x1483204", Offset = "0x1483204", VA = "0x1483204")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001D9")]
		public InputAction GrabHandle
		{
			[Token(Token = "0x60017B2")]
			[Address(RVA = "0x1483220", Offset = "0x1483220", VA = "0x1483220")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001DA")]
		public InputAction Menu
		{
			[Token(Token = "0x60017B3")]
			[Address(RVA = "0x148323C", Offset = "0x148323C", VA = "0x148323C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001DB")]
		public InputAction Pickup
		{
			[Token(Token = "0x60017B4")]
			[Address(RVA = "0x1483258", Offset = "0x1483258", VA = "0x1483258")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001DC")]
		public InputAction DialogAdvance
		{
			[Token(Token = "0x60017B5")]
			[Address(RVA = "0x1483274", Offset = "0x1483274", VA = "0x1483274")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001DD")]
		public InputAction AnimateIndexLeft
		{
			[Token(Token = "0x60017B6")]
			[Address(RVA = "0x1483290", Offset = "0x1483290", VA = "0x1483290")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001DE")]
		public InputAction AnimateFingersLeft
		{
			[Token(Token = "0x60017B7")]
			[Address(RVA = "0x14832AC", Offset = "0x14832AC", VA = "0x14832AC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001DF")]
		public InputAction AnimateThumbLeft
		{
			[Token(Token = "0x60017B8")]
			[Address(RVA = "0x14832C8", Offset = "0x14832C8", VA = "0x14832C8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001E0")]
		public bool enabled
		{
			[Token(Token = "0x60017BC")]
			[Address(RVA = "0x1483350", Offset = "0x1483350", VA = "0x1483350")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600179F")]
		[Address(RVA = "0x1483020", Offset = "0x1483020", VA = "0x1483020")]
		public XRILeftHandActions(XRIDefaultInputActions wrapper)
		{
		}

		[Token(Token = "0x60017B9")]
		[Address(RVA = "0x14832E4", Offset = "0x14832E4", VA = "0x14832E4")]
		public InputActionMap Get()
		{
			return null;
		}

		[Token(Token = "0x60017BA")]
		[Address(RVA = "0x1483300", Offset = "0x1483300", VA = "0x1483300")]
		public void Enable()
		{
		}

		[Token(Token = "0x60017BB")]
		[Address(RVA = "0x1483328", Offset = "0x1483328", VA = "0x1483328")]
		public void Disable()
		{
		}

		[Token(Token = "0x60017BD")]
		[Address(RVA = "0x1483378", Offset = "0x1483378", VA = "0x1483378")]
		public static implicit operator InputActionMap(XRILeftHandActions set)
		{
			return null;
		}

		[Token(Token = "0x60017BE")]
		[Address(RVA = "0x1483390", Offset = "0x1483390", VA = "0x1483390")]
		public void SetCallbacks(IXRILeftHandActions instance)
		{
		}
	}

	[Token(Token = "0x2000346")]
	public struct XRIRightHandActions
	{
		[Token(Token = "0x400174E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private XRIDefaultInputActions m_Wrapper;

		[Token(Token = "0x170001E1")]
		public InputAction Position
		{
			[Token(Token = "0x60017C0")]
			[Address(RVA = "0x1488FA4", Offset = "0x1488FA4", VA = "0x1488FA4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001E2")]
		public InputAction Rotation
		{
			[Token(Token = "0x60017C1")]
			[Address(RVA = "0x1488FC0", Offset = "0x1488FC0", VA = "0x1488FC0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001E3")]
		public InputAction Select
		{
			[Token(Token = "0x60017C2")]
			[Address(RVA = "0x1488FDC", Offset = "0x1488FDC", VA = "0x1488FDC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001E4")]
		public InputAction Activate
		{
			[Token(Token = "0x60017C3")]
			[Address(RVA = "0x1488FF8", Offset = "0x1488FF8", VA = "0x1488FF8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001E5")]
		public InputAction UIPress
		{
			[Token(Token = "0x60017C4")]
			[Address(RVA = "0x1489014", Offset = "0x1489014", VA = "0x1489014")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001E6")]
		public InputAction HapticDevice
		{
			[Token(Token = "0x60017C5")]
			[Address(RVA = "0x1489030", Offset = "0x1489030", VA = "0x1489030")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001E7")]
		public InputAction TeleportSelect
		{
			[Token(Token = "0x60017C6")]
			[Address(RVA = "0x148904C", Offset = "0x148904C", VA = "0x148904C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001E8")]
		public InputAction TeleportModeActivate
		{
			[Token(Token = "0x60017C7")]
			[Address(RVA = "0x1489068", Offset = "0x1489068", VA = "0x1489068")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001E9")]
		public InputAction TeleportModeCancel
		{
			[Token(Token = "0x60017C8")]
			[Address(RVA = "0x1489084", Offset = "0x1489084", VA = "0x1489084")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001EA")]
		public InputAction Turn
		{
			[Token(Token = "0x60017C9")]
			[Address(RVA = "0x14890A0", Offset = "0x14890A0", VA = "0x14890A0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001EB")]
		public InputAction ThumbUp
		{
			[Token(Token = "0x60017CA")]
			[Address(RVA = "0x14890BC", Offset = "0x14890BC", VA = "0x14890BC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001EC")]
		public InputAction Move
		{
			[Token(Token = "0x60017CB")]
			[Address(RVA = "0x14890D8", Offset = "0x14890D8", VA = "0x14890D8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001ED")]
		public InputAction RotateAnchor
		{
			[Token(Token = "0x60017CC")]
			[Address(RVA = "0x14890F4", Offset = "0x14890F4", VA = "0x14890F4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001EE")]
		public InputAction TranslateAnchor
		{
			[Token(Token = "0x60017CD")]
			[Address(RVA = "0x1489110", Offset = "0x1489110", VA = "0x1489110")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001EF")]
		public InputAction Reset
		{
			[Token(Token = "0x60017CE")]
			[Address(RVA = "0x148912C", Offset = "0x148912C", VA = "0x148912C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001F0")]
		public InputAction SwitchRod
		{
			[Token(Token = "0x60017CF")]
			[Address(RVA = "0x1489148", Offset = "0x1489148", VA = "0x1489148")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001F1")]
		public InputAction AutoReel
		{
			[Token(Token = "0x60017D0")]
			[Address(RVA = "0x1489164", Offset = "0x1489164", VA = "0x1489164")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001F2")]
		public InputAction Boost
		{
			[Token(Token = "0x60017D1")]
			[Address(RVA = "0x1489180", Offset = "0x1489180", VA = "0x1489180")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001F3")]
		public InputAction GrabHandle
		{
			[Token(Token = "0x60017D2")]
			[Address(RVA = "0x148919C", Offset = "0x148919C", VA = "0x148919C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001F4")]
		public InputAction EditorPause
		{
			[Token(Token = "0x60017D3")]
			[Address(RVA = "0x14891B8", Offset = "0x14891B8", VA = "0x14891B8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001F5")]
		public InputAction Menu
		{
			[Token(Token = "0x60017D4")]
			[Address(RVA = "0x14891D4", Offset = "0x14891D4", VA = "0x14891D4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001F6")]
		public InputAction Pickup
		{
			[Token(Token = "0x60017D5")]
			[Address(RVA = "0x14891F0", Offset = "0x14891F0", VA = "0x14891F0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001F7")]
		public InputAction DialogAdvance
		{
			[Token(Token = "0x60017D6")]
			[Address(RVA = "0x148920C", Offset = "0x148920C", VA = "0x148920C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001F8")]
		public InputAction AnimateIndexRight
		{
			[Token(Token = "0x60017D7")]
			[Address(RVA = "0x1489228", Offset = "0x1489228", VA = "0x1489228")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001F9")]
		public InputAction AnimateFingersRight
		{
			[Token(Token = "0x60017D8")]
			[Address(RVA = "0x1489244", Offset = "0x1489244", VA = "0x1489244")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001FA")]
		public InputAction AnimateThumbRight
		{
			[Token(Token = "0x60017D9")]
			[Address(RVA = "0x1489260", Offset = "0x1489260", VA = "0x1489260")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001FB")]
		public bool enabled
		{
			[Token(Token = "0x60017DD")]
			[Address(RVA = "0x14892E8", Offset = "0x14892E8", VA = "0x14892E8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60017BF")]
		[Address(RVA = "0x1488F9C", Offset = "0x1488F9C", VA = "0x1488F9C")]
		public XRIRightHandActions(XRIDefaultInputActions wrapper)
		{
		}

		[Token(Token = "0x60017DA")]
		[Address(RVA = "0x148927C", Offset = "0x148927C", VA = "0x148927C")]
		public InputActionMap Get()
		{
			return null;
		}

		[Token(Token = "0x60017DB")]
		[Address(RVA = "0x1489298", Offset = "0x1489298", VA = "0x1489298")]
		public void Enable()
		{
		}

		[Token(Token = "0x60017DC")]
		[Address(RVA = "0x14892C0", Offset = "0x14892C0", VA = "0x14892C0")]
		public void Disable()
		{
		}

		[Token(Token = "0x60017DE")]
		[Address(RVA = "0x1489310", Offset = "0x1489310", VA = "0x1489310")]
		public static implicit operator InputActionMap(XRIRightHandActions set)
		{
			return null;
		}

		[Token(Token = "0x60017DF")]
		[Address(RVA = "0x1489328", Offset = "0x1489328", VA = "0x1489328")]
		public void SetCallbacks(IXRIRightHandActions instance)
		{
		}
	}

	[Token(Token = "0x2000347")]
	public interface IXRIHMDActions
	{
		[Token(Token = "0x60017E0")]
		void OnPosition(InputAction.CallbackContext context);

		[Token(Token = "0x60017E1")]
		void OnRotation(InputAction.CallbackContext context);
	}

	[Token(Token = "0x2000348")]
	public interface IXRILeftHandActions
	{
		[Token(Token = "0x60017E2")]
		void OnPosition(InputAction.CallbackContext context);

		[Token(Token = "0x60017E3")]
		void OnRotation(InputAction.CallbackContext context);

		[Token(Token = "0x60017E4")]
		void OnSelect(InputAction.CallbackContext context);

		[Token(Token = "0x60017E5")]
		void OnActivate(InputAction.CallbackContext context);

		[Token(Token = "0x60017E6")]
		void OnUIPress(InputAction.CallbackContext context);

		[Token(Token = "0x60017E7")]
		void OnHapticDevice(InputAction.CallbackContext context);

		[Token(Token = "0x60017E8")]
		void OnTeleportSelect(InputAction.CallbackContext context);

		[Token(Token = "0x60017E9")]
		void OnTeleportModeActivate(InputAction.CallbackContext context);

		[Token(Token = "0x60017EA")]
		void OnTeleportModeCancel(InputAction.CallbackContext context);

		[Token(Token = "0x60017EB")]
		void OnTurn(InputAction.CallbackContext context);

		[Token(Token = "0x60017EC")]
		void OnThumbUp(InputAction.CallbackContext context);

		[Token(Token = "0x60017ED")]
		void OnMove(InputAction.CallbackContext context);

		[Token(Token = "0x60017EE")]
		void OnRotateAnchor(InputAction.CallbackContext context);

		[Token(Token = "0x60017EF")]
		void OnTranslateAnchor(InputAction.CallbackContext context);

		[Token(Token = "0x60017F0")]
		void OnReset(InputAction.CallbackContext context);

		[Token(Token = "0x60017F1")]
		void OnSwitchRod(InputAction.CallbackContext context);

		[Token(Token = "0x60017F2")]
		void OnAutoReel(InputAction.CallbackContext context);

		[Token(Token = "0x60017F3")]
		void OnBoost(InputAction.CallbackContext context);

		[Token(Token = "0x60017F4")]
		void OnGrabHandle(InputAction.CallbackContext context);

		[Token(Token = "0x60017F5")]
		void OnMenu(InputAction.CallbackContext context);

		[Token(Token = "0x60017F6")]
		void OnPickup(InputAction.CallbackContext context);

		[Token(Token = "0x60017F7")]
		void OnDialogAdvance(InputAction.CallbackContext context);

		[Token(Token = "0x60017F8")]
		void OnAnimateIndexLeft(InputAction.CallbackContext context);

		[Token(Token = "0x60017F9")]
		void OnAnimateFingersLeft(InputAction.CallbackContext context);

		[Token(Token = "0x60017FA")]
		void OnAnimateThumbLeft(InputAction.CallbackContext context);
	}

	[Token(Token = "0x2000349")]
	public interface IXRIRightHandActions
	{
		[Token(Token = "0x60017FB")]
		void OnPosition(InputAction.CallbackContext context);

		[Token(Token = "0x60017FC")]
		void OnRotation(InputAction.CallbackContext context);

		[Token(Token = "0x60017FD")]
		void OnSelect(InputAction.CallbackContext context);

		[Token(Token = "0x60017FE")]
		void OnActivate(InputAction.CallbackContext context);

		[Token(Token = "0x60017FF")]
		void OnUIPress(InputAction.CallbackContext context);

		[Token(Token = "0x6001800")]
		void OnHapticDevice(InputAction.CallbackContext context);

		[Token(Token = "0x6001801")]
		void OnTeleportSelect(InputAction.CallbackContext context);

		[Token(Token = "0x6001802")]
		void OnTeleportModeActivate(InputAction.CallbackContext context);

		[Token(Token = "0x6001803")]
		void OnTeleportModeCancel(InputAction.CallbackContext context);

		[Token(Token = "0x6001804")]
		void OnTurn(InputAction.CallbackContext context);

		[Token(Token = "0x6001805")]
		void OnThumbUp(InputAction.CallbackContext context);

		[Token(Token = "0x6001806")]
		void OnMove(InputAction.CallbackContext context);

		[Token(Token = "0x6001807")]
		void OnRotateAnchor(InputAction.CallbackContext context);

		[Token(Token = "0x6001808")]
		void OnTranslateAnchor(InputAction.CallbackContext context);

		[Token(Token = "0x6001809")]
		void OnReset(InputAction.CallbackContext context);

		[Token(Token = "0x600180A")]
		void OnSwitchRod(InputAction.CallbackContext context);

		[Token(Token = "0x600180B")]
		void OnAutoReel(InputAction.CallbackContext context);

		[Token(Token = "0x600180C")]
		void OnBoost(InputAction.CallbackContext context);

		[Token(Token = "0x600180D")]
		void OnGrabHandle(InputAction.CallbackContext context);

		[Token(Token = "0x600180E")]
		void OnEditorPause(InputAction.CallbackContext context);

		[Token(Token = "0x600180F")]
		void OnMenu(InputAction.CallbackContext context);

		[Token(Token = "0x6001810")]
		void OnPickup(InputAction.CallbackContext context);

		[Token(Token = "0x6001811")]
		void OnDialogAdvance(InputAction.CallbackContext context);

		[Token(Token = "0x6001812")]
		void OnAnimateIndexRight(InputAction.CallbackContext context);

		[Token(Token = "0x6001813")]
		void OnAnimateFingersRight(InputAction.CallbackContext context);

		[Token(Token = "0x6001814")]
		void OnAnimateThumbRight(InputAction.CallbackContext context);
	}

	[Token(Token = "0x4000292")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E88A4", Offset = "0x9E88A4")]
	private readonly InputActionAsset <asset>k__BackingField;

	[Token(Token = "0x4000293")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private readonly InputActionMap m_XRIHMD;

	[Token(Token = "0x4000294")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private IXRIHMDActions m_XRIHMDActionsCallbackInterface;

	[Token(Token = "0x4000295")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly InputAction m_XRIHMD_Position;

	[Token(Token = "0x4000296")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly InputAction m_XRIHMD_Rotation;

	[Token(Token = "0x4000297")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly InputActionMap m_XRILeftHand;

	[Token(Token = "0x4000298")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private IXRILeftHandActions m_XRILeftHandActionsCallbackInterface;

	[Token(Token = "0x4000299")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private readonly InputAction m_XRILeftHand_Position;

	[Token(Token = "0x400029A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private readonly InputAction m_XRILeftHand_Rotation;

	[Token(Token = "0x400029B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private readonly InputAction m_XRILeftHand_Select;

	[Token(Token = "0x400029C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private readonly InputAction m_XRILeftHand_Activate;

	[Token(Token = "0x400029D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private readonly InputAction m_XRILeftHand_UIPress;

	[Token(Token = "0x400029E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private readonly InputAction m_XRILeftHand_HapticDevice;

	[Token(Token = "0x400029F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private readonly InputAction m_XRILeftHand_TeleportSelect;

	[Token(Token = "0x40002A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private readonly InputAction m_XRILeftHand_TeleportModeActivate;

	[Token(Token = "0x40002A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private readonly InputAction m_XRILeftHand_TeleportModeCancel;

	[Token(Token = "0x40002A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private readonly InputAction m_XRILeftHand_Turn;

	[Token(Token = "0x40002A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private readonly InputAction m_XRILeftHand_ThumbUp;

	[Token(Token = "0x40002A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private readonly InputAction m_XRILeftHand_Move;

	[Token(Token = "0x40002A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private readonly InputAction m_XRILeftHand_RotateAnchor;

	[Token(Token = "0x40002A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private readonly InputAction m_XRILeftHand_TranslateAnchor;

	[Token(Token = "0x40002A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private readonly InputAction m_XRILeftHand_Reset;

	[Token(Token = "0x40002A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private readonly InputAction m_XRILeftHand_SwitchRod;

	[Token(Token = "0x40002A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private readonly InputAction m_XRILeftHand_AutoReel;

	[Token(Token = "0x40002AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private readonly InputAction m_XRILeftHand_Boost;

	[Token(Token = "0x40002AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private readonly InputAction m_XRILeftHand_GrabHandle;

	[Token(Token = "0x40002AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private readonly InputAction m_XRILeftHand_Menu;

	[Token(Token = "0x40002AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private readonly InputAction m_XRILeftHand_Pickup;

	[Token(Token = "0x40002AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private readonly InputAction m_XRILeftHand_DialogAdvance;

	[Token(Token = "0x40002AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private readonly InputAction m_XRILeftHand_AnimateIndexLeft;

	[Token(Token = "0x40002B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private readonly InputAction m_XRILeftHand_AnimateFingersLeft;

	[Token(Token = "0x40002B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private readonly InputAction m_XRILeftHand_AnimateThumbLeft;

	[Token(Token = "0x40002B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private readonly InputActionMap m_XRIRightHand;

	[Token(Token = "0x40002B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private IXRIRightHandActions m_XRIRightHandActionsCallbackInterface;

	[Token(Token = "0x40002B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private readonly InputAction m_XRIRightHand_Position;

	[Token(Token = "0x40002B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private readonly InputAction m_XRIRightHand_Rotation;

	[Token(Token = "0x40002B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private readonly InputAction m_XRIRightHand_Select;

	[Token(Token = "0x40002B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private readonly InputAction m_XRIRightHand_Activate;

	[Token(Token = "0x40002B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private readonly InputAction m_XRIRightHand_UIPress;

	[Token(Token = "0x40002B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private readonly InputAction m_XRIRightHand_HapticDevice;

	[Token(Token = "0x40002BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private readonly InputAction m_XRIRightHand_TeleportSelect;

	[Token(Token = "0x40002BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private readonly InputAction m_XRIRightHand_TeleportModeActivate;

	[Token(Token = "0x40002BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private readonly InputAction m_XRIRightHand_TeleportModeCancel;

	[Token(Token = "0x40002BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private readonly InputAction m_XRIRightHand_Turn;

	[Token(Token = "0x40002BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private readonly InputAction m_XRIRightHand_ThumbUp;

	[Token(Token = "0x40002BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private readonly InputAction m_XRIRightHand_Move;

	[Token(Token = "0x40002C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private readonly InputAction m_XRIRightHand_RotateAnchor;

	[Token(Token = "0x40002C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private readonly InputAction m_XRIRightHand_TranslateAnchor;

	[Token(Token = "0x40002C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	private readonly InputAction m_XRIRightHand_Reset;

	[Token(Token = "0x40002C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	private readonly InputAction m_XRIRightHand_SwitchRod;

	[Token(Token = "0x40002C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	private readonly InputAction m_XRIRightHand_AutoReel;

	[Token(Token = "0x40002C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	private readonly InputAction m_XRIRightHand_Boost;

	[Token(Token = "0x40002C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	private readonly InputAction m_XRIRightHand_GrabHandle;

	[Token(Token = "0x40002C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	private readonly InputAction m_XRIRightHand_EditorPause;

	[Token(Token = "0x40002C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	private readonly InputAction m_XRIRightHand_Menu;

	[Token(Token = "0x40002C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	private readonly InputAction m_XRIRightHand_Pickup;

	[Token(Token = "0x40002CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	private readonly InputAction m_XRIRightHand_DialogAdvance;

	[Token(Token = "0x40002CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	private readonly InputAction m_XRIRightHand_AnimateIndexRight;

	[Token(Token = "0x40002CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	private readonly InputAction m_XRIRightHand_AnimateFingersRight;

	[Token(Token = "0x40002CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	private readonly InputAction m_XRIRightHand_AnimateThumbRight;

	[Token(Token = "0x40002CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	private int m_GenericXRControllerSchemeIndex;

	[Token(Token = "0x40002CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F4")]
	private int m_ContinuousMoveSchemeIndex;

	[Token(Token = "0x40002D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	private int m_NoncontinuousMoveSchemeIndex;

	[Token(Token = "0x1700000E")]
	public InputActionAsset asset
	{
		[Token(Token = "0x6000199")]
		[Address(RVA = "0x148175C", Offset = "0x148175C", VA = "0x148175C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EE474", Offset = "0x9EE474")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700000F")]
	public InputBinding? bindingMask
	{
		[Token(Token = "0x600019C")]
		[Address(RVA = "0x148230C", Offset = "0x148230C", VA = "0x148230C", Slot = "4")]
		get
		{
			return null;
		}
		[Token(Token = "0x600019D")]
		[Address(RVA = "0x1482330", Offset = "0x1482330", VA = "0x1482330", Slot = "5")]
		set
		{
		}
	}

	[Token(Token = "0x17000010")]
	public ReadOnlyArray<InputDevice>? devices
	{
		[Token(Token = "0x600019E")]
		[Address(RVA = "0x1482388", Offset = "0x1482388", VA = "0x1482388", Slot = "6")]
		get
		{
			return null;
		}
		[Token(Token = "0x600019F")]
		[Address(RVA = "0x14823A4", Offset = "0x14823A4", VA = "0x14823A4", Slot = "7")]
		set
		{
		}
	}

	[Token(Token = "0x17000011")]
	public ReadOnlyArray<InputControlScheme> controlSchemes
	{
		[Token(Token = "0x60001A0")]
		[Address(RVA = "0x14823F4", Offset = "0x14823F4", VA = "0x14823F4", Slot = "8")]
		get
		{
			return default(ReadOnlyArray<InputControlScheme>);
		}
	}

	[Token(Token = "0x17000012")]
	public XRIHMDActions XRIHMD
	{
		[Token(Token = "0x60001A6")]
		[Address(RVA = "0x148249C", Offset = "0x148249C", VA = "0x148249C")]
		get
		{
			return default(XRIHMDActions);
		}
	}

	[Token(Token = "0x17000013")]
	public XRILeftHandActions XRILeftHand
	{
		[Token(Token = "0x60001A7")]
		[Address(RVA = "0x14824C8", Offset = "0x14824C8", VA = "0x14824C8")]
		get
		{
			return default(XRILeftHandActions);
		}
	}

	[Token(Token = "0x17000014")]
	public XRIRightHandActions XRIRightHand
	{
		[Token(Token = "0x60001A8")]
		[Address(RVA = "0x14824F4", Offset = "0x14824F4", VA = "0x14824F4")]
		get
		{
			return default(XRIRightHandActions);
		}
	}

	[Token(Token = "0x17000015")]
	public InputControlScheme GenericXRControllerScheme
	{
		[Token(Token = "0x60001A9")]
		[Address(RVA = "0x1482520", Offset = "0x1482520", VA = "0x1482520")]
		get
		{
			return default(InputControlScheme);
		}
	}

	[Token(Token = "0x17000016")]
	public InputControlScheme ContinuousMoveScheme
	{
		[Token(Token = "0x60001AA")]
		[Address(RVA = "0x14825D8", Offset = "0x14825D8", VA = "0x14825D8")]
		get
		{
			return default(InputControlScheme);
		}
	}

	[Token(Token = "0x17000017")]
	public InputControlScheme NoncontinuousMoveScheme
	{
		[Token(Token = "0x60001AB")]
		[Address(RVA = "0x1482690", Offset = "0x1482690", VA = "0x1482690")]
		get
		{
			return default(InputControlScheme);
		}
	}

	[Token(Token = "0x600019A")]
	[Address(RVA = "0x1481764", Offset = "0x1481764", VA = "0x1481764")]
	public XRIDefaultInputActions()
	{
	}

	[Token(Token = "0x600019B")]
	[Address(RVA = "0x14822A0", Offset = "0x14822A0", VA = "0x14822A0", Slot = "14")]
	public void Dispose()
	{
	}

	[Token(Token = "0x60001A1")]
	[Address(RVA = "0x1482410", Offset = "0x1482410", VA = "0x1482410", Slot = "9")]
	public bool Contains(InputAction action)
	{
		return default(bool);
	}

	[Token(Token = "0x60001A2")]
	[Address(RVA = "0x148242C", Offset = "0x148242C", VA = "0x148242C", Slot = "12")]
	public IEnumerator<InputAction> GetEnumerator()
	{
		return null;
	}

	[Token(Token = "0x60001A3")]
	[Address(RVA = "0x1482448", Offset = "0x1482448", VA = "0x1482448", Slot = "13")]
	private IEnumerator System.Collections.IEnumerable.GetEnumerator()
	{
		return null;
	}

	[Token(Token = "0x60001A4")]
	[Address(RVA = "0x1482464", Offset = "0x1482464", VA = "0x1482464", Slot = "10")]
	public void Enable()
	{
	}

	[Token(Token = "0x60001A5")]
	[Address(RVA = "0x1482480", Offset = "0x1482480", VA = "0x1482480", Slot = "11")]
	public void Disable()
	{
	}
}
[Token(Token = "0x2000062")]
public class UnSoftDistanceDisabler : MonoBehaviour
{
	[Token(Token = "0x40002D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int _distanceDisable;

	[Token(Token = "0x40002D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform _distanceFrom;

	[Token(Token = "0x40002D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool _distanceFromMainCam;

	[Token(Token = "0x40002D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float _disableCheckInterval;

	[Token(Token = "0x40002D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float _enableCheckInterval;

	[Token(Token = "0x40002D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool _disableOnStart;

	[Token(Token = "0x60001AC")]
	[Address(RVA = "0x1802A20", Offset = "0x1802A20", VA = "0x1802A20")]
	public void Start()
	{
	}

	[Token(Token = "0x60001AD")]
	[Address(RVA = "0x1802B14", Offset = "0x1802B14", VA = "0x1802B14")]
	public void DisableOnStart()
	{
	}

	[Token(Token = "0x60001AE")]
	[Address(RVA = "0x1802B4C", Offset = "0x1802B4C", VA = "0x1802B4C")]
	public void CheckDisable()
	{
	}

	[Token(Token = "0x60001AF")]
	[Address(RVA = "0x1802C98", Offset = "0x1802C98", VA = "0x1802C98")]
	public void CheckEnable()
	{
	}

	[Token(Token = "0x60001B0")]
	[Address(RVA = "0x1802DE4", Offset = "0x1802DE4", VA = "0x1802DE4")]
	public UnSoftDistanceDisabler()
	{
	}
}
[Token(Token = "0x2000063")]
public class SchoolBubbles : MonoBehaviour
{
	[Token(Token = "0x40002D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ParticleSystem _bubbleParticles;

	[Token(Token = "0x40002D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float _emitEverySecond;

	[Token(Token = "0x40002D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float _speedEmitMultiplier;

	[Token(Token = "0x40002DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int _minBubbles;

	[Token(Token = "0x40002DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int _maxBubbles;

	[Token(Token = "0x60001B1")]
	[Address(RVA = "0xE3FBD8", Offset = "0xE3FBD8", VA = "0xE3FBD8")]
	public void Start()
	{
	}

	[Token(Token = "0x60001B2")]
	[Address(RVA = "0xE3FC7C", Offset = "0xE3FC7C", VA = "0xE3FC7C")]
	public void EmitBubbles(Vector3 pos, float amount)
	{
	}

	[Token(Token = "0x60001B3")]
	[Address(RVA = "0xE3FDA8", Offset = "0xE3FDA8", VA = "0xE3FDA8")]
	public SchoolBubbles()
	{
	}
}
[Token(Token = "0x2000064")]
public class Boid : MonoBehaviour
{
	[Token(Token = "0x40002DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private BoidSettings settings;

	[Token(Token = "0x40002DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public Transform model;

	[Token(Token = "0x40002DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public FishTypeSO fishType;

	[Token(Token = "0x40002DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public int flockID;

	[Token(Token = "0x40002E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[HideInInspector]
	public float boundsRadius;

	[Token(Token = "0x40002E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public Vector3 position;

	[Token(Token = "0x40002E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[HideInInspector]
	public Vector3 forward;

	[Token(Token = "0x40002E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3 velocity;

	[Token(Token = "0x40002E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Vector3 acceleration;

	[Token(Token = "0x40002E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[HideInInspector]
	public Vector3 avgFlockHeading;

	[Token(Token = "0x40002E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[HideInInspector]
	public Vector3 avgAvoidanceHeading;

	[Token(Token = "0x40002E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[HideInInspector]
	public Vector3 centreOfFlockmates;

	[Token(Token = "0x40002E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	[HideInInspector]
	public int numPerceivedFlockmates;

	[Token(Token = "0x40002E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Transform cachedTransform;

	[Token(Token = "0x40002EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Transform target;

	[Token(Token = "0x60001B4")]
	[Address(RVA = "0xE2308C", Offset = "0xE2308C", VA = "0xE2308C")]
	public void Initialize(BoidSettings settings, Transform target)
	{
	}

	[Token(Token = "0x60001B5")]
	[Address(RVA = "0xE231DC", Offset = "0xE231DC", VA = "0xE231DC")]
	public void UpdateBoid()
	{
	}

	[Token(Token = "0x60001B6")]
	[Address(RVA = "0xE2395C", Offset = "0xE2395C", VA = "0xE2395C")]
	private bool IsHeadingForCollision()
	{
		return default(bool);
	}

	[Token(Token = "0x60001B7")]
	[Address(RVA = "0xE23A04", Offset = "0xE23A04", VA = "0xE23A04")]
	private Vector3 ObstacleRays()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60001B8")]
	[Address(RVA = "0xE23878", Offset = "0xE23878", VA = "0xE23878")]
	private Vector3 SteerTowards(Vector3 vector)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60001B9")]
	[Address(RVA = "0xE23B88", Offset = "0xE23B88", VA = "0xE23B88")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x60001BA")]
	[Address(RVA = "0xE23C90", Offset = "0xE23C90", VA = "0xE23C90")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x60001BB")]
	[Address(RVA = "0xE23CE0", Offset = "0xE23CE0", VA = "0xE23CE0")]
	public Boid()
	{
	}
}
[Token(Token = "0x2000065")]
public static class BoidHelper
{
	[Token(Token = "0x40002EB")]
	private const int numViewDirections = 180;

	[Token(Token = "0x40002EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly Vector3[] directions;

	[Token(Token = "0x60001BC")]
	[Address(RVA = "0xE23CF0", Offset = "0xE23CF0", VA = "0xE23CF0")]
	static BoidHelper()
	{
	}
}
[Token(Token = "0x2000066")]
public class BoidManager : MonoBehaviour
{
	[Token(Token = "0x200034A")]
	public struct BoidData
	{
		[Token(Token = "0x400174F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 position;

		[Token(Token = "0x4001750")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Vector3 direction;

		[Token(Token = "0x4001751")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 flockHeading;

		[Token(Token = "0x4001752")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Vector3 flockCentre;

		[Token(Token = "0x4001753")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector3 avoidanceHeading;

		[Token(Token = "0x4001754")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public int numFlockmates;

		[Token(Token = "0x170001FC")]
		public static int Size
		{
			[Token(Token = "0x6001815")]
			[Address(RVA = "0xE24CFC", Offset = "0xE24CFC", VA = "0xE24CFC")]
			get
			{
				return default(int);
			}
		}
	}

	[Token(Token = "0x40002ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform prefab;

	[Token(Token = "0x40002EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public BoidSettings settings;

	[Token(Token = "0x40002EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform boidTargetPlaneTop;

	[Token(Token = "0x40002F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform boidTargetPlaneMiddle;

	[Token(Token = "0x40002F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform boidTargetPlaneBottom;

	[Token(Token = "0x40002F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private SpawnPool fishPool;

	[Token(Token = "0x40002F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private float spawnRadius;

	[Token(Token = "0x40002F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[SerializeField]
	private Vector3 modelLocalEuler;

	[Token(Token = "0x40002F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<Boid> boids;

	[Token(Token = "0x40002F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private Transform[] spawnPoints;

	[Token(Token = "0x60001BD")]
	[Address(RVA = "0xE23EAC", Offset = "0xE23EAC", VA = "0xE23EAC")]
	private void Update()
	{
	}

	[Token(Token = "0x60001BE")]
	[Address(RVA = "0xE2452C", Offset = "0xE2452C", VA = "0xE2452C")]
	public void CreateBoids(FishTypeSO fishType, int count)
	{
	}

	[Token(Token = "0x60001BF")]
	[Address(RVA = "0xE248AC", Offset = "0xE248AC", VA = "0xE248AC")]
	public void RemoveAllBoids()
	{
	}

	[Token(Token = "0x60001C0")]
	[Address(RVA = "0xE24A08", Offset = "0xE24A08", VA = "0xE24A08")]
	public void RemoveBoidsOfType(FishTypeSO fish)
	{
	}

	[Token(Token = "0x60001C1")]
	[Address(RVA = "0xE24B98", Offset = "0xE24B98", VA = "0xE24B98")]
	public int GetBoidCount()
	{
		return default(int);
	}

	[Token(Token = "0x60001C2")]
	[Address(RVA = "0xE24BE8", Offset = "0xE24BE8", VA = "0xE24BE8")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x60001C3")]
	[Address(RVA = "0xE24C80", Offset = "0xE24C80", VA = "0xE24C80")]
	public BoidManager()
	{
	}
}
[Token(Token = "0x2000067")]
public class BoidSettings : ScriptableObject
{
	[Token(Token = "0x40002F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float perceptionRadius;

	[Token(Token = "0x40002F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float avoidanceRadius;

	[Token(Token = "0x40002F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float maxSteerForce;

	[Token(Token = "0x40002FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float alignWeight;

	[Token(Token = "0x40002FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float cohesionWeight;

	[Token(Token = "0x40002FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float seperateWeight;

	[Token(Token = "0x40002FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float targetWeight;

	[Token(Token = "0x40002FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9E8994", Offset = "0x9E8994")]
	public LayerMask obstacleMask;

	[Token(Token = "0x40002FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float avoidCollisionWeight;

	[Token(Token = "0x4000300")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float collisionAvoidDst;

	[Token(Token = "0x60001C4")]
	[Address(RVA = "0xE24D04", Offset = "0xE24D04", VA = "0xE24D04")]
	public BoidSettings()
	{
	}
}
[Token(Token = "0x2000068")]
public class Spawner : MonoBehaviour
{
	[Token(Token = "0x200034B")]
	public enum GizmoType
	{
		[Token(Token = "0x4001756")]
		Never,
		[Token(Token = "0x4001757")]
		SelectedOnly,
		[Token(Token = "0x4001758")]
		Always
	}

	[Token(Token = "0x4000301")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Boid prefab;

	[Token(Token = "0x4000302")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float spawnRadius;

	[Token(Token = "0x4000303")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int spawnCount;

	[Token(Token = "0x4000304")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Color colour;

	[Token(Token = "0x4000305")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GizmoType showSpawnRegion;

	[Token(Token = "0x60001C5")]
	[Address(RVA = "0xE414A0", Offset = "0xE414A0", VA = "0xE414A0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001C6")]
	[Address(RVA = "0xE4165C", Offset = "0xE4165C", VA = "0xE4165C")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x60001C7")]
	[Address(RVA = "0xE416EC", Offset = "0xE416EC", VA = "0xE416EC")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x60001C8")]
	[Address(RVA = "0xE41670", Offset = "0xE41670", VA = "0xE41670")]
	private void DrawGizmos()
	{
	}

	[Token(Token = "0x60001C9")]
	[Address(RVA = "0xE41700", Offset = "0xE41700", VA = "0xE41700")]
	public Spawner()
	{
	}
}
[Token(Token = "0x2000069")]
public class CullFix : MonoBehaviour
{
	[Token(Token = "0x60001CA")]
	[Address(RVA = "0xE2ACFC", Offset = "0xE2ACFC", VA = "0xE2ACFC")]
	private void Start()
	{
	}

	[Token(Token = "0x60001CB")]
	[Address(RVA = "0xE2AE30", Offset = "0xE2AE30", VA = "0xE2AE30")]
	public CullFix()
	{
	}
}
[Token(Token = "0x200006A")]
public class SetGlobalCamPos : MonoBehaviour
{
	[Token(Token = "0x4000306")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform camTrans;

	[Token(Token = "0x60001CC")]
	[Address(RVA = "0xE404D0", Offset = "0xE404D0", VA = "0xE404D0")]
	private void Update()
	{
	}

	[Token(Token = "0x60001CD")]
	[Address(RVA = "0xE40594", Offset = "0xE40594", VA = "0xE40594")]
	public SetGlobalCamPos()
	{
	}
}
[Token(Token = "0x200006B")]
public class VRSI_IMPORT_ASSIST : MonoBehaviour
{
	[Token(Token = "0x60001CE")]
	[Address(RVA = "0x147C7C8", Offset = "0x147C7C8", VA = "0x147C7C8")]
	public VRSI_IMPORT_ASSIST()
	{
	}
}
[Token(Token = "0x200006C")]
[ExecuteInEditMode]
public class VRSI_RenderTool : MonoBehaviour
{
	[Token(Token = "0x200034C")]
	public enum VRSI_Resolution
	{
		[Token(Token = "0x400175A")]
		VeryLow_256,
		[Token(Token = "0x400175B")]
		Low_512,
		[Token(Token = "0x400175C")]
		Medium_1024,
		[Token(Token = "0x400175D")]
		High_2048,
		[Token(Token = "0x400175E")]
		VeryHigh_4096
	}

	[Token(Token = "0x200034D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E7B50", Offset = "0x9E7B50")]
	private sealed class <startVRPreview>d__44 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400175F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001760")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001761")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public VRSI_RenderTool <>4__this;

		[Token(Token = "0x170001FD")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001819")]
			[Address(RVA = "0x147E400", Offset = "0x147E400", VA = "0x147E400", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001FE")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600181B")]
			[Address(RVA = "0x147E468", Offset = "0x147E468", VA = "0x147E468", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001816")]
		[Address(RVA = "0x147D99C", Offset = "0x147D99C", VA = "0x147D99C")]
		[DebuggerHidden]
		public <startVRPreview>d__44(int <>1__state)
		{
		}

		[Token(Token = "0x6001817")]
		[Address(RVA = "0x147E048", Offset = "0x147E048", VA = "0x147E048", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001818")]
		[Address(RVA = "0x147E04C", Offset = "0x147E04C", VA = "0x147E04C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600181A")]
		[Address(RVA = "0x147E408", Offset = "0x147E408", VA = "0x147E408", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200034E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E7B60", Offset = "0x9E7B60")]
	private sealed class <stopPreview>d__46 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001762")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001763")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001764")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public VRSI_RenderTool <>4__this;

		[Token(Token = "0x170001FF")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600181F")]
			[Address(RVA = "0x147E708", Offset = "0x147E708", VA = "0x147E708", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000200")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001821")]
			[Address(RVA = "0x147E770", Offset = "0x147E770", VA = "0x147E770", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600181C")]
		[Address(RVA = "0x147DA70", Offset = "0x147DA70", VA = "0x147DA70")]
		[DebuggerHidden]
		public <stopPreview>d__46(int <>1__state)
		{
		}

		[Token(Token = "0x600181D")]
		[Address(RVA = "0x147E470", Offset = "0x147E470", VA = "0x147E470", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600181E")]
		[Address(RVA = "0x147E474", Offset = "0x147E474", VA = "0x147E474", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001820")]
		[Address(RVA = "0x147E710", Offset = "0x147E710", VA = "0x147E710", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200034F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E7B70", Offset = "0x9E7B70")]
	private sealed class <doStereoMipMaping>d__53 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001765")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001766")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x17000201")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001825")]
			[Address(RVA = "0x147DEC4", Offset = "0x147DEC4", VA = "0x147DEC4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000202")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001827")]
			[Address(RVA = "0x147DF2C", Offset = "0x147DF2C", VA = "0x147DF2C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001822")]
		[Address(RVA = "0x147DC24", Offset = "0x147DC24", VA = "0x147DC24")]
		[DebuggerHidden]
		public <doStereoMipMaping>d__53(int <>1__state)
		{
		}

		[Token(Token = "0x6001823")]
		[Address(RVA = "0x147DE20", Offset = "0x147DE20", VA = "0x147DE20", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001824")]
		[Address(RVA = "0x147DE24", Offset = "0x147DE24", VA = "0x147DE24", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001826")]
		[Address(RVA = "0x147DECC", Offset = "0x147DECC", VA = "0x147DECC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000350")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E7B80", Offset = "0x9E7B80")]
	private sealed class <doStereoMipMaping_PC_MOBILE>d__55 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001767")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001768")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x17000203")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600182B")]
			[Address(RVA = "0x147DFD8", Offset = "0x147DFD8", VA = "0x147DFD8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000204")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600182D")]
			[Address(RVA = "0x147E040", Offset = "0x147E040", VA = "0x147E040", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001828")]
		[Address(RVA = "0x147DCB4", Offset = "0x147DCB4", VA = "0x147DCB4")]
		[DebuggerHidden]
		public <doStereoMipMaping_PC_MOBILE>d__55(int <>1__state)
		{
		}

		[Token(Token = "0x6001829")]
		[Address(RVA = "0x147DF34", Offset = "0x147DF34", VA = "0x147DF34", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600182A")]
		[Address(RVA = "0x147DF38", Offset = "0x147DF38", VA = "0x147DF38", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600182C")]
		[Address(RVA = "0x147DFE0", Offset = "0x147DFE0", VA = "0x147DFE0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000307")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public VRSI_Resolution vrsiResolution;

	[Token(Token = "0x4000308")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int vrsiRenderSize;

	[Token(Token = "0x4000309")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public VRSI_Resolution vrsiResolutionNormal;

	[Token(Token = "0x400030A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int vrsiRenderSizeNormal;

	[Token(Token = "0x400030B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Material makeAlpha;

	[Token(Token = "0x400030C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Camera renderCam;

	[Token(Token = "0x400030D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Camera mainCam;

	[Token(Token = "0x400030E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9E89CC", Offset = "0x9E89CC")]
	public float seperation;

	[Token(Token = "0x400030F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AnimationCurve seperationCurve;

	[Token(Token = "0x4000310")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9E89E8", Offset = "0x9E89E8")]
	public float focalPointHeight;

	[Token(Token = "0x4000311")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9E8A00", Offset = "0x9E8A00")]
	public float focalPointZvalue;

	[Token(Token = "0x4000312")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9E8A18", Offset = "0x9E8A18")]
	public float ObserverHeight;

	[Token(Token = "0x4000313")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9E8A30", Offset = "0x9E8A30")]
	public float ObserverDistance;

	[Token(Token = "0x4000314")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x9E8A4C", Offset = "0x9E8A4C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9E8A4C", Offset = "0x9E8A4C")]
	public float OrientationDegrees;

	[Token(Token = "0x4000315")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public bool focalPlaneVisible;

	[Token(Token = "0x4000316")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
	public bool renderNormals;

	[Token(Token = "0x4000317")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x66")]
	public bool AlphaToCoverage;

	[Token(Token = "0x4000318")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x67")]
	public bool Create_For_VR;

	[Token(Token = "0x4000319")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public bool Create_For_PC_MOBILE;

	[Token(Token = "0x400031A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private RenderTexture rtL;

	[Token(Token = "0x400031B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private RenderTexture rtR;

	[Token(Token = "0x400031C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public string folderName;

	[Token(Token = "0x400031D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public string vrsiName;

	[Token(Token = "0x400031E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Transform focalpoint;

	[Token(Token = "0x400031F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private MeshRenderer refFloor;

	[Token(Token = "0x4000320")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private MeshRenderer refPerson;

	[Token(Token = "0x4000321")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private MeshRenderer refBillboardQuad;

	[Token(Token = "0x4000322")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Texture2D stereoRT;

	[Token(Token = "0x4000323")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Texture2D stereoRTnorm;

	[Token(Token = "0x4000324")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private RenderTexture rtLnorm;

	[Token(Token = "0x4000325")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private RenderTexture rtRnorm;

	[Token(Token = "0x4000326")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public bool AllowPostProcess;

	[Token(Token = "0x4000327")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private GameObject camGO;

	[Token(Token = "0x4000328")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private bool inVRmode;

	[Token(Token = "0x4000329")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public Transform refDebugFocalPlane;

	[Token(Token = "0x400032A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public GameObject ObjectsToRenderParent;

	[Token(Token = "0x400032B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private string loadedvrDeviceName;

	[Token(Token = "0x400032C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private RenderTexture rt_White;

	[Token(Token = "0x60001CF")]
	[Address(RVA = "0x147C7D0", Offset = "0x147C7D0", VA = "0x147C7D0")]
	public void Tick()
	{
	}

	[Token(Token = "0x60001D0")]
	[Address(RVA = "0x147CA34", Offset = "0x147CA34", VA = "0x147CA34")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001D1")]
	[Address(RVA = "0x147CC3C", Offset = "0x147CC3C", VA = "0x147CC3C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60001D2")]
	[Address(RVA = "0x147D16C", Offset = "0x147D16C", VA = "0x147D16C")]
	private void DrawBounds(Bounds b, float delay = 0f)
	{
	}

	[Token(Token = "0x60001D3")]
	[Address(RVA = "0x147D78C", Offset = "0x147D78C", VA = "0x147D78C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60001D4")]
	[Address(RVA = "0x147D840", Offset = "0x147D840", VA = "0x147D840")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60001D5")]
	[Address(RVA = "0x147D8F4", Offset = "0x147D8F4", VA = "0x147D8F4")]
	public void enableVRpreview()
	{
	}

	[Token(Token = "0x60001D6")]
	[Address(RVA = "0x147D920", Offset = "0x147D920", VA = "0x147D920")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9EE484", Offset = "0x9EE484")]
	private IEnumerator startVRPreview()
	{
		return null;
	}

	[Token(Token = "0x60001D7")]
	[Address(RVA = "0x147D9C8", Offset = "0x147D9C8", VA = "0x147D9C8")]
	public void stopVRpreview()
	{
	}

	[Token(Token = "0x60001D8")]
	[Address(RVA = "0x147D9F4", Offset = "0x147D9F4", VA = "0x147D9F4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9EE4E8", Offset = "0x9EE4E8")]
	private IEnumerator stopPreview()
	{
		return null;
	}

	[Token(Token = "0x60001D9")]
	[Address(RVA = "0x147DA9C", Offset = "0x147DA9C", VA = "0x147DA9C")]
	public bool getInVRMode()
	{
		return default(bool);
	}

	[Token(Token = "0x60001DA")]
	[Address(RVA = "0x147DAA4", Offset = "0x147DAA4", VA = "0x147DAA4")]
	private void Start()
	{
	}

	[Token(Token = "0x60001DB")]
	[Address(RVA = "0x147DB70", Offset = "0x147DB70", VA = "0x147DB70")]
	private static RenderTexture GetTemporaryRT(RenderTexture texture)
	{
		return null;
	}

	[Token(Token = "0x60001DC")]
	[Address(RVA = "0x147DBC0", Offset = "0x147DBC0", VA = "0x147DBC0")]
	public void CreateVRSI()
	{
	}

	[Token(Token = "0x60001DD")]
	[Address(RVA = "0x147DBC4", Offset = "0x147DBC4", VA = "0x147DBC4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9EE54C", Offset = "0x9EE54C")]
	private IEnumerator doStereoMipMaping()
	{
		return null;
	}

	[Token(Token = "0x60001DE")]
	[Address(RVA = "0x147DC50", Offset = "0x147DC50", VA = "0x147DC50")]
	public void CreateVRSI_PC_MOBILE()
	{
	}

	[Token(Token = "0x60001DF")]
	[Address(RVA = "0x147DC54", Offset = "0x147DC54", VA = "0x147DC54")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9EE5B0", Offset = "0x9EE5B0")]
	private IEnumerator doStereoMipMaping_PC_MOBILE()
	{
		return null;
	}

	[Token(Token = "0x60001E0")]
	[Address(RVA = "0x147DCE0", Offset = "0x147DCE0", VA = "0x147DCE0")]
	public static Texture2D LoadPNG(string filePath)
	{
		return null;
	}

	[Token(Token = "0x60001E1")]
	[Address(RVA = "0x147DD80", Offset = "0x147DD80", VA = "0x147DD80")]
	public VRSI_RenderTool()
	{
	}
}
[Token(Token = "0x200006D")]
[ExecuteInEditMode]
public class VRSI_RenderTool_MultiView : MonoBehaviour
{
	[Token(Token = "0x2000351")]
	public enum VRSI_Resolution
	{
		[Token(Token = "0x400176A")]
		VeryLow_256,
		[Token(Token = "0x400176B")]
		Low_512,
		[Token(Token = "0x400176C")]
		Medium_1024,
		[Token(Token = "0x400176D")]
		High_2048,
		[Token(Token = "0x400176E")]
		VeryHigh_4096
	}

	[Token(Token = "0x2000352")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E7B90", Offset = "0x9E7B90")]
	private sealed class <startVRPreview>d__43 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400176F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001770")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001771")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public VRSI_RenderTool_MultiView <>4__this;

		[Token(Token = "0x17000205")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001831")]
			[Address(RVA = "0x14803B8", Offset = "0x14803B8", VA = "0x14803B8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000206")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001833")]
			[Address(RVA = "0x1480420", Offset = "0x1480420", VA = "0x1480420", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600182E")]
		[Address(RVA = "0x147F944", Offset = "0x147F944", VA = "0x147F944")]
		[DebuggerHidden]
		public <startVRPreview>d__43(int <>1__state)
		{
		}

		[Token(Token = "0x600182F")]
		[Address(RVA = "0x1480000", Offset = "0x1480000", VA = "0x1480000", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001830")]
		[Address(RVA = "0x1480004", Offset = "0x1480004", VA = "0x1480004", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001832")]
		[Address(RVA = "0x14803C0", Offset = "0x14803C0", VA = "0x14803C0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000353")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E7BA0", Offset = "0x9E7BA0")]
	private sealed class <stopPreview>d__45 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001772")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001773")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001774")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public VRSI_RenderTool_MultiView <>4__this;

		[Token(Token = "0x17000207")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001837")]
			[Address(RVA = "0x14806C0", Offset = "0x14806C0", VA = "0x14806C0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000208")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001839")]
			[Address(RVA = "0x1480728", Offset = "0x1480728", VA = "0x1480728", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001834")]
		[Address(RVA = "0x147FA18", Offset = "0x147FA18", VA = "0x147FA18")]
		[DebuggerHidden]
		public <stopPreview>d__45(int <>1__state)
		{
		}

		[Token(Token = "0x6001835")]
		[Address(RVA = "0x1480428", Offset = "0x1480428", VA = "0x1480428", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001836")]
		[Address(RVA = "0x148042C", Offset = "0x148042C", VA = "0x148042C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001838")]
		[Address(RVA = "0x14806C8", Offset = "0x14806C8", VA = "0x14806C8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000354")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E7BB0", Offset = "0x9E7BB0")]
	private sealed class <doStereoMipMaping>d__52 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001775")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001776")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x17000209")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600183D")]
			[Address(RVA = "0x147FF90", Offset = "0x147FF90", VA = "0x147FF90", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700020A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600183F")]
			[Address(RVA = "0x147FFF8", Offset = "0x147FFF8", VA = "0x147FFF8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600183A")]
		[Address(RVA = "0x147FBB0", Offset = "0x147FBB0", VA = "0x147FBB0")]
		[DebuggerHidden]
		public <doStereoMipMaping>d__52(int <>1__state)
		{
		}

		[Token(Token = "0x600183B")]
		[Address(RVA = "0x147FEEC", Offset = "0x147FEEC", VA = "0x147FEEC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600183C")]
		[Address(RVA = "0x147FEF0", Offset = "0x147FEF0", VA = "0x147FEF0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600183E")]
		[Address(RVA = "0x147FF98", Offset = "0x147FF98", VA = "0x147FF98", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400032D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public VRSI_Resolution vrsiResolution;

	[Token(Token = "0x400032E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int vrsiRenderSize;

	[Token(Token = "0x400032F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public VRSI_Resolution vrsiResolutionNormal;

	[Token(Token = "0x4000330")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int vrsiRenderSizeNormal;

	[Token(Token = "0x4000331")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Material makeAlpha;

	[Token(Token = "0x4000332")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Camera renderCam;

	[Token(Token = "0x4000333")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Camera mainCam;

	[Token(Token = "0x4000334")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9E8A94", Offset = "0x9E8A94")]
	public float seperation;

	[Token(Token = "0x4000335")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AnimationCurve seperationCurve;

	[Token(Token = "0x4000336")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9E8AB0", Offset = "0x9E8AB0")]
	public float focalPointHeight;

	[Token(Token = "0x4000337")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9E8AC8", Offset = "0x9E8AC8")]
	public float focalPointZvalue;

	[Token(Token = "0x4000338")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9E8AE0", Offset = "0x9E8AE0")]
	public float ObserverHeight;

	[Token(Token = "0x4000339")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9E8AF8", Offset = "0x9E8AF8")]
	public float ObserverDistance;

	[Token(Token = "0x400033A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x9E8B14", Offset = "0x9E8B14")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9E8B14", Offset = "0x9E8B14")]
	public float OrientationDegrees;

	[Token(Token = "0x400033B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public bool focalPlaneVisible;

	[Token(Token = "0x400033C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
	public bool renderNormals;

	[Token(Token = "0x400033D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x66")]
	public bool AlphaToCoverage;

	[Token(Token = "0x400033E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public int MultiViewPointCount;

	[Token(Token = "0x400033F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private RenderTexture rtL;

	[Token(Token = "0x4000340")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private RenderTexture rtR;

	[Token(Token = "0x4000341")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public string folderName;

	[Token(Token = "0x4000342")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public string vrsiName;

	[Token(Token = "0x4000343")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Transform focalpoint;

	[Token(Token = "0x4000344")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private MeshRenderer refFloor;

	[Token(Token = "0x4000345")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private MeshRenderer refPerson;

	[Token(Token = "0x4000346")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private MeshRenderer refBillboardQuad;

	[Token(Token = "0x4000347")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Texture2D stereoRT;

	[Token(Token = "0x4000348")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Texture2D stereoRTnorm;

	[Token(Token = "0x4000349")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private RenderTexture rtLnorm;

	[Token(Token = "0x400034A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private RenderTexture rtRnorm;

	[Token(Token = "0x400034B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public bool AllowPostProcess;

	[Token(Token = "0x400034C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private GameObject camGO;

	[Token(Token = "0x400034D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private bool inVRmode;

	[Token(Token = "0x400034E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public Transform refDebugFocalPlane;

	[Token(Token = "0x400034F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public GameObject ObjectsToRenderParent;

	[Token(Token = "0x4000350")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private string loadedvrDeviceName;

	[Token(Token = "0x4000351")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private RenderTexture rt_White;

	[Token(Token = "0x60001E2")]
	[Address(RVA = "0x147E778", Offset = "0x147E778", VA = "0x147E778")]
	public void Tick()
	{
	}

	[Token(Token = "0x60001E3")]
	[Address(RVA = "0x147E9DC", Offset = "0x147E9DC", VA = "0x147E9DC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001E4")]
	[Address(RVA = "0x147EBE4", Offset = "0x147EBE4", VA = "0x147EBE4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60001E5")]
	[Address(RVA = "0x147F114", Offset = "0x147F114", VA = "0x147F114")]
	private void DrawBounds(Bounds b, float delay = 0f)
	{
	}

	[Token(Token = "0x60001E6")]
	[Address(RVA = "0x147F734", Offset = "0x147F734", VA = "0x147F734")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60001E7")]
	[Address(RVA = "0x147F7E8", Offset = "0x147F7E8", VA = "0x147F7E8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60001E8")]
	[Address(RVA = "0x147F89C", Offset = "0x147F89C", VA = "0x147F89C")]
	public void enableVRpreview()
	{
	}

	[Token(Token = "0x60001E9")]
	[Address(RVA = "0x147F8C8", Offset = "0x147F8C8", VA = "0x147F8C8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9EE614", Offset = "0x9EE614")]
	private IEnumerator startVRPreview()
	{
		return null;
	}

	[Token(Token = "0x60001EA")]
	[Address(RVA = "0x147F970", Offset = "0x147F970", VA = "0x147F970")]
	public void stopVRpreview()
	{
	}

	[Token(Token = "0x60001EB")]
	[Address(RVA = "0x147F99C", Offset = "0x147F99C", VA = "0x147F99C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9EE678", Offset = "0x9EE678")]
	private IEnumerator stopPreview()
	{
		return null;
	}

	[Token(Token = "0x60001EC")]
	[Address(RVA = "0x147FA44", Offset = "0x147FA44", VA = "0x147FA44")]
	public bool getInVRMode()
	{
		return default(bool);
	}

	[Token(Token = "0x60001ED")]
	[Address(RVA = "0x147FA4C", Offset = "0x147FA4C", VA = "0x147FA4C")]
	private void Start()
	{
	}

	[Token(Token = "0x60001EE")]
	[Address(RVA = "0x147FAFC", Offset = "0x147FAFC", VA = "0x147FAFC")]
	private static RenderTexture GetTemporaryRT(RenderTexture texture)
	{
		return null;
	}

	[Token(Token = "0x60001EF")]
	[Address(RVA = "0x147FB4C", Offset = "0x147FB4C", VA = "0x147FB4C")]
	public void CreateVRSI()
	{
	}

	[Token(Token = "0x60001F0")]
	[Address(RVA = "0x147FB50", Offset = "0x147FB50", VA = "0x147FB50")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9EE6DC", Offset = "0x9EE6DC")]
	private IEnumerator doStereoMipMaping()
	{
		return null;
	}

	[Token(Token = "0x60001F1")]
	[Address(RVA = "0x147FBDC", Offset = "0x147FBDC", VA = "0x147FBDC")]
	private Texture2D duplicateTexture(Texture2D source)
	{
		return null;
	}

	[Token(Token = "0x60001F2")]
	[Address(RVA = "0x147FDAC", Offset = "0x147FDAC", VA = "0x147FDAC")]
	public static Texture2D LoadPNG(string filePath)
	{
		return null;
	}

	[Token(Token = "0x60001F3")]
	[Address(RVA = "0x147FE4C", Offset = "0x147FE4C", VA = "0x147FE4C")]
	public VRSI_RenderTool_MultiView()
	{
	}
}
[Token(Token = "0x200006E")]
public class Big_Splash : MonoBehaviour
{
	[Token(Token = "0x2000355")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E7BC0", Offset = "0x9E7BC0")]
	private sealed class <TriggerSplash>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001777")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001778")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001779")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Big_Splash <>4__this;

		[Token(Token = "0x1700020B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001843")]
			[Address(RVA = "0xE22E1C", Offset = "0xE22E1C", VA = "0xE22E1C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700020C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001845")]
			[Address(RVA = "0xE22E84", Offset = "0xE22E84", VA = "0xE22E84", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001840")]
		[Address(RVA = "0xE22CDC", Offset = "0xE22CDC", VA = "0xE22CDC")]
		[DebuggerHidden]
		public <TriggerSplash>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x6001841")]
		[Address(RVA = "0xE22D10", Offset = "0xE22D10", VA = "0xE22D10", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001842")]
		[Address(RVA = "0xE22D14", Offset = "0xE22D14", VA = "0xE22D14", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001844")]
		[Address(RVA = "0xE22E24", Offset = "0xE22E24", VA = "0xE22E24", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000352")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject BigSplash;

	[Token(Token = "0x4000353")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float splashFlag;

	[Token(Token = "0x60001F4")]
	[Address(RVA = "0xE22B94", Offset = "0xE22B94", VA = "0xE22B94")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60001F5")]
	[Address(RVA = "0xE22BCC", Offset = "0xE22BCC", VA = "0xE22BCC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60001F6")]
	[Address(RVA = "0xE22BF4", Offset = "0xE22BF4", VA = "0xE22BF4")]
	private void Update()
	{
	}

	[Token(Token = "0x60001F7")]
	[Address(RVA = "0xE22C60", Offset = "0xE22C60", VA = "0xE22C60")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9EE740", Offset = "0x9EE740")]
	private IEnumerator TriggerSplash()
	{
		return null;
	}

	[Token(Token = "0x60001F8")]
	[Address(RVA = "0xE22D08", Offset = "0xE22D08", VA = "0xE22D08")]
	public Big_Splash()
	{
	}
}
[Token(Token = "0x200006F")]
public class Small_Splash : MonoBehaviour
{
	[Token(Token = "0x2000356")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E7BD0", Offset = "0x9E7BD0")]
	private sealed class <TriggerSplash>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400177A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400177B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400177C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Small_Splash <>4__this;

		[Token(Token = "0x1700020D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001849")]
			[Address(RVA = "0xE40A44", Offset = "0xE40A44", VA = "0xE40A44", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700020E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600184B")]
			[Address(RVA = "0xE40AAC", Offset = "0xE40AAC", VA = "0xE40AAC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001846")]
		[Address(RVA = "0xE40900", Offset = "0xE40900", VA = "0xE40900")]
		[DebuggerHidden]
		public <TriggerSplash>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x6001847")]
		[Address(RVA = "0xE40934", Offset = "0xE40934", VA = "0xE40934", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001848")]
		[Address(RVA = "0xE40938", Offset = "0xE40938", VA = "0xE40938", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600184A")]
		[Address(RVA = "0xE40A4C", Offset = "0xE40A4C", VA = "0xE40A4C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000354")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject SmallSplash;

	[Token(Token = "0x4000355")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float splashFlag;

	[Token(Token = "0x60001F9")]
	[Address(RVA = "0xE407B8", Offset = "0xE407B8", VA = "0xE407B8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60001FA")]
	[Address(RVA = "0xE407F0", Offset = "0xE407F0", VA = "0xE407F0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60001FB")]
	[Address(RVA = "0xE40818", Offset = "0xE40818", VA = "0xE40818")]
	private void Update()
	{
	}

	[Token(Token = "0x60001FC")]
	[Address(RVA = "0xE40884", Offset = "0xE40884", VA = "0xE40884")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9EE7A4", Offset = "0x9EE7A4")]
	private IEnumerator TriggerSplash()
	{
		return null;
	}

	[Token(Token = "0x60001FD")]
	[Address(RVA = "0xE4092C", Offset = "0xE4092C", VA = "0xE4092C")]
	public Small_Splash()
	{
	}
}
[Token(Token = "0x2000070")]
public class PlaceInteractiveWaterAtCollider : MonoBehaviour
{
	[Token(Token = "0x4000356")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform controllerTransform;

	[Token(Token = "0x60001FE")]
	[Address(RVA = "0xF5227C", Offset = "0xF5227C", VA = "0xF5227C")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60001FF")]
	[Address(RVA = "0xF523A0", Offset = "0xF523A0", VA = "0xF523A0")]
	public PlaceInteractiveWaterAtCollider()
	{
	}
}
[Token(Token = "0x2000071")]
public class SetInteractiveWaterShaderEffects : MonoBehaviour
{
	[Token(Token = "0x4000357")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private RenderTexture rt;

	[Token(Token = "0x4000358")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Transform target;

	[Token(Token = "0x6000200")]
	[Address(RVA = "0xE4059C", Offset = "0xE4059C", VA = "0xE4059C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000201")]
	[Address(RVA = "0xE40628", Offset = "0xE40628", VA = "0xE40628")]
	private void Update()
	{
	}

	[Token(Token = "0x6000202")]
	[Address(RVA = "0xE40790", Offset = "0xE40790", VA = "0xE40790")]
	public SetInteractiveWaterShaderEffects()
	{
	}
}
[Token(Token = "0x2000072")]
public class ReelGlowNoise : MonoBehaviour
{
	[Token(Token = "0x4000359")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector2 _dir;

	[Token(Token = "0x400035A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float speed;

	[Token(Token = "0x400035B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float minValue;

	[Token(Token = "0x400035C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float turb;

	[Token(Token = "0x6000203")]
	[Address(RVA = "0x155A22C", Offset = "0x155A22C", VA = "0x155A22C")]
	private float Remap(float value, float from1, float to1, float from2, float to2)
	{
		return default(float);
	}

	[Token(Token = "0x6000204")]
	[Address(RVA = "0x155A248", Offset = "0x155A248", VA = "0x155A248")]
	private void Start()
	{
	}

	[Token(Token = "0x6000205")]
	[Address(RVA = "0x155A31C", Offset = "0x155A31C", VA = "0x155A31C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000206")]
	[Address(RVA = "0x155A41C", Offset = "0x155A41C", VA = "0x155A41C")]
	public ReelGlowNoise()
	{
	}
}
[Token(Token = "0x2000073")]
public class Turntable : MonoBehaviour
{
	[Token(Token = "0x6000207")]
	[Address(RVA = "0x18029E4", Offset = "0x18029E4", VA = "0x18029E4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000208")]
	[Address(RVA = "0x1802A18", Offset = "0x1802A18", VA = "0x1802A18")]
	public Turntable()
	{
	}
}
[Token(Token = "0x2000074")]
public class ScrollTexture : MonoBehaviour
{
	[Token(Token = "0x400035D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float ScrollX;

	[Token(Token = "0x400035E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float ScrollY;

	[Token(Token = "0x6000209")]
	[Address(RVA = "0xE403EC", Offset = "0xE403EC", VA = "0xE403EC")]
	private void Update()
	{
	}

	[Token(Token = "0x600020A")]
	[Address(RVA = "0xE404C0", Offset = "0xE404C0", VA = "0xE404C0")]
	public ScrollTexture()
	{
	}
}
[Token(Token = "0x2000075")]
public class AquaFish : MonoBehaviour
{
	[Token(Token = "0x400035F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] models;

	[Token(Token = "0x4000360")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform ModelParent;

	[Token(Token = "0x4000361")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private SphereCollider col;

	[Token(Token = "0x4000362")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Rigidbody rb;

	[Token(Token = "0x4000363")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float nextMoveTime;

	[Token(Token = "0x4000364")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Transform target;

	[Token(Token = "0x4000365")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool canLookAt;

	[Token(Token = "0x17000018")]
	public SphereCollider Collider
	{
		[Token(Token = "0x600020B")]
		[Address(RVA = "0xCAD670", Offset = "0xCAD670", VA = "0xCAD670")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600020C")]
	[Address(RVA = "0xCAD678", Offset = "0xCAD678", VA = "0xCAD678")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600020D")]
	[Address(RVA = "0xCAD6D8", Offset = "0xCAD6D8", VA = "0xCAD6D8")]
	public void UpdateFish()
	{
	}

	[Token(Token = "0x600020E")]
	[Address(RVA = "0xCAD9DC", Offset = "0xCAD9DC", VA = "0xCAD9DC")]
	private void SetModel()
	{
	}

	[Token(Token = "0x600020F")]
	[Address(RVA = "0xCAD8C8", Offset = "0xCAD8C8", VA = "0xCAD8C8")]
	private void FaceTarget()
	{
	}

	[Token(Token = "0x6000210")]
	[Address(RVA = "0xCAD880", Offset = "0xCAD880", VA = "0xCAD880")]
	private void GetNetMoveTime()
	{
	}

	[Token(Token = "0x6000211")]
	[Address(RVA = "0xCAD798", Offset = "0xCAD798", VA = "0xCAD798")]
	private void Move()
	{
	}

	[Token(Token = "0x6000212")]
	[Address(RVA = "0xCADA80", Offset = "0xCADA80", VA = "0xCADA80")]
	public AquaFish()
	{
	}

	[Token(Token = "0x6000213")]
	[Address(RVA = "0xCADA90", Offset = "0xCADA90", VA = "0xCADA90")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EE808", Offset = "0x9EE808")]
	private void <FaceTarget>b__12_0()
	{
	}
}
[Token(Token = "0x2000076")]
public class AquaFishController : MonoBehaviour
{
	[Token(Token = "0x4000366")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject fishPrefab;

	[Token(Token = "0x4000367")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private int numFish;

	[Token(Token = "0x4000368")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private AquaFish[] fish;

	[Token(Token = "0x4000369")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int fishIndex;

	[Token(Token = "0x6000214")]
	[Address(RVA = "0xCADA9C", Offset = "0xCADA9C", VA = "0xCADA9C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000215")]
	[Address(RVA = "0xCADCC4", Offset = "0xCADCC4", VA = "0xCADCC4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000216")]
	[Address(RVA = "0xCADD30", Offset = "0xCADD30", VA = "0xCADD30")]
	public void Reset()
	{
	}

	[Token(Token = "0x6000217")]
	[Address(RVA = "0xCAE0E8", Offset = "0xCAE0E8", VA = "0xCAE0E8")]
	public AquaFishController()
	{
	}
}
[Token(Token = "0x2000077")]
public class DecoSlotPointerEnterExit : MonoBehaviour
{
	[Token(Token = "0x400036A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int uiDecoSlotIndex;

	[Token(Token = "0x6000218")]
	[Address(RVA = "0xE2B7E0", Offset = "0xE2B7E0", VA = "0xE2B7E0")]
	public void OnPointerEnter()
	{
	}

	[Token(Token = "0x6000219")]
	[Address(RVA = "0xE2B844", Offset = "0xE2B844", VA = "0xE2B844")]
	public void OnPointerExit()
	{
	}

	[Token(Token = "0x600021A")]
	[Address(RVA = "0xE2B8A8", Offset = "0xE2B8A8", VA = "0xE2B8A8")]
	public DecoSlotPointerEnterExit()
	{
	}
}
[Token(Token = "0x2000078")]
public class Delay : MonoBehaviour
{
	[Token(Token = "0x2000357")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E7BE0", Offset = "0x9E7BE0")]
	private sealed class <PlayAfterDelay>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400177D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400177E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400177F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float delay;

		[Token(Token = "0x4001780")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Delay <>4__this;

		[Token(Token = "0x1700020F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600184F")]
			[Address(RVA = "0xE2BB64", Offset = "0xE2BB64", VA = "0xE2BB64", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000210")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001851")]
			[Address(RVA = "0xE2BBCC", Offset = "0xE2BBCC", VA = "0xE2BBCC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600184C")]
		[Address(RVA = "0xE2B978", Offset = "0xE2B978", VA = "0xE2B978")]
		[DebuggerHidden]
		public <PlayAfterDelay>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x600184D")]
		[Address(RVA = "0xE2BA64", Offset = "0xE2BA64", VA = "0xE2BA64", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600184E")]
		[Address(RVA = "0xE2BA68", Offset = "0xE2BA68", VA = "0xE2BA68", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001850")]
		[Address(RVA = "0xE2BB6C", Offset = "0xE2BB6C", VA = "0xE2BB6C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000358")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E7BF0", Offset = "0x9E7BF0")]
	private sealed class <StopAfterDelay>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001781")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001782")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001783")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float delay;

		[Token(Token = "0x4001784")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Delay <>4__this;

		[Token(Token = "0x17000211")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001855")]
			[Address(RVA = "0xE2BCD0", Offset = "0xE2BCD0", VA = "0xE2BCD0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000212")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001857")]
			[Address(RVA = "0xE2BD38", Offset = "0xE2BD38", VA = "0xE2BD38", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001852")]
		[Address(RVA = "0xE2BA30", Offset = "0xE2BA30", VA = "0xE2BA30")]
		[DebuggerHidden]
		public <StopAfterDelay>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6001853")]
		[Address(RVA = "0xE2BBD4", Offset = "0xE2BBD4", VA = "0xE2BBD4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001854")]
		[Address(RVA = "0xE2BBD8", Offset = "0xE2BBD8", VA = "0xE2BBD8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001856")]
		[Address(RVA = "0xE2BCD8", Offset = "0xE2BCD8", VA = "0xE2BCD8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400036B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool startOnAwake;

	[Token(Token = "0x400036C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float startDelay;

	[Token(Token = "0x400036D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float stopDelay;

	[Token(Token = "0x400036E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private bool isPlaying;

	[Token(Token = "0x600021B")]
	[Address(RVA = "0xE2B8B0", Offset = "0xE2B8B0", VA = "0xE2B8B0")]
	private void Awake()
	{
	}

	[Token(Token = "0x600021C")]
	[Address(RVA = "0xE2B8EC", Offset = "0xE2B8EC", VA = "0xE2B8EC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9EE818", Offset = "0x9EE818")]
	private IEnumerator PlayAfterDelay(float delay)
	{
		return null;
	}

	[Token(Token = "0x600021D")]
	[Address(RVA = "0xE2B9A4", Offset = "0xE2B9A4", VA = "0xE2B9A4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9EE87C", Offset = "0x9EE87C")]
	private IEnumerator StopAfterDelay(float delay)
	{
		return null;
	}

	[Token(Token = "0x600021E")]
	[Address(RVA = "0xE2BA5C", Offset = "0xE2BA5C", VA = "0xE2BA5C")]
	public Delay()
	{
	}
}
[Token(Token = "0x2000079")]
public class FixedXRInteractorLineVisual : XRInteractorLineVisual
{
	[Token(Token = "0x600021F")]
	[Address(RVA = "0xE2E89C", Offset = "0xE2E89C", VA = "0xE2E89C")]
	protected new void Awake()
	{
	}

	[Token(Token = "0x6000220")]
	[Address(RVA = "0xE2E974", Offset = "0xE2E974", VA = "0xE2E974")]
	protected void OnDestroy()
	{
	}

	[Token(Token = "0x6000221")]
	[Address(RVA = "0xE2E9E0", Offset = "0xE2E9E0", VA = "0xE2E9E0")]
	protected new void OnEnable()
	{
	}

	[Token(Token = "0x6000222")]
	[Address(RVA = "0xE2EA18", Offset = "0xE2EA18", VA = "0xE2EA18")]
	protected new void OnDisable()
	{
	}

	[Token(Token = "0x6000223")]
	[Address(RVA = "0xE2EABC", Offset = "0xE2EABC", VA = "0xE2EABC")]
	public FixedXRInteractorLineVisual()
	{
	}
}
[Token(Token = "0x200007A")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x9E6488", Offset = "0x9E6488")]
public class PredatorDataSO : ScriptableObject
{
	[Token(Token = "0x400036F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool PredatorsEnabled;

	[Token(Token = "0x4000370")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float SpawnRate;

	[Token(Token = "0x4000371")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int NumberLimit;

	[Token(Token = "0x4000372")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float Speed;

	[Token(Token = "0x4000373")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float Radius;

	[Token(Token = "0x4000374")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float HideDuration;

	[Token(Token = "0x4000375")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float MaxValue;

	[Token(Token = "0x4000376")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float MinValue;

	[Token(Token = "0x6000224")]
	[Address(RVA = "0x1549AD0", Offset = "0x1549AD0", VA = "0x1549AD0")]
	public PredatorDataSO()
	{
	}
}
[Token(Token = "0x200007B")]
public class Launcher : MonoBehaviour
{
	[Token(Token = "0x2000359")]
	private struct LaunchData
	{
		[Token(Token = "0x4001785")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public readonly Vector3 initialVelocity;

		[Token(Token = "0x4001786")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public readonly float timeToTarget;

		[Token(Token = "0x6001858")]
		[Address(RVA = "0xF3CD84", Offset = "0xF3CD84", VA = "0xF3CD84")]
		public LaunchData(Vector3 initialVelocity, float timeToTarget)
		{
		}
	}

	[Token(Token = "0x4000377")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Rigidbody ball;

	[Token(Token = "0x4000378")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform target;

	[Token(Token = "0x4000379")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float h;

	[Token(Token = "0x400037A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float gravity;

	[Token(Token = "0x400037B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool debugPath;

	[Token(Token = "0x6000225")]
	[Address(RVA = "0xF3C81C", Offset = "0xF3C81C", VA = "0xF3C81C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000226")]
	[Address(RVA = "0xF3C83C", Offset = "0xF3C83C", VA = "0xF3C83C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000227")]
	[Address(RVA = "0xF3C888", Offset = "0xF3C888", VA = "0xF3C888")]
	private void Launch()
	{
	}

	[Token(Token = "0x6000228")]
	[Address(RVA = "0xF3CB34", Offset = "0xF3CB34", VA = "0xF3CB34")]
	private LaunchData CalculateLaunchData()
	{
		return default(LaunchData);
	}

	[Token(Token = "0x6000229")]
	[Address(RVA = "0xF3C934", Offset = "0xF3C934", VA = "0xF3C934")]
	private void DrawPath()
	{
	}

	[Token(Token = "0x600022A")]
	[Address(RVA = "0xF3CD90", Offset = "0xF3CD90", VA = "0xF3CD90")]
	public Launcher()
	{
	}
}
[Token(Token = "0x200007C")]
public class PlaceTarget : MonoBehaviour
{
	[Token(Token = "0x400037C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float waterLevel;

	[Token(Token = "0x600022B")]
	[Address(RVA = "0xF523A8", Offset = "0xF523A8", VA = "0xF523A8")]
	private void Start()
	{
	}

	[Token(Token = "0x600022C")]
	[Address(RVA = "0xF52468", Offset = "0xF52468", VA = "0xF52468")]
	private void Update()
	{
	}

	[Token(Token = "0x600022D")]
	[Address(RVA = "0xF52528", Offset = "0xF52528", VA = "0xF52528")]
	public PlaceTarget()
	{
	}
}
[Token(Token = "0x200007D")]
public class EventArgs
{
	[Token(Token = "0x400037D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E8BAC", Offset = "0x9E8BAC")]
	private string <EventName>k__BackingField;

	[Token(Token = "0x17000019")]
	public string EventName
	{
		[Token(Token = "0x600022E")]
		[Address(RVA = "0xE2E02C", Offset = "0xE2E02C", VA = "0xE2E02C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EE8E0", Offset = "0x9EE8E0")]
		get
		{
			return null;
		}
		[Token(Token = "0x600022F")]
		[Address(RVA = "0xE2E034", Offset = "0xE2E034", VA = "0xE2E034")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EE8F0", Offset = "0x9EE8F0")]
		set
		{
		}
	}

	[Token(Token = "0x6000230")]
	[Address(RVA = "0xE2E03C", Offset = "0xE2E03C", VA = "0xE2E03C")]
	public EventArgs()
	{
	}
}
[Token(Token = "0x200007E")]
public interface IEventListener
{
	[Token(Token = "0x6000231")]
	void OnEvent(EventArgs args);
}
[Token(Token = "0x200007F")]
public static class XRInputNotifiManager
{
	[Token(Token = "0x400037E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Dictionary<string, List<IEventListener>> eventListeners;

	[Token(Token = "0x6000232")]
	[Address(RVA = "0x148F2E0", Offset = "0x148F2E0", VA = "0x148F2E0")]
	public static void AttachListener(string eventName, IEventListener listener)
	{
	}

	[Token(Token = "0x6000233")]
	[Address(RVA = "0x148F40C", Offset = "0x148F40C", VA = "0x148F40C")]
	public static void DetachListener(string eventName, IEventListener listener)
	{
	}

	[Token(Token = "0x6000234")]
	[Address(RVA = "0x148F518", Offset = "0x148F518", VA = "0x148F518")]
	public static void NotifyEvent(string eventName)
	{
	}

	[Token(Token = "0x6000235")]
	[Address(RVA = "0x148F5B0", Offset = "0x148F5B0", VA = "0x148F5B0")]
	public static void NotifyEvent(EventArgs args)
	{
	}
}
[Token(Token = "0x2000080")]
public class PopRandomIdleSelector : MonoBehaviour
{
	[Token(Token = "0x400037F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Animator anim;

	[Token(Token = "0x6000237")]
	[Address(RVA = "0x1549960", Offset = "0x1549960", VA = "0x1549960")]
	private void Start()
	{
	}

	[Token(Token = "0x6000238")]
	[Address(RVA = "0x15499B8", Offset = "0x15499B8", VA = "0x15499B8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000239")]
	[Address(RVA = "0x15499C0", Offset = "0x15499C0", VA = "0x15499C0")]
	private void SetRandomIdle()
	{
	}

	[Token(Token = "0x600023A")]
	[Address(RVA = "0x1549A74", Offset = "0x1549A74", VA = "0x1549A74")]
	public PopRandomIdleSelector()
	{
	}
}
[Token(Token = "0x2000081")]
public class PositionFollower : MonoBehaviour
{
	[Token(Token = "0x4000380")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform TrnsToFollow;

	[Token(Token = "0x600023B")]
	[Address(RVA = "0x1549A7C", Offset = "0x1549A7C", VA = "0x1549A7C")]
	private void Update()
	{
	}

	[Token(Token = "0x600023C")]
	[Address(RVA = "0x1549AC8", Offset = "0x1549AC8", VA = "0x1549AC8")]
	public PositionFollower()
	{
	}
}
[Token(Token = "0x2000082")]
public class CheckRbVelo : MonoBehaviour
{
	[Token(Token = "0x4000381")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Rigidbody rb;

	[Token(Token = "0x600023D")]
	[Address(RVA = "0xE29A00", Offset = "0xE29A00", VA = "0xE29A00")]
	private void Start()
	{
	}

	[Token(Token = "0x600023E")]
	[Address(RVA = "0xE29A60", Offset = "0xE29A60", VA = "0xE29A60")]
	private void Update()
	{
	}

	[Token(Token = "0x600023F")]
	[Address(RVA = "0xE29B24", Offset = "0xE29B24", VA = "0xE29B24")]
	public CheckRbVelo()
	{
	}
}
[Token(Token = "0x2000083")]
public class ResetPosition : MonoBehaviour
{
	[Token(Token = "0x4000382")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Vector3 localPosition;

	[Token(Token = "0x6000240")]
	[Address(RVA = "0x155A6DC", Offset = "0x155A6DC", VA = "0x155A6DC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000241")]
	[Address(RVA = "0x155A6E0", Offset = "0x155A6E0", VA = "0x155A6E0")]
	public void Reset()
	{
	}

	[Token(Token = "0x6000242")]
	[Address(RVA = "0x155A718", Offset = "0x155A718", VA = "0x155A718")]
	public ResetPosition()
	{
	}
}
[Token(Token = "0x2000084")]
public class XRInteractableTest : XRBaseInteractable
{
	[Token(Token = "0x6000243")]
	[Address(RVA = "0x148F7E0", Offset = "0x148F7E0", VA = "0x148F7E0")]
	public void GetObjOnRight(Transform obj)
	{
	}

	[Token(Token = "0x6000244")]
	[Address(RVA = "0x148F818", Offset = "0x148F818", VA = "0x148F818")]
	private Vector3 GetWorldAttachPosition(XRBaseInteractor interactor)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000245")]
	[Address(RVA = "0x148F83C", Offset = "0x148F83C", VA = "0x148F83C")]
	public XRInteractableTest()
	{
	}
}
[Token(Token = "0x2000085")]
public class temp : MonoBehaviour
{
	[Token(Token = "0x4000383")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Transform fin;

	[Token(Token = "0x4000384")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Tween finTween;

	[Token(Token = "0x6000246")]
	[Address(RVA = "0x148FEF4", Offset = "0x148FEF4", VA = "0x148FEF4")]
	private void animateFinDown()
	{
	}

	[Token(Token = "0x6000247")]
	[Address(RVA = "0x148FFD4", Offset = "0x148FFD4", VA = "0x148FFD4")]
	private void animateFinUp()
	{
	}

	[Token(Token = "0x6000248")]
	[Address(RVA = "0x1490024", Offset = "0x1490024", VA = "0x1490024")]
	private void finishAnimation()
	{
	}

	[Token(Token = "0x6000249")]
	[Address(RVA = "0x1490028", Offset = "0x1490028", VA = "0x1490028")]
	public temp()
	{
	}

	[Token(Token = "0x600024A")]
	[Address(RVA = "0x1490030", Offset = "0x1490030", VA = "0x1490030")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EE900", Offset = "0x9EE900")]
	private void <animateFinDown>b__2_0()
	{
	}
}
[Token(Token = "0x2000086")]
public class RegisterWater : MonoBehaviour
{
	[Token(Token = "0x200035A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E7C00", Offset = "0x9E7C00")]
	private sealed class <SetWater>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001787")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001788")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001789")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RegisterWater <>4__this;

		[Token(Token = "0x17000213")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600185C")]
			[Address(RVA = "0x155A66C", Offset = "0x155A66C", VA = "0x155A66C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000214")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600185E")]
			[Address(RVA = "0x155A6D4", Offset = "0x155A6D4", VA = "0x155A6D4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001859")]
		[Address(RVA = "0x155A4E0", Offset = "0x155A4E0", VA = "0x155A4E0")]
		[DebuggerHidden]
		public <SetWater>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x600185A")]
		[Address(RVA = "0x155A514", Offset = "0x155A514", VA = "0x155A514", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600185B")]
		[Address(RVA = "0x155A518", Offset = "0x155A518", VA = "0x155A518", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600185D")]
		[Address(RVA = "0x155A674", Offset = "0x155A674", VA = "0x155A674", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x600024B")]
	[Address(RVA = "0x155A430", Offset = "0x155A430", VA = "0x155A430")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600024C")]
	[Address(RVA = "0x155A4D8", Offset = "0x155A4D8", VA = "0x155A4D8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600024D")]
	[Address(RVA = "0x155A45C", Offset = "0x155A45C", VA = "0x155A45C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9EE910", Offset = "0x9EE910")]
	private IEnumerator SetWater()
	{
		return null;
	}

	[Token(Token = "0x600024E")]
	[Address(RVA = "0x155A50C", Offset = "0x155A50C", VA = "0x155A50C")]
	public RegisterWater()
	{
	}
}
[Token(Token = "0x2000087")]
public class StartOnRandomFrame : MonoBehaviour
{
	[Token(Token = "0x600024F")]
	[Address(RVA = "0xE420F0", Offset = "0xE420F0", VA = "0xE420F0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000250")]
	[Address(RVA = "0xE421F8", Offset = "0xE421F8", VA = "0xE421F8")]
	public StartOnRandomFrame()
	{
	}
}
[Serializable]
[Token(Token = "0x2000088")]
public class VersionInfo
{
	[Token(Token = "0x4000385")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string BuildNumber;

	[Token(Token = "0x4000386")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string ScmBranch;

	[Token(Token = "0x6000251")]
	[Address(RVA = "0x1480730", Offset = "0x1480730", VA = "0x1480730")]
	public VersionInfo()
	{
	}
}
[Token(Token = "0x2000089")]
public class DataSaver : MonoBehaviour
{
	[Token(Token = "0x6000252")]
	public static void SaveData<T>(T dataToSave, string dataFileName)
	{
	}

	[Token(Token = "0x6000253")]
	public static T LoadData<T>(string dataFileName)
	{
		return (T)null;
	}

	[Token(Token = "0x6000254")]
	[Address(RVA = "0xE2B158", Offset = "0xE2B158", VA = "0xE2B158")]
	public static bool DeleteData(string dataFileName)
	{
		return default(bool);
	}

	[Token(Token = "0x6000255")]
	[Address(RVA = "0xE2B408", Offset = "0xE2B408", VA = "0xE2B408")]
	public DataSaver()
	{
	}
}
[Token(Token = "0x200008A")]
public delegate float EasingFunction(float k);
[Token(Token = "0x200008B")]
public class Easing
{
	[Token(Token = "0x200035B")]
	public class Quadratic
	{
		[Token(Token = "0x600185F")]
		[Address(RVA = "0xE2D9D0", Offset = "0xE2D9D0", VA = "0xE2D9D0")]
		public static float In(float k)
		{
			return default(float);
		}

		[Token(Token = "0x6001860")]
		[Address(RVA = "0xE2D9D8", Offset = "0xE2D9D8", VA = "0xE2D9D8")]
		public static float Out(float k)
		{
			return default(float);
		}

		[Token(Token = "0x6001861")]
		[Address(RVA = "0xE2D9E8", Offset = "0xE2D9E8", VA = "0xE2D9E8")]
		public static float InOut(float k)
		{
			return default(float);
		}

		[Token(Token = "0x6001862")]
		[Address(RVA = "0xE2DA28", Offset = "0xE2DA28", VA = "0xE2DA28")]
		public static float Bezier(float k, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6001863")]
		[Address(RVA = "0xE2DA48", Offset = "0xE2DA48", VA = "0xE2DA48")]
		public Quadratic()
		{
		}
	}

	[Token(Token = "0x200035C")]
	public class Cubic
	{
		[Token(Token = "0x6001864")]
		[Address(RVA = "0xE2D4A4", Offset = "0xE2D4A4", VA = "0xE2D4A4")]
		public static float In(float k)
		{
			return default(float);
		}

		[Token(Token = "0x6001865")]
		[Address(RVA = "0xE2D4B0", Offset = "0xE2D4B0", VA = "0xE2D4B0")]
		public static float Out(float k)
		{
			return default(float);
		}

		[Token(Token = "0x6001866")]
		[Address(RVA = "0xE2D4CC", Offset = "0xE2D4CC", VA = "0xE2D4CC")]
		public static float InOut(float k)
		{
			return default(float);
		}

		[Token(Token = "0x6001867")]
		[Address(RVA = "0xE2D510", Offset = "0xE2D510", VA = "0xE2D510")]
		public Cubic()
		{
		}
	}

	[Token(Token = "0x200035D")]
	public class Quartic
	{
		[Token(Token = "0x6001868")]
		[Address(RVA = "0xE2DA50", Offset = "0xE2DA50", VA = "0xE2DA50")]
		public static float In(float k)
		{
			return default(float);
		}

		[Token(Token = "0x6001869")]
		[Address(RVA = "0xE2DA60", Offset = "0xE2DA60", VA = "0xE2DA60")]
		public static float Out(float k)
		{
			return default(float);
		}

		[Token(Token = "0x600186A")]
		[Address(RVA = "0xE2DA80", Offset = "0xE2DA80", VA = "0xE2DA80")]
		public static float InOut(float k)
		{
			return default(float);
		}

		[Token(Token = "0x600186B")]
		[Address(RVA = "0xE2DAC8", Offset = "0xE2DAC8", VA = "0xE2DAC8")]
		public Quartic()
		{
		}
	}

	[Token(Token = "0x200035E")]
	public class Quintic
	{
		[Token(Token = "0x600186C")]
		[Address(RVA = "0xE2DAD0", Offset = "0xE2DAD0", VA = "0xE2DAD0")]
		public static float In(float k)
		{
			return default(float);
		}

		[Token(Token = "0x600186D")]
		[Address(RVA = "0xE2DAE4", Offset = "0xE2DAE4", VA = "0xE2DAE4")]
		public static float Out(float k)
		{
			return default(float);
		}

		[Token(Token = "0x600186E")]
		[Address(RVA = "0xE2DB08", Offset = "0xE2DB08", VA = "0xE2DB08")]
		public static float InOut(float k)
		{
			return default(float);
		}

		[Token(Token = "0x600186F")]
		[Address(RVA = "0xE2DB5C", Offset = "0xE2DB5C", VA = "0xE2DB5C")]
		public Quintic()
		{
		}
	}

	[Token(Token = "0x200035F")]
	public class Sinusoidal
	{
		[Token(Token = "0x6001870")]
		[Address(RVA = "0xE2DB64", Offset = "0xE2DB64", VA = "0xE2DB64")]
		public static float In(float k)
		{
			return default(float);
		}

		[Token(Token = "0x6001871")]
		[Address(RVA = "0xE2DBEC", Offset = "0xE2DBEC", VA = "0xE2DBEC")]
		public static float Out(float k)
		{
			return default(float);
		}

		[Token(Token = "0x6001872")]
		[Address(RVA = "0xE2DC68", Offset = "0xE2DC68", VA = "0xE2DC68")]
		public static float InOut(float k)
		{
			return default(float);
		}

		[Token(Token = "0x6001873")]
		[Address(RVA = "0xE2DCF0", Offset = "0xE2DCF0", VA = "0xE2DCF0")]
		public Sinusoidal()
		{
		}
	}

	[Token(Token = "0x2000360")]
	public class Exponential
	{
		[Token(Token = "0x6001874")]
		[Address(RVA = "0xE2D7D0", Offset = "0xE2D7D0", VA = "0xE2D7D0")]
		public static float In(float k)
		{
			return default(float);
		}

		[Token(Token = "0x6001875")]
		[Address(RVA = "0xE2D864", Offset = "0xE2D864", VA = "0xE2D864")]
		public static float Out(float k)
		{
			return default(float);
		}

		[Token(Token = "0x6001876")]
		[Address(RVA = "0xE2D8EC", Offset = "0xE2D8EC", VA = "0xE2D8EC")]
		public static float InOut(float k)
		{
			return default(float);
		}

		[Token(Token = "0x6001877")]
		[Address(RVA = "0xE2D9C8", Offset = "0xE2D9C8", VA = "0xE2D9C8")]
		public Exponential()
		{
		}
	}

	[Token(Token = "0x2000361")]
	public class Circular
	{
		[Token(Token = "0x6001878")]
		[Address(RVA = "0xE2D298", Offset = "0xE2D298", VA = "0xE2D298")]
		public static float In(float k)
		{
			return default(float);
		}

		[Token(Token = "0x6001879")]
		[Address(RVA = "0xE2D324", Offset = "0xE2D324", VA = "0xE2D324")]
		public static float Out(float k)
		{
			return default(float);
		}

		[Token(Token = "0x600187A")]
		[Address(RVA = "0xE2D3C0", Offset = "0xE2D3C0", VA = "0xE2D3C0")]
		public static float InOut(float k)
		{
			return default(float);
		}

		[Token(Token = "0x600187B")]
		[Address(RVA = "0xE2D49C", Offset = "0xE2D49C", VA = "0xE2D49C")]
		public Circular()
		{
		}
	}

	[Token(Token = "0x2000362")]
	public class Elastic
	{
		[Token(Token = "0x600187C")]
		[Address(RVA = "0xE2D518", Offset = "0xE2D518", VA = "0xE2D518")]
		public static float In(float k)
		{
			return default(float);
		}

		[Token(Token = "0x600187D")]
		[Address(RVA = "0xE2D5DC", Offset = "0xE2D5DC", VA = "0xE2D5DC")]
		public static float Out(float k)
		{
			return default(float);
		}

		[Token(Token = "0x600187E")]
		[Address(RVA = "0xE2D6A0", Offset = "0xE2D6A0", VA = "0xE2D6A0")]
		public static float InOut(float k)
		{
			return default(float);
		}

		[Token(Token = "0x600187F")]
		[Address(RVA = "0xE2D7C8", Offset = "0xE2D7C8", VA = "0xE2D7C8")]
		public Elastic()
		{
		}
	}

	[Token(Token = "0x2000363")]
	public class Back
	{
		[Token(Token = "0x400178A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static float s;

		[Token(Token = "0x400178B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static float s2;

		[Token(Token = "0x6001880")]
		[Address(RVA = "0xE2CED0", Offset = "0xE2CED0", VA = "0xE2CED0")]
		public static float In(float k)
		{
			return default(float);
		}

		[Token(Token = "0x6001881")]
		[Address(RVA = "0xE2CF5C", Offset = "0xE2CF5C", VA = "0xE2CF5C")]
		public static float Out(float k)
		{
			return default(float);
		}

		[Token(Token = "0x6001882")]
		[Address(RVA = "0xE2CFF4", Offset = "0xE2CFF4", VA = "0xE2CFF4")]
		public static float InOut(float k)
		{
			return default(float);
		}

		[Token(Token = "0x6001883")]
		[Address(RVA = "0xE2D0E0", Offset = "0xE2D0E0", VA = "0xE2D0E0")]
		public Back()
		{
		}
	}

	[Token(Token = "0x2000364")]
	public class Bounce
	{
		[Token(Token = "0x6001885")]
		[Address(RVA = "0xE2D154", Offset = "0xE2D154", VA = "0xE2D154")]
		public static float In(float k)
		{
			return default(float);
		}

		[Token(Token = "0x6001886")]
		[Address(RVA = "0xE2D17C", Offset = "0xE2D17C", VA = "0xE2D17C")]
		public static float Out(float k)
		{
			return default(float);
		}

		[Token(Token = "0x6001887")]
		[Address(RVA = "0xE2D23C", Offset = "0xE2D23C", VA = "0xE2D23C")]
		public static float InOut(float k)
		{
			return default(float);
		}

		[Token(Token = "0x6001888")]
		[Address(RVA = "0xE2D290", Offset = "0xE2D290", VA = "0xE2D290")]
		public Bounce()
		{
		}
	}

	[Token(Token = "0x600025A")]
	[Address(RVA = "0xE2CEC4", Offset = "0xE2CEC4", VA = "0xE2CEC4")]
	public static float Linear(float k)
	{
		return default(float);
	}

	[Token(Token = "0x600025B")]
	[Address(RVA = "0xE2CEC8", Offset = "0xE2CEC8", VA = "0xE2CEC8")]
	public Easing()
	{
	}
}
[Token(Token = "0x200008C")]
public class Wobble : MonoBehaviour
{
	[Token(Token = "0x4000387")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Renderer rend;

	[Token(Token = "0x4000388")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector3 lastPos;

	[Token(Token = "0x4000389")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector3 velocity;

	[Token(Token = "0x400038A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 lastRot;

	[Token(Token = "0x400038B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Vector3 angularVelocity;

	[Token(Token = "0x400038C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float MaxWobble;

	[Token(Token = "0x400038D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float WobbleSpeed;

	[Token(Token = "0x400038E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float Recovery;

	[Token(Token = "0x400038F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float wobbleAmountX;

	[Token(Token = "0x4000390")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float wobbleAmountZ;

	[Token(Token = "0x4000391")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float wobbleAmountToAddX;

	[Token(Token = "0x4000392")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float wobbleAmountToAddZ;

	[Token(Token = "0x4000393")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float pulse;

	[Token(Token = "0x4000394")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float time;

	[Token(Token = "0x600025C")]
	[Address(RVA = "0x14807A0", Offset = "0x14807A0", VA = "0x14807A0")]
	private void Start()
	{
	}

	[Token(Token = "0x600025D")]
	[Address(RVA = "0x1480800", Offset = "0x1480800", VA = "0x1480800")]
	private void Update()
	{
	}

	[Token(Token = "0x600025E")]
	[Address(RVA = "0x1480B28", Offset = "0x1480B28", VA = "0x1480B28")]
	public Wobble()
	{
	}
}
namespace CloudBuildManifest
{
	[Serializable]
	[Token(Token = "0x200008D")]
	public class BuildManifest
	{
		[Token(Token = "0x4000395")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private string scmCommitId;

		[Token(Token = "0x4000396")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private string scmBranch;

		[Token(Token = "0x4000397")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private string buildNumber;

		[Token(Token = "0x4000398")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private string buildStartTime;

		[Token(Token = "0x4000399")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private string projectId;

		[Token(Token = "0x400039A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private string bundleId;

		[Token(Token = "0x400039B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private string unityVersion;

		[Token(Token = "0x400039C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private string xcodeVersion;

		[Token(Token = "0x400039D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private string cloudBuildTargetName;

		[Token(Token = "0x1700001A")]
		public string ScmCommitId
		{
			[Token(Token = "0x6000262")]
			[Address(RVA = "0xE29C9C", Offset = "0xE29C9C", VA = "0xE29C9C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700001B")]
		public string ScmBranch
		{
			[Token(Token = "0x6000263")]
			[Address(RVA = "0xE29CA4", Offset = "0xE29CA4", VA = "0xE29CA4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700001C")]
		public string BuildNumber
		{
			[Token(Token = "0x6000264")]
			[Address(RVA = "0xE29CAC", Offset = "0xE29CAC", VA = "0xE29CAC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700001D")]
		public string BuildStartTime
		{
			[Token(Token = "0x6000265")]
			[Address(RVA = "0xE29CB4", Offset = "0xE29CB4", VA = "0xE29CB4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700001E")]
		public string ProjectId
		{
			[Token(Token = "0x6000266")]
			[Address(RVA = "0xE29CBC", Offset = "0xE29CBC", VA = "0xE29CBC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700001F")]
		public string BundleId
		{
			[Token(Token = "0x6000267")]
			[Address(RVA = "0xE29CC4", Offset = "0xE29CC4", VA = "0xE29CC4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000020")]
		public string UnityVersion
		{
			[Token(Token = "0x6000268")]
			[Address(RVA = "0xE29CCC", Offset = "0xE29CCC", VA = "0xE29CCC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000021")]
		public string XCodeVersion
		{
			[Token(Token = "0x6000269")]
			[Address(RVA = "0xE29CD4", Offset = "0xE29CD4", VA = "0xE29CD4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000022")]
		public string CloudBuildTargetName
		{
			[Token(Token = "0x600026A")]
			[Address(RVA = "0xE29CDC", Offset = "0xE29CDC", VA = "0xE29CDC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600025F")]
		[Address(RVA = "0xE29B2C", Offset = "0xE29B2C", VA = "0xE29B2C")]
		public static BuildManifest Load()
		{
			return null;
		}

		[Token(Token = "0x6000260")]
		[Address(RVA = "0xE29C28", Offset = "0xE29C28", VA = "0xE29C28")]
		public static bool HasBuildManifest()
		{
			return default(bool);
		}

		[Token(Token = "0x6000261")]
		[Address(RVA = "0xE29BD4", Offset = "0xE29BD4", VA = "0xE29BD4")]
		private static TextAsset LoadManifestAsset()
		{
			return null;
		}

		[Token(Token = "0x600026B")]
		[Address(RVA = "0xE29CE4", Offset = "0xE29CE4", VA = "0xE29CE4")]
		public BuildManifest()
		{
		}
	}
}
namespace BigCatch_Env
{
	[Token(Token = "0x200008E")]
	public class SceneLoadButtonEnv : MonoBehaviour
	{
		[Token(Token = "0x400039E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int sceneNum;

		[Token(Token = "0x400039F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string sceneName;

		[Token(Token = "0x600026C")]
		[Address(RVA = "0xE229A4", Offset = "0xE229A4", VA = "0xE229A4")]
		public void OnClick()
		{
		}

		[Token(Token = "0x600026D")]
		[Address(RVA = "0xE22B24", Offset = "0xE22B24", VA = "0xE22B24")]
		public SceneLoadButtonEnv()
		{
		}
	}
	[Token(Token = "0x200008F")]
	public class SceneLoaderEnv : MonoBehaviour
	{
		[Token(Token = "0x40003A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static SceneLoaderEnv instance;

		[Token(Token = "0x40003A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool isLoading;

		[Token(Token = "0x600026E")]
		[Address(RVA = "0xE22B2C", Offset = "0xE22B2C", VA = "0xE22B2C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600026F")]
		[Address(RVA = "0xE229E4", Offset = "0xE229E4", VA = "0xE229E4")]
		internal static void Load(int sceneNum)
		{
		}

		[Token(Token = "0x6000270")]
		[Address(RVA = "0xE22A84", Offset = "0xE22A84", VA = "0xE22A84")]
		internal static void Load(string sceneName)
		{
		}

		[Token(Token = "0x6000271")]
		[Address(RVA = "0xE22B8C", Offset = "0xE22B8C", VA = "0xE22B8C")]
		public SceneLoaderEnv()
		{
		}
	}
}
namespace BigCatchProto
{
	[Token(Token = "0x2000090")]
	public class BendingTest : MonoBehaviour
	{
		[Token(Token = "0x40003A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Animator ani;

		[Token(Token = "0x40003A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform tar3;

		[Token(Token = "0x6000272")]
		[Address(RVA = "0xE2280C", Offset = "0xE2280C", VA = "0xE2280C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000273")]
		[Address(RVA = "0xE2291C", Offset = "0xE2291C", VA = "0xE2291C")]
		private void ResetBending()
		{
		}

		[Token(Token = "0x6000274")]
		[Address(RVA = "0xE2299C", Offset = "0xE2299C", VA = "0xE2299C")]
		public BendingTest()
		{
		}
	}
}
namespace StylizedWaterShader
{
	[Token(Token = "0x2000091")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x9E64F4", Offset = "0x9E64F4")]
	[ExecuteInEditMode]
	public class EnableDepthBuffer : MonoBehaviour
	{
		[Token(Token = "0x40003A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Camera cam;

		[Token(Token = "0x6000275")]
		[Address(RVA = "0xE42200", Offset = "0xE42200", VA = "0xE42200")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6000276")]
		[Address(RVA = "0xE422B0", Offset = "0xE422B0", VA = "0xE422B0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000277")]
		[Address(RVA = "0xE423B4", Offset = "0xE423B4", VA = "0xE423B4")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000278")]
		[Address(RVA = "0xE42448", Offset = "0xE42448", VA = "0xE42448")]
		public EnableDepthBuffer()
		{
		}
	}
	[Token(Token = "0x2000092")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x9E6568", Offset = "0x9E6568")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x9E6568", Offset = "0x9E6568")]
	public class StylizedWater : MonoBehaviour
	{
		[Token(Token = "0x40003A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string[] shaderNames;

		[Token(Token = "0x40003A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int shaderIndex;

		[Token(Token = "0x40003A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Shader shader;

		[Token(Token = "0x40003A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Shader DesktopShader;

		[Token(Token = "0x40003A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Shader MobileAdvancedShader;

		[Token(Token = "0x40003AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9E8C6C", Offset = "0x9E8C6C")]
		public int renderQueue;

		[Token(Token = "0x40003AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public bool enableVertexColors;

		[Token(Token = "0x40003AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
		public bool enableDepthTex;

		[Token(Token = "0x40003AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x46")]
		public bool isUnlit;

		[Token(Token = "0x40003AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x47")]
		public bool enableGradient;

		[Token(Token = "0x40003AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Gradient colorGradient;

		[Token(Token = "0x40003B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "ColorUsageAttribute", RVA = "0x9E8C8C", Offset = "0x9E8C8C")]
		public Color waterShallowColor;

		[Token(Token = "0x40003B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9E8CA4", Offset = "0x9E8CA4")]
		public float depth;

		[Token(Token = "0x40003B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[AttributeAttribute(Name = "ColorUsageAttribute", RVA = "0x9E8CC0", Offset = "0x9E8CC0")]
		public Color waterColor;

		[Token(Token = "0x40003B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[AttributeAttribute(Name = "ColorUsageAttribute", RVA = "0x9E8CD8", Offset = "0x9E8CD8")]
		public Color fresnelColor;

		[Token(Token = "0x40003B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public float fresnel;

		[Token(Token = "0x40003B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "ColorUsageAttribute", RVA = "0x9E8CF0", Offset = "0x9E8CF0")]
		public Color rimColor;

		[Token(Token = "0x40003B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9E8D08", Offset = "0x9E8D08")]
		public float waveTint;

		[Token(Token = "0x40003B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9E8D20", Offset = "0x9E8D20")]
		public float transparency;

		[Token(Token = "0x40003B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9E8D38", Offset = "0x9E8D38")]
		public float glossiness;

		[Token(Token = "0x40003B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9E8D54", Offset = "0x9E8D54")]
		public float metallicness;

		[Token(Token = "0x40003BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9E8D6C", Offset = "0x9E8D6C")]
		public float edgeFade;

		[Token(Token = "0x40003BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public string[] tilingMethodNames;

		[Token(Token = "0x40003BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public float worldSpaceTiling;

		[Token(Token = "0x40003BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9E8D84", Offset = "0x9E8D84")]
		public float refractionAmount;

		[Token(Token = "0x40003BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public bool enableNormalMap;

		[Token(Token = "0x40003BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9E8DA0", Offset = "0x9E8DA0")]
		public float normalStrength;

		[Token(Token = "0x40003C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public bool enableMacroNormals;

		[Token(Token = "0x40003C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9E8DB8", Offset = "0x9E8DB8")]
		public float macroNormalsDistance;

		[Token(Token = "0x40003C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9E8DD8", Offset = "0x9E8DD8")]
		public float normalTiling;

		[Token(Token = "0x40003C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		public int intersectionSolver;

		[Token(Token = "0x40003C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public string[] intersectionSolverNames;

		[Token(Token = "0x40003C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9E8DF4", Offset = "0x9E8DF4")]
		public float rimSize;

		[Token(Token = "0x40003C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9E8E0C", Offset = "0x9E8E0C")]
		public float rimFalloff;

		[Token(Token = "0x40003C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public float rimTiling;

		[Token(Token = "0x40003C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9E8E28", Offset = "0x9E8E28")]
		public float rimDistortion;

		[Token(Token = "0x40003C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public bool enableVCIntersection;

		[Token(Token = "0x40003CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		public int foamSolver;

		[Token(Token = "0x40003CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public string[] foamSolverNames;

		[Token(Token = "0x40003CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9E8E40", Offset = "0x9E8E40")]
		public float foamOpacity;

		[Token(Token = "0x40003CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		public float foamTiling;

		[Token(Token = "0x40003CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9E8E58", Offset = "0x9E8E58")]
		public float foamSize;

		[Token(Token = "0x40003CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9E8E70", Offset = "0x9E8E70")]
		public float foamDistortion;

		[Token(Token = "0x40003D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9E8E88", Offset = "0x9E8E88")]
		public float foamSpeed;

		[Token(Token = "0x40003D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9E8EA0", Offset = "0x9E8EA0")]
		public float waveFoam;

		[Token(Token = "0x40003D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9E8EB8", Offset = "0x9E8EB8")]
		public float reflectionStrength;

		[Token(Token = "0x40003D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9E8ED0", Offset = "0x9E8ED0")]
		public float reflectionFresnel;

		[Token(Token = "0x40003D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		public bool showReflection;

		[Token(Token = "0x40003D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9E8EEC", Offset = "0x9E8EEC")]
		public float reflectionRefraction;

		[Token(Token = "0x40003D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9E8F08", Offset = "0x9E8F08")]
		public float waveSpeed;

		[Token(Token = "0x40003D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9E8F24", Offset = "0x9E8F24")]
		public float waveStrength;

		[Token(Token = "0x40003D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9E8F3C", Offset = "0x9E8F3C")]
		public Vector4 waveDirectionXZ;

		[Token(Token = "0x40003D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		public bool enableSecondaryWaves;

		[Token(Token = "0x40003DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		public Texture2D customIntersection;

		[Token(Token = "0x40003DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		public Texture2D customNormal;

		[Token(Token = "0x40003DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		public Texture2D customHeightmap;

		[Token(Token = "0x40003DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		public string[] intersectionStyleNames;

		[Token(Token = "0x40003DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		public int intersectionStyle;

		[Token(Token = "0x40003DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		public string[] waveStyleNames;

		[Token(Token = "0x40003E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		public int waveStyle;

		[Token(Token = "0x40003E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		public string[] waveHeightmapNames;

		[Token(Token = "0x40003E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		public int waveHeightmapStyle;

		[Token(Token = "0x40003E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
		public float waveSize;

		[Token(Token = "0x40003E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		public bool useCustomIntersection;

		[Token(Token = "0x40003E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x191")]
		public bool useCustomNormals;

		[Token(Token = "0x40003E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x192")]
		public bool useCustomHeightmap;

		[Token(Token = "0x40003E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		public Texture2D normals;

		[Token(Token = "0x40003E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		public Texture2D shadermap;

		[Token(Token = "0x40003E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		public Texture2D colorGradientTex;

		[Token(Token = "0x40003EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		public bool useCompression;

		[Token(Token = "0x40003EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static bool EnableReflections;

		[Token(Token = "0x40003EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		private Camera reflectionCamera;

		[Token(Token = "0x40003ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		private Camera refractCamera;

		[Token(Token = "0x40003EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		public bool useReflection;

		[Token(Token = "0x40003EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C9")]
		public bool useRefractionCam;

		[Token(Token = "0x40003F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1CA")]
		public bool enableReflectionBlur;

		[Token(Token = "0x40003F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9E8F54", Offset = "0x9E8F54")]
		public float reflectionBlurLength;

		[Token(Token = "0x40003F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9E8F6C", Offset = "0x9E8F6C")]
		public int reflectionBlurPasses;

		[Token(Token = "0x40003F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		private StylizedWaterBlur reflectionBlurRenderer;

		[Token(Token = "0x40003F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		public string[] refractionSolverNames;

		[Token(Token = "0x40003F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		public int refractionSolver;

		[Token(Token = "0x40003F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		public string[] resolutionNames;

		[Token(Token = "0x40003F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		public int reflectionRes;

		[Token(Token = "0x40003F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1FC")]
		public int refractRes;

		[Token(Token = "0x40003F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		public int reflectionTextureSize;

		[Token(Token = "0x40003FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x204")]
		public int refractTextureSize;

		[Token(Token = "0x40003FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9E8F84", Offset = "0x9E8F84")]
		public float clipPlaneOffset;

		[Token(Token = "0x40003FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20C")]
		public LayerMask reflectLayers;

		[Token(Token = "0x40003FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		public LayerMask refractLayers;

		[Token(Token = "0x40003FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
		private Dictionary<Camera, Camera> m_ReflectionCameras;

		[Token(Token = "0x40003FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
		private Dictionary<Camera, StylizedWaterBlur> m_BlurRenderers;

		[Token(Token = "0x4000400")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
		private Dictionary<Camera, Camera> m_RefractCameras;

		[Token(Token = "0x4000401")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
		private RenderTexture m_ReflectionTexture;

		[Token(Token = "0x4000402")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
		private RenderTexture m_RefractTexture;

		[Token(Token = "0x4000403")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
		private int m_OldReflectionTextureSize;

		[Token(Token = "0x4000404")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x244")]
		private int m_OldRefractTextureSize;

		[Token(Token = "0x4000405")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
		private bool s_InsideRendering;

		[Token(Token = "0x4000406")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24C")]
		public int lightingMethod;

		[Token(Token = "0x4000407")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
		public string[] lightingMethodNames;

		[Token(Token = "0x4000408")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
		public bool enableShadows;

		[Token(Token = "0x4000409")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
		private StylizedWaterShadowCaster shadowRenderer;

		[Token(Token = "0x400040A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
		public Light shadowCaster;

		[NonSerialized]
		[Token(Token = "0x400040B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
		private MeshRenderer meshRenderer;

		[Token(Token = "0x400040C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
		public Material material;

		[Token(Token = "0x400040D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
		public bool isMobileAdvanced;

		[Token(Token = "0x400040E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x281")]
		public bool isMobilePlatform;

		[Token(Token = "0x400040F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
		public string shaderName;

		[Token(Token = "0x4000410")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
		public bool isWaterLayer;

		[Token(Token = "0x4000411")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x291")]
		public bool hasShaderParams;

		[Token(Token = "0x4000412")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x292")]
		public bool hasMaterial;

		[Token(Token = "0x4000413")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x293")]
		public bool usingSinglePassRendering;

		[Token(Token = "0x4000414")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x294")]
		public bool hideMeshRenderer;

		[Token(Token = "0x6000279")]
		[Address(RVA = "0xE428FC", Offset = "0xE428FC", VA = "0xE428FC")]
		public void OnEnable()
		{
		}

		[Token(Token = "0x600027A")]
		[Address(RVA = "0xE42A34", Offset = "0xE42A34", VA = "0xE42A34")]
		public void Init()
		{
		}

		[Token(Token = "0x600027B")]
		[Address(RVA = "0xE4299C", Offset = "0xE4299C", VA = "0xE4299C")]
		public void GetProperties()
		{
		}

		[Token(Token = "0x600027C")]
		[Address(RVA = "0xE42A38", Offset = "0xE42A38", VA = "0xE42A38")]
		private void GetShaderProperties()
		{
		}

		[Token(Token = "0x600027D")]
		[Address(RVA = "0xE43258", Offset = "0xE43258", VA = "0xE43258")]
		private void GetShaderType()
		{
		}

		[Token(Token = "0x600027E")]
		[Address(RVA = "0xE4325C", Offset = "0xE4325C", VA = "0xE4325C")]
		private void SetShaderType()
		{
		}

		[Token(Token = "0x600027F")]
		[Address(RVA = "0xE429A0", Offset = "0xE429A0", VA = "0xE429A0")]
		public void SetProperties()
		{
		}

		[Token(Token = "0x6000280")]
		[Address(RVA = "0xE4352C", Offset = "0xE4352C", VA = "0xE4352C")]
		private void SetShaderProperties()
		{
		}

		[Token(Token = "0x6000281")]
		[Address(RVA = "0xE43FCC", Offset = "0xE43FCC", VA = "0xE43FCC")]
		public void DisableReflectionCam()
		{
		}

		[Token(Token = "0x6000282")]
		[Address(RVA = "0xE43E14", Offset = "0xE43E14", VA = "0xE43E14")]
		public void DisableRefractionCam()
		{
		}

		[Token(Token = "0x6000283")]
		[Address(RVA = "0xE43260", Offset = "0xE43260", VA = "0xE43260")]
		private void EnableShadowRendering()
		{
		}

		[Token(Token = "0x6000284")]
		[Address(RVA = "0xE43334", Offset = "0xE43334", VA = "0xE43334")]
		private void DisableShadowRendering()
		{
		}

		[Token(Token = "0x6000285")]
		[Address(RVA = "0xE441D8", Offset = "0xE441D8", VA = "0xE441D8")]
		public void SetVegetationStudioWaterLevel()
		{
		}

		[Token(Token = "0x6000286")]
		[Address(RVA = "0xE441DC", Offset = "0xE441DC", VA = "0xE441DC")]
		public void OnWillRenderObject()
		{
		}

		[Token(Token = "0x6000287")]
		[Address(RVA = "0xE45BEC", Offset = "0xE45BEC", VA = "0xE45BEC")]
		public void CreateReflectionTexture()
		{
		}

		[Token(Token = "0x6000288")]
		[Address(RVA = "0xE45D20", Offset = "0xE45D20", VA = "0xE45D20")]
		public void CreateRefractionTexture()
		{
		}

		[Token(Token = "0x6000289")]
		[Address(RVA = "0xE44970", Offset = "0xE44970", VA = "0xE44970")]
		private void CreateWaterObjects(Camera currentCamera, out Camera reflectionCamera, out Camera refractCamera)
		{
		}

		[Token(Token = "0x600028A")]
		[Address(RVA = "0xE45ED4", Offset = "0xE45ED4", VA = "0xE45ED4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600028B")]
		[Address(RVA = "0xE45F94", Offset = "0xE45F94", VA = "0xE45F94")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600028C")]
		[Address(RVA = "0xE45F98", Offset = "0xE45F98", VA = "0xE45F98")]
		public StylizedWater()
		{
		}
	}
	[Token(Token = "0x2000093")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x9E6600", Offset = "0x9E6600")]
	[ExecuteInEditMode]
	public class StylizedWaterBlur : MonoBehaviour
	{
		[Token(Token = "0x4000415")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Camera cam;

		[Token(Token = "0x4000416")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float length;

		[Token(Token = "0x4000417")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int passes;

		[Token(Token = "0x4000418")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Shader m_BlurRenderShader;

		[Token(Token = "0x4000419")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Material m_BlurRenderMat;

		[Token(Token = "0x400041A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private CommandBuffer cmd;

		[Token(Token = "0x17000023")]
		private static Shader BlurRenderShader
		{
			[Token(Token = "0x600028D")]
			[Address(RVA = "0xE460F4", Offset = "0xE460F4", VA = "0xE460F4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000024")]
		private static Material BlurRenderMat
		{
			[Token(Token = "0x600028E")]
			[Address(RVA = "0xE461B0", Offset = "0xE461B0", VA = "0xE461B0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600028F")]
		[Address(RVA = "0xE462A8", Offset = "0xE462A8", VA = "0xE462A8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000290")]
		[Address(RVA = "0xE46350", Offset = "0xE46350", VA = "0xE46350")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000291")]
		[Address(RVA = "0xE45854", Offset = "0xE45854", VA = "0xE45854")]
		public void Render()
		{
		}

		[Token(Token = "0x6000292")]
		[Address(RVA = "0xE463FC", Offset = "0xE463FC", VA = "0xE463FC")]
		public StylizedWaterBlur()
		{
		}
	}
	[Token(Token = "0x2000094")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x9E6674", Offset = "0x9E6674")]
	[ExecuteInEditMode]
	public class StylizedWaterShadowCaster : MonoBehaviour
	{
		[Token(Token = "0x400041B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private CommandBuffer cmd;

		[Token(Token = "0x400041C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Light dirLight;

		[Token(Token = "0x6000293")]
		[Address(RVA = "0xE46410", Offset = "0xE46410", VA = "0xE46410")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000294")]
		[Address(RVA = "0xE465C8", Offset = "0xE465C8", VA = "0xE465C8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000295")]
		[Address(RVA = "0xE46658", Offset = "0xE46658", VA = "0xE46658")]
		public StylizedWaterShadowCaster()
		{
		}
	}
	[Token(Token = "0x2000095")]
	public static class StylizedWaterUtilities
	{
		[Token(Token = "0x2000365")]
		public static class CameraUtils
		{
			[Token(Token = "0x6001889")]
			[Address(RVA = "0xE45674", Offset = "0xE45674", VA = "0xE45674")]
			public static Vector4 CameraSpacePlane(Camera cam, Vector3 pos, Vector3 normal, float sideSign, float clipPlaneOffset)
			{
				return default(Vector4);
			}

			[Token(Token = "0x600188A")]
			[Address(RVA = "0xE453D0", Offset = "0xE453D0", VA = "0xE453D0")]
			public static void CalculateReflectionMatrix(ref Matrix4x4 reflectionMat, Vector4 plane)
			{
			}

			[Token(Token = "0x600188B")]
			[Address(RVA = "0xE45238", Offset = "0xE45238", VA = "0xE45238")]
			public static void CopyCameraSettings(Camera src, Camera dest)
			{
			}
		}

		[Token(Token = "0x400041D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static bool DEBUG;

		[Token(Token = "0x6000296")]
		[Address(RVA = "0xE46660", Offset = "0xE46660", VA = "0xE46660")]
		public static string[] ComposeDropdown(Texture2D[] resource, string replaceFilter)
		{
			return null;
		}

		[Token(Token = "0x6000297")]
		[Address(RVA = "0xE46890", Offset = "0xE46890", VA = "0xE46890")]
		public static bool IsApproximatelyEqual(float a, float b)
		{
			return default(bool);
		}

		[Token(Token = "0x6000298")]
		[Address(RVA = "0xE46910", Offset = "0xE46910", VA = "0xE46910")]
		public static bool HasVertexColors(Mesh mesh)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000096")]
	public class OrbitCamera : MonoBehaviour
	{
		[Token(Token = "0x400041E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9E8F9C", Offset = "0x9E8F9C")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x9E8F9C", Offset = "0x9E8F9C")]
		public Transform pivot;

		[Token(Token = "0x400041F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x9E8FE8", Offset = "0x9E8FE8")]
		public bool enableMouse;

		[Token(Token = "0x4000420")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float idleRotationSpeed;

		[Token(Token = "0x4000421")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Transform cam;

		[Token(Token = "0x4000422")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float cameraRotSide;

		[Token(Token = "0x4000423")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float cameraRotUp;

		[Token(Token = "0x4000424")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float cameraRotSideCur;

		[Token(Token = "0x4000425")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float cameraRotUpCur;

		[Token(Token = "0x4000426")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float distance;

		[Token(Token = "0x600029A")]
		[Address(RVA = "0xE42450", Offset = "0xE42450", VA = "0xE42450")]
		private void Start()
		{
		}

		[Token(Token = "0x600029B")]
		[Address(RVA = "0xE4251C", Offset = "0xE4251C", VA = "0xE4251C")]
		private void Update()
		{
		}

		[Token(Token = "0x600029C")]
		[Address(RVA = "0xE428E0", Offset = "0xE428E0", VA = "0xE428E0")]
		public OrbitCamera()
		{
		}
	}
}
namespace UnityStandardAssets.SceneUtils
{
	[Token(Token = "0x2000097")]
	public class ParticleSceneControls : MonoBehaviour
	{
		[Token(Token = "0x2000366")]
		public enum Mode
		{
			[Token(Token = "0x400178D")]
			Activate,
			[Token(Token = "0x400178E")]
			Instantiate,
			[Token(Token = "0x400178F")]
			Trail
		}

		[Token(Token = "0x2000367")]
		public enum AlignMode
		{
			[Token(Token = "0x4001791")]
			Normal,
			[Token(Token = "0x4001792")]
			Up
		}

		[Serializable]
		[Token(Token = "0x2000368")]
		public class DemoParticleSystem
		{
			[Token(Token = "0x4001793")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Transform transform;

			[Token(Token = "0x4001794")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Mode mode;

			[Token(Token = "0x4001795")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public AlignMode align;

			[Token(Token = "0x4001796")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int maxCount;

			[Token(Token = "0x4001797")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public float minDist;

			[Token(Token = "0x4001798")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public int camOffset;

			[Token(Token = "0x4001799")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public string instructionText;

			[Token(Token = "0x600188C")]
			[Address(RVA = "0x147C464", Offset = "0x147C464", VA = "0x147C464")]
			public DemoParticleSystem()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000369")]
		public class DemoParticleSystemList
		{
			[Token(Token = "0x400179A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public DemoParticleSystem[] items;

			[Token(Token = "0x600188D")]
			[Address(RVA = "0x147C474", Offset = "0x147C474", VA = "0x147C474")]
			public DemoParticleSystemList()
			{
			}
		}

		[Token(Token = "0x4000427")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public DemoParticleSystemList demoParticles;

		[Token(Token = "0x4000428")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float spawnOffset;

		[Token(Token = "0x4000429")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float multiply;

		[Token(Token = "0x400042A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool clearOnChange;

		[Token(Token = "0x400042B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Text titleText;

		[Token(Token = "0x400042C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform sceneCamera;

		[Token(Token = "0x400042D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Text instructionText;

		[Token(Token = "0x400042E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Button previousButton;

		[Token(Token = "0x400042F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Button nextButton;

		[Token(Token = "0x4000430")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public GraphicRaycaster graphicRaycaster;

		[Token(Token = "0x4000431")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public EventSystem eventSystem;

		[Token(Token = "0x4000432")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private ParticleSystemMultiplier m_ParticleMultiplier;

		[Token(Token = "0x4000433")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private List<Transform> m_CurrentParticleList;

		[Token(Token = "0x4000434")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Transform m_Instance;

		[Token(Token = "0x4000435")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int s_SelectedIndex;

		[Token(Token = "0x4000436")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Vector3 m_CamOffsetVelocity;

		[Token(Token = "0x4000437")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private Vector3 m_LastPos;

		[Token(Token = "0x4000438")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static DemoParticleSystem s_Selected;

		[Token(Token = "0x600029D")]
		[Address(RVA = "0x147B3B8", Offset = "0x147B3B8", VA = "0x147B3B8")]
		private void Awake()
		{
		}

		[Token(Token = "0x600029E")]
		[Address(RVA = "0x147B80C", Offset = "0x147B80C", VA = "0x147B80C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600029F")]
		[Address(RVA = "0x147B8E4", Offset = "0x147B8E4", VA = "0x147B8E4")]
		private void Previous()
		{
		}

		[Token(Token = "0x60002A0")]
		[Address(RVA = "0x147B9D8", Offset = "0x147B9D8", VA = "0x147B9D8")]
		public void Next()
		{
		}

		[Token(Token = "0x60002A1")]
		[Address(RVA = "0x147BAC0", Offset = "0x147BAC0", VA = "0x147BAC0")]
		private void Update()
		{
		}

		[Token(Token = "0x60002A2")]
		[Address(RVA = "0x147C270", Offset = "0x147C270", VA = "0x147C270")]
		private bool CheckForGuiCollision()
		{
			return default(bool);
		}

		[Token(Token = "0x60002A3")]
		[Address(RVA = "0x147B4C4", Offset = "0x147B4C4", VA = "0x147B4C4")]
		private void Select(int i)
		{
		}

		[Token(Token = "0x60002A4")]
		[Address(RVA = "0x147C3A8", Offset = "0x147C3A8", VA = "0x147C3A8")]
		public ParticleSceneControls()
		{
		}
	}
	[Token(Token = "0x2000098")]
	public class PlaceTargetWithMouse : MonoBehaviour
	{
		[Token(Token = "0x4000439")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float surfaceOffset;

		[Token(Token = "0x400043A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject setTargetOn;

		[Token(Token = "0x60002A6")]
		[Address(RVA = "0x147C47C", Offset = "0x147C47C", VA = "0x147C47C")]
		private void Update()
		{
		}

		[Token(Token = "0x60002A7")]
		[Address(RVA = "0x147C668", Offset = "0x147C668", VA = "0x147C668")]
		public PlaceTargetWithMouse()
		{
		}
	}
	[Token(Token = "0x2000099")]
	public class SlowMoButton : MonoBehaviour
	{
		[Token(Token = "0x400043B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Sprite FullSpeedTex;

		[Token(Token = "0x400043C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Sprite SlowSpeedTex;

		[Token(Token = "0x400043D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float fullSpeed;

		[Token(Token = "0x400043E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float slowSpeed;

		[Token(Token = "0x400043F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Button button;

		[Token(Token = "0x4000440")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool m_SlowMo;

		[Token(Token = "0x60002A8")]
		[Address(RVA = "0x147C678", Offset = "0x147C678", VA = "0x147C678")]
		private void Start()
		{
		}

		[Token(Token = "0x60002A9")]
		[Address(RVA = "0x147C680", Offset = "0x147C680", VA = "0x147C680")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60002AA")]
		[Address(RVA = "0x147C68C", Offset = "0x147C68C", VA = "0x147C68C")]
		public void ChangeSpeed()
		{
		}

		[Token(Token = "0x60002AB")]
		[Address(RVA = "0x147C7B4", Offset = "0x147C7B4", VA = "0x147C7B4")]
		public SlowMoButton()
		{
		}
	}
}
namespace RogoDigital
{
	[Token(Token = "0x200009A")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x9E66E8", Offset = "0x9E66E8")]
	public class EyeController : BlendSystemUser
	{
		[Token(Token = "0x200036A")]
		public enum ControlMode
		{
			[Token(Token = "0x400179C")]
			Classic,
			[Token(Token = "0x400179D")]
			PoseBased
		}

		[Token(Token = "0x200036B")]
		public enum Axis
		{
			[Token(Token = "0x400179F")]
			X_Positive,
			[Token(Token = "0x40017A0")]
			X_Negative,
			[Token(Token = "0x40017A1")]
			Y_Positive,
			[Token(Token = "0x40017A2")]
			Y_Negative,
			[Token(Token = "0x40017A3")]
			Z_Positive,
			[Token(Token = "0x40017A4")]
			Z_Negative
		}

		[Token(Token = "0x200036C")]
		public class BoneShapeInfo
		{
			[Token(Token = "0x40017A5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private Transform bone;

			[Token(Token = "0x40017A6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private Vector3 m_storedPosition;

			[Token(Token = "0x40017A7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			private Quaternion m_storedRotation;

			[Token(Token = "0x40017A8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public Vector3 targetPosition;

			[Token(Token = "0x40017A9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public Quaternion targetRotation;

			[Token(Token = "0x17000215")]
			public Vector3 storedPosition
			{
				[Token(Token = "0x600188E")]
				[Address(RVA = "0x181B47C", Offset = "0x181B47C", VA = "0x181B47C")]
				get
				{
					return default(Vector3);
				}
				[Token(Token = "0x600188F")]
				[Address(RVA = "0x181B488", Offset = "0x181B488", VA = "0x181B488")]
				set
				{
				}
			}

			[Token(Token = "0x17000216")]
			public Quaternion storedRotation
			{
				[Token(Token = "0x6001890")]
				[Address(RVA = "0x181B4B0", Offset = "0x181B4B0", VA = "0x181B4B0")]
				get
				{
					return default(Quaternion);
				}
				[Token(Token = "0x6001891")]
				[Address(RVA = "0x181B4BC", Offset = "0x181B4BC", VA = "0x181B4BC")]
				set
				{
				}
			}

			[Token(Token = "0x6001892")]
			[Address(RVA = "0x181B4E4", Offset = "0x181B4E4", VA = "0x181B4E4")]
			public BoneShapeInfo(BoneShape boneShape)
			{
			}
		}

		[Token(Token = "0x200036D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E7C10", Offset = "0x9E7C10")]
		private sealed class <CloseEyes>d__58 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40017AA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40017AB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40017AC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public EyeController <>4__this;

			[Token(Token = "0x40017AD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private bool <end>5__2;

			[Token(Token = "0x17000217")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001896")]
				[Address(RVA = "0x181AAE4", Offset = "0x181AAE4", VA = "0x181AAE4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000218")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001898")]
				[Address(RVA = "0x181AB4C", Offset = "0x181AB4C", VA = "0x181AB4C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001893")]
			[Address(RVA = "0x181A22C", Offset = "0x181A22C", VA = "0x181A22C")]
			[DebuggerHidden]
			public <CloseEyes>d__58(int <>1__state)
			{
			}

			[Token(Token = "0x6001894")]
			[Address(RVA = "0x181A258", Offset = "0x181A258", VA = "0x181A258", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001895")]
			[Address(RVA = "0x181A25C", Offset = "0x181A25C", VA = "0x181A25C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001897")]
			[Address(RVA = "0x181AAEC", Offset = "0x181AAEC", VA = "0x181AAEC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200036E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E7C20", Offset = "0x9E7C20")]
		private sealed class <OpenEyes>d__59 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40017AE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40017AF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40017B0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public EyeController <>4__this;

			[Token(Token = "0x40017B1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private bool <end>5__2;

			[Token(Token = "0x17000219")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600189C")]
				[Address(RVA = "0x181B40C", Offset = "0x181B40C", VA = "0x181B40C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700021A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600189E")]
				[Address(RVA = "0x181B474", Offset = "0x181B474", VA = "0x181B474", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001899")]
			[Address(RVA = "0x181AB54", Offset = "0x181AB54", VA = "0x181AB54")]
			[DebuggerHidden]
			public <OpenEyes>d__59(int <>1__state)
			{
			}

			[Token(Token = "0x600189A")]
			[Address(RVA = "0x181AB80", Offset = "0x181AB80", VA = "0x181AB80", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600189B")]
			[Address(RVA = "0x181AB84", Offset = "0x181AB84", VA = "0x181AB84", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600189D")]
			[Address(RVA = "0x181B414", Offset = "0x181B414", VA = "0x181B414", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000441")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool blinkingEnabled;

		[Token(Token = "0x4000442")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public ControlMode blinkingControlMode;

		[Token(Token = "0x4000443")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Shape blinkingShape;

		[Token(Token = "0x4000444")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x9E8FF8", Offset = "0x9E8FF8")]
		public int leftEyeBlinkBlendable;

		[Token(Token = "0x4000445")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x9E9030", Offset = "0x9E9030")]
		public int rightEyeBlinkBlendable;

		[Token(Token = "0x4000446")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float minimumBlinkGap;

		[Token(Token = "0x4000447")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float maximumBlinkGap;

		[Token(Token = "0x4000448")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x9E9068", Offset = "0x9E9068")]
		public float blinkDuration;

		[Token(Token = "0x4000449")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public bool randomLookingEnabled;

		[Token(Token = "0x400044A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public ControlMode lookingControlMode;

		[Token(Token = "0x400044B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Shape lookingUpShape;

		[Token(Token = "0x400044C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Shape lookingDownShape;

		[Token(Token = "0x400044D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Shape lookingLeftShape;

		[Token(Token = "0x400044E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Shape lookingRightShape;

		[Token(Token = "0x400044F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x9E90A0", Offset = "0x9E90A0")]
		private Transform _leftEyeLookAtBone;

		[Token(Token = "0x4000450")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x9E90EC", Offset = "0x9E90EC")]
		private Transform _rightEyeLookAtBone;

		[Token(Token = "0x4000451")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Vector2 eyeRotationRangeX;

		[Token(Token = "0x4000452")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Vector2 eyeRotationRangeY;

		[Token(Token = "0x4000453")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public Vector3 eyeLookOffset;

		[Token(Token = "0x4000454")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public Axis eyeForwardAxis;

		[Token(Token = "0x4000455")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public float eyeTurnSpeed;

		[Token(Token = "0x4000456")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		public float minimumChangeDirectionGap;

		[Token(Token = "0x4000457")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public float maximumChangeDirectionGap;

		[Token(Token = "0x4000458")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		public bool targetEnabled;

		[Token(Token = "0x4000459")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAD")]
		public bool autoTarget;

		[Token(Token = "0x400045A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public string autoTargetTag;

		[Token(Token = "0x400045B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public float autoTargetDistance;

		[Token(Token = "0x400045C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public Transform viewTarget;

		[Token(Token = "0x400045D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public float targetWeight;

		[Token(Token = "0x400045E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		public bool boneUpdateAnimation;

		[Token(Token = "0x400045F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private float blinkTimer;

		[Token(Token = "0x4000460")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private bool blinking;

		[Token(Token = "0x4000461")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD5")]
		private bool _keepEyesClosed;

		[Token(Token = "0x4000462")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD6")]
		private bool _asyncBlending;

		[Token(Token = "0x4000463")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private Transform leftEyeDummy;

		[Token(Token = "0x4000464")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private Transform rightEyeDummy;

		[Token(Token = "0x4000465")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private Quaternion leftRotation;

		[Token(Token = "0x4000466")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private Quaternion rightRotation;

		[Token(Token = "0x4000467")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private Vector3[] axisOffsets;

		[Token(Token = "0x4000468")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private float lookTimer;

		[Token(Token = "0x4000469")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		private Quaternion randomAngle;

		[Token(Token = "0x400046A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		private Vector2 randomBlend;

		[Token(Token = "0x400046B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private Transform target;

		[Token(Token = "0x400046C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private Quaternion leftTargetAngle;

		[Token(Token = "0x400046D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private Quaternion rightTargetAngle;

		[Token(Token = "0x400046E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		private Transform[] markedTargets;

		[Token(Token = "0x400046F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		private Dictionary<Transform, BoneShapeInfo> boneShapes;

		[Token(Token = "0x17000025")]
		public bool keepEyesClosed
		{
			[Token(Token = "0x60002AC")]
			[Address(RVA = "0x155A964", Offset = "0x155A964", VA = "0x155A964")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60002AD")]
			[Address(RVA = "0x155A96C", Offset = "0x155A96C", VA = "0x155A96C")]
			set
			{
			}
		}

		[Token(Token = "0x17000026")]
		public Transform LeftEyeLookAtBone
		{
			[Token(Token = "0x60002AE")]
			[Address(RVA = "0x155AACC", Offset = "0x155AACC", VA = "0x155AACC")]
			get
			{
				return null;
			}
			[Token(Token = "0x60002AF")]
			[Address(RVA = "0x155AAD4", Offset = "0x155AAD4", VA = "0x155AAD4")]
			set
			{
			}
		}

		[Token(Token = "0x17000027")]
		public Transform RightEyeLookAtBone
		{
			[Token(Token = "0x60002B0")]
			[Address(RVA = "0x155AFE0", Offset = "0x155AFE0", VA = "0x155AFE0")]
			get
			{
				return null;
			}
			[Token(Token = "0x60002B1")]
			[Address(RVA = "0x155AFE8", Offset = "0x155AFE8", VA = "0x155AFE8")]
			set
			{
			}
		}

		[Token(Token = "0x60002B2")]
		[Address(RVA = "0x155B0A0", Offset = "0x155B0A0", VA = "0x155B0A0")]
		private void Start()
		{
		}

		[Token(Token = "0x60002B3")]
		[Address(RVA = "0x155BAB0", Offset = "0x155BAB0", VA = "0x155BAB0")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60002B4")]
		[Address(RVA = "0x155A9D4", Offset = "0x155A9D4", VA = "0x155A9D4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9EE974", Offset = "0x9EE974")]
		private IEnumerator CloseEyes()
		{
			return null;
		}

		[Token(Token = "0x60002B5")]
		[Address(RVA = "0x155AA50", Offset = "0x155AA50", VA = "0x155AA50")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9EE9D8", Offset = "0x9EE9D8")]
		private IEnumerator OpenEyes()
		{
			return null;
		}

		[Token(Token = "0x60002B6")]
		[Address(RVA = "0x155AB8C", Offset = "0x155AB8C", VA = "0x155AB8C")]
		private void FixDummyHierarchy()
		{
		}

		[Token(Token = "0x60002B7")]
		[Address(RVA = "0x155B988", Offset = "0x155B988", VA = "0x155B988")]
		public void FindTargets()
		{
		}

		[Token(Token = "0x60002B8")]
		[Address(RVA = "0x156092C", Offset = "0x156092C", VA = "0x156092C")]
		public static Vector3 Vector3LerpAngle(Vector3 a, Vector3 b, float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60002B9")]
		[Address(RVA = "0x1560A38", Offset = "0x1560A38", VA = "0x1560A38")]
		public void SetLookAtAmount(float amount)
		{
		}

		[Token(Token = "0x60002BA")]
		[Address(RVA = "0x1560A40", Offset = "0x1560A40", VA = "0x1560A40")]
		public EyeController()
		{
		}
	}
}
namespace RogoDigital.Lipsync
{
	[Token(Token = "0x200009B")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x9E6720", Offset = "0x9E6720")]
	public class AdvancedBlendshapeBlendSystem : BlendSystem
	{
		[Token(Token = "0x4000470")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private BlendshapeManager manager;

		[Token(Token = "0x60002BB")]
		[Address(RVA = "0x181B5BC", Offset = "0x181B5BC", VA = "0x181B5BC", Slot = "4")]
		public override void OnEnable()
		{
		}

		[Token(Token = "0x60002BC")]
		[Address(RVA = "0x181B7E0", Offset = "0x181B7E0", VA = "0x181B7E0", Slot = "9")]
		public override string[] GetBlendables()
		{
			return null;
		}

		[Token(Token = "0x60002BD")]
		[Address(RVA = "0x181BB40", Offset = "0x181BB40", VA = "0x181BB40", Slot = "5")]
		public override void SetBlendableValue(int blendable, float value)
		{
		}

		[Token(Token = "0x60002BE")]
		[Address(RVA = "0x181BD64", Offset = "0x181BD64", VA = "0x181BD64")]
		public AdvancedBlendshapeBlendSystem()
		{
		}
	}
	[Token(Token = "0x200009C")]
	public class BlendshapeBlendSystem : BlendSystem
	{
		[Token(Token = "0x4000471")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public SkinnedMeshRenderer characterMesh;

		[Token(Token = "0x4000472")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public SkinnedMeshRenderer[] optionalOtherMeshes;

		[Token(Token = "0x4000473")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool wireframeVisible;

		[Token(Token = "0x60002BF")]
		[Address(RVA = "0x181C934", Offset = "0x181C934", VA = "0x181C934", Slot = "4")]
		public override void OnEnable()
		{
		}

		[Token(Token = "0x60002C0")]
		[Address(RVA = "0x181CA00", Offset = "0x181CA00", VA = "0x181CA00", Slot = "5")]
		public override void SetBlendableValue(int blendable, float value)
		{
		}

		[Token(Token = "0x60002C1")]
		[Address(RVA = "0x181CB40", Offset = "0x181CB40", VA = "0x181CB40", Slot = "9")]
		public override string[] GetBlendables()
		{
			return null;
		}

		[Token(Token = "0x60002C2")]
		[Address(RVA = "0x181CD34", Offset = "0x181CD34", VA = "0x181CD34", Slot = "6")]
		public override void OnVariableChanged()
		{
		}

		[Token(Token = "0x60002C3")]
		[Address(RVA = "0x181CDB0", Offset = "0x181CDB0", VA = "0x181CDB0")]
		[AttributeAttribute(Name = "BlendSystemButton", RVA = "0x9EEA3C", Offset = "0x9EEA3C")]
		public void ToggleWireframe()
		{
		}

		[Token(Token = "0x60002C4")]
		[Address(RVA = "0x181CE34", Offset = "0x181CE34", VA = "0x181CE34")]
		public BlendshapeBlendSystem()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200009D")]
	public class BlendshapeManager : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200036F")]
		public struct AdvancedBlendShape
		{
			[Token(Token = "0x40017B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string name;

			[Token(Token = "0x40017B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public BlendShapeMapping[] mappings;
		}

		[Serializable]
		[Token(Token = "0x2000370")]
		public struct BlendShapeMapping
		{
			[Token(Token = "0x40017B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public SkinnedMeshRenderer skinnedMeshRenderer;

			[Token(Token = "0x40017B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int blendShapeIndex;
		}

		[Token(Token = "0x4000474")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x9E9148", Offset = "0x9E9148")]
		public AdvancedBlendShape[] blendShapes;

		[Token(Token = "0x4000475")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public AdvancedBlendshapeBlendSystem blendSystem;

		[Token(Token = "0x60002C5")]
		[Address(RVA = "0x181CE40", Offset = "0x181CE40", VA = "0x181CE40")]
		public BlendshapeManager()
		{
		}
	}
	[Token(Token = "0x200009E")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x9E6784", Offset = "0x9E6784")]
	public class SpriteBlendSystem : BlendSystem
	{
		[Token(Token = "0x4000476")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private SpriteManager manager;

		[Token(Token = "0x60002C6")]
		[Address(RVA = "0xE39D00", Offset = "0xE39D00", VA = "0xE39D00", Slot = "4")]
		public override void OnEnable()
		{
		}

		[Token(Token = "0x60002C7")]
		[Address(RVA = "0xE39EB4", Offset = "0xE39EB4", VA = "0xE39EB4", Slot = "5")]
		public override void SetBlendableValue(int blendable, float value)
		{
		}

		[Token(Token = "0x60002C8")]
		[Address(RVA = "0xE3A14C", Offset = "0xE3A14C", VA = "0xE3A14C", Slot = "9")]
		public override string[] GetBlendables()
		{
			return null;
		}

		[Token(Token = "0x60002C9")]
		[Address(RVA = "0xE3A5C0", Offset = "0xE3A5C0", VA = "0xE3A5C0", Slot = "6")]
		public override void OnVariableChanged()
		{
		}

		[Token(Token = "0x60002CA")]
		[Address(RVA = "0xE3A5CC", Offset = "0xE3A5CC", VA = "0xE3A5CC")]
		[AttributeAttribute(Name = "BlendSystemButton", RVA = "0x9EEA74", Offset = "0x9EEA74")]
		public void ShowHelp()
		{
		}

		[Token(Token = "0x60002CB")]
		[Address(RVA = "0xE3A618", Offset = "0xE3A618", VA = "0xE3A618")]
		public SpriteBlendSystem()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200009F")]
	public class SpriteManager : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000371")]
		public class SpriteGroup
		{
			[Token(Token = "0x40017B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[SerializeField]
			public string groupName;

			[Token(Token = "0x40017B7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[SerializeField]
			public SpriteRenderer spriteRenderer;

			[Token(Token = "0x40017B8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[SerializeField]
			public Sprite defaultSprite;

			[Token(Token = "0x600189F")]
			[Address(RVA = "0xE3A6D0", Offset = "0xE3A6D0", VA = "0xE3A6D0")]
			public SpriteGroup(string groupName)
			{
			}
		}

		[Token(Token = "0x4000477")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public List<Sprite> availableSprites;

		[Token(Token = "0x4000478")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		public List<SpriteGroup> groups;

		[Token(Token = "0x4000479")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SpriteBlendSystem blendSystem;

		[Token(Token = "0x60002CC")]
		[Address(RVA = "0xE3A620", Offset = "0xE3A620", VA = "0xE3A620")]
		public SpriteManager()
		{
		}
	}
	[Token(Token = "0x20000A0")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x9E67E8", Offset = "0x9E67E8")]
	public class TextureOffsetBlendSystem : BlendSystem
	{
		[Token(Token = "0x400047A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private TextureOffsetManager manager;

		[Token(Token = "0x400047B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Dictionary<int, int> groupLookup;

		[Token(Token = "0x400047C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Dictionary<string, int> reverseGroupLookup;

		[Token(Token = "0x60002CD")]
		[Address(RVA = "0xE3AA00", Offset = "0xE3AA00", VA = "0xE3AA00", Slot = "4")]
		public override void OnEnable()
		{
		}

		[Token(Token = "0x60002CE")]
		[Address(RVA = "0xE3ABBC", Offset = "0xE3ABBC", VA = "0xE3ABBC")]
		private void CacheGroups()
		{
		}

		[Token(Token = "0x60002CF")]
		[Address(RVA = "0xE3AF6C", Offset = "0xE3AF6C", VA = "0xE3AF6C", Slot = "5")]
		public override void SetBlendableValue(int blendable, float value)
		{
		}

		[Token(Token = "0x60002D0")]
		[Address(RVA = "0xE3B2E0", Offset = "0xE3B2E0", VA = "0xE3B2E0", Slot = "9")]
		public override string[] GetBlendables()
		{
			return null;
		}

		[Token(Token = "0x60002D1")]
		[Address(RVA = "0xE3B71C", Offset = "0xE3B71C", VA = "0xE3B71C", Slot = "6")]
		public override void OnVariableChanged()
		{
		}

		[Token(Token = "0x60002D2")]
		[Address(RVA = "0xE3B728", Offset = "0xE3B728", VA = "0xE3B728")]
		public TextureOffsetBlendSystem()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000A1")]
	public class TextureOffsetManager : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000372")]
		public class MaterialTextureGroup
		{
			[Token(Token = "0x40017B9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[SerializeField]
			public string displayName;

			[Token(Token = "0x40017BA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x9EDFC4", Offset = "0x9EDFC4")]
			[SerializeField]
			public Material material;

			[Token(Token = "0x40017BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[SerializeField]
			public string texturePropertyName;

			[Token(Token = "0x40017BC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x9EE00C", Offset = "0x9EE00C")]
			[SerializeField]
			public Texture2D defaultTexture;

			[Token(Token = "0x40017BD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[SerializeField]
			public Vector2 defaultTextureOffset;

			[Token(Token = "0x40017BE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			[SerializeField]
			public Vector2 defaultTextureScale;

			[Token(Token = "0x40017BF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x9EE064", Offset = "0x9EE064")]
			[SerializeField]
			public TextureSetting[] textureSettings;

			[Token(Token = "0x60018A0")]
			[Address(RVA = "0xE3B79C", Offset = "0xE3B79C", VA = "0xE3B79C")]
			public MaterialTextureGroup()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000373")]
		public class TextureSetting
		{
			[Token(Token = "0x40017C0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[SerializeField]
			public string displayName;

			[Token(Token = "0x40017C1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x9EE0AC", Offset = "0x9EE0AC")]
			[SerializeField]
			public Texture2D texture;

			[Token(Token = "0x40017C2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[SerializeField]
			public Vector2 textureOffset;

			[Token(Token = "0x40017C3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[SerializeField]
			public Vector2 textureScale;

			[Token(Token = "0x60018A1")]
			[Address(RVA = "0xE3B810", Offset = "0xE3B810", VA = "0xE3B810")]
			public TextureSetting()
			{
			}
		}

		[Token(Token = "0x400047D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public MaterialTextureGroup[] materialGroups;

		[Token(Token = "0x400047E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public TextureOffsetBlendSystem blendSystem;

		[Token(Token = "0x60002D3")]
		[Address(RVA = "0xE3B730", Offset = "0xE3B730", VA = "0xE3B730")]
		public TextureOffsetManager()
		{
		}
	}
	[Token(Token = "0x20000A2")]
	[ExecuteInEditMode]
	public class BlendSystem : MonoBehaviour
	{
		[Token(Token = "0x2000374")]
		public delegate void BlendSystemGenericDelegate();

		[NonSerialized]
		[Token(Token = "0x400047F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string blendableDisplayName;

		[NonSerialized]
		[Token(Token = "0x4000480")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string blendableDisplayNamePlural;

		[NonSerialized]
		[Token(Token = "0x4000481")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string noBlendablesMessage;

		[NonSerialized]
		[Token(Token = "0x4000482")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string notReadyMessage;

		[NonSerialized]
		[Token(Token = "0x4000483")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float blendRangeLow;

		[NonSerialized]
		[Token(Token = "0x4000484")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float blendRangeHigh;

		[NonSerialized]
		[Token(Token = "0x4000485")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool allowResyncing;

		[Token(Token = "0x4000486")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		public bool isReady;

		[Token(Token = "0x4000487")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public BlendSystemUser[] users;

		[Token(Token = "0x4000488")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public BlendSystemGenericDelegate onBlendablesChanged;

		[Token(Token = "0x4000489")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		[HideInInspector]
		private List<Blendable> _blendables;

		[Token(Token = "0x17000028")]
		public int blendableCount
		{
			[Token(Token = "0x60002D4")]
			[Address(RVA = "0x181B9D8", Offset = "0x181B9D8", VA = "0x181B9D8")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x60002D5")]
		[Address(RVA = "0x181B79C", Offset = "0x181B79C", VA = "0x181B79C", Slot = "4")]
		public virtual void OnEnable()
		{
		}

		[Token(Token = "0x60002D6")]
		[Address(RVA = "0x181BE3C", Offset = "0x181BE3C", VA = "0x181BE3C")]
		public void Register(BlendSystemUser user)
		{
		}

		[Token(Token = "0x60002D7")]
		[Address(RVA = "0x181C158", Offset = "0x181C158", VA = "0x181C158")]
		public void Unregister(BlendSystemUser user)
		{
		}

		[Token(Token = "0x60002D8")]
		[Address(RVA = "0x181C370", Offset = "0x181C370", VA = "0x181C370", Slot = "5")]
		public virtual void SetBlendableValue(int blendable, float value)
		{
		}

		[Token(Token = "0x60002D9")]
		[Address(RVA = "0x181C374", Offset = "0x181C374", VA = "0x181C374")]
		public float GetBlendableValue(int blendable)
		{
			return default(float);
		}

		[Token(Token = "0x60002DA")]
		[Address(RVA = "0x181C430", Offset = "0x181C430", VA = "0x181C430", Slot = "6")]
		public virtual void OnVariableChanged()
		{
		}

		[Token(Token = "0x60002DB")]
		[Address(RVA = "0x181C434", Offset = "0x181C434", VA = "0x181C434", Slot = "7")]
		public virtual void OnBlendSystemAdded()
		{
		}

		[Token(Token = "0x60002DC")]
		[Address(RVA = "0x181C438", Offset = "0x181C438", VA = "0x181C438", Slot = "8")]
		public virtual void OnBlendSystemRemoved()
		{
		}

		[Token(Token = "0x60002DD")]
		[Address(RVA = "0x181C43C", Offset = "0x181C43C", VA = "0x181C43C", Slot = "9")]
		public virtual string[] GetBlendables()
		{
			return null;
		}

		[Token(Token = "0x60002DE")]
		[Address(RVA = "0x181C444", Offset = "0x181C444", VA = "0x181C444", Slot = "10")]
		public virtual void OnBlendableAddedToPose(int blendable)
		{
		}

		[Token(Token = "0x60002DF")]
		[Address(RVA = "0x181C448", Offset = "0x181C448", VA = "0x181C448", Slot = "11")]
		public virtual void OnBlendableRemovedFromPose(int blendable)
		{
		}

		[Token(Token = "0x60002E0")]
		[Address(RVA = "0x181BA64", Offset = "0x181BA64", VA = "0x181BA64")]
		public void AddBlendable(int blendable, float currentValue)
		{
		}

		[Token(Token = "0x60002E1")]
		[Address(RVA = "0x181C488", Offset = "0x181C488", VA = "0x181C488")]
		public void ClearBlendables()
		{
		}

		[Token(Token = "0x60002E2")]
		[Address(RVA = "0x181BC64", Offset = "0x181BC64", VA = "0x181BC64")]
		public void SetInternalValue(int blendable, float value)
		{
		}

		[Token(Token = "0x60002E3")]
		[Address(RVA = "0x181BD68", Offset = "0x181BD68", VA = "0x181BD68")]
		public BlendSystem()
		{
		}
	}
	[Token(Token = "0x20000A3")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0x9E685C", Offset = "0x9E685C")]
	public class BlendSystemButton : Attribute
	{
		[Token(Token = "0x2000375")]
		public struct Reference
		{
			[Token(Token = "0x40017C4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string displayName;

			[Token(Token = "0x40017C5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public MethodInfo method;

			[Token(Token = "0x60018A6")]
			[Address(RVA = "0x181C784", Offset = "0x181C784", VA = "0x181C784")]
			public Reference(string displayName, MethodInfo method)
			{
			}
		}

		[Token(Token = "0x400048A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string displayName;

		[Token(Token = "0x60002E4")]
		[Address(RVA = "0x181C750", Offset = "0x181C750", VA = "0x181C750")]
		public BlendSystemButton(string displayName)
		{
		}
	}
	[Token(Token = "0x20000A4")]
	public class BlendSystemUser : MonoBehaviour
	{
		[Token(Token = "0x400048B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public BlendSystem blendSystem;

		[Token(Token = "0x60002E5")]
		[Address(RVA = "0x181C7B8", Offset = "0x181C7B8", VA = "0x181C7B8")]
		protected void OnDestroy()
		{
		}

		[Token(Token = "0x60002E6")]
		[Address(RVA = "0x181C7D4", Offset = "0x181C7D4", VA = "0x181C7D4")]
		protected void CleanUpBlendSystems()
		{
		}

		[Token(Token = "0x60002E7")]
		[Address(RVA = "0x181C92C", Offset = "0x181C92C", VA = "0x181C92C")]
		public BlendSystemUser()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000A5")]
	public class Blendable
	{
		[Token(Token = "0x400048C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int number;

		[Token(Token = "0x400048D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float currentWeight;

		[Token(Token = "0x60002E8")]
		[Address(RVA = "0x181C44C", Offset = "0x181C44C", VA = "0x181C44C")]
		public Blendable(int number, float currentWeight)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000A6")]
	public class BoneShape
	{
		[Token(Token = "0x400048E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		public Transform bone;

		[Token(Token = "0x400048F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public Vector3 endPosition;

		[Token(Token = "0x4000490")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		public Vector3 endRotation;

		[Token(Token = "0x4000491")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		public Vector3 endScale;

		[Token(Token = "0x4000492")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		public bool lockPosition;

		[Token(Token = "0x4000493")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
		[SerializeField]
		public bool lockRotation;

		[Token(Token = "0x4000494")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3E")]
		[SerializeField]
		public bool lockScale;

		[Token(Token = "0x4000495")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Vector3 neutralPosition;

		[Token(Token = "0x4000496")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public Vector3 neutralRotation;

		[Token(Token = "0x4000497")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Vector3 neutralScale;

		[Token(Token = "0x60002E9")]
		[Address(RVA = "0x181CEAC", Offset = "0x181CEAC", VA = "0x181CEAC")]
		public void SetNeutral()
		{
		}

		[Token(Token = "0x60002EA")]
		[Address(RVA = "0x181CF70", Offset = "0x181CF70", VA = "0x181CF70")]
		public BoneShape(Transform bone, Vector3 endPosition, Vector3 endRotation, Vector3 endScale)
		{
		}

		[Token(Token = "0x60002EB")]
		[Address(RVA = "0x181D074", Offset = "0x181D074", VA = "0x181D074")]
		public BoneShape(Transform bone, Vector3 endPosition, Vector3 endRotation)
		{
		}

		[Token(Token = "0x60002EC")]
		[Address(RVA = "0x181D178", Offset = "0x181D178", VA = "0x181D178")]
		public BoneShape()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000A7")]
	public class EmotionMarker
	{
		[Token(Token = "0x4000498")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		public string emotion;

		[Token(Token = "0x4000499")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public bool isMixer;

		[Token(Token = "0x400049A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		public EmotionMixer mixer;

		[Token(Token = "0x400049B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		public float startTime;

		[Token(Token = "0x400049C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		public float endTime;

		[Token(Token = "0x400049D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		public float blendInTime;

		[Token(Token = "0x400049E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		public float blendOutTime;

		[Token(Token = "0x400049F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		public bool blendToMarker;

		[Token(Token = "0x40004A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		[SerializeField]
		public bool blendFromMarker;

		[Token(Token = "0x40004A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
		[SerializeField]
		public bool customBlendIn;

		[Token(Token = "0x40004A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3B")]
		[SerializeField]
		public bool customBlendOut;

		[Token(Token = "0x40004A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		public float intensity;

		[Token(Token = "0x40004A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		public bool continuousVariation;

		[Token(Token = "0x40004A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		public float variationFrequency;

		[Token(Token = "0x40004A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		public float intensityVariation;

		[Token(Token = "0x40004A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		public float blendableVariation;

		[Token(Token = "0x40004A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		public float bonePositionVariation;

		[Token(Token = "0x40004A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[SerializeField]
		public float boneRotationVariation;

		[Token(Token = "0x40004AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public bool invalid;

		[Token(Token = "0x60002ED")]
		[Address(RVA = "0x181D200", Offset = "0x181D200", VA = "0x181D200")]
		public EmotionMarker(string emotion, float startTime, float endTime, float blendInTime, float blendOutTime, bool blendToMarker, bool blendFromMarker, bool customBlendIn, bool customBlendOut)
		{
		}

		[Token(Token = "0x60002EE")]
		[Address(RVA = "0x181D2C0", Offset = "0x181D2C0", VA = "0x181D2C0")]
		public EmotionMarker(EmotionMixer mixer, float startTime, float endTime, float blendInTime, float blendOutTime, bool blendToMarker, bool blendFromMarker, bool customBlendIn, bool customBlendOut)
		{
		}

		[Token(Token = "0x60002EF")]
		[Address(RVA = "0x181D388", Offset = "0x181D388", VA = "0x181D388")]
		public EmotionMarker(string emotion, float startTime, float endTime, float blendInTime, float blendOutTime, bool blendToMarker, bool blendFromMarker, bool customBlendIn, bool customBlendOut, float intensity)
		{
		}

		[Token(Token = "0x60002F0")]
		[Address(RVA = "0x181D464", Offset = "0x181D464", VA = "0x181D464")]
		public EmotionMarker CreateCopy()
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x20000A8")]
	public class EmotionMixer
	{
		[Serializable]
		[Token(Token = "0x2000376")]
		public struct EmotionComponent
		{
			[Token(Token = "0x40017C6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string emotion;

			[Token(Token = "0x40017C7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public float weight;

			[Token(Token = "0x60018A7")]
			[Address(RVA = "0x181E330", Offset = "0x181E330", VA = "0x181E330")]
			public EmotionComponent(string emotion, float weight)
			{
			}
		}

		[Token(Token = "0x2000377")]
		public enum MixingMode
		{
			[Token(Token = "0x40017C9")]
			Normal,
			[Token(Token = "0x40017CA")]
			Additive
		}

		[Token(Token = "0x40004AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		public List<EmotionComponent> emotions;

		[Token(Token = "0x40004AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public MixingMode mixingMode;

		[Token(Token = "0x40004AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Color displayColor;

		[Token(Token = "0x60002F1")]
		[Address(RVA = "0x181D580", Offset = "0x181D580", VA = "0x181D580")]
		public EmotionMixer()
		{
		}

		[Token(Token = "0x60002F2")]
		[Address(RVA = "0x181D62C", Offset = "0x181D62C", VA = "0x181D62C")]
		public EmotionShape GetShape(LipSync character)
		{
			return null;
		}

		[Token(Token = "0x60002F3")]
		[Address(RVA = "0x181DF34", Offset = "0x181DF34", VA = "0x181DF34")]
		public void SetWeight(int index, float weight)
		{
		}

		[Token(Token = "0x60002F4")]
		[Address(RVA = "0x181DF3C", Offset = "0x181DF3C", VA = "0x181DF3C")]
		public void SetWeight(int index, float weight, bool bypassMinChecks)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000A9")]
	public class EmotionShape : Shape
	{
		[Token(Token = "0x40004AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		public string emotion;

		[Token(Token = "0x60002F5")]
		[Address(RVA = "0x181DE34", Offset = "0x181DE34", VA = "0x181DE34")]
		public EmotionShape(string eEmotion)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000AA")]
	public class GestureMarker
	{
		[Token(Token = "0x40004AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		public string gesture;

		[Token(Token = "0x40004B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public float time;

		[Token(Token = "0x60002F6")]
		[Address(RVA = "0x181E364", Offset = "0x181E364", VA = "0x181E364")]
		public GestureMarker(string gesture, float time)
		{
		}

		[Token(Token = "0x60002F7")]
		[Address(RVA = "0x181E3AC", Offset = "0x181E3AC", VA = "0x181E3AC")]
		public GestureMarker CreateCopy()
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x20000AB")]
	public class LipSyncData : ScriptableObject
	{
		[Token(Token = "0x40004B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AudioClip clip;

		[Token(Token = "0x40004B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PhonemeMarker[] phonemeData;

		[Token(Token = "0x40004B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public EmotionMarker[] emotionData;

		[Token(Token = "0x40004B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GestureMarker[] gestureData;

		[Token(Token = "0x40004B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float version;

		[Token(Token = "0x40004B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float length;

		[Token(Token = "0x40004B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string transcript;

		[Token(Token = "0x40004B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public AnimationCurve[] phonemePoseCurves;

		[Token(Token = "0x40004B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public AnimationCurve[] emotionPoseCurves;

		[Token(Token = "0x40004BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public int targetComponentID;

		[Token(Token = "0x40004BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public bool isPreprocessed;

		[Token(Token = "0x40004BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public List<int> indexBlendables;

		[Token(Token = "0x40004BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public List<AnimationCurve> animCurves;

		[Token(Token = "0x40004BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public List<Transform> bones;

		[Token(Token = "0x40004BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public List<TransformAnimationCurve> boneCurves;

		[Token(Token = "0x40004C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public List<Vector3> boneNeutralPositions;

		[Token(Token = "0x40004C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public List<Vector3> boneNeutralScales;

		[Token(Token = "0x40004C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public List<Quaternion> boneNeutralRotations;

		[Token(Token = "0x60002F8")]
		[Address(RVA = "0x182F4A8", Offset = "0x182F4A8", VA = "0x182F4A8")]
		public void GenerateCurves(int phonemeCount, int emotionCount)
		{
		}

		[Token(Token = "0x60002F9")]
		[Address(RVA = "0x182F910", Offset = "0x182F910", VA = "0x182F910")]
		public static explicit operator LipSyncData(TemporaryLipSyncData data)
		{
			return null;
		}

		[Token(Token = "0x60002FA")]
		[Address(RVA = "0x182FC1C", Offset = "0x182FC1C", VA = "0x182FC1C")]
		public LipSyncData()
		{
		}
	}
	[Token(Token = "0x20000AC")]
	public static class LipSyncExtensions
	{
		[Token(Token = "0x60002FB")]
		[Address(RVA = "0x182FCA4", Offset = "0x182FCA4", VA = "0x182FCA4")]
		public static Transform FindDeepChild(this Transform aParent, string aName)
		{
			return null;
		}

		[Token(Token = "0x60002FC")]
		[Address(RVA = "0x182FFC8", Offset = "0x182FFC8", VA = "0x182FFC8")]
		public static Vector3 InverseTransformEulerAngle(this Transform transform, Vector3 eulerAngle)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60002FD")]
		[Address(RVA = "0x18300EC", Offset = "0x18300EC", VA = "0x18300EC")]
		public static Vector3 TransformEulerAngle(this Transform transform, Vector3 eulerAngle)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60002FE")]
		[Address(RVA = "0x183008C", Offset = "0x183008C", VA = "0x183008C")]
		public static Vector3 ToPositiveEuler(this Vector3 eulerAngle)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60002FF")]
		[Address(RVA = "0x182E8A4", Offset = "0x182E8A4", VA = "0x182E8A4")]
		public static Vector3 ToNegativeEuler(this Vector3 eulerAngle)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000300")]
		[Address(RVA = "0x18301B0", Offset = "0x18301B0", VA = "0x18301B0")]
		private static Vector3 ClampRange(Vector3 eulerAngle)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000301")]
		[Address(RVA = "0x183021C", Offset = "0x183021C", VA = "0x183021C")]
		public static EmotionMarker PreviousMarker(this List<EmotionMarker> list, EmotionMarker current)
		{
			return null;
		}

		[Token(Token = "0x6000302")]
		[Address(RVA = "0x18302B8", Offset = "0x18302B8", VA = "0x18302B8")]
		public static EmotionMarker NextMarker(this List<EmotionMarker> list, EmotionMarker current)
		{
			return null;
		}
	}
	[Token(Token = "0x20000AD")]
	public class LipSyncPreset : ScriptableObject
	{
		[Serializable]
		[Token(Token = "0x2000378")]
		public struct PhonemeShapeInfo
		{
			[Token(Token = "0x40017CB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[SerializeField]
			public string phonemeName;

			[Token(Token = "0x40017CC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[SerializeField]
			[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x9EE114", Offset = "0x9EE114")]
			public Phoneme phoneme;

			[Token(Token = "0x40017CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[SerializeField]
			public BlendableInfo[] blendables;

			[Token(Token = "0x40017CE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[SerializeField]
			public BoneInfo[] bones;
		}

		[Serializable]
		[Token(Token = "0x2000379")]
		public struct EmotionShapeInfo
		{
			[Token(Token = "0x40017CF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[SerializeField]
			public string emotion;

			[Token(Token = "0x40017D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[SerializeField]
			public BlendableInfo[] blendables;

			[Token(Token = "0x40017D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[SerializeField]
			public BoneInfo[] bones;
		}

		[Serializable]
		[Token(Token = "0x200037A")]
		public struct BlendableInfo
		{
			[Token(Token = "0x40017D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[SerializeField]
			public int blendableNumber;

			[Token(Token = "0x40017D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[SerializeField]
			public string blendableName;

			[Token(Token = "0x40017D4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[SerializeField]
			public float weight;
		}

		[Serializable]
		[Token(Token = "0x200037B")]
		public struct BoneInfo
		{
			[Token(Token = "0x40017D5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[SerializeField]
			public string path;

			[Token(Token = "0x40017D6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[SerializeField]
			public string name;

			[Token(Token = "0x40017D7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[SerializeField]
			public Vector3 localPosition;

			[Token(Token = "0x40017D8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[SerializeField]
			public Vector3 localRotation;

			[Token(Token = "0x40017D9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[SerializeField]
			public Vector3 localScale;

			[Token(Token = "0x40017DA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			[SerializeField]
			public bool lockPosition;

			[Token(Token = "0x40017DB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
			[SerializeField]
			public bool lockRotation;

			[Token(Token = "0x40017DC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x36")]
			[SerializeField]
			public bool lockScale;
		}

		[Token(Token = "0x40004C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string displayPath;

		[Token(Token = "0x40004C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool isRelative;

		[Token(Token = "0x40004C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		public PhonemeShapeInfo[] phonemeShapes;

		[Token(Token = "0x40004C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		public EmotionShapeInfo[] emotionShapes;

		[Token(Token = "0x6000303")]
		[Address(RVA = "0x1830358", Offset = "0x1830358", VA = "0x1830358")]
		public int FindBlendable(BlendableInfo blendable, BlendSystem blendSystem)
		{
			return default(int);
		}

		[Token(Token = "0x6000304")]
		[Address(RVA = "0x18308D8", Offset = "0x18308D8", VA = "0x18308D8")]
		public Transform FindBone(BoneInfo bone, Transform searchRoot)
		{
			return null;
		}

		[Token(Token = "0x6000305")]
		[Address(RVA = "0x18309A0", Offset = "0x18309A0", VA = "0x18309A0")]
		public void CreateFromShapes(PhonemeShape[] phonemes, EmotionShape[] emotions, BlendSystem blendSystem, bool relative)
		{
		}

		[Token(Token = "0x6000306")]
		[Address(RVA = "0x1831D3C", Offset = "0x1831D3C", VA = "0x1831D3C")]
		public LipSyncPreset()
		{
		}
	}
	[Token(Token = "0x20000AE")]
	public class LipSyncProject : ScriptableObject
	{
		[Token(Token = "0x40004C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public string[] emotions;

		[Token(Token = "0x40004C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		public Color[] emotionColors;

		[Token(Token = "0x40004C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		public List<string> gestures;

		[Token(Token = "0x40004CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		public PhonemeSet phonemeSet;

		[Token(Token = "0x6000307")]
		[Address(RVA = "0xE39154", Offset = "0xE39154", VA = "0xE39154")]
		public LipSyncProject()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000AF")]
	public class PhonemeMarker
	{
		[Token(Token = "0x40004CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x9E9440", Offset = "0x9E9440")]
		public Phoneme phoneme;

		[Token(Token = "0x40004CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		public int phonemeNumber;

		[Token(Token = "0x40004CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public float time;

		[Token(Token = "0x40004CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		public float intensity;

		[Token(Token = "0x40004CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		public bool sustain;

		[Token(Token = "0x40004D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		[SerializeField]
		public bool useRandomness;

		[Token(Token = "0x40004D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		public float intensityRandomness;

		[Token(Token = "0x40004D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		public float blendableRandomness;

		[Token(Token = "0x40004D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		public float bonePositionRandomness;

		[Token(Token = "0x40004D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		public float boneRotationRandomness;

		[Token(Token = "0x6000308")]
		[Address(RVA = "0xE391D0", Offset = "0xE391D0", VA = "0xE391D0")]
		public PhonemeMarker(int phonemeNumber, float time, float intensity, bool sustain)
		{
		}

		[Token(Token = "0x6000309")]
		[Address(RVA = "0xE39238", Offset = "0xE39238", VA = "0xE39238")]
		public PhonemeMarker(int phonemeNumber, float time)
		{
		}

		[Token(Token = "0x600030A")]
		[Address(RVA = "0xE39288", Offset = "0xE39288", VA = "0xE39288")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x9EEB1C", Offset = "0x9EEB1C")]
		public PhonemeMarker(Phoneme phoneme, float time, float intensity, bool sustain)
		{
		}

		[Token(Token = "0x600030B")]
		[Address(RVA = "0xE392F0", Offset = "0xE392F0", VA = "0xE392F0")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x9EEB54", Offset = "0x9EEB54")]
		public PhonemeMarker(Phoneme phoneme, float time)
		{
		}

		[Token(Token = "0x600030C")]
		[Address(RVA = "0xE39340", Offset = "0xE39340", VA = "0xE39340")]
		public PhonemeMarker CreateCopy()
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x20000B0")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x9E68A0", Offset = "0x9E68A0")]
	public class PhonemeSet : ScriptableObject
	{
		[Serializable]
		[Token(Token = "0x200037C")]
		[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x9E7C30", Offset = "0x9E7C30")]
		public class PhonemeCollection
		{
			[Token(Token = "0x40017DD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public List<string> phonemeNames;

			[Token(Token = "0x1700021B")]
			public int Length
			{
				[Token(Token = "0x60018A8")]
				[Address(RVA = "0xE396C0", Offset = "0xE396C0", VA = "0xE396C0")]
				get
				{
					return default(int);
				}
			}

			[Token(Token = "0x1700021C")]
			public Phoneme Item
			{
				[Token(Token = "0x60018A9")]
				[Address(RVA = "0xE3958C", Offset = "0xE3958C", VA = "0xE3958C")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60018AA")]
			[Address(RVA = "0xE397BC", Offset = "0xE397BC", VA = "0xE397BC")]
			public PhonemeCollection()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200037D")]
		public class Phoneme
		{
			[Token(Token = "0x40017DE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string name;

			[Token(Token = "0x40017DF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int number;

			[Token(Token = "0x40017E0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public int flag;

			[Token(Token = "0x40017E1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool visuallyImportant;

			[Token(Token = "0x40017E2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Texture2D guideImage;

			[Token(Token = "0x60018AB")]
			[Address(RVA = "0xE39674", Offset = "0xE39674", VA = "0xE39674")]
			public Phoneme(string name, int number, int flag)
			{
			}
		}

		[Token(Token = "0x40004D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool isLegacyFormat;

		[Token(Token = "0x40004D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		public string scriptingName;

		[Token(Token = "0x40004D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x9E952C", Offset = "0x9E952C")]
		public PhonemeCollection phonemes;

		[Token(Token = "0x40004D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		public List<Phoneme> phonemeList;

		[Token(Token = "0x40004D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x9E958C", Offset = "0x9E958C")]
		public Texture2D[] guideImages;

		[Token(Token = "0x600030D")]
		[Address(RVA = "0xE3940C", Offset = "0xE3940C", VA = "0xE3940C")]
		public void UpdateFormat()
		{
		}

		[Token(Token = "0x600030E")]
		[Address(RVA = "0xE39710", Offset = "0xE39710", VA = "0xE39710")]
		public PhonemeSet()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000B1")]
	public class PhonemeShape : Shape
	{
		[Token(Token = "0x40004DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		public string phonemeName;

		[Token(Token = "0x40004DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x9E95EC", Offset = "0x9E95EC")]
		public Phoneme phoneme;

		[Token(Token = "0x600030F")]
		[Address(RVA = "0xE39838", Offset = "0xE39838", VA = "0xE39838")]
		public PhonemeShape(string phonemeName)
		{
		}

		[Token(Token = "0x6000310")]
		[Address(RVA = "0xE39A54", Offset = "0xE39A54", VA = "0xE39A54")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x9EEB8C", Offset = "0x9EEB8C")]
		public PhonemeShape(Phoneme ePhoneme)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000B2")]
	public class Shape
	{
		[Token(Token = "0x40004DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		public List<int> blendShapes;

		[Token(Token = "0x40004DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public List<string> blendableNames;

		[Token(Token = "0x40004DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		public List<float> weights;

		[Token(Token = "0x40004DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		public List<BoneShape> bones;

		[Token(Token = "0x40004E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		public bool verified;

		[Token(Token = "0x6000311")]
		[Address(RVA = "0xE39B44", Offset = "0xE39B44", VA = "0xE39B44")]
		public bool HasBone(Transform bone)
		{
			return default(bool);
		}

		[Token(Token = "0x6000312")]
		[Address(RVA = "0xE39C24", Offset = "0xE39C24", VA = "0xE39C24")]
		public int IndexOfBone(Transform bone)
		{
			return default(int);
		}

		[Token(Token = "0x6000313")]
		[Address(RVA = "0xE39934", Offset = "0xE39934", VA = "0xE39934")]
		public Shape()
		{
		}
	}
	[Token(Token = "0x20000B3")]
	public class TemporaryLipSyncData : ScriptableObject
	{
		[Token(Token = "0x40004E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AudioClip clip;

		[Token(Token = "0x40004E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<PhonemeMarker> phonemeData;

		[Token(Token = "0x40004E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<EmotionMarker> emotionData;

		[Token(Token = "0x40004E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<GestureMarker> gestureData;

		[Token(Token = "0x40004E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float version;

		[Token(Token = "0x40004E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float length;

		[Token(Token = "0x40004E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string transcript;

		[Token(Token = "0x6000314")]
		[Address(RVA = "0xE3A704", Offset = "0xE3A704", VA = "0xE3A704")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000315")]
		[Address(RVA = "0xE3A710", Offset = "0xE3A710", VA = "0xE3A710")]
		public static explicit operator TemporaryLipSyncData(LipSyncData data)
		{
			return null;
		}

		[Token(Token = "0x6000316")]
		[Address(RVA = "0xE3A998", Offset = "0xE3A998", VA = "0xE3A998")]
		public TemporaryLipSyncData()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000B4")]
	public class TransformAnimationCurve
	{
		[Token(Token = "0x200037E")]
		public struct TransformKeyframe
		{
			[Token(Token = "0x40017E3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float time;

			[Token(Token = "0x40017E4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public Quaternion rotation;

			[Token(Token = "0x40017E5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public Vector3 position;

			[Token(Token = "0x40017E6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Vector3 scale;

			[Token(Token = "0x40017E7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float inTangent;

			[Token(Token = "0x40017E8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float outTangent;

			[Token(Token = "0x60018AC")]
			[Address(RVA = "0xE3BFE8", Offset = "0xE3BFE8", VA = "0xE3BFE8")]
			public TransformKeyframe(float time, Vector3 position, Quaternion rotation, Vector3 scale, float inTangent, float outTangent)
			{
			}
		}

		[Token(Token = "0x40004E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private AnimationCurve _posX;

		[Token(Token = "0x40004E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private AnimationCurve _posY;

		[Token(Token = "0x40004EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private AnimationCurve _posZ;

		[Token(Token = "0x40004EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private AnimationCurve _rotX;

		[Token(Token = "0x40004EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private AnimationCurve _rotY;

		[Token(Token = "0x40004ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private AnimationCurve _rotZ;

		[Token(Token = "0x40004EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private AnimationCurve _rotW;

		[Token(Token = "0x40004EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private AnimationCurve _scaleX;

		[Token(Token = "0x40004F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private AnimationCurve _scaleY;

		[Token(Token = "0x40004F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private AnimationCurve _scaleZ;

		[Token(Token = "0x17000029")]
		public TransformKeyframe[] keys
		{
			[Token(Token = "0x6000318")]
			[Address(RVA = "0xE3BB34", Offset = "0xE3BB34", VA = "0xE3BB34")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700002A")]
		public int length
		{
			[Token(Token = "0x6000319")]
			[Address(RVA = "0xE3C018", Offset = "0xE3C018", VA = "0xE3C018")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700002B")]
		public WrapMode postWrapMode
		{
			[Token(Token = "0x600031A")]
			[Address(RVA = "0xE3C034", Offset = "0xE3C034", VA = "0xE3C034")]
			get
			{
				return default(WrapMode);
			}
			[Token(Token = "0x600031B")]
			[Address(RVA = "0xE3C050", Offset = "0xE3C050", VA = "0xE3C050")]
			set
			{
			}
		}

		[Token(Token = "0x1700002C")]
		public WrapMode preWrapMode
		{
			[Token(Token = "0x600031C")]
			[Address(RVA = "0xE3C134", Offset = "0xE3C134", VA = "0xE3C134")]
			get
			{
				return default(WrapMode);
			}
			[Token(Token = "0x600031D")]
			[Address(RVA = "0xE3C150", Offset = "0xE3C150", VA = "0xE3C150")]
			set
			{
			}
		}

		[Token(Token = "0x6000317")]
		[Address(RVA = "0xE3B884", Offset = "0xE3B884", VA = "0xE3B884")]
		public AnimationCurve[] GetAnimationCurves()
		{
			return null;
		}

		[Token(Token = "0x600031E")]
		[Address(RVA = "0xE3C234", Offset = "0xE3C234", VA = "0xE3C234")]
		public int AddKey(float time, Vector3 position, Quaternion rotation, Vector3 scale, float inTangent, float outTangent)
		{
			return default(int);
		}

		[Token(Token = "0x600031F")]
		[Address(RVA = "0xE3C670", Offset = "0xE3C670", VA = "0xE3C670")]
		public int AddKey(float time, Vector3 position, Quaternion rotation, float inTangent, float outTangent)
		{
			return default(int);
		}

		[Token(Token = "0x6000320")]
		[Address(RVA = "0xE3C9A8", Offset = "0xE3C9A8", VA = "0xE3C9A8")]
		public int AddKey(float time, Quaternion rotation, float inTangent, float outTangent)
		{
			return default(int);
		}

		[Token(Token = "0x6000321")]
		[Address(RVA = "0xE3CBE0", Offset = "0xE3CBE0", VA = "0xE3CBE0")]
		public int AddKey(float time, Vector3 position, float inTangent, float outTangent)
		{
			return default(int);
		}

		[Token(Token = "0x6000322")]
		[Address(RVA = "0xE3CD30", Offset = "0xE3CD30", VA = "0xE3CD30")]
		public int AddKey(float time, Vector3 position, Quaternion rotation, Vector3 scale)
		{
			return default(int);
		}

		[Token(Token = "0x6000323")]
		[Address(RVA = "0xE3CF04", Offset = "0xE3CF04", VA = "0xE3CF04")]
		public int AddKey(float time, Vector3 position, Quaternion rotation)
		{
			return default(int);
		}

		[Token(Token = "0x6000324")]
		[Address(RVA = "0xE3D090", Offset = "0xE3D090", VA = "0xE3D090")]
		public int AddKey(float time, Quaternion rotation)
		{
			return default(int);
		}

		[Token(Token = "0x6000325")]
		[Address(RVA = "0xE3D1C8", Offset = "0xE3D1C8", VA = "0xE3D1C8")]
		public int AddKey(float time, Vector3 position)
		{
			return default(int);
		}

		[Token(Token = "0x6000326")]
		[Address(RVA = "0xE3D250", Offset = "0xE3D250", VA = "0xE3D250")]
		public int AddKey(TransformKeyframe keyframe)
		{
			return default(int);
		}

		[Token(Token = "0x6000327")]
		[Address(RVA = "0xE3D554", Offset = "0xE3D554", VA = "0xE3D554")]
		public Vector3 EvaluateScale(float time)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000328")]
		[Address(RVA = "0xE3D5F8", Offset = "0xE3D5F8", VA = "0xE3D5F8")]
		public Vector3 EvaluatePosition(float time)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000329")]
		[Address(RVA = "0xE3D69C", Offset = "0xE3D69C", VA = "0xE3D69C")]
		public Quaternion EvaluateRotation(float time)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x600032A")]
		[Address(RVA = "0xE3D758", Offset = "0xE3D758", VA = "0xE3D758")]
		public TransformAnimationCurve()
		{
		}

		[Token(Token = "0x600032B")]
		[Address(RVA = "0xE3C668", Offset = "0xE3C668", VA = "0xE3C668")]
		private Vector3 CentreAngles(Vector3 euler)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600032C")]
		[Address(RVA = "0xE3D918", Offset = "0xE3D918", VA = "0xE3D918")]
		public void FixQuaternionContinuity()
		{
		}
	}
	[Token(Token = "0x20000B5")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x9E6900", Offset = "0x9E6900")]
	[DisallowMultipleComponent]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x9E6900", Offset = "0x9E6900")]
	public class LipSync : BlendSystemUser
	{
		[Token(Token = "0x200037F")]
		public delegate void FinishedPlayingAction();

		[Token(Token = "0x2000380")]
		public delegate void ResetDelegate();

		[Token(Token = "0x2000381")]
		public enum AnimationTimingMode
		{
			[Token(Token = "0x40017EA")]
			AudioPlayback,
			[Token(Token = "0x40017EB")]
			CustomTimer,
			[Token(Token = "0x40017EC")]
			FixedFrameRate
		}

		[Token(Token = "0x2000382")]
		public enum CurveGenerationMode
		{
			[Token(Token = "0x40017EE")]
			Tight,
			[Token(Token = "0x40017EF")]
			Loose
		}

		[Token(Token = "0x2000383")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E7C68", Offset = "0x9E7C68")]
		private sealed class <StopAudioSource>d__100 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40017F0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40017F1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40017F2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float delay;

			[Token(Token = "0x40017F3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public LipSync <>4__this;

			[Token(Token = "0x1700021D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60018B8")]
				[Address(RVA = "0x182F3A0", Offset = "0x182F3A0", VA = "0x182F3A0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700021E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60018BA")]
				[Address(RVA = "0x182F408", Offset = "0x182F408", VA = "0x182F408", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60018B5")]
			[Address(RVA = "0x182EE30", Offset = "0x182EE30", VA = "0x182EE30")]
			[DebuggerHidden]
			public <StopAudioSource>d__100(int <>1__state)
			{
			}

			[Token(Token = "0x60018B6")]
			[Address(RVA = "0x182F2D4", Offset = "0x182F2D4", VA = "0x182F2D4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60018B7")]
			[Address(RVA = "0x182F2D8", Offset = "0x182F2D8", VA = "0x182F2D8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60018B9")]
			[Address(RVA = "0x182F3A8", Offset = "0x182F3A8", VA = "0x182F3A8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40004F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioSource audioSource;

		[Token(Token = "0x40004F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool useBones;

		[Token(Token = "0x40004F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		public bool boneUpdateAnimation;

		[Token(Token = "0x40004F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		public List<PhonemeShape> phonemes;

		[Token(Token = "0x40004F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		public List<EmotionShape> emotions;

		[Token(Token = "0x40004F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool playOnAwake;

		[Token(Token = "0x40004F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		public bool loop;

		[Token(Token = "0x40004F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public LipSyncData defaultClip;

		[Token(Token = "0x40004FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float defaultDelay;

		[Token(Token = "0x40004FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public bool scaleAudioSpeed;

		[Token(Token = "0x40004FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private AnimationTimingMode m_animationTimingMode;

		[Token(Token = "0x40004FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public int frameRate;

		[Token(Token = "0x40004FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float restTime;

		[Token(Token = "0x40004FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public float restHoldTime;

		[Token(Token = "0x4000500")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public CurveGenerationMode phonemeCurveGenerationMode;

		[Token(Token = "0x4000501")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public CurveGenerationMode emotionCurveGenerationMode;

		[Token(Token = "0x4000502")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public bool keepEmotionWhenFinished;

		[Token(Token = "0x4000503")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		public bool setNeutralBonePosesOnStart;

		[Token(Token = "0x4000504")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x72")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E96B8", Offset = "0x9E96B8")]
		private bool <IsPlaying>k__BackingField;

		[Token(Token = "0x4000505")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x73")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E96C8", Offset = "0x9E96C8")]
		private bool <IsPaused>k__BackingField;

		[Token(Token = "0x4000506")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E96D8", Offset = "0x9E96D8")]
		private bool <IsStopping>k__BackingField;

		[Token(Token = "0x4000507")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Animator gesturesAnimator;

		[Token(Token = "0x4000508")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public int gesturesLayer;

		[Token(Token = "0x4000509")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public List<GestureInstance> gestures;

		[Token(Token = "0x400050A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public UnityEvent onFinishedPlaying;

		[Token(Token = "0x400050C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private AudioClip audioClip;

		[Token(Token = "0x400050D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private bool ready;

		[Token(Token = "0x400050E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Dictionary<string, EmotionShape> emotionCache;

		[Token(Token = "0x400050F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private int currentFileID;

		[Token(Token = "0x4000510")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private LipSyncData lastClip;

		[Token(Token = "0x4000511")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private float emotionBlendTime;

		[Token(Token = "0x4000512")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private float emotionTimer;

		[Token(Token = "0x4000513")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private bool changingEmotion;

		[Token(Token = "0x4000514")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		private int customEmotion;

		[Token(Token = "0x4000515")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private float customTimer;

		[Token(Token = "0x4000516")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private bool isDelaying;

		[Token(Token = "0x4000517")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private List<PhonemeMarker> phonemeMarkers;

		[Token(Token = "0x4000518")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private List<EmotionMarker> emotionMarkers;

		[Token(Token = "0x4000519")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private List<GestureMarker> gestureMarkers;

		[Token(Token = "0x400051A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private float fileLength;

		[Token(Token = "0x400051B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		private int nextGesture;

		[Token(Token = "0x400051C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private List<int> indexBlendables;

		[Token(Token = "0x400051D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private List<AnimationCurve> animCurves;

		[Token(Token = "0x400051E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private List<Transform> bones;

		[Token(Token = "0x400051F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private List<TransformAnimationCurve> boneCurves;

		[Token(Token = "0x4000520")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private List<Vector3> boneNeutralPositions;

		[Token(Token = "0x4000521")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private List<Vector3> boneNeutralScales;

		[Token(Token = "0x4000522")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private List<Quaternion> boneNeutralRotations;

		[Token(Token = "0x4000523")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		public ResetDelegate reset;

		[Token(Token = "0x4000524")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		public float lastUsedVersion;

		[Token(Token = "0x1700002D")]
		public AnimationTimingMode animationTimingMode
		{
			[Token(Token = "0x600032D")]
			[Address(RVA = "0x181E430", Offset = "0x181E430", VA = "0x181E430")]
			get
			{
				return default(AnimationTimingMode);
			}
			[Token(Token = "0x600032E")]
			[Address(RVA = "0x181E438", Offset = "0x181E438", VA = "0x181E438")]
			set
			{
			}
		}

		[Token(Token = "0x1700002E")]
		public bool IsPlaying
		{
			[Token(Token = "0x600032F")]
			[Address(RVA = "0x181E440", Offset = "0x181E440", VA = "0x181E440")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EEBC4", Offset = "0x9EEBC4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000330")]
			[Address(RVA = "0x181E448", Offset = "0x181E448", VA = "0x181E448")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EEBD4", Offset = "0x9EEBD4")]
			private set
			{
			}
		}

		[Token(Token = "0x1700002F")]
		public bool IsPaused
		{
			[Token(Token = "0x6000331")]
			[Address(RVA = "0x181E454", Offset = "0x181E454", VA = "0x181E454")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EEBE4", Offset = "0x9EEBE4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000332")]
			[Address(RVA = "0x181E45C", Offset = "0x181E45C", VA = "0x181E45C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EEBF4", Offset = "0x9EEBF4")]
			private set
			{
			}
		}

		[Token(Token = "0x17000030")]
		public bool IsStopping
		{
			[Token(Token = "0x6000333")]
			[Address(RVA = "0x181E468", Offset = "0x181E468", VA = "0x181E468")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EEC04", Offset = "0x9EEC04")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000334")]
			[Address(RVA = "0x181E470", Offset = "0x181E470", VA = "0x181E470")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EEC14", Offset = "0x9EEC14")]
			private set
			{
			}
		}

		[Token(Token = "0x17000031")]
		public float CurrentTime
		{
			[Token(Token = "0x6000335")]
			[Address(RVA = "0x181E47C", Offset = "0x181E47C", VA = "0x181E47C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x14000001")]
		public static event FinishedPlayingAction OnFinishedPlaying
		{
			[Token(Token = "0x6000336")]
			[Address(RVA = "0x181E4B8", Offset = "0x181E4B8", VA = "0x181E4B8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EEC24", Offset = "0x9EEC24")]
			add
			{
			}
			[Token(Token = "0x6000337")]
			[Address(RVA = "0x181E56C", Offset = "0x181E56C", VA = "0x181E56C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EEC34", Offset = "0x9EEC34")]
			remove
			{
			}
		}

		[Token(Token = "0x6000338")]
		[Address(RVA = "0x181E620", Offset = "0x181E620", VA = "0x181E620")]
		private void Reset()
		{
		}

		[Token(Token = "0x6000339")]
		[Address(RVA = "0x181E860", Offset = "0x181E860", VA = "0x181E860")]
		private void Awake()
		{
		}

		[Token(Token = "0x600033A")]
		[Address(RVA = "0x181F690", Offset = "0x181F690", VA = "0x181F690")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x600033B")]
		[Address(RVA = "0x1820614", Offset = "0x1820614", VA = "0x1820614")]
		public void SetEmotion(string emotion, float blendTime)
		{
		}

		[Token(Token = "0x600033C")]
		[Address(RVA = "0x182211C", Offset = "0x182211C", VA = "0x182211C")]
		public void ResetEmotion(float blendTime)
		{
		}

		[Token(Token = "0x600033D")]
		[Address(RVA = "0x182217C", Offset = "0x182217C", VA = "0x182217C")]
		private void PlayPP(LipSyncData data, float delay, float time)
		{
		}

		[Token(Token = "0x600033E")]
		[Address(RVA = "0x181F3F0", Offset = "0x181F3F0", VA = "0x181F3F0")]
		public void Play(LipSyncData dataFile, float delay)
		{
		}

		[Token(Token = "0x600033F")]
		[Address(RVA = "0x182060C", Offset = "0x182060C", VA = "0x182060C")]
		public void Play(LipSyncData dataFile)
		{
		}

		[Token(Token = "0x6000340")]
		[Address(RVA = "0x182C2E0", Offset = "0x182C2E0", VA = "0x182C2E0")]
		public void Play(TextAsset xmlFile, AudioClip clip, float delay)
		{
		}

		[Token(Token = "0x6000341")]
		[Address(RVA = "0x182D294", Offset = "0x182D294", VA = "0x182D294")]
		public void Play(TextAsset xmlFile, AudioClip clip)
		{
		}

		[Token(Token = "0x6000342")]
		[Address(RVA = "0x182D29C", Offset = "0x182D29C", VA = "0x182D29C")]
		public void PlayFromTime(LipSyncData dataFile, float delay, float time)
		{
		}

		[Token(Token = "0x6000343")]
		[Address(RVA = "0x182D4AC", Offset = "0x182D4AC", VA = "0x182D4AC")]
		public void PlayFromTime(LipSyncData dataFile, float time)
		{
		}

		[Token(Token = "0x6000344")]
		[Address(RVA = "0x182D4B8", Offset = "0x182D4B8", VA = "0x182D4B8")]
		public void PlayFromTime(TextAsset xmlFile, AudioClip clip, float delay, float time)
		{
		}

		[Token(Token = "0x6000345")]
		[Address(RVA = "0x182D67C", Offset = "0x182D67C", VA = "0x182D67C")]
		public void PlayFromTime(TextAsset xmlFile, AudioClip clip, float time)
		{
		}

		[Token(Token = "0x6000346")]
		[Address(RVA = "0x182D688", Offset = "0x182D688", VA = "0x182D688")]
		public void Pause()
		{
		}

		[Token(Token = "0x6000347")]
		[Address(RVA = "0x182D6E8", Offset = "0x182D6E8", VA = "0x182D6E8")]
		public void Resume()
		{
		}

		[Token(Token = "0x6000348")]
		[Address(RVA = "0x18200E4", Offset = "0x18200E4", VA = "0x18200E4")]
		public void Stop(bool stopAudio)
		{
		}

		[Token(Token = "0x6000349")]
		[Address(RVA = "0x182D7A4", Offset = "0x182D7A4", VA = "0x182D7A4")]
		public void PreviewAtTime(float time)
		{
		}

		[Token(Token = "0x600034A")]
		[Address(RVA = "0x182DACC", Offset = "0x182DACC", VA = "0x182DACC")]
		public void DisplayEmotionPose(int emotion, float intensity)
		{
		}

		[Token(Token = "0x600034B")]
		[Address(RVA = "0x182DF18", Offset = "0x182DF18", VA = "0x182DF18")]
		public void ResetDisplayedEmotions()
		{
		}

		[Token(Token = "0x600034C")]
		[Address(RVA = "0x182E320", Offset = "0x182E320", VA = "0x182E320")]
		public void PreviewAudioAtTime(float time, float length)
		{
		}

		[Token(Token = "0x600034D")]
		[Address(RVA = "0x182E4C0", Offset = "0x182E4C0", VA = "0x182E4C0")]
		public void TempLoad(List<PhonemeMarker> pData, List<EmotionMarker> eData, AudioClip clip, float duration)
		{
		}

		[Token(Token = "0x600034E")]
		[Address(RVA = "0x182E574", Offset = "0x182E574", VA = "0x182E574")]
		public void TempLoad(PhonemeMarker[] pData, EmotionMarker[] eData, AudioClip clip, float duration)
		{
		}

		[Token(Token = "0x600034F")]
		[Address(RVA = "0x1822C74", Offset = "0x1822C74", VA = "0x1822C74")]
		public void ProcessData(bool emotionOnly = false)
		{
		}

		[Token(Token = "0x6000350")]
		[Address(RVA = "0x182E914", Offset = "0x182E914", VA = "0x182E914")]
		public void GetCurveDataOut(out List<int> indexBlendables, out List<AnimationCurve> animCurves, out List<Transform> bones, out List<TransformAnimationCurve> boneCurves, out List<Vector3> boneNeutralPositions, out List<Quaternion> boneNeutralRotations, out List<Vector3> boneNeutralScales)
		{
		}

		[Token(Token = "0x6000351")]
		[Address(RVA = "0x182E90C", Offset = "0x182E90C", VA = "0x182E90C")]
		public void ClearDataCache()
		{
		}

		[Token(Token = "0x6000352")]
		[Address(RVA = "0x182E9D0", Offset = "0x182E9D0", VA = "0x182E9D0")]
		private EmotionMixer GetTransitionMixer(string oldEmotion, string newEmotion, float t)
		{
			return null;
		}

		[Token(Token = "0x6000353")]
		[Address(RVA = "0x182EACC", Offset = "0x182EACC", VA = "0x182EACC")]
		private void FixEmotionBlends(ref List<EmotionMarker> data)
		{
		}

		[Token(Token = "0x6000354")]
		[Address(RVA = "0x182EBC8", Offset = "0x182EBC8", VA = "0x182EBC8")]
		private void FixEmotionBlends(ref EmotionMarker[] data)
		{
		}

		[Token(Token = "0x6000355")]
		[Address(RVA = "0x182C444", Offset = "0x182C444", VA = "0x182C444")]
		private void LoadXML(TextAsset xmlFile, AudioClip linkedClip)
		{
		}

		[Token(Token = "0x6000356")]
		[Address(RVA = "0x1822654", Offset = "0x1822654", VA = "0x1822654")]
		private bool LoadData(LipSyncData dataFile)
		{
			return default(bool);
		}

		[Token(Token = "0x6000357")]
		[Address(RVA = "0x182E434", Offset = "0x182E434", VA = "0x182E434")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9EEC44", Offset = "0x9EEC44")]
		private IEnumerator StopAudioSource(float delay)
		{
			return null;
		}

		[Token(Token = "0x6000358")]
		[Address(RVA = "0x1820004", Offset = "0x1820004", VA = "0x1820004")]
		private GestureInstance GetGesture(string name)
		{
			return null;
		}

		[Token(Token = "0x6000359")]
		[Address(RVA = "0x182D744", Offset = "0x182D744", VA = "0x182D744")]
		public static void FinishPlay()
		{
		}

		[Token(Token = "0x600035A")]
		[Address(RVA = "0x182F068", Offset = "0x182F068", VA = "0x182F068")]
		public static void ClearAll()
		{
		}

		[Token(Token = "0x600035B")]
		[Address(RVA = "0x182F144", Offset = "0x182F144", VA = "0x182F144")]
		public LipSync()
		{
		}

		[Token(Token = "0x600035C")]
		[Address(RVA = "0x182F22C", Offset = "0x182F22C", VA = "0x182F22C")]
		public static int SortTime(PhonemeMarker a, PhonemeMarker b)
		{
			return default(int);
		}

		[Token(Token = "0x600035D")]
		[Address(RVA = "0x182F26C", Offset = "0x182F26C", VA = "0x182F26C")]
		public static int SortTime(GestureMarker a, GestureMarker b)
		{
			return default(int);
		}

		[Token(Token = "0x600035E")]
		[Address(RVA = "0x182F2AC", Offset = "0x182F2AC", VA = "0x182F2AC")]
		private static int EmotionSort(EmotionMarker a, EmotionMarker b)
		{
			return default(int);
		}

		[Token(Token = "0x600035F")]
		[Address(RVA = "0x182ED88", Offset = "0x182ED88", VA = "0x182ED88")]
		public static string ReadXML(XmlDocument xml, string parentElement, string elementName)
		{
			return null;
		}
	}
	[Token(Token = "0x20000B6")]
	public enum Phoneme
	{
		[Token(Token = "0x4000526")]
		AI,
		[Token(Token = "0x4000527")]
		E,
		[Token(Token = "0x4000528")]
		U,
		[Token(Token = "0x4000529")]
		O,
		[Token(Token = "0x400052A")]
		CDGKNRSThYZ,
		[Token(Token = "0x400052B")]
		FV,
		[Token(Token = "0x400052C")]
		L,
		[Token(Token = "0x400052D")]
		MBP,
		[Token(Token = "0x400052E")]
		WQ,
		[Token(Token = "0x400052F")]
		Rest
	}
}
namespace ProceduralAurora
{
	[Token(Token = "0x20000B7")]
	public enum AudioVisualizationSource
	{
		[Token(Token = "0x4000531")]
		None,
		[Token(Token = "0x4000532")]
		AvgAmplitude,
		[Token(Token = "0x4000533")]
		Frequencies
	}
	[Token(Token = "0x20000B8")]
	public class AuroraMain : MonoBehaviour
	{
		[Token(Token = "0x4000534")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9E96F8", Offset = "0x9E96F8")]
		public bool useAudioSourceVisualization;

		[Token(Token = "0x4000535")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioSource audioSource;

		[Token(Token = "0x4000536")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int audioSamples;

		[Token(Token = "0x4000537")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public FFTWindow audioSamplingWindow;

		[Token(Token = "0x4000538")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float audioMultiplier;

		[Token(Token = "0x4000539")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9E9730", Offset = "0x9E9730")]
		public float audioFrequenciesScale;

		[Token(Token = "0x400053A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9E9748", Offset = "0x9E9748")]
		public float audioBufferSmoothness;

		[Token(Token = "0x400053B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public AudioVisualizationSource audioVisualizeColorGradient;

		[Token(Token = "0x400053C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public AudioVisualizationSource audioVisualizeOpacity;

		[Token(Token = "0x400053D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public AudioVisualizationSource audioVisualizePositionOffset;

		[Token(Token = "0x400053E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public AudioVisualizationSource audioVisualizeFrequency;

		[Token(Token = "0x400053F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public AudioVisualizationSource audioVisualizeHeight;

		[Token(Token = "0x4000540")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9E9760", Offset = "0x9E9760")]
		public float audioVisualizePositionOffsetMutliplier;

		[Token(Token = "0x4000541")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float audioHeightMultiplier;

		[Token(Token = "0x4000542")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Gradient audioColorGradient;

		[Token(Token = "0x4000543")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9E9778", Offset = "0x9E9778")]
		public int auroraSeed;

		[Token(Token = "0x4000544")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9E97B0", Offset = "0x9E97B0")]
		public int auroraParticlesCount;

		[Token(Token = "0x4000545")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9E97CC", Offset = "0x9E97CC")]
		public float auroraAnimationFrequency;

		[Token(Token = "0x4000546")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9E97E8", Offset = "0x9E97E8")]
		public float auroraRotation;

		[Token(Token = "0x4000547")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public float auroraCurvature;

		[Token(Token = "0x4000548")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public Vector3 auroraSizes;

		[Token(Token = "0x4000549")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public float auroraParticleThickness;

		[Token(Token = "0x400054A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9E9804", Offset = "0x9E9804")]
		public bool auroraVolumetric;

		[Token(Token = "0x400054B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x85")]
		public bool auroraCircular;

		[Token(Token = "0x400054C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Vector2 auroraVolumetricRange;

		[Token(Token = "0x400054D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9E983C", Offset = "0x9E983C")]
		public bool auroraLights;

		[Token(Token = "0x400054E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9E9874", Offset = "0x9E9874")]
		public int auroraLightsCount;

		[Token(Token = "0x400054F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public float auroraLightsRange;

		[Token(Token = "0x4000550")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public float auroraLightsIntesity;

		[Token(Token = "0x4000551")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9E9890", Offset = "0x9E9890")]
		public Gradient auroraColorMain;

		[Token(Token = "0x4000552")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9E98C8", Offset = "0x9E98C8")]
		public Material auroraMaterialMain;

		[Token(Token = "0x4000553")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private ParticleSystem pSystem;

		[Token(Token = "0x4000554")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private ParticleSystem.MainModule p_mMain;

		[Token(Token = "0x4000555")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private ParticleSystem.EmissionModule p_mEmission;

		[Token(Token = "0x4000556")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private ParticleSystemRenderer pRenderer;

		[Token(Token = "0x4000557")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private ParticleSystem.Particle[] p_Particles;

		[Token(Token = "0x4000558")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private Light[] l_Lights;

		[Token(Token = "0x4000559")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private float[] aSamples;

		[Token(Token = "0x400055A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private float[] aBuffer;

		[Token(Token = "0x6000360")]
		[Address(RVA = "0x1549AD8", Offset = "0x1549AD8", VA = "0x1549AD8")]
		private void Start()
		{
		}

		[Token(Token = "0x6000361")]
		[Address(RVA = "0x1549ADC", Offset = "0x1549ADC", VA = "0x1549ADC")]
		private void Initialize()
		{
		}

		[Token(Token = "0x6000362")]
		[Address(RVA = "0x1549E54", Offset = "0x1549E54", VA = "0x1549E54")]
		private void InitializeLights()
		{
		}

		[Token(Token = "0x6000363")]
		[Address(RVA = "0x154A068", Offset = "0x154A068", VA = "0x154A068")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6000364")]
		[Address(RVA = "0x154A8D8", Offset = "0x154A8D8", VA = "0x154A8D8")]
		public AuroraMain()
		{
		}
	}
}
namespace PlayfulSystems.ScreenFade
{
	[Token(Token = "0x20000B9")]
	public class HotkeyTrigger : MonoBehaviour
	{
		[Token(Token = "0x400055B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Key hotkey;

		[Token(Token = "0x400055C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UnityEvent onHotkey;

		[Token(Token = "0x6000365")]
		[Address(RVA = "0xF53714", Offset = "0xF53714", VA = "0xF53714")]
		public void Update()
		{
		}

		[Token(Token = "0x6000366")]
		[Address(RVA = "0xF537A4", Offset = "0xF537A4", VA = "0xF537A4")]
		public HotkeyTrigger()
		{
		}
	}
	[Token(Token = "0x20000BA")]
	public class CameraFadeEffect : MonoBehaviour
	{
		[Token(Token = "0x2000384")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E7C78", Offset = "0x9E7C78")]
		private sealed class <DoFade>d__11 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40017F4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40017F5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40017F6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CameraFadeEffect <>4__this;

			[Token(Token = "0x40017F7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Color startColor;

			[Token(Token = "0x40017F8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public float startAlpha;

			[Token(Token = "0x40017F9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public float targetAlpha;

			[Token(Token = "0x40017FA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public float duration;

			[Token(Token = "0x40017FB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public Action onDone;

			[Token(Token = "0x40017FC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private float <time>5__2;

			[Token(Token = "0x1700021F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60018BE")]
				[Address(RVA = "0xF53044", Offset = "0xF53044", VA = "0xF53044", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000220")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60018C0")]
				[Address(RVA = "0xF530AC", Offset = "0xF530AC", VA = "0xF530AC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60018BB")]
			[Address(RVA = "0xF52D94", Offset = "0xF52D94", VA = "0xF52D94")]
			[DebuggerHidden]
			public <DoFade>d__11(int <>1__state)
			{
			}

			[Token(Token = "0x60018BC")]
			[Address(RVA = "0xF52EA4", Offset = "0xF52EA4", VA = "0xF52EA4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60018BD")]
			[Address(RVA = "0xF52EA8", Offset = "0xF52EA8", VA = "0xF52EA8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60018BF")]
			[Address(RVA = "0xF5304C", Offset = "0xF5304C", VA = "0xF5304C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400055D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool isFading;

		[Token(Token = "0x400055E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static CameraFadeEffect _instance;

		[Token(Token = "0x400055F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Material fadeMaterial;

		[Token(Token = "0x6000367")]
		[Address(RVA = "0xF52530", Offset = "0xF52530", VA = "0xF52530")]
		public static CameraFadeEffect GetFadeEffect()
		{
			return null;
		}

		[Token(Token = "0x6000368")]
		[Address(RVA = "0xF52640", Offset = "0xF52640", VA = "0xF52640")]
		private static CameraFadeEffect AddFadeEffect()
		{
			return null;
		}

		[Token(Token = "0x6000369")]
		[Address(RVA = "0xF527E8", Offset = "0xF527E8", VA = "0xF527E8")]
		private void Awake()
		{
		}

		[Token(Token = "0x600036A")]
		[Address(RVA = "0xF52700", Offset = "0xF52700", VA = "0xF52700")]
		private void Init()
		{
		}

		[Token(Token = "0x600036B")]
		[Address(RVA = "0xF528C0", Offset = "0xF528C0", VA = "0xF528C0")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600036C")]
		[Address(RVA = "0xF52970", Offset = "0xF52970", VA = "0xF52970")]
		public static bool IsFading()
		{
			return default(bool);
		}

		[Token(Token = "0x600036D")]
		[Address(RVA = "0xF52A1C", Offset = "0xF52A1C", VA = "0xF52A1C")]
		public static void TriggerFade(Color startColor, float startAlpha, float targetAlpha, float duration, [Optional] Action onDone)
		{
		}

		[Token(Token = "0x600036E")]
		[Address(RVA = "0xF52B78", Offset = "0xF52B78", VA = "0xF52B78")]
		public void Fade(Color startColor, float startAlpha, float targetAlpha, float duration, [Optional] Action onDone)
		{
		}

		[Token(Token = "0x600036F")]
		[Address(RVA = "0xF52CB0", Offset = "0xF52CB0", VA = "0xF52CB0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9EECA8", Offset = "0x9EECA8")]
		private IEnumerator DoFade(Color startColor, float startAlpha, float targetAlpha, float duration, [Optional] Action onDone)
		{
			return null;
		}

		[Token(Token = "0x6000370")]
		[Address(RVA = "0xF52DC0", Offset = "0xF52DC0", VA = "0xF52DC0")]
		private void OnRenderImage(RenderTexture src, RenderTexture dst)
		{
		}

		[Token(Token = "0x6000371")]
		[Address(RVA = "0xF52E9C", Offset = "0xF52E9C", VA = "0xF52E9C")]
		public CameraFadeEffect()
		{
		}
	}
	[Token(Token = "0x20000BB")]
	public class CameraFadeTrigger : MonoBehaviour
	{
		[Token(Token = "0x2000385")]
		public enum Behavior : byte
		{
			[Token(Token = "0x40017FE")]
			None,
			[Token(Token = "0x40017FF")]
			FadeIn,
			[Token(Token = "0x4001800")]
			FadeOut,
			[Token(Token = "0x4001801")]
			FadeOutToScene
		}

		[Token(Token = "0x4000560")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E9900", Offset = "0x9E9900")]
		public Behavior onEnable;

		[Token(Token = "0x4000561")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Color fadeColor;

		[Token(Token = "0x4000562")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float durationFadeIn;

		[Token(Token = "0x4000563")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float durationFadeOut;

		[Token(Token = "0x4000564")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9E9938", Offset = "0x9E9938")]
		public int sceneNumber;

		[Token(Token = "0x6000372")]
		[Address(RVA = "0xF530B4", Offset = "0xF530B4", VA = "0xF530B4")]
		public void OnEnable()
		{
		}

		[Token(Token = "0x6000373")]
		[Address(RVA = "0xF53114", Offset = "0xF53114", VA = "0xF53114")]
		public void FadeIn()
		{
		}

		[Token(Token = "0x6000374")]
		[Address(RVA = "0xF53130", Offset = "0xF53130", VA = "0xF53130")]
		public void FadeOut()
		{
		}

		[Token(Token = "0x6000375")]
		[Address(RVA = "0xF53178", Offset = "0xF53178", VA = "0xF53178")]
		public void FadeOutToScene()
		{
		}

		[Token(Token = "0x6000376")]
		[Address(RVA = "0xF5314C", Offset = "0xF5314C", VA = "0xF5314C")]
		public void FadeOutToScene(int scene)
		{
		}

		[Token(Token = "0x6000377")]
		[Address(RVA = "0xF532C4", Offset = "0xF532C4", VA = "0xF532C4")]
		public CameraFadeTrigger()
		{
		}
	}
	[Token(Token = "0x20000BC")]
	public class FadeInOnAwake : MonoBehaviour
	{
		[Token(Token = "0x4000565")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Color fadeColor;

		[Token(Token = "0x4000566")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float fadeInDuration;

		[Token(Token = "0x6000378")]
		[Address(RVA = "0xF5330C", Offset = "0xF5330C", VA = "0xF5330C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000379")]
		[Address(RVA = "0xF5334C", Offset = "0xF5334C", VA = "0xF5334C")]
		public FadeInOnAwake()
		{
		}
	}
	[Token(Token = "0x20000BD")]
	public class FadeToScene
	{
		[Token(Token = "0x4000567")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int sceneToLoad;

		[Token(Token = "0x600037A")]
		[Address(RVA = "0xF53388", Offset = "0xF53388", VA = "0xF53388")]
		public static void LoadScene(string name, float duration = 1f)
		{
		}

		[Token(Token = "0x600037B")]
		[Address(RVA = "0xF533C0", Offset = "0xF533C0", VA = "0xF533C0")]
		public static void LoadScene(string name, Color fadeColor, float duration = 1f)
		{
		}

		[Token(Token = "0x600037C")]
		[Address(RVA = "0xF535BC", Offset = "0xF535BC", VA = "0xF535BC")]
		public static void LoadScene(int number, float duration = 1f)
		{
		}

		[Token(Token = "0x600037D")]
		[Address(RVA = "0xF53180", Offset = "0xF53180", VA = "0xF53180")]
		public static void LoadScene(int number, Color fadeColor, float duration = 1f)
		{
		}

		[Token(Token = "0x600037E")]
		[Address(RVA = "0xF534F0", Offset = "0xF534F0", VA = "0xF534F0")]
		private static void DoFadeAndWait(int number, Color fadeColor, float duration)
		{
		}

		[Token(Token = "0x600037F")]
		[Address(RVA = "0xF535F4", Offset = "0xF535F4", VA = "0xF535F4")]
		private static void LoadAfterFade()
		{
		}

		[Token(Token = "0x6000380")]
		[Address(RVA = "0xF5366C", Offset = "0xF5366C", VA = "0xF5366C")]
		private static int GetBuildIndexOfScene(string name)
		{
			return default(int);
		}

		[Token(Token = "0x6000381")]
		[Address(RVA = "0xF5370C", Offset = "0xF5370C", VA = "0xF5370C")]
		public FadeToScene()
		{
		}
	}
}
namespace Obi
{
	[Token(Token = "0x20000BE")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x9E6970", Offset = "0x9E6970")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x9E6970", Offset = "0x9E6970")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x9E6970", Offset = "0x9E6970")]
	public class ObiCharacter : MonoBehaviour
	{
		[Token(Token = "0x4000568")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float m_MovingTurnSpeed;

		[Token(Token = "0x4000569")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float m_StationaryTurnSpeed;

		[Token(Token = "0x400056A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float m_JumpPower;

		[Token(Token = "0x400056B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9E99A0", Offset = "0x9E99A0")]
		[SerializeField]
		private float m_GravityMultiplier;

		[Token(Token = "0x400056C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float m_RunCycleLegOffset;

		[Token(Token = "0x400056D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private float m_MoveSpeedMultiplier;

		[Token(Token = "0x400056E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private float m_AnimSpeedMultiplier;

		[Token(Token = "0x400056F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private float m_GroundCheckDistance;

		[Token(Token = "0x4000570")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Rigidbody m_Rigidbody;

		[Token(Token = "0x4000571")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Animator m_Animator;

		[Token(Token = "0x4000572")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool m_IsGrounded;

		[Token(Token = "0x4000573")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float m_OrigGroundCheckDistance;

		[Token(Token = "0x4000574")]
		private const float k_Half = 0.5f;

		[Token(Token = "0x4000575")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float m_TurnAmount;

		[Token(Token = "0x4000576")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float m_ForwardAmount;

		[Token(Token = "0x4000577")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Vector3 m_GroundNormal;

		[Token(Token = "0x4000578")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float m_CapsuleHeight;

		[Token(Token = "0x4000579")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Vector3 m_CapsuleCenter;

		[Token(Token = "0x400057A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private CapsuleCollider m_Capsule;

		[Token(Token = "0x400057B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private bool m_Crouching;

		[Token(Token = "0x6000382")]
		[Address(RVA = "0xF4DFF4", Offset = "0xF4DFF4", VA = "0xF4DFF4")]
		private void Start()
		{
		}

		[Token(Token = "0x6000383")]
		[Address(RVA = "0xF4E130", Offset = "0xF4E130", VA = "0xF4E130")]
		public void Move(Vector3 move, bool crouch, bool jump)
		{
		}

		[Token(Token = "0x6000384")]
		[Address(RVA = "0xF4E7A4", Offset = "0xF4E7A4", VA = "0xF4E7A4")]
		private void ScaleCapsuleForCrouching(bool crouch)
		{
		}

		[Token(Token = "0x6000385")]
		[Address(RVA = "0xF4EA40", Offset = "0xF4EA40", VA = "0xF4EA40")]
		private void PreventStandingInLowHeadroom()
		{
		}

		[Token(Token = "0x6000386")]
		[Address(RVA = "0xF4EBF8", Offset = "0xF4EBF8", VA = "0xF4EBF8")]
		private void UpdateAnimator(Vector3 move)
		{
		}

		[Token(Token = "0x6000387")]
		[Address(RVA = "0xF4E690", Offset = "0xF4E690", VA = "0xF4E690")]
		private void HandleAirborneMovement()
		{
		}

		[Token(Token = "0x6000388")]
		[Address(RVA = "0xF4E550", Offset = "0xF4E550", VA = "0xF4E550")]
		private void HandleGroundedMovement(bool crouch, bool jump)
		{
		}

		[Token(Token = "0x6000389")]
		[Address(RVA = "0xF4E480", Offset = "0xF4E480", VA = "0xF4E480")]
		private void ApplyExtraTurnRotation()
		{
		}

		[Token(Token = "0x600038A")]
		[Address(RVA = "0xF4EE44", Offset = "0xF4EE44", VA = "0xF4EE44")]
		public void OnAnimatorMove()
		{
		}

		[Token(Token = "0x600038B")]
		[Address(RVA = "0xF4E2E8", Offset = "0xF4E2E8", VA = "0xF4E2E8")]
		private void CheckGroundStatus()
		{
		}

		[Token(Token = "0x600038C")]
		[Address(RVA = "0xF4EF64", Offset = "0xF4EF64", VA = "0xF4EF64")]
		public ObiCharacter()
		{
		}
	}
	[Token(Token = "0x20000BF")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x9E6A24", Offset = "0x9E6A24")]
	public class SampleCharacterController : MonoBehaviour
	{
		[Token(Token = "0x400057C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private ObiCharacter m_Character;

		[Token(Token = "0x400057D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Transform m_Cam;

		[Token(Token = "0x400057E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 m_CamForward;

		[Token(Token = "0x400057F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Vector3 m_Move;

		[Token(Token = "0x4000580")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool m_Jump;

		[Token(Token = "0x600038D")]
		[Address(RVA = "0xF4EF84", Offset = "0xF4EF84", VA = "0xF4EF84")]
		private void Start()
		{
		}

		[Token(Token = "0x600038E")]
		[Address(RVA = "0xF4F088", Offset = "0xF4F088", VA = "0xF4F088")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x600038F")]
		[Address(RVA = "0xF4F338", Offset = "0xF4F338", VA = "0xF4F338")]
		public SampleCharacterController()
		{
		}
	}
	[Token(Token = "0x20000C0")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x9E6A88", Offset = "0x9E6A88")]
	public class ColorFromPhase : MonoBehaviour
	{
		[Token(Token = "0x4000581")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private ObiActor actor;

		[Token(Token = "0x6000390")]
		[Address(RVA = "0xF4CE6C", Offset = "0xF4CE6C", VA = "0xF4CE6C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000391")]
		[Address(RVA = "0xF4CECC", Offset = "0xF4CECC", VA = "0xF4CECC")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000392")]
		[Address(RVA = "0xF4D080", Offset = "0xF4D080", VA = "0xF4D080")]
		public ColorFromPhase()
		{
		}
	}
	[Token(Token = "0x20000C1")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x9E6AEC", Offset = "0x9E6AEC")]
	public class ColorFromVelocity : MonoBehaviour
	{
		[Token(Token = "0x4000582")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private ObiActor actor;

		[Token(Token = "0x4000583")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float sensibility;

		[Token(Token = "0x6000393")]
		[Address(RVA = "0xF4D088", Offset = "0xF4D088", VA = "0xF4D088")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000394")]
		[Address(RVA = "0xF4D0E8", Offset = "0xF4D0E8", VA = "0xF4D0E8")]
		public void OnEnable()
		{
		}

		[Token(Token = "0x6000395")]
		[Address(RVA = "0xF4D0EC", Offset = "0xF4D0EC", VA = "0xF4D0EC")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000396")]
		[Address(RVA = "0xF4D318", Offset = "0xF4D318", VA = "0xF4D318")]
		public ColorFromVelocity()
		{
		}
	}
	[Token(Token = "0x20000C2")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x9E6B50", Offset = "0x9E6B50")]
	public class ColorRandomizer : MonoBehaviour
	{
		[Token(Token = "0x4000584")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private ObiActor actor;

		[Token(Token = "0x4000585")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Gradient gradient;

		[Token(Token = "0x6000397")]
		[Address(RVA = "0xF4D32C", Offset = "0xF4D32C", VA = "0xF4D32C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000398")]
		[Address(RVA = "0xF4D450", Offset = "0xF4D450", VA = "0xF4D450")]
		public ColorRandomizer()
		{
		}
	}
	[Token(Token = "0x20000C3")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x9E6BB4", Offset = "0x9E6BB4")]
	public class LookAroundCamera : MonoBehaviour
	{
		[Token(Token = "0x2000386")]
		public struct CameraShot
		{
			[Token(Token = "0x4001802")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Vector3 position;

			[Token(Token = "0x4001803")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public Quaternion rotation;

			[Token(Token = "0x4001804")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public Vector3 up;

			[Token(Token = "0x4001805")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float fieldOfView;

			[Token(Token = "0x60018C1")]
			[Address(RVA = "0xF4D600", Offset = "0xF4D600", VA = "0xF4D600")]
			public CameraShot(Vector3 position, Quaternion rotation, Vector3 up, float fieldOfView)
			{
			}
		}

		[Token(Token = "0x4000586")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Camera cam;

		[Token(Token = "0x4000587")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private CameraShot currentShot;

		[Token(Token = "0x4000588")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float movementSpeed;

		[Token(Token = "0x4000589")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float rotationSpeed;

		[Token(Token = "0x400058A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float translationResponse;

		[Token(Token = "0x400058B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float rotationResponse;

		[Token(Token = "0x400058C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float fovResponse;

		[Token(Token = "0x6000399")]
		[Address(RVA = "0xF4D4C4", Offset = "0xF4D4C4", VA = "0xF4D4C4")]
		private void Awake()
		{
		}

		[Token(Token = "0x600039A")]
		[Address(RVA = "0xF4D628", Offset = "0xF4D628", VA = "0xF4D628")]
		private void LookAt(Vector3 position, Vector3 up)
		{
		}

		[Token(Token = "0x600039B")]
		[Address(RVA = "0xF4D744", Offset = "0xF4D744", VA = "0xF4D744")]
		private void UpdateShot()
		{
		}

		[Token(Token = "0x600039C")]
		[Address(RVA = "0xF4D960", Offset = "0xF4D960", VA = "0xF4D960")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x600039D")]
		[Address(RVA = "0xF4DE58", Offset = "0xF4DE58", VA = "0xF4DE58")]
		public LookAroundCamera()
		{
		}
	}
	[Token(Token = "0x20000C4")]
	public class MoveAndRotate : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000387")]
		public class Vector3andSpace
		{
			[Token(Token = "0x4001806")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vector3 value;

			[Token(Token = "0x4001807")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public Space space;

			[Token(Token = "0x60018C2")]
			[Address(RVA = "0xF4DFE4", Offset = "0xF4DFE4", VA = "0xF4DFE4")]
			public Vector3andSpace()
			{
			}
		}

		[Token(Token = "0x400058D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3andSpace moveUnitsPerSecond;

		[Token(Token = "0x400058E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3andSpace rotateDegreesPerSecond;

		[Token(Token = "0x400058F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool ignoreTimescale;

		[Token(Token = "0x4000590")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float m_LastRealTime;

		[Token(Token = "0x600039E")]
		[Address(RVA = "0xF4DE74", Offset = "0xF4DE74", VA = "0xF4DE74")]
		private void Start()
		{
		}

		[Token(Token = "0x600039F")]
		[Address(RVA = "0xF4DE9C", Offset = "0xF4DE9C", VA = "0xF4DE9C")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x60003A0")]
		[Address(RVA = "0xF4DFDC", Offset = "0xF4DFDC", VA = "0xF4DFDC")]
		public MoveAndRotate()
		{
		}
	}
}
namespace TriangleNet
{
	[Token(Token = "0x20000C5")]
	internal class Behavior
	{
		[Token(Token = "0x4000591")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private bool poly;

		[Token(Token = "0x4000592")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		private bool quality;

		[Token(Token = "0x4000593")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
		private bool varArea;

		[Token(Token = "0x4000594")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13")]
		private bool convex;

		[Token(Token = "0x4000595")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private bool jettison;

		[Token(Token = "0x4000596")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
		private bool boundaryMarkers;

		[Token(Token = "0x4000597")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16")]
		private bool noHoles;

		[Token(Token = "0x4000598")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x17")]
		private bool conformDel;

		[Token(Token = "0x4000599")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Func<ITriangle, double, bool> usertest;

		[Token(Token = "0x400059A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int noBisect;

		[Token(Token = "0x400059B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private double minAngle;

		[Token(Token = "0x400059C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private double maxAngle;

		[Token(Token = "0x400059D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private double maxArea;

		[Token(Token = "0x400059E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		internal bool fixedArea;

		[Token(Token = "0x400059F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		internal bool useSegments;

		[Token(Token = "0x40005A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x42")]
		internal bool useRegions;

		[Token(Token = "0x40005A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		internal double goodAngle;

		[Token(Token = "0x40005A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		internal double maxGoodAngle;

		[Token(Token = "0x40005A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		internal double offconstant;

		[Token(Token = "0x40005A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E9A20", Offset = "0x9E9A20")]
		private static bool <NoExact>k__BackingField;

		[Token(Token = "0x17000032")]
		public static bool NoExact
		{
			[Token(Token = "0x60003A3")]
			[Address(RVA = "0xE48B84", Offset = "0xE48B84", VA = "0xE48B84")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EED0C", Offset = "0x9EED0C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60003A4")]
			[Address(RVA = "0xE48BD4", Offset = "0xE48BD4", VA = "0xE48BD4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EED1C", Offset = "0x9EED1C")]
			set
			{
			}
		}

		[Token(Token = "0x17000033")]
		public bool Quality
		{
			[Token(Token = "0x60003A5")]
			[Address(RVA = "0xE48C2C", Offset = "0xE48C2C", VA = "0xE48C2C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60003A6")]
			[Address(RVA = "0xE48C34", Offset = "0xE48C34", VA = "0xE48C34")]
			set
			{
			}
		}

		[Token(Token = "0x17000034")]
		public double MinAngle
		{
			[Token(Token = "0x60003A7")]
			[Address(RVA = "0xE48C48", Offset = "0xE48C48", VA = "0xE48C48")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x60003A8")]
			[Address(RVA = "0xE48C50", Offset = "0xE48C50", VA = "0xE48C50")]
			set
			{
			}
		}

		[Token(Token = "0x17000035")]
		public double MaxAngle
		{
			[Token(Token = "0x60003A9")]
			[Address(RVA = "0xE48C58", Offset = "0xE48C58", VA = "0xE48C58")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x60003AA")]
			[Address(RVA = "0xE48C60", Offset = "0xE48C60", VA = "0xE48C60")]
			set
			{
			}
		}

		[Token(Token = "0x17000036")]
		public double MaxArea
		{
			[Token(Token = "0x60003AB")]
			[Address(RVA = "0xE48C68", Offset = "0xE48C68", VA = "0xE48C68")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x60003AC")]
			[Address(RVA = "0xE48C70", Offset = "0xE48C70", VA = "0xE48C70")]
			set
			{
			}
		}

		[Token(Token = "0x17000037")]
		public bool VarArea
		{
			[Token(Token = "0x60003AD")]
			[Address(RVA = "0xE48C84", Offset = "0xE48C84", VA = "0xE48C84")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60003AE")]
			[Address(RVA = "0xE48C8C", Offset = "0xE48C8C", VA = "0xE48C8C")]
			set
			{
			}
		}

		[Token(Token = "0x17000038")]
		public bool Poly
		{
			[Token(Token = "0x60003AF")]
			[Address(RVA = "0xE48C98", Offset = "0xE48C98", VA = "0xE48C98")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60003B0")]
			[Address(RVA = "0xE48CA0", Offset = "0xE48CA0", VA = "0xE48CA0")]
			set
			{
			}
		}

		[Token(Token = "0x17000039")]
		public Func<ITriangle, double, bool> UserTest
		{
			[Token(Token = "0x60003B1")]
			[Address(RVA = "0xE48CAC", Offset = "0xE48CAC", VA = "0xE48CAC")]
			get
			{
				return null;
			}
			[Token(Token = "0x60003B2")]
			[Address(RVA = "0xE48CB4", Offset = "0xE48CB4", VA = "0xE48CB4")]
			set
			{
			}
		}

		[Token(Token = "0x1700003A")]
		public bool Convex
		{
			[Token(Token = "0x60003B3")]
			[Address(RVA = "0xE48CBC", Offset = "0xE48CBC", VA = "0xE48CBC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60003B4")]
			[Address(RVA = "0xE48CC4", Offset = "0xE48CC4", VA = "0xE48CC4")]
			set
			{
			}
		}

		[Token(Token = "0x1700003B")]
		public bool ConformingDelaunay
		{
			[Token(Token = "0x60003B5")]
			[Address(RVA = "0xE48CD0", Offset = "0xE48CD0", VA = "0xE48CD0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60003B6")]
			[Address(RVA = "0xE48CD8", Offset = "0xE48CD8", VA = "0xE48CD8")]
			set
			{
			}
		}

		[Token(Token = "0x1700003C")]
		public int NoBisect
		{
			[Token(Token = "0x60003B7")]
			[Address(RVA = "0xE48CE4", Offset = "0xE48CE4", VA = "0xE48CE4")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60003B8")]
			[Address(RVA = "0xE48CEC", Offset = "0xE48CEC", VA = "0xE48CEC")]
			set
			{
			}
		}

		[Token(Token = "0x1700003D")]
		public bool UseBoundaryMarkers
		{
			[Token(Token = "0x60003B9")]
			[Address(RVA = "0xE48CFC", Offset = "0xE48CFC", VA = "0xE48CFC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60003BA")]
			[Address(RVA = "0xE48D04", Offset = "0xE48D04", VA = "0xE48D04")]
			set
			{
			}
		}

		[Token(Token = "0x1700003E")]
		public bool NoHoles
		{
			[Token(Token = "0x60003BB")]
			[Address(RVA = "0xE48D10", Offset = "0xE48D10", VA = "0xE48D10")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60003BC")]
			[Address(RVA = "0xE48D18", Offset = "0xE48D18", VA = "0xE48D18")]
			set
			{
			}
		}

		[Token(Token = "0x1700003F")]
		public bool Jettison
		{
			[Token(Token = "0x60003BD")]
			[Address(RVA = "0xE48D24", Offset = "0xE48D24", VA = "0xE48D24")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60003BE")]
			[Address(RVA = "0xE48D2C", Offset = "0xE48D2C", VA = "0xE48D2C")]
			set
			{
			}
		}

		[Token(Token = "0x60003A1")]
		[Address(RVA = "0xE48780", Offset = "0xE48780", VA = "0xE48780")]
		public Behavior(bool quality = false, double minAngle = 20.0)
		{
		}

		[Token(Token = "0x60003A2")]
		[Address(RVA = "0xE487F4", Offset = "0xE487F4", VA = "0xE487F4")]
		private void Update()
		{
		}
	}
	[Token(Token = "0x20000C6")]
	public class Configuration
	{
		[Serializable]
		[Token(Token = "0x2000388")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E7C88", Offset = "0x9E7C88")]
		private sealed class <>c
		{
			[Token(Token = "0x4001808")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001809")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<IPredicates> <>9__0_0;

			[Token(Token = "0x400180A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<TrianglePool> <>9__0_1;

			[Token(Token = "0x400180B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Func<TrianglePool> <>9__1_0;

			[Token(Token = "0x60018C4")]
			[Address(RVA = "0xE4909C", Offset = "0xE4909C", VA = "0xE4909C")]
			public <>c()
			{
			}

			[Token(Token = "0x60018C5")]
			[Address(RVA = "0xE490A4", Offset = "0xE490A4", VA = "0xE490A4")]
			internal IPredicates <.ctor>b__0_0()
			{
				return null;
			}

			[Token(Token = "0x60018C6")]
			[Address(RVA = "0xE49104", Offset = "0xE49104", VA = "0xE49104")]
			internal TrianglePool <.ctor>b__0_1()
			{
				return null;
			}

			[Token(Token = "0x60018C7")]
			[Address(RVA = "0xE49160", Offset = "0xE49160", VA = "0xE49160")]
			internal TrianglePool <.ctor>b__1_0()
			{
				return null;
			}
		}

		[Token(Token = "0x40005A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E9A30", Offset = "0x9E9A30")]
		private Func<IPredicates> <Predicates>k__BackingField;

		[Token(Token = "0x40005A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E9A40", Offset = "0x9E9A40")]
		private Func<TrianglePool> <TrianglePool>k__BackingField;

		[Token(Token = "0x17000040")]
		public Func<IPredicates> Predicates
		{
			[Token(Token = "0x60003C2")]
			[Address(RVA = "0xE49014", Offset = "0xE49014", VA = "0xE49014")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EED2C", Offset = "0x9EED2C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60003C3")]
			[Address(RVA = "0xE4901C", Offset = "0xE4901C", VA = "0xE4901C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EED3C", Offset = "0x9EED3C")]
			set
			{
			}
		}

		[Token(Token = "0x17000041")]
		public Func<TrianglePool> TrianglePool
		{
			[Token(Token = "0x60003C4")]
			[Address(RVA = "0xE49024", Offset = "0xE49024", VA = "0xE49024")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EED4C", Offset = "0x9EED4C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60003C5")]
			[Address(RVA = "0xE4902C", Offset = "0xE4902C", VA = "0xE4902C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EED5C", Offset = "0x9EED5C")]
			set
			{
			}
		}

		[Token(Token = "0x60003BF")]
		[Address(RVA = "0xE48D38", Offset = "0xE48D38", VA = "0xE48D38")]
		public Configuration()
		{
		}

		[Token(Token = "0x60003C0")]
		[Address(RVA = "0xE48F14", Offset = "0xE48F14", VA = "0xE48F14")]
		public Configuration(Func<IPredicates> predicates)
		{
		}

		[Token(Token = "0x60003C1")]
		[Address(RVA = "0xE48EC4", Offset = "0xE48EC4", VA = "0xE48EC4")]
		public Configuration(Func<IPredicates> predicates, Func<TrianglePool> trianglePool)
		{
		}
	}
	[Token(Token = "0x20000C7")]
	public enum VertexType
	{
		[Token(Token = "0x40005A8")]
		InputVertex,
		[Token(Token = "0x40005A9")]
		SegmentVertex,
		[Token(Token = "0x40005AA")]
		FreeVertex,
		[Token(Token = "0x40005AB")]
		DeadVertex,
		[Token(Token = "0x40005AC")]
		UndeadVertex
	}
	[Token(Token = "0x20000C8")]
	public enum NodeNumbering
	{
		[Token(Token = "0x40005AE")]
		None,
		[Token(Token = "0x40005AF")]
		Linear,
		[Token(Token = "0x40005B0")]
		CuthillMcKee
	}
	[Token(Token = "0x20000C9")]
	public enum LocateResult
	{
		[Token(Token = "0x40005B2")]
		InTriangle,
		[Token(Token = "0x40005B3")]
		OnEdge,
		[Token(Token = "0x40005B4")]
		OnVertex,
		[Token(Token = "0x40005B5")]
		Outside
	}
	[Token(Token = "0x20000CA")]
	internal enum InsertVertexResult
	{
		[Token(Token = "0x40005B7")]
		Successful,
		[Token(Token = "0x40005B8")]
		Encroaching,
		[Token(Token = "0x40005B9")]
		Violating,
		[Token(Token = "0x40005BA")]
		Duplicate
	}
	[Token(Token = "0x20000CB")]
	internal enum FindDirectionResult
	{
		[Token(Token = "0x40005BC")]
		Within,
		[Token(Token = "0x40005BD")]
		Leftcollinear,
		[Token(Token = "0x40005BE")]
		Rightcollinear
	}
	[Token(Token = "0x20000CC")]
	public interface IPredicates
	{
		[Token(Token = "0x60003C6")]
		double CounterClockwise(Point a, Point b, Point c);

		[Token(Token = "0x60003C7")]
		double InCircle(Point a, Point b, Point c, Point p);

		[Token(Token = "0x60003C8")]
		Point FindCircumcenter(Point org, Point dest, Point apex, ref double xi, ref double eta);

		[Token(Token = "0x60003C9")]
		Point FindCircumcenter(Point org, Point dest, Point apex, ref double xi, ref double eta, double offconstant);
	}
	[Token(Token = "0x20000CD")]
	public sealed class Log : ILog<LogItem>
	{
		[Token(Token = "0x40005BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E9A50", Offset = "0x9E9A50")]
		private static bool <Verbose>k__BackingField;

		[Token(Token = "0x40005C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private List<LogItem> log;

		[Token(Token = "0x40005C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private LogLevel level;

		[Token(Token = "0x40005C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly Log instance;

		[Token(Token = "0x17000042")]
		public static bool Verbose
		{
			[Token(Token = "0x60003CA")]
			[Address(RVA = "0x16837F4", Offset = "0x16837F4", VA = "0x16837F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EED6C", Offset = "0x9EED6C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60003CB")]
			[Address(RVA = "0x168385C", Offset = "0x168385C", VA = "0x168385C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EED7C", Offset = "0x9EED7C")]
			set
			{
			}
		}

		[Token(Token = "0x17000043")]
		public static ILog<LogItem> Instance
		{
			[Token(Token = "0x60003CE")]
			[Address(RVA = "0x16839AC", Offset = "0x16839AC", VA = "0x16839AC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000044")]
		public IList<LogItem> Data
		{
			[Token(Token = "0x60003D4")]
			[Address(RVA = "0x1683DA4", Offset = "0x1683DA4", VA = "0x1683DA4", Slot = "9")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000045")]
		public LogLevel Level
		{
			[Token(Token = "0x60003D5")]
			[Address(RVA = "0x1683DAC", Offset = "0x1683DAC", VA = "0x1683DAC", Slot = "10")]
			get
			{
				return default(LogLevel);
			}
		}

		[Token(Token = "0x60003CC")]
		[Address(RVA = "0x16838CC", Offset = "0x16838CC", VA = "0x16838CC")]
		static Log()
		{
		}

		[Token(Token = "0x60003CD")]
		[Address(RVA = "0x1683930", Offset = "0x1683930", VA = "0x1683930")]
		private Log()
		{
		}

		[Token(Token = "0x60003CF")]
		[Address(RVA = "0x1683A14", Offset = "0x1683A14", VA = "0x1683A14", Slot = "4")]
		public void Add(LogItem item)
		{
		}

		[Token(Token = "0x60003D0")]
		[Address(RVA = "0x1683A7C", Offset = "0x1683A7C", VA = "0x1683A7C", Slot = "5")]
		public void Clear()
		{
		}

		[Token(Token = "0x60003D1")]
		[Address(RVA = "0x1683AD4", Offset = "0x1683AD4", VA = "0x1683AD4", Slot = "6")]
		public void Info(string message)
		{
		}

		[Token(Token = "0x60003D2")]
		[Address(RVA = "0x1683BC8", Offset = "0x1683BC8", VA = "0x1683BC8", Slot = "8")]
		public void Warning(string message, string location)
		{
		}

		[Token(Token = "0x60003D3")]
		[Address(RVA = "0x1683D10", Offset = "0x1683D10", VA = "0x1683D10", Slot = "7")]
		public void Error(string message, string location)
		{
		}
	}
	[Token(Token = "0x20000CE")]
	public class Mesh : IMesh
	{
		[Token(Token = "0x2000389")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E7C98", Offset = "0x9E7C98")]
		private sealed class <get_Edges>d__39 : IEnumerable<TriangleNet.Geometry.Edge>, IEnumerable, IEnumerator<TriangleNet.Geometry.Edge>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400180C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400180D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private TriangleNet.Geometry.Edge <>2__current;

			[Token(Token = "0x400180E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x400180F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Mesh <>4__this;

			[Token(Token = "0x4001810")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private EdgeIterator <e>5__2;

			[Token(Token = "0x17000221")]
			private TriangleNet.Geometry.Edge System.Collections.Generic.IEnumerator<TriangleNet.Geometry.Edge>.Current
			{
				[Token(Token = "0x60018CB")]
				[Address(RVA = "0x1688920", Offset = "0x1688920", VA = "0x1688920", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000222")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60018CD")]
				[Address(RVA = "0x1688988", Offset = "0x1688988", VA = "0x1688988", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60018C8")]
			[Address(RVA = "0x1683F28", Offset = "0x1683F28", VA = "0x1683F28")]
			[DebuggerHidden]
			public <get_Edges>d__39(int <>1__state)
			{
			}

			[Token(Token = "0x60018C9")]
			[Address(RVA = "0x168840C", Offset = "0x168840C", VA = "0x168840C", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60018CA")]
			[Address(RVA = "0x1688410", Offset = "0x1688410", VA = "0x1688410", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60018CC")]
			[Address(RVA = "0x1688928", Offset = "0x1688928", VA = "0x1688928", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x60018CE")]
			[Address(RVA = "0x1688990", Offset = "0x1688990", VA = "0x1688990", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<TriangleNet.Geometry.Edge> System.Collections.Generic.IEnumerable<TriangleNet.Geometry.Edge>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x60018CF")]
			[Address(RVA = "0x1688A44", Offset = "0x1688A44", VA = "0x1688A44", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x40005C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IPredicates predicates;

		[Token(Token = "0x40005C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private ILog<LogItem> logger;

		[Token(Token = "0x40005C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private QualityMesher qualityMesher;

		[Token(Token = "0x40005C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Stack<Otri> flipstack;

		[Token(Token = "0x40005C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal TrianglePool triangles;

		[Token(Token = "0x40005C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal Dictionary<int, SubSegment> subsegs;

		[Token(Token = "0x40005C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		internal Dictionary<int, TriangleNet.Geometry.Vertex> vertices;

		[Token(Token = "0x40005CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		internal int hash_vtx;

		[Token(Token = "0x40005CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		internal int hash_seg;

		[Token(Token = "0x40005CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		internal int hash_tri;

		[Token(Token = "0x40005CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		internal List<Point> holes;

		[Token(Token = "0x40005CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		internal List<RegionPointer> regions;

		[Token(Token = "0x40005CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		internal Rectangle bounds;

		[Token(Token = "0x40005D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		internal int invertices;

		[Token(Token = "0x40005D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		internal int insegments;

		[Token(Token = "0x40005D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		internal int undeads;

		[Token(Token = "0x40005D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		internal int mesh_dim;

		[Token(Token = "0x40005D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		internal int nextras;

		[Token(Token = "0x40005D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		internal int hullsize;

		[Token(Token = "0x40005D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		internal int steinerleft;

		[Token(Token = "0x40005D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		internal bool checksegments;

		[Token(Token = "0x40005D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8D")]
		internal bool checkquality;

		[Token(Token = "0x40005D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		internal TriangleNet.Geometry.Vertex infvertex1;

		[Token(Token = "0x40005DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		internal TriangleNet.Geometry.Vertex infvertex2;

		[Token(Token = "0x40005DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		internal TriangleNet.Geometry.Vertex infvertex3;

		[Token(Token = "0x40005DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		internal TriangleLocator locator;

		[Token(Token = "0x40005DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		internal Behavior behavior;

		[Token(Token = "0x40005DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		internal NodeNumbering numbering;

		[Token(Token = "0x40005DF")]
		internal const int DUMMY = -1;

		[Token(Token = "0x40005E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		internal TriangleNet.Topology.Triangle dummytri;

		[Token(Token = "0x40005E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		internal SubSegment dummysub;

		[Token(Token = "0x17000046")]
		public Rectangle Bounds
		{
			[Token(Token = "0x60003D6")]
			[Address(RVA = "0x1683DD4", Offset = "0x1683DD4", VA = "0x1683DD4", Slot = "9")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000047")]
		public ICollection<TriangleNet.Geometry.Vertex> Vertices
		{
			[Token(Token = "0x60003D7")]
			[Address(RVA = "0x1683DDC", Offset = "0x1683DDC", VA = "0x1683DDC", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000048")]
		public IList<Point> Holes
		{
			[Token(Token = "0x60003D8")]
			[Address(RVA = "0x1683E34", Offset = "0x1683E34", VA = "0x1683E34", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000049")]
		public ICollection<TriangleNet.Topology.Triangle> Triangles
		{
			[Token(Token = "0x60003D9")]
			[Address(RVA = "0x1683E3C", Offset = "0x1683E3C", VA = "0x1683E3C", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700004A")]
		public ICollection<SubSegment> Segments
		{
			[Token(Token = "0x60003DA")]
			[Address(RVA = "0x1683E44", Offset = "0x1683E44", VA = "0x1683E44", Slot = "6")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700004B")]
		public IEnumerable<TriangleNet.Geometry.Edge> Edges
		{
			[Token(Token = "0x60003DB")]
			[Address(RVA = "0x1683E9C", Offset = "0x1683E9C", VA = "0x1683E9C", Slot = "5")]
			[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9EED8C", Offset = "0x9EED8C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700004C")]
		public int NumberOfInputPoints
		{
			[Token(Token = "0x60003DC")]
			[Address(RVA = "0x1683F60", Offset = "0x1683F60", VA = "0x1683F60")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700004D")]
		public int NumberOfEdges
		{
			[Token(Token = "0x60003DD")]
			[Address(RVA = "0x168314C", Offset = "0x168314C", VA = "0x168314C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700004E")]
		public bool IsPolygon
		{
			[Token(Token = "0x60003DE")]
			[Address(RVA = "0x1683F68", Offset = "0x1683F68", VA = "0x1683F68")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700004F")]
		public NodeNumbering CurrentNumbering
		{
			[Token(Token = "0x60003DF")]
			[Address(RVA = "0x1683F78", Offset = "0x1683F78", VA = "0x1683F78")]
			get
			{
				return default(NodeNumbering);
			}
		}

		[Token(Token = "0x60003E0")]
		[Address(RVA = "0x1683F80", Offset = "0x1683F80", VA = "0x1683F80")]
		private void Initialize()
		{
		}

		[Token(Token = "0x60003E1")]
		[Address(RVA = "0x1684170", Offset = "0x1684170", VA = "0x1684170")]
		public Mesh(Configuration config)
		{
		}

		[Token(Token = "0x60003E2")]
		[Address(RVA = "0x168441C", Offset = "0x168441C", VA = "0x168441C", Slot = "11")]
		public void Refine(QualityOptions quality, bool delaunay = false)
		{
		}

		[Token(Token = "0x60003E3")]
		[Address(RVA = "0x1680400", Offset = "0x1680400", VA = "0x1680400", Slot = "10")]
		public void Renumber()
		{
		}

		[Token(Token = "0x60003E4")]
		[Address(RVA = "0x1684970", Offset = "0x1684970", VA = "0x1684970")]
		public void Renumber(NodeNumbering num)
		{
		}

		[Token(Token = "0x60003E5")]
		[Address(RVA = "0x1684D54", Offset = "0x1684D54", VA = "0x1684D54")]
		internal void SetQualityMesher(QualityMesher qmesher)
		{
		}

		[Token(Token = "0x60003E6")]
		[Address(RVA = "0x1684D5C", Offset = "0x1684D5C", VA = "0x1684D5C")]
		internal void CopyTo(Mesh target)
		{
		}

		[Token(Token = "0x60003E7")]
		[Address(RVA = "0x1684DFC", Offset = "0x1684DFC", VA = "0x1684DFC")]
		private void ResetData()
		{
		}

		[Token(Token = "0x60003E8")]
		[Address(RVA = "0x1684540", Offset = "0x1684540", VA = "0x1684540")]
		private void Reset()
		{
		}

		[Token(Token = "0x60003E9")]
		[Address(RVA = "0x1684EE8", Offset = "0x1684EE8", VA = "0x1684EE8")]
		internal void TransferNodes(IList<TriangleNet.Geometry.Vertex> points)
		{
		}

		[Token(Token = "0x60003EA")]
		[Address(RVA = "0x1685454", Offset = "0x1685454", VA = "0x1685454")]
		internal void MakeVertexMap()
		{
		}

		[Token(Token = "0x60003EB")]
		[Address(RVA = "0x16856A4", Offset = "0x16856A4", VA = "0x16856A4")]
		internal void MakeTriangle(ref Otri newotri)
		{
		}

		[Token(Token = "0x60003EC")]
		[Address(RVA = "0x16857C0", Offset = "0x16857C0", VA = "0x16857C0")]
		internal void MakeSegment(ref Osub newsubseg)
		{
		}

		[Token(Token = "0x60003ED")]
		[Address(RVA = "0x16858F4", Offset = "0x16858F4", VA = "0x16858F4")]
		internal InsertVertexResult InsertVertex(TriangleNet.Geometry.Vertex newvertex, ref Otri searchtri, ref Osub splitseg, bool segmentflaws, bool triflaws)
		{
			return default(InsertVertexResult);
		}

		[Token(Token = "0x60003EE")]
		[Address(RVA = "0x1686A44", Offset = "0x1686A44", VA = "0x1686A44")]
		internal void InsertSubseg(ref Otri tri, int subsegmark)
		{
		}

		[Token(Token = "0x60003EF")]
		[Address(RVA = "0x168745C", Offset = "0x168745C", VA = "0x168745C")]
		internal void Flip(ref Otri flipedge)
		{
		}

		[Token(Token = "0x60003F0")]
		[Address(RVA = "0x168776C", Offset = "0x168776C", VA = "0x168776C")]
		internal void Unflip(ref Otri flipedge)
		{
		}

		[Token(Token = "0x60003F1")]
		[Address(RVA = "0x1687A7C", Offset = "0x1687A7C", VA = "0x1687A7C")]
		private void TriangulatePolygon(Otri firstedge, Otri lastedge, int edgecount, bool doflip, bool triflaws)
		{
		}

		[Token(Token = "0x60003F2")]
		[Address(RVA = "0x1687D14", Offset = "0x1687D14", VA = "0x1687D14")]
		internal void DeleteVertex(ref Otri deltri)
		{
		}

		[Token(Token = "0x60003F3")]
		[Address(RVA = "0x1688054", Offset = "0x1688054", VA = "0x1688054")]
		internal void UndoVertex()
		{
		}

		[Token(Token = "0x60003F4")]
		[Address(RVA = "0x1687FC8", Offset = "0x1687FC8", VA = "0x1687FC8")]
		internal void TriangleDealloc(TriangleNet.Topology.Triangle dyingtriangle)
		{
		}

		[Token(Token = "0x60003F5")]
		[Address(RVA = "0x1687F54", Offset = "0x1687F54", VA = "0x1687F54")]
		internal void VertexDealloc(TriangleNet.Geometry.Vertex dyingvertex)
		{
		}

		[Token(Token = "0x60003F6")]
		[Address(RVA = "0x1688394", Offset = "0x1688394", VA = "0x1688394")]
		internal void SubsegDealloc(SubSegment dyingsubseg)
		{
		}
	}
	[Token(Token = "0x20000CF")]
	public static class MeshValidator
	{
		[Token(Token = "0x40005E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static RobustPredicates predicates;

		[Token(Token = "0x60003F7")]
		[Address(RVA = "0x1688A48", Offset = "0x1688A48", VA = "0x1688A48")]
		public static bool IsConsistent(Mesh mesh)
		{
			return default(bool);
		}

		[Token(Token = "0x60003F8")]
		[Address(RVA = "0x1689510", Offset = "0x1689510", VA = "0x1689510")]
		public static bool IsDelaunay(Mesh mesh)
		{
			return default(bool);
		}

		[Token(Token = "0x60003F9")]
		[Address(RVA = "0x1689D80", Offset = "0x1689D80", VA = "0x1689D80")]
		public static bool IsConstrainedDelaunay(Mesh mesh)
		{
			return default(bool);
		}

		[Token(Token = "0x60003FA")]
		[Address(RVA = "0x1689578", Offset = "0x1689578", VA = "0x1689578")]
		private static bool IsDelaunay(Mesh mesh, bool constrained)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20000D0")]
	internal class NewLocation
	{
		[Token(Token = "0x40005E3")]
		private const double EPS = 1E-50;

		[Token(Token = "0x40005E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IPredicates predicates;

		[Token(Token = "0x40005E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Mesh mesh;

		[Token(Token = "0x40005E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Behavior behavior;

		[Token(Token = "0x40005E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private double[] petalx;

		[Token(Token = "0x40005E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private double[] petaly;

		[Token(Token = "0x40005E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private double[] petalr;

		[Token(Token = "0x40005EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private double[] wedges;

		[Token(Token = "0x40005EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private double[] initialConvexPoly;

		[Token(Token = "0x40005EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private double[] points_p;

		[Token(Token = "0x40005ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private double[] points_q;

		[Token(Token = "0x40005EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private double[] points_r;

		[Token(Token = "0x40005EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private double[] poly1;

		[Token(Token = "0x40005F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private double[] poly2;

		[Token(Token = "0x40005F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private double[][] polys;

		[Token(Token = "0x60003FC")]
		[Address(RVA = "0x1879458", Offset = "0x1879458", VA = "0x1879458")]
		public NewLocation(Mesh mesh, IPredicates predicates)
		{
		}

		[Token(Token = "0x60003FD")]
		[Address(RVA = "0x187962C", Offset = "0x187962C", VA = "0x187962C")]
		public Point FindLocation(TriangleNet.Geometry.Vertex org, TriangleNet.Geometry.Vertex dest, TriangleNet.Geometry.Vertex apex, ref double xi, ref double eta, bool offcenter, Otri badotri)
		{
			return null;
		}

		[Token(Token = "0x60003FE")]
		[Address(RVA = "0x1879670", Offset = "0x1879670", VA = "0x1879670")]
		private Point FindNewLocationWithoutMaxAngle(TriangleNet.Geometry.Vertex torg, TriangleNet.Geometry.Vertex tdest, TriangleNet.Geometry.Vertex tapex, ref double xi, ref double eta, bool offcenter, Otri badotri)
		{
			return null;
		}

		[Token(Token = "0x60003FF")]
		[Address(RVA = "0x187A9EC", Offset = "0x187A9EC", VA = "0x187A9EC")]
		private Point FindNewLocation(TriangleNet.Geometry.Vertex torg, TriangleNet.Geometry.Vertex tdest, TriangleNet.Geometry.Vertex tapex, ref double xi, ref double eta, bool offcenter, Otri badotri)
		{
			return null;
		}

		[Token(Token = "0x6000400")]
		[Address(RVA = "0x187CCAC", Offset = "0x187CCAC", VA = "0x187CCAC")]
		private int LongestShortestEdge(double aodist, double dadist, double dodist)
		{
			return default(int);
		}

		[Token(Token = "0x6000401")]
		[Address(RVA = "0x187CD38", Offset = "0x187CD38", VA = "0x187CD38")]
		private int DoSmoothing(Otri badotri, TriangleNet.Geometry.Vertex torg, TriangleNet.Geometry.Vertex tdest, TriangleNet.Geometry.Vertex tapex, ref double[] newloc)
		{
			return default(int);
		}

		[Token(Token = "0x6000402")]
		[Address(RVA = "0x187E264", Offset = "0x187E264", VA = "0x187E264")]
		private int GetStarPoints(Otri badotri, TriangleNet.Geometry.Vertex p, TriangleNet.Geometry.Vertex q, TriangleNet.Geometry.Vertex r, int whichPoint, ref double[] points)
		{
			return default(int);
		}

		[Token(Token = "0x6000403")]
		[Address(RVA = "0x187D1C4", Offset = "0x187D1C4", VA = "0x187D1C4")]
		private bool GetNeighborsVertex(Otri badotri, double first_x, double first_y, double second_x, double second_y, ref double[] thirdpoint, ref Otri neighotri)
		{
			return default(bool);
		}

		[Token(Token = "0x6000404")]
		[Address(RVA = "0x187E720", Offset = "0x187E720", VA = "0x187E720")]
		private bool GetWedgeIntersectionWithoutMaxAngle(int numpoints, double[] points, ref double[] newloc)
		{
			return default(bool);
		}

		[Token(Token = "0x6000405")]
		[Address(RVA = "0x187F908", Offset = "0x187F908", VA = "0x187F908")]
		private bool GetWedgeIntersection(int numpoints, double[] points, ref double[] newloc)
		{
			return default(bool);
		}

		[Token(Token = "0x6000406")]
		[Address(RVA = "0x187E54C", Offset = "0x187E54C", VA = "0x187E54C")]
		private bool ValidPolygonAngles(int numpoints, double[] points)
		{
			return default(bool);
		}

		[Token(Token = "0x6000407")]
		[Address(RVA = "0x1882198", Offset = "0x1882198", VA = "0x1882198")]
		private bool IsBadPolygonAngle(double x1, double y1, double x2, double y2, double x3, double y3)
		{
			return default(bool);
		}

		[Token(Token = "0x6000408")]
		[Address(RVA = "0x187DD2C", Offset = "0x187DD2C", VA = "0x187DD2C")]
		private void LineLineIntersection(double x1, double y1, double x2, double y2, double x3, double y3, double x4, double y4, ref double[] p)
		{
		}

		[Token(Token = "0x6000409")]
		[Address(RVA = "0x1881DD0", Offset = "0x1881DD0", VA = "0x1881DD0")]
		private int HalfPlaneIntersection(int numvertices, ref double[] convexPoly, double x1, double y1, double x2, double y2)
		{
			return default(int);
		}

		[Token(Token = "0x600040A")]
		[Address(RVA = "0x18822E8", Offset = "0x18822E8", VA = "0x18822E8")]
		private int SplitConvexPolygon(int numvertices, double[] convexPoly, double x1, double y1, double x2, double y2, double[][] polys)
		{
			return default(int);
		}

		[Token(Token = "0x600040B")]
		[Address(RVA = "0x188309C", Offset = "0x188309C", VA = "0x188309C")]
		private int LinePointLocation(double x1, double y1, double x2, double y2, double x, double y)
		{
			return default(int);
		}

		[Token(Token = "0x600040C")]
		[Address(RVA = "0x1882E8C", Offset = "0x1882E8C", VA = "0x1882E8C")]
		private void LineLineSegmentIntersection(double x1, double y1, double x2, double y2, double x3, double y3, double x4, double y4, ref double[] p)
		{
		}

		[Token(Token = "0x600040D")]
		[Address(RVA = "0x1882088", Offset = "0x1882088", VA = "0x1882088")]
		private void FindPolyCentroid(int numpoints, double[] points, ref double[] centroid)
		{
		}

		[Token(Token = "0x600040E")]
		[Address(RVA = "0x187D6E0", Offset = "0x187D6E0", VA = "0x187D6E0")]
		private void CircleLineIntersection(double x1, double y1, double x2, double y2, double x3, double y3, double r, ref double[] p)
		{
		}

		[Token(Token = "0x600040F")]
		[Address(RVA = "0x187D9BC", Offset = "0x187D9BC", VA = "0x187D9BC")]
		private bool ChooseCorrectPoint(double x1, double y1, double x2, double y2, double x3, double y3, bool isObtuse)
		{
			return default(bool);
		}

		[Token(Token = "0x6000410")]
		[Address(RVA = "0x187D9FC", Offset = "0x187D9FC", VA = "0x187D9FC")]
		private void PointBetweenPoints(double x1, double y1, double x2, double y2, double x, double y, ref double[] p)
		{
		}

		[Token(Token = "0x6000411")]
		[Address(RVA = "0x187DB0C", Offset = "0x187DB0C", VA = "0x187DB0C")]
		private bool IsBadTriangleAngle(double x1, double y1, double x2, double y2, double x3, double y3)
		{
			return default(bool);
		}

		[Token(Token = "0x6000412")]
		[Address(RVA = "0x187DF68", Offset = "0x187DF68", VA = "0x187DF68")]
		private double MinDistanceToNeighbor(double newlocX, double newlocY, ref Otri searchtri)
		{
			return default(double);
		}
	}
	[Token(Token = "0x20000D1")]
	public class RobustPredicates : IPredicates
	{
		[Token(Token = "0x40005F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly object creationLock;

		[Token(Token = "0x40005F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static RobustPredicates _default;

		[Token(Token = "0x40005F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static double epsilon;

		[Token(Token = "0x40005F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static double splitter;

		[Token(Token = "0x40005F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static double resulterrbound;

		[Token(Token = "0x40005F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static double ccwerrboundA;

		[Token(Token = "0x40005F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static double ccwerrboundB;

		[Token(Token = "0x40005F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static double ccwerrboundC;

		[Token(Token = "0x40005FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private static double iccerrboundA;

		[Token(Token = "0x40005FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private static double iccerrboundB;

		[Token(Token = "0x40005FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private static double iccerrboundC;

		[Token(Token = "0x40005FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private double[] fin1;

		[Token(Token = "0x40005FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private double[] fin2;

		[Token(Token = "0x40005FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private double[] abdet;

		[Token(Token = "0x4000600")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private double[] axbc;

		[Token(Token = "0x4000601")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private double[] axxbc;

		[Token(Token = "0x4000602")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private double[] aybc;

		[Token(Token = "0x4000603")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private double[] ayybc;

		[Token(Token = "0x4000604")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private double[] adet;

		[Token(Token = "0x4000605")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private double[] bxca;

		[Token(Token = "0x4000606")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private double[] bxxca;

		[Token(Token = "0x4000607")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private double[] byca;

		[Token(Token = "0x4000608")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private double[] byyca;

		[Token(Token = "0x4000609")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private double[] bdet;

		[Token(Token = "0x400060A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private double[] cxab;

		[Token(Token = "0x400060B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private double[] cxxab;

		[Token(Token = "0x400060C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private double[] cyab;

		[Token(Token = "0x400060D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private double[] cyyab;

		[Token(Token = "0x400060E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private double[] cdet;

		[Token(Token = "0x400060F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private double[] temp8;

		[Token(Token = "0x4000610")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private double[] temp16a;

		[Token(Token = "0x4000611")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private double[] temp16b;

		[Token(Token = "0x4000612")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private double[] temp16c;

		[Token(Token = "0x4000613")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private double[] temp32a;

		[Token(Token = "0x4000614")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private double[] temp32b;

		[Token(Token = "0x4000615")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private double[] temp48;

		[Token(Token = "0x4000616")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private double[] temp64;

		[Token(Token = "0x17000050")]
		public static RobustPredicates Default
		{
			[Token(Token = "0x6000413")]
			[Address(RVA = "0x1883218", Offset = "0x1883218", VA = "0x1883218")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000414")]
		[Address(RVA = "0x18833C4", Offset = "0x18833C4", VA = "0x18833C4")]
		static RobustPredicates()
		{
		}

		[Token(Token = "0x6000415")]
		[Address(RVA = "0x188339C", Offset = "0x188339C", VA = "0x188339C")]
		public RobustPredicates()
		{
		}

		[Token(Token = "0x6000416")]
		[Address(RVA = "0x18838CC", Offset = "0x18838CC", VA = "0x18838CC", Slot = "4")]
		public double CounterClockwise(Point pa, Point pb, Point pc)
		{
			return default(double);
		}

		[Token(Token = "0x6000417")]
		[Address(RVA = "0x1884274", Offset = "0x1884274", VA = "0x1884274", Slot = "5")]
		public double InCircle(Point pa, Point pb, Point pc, Point pd)
		{
			return default(double);
		}

		[Token(Token = "0x6000418")]
		[Address(RVA = "0x18873DC", Offset = "0x18873DC", VA = "0x18873DC")]
		public double NonRegular(Point pa, Point pb, Point pc, Point pd)
		{
			return default(double);
		}

		[Token(Token = "0x6000419")]
		[Address(RVA = "0x18873E0", Offset = "0x18873E0", VA = "0x18873E0", Slot = "7")]
		public Point FindCircumcenter(Point org, Point dest, Point apex, ref double xi, ref double eta, double offconstant)
		{
			return null;
		}

		[Token(Token = "0x600041A")]
		[Address(RVA = "0x1887738", Offset = "0x1887738", VA = "0x1887738", Slot = "6")]
		public Point FindCircumcenter(Point org, Point dest, Point apex, ref double xi, ref double eta)
		{
			return null;
		}

		[Token(Token = "0x600041B")]
		[Address(RVA = "0x188794C", Offset = "0x188794C", VA = "0x188794C")]
		private int FastExpansionSumZeroElim(int elen, double[] e, int flen, double[] f, double[] h)
		{
			return default(int);
		}

		[Token(Token = "0x600041C")]
		[Address(RVA = "0x1887C44", Offset = "0x1887C44", VA = "0x1887C44")]
		private int ScaleExpansionZeroElim(int elen, double[] e, double b, double[] h)
		{
			return default(int);
		}

		[Token(Token = "0x600041D")]
		[Address(RVA = "0x1887E90", Offset = "0x1887E90", VA = "0x1887E90")]
		private double Estimate(int elen, double[] e)
		{
			return default(double);
		}

		[Token(Token = "0x600041E")]
		[Address(RVA = "0x1883AB0", Offset = "0x1883AB0", VA = "0x1883AB0")]
		private double CounterClockwiseAdapt(Point pa, Point pb, Point pc, double detsum)
		{
			return default(double);
		}

		[Token(Token = "0x600041F")]
		[Address(RVA = "0x1884544", Offset = "0x1884544", VA = "0x1884544")]
		private double InCircleAdapt(Point pa, Point pb, Point pc, Point pd, double permanent)
		{
			return default(double);
		}

		[Token(Token = "0x6000420")]
		[Address(RVA = "0x18835B0", Offset = "0x18835B0", VA = "0x18835B0")]
		private void AllocateWorkspace()
		{
		}

		[Token(Token = "0x6000421")]
		[Address(RVA = "0x1887EF8", Offset = "0x1887EF8", VA = "0x1887EF8")]
		private void ClearWorkspace()
		{
		}
	}
	[Token(Token = "0x20000D2")]
	public class TriangleLocator
	{
		[Token(Token = "0x4000617")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private TriangleSampler sampler;

		[Token(Token = "0x4000618")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Mesh mesh;

		[Token(Token = "0x4000619")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private IPredicates predicates;

		[Token(Token = "0x400061A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal Otri recenttri;

		[Token(Token = "0x6000422")]
		[Address(RVA = "0x17FAAE0", Offset = "0x17FAAE0", VA = "0x17FAAE0")]
		public TriangleLocator(Mesh mesh)
		{
		}

		[Token(Token = "0x6000423")]
		[Address(RVA = "0x17FAB60", Offset = "0x17FAB60", VA = "0x17FAB60")]
		public TriangleLocator(Mesh mesh, IPredicates predicates)
		{
		}

		[Token(Token = "0x6000424")]
		[Address(RVA = "0x17FAC80", Offset = "0x17FAC80", VA = "0x17FAC80")]
		public void Update(ref Otri otri)
		{
		}

		[Token(Token = "0x6000425")]
		[Address(RVA = "0x17FACB8", Offset = "0x17FACB8", VA = "0x17FACB8")]
		public void Reset()
		{
		}

		[Token(Token = "0x6000426")]
		[Address(RVA = "0x17FACF4", Offset = "0x17FACF4", VA = "0x17FACF4")]
		public LocateResult PreciseLocate(Point searchpoint, ref Otri searchtri, bool stopatsubsegment)
		{
			return default(LocateResult);
		}

		[Token(Token = "0x6000427")]
		[Address(RVA = "0x17FAFF8", Offset = "0x17FAFF8", VA = "0x17FAFF8")]
		public LocateResult Locate(Point searchpoint, ref Otri searchtri)
		{
			return default(LocateResult);
		}
	}
	[Token(Token = "0x20000D3")]
	public class TrianglePool : ICollection<TriangleNet.Topology.Triangle>, IEnumerable<TriangleNet.Topology.Triangle>, IEnumerable
	{
		[Token(Token = "0x200038A")]
		private class Enumerator : IEnumerator<TriangleNet.Topology.Triangle>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001811")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int count;

			[Token(Token = "0x4001812")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private TriangleNet.Topology.Triangle[][] pool;

			[Token(Token = "0x4001813")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private TriangleNet.Topology.Triangle current;

			[Token(Token = "0x4001814")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int index;

			[Token(Token = "0x4001815")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private int offset;

			[Token(Token = "0x17000223")]
			public TriangleNet.Topology.Triangle Current
			{
				[Token(Token = "0x60018D1")]
				[Address(RVA = "0x17FC248", Offset = "0x17FC248", VA = "0x17FC248", Slot = "4")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000224")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60018D3")]
				[Address(RVA = "0x17FC254", Offset = "0x17FC254", VA = "0x17FC254", Slot = "7")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60018D0")]
			[Address(RVA = "0x17FBF7C", Offset = "0x17FBF7C", VA = "0x17FBF7C")]
			public Enumerator(TrianglePool pool)
			{
			}

			[Token(Token = "0x60018D2")]
			[Address(RVA = "0x17FC250", Offset = "0x17FC250", VA = "0x17FC250", Slot = "5")]
			public void Dispose()
			{
			}

			[Token(Token = "0x60018D4")]
			[Address(RVA = "0x17FC25C", Offset = "0x17FC25C", VA = "0x17FC25C", Slot = "6")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60018D5")]
			[Address(RVA = "0x17FC328", Offset = "0x17FC328", VA = "0x17FC328", Slot = "8")]
			public void Reset()
			{
			}
		}

		[Token(Token = "0x200038B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E7CA8", Offset = "0x9E7CA8")]
		private sealed class <Sample>d__9 : IEnumerable<TriangleNet.Topology.Triangle>, IEnumerable, IEnumerator<TriangleNet.Topology.Triangle>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001816")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001817")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private TriangleNet.Topology.Triangle <>2__current;

			[Token(Token = "0x4001818")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4001819")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public TrianglePool <>4__this;

			[Token(Token = "0x400181A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int k;

			[Token(Token = "0x400181B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public int <>3__k;

			[Token(Token = "0x400181C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private System.Random random;

			[Token(Token = "0x400181D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public System.Random <>3__random;

			[Token(Token = "0x400181E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private int <count>5__2;

			[Token(Token = "0x17000225")]
			private TriangleNet.Topology.Triangle System.Collections.Generic.IEnumerator<TriangleNet.Topology.Triangle>.Current
			{
				[Token(Token = "0x60018D9")]
				[Address(RVA = "0x17FC108", Offset = "0x17FC108", VA = "0x17FC108", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000226")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60018DB")]
				[Address(RVA = "0x17FC170", Offset = "0x17FC170", VA = "0x17FC170", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60018D6")]
			[Address(RVA = "0x17FBAD0", Offset = "0x17FBAD0", VA = "0x17FBAD0")]
			[DebuggerHidden]
			public <Sample>d__9(int <>1__state)
			{
			}

			[Token(Token = "0x60018D7")]
			[Address(RVA = "0x17FBFD0", Offset = "0x17FBFD0", VA = "0x17FBFD0", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60018D8")]
			[Address(RVA = "0x17FBFD4", Offset = "0x17FBFD4", VA = "0x17FBFD4", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60018DA")]
			[Address(RVA = "0x17FC110", Offset = "0x17FC110", VA = "0x17FC110", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x60018DC")]
			[Address(RVA = "0x17FC178", Offset = "0x17FC178", VA = "0x17FC178", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<TriangleNet.Topology.Triangle> System.Collections.Generic.IEnumerable<TriangleNet.Topology.Triangle>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x60018DD")]
			[Address(RVA = "0x17FC244", Offset = "0x17FC244", VA = "0x17FC244", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x400061B")]
		private const int BLOCKSIZE = 1024;

		[Token(Token = "0x400061C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int size;

		[Token(Token = "0x400061D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private int count;

		[Token(Token = "0x400061E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private TriangleNet.Topology.Triangle[][] pool;

		[Token(Token = "0x400061F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Stack<TriangleNet.Topology.Triangle> stack;

		[Token(Token = "0x17000051")]
		public int Count
		{
			[Token(Token = "0x6000432")]
			[Address(RVA = "0x17FBEBC", Offset = "0x17FBEBC", VA = "0x17FBEBC", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000052")]
		public bool IsReadOnly
		{
			[Token(Token = "0x6000433")]
			[Address(RVA = "0x17FBF14", Offset = "0x17FBF14", VA = "0x17FBF14", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000428")]
		[Address(RVA = "0x17ECAAC", Offset = "0x17ECAAC", VA = "0x17ECAAC")]
		public TrianglePool()
		{
		}

		[Token(Token = "0x6000429")]
		[Address(RVA = "0x17FB654", Offset = "0x17FB654", VA = "0x17FB654")]
		public TriangleNet.Topology.Triangle Get()
		{
			return null;
		}

		[Token(Token = "0x600042A")]
		[Address(RVA = "0x17FB9A4", Offset = "0x17FB9A4", VA = "0x17FB9A4")]
		public void Release(TriangleNet.Topology.Triangle triangle)
		{
		}

		[Token(Token = "0x600042B")]
		[Address(RVA = "0x17ED4FC", Offset = "0x17ED4FC", VA = "0x17ED4FC")]
		public TrianglePool Restart()
		{
			return null;
		}

		[Token(Token = "0x600042C")]
		[Address(RVA = "0x17FBA20", Offset = "0x17FBA20", VA = "0x17FBA20")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9EEDF0", Offset = "0x9EEDF0")]
		internal IEnumerable<TriangleNet.Topology.Triangle> Sample(int k, System.Random random)
		{
			return null;
		}

		[Token(Token = "0x600042D")]
		[Address(RVA = "0x17FB8D8", Offset = "0x17FB8D8", VA = "0x17FB8D8")]
		private void Cleanup(TriangleNet.Topology.Triangle triangle)
		{
		}

		[Token(Token = "0x600042E")]
		[Address(RVA = "0x17FBB08", Offset = "0x17FBB08", VA = "0x17FBB08", Slot = "6")]
		public void Add(TriangleNet.Topology.Triangle item)
		{
		}

		[Token(Token = "0x600042F")]
		[Address(RVA = "0x17FBB68", Offset = "0x17FBB68", VA = "0x17FBB68", Slot = "7")]
		public void Clear()
		{
		}

		[Token(Token = "0x6000430")]
		[Address(RVA = "0x17FBC94", Offset = "0x17FBC94", VA = "0x17FBC94", Slot = "8")]
		public bool Contains(TriangleNet.Topology.Triangle item)
		{
			return default(bool);
		}

		[Token(Token = "0x6000431")]
		[Address(RVA = "0x17FBD20", Offset = "0x17FBD20", VA = "0x17FBD20", Slot = "9")]
		public void CopyTo(TriangleNet.Topology.Triangle[] array, int index)
		{
		}

		[Token(Token = "0x6000434")]
		[Address(RVA = "0x17FBF1C", Offset = "0x17FBF1C", VA = "0x17FBF1C", Slot = "10")]
		public bool Remove(TriangleNet.Topology.Triangle item)
		{
			return default(bool);
		}

		[Token(Token = "0x6000435")]
		[Address(RVA = "0x17EEE00", Offset = "0x17EEE00", VA = "0x17EEE00", Slot = "11")]
		public IEnumerator<TriangleNet.Topology.Triangle> GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6000436")]
		[Address(RVA = "0x17FBFCC", Offset = "0x17FBFCC", VA = "0x17FBFCC", Slot = "12")]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}
	}
	[Token(Token = "0x20000D4")]
	internal class TriangleSampler : IEnumerable<TriangleNet.Topology.Triangle>, IEnumerable
	{
		[Token(Token = "0x4000620")]
		private const int RANDOM_SEED = 110503;

		[Token(Token = "0x4000621")]
		private const int samplefactor = 11;

		[Token(Token = "0x4000622")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private System.Random random;

		[Token(Token = "0x4000623")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Mesh mesh;

		[Token(Token = "0x4000624")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int samples;

		[Token(Token = "0x4000625")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private int triangleCount;

		[Token(Token = "0x6000437")]
		[Address(RVA = "0x17FAC04", Offset = "0x17FAC04", VA = "0x17FAC04")]
		public TriangleSampler(Mesh mesh)
		{
		}

		[Token(Token = "0x6000438")]
		[Address(RVA = "0x17FC330", Offset = "0x17FC330", VA = "0x17FC330")]
		public TriangleSampler(Mesh mesh, System.Random random)
		{
		}

		[Token(Token = "0x6000439")]
		[Address(RVA = "0x17FACE4", Offset = "0x17FACE4", VA = "0x17FACE4")]
		public void Reset()
		{
		}

		[Token(Token = "0x600043A")]
		[Address(RVA = "0x17FB504", Offset = "0x17FB504", VA = "0x17FB504")]
		public void Update()
		{
		}

		[Token(Token = "0x600043B")]
		[Address(RVA = "0x17FB588", Offset = "0x17FB588", VA = "0x17FB588", Slot = "4")]
		public IEnumerator<TriangleNet.Topology.Triangle> GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x600043C")]
		[Address(RVA = "0x17FC388", Offset = "0x17FC388", VA = "0x17FC388", Slot = "5")]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}
	}
}
namespace TriangleNet.Voronoi
{
	[Token(Token = "0x20000D5")]
	public class BoundedVoronoi : VoronoiBase
	{
		[Token(Token = "0x4000626")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int offset;

		[Token(Token = "0x600043D")]
		[Address(RVA = "0x17FC38C", Offset = "0x17FC38C", VA = "0x17FC38C")]
		public BoundedVoronoi(Mesh mesh)
		{
		}

		[Token(Token = "0x600043E")]
		[Address(RVA = "0x17ED380", Offset = "0x17ED380", VA = "0x17ED380")]
		public BoundedVoronoi(Mesh mesh, IVoronoiFactory factory, IPredicates predicates)
		{
		}

		[Token(Token = "0x600043F")]
		[Address(RVA = "0x17FC4B8", Offset = "0x17FC4B8", VA = "0x17FC4B8")]
		private void PostProcess()
		{
		}

		[Token(Token = "0x6000440")]
		[Address(RVA = "0x17FC74C", Offset = "0x17FC74C", VA = "0x17FC74C")]
		private void HandleCase1(HalfEdge edge, TriangleNet.Geometry.Vertex v1, TriangleNet.Geometry.Vertex v2)
		{
		}

		[Token(Token = "0x6000441")]
		[Address(RVA = "0x17FCA64", Offset = "0x17FCA64", VA = "0x17FCA64")]
		private void HandleCase2(HalfEdge edge, TriangleNet.Geometry.Vertex v1, TriangleNet.Geometry.Vertex v2)
		{
		}
	}
	[Token(Token = "0x20000D6")]
	public class DefaultVoronoiFactory : IVoronoiFactory
	{
		[Token(Token = "0x6000442")]
		[Address(RVA = "0x17FCD70", Offset = "0x17FCD70", VA = "0x17FCD70", Slot = "4")]
		public void Initialize(int vertexCount, int edgeCount, int faceCount)
		{
		}

		[Token(Token = "0x6000443")]
		[Address(RVA = "0x17FCD74", Offset = "0x17FCD74", VA = "0x17FCD74", Slot = "5")]
		public void Reset()
		{
		}

		[Token(Token = "0x6000444")]
		[Address(RVA = "0x17FCD78", Offset = "0x17FCD78", VA = "0x17FCD78", Slot = "6")]
		public TriangleNet.Topology.DCEL.Vertex CreateVertex(double x, double y)
		{
			return null;
		}

		[Token(Token = "0x6000445")]
		[Address(RVA = "0x17FCDEC", Offset = "0x17FCDEC", VA = "0x17FCDEC", Slot = "7")]
		public HalfEdge CreateHalfEdge(TriangleNet.Topology.DCEL.Vertex origin, Face face)
		{
			return null;
		}

		[Token(Token = "0x6000446")]
		[Address(RVA = "0x17FCE5C", Offset = "0x17FCE5C", VA = "0x17FCE5C", Slot = "8")]
		public Face CreateFace(TriangleNet.Geometry.Vertex vertex)
		{
			return null;
		}

		[Token(Token = "0x6000447")]
		[Address(RVA = "0x17FC42C", Offset = "0x17FC42C", VA = "0x17FC42C")]
		public DefaultVoronoiFactory()
		{
		}
	}
	[Token(Token = "0x20000D7")]
	public interface IVoronoiFactory
	{
		[Token(Token = "0x6000448")]
		void Initialize(int vertexCount, int edgeCount, int faceCount);

		[Token(Token = "0x6000449")]
		void Reset();

		[Token(Token = "0x600044A")]
		TriangleNet.Topology.DCEL.Vertex CreateVertex(double x, double y);

		[Token(Token = "0x600044B")]
		HalfEdge CreateHalfEdge(TriangleNet.Topology.DCEL.Vertex origin, Face face);

		[Token(Token = "0x600044C")]
		Face CreateFace(TriangleNet.Geometry.Vertex vertex);
	}
	[Token(Token = "0x20000D8")]
	public class StandardVoronoi : VoronoiBase
	{
		[Token(Token = "0x600044D")]
		[Address(RVA = "0x1800F18", Offset = "0x1800F18", VA = "0x1800F18")]
		public StandardVoronoi(Mesh mesh)
		{
		}

		[Token(Token = "0x600044E")]
		[Address(RVA = "0x180102C", Offset = "0x180102C", VA = "0x180102C")]
		public StandardVoronoi(Mesh mesh, Rectangle box)
		{
		}

		[Token(Token = "0x600044F")]
		[Address(RVA = "0x1800FC8", Offset = "0x1800FC8", VA = "0x1800FC8")]
		public StandardVoronoi(Mesh mesh, Rectangle box, IVoronoiFactory factory, IPredicates predicates)
		{
		}

		[Token(Token = "0x6000450")]
		[Address(RVA = "0x18010D4", Offset = "0x18010D4", VA = "0x18010D4")]
		private void PostProcess(Rectangle box)
		{
		}
	}
	[Token(Token = "0x20000D9")]
	public abstract class VoronoiBase : DcelMesh
	{
		[Token(Token = "0x4000627")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected IPredicates predicates;

		[Token(Token = "0x4000628")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected IVoronoiFactory factory;

		[Token(Token = "0x4000629")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected List<HalfEdge> rays;

		[Token(Token = "0x6000451")]
		[Address(RVA = "0x17FC434", Offset = "0x17FC434", VA = "0x17FC434")]
		protected VoronoiBase(Mesh mesh, IVoronoiFactory factory, IPredicates predicates, bool generate)
		{
		}

		[Token(Token = "0x6000452")]
		[Address(RVA = "0x1801240", Offset = "0x1801240", VA = "0x1801240")]
		protected void Generate(Mesh mesh)
		{
		}

		[Token(Token = "0x6000453")]
		[Address(RVA = "0x18016AC", Offset = "0x18016AC", VA = "0x18016AC")]
		protected List<HalfEdge>[] ComputeVertices(Mesh mesh, TriangleNet.Topology.DCEL.Vertex[] vertices)
		{
			return null;
		}

		[Token(Token = "0x6000454")]
		[Address(RVA = "0x1801B78", Offset = "0x1801B78", VA = "0x1801B78")]
		protected void ComputeEdges(Mesh mesh, TriangleNet.Topology.DCEL.Vertex[] vertices, Face[] faces, List<HalfEdge>[] map)
		{
		}

		[Token(Token = "0x6000455")]
		[Address(RVA = "0x18024C8", Offset = "0x18024C8", VA = "0x18024C8", Slot = "6")]
		protected virtual void ConnectEdges(List<HalfEdge>[] map)
		{
		}

		[Token(Token = "0x6000456")]
		[Address(RVA = "0x180278C", Offset = "0x180278C", VA = "0x180278C", Slot = "5")]
		protected override IEnumerable<IEdge> EnumerateEdges()
		{
			return null;
		}
	}
}
namespace TriangleNet.Voronoi.Legacy
{
	[Token(Token = "0x20000DA")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x9E6C18", Offset = "0x9E6C18")]
	public class BoundedVoronoiLegacy : IVoronoi
	{
		[Token(Token = "0x400062A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IPredicates predicates;

		[Token(Token = "0x400062B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Mesh mesh;

		[Token(Token = "0x400062C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Point[] points;

		[Token(Token = "0x400062D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<VoronoiRegion> regions;

		[Token(Token = "0x400062E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<Point> segPoints;

		[Token(Token = "0x400062F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int segIndex;

		[Token(Token = "0x4000630")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Dictionary<int, SubSegment> subsegMap;

		[Token(Token = "0x4000631")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool includeBoundary;

		[Token(Token = "0x17000053")]
		public Point[] Points
		{
			[Token(Token = "0x6000459")]
			[Address(RVA = "0x17FD334", Offset = "0x17FD334", VA = "0x17FD334", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000054")]
		public ICollection<VoronoiRegion> Regions
		{
			[Token(Token = "0x600045A")]
			[Address(RVA = "0x17FD33C", Offset = "0x17FD33C", VA = "0x17FD33C", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000055")]
		public IEnumerable<IEdge> Edges
		{
			[Token(Token = "0x600045B")]
			[Address(RVA = "0x17FD344", Offset = "0x17FD344", VA = "0x17FD344", Slot = "6")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000457")]
		[Address(RVA = "0x17FCEC0", Offset = "0x17FCEC0", VA = "0x17FCEC0")]
		public BoundedVoronoiLegacy(Mesh mesh)
		{
		}

		[Token(Token = "0x6000458")]
		[Address(RVA = "0x17FCEC8", Offset = "0x17FCEC8", VA = "0x17FCEC8")]
		public BoundedVoronoiLegacy(Mesh mesh, bool includeBoundary)
		{
		}

		[Token(Token = "0x600045C")]
		[Address(RVA = "0x17FCF80", Offset = "0x17FCF80", VA = "0x17FCF80")]
		private void Generate()
		{
		}

		[Token(Token = "0x600045D")]
		[Address(RVA = "0x17FDA50", Offset = "0x17FDA50", VA = "0x17FDA50")]
		private void ComputeCircumCenters()
		{
		}

		[Token(Token = "0x600045E")]
		[Address(RVA = "0x17FDDD0", Offset = "0x17FDDD0", VA = "0x17FDDD0")]
		private void TagBlindTriangles()
		{
		}

		[Token(Token = "0x600045F")]
		[Address(RVA = "0x17FEFE4", Offset = "0x17FEFE4", VA = "0x17FEFE4")]
		private bool TriangleIsBlinded(ref Otri tri, ref Osub seg)
		{
			return default(bool);
		}

		[Token(Token = "0x6000460")]
		[Address(RVA = "0x17FE378", Offset = "0x17FE378", VA = "0x17FE378")]
		private void ConstructCell(TriangleNet.Geometry.Vertex vertex)
		{
		}

		[Token(Token = "0x6000461")]
		[Address(RVA = "0x17FE7FC", Offset = "0x17FE7FC", VA = "0x17FE7FC")]
		private void ConstructBoundaryCell(TriangleNet.Geometry.Vertex vertex)
		{
		}

		[Token(Token = "0x6000462")]
		[Address(RVA = "0x17FF104", Offset = "0x17FF104", VA = "0x17FF104")]
		private bool SegmentsIntersect(Point p1, Point p2, Point p3, Point p4, out Point p, bool strictIntersect)
		{
			return default(bool);
		}

		[Token(Token = "0x6000463")]
		[Address(RVA = "0x17FD348", Offset = "0x17FD348", VA = "0x17FD348")]
		private IEnumerable<IEdge> EnumerateEdges()
		{
			return null;
		}
	}
	[Token(Token = "0x20000DB")]
	public interface IVoronoi
	{
		[Token(Token = "0x17000056")]
		Point[] Points
		{
			[Token(Token = "0x6000464")]
			get;
		}

		[Token(Token = "0x17000057")]
		ICollection<VoronoiRegion> Regions
		{
			[Token(Token = "0x6000465")]
			get;
		}

		[Token(Token = "0x17000058")]
		IEnumerable<IEdge> Edges
		{
			[Token(Token = "0x6000466")]
			get;
		}
	}
	[Token(Token = "0x20000DC")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x9E6C50", Offset = "0x9E6C50")]
	public class SimpleVoronoi : IVoronoi
	{
		[Token(Token = "0x4000632")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IPredicates predicates;

		[Token(Token = "0x4000633")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Mesh mesh;

		[Token(Token = "0x4000634")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Point[] points;

		[Token(Token = "0x4000635")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Dictionary<int, VoronoiRegion> regions;

		[Token(Token = "0x4000636")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Dictionary<int, Point> rayPoints;

		[Token(Token = "0x4000637")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int rayIndex;

		[Token(Token = "0x4000638")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Rectangle bounds;

		[Token(Token = "0x17000059")]
		public Point[] Points
		{
			[Token(Token = "0x6000468")]
			[Address(RVA = "0x17FF8C4", Offset = "0x17FF8C4", VA = "0x17FF8C4", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700005A")]
		public ICollection<VoronoiRegion> Regions
		{
			[Token(Token = "0x6000469")]
			[Address(RVA = "0x17FF8CC", Offset = "0x17FF8CC", VA = "0x17FF8CC", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700005B")]
		public IEnumerable<IEdge> Edges
		{
			[Token(Token = "0x600046A")]
			[Address(RVA = "0x17FF924", Offset = "0x17FF924", VA = "0x17FF924", Slot = "6")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000467")]
		[Address(RVA = "0x17FF4AC", Offset = "0x17FF4AC", VA = "0x17FF4AC")]
		public SimpleVoronoi(Mesh mesh)
		{
		}

		[Token(Token = "0x600046B")]
		[Address(RVA = "0x17FF550", Offset = "0x17FF550", VA = "0x17FF550")]
		private void Generate()
		{
		}

		[Token(Token = "0x600046C")]
		[Address(RVA = "0x1800040", Offset = "0x1800040", VA = "0x1800040")]
		private void ComputeCircumCenters()
		{
		}

		[Token(Token = "0x600046D")]
		[Address(RVA = "0x1800454", Offset = "0x1800454", VA = "0x1800454")]
		private void ConstructCell(VoronoiRegion region)
		{
		}

		[Token(Token = "0x600046E")]
		[Address(RVA = "0x1800BCC", Offset = "0x1800BCC", VA = "0x1800BCC")]
		private bool BoxRayIntersection(Point pt, double dx, double dy, out Point intersect)
		{
			return default(bool);
		}

		[Token(Token = "0x600046F")]
		[Address(RVA = "0x17FF928", Offset = "0x17FF928", VA = "0x17FF928")]
		private IEnumerable<IEdge> EnumerateEdges()
		{
			return null;
		}
	}
	[Token(Token = "0x20000DD")]
	public class VoronoiRegion
	{
		[Token(Token = "0x4000639")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int id;

		[Token(Token = "0x400063A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Point generator;

		[Token(Token = "0x400063B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<Point> vertices;

		[Token(Token = "0x400063C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool bounded;

		[Token(Token = "0x400063D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Dictionary<int, VoronoiRegion> neighbors;

		[Token(Token = "0x1700005C")]
		public int ID
		{
			[Token(Token = "0x6000470")]
			[Address(RVA = "0x1800D80", Offset = "0x1800D80", VA = "0x1800D80")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700005D")]
		public Point Generator
		{
			[Token(Token = "0x6000471")]
			[Address(RVA = "0x1800D88", Offset = "0x1800D88", VA = "0x1800D88")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700005E")]
		public ICollection<Point> Vertices
		{
			[Token(Token = "0x6000472")]
			[Address(RVA = "0x1800D90", Offset = "0x1800D90", VA = "0x1800D90")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700005F")]
		public bool Bounded
		{
			[Token(Token = "0x6000473")]
			[Address(RVA = "0x1800D98", Offset = "0x1800D98", VA = "0x1800D98")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000474")]
			[Address(RVA = "0x1800DA0", Offset = "0x1800DA0", VA = "0x1800DA0")]
			set
			{
			}
		}

		[Token(Token = "0x6000475")]
		[Address(RVA = "0x17FF360", Offset = "0x17FF360", VA = "0x17FF360")]
		public VoronoiRegion(TriangleNet.Geometry.Vertex generator)
		{
		}

		[Token(Token = "0x6000476")]
		[Address(RVA = "0x1800DAC", Offset = "0x1800DAC", VA = "0x1800DAC")]
		public void Add(Point point)
		{
		}

		[Token(Token = "0x6000477")]
		[Address(RVA = "0x17FF444", Offset = "0x17FF444", VA = "0x17FF444")]
		public void Add(List<Point> points)
		{
		}

		[Token(Token = "0x6000478")]
		[Address(RVA = "0x1800E14", Offset = "0x1800E14", VA = "0x1800E14")]
		public VoronoiRegion GetNeighbor(Point p)
		{
			return null;
		}

		[Token(Token = "0x6000479")]
		[Address(RVA = "0x1800B5C", Offset = "0x1800B5C", VA = "0x1800B5C")]
		internal void AddNeighbor(int id, VoronoiRegion neighbor)
		{
		}

		[Token(Token = "0x600047A")]
		[Address(RVA = "0x1800E98", Offset = "0x1800E98", VA = "0x1800E98", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
}
namespace TriangleNet.Topology
{
	[Token(Token = "0x20000DE")]
	public struct Osub
	{
		[Token(Token = "0x400063E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal SubSegment seg;

		[Token(Token = "0x400063F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal int orient;

		[Token(Token = "0x17000060")]
		public SubSegment Segment
		{
			[Token(Token = "0x600047B")]
			[Address(RVA = "0x17F85D8", Offset = "0x17F85D8", VA = "0x17F85D8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600047C")]
		[Address(RVA = "0x17F85E0", Offset = "0x17F85E0", VA = "0x17F85E0", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x600047D")]
		[Address(RVA = "0x17F8678", Offset = "0x17F8678", VA = "0x17F8678")]
		public void Sym(ref Osub os)
		{
		}

		[Token(Token = "0x600047E")]
		[Address(RVA = "0x17F86BC", Offset = "0x17F86BC", VA = "0x17F86BC")]
		public void Sym()
		{
		}

		[Token(Token = "0x600047F")]
		[Address(RVA = "0x17F86D0", Offset = "0x17F86D0", VA = "0x17F86D0")]
		public void Pivot(ref Osub os)
		{
		}

		[Token(Token = "0x6000480")]
		[Address(RVA = "0x17F8728", Offset = "0x17F8728", VA = "0x17F8728")]
		internal void Pivot(ref Otri ot)
		{
		}

		[Token(Token = "0x6000481")]
		[Address(RVA = "0x17F8780", Offset = "0x17F8780", VA = "0x17F8780")]
		public void Next(ref Osub ot)
		{
		}

		[Token(Token = "0x6000482")]
		[Address(RVA = "0x17F87E0", Offset = "0x17F87E0", VA = "0x17F87E0")]
		public void Next()
		{
		}

		[Token(Token = "0x6000483")]
		[Address(RVA = "0x17F8838", Offset = "0x17F8838", VA = "0x17F8838")]
		public TriangleNet.Geometry.Vertex Org()
		{
			return null;
		}

		[Token(Token = "0x6000484")]
		[Address(RVA = "0x17F8880", Offset = "0x17F8880", VA = "0x17F8880")]
		public TriangleNet.Geometry.Vertex Dest()
		{
			return null;
		}

		[Token(Token = "0x6000485")]
		[Address(RVA = "0x17F88D0", Offset = "0x17F88D0", VA = "0x17F88D0")]
		internal void SetOrg(TriangleNet.Geometry.Vertex vertex)
		{
		}

		[Token(Token = "0x6000486")]
		[Address(RVA = "0x17F8954", Offset = "0x17F8954", VA = "0x17F8954")]
		internal void SetDest(TriangleNet.Geometry.Vertex vertex)
		{
		}

		[Token(Token = "0x6000487")]
		[Address(RVA = "0x17F89E0", Offset = "0x17F89E0", VA = "0x17F89E0")]
		internal TriangleNet.Geometry.Vertex SegOrg()
		{
			return null;
		}

		[Token(Token = "0x6000488")]
		[Address(RVA = "0x17F8A2C", Offset = "0x17F8A2C", VA = "0x17F8A2C")]
		internal TriangleNet.Geometry.Vertex SegDest()
		{
			return null;
		}

		[Token(Token = "0x6000489")]
		[Address(RVA = "0x17F8A7C", Offset = "0x17F8A7C", VA = "0x17F8A7C")]
		internal void SetSegOrg(TriangleNet.Geometry.Vertex vertex)
		{
		}

		[Token(Token = "0x600048A")]
		[Address(RVA = "0x17F8B04", Offset = "0x17F8B04", VA = "0x17F8B04")]
		internal void SetSegDest(TriangleNet.Geometry.Vertex vertex)
		{
		}

		[Token(Token = "0x600048B")]
		[Address(RVA = "0x17F8B90", Offset = "0x17F8B90", VA = "0x17F8B90")]
		internal void Bond(ref Osub os)
		{
		}

		[Token(Token = "0x600048C")]
		[Address(RVA = "0x17F8C24", Offset = "0x17F8C24", VA = "0x17F8C24")]
		internal void Dissolve(SubSegment dummy)
		{
		}

		[Token(Token = "0x600048D")]
		[Address(RVA = "0x17F8C6C", Offset = "0x17F8C6C", VA = "0x17F8C6C")]
		internal bool Equal(Osub os)
		{
			return default(bool);
		}

		[Token(Token = "0x600048E")]
		[Address(RVA = "0x17F8C90", Offset = "0x17F8C90", VA = "0x17F8C90")]
		internal void TriDissolve(Triangle dummy)
		{
		}

		[Token(Token = "0x600048F")]
		[Address(RVA = "0x17F8CD8", Offset = "0x17F8CD8", VA = "0x17F8CD8")]
		internal static bool IsDead(SubSegment sub)
		{
			return default(bool);
		}

		[Token(Token = "0x6000490")]
		[Address(RVA = "0x17F8D18", Offset = "0x17F8D18", VA = "0x17F8D18")]
		internal static void Kill(SubSegment sub)
		{
		}
	}
	[Token(Token = "0x20000DF")]
	public struct Otri
	{
		[Token(Token = "0x4000640")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal Triangle tri;

		[Token(Token = "0x4000641")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal int orient;

		[Token(Token = "0x4000642")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly int[] plus1Mod3;

		[Token(Token = "0x4000643")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly int[] minus1Mod3;

		[Token(Token = "0x17000061")]
		public Triangle Triangle
		{
			[Token(Token = "0x6000491")]
			[Address(RVA = "0x17F8D80", Offset = "0x17F8D80", VA = "0x17F8D80")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000492")]
			[Address(RVA = "0x17F8D88", Offset = "0x17F8D88", VA = "0x17F8D88")]
			set
			{
			}
		}

		[Token(Token = "0x6000493")]
		[Address(RVA = "0x17F8D90", Offset = "0x17F8D90", VA = "0x17F8D90", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6000494")]
		[Address(RVA = "0x17F8E28", Offset = "0x17F8E28", VA = "0x17F8E28")]
		public void Sym(ref Otri ot)
		{
		}

		[Token(Token = "0x6000495")]
		[Address(RVA = "0x17F8EB8", Offset = "0x17F8EB8", VA = "0x17F8EB8")]
		public void Sym()
		{
		}

		[Token(Token = "0x6000496")]
		[Address(RVA = "0x17F8F24", Offset = "0x17F8F24", VA = "0x17F8F24")]
		public void Lnext(ref Otri ot)
		{
		}

		[Token(Token = "0x6000497")]
		[Address(RVA = "0x17F8FDC", Offset = "0x17F8FDC", VA = "0x17F8FDC")]
		public void Lnext()
		{
		}

		[Token(Token = "0x6000498")]
		[Address(RVA = "0x17F9078", Offset = "0x17F9078", VA = "0x17F9078")]
		public void Lprev(ref Otri ot)
		{
		}

		[Token(Token = "0x6000499")]
		[Address(RVA = "0x17F9130", Offset = "0x17F9130", VA = "0x17F9130")]
		public void Lprev()
		{
		}

		[Token(Token = "0x600049A")]
		[Address(RVA = "0x17F91CC", Offset = "0x17F91CC", VA = "0x17F91CC")]
		public void Onext(ref Otri ot)
		{
		}

		[Token(Token = "0x600049B")]
		[Address(RVA = "0x17F92D0", Offset = "0x17F92D0", VA = "0x17F92D0")]
		public void Onext()
		{
		}

		[Token(Token = "0x600049C")]
		[Address(RVA = "0x17F93B8", Offset = "0x17F93B8", VA = "0x17F93B8")]
		public void Oprev(ref Otri ot)
		{
		}

		[Token(Token = "0x600049D")]
		[Address(RVA = "0x17F94C0", Offset = "0x17F94C0", VA = "0x17F94C0")]
		public void Oprev()
		{
		}

		[Token(Token = "0x600049E")]
		[Address(RVA = "0x17F95B0", Offset = "0x17F95B0", VA = "0x17F95B0")]
		public void Dnext(ref Otri ot)
		{
		}

		[Token(Token = "0x600049F")]
		[Address(RVA = "0x17F96B8", Offset = "0x17F96B8", VA = "0x17F96B8")]
		public void Dnext()
		{
		}

		[Token(Token = "0x60004A0")]
		[Address(RVA = "0x17F97A8", Offset = "0x17F97A8", VA = "0x17F97A8")]
		public void Dprev(ref Otri ot)
		{
		}

		[Token(Token = "0x60004A1")]
		[Address(RVA = "0x17F98AC", Offset = "0x17F98AC", VA = "0x17F98AC")]
		public void Dprev()
		{
		}

		[Token(Token = "0x60004A2")]
		[Address(RVA = "0x17F9994", Offset = "0x17F9994", VA = "0x17F9994")]
		public void Rnext(ref Otri ot)
		{
		}

		[Token(Token = "0x60004A3")]
		[Address(RVA = "0x17F9AE8", Offset = "0x17F9AE8", VA = "0x17F9AE8")]
		public void Rnext()
		{
		}

		[Token(Token = "0x60004A4")]
		[Address(RVA = "0x17F9C24", Offset = "0x17F9C24", VA = "0x17F9C24")]
		public void Rprev(ref Otri ot)
		{
		}

		[Token(Token = "0x60004A5")]
		[Address(RVA = "0x17F9D78", Offset = "0x17F9D78", VA = "0x17F9D78")]
		public void Rprev()
		{
		}

		[Token(Token = "0x60004A6")]
		[Address(RVA = "0x17F3964", Offset = "0x17F3964", VA = "0x17F3964")]
		public TriangleNet.Geometry.Vertex Org()
		{
			return null;
		}

		[Token(Token = "0x60004A7")]
		[Address(RVA = "0x17F3A28", Offset = "0x17F3A28", VA = "0x17F3A28")]
		public TriangleNet.Geometry.Vertex Dest()
		{
			return null;
		}

		[Token(Token = "0x60004A8")]
		[Address(RVA = "0x17F3AEC", Offset = "0x17F3AEC", VA = "0x17F3AEC")]
		public TriangleNet.Geometry.Vertex Apex()
		{
			return null;
		}

		[Token(Token = "0x60004A9")]
		[Address(RVA = "0x17F9EB4", Offset = "0x17F9EB4", VA = "0x17F9EB4")]
		public void Copy(ref Otri ot)
		{
		}

		[Token(Token = "0x60004AA")]
		[Address(RVA = "0x17F9EF0", Offset = "0x17F9EF0", VA = "0x17F9EF0")]
		public bool Equals(Otri ot)
		{
			return default(bool);
		}

		[Token(Token = "0x60004AB")]
		[Address(RVA = "0x17F9F14", Offset = "0x17F9F14", VA = "0x17F9F14")]
		internal void SetOrg(TriangleNet.Geometry.Vertex v)
		{
		}

		[Token(Token = "0x60004AC")]
		[Address(RVA = "0x17FA004", Offset = "0x17FA004", VA = "0x17FA004")]
		internal void SetDest(TriangleNet.Geometry.Vertex v)
		{
		}

		[Token(Token = "0x60004AD")]
		[Address(RVA = "0x17FA0F4", Offset = "0x17FA0F4", VA = "0x17FA0F4")]
		internal void SetApex(TriangleNet.Geometry.Vertex v)
		{
		}

		[Token(Token = "0x60004AE")]
		[Address(RVA = "0x17FA178", Offset = "0x17FA178", VA = "0x17FA178")]
		internal void Bond(ref Otri ot)
		{
		}

		[Token(Token = "0x60004AF")]
		[Address(RVA = "0x17FA260", Offset = "0x17FA260", VA = "0x17FA260")]
		internal void Dissolve(Triangle dummy)
		{
		}

		[Token(Token = "0x60004B0")]
		[Address(RVA = "0x17FA2E0", Offset = "0x17FA2E0", VA = "0x17FA2E0")]
		internal void Infect()
		{
		}

		[Token(Token = "0x60004B1")]
		[Address(RVA = "0x17FA300", Offset = "0x17FA300", VA = "0x17FA300")]
		internal void Uninfect()
		{
		}

		[Token(Token = "0x60004B2")]
		[Address(RVA = "0x17FA31C", Offset = "0x17FA31C", VA = "0x17FA31C")]
		internal bool IsInfected()
		{
			return default(bool);
		}

		[Token(Token = "0x60004B3")]
		[Address(RVA = "0x17FA338", Offset = "0x17FA338", VA = "0x17FA338")]
		internal void Pivot(ref Osub os)
		{
		}

		[Token(Token = "0x60004B4")]
		[Address(RVA = "0x17FA390", Offset = "0x17FA390", VA = "0x17FA390")]
		internal void SegBond(ref Osub os)
		{
		}

		[Token(Token = "0x60004B5")]
		[Address(RVA = "0x17FA424", Offset = "0x17FA424", VA = "0x17FA424")]
		internal void SegDissolve(SubSegment dummy)
		{
		}

		[Token(Token = "0x60004B6")]
		[Address(RVA = "0x17FA46C", Offset = "0x17FA46C", VA = "0x17FA46C")]
		internal static bool IsDead(Triangle tria)
		{
			return default(bool);
		}

		[Token(Token = "0x60004B7")]
		[Address(RVA = "0x17FA4AC", Offset = "0x17FA4AC", VA = "0x17FA4AC")]
		internal static void Kill(Triangle tri)
		{
		}
	}
	[Token(Token = "0x20000E0")]
	public class SubSegment : ISegment, IEdge
	{
		[Token(Token = "0x4000644")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal int hash;

		[Token(Token = "0x4000645")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal Osub[] subsegs;

		[Token(Token = "0x4000646")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal TriangleNet.Geometry.Vertex[] vertices;

		[Token(Token = "0x4000647")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal Otri[] triangles;

		[Token(Token = "0x4000648")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal int boundary;

		[Token(Token = "0x17000062")]
		public int P0
		{
			[Token(Token = "0x60004BA")]
			[Address(RVA = "0x17FA6AC", Offset = "0x17FA6AC", VA = "0x17FA6AC", Slot = "6")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000063")]
		public int P1
		{
			[Token(Token = "0x60004BB")]
			[Address(RVA = "0x17FA6E8", Offset = "0x17FA6E8", VA = "0x17FA6E8", Slot = "7")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000064")]
		public int Label
		{
			[Token(Token = "0x60004BC")]
			[Address(RVA = "0x17FA728", Offset = "0x17FA728", VA = "0x17FA728", Slot = "8")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x60004B9")]
		[Address(RVA = "0x17FA5F4", Offset = "0x17FA5F4", VA = "0x17FA5F4")]
		public SubSegment()
		{
		}

		[Token(Token = "0x60004BD")]
		[Address(RVA = "0x17FA730", Offset = "0x17FA730", VA = "0x17FA730", Slot = "4")]
		public TriangleNet.Geometry.Vertex GetVertex(int index)
		{
			return null;
		}

		[Token(Token = "0x60004BE")]
		[Address(RVA = "0x17FA76C", Offset = "0x17FA76C", VA = "0x17FA76C", Slot = "5")]
		public ITriangle GetTriangle(int index)
		{
			return null;
		}

		[Token(Token = "0x60004BF")]
		[Address(RVA = "0x17FA7B8", Offset = "0x17FA7B8", VA = "0x17FA7B8", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x60004C0")]
		[Address(RVA = "0x17FA7C0", Offset = "0x17FA7C0", VA = "0x17FA7C0", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x20000E1")]
	public class Triangle : ITriangle
	{
		[Token(Token = "0x4000649")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal int hash;

		[Token(Token = "0x400064A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal int id;

		[Token(Token = "0x400064B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal Otri[] neighbors;

		[Token(Token = "0x400064C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal TriangleNet.Geometry.Vertex[] vertices;

		[Token(Token = "0x400064D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal Osub[] subsegs;

		[Token(Token = "0x400064E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal int label;

		[Token(Token = "0x400064F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal double area;

		[Token(Token = "0x4000650")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		internal bool infected;

		[Token(Token = "0x17000065")]
		public int ID
		{
			[Token(Token = "0x60004C2")]
			[Address(RVA = "0x17FA8F4", Offset = "0x17FA8F4", VA = "0x17FA8F4", Slot = "4")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60004C3")]
			[Address(RVA = "0x17FA8FC", Offset = "0x17FA8FC", VA = "0x17FA8FC", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x17000066")]
		public int Label
		{
			[Token(Token = "0x60004C4")]
			[Address(RVA = "0x17FA904", Offset = "0x17FA904", VA = "0x17FA904", Slot = "6")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60004C5")]
			[Address(RVA = "0x17FA90C", Offset = "0x17FA90C", VA = "0x17FA90C", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x17000067")]
		public double Area
		{
			[Token(Token = "0x60004C6")]
			[Address(RVA = "0x17FA914", Offset = "0x17FA914", VA = "0x17FA914", Slot = "8")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x60004C7")]
			[Address(RVA = "0x17FA91C", Offset = "0x17FA91C", VA = "0x17FA91C", Slot = "9")]
			set
			{
			}
		}

		[Token(Token = "0x60004C1")]
		[Address(RVA = "0x17FA840", Offset = "0x17FA840", VA = "0x17FA840")]
		public Triangle()
		{
		}

		[Token(Token = "0x60004C8")]
		[Address(RVA = "0x17F305C", Offset = "0x17F305C", VA = "0x17F305C", Slot = "10")]
		public TriangleNet.Geometry.Vertex GetVertex(int index)
		{
			return null;
		}

		[Token(Token = "0x60004C9")]
		[Address(RVA = "0x17FA924", Offset = "0x17FA924", VA = "0x17FA924", Slot = "11")]
		public int GetVertexID(int index)
		{
			return default(int);
		}

		[Token(Token = "0x60004CA")]
		[Address(RVA = "0x17FA968", Offset = "0x17FA968", VA = "0x17FA968", Slot = "12")]
		public ITriangle GetNeighbor(int index)
		{
			return null;
		}

		[Token(Token = "0x60004CB")]
		[Address(RVA = "0x17FA9B4", Offset = "0x17FA9B4", VA = "0x17FA9B4", Slot = "13")]
		public int GetNeighborID(int index)
		{
			return default(int);
		}

		[Token(Token = "0x60004CC")]
		[Address(RVA = "0x17FAA0C", Offset = "0x17FAA0C", VA = "0x17FAA0C", Slot = "14")]
		public ISegment GetSegment(int index)
		{
			return null;
		}

		[Token(Token = "0x60004CD")]
		[Address(RVA = "0x17FAA58", Offset = "0x17FAA58", VA = "0x17FAA58", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x60004CE")]
		[Address(RVA = "0x17FAA60", Offset = "0x17FAA60", VA = "0x17FAA60", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
}
namespace TriangleNet.Topology.DCEL
{
	[Token(Token = "0x20000E2")]
	public class DcelMesh
	{
		[Token(Token = "0x4000651")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected List<Vertex> vertices;

		[Token(Token = "0x4000652")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected List<HalfEdge> edges;

		[Token(Token = "0x4000653")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected List<Face> faces;

		[Token(Token = "0x17000068")]
		public List<Vertex> Vertices
		{
			[Token(Token = "0x60004D1")]
			[Address(RVA = "0x17F7108", Offset = "0x17F7108", VA = "0x17F7108")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000069")]
		public List<HalfEdge> HalfEdges
		{
			[Token(Token = "0x60004D2")]
			[Address(RVA = "0x17F7110", Offset = "0x17F7110", VA = "0x17F7110")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700006A")]
		public List<Face> Faces
		{
			[Token(Token = "0x60004D3")]
			[Address(RVA = "0x17F7118", Offset = "0x17F7118", VA = "0x17F7118")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700006B")]
		public IEnumerable<IEdge> Edges
		{
			[Token(Token = "0x60004D4")]
			[Address(RVA = "0x17F7120", Offset = "0x17F7120", VA = "0x17F7120")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60004CF")]
		[Address(RVA = "0x17F6FFC", Offset = "0x17F6FFC", VA = "0x17F6FFC")]
		public DcelMesh()
		{
		}

		[Token(Token = "0x60004D0")]
		[Address(RVA = "0x17F7004", Offset = "0x17F7004", VA = "0x17F7004")]
		protected DcelMesh(bool initialize)
		{
		}

		[Token(Token = "0x60004D5")]
		[Address(RVA = "0x17F712C", Offset = "0x17F712C", VA = "0x17F712C", Slot = "4")]
		public virtual bool IsConsistent(bool closed = true, int depth = 0)
		{
			return default(bool);
		}

		[Token(Token = "0x60004D6")]
		[Address(RVA = "0x17F778C", Offset = "0x17F778C", VA = "0x17F778C")]
		public void ResolveBoundaryEdges()
		{
		}

		[Token(Token = "0x60004D7")]
		[Address(RVA = "0x17F7AF8", Offset = "0x17F7AF8", VA = "0x17F7AF8", Slot = "5")]
		protected virtual IEnumerable<IEdge> EnumerateEdges()
		{
			return null;
		}
	}
	[Token(Token = "0x20000E3")]
	public class Face
	{
		[Token(Token = "0x200038C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E7CB8", Offset = "0x9E7CB8")]
		private sealed class <EnumerateEdges>d__17 : IEnumerable<HalfEdge>, IEnumerable, IEnumerator<HalfEdge>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400181F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001820")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private HalfEdge <>2__current;

			[Token(Token = "0x4001821")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4001822")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Face <>4__this;

			[Token(Token = "0x4001823")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private HalfEdge <edge>5__2;

			[Token(Token = "0x4001824")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private int <first>5__3;

			[Token(Token = "0x17000227")]
			private HalfEdge System.Collections.Generic.IEnumerator<TriangleNet.Topology.DCEL.HalfEdge>.Current
			{
				[Token(Token = "0x60018E1")]
				[Address(RVA = "0x17F802C", Offset = "0x17F802C", VA = "0x17F802C", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000228")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60018E3")]
				[Address(RVA = "0x17F8094", Offset = "0x17F8094", VA = "0x17F8094", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60018DE")]
			[Address(RVA = "0x17F7EB0", Offset = "0x17F7EB0", VA = "0x17F7EB0")]
			[DebuggerHidden]
			public <EnumerateEdges>d__17(int <>1__state)
			{
			}

			[Token(Token = "0x60018DF")]
			[Address(RVA = "0x17F7F68", Offset = "0x17F7F68", VA = "0x17F7F68", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60018E0")]
			[Address(RVA = "0x17F7F6C", Offset = "0x17F7F6C", VA = "0x17F7F6C", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60018E2")]
			[Address(RVA = "0x17F8034", Offset = "0x17F8034", VA = "0x17F8034", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x60018E4")]
			[Address(RVA = "0x17F809C", Offset = "0x17F809C", VA = "0x17F809C", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<HalfEdge> System.Collections.Generic.IEnumerable<TriangleNet.Topology.DCEL.HalfEdge>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x60018E5")]
			[Address(RVA = "0x17F8150", Offset = "0x17F8150", VA = "0x17F8150", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x4000654")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Face Empty;

		[Token(Token = "0x4000655")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal int id;

		[Token(Token = "0x4000656")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal Point generator;

		[Token(Token = "0x4000657")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal HalfEdge edge;

		[Token(Token = "0x4000658")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal bool bounded;

		[Token(Token = "0x1700006C")]
		public int ID
		{
			[Token(Token = "0x60004D9")]
			[Address(RVA = "0x17F7D6C", Offset = "0x17F7D6C", VA = "0x17F7D6C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60004DA")]
			[Address(RVA = "0x17F7D74", Offset = "0x17F7D74", VA = "0x17F7D74")]
			set
			{
			}
		}

		[Token(Token = "0x1700006D")]
		public HalfEdge Edge
		{
			[Token(Token = "0x60004DB")]
			[Address(RVA = "0x17F7D7C", Offset = "0x17F7D7C", VA = "0x17F7D7C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60004DC")]
			[Address(RVA = "0x17F7D84", Offset = "0x17F7D84", VA = "0x17F7D84")]
			set
			{
			}
		}

		[Token(Token = "0x1700006E")]
		public bool Bounded
		{
			[Token(Token = "0x60004DD")]
			[Address(RVA = "0x17F7D8C", Offset = "0x17F7D8C", VA = "0x17F7D8C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60004DE")]
			[Address(RVA = "0x17F7D94", Offset = "0x17F7D94", VA = "0x17F7D94")]
			set
			{
			}
		}

		[Token(Token = "0x60004D8")]
		[Address(RVA = "0x17F7CE0", Offset = "0x17F7CE0", VA = "0x17F7CE0")]
		static Face()
		{
		}

		[Token(Token = "0x60004DF")]
		[Address(RVA = "0x17ED99C", Offset = "0x17ED99C", VA = "0x17ED99C")]
		public Face(Point generator)
		{
		}

		[Token(Token = "0x60004E0")]
		[Address(RVA = "0x17F7DA0", Offset = "0x17F7DA0", VA = "0x17F7DA0")]
		public Face(Point generator, HalfEdge edge)
		{
		}

		[Token(Token = "0x60004E1")]
		[Address(RVA = "0x17F7E24", Offset = "0x17F7E24", VA = "0x17F7E24")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9EEE54", Offset = "0x9EEE54")]
		public IEnumerable<HalfEdge> EnumerateEdges()
		{
			return null;
		}

		[Token(Token = "0x60004E2")]
		[Address(RVA = "0x17F7EE8", Offset = "0x17F7EE8", VA = "0x17F7EE8", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x20000E4")]
	public class HalfEdge
	{
		[Token(Token = "0x4000659")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal int id;

		[Token(Token = "0x400065A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal int mark;

		[Token(Token = "0x400065B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal Vertex origin;

		[Token(Token = "0x400065C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal Face face;

		[Token(Token = "0x400065D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal HalfEdge twin;

		[Token(Token = "0x400065E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal HalfEdge next;

		[Token(Token = "0x1700006F")]
		public int ID
		{
			[Token(Token = "0x60004E3")]
			[Address(RVA = "0x17F8154", Offset = "0x17F8154", VA = "0x17F8154")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60004E4")]
			[Address(RVA = "0x17F815C", Offset = "0x17F815C", VA = "0x17F815C")]
			set
			{
			}
		}

		[Token(Token = "0x17000070")]
		public int Boundary
		{
			[Token(Token = "0x60004E5")]
			[Address(RVA = "0x17F8164", Offset = "0x17F8164", VA = "0x17F8164")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60004E6")]
			[Address(RVA = "0x17F816C", Offset = "0x17F816C", VA = "0x17F816C")]
			set
			{
			}
		}

		[Token(Token = "0x17000071")]
		public Vertex Origin
		{
			[Token(Token = "0x60004E7")]
			[Address(RVA = "0x17F8174", Offset = "0x17F8174", VA = "0x17F8174")]
			get
			{
				return null;
			}
			[Token(Token = "0x60004E8")]
			[Address(RVA = "0x17F817C", Offset = "0x17F817C", VA = "0x17F817C")]
			set
			{
			}
		}

		[Token(Token = "0x17000072")]
		public Face Face
		{
			[Token(Token = "0x60004E9")]
			[Address(RVA = "0x17F8184", Offset = "0x17F8184", VA = "0x17F8184")]
			get
			{
				return null;
			}
			[Token(Token = "0x60004EA")]
			[Address(RVA = "0x17F818C", Offset = "0x17F818C", VA = "0x17F818C")]
			set
			{
			}
		}

		[Token(Token = "0x17000073")]
		public HalfEdge Twin
		{
			[Token(Token = "0x60004EB")]
			[Address(RVA = "0x17F8194", Offset = "0x17F8194", VA = "0x17F8194")]
			get
			{
				return null;
			}
			[Token(Token = "0x60004EC")]
			[Address(RVA = "0x17F819C", Offset = "0x17F819C", VA = "0x17F819C")]
			set
			{
			}
		}

		[Token(Token = "0x17000074")]
		public HalfEdge Next
		{
			[Token(Token = "0x60004ED")]
			[Address(RVA = "0x17F81A4", Offset = "0x17F81A4", VA = "0x17F81A4")]
			get
			{
				return null;
			}
			[Token(Token = "0x60004EE")]
			[Address(RVA = "0x17F81AC", Offset = "0x17F81AC", VA = "0x17F81AC")]
			set
			{
			}
		}

		[Token(Token = "0x60004EF")]
		[Address(RVA = "0x17ED968", Offset = "0x17ED968", VA = "0x17ED968")]
		public HalfEdge(Vertex origin)
		{
		}

		[Token(Token = "0x60004F0")]
		[Address(RVA = "0x17EDC44", Offset = "0x17EDC44", VA = "0x17EDC44")]
		public HalfEdge(Vertex origin, Face face)
		{
		}

		[Token(Token = "0x60004F1")]
		[Address(RVA = "0x17F81B4", Offset = "0x17F81B4", VA = "0x17F81B4", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x20000E5")]
	public class Vertex : Point
	{
		[Token(Token = "0x200038D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E7CC8", Offset = "0x9E7CC8")]
		private sealed class <EnumerateEdges>d__6 : IEnumerable<HalfEdge>, IEnumerable, IEnumerator<HalfEdge>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001825")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001826")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private HalfEdge <>2__current;

			[Token(Token = "0x4001827")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4001828")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Vertex <>4__this;

			[Token(Token = "0x4001829")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private HalfEdge <edge>5__2;

			[Token(Token = "0x400182A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private int <first>5__3;

			[Token(Token = "0x17000229")]
			private HalfEdge System.Collections.Generic.IEnumerator<TriangleNet.Topology.DCEL.HalfEdge>.Current
			{
				[Token(Token = "0x60018E9")]
				[Address(RVA = "0x17F84B0", Offset = "0x17F84B0", VA = "0x17F84B0", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700022A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60018EB")]
				[Address(RVA = "0x17F8518", Offset = "0x17F8518", VA = "0x17F8518", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60018E6")]
			[Address(RVA = "0x17F832C", Offset = "0x17F832C", VA = "0x17F832C")]
			[DebuggerHidden]
			public <EnumerateEdges>d__6(int <>1__state)
			{
			}

			[Token(Token = "0x60018E7")]
			[Address(RVA = "0x17F83E4", Offset = "0x17F83E4", VA = "0x17F83E4", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60018E8")]
			[Address(RVA = "0x17F83E8", Offset = "0x17F83E8", VA = "0x17F83E8", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60018EA")]
			[Address(RVA = "0x17F84B8", Offset = "0x17F84B8", VA = "0x17F84B8", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x60018EC")]
			[Address(RVA = "0x17F8520", Offset = "0x17F8520", VA = "0x17F8520", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<HalfEdge> System.Collections.Generic.IEnumerable<TriangleNet.Topology.DCEL.HalfEdge>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x60018ED")]
			[Address(RVA = "0x17F85D4", Offset = "0x17F85D4", VA = "0x17F85D4", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x400065F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal HalfEdge leaving;

		[Token(Token = "0x17000075")]
		public HalfEdge Leaving
		{
			[Token(Token = "0x60004F2")]
			[Address(RVA = "0x17F825C", Offset = "0x17F825C", VA = "0x17F825C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60004F3")]
			[Address(RVA = "0x17F8264", Offset = "0x17F8264", VA = "0x17F8264")]
			set
			{
			}
		}

		[Token(Token = "0x60004F4")]
		[Address(RVA = "0x17ED960", Offset = "0x17ED960", VA = "0x17ED960")]
		public Vertex(double x, double y)
		{
		}

		[Token(Token = "0x60004F5")]
		[Address(RVA = "0x17F826C", Offset = "0x17F826C", VA = "0x17F826C")]
		public Vertex(double x, double y, HalfEdge leaving)
		{
		}

		[Token(Token = "0x60004F6")]
		[Address(RVA = "0x17F82A0", Offset = "0x17F82A0", VA = "0x17F82A0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9EEEB8", Offset = "0x9EEEB8")]
		public IEnumerable<HalfEdge> EnumerateEdges()
		{
			return null;
		}

		[Token(Token = "0x60004F7")]
		[Address(RVA = "0x17F8364", Offset = "0x17F8364", VA = "0x17F8364", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
}
namespace TriangleNet.Tools
{
	[Token(Token = "0x20000E6")]
	public class AdjacencyMatrix
	{
		[Token(Token = "0x4000660")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int nnz;

		[Token(Token = "0x4000661")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int[] pcol;

		[Token(Token = "0x4000662")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int[] irow;

		[Token(Token = "0x4000663")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly int N;

		[Token(Token = "0x17000076")]
		public int[] ColumnPointers
		{
			[Token(Token = "0x60004F8")]
			[Address(RVA = "0x17EDDB0", Offset = "0x17EDDB0", VA = "0x17EDDB0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000077")]
		public int[] RowIndices
		{
			[Token(Token = "0x60004F9")]
			[Address(RVA = "0x17EDDB8", Offset = "0x17EDDB8", VA = "0x17EDDB8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60004FA")]
		[Address(RVA = "0x17EDDC0", Offset = "0x17EDDC0", VA = "0x17EDDC0")]
		public AdjacencyMatrix(Mesh mesh)
		{
		}

		[Token(Token = "0x60004FB")]
		[Address(RVA = "0x17EEB5C", Offset = "0x17EEB5C", VA = "0x17EEB5C")]
		public AdjacencyMatrix(int[] pcol, int[] irow)
		{
		}

		[Token(Token = "0x60004FC")]
		[Address(RVA = "0x17EEC9C", Offset = "0x17EEC9C", VA = "0x17EEC9C")]
		public int Bandwidth()
		{
			return default(int);
		}

		[Token(Token = "0x60004FD")]
		[Address(RVA = "0x17EDEA8", Offset = "0x17EDEA8", VA = "0x17EDEA8")]
		private int[] AdjacencyCount(Mesh mesh)
		{
			return null;
		}

		[Token(Token = "0x60004FE")]
		[Address(RVA = "0x17EE444", Offset = "0x17EE444", VA = "0x17EE444")]
		private int[] AdjacencySet(Mesh mesh, int[] pcol)
		{
			return null;
		}

		[Token(Token = "0x60004FF")]
		[Address(RVA = "0x17EEA9C", Offset = "0x17EEA9C", VA = "0x17EEA9C")]
		public void SortIndices()
		{
		}
	}
	[Token(Token = "0x20000E7")]
	public class CuthillMcKee
	{
		[Token(Token = "0x4000664")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private AdjacencyMatrix matrix;

		[Token(Token = "0x6000500")]
		[Address(RVA = "0x17EEE60", Offset = "0x17EEE60", VA = "0x17EEE60")]
		public int[] Renumber(Mesh mesh)
		{
			return null;
		}

		[Token(Token = "0x6000501")]
		[Address(RVA = "0x17EEEE8", Offset = "0x17EEEE8", VA = "0x17EEEE8")]
		public int[] Renumber(AdjacencyMatrix matrix)
		{
			return null;
		}

		[Token(Token = "0x6000502")]
		[Address(RVA = "0x17EF1E0", Offset = "0x17EF1E0", VA = "0x17EF1E0")]
		private int[] GenerateRcm()
		{
			return null;
		}

		[Token(Token = "0x6000503")]
		[Address(RVA = "0x17EF800", Offset = "0x17EF800", VA = "0x17EF800")]
		private void Rcm(int root, int[] mask, int[] perm, int offset, ref int iccsze)
		{
		}

		[Token(Token = "0x6000504")]
		[Address(RVA = "0x17EF5FC", Offset = "0x17EF5FC", VA = "0x17EF5FC")]
		private void FindRoot(ref int root, int[] mask, ref int level_num, int[] level_row, int[] level, int offset)
		{
		}

		[Token(Token = "0x6000505")]
		[Address(RVA = "0x17EFE64", Offset = "0x17EFE64", VA = "0x17EFE64")]
		private void GetLevelSet(ref int root, int[] mask, ref int level_num, int[] level_row, int[] level, int offset)
		{
		}

		[Token(Token = "0x6000506")]
		[Address(RVA = "0x17EFB04", Offset = "0x17EFB04", VA = "0x17EFB04")]
		private void Degree(int root, int[] mask, int[] deg, ref int iccsze, int[] ls, int offset)
		{
		}

		[Token(Token = "0x6000507")]
		[Address(RVA = "0x17EF438", Offset = "0x17EF438", VA = "0x17EF438")]
		private int PermBandwidth(int[] perm, int[] perm_inv)
		{
			return default(int);
		}

		[Token(Token = "0x6000508")]
		[Address(RVA = "0x17EF374", Offset = "0x17EF374", VA = "0x17EF374")]
		private int[] PermInverse(int[] perm)
		{
			return null;
		}

		[Token(Token = "0x6000509")]
		[Address(RVA = "0x17EFDC0", Offset = "0x17EFDC0", VA = "0x17EFDC0")]
		private void ReverseVector(int[] a, int offset, int size)
		{
		}

		[Token(Token = "0x600050A")]
		[Address(RVA = "0x17EF148", Offset = "0x17EF148", VA = "0x17EF148")]
		private void Shift(int[] a, bool up)
		{
		}

		[Token(Token = "0x600050B")]
		[Address(RVA = "0x17F006C", Offset = "0x17F006C", VA = "0x17F006C")]
		public CuthillMcKee()
		{
		}
	}
	[Token(Token = "0x20000E8")]
	public static class Interpolation
	{
		[Token(Token = "0x600050C")]
		[Address(RVA = "0x17F0074", Offset = "0x17F0074", VA = "0x17F0074")]
		public static void InterpolateZ(Point p, ITriangle triangle)
		{
		}
	}
	[Token(Token = "0x20000E9")]
	public static class IntersectionHelper
	{
		[Token(Token = "0x600050D")]
		[Address(RVA = "0x17F02A8", Offset = "0x17F02A8", VA = "0x17F02A8")]
		public static void IntersectSegments(Point p0, Point p1, Point q0, Point q1, ref Point c0)
		{
		}

		[Token(Token = "0x600050E")]
		[Address(RVA = "0x17F033C", Offset = "0x17F033C", VA = "0x17F033C")]
		public static bool LiangBarsky(Rectangle rect, Point p0, Point p1, ref Point c0, ref Point c1)
		{
			return default(bool);
		}

		[Token(Token = "0x600050F")]
		[Address(RVA = "0x17F04B0", Offset = "0x17F04B0", VA = "0x17F04B0")]
		public static bool BoxRayIntersection(Rectangle rect, Point p0, Point p1, ref Point c1)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20000EA")]
	public static class PolygonValidator
	{
		[Token(Token = "0x6000510")]
		[Address(RVA = "0x17F05E8", Offset = "0x17F05E8", VA = "0x17F05E8")]
		public static bool IsConsistent(IPolygon poly)
		{
			return default(bool);
		}

		[Token(Token = "0x6000511")]
		[Address(RVA = "0x17F1810", Offset = "0x17F1810", VA = "0x17F1810")]
		public static bool HasDuplicateVertices(IPolygon poly)
		{
			return default(bool);
		}

		[Token(Token = "0x6000512")]
		[Address(RVA = "0x17F1B1C", Offset = "0x17F1B1C", VA = "0x17F1B1C")]
		public static bool HasBadAngles(IPolygon poly, double threshold = 2E-12)
		{
			return default(bool);
		}

		[Token(Token = "0x6000513")]
		[Address(RVA = "0x17F2000", Offset = "0x17F2000", VA = "0x17F2000")]
		private static bool IsBadAngle(Point a, Point b, Point c, double threshold = 0.0)
		{
			return default(bool);
		}

		[Token(Token = "0x6000514")]
		[Address(RVA = "0x17F20C4", Offset = "0x17F20C4", VA = "0x17F20C4")]
		private static double DotProduct(Point a, Point b, Point c)
		{
			return default(double);
		}

		[Token(Token = "0x6000515")]
		[Address(RVA = "0x17F210C", Offset = "0x17F210C", VA = "0x17F210C")]
		private static double CrossProductLength(Point a, Point b, Point c)
		{
			return default(double);
		}

		[Token(Token = "0x6000516")]
		[Address(RVA = "0x17F1088", Offset = "0x17F1088", VA = "0x17F1088")]
		private static int CheckVertexIDs(IPolygon poly, int count)
		{
			return default(int);
		}

		[Token(Token = "0x6000517")]
		[Address(RVA = "0x17F1544", Offset = "0x17F1544", VA = "0x17F1544")]
		private static int CheckDuplicateIDs(IPolygon poly)
		{
			return default(int);
		}
	}
	[Token(Token = "0x20000EB")]
	public class QualityMeasure
	{
		[Token(Token = "0x200038E")]
		private class AreaMeasure
		{
			[Token(Token = "0x400182B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public double area_min;

			[Token(Token = "0x400182C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public double area_max;

			[Token(Token = "0x400182D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public double area_total;

			[Token(Token = "0x400182E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public int area_zero;

			[Token(Token = "0x60018EE")]
			[Address(RVA = "0x17F23F8", Offset = "0x17F23F8", VA = "0x17F23F8")]
			public void Reset()
			{
			}

			[Token(Token = "0x60018EF")]
			[Address(RVA = "0x17F28A8", Offset = "0x17F28A8", VA = "0x17F28A8")]
			public double Measure(Point a, Point b, Point c)
			{
				return default(double);
			}

			[Token(Token = "0x60018F0")]
			[Address(RVA = "0x17F222C", Offset = "0x17F222C", VA = "0x17F222C")]
			public AreaMeasure()
			{
			}
		}

		[Token(Token = "0x200038F")]
		private class AlphaMeasure
		{
			[Token(Token = "0x400182F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public double alpha_min;

			[Token(Token = "0x4001830")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public double alpha_max;

			[Token(Token = "0x4001831")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public double alpha_ave;

			[Token(Token = "0x4001832")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public double alpha_area;

			[Token(Token = "0x60018F1")]
			[Address(RVA = "0x17F2410", Offset = "0x17F2410", VA = "0x17F2410")]
			public void Reset()
			{
			}

			[Token(Token = "0x60018F2")]
			[Address(RVA = "0x17F3098", Offset = "0x17F3098", VA = "0x17F3098")]
			private double acos(double c)
			{
				return default(double);
			}

			[Token(Token = "0x60018F3")]
			[Address(RVA = "0x17F29D4", Offset = "0x17F29D4", VA = "0x17F29D4")]
			public double Measure(double ab, double bc, double ca, double area)
			{
				return default(double);
			}

			[Token(Token = "0x60018F4")]
			[Address(RVA = "0x17F2CD8", Offset = "0x17F2CD8", VA = "0x17F2CD8")]
			public void Normalize(int n, double area_total)
			{
			}

			[Token(Token = "0x60018F5")]
			[Address(RVA = "0x17F2240", Offset = "0x17F2240", VA = "0x17F2240")]
			public AlphaMeasure()
			{
			}
		}

		[Token(Token = "0x2000390")]
		private class Q_Measure
		{
			[Token(Token = "0x4001833")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public double q_min;

			[Token(Token = "0x4001834")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public double q_max;

			[Token(Token = "0x4001835")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public double q_ave;

			[Token(Token = "0x4001836")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public double q_area;

			[Token(Token = "0x60018F6")]
			[Address(RVA = "0x17F2424", Offset = "0x17F2424", VA = "0x17F2424")]
			public void Reset()
			{
			}

			[Token(Token = "0x60018F7")]
			[Address(RVA = "0x17F2BDC", Offset = "0x17F2BDC", VA = "0x17F2BDC")]
			public double Measure(double ab, double bc, double ca, double area)
			{
				return default(double);
			}

			[Token(Token = "0x60018F8")]
			[Address(RVA = "0x17F2D10", Offset = "0x17F2D10", VA = "0x17F2D10")]
			public void Normalize(int n, double area_total)
			{
			}

			[Token(Token = "0x60018F9")]
			[Address(RVA = "0x17F2248", Offset = "0x17F2248", VA = "0x17F2248")]
			public Q_Measure()
			{
			}
		}

		[Token(Token = "0x4000665")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private AreaMeasure areaMeasure;

		[Token(Token = "0x4000666")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private AlphaMeasure alphaMeasure;

		[Token(Token = "0x4000667")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Q_Measure qMeasure;

		[Token(Token = "0x4000668")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Mesh mesh;

		[Token(Token = "0x17000078")]
		public double AreaMinimum
		{
			[Token(Token = "0x6000519")]
			[Address(RVA = "0x17F2250", Offset = "0x17F2250", VA = "0x17F2250")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x17000079")]
		public double AreaMaximum
		{
			[Token(Token = "0x600051A")]
			[Address(RVA = "0x17F226C", Offset = "0x17F226C", VA = "0x17F226C")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x1700007A")]
		public double AreaRatio
		{
			[Token(Token = "0x600051B")]
			[Address(RVA = "0x17F2288", Offset = "0x17F2288", VA = "0x17F2288")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x1700007B")]
		public double AlphaMinimum
		{
			[Token(Token = "0x600051C")]
			[Address(RVA = "0x17F22A8", Offset = "0x17F22A8", VA = "0x17F22A8")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x1700007C")]
		public double AlphaMaximum
		{
			[Token(Token = "0x600051D")]
			[Address(RVA = "0x17F22C4", Offset = "0x17F22C4", VA = "0x17F22C4")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x1700007D")]
		public double AlphaAverage
		{
			[Token(Token = "0x600051E")]
			[Address(RVA = "0x17F22E0", Offset = "0x17F22E0", VA = "0x17F22E0")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x1700007E")]
		public double AlphaArea
		{
			[Token(Token = "0x600051F")]
			[Address(RVA = "0x17F22FC", Offset = "0x17F22FC", VA = "0x17F22FC")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x1700007F")]
		public double Q_Minimum
		{
			[Token(Token = "0x6000520")]
			[Address(RVA = "0x17F2318", Offset = "0x17F2318", VA = "0x17F2318")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x17000080")]
		public double Q_Maximum
		{
			[Token(Token = "0x6000521")]
			[Address(RVA = "0x17F2334", Offset = "0x17F2334", VA = "0x17F2334")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x17000081")]
		public double Q_Average
		{
			[Token(Token = "0x6000522")]
			[Address(RVA = "0x17F2350", Offset = "0x17F2350", VA = "0x17F2350")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x17000082")]
		public double Q_Area
		{
			[Token(Token = "0x6000523")]
			[Address(RVA = "0x17F236C", Offset = "0x17F236C", VA = "0x17F236C")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x6000518")]
		[Address(RVA = "0x17F2154", Offset = "0x17F2154", VA = "0x17F2154")]
		public QualityMeasure()
		{
		}

		[Token(Token = "0x6000524")]
		[Address(RVA = "0x17F2388", Offset = "0x17F2388", VA = "0x17F2388")]
		public void Update(Mesh mesh)
		{
		}

		[Token(Token = "0x6000525")]
		[Address(RVA = "0x17F2438", Offset = "0x17F2438", VA = "0x17F2438")]
		private void Compute()
		{
		}

		[Token(Token = "0x6000526")]
		[Address(RVA = "0x17F2D48", Offset = "0x17F2D48", VA = "0x17F2D48")]
		public int Bandwidth()
		{
			return default(int);
		}
	}
	[Token(Token = "0x20000EC")]
	public class Statistic
	{
		[Token(Token = "0x4000669")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static long InCircleCount;

		[Token(Token = "0x400066A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static long InCircleAdaptCount;

		[Token(Token = "0x400066B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static long CounterClockwiseCount;

		[Token(Token = "0x400066C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static long CounterClockwiseAdaptCount;

		[Token(Token = "0x400066D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static long Orient3dCount;

		[Token(Token = "0x400066E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static long HyperbolaCount;

		[Token(Token = "0x400066F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public static long CircumcenterCount;

		[Token(Token = "0x4000670")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public static long CircleTopCount;

		[Token(Token = "0x4000671")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public static long RelocationCount;

		[Token(Token = "0x4000672")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private double minEdge;

		[Token(Token = "0x4000673")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private double maxEdge;

		[Token(Token = "0x4000674")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private double minAspect;

		[Token(Token = "0x4000675")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private double maxAspect;

		[Token(Token = "0x4000676")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private double minArea;

		[Token(Token = "0x4000677")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private double maxArea;

		[Token(Token = "0x4000678")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private double minAngle;

		[Token(Token = "0x4000679")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private double maxAngle;

		[Token(Token = "0x400067A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int[] angleTable;

		[Token(Token = "0x400067B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int[] minAngles;

		[Token(Token = "0x400067C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private int[] maxAngles;

		[Token(Token = "0x400067D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private static readonly int[] plus1Mod3;

		[Token(Token = "0x400067E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private static readonly int[] minus1Mod3;

		[Token(Token = "0x17000083")]
		public double ShortestEdge
		{
			[Token(Token = "0x6000527")]
			[Address(RVA = "0x17F3138", Offset = "0x17F3138", VA = "0x17F3138")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x17000084")]
		public double LongestEdge
		{
			[Token(Token = "0x6000528")]
			[Address(RVA = "0x17F3140", Offset = "0x17F3140", VA = "0x17F3140")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x17000085")]
		public double ShortestAltitude
		{
			[Token(Token = "0x6000529")]
			[Address(RVA = "0x17F3148", Offset = "0x17F3148", VA = "0x17F3148")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x17000086")]
		public double LargestAspectRatio
		{
			[Token(Token = "0x600052A")]
			[Address(RVA = "0x17F3150", Offset = "0x17F3150", VA = "0x17F3150")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x17000087")]
		public double SmallestArea
		{
			[Token(Token = "0x600052B")]
			[Address(RVA = "0x17F3158", Offset = "0x17F3158", VA = "0x17F3158")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x17000088")]
		public double LargestArea
		{
			[Token(Token = "0x600052C")]
			[Address(RVA = "0x17F3160", Offset = "0x17F3160", VA = "0x17F3160")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x17000089")]
		public double SmallestAngle
		{
			[Token(Token = "0x600052D")]
			[Address(RVA = "0x17F3168", Offset = "0x17F3168", VA = "0x17F3168")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x1700008A")]
		public double LargestAngle
		{
			[Token(Token = "0x600052E")]
			[Address(RVA = "0x17F3170", Offset = "0x17F3170", VA = "0x17F3170")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x1700008B")]
		public int[] AngleHistogram
		{
			[Token(Token = "0x600052F")]
			[Address(RVA = "0x17F3178", Offset = "0x17F3178", VA = "0x17F3178")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700008C")]
		public int[] MinAngleHistogram
		{
			[Token(Token = "0x6000530")]
			[Address(RVA = "0x17F3180", Offset = "0x17F3180", VA = "0x17F3180")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700008D")]
		public int[] MaxAngleHistogram
		{
			[Token(Token = "0x6000531")]
			[Address(RVA = "0x17F3188", Offset = "0x17F3188", VA = "0x17F3188")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000532")]
		[Address(RVA = "0x17F3190", Offset = "0x17F3190", VA = "0x17F3190")]
		private void GetAspectHistogram(Mesh mesh)
		{
		}

		[Token(Token = "0x6000533")]
		[Address(RVA = "0x17F3B34", Offset = "0x17F3B34", VA = "0x17F3B34")]
		public void Update(Mesh mesh, int sampleDegrees)
		{
		}

		[Token(Token = "0x6000534")]
		[Address(RVA = "0x17F4ACC", Offset = "0x17F4ACC", VA = "0x17F4ACC")]
		public Statistic()
		{
		}
	}
	[Token(Token = "0x20000ED")]
	public class TriangleQuadTree
	{
		[Token(Token = "0x2000391")]
		private class QuadNode
		{
			[Token(Token = "0x4001837")]
			private const int SW = 0;

			[Token(Token = "0x4001838")]
			private const int SE = 1;

			[Token(Token = "0x4001839")]
			private const int NW = 2;

			[Token(Token = "0x400183A")]
			private const int NE = 3;

			[Token(Token = "0x400183B")]
			private const double EPS = 1E-06;

			[Token(Token = "0x400183C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private static readonly byte[] BITVECTOR;

			[Token(Token = "0x400183D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private Rectangle bounds;

			[Token(Token = "0x400183E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private Point pivot;

			[Token(Token = "0x400183F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private TriangleQuadTree tree;

			[Token(Token = "0x4001840")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private QuadNode[] regions;

			[Token(Token = "0x4001841")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private List<int> triangles;

			[Token(Token = "0x4001842")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private byte bitRegions;

			[Token(Token = "0x60018FA")]
			[Address(RVA = "0x17F5AF8", Offset = "0x17F5AF8", VA = "0x17F5AF8")]
			public QuadNode(Rectangle box, TriangleQuadTree tree)
			{
			}

			[Token(Token = "0x60018FB")]
			[Address(RVA = "0x17F4CE0", Offset = "0x17F4CE0", VA = "0x17F4CE0")]
			public QuadNode(Rectangle box, TriangleQuadTree tree, bool init)
			{
			}

			[Token(Token = "0x60018FC")]
			[Address(RVA = "0x17F58CC", Offset = "0x17F58CC", VA = "0x17F58CC")]
			public List<int> FindTriangles(Point searchPoint)
			{
				return null;
			}

			[Token(Token = "0x60018FD")]
			[Address(RVA = "0x17F4EDC", Offset = "0x17F4EDC", VA = "0x17F4EDC")]
			public void CreateSubRegion(int currentDepth)
			{
			}

			[Token(Token = "0x60018FE")]
			[Address(RVA = "0x17F5B40", Offset = "0x17F5B40", VA = "0x17F5B40")]
			private void AddTriangleToRegion(Point[] triangle, int index)
			{
			}

			[Token(Token = "0x60018FF")]
			[Address(RVA = "0x17F5DD4", Offset = "0x17F5DD4", VA = "0x17F5DD4")]
			private void FindTriangleIntersections(Point[] triangle, int index)
			{
			}

			[Token(Token = "0x6001900")]
			[Address(RVA = "0x17F5ED0", Offset = "0x17F5ED0", VA = "0x17F5ED0")]
			private void FindIntersectionsWithX(double dx, double dy, Point[] triangle, int index, int k)
			{
			}

			[Token(Token = "0x6001901")]
			[Address(RVA = "0x17F614C", Offset = "0x17F614C", VA = "0x17F614C")]
			private void FindIntersectionsWithY(double dx, double dy, Point[] triangle, int index, int k)
			{
			}

			[Token(Token = "0x6001902")]
			[Address(RVA = "0x17F5B00", Offset = "0x17F5B00", VA = "0x17F5B00")]
			private int FindRegion(Point point)
			{
				return default(int);
			}

			[Token(Token = "0x6001903")]
			[Address(RVA = "0x17F5C94", Offset = "0x17F5C94", VA = "0x17F5C94")]
			private void AddToRegion(int index, int region)
			{
			}
		}

		[Token(Token = "0x400067F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private QuadNode root;

		[Token(Token = "0x4000680")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal ITriangle[] triangles;

		[Token(Token = "0x4000681")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal int sizeBound;

		[Token(Token = "0x4000682")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		internal int maxDepth;

		[Token(Token = "0x6000536")]
		[Address(RVA = "0x17F4C04", Offset = "0x17F4C04", VA = "0x17F4C04")]
		public TriangleQuadTree(Mesh mesh, int maxDepth = 10, int sizeBound = 10)
		{
		}

		[Token(Token = "0x6000537")]
		[Address(RVA = "0x17F55C4", Offset = "0x17F55C4", VA = "0x17F55C4")]
		public ITriangle Query(double x, double y)
		{
			return null;
		}

		[Token(Token = "0x6000538")]
		[Address(RVA = "0x17F5928", Offset = "0x17F5928", VA = "0x17F5928")]
		internal static bool IsPointInTriangle(Point p, Point t0, Point t1, Point t2)
		{
			return default(bool);
		}

		[Token(Token = "0x6000539")]
		[Address(RVA = "0x17F5ACC", Offset = "0x17F5ACC", VA = "0x17F5ACC")]
		internal static double DotProduct(Point p, Point q)
		{
			return default(double);
		}
	}
	[Token(Token = "0x20000EE")]
	public class VertexSorter
	{
		[Token(Token = "0x4000683")]
		private const int RANDOM_SEED = 57113;

		[Token(Token = "0x4000684")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private System.Random rand;

		[Token(Token = "0x4000685")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private TriangleNet.Geometry.Vertex[] points;

		[Token(Token = "0x600053A")]
		[Address(RVA = "0x17F6448", Offset = "0x17F6448", VA = "0x17F6448")]
		private VertexSorter(TriangleNet.Geometry.Vertex[] points, int seed)
		{
		}

		[Token(Token = "0x600053B")]
		[Address(RVA = "0x17F1A94", Offset = "0x17F1A94", VA = "0x17F1A94")]
		public static void Sort(TriangleNet.Geometry.Vertex[] array, int seed = 57113)
		{
		}

		[Token(Token = "0x600053C")]
		[Address(RVA = "0x17F682C", Offset = "0x17F682C", VA = "0x17F682C")]
		public static void Alternate(TriangleNet.Geometry.Vertex[] array, int length, int seed = 57113)
		{
		}

		[Token(Token = "0x600053D")]
		[Address(RVA = "0x17F64E0", Offset = "0x17F64E0", VA = "0x17F64E0")]
		private void QuickSort(int left, int right)
		{
		}

		[Token(Token = "0x600053E")]
		[Address(RVA = "0x17F68F8", Offset = "0x17F68F8", VA = "0x17F68F8")]
		private void AlternateAxes(int left, int right, int axis)
		{
		}

		[Token(Token = "0x600053F")]
		[Address(RVA = "0x17F69B4", Offset = "0x17F69B4", VA = "0x17F69B4")]
		private void VertexMedianX(int left, int right, int median)
		{
		}

		[Token(Token = "0x6000540")]
		[Address(RVA = "0x17F6CD8", Offset = "0x17F6CD8", VA = "0x17F6CD8")]
		private void VertexMedianY(int left, int right, int median)
		{
		}
	}
}
namespace TriangleNet.Smoothing
{
	[Token(Token = "0x20000EF")]
	public interface ISmoother
	{
		[Token(Token = "0x6000541")]
		void Smooth(IMesh mesh);

		[Token(Token = "0x6000542")]
		void Smooth(IMesh mesh, int limit);
	}
	[Token(Token = "0x20000F0")]
	public class SimpleSmoother : ISmoother
	{
		[Serializable]
		[Token(Token = "0x2000392")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E7CD8", Offset = "0x9E7CD8")]
		private sealed class <>c
		{
			[Token(Token = "0x4001843")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001844")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<IPredicates> <>9__5_0;

			[Token(Token = "0x4001845")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Converter<SubSegment, ISegment> <>9__11_0;

			[Token(Token = "0x6001906")]
			[Address(RVA = "0x17ED698", Offset = "0x17ED698", VA = "0x17ED698")]
			public <>c()
			{
			}

			[Token(Token = "0x6001907")]
			[Address(RVA = "0x17ED6A0", Offset = "0x17ED6A0", VA = "0x17ED6A0")]
			internal IPredicates <.ctor>b__5_0()
			{
				return null;
			}

			[Token(Token = "0x6001908")]
			[Address(RVA = "0x17ED700", Offset = "0x17ED700", VA = "0x17ED700")]
			internal ISegment <Rebuild>b__11_0(SubSegment x)
			{
				return null;
			}
		}

		[Token(Token = "0x4000686")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private TrianglePool pool;

		[Token(Token = "0x4000687")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Configuration config;

		[Token(Token = "0x4000688")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private IVoronoiFactory factory;

		[Token(Token = "0x4000689")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private ConstraintOptions options;

		[Token(Token = "0x6000543")]
		[Address(RVA = "0x17EC790", Offset = "0x17EC790", VA = "0x17EC790")]
		public SimpleSmoother()
		{
		}

		[Token(Token = "0x6000544")]
		[Address(RVA = "0x17EC8E0", Offset = "0x17EC8E0", VA = "0x17EC8E0")]
		public SimpleSmoother(IVoronoiFactory factory)
		{
		}

		[Token(Token = "0x6000545")]
		[Address(RVA = "0x17ECC00", Offset = "0x17ECC00", VA = "0x17ECC00")]
		public SimpleSmoother(IVoronoiFactory factory, Configuration config)
		{
		}

		[Token(Token = "0x6000546")]
		[Address(RVA = "0x17ECCB4", Offset = "0x17ECCB4", VA = "0x17ECCB4", Slot = "4")]
		public void Smooth(IMesh mesh)
		{
		}

		[Token(Token = "0x6000547")]
		[Address(RVA = "0x17ECCBC", Offset = "0x17ECCBC", VA = "0x17ECCBC", Slot = "5")]
		public void Smooth(IMesh mesh, int limit)
		{
		}

		[Token(Token = "0x6000548")]
		[Address(RVA = "0x17ECF0C", Offset = "0x17ECF0C", VA = "0x17ECF0C")]
		private void Step(Mesh mesh, IVoronoiFactory factory, IPredicates predicates)
		{
		}

		[Token(Token = "0x6000549")]
		[Address(RVA = "0x17ED430", Offset = "0x17ED430", VA = "0x17ED430")]
		private void Centroid(Face face, out double x, out double y)
		{
		}

		[Token(Token = "0x600054A")]
		[Address(RVA = "0x17ED090", Offset = "0x17ED090", VA = "0x17ED090")]
		private Polygon Rebuild(Mesh mesh)
		{
			return null;
		}

		[Token(Token = "0x600054B")]
		[Address(RVA = "0x17ED4E4", Offset = "0x17ED4E4", VA = "0x17ED4E4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EEF1C", Offset = "0x9EEF1C")]
		private TrianglePool <.ctor>b__5_1()
		{
			return null;
		}
	}
	[Token(Token = "0x20000F1")]
	internal class VoronoiFactory : IVoronoiFactory
	{
		[Token(Token = "0x2000393")]
		private class ObjectPool<T> where T : class
		{
			[Token(Token = "0x4001846")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int index;

			[Token(Token = "0x4001847")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int count;

			[Token(Token = "0x4001848")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private T[] pool;

			[Token(Token = "0x1700022B")]
			public int Count
			{
				[Token(Token = "0x6001909")]
				get
				{
					return default(int);
				}
			}

			[Token(Token = "0x1700022C")]
			public int Capacity
			{
				[Token(Token = "0x600190A")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x600190B")]
				set
				{
				}
			}

			[Token(Token = "0x600190C")]
			public ObjectPool(int capacity = 3)
			{
			}

			[Token(Token = "0x600190D")]
			public ObjectPool(T[] pool)
			{
			}

			[Token(Token = "0x600190E")]
			public bool TryGet(out T obj)
			{
				return default(bool);
			}

			[Token(Token = "0x600190F")]
			public void Put(T obj)
			{
			}

			[Token(Token = "0x6001910")]
			public void Release()
			{
			}

			[Token(Token = "0x6001911")]
			private void Resize(int size)
			{
			}
		}

		[Token(Token = "0x400068A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private ObjectPool<TriangleNet.Topology.DCEL.Vertex> vertices;

		[Token(Token = "0x400068B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private ObjectPool<HalfEdge> edges;

		[Token(Token = "0x400068C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private ObjectPool<Face> faces;

		[Token(Token = "0x600054C")]
		[Address(RVA = "0x17EC7F0", Offset = "0x17EC7F0", VA = "0x17EC7F0")]
		public VoronoiFactory()
		{
		}

		[Token(Token = "0x600054D")]
		[Address(RVA = "0x17ED708", Offset = "0x17ED708", VA = "0x17ED708", Slot = "4")]
		public void Initialize(int vertexCount, int edgeCount, int faceCount)
		{
		}

		[Token(Token = "0x600054E")]
		[Address(RVA = "0x17ED9A4", Offset = "0x17ED9A4", VA = "0x17ED9A4", Slot = "5")]
		public void Reset()
		{
		}

		[Token(Token = "0x600054F")]
		[Address(RVA = "0x17EDA2C", Offset = "0x17EDA2C", VA = "0x17EDA2C", Slot = "6")]
		public TriangleNet.Topology.DCEL.Vertex CreateVertex(double x, double y)
		{
			return null;
		}

		[Token(Token = "0x6000550")]
		[Address(RVA = "0x17EDB10", Offset = "0x17EDB10", VA = "0x17EDB10", Slot = "7")]
		public HalfEdge CreateHalfEdge(TriangleNet.Topology.DCEL.Vertex origin, Face face)
		{
			return null;
		}

		[Token(Token = "0x6000551")]
		[Address(RVA = "0x17EDCC0", Offset = "0x17EDCC0", VA = "0x17EDCC0", Slot = "8")]
		public Face CreateFace(TriangleNet.Geometry.Vertex vertex)
		{
			return null;
		}
	}
}
namespace TriangleNet.Meshing
{
	[Token(Token = "0x20000F2")]
	internal class ConstraintMesher
	{
		[Token(Token = "0x400068D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IPredicates predicates;

		[Token(Token = "0x400068E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Mesh mesh;

		[Token(Token = "0x400068F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Behavior behavior;

		[Token(Token = "0x4000690")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TriangleLocator locator;

		[Token(Token = "0x4000691")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<TriangleNet.Topology.Triangle> viri;

		[Token(Token = "0x4000692")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private ILog<LogItem> logger;

		[Token(Token = "0x6000552")]
		[Address(RVA = "0x168E968", Offset = "0x168E968", VA = "0x168E968")]
		public ConstraintMesher(Mesh mesh, Configuration config)
		{
		}

		[Token(Token = "0x6000553")]
		[Address(RVA = "0x168EAD0", Offset = "0x168EAD0", VA = "0x168EAD0")]
		public void Apply(IPolygon input, ConstraintOptions options)
		{
		}

		[Token(Token = "0x6000554")]
		[Address(RVA = "0x168F5EC", Offset = "0x168F5EC", VA = "0x168F5EC")]
		private void CarveHoles()
		{
		}

		[Token(Token = "0x6000555")]
		[Address(RVA = "0x168EE54", Offset = "0x168EE54", VA = "0x168EE54")]
		private void FormSkeleton(IPolygon input)
		{
		}

		[Token(Token = "0x6000556")]
		[Address(RVA = "0x168FD54", Offset = "0x168FD54", VA = "0x168FD54")]
		private void InfectHull()
		{
		}

		[Token(Token = "0x6000557")]
		[Address(RVA = "0x168FF04", Offset = "0x168FF04", VA = "0x168FF04")]
		private void Plague()
		{
		}

		[Token(Token = "0x6000558")]
		[Address(RVA = "0x1690918", Offset = "0x1690918", VA = "0x1690918")]
		private FindDirectionResult FindDirection(ref Otri searchtri, TriangleNet.Geometry.Vertex searchpoint)
		{
			return default(FindDirectionResult);
		}

		[Token(Token = "0x6000559")]
		[Address(RVA = "0x1690D1C", Offset = "0x1690D1C", VA = "0x1690D1C")]
		private void SegmentIntersection(ref Otri splittri, ref Osub splitsubseg, TriangleNet.Geometry.Vertex endpoint2)
		{
		}

		[Token(Token = "0x600055A")]
		[Address(RVA = "0x16910FC", Offset = "0x16910FC", VA = "0x16910FC")]
		private bool ScoutSegment(ref Otri searchtri, TriangleNet.Geometry.Vertex endpoint2, int newmark)
		{
			return default(bool);
		}

		[Token(Token = "0x600055B")]
		[Address(RVA = "0x16912C0", Offset = "0x16912C0", VA = "0x16912C0")]
		private void DelaunayFixup(ref Otri fixuptri, bool leftside)
		{
		}

		[Token(Token = "0x600055C")]
		[Address(RVA = "0x1691608", Offset = "0x1691608", VA = "0x1691608")]
		private void ConstrainedEdge(ref Otri starttri, TriangleNet.Geometry.Vertex endpoint2, int newmark)
		{
		}

		[Token(Token = "0x600055D")]
		[Address(RVA = "0x16905AC", Offset = "0x16905AC", VA = "0x16905AC")]
		private void InsertSegment(TriangleNet.Geometry.Vertex endpoint1, TriangleNet.Geometry.Vertex endpoint2, int newmark)
		{
		}

		[Token(Token = "0x600055E")]
		[Address(RVA = "0x1690840", Offset = "0x1690840", VA = "0x1690840")]
		private void MarkHull()
		{
		}
	}
	[Token(Token = "0x20000F3")]
	public class ConstraintOptions
	{
		[Token(Token = "0x4000693")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E9A60", Offset = "0x9E9A60")]
		private bool <UseRegions>k__BackingField;

		[Token(Token = "0x4000694")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E9A70", Offset = "0x9E9A70")]
		private bool <ConformingDelaunay>k__BackingField;

		[Token(Token = "0x4000695")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E9A80", Offset = "0x9E9A80")]
		private bool <Convex>k__BackingField;

		[Token(Token = "0x4000696")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E9A90", Offset = "0x9E9A90")]
		private int <SegmentSplitting>k__BackingField;

		[Token(Token = "0x1700008E")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x9F5878", Offset = "0x9F5878")]
		public bool UseRegions
		{
			[Token(Token = "0x600055F")]
			[Address(RVA = "0x16918D8", Offset = "0x16918D8", VA = "0x16918D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EEF2C", Offset = "0x9EEF2C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000560")]
			[Address(RVA = "0x16918E0", Offset = "0x16918E0", VA = "0x16918E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EEF3C", Offset = "0x9EEF3C")]
			set
			{
			}
		}

		[Token(Token = "0x1700008F")]
		public bool ConformingDelaunay
		{
			[Token(Token = "0x6000561")]
			[Address(RVA = "0x16918EC", Offset = "0x16918EC", VA = "0x16918EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EEF4C", Offset = "0x9EEF4C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000562")]
			[Address(RVA = "0x16918F4", Offset = "0x16918F4", VA = "0x16918F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EEF5C", Offset = "0x9EEF5C")]
			set
			{
			}
		}

		[Token(Token = "0x17000090")]
		public bool Convex
		{
			[Token(Token = "0x6000563")]
			[Address(RVA = "0x1691900", Offset = "0x1691900", VA = "0x1691900")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EEF6C", Offset = "0x9EEF6C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000564")]
			[Address(RVA = "0x1691908", Offset = "0x1691908", VA = "0x1691908")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EEF7C", Offset = "0x9EEF7C")]
			set
			{
			}
		}

		[Token(Token = "0x17000091")]
		public int SegmentSplitting
		{
			[Token(Token = "0x6000565")]
			[Address(RVA = "0x1691914", Offset = "0x1691914", VA = "0x1691914")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EEF8C", Offset = "0x9EEF8C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000566")]
			[Address(RVA = "0x169191C", Offset = "0x169191C", VA = "0x169191C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EEF9C", Offset = "0x9EEF9C")]
			set
			{
			}
		}

		[Token(Token = "0x6000567")]
		[Address(RVA = "0x1691924", Offset = "0x1691924", VA = "0x1691924")]
		public ConstraintOptions()
		{
		}
	}
	[Token(Token = "0x20000F4")]
	public static class Converter
	{
		[Token(Token = "0x6000568")]
		[Address(RVA = "0x169192C", Offset = "0x169192C", VA = "0x169192C")]
		public static Mesh ToMesh(Polygon polygon, IList<ITriangle> triangles)
		{
			return null;
		}

		[Token(Token = "0x6000569")]
		[Address(RVA = "0x1691994", Offset = "0x1691994", VA = "0x1691994")]
		public static Mesh ToMesh(Polygon polygon, ITriangle[] triangles)
		{
			return null;
		}

		[Token(Token = "0x600056A")]
		[Address(RVA = "0x1691B50", Offset = "0x1691B50", VA = "0x1691B50")]
		private static List<Otri>[] SetNeighbors(Mesh mesh, ITriangle[] triangles)
		{
			return null;
		}

		[Token(Token = "0x600056B")]
		[Address(RVA = "0x16925D8", Offset = "0x16925D8", VA = "0x16925D8")]
		private static void SetSegments(Mesh mesh, Polygon polygon, List<Otri>[] vertexarray)
		{
		}

		[Token(Token = "0x600056C")]
		[Address(RVA = "0x1692F60", Offset = "0x1692F60", VA = "0x1692F60")]
		public static DcelMesh ToDCEL(Mesh mesh)
		{
			return null;
		}
	}
	[Token(Token = "0x20000F5")]
	public class GenericMesher
	{
		[Token(Token = "0x4000697")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Configuration config;

		[Token(Token = "0x4000698")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private ITriangulator triangulator;

		[Token(Token = "0x600056D")]
		[Address(RVA = "0x16944DC", Offset = "0x16944DC", VA = "0x16944DC")]
		public GenericMesher()
		{
		}

		[Token(Token = "0x600056E")]
		[Address(RVA = "0x16945C0", Offset = "0x16945C0", VA = "0x16945C0")]
		public GenericMesher(ITriangulator triangulator)
		{
		}

		[Token(Token = "0x600056F")]
		[Address(RVA = "0x1694634", Offset = "0x1694634", VA = "0x1694634")]
		public GenericMesher(Configuration config)
		{
		}

		[Token(Token = "0x6000570")]
		[Address(RVA = "0x1694570", Offset = "0x1694570", VA = "0x1694570")]
		public GenericMesher(ITriangulator triangulator, Configuration config)
		{
		}

		[Token(Token = "0x6000571")]
		[Address(RVA = "0x16946B0", Offset = "0x16946B0", VA = "0x16946B0")]
		public IMesh Triangulate(IList<TriangleNet.Geometry.Vertex> points)
		{
			return null;
		}

		[Token(Token = "0x6000572")]
		[Address(RVA = "0x1694778", Offset = "0x1694778", VA = "0x1694778")]
		public IMesh Triangulate(IPolygon polygon)
		{
			return null;
		}

		[Token(Token = "0x6000573")]
		[Address(RVA = "0x16949A4", Offset = "0x16949A4", VA = "0x16949A4")]
		public IMesh Triangulate(IPolygon polygon, ConstraintOptions options)
		{
			return null;
		}

		[Token(Token = "0x6000574")]
		[Address(RVA = "0x16949AC", Offset = "0x16949AC", VA = "0x16949AC")]
		public IMesh Triangulate(IPolygon polygon, QualityOptions quality)
		{
			return null;
		}

		[Token(Token = "0x6000575")]
		[Address(RVA = "0x1694784", Offset = "0x1694784", VA = "0x1694784")]
		public IMesh Triangulate(IPolygon polygon, ConstraintOptions options, QualityOptions quality)
		{
			return null;
		}

		[Token(Token = "0x6000576")]
		[Address(RVA = "0x16949B8", Offset = "0x16949B8", VA = "0x16949B8")]
		public static IMesh StructuredMesh(double width, double height, int nx, int ny)
		{
			return null;
		}

		[Token(Token = "0x6000577")]
		[Address(RVA = "0x1694AB4", Offset = "0x1694AB4", VA = "0x1694AB4")]
		public static IMesh StructuredMesh(Rectangle bounds, int nx, int ny)
		{
			return null;
		}
	}
	[Token(Token = "0x20000F6")]
	public interface IConstraintMesher
	{
		[Token(Token = "0x6000578")]
		IMesh Triangulate(IPolygon polygon);

		[Token(Token = "0x6000579")]
		IMesh Triangulate(IPolygon polygon, ConstraintOptions options);
	}
	[Token(Token = "0x20000F7")]
	public interface IMesh
	{
		[Token(Token = "0x17000092")]
		ICollection<TriangleNet.Geometry.Vertex> Vertices
		{
			[Token(Token = "0x600057A")]
			get;
		}

		[Token(Token = "0x17000093")]
		IEnumerable<TriangleNet.Geometry.Edge> Edges
		{
			[Token(Token = "0x600057B")]
			get;
		}

		[Token(Token = "0x17000094")]
		ICollection<SubSegment> Segments
		{
			[Token(Token = "0x600057C")]
			get;
		}

		[Token(Token = "0x17000095")]
		ICollection<TriangleNet.Topology.Triangle> Triangles
		{
			[Token(Token = "0x600057D")]
			get;
		}

		[Token(Token = "0x17000096")]
		IList<Point> Holes
		{
			[Token(Token = "0x600057E")]
			get;
		}

		[Token(Token = "0x17000097")]
		Rectangle Bounds
		{
			[Token(Token = "0x600057F")]
			get;
		}

		[Token(Token = "0x6000580")]
		void Renumber();

		[Token(Token = "0x6000581")]
		void Refine(QualityOptions quality, bool delaunay);
	}
	[Token(Token = "0x20000F8")]
	public interface IQualityMesher
	{
		[Token(Token = "0x6000582")]
		IMesh Triangulate(IPolygon polygon, QualityOptions quality);

		[Token(Token = "0x6000583")]
		IMesh Triangulate(IPolygon polygon, ConstraintOptions options, QualityOptions quality);
	}
	[Token(Token = "0x20000F9")]
	public interface ITriangulator
	{
		[Token(Token = "0x6000584")]
		IMesh Triangulate(IList<TriangleNet.Geometry.Vertex> points, Configuration config);
	}
	[Token(Token = "0x20000FA")]
	internal class QualityMesher
	{
		[Token(Token = "0x4000699")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IPredicates predicates;

		[Token(Token = "0x400069A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Queue<BadSubseg> badsubsegs;

		[Token(Token = "0x400069B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private BadTriQueue queue;

		[Token(Token = "0x400069C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Mesh mesh;

		[Token(Token = "0x400069D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Behavior behavior;

		[Token(Token = "0x400069E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private NewLocation newLocation;

		[Token(Token = "0x400069F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private ILog<LogItem> logger;

		[Token(Token = "0x40006A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private TriangleNet.Topology.Triangle newvertex_tri;

		[Token(Token = "0x6000585")]
		[Address(RVA = "0x16845F4", Offset = "0x16845F4", VA = "0x16845F4")]
		public QualityMesher(Mesh mesh, Configuration config)
		{
		}

		[Token(Token = "0x6000586")]
		[Address(RVA = "0x16847DC", Offset = "0x16847DC", VA = "0x16847DC")]
		public void Apply(QualityOptions quality, bool delaunay = false)
		{
		}

		[Token(Token = "0x6000587")]
		[Address(RVA = "0x16869DC", Offset = "0x16869DC", VA = "0x16869DC")]
		public void AddBadSubseg(BadSubseg badseg)
		{
		}

		[Token(Token = "0x6000588")]
		[Address(RVA = "0x1686B94", Offset = "0x1686B94", VA = "0x1686B94")]
		public int CheckSeg4Encroach(ref Osub testsubseg)
		{
			return default(int);
		}

		[Token(Token = "0x6000589")]
		[Address(RVA = "0x1686EAC", Offset = "0x1686EAC", VA = "0x1686EAC")]
		public void TestTriangle(ref Otri testtri)
		{
		}

		[Token(Token = "0x600058A")]
		[Address(RVA = "0x16964B4", Offset = "0x16964B4", VA = "0x16964B4")]
		private void TallyEncs()
		{
		}

		[Token(Token = "0x600058B")]
		[Address(RVA = "0x16965D0", Offset = "0x16965D0", VA = "0x16965D0")]
		private void SplitEncSegs(bool triflaws)
		{
		}

		[Token(Token = "0x600058C")]
		[Address(RVA = "0x1696DD4", Offset = "0x1696DD4", VA = "0x1696DD4")]
		private void TallyFaces()
		{
		}

		[Token(Token = "0x600058D")]
		[Address(RVA = "0x1696FF0", Offset = "0x1696FF0", VA = "0x1696FF0")]
		private void SplitTriangle(BadTriangle badtri)
		{
		}

		[Token(Token = "0x600058E")]
		[Address(RVA = "0x1696264", Offset = "0x1696264", VA = "0x1696264")]
		private void EnforceQuality()
		{
		}
	}
	[Token(Token = "0x20000FB")]
	public class QualityOptions
	{
		[Token(Token = "0x40006A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E9AA0", Offset = "0x9E9AA0")]
		private double <MaximumAngle>k__BackingField;

		[Token(Token = "0x40006A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E9AB0", Offset = "0x9E9AB0")]
		private double <MinimumAngle>k__BackingField;

		[Token(Token = "0x40006A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E9AC0", Offset = "0x9E9AC0")]
		private double <MaximumArea>k__BackingField;

		[Token(Token = "0x40006A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E9AD0", Offset = "0x9E9AD0")]
		private Func<ITriangle, double, bool> <UserTest>k__BackingField;

		[Token(Token = "0x40006A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E9AE0", Offset = "0x9E9AE0")]
		private bool <VariableArea>k__BackingField;

		[Token(Token = "0x40006A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E9AF0", Offset = "0x9E9AF0")]
		private int <SteinerPoints>k__BackingField;

		[Token(Token = "0x17000098")]
		public double MaximumAngle
		{
			[Token(Token = "0x600058F")]
			[Address(RVA = "0x18793EC", Offset = "0x18793EC", VA = "0x18793EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EEFAC", Offset = "0x9EEFAC")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x6000590")]
			[Address(RVA = "0x18793F4", Offset = "0x18793F4", VA = "0x18793F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EEFBC", Offset = "0x9EEFBC")]
			set
			{
			}
		}

		[Token(Token = "0x17000099")]
		public double MinimumAngle
		{
			[Token(Token = "0x6000591")]
			[Address(RVA = "0x18793FC", Offset = "0x18793FC", VA = "0x18793FC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EEFCC", Offset = "0x9EEFCC")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x6000592")]
			[Address(RVA = "0x1879404", Offset = "0x1879404", VA = "0x1879404")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EEFDC", Offset = "0x9EEFDC")]
			set
			{
			}
		}

		[Token(Token = "0x1700009A")]
		public double MaximumArea
		{
			[Token(Token = "0x6000593")]
			[Address(RVA = "0x187940C", Offset = "0x187940C", VA = "0x187940C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EEFEC", Offset = "0x9EEFEC")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x6000594")]
			[Address(RVA = "0x1879414", Offset = "0x1879414", VA = "0x1879414")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EEFFC", Offset = "0x9EEFFC")]
			set
			{
			}
		}

		[Token(Token = "0x1700009B")]
		public Func<ITriangle, double, bool> UserTest
		{
			[Token(Token = "0x6000595")]
			[Address(RVA = "0x187941C", Offset = "0x187941C", VA = "0x187941C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EF00C", Offset = "0x9EF00C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000596")]
			[Address(RVA = "0x1879424", Offset = "0x1879424", VA = "0x1879424")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EF01C", Offset = "0x9EF01C")]
			set
			{
			}
		}

		[Token(Token = "0x1700009C")]
		public bool VariableArea
		{
			[Token(Token = "0x6000597")]
			[Address(RVA = "0x187942C", Offset = "0x187942C", VA = "0x187942C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EF02C", Offset = "0x9EF02C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000598")]
			[Address(RVA = "0x1879434", Offset = "0x1879434", VA = "0x1879434")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EF03C", Offset = "0x9EF03C")]
			set
			{
			}
		}

		[Token(Token = "0x1700009D")]
		public int SteinerPoints
		{
			[Token(Token = "0x6000599")]
			[Address(RVA = "0x1879440", Offset = "0x1879440", VA = "0x1879440")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EF04C", Offset = "0x9EF04C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600059A")]
			[Address(RVA = "0x1879448", Offset = "0x1879448", VA = "0x1879448")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EF05C", Offset = "0x9EF05C")]
			set
			{
			}
		}

		[Token(Token = "0x600059B")]
		[Address(RVA = "0x1879450", Offset = "0x1879450", VA = "0x1879450")]
		public QualityOptions()
		{
		}
	}
}
namespace TriangleNet.Meshing.Iterators
{
	[Token(Token = "0x20000FC")]
	public class EdgeIterator : IEnumerator<TriangleNet.Geometry.Edge>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40006A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IEnumerator<TriangleNet.Topology.Triangle> triangles;

		[Token(Token = "0x40006A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Otri tri;

		[Token(Token = "0x40006A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Otri neighbor;

		[Token(Token = "0x40006AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Osub sub;

		[Token(Token = "0x40006AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private TriangleNet.Geometry.Edge current;

		[Token(Token = "0x40006AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private TriangleNet.Geometry.Vertex p1;

		[Token(Token = "0x40006AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private TriangleNet.Geometry.Vertex p2;

		[Token(Token = "0x1700009E")]
		public TriangleNet.Geometry.Edge Current
		{
			[Token(Token = "0x600059D")]
			[Address(RVA = "0x1695168", Offset = "0x1695168", VA = "0x1695168", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700009F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600059F")]
			[Address(RVA = "0x1695220", Offset = "0x1695220", VA = "0x1695220", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600059C")]
		[Address(RVA = "0x16884F0", Offset = "0x16884F0", VA = "0x16884F0")]
		public EdgeIterator(Mesh mesh)
		{
		}

		[Token(Token = "0x600059E")]
		[Address(RVA = "0x1695170", Offset = "0x1695170", VA = "0x1695170", Slot = "5")]
		public void Dispose()
		{
		}

		[Token(Token = "0x60005A0")]
		[Address(RVA = "0x168866C", Offset = "0x168866C", VA = "0x168866C", Slot = "6")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60005A1")]
		[Address(RVA = "0x1695228", Offset = "0x1695228", VA = "0x1695228", Slot = "8")]
		public void Reset()
		{
		}
	}
	[Token(Token = "0x20000FD")]
	public class RegionIterator
	{
		[Token(Token = "0x2000394")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E7CE8", Offset = "0x9E7CE8")]
		private sealed class <>c__DisplayClass2_0
		{
			[Token(Token = "0x4001849")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public TriangleNet.Topology.Triangle triangle;

			[Token(Token = "0x6001912")]
			[Address(RVA = "0x16952DC", Offset = "0x16952DC", VA = "0x16952DC")]
			public <>c__DisplayClass2_0()
			{
			}

			[Token(Token = "0x6001913")]
			[Address(RVA = "0x16957B4", Offset = "0x16957B4", VA = "0x16957B4")]
			internal void <Process>b__0(TriangleNet.Topology.Triangle tri)
			{
			}
		}

		[Token(Token = "0x2000395")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E7CF8", Offset = "0x9E7CF8")]
		private sealed class <>c__DisplayClass3_0
		{
			[Token(Token = "0x400184A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int boundary;

			[Token(Token = "0x6001914")]
			[Address(RVA = "0x16954DC", Offset = "0x16954DC", VA = "0x16954DC")]
			public <>c__DisplayClass3_0()
			{
			}

			[Token(Token = "0x6001915")]
			[Address(RVA = "0x16957EC", Offset = "0x16957EC", VA = "0x16957EC")]
			internal bool <Process>b__1(SubSegment seg)
			{
				return default(bool);
			}
		}

		[Serializable]
		[Token(Token = "0x2000396")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E7D08", Offset = "0x9E7D08")]
		private sealed class <>c
		{
			[Token(Token = "0x400184B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x400184C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<SubSegment, bool> <>9__3_0;

			[Token(Token = "0x6001917")]
			[Address(RVA = "0x169578C", Offset = "0x169578C", VA = "0x169578C")]
			public <>c()
			{
			}

			[Token(Token = "0x6001918")]
			[Address(RVA = "0x1695794", Offset = "0x1695794", VA = "0x1695794")]
			internal bool <Process>b__3_0(SubSegment seg)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x40006AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private List<TriangleNet.Topology.Triangle> region;

		[Token(Token = "0x60005A2")]
		[Address(RVA = "0x1690458", Offset = "0x1690458", VA = "0x1690458")]
		public RegionIterator(Mesh mesh)
		{
		}

		[Token(Token = "0x60005A3")]
		[Address(RVA = "0x16904D4", Offset = "0x16904D4", VA = "0x16904D4")]
		public void Process(TriangleNet.Topology.Triangle triangle, int boundary = 0)
		{
		}

		[Token(Token = "0x60005A4")]
		[Address(RVA = "0x16952E4", Offset = "0x16952E4", VA = "0x16952E4")]
		public void Process(TriangleNet.Topology.Triangle triangle, Action<TriangleNet.Topology.Triangle> action, int boundary = 0)
		{
		}

		[Token(Token = "0x60005A5")]
		[Address(RVA = "0x16954E4", Offset = "0x16954E4", VA = "0x16954E4")]
		private void ProcessRegion(Action<TriangleNet.Topology.Triangle> action, Func<SubSegment, bool> protector)
		{
		}
	}
	[Token(Token = "0x20000FE")]
	public class VertexCirculator
	{
		[Token(Token = "0x2000397")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E7D18", Offset = "0x9E7D18")]
		private sealed class <EnumerateVertices>d__2 : IEnumerable<TriangleNet.Geometry.Vertex>, IEnumerable, IEnumerator<TriangleNet.Geometry.Vertex>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400184D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400184E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private TriangleNet.Geometry.Vertex <>2__current;

			[Token(Token = "0x400184F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4001850")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public VertexCirculator <>4__this;

			[Token(Token = "0x4001851")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private TriangleNet.Geometry.Vertex vertex;

			[Token(Token = "0x4001852")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public TriangleNet.Geometry.Vertex <>3__vertex;

			[Token(Token = "0x4001853")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private List<Otri>.Enumerator <>7__wrap1;

			[Token(Token = "0x1700022D")]
			private TriangleNet.Geometry.Vertex System.Collections.Generic.IEnumerator<TriangleNet.Geometry.Vertex>.Current
			{
				[Token(Token = "0x600191D")]
				[Address(RVA = "0x169612C", Offset = "0x169612C", VA = "0x169612C", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700022E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600191F")]
				[Address(RVA = "0x1696194", Offset = "0x1696194", VA = "0x1696194", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001919")]
			[Address(RVA = "0x1695950", Offset = "0x1695950", VA = "0x1695950")]
			[DebuggerHidden]
			public <EnumerateVertices>d__2(int <>1__state)
			{
			}

			[Token(Token = "0x600191A")]
			[Address(RVA = "0x1695F30", Offset = "0x1695F30", VA = "0x1695F30", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600191B")]
			[Address(RVA = "0x1695FA4", Offset = "0x1695FA4", VA = "0x1695FA4", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600191C")]
			[Address(RVA = "0x1695F4C", Offset = "0x1695F4C", VA = "0x1695F4C")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x600191E")]
			[Address(RVA = "0x1696134", Offset = "0x1696134", VA = "0x1696134", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6001920")]
			[Address(RVA = "0x169619C", Offset = "0x169619C", VA = "0x169619C", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<TriangleNet.Geometry.Vertex> System.Collections.Generic.IEnumerable<TriangleNet.Geometry.Vertex>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6001921")]
			[Address(RVA = "0x1696260", Offset = "0x1696260", VA = "0x1696260", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x2000398")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E7D28", Offset = "0x9E7D28")]
		private sealed class <EnumerateTriangles>d__3 : IEnumerable<ITriangle>, IEnumerable, IEnumerator<ITriangle>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001854")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001855")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private ITriangle <>2__current;

			[Token(Token = "0x4001856")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4001857")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public VertexCirculator <>4__this;

			[Token(Token = "0x4001858")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private TriangleNet.Geometry.Vertex vertex;

			[Token(Token = "0x4001859")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public TriangleNet.Geometry.Vertex <>3__vertex;

			[Token(Token = "0x400185A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private List<Otri>.Enumerator <>7__wrap1;

			[Token(Token = "0x1700022F")]
			private ITriangle System.Collections.Generic.IEnumerator<TriangleNet.Geometry.ITriangle>.Current
			{
				[Token(Token = "0x6001926")]
				[Address(RVA = "0x1695DF8", Offset = "0x1695DF8", VA = "0x1695DF8", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000230")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001928")]
				[Address(RVA = "0x1695E60", Offset = "0x1695E60", VA = "0x1695E60", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001922")]
			[Address(RVA = "0x1695A30", Offset = "0x1695A30", VA = "0x1695A30")]
			[DebuggerHidden]
			public <EnumerateTriangles>d__3(int <>1__state)
			{
			}

			[Token(Token = "0x6001923")]
			[Address(RVA = "0x1695C14", Offset = "0x1695C14", VA = "0x1695C14", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001924")]
			[Address(RVA = "0x1695C88", Offset = "0x1695C88", VA = "0x1695C88", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001925")]
			[Address(RVA = "0x1695C30", Offset = "0x1695C30", VA = "0x1695C30")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6001927")]
			[Address(RVA = "0x1695E00", Offset = "0x1695E00", VA = "0x1695E00", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6001929")]
			[Address(RVA = "0x1695E68", Offset = "0x1695E68", VA = "0x1695E68", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<ITriangle> System.Collections.Generic.IEnumerable<TriangleNet.Geometry.ITriangle>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x600192A")]
			[Address(RVA = "0x1695F2C", Offset = "0x1695F2C", VA = "0x1695F2C", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x40006AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private List<Otri> cache;

		[Token(Token = "0x60005A6")]
		[Address(RVA = "0x1695810", Offset = "0x1695810", VA = "0x1695810")]
		public VertexCirculator(Mesh mesh)
		{
		}

		[Token(Token = "0x60005A7")]
		[Address(RVA = "0x16958A8", Offset = "0x16958A8", VA = "0x16958A8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9EF06C", Offset = "0x9EF06C")]
		public IEnumerable<TriangleNet.Geometry.Vertex> EnumerateVertices(TriangleNet.Geometry.Vertex vertex)
		{
			return null;
		}

		[Token(Token = "0x60005A8")]
		[Address(RVA = "0x1695988", Offset = "0x1695988", VA = "0x1695988")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9EF0D0", Offset = "0x9EF0D0")]
		public IEnumerable<ITriangle> EnumerateTriangles(TriangleNet.Geometry.Vertex vertex)
		{
			return null;
		}

		[Token(Token = "0x60005A9")]
		[Address(RVA = "0x1695A68", Offset = "0x1695A68", VA = "0x1695A68")]
		private void BuildCache(TriangleNet.Geometry.Vertex vertex, bool vertices)
		{
		}
	}
}
namespace TriangleNet.Meshing.Data
{
	[Token(Token = "0x20000FF")]
	internal class BadSubseg
	{
		[Token(Token = "0x40006B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Osub subseg;

		[Token(Token = "0x40006B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TriangleNet.Geometry.Vertex org;

		[Token(Token = "0x40006B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TriangleNet.Geometry.Vertex dest;

		[Token(Token = "0x60005AA")]
		[Address(RVA = "0x1693EA0", Offset = "0x1693EA0", VA = "0x1693EA0", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x60005AB")]
		[Address(RVA = "0x1693EBC", Offset = "0x1693EBC", VA = "0x1693EBC", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x60005AC")]
		[Address(RVA = "0x16869D4", Offset = "0x16869D4", VA = "0x16869D4")]
		public BadSubseg()
		{
		}
	}
	[Token(Token = "0x2000100")]
	internal class BadTriQueue
	{
		[Token(Token = "0x40006B3")]
		private const double SQRT2 = 1.4142135623730951;

		[Token(Token = "0x40006B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private BadTriangle[] queuefront;

		[Token(Token = "0x40006B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private BadTriangle[] queuetail;

		[Token(Token = "0x40006B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int[] nextnonemptyq;

		[Token(Token = "0x40006B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int firstnonemptyq;

		[Token(Token = "0x40006B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int count;

		[Token(Token = "0x170000A0")]
		public int Count
		{
			[Token(Token = "0x60005AD")]
			[Address(RVA = "0x1693F48", Offset = "0x1693F48", VA = "0x1693F48")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x60005AE")]
		[Address(RVA = "0x1693F50", Offset = "0x1693F50", VA = "0x1693F50")]
		public BadTriQueue()
		{
		}

		[Token(Token = "0x60005AF")]
		[Address(RVA = "0x1694008", Offset = "0x1694008", VA = "0x1694008")]
		public void Enqueue(BadTriangle badtri)
		{
		}

		[Token(Token = "0x60005B0")]
		[Address(RVA = "0x1694260", Offset = "0x1694260", VA = "0x1694260")]
		public void Enqueue(ref Otri enqtri, double minedge, TriangleNet.Geometry.Vertex apex, TriangleNet.Geometry.Vertex org, TriangleNet.Geometry.Vertex dest)
		{
		}

		[Token(Token = "0x60005B1")]
		[Address(RVA = "0x1694348", Offset = "0x1694348", VA = "0x1694348")]
		public BadTriangle Dequeue()
		{
			return null;
		}
	}
	[Token(Token = "0x2000101")]
	internal class BadTriangle
	{
		[Token(Token = "0x40006B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Otri poortri;

		[Token(Token = "0x40006BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public double key;

		[Token(Token = "0x40006BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TriangleNet.Geometry.Vertex org;

		[Token(Token = "0x40006BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public TriangleNet.Geometry.Vertex dest;

		[Token(Token = "0x40006BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public TriangleNet.Geometry.Vertex apex;

		[Token(Token = "0x40006BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public BadTriangle next;

		[Token(Token = "0x60005B2")]
		[Address(RVA = "0x1694450", Offset = "0x1694450", VA = "0x1694450", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x60005B3")]
		[Address(RVA = "0x1694340", Offset = "0x1694340", VA = "0x1694340")]
		public BadTriangle()
		{
		}
	}
}
namespace TriangleNet.Meshing.Algorithm
{
	[Token(Token = "0x2000102")]
	public class Dwyer : ITriangulator
	{
		[Token(Token = "0x40006BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IPredicates predicates;

		[Token(Token = "0x40006C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool UseDwyer;

		[Token(Token = "0x40006C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private TriangleNet.Geometry.Vertex[] sortarray;

		[Token(Token = "0x40006C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Mesh mesh;

		[Token(Token = "0x60005B4")]
		[Address(RVA = "0x1689E68", Offset = "0x1689E68", VA = "0x1689E68", Slot = "4")]
		public IMesh Triangulate(IList<TriangleNet.Geometry.Vertex> points, Configuration config)
		{
			return null;
		}

		[Token(Token = "0x60005B5")]
		[Address(RVA = "0x168AFF4", Offset = "0x168AFF4", VA = "0x168AFF4")]
		private void MergeHulls(ref Otri farleft, ref Otri innerleft, ref Otri innerright, ref Otri farright, int axis)
		{
		}

		[Token(Token = "0x60005B6")]
		[Address(RVA = "0x168A5A8", Offset = "0x168A5A8", VA = "0x168A5A8")]
		private void DivconqRecurse(int left, int right, int axis, ref Otri farleft, ref Otri farright)
		{
		}

		[Token(Token = "0x60005B7")]
		[Address(RVA = "0x168AE70", Offset = "0x168AE70", VA = "0x168AE70")]
		private int RemoveGhosts(ref Otri startghost)
		{
			return default(int);
		}

		[Token(Token = "0x60005B8")]
		[Address(RVA = "0x168BE20", Offset = "0x168BE20", VA = "0x168BE20")]
		public Dwyer()
		{
		}
	}
	[Token(Token = "0x2000103")]
	public class Incremental : ITriangulator
	{
		[Token(Token = "0x40006C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Mesh mesh;

		[Token(Token = "0x60005B9")]
		[Address(RVA = "0x168BE30", Offset = "0x168BE30", VA = "0x168BE30", Slot = "4")]
		public IMesh Triangulate(IList<TriangleNet.Geometry.Vertex> points, Configuration config)
		{
			return null;
		}

		[Token(Token = "0x60005BA")]
		[Address(RVA = "0x168C1EC", Offset = "0x168C1EC", VA = "0x168C1EC")]
		private void GetBoundingBox()
		{
		}

		[Token(Token = "0x60005BB")]
		[Address(RVA = "0x168C428", Offset = "0x168C428", VA = "0x168C428")]
		private int RemoveBox()
		{
			return default(int);
		}

		[Token(Token = "0x60005BC")]
		[Address(RVA = "0x168C678", Offset = "0x168C678", VA = "0x168C678")]
		public Incremental()
		{
		}
	}
	[Token(Token = "0x2000104")]
	public class SweepLine : ITriangulator
	{
		[Token(Token = "0x2000399")]
		private class SweepEvent
		{
			[Token(Token = "0x400185B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public double xkey;

			[Token(Token = "0x400185C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public double ykey;

			[Token(Token = "0x400185D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TriangleNet.Geometry.Vertex vertexEvent;

			[Token(Token = "0x400185E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Otri otriEvent;

			[Token(Token = "0x400185F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public int heapposition;

			[Token(Token = "0x600192B")]
			[Address(RVA = "0x168DE30", Offset = "0x168DE30", VA = "0x168DE30")]
			public SweepEvent()
			{
			}
		}

		[Token(Token = "0x200039A")]
		private class SweepEventVertex : TriangleNet.Geometry.Vertex
		{
			[Token(Token = "0x4001860")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public SweepEvent evt;

			[Token(Token = "0x600192C")]
			[Address(RVA = "0x168E0E0", Offset = "0x168E0E0", VA = "0x168E0E0")]
			public SweepEventVertex(SweepEvent e)
			{
			}
		}

		[Token(Token = "0x200039B")]
		private class SplayNode
		{
			[Token(Token = "0x4001861")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Otri keyedge;

			[Token(Token = "0x4001862")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TriangleNet.Geometry.Vertex keydest;

			[Token(Token = "0x4001863")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public SplayNode lchild;

			[Token(Token = "0x4001864")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public SplayNode rchild;

			[Token(Token = "0x600192D")]
			[Address(RVA = "0x168E8F4", Offset = "0x168E8F4", VA = "0x168E8F4")]
			public SplayNode()
			{
			}
		}

		[Token(Token = "0x40006C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int randomseed;

		[Token(Token = "0x40006C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static int SAMPLERATE;

		[Token(Token = "0x40006C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IPredicates predicates;

		[Token(Token = "0x40006C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Mesh mesh;

		[Token(Token = "0x40006C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private double xminextreme;

		[Token(Token = "0x40006C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<SplayNode> splaynodes;

		[Token(Token = "0x60005BD")]
		[Address(RVA = "0x168C680", Offset = "0x168C680", VA = "0x168C680")]
		private static int randomnation(int choices)
		{
			return default(int);
		}

		[Token(Token = "0x60005BE")]
		[Address(RVA = "0x168C728", Offset = "0x168C728", VA = "0x168C728", Slot = "4")]
		public IMesh Triangulate(IList<TriangleNet.Geometry.Vertex> points, Configuration config)
		{
			return null;
		}

		[Token(Token = "0x60005BF")]
		[Address(RVA = "0x168DF90", Offset = "0x168DF90", VA = "0x168DF90")]
		private void HeapInsert(SweepEvent[] heap, int heapsize, SweepEvent newevent)
		{
		}

		[Token(Token = "0x60005C0")]
		[Address(RVA = "0x168E288", Offset = "0x168E288", VA = "0x168E288")]
		private void Heapify(SweepEvent[] heap, int heapsize, int eventnum)
		{
		}

		[Token(Token = "0x60005C1")]
		[Address(RVA = "0x168D7DC", Offset = "0x168D7DC", VA = "0x168D7DC")]
		private void HeapDelete(SweepEvent[] heap, int heapsize, int eventnum)
		{
		}

		[Token(Token = "0x60005C2")]
		[Address(RVA = "0x168D61C", Offset = "0x168D61C", VA = "0x168D61C")]
		private void CreateHeap(out SweepEvent[] eventheap, int size)
		{
		}

		[Token(Token = "0x60005C3")]
		[Address(RVA = "0x168E46C", Offset = "0x168E46C", VA = "0x168E46C")]
		private SplayNode Splay(SplayNode splaytree, Point searchpoint, ref Otri searchtri)
		{
			return null;
		}

		[Token(Token = "0x60005C4")]
		[Address(RVA = "0x168DCD0", Offset = "0x168DCD0", VA = "0x168DCD0")]
		private SplayNode SplayInsert(SplayNode splayroot, Otri newkey, Point searchpoint)
		{
			return null;
		}

		[Token(Token = "0x60005C5")]
		[Address(RVA = "0x168DC1C", Offset = "0x168DC1C", VA = "0x168DC1C")]
		private SplayNode FrontLocate(SplayNode splayroot, Otri bottommost, TriangleNet.Geometry.Vertex searchvertex, ref Otri searchtri, ref bool farright)
		{
			return null;
		}

		[Token(Token = "0x60005C6")]
		[Address(RVA = "0x168DA60", Offset = "0x168DA60", VA = "0x168DA60")]
		private SplayNode CircleTopInsert(SplayNode splayroot, Otri newkey, TriangleNet.Geometry.Vertex pa, TriangleNet.Geometry.Vertex pb, TriangleNet.Geometry.Vertex pc, double topy)
		{
			return null;
		}

		[Token(Token = "0x60005C7")]
		[Address(RVA = "0x168E7AC", Offset = "0x168E7AC", VA = "0x168E7AC")]
		private bool RightOfHyperbola(ref Otri fronttri, Point newsite)
		{
			return default(bool);
		}

		[Token(Token = "0x60005C8")]
		[Address(RVA = "0x168DE38", Offset = "0x168DE38", VA = "0x168DE38")]
		private double CircleTop(TriangleNet.Geometry.Vertex pa, TriangleNet.Geometry.Vertex pb, TriangleNet.Geometry.Vertex pc, double ccwabc)
		{
			return default(double);
		}

		[Token(Token = "0x60005C9")]
		[Address(RVA = "0x168D954", Offset = "0x168D954", VA = "0x168D954")]
		private void Check4DeadEvent(ref Otri checktri, SweepEvent[] eventheap, ref int heapsize)
		{
		}

		[Token(Token = "0x60005CA")]
		[Address(RVA = "0x168E114", Offset = "0x168E114", VA = "0x168E114")]
		private int RemoveGhosts(ref Otri startghost)
		{
			return default(int);
		}

		[Token(Token = "0x60005CB")]
		[Address(RVA = "0x168E8FC", Offset = "0x168E8FC", VA = "0x168E8FC")]
		public SweepLine()
		{
		}
	}
}
namespace TriangleNet.Logging
{
	[Token(Token = "0x2000105")]
	public enum LogLevel
	{
		[Token(Token = "0x40006CB")]
		Info,
		[Token(Token = "0x40006CC")]
		Warning,
		[Token(Token = "0x40006CD")]
		Error
	}
	[Token(Token = "0x2000106")]
	public interface ILog<T> where T : ILogItem
	{
		[Token(Token = "0x170000A1")]
		IList<T> Data
		{
			[Token(Token = "0x60005D2")]
			get;
		}

		[Token(Token = "0x170000A2")]
		LogLevel Level
		{
			[Token(Token = "0x60005D3")]
			get;
		}

		[Token(Token = "0x60005CD")]
		void Add(T item);

		[Token(Token = "0x60005CE")]
		void Clear();

		[Token(Token = "0x60005CF")]
		void Info(string message);

		[Token(Token = "0x60005D0")]
		void Error(string message, string info);

		[Token(Token = "0x60005D1")]
		void Warning(string message, string info);
	}
	[Token(Token = "0x2000107")]
	public interface ILogItem
	{
		[Token(Token = "0x170000A3")]
		DateTime Time
		{
			[Token(Token = "0x60005D4")]
			get;
		}

		[Token(Token = "0x170000A4")]
		LogLevel Level
		{
			[Token(Token = "0x60005D5")]
			get;
		}

		[Token(Token = "0x170000A5")]
		string Message
		{
			[Token(Token = "0x60005D6")]
			get;
		}

		[Token(Token = "0x170000A6")]
		string Info
		{
			[Token(Token = "0x60005D7")]
			get;
		}
	}
	[Token(Token = "0x2000108")]
	public class LogItem : ILogItem
	{
		[Token(Token = "0x40006CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private DateTime time;

		[Token(Token = "0x40006CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private LogLevel level;

		[Token(Token = "0x40006D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private string message;

		[Token(Token = "0x40006D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private string info;

		[Token(Token = "0x170000A7")]
		public DateTime Time
		{
			[Token(Token = "0x60005D8")]
			[Address(RVA = "0x1683DB4", Offset = "0x1683DB4", VA = "0x1683DB4", Slot = "4")]
			get
			{
				return default(DateTime);
			}
		}

		[Token(Token = "0x170000A8")]
		public LogLevel Level
		{
			[Token(Token = "0x60005D9")]
			[Address(RVA = "0x1683DBC", Offset = "0x1683DBC", VA = "0x1683DBC", Slot = "5")]
			get
			{
				return default(LogLevel);
			}
		}

		[Token(Token = "0x170000A9")]
		public string Message
		{
			[Token(Token = "0x60005DA")]
			[Address(RVA = "0x1683DC4", Offset = "0x1683DC4", VA = "0x1683DC4", Slot = "6")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000AA")]
		public string Info
		{
			[Token(Token = "0x60005DB")]
			[Address(RVA = "0x1683DCC", Offset = "0x1683DCC", VA = "0x1683DCC", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60005DC")]
		[Address(RVA = "0x1683B60", Offset = "0x1683B60", VA = "0x1683B60")]
		public LogItem(LogLevel level, string message)
		{
		}

		[Token(Token = "0x60005DD")]
		[Address(RVA = "0x1683C5C", Offset = "0x1683C5C", VA = "0x1683C5C")]
		public LogItem(LogLevel level, string message, string info)
		{
		}
	}
}
namespace TriangleNet.IO
{
	[Token(Token = "0x2000109")]
	internal class DebugWriter
	{
		[Token(Token = "0x40006D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static NumberFormatInfo nfi;

		[Token(Token = "0x40006D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int iteration;

		[Token(Token = "0x40006D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private string session;

		[Token(Token = "0x40006D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private StreamWriter stream;

		[Token(Token = "0x40006D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private string tmpFile;

		[Token(Token = "0x40006D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int[] vertices;

		[Token(Token = "0x40006D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int triangles;

		[Token(Token = "0x40006D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly DebugWriter instance;

		[Token(Token = "0x170000AB")]
		public static DebugWriter Session
		{
			[Token(Token = "0x60005E0")]
			[Address(RVA = "0xE4BF18", Offset = "0xE4BF18", VA = "0xE4BF18")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60005DE")]
		[Address(RVA = "0xE4BE50", Offset = "0xE4BE50", VA = "0xE4BE50")]
		static DebugWriter()
		{
		}

		[Token(Token = "0x60005DF")]
		[Address(RVA = "0xE4BF10", Offset = "0xE4BF10", VA = "0xE4BF10")]
		private DebugWriter()
		{
		}

		[Token(Token = "0x60005E1")]
		[Address(RVA = "0xE4BF80", Offset = "0xE4BF80", VA = "0xE4BF80")]
		public void Start(string session)
		{
		}

		[Token(Token = "0x60005E2")]
		[Address(RVA = "0xE4C090", Offset = "0xE4C090", VA = "0xE4C090")]
		public void Write(Mesh mesh, bool skip = false)
		{
		}

		[Token(Token = "0x60005E3")]
		[Address(RVA = "0xE4CF34", Offset = "0xE4CF34", VA = "0xE4CF34")]
		public void Finish()
		{
		}

		[Token(Token = "0x60005E4")]
		[Address(RVA = "0xE4CF94", Offset = "0xE4CF94", VA = "0xE4CF94")]
		private void Finish(string path)
		{
		}

		[Token(Token = "0x60005E5")]
		[Address(RVA = "0xE4D2AC", Offset = "0xE4D2AC", VA = "0xE4D2AC")]
		private void WriteGeometry(IPolygon geometry)
		{
		}

		[Token(Token = "0x60005E6")]
		[Address(RVA = "0xE4C16C", Offset = "0xE4C16C", VA = "0xE4C16C")]
		private void WriteMesh(Mesh mesh, bool skip)
		{
		}

		[Token(Token = "0x60005E7")]
		[Address(RVA = "0xE4D348", Offset = "0xE4D348", VA = "0xE4D348")]
		private bool VerticesChanged(Mesh mesh)
		{
			return default(bool);
		}

		[Token(Token = "0x60005E8")]
		[Address(RVA = "0xE4D6FC", Offset = "0xE4D6FC", VA = "0xE4D6FC")]
		private void HashVertices(Mesh mesh)
		{
		}
	}
	[Token(Token = "0x200010A")]
	public static class FileProcessor
	{
		[Token(Token = "0x40006DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static List<IFileFormat> formats;

		[Token(Token = "0x60005E9")]
		[Address(RVA = "0xE4DAEC", Offset = "0xE4DAEC", VA = "0xE4DAEC")]
		static FileProcessor()
		{
		}

		[Token(Token = "0x60005EA")]
		[Address(RVA = "0xE4DBB4", Offset = "0xE4DBB4", VA = "0xE4DBB4")]
		public static void Add(IFileFormat format)
		{
		}

		[Token(Token = "0x60005EB")]
		[Address(RVA = "0xE4DC38", Offset = "0xE4DC38", VA = "0xE4DC38")]
		public static bool IsSupported(string file)
		{
			return default(bool);
		}

		[Token(Token = "0x60005EC")]
		[Address(RVA = "0xE4DDD4", Offset = "0xE4DDD4", VA = "0xE4DDD4")]
		public static IPolygon Read(string filename)
		{
			return null;
		}

		[Token(Token = "0x60005ED")]
		[Address(RVA = "0xE4E070", Offset = "0xE4E070", VA = "0xE4E070")]
		public static void Write(IPolygon polygon, string filename)
		{
		}

		[Token(Token = "0x60005EE")]
		[Address(RVA = "0xE4E310", Offset = "0xE4E310", VA = "0xE4E310")]
		public static IMesh Import(string filename)
		{
			return null;
		}

		[Token(Token = "0x60005EF")]
		[Address(RVA = "0xE4E5AC", Offset = "0xE4E5AC", VA = "0xE4E5AC")]
		public static void Write(IMesh mesh, string filename)
		{
		}
	}
	[Token(Token = "0x200010B")]
	public interface IFileFormat
	{
		[Token(Token = "0x60005F0")]
		bool IsSupported(string file);
	}
	[Token(Token = "0x200010C")]
	public interface IMeshFormat : IFileFormat
	{
		[Token(Token = "0x60005F1")]
		IMesh Import(string filename);

		[Token(Token = "0x60005F2")]
		void Write(IMesh mesh, string filename);

		[Token(Token = "0x60005F3")]
		void Write(IMesh mesh, Stream stream);
	}
	[Token(Token = "0x200010D")]
	public interface IPolygonFormat : IFileFormat
	{
		[Token(Token = "0x60005F4")]
		IPolygon Read(string filename);

		[Token(Token = "0x60005F5")]
		void Write(IPolygon polygon, string filename);

		[Token(Token = "0x60005F6")]
		void Write(IPolygon polygon, Stream stream);
	}
	[Token(Token = "0x200010E")]
	public class InputTriangle : ITriangle
	{
		[Token(Token = "0x40006DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal int[] vertices;

		[Token(Token = "0x40006DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal int label;

		[Token(Token = "0x40006DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal double area;

		[Token(Token = "0x170000AC")]
		public int ID
		{
			[Token(Token = "0x60005F8")]
			[Address(RVA = "0xE4E90C", Offset = "0xE4E90C", VA = "0xE4E90C", Slot = "4")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60005F9")]
			[Address(RVA = "0xE4E914", Offset = "0xE4E914", VA = "0xE4E914", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x170000AD")]
		public int Label
		{
			[Token(Token = "0x60005FA")]
			[Address(RVA = "0xE4E918", Offset = "0xE4E918", VA = "0xE4E918", Slot = "6")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60005FB")]
			[Address(RVA = "0xE4E920", Offset = "0xE4E920", VA = "0xE4E920", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x170000AE")]
		public double Area
		{
			[Token(Token = "0x60005FC")]
			[Address(RVA = "0xE4E928", Offset = "0xE4E928", VA = "0xE4E928", Slot = "8")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x60005FD")]
			[Address(RVA = "0xE4E930", Offset = "0xE4E930", VA = "0xE4E930", Slot = "9")]
			set
			{
			}
		}

		[Token(Token = "0x60005F7")]
		[Address(RVA = "0xE4E84C", Offset = "0xE4E84C", VA = "0xE4E84C")]
		public InputTriangle(int p0, int p1, int p2)
		{
		}

		[Token(Token = "0x60005FE")]
		[Address(RVA = "0xE4E938", Offset = "0xE4E938", VA = "0xE4E938", Slot = "10")]
		public TriangleNet.Geometry.Vertex GetVertex(int index)
		{
			return null;
		}

		[Token(Token = "0x60005FF")]
		[Address(RVA = "0xE4E940", Offset = "0xE4E940", VA = "0xE4E940", Slot = "11")]
		public int GetVertexID(int index)
		{
			return default(int);
		}

		[Token(Token = "0x6000600")]
		[Address(RVA = "0xE4E97C", Offset = "0xE4E97C", VA = "0xE4E97C", Slot = "12")]
		public ITriangle GetNeighbor(int index)
		{
			return null;
		}

		[Token(Token = "0x6000601")]
		[Address(RVA = "0xE4E984", Offset = "0xE4E984", VA = "0xE4E984", Slot = "13")]
		public int GetNeighborID(int index)
		{
			return default(int);
		}

		[Token(Token = "0x6000602")]
		[Address(RVA = "0xE4E98C", Offset = "0xE4E98C", VA = "0xE4E98C", Slot = "14")]
		public ISegment GetSegment(int index)
		{
			return null;
		}
	}
	[Token(Token = "0x200010F")]
	public class TriangleFormat : IPolygonFormat, IFileFormat, IMeshFormat
	{
		[Token(Token = "0x6000603")]
		[Address(RVA = "0xE4E994", Offset = "0xE4E994", VA = "0xE4E994", Slot = "7")]
		public bool IsSupported(string file)
		{
			return default(bool);
		}

		[Token(Token = "0x6000604")]
		[Address(RVA = "0xE4EA6C", Offset = "0xE4EA6C", VA = "0xE4EA6C", Slot = "8")]
		public IMesh Import(string filename)
		{
			return null;
		}

		[Token(Token = "0x6000605")]
		[Address(RVA = "0xE4ED04", Offset = "0xE4ED04", VA = "0xE4ED04", Slot = "9")]
		public void Write(IMesh mesh, string filename)
		{
		}

		[Token(Token = "0x6000606")]
		[Address(RVA = "0xE4EE58", Offset = "0xE4EE58", VA = "0xE4EE58", Slot = "10")]
		public void Write(IMesh mesh, Stream stream)
		{
		}

		[Token(Token = "0x6000607")]
		[Address(RVA = "0xE4EEB8", Offset = "0xE4EEB8", VA = "0xE4EEB8", Slot = "4")]
		public IPolygon Read(string filename)
		{
			return null;
		}

		[Token(Token = "0x6000608")]
		[Address(RVA = "0xE4F03C", Offset = "0xE4F03C", VA = "0xE4F03C", Slot = "5")]
		public void Write(IPolygon polygon, string filename)
		{
		}

		[Token(Token = "0x6000609")]
		[Address(RVA = "0xE4F0BC", Offset = "0xE4F0BC", VA = "0xE4F0BC", Slot = "6")]
		public void Write(IPolygon polygon, Stream stream)
		{
		}

		[Token(Token = "0x600060A")]
		[Address(RVA = "0xE4DBAC", Offset = "0xE4DBAC", VA = "0xE4DBAC")]
		public TriangleFormat()
		{
		}
	}
	[Token(Token = "0x2000110")]
	public class TriangleReader
	{
		[Token(Token = "0x40006DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static NumberFormatInfo nfi;

		[Token(Token = "0x40006DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int startIndex;

		[Token(Token = "0x600060B")]
		[Address(RVA = "0xE4F11C", Offset = "0xE4F11C", VA = "0xE4F11C")]
		public static bool IsNullOrWhiteSpace(string value)
		{
			return default(bool);
		}

		[Token(Token = "0x600060C")]
		[Address(RVA = "0xE4F144", Offset = "0xE4F144", VA = "0xE4F144")]
		private bool TryReadLine(StreamReader reader, out string[] token)
		{
			return default(bool);
		}

		[Token(Token = "0x600060D")]
		[Address(RVA = "0xE4F2D4", Offset = "0xE4F2D4", VA = "0xE4F2D4")]
		private void ReadVertex(List<TriangleNet.Geometry.Vertex> data, int index, string[] line, int attributes, int marks)
		{
		}

		[Token(Token = "0x600060E")]
		[Address(RVA = "0xE4F464", Offset = "0xE4F464", VA = "0xE4F464")]
		public void Read(string filename, out Polygon polygon)
		{
		}

		[Token(Token = "0x600060F")]
		[Address(RVA = "0xE4EC08", Offset = "0xE4EC08", VA = "0xE4EC08")]
		public void Read(string filename, out Polygon geometry, out List<ITriangle> triangles)
		{
		}

		[Token(Token = "0x6000610")]
		[Address(RVA = "0xE4F580", Offset = "0xE4F580", VA = "0xE4F580")]
		public IPolygon Read(string filename)
		{
			return null;
		}

		[Token(Token = "0x6000611")]
		[Address(RVA = "0xE4F028", Offset = "0xE4F028", VA = "0xE4F028")]
		public Polygon ReadNodeFile(string nodefilename)
		{
			return null;
		}

		[Token(Token = "0x6000612")]
		[Address(RVA = "0xE4F5A8", Offset = "0xE4F5A8", VA = "0xE4F5A8")]
		public Polygon ReadNodeFile(string nodefilename, bool readElements)
		{
			return null;
		}

		[Token(Token = "0x6000613")]
		[Address(RVA = "0xE4F030", Offset = "0xE4F030", VA = "0xE4F030")]
		public Polygon ReadPolyFile(string polyfilename)
		{
			return null;
		}

		[Token(Token = "0x6000614")]
		[Address(RVA = "0xE5119C", Offset = "0xE5119C", VA = "0xE5119C")]
		public Polygon ReadPolyFile(string polyfilename, bool readElements)
		{
			return null;
		}

		[Token(Token = "0x6000615")]
		[Address(RVA = "0xE500BC", Offset = "0xE500BC", VA = "0xE500BC")]
		public Polygon ReadPolyFile(string polyfilename, bool readElements, bool readArea)
		{
			return null;
		}

		[Token(Token = "0x6000616")]
		[Address(RVA = "0xE4F578", Offset = "0xE4F578", VA = "0xE4F578")]
		public List<ITriangle> ReadEleFile(string elefilename)
		{
			return null;
		}

		[Token(Token = "0x6000617")]
		[Address(RVA = "0xE4FA80", Offset = "0xE4FA80", VA = "0xE4FA80")]
		private List<ITriangle> ReadEleFile(string elefilename, bool readArea)
		{
			return null;
		}

		[Token(Token = "0x6000618")]
		[Address(RVA = "0xE511A8", Offset = "0xE511A8", VA = "0xE511A8")]
		private double[] ReadAreaFile(string areafilename, int intriangles)
		{
			return null;
		}

		[Token(Token = "0x6000619")]
		[Address(RVA = "0xE51638", Offset = "0xE51638", VA = "0xE51638")]
		public List<TriangleNet.Geometry.Edge> ReadEdgeFile(string edgeFile, int invertices)
		{
			return null;
		}

		[Token(Token = "0x600061A")]
		[Address(RVA = "0xE4EC00", Offset = "0xE4EC00", VA = "0xE4EC00")]
		public TriangleReader()
		{
		}
	}
	[Token(Token = "0x2000111")]
	public class TriangleWriter
	{
		[Token(Token = "0x40006E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static NumberFormatInfo nfi;

		[Token(Token = "0x600061C")]
		[Address(RVA = "0x167F7A8", Offset = "0x167F7A8", VA = "0x167F7A8")]
		public void Write(Mesh mesh, string filename)
		{
		}

		[Token(Token = "0x600061D")]
		[Address(RVA = "0x167FEF8", Offset = "0x167FEF8", VA = "0x167FEF8")]
		public void WriteNodes(Mesh mesh, string filename)
		{
		}

		[Token(Token = "0x600061E")]
		[Address(RVA = "0x1680018", Offset = "0x1680018", VA = "0x1680018")]
		private void WriteNodes(StreamWriter writer, Mesh mesh)
		{
		}

		[Token(Token = "0x600061F")]
		[Address(RVA = "0x1680408", Offset = "0x1680408", VA = "0x1680408")]
		private void WriteNodes(StreamWriter writer, IEnumerable<TriangleNet.Geometry.Vertex> nodes, bool markers, int attribs, bool jettison)
		{
		}

		[Token(Token = "0x6000620")]
		[Address(RVA = "0x167F86C", Offset = "0x167F86C", VA = "0x167F86C")]
		public void WriteElements(Mesh mesh, string filename)
		{
		}

		[Token(Token = "0x6000621")]
		[Address(RVA = "0x16807D0", Offset = "0x16807D0", VA = "0x16807D0")]
		public void WritePoly(IPolygon polygon, string filename)
		{
		}

		[Token(Token = "0x6000622")]
		[Address(RVA = "0x167F864", Offset = "0x167F864", VA = "0x167F864")]
		public void WritePoly(Mesh mesh, string filename)
		{
		}

		[Token(Token = "0x6000623")]
		[Address(RVA = "0x16819C8", Offset = "0x16819C8", VA = "0x16819C8")]
		public void WritePoly(Mesh mesh, string filename, bool writeNodes)
		{
		}

		[Token(Token = "0x6000624")]
		[Address(RVA = "0x1682604", Offset = "0x1682604", VA = "0x1682604")]
		public void WriteEdges(Mesh mesh, string filename)
		{
		}

		[Token(Token = "0x6000625")]
		[Address(RVA = "0x1683194", Offset = "0x1683194", VA = "0x1683194")]
		public void WriteNeighbors(Mesh mesh, string filename)
		{
		}

		[Token(Token = "0x6000626")]
		[Address(RVA = "0x168378C", Offset = "0x168378C", VA = "0x168378C")]
		public TriangleWriter()
		{
		}
	}
}
namespace TriangleNet.Geometry
{
	[Token(Token = "0x2000112")]
	public class Contour
	{
		[Serializable]
		[Token(Token = "0x200039C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E7D38", Offset = "0x9E7D38")]
		private sealed class <>c
		{
			[Token(Token = "0x4001865")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001866")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Converter<Vertex, Point> <>9__12_0;

			[Token(Token = "0x600192F")]
			[Address(RVA = "0xE4A254", Offset = "0xE4A254", VA = "0xE4A254")]
			public <>c()
			{
			}

			[Token(Token = "0x6001930")]
			[Address(RVA = "0xE4A25C", Offset = "0xE4A25C", VA = "0xE4A25C")]
			internal Point <FindPointInPolygon>b__12_0(Vertex x)
			{
				return null;
			}
		}

		[Token(Token = "0x40006E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int marker;

		[Token(Token = "0x40006E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private bool convex;

		[Token(Token = "0x40006E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E9B00", Offset = "0x9E9B00")]
		private List<Vertex> <Points>k__BackingField;

		[Token(Token = "0x170000AF")]
		public List<Vertex> Points
		{
			[Token(Token = "0x6000628")]
			[Address(RVA = "0xE491BC", Offset = "0xE491BC", VA = "0xE491BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EF134", Offset = "0x9EF134")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000629")]
			[Address(RVA = "0xE491C4", Offset = "0xE491C4", VA = "0xE491C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EF144", Offset = "0x9EF144")]
			set
			{
			}
		}

		[Token(Token = "0x600062A")]
		[Address(RVA = "0xE491CC", Offset = "0xE491CC", VA = "0xE491CC")]
		public Contour(IEnumerable<Vertex> points)
		{
		}

		[Token(Token = "0x600062B")]
		[Address(RVA = "0xE49258", Offset = "0xE49258", VA = "0xE49258")]
		public Contour(IEnumerable<Vertex> points, int marker)
		{
		}

		[Token(Token = "0x600062C")]
		[Address(RVA = "0xE49208", Offset = "0xE49208", VA = "0xE49208")]
		public Contour(IEnumerable<Vertex> points, int marker, bool convex)
		{
		}

		[Token(Token = "0x600062D")]
		[Address(RVA = "0xE493DC", Offset = "0xE493DC", VA = "0xE493DC")]
		public List<ISegment> GetSegments()
		{
			return null;
		}

		[Token(Token = "0x600062E")]
		[Address(RVA = "0xE49618", Offset = "0xE49618", VA = "0xE49618")]
		public Point FindInteriorPoint(int limit = 5, double eps = 2E-05)
		{
			return null;
		}

		[Token(Token = "0x600062F")]
		[Address(RVA = "0xE492A0", Offset = "0xE492A0", VA = "0xE492A0")]
		private void AddPoints(IEnumerable<Vertex> points)
		{
		}

		[Token(Token = "0x6000630")]
		[Address(RVA = "0xE497CC", Offset = "0xE497CC", VA = "0xE497CC")]
		private static Point FindPointInPolygon(List<Vertex> contour, int limit, double eps)
		{
			return null;
		}

		[Token(Token = "0x6000631")]
		[Address(RVA = "0xE49EF8", Offset = "0xE49EF8", VA = "0xE49EF8")]
		private static bool IsPointInPolygon(Point point, List<Vertex> poly)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000113")]
	public class Edge : IEdge
	{
		[Token(Token = "0x40006E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E9B10", Offset = "0x9E9B10")]
		private int <P0>k__BackingField;

		[Token(Token = "0x40006E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E9B20", Offset = "0x9E9B20")]
		private int <P1>k__BackingField;

		[Token(Token = "0x40006E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E9B30", Offset = "0x9E9B30")]
		private int <Label>k__BackingField;

		[Token(Token = "0x170000B0")]
		public int P0
		{
			[Token(Token = "0x6000632")]
			[Address(RVA = "0xE4A264", Offset = "0xE4A264", VA = "0xE4A264", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EF154", Offset = "0x9EF154")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000633")]
			[Address(RVA = "0xE4A26C", Offset = "0xE4A26C", VA = "0xE4A26C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EF164", Offset = "0x9EF164")]
			private set
			{
			}
		}

		[Token(Token = "0x170000B1")]
		public int P1
		{
			[Token(Token = "0x6000634")]
			[Address(RVA = "0xE4A274", Offset = "0xE4A274", VA = "0xE4A274", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EF174", Offset = "0x9EF174")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000635")]
			[Address(RVA = "0xE4A27C", Offset = "0xE4A27C", VA = "0xE4A27C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EF184", Offset = "0x9EF184")]
			private set
			{
			}
		}

		[Token(Token = "0x170000B2")]
		public int Label
		{
			[Token(Token = "0x6000636")]
			[Address(RVA = "0xE4A284", Offset = "0xE4A284", VA = "0xE4A284", Slot = "6")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EF194", Offset = "0x9EF194")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000637")]
			[Address(RVA = "0xE4A28C", Offset = "0xE4A28C", VA = "0xE4A28C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EF1A4", Offset = "0x9EF1A4")]
			private set
			{
			}
		}

		[Token(Token = "0x6000638")]
		[Address(RVA = "0xE4A294", Offset = "0xE4A294", VA = "0xE4A294")]
		public Edge(int p0, int p1)
		{
		}

		[Token(Token = "0x6000639")]
		[Address(RVA = "0xE4A2D0", Offset = "0xE4A2D0", VA = "0xE4A2D0")]
		public Edge(int p0, int p1, int label)
		{
		}
	}
	[Token(Token = "0x2000114")]
	public static class ExtensionMethods
	{
		[Token(Token = "0x600063A")]
		[Address(RVA = "0xE4A310", Offset = "0xE4A310", VA = "0xE4A310")]
		public static IMesh Triangulate(this IPolygon polygon)
		{
			return null;
		}

		[Token(Token = "0x600063B")]
		[Address(RVA = "0xE4A388", Offset = "0xE4A388", VA = "0xE4A388")]
		public static IMesh Triangulate(this IPolygon polygon, ConstraintOptions options)
		{
			return null;
		}

		[Token(Token = "0x600063C")]
		[Address(RVA = "0xE4A40C", Offset = "0xE4A40C", VA = "0xE4A40C")]
		public static IMesh Triangulate(this IPolygon polygon, QualityOptions quality)
		{
			return null;
		}

		[Token(Token = "0x600063D")]
		[Address(RVA = "0xE4A490", Offset = "0xE4A490", VA = "0xE4A490")]
		public static IMesh Triangulate(this IPolygon polygon, ConstraintOptions options, QualityOptions quality)
		{
			return null;
		}

		[Token(Token = "0x600063E")]
		[Address(RVA = "0xE4A518", Offset = "0xE4A518", VA = "0xE4A518")]
		public static IMesh Triangulate(this IPolygon polygon, ConstraintOptions options, QualityOptions quality, ITriangulator triangulator)
		{
			return null;
		}

		[Token(Token = "0x600063F")]
		[Address(RVA = "0xE4A5B0", Offset = "0xE4A5B0", VA = "0xE4A5B0")]
		public static bool Contains(this ITriangle triangle, Point p)
		{
			return default(bool);
		}

		[Token(Token = "0x6000640")]
		[Address(RVA = "0xE4A5C8", Offset = "0xE4A5C8", VA = "0xE4A5C8")]
		public static bool Contains(this ITriangle triangle, double x, double y)
		{
			return default(bool);
		}

		[Token(Token = "0x6000641")]
		[Address(RVA = "0xE4A914", Offset = "0xE4A914", VA = "0xE4A914")]
		public static Rectangle Bounds(this ITriangle triangle)
		{
			return null;
		}

		[Token(Token = "0x6000642")]
		[Address(RVA = "0xE4A8E8", Offset = "0xE4A8E8", VA = "0xE4A8E8")]
		internal static double DotProduct(Point p, Point q)
		{
			return default(double);
		}
	}
	[Token(Token = "0x2000115")]
	public interface IEdge
	{
		[Token(Token = "0x170000B3")]
		int P0
		{
			[Token(Token = "0x6000643")]
			get;
		}

		[Token(Token = "0x170000B4")]
		int P1
		{
			[Token(Token = "0x6000644")]
			get;
		}

		[Token(Token = "0x170000B5")]
		int Label
		{
			[Token(Token = "0x6000645")]
			get;
		}
	}
	[Token(Token = "0x2000116")]
	public interface IPolygon
	{
		[Token(Token = "0x170000B6")]
		List<Vertex> Points
		{
			[Token(Token = "0x6000646")]
			get;
		}

		[Token(Token = "0x170000B7")]
		List<ISegment> Segments
		{
			[Token(Token = "0x6000647")]
			get;
		}

		[Token(Token = "0x170000B8")]
		List<Point> Holes
		{
			[Token(Token = "0x6000648")]
			get;
		}

		[Token(Token = "0x170000B9")]
		List<RegionPointer> Regions
		{
			[Token(Token = "0x6000649")]
			get;
		}

		[Token(Token = "0x170000BA")]
		bool HasPointMarkers
		{
			[Token(Token = "0x600064A")]
			get;
			[Token(Token = "0x600064B")]
			set;
		}

		[Token(Token = "0x170000BB")]
		bool HasSegmentMarkers
		{
			[Token(Token = "0x600064C")]
			get;
			[Token(Token = "0x600064D")]
			set;
		}

		[Token(Token = "0x600064E")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x9EF234", Offset = "0x9EF234")]
		void AddContour(IEnumerable<Vertex> points, int marker, bool hole, bool convex);

		[Token(Token = "0x600064F")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x9EF26C", Offset = "0x9EF26C")]
		void AddContour(IEnumerable<Vertex> points, int marker, Point hole);

		[Token(Token = "0x6000650")]
		Rectangle Bounds();

		[Token(Token = "0x6000651")]
		void Add(Vertex vertex);

		[Token(Token = "0x6000652")]
		void Add(ISegment segment, bool insert = false);

		[Token(Token = "0x6000653")]
		void Add(ISegment segment, int index);

		[Token(Token = "0x6000654")]
		void Add(Contour contour, bool hole = false);

		[Token(Token = "0x6000655")]
		void Add(Contour contour, Point hole);
	}
	[Token(Token = "0x2000117")]
	public interface ISegment : IEdge
	{
		[Token(Token = "0x6000656")]
		Vertex GetVertex(int index);

		[Token(Token = "0x6000657")]
		ITriangle GetTriangle(int index);
	}
	[Token(Token = "0x2000118")]
	public interface ITriangle
	{
		[Token(Token = "0x170000BC")]
		int ID
		{
			[Token(Token = "0x6000658")]
			get;
			[Token(Token = "0x6000659")]
			set;
		}

		[Token(Token = "0x170000BD")]
		int Label
		{
			[Token(Token = "0x600065A")]
			get;
			[Token(Token = "0x600065B")]
			set;
		}

		[Token(Token = "0x170000BE")]
		double Area
		{
			[Token(Token = "0x600065C")]
			get;
			[Token(Token = "0x600065D")]
			set;
		}

		[Token(Token = "0x600065E")]
		Vertex GetVertex(int index);

		[Token(Token = "0x600065F")]
		int GetVertexID(int index);

		[Token(Token = "0x6000660")]
		ITriangle GetNeighbor(int index);

		[Token(Token = "0x6000661")]
		int GetNeighborID(int index);

		[Token(Token = "0x6000662")]
		ISegment GetSegment(int index);
	}
	[Token(Token = "0x2000119")]
	public class Point : IComparable<Point>, IEquatable<Point>
	{
		[Token(Token = "0x40006E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal int id;

		[Token(Token = "0x40006E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal int label;

		[Token(Token = "0x40006E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal double x;

		[Token(Token = "0x40006EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal double y;

		[Token(Token = "0x40006EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal double z;

		[Token(Token = "0x170000BF")]
		public int ID
		{
			[Token(Token = "0x6000666")]
			[Address(RVA = "0xE4AB3C", Offset = "0xE4AB3C", VA = "0xE4AB3C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000667")]
			[Address(RVA = "0xE4AB44", Offset = "0xE4AB44", VA = "0xE4AB44")]
			set
			{
			}
		}

		[Token(Token = "0x170000C0")]
		public double X
		{
			[Token(Token = "0x6000668")]
			[Address(RVA = "0xE4AB4C", Offset = "0xE4AB4C", VA = "0xE4AB4C")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x6000669")]
			[Address(RVA = "0xE4AB54", Offset = "0xE4AB54", VA = "0xE4AB54")]
			set
			{
			}
		}

		[Token(Token = "0x170000C1")]
		public double Y
		{
			[Token(Token = "0x600066A")]
			[Address(RVA = "0xE4AB5C", Offset = "0xE4AB5C", VA = "0xE4AB5C")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x600066B")]
			[Address(RVA = "0xE4AB64", Offset = "0xE4AB64", VA = "0xE4AB64")]
			set
			{
			}
		}

		[Token(Token = "0x170000C2")]
		public double Z
		{
			[Token(Token = "0x600066C")]
			[Address(RVA = "0xE4AB6C", Offset = "0xE4AB6C", VA = "0xE4AB6C")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x600066D")]
			[Address(RVA = "0xE4AB74", Offset = "0xE4AB74", VA = "0xE4AB74")]
			set
			{
			}
		}

		[Token(Token = "0x170000C3")]
		public int Label
		{
			[Token(Token = "0x600066E")]
			[Address(RVA = "0xE4AB7C", Offset = "0xE4AB7C", VA = "0xE4AB7C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600066F")]
			[Address(RVA = "0xE4AB84", Offset = "0xE4AB84", VA = "0xE4AB84")]
			set
			{
			}
		}

		[Token(Token = "0x6000663")]
		[Address(RVA = "0xE49E74", Offset = "0xE49E74", VA = "0xE49E74")]
		public Point()
		{
		}

		[Token(Token = "0x6000664")]
		[Address(RVA = "0xE49790", Offset = "0xE49790", VA = "0xE49790")]
		public Point(double x, double y)
		{
		}

		[Token(Token = "0x6000665")]
		[Address(RVA = "0xE4AAFC", Offset = "0xE4AAFC", VA = "0xE4AAFC")]
		public Point(double x, double y, int label)
		{
		}

		[Token(Token = "0x6000670")]
		[Address(RVA = "0xE49B98", Offset = "0xE49B98", VA = "0xE49B98")]
		public static bool operator ==(Point a, Point b)
		{
			return default(bool);
		}

		[Token(Token = "0x6000671")]
		[Address(RVA = "0xE4ABBC", Offset = "0xE4ABBC", VA = "0xE4ABBC")]
		public static bool operator !=(Point a, Point b)
		{
			return default(bool);
		}

		[Token(Token = "0x6000672")]
		[Address(RVA = "0xE4AC08", Offset = "0xE4AC08", VA = "0xE4AC08", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6000673")]
		[Address(RVA = "0xE4AB8C", Offset = "0xE4AB8C", VA = "0xE4AB8C", Slot = "5")]
		public bool Equals(Point p)
		{
			return default(bool);
		}

		[Token(Token = "0x6000674")]
		[Address(RVA = "0xE4ACC0", Offset = "0xE4ACC0", VA = "0xE4ACC0", Slot = "4")]
		public int CompareTo(Point other)
		{
			return default(int);
		}

		[Token(Token = "0x6000675")]
		[Address(RVA = "0xE4AD24", Offset = "0xE4AD24", VA = "0xE4AD24", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6000676")]
		[Address(RVA = "0xE4AD70", Offset = "0xE4AD70", VA = "0xE4AD70", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x200011A")]
	public class Polygon : IPolygon
	{
		[Serializable]
		[Token(Token = "0x200039D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E7D48", Offset = "0x9E7D48")]
		private sealed class <>c
		{
			[Token(Token = "0x4001867")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001868")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Converter<Vertex, Point> <>9__27_0;

			[Token(Token = "0x6001932")]
			[Address(RVA = "0xE4B770", Offset = "0xE4B770", VA = "0xE4B770")]
			public <>c()
			{
			}

			[Token(Token = "0x6001933")]
			[Address(RVA = "0xE4B778", Offset = "0xE4B778", VA = "0xE4B778")]
			internal Point <Bounds>b__27_0(Vertex x)
			{
				return null;
			}
		}

		[Token(Token = "0x40006EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private List<Vertex> points;

		[Token(Token = "0x40006ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<Point> holes;

		[Token(Token = "0x40006EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<RegionPointer> regions;

		[Token(Token = "0x40006EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<ISegment> segments;

		[Token(Token = "0x40006F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E9B40", Offset = "0x9E9B40")]
		private bool <HasPointMarkers>k__BackingField;

		[Token(Token = "0x40006F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E9B50", Offset = "0x9E9B50")]
		private bool <HasSegmentMarkers>k__BackingField;

		[Token(Token = "0x170000C4")]
		public List<Vertex> Points
		{
			[Token(Token = "0x6000677")]
			[Address(RVA = "0xE4AE14", Offset = "0xE4AE14", VA = "0xE4AE14", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C5")]
		public List<Point> Holes
		{
			[Token(Token = "0x6000678")]
			[Address(RVA = "0xE4AE1C", Offset = "0xE4AE1C", VA = "0xE4AE1C", Slot = "6")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C6")]
		public List<RegionPointer> Regions
		{
			[Token(Token = "0x6000679")]
			[Address(RVA = "0xE4AE24", Offset = "0xE4AE24", VA = "0xE4AE24", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C7")]
		public List<ISegment> Segments
		{
			[Token(Token = "0x600067A")]
			[Address(RVA = "0xE4AE2C", Offset = "0xE4AE2C", VA = "0xE4AE2C", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C8")]
		public bool HasPointMarkers
		{
			[Token(Token = "0x600067B")]
			[Address(RVA = "0xE4AE34", Offset = "0xE4AE34", VA = "0xE4AE34", Slot = "8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EF2A4", Offset = "0x9EF2A4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600067C")]
			[Address(RVA = "0xE4AE3C", Offset = "0xE4AE3C", VA = "0xE4AE3C", Slot = "9")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EF2B4", Offset = "0x9EF2B4")]
			set
			{
			}
		}

		[Token(Token = "0x170000C9")]
		public bool HasSegmentMarkers
		{
			[Token(Token = "0x600067D")]
			[Address(RVA = "0xE4AE48", Offset = "0xE4AE48", VA = "0xE4AE48", Slot = "10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EF2C4", Offset = "0x9EF2C4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600067E")]
			[Address(RVA = "0xE4AE50", Offset = "0xE4AE50", VA = "0xE4AE50", Slot = "11")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EF2D4", Offset = "0x9EF2D4")]
			set
			{
			}
		}

		[Token(Token = "0x170000CA")]
		public int Count
		{
			[Token(Token = "0x600067F")]
			[Address(RVA = "0xE4AE5C", Offset = "0xE4AE5C", VA = "0xE4AE5C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6000680")]
		[Address(RVA = "0xE4AEAC", Offset = "0xE4AEAC", VA = "0xE4AEAC")]
		public Polygon()
		{
		}

		[Token(Token = "0x6000681")]
		[Address(RVA = "0xE4AFF4", Offset = "0xE4AFF4", VA = "0xE4AFF4")]
		public Polygon(int capacity)
		{
		}

		[Token(Token = "0x6000682")]
		[Address(RVA = "0xE4AEB8", Offset = "0xE4AEB8", VA = "0xE4AEB8")]
		public Polygon(int capacity, bool markers)
		{
		}

		[Token(Token = "0x6000683")]
		[Address(RVA = "0xE4B000", Offset = "0xE4B000", VA = "0xE4B000", Slot = "12")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x9EF2E4", Offset = "0x9EF2E4")]
		public void AddContour(IEnumerable<Vertex> points, int marker = 0, bool hole = false, bool convex = false)
		{
		}

		[Token(Token = "0x6000684")]
		[Address(RVA = "0xE4B170", Offset = "0xE4B170", VA = "0xE4B170", Slot = "13")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x9EF31C", Offset = "0x9EF31C")]
		public void AddContour(IEnumerable<Vertex> points, int marker, Point hole)
		{
		}

		[Token(Token = "0x6000685")]
		[Address(RVA = "0xE4B2BC", Offset = "0xE4B2BC", VA = "0xE4B2BC", Slot = "14")]
		public Rectangle Bounds()
		{
			return null;
		}

		[Token(Token = "0x6000686")]
		[Address(RVA = "0xE4B40C", Offset = "0xE4B40C", VA = "0xE4B40C", Slot = "15")]
		public void Add(Vertex vertex)
		{
		}

		[Token(Token = "0x6000687")]
		[Address(RVA = "0xE4B474", Offset = "0xE4B474", VA = "0xE4B474", Slot = "16")]
		public void Add(ISegment segment, bool insert = false)
		{
		}

		[Token(Token = "0x6000688")]
		[Address(RVA = "0xE4B60C", Offset = "0xE4B60C", VA = "0xE4B60C", Slot = "17")]
		public void Add(ISegment segment, int index)
		{
		}

		[Token(Token = "0x6000689")]
		[Address(RVA = "0xE4B0A0", Offset = "0xE4B0A0", VA = "0xE4B0A0", Slot = "18")]
		public void Add(Contour contour, bool hole = false)
		{
		}

		[Token(Token = "0x600068A")]
		[Address(RVA = "0xE4B208", Offset = "0xE4B208", VA = "0xE4B208", Slot = "19")]
		public void Add(Contour contour, Point hole)
		{
		}
	}
	[Token(Token = "0x200011B")]
	public class Rectangle
	{
		[Token(Token = "0x40006F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private double xmin;

		[Token(Token = "0x40006F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private double ymin;

		[Token(Token = "0x40006F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private double xmax;

		[Token(Token = "0x40006F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private double ymax;

		[Token(Token = "0x170000CB")]
		public double Left
		{
			[Token(Token = "0x600068E")]
			[Address(RVA = "0xE4B828", Offset = "0xE4B828", VA = "0xE4B828")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x170000CC")]
		public double Right
		{
			[Token(Token = "0x600068F")]
			[Address(RVA = "0xE4B830", Offset = "0xE4B830", VA = "0xE4B830")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x170000CD")]
		public double Bottom
		{
			[Token(Token = "0x6000690")]
			[Address(RVA = "0xE4B838", Offset = "0xE4B838", VA = "0xE4B838")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x170000CE")]
		public double Top
		{
			[Token(Token = "0x6000691")]
			[Address(RVA = "0xE4B840", Offset = "0xE4B840", VA = "0xE4B840")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x170000CF")]
		public double Width
		{
			[Token(Token = "0x6000692")]
			[Address(RVA = "0xE4B848", Offset = "0xE4B848", VA = "0xE4B848")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x170000D0")]
		public double Height
		{
			[Token(Token = "0x6000693")]
			[Address(RVA = "0xE4B858", Offset = "0xE4B858", VA = "0xE4B858")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x600068B")]
		[Address(RVA = "0xE49BE4", Offset = "0xE49BE4", VA = "0xE49BE4")]
		public Rectangle()
		{
		}

		[Token(Token = "0x600068C")]
		[Address(RVA = "0xE4B780", Offset = "0xE4B780", VA = "0xE4B780")]
		public Rectangle(Rectangle other)
		{
		}

		[Token(Token = "0x600068D")]
		[Address(RVA = "0xE4B7D4", Offset = "0xE4B7D4", VA = "0xE4B7D4")]
		public Rectangle(double x, double y, double width, double height)
		{
		}

		[Token(Token = "0x6000694")]
		[Address(RVA = "0xE4B868", Offset = "0xE4B868", VA = "0xE4B868")]
		public void Resize(double dx, double dy)
		{
		}

		[Token(Token = "0x6000695")]
		[Address(RVA = "0xE4AA28", Offset = "0xE4AA28", VA = "0xE4AA28")]
		public void Expand(Point p)
		{
		}

		[Token(Token = "0x6000696")]
		[Address(RVA = "0xE49C1C", Offset = "0xE49C1C", VA = "0xE49C1C")]
		public void Expand(IEnumerable<Point> points)
		{
		}

		[Token(Token = "0x6000697")]
		[Address(RVA = "0xE4B880", Offset = "0xE4B880", VA = "0xE4B880")]
		public void Expand(Rectangle other)
		{
		}

		[Token(Token = "0x6000698")]
		[Address(RVA = "0xE4B954", Offset = "0xE4B954", VA = "0xE4B954")]
		public bool Contains(double x, double y)
		{
			return default(bool);
		}

		[Token(Token = "0x6000699")]
		[Address(RVA = "0xE49EA4", Offset = "0xE49EA4", VA = "0xE49EA4")]
		public bool Contains(Point pt)
		{
			return default(bool);
		}

		[Token(Token = "0x600069A")]
		[Address(RVA = "0xE4B990", Offset = "0xE4B990", VA = "0xE4B990")]
		public bool Contains(Rectangle other)
		{
			return default(bool);
		}

		[Token(Token = "0x600069B")]
		[Address(RVA = "0xE4B9EC", Offset = "0xE4B9EC", VA = "0xE4B9EC")]
		public bool Intersects(Rectangle other)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200011C")]
	public class RegionPointer
	{
		[Token(Token = "0x40006F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal Point point;

		[Token(Token = "0x40006F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal int id;

		[Token(Token = "0x40006F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal double area;

		[Token(Token = "0x170000D1")]
		public double Area
		{
			[Token(Token = "0x600069C")]
			[Address(RVA = "0xE4BA48", Offset = "0xE4BA48", VA = "0xE4BA48")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x600069D")]
			[Address(RVA = "0xE4BA50", Offset = "0xE4BA50", VA = "0xE4BA50")]
			set
			{
			}
		}

		[Token(Token = "0x600069E")]
		[Address(RVA = "0xE4BAE4", Offset = "0xE4BAE4", VA = "0xE4BAE4")]
		public RegionPointer(double x, double y, int id)
		{
		}

		[Token(Token = "0x600069F")]
		[Address(RVA = "0xE4BAEC", Offset = "0xE4BAEC", VA = "0xE4BAEC")]
		public RegionPointer(double x, double y, int id, double area)
		{
		}
	}
	[Token(Token = "0x200011D")]
	public class Segment : ISegment, IEdge
	{
		[Token(Token = "0x40006F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Vertex v0;

		[Token(Token = "0x40006FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Vertex v1;

		[Token(Token = "0x40006FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int label;

		[Token(Token = "0x170000D2")]
		public int Label
		{
			[Token(Token = "0x60006A0")]
			[Address(RVA = "0xE4BB9C", Offset = "0xE4BB9C", VA = "0xE4BB9C", Slot = "8")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60006A1")]
			[Address(RVA = "0xE4BBA4", Offset = "0xE4BBA4", VA = "0xE4BBA4")]
			set
			{
			}
		}

		[Token(Token = "0x170000D3")]
		public int P0
		{
			[Token(Token = "0x60006A2")]
			[Address(RVA = "0xE4BBAC", Offset = "0xE4BBAC", VA = "0xE4BBAC", Slot = "6")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170000D4")]
		public int P1
		{
			[Token(Token = "0x60006A3")]
			[Address(RVA = "0xE4BBC8", Offset = "0xE4BBC8", VA = "0xE4BBC8", Slot = "7")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x60006A4")]
		[Address(RVA = "0xE4BBE4", Offset = "0xE4BBE4", VA = "0xE4BBE4")]
		public Segment(Vertex v0, Vertex v1)
		{
		}

		[Token(Token = "0x60006A5")]
		[Address(RVA = "0xE495BC", Offset = "0xE495BC", VA = "0xE495BC")]
		public Segment(Vertex v0, Vertex v1, int label)
		{
		}

		[Token(Token = "0x60006A6")]
		[Address(RVA = "0xE4BBEC", Offset = "0xE4BBEC", VA = "0xE4BBEC", Slot = "4")]
		public Vertex GetVertex(int index)
		{
			return null;
		}

		[Token(Token = "0x60006A7")]
		[Address(RVA = "0xE4BC84", Offset = "0xE4BC84", VA = "0xE4BC84", Slot = "5")]
		public ITriangle GetTriangle(int index)
		{
			return null;
		}
	}
	[Token(Token = "0x200011E")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x9E6C98", Offset = "0x9E6C98")]
	public class Vertex : Point
	{
		[Token(Token = "0x40006FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal int hash;

		[Token(Token = "0x40006FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		internal VertexType type;

		[Token(Token = "0x40006FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal Otri tri;

		[Token(Token = "0x170000D5")]
		public VertexType Type
		{
			[Token(Token = "0x60006AB")]
			[Address(RVA = "0xE4BD9C", Offset = "0xE4BD9C", VA = "0xE4BD9C")]
			get
			{
				return default(VertexType);
			}
		}

		[Token(Token = "0x170000D6")]
		public double Item
		{
			[Token(Token = "0x60006AC")]
			[Address(RVA = "0xE4BDA4", Offset = "0xE4BDA4", VA = "0xE4BDA4")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x60006A8")]
		[Address(RVA = "0xE4BCE4", Offset = "0xE4BCE4", VA = "0xE4BCE4")]
		public Vertex()
		{
		}

		[Token(Token = "0x60006A9")]
		[Address(RVA = "0xE4BD5C", Offset = "0xE4BD5C", VA = "0xE4BD5C")]
		public Vertex(double x, double y)
		{
		}

		[Token(Token = "0x60006AA")]
		[Address(RVA = "0xE4BD18", Offset = "0xE4BD18", VA = "0xE4BD18")]
		public Vertex(double x, double y, int mark)
		{
		}

		[Token(Token = "0x60006AD")]
		[Address(RVA = "0xE4BE48", Offset = "0xE4BE48", VA = "0xE4BE48", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}
	}
}
namespace BigCatch
{
	[Token(Token = "0x200011F")]
	[ExecuteInEditMode]
	public class MobileBloom : MonoBehaviour
	{
		[Token(Token = "0x40006FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9E9B60", Offset = "0x9E9B60")]
		public float BlurAmount;

		[Token(Token = "0x4000700")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Color BloomColor;

		[Token(Token = "0x4000701")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9E9B78", Offset = "0x9E9B78")]
		public float BloomAmount;

		[Token(Token = "0x4000702")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9E9B90", Offset = "0x9E9B90")]
		public float BloomThreshold;

		[Token(Token = "0x4000703")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9E9BA8", Offset = "0x9E9BA8")]
		public float BloomSoftness;

		[Token(Token = "0x4000704")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly int blurAmountString;

		[Token(Token = "0x4000705")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static readonly int bloomColorString;

		[Token(Token = "0x4000706")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly int blDataString;

		[Token(Token = "0x4000707")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private static readonly int bloomTexString;

		[Token(Token = "0x4000708")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Material material;

		[Token(Token = "0x4000709")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int numberOfPasses;

		[Token(Token = "0x400070A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float knee;

		[Token(Token = "0x400070B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private RenderTextureDescriptor half;

		[Token(Token = "0x400070C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private RenderTextureDescriptor quarter;

		[Token(Token = "0x400070D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private RenderTextureDescriptor eighths;

		[Token(Token = "0x400070E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private RenderTextureDescriptor sixths;

		[Token(Token = "0x60006AE")]
		[Address(RVA = "0xD522EC", Offset = "0xD522EC", VA = "0xD522EC")]
		private void Awake()
		{
		}

		[Token(Token = "0x60006AF")]
		[Address(RVA = "0xD52380", Offset = "0xD52380", VA = "0xD52380")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60006B0")]
		[Address(RVA = "0xD52414", Offset = "0xD52414", VA = "0xD52414")]
		private void Player_OnLocationChanged(LocationSO locationSO, bool comingFromShip)
		{
		}

		[Token(Token = "0x60006B1")]
		[Address(RVA = "0xD52430", Offset = "0xD52430", VA = "0xD52430")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x60006B2")]
		[Address(RVA = "0xD52E88", Offset = "0xD52E88", VA = "0xD52E88")]
		public MobileBloom()
		{
		}
	}
	[Token(Token = "0x2000120")]
	public class SchoolChild : MonoBehaviour
	{
		[Token(Token = "0x400070F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public SchoolController _spawner;

		[Token(Token = "0x4000710")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Vector3 _wayPoint;

		[Token(Token = "0x4000711")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[HideInInspector]
		public float _speed;

		[Token(Token = "0x4000712")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float _stuckCounter;

		[Token(Token = "0x4000713")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float _damping;

		[Token(Token = "0x4000714")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Transform _model;

		[Token(Token = "0x4000715")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float _targetSpeed;

		[Token(Token = "0x4000716")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float tParam;

		[Token(Token = "0x4000717")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float _rotateCounterR;

		[Token(Token = "0x4000718")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float _rotateCounterL;

		[Token(Token = "0x4000719")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Transform _scanner;

		[Token(Token = "0x400071A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool _scan;

		[Token(Token = "0x400071B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int _updateNextSeed;

		[Token(Token = "0x400071C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private int _updateSeed;

		[Token(Token = "0x400071D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[HideInInspector]
		public Transform _cacheTransform;

		[Token(Token = "0x60006B4")]
		[Address(RVA = "0xCED5A0", Offset = "0xCED5A0", VA = "0xCED5A0")]
		public void OnEnable()
		{
		}

		[Token(Token = "0x60006B5")]
		[Address(RVA = "0xCEE1C4", Offset = "0xCEE1C4", VA = "0xCEE1C4")]
		public void OnDisable()
		{
		}

		[Token(Token = "0x60006B6")]
		[Address(RVA = "0xCEE200", Offset = "0xCEE200", VA = "0xCEE200")]
		public void Update()
		{
		}

		[Token(Token = "0x60006B7")]
		[Address(RVA = "0xCEE108", Offset = "0xCEE108", VA = "0xCEE108")]
		public void FrameSkipSeedInit()
		{
		}

		[Token(Token = "0x60006B8")]
		[Address(RVA = "0xCEDF44", Offset = "0xCEDF44", VA = "0xCEDF44")]
		public void CheckForBubblesThenInvoke()
		{
		}

		[Token(Token = "0x60006B9")]
		[Address(RVA = "0xCEEA70", Offset = "0xCEEA70", VA = "0xCEEA70")]
		public void EmitBubbles()
		{
		}

		[Token(Token = "0x60006BA")]
		[Address(RVA = "0xCED928", Offset = "0xCED928", VA = "0xCED928")]
		public void LocateRequiredChildren()
		{
		}

		[Token(Token = "0x60006BB")]
		[Address(RVA = "0xCEDD68", Offset = "0xCEDD68", VA = "0xCEDD68")]
		public void SkewModelForLessUniformedMovement()
		{
		}

		[Token(Token = "0x60006BC")]
		[Address(RVA = "0xCED880", Offset = "0xCED880", VA = "0xCED880")]
		public void SetRandomScale()
		{
		}

		[Token(Token = "0x60006BD")]
		[Address(RVA = "0xCEDAF4", Offset = "0xCEDAF4", VA = "0xCEDAF4")]
		public void RandomizeStartAnimationFrame()
		{
		}

		[Token(Token = "0x60006BE")]
		[Address(RVA = "0xCEE030", Offset = "0xCEE030", VA = "0xCEE030")]
		public void GetStartPos()
		{
		}

		[Token(Token = "0x60006BF")]
		[Address(RVA = "0xCEEABC", Offset = "0xCEEABC", VA = "0xCEEABC")]
		public Vector3 findWaypoint()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60006C0")]
		[Address(RVA = "0xCEE78C", Offset = "0xCEE78C", VA = "0xCEE78C")]
		public void RayCastToPushAwayFromObstacles()
		{
		}

		[Token(Token = "0x60006C1")]
		[Address(RVA = "0xCEEC4C", Offset = "0xCEEC4C", VA = "0xCEEC4C")]
		public void RayCastToPushAwayFromObstaclesCheckForCollision()
		{
		}

		[Token(Token = "0x60006C2")]
		[Address(RVA = "0xCEEBAC", Offset = "0xCEEBAC", VA = "0xCEEBAC")]
		public void RotateScanner()
		{
		}

		[Token(Token = "0x60006C3")]
		[Address(RVA = "0xCEEF7C", Offset = "0xCEEF7C", VA = "0xCEEF7C")]
		public bool Avoidance()
		{
			return default(bool);
		}

		[Token(Token = "0x60006C4")]
		[Address(RVA = "0xCEE60C", Offset = "0xCEE60C", VA = "0xCEE60C")]
		public void ForwardMovement()
		{
		}

		[Token(Token = "0x60006C5")]
		[Address(RVA = "0xCEE3A8", Offset = "0xCEE3A8", VA = "0xCEE3A8")]
		public void RotationBasedOnWaypointOrAvoidance()
		{
		}

		[Token(Token = "0x60006C6")]
		[Address(RVA = "0xCEE274", Offset = "0xCEE274", VA = "0xCEE274")]
		public void CheckForDistanceToWaypoint()
		{
		}

		[Token(Token = "0x60006C7")]
		[Address(RVA = "0xCEF918", Offset = "0xCEF918", VA = "0xCEF918")]
		public void CheckIfThisShouldTriggerNewFlockWaypoint()
		{
		}

		[Token(Token = "0x60006C8")]
		[Address(RVA = "0xCEF868", Offset = "0xCEF868", VA = "0xCEF868")]
		public static float ClampAngle(float angle, float min, float max)
		{
			return default(float);
		}

		[Token(Token = "0x60006C9")]
		[Address(RVA = "0xCEE7D0", Offset = "0xCEE7D0", VA = "0xCEE7D0")]
		public void SetAnimationSpeed()
		{
		}

		[Token(Token = "0x60006CA")]
		[Address(RVA = "0xCEDE44", Offset = "0xCEDE44", VA = "0xCEDE44")]
		public void Wander(float delay)
		{
		}

		[Token(Token = "0x60006CB")]
		[Address(RVA = "0xCEDF18", Offset = "0xCEDF18", VA = "0xCEDF18")]
		public void SetRandomWaypoint()
		{
		}

		[Token(Token = "0x60006CC")]
		[Address(RVA = "0xCEFAE0", Offset = "0xCEFAE0", VA = "0xCEFAE0")]
		public SchoolChild()
		{
		}
	}
	[Token(Token = "0x2000121")]
	public class SchoolController : MonoBehaviour
	{
		[Token(Token = "0x400071E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SpawnPool _childPool;

		[Token(Token = "0x400071F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<Transform> _childPrefab;

		[Token(Token = "0x4000720")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool _groupChildToNewTransform;

		[Token(Token = "0x4000721")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform _groupTransform;

		[Token(Token = "0x4000722")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string _groupName;

		[Token(Token = "0x4000723")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool _groupChildToSchool;

		[Token(Token = "0x4000724")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public int _childAmount;

		[Token(Token = "0x4000725")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float _spawnSphere;

		[Token(Token = "0x4000726")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float _spawnSphereDepth;

		[Token(Token = "0x4000727")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float _spawnSphereHeight;

		[Token(Token = "0x4000728")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float _childSpeedMultipler;

		[Token(Token = "0x4000729")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float _minSpeed;

		[Token(Token = "0x400072A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float _maxSpeed;

		[Token(Token = "0x400072B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public AnimationCurve _speedCurveMultiplier;

		[Token(Token = "0x400072C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public float _minScale;

		[Token(Token = "0x400072D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public float _maxScale;

		[Token(Token = "0x400072E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public float _minDamping;

		[Token(Token = "0x400072F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public float _maxDamping;

		[Token(Token = "0x4000730")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public float _waypointDistance;

		[Token(Token = "0x4000731")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public float _minAnimationSpeed;

		[Token(Token = "0x4000732")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public float _maxAnimationSpeed;

		[Token(Token = "0x4000733")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public float _randomPositionTimerMax;

		[Token(Token = "0x4000734")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public float _randomPositionTimerMin;

		[Token(Token = "0x4000735")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public float _acceleration;

		[Token(Token = "0x4000736")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public float _brake;

		[Token(Token = "0x4000737")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public float _positionSphere;

		[Token(Token = "0x4000738")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public float _positionSphereDepth;

		[Token(Token = "0x4000739")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public float _positionSphereHeight;

		[Token(Token = "0x400073A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public bool _childTriggerPos;

		[Token(Token = "0x400073B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA1")]
		public bool _forceChildWaypoints;

		[Token(Token = "0x400073C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA2")]
		public bool _autoRandomPosition;

		[Token(Token = "0x400073D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		public float _forcedRandomDelay;

		[Token(Token = "0x400073E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public float _schoolSpeed;

		[Token(Token = "0x400073F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public List<SchoolChild> _roamers;

		[Token(Token = "0x4000740")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public Vector3 _posBuffer;

		[Token(Token = "0x4000741")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		public Vector3 _posOffset;

		[Token(Token = "0x4000742")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public bool _avoidance;

		[Token(Token = "0x4000743")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		public float _avoidAngle;

		[Token(Token = "0x4000744")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public float _avoidDistance;

		[Token(Token = "0x4000745")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		public float _avoidSpeed;

		[Token(Token = "0x4000746")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public float _stopDistance;

		[Token(Token = "0x4000747")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		public float _stopSpeedMultiplier;

		[Token(Token = "0x4000748")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public LayerMask _avoidanceMask;

		[Token(Token = "0x4000749")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		public bool _push;

		[Token(Token = "0x400074A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public float _pushDistance;

		[Token(Token = "0x400074B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		public float _pushForce;

		[Token(Token = "0x400074C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public SchoolBubbles _bubbles;

		[Token(Token = "0x400074D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public int _updateDivisor;

		[Token(Token = "0x400074E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		public float _newDelta;

		[Token(Token = "0x400074F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public int _updateCounter;

		[Token(Token = "0x4000750")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		public int _activeChildren;

		[Token(Token = "0x60006CE")]
		[Address(RVA = "0xCEFB04", Offset = "0xCEFB04", VA = "0xCEFB04")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60006CF")]
		[Address(RVA = "0xCEFDDC", Offset = "0xCEFDDC", VA = "0xCEFDDC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60006D0")]
		[Address(RVA = "0xCEFDE0", Offset = "0xCEFDE0", VA = "0xCEFDE0")]
		public void Update()
		{
		}

		[Token(Token = "0x60006D1")]
		[Address(RVA = "0xCEFEE8", Offset = "0xCEFEE8", VA = "0xCEFEE8")]
		public void InstantiateGroup()
		{
		}

		[Token(Token = "0x60006D2")]
		[Address(RVA = "0xCEFC18", Offset = "0xCEFC18", VA = "0xCEFC18")]
		public void AddFish(int amount)
		{
		}

		[Token(Token = "0x60006D3")]
		[Address(RVA = "0xCF0044", Offset = "0xCF0044", VA = "0xCF0044")]
		public void AddChildToParent(Transform obj)
		{
		}

		[Token(Token = "0x60006D4")]
		[Address(RVA = "0xCF00A4", Offset = "0xCF00A4", VA = "0xCF00A4")]
		public void RemoveFish(int amount)
		{
		}

		[Token(Token = "0x60006D5")]
		[Address(RVA = "0xCEFE54", Offset = "0xCEFE54", VA = "0xCEFE54")]
		public void UpdateFishAmount()
		{
		}

		[Token(Token = "0x60006D6")]
		[Address(RVA = "0xCF016C", Offset = "0xCF016C", VA = "0xCF016C")]
		public void Reset()
		{
		}

		[Token(Token = "0x60006D7")]
		[Address(RVA = "0xCEF93C", Offset = "0xCEF93C", VA = "0xCEF93C")]
		public void SetRandomWaypointPosition()
		{
		}

		[Token(Token = "0x60006D8")]
		[Address(RVA = "0xCF02A4", Offset = "0xCF02A4", VA = "0xCF02A4")]
		public void AutoRandomWaypointPosition()
		{
		}

		[Token(Token = "0x60006D9")]
		[Address(RVA = "0xCEFDD0", Offset = "0xCEFDD0", VA = "0xCEFDD0")]
		public float RandomWaypointTime()
		{
			return default(float);
		}

		[Token(Token = "0x60006DA")]
		[Address(RVA = "0xCF0330", Offset = "0xCF0330", VA = "0xCF0330")]
		public void OnDrawGizmos()
		{
		}

		[Token(Token = "0x60006DB")]
		[Address(RVA = "0xCF05A4", Offset = "0xCF05A4", VA = "0xCF05A4")]
		public SchoolController()
		{
		}
	}
	[Token(Token = "0x2000122")]
	public class PopDissolve : MonoBehaviour
	{
		[Token(Token = "0x200039E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E7D58", Offset = "0x9E7D58")]
		private sealed class <HideRenderers>d__10 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001869")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400186A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400186B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PopDissolve <>4__this;

			[Token(Token = "0x17000231")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001937")]
				[Address(RVA = "0xC655E4", Offset = "0xC655E4", VA = "0xC655E4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000232")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001939")]
				[Address(RVA = "0xC6564C", Offset = "0xC6564C", VA = "0xC6564C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001934")]
			[Address(RVA = "0xC64E8C", Offset = "0xC64E8C", VA = "0xC64E8C")]
			[DebuggerHidden]
			public <HideRenderers>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x6001935")]
			[Address(RVA = "0xC654D4", Offset = "0xC654D4", VA = "0xC654D4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001936")]
			[Address(RVA = "0xC654D8", Offset = "0xC654D8", VA = "0xC654D8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001938")]
			[Address(RVA = "0xC655EC", Offset = "0xC655EC", VA = "0xC655EC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200039F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E7D68", Offset = "0x9E7D68")]
		private sealed class <DissolveFX>d__11 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400186C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400186D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400186E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float init;

			[Token(Token = "0x400186F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public float target;

			[Token(Token = "0x4001870")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float speed;

			[Token(Token = "0x4001871")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public PopDissolve <>4__this;

			[Token(Token = "0x4001872")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <inital>5__2;

			[Token(Token = "0x4001873")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <goal>5__3;

			[Token(Token = "0x4001874")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private float <currentTime>5__4;

			[Token(Token = "0x4001875")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			private float <duration>5__5;

			[Token(Token = "0x17000233")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600193D")]
				[Address(RVA = "0xC65464", Offset = "0xC65464", VA = "0xC65464", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000234")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600193F")]
				[Address(RVA = "0xC654CC", Offset = "0xC654CC", VA = "0xC654CC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600193A")]
			[Address(RVA = "0xC64F58", Offset = "0xC64F58", VA = "0xC64F58")]
			[DebuggerHidden]
			public <DissolveFX>d__11(int <>1__state)
			{
			}

			[Token(Token = "0x600193B")]
			[Address(RVA = "0xC652C4", Offset = "0xC652C4", VA = "0xC652C4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600193C")]
			[Address(RVA = "0xC652C8", Offset = "0xC652C8", VA = "0xC652C8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600193E")]
			[Address(RVA = "0xC6546C", Offset = "0xC6546C", VA = "0xC6546C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20003A0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E7D78", Offset = "0x9E7D78")]
		private sealed class <ChangeRenderers>d__12 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001876")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001877")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001878")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float delay;

			[Token(Token = "0x4001879")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public PopDissolve <>4__this;

			[Token(Token = "0x400187A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public bool state;

			[Token(Token = "0x17000235")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001943")]
				[Address(RVA = "0xC65254", Offset = "0xC65254", VA = "0xC65254", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000236")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001945")]
				[Address(RVA = "0xC652BC", Offset = "0xC652BC", VA = "0xC652BC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001940")]
			[Address(RVA = "0xC65024", Offset = "0xC65024", VA = "0xC65024")]
			[DebuggerHidden]
			public <ChangeRenderers>d__12(int <>1__state)
			{
			}

			[Token(Token = "0x6001941")]
			[Address(RVA = "0xC65134", Offset = "0xC65134", VA = "0xC65134", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001942")]
			[Address(RVA = "0xC65138", Offset = "0xC65138", VA = "0xC65138", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001944")]
			[Address(RVA = "0xC6525C", Offset = "0xC6525C", VA = "0xC6525C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20003A1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E7D88", Offset = "0x9E7D88")]
		private sealed class <PlayAnimation>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400187B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400187C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400187D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float sec;

			[Token(Token = "0x400187E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public PopDissolve <>4__this;

			[Token(Token = "0x400187F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public string clip;

			[Token(Token = "0x17000237")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001949")]
				[Address(RVA = "0xC65724", Offset = "0xC65724", VA = "0xC65724", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000238")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600194B")]
				[Address(RVA = "0xC6578C", Offset = "0xC6578C", VA = "0xC6578C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001946")]
			[Address(RVA = "0xC650F8", Offset = "0xC650F8", VA = "0xC650F8")]
			[DebuggerHidden]
			public <PlayAnimation>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x6001947")]
			[Address(RVA = "0xC65654", Offset = "0xC65654", VA = "0xC65654", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001948")]
			[Address(RVA = "0xC65658", Offset = "0xC65658", VA = "0xC65658", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600194A")]
			[Address(RVA = "0xC6572C", Offset = "0xC6572C", VA = "0xC6572C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000751")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject popAvatar;

		[Token(Token = "0x4000752")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SkinnedMeshRenderer[] dissolveMats;

		[Token(Token = "0x4000753")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool isActive;

		[Token(Token = "0x4000754")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Animator animator;

		[Token(Token = "0x4000755")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public SkinnedMeshRenderer[] restRenderers;

		[Token(Token = "0x4000756")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public SkinnedMeshRenderer[] allRenderers;

		[Token(Token = "0x4000757")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float speed;

		[Token(Token = "0x60006DC")]
		[Address(RVA = "0xC64B64", Offset = "0xC64B64", VA = "0xC64B64")]
		private void Awake()
		{
		}

		[Token(Token = "0x60006DD")]
		[Address(RVA = "0xC6493C", Offset = "0xC6493C", VA = "0xC6493C")]
		public void CheckTeleport(bool state)
		{
		}

		[Token(Token = "0x60006DE")]
		[Address(RVA = "0xC64BF8", Offset = "0xC64BF8", VA = "0xC64BF8")]
		public void HidePopRenderers()
		{
		}

		[Token(Token = "0x60006DF")]
		[Address(RVA = "0xC64E10", Offset = "0xC64E10", VA = "0xC64E10")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9EF354", Offset = "0x9EF354")]
		private IEnumerator HideRenderers()
		{
			return null;
		}

		[Token(Token = "0x60006E0")]
		[Address(RVA = "0xC64EB8", Offset = "0xC64EB8", VA = "0xC64EB8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9EF3B8", Offset = "0x9EF3B8")]
		private IEnumerator DissolveFX(float init, float target, float speed)
		{
			return null;
		}

		[Token(Token = "0x60006E1")]
		[Address(RVA = "0xC64F84", Offset = "0xC64F84", VA = "0xC64F84")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9EF41C", Offset = "0x9EF41C")]
		private IEnumerator ChangeRenderers(float delay, string clip, bool state)
		{
			return null;
		}

		[Token(Token = "0x60006E2")]
		[Address(RVA = "0xC65050", Offset = "0xC65050", VA = "0xC65050")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9EF480", Offset = "0x9EF480")]
		private IEnumerator PlayAnimation(string clip, float sec)
		{
			return null;
		}

		[Token(Token = "0x60006E3")]
		[Address(RVA = "0xC64C24", Offset = "0xC64C24", VA = "0xC64C24")]
		public void TeleportOut()
		{
		}

		[Token(Token = "0x60006E4")]
		[Address(RVA = "0xC64CD0", Offset = "0xC64CD0", VA = "0xC64CD0")]
		public void TeleportIn()
		{
		}

		[Token(Token = "0x60006E5")]
		[Address(RVA = "0xC65124", Offset = "0xC65124", VA = "0xC65124")]
		public PopDissolve()
		{
		}
	}
	[Token(Token = "0x2000123")]
	public class AcitvateDebugOptions : MonoBehaviour
	{
		[Token(Token = "0x4000758")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject[] objectsToDisable;

		[Token(Token = "0x60006E6")]
		[Address(RVA = "0xCAE0F0", Offset = "0xCAE0F0", VA = "0xCAE0F0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60006E7")]
		[Address(RVA = "0xCAE1E8", Offset = "0xCAE1E8", VA = "0xCAE1E8")]
		public AcitvateDebugOptions()
		{
		}
	}
	[Token(Token = "0x2000124")]
	public class ActivateDirections : MonoBehaviour
	{
		[Token(Token = "0x4000759")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ArrowSnapCollider[] arrows;

		[Token(Token = "0x60006E8")]
		[Address(RVA = "0xCAE1F0", Offset = "0xCAE1F0", VA = "0xCAE1F0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60006E9")]
		[Address(RVA = "0xCAE2EC", Offset = "0xCAE2EC", VA = "0xCAE2EC")]
		public ActivateDirections()
		{
		}
	}
	[Token(Token = "0x2000125")]
	public class AmbientAnimationController : MonoBehaviour
	{
		[Token(Token = "0x20003A2")]
		public enum SelectionMethod
		{
			[Token(Token = "0x4001881")]
			Random,
			[Token(Token = "0x4001882")]
			Sequential
		}

		[Token(Token = "0x400075A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LocationSO location;

		[Token(Token = "0x400075B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<GameObject> ambientAnimations;

		[Token(Token = "0x400075C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SelectionMethod selectionMethod;

		[Token(Token = "0x60006EA")]
		[Address(RVA = "0xCAF27C", Offset = "0xCAF27C", VA = "0xCAF27C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60006EB")]
		[Address(RVA = "0xCAF414", Offset = "0xCAF414", VA = "0xCAF414")]
		private int ReadAmbientAnimationIndex()
		{
			return default(int);
		}

		[Token(Token = "0x60006EC")]
		[Address(RVA = "0xCAF520", Offset = "0xCAF520", VA = "0xCAF520")]
		private void WriteAmbientAnimationIndex(int idx)
		{
		}

		[Token(Token = "0x60006ED")]
		[Address(RVA = "0xCAF62C", Offset = "0xCAF62C", VA = "0xCAF62C")]
		public AmbientAnimationController()
		{
		}
	}
	[Token(Token = "0x2000126")]
	public class AquariumController : MonoBehaviour
	{
		[Token(Token = "0x20003A3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E7D98", Offset = "0x9E7D98")]
		private sealed class <Reset>d__21 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001883")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001884")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001885")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public AquariumController <>4__this;

			[Token(Token = "0x4001886")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private AsyncOperation <unload>5__2;

			[Token(Token = "0x17000239")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600194F")]
				[Address(RVA = "0xCB135C", Offset = "0xCB135C", VA = "0xCB135C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700023A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001951")]
				[Address(RVA = "0xCB13C4", Offset = "0xCB13C4", VA = "0xCB13C4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600194C")]
			[Address(RVA = "0xCB0C90", Offset = "0xCB0C90", VA = "0xCB0C90")]
			[DebuggerHidden]
			public <Reset>d__21(int <>1__state)
			{
			}

			[Token(Token = "0x600194D")]
			[Address(RVA = "0xCB119C", Offset = "0xCB119C", VA = "0xCB119C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600194E")]
			[Address(RVA = "0xCB11A0", Offset = "0xCB11A0", VA = "0xCB11A0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001950")]
			[Address(RVA = "0xCB1364", Offset = "0xCB1364", VA = "0xCB1364", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20003A4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E7DA8", Offset = "0x9E7DA8")]
		private sealed class <LoadPreset>d__22 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001887")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001888")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001889")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public AquariumController <>4__this;

			[Token(Token = "0x400188A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public int index;

			[Token(Token = "0x400188B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private AquariumPreset <preset>5__2;

			[Token(Token = "0x1700023B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001955")]
				[Address(RVA = "0xCB112C", Offset = "0xCB112C", VA = "0xCB112C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700023C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001957")]
				[Address(RVA = "0xCB1194", Offset = "0xCB1194", VA = "0xCB1194", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001952")]
			[Address(RVA = "0xCB0CBC", Offset = "0xCB0CBC", VA = "0xCB0CBC")]
			[DebuggerHidden]
			public <LoadPreset>d__22(int <>1__state)
			{
			}

			[Token(Token = "0x6001953")]
			[Address(RVA = "0xCB0D94", Offset = "0xCB0D94", VA = "0xCB0D94", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001954")]
			[Address(RVA = "0xCB0D98", Offset = "0xCB0D98", VA = "0xCB0D98", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001956")]
			[Address(RVA = "0xCB1134", Offset = "0xCB1134", VA = "0xCB1134", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400075D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static AquariumController Instance;

		[Token(Token = "0x400075E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AquariumControllerUI aquaCtrlUI;

		[Token(Token = "0x400075F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AquariumControllerMinimap aquaCtrlMinimap;

		[Token(Token = "0x4000760")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public BoidManager boidManager;

		[Token(Token = "0x4000761")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public DecorationSlotController[] decorationSlots;

		[Token(Token = "0x4000762")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public DecorationSO[] decorations;

		[Token(Token = "0x4000763")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Transform diorama;

		[Token(Token = "0x4000764")]
		public const int maxNumberFish = 40;

		[Token(Token = "0x4000765")]
		public const int maxNumberDecos = 30;

		[Token(Token = "0x4000766")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public SpawnPool decoPool;

		[Token(Token = "0x4000767")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int presetIndex;

		[Token(Token = "0x4000768")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private bool resetComplete;

		[Token(Token = "0x60006EE")]
		[Address(RVA = "0xCAF778", Offset = "0xCAF778", VA = "0xCAF778")]
		private void Awake()
		{
		}

		[Token(Token = "0x60006EF")]
		[Address(RVA = "0xCAFD80", Offset = "0xCAFD80", VA = "0xCAFD80")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60006F0")]
		[Address(RVA = "0xCB0290", Offset = "0xCB0290", VA = "0xCB0290")]
		private void Start()
		{
		}

		[Token(Token = "0x60006F1")]
		[Address(RVA = "0xCB039C", Offset = "0xCB039C", VA = "0xCB039C")]
		private void UI_AquariumController_OnAquariumPresetSelected(int index)
		{
		}

		[Token(Token = "0x60006F2")]
		[Address(RVA = "0xCB051C", Offset = "0xCB051C", VA = "0xCB051C")]
		private void UI_AquariumController_OnAquariumFishSpawned(FishTypeSO fish, int number)
		{
		}

		[Token(Token = "0x60006F3")]
		[Address(RVA = "0xCB07A4", Offset = "0xCB07A4", VA = "0xCB07A4")]
		private void UI_AquariumController_OnAquariumFishesReset()
		{
		}

		[Token(Token = "0x60006F4")]
		[Address(RVA = "0xCB08EC", Offset = "0xCB08EC", VA = "0xCB08EC")]
		public void UI_AquariumController_OnAquariumDecoChanged(DecorationSO decoration, int slotIndex)
		{
		}

		[Token(Token = "0x60006F5")]
		[Address(RVA = "0xCB0B54", Offset = "0xCB0B54", VA = "0xCB0B54")]
		private void UI_AquariumController_OnAquariumDecosReset()
		{
		}

		[Token(Token = "0x60006F6")]
		[Address(RVA = "0xCB06D0", Offset = "0xCB06D0", VA = "0xCB06D0")]
		private void CreateFishSchool(string fishBCID, int amount)
		{
		}

		[Token(Token = "0x60006F7")]
		[Address(RVA = "0xCB0870", Offset = "0xCB0870", VA = "0xCB0870")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9EF4E4", Offset = "0x9EF4E4")]
		private IEnumerator Reset()
		{
			return null;
		}

		[Token(Token = "0x60006F8")]
		[Address(RVA = "0xCB0310", Offset = "0xCB0310", VA = "0xCB0310")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9EF548", Offset = "0x9EF548")]
		private IEnumerator LoadPreset(int index)
		{
			return null;
		}

		[Token(Token = "0x60006F9")]
		[Address(RVA = "0xCB0CE8", Offset = "0xCB0CE8", VA = "0xCB0CE8")]
		private DecorationSO GetDecoSOByBCID(string decoBCID)
		{
			return null;
		}

		[Token(Token = "0x60006FA")]
		[Address(RVA = "0xCB0430", Offset = "0xCB0430", VA = "0xCB0430")]
		private void Save()
		{
		}

		[Token(Token = "0x60006FB")]
		[Address(RVA = "0xCB0D8C", Offset = "0xCB0D8C", VA = "0xCB0D8C")]
		public AquariumController()
		{
		}
	}
	[Token(Token = "0x2000127")]
	public enum ToolMode
	{
		[Token(Token = "0x400076A")]
		select,
		[Token(Token = "0x400076B")]
		place
	}
	[Token(Token = "0x2000128")]
	public class AquariumControllerMinimap : MonoBehaviour
	{
		[Token(Token = "0x20003A5")]
		public delegate void AquariumDecoChangedAction(DecorationSO deco, int slotIndex);

		[Serializable]
		[Token(Token = "0x20003A6")]
		public struct PlacedDeco
		{
			[Token(Token = "0x400188C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public DecorationSO deco;

			[Token(Token = "0x400188D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public DecorationSlotController placedSlotCtrl;

			[Token(Token = "0x400188E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int[] footprint;
		}

		[Token(Token = "0x20003A7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E7DB8", Offset = "0x9E7DB8")]
		private sealed class <DespawnBubbles>d__55 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400188F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001890")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001891")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public AquariumControllerMinimap <>4__this;

			[Token(Token = "0x4001892")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Transform bubbles;

			[Token(Token = "0x1700023D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600195F")]
				[Address(RVA = "0xCB3FBC", Offset = "0xCB3FBC", VA = "0xCB3FBC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700023E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001961")]
				[Address(RVA = "0xCB4024", Offset = "0xCB4024", VA = "0xCB4024", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600195C")]
			[Address(RVA = "0xCB3AC0", Offset = "0xCB3AC0", VA = "0xCB3AC0")]
			[DebuggerHidden]
			public <DespawnBubbles>d__55(int <>1__state)
			{
			}

			[Token(Token = "0x600195D")]
			[Address(RVA = "0xCB3EF8", Offset = "0xCB3EF8", VA = "0xCB3EF8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600195E")]
			[Address(RVA = "0xCB3EFC", Offset = "0xCB3EFC", VA = "0xCB3EFC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001960")]
			[Address(RVA = "0xCB3FC4", Offset = "0xCB3FC4", VA = "0xCB3FC4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20003A8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E7DC8", Offset = "0x9E7DC8")]
		private sealed class <SetGhostInAirPosition>d__61 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001893")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001894")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001895")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public AquariumControllerMinimap <>4__this;

			[Token(Token = "0x1700023F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001965")]
				[Address(RVA = "0xCB4248", Offset = "0xCB4248", VA = "0xCB4248", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000240")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001967")]
				[Address(RVA = "0xCB42B0", Offset = "0xCB42B0", VA = "0xCB42B0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001962")]
			[Address(RVA = "0xCB3CF0", Offset = "0xCB3CF0", VA = "0xCB3CF0")]
			[DebuggerHidden]
			public <SetGhostInAirPosition>d__61(int <>1__state)
			{
			}

			[Token(Token = "0x6001963")]
			[Address(RVA = "0xCB402C", Offset = "0xCB402C", VA = "0xCB402C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001964")]
			[Address(RVA = "0xCB4030", Offset = "0xCB4030", VA = "0xCB4030", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001966")]
			[Address(RVA = "0xCB4250", Offset = "0xCB4250", VA = "0xCB4250", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400076C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static AquariumControllerMinimap instance;

		[Token(Token = "0x400076D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AquariumController aquaCtrl;

		[Token(Token = "0x400076E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AquariumControllerUI aquaCtrlUI;

		[Token(Token = "0x400076F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Button[] decoPlacementBtns;

		[Token(Token = "0x4000770")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Image[] decoPlacementBtnOutlines;

		[Token(Token = "0x4000771")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int rowLength;

		[Token(Token = "0x4000772")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Image[] decoPlacementIcons;

		[Token(Token = "0x4000773")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Transform mapGhost;

		[Token(Token = "0x4000774")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float mapGhostScale;

		[Token(Token = "0x4000775")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Vector3 ghostOrigin;

		[Token(Token = "0x4000776")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public DecorationSO selectedDeco;

		[Token(Token = "0x4000778")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public int[] currentFootprint;

		[Token(Token = "0x4000779")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private int currentFootprintSize;

		[Token(Token = "0x400077A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private bool currentFootprintIsValid;

		[Token(Token = "0x400077B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private int pointerSlotPos;

		[Token(Token = "0x400077C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public XRBaseController editingController;

		[Token(Token = "0x400077D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private Color noFootprintColor;

		[Token(Token = "0x400077E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private Color occupiedFootprintColor;

		[Token(Token = "0x400077F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private Color validFootprintColor;

		[Token(Token = "0x4000780")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private Color invalidFootprintColor;

		[Token(Token = "0x4000781")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private ToolMode mode;

		[Token(Token = "0x4000782")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private PlacedDeco placedDecoAtPointerPos;

		[Token(Token = "0x4000783")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private DecorationSO decoAtPointerPos;

		[Token(Token = "0x4000784")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private bool awaitTriggerDown;

		[Token(Token = "0x4000785")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[SerializeField]
		private Material ghostMaterial;

		[Token(Token = "0x4000786")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private Renderer[] ghostRenderers;

		[Token(Token = "0x4000787")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private List<Material[]> ghostMaterialArrays;

		[Token(Token = "0x4000788")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private Tween ghostMoveTween;

		[Token(Token = "0x4000789")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private Tween ghostScaleTween;

		[Token(Token = "0x400078A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		public SpawnPool vfxPool;

		[Token(Token = "0x400078B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		public Transform placeDecoBubbles;

		[Token(Token = "0x400078C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[SerializeField]
		private List<PlacedDeco> placedDecos;

		[Token(Token = "0x14000002")]
		public static event AquariumDecoChangedAction OnAquariumDecoChanged
		{
			[Token(Token = "0x60006FC")]
			[Address(RVA = "0xCAFBFC", Offset = "0xCAFBFC", VA = "0xCAFBFC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EF5AC", Offset = "0x9EF5AC")]
			add
			{
			}
			[Token(Token = "0x60006FD")]
			[Address(RVA = "0xCB0120", Offset = "0xCB0120", VA = "0xCB0120")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EF5BC", Offset = "0x9EF5BC")]
			remove
			{
			}
		}

		[Token(Token = "0x60006FE")]
		[Address(RVA = "0xCB13CC", Offset = "0xCB13CC", VA = "0xCB13CC")]
		private void Awake()
		{
		}

		[Token(Token = "0x60006FF")]
		[Address(RVA = "0xCB1658", Offset = "0xCB1658", VA = "0xCB1658")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000700")]
		[Address(RVA = "0xCB16CC", Offset = "0xCB16CC", VA = "0xCB16CC")]
		private void OnDisble()
		{
		}

		[Token(Token = "0x6000701")]
		[Address(RVA = "0xCB1740", Offset = "0xCB1740", VA = "0xCB1740")]
		private void OnTrigger(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x6000702")]
		[Address(RVA = "0xCB1ABC", Offset = "0xCB1ABC", VA = "0xCB1ABC")]
		private void CheckCanPlaceSelectedDeco()
		{
		}

		[Token(Token = "0x6000703")]
		[Address(RVA = "0xCB1D10", Offset = "0xCB1D10", VA = "0xCB1D10")]
		private void PlaceSelectedDeco(int placementIdx)
		{
		}

		[Token(Token = "0x6000704")]
		[Address(RVA = "0xCB1970", Offset = "0xCB1970", VA = "0xCB1970")]
		private void OnDecoPlacementSelected(int placementIdx)
		{
		}

		[Token(Token = "0x6000705")]
		[Address(RVA = "0xCB27F8", Offset = "0xCB27F8", VA = "0xCB27F8")]
		public Vector3 GetUiSlotPosition(int index)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000706")]
		[Address(RVA = "0xCB2848", Offset = "0xCB2848", VA = "0xCB2848")]
		public Vector3 GetMinimapPosition(DecorationSlotController decoSlot)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000707")]
		[Address(RVA = "0xCB271C", Offset = "0xCB271C", VA = "0xCB271C")]
		private int GetUiSlotIndex(DecorationSlotController decoSlot)
		{
			return default(int);
		}

		[Token(Token = "0x6000708")]
		[Address(RVA = "0xCB2870", Offset = "0xCB2870", VA = "0xCB2870")]
		internal void DecoSlotPointerEnter(int uiDecoSlotIndex)
		{
		}

		[Token(Token = "0x6000709")]
		[Address(RVA = "0xCB1C7C", Offset = "0xCB1C7C", VA = "0xCB1C7C")]
		private void Selection(int uiDecoSlotIndex)
		{
		}

		[Token(Token = "0x600070A")]
		[Address(RVA = "0xCB2890", Offset = "0xCB2890", VA = "0xCB2890")]
		private void Placement(int uiDecoSlotIndex)
		{
		}

		[Token(Token = "0x600070B")]
		[Address(RVA = "0xCB30E4", Offset = "0xCB30E4", VA = "0xCB30E4")]
		internal void DecoSlotPointerExit(int uiDecoSlotIndex)
		{
		}

		[Token(Token = "0x600070C")]
		[Address(RVA = "0xCB236C", Offset = "0xCB236C", VA = "0xCB236C")]
		public void SetMapGhost(DecorationSO deco, Vector3 ghostOriginPos)
		{
		}

		[Token(Token = "0x600070D")]
		[Address(RVA = "0xCB1B30", Offset = "0xCB1B30", VA = "0xCB1B30")]
		private void RemoveMapGhostAnimated()
		{
		}

		[Token(Token = "0x600070E")]
		[Address(RVA = "0xCB1DC8", Offset = "0xCB1DC8", VA = "0xCB1DC8")]
		private void RemoveMapGhost()
		{
		}

		[Token(Token = "0x600070F")]
		[Address(RVA = "0xCB3530", Offset = "0xCB3530", VA = "0xCB3530")]
		public void AddPlacedDeco(DecorationSlotController decorationSlotController)
		{
		}

		[Token(Token = "0x6000710")]
		[Address(RVA = "0xCB37B0", Offset = "0xCB37B0", VA = "0xCB37B0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9EF5CC", Offset = "0x9EF5CC")]
		private IEnumerator DespawnBubbles(Transform bubbles)
		{
			return null;
		}

		[Token(Token = "0x6000711")]
		[Address(RVA = "0xCB2DD4", Offset = "0xCB2DD4", VA = "0xCB2DD4")]
		private int[] GetFootprint(int startIndex, int numSlots)
		{
			return null;
		}

		[Token(Token = "0x6000712")]
		[Address(RVA = "0xCB29B8", Offset = "0xCB29B8", VA = "0xCB29B8")]
		private bool CheckSlotIsFree(int uiDecoSlotIndex, bool setPlacedDecoAtPointerPos = true)
		{
			return default(bool);
		}

		[Token(Token = "0x6000713")]
		[Address(RVA = "0xCB3AEC", Offset = "0xCB3AEC", VA = "0xCB3AEC")]
		public void RemovePlacedDeco(DecorationSlotController decorationSlotController)
		{
		}

		[Token(Token = "0x6000714")]
		[Address(RVA = "0xCB2310", Offset = "0xCB2310", VA = "0xCB2310")]
		public void SetSelectedDeco(DecorationSO deco)
		{
		}

		[Token(Token = "0x6000715")]
		[Address(RVA = "0xCB3790", Offset = "0xCB3790", VA = "0xCB3790")]
		private int GetFootprintSize(DecorationSO.DecorationType size)
		{
			return default(int);
		}

		[Token(Token = "0x6000716")]
		[Address(RVA = "0xCB3C74", Offset = "0xCB3C74", VA = "0xCB3C74")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9EF630", Offset = "0x9EF630")]
		private IEnumerator SetGhostInAirPosition()
		{
			return null;
		}

		[Token(Token = "0x6000717")]
		[Address(RVA = "0xCB2C98", Offset = "0xCB2C98", VA = "0xCB2C98")]
		private void SetFootprintHighlight()
		{
		}

		[Token(Token = "0x6000718")]
		[Address(RVA = "0xCB2B64", Offset = "0xCB2B64", VA = "0xCB2B64")]
		private void UpdateAllHighlights()
		{
		}

		[Token(Token = "0x6000719")]
		[Address(RVA = "0xCB3174", Offset = "0xCB3174", VA = "0xCB3174")]
		private void SetGhostMaterials()
		{
		}

		[Token(Token = "0x600071A")]
		[Address(RVA = "0xCB3470", Offset = "0xCB3470", VA = "0xCB3470")]
		private void ResetGhostMaterials()
		{
		}

		[Token(Token = "0x600071B")]
		[Address(RVA = "0xCB3D1C", Offset = "0xCB3D1C", VA = "0xCB3D1C")]
		public int GetNumPlacedDecos([Optional] DecorationSO deco)
		{
			return default(int);
		}

		[Token(Token = "0x600071C")]
		[Address(RVA = "0xCB3354", Offset = "0xCB3354", VA = "0xCB3354")]
		private void SetControllerActivation(XRBaseController editingController, bool state)
		{
		}

		[Token(Token = "0x600071D")]
		[Address(RVA = "0xCB3EA4", Offset = "0xCB3EA4", VA = "0xCB3EA4")]
		public AquariumControllerMinimap()
		{
		}

		[Token(Token = "0x600071E")]
		[Address(RVA = "0xCB3EC8", Offset = "0xCB3EC8", VA = "0xCB3EC8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EF694", Offset = "0x9EF694")]
		private void <SetMapGhost>b__51_0()
		{
		}

		[Token(Token = "0x600071F")]
		[Address(RVA = "0xCB3EF4", Offset = "0xCB3EF4", VA = "0xCB3EF4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EF6A4", Offset = "0x9EF6A4")]
		private void <RemoveMapGhostAnimated>b__52_0()
		{
		}
	}
	[Token(Token = "0x2000129")]
	public class AquariumControllerUI : MonoBehaviour
	{
		[Token(Token = "0x20003A9")]
		public delegate void AquariumPresetSelectedAction(int index);

		[Token(Token = "0x20003AA")]
		public delegate void AquariumFishSpawnedAction(FishTypeSO fish, int amount);

		[Token(Token = "0x20003AB")]
		public delegate void AquariumFishesResetAction();

		[Token(Token = "0x20003AC")]
		public delegate void AquariumDecosResetAction();

		[Token(Token = "0x20003AD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E7DD8", Offset = "0x9E7DD8")]
		private sealed class <>c__DisplayClass56_0
		{
			[Token(Token = "0x4001896")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public FishTypeSO fish;

			[Token(Token = "0x4001897")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public AquariumControllerUI <>4__this;

			[Token(Token = "0x6001978")]
			[Address(RVA = "0xCB5184", Offset = "0xCB5184", VA = "0xCB5184")]
			public <>c__DisplayClass56_0()
			{
			}

			[Token(Token = "0x6001979")]
			[Address(RVA = "0xCB8A20", Offset = "0xCB8A20", VA = "0xCB8A20")]
			internal void <Start>b__0()
			{
			}
		}

		[Token(Token = "0x20003AE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E7DE8", Offset = "0x9E7DE8")]
		private sealed class <>c__DisplayClass56_1
		{
			[Token(Token = "0x4001898")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Toggle toggle;

			[Token(Token = "0x4001899")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public AquariumControllerUI <>4__this;

			[Token(Token = "0x600197A")]
			[Address(RVA = "0xCB5464", Offset = "0xCB5464", VA = "0xCB5464")]
			public <>c__DisplayClass56_1()
			{
			}

			[Token(Token = "0x600197B")]
			[Address(RVA = "0xCB8A40", Offset = "0xCB8A40", VA = "0xCB8A40")]
			internal void <Start>b__1(bool <p0>)
			{
			}
		}

		[Token(Token = "0x400078D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject UI;

		[Token(Token = "0x400078E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AquariumControllerMinimap aquaCtrlMinimap;

		[Token(Token = "0x400078F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private TextMeshProUGUI aquaPresetName;

		[Token(Token = "0x4000790")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private TextMeshProUGUI capacityText;

		[Token(Token = "0x4000791")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private TextMeshProUGUI decoCapacityText;

		[Token(Token = "0x4000792")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Button nextAquaPresetButton;

		[Token(Token = "0x4000793")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Button previousAquaPresetButton;

		[Token(Token = "0x4000794")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private readonly int numAquaPresets;

		[Token(Token = "0x4000795")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Toggle fishesTabToggle;

		[Token(Token = "0x4000796")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Toggle decosTabToggle;

		[Token(Token = "0x4000797")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private Toggle interiorsTabToggle;

		[Token(Token = "0x4000798")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private GameObject fishesTab;

		[Token(Token = "0x4000799")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private GameObject decosTab;

		[Token(Token = "0x400079A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private GameObject interiorsTab;

		[Token(Token = "0x400079B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private GameObject fishButtonPrefab;

		[Token(Token = "0x400079C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private GameObject decoButtonPrefab;

		[Token(Token = "0x400079D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private Toggle[] interiorSelectionToggles;

		[Token(Token = "0x400079E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private GameObject[] interiors;

		[Token(Token = "0x400079F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private Transform fishesMenu;

		[Token(Token = "0x40007A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private Button resetFishesBtn;

		[Token(Token = "0x40007A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private Button resetDecosBtn;

		[Token(Token = "0x40007A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private Dictionary<FishTypeSO, UI_AquariumFishButton> fishBtnDict;

		[Token(Token = "0x40007A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public Dictionary<DecorationSO, UI_AquariumDecorationButton> decoBtnDict;

		[Token(Token = "0x40007A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private UI_PageDotController m_FishDotController;

		[Token(Token = "0x40007A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private GestureScrollRect m_gestureScrollRect;

		[Token(Token = "0x40007A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private Button m_nextButtonFish;

		[Token(Token = "0x40007A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[SerializeField]
		private Button m_prevButtonFish;

		[Token(Token = "0x40007A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private float m_MoveDuration;

		[Token(Token = "0x40007A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		private float m_ContantSize;

		[Token(Token = "0x40007AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public UI_AquariumDecoration decoPlacementPanel;

		[Token(Token = "0x40007AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[SerializeField]
		private UI_PageDotController m_DecoDotController;

		[Token(Token = "0x40007AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[SerializeField]
		private Button m_nextButtonDeco;

		[Token(Token = "0x40007AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[SerializeField]
		private Button m_prevButtonDeco;

		[Token(Token = "0x40007AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private bool lastPanelWasDecos;

		[Token(Token = "0x40007AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private List<UI_AquariumDecorationButton> activeDecoButtons;

		[Token(Token = "0x40007B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		public int currentDecoPage;

		[Token(Token = "0x40007B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		private int numActiveDecoButtons;

		[Token(Token = "0x40007B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9E9E50", Offset = "0x9E9E50")]
		[SerializeField]
		private Toggle debugToggle;

		[Token(Token = "0x14000003")]
		public static event AquariumPresetSelectedAction OnAquariumPresetSelected
		{
			[Token(Token = "0x6000720")]
			[Address(RVA = "0xCAF99C", Offset = "0xCAF99C", VA = "0xCAF99C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EF6B4", Offset = "0x9EF6B4")]
			add
			{
			}
			[Token(Token = "0x6000721")]
			[Address(RVA = "0xCAFEFC", Offset = "0xCAFEFC", VA = "0xCAFEFC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EF6C4", Offset = "0x9EF6C4")]
			remove
			{
			}
		}

		[Token(Token = "0x14000004")]
		public static event AquariumFishSpawnedAction OnAquariumFishSpawned
		{
			[Token(Token = "0x6000722")]
			[Address(RVA = "0xCAFA64", Offset = "0xCAFA64", VA = "0xCAFA64")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EF6D4", Offset = "0x9EF6D4")]
			add
			{
			}
			[Token(Token = "0x6000723")]
			[Address(RVA = "0xCAFFB0", Offset = "0xCAFFB0", VA = "0xCAFFB0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EF6E4", Offset = "0x9EF6E4")]
			remove
			{
			}
		}

		[Token(Token = "0x14000005")]
		public static event AquariumFishesResetAction OnAquariumFishesReset
		{
			[Token(Token = "0x6000724")]
			[Address(RVA = "0xCAFB30", Offset = "0xCAFB30", VA = "0xCAFB30")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EF6F4", Offset = "0x9EF6F4")]
			add
			{
			}
			[Token(Token = "0x6000725")]
			[Address(RVA = "0xCB0068", Offset = "0xCB0068", VA = "0xCB0068")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EF704", Offset = "0x9EF704")]
			remove
			{
			}
		}

		[Token(Token = "0x14000006")]
		public static event AquariumDecosResetAction OnAquariumDecosReset
		{
			[Token(Token = "0x6000726")]
			[Address(RVA = "0xCAFCC8", Offset = "0xCAFCC8", VA = "0xCAFCC8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EF714", Offset = "0x9EF714")]
			add
			{
			}
			[Token(Token = "0x6000727")]
			[Address(RVA = "0xCB01D8", Offset = "0xCB01D8", VA = "0xCB01D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EF724", Offset = "0x9EF724")]
			remove
			{
			}
		}

		[Token(Token = "0x6000728")]
		[Address(RVA = "0xCB4360", Offset = "0xCB4360", VA = "0xCB4360")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000729")]
		[Address(RVA = "0xCB46C8", Offset = "0xCB46C8", VA = "0xCB46C8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600072A")]
		[Address(RVA = "0xCB4990", Offset = "0xCB4990", VA = "0xCB4990")]
		private void Start()
		{
		}

		[Token(Token = "0x600072B")]
		[Address(RVA = "0xCB58A4", Offset = "0xCB58A4", VA = "0xCB58A4")]
		private void OnSelectPreset(int index)
		{
		}

		[Token(Token = "0x600072C")]
		[Address(RVA = "0xCB6428", Offset = "0xCB6428", VA = "0xCB6428")]
		public void NextAquaPreset()
		{
		}

		[Token(Token = "0x600072D")]
		[Address(RVA = "0xCB64B0", Offset = "0xCB64B0", VA = "0xCB64B0")]
		public void PreviousAquaPreset()
		{
		}

		[Token(Token = "0x600072E")]
		[Address(RVA = "0xCB459C", Offset = "0xCB459C", VA = "0xCB459C")]
		private void SetAquaPresetName()
		{
		}

		[Token(Token = "0x600072F")]
		[Address(RVA = "0xCB6534", Offset = "0xCB6534", VA = "0xCB6534")]
		private void OnResetFishes()
		{
		}

		[Token(Token = "0x6000730")]
		[Address(RVA = "0xCB67A8", Offset = "0xCB67A8", VA = "0xCB67A8")]
		private void OnResetDecos()
		{
		}

		[Token(Token = "0x6000731")]
		[Address(RVA = "0xCB6308", Offset = "0xCB6308", VA = "0xCB6308")]
		private void OnSelectFishesTab(bool isOn)
		{
		}

		[Token(Token = "0x6000732")]
		[Address(RVA = "0xCB7060", Offset = "0xCB7060", VA = "0xCB7060")]
		private void OnSelectDecorationsTab(bool isOn)
		{
		}

		[Token(Token = "0x6000733")]
		[Address(RVA = "0xCB7194", Offset = "0xCB7194", VA = "0xCB7194")]
		private void OnSelectInteriorsTab(bool isOn)
		{
		}

		[Token(Token = "0x6000734")]
		[Address(RVA = "0xCB7458", Offset = "0xCB7458", VA = "0xCB7458")]
		private void OnFishUnlocked(FpFish fish)
		{
		}

		[Token(Token = "0x6000735")]
		[Address(RVA = "0xCB745C", Offset = "0xCB745C", VA = "0xCB745C")]
		private void OnFishSelected(FishTypeSO fish)
		{
		}

		[Token(Token = "0x6000736")]
		[Address(RVA = "0xCB75CC", Offset = "0xCB75CC", VA = "0xCB75CC")]
		public void AddFish(UI_AquariumAddRemoveFish addRemove, FishTypeSO fish)
		{
		}

		[Token(Token = "0x6000737")]
		[Address(RVA = "0xCB7B64", Offset = "0xCB7B64", VA = "0xCB7B64")]
		public void RemoveFish(UI_AquariumAddRemoveFish addRemove, FishTypeSO fish)
		{
		}

		[Token(Token = "0x6000738")]
		[Address(RVA = "0xCB5BB0", Offset = "0xCB5BB0", VA = "0xCB5BB0")]
		private void OnFishDeselected()
		{
		}

		[Token(Token = "0x6000739")]
		[Address(RVA = "0xCB6A1C", Offset = "0xCB6A1C", VA = "0xCB6A1C")]
		private void FilterDecoTypeButtons()
		{
		}

		[Token(Token = "0x600073A")]
		[Address(RVA = "0xCB5CD0", Offset = "0xCB5CD0", VA = "0xCB5CD0")]
		private void ResetFishesMenu()
		{
		}

		[Token(Token = "0x600073B")]
		[Address(RVA = "0xCB6114", Offset = "0xCB6114", VA = "0xCB6114")]
		private void ResetDecoPlacementsMenu()
		{
		}

		[Token(Token = "0x600073C")]
		[Address(RVA = "0xCB518C", Offset = "0xCB518C", VA = "0xCB518C")]
		private int GetFishAmount(FishTypeSO fish)
		{
			return default(int);
		}

		[Token(Token = "0x600073D")]
		[Address(RVA = "0xCB51BC", Offset = "0xCB51BC", VA = "0xCB51BC")]
		public int GetFishInAquariumAmount(FishTypeSO fish)
		{
			return default(int);
		}

		[Token(Token = "0x600073E")]
		[Address(RVA = "0xCB5370", Offset = "0xCB5370", VA = "0xCB5370")]
		private bool IsDecoUnlocked(DecorationSO deco)
		{
			return default(bool);
		}

		[Token(Token = "0x600073F")]
		[Address(RVA = "0xCB7CBC", Offset = "0xCB7CBC", VA = "0xCB7CBC")]
		private int GetDecoCount(DecorationSO deco)
		{
			return default(int);
		}

		[Token(Token = "0x6000740")]
		[Address(RVA = "0xCB7DB0", Offset = "0xCB7DB0", VA = "0xCB7DB0")]
		public void ToggleDebugMode(bool val)
		{
		}

		[Token(Token = "0x6000741")]
		[Address(RVA = "0xCB7EB0", Offset = "0xCB7EB0", VA = "0xCB7EB0")]
		public void OnIncreaseDecoPage()
		{
		}

		[Token(Token = "0x6000742")]
		[Address(RVA = "0xCB7EB8", Offset = "0xCB7EB8", VA = "0xCB7EB8")]
		private void OnIncreaseDecoPage(int page = 1)
		{
		}

		[Token(Token = "0x6000743")]
		[Address(RVA = "0xCB7F60", Offset = "0xCB7F60", VA = "0xCB7F60")]
		public void OnDecreaseDecoPage()
		{
		}

		[Token(Token = "0x6000744")]
		[Address(RVA = "0xCB7F68", Offset = "0xCB7F68", VA = "0xCB7F68")]
		private void OnDecreaseDecoPage(int page = 1)
		{
		}

		[Token(Token = "0x6000745")]
		[Address(RVA = "0xCB8008", Offset = "0xCB8008", VA = "0xCB8008")]
		private void ChangeToDecoPage(int target_page = 0)
		{
		}

		[Token(Token = "0x6000746")]
		[Address(RVA = "0xCB8038", Offset = "0xCB8038", VA = "0xCB8038")]
		public void OnIncreaseFishPanelPos()
		{
		}

		[Token(Token = "0x6000747")]
		[Address(RVA = "0xCB8040", Offset = "0xCB8040", VA = "0xCB8040")]
		private void OnIncreaseFishPanelPos(int page = 1)
		{
		}

		[Token(Token = "0x6000748")]
		[Address(RVA = "0xCB81C8", Offset = "0xCB81C8", VA = "0xCB81C8")]
		public void OnDecreaseFishPanelPos()
		{
		}

		[Token(Token = "0x6000749")]
		[Address(RVA = "0xCB81D0", Offset = "0xCB81D0", VA = "0xCB81D0")]
		private void OnDecreaseFishPanelPos(int page = 1)
		{
		}

		[Token(Token = "0x600074A")]
		[Address(RVA = "0xCB8350", Offset = "0xCB8350", VA = "0xCB8350")]
		private void ChangeToPage(int target_page = 0)
		{
		}

		[Token(Token = "0x600074B")]
		[Address(RVA = "0xCB6DD4", Offset = "0xCB6DD4", VA = "0xCB6DD4")]
		private void UpdateCapacityDisplay()
		{
		}

		[Token(Token = "0x600074C")]
		[Address(RVA = "0xCB3848", Offset = "0xCB3848", VA = "0xCB3848")]
		public void UpdateDecoCapacityDisplay()
		{
		}

		[Token(Token = "0x600074D")]
		[Address(RVA = "0xCB72B4", Offset = "0xCB72B4", VA = "0xCB72B4")]
		private void FilterInteriorToggles()
		{
		}

		[Token(Token = "0x600074E")]
		[Address(RVA = "0xCB8380", Offset = "0xCB8380", VA = "0xCB8380")]
		private void ChangeInterior(Toggle toggle)
		{
		}

		[Token(Token = "0x600074F")]
		[Address(RVA = "0xCB853C", Offset = "0xCB853C", VA = "0xCB853C")]
		private void CheckNoInteriorSelected()
		{
		}

		[Token(Token = "0x6000750")]
		[Address(RVA = "0xCB546C", Offset = "0xCB546C", VA = "0xCB546C")]
		private void SetInterior()
		{
		}

		[Token(Token = "0x6000751")]
		[Address(RVA = "0xCB8678", Offset = "0xCB8678", VA = "0xCB8678")]
		public void EnableUI()
		{
		}

		[Token(Token = "0x6000752")]
		[Address(RVA = "0xCB870C", Offset = "0xCB870C", VA = "0xCB870C")]
		public void DisableUI()
		{
		}

		[Token(Token = "0x6000753")]
		[Address(RVA = "0xCB87A0", Offset = "0xCB87A0", VA = "0xCB87A0")]
		private void ItemCrafted(CraftingRecipesSO recipe)
		{
		}

		[Token(Token = "0x6000754")]
		[Address(RVA = "0xCB88B8", Offset = "0xCB88B8", VA = "0xCB88B8")]
		public AquariumControllerUI()
		{
		}

		[Token(Token = "0x6000755")]
		[Address(RVA = "0xCB897C", Offset = "0xCB897C", VA = "0xCB897C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EF734", Offset = "0x9EF734")]
		private void <OnIncreaseFishPanelPos>b__85_0(float x)
		{
		}

		[Token(Token = "0x6000756")]
		[Address(RVA = "0xCB89D0", Offset = "0xCB89D0", VA = "0xCB89D0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EF744", Offset = "0x9EF744")]
		private void <OnDecreaseFishPanelPos>b__87_0(float x)
		{
		}
	}
	[Token(Token = "0x200012A")]
	public class AquariumMissionUiController : MonoBehaviour
	{
		[Token(Token = "0x40007B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static AquariumMissionUiController instance;

		[Token(Token = "0x40007B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject[] missionPanels;

		[Token(Token = "0x40007B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform arrowMover;

		[Token(Token = "0x40007BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform mapArrowMover;

		[Token(Token = "0x40007BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Tween arrowBounce;

		[Token(Token = "0x40007BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject aquaUI;

		[Token(Token = "0x40007BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameObject movementInfoPanel;

		[Token(Token = "0x40007BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool canHideMovementInfoPanel;

		[Token(Token = "0x40007BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		private bool subbed;

		[Token(Token = "0x170000D7")]
		public static GameObject AquaUI
		{
			[Token(Token = "0x6000757")]
			[Address(RVA = "0xCB8C10", Offset = "0xCB8C10", VA = "0xCB8C10")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000758")]
		[Address(RVA = "0xCB8C6C", Offset = "0xCB8C6C", VA = "0xCB8C6C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000759")]
		[Address(RVA = "0xCB8EA8", Offset = "0xCB8EA8", VA = "0xCB8EA8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600075A")]
		[Address(RVA = "0xCB8FA0", Offset = "0xCB8FA0", VA = "0xCB8FA0")]
		private void MissionCleared()
		{
		}

		[Token(Token = "0x600075B")]
		[Address(RVA = "0xCB9030", Offset = "0xCB9030", VA = "0xCB9030")]
		public void OnDismissNewChallengePanel()
		{
		}

		[Token(Token = "0x600075C")]
		[Address(RVA = "0xCB907C", Offset = "0xCB907C", VA = "0xCB907C")]
		private void AquariumCutsceneWasDismissed()
		{
		}

		[Token(Token = "0x600075D")]
		[Address(RVA = "0xCB918C", Offset = "0xCB918C", VA = "0xCB918C")]
		private void DisableMovementInfoPanel()
		{
		}

		[Token(Token = "0x600075E")]
		[Address(RVA = "0xCB91B8", Offset = "0xCB91B8", VA = "0xCB91B8")]
		public AquariumMissionUiController()
		{
		}
	}
	[Token(Token = "0x200012B")]
	public class AquariumShortcut : MonoBehaviour
	{
		[Token(Token = "0x600075F")]
		[Address(RVA = "0xCB9278", Offset = "0xCB9278", VA = "0xCB9278")]
		public void OnClick()
		{
		}

		[Token(Token = "0x6000760")]
		[Address(RVA = "0xCB92EC", Offset = "0xCB92EC", VA = "0xCB92EC")]
		public AquariumShortcut()
		{
		}
	}
	[Token(Token = "0x200012C")]
	public class AquariumUiVisibilityController : MonoBehaviour
	{
		[Token(Token = "0x40007C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject aquaUI;

		[Token(Token = "0x40007C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private AquariumControllerUI aquaUiCtrl;

		[Token(Token = "0x40007C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool playerIsNear;

		[Token(Token = "0x6000761")]
		[Address(RVA = "0xCB92F4", Offset = "0xCB92F4", VA = "0xCB92F4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000762")]
		[Address(RVA = "0xCB9374", Offset = "0xCB9374", VA = "0xCB9374")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000763")]
		[Address(RVA = "0xCB937C", Offset = "0xCB937C", VA = "0xCB937C")]
		public void ToggleUiVisibility()
		{
		}

		[Token(Token = "0x6000764")]
		[Address(RVA = "0xCB9410", Offset = "0xCB9410", VA = "0xCB9410")]
		private void CheckPlayerIsNear()
		{
		}

		[Token(Token = "0x6000765")]
		[Address(RVA = "0xCB93C4", Offset = "0xCB93C4", VA = "0xCB93C4")]
		private bool UiIsVisible()
		{
			return default(bool);
		}

		[Token(Token = "0x6000766")]
		[Address(RVA = "0xCB93F0", Offset = "0xCB93F0", VA = "0xCB93F0")]
		private void SetUiVisibility(bool state)
		{
		}

		[Token(Token = "0x6000767")]
		[Address(RVA = "0xCB957C", Offset = "0xCB957C", VA = "0xCB957C")]
		public AquariumUiVisibilityController()
		{
		}
	}
	[Token(Token = "0x200012D")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x9E6CE0", Offset = "0x9E6CE0")]
	public class DecorationSO : ItemSO
	{
		[Token(Token = "0x20003AF")]
		public enum DecorationType
		{
			[Token(Token = "0x400189B")]
			Large,
			[Token(Token = "0x400189C")]
			Medium,
			[Token(Token = "0x400189D")]
			Small,
			[Token(Token = "0x400189E")]
			Interior
		}

		[Token(Token = "0x40007C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public DecorationType Type;

		[Token(Token = "0x6000768")]
		[Address(RVA = "0xC01F60", Offset = "0xC01F60", VA = "0xC01F60")]
		public DecorationSO()
		{
		}
	}
	[Token(Token = "0x200012E")]
	public class DecorationSlotController : MonoBehaviour
	{
		[Token(Token = "0x40007C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public DecorationSO.DecorationType SlotType;

		[Token(Token = "0x40007C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private SpawnPool decorationPool;

		[Token(Token = "0x40007C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private DecorationSO inSlotData;

		[Token(Token = "0x40007C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Transform modelFullsize;

		[Token(Token = "0x40007C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Transform mapMini;

		[Token(Token = "0x40007C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float mapMiniScale;

		[Token(Token = "0x170000D8")]
		public DecorationSO InSlotData
		{
			[Token(Token = "0x6000769")]
			[Address(RVA = "0xC01F68", Offset = "0xC01F68", VA = "0xC01F68")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600076A")]
		[Address(RVA = "0xC01F70", Offset = "0xC01F70", VA = "0xC01F70")]
		public void Clear()
		{
		}

		[Token(Token = "0x600076B")]
		[Address(RVA = "0xC02160", Offset = "0xC02160", VA = "0xC02160")]
		public void Fill(DecorationSO decoration)
		{
		}

		[Token(Token = "0x600076C")]
		[Address(RVA = "0xC0230C", Offset = "0xC0230C", VA = "0xC0230C")]
		private void FillMinimap(DecorationSO decoration)
		{
		}

		[Token(Token = "0x600076D")]
		[Address(RVA = "0xC02548", Offset = "0xC02548", VA = "0xC02548")]
		public Vector3 GetModelFullsizePosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x600076E")]
		[Address(RVA = "0xC02564", Offset = "0xC02564", VA = "0xC02564")]
		public DecorationSlotController()
		{
		}
	}
	[Token(Token = "0x200012F")]
	public class SetMinimapHighlightColor : MonoBehaviour
	{
		[Token(Token = "0x40007CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Image outline;

		[Token(Token = "0x600076F")]
		[Address(RVA = "0xCF0B84", Offset = "0xCF0B84", VA = "0xCF0B84")]
		public void SetColor(Color col)
		{
		}

		[Token(Token = "0x6000770")]
		[Address(RVA = "0xCF0BA8", Offset = "0xCF0BA8", VA = "0xCF0BA8")]
		public SetMinimapHighlightColor()
		{
		}
	}
	[Token(Token = "0x2000130")]
	public class UI_AquariumAddRemoveFish : MonoBehaviour
	{
		[Token(Token = "0x40007CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UI_AquariumFishButton fishButton;

		[Token(Token = "0x40007CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AquariumControllerUI ctrl;

		[Token(Token = "0x40007CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TMP_Text number;

		[Token(Token = "0x40007CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Button increaseBtn;

		[Token(Token = "0x40007CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Button decreaseBtn;

		[Token(Token = "0x40007D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int currentNum;

		[Token(Token = "0x170000D9")]
		public int CurrentNum
		{
			[Token(Token = "0x6000771")]
			[Address(RVA = "0xC33A28", Offset = "0xC33A28", VA = "0xC33A28")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000772")]
			[Address(RVA = "0xC33A30", Offset = "0xC33A30", VA = "0xC33A30")]
			set
			{
			}
		}

		[Token(Token = "0x6000773")]
		[Address(RVA = "0xC33A74", Offset = "0xC33A74", VA = "0xC33A74")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000774")]
		[Address(RVA = "0xC33B48", Offset = "0xC33B48", VA = "0xC33B48")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000775")]
		[Address(RVA = "0xC33B8C", Offset = "0xC33B8C", VA = "0xC33B8C")]
		public void AddFish()
		{
		}

		[Token(Token = "0x6000776")]
		[Address(RVA = "0xC33BBC", Offset = "0xC33BBC", VA = "0xC33BBC")]
		public void RemoveFish()
		{
		}

		[Token(Token = "0x6000777")]
		[Address(RVA = "0xC33BEC", Offset = "0xC33BEC", VA = "0xC33BEC")]
		public UI_AquariumAddRemoveFish()
		{
		}
	}
	[Token(Token = "0x2000131")]
	public class UI_AquariumDecoration : MonoBehaviour
	{
		[Token(Token = "0x40007D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Localize PlacementName;

		[Token(Token = "0x40007D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Button CloseBtn;

		[Token(Token = "0x40007D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform DecosMenu;

		[Token(Token = "0x6000778")]
		[Address(RVA = "0xC33BF4", Offset = "0xC33BF4", VA = "0xC33BF4")]
		public UI_AquariumDecoration()
		{
		}
	}
	[Token(Token = "0x2000132")]
	public class UI_AquariumDecorationButton : MonoBehaviour, IPointerDownHandler, IEventSystemHandler
	{
		[Token(Token = "0x40007D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Image DecoIcon;

		[Token(Token = "0x40007D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Button DecoBtn;

		[Token(Token = "0x40007D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AquariumControllerUI aquaCtrlUI;

		[Token(Token = "0x40007D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AquariumControllerMinimap aquaCtrlMinimap;

		[Token(Token = "0x40007D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public DecorationSO deco;

		[Token(Token = "0x40007D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public TMP_Text Count_Text;

		[Token(Token = "0x40007DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public GameObject[] sizes;

		[Token(Token = "0x40007DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int count;

		[Token(Token = "0x170000DA")]
		public int decoCount
		{
			[Token(Token = "0x6000779")]
			[Address(RVA = "0xC33BFC", Offset = "0xC33BFC", VA = "0xC33BFC")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600077A")]
			[Address(RVA = "0xC33C04", Offset = "0xC33C04", VA = "0xC33C04")]
			set
			{
			}
		}

		[Token(Token = "0x600077B")]
		[Address(RVA = "0xC33C48", Offset = "0xC33C48", VA = "0xC33C48", Slot = "4")]
		public void OnPointerDown(PointerEventData eventData)
		{
		}

		[Token(Token = "0x600077C")]
		[Address(RVA = "0xC33E4C", Offset = "0xC33E4C", VA = "0xC33E4C")]
		public void SetSize(DecorationSO.DecorationType size)
		{
		}

		[Token(Token = "0x600077D")]
		[Address(RVA = "0xC33F50", Offset = "0xC33F50", VA = "0xC33F50")]
		public UI_AquariumDecorationButton()
		{
		}
	}
	[Token(Token = "0x2000133")]
	public class UI_AquariumFish : MonoBehaviour
	{
		[Token(Token = "0x40007DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Localize FishName;

		[Token(Token = "0x40007DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Image FishIcon;

		[Token(Token = "0x40007DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TMP_Text Number;

		[Token(Token = "0x40007DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Button IncreaseBtn;

		[Token(Token = "0x40007E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Button DecreaseBtn;

		[Token(Token = "0x40007E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Button ApplyBtn;

		[Token(Token = "0x40007E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Button CloseBtn;

		[Token(Token = "0x40007E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public int CurrentNum;

		[Token(Token = "0x600077E")]
		[Address(RVA = "0xC33F58", Offset = "0xC33F58", VA = "0xC33F58")]
		private void Update()
		{
		}

		[Token(Token = "0x600077F")]
		[Address(RVA = "0xC33F9C", Offset = "0xC33F9C", VA = "0xC33F9C")]
		public UI_AquariumFish()
		{
		}
	}
	[Token(Token = "0x2000134")]
	public class UI_AquariumFishButton : MonoBehaviour
	{
		[Token(Token = "0x40007E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public FishTypeSO fish;

		[Token(Token = "0x40007E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Image FishIcon;

		[Token(Token = "0x40007E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Image Dot;

		[Token(Token = "0x40007E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public TMP_Text Count_Text;

		[Token(Token = "0x40007E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Localize FishName;

		[Token(Token = "0x40007E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Button FishBtn;

		[Token(Token = "0x40007EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Image FishBtnOutline;

		[Token(Token = "0x40007EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public UI_AquariumAddRemoveFish AddRemove;

		[Token(Token = "0x6000780")]
		[Address(RVA = "0xC33FA4", Offset = "0xC33FA4", VA = "0xC33FA4")]
		public void SetSelected(bool state)
		{
		}

		[Token(Token = "0x6000781")]
		[Address(RVA = "0xC33FF8", Offset = "0xC33FF8", VA = "0xC33FF8")]
		public UI_AquariumFishButton()
		{
		}
	}
	[Token(Token = "0x2000135")]
	public class UI_LoadAquariumButton : MonoBehaviour
	{
		[Token(Token = "0x6000782")]
		[Address(RVA = "0xC3E2AC", Offset = "0xC3E2AC", VA = "0xC3E2AC")]
		public void Load()
		{
		}

		[Token(Token = "0x6000783")]
		[Address(RVA = "0xC3E330", Offset = "0xC3E330", VA = "0xC3E330")]
		public UI_LoadAquariumButton()
		{
		}
	}
	[Token(Token = "0x2000136")]
	public class UI_ReturnShipButton : MonoBehaviour
	{
		[Token(Token = "0x6000784")]
		[Address(RVA = "0xCF7B18", Offset = "0xCF7B18", VA = "0xCF7B18")]
		public void Load()
		{
		}

		[Token(Token = "0x6000785")]
		[Address(RVA = "0xCF7B9C", Offset = "0xCF7B9C", VA = "0xCF7B9C")]
		public UI_ReturnShipButton()
		{
		}
	}
	[Token(Token = "0x2000137")]
	public class ArrowLeanSuccess : MonoBehaviour
	{
		[Token(Token = "0x40007EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Gradient fadeGradient;

		[Token(Token = "0x40007ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private SpriteRenderer sprite;

		[Token(Token = "0x40007EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float t;

		[Token(Token = "0x40007EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float duration;

		[Token(Token = "0x6000786")]
		[Address(RVA = "0xCB9584", Offset = "0xCB9584", VA = "0xCB9584")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000787")]
		[Address(RVA = "0xCB9618", Offset = "0xCB9618", VA = "0xCB9618")]
		private void Update()
		{
		}

		[Token(Token = "0x6000788")]
		[Address(RVA = "0xCB96B8", Offset = "0xCB96B8", VA = "0xCB96B8")]
		public ArrowLeanSuccess()
		{
		}
	}
	[Token(Token = "0x2000138")]
	public class ArrowSnapCollider : MonoBehaviour
	{
		[Token(Token = "0x40007F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Collider col;

		[Token(Token = "0x40007F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private MeshRenderer mesh;

		[Token(Token = "0x40007F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Arrow direction;

		[Token(Token = "0x40007F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private bool leanState;

		[Token(Token = "0x40007F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
		public bool isWorldCollider;

		[Token(Token = "0x6000789")]
		[Address(RVA = "0xCB96CC", Offset = "0xCB96CC", VA = "0xCB96CC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600078A")]
		[Address(RVA = "0xCB97A0", Offset = "0xCB97A0", VA = "0xCB97A0")]
		private bool CheckArrowDir()
		{
			return default(bool);
		}

		[Token(Token = "0x600078B")]
		[Address(RVA = "0xCB99C8", Offset = "0xCB99C8", VA = "0xCB99C8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600078C")]
		[Address(RVA = "0xCB99E8", Offset = "0xCB99E8", VA = "0xCB99E8")]
		private void OnTriggerStay(Collider other)
		{
		}

		[Token(Token = "0x600078D")]
		[Address(RVA = "0xCB9AB8", Offset = "0xCB9AB8", VA = "0xCB9AB8")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x600078E")]
		[Address(RVA = "0xCB9B40", Offset = "0xCB9B40", VA = "0xCB9B40")]
		private void Update()
		{
		}

		[Token(Token = "0x600078F")]
		[Address(RVA = "0xCB9BE8", Offset = "0xCB9BE8", VA = "0xCB9BE8")]
		public ArrowSnapCollider()
		{
		}
	}
	[Token(Token = "0x2000139")]
	public class ArrowSnapSuccess : MonoBehaviour
	{
		[Token(Token = "0x40007F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Gradient fadeGradient;

		[Token(Token = "0x40007F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Image image;

		[Token(Token = "0x40007F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float t;

		[Token(Token = "0x40007F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float duration;

		[Token(Token = "0x6000790")]
		[Address(RVA = "0xCB9BF0", Offset = "0xCB9BF0", VA = "0xCB9BF0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000791")]
		[Address(RVA = "0xCB9C8C", Offset = "0xCB9C8C", VA = "0xCB9C8C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000792")]
		[Address(RVA = "0xCB9D34", Offset = "0xCB9D34", VA = "0xCB9D34")]
		public ArrowSnapSuccess()
		{
		}
	}
	[Token(Token = "0x200013A")]
	public enum MixerParams
	{
		[Token(Token = "0x40007FA")]
		MasterVol,
		[Token(Token = "0x40007FB")]
		MusicNoStingsVol
	}
	[Token(Token = "0x200013B")]
	public class AudioController : MonoBehaviour
	{
		[Token(Token = "0x40007FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static AudioController instance;

		[Token(Token = "0x40007FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AudioMixer mixer;

		[Token(Token = "0x40007FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Tween fadeTween;

		[Token(Token = "0x40007FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float musicMaxVol;

		[Token(Token = "0x170000DB")]
		public static AudioMixer Mixer
		{
			[Token(Token = "0x6000793")]
			[Address(RVA = "0xCB9D48", Offset = "0xCB9D48", VA = "0xCB9D48")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000794")]
		[Address(RVA = "0xCB9DA4", Offset = "0xCB9DA4", VA = "0xCB9DA4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000795")]
		[Address(RVA = "0xCB9EAC", Offset = "0xCB9EAC", VA = "0xCB9EAC")]
		public static void SetMusicVolume(float val)
		{
		}

		[Token(Token = "0x6000796")]
		[Address(RVA = "0xCBA018", Offset = "0xCBA018", VA = "0xCBA018")]
		public static void Fade(MixerParams param, float endVal, float time)
		{
		}

		[Token(Token = "0x6000797")]
		[Address(RVA = "0xCBA11C", Offset = "0xCBA11C", VA = "0xCBA11C")]
		public static void FadeOut(MixerParams param, float time)
		{
		}

		[Token(Token = "0x6000798")]
		[Address(RVA = "0xCB9F48", Offset = "0xCB9F48", VA = "0xCB9F48")]
		public static void SetVal(MixerParams param, float val)
		{
		}

		[Token(Token = "0x6000799")]
		[Address(RVA = "0xCBA22C", Offset = "0xCBA22C", VA = "0xCBA22C")]
		public static void MusicFadeOut(float time)
		{
		}

		[Token(Token = "0x600079A")]
		[Address(RVA = "0xCBA234", Offset = "0xCBA234", VA = "0xCBA234")]
		public static void MusicfadeIn(float time)
		{
		}

		[Token(Token = "0x600079B")]
		[Address(RVA = "0xCBA2A4", Offset = "0xCBA2A4", VA = "0xCBA2A4")]
		public AudioController()
		{
		}
	}
	[Token(Token = "0x200013C")]
	public class ButtonClickSfx : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler, IPointerDownHandler
	{
		[Token(Token = "0x4000800")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SfxUI clip;

		[Token(Token = "0x4000801")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float hoverCooldown;

		[Token(Token = "0x4000802")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float hoverCooldownDuration;

		[Token(Token = "0x4000803")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool isToggle;

		[Token(Token = "0x170000DC")]
		private XRUIInputModule InputModule
		{
			[Token(Token = "0x600079C")]
			[Address(RVA = "0xBF5FA8", Offset = "0xBF5FA8", VA = "0xBF5FA8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600079D")]
		[Address(RVA = "0xBF6058", Offset = "0xBF6058", VA = "0xBF6058")]
		private void Start()
		{
		}

		[Token(Token = "0x600079E")]
		[Address(RVA = "0xBF617C", Offset = "0xBF617C", VA = "0xBF617C")]
		private void PlayClickSfxToggle(bool isOn)
		{
		}

		[Token(Token = "0x600079F")]
		[Address(RVA = "0xBF6214", Offset = "0xBF6214", VA = "0xBF6214")]
		private void PlayClickSfx()
		{
		}

		[Token(Token = "0x60007A0")]
		[Address(RVA = "0xBF6294", Offset = "0xBF6294", VA = "0xBF6294", Slot = "6")]
		public void OnPointerDown(PointerEventData pointerEventData)
		{
		}

		[Token(Token = "0x60007A1")]
		[Address(RVA = "0xBF6458", Offset = "0xBF6458", VA = "0xBF6458", Slot = "4")]
		public void OnPointerEnter(PointerEventData pointerEventData)
		{
		}

		[Token(Token = "0x60007A2")]
		[Address(RVA = "0xBF663C", Offset = "0xBF663C", VA = "0xBF663C", Slot = "5")]
		public void OnPointerExit(PointerEventData pointerEventData)
		{
		}

		[Token(Token = "0x60007A3")]
		[Address(RVA = "0xBF6330", Offset = "0xBF6330", VA = "0xBF6330")]
		private void DoHaptics(XRRayInteractor interactor)
		{
		}

		[Token(Token = "0x60007A4")]
		[Address(RVA = "0xBF679C", Offset = "0xBF679C", VA = "0xBF679C")]
		public ButtonClickSfx()
		{
		}
	}
	[Token(Token = "0x200013D")]
	public enum SfxUI
	{
		[Token(Token = "0x4000805")]
		ButtonClick1,
		[Token(Token = "0x4000806")]
		ButtonClick2,
		[Token(Token = "0x4000807")]
		ButtonClick3,
		[Token(Token = "0x4000808")]
		ButtonClick4,
		[Token(Token = "0x4000809")]
		ButtonClick5,
		[Token(Token = "0x400080A")]
		ButtonHover,
		[Token(Token = "0x400080B")]
		MissionCompleted,
		[Token(Token = "0x400080C")]
		Notification,
		[Token(Token = "0x400080D")]
		FishPadOpen,
		[Token(Token = "0x400080E")]
		FishPadClose,
		[Token(Token = "0x400080F")]
		PlaceAquariumFish,
		[Token(Token = "0x4000810")]
		RemoveAquariumFish,
		[Token(Token = "0x4000811")]
		PlaceAquariumDeco,
		[Token(Token = "0x4000812")]
		RemoveAquariumDeco,
		[Token(Token = "0x4000813")]
		AquaButtonFail,
		[Token(Token = "0x4000814")]
		AquaDecoPickup
	}
	[Token(Token = "0x200013E")]
	public class UI_Audio : MonoBehaviour
	{
		[Token(Token = "0x4000815")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static UI_Audio instance;

		[Token(Token = "0x4000816")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AudioSource uiAudio;

		[Token(Token = "0x4000817")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioSource uiAudioNoPitchChange;

		[Token(Token = "0x4000818")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AudioClip buttonClick1;

		[Token(Token = "0x4000819")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AudioClip buttonClick2;

		[Token(Token = "0x400081A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public AudioClip buttonClick3;

		[Token(Token = "0x400081B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public AudioClip buttonClick4;

		[Token(Token = "0x400081C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public AudioClip buttonClick5;

		[Token(Token = "0x400081D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public AudioClip buttonHover;

		[Token(Token = "0x400081E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public AudioClip missionCompleted;

		[Token(Token = "0x400081F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public AudioClip notification;

		[Token(Token = "0x4000820")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public AudioClip fishPadOpen;

		[Token(Token = "0x4000821")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public AudioClip fishPadClose;

		[Token(Token = "0x4000822")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public AudioClip placeAquaFish;

		[Token(Token = "0x4000823")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public AudioClip placeAquaDeco;

		[Token(Token = "0x4000824")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public AudioClip removeAquaFish;

		[Token(Token = "0x4000825")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public AudioClip removeAquaDeco;

		[Token(Token = "0x4000826")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public AudioClip aquaButtonFail;

		[Token(Token = "0x4000827")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public AudioClip aquaDecoPickup;

		[Token(Token = "0x60007A5")]
		[Address(RVA = "0xC34000", Offset = "0xC34000", VA = "0xC34000")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60007A6")]
		[Address(RVA = "0xC2E8C4", Offset = "0xC2E8C4", VA = "0xC2E8C4")]
		public static void Play(SfxUI sfx, float pitch = 1f)
		{
		}

		[Token(Token = "0x60007A7")]
		[Address(RVA = "0xC34058", Offset = "0xC34058", VA = "0xC34058")]
		public static void PlayAt(SfxUI sfx, Vector3 position, float pitch = 1f)
		{
		}

		[Token(Token = "0x60007A8")]
		[Address(RVA = "0xC342D8", Offset = "0xC342D8", VA = "0xC342D8")]
		public UI_Audio()
		{
		}
	}
	[Token(Token = "0x200013F")]
	public class AudioFollower : MonoBehaviour
	{
		[Token(Token = "0x4000828")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform transformToFollow;

		[Token(Token = "0x60007A9")]
		[Address(RVA = "0xCBA2AC", Offset = "0xCBA2AC", VA = "0xCBA2AC")]
		private void Update()
		{
		}

		[Token(Token = "0x60007AA")]
		[Address(RVA = "0xCBA364", Offset = "0xCBA364", VA = "0xCBA364")]
		public AudioFollower()
		{
		}
	}
	[Token(Token = "0x2000140")]
	public class BendyGuide : MonoBehaviour
	{
		[Token(Token = "0x4000829")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Vector3 localPos;

		[Token(Token = "0x400082A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private Vector3 localRot;

		[Token(Token = "0x400082B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Rigidbody rb;

		[Token(Token = "0x400082C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static BendyGuide instance;

		[Token(Token = "0x60007AB")]
		[Address(RVA = "0xCBB34C", Offset = "0xCBB34C", VA = "0xCBB34C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60007AC")]
		[Address(RVA = "0xCBB40C", Offset = "0xCBB40C", VA = "0xCBB40C")]
		public static void Reset()
		{
		}

		[Token(Token = "0x60007AD")]
		[Address(RVA = "0xCBB464", Offset = "0xCBB464", VA = "0xCBB464")]
		private void _Reset()
		{
		}

		[Token(Token = "0x60007AE")]
		[Address(RVA = "0xCBB54C", Offset = "0xCBB54C", VA = "0xCBB54C")]
		public BendyGuide()
		{
		}
	}
	[Token(Token = "0x2000141")]
	public class BobberModelPositionCasting : MonoBehaviour
	{
		[Token(Token = "0x400082D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform rodTip;

		[Token(Token = "0x400082E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform bobberLure;

		[Token(Token = "0x400082F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject model;

		[Token(Token = "0x4000830")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float maxDistanceFromLure;

		[Token(Token = "0x4000831")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private bool showBobber;

		[Token(Token = "0x60007AF")]
		[Address(RVA = "0xBF1A58", Offset = "0xBF1A58", VA = "0xBF1A58")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60007B0")]
		[Address(RVA = "0xBF1B80", Offset = "0xBF1B80", VA = "0xBF1B80")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60007B1")]
		[Address(RVA = "0xBF1CA8", Offset = "0xBF1CA8", VA = "0xBF1CA8")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60007B2")]
		[Address(RVA = "0xBF1D54", Offset = "0xBF1D54", VA = "0xBF1D54")]
		private void PositionModel()
		{
		}

		[Token(Token = "0x60007B3")]
		[Address(RVA = "0xBF2030", Offset = "0xBF2030", VA = "0xBF2030")]
		private void LureChange(LureSO lure)
		{
		}

		[Token(Token = "0x60007B4")]
		[Address(RVA = "0xBF2080", Offset = "0xBF2080", VA = "0xBF2080")]
		public BobberModelPositionCasting()
		{
		}
	}
	[Token(Token = "0x2000142")]
	public class BobberPositioner : MonoBehaviour
	{
		[Token(Token = "0x4000832")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform bobberMover;

		[Token(Token = "0x4000833")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform underwaterLureModel;

		[Token(Token = "0x4000834")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform underwaterLureConnectedBody;

		[Token(Token = "0x4000835")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 targetPos;

		[Token(Token = "0x4000836")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Rigidbody rb;

		[Token(Token = "0x60007B5")]
		[Address(RVA = "0xBF2098", Offset = "0xBF2098", VA = "0xBF2098")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60007B6")]
		[Address(RVA = "0xBF21C4", Offset = "0xBF21C4", VA = "0xBF21C4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60007B7")]
		[Address(RVA = "0xBF2280", Offset = "0xBF2280", VA = "0xBF2280")]
		private void Update()
		{
		}

		[Token(Token = "0x60007B8")]
		[Address(RVA = "0xBF22D8", Offset = "0xBF22D8", VA = "0xBF22D8")]
		public BobberPositioner()
		{
		}
	}
	[Token(Token = "0x2000143")]
	public class BoostBar : MonoBehaviour
	{
		[Token(Token = "0x4000837")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool isReady;

		[Token(Token = "0x4000838")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SpawnPool Vfx;

		[Token(Token = "0x4000839")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform lightningBall;

		[Token(Token = "0x400083A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform rodTipBone;

		[Token(Token = "0x400083B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform reel;

		[Token(Token = "0x400083C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameObject lightningBallRodTip;

		[Token(Token = "0x400083D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public GameObject lightningBallReel;

		[Token(Token = "0x400083E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static BoostBar instance;

		[Token(Token = "0x60007B9")]
		[Address(RVA = "0xBF24AC", Offset = "0xBF24AC", VA = "0xBF24AC")]
		private void Awake()
		{
		}

		[Token(Token = "0x60007BA")]
		[Address(RVA = "0xBF25D4", Offset = "0xBF25D4", VA = "0xBF25D4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60007BB")]
		[Address(RVA = "0xBF262C", Offset = "0xBF262C", VA = "0xBF262C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60007BC")]
		[Address(RVA = "0xBF2754", Offset = "0xBF2754", VA = "0xBF2754")]
		private void EventHub_OnBoostTimerUpdated(float timer)
		{
		}

		[Token(Token = "0x60007BD")]
		[Address(RVA = "0xBF27A0", Offset = "0xBF27A0", VA = "0xBF27A0")]
		private void HandleBoostReady()
		{
		}

		[Token(Token = "0x60007BE")]
		[Address(RVA = "0xBF28A0", Offset = "0xBF28A0", VA = "0xBF28A0")]
		public void ResetBoostBar()
		{
		}

		[Token(Token = "0x60007BF")]
		[Address(RVA = "0xBF27E4", Offset = "0xBF27E4", VA = "0xBF27E4")]
		private void ResetAlertParticlesPos()
		{
		}

		[Token(Token = "0x60007C0")]
		[Address(RVA = "0xBF28A8", Offset = "0xBF28A8", VA = "0xBF28A8")]
		public bool CanTriggerBoost()
		{
			return default(bool);
		}

		[Token(Token = "0x60007C1")]
		[Address(RVA = "0xBF295C", Offset = "0xBF295C", VA = "0xBF295C")]
		public BoostBar()
		{
		}
	}
	[Token(Token = "0x2000144")]
	public class BoostUI : MonoBehaviour
	{
		[Token(Token = "0x400083F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static BoostUI instance;

		[Token(Token = "0x4000840")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SkinnedMeshRenderer boostUiRend;

		[Token(Token = "0x4000841")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9E9F2C", Offset = "0x9E9F2C")]
		public Material uiMat;

		[Token(Token = "0x60007C2")]
		[Address(RVA = "0xBF2964", Offset = "0xBF2964", VA = "0xBF2964")]
		public void SetBoostNeedle(float val)
		{
		}

		[Token(Token = "0x60007C3")]
		[Address(RVA = "0xBF2A14", Offset = "0xBF2A14", VA = "0xBF2A14")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60007C4")]
		[Address(RVA = "0xBF2AF0", Offset = "0xBF2AF0", VA = "0xBF2AF0")]
		public BoostUI()
		{
		}
	}
	[Token(Token = "0x2000145")]
	public class BoostVFXStateController : MonoBehaviour
	{
		[Token(Token = "0x20003B0")]
		public enum BoostVFXState
		{
			[Token(Token = "0x40018A0")]
			Empty,
			[Token(Token = "0x40018A1")]
			NonEmpty,
			[Token(Token = "0x40018A2")]
			Full,
			[Token(Token = "0x40018A3")]
			AddEnergy,
			[Token(Token = "0x40018A4")]
			BoostStart,
			[Token(Token = "0x40018A5")]
			BoostActive,
			[Token(Token = "0x40018A6")]
			BoostEnd
		}

		[Token(Token = "0x4000842")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static BoostVFXStateController instance;

		[Token(Token = "0x4000843")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private BoostVFXState state;

		[Token(Token = "0x4000844")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject EmptyVFX;

		[Token(Token = "0x4000845")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject FullVFX;

		[Token(Token = "0x4000846")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject AddEnergyVFX;

		[Token(Token = "0x4000847")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private GameObject BoostStartVFX;

		[Token(Token = "0x4000848")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private GameObject BoostActiveVFX;

		[Token(Token = "0x4000849")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private GameObject BoostEndVFX;

		[Token(Token = "0x400084A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private List<GameObject> VFXList;

		[Token(Token = "0x400084B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public GameObject lightningStartObject;

		[Token(Token = "0x170000DD")]
		public static BoostVFXState State
		{
			[Token(Token = "0x60007C5")]
			[Address(RVA = "0xBF2AF8", Offset = "0xBF2AF8", VA = "0xBF2AF8")]
			get
			{
				return default(BoostVFXState);
			}
		}

		[Token(Token = "0x60007C6")]
		[Address(RVA = "0xBF2B54", Offset = "0xBF2B54", VA = "0xBF2B54")]
		private void Awake()
		{
		}

		[Token(Token = "0x60007C7")]
		[Address(RVA = "0xBF2C14", Offset = "0xBF2C14", VA = "0xBF2C14")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60007C8")]
		[Address(RVA = "0xBF2D14", Offset = "0xBF2D14", VA = "0xBF2D14")]
		private void Update()
		{
		}

		[Token(Token = "0x60007C9")]
		[Address(RVA = "0xBF2E5C", Offset = "0xBF2E5C", VA = "0xBF2E5C")]
		public static void StartBoost()
		{
		}

		[Token(Token = "0x60007CA")]
		[Address(RVA = "0xBF2F20", Offset = "0xBF2F20", VA = "0xBF2F20")]
		public static void EndBoost()
		{
		}

		[Token(Token = "0x60007CB")]
		[Address(RVA = "0xBF2FFC", Offset = "0xBF2FFC", VA = "0xBF2FFC")]
		public static void AddEnergy()
		{
		}

		[Token(Token = "0x60007CC")]
		[Address(RVA = "0xBF2C74", Offset = "0xBF2C74", VA = "0xBF2C74")]
		private void ReevaluateState()
		{
		}

		[Token(Token = "0x60007CD")]
		[Address(RVA = "0xBF2E34", Offset = "0xBF2E34", VA = "0xBF2E34")]
		private void EnterNonEmpty()
		{
		}

		[Token(Token = "0x60007CE")]
		[Address(RVA = "0xBF2E50", Offset = "0xBF2E50", VA = "0xBF2E50")]
		private void EnterEmpty()
		{
		}

		[Token(Token = "0x60007CF")]
		[Address(RVA = "0xBF2E40", Offset = "0xBF2E40", VA = "0xBF2E40")]
		private void EnterFull()
		{
		}

		[Token(Token = "0x60007D0")]
		[Address(RVA = "0xBF3054", Offset = "0xBF3054", VA = "0xBF3054")]
		private void EnterAddEnergy()
		{
		}

		[Token(Token = "0x60007D1")]
		[Address(RVA = "0xBF2EB4", Offset = "0xBF2EB4", VA = "0xBF2EB4")]
		private void EnterBoostStart()
		{
		}

		[Token(Token = "0x60007D2")]
		[Address(RVA = "0xBF32FC", Offset = "0xBF32FC", VA = "0xBF32FC")]
		private void EnterBoostActive()
		{
		}

		[Token(Token = "0x60007D3")]
		[Address(RVA = "0xBF2F78", Offset = "0xBF2F78", VA = "0xBF2F78")]
		private void EnterBoostEnd()
		{
		}

		[Token(Token = "0x60007D4")]
		[Address(RVA = "0xBF31BC", Offset = "0xBF31BC", VA = "0xBF31BC")]
		private void PlayVFX(GameObject VFX)
		{
		}

		[Token(Token = "0x60007D5")]
		[Address(RVA = "0xBF30C0", Offset = "0xBF30C0", VA = "0xBF30C0")]
		private void StopAllVFXs()
		{
		}

		[Token(Token = "0x60007D6")]
		[Address(RVA = "0xBF3364", Offset = "0xBF3364", VA = "0xBF3364")]
		public BoostVFXStateController()
		{
		}
	}
	[Token(Token = "0x2000146")]
	public class BossPredatorAI : MonoBehaviour
	{
		[Token(Token = "0x20003B1")]
		public enum BossPredatorState
		{
			[Token(Token = "0x40018A8")]
			idle,
			[Token(Token = "0x40018A9")]
			patrolling,
			[Token(Token = "0x40018AA")]
			following
		}

		[Token(Token = "0x20003B2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E7DF8", Offset = "0x9E7DF8")]
		private sealed class <AwaitStartPatrolling>d__34 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40018AB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40018AC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40018AD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public BossPredatorAI <>4__this;

			[Token(Token = "0x40018AE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <i>5__2;

			[Token(Token = "0x17000241")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600197F")]
				[Address(RVA = "0xBF4B68", Offset = "0xBF4B68", VA = "0xBF4B68", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000242")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001981")]
				[Address(RVA = "0xBF4BD0", Offset = "0xBF4BD0", VA = "0xBF4BD0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600197C")]
			[Address(RVA = "0xBF440C", Offset = "0xBF440C", VA = "0xBF440C")]
			[DebuggerHidden]
			public <AwaitStartPatrolling>d__34(int <>1__state)
			{
			}

			[Token(Token = "0x600197D")]
			[Address(RVA = "0xBF4970", Offset = "0xBF4970", VA = "0xBF4970", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600197E")]
			[Address(RVA = "0xBF4974", Offset = "0xBF4974", VA = "0xBF4974", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001980")]
			[Address(RVA = "0xBF4B70", Offset = "0xBF4B70", VA = "0xBF4B70", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400084C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public BossPredatorState state;

		[Token(Token = "0x400084D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private Vector3 patrolPoint;

		[Token(Token = "0x400084E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float patrolRadius;

		[Token(Token = "0x400084F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Vector3 target;

		[Token(Token = "0x4000850")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private NavMeshAgent pred;

		[Token(Token = "0x4000851")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float nextPatrolPointTime;

		[Token(Token = "0x4000852")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private int bobberLayer;

		[Token(Token = "0x4000853")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public BossPredatorController bossPredatorController;

		[Token(Token = "0x4000854")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Animator anim;

		[Token(Token = "0x4000855")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Collider col;

		[Token(Token = "0x4000856")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool hasAttacked;

		[Token(Token = "0x4000857")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public GameObject exclamations;

		[Token(Token = "0x4000858")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Transform model;

		[Token(Token = "0x4000859")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Tween diveTween;

		[Token(Token = "0x400085A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Tween surfaceTween;

		[Token(Token = "0x400085B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private float strikingDistance;

		[Token(Token = "0x400085C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private readonly float speedScalingFactor;

		[Token(Token = "0x400085D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Vector3[] waypoints;

		[Token(Token = "0x400085E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private int numWaypointsOnRadius;

		[Token(Token = "0x400085F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private int waypointIndex;

		[Token(Token = "0x60007D7")]
		[Address(RVA = "0xBF33E0", Offset = "0xBF33E0", VA = "0xBF33E0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60007D8")]
		[Address(RVA = "0xBF3748", Offset = "0xBF3748", VA = "0xBF3748")]
		public void Reset(bool onEnable = false)
		{
		}

		[Token(Token = "0x60007D9")]
		[Address(RVA = "0xBF39CC", Offset = "0xBF39CC", VA = "0xBF39CC")]
		private void ResetPosition()
		{
		}

		[Token(Token = "0x60007DA")]
		[Address(RVA = "0xBF3C0C", Offset = "0xBF3C0C", VA = "0xBF3C0C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60007DB")]
		[Address(RVA = "0xBF3CBC", Offset = "0xBF3CBC", VA = "0xBF3CBC")]
		private void Update()
		{
		}

		[Token(Token = "0x60007DC")]
		[Address(RVA = "0xBF3B9C", Offset = "0xBF3B9C", VA = "0xBF3B9C")]
		private void FaceTarget(Vector3 trg)
		{
		}

		[Token(Token = "0x60007DD")]
		[Address(RVA = "0xBF401C", Offset = "0xBF401C", VA = "0xBF401C")]
		internal void DoAttack()
		{
		}

		[Token(Token = "0x60007DE")]
		[Address(RVA = "0xBF3FFC", Offset = "0xBF3FFC", VA = "0xBF3FFC")]
		private void ResetAnimSpeed()
		{
		}

		[Token(Token = "0x60007DF")]
		[Address(RVA = "0xBF3F78", Offset = "0xBF3F78", VA = "0xBF3F78")]
		private void SetTarget(Vector3 trg)
		{
		}

		[Token(Token = "0x60007E0")]
		[Address(RVA = "0xBF4258", Offset = "0xBF4258", VA = "0xBF4258")]
		internal void Dive()
		{
		}

		[Token(Token = "0x60007E1")]
		[Address(RVA = "0xBF388C", Offset = "0xBF388C", VA = "0xBF388C")]
		private void Surface()
		{
		}

		[Token(Token = "0x60007E2")]
		[Address(RVA = "0xBF3AC4", Offset = "0xBF3AC4", VA = "0xBF3AC4")]
		private void StartPatrolling()
		{
		}

		[Token(Token = "0x60007E3")]
		[Address(RVA = "0xBF4370", Offset = "0xBF4370", VA = "0xBF4370")]
		private void StartFollowing()
		{
		}

		[Token(Token = "0x60007E4")]
		[Address(RVA = "0xBF3950", Offset = "0xBF3950", VA = "0xBF3950")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9EF754", Offset = "0x9EF754")]
		private IEnumerator AwaitStartPatrolling()
		{
			return null;
		}

		[Token(Token = "0x60007E5")]
		[Address(RVA = "0xBF4438", Offset = "0xBF4438", VA = "0xBF4438")]
		public void WarpToPatrolPoint()
		{
		}

		[Token(Token = "0x60007E6")]
		[Address(RVA = "0xBF4460", Offset = "0xBF4460", VA = "0xBF4460")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x60007E7")]
		[Address(RVA = "0xBF44B8", Offset = "0xBF44B8", VA = "0xBF44B8")]
		private void FishCollision()
		{
		}

		[Token(Token = "0x60007E8")]
		[Address(RVA = "0xBF41B4", Offset = "0xBF41B4", VA = "0xBF41B4")]
		private void PredAlert()
		{
		}

		[Token(Token = "0x60007E9")]
		[Address(RVA = "0xBF4638", Offset = "0xBF4638", VA = "0xBF4638")]
		internal void StepFailed()
		{
		}

		[Token(Token = "0x60007EA")]
		[Address(RVA = "0xBF46B0", Offset = "0xBF46B0", VA = "0xBF46B0")]
		private bool WithinStrikingDistance()
		{
			return default(bool);
		}

		[Token(Token = "0x60007EB")]
		[Address(RVA = "0xBF34EC", Offset = "0xBF34EC", VA = "0xBF34EC")]
		private Vector3[] SetWayPoints()
		{
			return null;
		}

		[Token(Token = "0x60007EC")]
		[Address(RVA = "0xBF47C8", Offset = "0xBF47C8", VA = "0xBF47C8")]
		public BossPredatorAI()
		{
		}

		[Token(Token = "0x60007ED")]
		[Address(RVA = "0xBF47F4", Offset = "0xBF47F4", VA = "0xBF47F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EF7B8", Offset = "0x9EF7B8")]
		private void <ResetPosition>b__23_0()
		{
		}

		[Token(Token = "0x60007EE")]
		[Address(RVA = "0xBF47FC", Offset = "0xBF47FC", VA = "0xBF47FC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EF7C8", Offset = "0x9EF7C8")]
		private void <DoAttack>b__27_0()
		{
		}

		[Token(Token = "0x60007EF")]
		[Address(RVA = "0xBF4878", Offset = "0xBF4878", VA = "0xBF4878")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EF7D8", Offset = "0x9EF7D8")]
		private void <Dive>b__30_0()
		{
		}
	}
	[Token(Token = "0x2000147")]
	public class BossPredatorController : MonoBehaviour
	{
		[Token(Token = "0x4000860")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static BossPredatorController instance;

		[Token(Token = "0x4000861")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform BossPred;

		[Token(Token = "0x4000862")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private SpawnPool pool;

		[Token(Token = "0x4000863")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private BossPredatorSkin skin;

		[Token(Token = "0x4000864")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int maxNumber;

		[Token(Token = "0x4000865")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int initialNumber;

		[Token(Token = "0x4000866")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int numSpawnAtOnce;

		[Token(Token = "0x4000867")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float spawnRate;

		[Token(Token = "0x4000868")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float speed;

		[Token(Token = "0x4000869")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool initialSpawn;

		[Token(Token = "0x400086A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		private bool systemIsActive;

		[Token(Token = "0x400086B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private int numHiddenPredators;

		[Token(Token = "0x400086C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public BossPredatorAI interestedBossPred;

		[Token(Token = "0x400086D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private List<BossPredatorAI> bossPredators;

		[Token(Token = "0x400086E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private string lastLocationBCID;

		[Token(Token = "0x400086F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float SystemActivatedTime;

		[Token(Token = "0x4000870")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float systemActivateKeepout;

		[Token(Token = "0x170000DE")]
		public static BossPredatorAI InterestedBossPred
		{
			[Token(Token = "0x60007F0")]
			[Address(RVA = "0xBF4BD8", Offset = "0xBF4BD8", VA = "0xBF4BD8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60007F1")]
		[Address(RVA = "0xBF4C34", Offset = "0xBF4C34", VA = "0xBF4C34")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60007F2")]
		[Address(RVA = "0xBF4E78", Offset = "0xBF4E78", VA = "0xBF4E78")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60007F3")]
		[Address(RVA = "0xBF5030", Offset = "0xBF5030", VA = "0xBF5030")]
		private void FishpoolChanged()
		{
		}

		[Token(Token = "0x60007F4")]
		[Address(RVA = "0xBF4DBC", Offset = "0xBF4DBC", VA = "0xBF4DBC")]
		public void InitPredator()
		{
		}

		[Token(Token = "0x60007F5")]
		[Address(RVA = "0xBF525C", Offset = "0xBF525C", VA = "0xBF525C")]
		private void RodWasReset()
		{
		}

		[Token(Token = "0x60007F6")]
		[Address(RVA = "0xBF5034", Offset = "0xBF5034", VA = "0xBF5034")]
		public void SystemInit()
		{
		}

		[Token(Token = "0x60007F7")]
		[Address(RVA = "0xBF5364", Offset = "0xBF5364", VA = "0xBF5364")]
		private void SystemEnable()
		{
		}

		[Token(Token = "0x60007F8")]
		[Address(RVA = "0xBF5550", Offset = "0xBF5550", VA = "0xBF5550")]
		private void SystemDisable()
		{
		}

		[Token(Token = "0x60007F9")]
		[Address(RVA = "0xBF53F4", Offset = "0xBF53F4", VA = "0xBF53F4")]
		private void PrepPredatorList()
		{
		}

		[Token(Token = "0x60007FA")]
		[Address(RVA = "0xBF5494", Offset = "0xBF5494", VA = "0xBF5494")]
		private void Spawn()
		{
		}

		[Token(Token = "0x60007FB")]
		[Address(RVA = "0xBF4894", Offset = "0xBF4894", VA = "0xBF4894")]
		public void RemoveMe(BossPredatorAI bossPredatorAI)
		{
		}

		[Token(Token = "0x60007FC")]
		[Address(RVA = "0xBF568C", Offset = "0xBF568C", VA = "0xBF568C")]
		private void SpawnSingle(float lifetimeTargetOverride = 0f)
		{
		}

		[Token(Token = "0x60007FD")]
		[Address(RVA = "0xBF5818", Offset = "0xBF5818", VA = "0xBF5818")]
		private Vector3 GetPos()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60007FE")]
		[Address(RVA = "0xBF5914", Offset = "0xBF5914", VA = "0xBF5914")]
		private bool TooCloseToOthers(Vector3 pos)
		{
			return default(bool);
		}

		[Token(Token = "0x60007FF")]
		[Address(RVA = "0xBF51B4", Offset = "0xBF51B4", VA = "0xBF51B4")]
		public static void ClearAll()
		{
		}

		[Token(Token = "0x6000800")]
		[Address(RVA = "0xBF5AC4", Offset = "0xBF5AC4", VA = "0xBF5AC4")]
		private void PatternStepFailed()
		{
		}

		[Token(Token = "0x6000801")]
		[Address(RVA = "0xBF5BF0", Offset = "0xBF5BF0", VA = "0xBF5BF0")]
		private BossPredatorAI ClosestBossPredator()
		{
			return null;
		}

		[Token(Token = "0x6000802")]
		[Address(RVA = "0xBF5E1C", Offset = "0xBF5E1C", VA = "0xBF5E1C")]
		public static void FishLost()
		{
		}

		[Token(Token = "0x6000803")]
		[Address(RVA = "0xBF5E20", Offset = "0xBF5E20", VA = "0xBF5E20")]
		private void ResetInterested()
		{
		}

		[Token(Token = "0x6000804")]
		[Address(RVA = "0xBF5EC4", Offset = "0xBF5EC4", VA = "0xBF5EC4")]
		public BossPredatorController()
		{
		}
	}
	[Token(Token = "0x2000148")]
	public class BossPredatorsDebug : MonoBehaviour
	{
		[Token(Token = "0x4000871")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TextMeshProUGUI numText;

		[Token(Token = "0x4000872")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Slider numSlider;

		[Token(Token = "0x4000873")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Button spawn;

		[Token(Token = "0x4000874")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Button clearAll;

		[Token(Token = "0x6000805")]
		[Address(RVA = "0xBF5F2C", Offset = "0xBF5F2C", VA = "0xBF5F2C")]
		public void Spawn()
		{
		}

		[Token(Token = "0x6000806")]
		[Address(RVA = "0xBF5F30", Offset = "0xBF5F30", VA = "0xBF5F30")]
		public void ClearAll()
		{
		}

		[Token(Token = "0x6000807")]
		[Address(RVA = "0xBF5F34", Offset = "0xBF5F34", VA = "0xBF5F34")]
		public void OnValueChanged()
		{
		}

		[Token(Token = "0x6000808")]
		[Address(RVA = "0xBF5FA0", Offset = "0xBF5FA0", VA = "0xBF5FA0")]
		public BossPredatorsDebug()
		{
		}
	}
	[Token(Token = "0x2000149")]
	public class CameraFadeEffect : MonoBehaviour
	{
		[Token(Token = "0x20003B3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E7E08", Offset = "0x9E7E08")]
		private sealed class <>c__DisplayClass3_0
		{
			[Token(Token = "0x40018AF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float targetAlpha;

			[Token(Token = "0x40018B0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Action onDone;

			[Token(Token = "0x6001982")]
			[Address(RVA = "0xBF6A70", Offset = "0xBF6A70", VA = "0xBF6A70")]
			public <>c__DisplayClass3_0()
			{
			}

			[Token(Token = "0x6001983")]
			[Address(RVA = "0xBF6A80", Offset = "0xBF6A80", VA = "0xBF6A80")]
			internal void <TriggerFade>b__0()
			{
			}
		}

		[Token(Token = "0x4000875")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static CameraFadeEffect instance;

		[Token(Token = "0x4000876")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer fader;

		[Token(Token = "0x6000809")]
		[Address(RVA = "0xBF67AC", Offset = "0xBF67AC", VA = "0xBF67AC")]
		private void Awake()
		{
		}

		[Token(Token = "0x600080A")]
		[Address(RVA = "0xBF6894", Offset = "0xBF6894", VA = "0xBF6894")]
		public static void TriggerFade(Color startColor, float startAlpha, float targetAlpha, float duration, [Optional] Action onDone)
		{
		}

		[Token(Token = "0x600080B")]
		[Address(RVA = "0xBF6A78", Offset = "0xBF6A78", VA = "0xBF6A78")]
		public CameraFadeEffect()
		{
		}
	}
	[Token(Token = "0x200014A")]
	public enum CastPowerSlope
	{
		[Token(Token = "0x4000878")]
		Linear,
		[Token(Token = "0x4000879")]
		InSine,
		[Token(Token = "0x400087A")]
		OutSine,
		[Token(Token = "0x400087B")]
		InOutSine
	}
	[Token(Token = "0x200014B")]
	public class CastDir : MonoBehaviour
	{
		[Token(Token = "0x400087C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform castTargetLive;

		[Token(Token = "0x400087D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform castTargetAtLaunch;

		[Token(Token = "0x400087E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform castTargetAdjusted;

		[Token(Token = "0x400087F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static CastDir instance;

		[Token(Token = "0x4000880")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float minDistance;

		[Token(Token = "0x4000881")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public CastPowerSlope powerSlope;

		[Token(Token = "0x4000882")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float angle;

		[Token(Token = "0x4000883")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float _degree;

		[Token(Token = "0x170000DF")]
		public static float degree
		{
			[Token(Token = "0x600080C")]
			[Address(RVA = "0xBF6B14", Offset = "0xBF6B14", VA = "0xBF6B14")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170000E0")]
		public static Vector3 target
		{
			[Token(Token = "0x600080D")]
			[Address(RVA = "0xBF6BA8", Offset = "0xBF6BA8", VA = "0xBF6BA8")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x600080E")]
		[Address(RVA = "0xBF6C40", Offset = "0xBF6C40", VA = "0xBF6C40")]
		public static Vector3 GetTarget(float speed)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600080F")]
		[Address(RVA = "0xBF6EDC", Offset = "0xBF6EDC", VA = "0xBF6EDC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000810")]
		[Address(RVA = "0xBF6F34", Offset = "0xBF6F34", VA = "0xBF6F34")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6000811")]
		[Address(RVA = "0xBF7048", Offset = "0xBF7048", VA = "0xBF7048")]
		private void SetTargetPos()
		{
		}

		[Token(Token = "0x6000812")]
		[Address(RVA = "0xBF72F4", Offset = "0xBF72F4", VA = "0xBF72F4")]
		private Vector3 GetHmdRelativePos()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000813")]
		[Address(RVA = "0xBF71D4", Offset = "0xBF71D4", VA = "0xBF71D4")]
		private float GetAngle()
		{
			return default(float);
		}

		[Token(Token = "0x6000814")]
		[Address(RVA = "0xBF7448", Offset = "0xBF7448", VA = "0xBF7448")]
		public static Vector3 GetNudgeVector(Vector3 currentPos)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000815")]
		[Address(RVA = "0xBF75D8", Offset = "0xBF75D8", VA = "0xBF75D8")]
		public CastDir()
		{
		}
	}
	[Token(Token = "0x200014C")]
	public class CastTarget : MonoBehaviour
	{
		[Token(Token = "0x6000816")]
		[Address(RVA = "0xBF75E8", Offset = "0xBF75E8", VA = "0xBF75E8")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6000817")]
		[Address(RVA = "0xBF76C8", Offset = "0xBF76C8", VA = "0xBF76C8")]
		public CastTarget()
		{
		}
	}
	[Token(Token = "0x200014D")]
	public class CastTargetController : MonoBehaviour
	{
		[Token(Token = "0x4000884")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject[] targetsClose;

		[Token(Token = "0x4000885")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject[] targetsMid;

		[Token(Token = "0x4000886")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject[] targetsFar;

		[Token(Token = "0x4000887")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static CastTargetController instance;

		[Token(Token = "0x4000888")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<GameObject> targets;

		[Token(Token = "0x4000889")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int numTargetsPerband;

		[Token(Token = "0x6000818")]
		[Address(RVA = "0xBF76D0", Offset = "0xBF76D0", VA = "0xBF76D0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000819")]
		[Address(RVA = "0xBF7830", Offset = "0xBF7830", VA = "0xBF7830")]
		public static void NewTargets()
		{
		}

		[Token(Token = "0x600081A")]
		[Address(RVA = "0xBF7888", Offset = "0xBF7888", VA = "0xBF7888")]
		private void ResetTargets()
		{
		}

		[Token(Token = "0x600081B")]
		[Address(RVA = "0xBF7730", Offset = "0xBF7730", VA = "0xBF7730")]
		private void ClearAllTargets()
		{
		}

		[Token(Token = "0x600081C")]
		[Address(RVA = "0xBF7BC4", Offset = "0xBF7BC4", VA = "0xBF7BC4")]
		public CastTargetController()
		{
		}
	}
	[Token(Token = "0x200014E")]
	public class CastVector : MonoBehaviour
	{
		[Token(Token = "0x400088A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static CastVector instance;

		[Token(Token = "0x400088B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Vector3[] forwards;

		[Token(Token = "0x400088C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int index;

		[Token(Token = "0x400088D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private int numVals;

		[Token(Token = "0x170000E1")]
		public static Vector3 direction
		{
			[Token(Token = "0x600081D")]
			[Address(RVA = "0xBF7BD4", Offset = "0xBF7BD4", VA = "0xBF7BD4")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x600081E")]
		[Address(RVA = "0xBF7D4C", Offset = "0xBF7D4C", VA = "0xBF7D4C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600081F")]
		[Address(RVA = "0xBF7DC8", Offset = "0xBF7DC8", VA = "0xBF7DC8")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000820")]
		[Address(RVA = "0xBF7E4C", Offset = "0xBF7E4C", VA = "0xBF7E4C")]
		public CastVector()
		{
		}
	}
	[Token(Token = "0x200014F")]
	public class CastingDebug : MonoBehaviour
	{
		[Token(Token = "0x400088E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float castSpeedMultiplierDefault;

		[Token(Token = "0x400088F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Slider castSpeedMulti_Sider;

		[Token(Token = "0x4000890")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private TMP_Text castSpeedMulti_Text;

		[Token(Token = "0x4000891")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float minCastDistanceDefault;

		[Token(Token = "0x4000892")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Slider minCastDist_Slider;

		[Token(Token = "0x4000893")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private TMP_Text minCastDist_Text;

		[Token(Token = "0x4000894")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Toggle togLinear;

		[Token(Token = "0x4000895")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Toggle togInOutSine;

		[Token(Token = "0x4000896")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Toggle togInSine;

		[Token(Token = "0x4000897")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Toggle togOutSine;

		[Token(Token = "0x6000821")]
		[Address(RVA = "0xBF7E5C", Offset = "0xBF7E5C", VA = "0xBF7E5C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000822")]
		[Address(RVA = "0xBF7EF4", Offset = "0xBF7EF4", VA = "0xBF7EF4")]
		private void Update()
		{
		}

		[Token(Token = "0x6000823")]
		[Address(RVA = "0xBF7FD0", Offset = "0xBF7FD0", VA = "0xBF7FD0")]
		public void OnCastSpeedMultiChanged()
		{
		}

		[Token(Token = "0x6000824")]
		[Address(RVA = "0xBF8064", Offset = "0xBF8064", VA = "0xBF8064")]
		public void OnCastSpeedMultiReset()
		{
		}

		[Token(Token = "0x6000825")]
		[Address(RVA = "0xBF80F8", Offset = "0xBF80F8", VA = "0xBF80F8")]
		public void OnMinCastDistChanged()
		{
		}

		[Token(Token = "0x6000826")]
		[Address(RVA = "0xBF8170", Offset = "0xBF8170", VA = "0xBF8170")]
		public void OnMinCastDistReset()
		{
		}

		[Token(Token = "0x6000827")]
		[Address(RVA = "0xBF81F0", Offset = "0xBF81F0", VA = "0xBF81F0")]
		public void Targets()
		{
		}

		[Token(Token = "0x6000828")]
		[Address(RVA = "0xBF81F4", Offset = "0xBF81F4", VA = "0xBF81F4")]
		public void OnToggleChanged(Toggle tog)
		{
		}

		[Token(Token = "0x6000829")]
		[Address(RVA = "0xBF8394", Offset = "0xBF8394", VA = "0xBF8394")]
		public CastingDebug()
		{
		}
	}
	[Token(Token = "0x2000150")]
	public enum ToggleLanguage
	{
		[Token(Token = "0x4000899")]
		English,
		[Token(Token = "0x400089A")]
		ChineseSimplified,
		[Token(Token = "0x400089B")]
		ChineseTraditional,
		[Token(Token = "0x400089C")]
		Korean,
		[Token(Token = "0x400089D")]
		Japanese
	}
	[Token(Token = "0x2000151")]
	public class ChangeLanguageSetting : MonoBehaviour
	{
		[Token(Token = "0x20003B4")]
		public delegate void ChangeLanguageEvent(ToggleLanguage language);

		[Token(Token = "0x400089E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle toggle;

		[Token(Token = "0x400089F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private ToggleLanguage toggleLanguage;

		[Token(Token = "0x40008A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private string cacheSymbol;

		[Token(Token = "0x14000007")]
		public static event ChangeLanguageEvent ChangeLanguage
		{
			[Token(Token = "0x600082A")]
			[Address(RVA = "0xBF9240", Offset = "0xBF9240", VA = "0xBF9240")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EF7E8", Offset = "0x9EF7E8")]
			add
			{
			}
			[Token(Token = "0x600082B")]
			[Address(RVA = "0xBF92F4", Offset = "0xBF92F4", VA = "0xBF92F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EF7F8", Offset = "0x9EF7F8")]
			remove
			{
			}
		}

		[Token(Token = "0x600082C")]
		[Address(RVA = "0xBF93A8", Offset = "0xBF93A8", VA = "0xBF93A8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600082D")]
		[Address(RVA = "0xBF93AC", Offset = "0xBF93AC", VA = "0xBF93AC")]
		private void InitUI()
		{
		}

		[Token(Token = "0x600082E")]
		[Address(RVA = "0xBF95B8", Offset = "0xBF95B8", VA = "0xBF95B8")]
		public void OnClick()
		{
		}

		[Token(Token = "0x600082F")]
		[Address(RVA = "0xBF9694", Offset = "0xBF9694", VA = "0xBF9694")]
		private void RefreshToggle(ToggleLanguage language)
		{
		}

		[Token(Token = "0x6000830")]
		[Address(RVA = "0xBF9A70", Offset = "0xBF9A70", VA = "0xBF9A70")]
		public ChangeLanguageSetting()
		{
		}
	}
	[Token(Token = "0x2000152")]
	public delegate void EndSliderDragEventHandler(float val);
	[Token(Token = "0x2000153")]
	public class ChangePlayerSetting : MonoBehaviour, IPointerUpHandler, IEventSystemHandler
	{
		[Token(Token = "0x20003B5")]
		private enum ToggleLanguage
		{
			[Token(Token = "0x40018B2")]
			English,
			[Token(Token = "0x40018B3")]
			ChineseSimplified,
			[Token(Token = "0x40018B4")]
			ChineseTraditional,
			[Token(Token = "0x40018B5")]
			Korean,
			[Token(Token = "0x40018B6")]
			Japanese
		}

		[Token(Token = "0x40008A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PlayerSetting setting;

		[Token(Token = "0x40008A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Toggle toggle;

		[Token(Token = "0x40008A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ToggleGroup toggleGroup;

		[Token(Token = "0x40008A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Button button;

		[Token(Token = "0x40008A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Slider slider;

		[Token(Token = "0x40008A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float m_cameraOffset;

		[Token(Token = "0x40008A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float m_musicVolume;

		[Token(Token = "0x14000008")]
		public event EndSliderDragEventHandler EndDrag
		{
			[Token(Token = "0x6000835")]
			[Address(RVA = "0xBF9B24", Offset = "0xBF9B24", VA = "0xBF9B24")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EF808", Offset = "0x9EF808")]
			add
			{
			}
			[Token(Token = "0x6000836")]
			[Address(RVA = "0xBF9BC8", Offset = "0xBF9BC8", VA = "0xBF9BC8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EF818", Offset = "0x9EF818")]
			remove
			{
			}
		}

		[Token(Token = "0x6000837")]
		[Address(RVA = "0xBF9C6C", Offset = "0xBF9C6C", VA = "0xBF9C6C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000838")]
		[Address(RVA = "0xBF9CC8", Offset = "0xBF9CC8", VA = "0xBF9CC8")]
		private void InitUI()
		{
		}

		[Token(Token = "0x6000839")]
		[Address(RVA = "0xBFA064", Offset = "0xBFA064", VA = "0xBFA064")]
		public void OnClick()
		{
		}

		[Token(Token = "0x600083A")]
		[Address(RVA = "0xBFA474", Offset = "0xBFA474", VA = "0xBFA474")]
		public void OnHeightSliderChanged(float value)
		{
		}

		[Token(Token = "0x600083B")]
		[Address(RVA = "0xBFA47C", Offset = "0xBFA47C", VA = "0xBFA47C")]
		public void OnMusicSliderChanged(float value)
		{
		}

		[Token(Token = "0x600083C")]
		[Address(RVA = "0xBFA488", Offset = "0xBFA488", VA = "0xBFA488", Slot = "4")]
		public void OnPointerUp(PointerEventData data)
		{
		}

		[Token(Token = "0x600083D")]
		[Address(RVA = "0xBFA5EC", Offset = "0xBFA5EC", VA = "0xBFA5EC")]
		public ChangePlayerSetting()
		{
		}
	}
	[Token(Token = "0x2000154")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x9E6D40", Offset = "0x9E6D40")]
	public class CharacterAnimationController : MonoBehaviour
	{
		[Token(Token = "0x40008AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected Animator animator;

		[Token(Token = "0x600083E")]
		[Address(RVA = "0xBFA5F4", Offset = "0xBFA5F4", VA = "0xBFA5F4")]
		private void Start()
		{
		}

		[Token(Token = "0x600083F")]
		[Address(RVA = "0xBFA654", Offset = "0xBFA654", VA = "0xBFA654")]
		public CharacterAnimationController()
		{
		}
	}
	[Token(Token = "0x2000155")]
	public class CirclePositioner : MonoBehaviour
	{
		[Token(Token = "0x6000840")]
		[Address(RVA = "0xBFA748", Offset = "0xBFA748", VA = "0xBFA748")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000841")]
		[Address(RVA = "0xBFA83C", Offset = "0xBFA83C", VA = "0xBFA83C")]
		public CirclePositioner()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000156")]
	public class FishDataClass
	{
		[Token(Token = "0x40008AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public FishType[] FishTypes;

		[Token(Token = "0x6000842")]
		[Address(RVA = "0xD8FE00", Offset = "0xD8FE00", VA = "0xD8FE00")]
		public FishDataClass()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000157")]
	public class FishType
	{
		[Token(Token = "0x40008AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string BCID;

		[Token(Token = "0x40008AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string FishName;

		[Token(Token = "0x40008AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string FishDescription;

		[Token(Token = "0x40008AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int FishIndex;

		[Token(Token = "0x40008B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float FishStamina;

		[Token(Token = "0x40008B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float StaminaReductionReeling;

		[Token(Token = "0x40008B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float StaminaReductionReelingStunned;

		[Token(Token = "0x40008B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float StaminaReductionLeans;

		[Token(Token = "0x40008B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float StaminaReductionSnaps;

		[Token(Token = "0x40008B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float StaminaReductionJumps;

		[Token(Token = "0x40008B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float StaminaReductionPostPatternRest;

		[Token(Token = "0x40008B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float StaminaReductionPerfectPattern;

		[Token(Token = "0x40008B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float StaminaReductionPowerReelRodLvl1;

		[Token(Token = "0x40008B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float StaminaReductionPowerReelRodLvl2;

		[Token(Token = "0x40008BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float StaminaReductionPowerReelRodLvl3;

		[Token(Token = "0x40008BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float StaminaReductionStunRodLvl1;

		[Token(Token = "0x40008BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float StaminaReductionStunRodLvl2;

		[Token(Token = "0x40008BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float StaminaReductionStunRodLvl3;

		[Token(Token = "0x40008BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public float StaminaReductionTeleportRodLvl1;

		[Token(Token = "0x40008BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public float StaminaReductionTeleportRodLvl2;

		[Token(Token = "0x40008C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public float StaminaReductionTeleportRodLvl3;

		[Token(Token = "0x40008C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public float Speed;

		[Token(Token = "0x40008C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public float SpeedReeling;

		[Token(Token = "0x40008C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public float SpeedPatternPlay;

		[Token(Token = "0x40008C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public float FleeTime;

		[Token(Token = "0x40008C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public float RestTime;

		[Token(Token = "0x40008C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public float ReelingSpeedMultiplier;

		[Token(Token = "0x40008C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public float StartingTension;

		[Token(Token = "0x40008C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public float SmallWeightLow;

		[Token(Token = "0x40008C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public float SmallWeightHigh;

		[Token(Token = "0x40008CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public float MediumWeightHigh;

		[Token(Token = "0x40008CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public float LargeWeightHigh;

		[Token(Token = "0x40008CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public float MinLength;

		[Token(Token = "0x40008CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public float MaxLength;

		[Token(Token = "0x40008CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public string Icon;

		[Token(Token = "0x40008CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public string FishOPediaListIcon;

		[Token(Token = "0x40008D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public string UncaughtIcon;

		[Token(Token = "0x40008D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public string UncaughtFishOPediaListIcon;

		[Token(Token = "0x40008D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public string PrefabName;

		[Token(Token = "0x40008D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public bool isFish;

		[Token(Token = "0x40008D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public string FishableType;

		[Token(Token = "0x40008D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public string FishGrade;

		[Token(Token = "0x40008D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public string Difficulty;

		[Token(Token = "0x40008D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public string InitialMode;

		[Token(Token = "0x40008D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public float InitialModeDuration;

		[Token(Token = "0x40008D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		public float ArrowSolveTime;

		[Token(Token = "0x40008DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public float IncreaseRestTimePerFleeBy;

		[Token(Token = "0x40008DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		public float IncreaseTensionOnArrowFailBy;

		[Token(Token = "0x40008DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public float DecreaseTensionOnArrowSolvedBy;

		[Token(Token = "0x40008DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		public float BlueZoneSize;

		[Token(Token = "0x40008DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public float RedZoneSize;

		[Token(Token = "0x40008DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		public float PatternFrequency;

		[Token(Token = "0x40008E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		public float LikelihoodChangeLeanDirection;

		[Token(Token = "0x40008E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		public string[] PatternIDs;

		[Token(Token = "0x40008E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		public int[] BoostPoints;

		[Token(Token = "0x40008E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		public string[] Resources_1Star;

		[Token(Token = "0x40008E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		public int[] ResourceAmounts_1Star;

		[Token(Token = "0x40008E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		public string[] Resources_2Star;

		[Token(Token = "0x40008E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		public int[] ResourceAmounts_2Star;

		[Token(Token = "0x40008E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		public string[] Resources_3Star;

		[Token(Token = "0x40008E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		public int[] ResourceAmounts_3Star;

		[Token(Token = "0x40008E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		public int[] TournamentPoints;

		[Token(Token = "0x40008EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		public string FishScale;

		[Token(Token = "0x40008EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		public string[] AttractionLure;

		[Token(Token = "0x40008EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		public int[] AttractionValue;

		[Token(Token = "0x40008ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		public string PreferredFloatingLure01;

		[Token(Token = "0x40008EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		public string PreferredFloatingLure02;

		[Token(Token = "0x40008EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		public string PreferredFloatingLure03;

		[Token(Token = "0x40008F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		public string PreferredSwimmingLure01;

		[Token(Token = "0x40008F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		public string PreferredSwimmingLure02;

		[Token(Token = "0x40008F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		public string PreferredSwimmingLure03;

		[Token(Token = "0x40008F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		public int World;

		[Token(Token = "0x40008F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		public string[] Locations;

		[Token(Token = "0x40008F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		public float UnderwaterDepth;

		[Token(Token = "0x40008F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C4")]
		public float ExamineDistance;

		[Token(Token = "0x40008F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		public float JumpDistance;

		[Token(Token = "0x40008F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
		public float JumpHeight;

		[Token(Token = "0x40008F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		public float JumpDuration;

		[Token(Token = "0x40008FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D4")]
		public bool CanSchool;

		[Token(Token = "0x40008FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		public float MinSpeedInAquarium;

		[Token(Token = "0x40008FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1DC")]
		public float MaxSpeedInAquarium;

		[Token(Token = "0x40008FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		public string PreferredRegion;

		[Token(Token = "0x40008FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		public string AquariumPrefabName;

		[Token(Token = "0x40008FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		public float AddChargeOnRelease;

		[Token(Token = "0x4000900")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F4")]
		public float AddChargeOnKeep;

		[Token(Token = "0x4000901")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		public float PowerReelLvl1BoostDuration;

		[Token(Token = "0x4000902")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1FC")]
		public float PowerReelLvl2BoostDuration;

		[Token(Token = "0x4000903")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		public float PowerReelLvl3BoostDuration;

		[Token(Token = "0x4000904")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x204")]
		public float PowerReelLvl1BoostReelMult;

		[Token(Token = "0x4000905")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		public float PowerReelLvl2BoostReelMult;

		[Token(Token = "0x4000906")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20C")]
		public float PowerReelLvl3BoostReelMult;

		[Token(Token = "0x4000907")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		public float StunLvl1BoostDuration;

		[Token(Token = "0x4000908")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x214")]
		public float StunLvl2BoostDuration;

		[Token(Token = "0x4000909")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
		public float StunLvl3BoostDuration;

		[Token(Token = "0x400090A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21C")]
		public float TeleportLvl1BoostPower;

		[Token(Token = "0x400090B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
		public float TeleportLvl2BoostPower;

		[Token(Token = "0x400090C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x224")]
		public float TeleportLvl3BoostPower;

		[Token(Token = "0x6000843")]
		[Address(RVA = "0xC94F98", Offset = "0xC94F98", VA = "0xC94F98")]
		public FishType()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000158")]
	public class FishPoolDataClass
	{
		[Token(Token = "0x400090D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public FishPool[] FishPools;

		[Token(Token = "0x6000844")]
		[Address(RVA = "0xD94E7C", Offset = "0xD94E7C", VA = "0xD94E7C")]
		public FishPoolDataClass()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000159")]
	public class FishPool
	{
		[Token(Token = "0x400090E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string BCID;

		[Token(Token = "0x400090F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string[] Fishes;

		[Token(Token = "0x4000910")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float[] RarityOverrides;

		[Token(Token = "0x4000911")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float WaitTimeNoBaitMin;

		[Token(Token = "0x4000912")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float WaitTimeNoBaitMax;

		[Token(Token = "0x4000913")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float WaitTimeWithBaitMin;

		[Token(Token = "0x4000914")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float WaitTimeWithBaitMax;

		[Token(Token = "0x4000915")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float HookWindowTime;

		[Token(Token = "0x4000916")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float MaxFleeDistance;

		[Token(Token = "0x4000917")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string World;

		[Token(Token = "0x4000918")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float[] StarProbability;

		[Token(Token = "0x6000845")]
		[Address(RVA = "0xD94D64", Offset = "0xD94D64", VA = "0xD94D64")]
		public FishPool()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200015A")]
	public class FishPool2DataClass
	{
		[Token(Token = "0x4000919")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public FishPool2[] FishPool2s;

		[Token(Token = "0x6000846")]
		[Address(RVA = "0xD94D74", Offset = "0xD94D74", VA = "0xD94D74")]
		public FishPool2DataClass()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200015B")]
	public class FishPool2
	{
		[Token(Token = "0x400091A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string BCID;

		[Token(Token = "0x400091B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string World;

		[Token(Token = "0x400091C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string Location;

		[Token(Token = "0x400091D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int TotalFish;

		[Token(Token = "0x400091E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool IsFishRespawn;

		[Token(Token = "0x400091F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string[] CriticalFishes;

		[Token(Token = "0x4000920")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float[] CriticalFishStarProbability;

		[Token(Token = "0x4000921")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool[] CriticalFishFishfinderables;

		[Token(Token = "0x4000922")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float[] CriticalFishLocations;

		[Token(Token = "0x4000923")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public string[] MainFishes;

		[Token(Token = "0x4000924")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float[] MainFishProbability;

		[Token(Token = "0x4000925")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float[] MainFishStarProbability;

		[Token(Token = "0x4000926")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public bool[] MainFishFishfinderables;

		[Token(Token = "0x4000927")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public float[] MainFishLocations;

		[Token(Token = "0x4000928")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public string[] RespawnFishes;

		[Token(Token = "0x4000929")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public float[] RespawnFishProbability;

		[Token(Token = "0x400092A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public float[] RespawnFishStarProbability;

		[Token(Token = "0x400092B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public bool[] RespawnFishFishfinderables;

		[Token(Token = "0x400092C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public float[] RespawnFishLocations;

		[Token(Token = "0x400092D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public bool PredatorActive;

		[Token(Token = "0x400092E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public string PredatorSkin;

		[Token(Token = "0x400092F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public int PredatorMaxNumber;

		[Token(Token = "0x4000930")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		public int PredatorInitialNumber;

		[Token(Token = "0x4000931")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public int PredatorNumSpawnAtOnce;

		[Token(Token = "0x4000932")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		public float PredatorSpawnRate;

		[Token(Token = "0x4000933")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public float PredatorLifetime;

		[Token(Token = "0x4000934")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		public float PredatorSystemActiveDuration;

		[Token(Token = "0x4000935")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public float PredatorSystemInactiveDuration;

		[Token(Token = "0x4000936")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		public float PredatorSpeed;

		[Token(Token = "0x4000937")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public bool BossPredatorActive;

		[Token(Token = "0x4000938")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public string BossPredatorSkin;

		[Token(Token = "0x4000939")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public int BossPredatorMaxNumber;

		[Token(Token = "0x400093A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		public int BossPredatorInitialNumber;

		[Token(Token = "0x400093B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public int BossPredatorNumSpawnAtOnce;

		[Token(Token = "0x400093C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		public float BossPredatorSpawnRate;

		[Token(Token = "0x400093D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public float BossPredatorLifetime;

		[Token(Token = "0x400093E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		public float BossPredatorSystemActiveDuration;

		[Token(Token = "0x400093F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public float BossPredatorSystemInactiveDuration;

		[Token(Token = "0x4000940")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		public float BossPredatorSpeed;

		[Token(Token = "0x4000941")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public bool RepellentActive;

		[Token(Token = "0x4000942")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public string RepellentSkin;

		[Token(Token = "0x4000943")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public int RepellentMaxNumber;

		[Token(Token = "0x4000944")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		public int RepellentInitialNumber;

		[Token(Token = "0x4000945")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		public int RepellentNumSpawnAtOnce;

		[Token(Token = "0x4000946")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		public float RepellentSpawnRate;

		[Token(Token = "0x4000947")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		public float RepellentEffectiveDuration;

		[Token(Token = "0x4000948")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		public float RepellentLifetime;

		[Token(Token = "0x4000949")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		public float RepellentSystemActiveDuration;

		[Token(Token = "0x400094A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		public float RepellentSystemInactiveDuration;

		[Token(Token = "0x6000847")]
		[Address(RVA = "0xD94D6C", Offset = "0xD94D6C", VA = "0xD94D6C")]
		public FishPool2()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200015C")]
	public class MissionDataClass
	{
		[Token(Token = "0x400094B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Mission[] Missions;

		[Token(Token = "0x6000848")]
		[Address(RVA = "0xD51CA8", Offset = "0xD51CA8", VA = "0xD51CA8")]
		public MissionDataClass()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200015D")]
	public class Mission
	{
		[Token(Token = "0x400094C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string BCID;

		[Token(Token = "0x400094D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string World;

		[Token(Token = "0x400094E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string Location;

		[Token(Token = "0x400094F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string MissionType;

		[Token(Token = "0x4000950")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string TimeOfDay;

		[Token(Token = "0x4000951")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string MissionName;

		[Token(Token = "0x4000952")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string MissionDescription;

		[Token(Token = "0x4000953")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string MissionShortDescription;

		[Token(Token = "0x4000954")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public string[] TargetFishTypes;

		[Token(Token = "0x4000955")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public int[] TargetFishTotals;

		[Token(Token = "0x4000956")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public int[] TargetFishGoalStarRating;

		[Token(Token = "0x4000957")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public string[] TargetFishGrades;

		[Token(Token = "0x4000958")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public bool[] IsAnyofTargetFish;

		[Token(Token = "0x4000959")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public string FishGroupName;

		[Token(Token = "0x400095A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public string FishGroupIcon;

		[Token(Token = "0x400095B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public float TargetGoalTotalWeight;

		[Token(Token = "0x400095C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public int TargetGoalTotalStar;

		[Token(Token = "0x400095D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public string[] TargetItems;

		[Token(Token = "0x400095E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public int[] TargetItemTotals;

		[Token(Token = "0x400095F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public int TimeLimit;

		[Token(Token = "0x4000960")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		public int BaitLimit;

		[Token(Token = "0x4000961")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public string[] FishPoolIDs;

		[Token(Token = "0x4000962")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public string LootCratePoolID;

		[Token(Token = "0x4000963")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public string[] TargetLocations;

		[Token(Token = "0x4000964")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public int FishPoolChangingFrequency;

		[Token(Token = "0x4000965")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public string[] Rewards;

		[Token(Token = "0x4000966")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public int[] RewardAmounts;

		[Token(Token = "0x4000967")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public string[] UnlockedMission;

		[Token(Token = "0x4000968")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public int AttemptLimit;

		[Token(Token = "0x4000969")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public string NewsHeadlineText;

		[Token(Token = "0x400096A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public string NewsImage;

		[Token(Token = "0x400096B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public int PlayerRanking;

		[Token(Token = "0x400096C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public int[] TeamRanks;

		[Token(Token = "0x400096D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public string MiniGame;

		[Token(Token = "0x400096E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public string CutsceneButtonText;

		[Token(Token = "0x6000849")]
		[Address(RVA = "0xD48970", Offset = "0xD48970", VA = "0xD48970")]
		public Mission()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200015E")]
	public class MissionProgress
	{
		[Token(Token = "0x400096F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string MissionBCID;

		[Token(Token = "0x4000970")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MissionProgress_Fish[] ProgressFishes;

		[Token(Token = "0x4000971")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MissionProgress_Item[] ProgressItems;

		[Token(Token = "0x4000972")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int TotalStar;

		[Token(Token = "0x600084A")]
		[Address(RVA = "0xD51CB0", Offset = "0xD51CB0", VA = "0xD51CB0")]
		public MissionProgress()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200015F")]
	public class MissionProgress_Fish
	{
		[Token(Token = "0x4000973")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public TargetFish TargetFish;

		[Token(Token = "0x4000974")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int Progress;

		[Token(Token = "0x600084B")]
		[Address(RVA = "0xD51CB8", Offset = "0xD51CB8", VA = "0xD51CB8")]
		public MissionProgress_Fish()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000160")]
	public class MissionProgress_Item
	{
		[Token(Token = "0x4000975")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public TargetItem TargetItem;

		[Token(Token = "0x4000976")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int Progress;

		[Token(Token = "0x600084C")]
		[Address(RVA = "0xD51CC0", Offset = "0xD51CC0", VA = "0xD51CC0")]
		public MissionProgress_Item()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000161")]
	public class TargetFish
	{
		[Token(Token = "0x4000977")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string TargetFishTypeBCID;

		[Token(Token = "0x4000978")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int TargetTotal;

		[Token(Token = "0x4000979")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int TargetFishGoalStarRating;

		[Token(Token = "0x400097A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FishTypeSO.Grade TargetFishGrade;

		[Token(Token = "0x400097B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool IsAnyofTarget;

		[Token(Token = "0x600084D")]
		[Address(RVA = "0xC2EE8C", Offset = "0xC2EE8C", VA = "0xC2EE8C")]
		public TargetFish()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000162")]
	public class TargetItem
	{
		[Token(Token = "0x400097C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string TargetItemBCID;

		[Token(Token = "0x400097D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int TargetTotal;

		[Token(Token = "0x600084E")]
		[Address(RVA = "0xC2EE94", Offset = "0xC2EE94", VA = "0xC2EE94")]
		public TargetItem()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000163")]
	public class FishOPedia
	{
		[Token(Token = "0x400097E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string FishBCID;

		[Token(Token = "0x400097F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float RecordWeight;

		[Token(Token = "0x4000980")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float RecordLength;

		[Token(Token = "0x4000981")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float TotalWeight;

		[Token(Token = "0x4000982")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int Amount;

		[Token(Token = "0x600084F")]
		[Address(RVA = "0xD93A40", Offset = "0xD93A40", VA = "0xD93A40")]
		public FishOPedia()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000164")]
	public class ItemDataClass
	{
		[Token(Token = "0x4000983")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Item[] Items;

		[Token(Token = "0x6000850")]
		[Address(RVA = "0xCA61C4", Offset = "0xCA61C4", VA = "0xCA61C4")]
		public ItemDataClass()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000165")]
	public class Item : ItemProgress
	{
		[Token(Token = "0x4000984")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string ItemName;

		[Token(Token = "0x4000985")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string Description;

		[Token(Token = "0x4000986")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string Type;

		[Token(Token = "0x4000987")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string Image;

		[Token(Token = "0x4000988")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string Prefab;

		[Token(Token = "0x4000989")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string UpgradeFrom;

		[Token(Token = "0x400098A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public int Level;

		[Token(Token = "0x6000851")]
		[Address(RVA = "0xCA619C", Offset = "0xCA619C", VA = "0xCA619C")]
		public Item()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000166")]
	public class ItemProgress
	{
		[Token(Token = "0x400098B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string BCID;

		[Token(Token = "0x400098C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int Amount;

		[Token(Token = "0x400098D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool Unlock;

		[Token(Token = "0x6000852")]
		[Address(RVA = "0xCA61A4", Offset = "0xCA61A4", VA = "0xCA61A4")]
		public ItemProgress()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000167")]
	public class MapUnlockProgress
	{
		[Token(Token = "0x400098E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string BCID;

		[Token(Token = "0x400098F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool Unlocked;

		[Token(Token = "0x4000990")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool Arrived;

		[Token(Token = "0x6000853")]
		[Address(RVA = "0xD48968", Offset = "0xD48968", VA = "0xD48968")]
		public MapUnlockProgress()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000168")]
	public class FishingDataClass
	{
		[Token(Token = "0x4000991")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Fishing[] Fishings;

		[Token(Token = "0x6000854")]
		[Address(RVA = "0xC958A8", Offset = "0xC958A8", VA = "0xC958A8")]
		public FishingDataClass()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000169")]
	public class Fishing
	{
		[Token(Token = "0x4000992")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string BCID;

		[Token(Token = "0x6000855")]
		[Address(RVA = "0xC958A0", Offset = "0xC958A0", VA = "0xC958A0")]
		public Fishing()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200016A")]
	public class CharmDataClass
	{
		[Token(Token = "0x4000993")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Charm[] Charms;

		[Token(Token = "0x6000856")]
		[Address(RVA = "0xBFA67C", Offset = "0xBFA67C", VA = "0xBFA67C")]
		public CharmDataClass()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200016B")]
	public class Charm
	{
		[Token(Token = "0x4000994")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string BCID;

		[Token(Token = "0x4000995")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string Type;

		[Token(Token = "0x4000996")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string[] TargetFishIDs;

		[Token(Token = "0x4000997")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int[] TargetWorlds;

		[Token(Token = "0x4000998")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string[] TargetGrades;

		[Token(Token = "0x4000999")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string[] TargetDifficulties;

		[Token(Token = "0x400099A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string[] TargetScales;

		[Token(Token = "0x400099B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float Modifier;

		[Token(Token = "0x6000857")]
		[Address(RVA = "0xBFA65C", Offset = "0xBFA65C", VA = "0xBFA65C")]
		public Charm()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200016C")]
	public class CharmCraftingDataClass
	{
		[Token(Token = "0x400099C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public CharmCrafting[] CharmCraftings;

		[Token(Token = "0x6000858")]
		[Address(RVA = "0xBFA66C", Offset = "0xBFA66C", VA = "0xBFA66C")]
		public CharmCraftingDataClass()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200016D")]
	public class CharmCrafting
	{
		[Token(Token = "0x400099D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string BCID;

		[Token(Token = "0x6000859")]
		[Address(RVA = "0xBFA664", Offset = "0xBFA664", VA = "0xBFA664")]
		public CharmCrafting()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200016E")]
	public class ItemCraftingDataClass
	{
		[Token(Token = "0x400099E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ItemCrafting[] ItemCraftings;

		[Token(Token = "0x600085A")]
		[Address(RVA = "0xCA61B4", Offset = "0xCA61B4", VA = "0xCA61B4")]
		public ItemCraftingDataClass()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200016F")]
	public class ItemCrafting
	{
		[Token(Token = "0x400099F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string BCID;

		[Token(Token = "0x600085B")]
		[Address(RVA = "0xCA61AC", Offset = "0xCA61AC", VA = "0xCA61AC")]
		public ItemCrafting()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000170")]
	public class RodDataClass
	{
		[Token(Token = "0x40009A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public RodType[] RodTypes;

		[Token(Token = "0x600085C")]
		[Address(RVA = "0xCE0B50", Offset = "0xCE0B50", VA = "0xCE0B50")]
		public RodDataClass()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000171")]
	public class RodType
	{
		[Token(Token = "0x40009A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string BCID;

		[Token(Token = "0x40009A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string BoostType;

		[Token(Token = "0x40009A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int BoostCharge;

		[Token(Token = "0x600085D")]
		[Address(RVA = "0xCE6808", Offset = "0xCE6808", VA = "0xCE6808")]
		public RodType()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000172")]
	public class LureDataClass
	{
		[Token(Token = "0x40009A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public LureType[] LureTypes;

		[Token(Token = "0x600085E")]
		[Address(RVA = "0xCAA1DC", Offset = "0xCAA1DC", VA = "0xCAA1DC")]
		public LureDataClass()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000173")]
	public class LureType
	{
		[Token(Token = "0x40009A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string BCID;

		[Token(Token = "0x40009A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float AttractionRadius;

		[Token(Token = "0x40009A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string Type;

		[Token(Token = "0x600085F")]
		[Address(RVA = "0xCAAF04", Offset = "0xCAAF04", VA = "0xCAAF04")]
		public LureType()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000174")]
	public class GameTextDataClass
	{
		[Token(Token = "0x40009A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameText[] GameTexts;

		[Token(Token = "0x6000860")]
		[Address(RVA = "0xC9F840", Offset = "0xC9F840", VA = "0xC9F840")]
		public GameTextDataClass()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000175")]
	public class GameText
	{
		[Token(Token = "0x40009A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string Key;

		[Token(Token = "0x40009AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string en_US;

		[Token(Token = "0x40009AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string fr_FR;

		[Token(Token = "0x40009AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string zh_TW;

		[Token(Token = "0x40009AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string zh_CN;

		[Token(Token = "0x6000861")]
		[Address(RVA = "0xC9F838", Offset = "0xC9F838", VA = "0xC9F838")]
		public GameText()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000176")]
	public class LocationDataClass
	{
		[Token(Token = "0x40009AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Location[] Locations;

		[Token(Token = "0x6000862")]
		[Address(RVA = "0xCA76EC", Offset = "0xCA76EC", VA = "0xCA76EC")]
		public LocationDataClass()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000177")]
	public class Location
	{
		[Token(Token = "0x40009AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string BCID;

		[Token(Token = "0x40009B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string LocationName;

		[Token(Token = "0x40009B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string SceneName;

		[Token(Token = "0x40009B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string FishPool;

		[Token(Token = "0x40009B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string LootCratePool;

		[Token(Token = "0x40009B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float PullupDistance;

		[Token(Token = "0x40009B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float AllowPatternPlayDistance;

		[Token(Token = "0x40009B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float MaxDistance;

		[Token(Token = "0x40009B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float ShoreBarrierZPos;

		[Token(Token = "0x40009B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool UseBloom;

		[Token(Token = "0x40009B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public int FFRLevel;

		[Token(Token = "0x40009BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public int QualityLevel;

		[Token(Token = "0x40009BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float RenderScale;

		[Token(Token = "0x40009BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public int LocationIndex;

		[Token(Token = "0x6000863")]
		[Address(RVA = "0xCA76E4", Offset = "0xCA76E4", VA = "0xCA76E4")]
		public Location()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000178")]
	public class IngredientDataClass
	{
		[Token(Token = "0x40009BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Ingredients[] Ingredients;

		[Token(Token = "0x6000864")]
		[Address(RVA = "0xCA2F80", Offset = "0xCA2F80", VA = "0xCA2F80")]
		public IngredientDataClass()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000179")]
	public class Ingredients
	{
		[Token(Token = "0x40009BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string BCID;

		[Token(Token = "0x40009BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string IngredientName;

		[Token(Token = "0x6000865")]
		[Address(RVA = "0xCA2F90", Offset = "0xCA2F90", VA = "0xCA2F90")]
		public Ingredients()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200017A")]
	public class CraftingRecipesDataClass
	{
		[Token(Token = "0x40009C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public CraftingRecipe[] CraftingRecipes;

		[Token(Token = "0x6000866")]
		[Address(RVA = "0xBFE084", Offset = "0xBFE084", VA = "0xBFE084")]
		public CraftingRecipesDataClass()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200017B")]
	public class CraftingRecipe
	{
		[Token(Token = "0x40009C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string BCID;

		[Token(Token = "0x40009C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string CraftedItem;

		[Token(Token = "0x40009C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string[] Ingredients;

		[Token(Token = "0x40009C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int[] IngredientsAmounts;

		[Token(Token = "0x40009C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int CraftingLimit;

		[Token(Token = "0x6000867")]
		[Address(RVA = "0xBFE07C", Offset = "0xBFE07C", VA = "0xBFE07C")]
		public CraftingRecipe()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200017C")]
	public class PatternsDataClass
	{
		[Token(Token = "0x40009C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Pattern[] Patterns;

		[Token(Token = "0x6000868")]
		[Address(RVA = "0xD5AF9C", Offset = "0xD5AF9C", VA = "0xD5AF9C")]
		public PatternsDataClass()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200017D")]
	public class Pattern
	{
		[Token(Token = "0x40009C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string BCID;

		[Token(Token = "0x40009C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string Difficulty;

		[Token(Token = "0x40009C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string[] Arrows;

		[Token(Token = "0x6000869")]
		[Address(RVA = "0xD5633C", Offset = "0xD5633C", VA = "0xD5633C")]
		public Pattern()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200017E")]
	public class LootBoxDataClass
	{
		[Token(Token = "0x40009CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public LootBox[] LootBoxes;

		[Token(Token = "0x600086A")]
		[Address(RVA = "0xCA7714", Offset = "0xCA7714", VA = "0xCA7714")]
		public LootBoxDataClass()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200017F")]
	public class LootBox
	{
		[Token(Token = "0x40009CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string BCID;

		[Token(Token = "0x40009CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string[] TargetIngredient;

		[Token(Token = "0x40009CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float[] TargetIngredientValues;

		[Token(Token = "0x600086B")]
		[Address(RVA = "0xCA770C", Offset = "0xCA770C", VA = "0xCA770C")]
		public LootBox()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000180")]
	public class LootCratePoolDataClass
	{
		[Token(Token = "0x40009CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public LootCratePool[] LootCratePools;

		[Token(Token = "0x600086C")]
		[Address(RVA = "0xCA81D8", Offset = "0xCA81D8", VA = "0xCA81D8")]
		public LootCratePoolDataClass()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000181")]
	public class LootCratePool
	{
		[Token(Token = "0x40009CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string BCID;

		[Token(Token = "0x40009D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int TotalLoot;

		[Token(Token = "0x40009D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool RespawnLoot;

		[Token(Token = "0x40009D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string[] CriticalLoot_Types;

		[Token(Token = "0x40009D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string[] CriticalLoot_Skins;

		[Token(Token = "0x40009D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int[] CriticalLoot_Sizes;

		[Token(Token = "0x40009D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int[] CriticalLoot_NumItems;

		[Token(Token = "0x40009D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int[] CriticalLoot_ItemCounts;

		[Token(Token = "0x40009D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string[] CriticalLoot_ContentItems;

		[Token(Token = "0x40009D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float[] CriticalLoot_ContentProbabilities;

		[Token(Token = "0x40009D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public bool[] CriticalLoot_Visibles;

		[Token(Token = "0x40009DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float[] CriticalLoot_Locations;

		[Token(Token = "0x40009DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public float[] CriticalLoot_Probabilities;

		[Token(Token = "0x40009DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public string[] MainLoot_Types;

		[Token(Token = "0x40009DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public string[] MainLoot_Skins;

		[Token(Token = "0x40009DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public int[] MainLoot_Sizes;

		[Token(Token = "0x40009DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public int[] MainLoot_NumItems;

		[Token(Token = "0x40009E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public int[] MainLoot_ItemCounts;

		[Token(Token = "0x40009E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public string[] MainLoot_ContentItems;

		[Token(Token = "0x40009E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public float[] MainLoot_ContentProbabilities;

		[Token(Token = "0x40009E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public bool[] MainLoot_Visibles;

		[Token(Token = "0x40009E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public float[] MainLoot_Locations;

		[Token(Token = "0x40009E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public float[] MainLoot_Probabilities;

		[Token(Token = "0x40009E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public string[] RespawnLoot_Types;

		[Token(Token = "0x40009E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public string[] RespawnLoot_Skins;

		[Token(Token = "0x40009E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public int[] RespawnLoot_Sizes;

		[Token(Token = "0x40009E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public int[] RespawnLoot_NumItems;

		[Token(Token = "0x40009EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public int[] RespawnLoot_ItemCounts;

		[Token(Token = "0x40009EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public string[] RespawnLoot_ContentItems;

		[Token(Token = "0x40009EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public float[] RespawnLoot_ContentProbabilities;

		[Token(Token = "0x40009ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public bool[] RespawnLoot_Visibles;

		[Token(Token = "0x40009EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public float[] RespawnLoot_Locations;

		[Token(Token = "0x40009EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public float[] RespawnLoot_Probabilities;

		[Token(Token = "0x600086D")]
		[Address(RVA = "0xCA81D0", Offset = "0xCA81D0", VA = "0xCA81D0")]
		public LootCratePool()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000182")]
	public class DecorationDataClass
	{
		[Token(Token = "0x40009F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Decoration[] Decorations;

		[Token(Token = "0x600086E")]
		[Address(RVA = "0xC01F58", Offset = "0xC01F58", VA = "0xC01F58")]
		public DecorationDataClass()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000183")]
	public class Decoration
	{
		[Token(Token = "0x40009F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string BCID;

		[Token(Token = "0x40009F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string DecorationType;

		[Token(Token = "0x600086F")]
		[Address(RVA = "0xC01F08", Offset = "0xC01F08", VA = "0xC01F08")]
		public Decoration()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000184")]
	public class FishSchoolData
	{
		[Token(Token = "0x40009F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string BCID;

		[Token(Token = "0x40009F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int amount;

		[Token(Token = "0x6000870")]
		[Address(RVA = "0xC9465C", Offset = "0xC9465C", VA = "0xC9465C")]
		public FishSchoolData(string fishBCID, int amount)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000185")]
	public class DecorationData
	{
		[Token(Token = "0x40009F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string BCID;

		[Token(Token = "0x40009F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int decoSlot;

		[Token(Token = "0x6000871")]
		[Address(RVA = "0xC01F10", Offset = "0xC01F10", VA = "0xC01F10")]
		public DecorationData(string decoBCID, int decoSlot)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000186")]
	public class AquariumPreset
	{
		[Token(Token = "0x40009F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<FishSchoolData> fishes;

		[Token(Token = "0x40009F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<DecorationData> decos;

		[Token(Token = "0x40009F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string interior;

		[Token(Token = "0x40009FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool rigidbodiesEnabled;

		[Token(Token = "0x40009FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		public bool collidersEnabled;

		[Token(Token = "0x6000872")]
		[Address(RVA = "0xCB91C0", Offset = "0xCB91C0", VA = "0xCB91C0")]
		public AquariumPreset()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000187")]
	public class LoreDataClass
	{
		[Token(Token = "0x40009FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public LoreData[] Lores;

		[Token(Token = "0x6000873")]
		[Address(RVA = "0xCA9474", Offset = "0xCA9474", VA = "0xCA9474")]
		public LoreDataClass()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000188")]
	public class LoreData
	{
		[Token(Token = "0x40009FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string BCID;

		[Token(Token = "0x40009FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string LoreTitle;

		[Token(Token = "0x40009FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string LoreDescription;

		[Token(Token = "0x4000A00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string LoreIcon;

		[Token(Token = "0x4000A01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string LoreHeadlineImage;

		[Token(Token = "0x4000A02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool UnlockedAtStart;

		[Token(Token = "0x6000874")]
		[Address(RVA = "0xCA946C", Offset = "0xCA946C", VA = "0xCA946C")]
		public LoreData()
		{
		}
	}
	[Token(Token = "0x2000189")]
	public class ControllerModel : MonoBehaviour
	{
		[Token(Token = "0x4000A03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Animator anim;

		[Token(Token = "0x4000A04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Handside side;

		[Token(Token = "0x4000A05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private bool isGrippingRod;

		[Token(Token = "0x4000A06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
		private bool isReeling;

		[Token(Token = "0x4000A07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject reelingStartVFX;

		[Token(Token = "0x6000875")]
		[Address(RVA = "0xBFA844", Offset = "0xBFA844", VA = "0xBFA844")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000876")]
		[Address(RVA = "0xBFB580", Offset = "0xBFB580", VA = "0xBFB580")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000877")]
		[Address(RVA = "0xBFC014", Offset = "0xBFC014", VA = "0xBFC014")]
		private void Start()
		{
		}

		[Token(Token = "0x6000878")]
		[Address(RVA = "0xBFAEBC", Offset = "0xBFAEBC", VA = "0xBFAEBC")]
		public void SetVisible(bool state)
		{
		}

		[Token(Token = "0x6000879")]
		[Address(RVA = "0xBFC178", Offset = "0xBFC178", VA = "0xBFC178")]
		private void GrabRod()
		{
		}

		[Token(Token = "0x600087A")]
		[Address(RVA = "0xBFC350", Offset = "0xBFC350", VA = "0xBFC350")]
		private void ReleaseRod()
		{
		}

		[Token(Token = "0x600087B")]
		[Address(RVA = "0xBFC47C", Offset = "0xBFC47C", VA = "0xBFC47C")]
		private void GrabReel()
		{
		}

		[Token(Token = "0x600087C")]
		[Address(RVA = "0xBFC524", Offset = "0xBFC524", VA = "0xBFC524")]
		private void ReleaseReel()
		{
		}

		[Token(Token = "0x600087D")]
		[Address(RVA = "0xBFC59C", Offset = "0xBFC59C", VA = "0xBFC59C")]
		private void AnimateIndex(float value)
		{
		}

		[Token(Token = "0x600087E")]
		[Address(RVA = "0xBFC650", Offset = "0xBFC650", VA = "0xBFC650")]
		private void AnimateFingers(float value)
		{
		}

		[Token(Token = "0x600087F")]
		[Address(RVA = "0xBFC704", Offset = "0xBFC704", VA = "0xBFC704")]
		private void AnimateThumb(bool state)
		{
		}

		[Token(Token = "0x6000880")]
		[Address(RVA = "0xBFC7D4", Offset = "0xBFC7D4", VA = "0xBFC7D4")]
		private void StartSceneLoadFromMainMenu()
		{
		}

		[Token(Token = "0x6000881")]
		[Address(RVA = "0xBFC7DC", Offset = "0xBFC7DC", VA = "0xBFC7DC")]
		private void SceneLoadFinished()
		{
		}

		[Token(Token = "0x6000882")]
		[Address(RVA = "0xBFC7E4", Offset = "0xBFC7E4", VA = "0xBFC7E4")]
		private void HideHand()
		{
		}

		[Token(Token = "0x6000883")]
		[Address(RVA = "0xBFC7EC", Offset = "0xBFC7EC", VA = "0xBFC7EC")]
		private void ShowHand()
		{
		}

		[Token(Token = "0x6000884")]
		[Address(RVA = "0xBFC7F4", Offset = "0xBFC7F4", VA = "0xBFC7F4")]
		private void StartBoost()
		{
		}

		[Token(Token = "0x6000885")]
		[Address(RVA = "0xBFC8A8", Offset = "0xBFC8A8", VA = "0xBFC8A8")]
		private void StopBoost()
		{
		}

		[Token(Token = "0x6000886")]
		[Address(RVA = "0xBFC95C", Offset = "0xBFC95C", VA = "0xBFC95C")]
		private void FailedBoost()
		{
		}

		[Token(Token = "0x6000887")]
		[Address(RVA = "0xBFC9C0", Offset = "0xBFC9C0", VA = "0xBFC9C0")]
		public ControllerModel()
		{
		}
	}
	[Token(Token = "0x200018A")]
	public class CraftingAnimationManager : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20003B6")]
		public struct DisplayItem
		{
			[Token(Token = "0x40018B7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string BCID;

			[Token(Token = "0x40018B8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Transform model;
		}

		[Token(Token = "0x4000A08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public DisplayItem[] displayItems;

		[Token(Token = "0x4000A09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject modelRotator;

		[Token(Token = "0x4000A0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static CraftingAnimationManager instance;

		[Token(Token = "0x4000A0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Animator machineAnim;

		[Token(Token = "0x4000A0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Animator liquidAnim;

		[Token(Token = "0x4000A0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float fillDur;

		[Token(Token = "0x4000A0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float drainDur;

		[Token(Token = "0x4000A0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string craftedItemBCID;

		[Token(Token = "0x4000A10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public GameObject steam;

		[Token(Token = "0x4000A11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public AudioSource audio;

		[Token(Token = "0x4000A12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public AudioClip successSFX;

		[Token(Token = "0x4000A13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public AudioClip failSFX;

		[Token(Token = "0x170000E2")]
		public static string CraftedItemBCID
		{
			[Token(Token = "0x6000888")]
			[Address(RVA = "0xBFC9C8", Offset = "0xBFC9C8", VA = "0xBFC9C8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000889")]
			[Address(RVA = "0xBFCA24", Offset = "0xBFCA24", VA = "0xBFCA24")]
			set
			{
			}
		}

		[Token(Token = "0x600088A")]
		[Address(RVA = "0xBFCA88", Offset = "0xBFCA88", VA = "0xBFCA88")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600088B")]
		[Address(RVA = "0xBFCB50", Offset = "0xBFCB50", VA = "0xBFCB50")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600088C")]
		[Address(RVA = "0xBFCBFC", Offset = "0xBFCBFC", VA = "0xBFCBFC")]
		private void CraftingFailed()
		{
		}

		[Token(Token = "0x600088D")]
		[Address(RVA = "0xBFCCA4", Offset = "0xBFCCA4", VA = "0xBFCCA4")]
		private void CraftingStarted()
		{
		}

		[Token(Token = "0x600088E")]
		[Address(RVA = "0xBFCDB0", Offset = "0xBFCDB0", VA = "0xBFCDB0")]
		private void Liquid()
		{
		}

		[Token(Token = "0x600088F")]
		[Address(RVA = "0xBFCE30", Offset = "0xBFCE30", VA = "0xBFCE30")]
		private void Steam()
		{
		}

		[Token(Token = "0x6000890")]
		[Address(RVA = "0xBFCE50", Offset = "0xBFCE50", VA = "0xBFCE50")]
		private void StationUp()
		{
		}

		[Token(Token = "0x6000891")]
		[Address(RVA = "0xBFCF00", Offset = "0xBFCF00", VA = "0xBFCF00")]
		private void ShowUI()
		{
		}

		[Token(Token = "0x6000892")]
		[Address(RVA = "0xBFCF30", Offset = "0xBFCF30", VA = "0xBFCF30")]
		private void ShowItem()
		{
		}

		[Token(Token = "0x6000893")]
		[Address(RVA = "0xBFD054", Offset = "0xBFD054", VA = "0xBFD054")]
		private void RemoveItem()
		{
		}

		[Token(Token = "0x6000894")]
		[Address(RVA = "0xBFD15C", Offset = "0xBFD15C", VA = "0xBFD15C")]
		public CraftingAnimationManager()
		{
		}
	}
	[Token(Token = "0x200018B")]
	public class CraftingMinigameController : MonoBehaviour
	{
		[Token(Token = "0x4000A14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform rotator;

		[Token(Token = "0x4000A15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private CraftingMinigameProjectiles projectiles;

		[Token(Token = "0x4000A16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float rpm;

		[Token(Token = "0x4000A17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float degrees;

		[Token(Token = "0x6000895")]
		[Address(RVA = "0xBFD170", Offset = "0xBFD170", VA = "0xBFD170")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000896")]
		[Address(RVA = "0xBFD1E4", Offset = "0xBFD1E4", VA = "0xBFD1E4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000897")]
		[Address(RVA = "0xBFD258", Offset = "0xBFD258", VA = "0xBFD258")]
		private void Update()
		{
		}

		[Token(Token = "0x6000898")]
		[Address(RVA = "0xBFD2E8", Offset = "0xBFD2E8", VA = "0xBFD2E8")]
		private void SetRotateSpeed(float rpm)
		{
		}

		[Token(Token = "0x6000899")]
		[Address(RVA = "0xBFD3BC", Offset = "0xBFD3BC", VA = "0xBFD3BC")]
		private void Fire(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x600089A")]
		[Address(RVA = "0xBFD484", Offset = "0xBFD484", VA = "0xBFD484")]
		private float CheckHit(Handside side)
		{
			return default(float);
		}

		[Token(Token = "0x600089B")]
		[Address(RVA = "0xBFD984", Offset = "0xBFD984", VA = "0xBFD984")]
		public CraftingMinigameController()
		{
		}
	}
	[Token(Token = "0x200018C")]
	public class CraftingMinigameDebugActivate : MonoBehaviour
	{
		[Token(Token = "0x4000A18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject CraftingMinigame;

		[Token(Token = "0x600089C")]
		[Address(RVA = "0xBFD994", Offset = "0xBFD994", VA = "0xBFD994")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600089D")]
		[Address(RVA = "0xBFDABC", Offset = "0xBFDABC", VA = "0xBFDABC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600089E")]
		[Address(RVA = "0xBFDBE4", Offset = "0xBFDBE4", VA = "0xBFDBE4")]
		private void CraftingMinigameActivateEvent(bool state)
		{
		}

		[Token(Token = "0x600089F")]
		[Address(RVA = "0xBFDC04", Offset = "0xBFDC04", VA = "0xBFDC04")]
		public CraftingMinigameDebugActivate()
		{
		}
	}
	[Token(Token = "0x200018D")]
	public class CraftingMinigameProjectiles : MonoBehaviour
	{
		[Token(Token = "0x20003B7")]
		private struct projectile
		{
			[Token(Token = "0x40018B9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public GameObject proj;

			[Token(Token = "0x40018BA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Vector3 startPos;

			[Token(Token = "0x40018BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public Vector3 targetPos;

			[Token(Token = "0x40018BC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float progress;

			[Token(Token = "0x40018BD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public float killTime;

			[Token(Token = "0x40018BE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float hitDistance;

			[Token(Token = "0x40018BF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public TrailRenderer trailRenderer;
		}

		[Token(Token = "0x4000A19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject[] projectileObjects;

		[Token(Token = "0x4000A1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float projectileLifetime;

		[Token(Token = "0x4000A1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float projectileSpeed;

		[Token(Token = "0x4000A1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private projectile[] projectiles;

		[Token(Token = "0x60008A0")]
		[Address(RVA = "0xBFDC0C", Offset = "0xBFDC0C", VA = "0xBFDC0C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60008A1")]
		[Address(RVA = "0xBFDDB0", Offset = "0xBFDDB0", VA = "0xBFDDB0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60008A2")]
		[Address(RVA = "0xBFDDB4", Offset = "0xBFDDB4", VA = "0xBFDDB4")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60008A3")]
		[Address(RVA = "0xBFDD40", Offset = "0xBFDD40", VA = "0xBFDD40")]
		private void DisableAllProjectiles()
		{
		}

		[Token(Token = "0x60008A4")]
		[Address(RVA = "0xBFD5D8", Offset = "0xBFD5D8", VA = "0xBFD5D8")]
		public void Fire(Handside side, float hitDistance)
		{
		}

		[Token(Token = "0x60008A5")]
		[Address(RVA = "0xBFE048", Offset = "0xBFE048", VA = "0xBFE048")]
		public CraftingMinigameProjectiles()
		{
		}
	}
	[Token(Token = "0x200018E")]
	public class CraftingMinigameTarget : MonoBehaviour
	{
		[Token(Token = "0x60008A6")]
		[Address(RVA = "0xBFE05C", Offset = "0xBFE05C", VA = "0xBFE05C")]
		private void Start()
		{
		}

		[Token(Token = "0x60008A7")]
		[Address(RVA = "0xBFE060", Offset = "0xBFE060", VA = "0xBFE060")]
		private void Update()
		{
		}

		[Token(Token = "0x60008A8")]
		[Address(RVA = "0xBFE064", Offset = "0xBFE064", VA = "0xBFE064")]
		public CraftingMinigameTarget()
		{
		}
	}
	[Token(Token = "0x200018F")]
	public class CraftingMinigameUI : MonoBehaviour
	{
		[Token(Token = "0x60008A9")]
		[Address(RVA = "0xBFE06C", Offset = "0xBFE06C", VA = "0xBFE06C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60008AA")]
		[Address(RVA = "0xBFE070", Offset = "0xBFE070", VA = "0xBFE070")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60008AB")]
		[Address(RVA = "0xBFE074", Offset = "0xBFE074", VA = "0xBFE074")]
		public CraftingMinigameUI()
		{
		}
	}
	[Token(Token = "0x2000190")]
	public class CutsceneDismiss : MonoBehaviour
	{
		[Token(Token = "0x60008AC")]
		[Address(RVA = "0xC01794", Offset = "0xC01794", VA = "0xC01794")]
		public void OnClick()
		{
		}

		[Token(Token = "0x60008AD")]
		[Address(RVA = "0xC017FC", Offset = "0xC017FC", VA = "0xC017FC")]
		public CutsceneDismiss()
		{
		}
	}
	[Token(Token = "0x2000191")]
	public class DebugSlider : MonoBehaviour
	{
		[Token(Token = "0x4000A1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static DebugSlider instance;

		[Token(Token = "0x4000A1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Slider slider;

		[Token(Token = "0x60008AE")]
		[Address(RVA = "0xC01AD4", Offset = "0xC01AD4", VA = "0xC01AD4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60008AF")]
		[Address(RVA = "0xC01B2C", Offset = "0xC01B2C", VA = "0xC01B2C")]
		public static void SetVal(float val)
		{
		}

		[Token(Token = "0x60008B0")]
		[Address(RVA = "0xC01BA8", Offset = "0xC01BA8", VA = "0xC01BA8")]
		public DebugSlider()
		{
		}
	}
	[Token(Token = "0x2000192")]
	public class DebugUnlock : MonoBehaviour
	{
		[Token(Token = "0x4000A1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject[] objectsToShow;

		[Token(Token = "0x4000A20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int counter;

		[Token(Token = "0x60008B1")]
		[Address(RVA = "0xC01DA4", Offset = "0xC01DA4", VA = "0xC01DA4")]
		public void OnClick()
		{
		}

		[Token(Token = "0x60008B2")]
		[Address(RVA = "0xC01E38", Offset = "0xC01E38", VA = "0xC01E38")]
		private void Unlock()
		{
		}

		[Token(Token = "0x60008B3")]
		[Address(RVA = "0xC01F00", Offset = "0xC01F00", VA = "0xC01F00")]
		public DebugUnlock()
		{
		}
	}
	[Token(Token = "0x2000193")]
	public enum Dialog
	{
		[Token(Token = "0x4000A22")]
		FPDismiss,
		[Token(Token = "0x4000A23")]
		FPSummon,
		[Token(Token = "0x4000A24")]
		FPLocationChange,
		[Token(Token = "0x4000A25")]
		FPUnlockMission,
		[Token(Token = "0x4000A26")]
		FPCastNotFarEnough,
		[Token(Token = "0x4000A27")]
		FPCastTutSuccess,
		[Token(Token = "0x4000A28")]
		FPCastTutFailed
	}
	[Token(Token = "0x2000194")]
	public class DialogAudio : MonoBehaviour
	{
		[Token(Token = "0x4000A29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static DialogAudio instance;

		[Token(Token = "0x4000A2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int notFarEnoughIndex;

		[Token(Token = "0x4000A2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioClip[] FPDismissClips;

		[Token(Token = "0x4000A2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AudioClip[] FPSummonClips;

		[Token(Token = "0x4000A2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AudioClip[] FPLocationChangeClips;

		[Token(Token = "0x4000A2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public AudioClip[] FPCastNotFarEnough;

		[Token(Token = "0x4000A2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public AudioClip[] FPCastTutSuccessClips;

		[Token(Token = "0x4000A30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public AudioClip[] FPCastTutFailedClips;

		[Token(Token = "0x4000A31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public AudioClip FPUnlockedMission;

		[Token(Token = "0x4000A32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public AudioSource fishingPad;

		[Token(Token = "0x60008B4")]
		[Address(RVA = "0xC02578", Offset = "0xC02578", VA = "0xC02578")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60008B5")]
		[Address(RVA = "0xC025D0", Offset = "0xC025D0", VA = "0xC025D0")]
		public static void Play(Dialog dia)
		{
		}

		[Token(Token = "0x60008B6")]
		[Address(RVA = "0xC0281C", Offset = "0xC0281C", VA = "0xC0281C")]
		public DialogAudio()
		{
		}
	}
	[Token(Token = "0x2000195")]
	public class DisableAquaUI : MonoBehaviour
	{
		[Token(Token = "0x60008B7")]
		[Address(RVA = "0xC02E94", Offset = "0xC02E94", VA = "0xC02E94")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60008B8")]
		[Address(RVA = "0xC02EDC", Offset = "0xC02EDC", VA = "0xC02EDC")]
		public DisableAquaUI()
		{
		}
	}
	[Token(Token = "0x2000196")]
	public class DisableSnapTurn : MonoBehaviour
	{
		[Token(Token = "0x4000A33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SnapTurnProvider snapTurnProvider;

		[Token(Token = "0x60008B9")]
		[Address(RVA = "0xC03218", Offset = "0xC03218", VA = "0xC03218")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60008BA")]
		[Address(RVA = "0xC03484", Offset = "0xC03484", VA = "0xC03484")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60008BB")]
		[Address(RVA = "0xC036F0", Offset = "0xC036F0", VA = "0xC036F0")]
		private void EventHub_OnTeleportDisabled()
		{
		}

		[Token(Token = "0x60008BC")]
		[Address(RVA = "0xC0370C", Offset = "0xC0370C", VA = "0xC0370C")]
		private void EventHub_OnTeleportEnabled()
		{
		}

		[Token(Token = "0x60008BD")]
		[Address(RVA = "0xC0372C", Offset = "0xC0372C", VA = "0xC0372C")]
		private void LocationChanged(LocationSO locationSO, bool comingFromShip)
		{
		}

		[Token(Token = "0x60008BE")]
		[Address(RVA = "0xC037F4", Offset = "0xC037F4", VA = "0xC037F4")]
		public DisableSnapTurn()
		{
		}
	}
	[Token(Token = "0x2000197")]
	public class DistanceReadout : MonoBehaviour
	{
		[Token(Token = "0x4000A34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static DistanceReadout instance;

		[Token(Token = "0x4000A35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TextMeshProUGUI readout;

		[Token(Token = "0x60008BF")]
		[Address(RVA = "0xC039C4", Offset = "0xC039C4", VA = "0xC039C4")]
		private void Awake()
		{
		}

		[Token(Token = "0x60008C0")]
		[Address(RVA = "0xC03A1C", Offset = "0xC03A1C", VA = "0xC03A1C")]
		public static void SetReadout(float distance)
		{
		}

		[Token(Token = "0x60008C1")]
		[Address(RVA = "0xC03AB0", Offset = "0xC03AB0", VA = "0xC03AB0")]
		public DistanceReadout()
		{
		}
	}
	[Token(Token = "0x2000198")]
	public class DistanceScaler : MonoBehaviour
	{
		[Token(Token = "0x4000A36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AnimationCurve curve;

		[Token(Token = "0x4000A37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float maxScaleFactor;

		[Token(Token = "0x4000A38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float minScaleFactor;

		[Token(Token = "0x60008C2")]
		[Address(RVA = "0xC03AB8", Offset = "0xC03AB8", VA = "0xC03AB8")]
		private void Update()
		{
		}

		[Token(Token = "0x60008C3")]
		[Address(RVA = "0xC03CB8", Offset = "0xC03CB8", VA = "0xC03CB8")]
		public DistanceScaler()
		{
		}
	}
	[Token(Token = "0x2000199")]
	public class EagleCries : MonoBehaviour
	{
		[Token(Token = "0x4000A39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AudioSource audio;

		[Token(Token = "0x4000A3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioClip[] clips;

		[Token(Token = "0x60008C4")]
		[Address(RVA = "0xC040FC", Offset = "0xC040FC", VA = "0xC040FC")]
		private void Start()
		{
		}

		[Token(Token = "0x60008C5")]
		[Address(RVA = "0xC041F0", Offset = "0xC041F0", VA = "0xC041F0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60008C6")]
		[Address(RVA = "0xC04100", Offset = "0xC04100", VA = "0xC04100")]
		private void PlayCry()
		{
		}

		[Token(Token = "0x60008C7")]
		[Address(RVA = "0xC041F8", Offset = "0xC041F8", VA = "0xC041F8")]
		public EagleCries()
		{
		}
	}
	[Token(Token = "0x200019A")]
	public class Environment : MonoBehaviour
	{
		[Token(Token = "0x60008C8")]
		[Address(RVA = "0xC045AC", Offset = "0xC045AC", VA = "0xC045AC")]
		public Environment()
		{
		}
	}
	[Token(Token = "0x200019B")]
	public class ExamineFishController : MonoBehaviour
	{
		[Token(Token = "0x4000A3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ExamineFishController instance;

		[Token(Token = "0x4000A3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float distanceFromHmd;

		[Token(Token = "0x4000A3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private Vector3 velocity;

		[Token(Token = "0x4000A3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float rotateTime;

		[Token(Token = "0x4000A3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private bool isExamining;

		[Token(Token = "0x4000A40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform fish;

		[Token(Token = "0x4000A41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 fishOriginalPos;

		[Token(Token = "0x4000A42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Vector3 fishOriginalRot;

		[Token(Token = "0x4000A43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Tween fishPosTween;

		[Token(Token = "0x4000A44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Tween fishRotTween;

		[Token(Token = "0x4000A45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Tween rotateTween;

		[Token(Token = "0x4000A46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Tween punchTween;

		[Token(Token = "0x4000A47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private XRBaseController examiningController;

		[Token(Token = "0x60008C9")]
		[Address(RVA = "0xD8892C", Offset = "0xD8892C", VA = "0xD8892C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60008CA")]
		[Address(RVA = "0xD88A00", Offset = "0xD88A00", VA = "0xD88A00")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60008CB")]
		[Address(RVA = "0xD88AB8", Offset = "0xD88AB8", VA = "0xD88AB8")]
		private void OnTriggerReleased(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x60008CC")]
		[Address(RVA = "0xD88CE8", Offset = "0xD88CE8", VA = "0xD88CE8")]
		private void Update()
		{
		}

		[Token(Token = "0x60008CD")]
		[Address(RVA = "0xD88EE0", Offset = "0xD88EE0", VA = "0xD88EE0")]
		private void SetPosition()
		{
		}

		[Token(Token = "0x60008CE")]
		[Address(RVA = "0xD88CF8", Offset = "0xD88CF8", VA = "0xD88CF8")]
		private void SetRotation()
		{
		}

		[Token(Token = "0x60008CF")]
		[Address(RVA = "0xD88FDC", Offset = "0xD88FDC", VA = "0xD88FDC")]
		public static void SetFishToExamine(Transform _fish, float _examineDistance, Vector3 pos, Vector3 rot)
		{
		}

		[Token(Token = "0x60008D0")]
		[Address(RVA = "0xD891B0", Offset = "0xD891B0", VA = "0xD891B0")]
		public void Examine(SelectEnterEventArgs args)
		{
		}

		[Token(Token = "0x60008D1")]
		[Address(RVA = "0xD88B00", Offset = "0xD88B00", VA = "0xD88B00")]
		private void Detach()
		{
		}

		[Token(Token = "0x60008D2")]
		[Address(RVA = "0xD893AC", Offset = "0xD893AC", VA = "0xD893AC")]
		private XRBaseController SetExaminingController(SelectEnterEventArgs args)
		{
			return null;
		}

		[Token(Token = "0x60008D3")]
		[Address(RVA = "0xD894B0", Offset = "0xD894B0", VA = "0xD894B0")]
		private void RestoreUI()
		{
		}

		[Token(Token = "0x60008D4")]
		[Address(RVA = "0xD890C8", Offset = "0xD890C8", VA = "0xD890C8")]
		private void DisplayRotation()
		{
		}

		[Token(Token = "0x60008D5")]
		[Address(RVA = "0xD89530", Offset = "0xD89530", VA = "0xD89530")]
		public void DisableDisplayRotation(FpFish fish)
		{
		}

		[Token(Token = "0x60008D6")]
		[Address(RVA = "0xD89540", Offset = "0xD89540", VA = "0xD89540")]
		public void BounceFish()
		{
		}

		[Token(Token = "0x60008D7")]
		[Address(RVA = "0xD895D8", Offset = "0xD895D8", VA = "0xD895D8")]
		public ExamineFishController()
		{
		}

		[Token(Token = "0x60008D8")]
		[Address(RVA = "0xD89664", Offset = "0xD89664", VA = "0xD89664")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EF828", Offset = "0x9EF828")]
		private void <Detach>b__21_0()
		{
		}
	}
	[Token(Token = "0x200019C")]
	public enum FishState
	{
		[Token(Token = "0x4000A49")]
		idle,
		[Token(Token = "0x4000A4A")]
		patrolling,
		[Token(Token = "0x4000A4B")]
		attracted,
		[Token(Token = "0x4000A4C")]
		striking,
		[Token(Token = "0x4000A4D")]
		hooked,
		[Token(Token = "0x4000A4E")]
		spooked,
		[Token(Token = "0x4000A4F")]
		nudged
	}
	[Token(Token = "0x200019D")]
	public class FishAI : MonoBehaviour
	{
		[Token(Token = "0x20003B8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E7E18", Offset = "0x9E7E18")]
		private sealed class <AwaitStartPatrolling>d__59 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40018C0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40018C1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40018C2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FishAI <>4__this;

			[Token(Token = "0x40018C3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <i>5__2;

			[Token(Token = "0x17000243")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600198B")]
				[Address(RVA = "0xD8D95C", Offset = "0xD8D95C", VA = "0xD8D95C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000244")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600198D")]
				[Address(RVA = "0xD8D9C4", Offset = "0xD8D9C4", VA = "0xD8D9C4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001988")]
			[Address(RVA = "0xD8BDD0", Offset = "0xD8BDD0", VA = "0xD8BDD0")]
			[DebuggerHidden]
			public <AwaitStartPatrolling>d__59(int <>1__state)
			{
			}

			[Token(Token = "0x6001989")]
			[Address(RVA = "0xD8D740", Offset = "0xD8D740", VA = "0xD8D740", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600198A")]
			[Address(RVA = "0xD8D744", Offset = "0xD8D744", VA = "0xD8D744", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600198C")]
			[Address(RVA = "0xD8D964", Offset = "0xD8D964", VA = "0xD8D964", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20003B9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E7E28", Offset = "0x9E7E28")]
		private sealed class <>c__DisplayClass68_0
		{
			[Token(Token = "0x40018C4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public FishAI <>4__this;

			[Token(Token = "0x40018C5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float duration;

			[Token(Token = "0x600198E")]
			[Address(RVA = "0xD8CD58", Offset = "0xD8CD58", VA = "0xD8CD58")]
			public <>c__DisplayClass68_0()
			{
			}

			[Token(Token = "0x600198F")]
			[Address(RVA = "0xD8D6EC", Offset = "0xD8D6EC", VA = "0xD8D6EC")]
			internal void <SetNextTargetPatrolling>b__0()
			{
			}
		}

		[Token(Token = "0x4000A50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private NavMeshAgent fish;

		[Token(Token = "0x4000A51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private FishState state;

		[Token(Token = "0x4000A52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private Vector3 patrolPoint;

		[Token(Token = "0x4000A53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float patrolRadius;

		[Token(Token = "0x4000A54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Vector3 target;

		[Token(Token = "0x4000A55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Transform model;

		[Token(Token = "0x4000A56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Collider col;

		[Token(Token = "0x4000A57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		public uint attractionVal;

		[Token(Token = "0x4000A58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float nextCointTossTime;

		[Token(Token = "0x4000A59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float nextPatrolPointTime;

		[Token(Token = "0x4000A5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Renderer rend;

		[Token(Token = "0x4000A5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Animator anim;

		[Token(Token = "0x4000A5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Animator[] anims;

		[Token(Token = "0x4000A5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public FpFish fpFish;

		[Token(Token = "0x4000A5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private float minimumHookDistance;

		[Token(Token = "0x4000A5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public TextMeshProUGUI debugTxt;

		[Token(Token = "0x4000A60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9EA0D4", Offset = "0x9EA0D4")]
		public Gradient[] fishAiColorGradients;

		[Token(Token = "0x4000A61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public float brightestDistance;

		[Token(Token = "0x4000A62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public float darkestDistance;

		[Token(Token = "0x4000A63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public GameObject[] scaleModels;

		[Token(Token = "0x4000A64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public float depth;

		[Token(Token = "0x4000A65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private Vector3 modelPos;

		[Token(Token = "0x4000A66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private float spookedTimeout;

		[Token(Token = "0x4000A67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private float spookedStartTime;

		[Token(Token = "0x4000A68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public LayerMask hazardLayer;

		[Token(Token = "0x4000A69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private float hazardDetectionDistance;

		[Token(Token = "0x4000A6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private float hazardDetectionInterval;

		[Token(Token = "0x4000A6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		private bool insideLureRing;

		[Token(Token = "0x4000A6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private Tween nibbleTween;

		[Token(Token = "0x4000A6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private bool isNibbling;

		[Token(Token = "0x4000A6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD9")]
		public bool isSprinting;

		[Token(Token = "0x4000A6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		private float preSprintAnimSpeed;

		[Token(Token = "0x4000A70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public bool isCircling;

		[Token(Token = "0x4000A71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE1")]
		public bool isDoingLookat;

		[Token(Token = "0x4000A72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private Tween sprint;

		[Token(Token = "0x4000A73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private Tween lookat;

		[Token(Token = "0x4000A74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private bool overrideAnimSpeed;

		[Token(Token = "0x4000A75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private Vector3[] waypoints;

		[Token(Token = "0x4000A76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private int numWaypointsOnRadius;

		[Token(Token = "0x4000A77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		private int waypointIndex;

		[Token(Token = "0x4000A78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private bool isSuspended;

		[Token(Token = "0x4000A79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		private float attractionStartTime;

		[Token(Token = "0x60008D9")]
		[Address(RVA = "0xD8A45C", Offset = "0xD8A45C", VA = "0xD8A45C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60008DA")]
		[Address(RVA = "0xD8A518", Offset = "0xD8A518", VA = "0xD8A518")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60008DB")]
		[Address(RVA = "0xD8A92C", Offset = "0xD8A92C", VA = "0xD8A92C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60008DC")]
		[Address(RVA = "0xD8AD4C", Offset = "0xD8AD4C", VA = "0xD8AD4C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60008DD")]
		[Address(RVA = "0xD8ADCC", Offset = "0xD8ADCC", VA = "0xD8ADCC")]
		private void EventHub_OnPlayerLureEquip(LureSO lure)
		{
		}

		[Token(Token = "0x60008DE")]
		[Address(RVA = "0xD8AE24", Offset = "0xD8AE24", VA = "0xD8AE24")]
		private void DetectHazard()
		{
		}

		[Token(Token = "0x60008DF")]
		[Address(RVA = "0xD8B074", Offset = "0xD8B074", VA = "0xD8B074")]
		private void BobberExitedWater()
		{
		}

		[Token(Token = "0x60008E0")]
		[Address(RVA = "0xD8B0FC", Offset = "0xD8B0FC", VA = "0xD8B0FC")]
		private void BobberEnteredWater()
		{
		}

		[Token(Token = "0x60008E1")]
		[Address(RVA = "0xD8B18C", Offset = "0xD8B18C", VA = "0xD8B18C")]
		private void CheckInsideAttractionRadius()
		{
		}

		[Token(Token = "0x60008E2")]
		[Address(RVA = "0xD8B690", Offset = "0xD8B690", VA = "0xD8B690")]
		internal void Nibble()
		{
		}

		[Token(Token = "0x60008E3")]
		[Address(RVA = "0xD8B7F4", Offset = "0xD8B7F4", VA = "0xD8B7F4")]
		internal void InitFishAi()
		{
		}

		[Token(Token = "0x60008E4")]
		[Address(RVA = "0xD8B3E8", Offset = "0xD8B3E8", VA = "0xD8B3E8")]
		private bool IsInsideAttractionRadius()
		{
			return default(bool);
		}

		[Token(Token = "0x60008E5")]
		[Address(RVA = "0xD8B480", Offset = "0xD8B480", VA = "0xD8B480")]
		private bool IsInsideLureRing()
		{
			return default(bool);
		}

		[Token(Token = "0x60008E6")]
		[Address(RVA = "0xD8BCA0", Offset = "0xD8BCA0", VA = "0xD8BCA0")]
		private bool IsInsideSpookedRadius()
		{
			return default(bool);
		}

		[Token(Token = "0x60008E7")]
		[Address(RVA = "0xD8BB78", Offset = "0xD8BB78", VA = "0xD8BB78")]
		private float DistanceToLure()
		{
			return default(float);
		}

		[Token(Token = "0x60008E8")]
		[Address(RVA = "0xD8BCC0", Offset = "0xD8BCC0", VA = "0xD8BCC0")]
		private float DistanceToPlayer()
		{
			return default(float);
		}

		[Token(Token = "0x60008E9")]
		[Address(RVA = "0xD8B524", Offset = "0xD8B524", VA = "0xD8B524")]
		private bool IsFurtherThanMinHookDistance()
		{
			return default(bool);
		}

		[Token(Token = "0x60008EA")]
		[Address(RVA = "0xD8A7E8", Offset = "0xD8A7E8", VA = "0xD8A7E8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9EF838", Offset = "0x9EF838")]
		private IEnumerator AwaitStartPatrolling()
		{
			return null;
		}

		[Token(Token = "0x60008EB")]
		[Address(RVA = "0xD8B0BC", Offset = "0xD8B0BC", VA = "0xD8B0BC")]
		private void StartPatrolling()
		{
		}

		[Token(Token = "0x60008EC")]
		[Address(RVA = "0xD8B5E4", Offset = "0xD8B5E4", VA = "0xD8B5E4")]
		private void StartAttracted()
		{
		}

		[Token(Token = "0x60008ED")]
		[Address(RVA = "0xD8BFD0", Offset = "0xD8BFD0", VA = "0xD8BFD0")]
		public void StartStriking()
		{
		}

		[Token(Token = "0x60008EE")]
		[Address(RVA = "0xD8BFDC", Offset = "0xD8BFDC", VA = "0xD8BFDC")]
		public void StartSpooked()
		{
		}

		[Token(Token = "0x60008EF")]
		[Address(RVA = "0xD8AEC8", Offset = "0xD8AEC8", VA = "0xD8AEC8")]
		private void DoSpooked()
		{
		}

		[Token(Token = "0x60008F0")]
		[Address(RVA = "0xD8C0A0", Offset = "0xD8C0A0", VA = "0xD8C0A0")]
		private void StopSpooked()
		{
		}

		[Token(Token = "0x60008F1")]
		[Address(RVA = "0xD8C0F8", Offset = "0xD8C0F8", VA = "0xD8C0F8")]
		private void Update()
		{
		}

		[Token(Token = "0x60008F2")]
		[Address(RVA = "0xD8BE04", Offset = "0xD8BE04", VA = "0xD8BE04")]
		private void SetTargetAttracted()
		{
		}

		[Token(Token = "0x60008F3")]
		[Address(RVA = "0xD8C6F4", Offset = "0xD8C6F4", VA = "0xD8C6F4")]
		private void SetNextTargetPatrolling()
		{
		}

		[Token(Token = "0x60008F4")]
		[Address(RVA = "0xD8CD60", Offset = "0xD8CD60", VA = "0xD8CD60")]
		private void StartCircling()
		{
		}

		[Token(Token = "0x60008F5")]
		[Address(RVA = "0xD8C610", Offset = "0xD8C610", VA = "0xD8C610")]
		private void SetNextTargetCircling()
		{
		}

		[Token(Token = "0x60008F6")]
		[Address(RVA = "0xD8BDFC", Offset = "0xD8BDFC", VA = "0xD8BDFC")]
		private void StopCircling()
		{
		}

		[Token(Token = "0x60008F7")]
		[Address(RVA = "0xD8CC88", Offset = "0xD8CC88", VA = "0xD8CC88")]
		private float GetTurnDur(FishTypeSO.FishScale fishScale)
		{
			return default(float);
		}

		[Token(Token = "0x60008F8")]
		[Address(RVA = "0xD8D174", Offset = "0xD8D174", VA = "0xD8D174")]
		private void ProceedToTarget(float dur)
		{
		}

		[Token(Token = "0x60008F9")]
		[Address(RVA = "0xD8D400", Offset = "0xD8D400", VA = "0xD8D400")]
		private void MoveToTarget()
		{
		}

		[Token(Token = "0x60008FA")]
		[Address(RVA = "0xD8D2A4", Offset = "0xD8D2A4", VA = "0xD8D2A4")]
		private void SprintToTarget(float dur)
		{
		}

		[Token(Token = "0x60008FB")]
		[Address(RVA = "0xD8C018", Offset = "0xD8C018", VA = "0xD8C018")]
		private void SetTarget(Vector3 trg, float speed = 0f)
		{
		}

		[Token(Token = "0x60008FC")]
		[Address(RVA = "0xD8CCBC", Offset = "0xD8CCBC", VA = "0xD8CCBC")]
		private void SetOverrideAnimSpeed(float speed, float overrideDuration)
		{
		}

		[Token(Token = "0x60008FD")]
		[Address(RVA = "0xD8D458", Offset = "0xD8D458", VA = "0xD8D458")]
		private void CancelOverrideAnimSpeed()
		{
		}

		[Token(Token = "0x60008FE")]
		[Address(RVA = "0xD8D480", Offset = "0xD8D480", VA = "0xD8D480")]
		public void SetVisible(bool state, bool collider = false)
		{
		}

		[Token(Token = "0x60008FF")]
		[Address(RVA = "0xD8D56C", Offset = "0xD8D56C", VA = "0xD8D56C")]
		public void SetCollider(bool state)
		{
		}

		[Token(Token = "0x6000900")]
		[Address(RVA = "0xD8C910", Offset = "0xD8C910", VA = "0xD8C910")]
		private void AttractedCoinToss()
		{
		}

		[Token(Token = "0x6000901")]
		[Address(RVA = "0xD8D59C", Offset = "0xD8D59C", VA = "0xD8D59C")]
		public void WarpToPatrolPoint()
		{
		}

		[Token(Token = "0x6000902")]
		[Address(RVA = "0xD8ADDC", Offset = "0xD8ADDC", VA = "0xD8ADDC")]
		public void SetAttraction(FpFish fpFish)
		{
		}

		[Token(Token = "0x6000903")]
		[Address(RVA = "0xD8B87C", Offset = "0xD8B87C", VA = "0xD8B87C")]
		public void SetScaleModel()
		{
		}

		[Token(Token = "0x6000904")]
		[Address(RVA = "0xD8C538", Offset = "0xD8C538", VA = "0xD8C538")]
		private Color GetColor(uint attractionVal)
		{
			return default(Color);
		}

		[Token(Token = "0x6000905")]
		[Address(RVA = "0xD8CDA0", Offset = "0xD8CDA0", VA = "0xD8CDA0")]
		private void SetCircleWayPoints()
		{
		}

		[Token(Token = "0x6000906")]
		[Address(RVA = "0xD8AC20", Offset = "0xD8AC20", VA = "0xD8AC20")]
		internal void SuspendFishAI(bool state)
		{
		}

		[Token(Token = "0x6000907")]
		[Address(RVA = "0xD8D5C4", Offset = "0xD8D5C4", VA = "0xD8D5C4")]
		private void SetTweenSuspendState(bool state)
		{
		}

		[Token(Token = "0x6000908")]
		[Address(RVA = "0xD8D658", Offset = "0xD8D658", VA = "0xD8D658")]
		public FishAI()
		{
		}

		[Token(Token = "0x6000909")]
		[Address(RVA = "0xD8D694", Offset = "0xD8D694", VA = "0xD8D694")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EF89C", Offset = "0x9EF89C")]
		private void <Nibble>b__51_0()
		{
		}

		[Token(Token = "0x600090A")]
		[Address(RVA = "0xD8D69C", Offset = "0xD8D69C", VA = "0xD8D69C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EF8AC", Offset = "0x9EF8AC")]
		private void <SetTargetAttracted>b__67_0()
		{
		}

		[Token(Token = "0x600090B")]
		[Address(RVA = "0xD8D6C4", Offset = "0xD8D6C4", VA = "0xD8D6C4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EF8BC", Offset = "0x9EF8BC")]
		private void <SprintToTarget>b__75_0()
		{
		}
	}
	[Token(Token = "0x200019E")]
	public class FishAiLogic
	{
		[Token(Token = "0x600090C")]
		[Address(RVA = "0xD8E0AC", Offset = "0xD8E0AC", VA = "0xD8E0AC")]
		public static int GetStarsFromProbability(float[] stars)
		{
			return default(int);
		}

		[Token(Token = "0x600090D")]
		[Address(RVA = "0xD8E130", Offset = "0xD8E130", VA = "0xD8E130")]
		public FishAiLogic()
		{
		}
	}
	[Token(Token = "0x200019F")]
	public class FishAiSpawner : MonoBehaviour
	{
		[Token(Token = "0x20003BA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E7E38", Offset = "0x9E7E38")]
		private sealed class <SpawnFishKeptReleasedCR>d__18 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40018C6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40018C7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40018C8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FishAiSpawner <>4__this;

			[Token(Token = "0x40018C9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <i>5__2;

			[Token(Token = "0x17000245")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001993")]
				[Address(RVA = "0xD8F07C", Offset = "0xD8F07C", VA = "0xD8F07C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000246")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001995")]
				[Address(RVA = "0xD8F0E4", Offset = "0xD8F0E4", VA = "0xD8F0E4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001990")]
			[Address(RVA = "0xD8E66C", Offset = "0xD8E66C", VA = "0xD8E66C")]
			[DebuggerHidden]
			public <SpawnFishKeptReleasedCR>d__18(int <>1__state)
			{
			}

			[Token(Token = "0x6001991")]
			[Address(RVA = "0xD8EEE0", Offset = "0xD8EEE0", VA = "0xD8EEE0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001992")]
			[Address(RVA = "0xD8EEE4", Offset = "0xD8EEE4", VA = "0xD8EEE4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001994")]
			[Address(RVA = "0xD8F084", Offset = "0xD8F084", VA = "0xD8F084", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20003BB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E7E48", Offset = "0x9E7E48")]
		private sealed class <StartSpawn>d__21 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40018CA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40018CB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40018CC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FishAiSpawner <>4__this;

			[Token(Token = "0x17000247")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001999")]
				[Address(RVA = "0xD8F418", Offset = "0xD8F418", VA = "0xD8F418", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000248")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600199B")]
				[Address(RVA = "0xD8F480", Offset = "0xD8F480", VA = "0xD8F480", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001996")]
			[Address(RVA = "0xD8E708", Offset = "0xD8E708", VA = "0xD8E708")]
			[DebuggerHidden]
			public <StartSpawn>d__21(int <>1__state)
			{
			}

			[Token(Token = "0x6001997")]
			[Address(RVA = "0xD8F0EC", Offset = "0xD8F0EC", VA = "0xD8F0EC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001998")]
			[Address(RVA = "0xD8F0F0", Offset = "0xD8F0F0", VA = "0xD8F0F0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600199A")]
			[Address(RVA = "0xD8F420", Offset = "0xD8F420", VA = "0xD8F420", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000A7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public FishAiController fishAiCtrl;

		[Token(Token = "0x4000A7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private SpawnPool pool;

		[Token(Token = "0x4000A7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform fishAiPrefab;

		[Token(Token = "0x4000A7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public FishPool2SO fishPool2;

		[Token(Token = "0x4000A7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float easyMinSpawnDistance;

		[Token(Token = "0x4000A7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float easyMaxSpawnDistance;

		[Token(Token = "0x4000A80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float mediumMinSpawnDistance;

		[Token(Token = "0x4000A81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float mediumMaxSpawnDistance;

		[Token(Token = "0x4000A82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float hardMinSpawnDistance;

		[Token(Token = "0x4000A83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float hardMaxSpawnDistance;

		[Token(Token = "0x4000A84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float expertMinSpawnDistance;

		[Token(Token = "0x4000A85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float expertMaxSpawnDistance;

		[Token(Token = "0x600090E")]
		[Address(RVA = "0xD8E138", Offset = "0xD8E138", VA = "0xD8E138")]
		private void Awake()
		{
		}

		[Token(Token = "0x600090F")]
		[Address(RVA = "0xD8E2DC", Offset = "0xD8E2DC", VA = "0xD8E2DC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000910")]
		[Address(RVA = "0xD8E364", Offset = "0xD8E364", VA = "0xD8E364")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000911")]
		[Address(RVA = "0xD8E36C", Offset = "0xD8E36C", VA = "0xD8E36C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000912")]
		[Address(RVA = "0xD8E510", Offset = "0xD8E510", VA = "0xD8E510")]
		public void SpawnFish(FishPool2SO fp2)
		{
		}

		[Token(Token = "0x6000913")]
		[Address(RVA = "0xD8E5C4", Offset = "0xD8E5C4", VA = "0xD8E5C4")]
		private void SpawnFishKeptReleased(FpFish fish)
		{
		}

		[Token(Token = "0x6000914")]
		[Address(RVA = "0xD8E5F0", Offset = "0xD8E5F0", VA = "0xD8E5F0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9EF8CC", Offset = "0x9EF8CC")]
		private IEnumerator SpawnFishKeptReleasedCR()
		{
			return null;
		}

		[Token(Token = "0x6000915")]
		[Address(RVA = "0xD8E698", Offset = "0xD8E698", VA = "0xD8E698")]
		public void RemoveAllFish()
		{
		}

		[Token(Token = "0x6000916")]
		[Address(RVA = "0xD8DE3C", Offset = "0xD8DE3C", VA = "0xD8DE3C")]
		public void DespawnFish(FishAI fishToDespawn)
		{
		}

		[Token(Token = "0x6000917")]
		[Address(RVA = "0xD8E548", Offset = "0xD8E548", VA = "0xD8E548")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9EF930", Offset = "0x9EF930")]
		private IEnumerator StartSpawn()
		{
			return null;
		}

		[Token(Token = "0x6000918")]
		[Address(RVA = "0xD8E734", Offset = "0xD8E734", VA = "0xD8E734")]
		private void RestockPool()
		{
		}

		[Token(Token = "0x6000919")]
		[Address(RVA = "0xD8E8E8", Offset = "0xD8E8E8", VA = "0xD8E8E8")]
		private void SetupFishAi(FpFish[] fishToSpawn)
		{
		}

		[Token(Token = "0x600091A")]
		[Address(RVA = "0xD8ECFC", Offset = "0xD8ECFC", VA = "0xD8ECFC")]
		public FishAI SpawnFishAi(Vector3 pos)
		{
			return null;
		}

		[Token(Token = "0x600091B")]
		[Address(RVA = "0xD8EE74", Offset = "0xD8EE74", VA = "0xD8EE74")]
		private void EventHub_OnFishCaught(FpFish fish, bool isCheating)
		{
		}

		[Token(Token = "0x600091C")]
		[Address(RVA = "0xD8EED4", Offset = "0xD8EED4", VA = "0xD8EED4")]
		private void EventHub_OnFishLost(FpFish fish)
		{
		}

		[Token(Token = "0x600091D")]
		[Address(RVA = "0xD8E350", Offset = "0xD8E350", VA = "0xD8E350")]
		public void ResetSpawnDistanceDefaults()
		{
		}

		[Token(Token = "0x600091E")]
		[Address(RVA = "0xD8EED8", Offset = "0xD8EED8", VA = "0xD8EED8")]
		public FishAiSpawner()
		{
		}
	}
	[Token(Token = "0x20001A0")]
	public class FishAiSpawnerLogic
	{
		[Token(Token = "0x600091F")]
		[Address(RVA = "0xD8EBAC", Offset = "0xD8EBAC", VA = "0xD8EBAC")]
		public static Vector3 GetRandomSpawnPosition(float minDistance, float maxDistance)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000920")]
		[Address(RVA = "0xD8F488", Offset = "0xD8F488", VA = "0xD8F488")]
		public FishAiSpawnerLogic()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001A1")]
	public class FpFish
	{
		[Token(Token = "0x4000A86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public FishTypeSO fishType;

		[Token(Token = "0x4000A87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float[] stars;

		[Token(Token = "0x4000A88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool fishFinder;

		[Token(Token = "0x4000A89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Vector2 location;

		[Token(Token = "0x4000A8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float probability;

		[Token(Token = "0x4000A8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int starRating;

		[Token(Token = "0x4000A8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float weight;

		[Token(Token = "0x4000A8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float length;

		[Token(Token = "0x4000A8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public int calculatedBoostPoints;

		[Token(Token = "0x4000A8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public FishTypeSO.Resources[] calculatedResource;

		[Token(Token = "0x170000E3")]
		public int starRatingAdjusted
		{
			[Token(Token = "0x6000921")]
			[Address(RVA = "0xC9EDF4", Offset = "0xC9EDF4", VA = "0xC9EDF4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170000E4")]
		public Dictionary<ItemSO, int> resourceDict
		{
			[Token(Token = "0x6000922")]
			[Address(RVA = "0xC9F0E0", Offset = "0xC9F0E0", VA = "0xC9F0E0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000923")]
		[Address(RVA = "0xC9F1C4", Offset = "0xC9F1C4", VA = "0xC9F1C4")]
		public void SetStarsAndWeight()
		{
		}

		[Token(Token = "0x6000924")]
		[Address(RVA = "0xC9F240", Offset = "0xC9F240", VA = "0xC9F240")]
		public void UpdateStarsAndWeight(float newWeight)
		{
		}

		[Token(Token = "0x6000925")]
		[Address(RVA = "0xC9F2B0", Offset = "0xC9F2B0", VA = "0xC9F2B0")]
		public void CalculateCharmEffects()
		{
		}

		[Token(Token = "0x6000926")]
		[Address(RVA = "0xC9EEEC", Offset = "0xC9EEEC", VA = "0xC9EEEC")]
		public float GetCharmTargetModifier(CharmSO charm)
		{
			return default(float);
		}

		[Token(Token = "0x6000927")]
		[Address(RVA = "0xC9F4A4", Offset = "0xC9F4A4", VA = "0xC9F4A4")]
		public FpFish()
		{
		}

		[Token(Token = "0x6000928")]
		[Address(RVA = "0xC9F4AC", Offset = "0xC9F4AC", VA = "0xC9F4AC")]
		public FpFish(FpFish fpf)
		{
		}
	}
	[Token(Token = "0x20001A2")]
	public class FishAiController : MonoBehaviour
	{
		[Token(Token = "0x20003BC")]
		public struct TimeToLure
		{
			[Token(Token = "0x40018CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float min;

			[Token(Token = "0x40018CE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public float max;
		}

		[Token(Token = "0x4000A90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public FishAiSpawner spawner;

		[Token(Token = "0x4000A91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<FishAI> fishAIs;

		[Token(Token = "0x4000A92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TimeToLure[] timeToLure;

		[Token(Token = "0x6000929")]
		[Address(RVA = "0xD8D9CC", Offset = "0xD8D9CC", VA = "0xD8D9CC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600092A")]
		[Address(RVA = "0xD8DB88", Offset = "0xD8DB88", VA = "0xD8DB88")]
		public void HideAllFishAIs()
		{
		}

		[Token(Token = "0x600092B")]
		[Address(RVA = "0xD8DC84", Offset = "0xD8DC84", VA = "0xD8DC84")]
		public void ShowAllVisibleFish(bool overrideVisibility = false)
		{
		}

		[Token(Token = "0x600092C")]
		[Address(RVA = "0xD8DDC4", Offset = "0xD8DDC4", VA = "0xD8DDC4")]
		public void RemoveLostFish(FishAI caughtFish)
		{
		}

		[Token(Token = "0x600092D")]
		[Address(RVA = "0xD8DF24", Offset = "0xD8DF24", VA = "0xD8DF24")]
		public void RemoveCaughtFish(FishAI caughtFish)
		{
		}

		[Token(Token = "0x600092E")]
		[Address(RVA = "0xD8DF9C", Offset = "0xD8DF9C", VA = "0xD8DF9C")]
		public void SuspendAllFishAIs(bool state)
		{
		}

		[Token(Token = "0x600092F")]
		[Address(RVA = "0xD8E0A4", Offset = "0xD8E0A4", VA = "0xD8E0A4")]
		public FishAiController()
		{
		}
	}
	[Token(Token = "0x20001A3")]
	public class FishAnimationController : MonoBehaviour
	{
		[Token(Token = "0x4000A93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Animator rigAnimator;

		[Token(Token = "0x6000930")]
		[Address(RVA = "0xD8F490", Offset = "0xD8F490", VA = "0xD8F490")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000931")]
		[Address(RVA = "0xD8F534", Offset = "0xD8F534", VA = "0xD8F534")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000932")]
		[Address(RVA = "0xD8F5B4", Offset = "0xD8F5B4", VA = "0xD8F5B4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000933")]
		[Address(RVA = "0xD8F700", Offset = "0xD8F700", VA = "0xD8F700")]
		public void Jump(float jumpDur)
		{
		}

		[Token(Token = "0x6000934")]
		[Address(RVA = "0xD8F8B0", Offset = "0xD8F8B0", VA = "0xD8F8B0")]
		public void JumpCompleted()
		{
		}

		[Token(Token = "0x6000935")]
		[Address(RVA = "0xD8F63C", Offset = "0xD8F63C", VA = "0xD8F63C")]
		public void Swim()
		{
		}

		[Token(Token = "0x6000936")]
		[Address(RVA = "0xD8F958", Offset = "0xD8F958", VA = "0xD8F958")]
		public void JumpRecover()
		{
		}

		[Token(Token = "0x6000937")]
		[Address(RVA = "0xD8F9FC", Offset = "0xD8F9FC", VA = "0xD8F9FC")]
		public void JumpReturn()
		{
		}

		[Token(Token = "0x6000938")]
		[Address(RVA = "0xD8FAC0", Offset = "0xD8FAC0", VA = "0xD8FAC0")]
		public void Breach()
		{
		}

		[Token(Token = "0x6000939")]
		[Address(RVA = "0xD8FC14", Offset = "0xD8FC14", VA = "0xD8FC14")]
		public void BreachCompleted()
		{
		}

		[Token(Token = "0x600093A")]
		[Address(RVA = "0xD8FCA0", Offset = "0xD8FCA0", VA = "0xD8FCA0")]
		public void OutOfWater()
		{
		}

		[Token(Token = "0x600093B")]
		[Address(RVA = "0xD8FD58", Offset = "0xD8FD58", VA = "0xD8FD58")]
		public void OnSnapFishFlip()
		{
		}

		[Token(Token = "0x600093C")]
		[Address(RVA = "0xD8FDF8", Offset = "0xD8FDF8", VA = "0xD8FDF8")]
		public FishAnimationController()
		{
		}
	}
	[Token(Token = "0x20001A4")]
	public class FishFinderController : MonoBehaviour
	{
		[Token(Token = "0x20003BD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E7E58", Offset = "0x9E7E58")]
		private sealed class <>c__DisplayClass16_0
		{
			[Token(Token = "0x40018CF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GameObject sonar;

			[Token(Token = "0x600199C")]
			[Address(RVA = "0xD9077C", Offset = "0xD9077C", VA = "0xD9077C")]
			public <>c__DisplayClass16_0()
			{
			}

			[Token(Token = "0x600199D")]
			[Address(RVA = "0xD90784", Offset = "0xD90784", VA = "0xD90784")]
			internal void <EmitSonar>b__0()
			{
			}
		}

		[Token(Token = "0x20003BE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E7E68", Offset = "0x9E7E68")]
		private sealed class <EmitSonar>d__16 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40018D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40018D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40018D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FishFinderController <>4__this;

			[Token(Token = "0x17000249")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60019A1")]
				[Address(RVA = "0xD90B04", Offset = "0xD90B04", VA = "0xD90B04", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700024A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60019A3")]
				[Address(RVA = "0xD90B6C", Offset = "0xD90B6C", VA = "0xD90B6C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600199E")]
			[Address(RVA = "0xD90180", Offset = "0xD90180", VA = "0xD90180")]
			[DebuggerHidden]
			public <EmitSonar>d__16(int <>1__state)
			{
			}

			[Token(Token = "0x600199F")]
			[Address(RVA = "0xD907F0", Offset = "0xD907F0", VA = "0xD907F0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60019A0")]
			[Address(RVA = "0xD907F4", Offset = "0xD907F4", VA = "0xD907F4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60019A2")]
			[Address(RVA = "0xD90B0C", Offset = "0xD90B0C", VA = "0xD90B0C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000A94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static FishFinderController instance;

		[Token(Token = "0x4000A95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ItemSO fishFinder;

		[Token(Token = "0x4000A96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MissionSO fishFinderMission;

		[Token(Token = "0x4000A97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject fishFinderDevice;

		[Token(Token = "0x4000A98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject fishFinderLootbox;

		[Token(Token = "0x4000A99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject sonarWave;

		[Token(Token = "0x4000A9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameObject hotspotIcon;

		[Token(Token = "0x4000A9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private float pingTime;

		[Token(Token = "0x4000A9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		private float fadeOutTime;

		[Token(Token = "0x4000A9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private float cooldownTime;

		[Token(Token = "0x4000A9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[SerializeField]
		private float iconDepth;

		[Token(Token = "0x4000A9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool isPinging;

		[Token(Token = "0x4000AA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
		private bool isAvailable;

		[Token(Token = "0x600093D")]
		[Address(RVA = "0xD8FE08", Offset = "0xD8FE08", VA = "0xD8FE08")]
		private void Awake()
		{
		}

		[Token(Token = "0x600093E")]
		[Address(RVA = "0xD8FF6C", Offset = "0xD8FF6C", VA = "0xD8FF6C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600093F")]
		[Address(RVA = "0xD9009C", Offset = "0xD9009C", VA = "0xD9009C")]
		public void Ping()
		{
		}

		[Token(Token = "0x6000940")]
		[Address(RVA = "0xD90104", Offset = "0xD90104", VA = "0xD90104")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9EF994", Offset = "0x9EF994")]
		private IEnumerator EmitSonar()
		{
			return null;
		}

		[Token(Token = "0x6000941")]
		[Address(RVA = "0xD901AC", Offset = "0xD901AC", VA = "0xD901AC")]
		public void TrySpawnLootbox()
		{
		}

		[Token(Token = "0x6000942")]
		[Address(RVA = "0xD90444", Offset = "0xD90444", VA = "0xD90444")]
		public void TryDespawnLootbox()
		{
		}

		[Token(Token = "0x6000943")]
		[Address(RVA = "0xD904FC", Offset = "0xD904FC", VA = "0xD904FC")]
		public void SetAvailable(bool state)
		{
		}

		[Token(Token = "0x6000944")]
		[Address(RVA = "0xD9057C", Offset = "0xD9057C", VA = "0xD9057C")]
		private void Player_OnLocationChanged(LocationSO location, bool comingFromShip)
		{
		}

		[Token(Token = "0x6000945")]
		[Address(RVA = "0xD9066C", Offset = "0xD9066C", VA = "0xD9066C")]
		private void InventoryController_OnItemGet(ItemSO item, int amount)
		{
		}

		[Token(Token = "0x6000946")]
		[Address(RVA = "0xD90728", Offset = "0xD90728", VA = "0xD90728")]
		private void EventHub_OnMissionChanged(MissionSO mission)
		{
		}

		[Token(Token = "0x6000947")]
		[Address(RVA = "0xD90768", Offset = "0xD90768", VA = "0xD90768")]
		public FishFinderController()
		{
		}
	}
	[Token(Token = "0x20001A5")]
	public class FishMoji : MonoBehaviour
	{
		[Token(Token = "0x4000AA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private RectTransform rt;

		[Token(Token = "0x4000AA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool isDizzy;

		[Token(Token = "0x4000AA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		private bool isPowerReeling;

		[Token(Token = "0x4000AA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private int dizzyImg;

		[Token(Token = "0x4000AA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Tween bounceTween;

		[Token(Token = "0x4000AA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject fishMojiAngry;

		[Token(Token = "0x4000AA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject fishMojiNormal;

		[Token(Token = "0x4000AA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameObject fishMojiPanic;

		[Token(Token = "0x4000AA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public GameObject fishMojiStunned;

		[Token(Token = "0x4000AAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public GameObject fishMojiDizzy1;

		[Token(Token = "0x4000AAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public GameObject fishMojiDizzy2;

		[Token(Token = "0x4000AAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public GameObject fishMojiDizzy3;

		[Token(Token = "0x4000AAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public GameObject fishMojiPowerReel;

		[Token(Token = "0x4000AAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public GameObject fishMojiStunBoost;

		[Token(Token = "0x4000AAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public GameObject fishMojiTeleport;

		[Token(Token = "0x4000AB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public GameObject loot;

		[Token(Token = "0x6000948")]
		[Address(RVA = "0xD929D4", Offset = "0xD929D4", VA = "0xD929D4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000949")]
		[Address(RVA = "0xD92D20", Offset = "0xD92D20", VA = "0xD92D20")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600094A")]
		[Address(RVA = "0xD92F10", Offset = "0xD92F10", VA = "0xD92F10")]
		private void onFishPanic(Vector3 fleeDirection, bool isFish, bool directionChange)
		{
		}

		[Token(Token = "0x600094B")]
		[Address(RVA = "0xD93148", Offset = "0xD93148", VA = "0xD93148")]
		private void onFishStunned()
		{
		}

		[Token(Token = "0x600094C")]
		[Address(RVA = "0xD93278", Offset = "0xD93278", VA = "0xD93278")]
		private void OnRodBoost()
		{
		}

		[Token(Token = "0x600094D")]
		[Address(RVA = "0xD93378", Offset = "0xD93378", VA = "0xD93378")]
		private void SetBoostMoji(RodSO.BoostType boostType)
		{
		}

		[Token(Token = "0x600094E")]
		[Address(RVA = "0xD933CC", Offset = "0xD933CC", VA = "0xD933CC")]
		private void OnStopRodBoost()
		{
		}

		[Token(Token = "0x600094F")]
		[Address(RVA = "0xD93404", Offset = "0xD93404", VA = "0xD93404")]
		private void onFishRest(bool isFish)
		{
		}

		[Token(Token = "0x6000950")]
		[Address(RVA = "0xD936EC", Offset = "0xD936EC", VA = "0xD936EC")]
		private void onFishResist(Vector3 fleeDirection, bool isFish, bool directionChange)
		{
		}

		[Token(Token = "0x6000951")]
		[Address(RVA = "0xD9354C", Offset = "0xD9354C", VA = "0xD9354C")]
		private void HandleDizzy()
		{
		}

		[Token(Token = "0x6000952")]
		[Address(RVA = "0xD9387C", Offset = "0xD9387C", VA = "0xD9387C")]
		private void onFishFlee(Vector3 fleeDirection, bool isFish, bool directionChange)
		{
		}

		[Token(Token = "0x6000953")]
		[Address(RVA = "0xD92C28", Offset = "0xD92C28", VA = "0xD92C28")]
		private void DisableAll()
		{
		}

		[Token(Token = "0x6000954")]
		[Address(RVA = "0xD93040", Offset = "0xD93040", VA = "0xD93040")]
		private void Bounce()
		{
		}

		[Token(Token = "0x6000955")]
		[Address(RVA = "0xD939BC", Offset = "0xD939BC", VA = "0xD939BC")]
		public FishMoji()
		{
		}

		[Token(Token = "0x6000956")]
		[Address(RVA = "0xD939C4", Offset = "0xD939C4", VA = "0xD939C4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EF9F8", Offset = "0x9EF9F8")]
		private void <Bounce>b__28_0()
		{
		}
	}
	[Token(Token = "0x20001A6")]
	public class FishSelectDropdownController : MonoBehaviour
	{
		[Token(Token = "0x4000AB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TMP_Dropdown dropdown;

		[Token(Token = "0x4000AB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FishTypeSO[] fishTypes;

		[Token(Token = "0x4000AB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public FishPool2SO testPoolSO;

		[Token(Token = "0x4000AB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private FishAiSpawner spawner;

		[Token(Token = "0x4000AB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private FishPool2SO[] fishPool2;

		[Token(Token = "0x4000AB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private TMP_Dropdown fishPool2_Dropdown;

		[Token(Token = "0x4000AB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private LootCratePoolSO[] lootCratePool;

		[Token(Token = "0x4000AB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private TMP_Dropdown lootCratePool_Dropdown;

		[Token(Token = "0x6000957")]
		[Address(RVA = "0xC946A4", Offset = "0xC946A4", VA = "0xC946A4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000958")]
		[Address(RVA = "0xC9498C", Offset = "0xC9498C", VA = "0xC9498C")]
		public void SetFishType(int option)
		{
		}

		[Token(Token = "0x6000959")]
		[Address(RVA = "0xC94D68", Offset = "0xC94D68", VA = "0xC94D68")]
		public void SetFishPool2(int option)
		{
		}

		[Token(Token = "0x600095A")]
		[Address(RVA = "0xC94E18", Offset = "0xC94E18", VA = "0xC94E18")]
		public void SetLootCratePool(int option)
		{
		}

		[Token(Token = "0x600095B")]
		[Address(RVA = "0xC94F90", Offset = "0xC94F90", VA = "0xC94F90")]
		public FishSelectDropdownController()
		{
		}
	}
	[Token(Token = "0x20001A7")]
	public class FishingLineColor : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20003BF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E7E78", Offset = "0x9E7E78")]
		private sealed class <>c
		{
			[Token(Token = "0x40018D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40018D4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static TweenCallback <>9__27_0;

			[Token(Token = "0x60019A5")]
			[Address(RVA = "0xC96DCC", Offset = "0xC96DCC", VA = "0xC96DCC")]
			public <>c()
			{
			}

			[Token(Token = "0x60019A6")]
			[Address(RVA = "0xC96DD4", Offset = "0xC96DD4", VA = "0xC96DD4")]
			internal void <SmallBiteColor>b__27_0()
			{
			}
		}

		[Token(Token = "0x4000AB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Material lineMat;

		[Token(Token = "0x4000ABA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Tween colorTween;

		[Token(Token = "0x4000ABB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static FishingLineColor instance;

		[Token(Token = "0x4000ABC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Gradient gradient;

		[Token(Token = "0x4000ABD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private GradientColorKey[] colorKey;

		[Token(Token = "0x4000ABE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private GradientAlphaKey[] alphaKey;

		[Token(Token = "0x4000ABF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Color currentLineColor;

		[Token(Token = "0x4000AC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Tween dangerTween;

		[Token(Token = "0x4000AC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float dangerVal;

		[Token(Token = "0x4000AC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private bool doingBiteColor;

		[Token(Token = "0x4000AC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float colorChangingZoneSize;

		[Token(Token = "0x4000AC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private Color boostColor;

		[Token(Token = "0x4000AC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private Color lightRed;

		[Token(Token = "0x4000AC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private Color lightBlue;

		[Token(Token = "0x4000AC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private Color lightGreen;

		[Token(Token = "0x4000AC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private bool ReadyRecover;

		[Token(Token = "0x600095C")]
		[Address(RVA = "0xC958B0", Offset = "0xC958B0", VA = "0xC958B0")]
		private void Start()
		{
		}

		[Token(Token = "0x600095D")]
		[Address(RVA = "0xC9595C", Offset = "0xC9595C", VA = "0xC9595C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600095E")]
		[Address(RVA = "0xC95D14", Offset = "0xC95D14", VA = "0xC95D14")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600095F")]
		[Address(RVA = "0xC95EA0", Offset = "0xC95EA0", VA = "0xC95EA0")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000960")]
		[Address(RVA = "0xC95F4C", Offset = "0xC95F4C", VA = "0xC95F4C")]
		private void OnRodReset()
		{
		}

		[Token(Token = "0x6000961")]
		[Address(RVA = "0xC96088", Offset = "0xC96088", VA = "0xC96088")]
		private void Update()
		{
		}

		[Token(Token = "0x6000962")]
		[Address(RVA = "0xC96758", Offset = "0xC96758", VA = "0xC96758")]
		public static void StartColorPulse()
		{
		}

		[Token(Token = "0x6000963")]
		[Address(RVA = "0xC96810", Offset = "0xC96810", VA = "0xC96810")]
		public static void StopColorPulse()
		{
		}

		[Token(Token = "0x6000964")]
		[Address(RVA = "0xC968A0", Offset = "0xC968A0", VA = "0xC968A0")]
		public void StartDangerColor()
		{
		}

		[Token(Token = "0x6000965")]
		[Address(RVA = "0xC969AC", Offset = "0xC969AC", VA = "0xC969AC")]
		public void StopDangerColor()
		{
		}

		[Token(Token = "0x6000966")]
		[Address(RVA = "0xC95F54", Offset = "0xC95F54", VA = "0xC95F54")]
		private void SetLineColor(float val)
		{
		}

		[Token(Token = "0x6000967")]
		[Address(RVA = "0xC969DC", Offset = "0xC969DC", VA = "0xC969DC")]
		public static void SmallBiteColor()
		{
		}

		[Token(Token = "0x6000968")]
		[Address(RVA = "0xC96B94", Offset = "0xC96B94", VA = "0xC96B94")]
		public static void BigBiteColor()
		{
		}

		[Token(Token = "0x6000969")]
		[Address(RVA = "0xC96C38", Offset = "0xC96C38", VA = "0xC96C38")]
		private void OnReadyRecover()
		{
		}

		[Token(Token = "0x600096A")]
		[Address(RVA = "0xC96C44", Offset = "0xC96C44", VA = "0xC96C44")]
		private void OnRecoverBobber()
		{
		}

		[Token(Token = "0x600096B")]
		[Address(RVA = "0xC96C50", Offset = "0xC96C50", VA = "0xC96C50")]
		public FishingLineColor()
		{
		}

		[Token(Token = "0x600096C")]
		[Address(RVA = "0xC96D54", Offset = "0xC96D54", VA = "0xC96D54")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EFA08", Offset = "0x9EFA08")]
		private float <StartDangerColor>b__24_0()
		{
			return default(float);
		}

		[Token(Token = "0x600096D")]
		[Address(RVA = "0xC96D5C", Offset = "0xC96D5C", VA = "0xC96D5C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EFA18", Offset = "0x9EFA18")]
		private void <StartDangerColor>b__24_1(float x)
		{
		}
	}
	[Token(Token = "0x20001A8")]
	public class Floater : MonoBehaviour
	{
		[Token(Token = "0x4000AC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Rigidbody rb;

		[Token(Token = "0x4000ACA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float depthBeforeSubmerged;

		[Token(Token = "0x4000ACB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float displacementAmount;

		[Token(Token = "0x600096E")]
		[Address(RVA = "0xC9ECC8", Offset = "0xC9ECC8", VA = "0xC9ECC8")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x600096F")]
		[Address(RVA = "0xC9EDE0", Offset = "0xC9EDE0", VA = "0xC9EDE0")]
		public Floater()
		{
		}
	}
	[Token(Token = "0x20001A9")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x9E6DA4", Offset = "0x9E6DA4")]
	public class CharmCraftingSO : ScriptableObject
	{
		[Token(Token = "0x4000ACC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string BCID;

		[Token(Token = "0x6000970")]
		[Address(RVA = "0xBFA674", Offset = "0xBFA674", VA = "0xBFA674")]
		public CharmCraftingSO()
		{
		}
	}
	[Token(Token = "0x20001AA")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x9E6E04", Offset = "0x9E6E04")]
	public class CharmSO : ItemSO
	{
		[Token(Token = "0x20003C0")]
		public enum CharmType
		{
			[Token(Token = "0x40018D6")]
			None,
			[Token(Token = "0x40018D7")]
			BoostPointBonus,
			[Token(Token = "0x40018D8")]
			WeightBonus,
			[Token(Token = "0x40018D9")]
			ResourceBonus,
			[Token(Token = "0x40018DA")]
			Cosmetic
		}

		[Serializable]
		[Token(Token = "0x20003C1")]
		public struct TargetWorld
		{
			[Token(Token = "0x40018DB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int World;

			[Token(Token = "0x40018DC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public float TargetWorldValue;
		}

		[Serializable]
		[Token(Token = "0x20003C2")]
		public struct TargetFish
		{
			[Token(Token = "0x40018DD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public FishTypeSO TargetFishType;

			[Token(Token = "0x40018DE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public float TargetFishTypeValue;
		}

		[Serializable]
		[Token(Token = "0x20003C3")]
		public struct TargetGrade
		{
			[Token(Token = "0x40018DF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public FishTypeSO.Grade Grade;

			[Token(Token = "0x40018E0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public float TargetGradeValue;
		}

		[Serializable]
		[Token(Token = "0x20003C4")]
		public struct TargetDifficulty
		{
			[Token(Token = "0x40018E1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public FishTypeSO.Difficulty Difficulty;

			[Token(Token = "0x40018E2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public float TargetDifficultyValue;
		}

		[Serializable]
		[Token(Token = "0x20003C5")]
		public struct TargetScale
		{
			[Token(Token = "0x40018E3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public FishTypeSO.FishScale Scale;

			[Token(Token = "0x40018E4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public float TargetScaleValue;
		}

		[Token(Token = "0x4000ACD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public CharmType Type;

		[Token(Token = "0x4000ACE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public TargetWorld[] TargetWorlds;

		[Token(Token = "0x4000ACF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public TargetFish[] TargetFishes;

		[Token(Token = "0x4000AD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public TargetGrade[] TargetGrades;

		[Token(Token = "0x4000AD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public TargetDifficulty[] TargetDifficulties;

		[Token(Token = "0x4000AD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public TargetScale[] TargetScales;

		[Token(Token = "0x6000971")]
		[Address(RVA = "0xBFA740", Offset = "0xBFA740", VA = "0xBFA740")]
		public CharmSO()
		{
		}
	}
	[Token(Token = "0x20001AB")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x9E6E70", Offset = "0x9E6E70")]
	public class CraftingRecipesSO : ItemSO
	{
		[Serializable]
		[Token(Token = "0x20003C6")]
		public struct Ingredient
		{
			[Token(Token = "0x40018E5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IngredientsSO Item;

			[Token(Token = "0x40018E6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int Amount;
		}

		[Token(Token = "0x4000AD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public ItemSO CraftedItem;

		[Token(Token = "0x4000AD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Ingredient[] Ingredients;

		[Token(Token = "0x4000AD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public int CraftingLimit;

		[Token(Token = "0x6000972")]
		[Address(RVA = "0xBFE08C", Offset = "0xBFE08C", VA = "0xBFE08C")]
		public CraftingRecipesSO()
		{
		}
	}
	[Token(Token = "0x20001AC")]
	public enum PredatorSkin
	{
		[Token(Token = "0x4000AD7")]
		Shark,
		[Token(Token = "0x4000AD8")]
		Crocodile,
		[Token(Token = "0x4000AD9")]
		Drone
	}
	[Token(Token = "0x20001AD")]
	public enum BossPredatorSkin
	{
		[Token(Token = "0x4000ADB")]
		Shark,
		[Token(Token = "0x4000ADC")]
		Crocodile,
		[Token(Token = "0x4000ADD")]
		Drone
	}
	[Token(Token = "0x20001AE")]
	public enum RepellentSkin
	{
		[Token(Token = "0x4000ADF")]
		Egg,
		[Token(Token = "0x4000AE0")]
		Barrel,
		[Token(Token = "0x4000AE1")]
		Portal
	}
	[Token(Token = "0x20001AF")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x9E6ED0", Offset = "0x9E6ED0")]
	public class FishPool2SO : ScriptableObject
	{
		[Token(Token = "0x4000AE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string BCID;

		[Token(Token = "0x4000AE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string Location;

		[Token(Token = "0x4000AE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int totalFish;

		[Token(Token = "0x4000AE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool respawnFish;

		[Token(Token = "0x4000AE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public FpFish[] criticalFish;

		[Token(Token = "0x4000AE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public FpFish[] mainPool;

		[Token(Token = "0x4000AE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public FpFish[] respawnPool;

		[Token(Token = "0x4000AE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool predatorActive;

		[Token(Token = "0x4000AEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public PredatorSkin predatorSkin;

		[Token(Token = "0x4000AEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public int predatorMaxNumber;

		[Token(Token = "0x4000AEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public int predatorInitialNumber;

		[Token(Token = "0x4000AED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public int predatorNumSpawnAtOnce;

		[Token(Token = "0x4000AEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float predatorSpawnRate;

		[Token(Token = "0x4000AEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float predatorLifetime;

		[Token(Token = "0x4000AF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public float predatorSystemActiveDuration;

		[Token(Token = "0x4000AF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public float predatorSystemInactiveDuration;

		[Token(Token = "0x4000AF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public float predatorSpeed;

		[Token(Token = "0x4000AF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public bool bossPredatorActive;

		[Token(Token = "0x4000AF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public BossPredatorSkin bossPredatorSkin;

		[Token(Token = "0x4000AF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public int bossPredatorMaxNumber;

		[Token(Token = "0x4000AF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public int bossPredatorInitialNumber;

		[Token(Token = "0x4000AF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public int bossPredatorNumSpawnAtOnce;

		[Token(Token = "0x4000AF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public float bossPredatorSpawnRate;

		[Token(Token = "0x4000AF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public float bossPredatorLifetime;

		[Token(Token = "0x4000AFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public float bossPredatorSystemActiveDuration;

		[Token(Token = "0x4000AFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public float bossPredatorSystemInactiveDuration;

		[Token(Token = "0x4000AFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public float bossPredatorSpeed;

		[Token(Token = "0x4000AFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public bool repellentActive;

		[Token(Token = "0x4000AFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public RepellentSkin repellentSkin;

		[Token(Token = "0x4000AFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public int repellentMaxNumber;

		[Token(Token = "0x4000B00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		public int repellentInitialNumber;

		[Token(Token = "0x4000B01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public int repellentNumSpawnAtOnce;

		[Token(Token = "0x4000B02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		public float repellentSpawnRate;

		[Token(Token = "0x4000B03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public float repellentEffectiveDuration;

		[Token(Token = "0x4000B04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		public float repellentLifetime;

		[Token(Token = "0x4000B05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public float repellentSystemActiveDuration;

		[Token(Token = "0x4000B06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		public float repellentSystemInactiveDuration;

		[Token(Token = "0x6000973")]
		[Address(RVA = "0xD8F290", Offset = "0xD8F290", VA = "0xD8F290")]
		public FpFish[] GetFishToSpawn()
		{
			return null;
		}

		[Token(Token = "0x6000974")]
		[Address(RVA = "0xD8E780", Offset = "0xD8E780", VA = "0xD8E780")]
		public FpFish[] GetFishToRespawn()
		{
			return null;
		}

		[Token(Token = "0x6000975")]
		[Address(RVA = "0xD94D7C", Offset = "0xD94D7C", VA = "0xD94D7C")]
		private FpFish GetFpFish(bool useMainPool = false)
		{
			return null;
		}

		[Token(Token = "0x6000976")]
		[Address(RVA = "0xD94E74", Offset = "0xD94E74", VA = "0xD94E74")]
		public FishPool2SO()
		{
		}
	}
	[Token(Token = "0x20001B0")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x9E6F3C", Offset = "0x9E6F3C")]
	public class FishPoolSO : ScriptableObject
	{
		[Token(Token = "0x6000977")]
		[Address(RVA = "0xD94F90", Offset = "0xD94F90", VA = "0xD94F90")]
		public FishPoolSO()
		{
		}
	}
	[Token(Token = "0x20001B1")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x9E6FA8", Offset = "0x9E6FA8")]
	public class FishTypeSO : ScriptableObject
	{
		[Token(Token = "0x20003C7")]
		public enum FishableType
		{
			[Token(Token = "0x40018E8")]
			Fish,
			[Token(Token = "0x40018E9")]
			Ingredient,
			[Token(Token = "0x40018EA")]
			LootBox,
			[Token(Token = "0x40018EB")]
			Artifact
		}

		[Token(Token = "0x20003C8")]
		public enum Grade
		{
			[Token(Token = "0x40018ED")]
			None,
			[Token(Token = "0x40018EE")]
			Common,
			[Token(Token = "0x40018EF")]
			Uncommon,
			[Token(Token = "0x40018F0")]
			Rare,
			[Token(Token = "0x40018F1")]
			Epic,
			[Token(Token = "0x40018F2")]
			Legendary
		}

		[Token(Token = "0x20003C9")]
		public enum Difficulty
		{
			[Token(Token = "0x40018F4")]
			None,
			[Token(Token = "0x40018F5")]
			Easy,
			[Token(Token = "0x40018F6")]
			Medium,
			[Token(Token = "0x40018F7")]
			Hard,
			[Token(Token = "0x40018F8")]
			Expert
		}

		[Token(Token = "0x20003CA")]
		public enum InitialMode
		{
			[Token(Token = "0x40018FA")]
			None,
			[Token(Token = "0x40018FB")]
			Rage,
			[Token(Token = "0x40018FC")]
			Run
		}

		[Token(Token = "0x20003CB")]
		public enum FishScale
		{
			[Token(Token = "0x40018FE")]
			Small,
			[Token(Token = "0x40018FF")]
			Medium,
			[Token(Token = "0x4001900")]
			Large,
			[Token(Token = "0x4001901")]
			XLarge
		}

		[Serializable]
		[Token(Token = "0x20003CC")]
		public struct Attraction
		{
			[Token(Token = "0x4001902")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public LureSO Lure;

			[Token(Token = "0x4001903")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public uint Value;
		}

		[Serializable]
		[Token(Token = "0x20003CD")]
		public struct Rewards
		{
			[Token(Token = "0x4001904")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int BoostPoints;

			[Token(Token = "0x4001905")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Resources[] Resources;

			[Token(Token = "0x4001906")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int TournamentPoint;
		}

		[Serializable]
		[Token(Token = "0x20003CE")]
		public struct Resources
		{
			[Token(Token = "0x4001907")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ItemSO Resource;

			[Token(Token = "0x4001908")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int ResourceAmount;
		}

		[Token(Token = "0x20003CF")]
		public enum AquariumRegion
		{
			[Token(Token = "0x400190A")]
			Top,
			[Token(Token = "0x400190B")]
			Middle,
			[Token(Token = "0x400190C")]
			Bottom,
			[Token(Token = "0x400190D")]
			Any
		}

		[Token(Token = "0x4000B07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string BCID;

		[Token(Token = "0x4000B08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string fishName;

		[Token(Token = "0x4000B09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string fishDescription;

		[Token(Token = "0x4000B0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int fishIndex;

		[Token(Token = "0x4000B0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float smallWeightLow;

		[Token(Token = "0x4000B0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float smallWeightHigh;

		[Token(Token = "0x4000B0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float mediumWeightHigh;

		[Token(Token = "0x4000B0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float largeWeightHigh;

		[Token(Token = "0x4000B0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float minLength;

		[Token(Token = "0x4000B10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float maxLength;

		[Token(Token = "0x4000B11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public bool isFish;

		[Token(Token = "0x4000B12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public FishableType fishableType;

		[Token(Token = "0x4000B13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public Grade grade;

		[Token(Token = "0x4000B14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Sprite gradeIconSmall;

		[Token(Token = "0x4000B15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Sprite gradeIconMedium;

		[Token(Token = "0x4000B16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Difficulty difficulty;

		[Token(Token = "0x4000B17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public InitialMode initialMode;

		[Token(Token = "0x4000B18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public float initialModeDuration;

		[Token(Token = "0x4000B19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public FishScale fishScale;

		[Token(Token = "0x4000B1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public float examineDistance;

		[Token(Token = "0x4000B1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public float underwaterDepth;

		[Token(Token = "0x4000B1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public float jumpDistance;

		[Token(Token = "0x4000B1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public float jumpHeight;

		[Token(Token = "0x4000B1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public float jumpDuration;

		[Token(Token = "0x4000B1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9EA18C", Offset = "0x9EA18C")]
		public float stamina;

		[Token(Token = "0x4000B20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private float m_stamina;

		[Token(Token = "0x4000B21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public float staminaReductionReeling;

		[Token(Token = "0x4000B22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public float staminaReductionReelingStunned;

		[Token(Token = "0x4000B23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public float staminaReductionLeans;

		[Token(Token = "0x4000B24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public float staminaReductionSnaps;

		[Token(Token = "0x4000B25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		public float staminaReductionJumps;

		[Token(Token = "0x4000B26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public float staminaReductionPostPatternRest;

		[Token(Token = "0x4000B27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		public float staminaReductionPerfectPattern;

		[Token(Token = "0x4000B28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public float staminaReductionPowerReelRodLvl1;

		[Token(Token = "0x4000B29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		public float staminaReductionPowerReelRodLvl2;

		[Token(Token = "0x4000B2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public float staminaReductionPowerReelRodLvl3;

		[Token(Token = "0x4000B2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		public float staminaReductionStunRodLvl1;

		[Token(Token = "0x4000B2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public float staminaReductionStunRodLvl2;

		[Token(Token = "0x4000B2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		public float staminaReductionStunRodLvl3;

		[Token(Token = "0x4000B2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public float staminaReductionTeleportRodLvl1;

		[Token(Token = "0x4000B2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		public float staminaReductionTeleportRodLvl2;

		[Token(Token = "0x4000B30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public float staminaReductionTeleportRodLvl3;

		[Token(Token = "0x4000B31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9EA1C4", Offset = "0x9EA1C4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9EA1C4", Offset = "0x9EA1C4")]
		public float speed;

		[Token(Token = "0x4000B32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9EA218", Offset = "0x9EA218")]
		public float speedReeling;

		[Token(Token = "0x4000B33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9EA230", Offset = "0x9EA230")]
		public float speedPatternPlay;

		[Token(Token = "0x4000B34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public float reelingSpeedMultiplier;

		[Token(Token = "0x4000B35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		public float startingTension;

		[Token(Token = "0x4000B36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9EA248", Offset = "0x9EA248")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9EA248", Offset = "0x9EA248")]
		public float blueZoneSize;

		[Token(Token = "0x4000B37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9EA29C", Offset = "0x9EA29C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9EA29C", Offset = "0x9EA29C")]
		public float redZoneSize;

		[Token(Token = "0x4000B38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9EA2F0", Offset = "0x9EA2F0")]
		public float fleeTime;

		[Token(Token = "0x4000B39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9EA328", Offset = "0x9EA328")]
		public float arrowSolveTime;

		[Token(Token = "0x4000B3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public float restTime;

		[Token(Token = "0x4000B3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9EA360", Offset = "0x9EA360")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9EA360", Offset = "0x9EA360")]
		public float increaseRestTimePerFleeBy;

		[Token(Token = "0x4000B3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9EA3B4", Offset = "0x9EA3B4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9EA3B4", Offset = "0x9EA3B4")]
		public float increaseTensionOnArrowFailBy;

		[Token(Token = "0x4000B3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9EA40C", Offset = "0x9EA40C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9EA40C", Offset = "0x9EA40C")]
		public float decreaseTensionOnArrowSolvedBy;

		[Token(Token = "0x4000B3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public float patternFrequency;

		[Token(Token = "0x4000B3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9EA464", Offset = "0x9EA464")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9EA464", Offset = "0x9EA464")]
		public float likelihoodChangeLeanDirection;

		[Token(Token = "0x4000B40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public PatternSO[] patternSO;

		[Token(Token = "0x4000B41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9EA4B8", Offset = "0x9EA4B8")]
		public Transform prefab;

		[Token(Token = "0x4000B42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		public Transform prefabAquarium;

		[Token(Token = "0x4000B43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		public Sprite icon;

		[Token(Token = "0x4000B44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		public Sprite fishopediaListIcon;

		[Token(Token = "0x4000B45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		public Sprite uncaughtIcon;

		[Token(Token = "0x4000B46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		public Sprite uncaughtFishOPediaListIcon;

		[Token(Token = "0x4000B47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9EA4F0", Offset = "0x9EA4F0")]
		public Attraction[] Attractions;

		[Token(Token = "0x4000B48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private Dictionary<LureSO, uint> m_Attraction_Dic;

		[Token(Token = "0x4000B49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9EA528", Offset = "0x9EA528")]
		public LureSO[] PreferredFloatingLure;

		[Token(Token = "0x4000B4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		public LureSO[] PreferredSwimmingLure;

		[Token(Token = "0x4000B4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9EA560", Offset = "0x9EA560")]
		public int World;

		[Token(Token = "0x4000B4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		public LocationSO[] Locations;

		[Token(Token = "0x4000B4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9EA598", Offset = "0x9EA598")]
		public Rewards[] rewards;

		[Token(Token = "0x4000B4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		private float weightModifier;

		[Token(Token = "0x4000B4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9EA5D0", Offset = "0x9EA5D0")]
		public bool canSchool;

		[Token(Token = "0x4000B50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		public float minSpeedInAquarium;

		[Token(Token = "0x4000B51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
		public float maxSpeedInAquarium;

		[Token(Token = "0x4000B52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		public AquariumRegion preferredRegion;

		[Token(Token = "0x4000B53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x194")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9EA608", Offset = "0x9EA608")]
		public float AddChargeOnRelease;

		[Token(Token = "0x4000B54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		public float AddChargeOnKeep;

		[Token(Token = "0x4000B55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
		public float PowerReelLvl1BoostDuration;

		[Token(Token = "0x4000B56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		public float PowerReelLvl2BoostDuration;

		[Token(Token = "0x4000B57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A4")]
		public float PowerReelLvl3BoostDuration;

		[Token(Token = "0x4000B58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		public float PowerReelLvl1BoostReelMult;

		[Token(Token = "0x4000B59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1AC")]
		public float PowerReelLvl2BoostReelMult;

		[Token(Token = "0x4000B5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		public float PowerReelLvl3BoostReelMult;

		[Token(Token = "0x4000B5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B4")]
		public float StunLvl1BoostDuration;

		[Token(Token = "0x4000B5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		public float StunLvl2BoostDuration;

		[Token(Token = "0x4000B5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1BC")]
		public float StunLvl3BoostDuration;

		[Token(Token = "0x4000B5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		public float TeleportLvl1BoostPower;

		[Token(Token = "0x4000B5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C4")]
		public float TeleportLvl2BoostPower;

		[Token(Token = "0x4000B60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		public float TeleportLvl3BoostPower;

		[Token(Token = "0x170000E5")]
		public int BoostPts
		{
			[Token(Token = "0x6000978")]
			[Address(RVA = "0xC94FA0", Offset = "0xC94FA0", VA = "0xC94FA0")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170000E6")]
		public int TournamentPoint
		{
			[Token(Token = "0x6000979")]
			[Address(RVA = "0xC9506C", Offset = "0xC9506C", VA = "0xC9506C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170000E7")]
		public Resources[] Resource
		{
			[Token(Token = "0x600097A")]
			[Address(RVA = "0xC950CC", Offset = "0xC950CC", VA = "0xC950CC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000E8")]
		private int m_Star
		{
			[Token(Token = "0x600097B")]
			[Address(RVA = "0xC95000", Offset = "0xC95000", VA = "0xC95000")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x600097C")]
		[Address(RVA = "0xC951D8", Offset = "0xC951D8", VA = "0xC951D8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600097D")]
		[Address(RVA = "0xC951E4", Offset = "0xC951E4", VA = "0xC951E4")]
		public void InitAtrraction()
		{
		}

		[Token(Token = "0x600097E")]
		[Address(RVA = "0xC952CC", Offset = "0xC952CC", VA = "0xC952CC")]
		public float AdjustWeightModifier(float weight, float modifier = 1f)
		{
			return default(float);
		}

		[Token(Token = "0x600097F")]
		[Address(RVA = "0xC9539C", Offset = "0xC9539C", VA = "0xC9539C")]
		public int GetStars(float weight)
		{
			return default(int);
		}

		[Token(Token = "0x6000980")]
		[Address(RVA = "0xC953C8", Offset = "0xC953C8", VA = "0xC953C8")]
		public float GetWeight(int star, float modifier = 1f)
		{
			return default(float);
		}

		[Token(Token = "0x6000981")]
		[Address(RVA = "0xC95668", Offset = "0xC95668", VA = "0xC95668")]
		public float GetLength(float weight)
		{
			return default(float);
		}

		[Token(Token = "0x6000982")]
		[Address(RVA = "0xC95690", Offset = "0xC95690", VA = "0xC95690")]
		public void ResetAdjust()
		{
		}

		[Token(Token = "0x6000983")]
		[Address(RVA = "0xC95734", Offset = "0xC95734", VA = "0xC95734")]
		public uint GetAttractionVal(LureSO lure)
		{
			return default(uint);
		}

		[Token(Token = "0x6000984")]
		[Address(RVA = "0xC9581C", Offset = "0xC9581C", VA = "0xC9581C")]
		public FishTypeSO()
		{
		}
	}
	[Token(Token = "0x20001B2")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x9E7014", Offset = "0x9E7014")]
	public class FishingSO : ScriptableObject
	{
		[Token(Token = "0x4000B61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string BCID;

		[Token(Token = "0x6000985")]
		[Address(RVA = "0xC9ECC0", Offset = "0xC9ECC0", VA = "0xC9ECC0")]
		public FishingSO()
		{
		}
	}
	[Token(Token = "0x20001B3")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x9E7074", Offset = "0x9E7074")]
	public class IngredientsSO : ItemSO
	{
		[Token(Token = "0x6000986")]
		[Address(RVA = "0xCA2F98", Offset = "0xCA2F98", VA = "0xCA2F98")]
		public IngredientsSO()
		{
		}
	}
	[Token(Token = "0x20001B4")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x9E70D4", Offset = "0x9E70D4")]
	public class ItemCraftingSO : ScriptableObject
	{
		[Token(Token = "0x4000B62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string BCID;

		[Token(Token = "0x6000987")]
		[Address(RVA = "0xCA61BC", Offset = "0xCA61BC", VA = "0xCA61BC")]
		public ItemCraftingSO()
		{
		}
	}
	[Token(Token = "0x20001B5")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x9E7134", Offset = "0x9E7134")]
	public class ItemSO : ScriptableObject
	{
		[Token(Token = "0x4000B63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string BCID;

		[Token(Token = "0x4000B64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string ItemName;

		[Token(Token = "0x4000B65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string Description;

		[Token(Token = "0x4000B66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Sprite icon;

		[Token(Token = "0x4000B67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform Prefab;

		[Token(Token = "0x4000B68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public ItemTypeSO ItemType;

		[Token(Token = "0x4000B69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public ItemSO UpgradeFrom;

		[Token(Token = "0x4000B6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public int Level;

		[Token(Token = "0x4000B6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public int Amount;

		[Token(Token = "0x4000B6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public bool Unlock;

		[Token(Token = "0x6000988")]
		[Address(RVA = "0xCA2FA0", Offset = "0xCA2FA0", VA = "0xCA2FA0")]
		public ItemSO()
		{
		}
	}
	[Token(Token = "0x20001B6")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x9E7194", Offset = "0x9E7194")]
	public class ItemTypeSO : ScriptableObject
	{
		[Token(Token = "0x20003D0")]
		public enum ItemType
		{
			[Token(Token = "0x400190F")]
			Item = 0,
			[Token(Token = "0x4001910")]
			Pole = 1,
			[Token(Token = "0x4001911")]
			Lure = 2,
			[Token(Token = "0x4001912")]
			Charm = 3,
			[Token(Token = "0x4001913")]
			Ingredient = 5,
			[Token(Token = "0x4001914")]
			CraftingRecipes = 6,
			[Token(Token = "0x4001915")]
			Decorations = 7
		}

		[Token(Token = "0x4000B6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ItemType Type;

		[Token(Token = "0x6000989")]
		[Address(RVA = "0xCA61CC", Offset = "0xCA61CC", VA = "0xCA61CC")]
		public ItemTypeSO()
		{
		}
	}
	[Token(Token = "0x20001B7")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x9E71F4", Offset = "0x9E71F4")]
	public class LocationSO : ScriptableObject
	{
		[Token(Token = "0x4000B6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string BCID;

		[Token(Token = "0x4000B6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string LocationName;

		[Token(Token = "0x4000B70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string SceneName;

		[Token(Token = "0x4000B71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public FishPool2SO FishPool;

		[Token(Token = "0x4000B72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int LocationIndex;

		[Token(Token = "0x4000B73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public LootCratePoolSO LootCratePool;

		[Token(Token = "0x4000B74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float PullupDistance;

		[Token(Token = "0x4000B75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float AllowPatternPlayDistance;

		[Token(Token = "0x4000B76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float MaxDistance;

		[Token(Token = "0x4000B77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float ShoreBarrierZPos;

		[Token(Token = "0x4000B78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public bool UseBloom;

		[Token(Token = "0x4000B79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public int FFRLevel;

		[Token(Token = "0x4000B7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public int QualityLevel;

		[Token(Token = "0x4000B7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public float RenderScale;

		[Token(Token = "0x4000B7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public bool Unlocked;

		[Token(Token = "0x4000B7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
		public bool Arrived;

		[Token(Token = "0x600098A")]
		[Address(RVA = "0xCA76F4", Offset = "0xCA76F4", VA = "0xCA76F4")]
		public LocationSO()
		{
		}
	}
	[Token(Token = "0x20001B8")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x9E7254", Offset = "0x9E7254")]
	public class LootBoxSO : ScriptableObject
	{
		[Token(Token = "0x600098B")]
		[Address(RVA = "0xCA771C", Offset = "0xCA771C", VA = "0xCA771C")]
		public LootBoxSO()
		{
		}
	}
	[Token(Token = "0x20001B9")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x9E72B4", Offset = "0x9E72B4")]
	public class LootCratePoolSO : ScriptableObject
	{
		[Token(Token = "0x4000B7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string BCID;

		[Token(Token = "0x4000B7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int totalLoot;

		[Token(Token = "0x4000B80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool respawnLoot;

		[Token(Token = "0x4000B81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public LootCrate[] criticalLoot;

		[Token(Token = "0x4000B82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public LootCrate[] mainLootPool;

		[Token(Token = "0x4000B83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public LootCrate[] respawnLootPool;

		[Token(Token = "0x600098C")]
		[Address(RVA = "0xCA81E0", Offset = "0xCA81E0", VA = "0xCA81E0")]
		public LootCrate[] GetCratesToSpawn()
		{
			return null;
		}

		[Token(Token = "0x600098D")]
		[Address(RVA = "0xCA8448", Offset = "0xCA8448", VA = "0xCA8448")]
		public LootCrate[] GetCratesToRespawn()
		{
			return null;
		}

		[Token(Token = "0x600098E")]
		[Address(RVA = "0xCA8368", Offset = "0xCA8368", VA = "0xCA8368")]
		private LootCrate GetLootCrate(bool useMainPool = false)
		{
			return null;
		}

		[Token(Token = "0x600098F")]
		[Address(RVA = "0xCA8574", Offset = "0xCA8574", VA = "0xCA8574")]
		public LootCratePoolSO()
		{
		}
	}
	[Token(Token = "0x20001BA")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x9E7320", Offset = "0x9E7320")]
	public class LoreSO : ScriptableObject
	{
		[Token(Token = "0x4000B84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string BCID;

		[Token(Token = "0x4000B85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string loreTitle;

		[Token(Token = "0x4000B86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string loreDescription;

		[Token(Token = "0x4000B87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Sprite loreIcon;

		[Token(Token = "0x4000B88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Sprite loreHeadlineImage;

		[Token(Token = "0x4000B89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool unlockedAtStart;

		[Token(Token = "0x6000990")]
		[Address(RVA = "0xCA947C", Offset = "0xCA947C", VA = "0xCA947C")]
		public LoreSO()
		{
		}
	}
	[Token(Token = "0x20001BB")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x9E7380", Offset = "0x9E7380")]
	public class LureSO : ItemSO
	{
		[Token(Token = "0x20003D1")]
		public enum Type
		{
			[Token(Token = "0x4001917")]
			Floating,
			[Token(Token = "0x4001918")]
			Swimming
		}

		[Token(Token = "0x4000B8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float AttractionRadius;

		[Token(Token = "0x4000B8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Type LureType;

		[Token(Token = "0x4000B8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static float minimumContinuousRodReelTime;

		[Token(Token = "0x4000B8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public static float minimumContinuousRodRestTime;

		[Token(Token = "0x4000B8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static float maximumContinuousRodReelTime;

		[Token(Token = "0x4000B8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public static float maximumContinuousRodRestTime;

		[Token(Token = "0x4000B90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static float attractionShrinkSpeed;

		[Token(Token = "0x6000991")]
		[Address(RVA = "0xCAAE70", Offset = "0xCAAE70", VA = "0xCAAE70")]
		public LureSO()
		{
		}
	}
	[Token(Token = "0x20001BC")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x9E73E0", Offset = "0x9E73E0")]
	public class MissionSO : ScriptableObject
	{
		[Token(Token = "0x20003D2")]
		public enum MissionTypes
		{
			[Token(Token = "0x400191A")]
			mission,
			[Token(Token = "0x400191B")]
			sideMission,
			[Token(Token = "0x400191C")]
			challengeMission,
			[Token(Token = "0x400191D")]
			tutorial,
			[Token(Token = "0x400191E")]
			cutscene,
			[Token(Token = "0x400191F")]
			fishPad
		}

		[Serializable]
		[Token(Token = "0x20003D3")]
		public struct TargetFish
		{
			[Token(Token = "0x4001920")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public FishTypeSO Target;

			[Token(Token = "0x4001921")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int TargetTotal;

			[Token(Token = "0x4001922")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public int TargetFishGoalStarRating;

			[Token(Token = "0x4001923")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public FishTypeSO.Grade TargetFishGrade;

			[Token(Token = "0x4001924")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public bool IsAnyofTarget;
		}

		[Serializable]
		[Token(Token = "0x20003D4")]
		public struct TargetItem
		{
			[Token(Token = "0x4001925")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ItemSO TargetItemSO;

			[Token(Token = "0x4001926")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int TargetTotal;
		}

		[Serializable]
		[Token(Token = "0x20003D5")]
		public struct Reward
		{
			[Token(Token = "0x4001927")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ItemSO Item;

			[Token(Token = "0x4001928")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int Amount;
		}

		[Token(Token = "0x4000B91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string BCID;

		[Token(Token = "0x4000B92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MissionTypes MissionType;

		[Token(Token = "0x4000B93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string World;

		[Token(Token = "0x4000B94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string Location;

		[Token(Token = "0x4000B95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string TimeOfDay;

		[Token(Token = "0x4000B96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public LocationSO MissionLocation;

		[Token(Token = "0x4000B97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string MissionName;

		[Token(Token = "0x4000B98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public string MissionDescription;

		[Token(Token = "0x4000B99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public string MissionShortDescription;

		[Token(Token = "0x4000B9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public string MiniGame;

		[Token(Token = "0x4000B9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public TargetFish[] TargetFishes;

		[Token(Token = "0x4000B9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public string FishGroupName;

		[Token(Token = "0x4000B9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Sprite FishGroupIcon;

		[Token(Token = "0x4000B9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public float TargetGoalTotalWeight;

		[Token(Token = "0x4000B9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public int TargetGoalTotalStar;

		[Token(Token = "0x4000BA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public TargetItem[] TargetItems;

		[Token(Token = "0x4000BA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public int TimeLimit;

		[Token(Token = "0x4000BA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public int BaitLimit;

		[Token(Token = "0x4000BA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public ItemSO SuggestedBait;

		[Token(Token = "0x4000BA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public ItemSO SuggestedPole;

		[Token(Token = "0x4000BA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public ItemSO SuggestedLure;

		[Token(Token = "0x4000BA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public FishPool2SO[] FishPools;

		[Token(Token = "0x4000BA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public int FishPoolChangingFrequency;

		[Token(Token = "0x4000BA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public LootCratePoolSO LootCratePool;

		[Token(Token = "0x4000BA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public LocationSO[] TargetLocations;

		[Token(Token = "0x4000BAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public Reward[] Rewards;

		[Token(Token = "0x4000BAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public MissionSO[] UnlockedMission;

		[Token(Token = "0x4000BAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public int AttemptLimit;

		[Token(Token = "0x4000BAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public string NewsHeadlineText;

		[Token(Token = "0x4000BAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public Sprite NewsImage;

		[Token(Token = "0x4000BAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public int PlayerRanking;

		[Token(Token = "0x4000BB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public int[] TeamRanks;

		[Token(Token = "0x4000BB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public Dictionary<TargetFish, int> MissionProgresses;

		[Token(Token = "0x4000BB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public Dictionary<TargetItem, int> MissionProgresses_Item;

		[Token(Token = "0x4000BB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		public float MissionTotalWeight;

		[Token(Token = "0x4000BB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		public int MissionTotalStar;

		[Token(Token = "0x4000BB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		public int MissionTargetAmount;

		[Token(Token = "0x4000BB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		public string Message;

		[Token(Token = "0x4000BB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		public string CutsceneButtonText;

		[Token(Token = "0x6000993")]
		[Address(RVA = "0xD51DC4", Offset = "0xD51DC4", VA = "0xD51DC4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000994")]
		[Address(RVA = "0xD4AD70", Offset = "0xD4AD70", VA = "0xD4AD70")]
		public void Init()
		{
		}

		[Token(Token = "0x6000995")]
		[Address(RVA = "0xD51DC8", Offset = "0xD51DC8", VA = "0xD51DC8")]
		private void SetProgress()
		{
		}

		[Token(Token = "0x6000996")]
		[Address(RVA = "0xD5221C", Offset = "0xD5221C", VA = "0xD5221C")]
		public MissionSO()
		{
		}
	}
	[Token(Token = "0x20001BD")]
	public enum Difficulty
	{
		[Token(Token = "0x4000BB9")]
		Easy,
		[Token(Token = "0x4000BBA")]
		Medium,
		[Token(Token = "0x4000BBB")]
		Hard,
		[Token(Token = "0x4000BBC")]
		Expert
	}
	[Token(Token = "0x20001BE")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x9E7440", Offset = "0x9E7440")]
	public class PatternSO : ScriptableObject
	{
		[Token(Token = "0x4000BBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string BCID;

		[Token(Token = "0x4000BBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Difficulty difficulty;

		[Token(Token = "0x4000BBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Arrow[] arrows;

		[Token(Token = "0x4000BC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9EA640", Offset = "0x9EA640")]
		public float[] timePerStep;

		[Token(Token = "0x6000997")]
		[Address(RVA = "0xD5AF6C", Offset = "0xD5AF6C", VA = "0xD5AF6C")]
		public PatternSO()
		{
		}
	}
	[Token(Token = "0x20001BF")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x9E74A0", Offset = "0x9E74A0")]
	public class PlayerProgressSO : ScriptableObject
	{
		[Token(Token = "0x4000BC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string Mission;

		[Token(Token = "0x4000BC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<string> ItemSOs;

		[Token(Token = "0x4000BC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<MapUnlockProgress> UnlockedLocations;

		[Token(Token = "0x4000BC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<ItemProgress> ItemProgresses;

		[Token(Token = "0x4000BC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Dictionary<string, ItemProgress> m_Item_Dic;

		[Token(Token = "0x4000BC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public List<MissionProgress> MissionProgresses;

		[Token(Token = "0x4000BC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Dictionary<string, MissionProgress> m_Mission_Dic;

		[Token(Token = "0x4000BC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public List<FishOPedia> FishOPedias;

		[Token(Token = "0x4000BC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Dictionary<string, FishOPedia> m_FishOPedia_Dic;

		[Token(Token = "0x4000BCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public List<AquariumPreset> AquariumCustomizations;

		[Token(Token = "0x4000BCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public int CurrentAquariumIndex;

		[Token(Token = "0x4000BCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public bool IsCharmCraftStationUnlocked;

		[Token(Token = "0x4000BCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6D")]
		public bool IsItemCraftStationUnlocked;

		[Token(Token = "0x4000BCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6E")]
		public bool IsCraftingCutsceneShowed;

		[Token(Token = "0x4000BCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6F")]
		public bool IsAquariumCutsceneShowed;

		[Token(Token = "0x4000BD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public string CloudPath;

		[Token(Token = "0x4000BD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public int PlayerXP;

		[Token(Token = "0x4000BD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public int PlayerLevel;

		[Token(Token = "0x4000BD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public int PlayerTournamentPoint;

		[Token(Token = "0x4000BD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public string PlayerRod;

		[Token(Token = "0x4000BD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public LureSO.Type PlayerLureMode;

		[Token(Token = "0x4000BD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public string PlayerFloatingLure;

		[Token(Token = "0x4000BD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public string PlayerSwimmingLure;

		[Token(Token = "0x4000BD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public string PlayerCharm;

		[Token(Token = "0x4000BD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public string PlayerLastLocation;

		[Token(Token = "0x4000BDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public int W1TournamentPoint;

		[Token(Token = "0x4000BDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		public int W2TournamentPoint;

		[Token(Token = "0x4000BDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public int W3TournamentPoint;

		[Token(Token = "0x4000BDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		public float BoostTimer;

		[Token(Token = "0x4000BDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public float BoostLevelPowerReel;

		[Token(Token = "0x4000BDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		public float BoostLevelStun;

		[Token(Token = "0x4000BE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public float BoostLevelTeleport;

		[Token(Token = "0x4000BE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public string TimeStamp;

		[Token(Token = "0x4000BE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public string VersionStamp;

		[Token(Token = "0x4000BE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public bool AutoReeling;

		[Token(Token = "0x4000BE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE9")]
		public bool ShowFishingUI;

		[Token(Token = "0x4000BE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		public float PlayerHeight;

		[Token(Token = "0x4000BE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public float MusicVolume;

		[Token(Token = "0x4000BE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		public bool ShowFishFinder;

		[Token(Token = "0x4000BE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF5")]
		public bool ShowLureBeam;

		[Token(Token = "0x4000BE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public string[] AnimationScenes;

		[Token(Token = "0x170000E9")]
		public MissionSO ProgressMission
		{
			[Token(Token = "0x6000998")]
			[Address(RVA = "0xC60C24", Offset = "0xC60C24", VA = "0xC60C24")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000999")]
			[Address(RVA = "0xC5F078", Offset = "0xC5F078", VA = "0xC5F078")]
			set
			{
			}
		}

		[Token(Token = "0x600099A")]
		[Address(RVA = "0xC61650", Offset = "0xC61650", VA = "0xC61650")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600099B")]
		[Address(RVA = "0xC61BCC", Offset = "0xC61BCC", VA = "0xC61BCC")]
		private void SaveLegacy(string fileName, object target)
		{
		}

		[Token(Token = "0x600099C")]
		[Address(RVA = "0xC61CE8", Offset = "0xC61CE8", VA = "0xC61CE8")]
		private void Save(string fileName, object target)
		{
		}

		[Token(Token = "0x600099D")]
		[Address(RVA = "0xC614F0", Offset = "0xC614F0", VA = "0xC614F0")]
		private void Save(bool IsGamePlay = true)
		{
		}

		[Token(Token = "0x600099E")]
		[Address(RVA = "0xC61ECC", Offset = "0xC61ECC", VA = "0xC61ECC")]
		private void LoadLegacy(string fileName, object target, int selectedIndex)
		{
		}

		[Token(Token = "0x600099F")]
		[Address(RVA = "0xC62364", Offset = "0xC62364", VA = "0xC62364")]
		private void Load(string fileName, object target, int selectedIndex)
		{
		}

		[Token(Token = "0x60009A0")]
		[Address(RVA = "0xC62734", Offset = "0xC62734", VA = "0xC62734")]
		private void Delete(string fileName)
		{
		}

		[Token(Token = "0x60009A1")]
		[Address(RVA = "0xC60DE0", Offset = "0xC60DE0", VA = "0xC60DE0")]
		public void DeleteSaveFile(int index)
		{
		}

		[Token(Token = "0x60009A2")]
		[Address(RVA = "0xC627F4", Offset = "0xC627F4", VA = "0xC627F4")]
		public bool CheckFileExist(int index)
		{
			return default(bool);
		}

		[Token(Token = "0x60009A3")]
		[Address(RVA = "0xC62888", Offset = "0xC62888", VA = "0xC62888")]
		private bool CheckFile(string fileName)
		{
			return default(bool);
		}

		[Token(Token = "0x60009A4")]
		[Address(RVA = "0xC62928", Offset = "0xC62928", VA = "0xC62928")]
		private void Load(int selectedIndex)
		{
		}

		[Token(Token = "0x60009A5")]
		[Address(RVA = "0xC5EDE4", Offset = "0xC5EDE4", VA = "0xC5EDE4")]
		public void SaveItem(ItemSO item)
		{
		}

		[Token(Token = "0x60009A6")]
		[Address(RVA = "0xC5F170", Offset = "0xC5F170", VA = "0xC5F170")]
		public void SaveMission(MissionSO mission)
		{
		}

		[Token(Token = "0x60009A7")]
		[Address(RVA = "0xC5E170", Offset = "0xC5E170", VA = "0xC5E170")]
		public void SaveLocationUnlock(LocationSO location)
		{
		}

		[Token(Token = "0x60009A8")]
		[Address(RVA = "0xC5E2E8", Offset = "0xC5E2E8", VA = "0xC5E2E8")]
		public void SaveLocationArrived(LocationSO location)
		{
		}

		[Token(Token = "0x60009A9")]
		[Address(RVA = "0xC5DD84", Offset = "0xC5DD84", VA = "0xC5DD84")]
		public void SaveFishOPedia(FishOPediaController.FishOPedia_ fishOPedia)
		{
		}

		[Token(Token = "0x60009AA")]
		[Address(RVA = "0xC5EA8C", Offset = "0xC5EA8C", VA = "0xC5EA8C")]
		public void SaveItemCraftStation(bool isItemCraftStationUnlocked)
		{
		}

		[Token(Token = "0x60009AB")]
		[Address(RVA = "0xC5EAC0", Offset = "0xC5EAC0", VA = "0xC5EAC0")]
		public void SaveCharmCraftStation(bool isCharmCraftStationUnlocked)
		{
		}

		[Token(Token = "0x60009AC")]
		[Address(RVA = "0xC5EAF4", Offset = "0xC5EAF4", VA = "0xC5EAF4")]
		public void SaveCraftingSceneStat(bool isShowed)
		{
		}

		[Token(Token = "0x60009AD")]
		[Address(RVA = "0xC5EB28", Offset = "0xC5EB28", VA = "0xC5EB28")]
		public void OnSaveAquariumSceneStat(bool isShowed)
		{
		}

		[Token(Token = "0x60009AE")]
		[Address(RVA = "0xC629C8", Offset = "0xC629C8", VA = "0xC629C8")]
		public void SaveAquarium()
		{
		}

		[Token(Token = "0x60009AF")]
		[Address(RVA = "0xC5ED88", Offset = "0xC5ED88", VA = "0xC5ED88")]
		public void SavePlayerLevel(int level)
		{
		}

		[Token(Token = "0x60009B0")]
		[Address(RVA = "0xC5EDBC", Offset = "0xC5EDBC", VA = "0xC5EDBC")]
		public void SavePlayerXP(int xp)
		{
		}

		[Token(Token = "0x60009B1")]
		[Address(RVA = "0xC5EA58", Offset = "0xC5EA58", VA = "0xC5EA58")]
		public void SavePlayerTournamentPoint(int TP)
		{
		}

		[Token(Token = "0x60009B2")]
		[Address(RVA = "0xC62A58", Offset = "0xC62A58", VA = "0xC62A58")]
		public void SaveWorldTournamentPoint(int TP, int world)
		{
		}

		[Token(Token = "0x60009B3")]
		[Address(RVA = "0xC5EB84", Offset = "0xC5EB84", VA = "0xC5EB84")]
		public void SaveBoostTimer()
		{
		}

		[Token(Token = "0x60009B4")]
		[Address(RVA = "0xC5EBFC", Offset = "0xC5EBFC", VA = "0xC5EBFC")]
		public void SaveBoostLevelPowerReel()
		{
		}

		[Token(Token = "0x60009B5")]
		[Address(RVA = "0xC5EC74", Offset = "0xC5EC74", VA = "0xC5EC74")]
		public void SaveBoostLevelStun()
		{
		}

		[Token(Token = "0x60009B6")]
		[Address(RVA = "0xC5ECEC", Offset = "0xC5ECEC", VA = "0xC5ECEC")]
		public void SaveBoostLevelTeleport()
		{
		}

		[Token(Token = "0x60009B7")]
		[Address(RVA = "0xC5E814", Offset = "0xC5E814", VA = "0xC5E814")]
		public void SaveAutoReeling(bool b)
		{
		}

		[Token(Token = "0x60009B8")]
		[Address(RVA = "0xC5E824", Offset = "0xC5E824", VA = "0xC5E824")]
		public void SaveShowFishingUI(bool b)
		{
		}

		[Token(Token = "0x60009B9")]
		[Address(RVA = "0xC5E834", Offset = "0xC5E834", VA = "0xC5E834")]
		public void SavePlayerHeight(float height)
		{
		}

		[Token(Token = "0x60009BA")]
		[Address(RVA = "0xC5E120", Offset = "0xC5E120", VA = "0xC5E120")]
		public void SavePlayerRod(RodSO rod)
		{
		}

		[Token(Token = "0x60009BB")]
		[Address(RVA = "0xC5E078", Offset = "0xC5E078", VA = "0xC5E078")]
		public void SavePlayerLureMode(LureSO lure)
		{
		}

		[Token(Token = "0x60009BC")]
		[Address(RVA = "0xC5E098", Offset = "0xC5E098", VA = "0xC5E098")]
		public void SavePlayerFloatingLure(LureSO lure)
		{
		}

		[Token(Token = "0x60009BD")]
		[Address(RVA = "0xC5E0D0", Offset = "0xC5E0D0", VA = "0xC5E0D0")]
		public void SavePlayerSwimmingLure(LureSO lure)
		{
		}

		[Token(Token = "0x60009BE")]
		[Address(RVA = "0xC5DFCC", Offset = "0xC5DFCC", VA = "0xC5DFCC")]
		public void SavePlayerCharm(CharmSO charm)
		{
		}

		[Token(Token = "0x60009BF")]
		[Address(RVA = "0xC5E924", Offset = "0xC5E924", VA = "0xC5E924")]
		public void SaveMusicVolume(float vol)
		{
		}

		[Token(Token = "0x60009C0")]
		[Address(RVA = "0xC5EA14", Offset = "0xC5EA14", VA = "0xC5EA14")]
		public void SaveShowFishFinder(bool val)
		{
		}

		[Token(Token = "0x60009C1")]
		[Address(RVA = "0xC5EA24", Offset = "0xC5EA24", VA = "0xC5EA24")]
		public void SaveShowLureBeam(bool val)
		{
		}

		[Token(Token = "0x60009C2")]
		[Address(RVA = "0xC60010", Offset = "0xC60010", VA = "0xC60010")]
		public void LoadAllDic(int selectedIndex = 0)
		{
		}

		[Token(Token = "0x60009C3")]
		[Address(RVA = "0xC5DA4C", Offset = "0xC5DA4C", VA = "0xC5DA4C")]
		public void ResetAllProgress(MissionSO mission, bool loadAfterReset = false)
		{
		}

		[Token(Token = "0x60009C4")]
		[Address(RVA = "0xC61654", Offset = "0xC61654", VA = "0xC61654")]
		private void InitDic()
		{
		}

		[Token(Token = "0x60009C5")]
		[Address(RVA = "0xC62AA4", Offset = "0xC62AA4", VA = "0xC62AA4")]
		public bool CheckVersion(int index)
		{
			return default(bool);
		}

		[Token(Token = "0x60009C6")]
		[Address(RVA = "0xC62AAC", Offset = "0xC62AAC", VA = "0xC62AAC")]
		private bool CheckWithCurrentVersion(int[] versions)
		{
			return default(bool);
		}

		[Token(Token = "0x60009C7")]
		[Address(RVA = "0xC62BC8", Offset = "0xC62BC8", VA = "0xC62BC8")]
		public PlayerProgressSO()
		{
		}
	}
	[Token(Token = "0x20001C0")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x9E7500", Offset = "0x9E7500")]
	public class PopDataSO : ScriptableObject
	{
		[Token(Token = "0x4000BEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string popDataName;

		[Token(Token = "0x4000BEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool popVisible;

		[Token(Token = "0x4000BEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public bool popFlyRight;

		[Token(Token = "0x4000BED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
		public bool popPortIn;

		[Token(Token = "0x4000BEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x23")]
		public bool popPortOut;

		[Token(Token = "0x4000BEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int popDataIndex;

		[Token(Token = "0x4000BF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int popDataLang;

		[Token(Token = "0x4000BF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public LipSyncData popLipSyncData;

		[Token(Token = "0x4000BF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public LipSyncData popLipSyncDataCN;

		[Token(Token = "0x4000BF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TextAreaAttribute", RVA = "0x9EA678", Offset = "0x9EA678")]
		public string popLipSyncScripts;

		[Token(Token = "0x60009C8")]
		[Address(RVA = "0xC64B5C", Offset = "0xC64B5C", VA = "0xC64B5C")]
		public PopDataSO()
		{
		}
	}
	[Token(Token = "0x20001C1")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x9E7560", Offset = "0x9E7560")]
	public class RodSO : ItemSO
	{
		[Token(Token = "0x20003D6")]
		public enum BoostType
		{
			[Token(Token = "0x400192A")]
			PowerReel,
			[Token(Token = "0x400192B")]
			Stun,
			[Token(Token = "0x400192C")]
			Teleport
		}

		[Token(Token = "0x4000BF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public BoostType boostType;

		[Token(Token = "0x4000BF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public int BoostCharge;

		[Token(Token = "0x60009C9")]
		[Address(RVA = "0xCE56D4", Offset = "0xCE56D4", VA = "0xCE56D4")]
		public RodSO()
		{
		}
	}
	[Token(Token = "0x20001C2")]
	public class GoLanguageMenu : MonoBehaviour
	{
		[Token(Token = "0x4000BF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject LanguageWindow;

		[Token(Token = "0x60009CA")]
		[Address(RVA = "0xCA09C0", Offset = "0xCA09C0", VA = "0xCA09C0")]
		public void OnClick()
		{
		}

		[Token(Token = "0x60009CB")]
		[Address(RVA = "0xCA09E0", Offset = "0xCA09E0", VA = "0xCA09E0")]
		public void OnCloseClick()
		{
		}

		[Token(Token = "0x60009CC")]
		[Address(RVA = "0xCA0A00", Offset = "0xCA0A00", VA = "0xCA0A00")]
		public GoLanguageMenu()
		{
		}
	}
	[Token(Token = "0x20001C3")]
	public static class GenerateHaptics
	{
		[Token(Token = "0x60009CD")]
		[Address(RVA = "0xC9F848", Offset = "0xC9F848", VA = "0xC9F848")]
		public static void MakeHaptics(HapticsClipSO hapticsClip)
		{
		}

		[Token(Token = "0x60009CE")]
		[Address(RVA = "0xC9FE9C", Offset = "0xC9FE9C", VA = "0xC9FE9C")]
		private static float ComputeRMS(float[] buffer, int offset, int length)
		{
			return default(float);
		}
	}
	[Token(Token = "0x20001C4")]
	public class Haptics : MonoBehaviour
	{
		[Token(Token = "0x20003D7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E7E88", Offset = "0x9E7E88")]
		private sealed class <PlayHaptics>d__14 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400192D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400192E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400192F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Handside side;

			[Token(Token = "0x4001930")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public HapticsClipSO clip;

			[Token(Token = "0x4001931")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float speed;

			[Token(Token = "0x4001932")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public float gain;

			[Token(Token = "0x4001933")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <frame>5__2;

			[Token(Token = "0x4001934")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <frameIncrement>5__3;

			[Token(Token = "0x1700024B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60019AA")]
				[Address(RVA = "0xCA10EC", Offset = "0xCA10EC", VA = "0xCA10EC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700024C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60019AC")]
				[Address(RVA = "0xCA1154", Offset = "0xCA1154", VA = "0xCA1154", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60019A7")]
			[Address(RVA = "0xCA0E88", Offset = "0xCA0E88", VA = "0xCA0E88")]
			[DebuggerHidden]
			public <PlayHaptics>d__14(int <>1__state)
			{
			}

			[Token(Token = "0x60019A8")]
			[Address(RVA = "0xCA0EBC", Offset = "0xCA0EBC", VA = "0xCA0EBC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60019A9")]
			[Address(RVA = "0xCA0EC0", Offset = "0xCA0EC0", VA = "0xCA0EC0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60019AB")]
			[Address(RVA = "0xCA10F4", Offset = "0xCA10F4", VA = "0xCA10F4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000BF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Haptics instance;

		[Token(Token = "0x4000BF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public HapticsClipSO clip;

		[Token(Token = "0x4000BF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private AudioSource audio;

		[Token(Token = "0x4000BFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Coroutine playingLeft;

		[Token(Token = "0x4000BFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Coroutine playingRight;

		[Token(Token = "0x4000BFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool priorityOverrideL;

		[Token(Token = "0x4000BFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		private bool priorityOverrideR;

		[Token(Token = "0x60009CF")]
		[Address(RVA = "0xCA0A08", Offset = "0xCA0A08", VA = "0xCA0A08")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60009D0")]
		[Address(RVA = "0xCA0A8C", Offset = "0xCA0A8C", VA = "0xCA0A8C")]
		public static void StopHaptics(Handside side)
		{
		}

		[Token(Token = "0x60009D1")]
		[Address(RVA = "0xCA0B0C", Offset = "0xCA0B0C", VA = "0xCA0B0C")]
		public static void Play(Handside side, float amplitude, float duration)
		{
		}

		[Token(Token = "0x60009D2")]
		[Address(RVA = "0xCA0C3C", Offset = "0xCA0C3C", VA = "0xCA0C3C")]
		public static void Play(Handside side, float amplitude, float duration, bool setPriorityOverride)
		{
		}

		[Token(Token = "0x60009D3")]
		[Address(RVA = "0xCA0DD8", Offset = "0xCA0DD8", VA = "0xCA0DD8")]
		private void DisablePriorityOverrideL()
		{
		}

		[Token(Token = "0x60009D4")]
		[Address(RVA = "0xCA0DE0", Offset = "0xCA0DE0", VA = "0xCA0DE0")]
		private void DisablePriorityOverrideR()
		{
		}

		[Token(Token = "0x60009D5")]
		[Address(RVA = "0xC942A4", Offset = "0xC942A4", VA = "0xC942A4")]
		public static void Play(Handside side, HapticsClipSO hapticsClip, float speed, float gain = 1f)
		{
		}

		[Token(Token = "0x60009D6")]
		[Address(RVA = "0xCA0DE8", Offset = "0xCA0DE8", VA = "0xCA0DE8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9EFA28", Offset = "0x9EFA28")]
		private IEnumerator PlayHaptics(Handside side, HapticsClipSO clip, float speed, float gain = 1f)
		{
			return null;
		}

		[Token(Token = "0x60009D7")]
		[Address(RVA = "0xCA0EB4", Offset = "0xCA0EB4", VA = "0xCA0EB4")]
		public Haptics()
		{
		}
	}
	[Token(Token = "0x20001C5")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x9E75C0", Offset = "0x9E75C0")]
	public class HapticsClipSO : ScriptableObject
	{
		[Token(Token = "0x4000BFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9EA690", Offset = "0x9EA690")]
		public string clipName;

		[Token(Token = "0x4000BFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioClip audioClip;

		[Token(Token = "0x4000C00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float[] frameData;

		[Token(Token = "0x4000C01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float duration;

		[Token(Token = "0x60009D8")]
		[Address(RVA = "0xCA115C", Offset = "0xCA115C", VA = "0xCA115C")]
		public void Generate()
		{
		}

		[Token(Token = "0x60009D9")]
		[Address(RVA = "0xCA1160", Offset = "0xCA1160", VA = "0xCA1160")]
		public HapticsClipSO()
		{
		}
	}
	[Token(Token = "0x20001C6")]
	public class HapticsDebugController : MonoBehaviour
	{
		[Token(Token = "0x4000C02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AudioSource haptAudio;

		[Token(Token = "0x4000C03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioClip audioClip;

		[Token(Token = "0x4000C04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AudioClip h07;

		[Token(Token = "0x4000C05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AudioClip h08;

		[Token(Token = "0x4000C06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Button h1;

		[Token(Token = "0x4000C07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Button h2;

		[Token(Token = "0x4000C08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Button h3;

		[Token(Token = "0x4000C09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Button h4;

		[Token(Token = "0x4000C0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Button h5;

		[Token(Token = "0x4000C0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Button h6;

		[Token(Token = "0x4000C0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Button h7;

		[Token(Token = "0x4000C0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Button h8;

		[Token(Token = "0x4000C0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public HapticsClipSO clipH1;

		[Token(Token = "0x4000C0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public HapticsClipSO clipH2;

		[Token(Token = "0x4000C10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public HapticsClipSO clipH3;

		[Token(Token = "0x4000C11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public HapticsClipSO clipH4;

		[Token(Token = "0x4000C12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public HapticsClipSO clipH5;

		[Token(Token = "0x4000C13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public HapticsClipSO clipH6;

		[Token(Token = "0x4000C14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public HapticsClipSO clipH7;

		[Token(Token = "0x4000C15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public HapticsClipSO clipH8;

		[Token(Token = "0x4000C16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public float speed;

		[Token(Token = "0x4000C17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public TextMeshProUGUI speedVal;

		[Token(Token = "0x60009DA")]
		[Address(RVA = "0xCA1168", Offset = "0xCA1168", VA = "0xCA1168")]
		public void OnClick(Button but)
		{
		}

		[Token(Token = "0x60009DB")]
		[Address(RVA = "0xCA1428", Offset = "0xCA1428", VA = "0xCA1428")]
		private void PlayClip(HapticsClipSO clip)
		{
		}

		[Token(Token = "0x60009DC")]
		[Address(RVA = "0xCA1524", Offset = "0xCA1524", VA = "0xCA1524")]
		public void SetSpeed(float spd)
		{
		}

		[Token(Token = "0x60009DD")]
		[Address(RVA = "0xCA15B4", Offset = "0xCA15B4", VA = "0xCA15B4")]
		public HapticsDebugController()
		{
		}
	}
	[Token(Token = "0x20001C7")]
	public class HookedFishController : MonoBehaviour
	{
		[Token(Token = "0x20003D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E7E98", Offset = "0x9E7E98")]
		private sealed class <>c__DisplayClass33_0
		{
			[Token(Token = "0x4001935")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public HookedFishController <>4__this;

			[Token(Token = "0x4001936")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float startY;

			[Token(Token = "0x60019AD")]
			[Address(RVA = "0xCA2CD4", Offset = "0xCA2CD4", VA = "0xCA2CD4")]
			public <>c__DisplayClass33_0()
			{
			}

			[Token(Token = "0x60019AE")]
			[Address(RVA = "0xCA2F60", Offset = "0xCA2F60", VA = "0xCA2F60")]
			internal void <SnapBreach>b__0()
			{
			}
		}

		[Token(Token = "0x4000C18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float rotateDuration;

		[Token(Token = "0x4000C19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private Vector3 modelRotation;

		[Token(Token = "0x4000C1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private FishTypeSO m_fishType;

		[Token(Token = "0x4000C1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private FishAnimationController m_fishAnimationController;

		[Token(Token = "0x4000C1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Tween posTween;

		[Token(Token = "0x4000C1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Tween rotTween;

		[Token(Token = "0x4000C1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool isJumping;

		[Token(Token = "0x4000C1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public GameObject jumpTrail;

		[Token(Token = "0x170000EA")]
		public FishTypeSO FishType
		{
			[Token(Token = "0x60009DE")]
			[Address(RVA = "0xCA15C4", Offset = "0xCA15C4", VA = "0xCA15C4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000EB")]
		public FishAnimationController FishAnimator
		{
			[Token(Token = "0x60009DF")]
			[Address(RVA = "0xCA15CC", Offset = "0xCA15CC", VA = "0xCA15CC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000EC")]
		public bool IsJumping
		{
			[Token(Token = "0x60009E0")]
			[Address(RVA = "0xCA15D4", Offset = "0xCA15D4", VA = "0xCA15D4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60009E1")]
		[Address(RVA = "0xCA15DC", Offset = "0xCA15DC", VA = "0xCA15DC")]
		private void Awake()
		{
		}

		[Token(Token = "0x60009E2")]
		[Address(RVA = "0xCA17F0", Offset = "0xCA17F0", VA = "0xCA17F0")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60009E3")]
		[Address(RVA = "0xCA19EC", Offset = "0xCA19EC", VA = "0xCA19EC")]
		private void Update()
		{
		}

		[Token(Token = "0x60009E4")]
		[Address(RVA = "0xCA1CA0", Offset = "0xCA1CA0", VA = "0xCA1CA0")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60009E5")]
		[Address(RVA = "0xCA1E5C", Offset = "0xCA1E5C", VA = "0xCA1E5C")]
		private void OnFishStartedFleeing(Vector3 fleeDirection, bool isFish, bool directionChange)
		{
		}

		[Token(Token = "0x60009E6")]
		[Address(RVA = "0xCA2058", Offset = "0xCA2058", VA = "0xCA2058")]
		private void OnFishStoppedFleeing(bool isFish)
		{
		}

		[Token(Token = "0x60009E7")]
		[Address(RVA = "0xCA21CC", Offset = "0xCA21CC", VA = "0xCA21CC")]
		public void SetModel(Transform hookedFish, FishTypeSO fishType)
		{
		}

		[Token(Token = "0x60009E8")]
		[Address(RVA = "0xCA2424", Offset = "0xCA2424", VA = "0xCA2424")]
		public void ResetModel()
		{
		}

		[Token(Token = "0x60009E9")]
		[Address(RVA = "0xC945E8", Offset = "0xC945E8", VA = "0xC945E8")]
		public void JumpEscape()
		{
		}

		[Token(Token = "0x60009EA")]
		[Address(RVA = "0xCA2478", Offset = "0xCA2478", VA = "0xCA2478")]
		public void JumpReleased()
		{
		}

		[Token(Token = "0x60009EB")]
		[Address(RVA = "0xCA247C", Offset = "0xCA247C", VA = "0xCA247C")]
		public void JumpKept()
		{
		}

		[Token(Token = "0x60009EC")]
		[Address(RVA = "0xCA2480", Offset = "0xCA2480", VA = "0xCA2480")]
		public void SnapJump(Arrow arrowDir, float arrowVisibleTime)
		{
		}

		[Token(Token = "0x60009ED")]
		[Address(RVA = "0xCA2664", Offset = "0xCA2664", VA = "0xCA2664")]
		public void JumpRecover()
		{
		}

		[Token(Token = "0x60009EE")]
		[Address(RVA = "0xCA26F8", Offset = "0xCA26F8", VA = "0xCA26F8")]
		public void JumpReturn()
		{
		}

		[Token(Token = "0x60009EF")]
		[Address(RVA = "0xCA278C", Offset = "0xCA278C", VA = "0xCA278C")]
		public void OutOfWater()
		{
		}

		[Token(Token = "0x60009F0")]
		[Address(RVA = "0xCA2484", Offset = "0xCA2484", VA = "0xCA2484")]
		private void Jump(Arrow arrowDir, float jumpTime)
		{
		}

		[Token(Token = "0x60009F1")]
		[Address(RVA = "0xCA29A0", Offset = "0xCA29A0", VA = "0xCA29A0")]
		private void OnSnapDragSlip()
		{
		}

		[Token(Token = "0x60009F2")]
		[Address(RVA = "0xCA22E4", Offset = "0xCA22E4", VA = "0xCA22E4")]
		private void ResetLocalTransform()
		{
		}

		[Token(Token = "0x60009F3")]
		[Address(RVA = "0xCA1B64", Offset = "0xCA1B64", VA = "0xCA1B64")]
		private float GetUnderwaterDepth()
		{
			return default(float);
		}

		[Token(Token = "0x60009F4")]
		[Address(RVA = "0xCA2ADC", Offset = "0xCA2ADC", VA = "0xCA2ADC")]
		public void SnapBreach(Arrow arrowDir)
		{
		}

		[Token(Token = "0x60009F5")]
		[Address(RVA = "0xCA2CDC", Offset = "0xCA2CDC", VA = "0xCA2CDC")]
		private void BreachSubmerge(float endY)
		{
		}

		[Token(Token = "0x60009F6")]
		[Address(RVA = "0xCA2820", Offset = "0xCA2820", VA = "0xCA2820")]
		private void SetSnapRotation(Arrow arrowDir)
		{
		}

		[Token(Token = "0x60009F7")]
		[Address(RVA = "0xCA2DC0", Offset = "0xCA2DC0", VA = "0xCA2DC0")]
		public HookedFishController()
		{
		}

		[Token(Token = "0x60009F8")]
		[Address(RVA = "0xCA2E30", Offset = "0xCA2E30", VA = "0xCA2E30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EFA8C", Offset = "0x9EFA8C")]
		private void <Jump>b__29_0()
		{
		}

		[Token(Token = "0x60009F9")]
		[Address(RVA = "0xCA2EC0", Offset = "0xCA2EC0", VA = "0xCA2EC0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EFA9C", Offset = "0x9EFA9C")]
		private void <BreachSubmerge>b__34_0()
		{
		}
	}
	[Token(Token = "0x20001C8")]
	public class IngredientSlot : MonoBehaviour
	{
		[Token(Token = "0x4000C20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public IngredientsSO ingredientSO;

		[Token(Token = "0x60009FA")]
		[Address(RVA = "0xCA2F88", Offset = "0xCA2F88", VA = "0xCA2F88")]
		public IngredientSlot()
		{
		}
	}
	[Token(Token = "0x20001C9")]
	public class InteriorToggleImageOnOff : MonoBehaviour
	{
		[Token(Token = "0x4000C21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Toggle toggle;

		[Token(Token = "0x4000C22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject toggleImageOn;

		[Token(Token = "0x4000C23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject toggleImageOff;

		[Token(Token = "0x60009FB")]
		[Address(RVA = "0xCA30A0", Offset = "0xCA30A0", VA = "0xCA30A0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60009FC")]
		[Address(RVA = "0xCA30A4", Offset = "0xCA30A4", VA = "0xCA30A4")]
		public void SetToggleImage()
		{
		}

		[Token(Token = "0x60009FD")]
		[Address(RVA = "0xCA31A0", Offset = "0xCA31A0", VA = "0xCA31A0")]
		public InteriorToggleImageOnOff()
		{
		}
	}
	[Token(Token = "0x20001CA")]
	public enum LootCrateType
	{
		[Token(Token = "0x4000C25")]
		FloatingCrate,
		[Token(Token = "0x4000C26")]
		MovingCrate,
		[Token(Token = "0x4000C27")]
		SinkingCrate,
		[Token(Token = "0x4000C28")]
		Iceberg,
		[Token(Token = "0x4000C29")]
		ToxicBarrel,
		[Token(Token = "0x4000C2A")]
		SpaceCrate
	}
	[Token(Token = "0x20001CB")]
	public enum LootCrateSkin
	{
		[Token(Token = "0x4000C2C")]
		TournamentLogo,
		[Token(Token = "0x4000C2D")]
		MysteriousLogo,
		[Token(Token = "0x4000C2E")]
		Iceberg1,
		[Token(Token = "0x4000C2F")]
		Iceberg2,
		[Token(Token = "0x4000C30")]
		Iceberg3
	}
	[Serializable]
	[Token(Token = "0x20001CC")]
	public class LootCrate
	{
		[Token(Token = "0x4000C31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public LootCrateType type;

		[Token(Token = "0x4000C32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public LootCrateSkin skin;

		[Token(Token = "0x4000C33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int size;

		[Token(Token = "0x4000C34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int numItems;

		[Token(Token = "0x4000C35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ItemSO[] contentItems;

		[Token(Token = "0x4000C36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float[] contentProbabilities;

		[Token(Token = "0x4000C37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool visible;

		[Token(Token = "0x4000C38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Vector2 location;

		[Token(Token = "0x4000C39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float probability;

		[Token(Token = "0x60009FE")]
		[Address(RVA = "0xCA772C", Offset = "0xCA772C", VA = "0xCA772C")]
		public LootCrate()
		{
		}

		[Token(Token = "0x60009FF")]
		[Address(RVA = "0xCA7734", Offset = "0xCA7734", VA = "0xCA7734")]
		public LootCrate(LootCrate lootCrate)
		{
		}
	}
	[Token(Token = "0x20001CD")]
	public class LootCrateController : MonoBehaviour
	{
		[Token(Token = "0x4000C3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LootCrateSpawner spawner;

		[Token(Token = "0x4000C3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<LpCrate> crates;

		[Token(Token = "0x4000C3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public LpCrate crateShowingHint;

		[Token(Token = "0x6000A00")]
		[Address(RVA = "0xCA77BC", Offset = "0xCA77BC", VA = "0xCA77BC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000A01")]
		[Address(RVA = "0xCA7888", Offset = "0xCA7888", VA = "0xCA7888")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000A02")]
		[Address(RVA = "0xCA78F8", Offset = "0xCA78F8", VA = "0xCA78F8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000A03")]
		[Address(RVA = "0xCA79C4", Offset = "0xCA79C4", VA = "0xCA79C4")]
		private void LocationChange(LocationSO locationSO, bool comingFromShip)
		{
		}

		[Token(Token = "0x6000A04")]
		[Address(RVA = "0xCA7ABC", Offset = "0xCA7ABC", VA = "0xCA7ABC")]
		private void EventHub_OnFishTaken(FpFish fish)
		{
		}

		[Token(Token = "0x6000A05")]
		[Address(RVA = "0xCA7A58", Offset = "0xCA7A58", VA = "0xCA7A58")]
		private void RemoveAllCrates()
		{
		}

		[Token(Token = "0x6000A06")]
		[Address(RVA = "0xCA7C60", Offset = "0xCA7C60", VA = "0xCA7C60")]
		public void HideAllCrates()
		{
		}

		[Token(Token = "0x6000A07")]
		[Address(RVA = "0xCA7AC0", Offset = "0xCA7AC0", VA = "0xCA7AC0")]
		public void ShowAllVisibleCrates()
		{
		}

		[Token(Token = "0x6000A08")]
		[Address(RVA = "0xCA7EEC", Offset = "0xCA7EEC", VA = "0xCA7EEC")]
		public void RemoveRecoveredCrate(LpCrate crate)
		{
		}

		[Token(Token = "0x6000A09")]
		[Address(RVA = "0xCA7F9C", Offset = "0xCA7F9C", VA = "0xCA7F9C")]
		public void ShowAllCrates()
		{
		}

		[Token(Token = "0x6000A0A")]
		[Address(RVA = "0xCA8098", Offset = "0xCA8098", VA = "0xCA8098")]
		public void ReelInMinigameStarted()
		{
		}

		[Token(Token = "0x6000A0B")]
		[Address(RVA = "0xCA81C8", Offset = "0xCA81C8", VA = "0xCA81C8")]
		public LootCrateController()
		{
		}
	}
	[Token(Token = "0x20001CE")]
	public class LootCrateSpawner : MonoBehaviour
	{
		[Token(Token = "0x20003D9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E7EA8", Offset = "0x9E7EA8")]
		private sealed class <StartCrateSpawn>d__10 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001937")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001938")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001939")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public LootCrateSpawner <>4__this;

			[Token(Token = "0x1700024D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60019B2")]
				[Address(RVA = "0xCA93FC", Offset = "0xCA93FC", VA = "0xCA93FC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700024E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60019B4")]
				[Address(RVA = "0xCA9464", Offset = "0xCA9464", VA = "0xCA9464", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60019AF")]
			[Address(RVA = "0xCA8918", Offset = "0xCA8918", VA = "0xCA8918")]
			[DebuggerHidden]
			public <StartCrateSpawn>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x60019B0")]
			[Address(RVA = "0xCA9218", Offset = "0xCA9218", VA = "0xCA9218", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60019B1")]
			[Address(RVA = "0xCA921C", Offset = "0xCA921C", VA = "0xCA921C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60019B3")]
			[Address(RVA = "0xCA9404", Offset = "0xCA9404", VA = "0xCA9404", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20003DA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E7EB8", Offset = "0x9E7EB8")]
		private sealed class <SpawnCrateKeptReleasedCR>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400193A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400193B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400193C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public LootCrateSpawner <>4__this;

			[Token(Token = "0x400193D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <i>5__2;

			[Token(Token = "0x1700024F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60019B8")]
				[Address(RVA = "0xCA91A8", Offset = "0xCA91A8", VA = "0xCA91A8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000250")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60019BA")]
				[Address(RVA = "0xCA9210", Offset = "0xCA9210", VA = "0xCA9210", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60019B5")]
			[Address(RVA = "0xCA8BB0", Offset = "0xCA8BB0", VA = "0xCA8BB0")]
			[DebuggerHidden]
			public <SpawnCrateKeptReleasedCR>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x60019B6")]
			[Address(RVA = "0xCA9004", Offset = "0xCA9004", VA = "0xCA9004", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60019B7")]
			[Address(RVA = "0xCA9008", Offset = "0xCA9008", VA = "0xCA9008", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60019B9")]
			[Address(RVA = "0xCA91B0", Offset = "0xCA91B0", VA = "0xCA91B0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000C3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private SpawnPool pool;

		[Token(Token = "0x4000C3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LootCratePoolSO lootCratePool;

		[Token(Token = "0x4000C3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public LootCrateController lootCrateCtrl;

		[Token(Token = "0x4000C40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform cratePrefab;

		[Token(Token = "0x6000A0C")]
		[Address(RVA = "0xCA857C", Offset = "0xCA857C", VA = "0xCA857C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000A0D")]
		[Address(RVA = "0xCA86C0", Offset = "0xCA86C0", VA = "0xCA86C0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000A0E")]
		[Address(RVA = "0xCA8720", Offset = "0xCA8720", VA = "0xCA8720")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000A0F")]
		[Address(RVA = "0xCA8864", Offset = "0xCA8864", VA = "0xCA8864")]
		public void SpawnCrates(LootCratePoolSO lcp)
		{
		}

		[Token(Token = "0x6000A10")]
		[Address(RVA = "0xCA7BF0", Offset = "0xCA7BF0", VA = "0xCA7BF0")]
		public void DespawnAllCrates()
		{
		}

		[Token(Token = "0x6000A11")]
		[Address(RVA = "0xCA7F80", Offset = "0xCA7F80", VA = "0xCA7F80")]
		public void DespawnCrate(Transform crate)
		{
		}

		[Token(Token = "0x6000A12")]
		[Address(RVA = "0xCA889C", Offset = "0xCA889C", VA = "0xCA889C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9EFAAC", Offset = "0x9EFAAC")]
		private IEnumerator StartCrateSpawn()
		{
			return null;
		}

		[Token(Token = "0x6000A13")]
		[Address(RVA = "0xCA8944", Offset = "0xCA8944", VA = "0xCA8944")]
		public LpCrate SpawnCrate(Vector3 pos, LootCrate lc)
		{
			return null;
		}

		[Token(Token = "0x6000A14")]
		[Address(RVA = "0xCA8B08", Offset = "0xCA8B08", VA = "0xCA8B08")]
		private void SpawnCrateKeptReleased(FpFish fish)
		{
		}

		[Token(Token = "0x6000A15")]
		[Address(RVA = "0xCA8B34", Offset = "0xCA8B34", VA = "0xCA8B34")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9EFB10", Offset = "0x9EFB10")]
		private IEnumerator SpawnCrateKeptReleasedCR()
		{
			return null;
		}

		[Token(Token = "0x6000A16")]
		[Address(RVA = "0xCA8BDC", Offset = "0xCA8BDC", VA = "0xCA8BDC")]
		private void RestockPool()
		{
		}

		[Token(Token = "0x6000A17")]
		[Address(RVA = "0xCA8DE4", Offset = "0xCA8DE4", VA = "0xCA8DE4")]
		private void EventHub_OnFishCaught(FpFish fish, bool isCheating)
		{
		}

		[Token(Token = "0x6000A18")]
		[Address(RVA = "0xCA8C78", Offset = "0xCA8C78", VA = "0xCA8C78")]
		private void DoSpawn(LootCrate ltCrate)
		{
		}

		[Token(Token = "0x6000A19")]
		[Address(RVA = "0xCA8FFC", Offset = "0xCA8FFC", VA = "0xCA8FFC")]
		public LootCrateSpawner()
		{
		}
	}
	[Token(Token = "0x20001CF")]
	public class LpCrate : MonoBehaviour
	{
		[Token(Token = "0x4000C41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LootCrate lootCrate;

		[Token(Token = "0x4000C42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ItemSO[] items;

		[Token(Token = "0x4000C43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public FpFish fpFish;

		[Token(Token = "0x4000C44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Collider col;

		[Token(Token = "0x4000C45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject[] crateModels;

		[Token(Token = "0x4000C46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Dictionary<float, ItemSO> m_Data_Dic;

		[Token(Token = "0x4000C47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Dictionary<ItemSO, int> UnboxingResult;

		[Token(Token = "0x4000C48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float showHintDuration;

		[Token(Token = "0x4000C49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Transform bubbles;

		[Token(Token = "0x4000C4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public LootCrateController lootCrateCtrl;

		[Token(Token = "0x6000A1A")]
		[Address(RVA = "0xCA9484", Offset = "0xCA9484", VA = "0xCA9484")]
		private void Start()
		{
		}

		[Token(Token = "0x6000A1B")]
		[Address(RVA = "0xCA95C8", Offset = "0xCA95C8", VA = "0xCA95C8")]
		private ItemSO GetResult()
		{
			return null;
		}

		[Token(Token = "0x6000A1C")]
		[Address(RVA = "0xCA96F4", Offset = "0xCA96F4", VA = "0xCA96F4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000A1D")]
		[Address(RVA = "0xCA97C0", Offset = "0xCA97C0", VA = "0xCA97C0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000A1E")]
		[Address(RVA = "0xCA98CC", Offset = "0xCA98CC", VA = "0xCA98CC")]
		private void ShowHint()
		{
		}

		[Token(Token = "0x6000A1F")]
		[Address(RVA = "0xCA8128", Offset = "0xCA8128", VA = "0xCA8128")]
		public void RemoveHint()
		{
		}

		[Token(Token = "0x6000A20")]
		[Address(RVA = "0xCA9488", Offset = "0xCA9488", VA = "0xCA9488")]
		private void Init()
		{
		}

		[Token(Token = "0x6000A21")]
		[Address(RVA = "0xCA8E58", Offset = "0xCA8E58", VA = "0xCA8E58")]
		public void Inititalize()
		{
		}

		[Token(Token = "0x6000A22")]
		[Address(RVA = "0xCA7DD8", Offset = "0xCA7DD8", VA = "0xCA7DD8")]
		public void SetVisible(bool state, bool collider = false)
		{
		}

		[Token(Token = "0x6000A23")]
		[Address(RVA = "0xCA9A0C", Offset = "0xCA9A0C", VA = "0xCA9A0C")]
		private void DisableAllSkins()
		{
		}

		[Token(Token = "0x6000A24")]
		[Address(RVA = "0xCA9790", Offset = "0xCA9790", VA = "0xCA9790")]
		public void SetCollider(bool state)
		{
		}

		[Token(Token = "0x6000A25")]
		[Address(RVA = "0xCA9A7C", Offset = "0xCA9A7C", VA = "0xCA9A7C")]
		public LpCrate()
		{
		}
	}
	[Token(Token = "0x20001D0")]
	public class LureCylinderScaler : MonoBehaviour
	{
		[Token(Token = "0x4000C4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float waterYPos;

		[Token(Token = "0x4000C4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject scalerParent;

		[Token(Token = "0x6000A26")]
		[Address(RVA = "0xCA9CDC", Offset = "0xCA9CDC", VA = "0xCA9CDC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000A27")]
		[Address(RVA = "0xCA9ED0", Offset = "0xCA9ED0", VA = "0xCA9ED0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000A28")]
		[Address(RVA = "0xCA9F44", Offset = "0xCA9F44", VA = "0xCA9F44")]
		private void Update()
		{
		}

		[Token(Token = "0x6000A29")]
		[Address(RVA = "0xCAA0E0", Offset = "0xCAA0E0", VA = "0xCAA0E0")]
		private void OnPlayerSettingChanged(PlayerSetting setting)
		{
		}

		[Token(Token = "0x6000A2A")]
		[Address(RVA = "0xCAA1D4", Offset = "0xCAA1D4", VA = "0xCAA1D4")]
		public LureCylinderScaler()
		{
		}
	}
	[Token(Token = "0x20001D1")]
	public class LureLineController : MonoBehaviour
	{
		[Token(Token = "0x4000C4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Material material;

		[Token(Token = "0x4000C4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ObiRopeSection section;

		[Token(Token = "0x4000C4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private ObiRope rope;

		[Token(Token = "0x4000C50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public ObiRopeBlueprint blueprint;

		[Token(Token = "0x4000C51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private ObiRopeExtrudedRenderer ropeRenderer;

		[Token(Token = "0x4000C52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private ObiRopeCursor cursor;

		[Token(Token = "0x4000C53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Transform RootTrans;

		[Token(Token = "0x4000C54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Transform TargetTrans;

		[Token(Token = "0x4000C55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private ObiParticleAttachment attachmentStart;

		[Token(Token = "0x4000C56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private ObiParticleAttachment attachmentEnd;

		[Token(Token = "0x6000A2B")]
		[Address(RVA = "0xCAA1E4", Offset = "0xCAA1E4", VA = "0xCAA1E4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000A2C")]
		[Address(RVA = "0xCAA3D0", Offset = "0xCAA3D0", VA = "0xCAA3D0")]
		public void CreateLureLine()
		{
		}

		[Token(Token = "0x6000A2D")]
		[Address(RVA = "0xCAA438", Offset = "0xCAA438", VA = "0xCAA438")]
		public void HideRope()
		{
		}

		[Token(Token = "0x6000A2E")]
		[Address(RVA = "0xCAA4A0", Offset = "0xCAA4A0", VA = "0xCAA4A0")]
		public LureLineController()
		{
		}
	}
	[Token(Token = "0x20001D2")]
	public enum lureOptions
	{
		[Token(Token = "0x4000C58")]
		LureRing,
		[Token(Token = "0x4000C59")]
		LureBeam,
		[Token(Token = "0x4000C5A")]
		LurePulse,
		[Token(Token = "0x4000C5B")]
		LurePulse3D
	}
	[Token(Token = "0x20001D3")]
	public class LureOptions : MonoBehaviour
	{
		[Token(Token = "0x4000C5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static LureOptions instance;

		[Token(Token = "0x4000C5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject lureRing;

		[Token(Token = "0x4000C5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject lureBeam;

		[Token(Token = "0x4000C5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject lurePulse;

		[Token(Token = "0x4000C60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject lurePulse3D;

		[Token(Token = "0x4000C61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool lureRingOn;

		[Token(Token = "0x4000C62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		public bool lureBeamOn;

		[Token(Token = "0x4000C63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
		public bool lurePulseOn;

		[Token(Token = "0x4000C64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3B")]
		public bool lurePulse3DOn;

		[Token(Token = "0x6000A2F")]
		[Address(RVA = "0xCAA4A8", Offset = "0xCAA4A8", VA = "0xCAA4A8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000A30")]
		[Address(RVA = "0xCAA508", Offset = "0xCAA508", VA = "0xCAA508")]
		public void setVisibility()
		{
		}

		[Token(Token = "0x6000A31")]
		[Address(RVA = "0xCAA5B4", Offset = "0xCAA5B4", VA = "0xCAA5B4")]
		public static void SetLureOption(lureOptions option, bool state)
		{
		}

		[Token(Token = "0x6000A32")]
		[Address(RVA = "0xCAA6D0", Offset = "0xCAA6D0", VA = "0xCAA6D0")]
		public LureOptions()
		{
		}
	}
	[Token(Token = "0x20001D4")]
	public class LureOptionsUI : MonoBehaviour
	{
		[Token(Token = "0x4000C65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public lureOptions option;

		[Token(Token = "0x4000C66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Toggle tog;

		[Token(Token = "0x6000A33")]
		[Address(RVA = "0xCAA6E0", Offset = "0xCAA6E0", VA = "0xCAA6E0")]
		public void OnToggleChanged()
		{
		}

		[Token(Token = "0x6000A34")]
		[Address(RVA = "0xCAA79C", Offset = "0xCAA79C", VA = "0xCAA79C")]
		public LureOptionsUI()
		{
		}
	}
	[Token(Token = "0x20001D5")]
	public class LureRadiusColor : MonoBehaviour
	{
		[Token(Token = "0x4000C67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ParticleSystem ps;

		[Token(Token = "0x4000C68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private ParticleSystem.ColorOverLifetimeModule psCol;

		[Token(Token = "0x4000C69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Gradient colNoFish;

		[Token(Token = "0x4000C6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Gradient colWithFish;

		[Token(Token = "0x4000C6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static bool isAnyFishInRadius;

		[Token(Token = "0x4000C6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private List<FishAI> fishInRadius;

		[Token(Token = "0x6000A35")]
		[Address(RVA = "0xCAA7A4", Offset = "0xCAA7A4", VA = "0xCAA7A4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000A36")]
		[Address(RVA = "0xCAA8E4", Offset = "0xCAA8E4", VA = "0xCAA8E4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000A37")]
		[Address(RVA = "0xCAA980", Offset = "0xCAA980", VA = "0xCAA980")]
		private void OnRodReset()
		{
		}

		[Token(Token = "0x6000A38")]
		[Address(RVA = "0xCAA9F0", Offset = "0xCAA9F0", VA = "0xCAA9F0")]
		private void OnFirstFishEntered()
		{
		}

		[Token(Token = "0x6000A39")]
		[Address(RVA = "0xCAAA90", Offset = "0xCAAA90", VA = "0xCAAA90")]
		private void OnLastFishLeft()
		{
		}

		[Token(Token = "0x6000A3A")]
		[Address(RVA = "0xCAAB2C", Offset = "0xCAAB2C", VA = "0xCAAB2C")]
		public void AddFish(FishAI fish)
		{
		}

		[Token(Token = "0x6000A3B")]
		[Address(RVA = "0xCAABCC", Offset = "0xCAABCC", VA = "0xCAABCC")]
		public void RemoveFish(FishAI fish)
		{
		}

		[Token(Token = "0x6000A3C")]
		[Address(RVA = "0xCAAC7C", Offset = "0xCAAC7C", VA = "0xCAAC7C")]
		public LureRadiusColor()
		{
		}
	}
	[Token(Token = "0x20001D6")]
	public class LureRing3DPulse : MonoBehaviour
	{
		[Token(Token = "0x4000C6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float maxSize;

		[Token(Token = "0x4000C6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float pulseTime;

		[Token(Token = "0x4000C6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Tween pulseTween;

		[Token(Token = "0x6000A3D")]
		[Address(RVA = "0xCAAC84", Offset = "0xCAAC84", VA = "0xCAAC84")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000A3E")]
		[Address(RVA = "0xCAADC8", Offset = "0xCAADC8", VA = "0xCAADC8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000A3F")]
		[Address(RVA = "0xCAAC88", Offset = "0xCAAC88", VA = "0xCAAC88")]
		private void DoPulse()
		{
		}

		[Token(Token = "0x6000A40")]
		[Address(RVA = "0xCAAE64", Offset = "0xCAAE64", VA = "0xCAAE64")]
		public LureRing3DPulse()
		{
		}

		[Token(Token = "0x6000A41")]
		[Address(RVA = "0xCAAE6C", Offset = "0xCAAE6C", VA = "0xCAAE6C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EFB74", Offset = "0x9EFB74")]
		private void <DoPulse>b__5_0()
		{
		}
	}
	[Token(Token = "0x20001D7")]
	public class MakeResourceCoin : MonoBehaviour
	{
		[Token(Token = "0x4000C70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform resourceCoin;

		[Token(Token = "0x4000C71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SpawnPool spawnPool;

		[Token(Token = "0x6000A42")]
		[Address(RVA = "0xCAAF0C", Offset = "0xCAAF0C", VA = "0xCAAF0C")]
		public Transform MakeCoin(Sprite icon)
		{
			return null;
		}

		[Token(Token = "0x6000A43")]
		[Address(RVA = "0xCAAFEC", Offset = "0xCAAFEC", VA = "0xCAAFEC")]
		public MakeResourceCoin()
		{
		}
	}
	[Token(Token = "0x20001D8")]
	public class MapController : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20003DB")]
		private struct LocationBtn
		{
			[Token(Token = "0x400193E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public UI_WorldButton WorldBtn;

			[Token(Token = "0x400193F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public UI_MapButton[] LocationBtns;
		}

		[Token(Token = "0x20003DC")]
		private enum LocationType
		{
			[Token(Token = "0x4001941")]
			A,
			[Token(Token = "0x4001942")]
			B,
			[Token(Token = "0x4001943")]
			C
		}

		[Token(Token = "0x20003DD")]
		private enum TimeOfDayType
		{
			[Token(Token = "0x4001945")]
			Day,
			[Token(Token = "0x4001946")]
			Night
		}

		[Token(Token = "0x20003DE")]
		public delegate void LocationUnlockAction(LocationSO location);

		[Token(Token = "0x20003DF")]
		public delegate void ArriveNewLocationAction(LocationSO location);

		[Token(Token = "0x20003E0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E7EC8", Offset = "0x9E7EC8")]
		private sealed class <SetWorld>d__32 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001947")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001948")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001949")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MapController <>4__this;

			[Token(Token = "0x400194A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool toCurrentWorld;

			[Token(Token = "0x400194B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public string locBCID;

			[Token(Token = "0x17000251")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60019C6")]
				[Address(RVA = "0xD48148", Offset = "0xD48148", VA = "0xD48148", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000252")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60019C8")]
				[Address(RVA = "0xD481B0", Offset = "0xD481B0", VA = "0xD481B0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60019C3")]
			[Address(RVA = "0xD47DEC", Offset = "0xD47DEC", VA = "0xD47DEC")]
			[DebuggerHidden]
			public <SetWorld>d__32(int <>1__state)
			{
			}

			[Token(Token = "0x60019C4")]
			[Address(RVA = "0xD47E18", Offset = "0xD47E18", VA = "0xD47E18", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60019C5")]
			[Address(RVA = "0xD47E1C", Offset = "0xD47E1C", VA = "0xD47E1C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60019C7")]
			[Address(RVA = "0xD48150", Offset = "0xD48150", VA = "0xD48150", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000C72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private LocationBtn[] Btns;

		[Token(Token = "0x4000C73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Button m_UnlockAllLocationBtn;

		[Token(Token = "0x4000C74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9EA718", Offset = "0x9EA718")]
		[SerializeField]
		private GameObject[] locationPanels;

		[Token(Token = "0x4000C75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static MapController instance;

		[Token(Token = "0x4000C76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private LocationSO m_Location;

		[Token(Token = "0x4000C77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool isInit;

		[Token(Token = "0x170000ED")]
		public static Button UnlockAllLocationBtn
		{
			[Token(Token = "0x6000A44")]
			[Address(RVA = "0xCAAFF4", Offset = "0xCAAFF4", VA = "0xCAAFF4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x14000009")]
		public static event LocationUnlockAction OnLocationUnlock
		{
			[Token(Token = "0x6000A45")]
			[Address(RVA = "0xCAB050", Offset = "0xCAB050", VA = "0xCAB050")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EFB84", Offset = "0x9EFB84")]
			add
			{
			}
			[Token(Token = "0x6000A46")]
			[Address(RVA = "0xCAB108", Offset = "0xCAB108", VA = "0xCAB108")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EFB94", Offset = "0x9EFB94")]
			remove
			{
			}
		}

		[Token(Token = "0x1400000A")]
		public static event ArriveNewLocationAction OnArriveNewLocation
		{
			[Token(Token = "0x6000A47")]
			[Address(RVA = "0xCAB1C0", Offset = "0xCAB1C0", VA = "0xCAB1C0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EFBA4", Offset = "0x9EFBA4")]
			add
			{
			}
			[Token(Token = "0x6000A48")]
			[Address(RVA = "0xCAB278", Offset = "0xCAB278", VA = "0xCAB278")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EFBB4", Offset = "0x9EFBB4")]
			remove
			{
			}
		}

		[Token(Token = "0x6000A49")]
		[Address(RVA = "0xCAB330", Offset = "0xCAB330", VA = "0xCAB330")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000A4A")]
		[Address(RVA = "0xCAB3F8", Offset = "0xCAB3F8", VA = "0xCAB3F8")]
		private void Start()
		{
		}

		[Token(Token = "0x6000A4B")]
		[Address(RVA = "0xCAB620", Offset = "0xCAB620", VA = "0xCAB620")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000A4C")]
		[Address(RVA = "0xCAB6CC", Offset = "0xCAB6CC", VA = "0xCAB6CC")]
		public void ChangeLocation()
		{
		}

		[Token(Token = "0x6000A4D")]
		[Address(RVA = "0xCAB748", Offset = "0xCAB748", VA = "0xCAB748")]
		public static void UnlockLocation(LocationSO location)
		{
		}

		[Token(Token = "0x6000A4E")]
		[Address(RVA = "0xCAB87C", Offset = "0xCAB87C", VA = "0xCAB87C")]
		public void ChangeLocation(LocationSO location)
		{
		}

		[Token(Token = "0x6000A4F")]
		[Address(RVA = "0xCAB3FC", Offset = "0xCAB3FC", VA = "0xCAB3FC")]
		private void InitBtns()
		{
		}

		[Token(Token = "0x6000A50")]
		[Address(RVA = "0xCAB9EC", Offset = "0xCAB9EC", VA = "0xCAB9EC")]
		private void EventHub_OnMissionLoad(MissionSO mission)
		{
		}

		[Token(Token = "0x6000A51")]
		[Address(RVA = "0xCAB7C4", Offset = "0xCAB7C4", VA = "0xCAB7C4")]
		private void UnlockButtons(LocationSO loc)
		{
		}

		[Token(Token = "0x6000A52")]
		[Address(RVA = "0xCAB934", Offset = "0xCAB934", VA = "0xCAB934")]
		private void DisableMapNotifs(LocationSO loc)
		{
		}

		[Token(Token = "0x6000A53")]
		[Address(RVA = "0xCABD08", Offset = "0xCABD08", VA = "0xCABD08")]
		public void SetShipPanel()
		{
		}

		[Token(Token = "0x6000A54")]
		[Address(RVA = "0xCABD5C", Offset = "0xCABD5C", VA = "0xCABD5C")]
		private void SetLocationPanel(string locBCID, bool toCurrentWorld = false)
		{
		}

		[Token(Token = "0x6000A55")]
		[Address(RVA = "0xCABEE0", Offset = "0xCABEE0", VA = "0xCABEE0")]
		private void SetWorldOnArrival()
		{
		}

		[Token(Token = "0x6000A56")]
		[Address(RVA = "0xCABE3C", Offset = "0xCABE3C", VA = "0xCABE3C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9EFBC4", Offset = "0x9EFBC4")]
		private IEnumerator SetWorld(string locBCID, bool toCurrentWorld = false)
		{
			return null;
		}

		[Token(Token = "0x6000A57")]
		[Address(RVA = "0xCABFE0", Offset = "0xCABFE0", VA = "0xCABFE0")]
		public static void OpenMapToLocation(string locationBCID)
		{
		}

		[Token(Token = "0x6000A58")]
		[Address(RVA = "0xCAC058", Offset = "0xCAC058", VA = "0xCAC058")]
		public void OpenDefaultLocationCard(int worldIndex = 0)
		{
		}

		[Token(Token = "0x6000A59")]
		[Address(RVA = "0xCAC170", Offset = "0xCAC170", VA = "0xCAC170")]
		public MapController()
		{
		}
	}
	[Token(Token = "0x20001D9")]
	public enum MissionRewardType
	{
		[Token(Token = "0x4000C7B")]
		gear,
		[Token(Token = "0x4000C7C")]
		resource,
		[Token(Token = "0x4000C7D")]
		recipe,
		[Token(Token = "0x4000C7E")]
		generic
	}
	[Token(Token = "0x20001DA")]
	public class MissionRewardBGSelect : MonoBehaviour
	{
		[Token(Token = "0x4000C7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject gear;

		[Token(Token = "0x4000C80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject resource;

		[Token(Token = "0x4000C81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject recipe;

		[Token(Token = "0x4000C82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject generic;

		[Token(Token = "0x4000C83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Image mask;

		[Token(Token = "0x6000A5A")]
		[Address(RVA = "0xD51CC8", Offset = "0xD51CC8", VA = "0xD51CC8")]
		public void SetBG(MissionRewardType type = MissionRewardType.generic)
		{
		}

		[Token(Token = "0x6000A5B")]
		[Address(RVA = "0xD51DBC", Offset = "0xD51DBC", VA = "0xD51DBC")]
		public MissionRewardBGSelect()
		{
		}
	}
	[Token(Token = "0x20001DB")]
	public class MissionTarget : MonoBehaviour
	{
		[Token(Token = "0x4000C84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Image ResourceIcon;

		[Token(Token = "0x4000C85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Localize ResourceName;

		[Token(Token = "0x4000C86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TMP_Text ResourceCount;

		[Token(Token = "0x6000A5C")]
		[Address(RVA = "0xD522E4", Offset = "0xD522E4", VA = "0xD522E4")]
		public MissionTarget()
		{
		}
	}
	[Token(Token = "0x20001DC")]
	public class MoveArrow : MonoBehaviour
	{
		[Token(Token = "0x4000C87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Tween moveTween;

		[Token(Token = "0x6000A5D")]
		[Address(RVA = "0xD52F90", Offset = "0xD52F90", VA = "0xD52F90")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000A5E")]
		[Address(RVA = "0xD53018", Offset = "0xD53018", VA = "0xD53018")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000A5F")]
		[Address(RVA = "0xD530F8", Offset = "0xD530F8", VA = "0xD530F8")]
		public MoveArrow()
		{
		}
	}
	[Token(Token = "0x20001DD")]
	public class MoveFishingPad : MonoBehaviour
	{
		[Token(Token = "0x4000C88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 shipPos;

		[Token(Token = "0x4000C89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Vector3 shipRot;

		[Token(Token = "0x4000C8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector3 summonedPos;

		[Token(Token = "0x4000C8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public Vector3 summonedRot;

		[Token(Token = "0x4000C8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Vector3 dismissedPos;

		[Token(Token = "0x4000C8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public Vector3 dismissedRot;

		[Token(Token = "0x4000C8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Vector3 summonedScale;

		[Token(Token = "0x4000C8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private Vector3 dismissedScale;

		[Token(Token = "0x4000C90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Tween scaleTween;

		[Token(Token = "0x4000C91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private bool fishingPadIsDismissed;

		[Token(Token = "0x4000C92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x81")]
		private bool fishingPadIsMoving;

		[Token(Token = "0x4000C93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static MoveFishingPad instance;

		[Token(Token = "0x4000C94")]
		public const float fishingPadMinHeight = 0.3f;

		[Token(Token = "0x4000C95")]
		public const float heightOffset = -0.1f;

		[Token(Token = "0x4000C96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x82")]
		private bool cutsceneInProgress;

		[Token(Token = "0x4000C97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static bool allowOpenMenu;

		[Token(Token = "0x4000C98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Button mapButton;

		[Token(Token = "0x6000A60")]
		[Address(RVA = "0xD53100", Offset = "0xD53100", VA = "0xD53100")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000A61")]
		[Address(RVA = "0xD5333C", Offset = "0xD5333C", VA = "0xD5333C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000A62")]
		[Address(RVA = "0xD53490", Offset = "0xD53490", VA = "0xD53490")]
		private void CutsceneStarted()
		{
		}

		[Token(Token = "0x6000A63")]
		[Address(RVA = "0xD5349C", Offset = "0xD5349C", VA = "0xD5349C")]
		private void CutsceneFinished(bool isSpecialCutscene)
		{
		}

		[Token(Token = "0x6000A64")]
		[Address(RVA = "0xD534A4", Offset = "0xD534A4", VA = "0xD534A4")]
		private void CutsceneSkipped(MissionSO mission, bool isCheating)
		{
		}

		[Token(Token = "0x6000A65")]
		[Address(RVA = "0xD534AC", Offset = "0xD534AC", VA = "0xD534AC")]
		private void SceneLoadFinished()
		{
		}

		[Token(Token = "0x6000A66")]
		[Address(RVA = "0xD53704", Offset = "0xD53704", VA = "0xD53704")]
		private void SummonFishingPad(bool onShip = false)
		{
		}

		[Token(Token = "0x6000A67")]
		[Address(RVA = "0xD53BE0", Offset = "0xD53BE0", VA = "0xD53BE0")]
		private void CheckOpenFishPadToPage()
		{
		}

		[Token(Token = "0x6000A68")]
		[Address(RVA = "0xD53C60", Offset = "0xD53C60", VA = "0xD53C60")]
		public static void DismissFishingPad()
		{
		}

		[Token(Token = "0x6000A69")]
		[Address(RVA = "0xD53D10", Offset = "0xD53D10", VA = "0xD53D10")]
		private void OnMenu()
		{
		}

		[Token(Token = "0x6000A6A")]
		[Address(RVA = "0xD53F48", Offset = "0xD53F48", VA = "0xD53F48")]
		public static void ActivateFishPad()
		{
		}

		[Token(Token = "0x6000A6B")]
		[Address(RVA = "0xD53FF8", Offset = "0xD53FF8", VA = "0xD53FF8")]
		public MoveFishingPad()
		{
		}

		[Token(Token = "0x6000A6D")]
		[Address(RVA = "0xD540C4", Offset = "0xD540C4", VA = "0xD540C4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EFC28", Offset = "0x9EFC28")]
		private void <SummonFishingPad>b__23_0()
		{
		}

		[Token(Token = "0x6000A6E")]
		[Address(RVA = "0xD54100", Offset = "0xD54100", VA = "0xD54100")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EFC38", Offset = "0x9EFC38")]
		private void <SummonFishingPad>b__23_1()
		{
		}
	}
	[Token(Token = "0x20001DE")]
	public class MovePlayer : MonoBehaviour
	{
		[Token(Token = "0x4000C99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 shipPos;

		[Token(Token = "0x4000C9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Vector3 shipRot;

		[Token(Token = "0x4000C9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector3 aquariumPos;

		[Token(Token = "0x4000C9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public Vector3 aquariumRot;

		[Token(Token = "0x4000C9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vector3 fishingPlatformPos;

		[Token(Token = "0x4000C9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Vector3 fishingPlatformRot;

		[Token(Token = "0x6000A6F")]
		[Address(RVA = "0xD54108", Offset = "0xD54108", VA = "0xD54108")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000A70")]
		[Address(RVA = "0xD5419C", Offset = "0xD5419C", VA = "0xD5419C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000A71")]
		[Address(RVA = "0xD54230", Offset = "0xD54230", VA = "0xD54230")]
		private void LocationChanged(LocationSO locationSO, bool comingFromShip)
		{
		}

		[Token(Token = "0x6000A72")]
		[Address(RVA = "0xD549E8", Offset = "0xD549E8", VA = "0xD549E8")]
		public MovePlayer()
		{
		}
	}
	[Token(Token = "0x20001DF")]
	public enum Music
	{
		[Token(Token = "0x4000CA0")]
		FishingAction,
		[Token(Token = "0x4000CA1")]
		TugOfWar,
		[Token(Token = "0x4000CA2")]
		Fishing,
		[Token(Token = "0x4000CA3")]
		FishRecovery
	}
	[Token(Token = "0x20001E0")]
	public class MusicAudio : MonoBehaviour
	{
		[Token(Token = "0x20003E1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E7ED8", Offset = "0x9E7ED8")]
		private sealed class <>c__DisplayClass28_0
		{
			[Token(Token = "0x400194C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public AudioSource source;

			[Token(Token = "0x60019C9")]
			[Address(RVA = "0xD5537C", Offset = "0xD5537C", VA = "0xD5537C")]
			public <>c__DisplayClass28_0()
			{
			}

			[Token(Token = "0x60019CA")]
			[Address(RVA = "0xD55398", Offset = "0xD55398", VA = "0xD55398")]
			internal void <MusicFadeOut>b__0()
			{
			}
		}

		[Token(Token = "0x4000CA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static MusicAudio instance;

		[Token(Token = "0x4000CA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AudioMixer mixer;

		[Token(Token = "0x4000CA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioSource musicA;

		[Token(Token = "0x4000CA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AudioSource musicB;

		[Token(Token = "0x4000CA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AudioSource musicMixA;

		[Token(Token = "0x4000CA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public AudioSource musicMixB;

		[Token(Token = "0x4000CAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public AudioSource musicStings;

		[Token(Token = "0x4000CAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9EA7D4", Offset = "0x9EA7D4")]
		public AudioClip fishingBattleLevel1;

		[Token(Token = "0x4000CAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public AudioClip fishingBattleLevel2;

		[Token(Token = "0x4000CAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public AudioClip fishingBattleLevel3;

		[Token(Token = "0x4000CAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public AudioClip W1ADay;

		[Token(Token = "0x4000CAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public AudioClip W1BDay;

		[Token(Token = "0x4000CB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public AudioClip W1CDay;

		[Token(Token = "0x4000CB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public AudioClip W2ADay;

		[Token(Token = "0x4000CB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public AudioClip W2BDay;

		[Token(Token = "0x4000CB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public AudioClip W2CDay;

		[Token(Token = "0x4000CB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public AudioClip Ship;

		[Token(Token = "0x4000CB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public AudioClip success;

		[Token(Token = "0x4000CB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public AudioClip fishRecoveryCommon;

		[Token(Token = "0x4000CB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public AudioClip fishRecoveryUncommon;

		[Token(Token = "0x4000CB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public AudioClip fishRecoveryRare;

		[Token(Token = "0x4000CB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public AudioClip fishRecoveryEpic;

		[Token(Token = "0x4000CBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public AudioClip fishRecoveryLegendary;

		[Token(Token = "0x4000CBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private Tween musicFadeTween;

		[Token(Token = "0x4000CBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private float duckFadeInDur;

		[Token(Token = "0x6000A73")]
		[Address(RVA = "0xD54A70", Offset = "0xD54A70", VA = "0xD54A70")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000A74")]
		[Address(RVA = "0xD54AC8", Offset = "0xD54AC8", VA = "0xD54AC8")]
		public static void Play(Music music, float volume = 0.5f)
		{
		}

		[Token(Token = "0x6000A75")]
		[Address(RVA = "0xD551C8", Offset = "0xD551C8", VA = "0xD551C8")]
		public static void Play(Music music, FishTypeSO.Grade grade, float volume = 0.5f)
		{
		}

		[Token(Token = "0x6000A76")]
		[Address(RVA = "0xD55060", Offset = "0xD55060", VA = "0xD55060")]
		public static void MusicFadeOut(float fadeTime)
		{
		}

		[Token(Token = "0x6000A77")]
		[Address(RVA = "0xD552F8", Offset = "0xD552F8", VA = "0xD552F8")]
		private void DuckNonStingMusic(float duckDur, float fadeOutDur, float fadeInDur)
		{
		}

		[Token(Token = "0x6000A78")]
		[Address(RVA = "0xD55384", Offset = "0xD55384", VA = "0xD55384")]
		private void DuckFadeIn()
		{
		}

		[Token(Token = "0x6000A79")]
		[Address(RVA = "0xD54FF4", Offset = "0xD54FF4", VA = "0xD54FF4")]
		private void SetReverbSendLevel(float level)
		{
		}

		[Token(Token = "0x6000A7A")]
		[Address(RVA = "0xD55390", Offset = "0xD55390", VA = "0xD55390")]
		public MusicAudio()
		{
		}
	}
	[Token(Token = "0x20001E1")]
	public class OverrideFFRToggle : MonoBehaviour
	{
		[Token(Token = "0x4000CBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Toggle tog;

		[Token(Token = "0x6000A7B")]
		[Address(RVA = "0xD55CFC", Offset = "0xD55CFC", VA = "0xD55CFC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000A7C")]
		[Address(RVA = "0xD55DA0", Offset = "0xD55DA0", VA = "0xD55DA0")]
		public void OnToggleChange()
		{
		}

		[Token(Token = "0x6000A7D")]
		[Address(RVA = "0xD55E40", Offset = "0xD55E40", VA = "0xD55E40")]
		public OverrideFFRToggle()
		{
		}
	}
	[Token(Token = "0x20001E2")]
	public class ParticleSystemController : MonoBehaviour
	{
		[Token(Token = "0x20003E2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E7EE8", Offset = "0x9E7EE8")]
		private sealed class <PlayFXs>d__6 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400194D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400194E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400194F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ParticleSystemController <>4__this;

			[Token(Token = "0x4001950")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float duration;

			[Token(Token = "0x4001951")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private ParticleSystem[] <>7__wrap1;

			[Token(Token = "0x4001952")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private int <>7__wrap2;

			[Token(Token = "0x4001953")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private ParticleSystem <ps>5__4;

			[Token(Token = "0x17000253")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60019CE")]
				[Address(RVA = "0xD562CC", Offset = "0xD562CC", VA = "0xD562CC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000254")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60019D0")]
				[Address(RVA = "0xD56334", Offset = "0xD56334", VA = "0xD56334", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60019CB")]
			[Address(RVA = "0xD560B0", Offset = "0xD560B0", VA = "0xD560B0")]
			[DebuggerHidden]
			public <PlayFXs>d__6(int <>1__state)
			{
			}

			[Token(Token = "0x60019CC")]
			[Address(RVA = "0xD56120", Offset = "0xD56120", VA = "0xD56120", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60019CD")]
			[Address(RVA = "0xD56124", Offset = "0xD56124", VA = "0xD56124", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60019CF")]
			[Address(RVA = "0xD562D4", Offset = "0xD562D4", VA = "0xD562D4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000CBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Color startColor;

		[Token(Token = "0x4000CBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float opacity;

		[Token(Token = "0x4000CC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private bool controlChildrenColor;

		[Token(Token = "0x6000A7E")]
		[Address(RVA = "0xD55E48", Offset = "0xD55E48", VA = "0xD55E48")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000A7F")]
		[Address(RVA = "0xD55E50", Offset = "0xD55E50", VA = "0xD55E50")]
		public void SetOpacity(float alpha = 1f)
		{
		}

		[Token(Token = "0x6000A80")]
		[Address(RVA = "0xD55FF4", Offset = "0xD55FF4", VA = "0xD55FF4")]
		public void Warmup()
		{
		}

		[Token(Token = "0x6000A81")]
		[Address(RVA = "0xD56024", Offset = "0xD56024", VA = "0xD56024")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9EFC48", Offset = "0x9EFC48")]
		private IEnumerator PlayFXs(float duration = 0.5f)
		{
			return null;
		}

		[Token(Token = "0x6000A82")]
		[Address(RVA = "0xD560DC", Offset = "0xD560DC", VA = "0xD560DC")]
		public ParticleSystemController()
		{
		}
	}
	[Token(Token = "0x20001E3")]
	public enum Arrow
	{
		[Token(Token = "0x4000CC2")]
		Left,
		[Token(Token = "0x4000CC3")]
		Right,
		[Token(Token = "0x4000CC4")]
		Up,
		[Token(Token = "0x4000CC5")]
		SnapLeft,
		[Token(Token = "0x4000CC6")]
		SnapRight,
		[Token(Token = "0x4000CC7")]
		SnapUp,
		[Token(Token = "0x4000CC8")]
		JumpLeft,
		[Token(Token = "0x4000CC9")]
		JumpRight,
		[Token(Token = "0x4000CCA")]
		None
	}
	[Token(Token = "0x20001E4")]
	public class PatternController : MonoBehaviour
	{
		[Token(Token = "0x20003E3")]
		public delegate void OnSnapEvent(Arrow direction);

		[Token(Token = "0x20003E4")]
		public delegate void OnLeanStartEvent(Arrow direction);

		[Token(Token = "0x20003E5")]
		public delegate void OnLeanStopEvent();

		[Token(Token = "0x20003E6")]
		public delegate void OnLeanDirectionChangeEvent(Arrow dir);

		[Token(Token = "0x20003E7")]
		public delegate void OnPatternStepFailedEvent();

		[Token(Token = "0x20003E8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E7EF8", Offset = "0x9E7EF8")]
		private sealed class <HandleArrowStay>d__93 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001954")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001955")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001956")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PatternController <>4__this;

			[Token(Token = "0x17000255")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60019E8")]
				[Address(RVA = "0xD5A578", Offset = "0xD5A578", VA = "0xD5A578", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000256")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60019EA")]
				[Address(RVA = "0xD5A5E0", Offset = "0xD5A5E0", VA = "0xD5A5E0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60019E5")]
			[Address(RVA = "0xD58954", Offset = "0xD58954", VA = "0xD58954")]
			[DebuggerHidden]
			public <HandleArrowStay>d__93(int <>1__state)
			{
			}

			[Token(Token = "0x60019E6")]
			[Address(RVA = "0xD5A3F0", Offset = "0xD5A3F0", VA = "0xD5A3F0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60019E7")]
			[Address(RVA = "0xD5A3F4", Offset = "0xD5A3F4", VA = "0xD5A3F4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60019E9")]
			[Address(RVA = "0xD5A580", Offset = "0xD5A580", VA = "0xD5A580", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000CCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject arrowLeft;

		[Token(Token = "0x4000CCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject arrowRight;

		[Token(Token = "0x4000CCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject arrowUp;

		[Token(Token = "0x4000CCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject arrowSnapLeft;

		[Token(Token = "0x4000CCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject arrowSnapRight;

		[Token(Token = "0x4000CD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameObject arrowSnapUp;

		[Token(Token = "0x4000CD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Image arrowFillLeft;

		[Token(Token = "0x4000CD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Image arrowFillRight;

		[Token(Token = "0x4000CD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Image arrowFillUp;

		[Token(Token = "0x4000CD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public GameObject arrowSnapSuccessLeft;

		[Token(Token = "0x4000CD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public GameObject arrowSnapSuccessRight;

		[Token(Token = "0x4000CD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public GameObject arrowSnapSuccessUp;

		[Token(Token = "0x4000CD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public GameObject arrowLeanSuccessLeft;

		[Token(Token = "0x4000CD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public GameObject arrowLeanSuccessRight;

		[Token(Token = "0x4000CD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public GameObject arrowLeanSuccessUp;

		[Token(Token = "0x4000CDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public Arrow arrowToSolve;

		[Token(Token = "0x4000CDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public SpawnPool VFX;

		[Token(Token = "0x4000CDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public GameObject arrowSolvedVfxPrefab;

		[Token(Token = "0x4000CDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public GameObject patternSolvedVfxPrefab;

		[Token(Token = "0x4000CDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public GameObject arrowSolvedVfxPosLeft;

		[Token(Token = "0x4000CDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public GameObject arrowSolvedVfxPosRight;

		[Token(Token = "0x4000CE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public GameObject arrowSolvedVfxPosUp;

		[Token(Token = "0x4000CE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public GameObject patternSolvedVfxPos;

		[Token(Token = "0x4000CE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public Transform snapLeftParticles;

		[Token(Token = "0x4000CE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public Transform snapRightParticles;

		[Token(Token = "0x4000CE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public Transform snapUpParticles;

		[Token(Token = "0x4000CE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public Transform jumpOutParticles;

		[Token(Token = "0x4000CE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public Transform jumpLandParticles;

		[Token(Token = "0x4000CE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public Transform leanRipples;

		[Token(Token = "0x4000CE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private bool doLeanRipples;

		[Token(Token = "0x4000CE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		public float vfxDisableTime;

		[Token(Token = "0x4000CEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private Image arrowFill;

		[Token(Token = "0x4000CEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private float _arrowFillAmount;

		[Token(Token = "0x4000CEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		private float arrowTotalFillDuration;

		[Token(Token = "0x4000CED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private float arrowTargetFillDuration;

		[Token(Token = "0x4000CEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		private float arrowFilledTime;

		[Token(Token = "0x4000CEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private bool finalLeanInSequence;

		[Token(Token = "0x4000CF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		private float thisFishArrowSolveTime;

		[Token(Token = "0x4000CF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private List<PatternSO> patterns;

		[Token(Token = "0x4000CF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		public PatternSO pattern;

		[Token(Token = "0x4000CF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private int numLeans;

		[Token(Token = "0x4000CF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
		private int numLeansSolved;

		[Token(Token = "0x4000CF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private int numArrows;

		[Token(Token = "0x4000CF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
		private int numArrowsSolved;

		[Token(Token = "0x4000CF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private int patternIndex;

		[Token(Token = "0x4000CF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
		private int lastSnapIndex;

		[Token(Token = "0x4000CF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private Tween arrowTween;

		[Token(Token = "0x4000CFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		public bool allowArrowSolve;

		[Token(Token = "0x4000CFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x159")]
		public bool isSolvingArrow;

		[Token(Token = "0x4000CFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15A")]
		private bool leanPoseIsCorrectWorldCollider;

		[Token(Token = "0x4000CFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15B")]
		private bool leanPoseIsCorrectRodCollider;

		[Token(Token = "0x4000CFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
		public bool useVisibleColliders;

		[Token(Token = "0x4000CFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15D")]
		private bool showPatternBCID;

		[Token(Token = "0x4000D00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		private Transform jumpSplash;

		[Token(Token = "0x4000D01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		private Arrow lastArrow;

		[Token(Token = "0x4000D02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
		private float leanDirChangeLikelihood;

		[Token(Token = "0x4000D03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		private float leanDirChangeInterval;

		[Token(Token = "0x4000D04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
		public bool doLeanDirChange;

		[Token(Token = "0x4000D05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x175")]
		public bool jumpSuccess;

		[Token(Token = "0x170000EE")]
		public float ArrowFillAmount
		{
			[Token(Token = "0x6000A83")]
			[Address(RVA = "0xD56344", Offset = "0xD56344", VA = "0xD56344")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000A84")]
			[Address(RVA = "0xD5634C", Offset = "0xD5634C", VA = "0xD5634C")]
			set
			{
			}
		}

		[Token(Token = "0x1400000B")]
		public static event OnSnapEvent OnSnap
		{
			[Token(Token = "0x6000A85")]
			[Address(RVA = "0xD56370", Offset = "0xD56370", VA = "0xD56370")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EFCAC", Offset = "0x9EFCAC")]
			add
			{
			}
			[Token(Token = "0x6000A86")]
			[Address(RVA = "0xD56424", Offset = "0xD56424", VA = "0xD56424")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EFCBC", Offset = "0x9EFCBC")]
			remove
			{
			}
		}

		[Token(Token = "0x1400000C")]
		public static event OnLeanStartEvent OnLeanStart
		{
			[Token(Token = "0x6000A87")]
			[Address(RVA = "0xD564D8", Offset = "0xD564D8", VA = "0xD564D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EFCCC", Offset = "0x9EFCCC")]
			add
			{
			}
			[Token(Token = "0x6000A88")]
			[Address(RVA = "0xD56590", Offset = "0xD56590", VA = "0xD56590")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EFCDC", Offset = "0x9EFCDC")]
			remove
			{
			}
		}

		[Token(Token = "0x1400000D")]
		public static event OnLeanStopEvent OnLeanStop
		{
			[Token(Token = "0x6000A89")]
			[Address(RVA = "0xD56648", Offset = "0xD56648", VA = "0xD56648")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EFCEC", Offset = "0x9EFCEC")]
			add
			{
			}
			[Token(Token = "0x6000A8A")]
			[Address(RVA = "0xD56700", Offset = "0xD56700", VA = "0xD56700")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EFCFC", Offset = "0x9EFCFC")]
			remove
			{
			}
		}

		[Token(Token = "0x1400000E")]
		public static event OnLeanDirectionChangeEvent OnLeanDirectionChange
		{
			[Token(Token = "0x6000A8B")]
			[Address(RVA = "0xD567B8", Offset = "0xD567B8", VA = "0xD567B8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EFD0C", Offset = "0x9EFD0C")]
			add
			{
			}
			[Token(Token = "0x6000A8C")]
			[Address(RVA = "0xD56870", Offset = "0xD56870", VA = "0xD56870")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EFD1C", Offset = "0x9EFD1C")]
			remove
			{
			}
		}

		[Token(Token = "0x1400000F")]
		public static event OnPatternStepFailedEvent OnPatternStepFailed
		{
			[Token(Token = "0x6000A8D")]
			[Address(RVA = "0xD56928", Offset = "0xD56928", VA = "0xD56928")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EFD2C", Offset = "0x9EFD2C")]
			add
			{
			}
			[Token(Token = "0x6000A8E")]
			[Address(RVA = "0xD569E0", Offset = "0xD569E0", VA = "0xD569E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EFD3C", Offset = "0x9EFD3C")]
			remove
			{
			}
		}

		[Token(Token = "0x6000A8F")]
		[Address(RVA = "0xD56A98", Offset = "0xD56A98", VA = "0xD56A98")]
		public void setVisibleColliders(bool val)
		{
		}

		[Token(Token = "0x6000A90")]
		[Address(RVA = "0xD56B24", Offset = "0xD56B24", VA = "0xD56B24")]
		public void Reset()
		{
		}

		[Token(Token = "0x6000A91")]
		[Address(RVA = "0xD56D30", Offset = "0xD56D30", VA = "0xD56D30")]
		public void SetArrow(Arrow dir, float arrowVisibleTime)
		{
		}

		[Token(Token = "0x6000A92")]
		[Address(RVA = "0xD57B04", Offset = "0xD57B04", VA = "0xD57B04")]
		private void SetArrowToFill(Arrow arrow)
		{
		}

		[Token(Token = "0x6000A93")]
		[Address(RVA = "0xD57CF8", Offset = "0xD57CF8", VA = "0xD57CF8")]
		private void LeanInit(float arrowVisibleTime)
		{
		}

		[Token(Token = "0x6000A94")]
		[Address(RVA = "0xD58338", Offset = "0xD58338", VA = "0xD58338")]
		private void ChangeLeanDir()
		{
		}

		[Token(Token = "0x6000A95")]
		[Address(RVA = "0xD581CC", Offset = "0xD581CC", VA = "0xD581CC")]
		private void CalculateArrowFillDuration()
		{
		}

		[Token(Token = "0x6000A96")]
		[Address(RVA = "0xD57BC0", Offset = "0xD57BC0", VA = "0xD57BC0")]
		private void ArrowAppearTween(RectTransform rt)
		{
		}

		[Token(Token = "0x6000A97")]
		[Address(RVA = "0xD58780", Offset = "0xD58780", VA = "0xD58780")]
		private void OnArrowFullyVisible()
		{
		}

		[Token(Token = "0x6000A98")]
		[Address(RVA = "0xD587BC", Offset = "0xD587BC", VA = "0xD587BC")]
		private void EnableSnapColliders()
		{
		}

		[Token(Token = "0x6000A99")]
		[Address(RVA = "0xD5850C", Offset = "0xD5850C", VA = "0xD5850C")]
		private void EnableLeanColliders()
		{
		}

		[Token(Token = "0x6000A9A")]
		[Address(RVA = "0xD582BC", Offset = "0xD582BC", VA = "0xD582BC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9EFD4C", Offset = "0x9EFD4C")]
		private IEnumerator HandleArrowStay()
		{
			return null;
		}

		[Token(Token = "0x6000A9B")]
		[Address(RVA = "0xD58980", Offset = "0xD58980", VA = "0xD58980")]
		private void HandleArrowFill()
		{
		}

		[Token(Token = "0x6000A9C")]
		[Address(RVA = "0xD58AD4", Offset = "0xD58AD4", VA = "0xD58AD4")]
		private void EnableLeanSuccessArrow()
		{
		}

		[Token(Token = "0x6000A9D")]
		[Address(RVA = "0xD58C10", Offset = "0xD58C10", VA = "0xD58C10")]
		private void ArrowSolved()
		{
		}

		[Token(Token = "0x6000A9E")]
		[Address(RVA = "0xD56B78", Offset = "0xD56B78", VA = "0xD56B78")]
		private void DisablePatternColliders()
		{
		}

		[Token(Token = "0x6000A9F")]
		[Address(RVA = "0xD58E28", Offset = "0xD58E28", VA = "0xD58E28")]
		private void ReduceStamina(Arrow arrow)
		{
		}

		[Token(Token = "0x6000AA0")]
		[Address(RVA = "0xD59128", Offset = "0xD59128", VA = "0xD59128")]
		public void JumpSuccessEnd()
		{
		}

		[Token(Token = "0x6000AA1")]
		[Address(RVA = "0xD59068", Offset = "0xD59068", VA = "0xD59068")]
		private void PatternCompleted(bool lastArrowSuccess = true)
		{
		}

		[Token(Token = "0x6000AA2")]
		[Address(RVA = "0xD591F4", Offset = "0xD591F4", VA = "0xD591F4")]
		private bool CheckCanRest()
		{
			return default(bool);
		}

		[Token(Token = "0x6000AA3")]
		[Address(RVA = "0xD59254", Offset = "0xD59254", VA = "0xD59254")]
		private void PatternCompletedStaminaReductionBonus(bool wasPerfect)
		{
		}

		[Token(Token = "0x6000AA4")]
		[Address(RVA = "0xD56C64", Offset = "0xD56C64", VA = "0xD56C64")]
		public void DisableArrow()
		{
		}

		[Token(Token = "0x6000AA5")]
		[Address(RVA = "0xD58478", Offset = "0xD58478", VA = "0xD58478")]
		private void HideAllArrows()
		{
		}

		[Token(Token = "0x6000AA6")]
		[Address(RVA = "0xD58098", Offset = "0xD58098", VA = "0xD58098")]
		private void ShowArrow(Arrow arrow)
		{
		}

		[Token(Token = "0x6000AA7")]
		[Address(RVA = "0xD58F7C", Offset = "0xD58F7C", VA = "0xD58F7C")]
		private void ArrowSolvedFX()
		{
		}

		[Token(Token = "0x6000AA8")]
		[Address(RVA = "0xD59548", Offset = "0xD59548", VA = "0xD59548")]
		internal Arrow GetFleeDirection(FishTypeSO fish, Arrow overrideArrow = Arrow.None)
		{
			return default(Arrow);
		}

		[Token(Token = "0x6000AA9")]
		[Address(RVA = "0xD598C8", Offset = "0xD598C8", VA = "0xD598C8")]
		private Arrow CheckSwapArrowDir(Arrow arrow)
		{
			return default(Arrow);
		}

		[Token(Token = "0x6000AAA")]
		[Address(RVA = "0xD599C4", Offset = "0xD599C4", VA = "0xD599C4")]
		private float bobberXPos()
		{
			return default(float);
		}

		[Token(Token = "0x6000AAB")]
		[Address(RVA = "0xD596F8", Offset = "0xD596F8", VA = "0xD596F8")]
		private void PatternInit(FishTypeSO fish)
		{
		}

		[Token(Token = "0x6000AAC")]
		[Address(RVA = "0xD59A40", Offset = "0xD59A40", VA = "0xD59A40")]
		private void SetLeanDirChangeValues(FishTypeSO fish)
		{
		}

		[Token(Token = "0x6000AAD")]
		[Address(RVA = "0xD59B7C", Offset = "0xD59B7C", VA = "0xD59B7C")]
		private int CountSnapArrows()
		{
			return default(int);
		}

		[Token(Token = "0x6000AAE")]
		[Address(RVA = "0xD59C04", Offset = "0xD59C04", VA = "0xD59C04")]
		public void ArrowFailed(Arrow arrow)
		{
		}

		[Token(Token = "0x6000AAF")]
		[Address(RVA = "0xD58D48", Offset = "0xD58D48", VA = "0xD58D48")]
		private void LastLean()
		{
		}

		[Token(Token = "0x6000AB0")]
		[Address(RVA = "0xD59F04", Offset = "0xD59F04", VA = "0xD59F04")]
		internal void HandleSnapCollider(Arrow direction)
		{
		}

		[Token(Token = "0x6000AB1")]
		[Address(RVA = "0xD5A210", Offset = "0xD5A210", VA = "0xD5A210")]
		internal void HandleLeanCollider(bool isCorrectLean, bool isWorldCollider)
		{
		}

		[Token(Token = "0x6000AB2")]
		[Address(RVA = "0xD59A88", Offset = "0xD59A88", VA = "0xD59A88")]
		public void GetPatternsFromFish(FishTypeSO fish)
		{
		}

		[Token(Token = "0x6000AB3")]
		[Address(RVA = "0xD5A228", Offset = "0xD5A228", VA = "0xD5A228")]
		public void SetShowPatternBCID(bool val)
		{
		}

		[Token(Token = "0x6000AB4")]
		[Address(RVA = "0xD5A234", Offset = "0xD5A234", VA = "0xD5A234")]
		private void LeanRipples()
		{
		}

		[Token(Token = "0x6000AB5")]
		[Address(RVA = "0xD5A394", Offset = "0xD5A394", VA = "0xD5A394")]
		public PatternController()
		{
		}

		[Token(Token = "0x6000AB6")]
		[Address(RVA = "0xD5A3B4", Offset = "0xD5A3B4", VA = "0xD5A3B4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EFDB0", Offset = "0x9EFDB0")]
		private void <ArrowAppearTween>b__89_0()
		{
		}
	}
	[Token(Token = "0x20001E5")]
	public class PatternDebug : MonoBehaviour
	{
		[Token(Token = "0x4000D0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PatternSO testPattern;

		[Token(Token = "0x4000D0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<Arrow> arrows;

		[Token(Token = "0x4000D0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TextMeshProUGUI fishTypeDisplayText;

		[Token(Token = "0x4000D0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public TextMeshProUGUI patternDisplayText;

		[Token(Token = "0x6000AB7")]
		[Address(RVA = "0xD5A884", Offset = "0xD5A884", VA = "0xD5A884")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000AB8")]
		[Address(RVA = "0xD5AA88", Offset = "0xD5AA88", VA = "0xD5AA88")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000AB9")]
		[Address(RVA = "0xD5AB1C", Offset = "0xD5AB1C", VA = "0xD5AB1C")]
		private void FishChanged(FishTypeSO fish)
		{
		}

		[Token(Token = "0x6000ABA")]
		[Address(RVA = "0xD5AB4C", Offset = "0xD5AB4C", VA = "0xD5AB4C")]
		public void AddStep(Arrow arrow)
		{
		}

		[Token(Token = "0x6000ABB")]
		[Address(RVA = "0xD5AA0C", Offset = "0xD5AA0C", VA = "0xD5AA0C")]
		public void ClearPattern()
		{
		}

		[Token(Token = "0x6000ABC")]
		[Address(RVA = "0xD5AD54", Offset = "0xD5AD54", VA = "0xD5AD54")]
		public void UpdatePattern()
		{
		}

		[Token(Token = "0x6000ABD")]
		[Address(RVA = "0xD5ABFC", Offset = "0xD5ABFC", VA = "0xD5ABFC")]
		private void UpdateDisplay()
		{
		}

		[Token(Token = "0x6000ABE")]
		[Address(RVA = "0xD5AF64", Offset = "0xD5AF64", VA = "0xD5AF64")]
		public PatternDebug()
		{
		}
	}
	[Token(Token = "0x20001E6")]
	public class PatternStepButton : MonoBehaviour
	{
		[Token(Token = "0x4000D0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Arrow arrow;

		[Token(Token = "0x4000D10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PatternDebug patternDebug;

		[Token(Token = "0x6000ABF")]
		[Address(RVA = "0xD5AF74", Offset = "0xD5AF74", VA = "0xD5AF74")]
		public void OnClick()
		{
		}

		[Token(Token = "0x6000AC0")]
		[Address(RVA = "0xD5AF94", Offset = "0xD5AF94", VA = "0xD5AF94")]
		public PatternStepButton()
		{
		}
	}
	[Token(Token = "0x20001E7")]
	public class PauseGame : MonoBehaviour
	{
		[Token(Token = "0x4000D11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject leftHand;

		[Token(Token = "0x4000D12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject rightHand;

		[Token(Token = "0x4000D13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static bool isPaused;

		[Token(Token = "0x4000D14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Transform rodParent;

		[Token(Token = "0x4000D15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 rodPosOffset;

		[Token(Token = "0x4000D16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Quaternion rodRotOffset;

		[Token(Token = "0x4000D17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static PauseGame instance;

		[Token(Token = "0x4000D18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Handside rodSide;

		[Token(Token = "0x6000AC1")]
		[Address(RVA = "0xD5AFA4", Offset = "0xD5AFA4", VA = "0xD5AFA4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000AC2")]
		[Address(RVA = "0xD5B014", Offset = "0xD5B014", VA = "0xD5B014")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000AC3")]
		[Address(RVA = "0xD5B018", Offset = "0xD5B018", VA = "0xD5B018")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000AC4")]
		[Address(RVA = "0xD5B01C", Offset = "0xD5B01C", VA = "0xD5B01C")]
		private void OnApplicationFocus(bool hasFocus)
		{
		}

		[Token(Token = "0x6000AC5")]
		[Address(RVA = "0xD5B3A0", Offset = "0xD5B3A0", VA = "0xD5B3A0")]
		private void OnHMDMounted()
		{
		}

		[Token(Token = "0x6000AC6")]
		[Address(RVA = "0xD5B420", Offset = "0xD5B420", VA = "0xD5B420")]
		private void OnHMDUnmounted()
		{
		}

		[Token(Token = "0x6000AC7")]
		[Address(RVA = "0xD5B028", Offset = "0xD5B028", VA = "0xD5B028")]
		private void Pause()
		{
		}

		[Token(Token = "0x6000AC8")]
		[Address(RVA = "0xD5B1F4", Offset = "0xD5B1F4", VA = "0xD5B1F4")]
		private void Resume()
		{
		}

		[Token(Token = "0x6000AC9")]
		[Address(RVA = "0xD5B4A0", Offset = "0xD5B4A0", VA = "0xD5B4A0")]
		public PauseGame()
		{
		}
	}
	[Token(Token = "0x20001E8")]
	public class PeasAnimationController : CharacterAnimationController
	{
		[Token(Token = "0x6000ACB")]
		[Address(RVA = "0xD5B508", Offset = "0xD5B508", VA = "0xD5B508")]
		public void Notice()
		{
		}

		[Token(Token = "0x6000ACC")]
		[Address(RVA = "0xD5B564", Offset = "0xD5B564", VA = "0xD5B564")]
		public void Surprise()
		{
		}

		[Token(Token = "0x6000ACD")]
		[Address(RVA = "0xD5B5C0", Offset = "0xD5B5C0", VA = "0xD5B5C0")]
		public void StartSleep()
		{
		}

		[Token(Token = "0x6000ACE")]
		[Address(RVA = "0xD5B620", Offset = "0xD5B620", VA = "0xD5B620")]
		public void StartIdle()
		{
		}

		[Token(Token = "0x6000ACF")]
		[Address(RVA = "0xD5B67C", Offset = "0xD5B67C", VA = "0xD5B67C")]
		public void StopSleep()
		{
		}

		[Token(Token = "0x6000AD0")]
		[Address(RVA = "0xD5B6DC", Offset = "0xD5B6DC", VA = "0xD5B6DC")]
		public void StartBeam()
		{
		}

		[Token(Token = "0x6000AD1")]
		[Address(RVA = "0xD5B758", Offset = "0xD5B758", VA = "0xD5B758")]
		public void StopBeam()
		{
		}

		[Token(Token = "0x6000AD2")]
		[Address(RVA = "0xD5B7D4", Offset = "0xD5B7D4", VA = "0xD5B7D4")]
		public PeasAnimationController()
		{
		}
	}
	[Token(Token = "0x20001E9")]
	public enum Peas
	{
		[Token(Token = "0x4000D1A")]
		Vocalize,
		[Token(Token = "0x4000D1B")]
		Bark,
		[Token(Token = "0x4000D1C")]
		Jets,
		[Token(Token = "0x4000D1D")]
		BeamStart,
		[Token(Token = "0x4000D1E")]
		BeamEnd
	}
	[Token(Token = "0x20001EA")]
	public class PeasAudio : MonoBehaviour
	{
		[Token(Token = "0x4000D1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static PeasAudio instance;

		[Token(Token = "0x4000D20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AudioClip[] PeasVocalize;

		[Token(Token = "0x4000D21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioClip[] PeasJets;

		[Token(Token = "0x4000D22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AudioClip[] PeasBark;

		[Token(Token = "0x4000D23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AudioClip BeamStart;

		[Token(Token = "0x4000D24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public AudioClip BeamLoop;

		[Token(Token = "0x4000D25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public AudioClip BeamEnd;

		[Token(Token = "0x4000D26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public AudioSource PeasVoxAS;

		[Token(Token = "0x4000D27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public AudioSource PeasJetsAS;

		[Token(Token = "0x4000D28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public AudioSource Beam;

		[Token(Token = "0x4000D29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public AudioSource BeamLp;

		[Token(Token = "0x6000AD3")]
		[Address(RVA = "0xD5B7DC", Offset = "0xD5B7DC", VA = "0xD5B7DC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000AD4")]
		[Address(RVA = "0xD5B834", Offset = "0xD5B834", VA = "0xD5B834")]
		public static void Play(Peas sfx)
		{
		}

		[Token(Token = "0x6000AD5")]
		[Address(RVA = "0xD5BA8C", Offset = "0xD5BA8C", VA = "0xD5BA8C")]
		public PeasAudio()
		{
		}
	}
	[Token(Token = "0x20001EB")]
	public enum PeasState
	{
		[Token(Token = "0x4000D2B")]
		resting,
		[Token(Token = "0x4000D2C")]
		followingFishing,
		[Token(Token = "0x4000D2D")]
		recoveringFish
	}
	[Token(Token = "0x20001EC")]
	public class PeasFishingController : MonoBehaviour
	{
		[Token(Token = "0x20003E9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E7F08", Offset = "0x9E7F08")]
		private sealed class <WaitToStartResting>d__9 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001957")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001958")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001959")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PeasFishingController <>4__this;

			[Token(Token = "0x17000257")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60019EE")]
				[Address(RVA = "0xD5CDA4", Offset = "0xD5CDA4", VA = "0xD5CDA4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000258")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60019F0")]
				[Address(RVA = "0xD5CE0C", Offset = "0xD5CE0C", VA = "0xD5CE0C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60019EB")]
			[Address(RVA = "0xD5BD10", Offset = "0xD5BD10", VA = "0xD5BD10")]
			[DebuggerHidden]
			public <WaitToStartResting>d__9(int <>1__state)
			{
			}

			[Token(Token = "0x60019EC")]
			[Address(RVA = "0xD5CCAC", Offset = "0xD5CCAC", VA = "0xD5CCAC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60019ED")]
			[Address(RVA = "0xD5CCB0", Offset = "0xD5CCB0", VA = "0xD5CCB0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60019EF")]
			[Address(RVA = "0xD5CDAC", Offset = "0xD5CDAC", VA = "0xD5CDAC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20003EA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E7F18", Offset = "0x9E7F18")]
		private sealed class <UpdateBeamVfx>d__17 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400195A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400195B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400195C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PeasFishingController <>4__this;

			[Token(Token = "0x17000259")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60019F4")]
				[Address(RVA = "0xD5CC3C", Offset = "0xD5CC3C", VA = "0xD5CC3C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700025A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60019F6")]
				[Address(RVA = "0xD5CCA4", Offset = "0xD5CCA4", VA = "0xD5CCA4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60019F1")]
			[Address(RVA = "0xD5C2F0", Offset = "0xD5C2F0", VA = "0xD5C2F0")]
			[DebuggerHidden]
			public <UpdateBeamVfx>d__17(int <>1__state)
			{
			}

			[Token(Token = "0x60019F2")]
			[Address(RVA = "0xD5C69C", Offset = "0xD5C69C", VA = "0xD5C69C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60019F3")]
			[Address(RVA = "0xD5C6A0", Offset = "0xD5C6A0", VA = "0xD5C6A0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60019F5")]
			[Address(RVA = "0xD5CC44", Offset = "0xD5CC44", VA = "0xD5CC44", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000D2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PeasState state;

		[Token(Token = "0x4000D2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PeasAnimationController anim;

		[Token(Token = "0x4000D30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Transform recoveredFish;

		[Token(Token = "0x4000D31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 waitPos;

		[Token(Token = "0x4000D32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public PeasTractorBeam beam;

		[Token(Token = "0x4000D33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Transform beamEnd;

		[Token(Token = "0x6000AD6")]
		[Address(RVA = "0xD5BA94", Offset = "0xD5BA94", VA = "0xD5BA94")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000AD7")]
		[Address(RVA = "0xD5BB50", Offset = "0xD5BB50", VA = "0xD5BB50")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000AD8")]
		[Address(RVA = "0xD5BBE4", Offset = "0xD5BBE4", VA = "0xD5BBE4")]
		private void LocationChanged(LocationSO locationSO, bool comingFromShip)
		{
		}

		[Token(Token = "0x6000AD9")]
		[Address(RVA = "0xD5BC94", Offset = "0xD5BC94", VA = "0xD5BC94")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9EFDC0", Offset = "0x9EFDC0")]
		private IEnumerator WaitToStartResting()
		{
			return null;
		}

		[Token(Token = "0x6000ADA")]
		[Address(RVA = "0xD5BD3C", Offset = "0xD5BD3C", VA = "0xD5BD3C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000ADB")]
		[Address(RVA = "0xD5BF8C", Offset = "0xD5BF8C", VA = "0xD5BF8C")]
		public void StartResting()
		{
		}

		[Token(Token = "0x6000ADC")]
		[Address(RVA = "0xD5C06C", Offset = "0xD5C06C", VA = "0xD5C06C")]
		public void StartFollowingFishing()
		{
		}

		[Token(Token = "0x6000ADD")]
		[Address(RVA = "0xD5C0E8", Offset = "0xD5C0E8", VA = "0xD5C0E8")]
		private void StartRecoveringFish()
		{
		}

		[Token(Token = "0x6000ADE")]
		[Address(RVA = "0xD5C0F4", Offset = "0xD5C0F4", VA = "0xD5C0F4")]
		public void MoveToCatchPos(Vector3 fishInUiPos, Transform recvrdFish)
		{
		}

		[Token(Token = "0x6000ADF")]
		[Address(RVA = "0xD5C1F4", Offset = "0xD5C1F4", VA = "0xD5C1F4")]
		public void ShootBeam(Transform target)
		{
		}

		[Token(Token = "0x6000AE0")]
		[Address(RVA = "0xD5C22C", Offset = "0xD5C22C", VA = "0xD5C22C")]
		private void StartBeamAnim()
		{
		}

		[Token(Token = "0x6000AE1")]
		[Address(RVA = "0xD5C274", Offset = "0xD5C274", VA = "0xD5C274")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9EFE24", Offset = "0x9EFE24")]
		private IEnumerator UpdateBeamVfx()
		{
			return null;
		}

		[Token(Token = "0x6000AE2")]
		[Address(RVA = "0xD5C31C", Offset = "0xD5C31C", VA = "0xD5C31C")]
		public void MoveToWaitPos()
		{
		}

		[Token(Token = "0x6000AE3")]
		[Address(RVA = "0xD5C5B4", Offset = "0xD5C5B4", VA = "0xD5C5B4")]
		public void Wait()
		{
		}

		[Token(Token = "0x6000AE4")]
		[Address(RVA = "0xD5C674", Offset = "0xD5C674", VA = "0xD5C674")]
		private void Bark()
		{
		}

		[Token(Token = "0x6000AE5")]
		[Address(RVA = "0xD5C67C", Offset = "0xD5C67C", VA = "0xD5C67C")]
		private void Vocalize()
		{
		}

		[Token(Token = "0x6000AE6")]
		[Address(RVA = "0xD5C684", Offset = "0xD5C684", VA = "0xD5C684")]
		private void Jets()
		{
		}

		[Token(Token = "0x6000AE7")]
		[Address(RVA = "0xD5C68C", Offset = "0xD5C68C", VA = "0xD5C68C")]
		public PeasFishingController()
		{
		}

		[Token(Token = "0x6000AE8")]
		[Address(RVA = "0xD5C694", Offset = "0xD5C694", VA = "0xD5C694")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EFE88", Offset = "0x9EFE88")]
		private void <MoveToCatchPos>b__14_0()
		{
		}

		[Token(Token = "0x6000AE9")]
		[Address(RVA = "0xD5C698", Offset = "0xD5C698", VA = "0xD5C698")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EFE98", Offset = "0x9EFE98")]
		private void <MoveToWaitPos>b__18_0()
		{
		}
	}
	[Token(Token = "0x20001ED")]
	public class PeasTractorBeam : MonoBehaviour
	{
		[Token(Token = "0x4000D34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject beamStart;

		[Token(Token = "0x4000D35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject beamEnd;

		[Token(Token = "0x4000D36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject beam;

		[Token(Token = "0x4000D37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private LineRenderer line;

		[Token(Token = "0x4000D38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9EA88C", Offset = "0x9EA88C")]
		public float textureScrollSpeed;

		[Token(Token = "0x4000D39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float textureLengthScale;

		[Token(Token = "0x6000AEA")]
		[Address(RVA = "0xD5CE14", Offset = "0xD5CE14", VA = "0xD5CE14")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000AEB")]
		[Address(RVA = "0xD5CE18", Offset = "0xD5CE18", VA = "0xD5CE18")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000AEC")]
		[Address(RVA = "0xD5C98C", Offset = "0xD5C98C", VA = "0xD5C98C")]
		public void UpdateBeam()
		{
		}

		[Token(Token = "0x6000AED")]
		[Address(RVA = "0xD5C814", Offset = "0xD5C814", VA = "0xD5C814")]
		public void SpawnBeam()
		{
		}

		[Token(Token = "0x6000AEE")]
		[Address(RVA = "0xD5C44C", Offset = "0xD5C44C", VA = "0xD5C44C")]
		public void RemoveBeam()
		{
		}

		[Token(Token = "0x6000AEF")]
		[Address(RVA = "0xD5CE1C", Offset = "0xD5CE1C", VA = "0xD5CE1C")]
		public PeasTractorBeam()
		{
		}
	}
	[Token(Token = "0x20001EE")]
	public class PerlinMover : MonoBehaviour
	{
		[Token(Token = "0x4000D3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9EA8C4", Offset = "0x9EA8C4")]
		public float _scale;

		[Token(Token = "0x4000D3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float _seed;

		[Token(Token = "0x4000D3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9EA8DC", Offset = "0x9EA8DC")]
		public float _speed;

		[Token(Token = "0x4000D3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float increment;

		[Token(Token = "0x4000D3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 posScale;

		[Token(Token = "0x4000D3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Vector3 rotScale;

		[Token(Token = "0x4000D40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Vector3 m_posScaleBuffer;

		[Token(Token = "0x4000D41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Vector3 m_rotScaleBuffer;

		[Token(Token = "0x4000D42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float easeScalerVal;

		[Token(Token = "0x4000D43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Tween easeTween;

		[Token(Token = "0x6000AF0")]
		[Address(RVA = "0xD5CE2C", Offset = "0xD5CE2C", VA = "0xD5CE2C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000AF1")]
		[Address(RVA = "0xD5CEE8", Offset = "0xD5CEE8", VA = "0xD5CEE8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000AF2")]
		[Address(RVA = "0xD5CFF0", Offset = "0xD5CFF0", VA = "0xD5CFF0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000AF3")]
		[Address(RVA = "0xD5D0F4", Offset = "0xD5D0F4", VA = "0xD5D0F4")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6000AF4")]
		[Address(RVA = "0xD5D304", Offset = "0xD5D304", VA = "0xD5D304")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000AF5")]
		[Address(RVA = "0xD5D3B0", Offset = "0xD5D3B0", VA = "0xD5D3B0")]
		private void EventHub_OnFishTaken(FpFish fish)
		{
		}

		[Token(Token = "0x6000AF6")]
		[Address(RVA = "0xD5D3D8", Offset = "0xD5D3D8", VA = "0xD5D3D8")]
		private void EventHub_OnFishCaught(FpFish fish, bool isCheating)
		{
		}

		[Token(Token = "0x6000AF7")]
		[Address(RVA = "0xD5D3DC", Offset = "0xD5D3DC", VA = "0xD5D3DC")]
		private void StopMoving()
		{
		}

		[Token(Token = "0x6000AF8")]
		[Address(RVA = "0xD5D3C4", Offset = "0xD5D3C4", VA = "0xD5D3C4")]
		private void ResetMoving()
		{
		}

		[Token(Token = "0x6000AF9")]
		[Address(RVA = "0xD5D45C", Offset = "0xD5D45C", VA = "0xD5D45C")]
		public void EaseMover(float endVal)
		{
		}

		[Token(Token = "0x6000AFA")]
		[Address(RVA = "0xD5D590", Offset = "0xD5D590", VA = "0xD5D590")]
		private void StartedPatternPlay(Vector3 fleeDirection, bool isFish, bool directionChange)
		{
		}

		[Token(Token = "0x6000AFB")]
		[Address(RVA = "0xD5D598", Offset = "0xD5D598", VA = "0xD5D598")]
		private void StartedResisting(Vector3 fleeDirection, bool isFish, bool directionChange)
		{
		}

		[Token(Token = "0x6000AFC")]
		[Address(RVA = "0xD5D5A0", Offset = "0xD5D5A0", VA = "0xD5D5A0")]
		private void StartedResting(bool isFish)
		{
		}

		[Token(Token = "0x6000AFD")]
		[Address(RVA = "0xD5D5A8", Offset = "0xD5D5A8", VA = "0xD5D5A8")]
		public PerlinMover()
		{
		}

		[Token(Token = "0x6000AFE")]
		[Address(RVA = "0xD5D5B8", Offset = "0xD5D5B8", VA = "0xD5D5B8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EFEA8", Offset = "0x9EFEA8")]
		private float <EaseMover>b__19_0()
		{
			return default(float);
		}

		[Token(Token = "0x6000AFF")]
		[Address(RVA = "0xD5D5C0", Offset = "0xD5D5C0", VA = "0xD5D5C0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EFEB8", Offset = "0x9EFEB8")]
		private void <EaseMover>b__19_1(float x)
		{
		}
	}
	[Token(Token = "0x20001EF")]
	public enum BobberMoverSettings
	{
		[Token(Token = "0x4000D45")]
		normal,
		[Token(Token = "0x4000D46")]
		reelingFish,
		[Token(Token = "0x4000D47")]
		inPatternLean
	}
	[Token(Token = "0x20001F0")]
	public class PerlinMoverSettings : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20003EB")]
		public struct settings
		{
			[Token(Token = "0x400195D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float scale;

			[Token(Token = "0x400195E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public float seed;

			[Token(Token = "0x400195F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public float speed;

			[Token(Token = "0x4001960")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public Vector3 posScale;

			[Token(Token = "0x4001961")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Vector3 rotScale;
		}

		[Token(Token = "0x4000D48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PerlinMover mover;

		[Token(Token = "0x4000D49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9EA8F8", Offset = "0x9EA8F8")]
		public float maxScale;

		[Token(Token = "0x4000D4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float minScale;

		[Token(Token = "0x4000D4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public settings normalSettings;

		[Token(Token = "0x4000D4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public settings reelInFishSettings;

		[Token(Token = "0x4000D4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public settings inPatternLeanSettings;

		[Token(Token = "0x4000D4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private BobberMoverSettings currentSettings;

		[Token(Token = "0x4000D4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public AnimationCurve curve;

		[Token(Token = "0x4000D50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Tween scaleTween;

		[Token(Token = "0x4000D51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private float scaleVal;

		[Token(Token = "0x6000B00")]
		[Address(RVA = "0xD5D5C8", Offset = "0xD5D5C8", VA = "0xD5D5C8")]
		private void Update()
		{
		}

		[Token(Token = "0x6000B01")]
		[Address(RVA = "0xD57B40", Offset = "0xD57B40", VA = "0xD57B40")]
		public void ApplySettings(BobberMoverSettings type)
		{
		}

		[Token(Token = "0x6000B02")]
		[Address(RVA = "0xD5D738", Offset = "0xD5D738", VA = "0xD5D738")]
		private void Apply(settings sets)
		{
		}

		[Token(Token = "0x6000B03")]
		[Address(RVA = "0xD5D8FC", Offset = "0xD5D8FC", VA = "0xD5D8FC")]
		public PerlinMoverSettings()
		{
		}

		[Token(Token = "0x6000B04")]
		[Address(RVA = "0xD5D904", Offset = "0xD5D904", VA = "0xD5D904")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EFEC8", Offset = "0x9EFEC8")]
		private float <Apply>b__13_0()
		{
			return default(float);
		}

		[Token(Token = "0x6000B05")]
		[Address(RVA = "0xD5D90C", Offset = "0xD5D90C", VA = "0xD5D90C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EFED8", Offset = "0x9EFED8")]
		private void <Apply>b__13_1(float x)
		{
		}

		[Token(Token = "0x6000B06")]
		[Address(RVA = "0xD5D914", Offset = "0xD5D914", VA = "0xD5D914")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EFEE8", Offset = "0x9EFEE8")]
		private void <Apply>b__13_2()
		{
		}
	}
	[Token(Token = "0x20001F1")]
	public class PlayRandomClip : MonoBehaviour
	{
		[Token(Token = "0x4000D52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9EA930", Offset = "0x9EA930")]
		public AudioClip[] clips;

		[Token(Token = "0x4000D53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9EA968", Offset = "0x9EA968")]
		public float baseTimeInterval;

		[Token(Token = "0x4000D54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9EA9A0", Offset = "0x9EA9A0")]
		public float randomTimeDeviation;

		[Token(Token = "0x4000D55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9EA9D8", Offset = "0x9EA9D8")]
		public float randomPosInRadius;

		[Token(Token = "0x4000D56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private AudioSource audio;

		[Token(Token = "0x4000D57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 originalPos;

		[Token(Token = "0x6000B07")]
		[Address(RVA = "0xC59280", Offset = "0xC59280", VA = "0xC59280")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000B08")]
		[Address(RVA = "0xC59310", Offset = "0xC59310", VA = "0xC59310")]
		private void ScheduleNextPlay()
		{
		}

		[Token(Token = "0x6000B09")]
		[Address(RVA = "0xC59378", Offset = "0xC59378", VA = "0xC59378")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000B0A")]
		[Address(RVA = "0xC59380", Offset = "0xC59380", VA = "0xC59380")]
		private void PlayClip()
		{
		}

		[Token(Token = "0x6000B0B")]
		[Address(RVA = "0xC59498", Offset = "0xC59498", VA = "0xC59498")]
		public PlayRandomClip()
		{
		}
	}
	[Token(Token = "0x20001F2")]
	public class PlayTimelineFromMarker : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20003EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E7F28", Offset = "0x9E7F28")]
		private sealed class <>c
		{
			[Token(Token = "0x4001962")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001963")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<IMarker, double> <>9__3_0;

			[Token(Token = "0x60019F8")]
			[Address(RVA = "0xC597F4", Offset = "0xC597F4", VA = "0xC597F4")]
			public <>c()
			{
			}

			[Token(Token = "0x60019F9")]
			[Address(RVA = "0xC597FC", Offset = "0xC597FC", VA = "0xC597FC")]
			internal double <OnEnable>b__3_0(IMarker marker)
			{
				return default(double);
			}
		}

		[Token(Token = "0x4000D58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static PlayTimelineFromMarker instance;

		[Token(Token = "0x4000D59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private IMarker[] markers;

		[Token(Token = "0x4000D5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private PlayableDirector playableDirector;

		[Token(Token = "0x6000B0C")]
		[Address(RVA = "0xC594A0", Offset = "0xC594A0", VA = "0xC594A0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000B0D")]
		[Address(RVA = "0xC59664", Offset = "0xC59664", VA = "0xC59664")]
		public static void Play(int markerIndex)
		{
		}

		[Token(Token = "0x6000B0E")]
		[Address(RVA = "0xC59784", Offset = "0xC59784", VA = "0xC59784")]
		public PlayTimelineFromMarker()
		{
		}
	}
	[Token(Token = "0x20001F3")]
	public class PlayUiAudio : MonoBehaviour
	{
		[Token(Token = "0x4000D5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool playOnEnable;

		[Token(Token = "0x4000D5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public SfxUI sfx;

		[Token(Token = "0x6000B0F")]
		[Address(RVA = "0xC598A8", Offset = "0xC598A8", VA = "0xC598A8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000B10")]
		[Address(RVA = "0xC598C4", Offset = "0xC598C4", VA = "0xC598C4")]
		public PlayUiAudio()
		{
		}
	}
	[Token(Token = "0x20001F4")]
	public class DisableNonXrCameras : MonoBehaviour
	{
		[Token(Token = "0x6000B11")]
		[Address(RVA = "0xC02EE4", Offset = "0xC02EE4", VA = "0xC02EE4")]
		private void Start()
		{
		}

		[Token(Token = "0x6000B12")]
		[Address(RVA = "0xC02EE8", Offset = "0xC02EE8", VA = "0xC02EE8")]
		public void Init()
		{
		}

		[Token(Token = "0x6000B13")]
		[Address(RVA = "0xC03028", Offset = "0xC03028", VA = "0xC03028")]
		public DisableNonXrCameras()
		{
		}
	}
	[Token(Token = "0x20001F5")]
	public class DisableOtherAudioListeners : MonoBehaviour
	{
		[Token(Token = "0x6000B14")]
		[Address(RVA = "0xC03030", Offset = "0xC03030", VA = "0xC03030")]
		private void Start()
		{
		}

		[Token(Token = "0x6000B15")]
		[Address(RVA = "0xC03034", Offset = "0xC03034", VA = "0xC03034")]
		public void Init()
		{
		}

		[Token(Token = "0x6000B16")]
		[Address(RVA = "0xC03188", Offset = "0xC03188", VA = "0xC03188")]
		public DisableOtherAudioListeners()
		{
		}
	}
	[Token(Token = "0x20001F6")]
	public class Door : MonoBehaviour
	{
		[Token(Token = "0x20003ED")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E7F38", Offset = "0x9E7F38")]
		private sealed class <CloseDoor>d__7 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001964")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001965")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001966")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Door <>4__this;

			[Token(Token = "0x1700025B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60019FD")]
				[Address(RVA = "0xC0408C", Offset = "0xC0408C", VA = "0xC0408C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700025C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60019FF")]
				[Address(RVA = "0xC040F4", Offset = "0xC040F4", VA = "0xC040F4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60019FA")]
			[Address(RVA = "0xC03F00", Offset = "0xC03F00", VA = "0xC03F00")]
			[DebuggerHidden]
			public <CloseDoor>d__7(int <>1__state)
			{
			}

			[Token(Token = "0x60019FB")]
			[Address(RVA = "0xC03F34", Offset = "0xC03F34", VA = "0xC03F34", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60019FC")]
			[Address(RVA = "0xC03F38", Offset = "0xC03F38", VA = "0xC03F38", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60019FE")]
			[Address(RVA = "0xC04094", Offset = "0xC04094", VA = "0xC04094", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000D5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Animator m_animator;

		[Token(Token = "0x4000D5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Coroutine m_coroutine;

		[Token(Token = "0x4000D5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool m_waitingHolder;

		[Token(Token = "0x4000D60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject highlightObject;

		[Token(Token = "0x6000B17")]
		[Address(RVA = "0xC03CC0", Offset = "0xC03CC0", VA = "0xC03CC0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000B18")]
		[Address(RVA = "0xC03D58", Offset = "0xC03D58", VA = "0xC03D58")]
		public void OnHoverEnter()
		{
		}

		[Token(Token = "0x6000B19")]
		[Address(RVA = "0xC03E3C", Offset = "0xC03E3C", VA = "0xC03E3C")]
		public void OnHoverExit()
		{
		}

		[Token(Token = "0x6000B1A")]
		[Address(RVA = "0xC03E84", Offset = "0xC03E84", VA = "0xC03E84")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9EFEF8", Offset = "0x9EFEF8")]
		private IEnumerator CloseDoor()
		{
			return null;
		}

		[Token(Token = "0x6000B1B")]
		[Address(RVA = "0xC03F2C", Offset = "0xC03F2C", VA = "0xC03F2C")]
		public Door()
		{
		}
	}
	[Token(Token = "0x20001F7")]
	public class Fader : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20003EE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E7F48", Offset = "0x9E7F48")]
		private sealed class <>c
		{
			[Token(Token = "0x4001967")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001968")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static TweenCallback <>9__10_0;

			[Token(Token = "0x4001969")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static TweenCallback <>9__10_1;

			[Token(Token = "0x6001A01")]
			[Address(RVA = "0xD8A39C", Offset = "0xD8A39C", VA = "0xD8A39C")]
			public <>c()
			{
			}

			[Token(Token = "0x6001A02")]
			[Address(RVA = "0xD8A3A4", Offset = "0xD8A3A4", VA = "0xD8A3A4")]
			internal void <DoFade>b__10_0()
			{
			}

			[Token(Token = "0x6001A03")]
			[Address(RVA = "0xD8A400", Offset = "0xD8A400", VA = "0xD8A400")]
			internal void <DoFade>b__10_1()
			{
			}
		}

		[Token(Token = "0x4000D61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Color colorFadeOut;

		[Token(Token = "0x4000D62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Color colorFadeIn;

		[Token(Token = "0x4000D63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Fader instance;

		[Token(Token = "0x4000D64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Material fadeMat;

		[Token(Token = "0x4000D65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Tween fadeTween;

		[Token(Token = "0x4000D66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static UnityEvent OnFadeInComplete;

		[Token(Token = "0x4000D67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static UnityEvent OnFadeOutComplete;

		[Token(Token = "0x6000B1C")]
		[Address(RVA = "0xD89F18", Offset = "0xD89F18", VA = "0xD89F18")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000B1D")]
		[Address(RVA = "0xD8A030", Offset = "0xD8A030", VA = "0xD8A030")]
		public static void FadeIn(float time)
		{
		}

		[Token(Token = "0x6000B1E")]
		[Address(RVA = "0xD8A2C0", Offset = "0xD8A2C0", VA = "0xD8A2C0")]
		public static void FadeOut(float time)
		{
		}

		[Token(Token = "0x6000B1F")]
		[Address(RVA = "0xD8A09C", Offset = "0xD8A09C", VA = "0xD8A09C")]
		private void DoFade(float time, bool isFadeOut)
		{
		}

		[Token(Token = "0x6000B20")]
		[Address(RVA = "0xD8A32C", Offset = "0xD8A32C", VA = "0xD8A32C")]
		public Fader()
		{
		}
	}
	[Token(Token = "0x20001F8")]
	public class InitializeCanvasses : MonoBehaviour
	{
		[Token(Token = "0x4000D68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Canvas[] canvasses;

		[Token(Token = "0x6000B21")]
		[Address(RVA = "0xCA2FA8", Offset = "0xCA2FA8", VA = "0xCA2FA8")]
		private void Start()
		{
		}

		[Token(Token = "0x6000B22")]
		[Address(RVA = "0xCA2FAC", Offset = "0xCA2FAC", VA = "0xCA2FAC")]
		public void Init()
		{
		}

		[Token(Token = "0x6000B23")]
		[Address(RVA = "0xCA3098", Offset = "0xCA3098", VA = "0xCA3098")]
		public InitializeCanvasses()
		{
		}
	}
	[Token(Token = "0x20001F9")]
	public enum PlayerSetting
	{
		[Token(Token = "0x4000D6A")]
		oneHandedReeling,
		[Token(Token = "0x4000D6B")]
		globalTeleport,
		[Token(Token = "0x4000D6C")]
		showFishingUI,
		[Token(Token = "0x4000D6D")]
		playerHeight,
		[Token(Token = "0x4000D6E")]
		showLureBeam,
		[Token(Token = "0x4000D6F")]
		showLureRing,
		[Token(Token = "0x4000D70")]
		musicVolume,
		[Token(Token = "0x4000D71")]
		showFishFinder,
		[Token(Token = "0x4000D72")]
		languageSetting
	}
	[Token(Token = "0x20001FA")]
	public static class PlayerSettings
	{
		[Token(Token = "0x4000D73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool oneHandedReeling;

		[Token(Token = "0x4000D74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		private static bool showFishingUI;

		[Token(Token = "0x4000D75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static float playerHeight;

		[Token(Token = "0x4000D76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static float musicVolume;

		[Token(Token = "0x4000D77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private static bool showLureBeam;

		[Token(Token = "0x4000D78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD")]
		private static bool showLureRing;

		[Token(Token = "0x4000D79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE")]
		private static bool showFishFinder;

		[Token(Token = "0x170000EF")]
		public static bool OneHandedReeling
		{
			[Token(Token = "0x6000B24")]
			[Address(RVA = "0xC62E94", Offset = "0xC62E94", VA = "0xC62E94")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000B25")]
			[Address(RVA = "0xC62EFC", Offset = "0xC62EFC", VA = "0xC62EFC")]
			set
			{
			}
		}

		[Token(Token = "0x170000F0")]
		public static bool ShowFishingUI
		{
			[Token(Token = "0x6000B26")]
			[Address(RVA = "0xC62F74", Offset = "0xC62F74", VA = "0xC62F74")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000B27")]
			[Address(RVA = "0xC62FDC", Offset = "0xC62FDC", VA = "0xC62FDC")]
			set
			{
			}
		}

		[Token(Token = "0x170000F1")]
		public static float PlayerHeight
		{
			[Token(Token = "0x6000B28")]
			[Address(RVA = "0xC63054", Offset = "0xC63054", VA = "0xC63054")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000B29")]
			[Address(RVA = "0xC630BC", Offset = "0xC630BC", VA = "0xC630BC")]
			set
			{
			}
		}

		[Token(Token = "0x170000F2")]
		public static float MusicVolume
		{
			[Token(Token = "0x6000B2A")]
			[Address(RVA = "0xC63138", Offset = "0xC63138", VA = "0xC63138")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000B2B")]
			[Address(RVA = "0xC631A0", Offset = "0xC631A0", VA = "0xC631A0")]
			set
			{
			}
		}

		[Token(Token = "0x170000F3")]
		public static bool ShowLureBeam
		{
			[Token(Token = "0x6000B2C")]
			[Address(RVA = "0xC6321C", Offset = "0xC6321C", VA = "0xC6321C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000B2D")]
			[Address(RVA = "0xC63284", Offset = "0xC63284", VA = "0xC63284")]
			set
			{
			}
		}

		[Token(Token = "0x170000F4")]
		public static bool ShowLureRing
		{
			[Token(Token = "0x6000B2E")]
			[Address(RVA = "0xC632FC", Offset = "0xC632FC", VA = "0xC632FC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000B2F")]
			[Address(RVA = "0xC63364", Offset = "0xC63364", VA = "0xC63364")]
			set
			{
			}
		}

		[Token(Token = "0x170000F5")]
		public static bool ShowFishFinder
		{
			[Token(Token = "0x6000B30")]
			[Address(RVA = "0xC633DC", Offset = "0xC633DC", VA = "0xC633DC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000B31")]
			[Address(RVA = "0xC63444", Offset = "0xC63444", VA = "0xC63444")]
			set
			{
			}
		}
	}
	[Token(Token = "0x20001FB")]
	public class Portal : MonoBehaviour
	{
		[Token(Token = "0x4000D7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LocationSO TargetLocation;

		[Token(Token = "0x4000D7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Sequence m_sequence;

		[Token(Token = "0x4000D7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool isOpen;

		[Token(Token = "0x6000B33")]
		[Address(RVA = "0xC66208", Offset = "0xC66208", VA = "0xC66208")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000B34")]
		[Address(RVA = "0xC6620C", Offset = "0xC6620C", VA = "0xC6620C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000B35")]
		[Address(RVA = "0xC66210", Offset = "0xC66210", VA = "0xC66210")]
		public void OnHoverEnter()
		{
		}

		[Token(Token = "0x6000B36")]
		[Address(RVA = "0xC6627C", Offset = "0xC6627C", VA = "0xC6627C")]
		public void OnHoverExit()
		{
		}

		[Token(Token = "0x6000B37")]
		[Address(RVA = "0xC662E8", Offset = "0xC662E8", VA = "0xC662E8")]
		public void OnSelectEnter()
		{
		}

		[Token(Token = "0x6000B38")]
		[Address(RVA = "0xC66354", Offset = "0xC66354", VA = "0xC66354")]
		public void OnSelectExit()
		{
		}

		[Token(Token = "0x6000B39")]
		[Address(RVA = "0xC66404", Offset = "0xC66404", VA = "0xC66404")]
		public Portal()
		{
		}
	}
	[Token(Token = "0x20001FC")]
	public class SceneLoadManager : MonoBehaviour
	{
		[Token(Token = "0x20003EF")]
		public delegate void SceneLoadAction();

		[Token(Token = "0x20003F0")]
		public delegate void HideHandsEvent();

		[Token(Token = "0x20003F1")]
		public delegate void ShowHandsEvent();

		[Token(Token = "0x20003F2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E7F58", Offset = "0x9E7F58")]
		private sealed class <LoadFishing>d__59 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400196A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400196B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400196C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SceneLoadManager <>4__this;

			[Token(Token = "0x400196D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private AsyncOperation <asyncLoad>5__2;

			[Token(Token = "0x1700025D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001A13")]
				[Address(RVA = "0xCEB434", Offset = "0xCEB434", VA = "0xCEB434", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700025E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001A15")]
				[Address(RVA = "0xCEB49C", Offset = "0xCEB49C", VA = "0xCEB49C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001A10")]
			[Address(RVA = "0xCE870C", Offset = "0xCE870C", VA = "0xCE870C")]
			[DebuggerHidden]
			public <LoadFishing>d__59(int <>1__state)
			{
			}

			[Token(Token = "0x6001A11")]
			[Address(RVA = "0xCEB324", Offset = "0xCEB324", VA = "0xCEB324", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001A12")]
			[Address(RVA = "0xCEB328", Offset = "0xCEB328", VA = "0xCEB328", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001A14")]
			[Address(RVA = "0xCEB43C", Offset = "0xCEB43C", VA = "0xCEB43C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20003F3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E7F68", Offset = "0x9E7F68")]
		private sealed class <LoadDebug>d__61 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400196E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400196F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001970")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SceneLoadManager <>4__this;

			[Token(Token = "0x4001971")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private AsyncOperation <asyncLoad>5__2;

			[Token(Token = "0x1700025F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001A19")]
				[Address(RVA = "0xCEAF88", Offset = "0xCEAF88", VA = "0xCEAF88", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000260")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001A1B")]
				[Address(RVA = "0xCEAFF0", Offset = "0xCEAFF0", VA = "0xCEAFF0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001A16")]
			[Address(RVA = "0xCE87B4", Offset = "0xCE87B4", VA = "0xCE87B4")]
			[DebuggerHidden]
			public <LoadDebug>d__61(int <>1__state)
			{
			}

			[Token(Token = "0x6001A17")]
			[Address(RVA = "0xCEAE78", Offset = "0xCEAE78", VA = "0xCEAE78", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001A18")]
			[Address(RVA = "0xCEAE7C", Offset = "0xCEAE7C", VA = "0xCEAE7C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001A1A")]
			[Address(RVA = "0xCEAF90", Offset = "0xCEAF90", VA = "0xCEAF90", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20003F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E7F78", Offset = "0x9E7F78")]
		private sealed class <>c__DisplayClass63_0
		{
			[Token(Token = "0x4001972")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SceneLoadManager <>4__this;

			[Token(Token = "0x4001973")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public AsyncOperation asyncLoad;

			[Token(Token = "0x6001A1C")]
			[Address(RVA = "0xCEA19C", Offset = "0xCEA19C", VA = "0xCEA19C")]
			public <>c__DisplayClass63_0()
			{
			}

			[Token(Token = "0x6001A1D")]
			[Address(RVA = "0xCEA1A4", Offset = "0xCEA1A4", VA = "0xCEA1A4")]
			internal bool <LoadEnviron>b__0()
			{
				return default(bool);
			}

			[Token(Token = "0x6001A1E")]
			[Address(RVA = "0xCEA1D8", Offset = "0xCEA1D8", VA = "0xCEA1D8")]
			internal bool <LoadEnviron>b__1()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20003F5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E7F88", Offset = "0x9E7F88")]
		private sealed class <LoadEnviron>d__63 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001974")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001975")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001976")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SceneLoadManager <>4__this;

			[Token(Token = "0x4001977")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private <>c__DisplayClass63_0 <>8__1;

			[Token(Token = "0x17000261")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001A22")]
				[Address(RVA = "0xCEB2B4", Offset = "0xCEB2B4", VA = "0xCEB2B4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000262")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001A24")]
				[Address(RVA = "0xCEB31C", Offset = "0xCEB31C", VA = "0xCEB31C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001A1F")]
			[Address(RVA = "0xCE885C", Offset = "0xCE885C", VA = "0xCE885C")]
			[DebuggerHidden]
			public <LoadEnviron>d__63(int <>1__state)
			{
			}

			[Token(Token = "0x6001A20")]
			[Address(RVA = "0xCEAFF8", Offset = "0xCEAFF8", VA = "0xCEAFF8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001A21")]
			[Address(RVA = "0xCEAFFC", Offset = "0xCEAFFC", VA = "0xCEAFFC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001A23")]
			[Address(RVA = "0xCEB2BC", Offset = "0xCEB2BC", VA = "0xCEB2BC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20003F6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E7F98", Offset = "0x9E7F98")]
		private sealed class <AllDone>d__64 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001978")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001979")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400197A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SceneLoadManager <>4__this;

			[Token(Token = "0x17000263")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001A28")]
				[Address(RVA = "0xCEA7E4", Offset = "0xCEA7E4", VA = "0xCEA7E4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000264")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001A2A")]
				[Address(RVA = "0xCEA84C", Offset = "0xCEA84C", VA = "0xCEA84C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001A25")]
			[Address(RVA = "0xCE8888", Offset = "0xCE8888", VA = "0xCE8888")]
			[DebuggerHidden]
			public <AllDone>d__64(int <>1__state)
			{
			}

			[Token(Token = "0x6001A26")]
			[Address(RVA = "0xCEA528", Offset = "0xCEA528", VA = "0xCEA528", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001A27")]
			[Address(RVA = "0xCEA52C", Offset = "0xCEA52C", VA = "0xCEA52C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001A29")]
			[Address(RVA = "0xCEA7EC", Offset = "0xCEA7EC", VA = "0xCEA7EC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20003F7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E7FA8", Offset = "0x9E7FA8")]
		private sealed class <AfterInit>d__67 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400197B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400197C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400197D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SceneLoadManager <>4__this;

			[Token(Token = "0x400197E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private AsyncOperation <async>5__2;

			[Token(Token = "0x17000265")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001A2E")]
				[Address(RVA = "0xCEA4B8", Offset = "0xCEA4B8", VA = "0xCEA4B8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000266")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001A30")]
				[Address(RVA = "0xCEA520", Offset = "0xCEA520", VA = "0xCEA520", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001A2B")]
			[Address(RVA = "0xCE8A78", Offset = "0xCE8A78", VA = "0xCE8A78")]
			[DebuggerHidden]
			public <AfterInit>d__67(int <>1__state)
			{
			}

			[Token(Token = "0x6001A2C")]
			[Address(RVA = "0xCEA218", Offset = "0xCEA218", VA = "0xCEA218", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001A2D")]
			[Address(RVA = "0xCEA21C", Offset = "0xCEA21C", VA = "0xCEA21C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001A2F")]
			[Address(RVA = "0xCEA4C0", Offset = "0xCEA4C0", VA = "0xCEA4C0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20003F8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E7FB8", Offset = "0x9E7FB8")]
		private sealed class <SequentialUnloadLoad>d__71 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400197F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001980")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001981")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SceneLoadManager <>4__this;

			[Token(Token = "0x17000267")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001A34")]
				[Address(RVA = "0xCEB798", Offset = "0xCEB798", VA = "0xCEB798", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000268")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001A36")]
				[Address(RVA = "0xCEB800", Offset = "0xCEB800", VA = "0xCEB800", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001A31")]
			[Address(RVA = "0xCE92D0", Offset = "0xCE92D0", VA = "0xCE92D0")]
			[DebuggerHidden]
			public <SequentialUnloadLoad>d__71(int <>1__state)
			{
			}

			[Token(Token = "0x6001A32")]
			[Address(RVA = "0xCEB4A4", Offset = "0xCEB4A4", VA = "0xCEB4A4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001A33")]
			[Address(RVA = "0xCEB4A8", Offset = "0xCEB4A8", VA = "0xCEB4A8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001A35")]
			[Address(RVA = "0xCEB7A0", Offset = "0xCEB7A0", VA = "0xCEB7A0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20003F9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E7FC8", Offset = "0x9E7FC8")]
		private sealed class <>c__DisplayClass73_0
		{
			[Token(Token = "0x4001982")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public AsyncOperation asyncUnload;

			[Token(Token = "0x6001A37")]
			[Address(RVA = "0xCEA1F4", Offset = "0xCEA1F4", VA = "0xCEA1F4")]
			public <>c__DisplayClass73_0()
			{
			}

			[Token(Token = "0x6001A38")]
			[Address(RVA = "0xCEA1FC", Offset = "0xCEA1FC", VA = "0xCEA1FC")]
			internal bool <Unload>b__0()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20003FA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E7FD8", Offset = "0x9E7FD8")]
		private sealed class <Unload>d__73 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001983")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001984")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001985")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string sceneName;

			[Token(Token = "0x4001986")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public SceneLoadManager <>4__this;

			[Token(Token = "0x4001987")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private AsyncOperation <async>5__2;

			[Token(Token = "0x17000269")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001A3C")]
				[Address(RVA = "0xCEBB2C", Offset = "0xCEBB2C", VA = "0xCEBB2C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700026A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001A3E")]
				[Address(RVA = "0xCEBB94", Offset = "0xCEBB94", VA = "0xCEBB94", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001A39")]
			[Address(RVA = "0xCE93C0", Offset = "0xCE93C0", VA = "0xCE93C0")]
			[DebuggerHidden]
			public <Unload>d__73(int <>1__state)
			{
			}

			[Token(Token = "0x6001A3A")]
			[Address(RVA = "0xCEB808", Offset = "0xCEB808", VA = "0xCEB808", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001A3B")]
			[Address(RVA = "0xCEB80C", Offset = "0xCEB80C", VA = "0xCEB80C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001A3D")]
			[Address(RVA = "0xCEBB34", Offset = "0xCEBB34", VA = "0xCEBB34", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20003FB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E7FE8", Offset = "0x9E7FE8")]
		private sealed class <CheckOutroVideoDone>d__81 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001988")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001989")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400198A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SceneLoadManager <>4__this;

			[Token(Token = "0x1700026B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001A42")]
				[Address(RVA = "0xCEAE08", Offset = "0xCEAE08", VA = "0xCEAE08", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700026C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001A44")]
				[Address(RVA = "0xCEAE70", Offset = "0xCEAE70", VA = "0xCEAE70", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001A3F")]
			[Address(RVA = "0xCEA098", Offset = "0xCEA098", VA = "0xCEA098")]
			[DebuggerHidden]
			public <CheckOutroVideoDone>d__81(int <>1__state)
			{
			}

			[Token(Token = "0x6001A40")]
			[Address(RVA = "0xCEA854", Offset = "0xCEA854", VA = "0xCEA854", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001A41")]
			[Address(RVA = "0xCEA858", Offset = "0xCEA858", VA = "0xCEA858", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001A43")]
			[Address(RVA = "0xCEAE10", Offset = "0xCEAE10", VA = "0xCEAE10", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000D7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool fishingDone;

		[Token(Token = "0x4000D7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool environDone;

		[Token(Token = "0x4000D7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		private bool loadingScreenActive;

		[Token(Token = "0x4000D80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
		private bool debugDone;

		[Token(Token = "0x4000D81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public InitializeCanvasses initCanvas;

		[Token(Token = "0x4000D82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public DisableNonXrCameras disableCams;

		[Token(Token = "0x4000D83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public DisableOtherAudioListeners disableAL;

		[Token(Token = "0x4000D84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string fishingSceneName;

		[Token(Token = "0x4000D85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool locationIsChanging;

		[Token(Token = "0x4000D86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static SceneLoadManager instance;

		[Token(Token = "0x4000D87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private LocationSO playerShip;

		[Token(Token = "0x4000D88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private LocationSO aquarium;

		[Token(Token = "0x4000D89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private LocationSO startingLocation;

		[Token(Token = "0x4000D8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private LocationSO[] locations;

		[Token(Token = "0x4000D8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public GameObject loadingScreen;

		[Token(Token = "0x4000D8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Localize loadingScreenTip;

		[Token(Token = "0x4000D8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Material loadingScreenSkybox;

		[Token(Token = "0x4000D8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Material W2C_Skybox;

		[Token(Token = "0x4000D8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Color W2C_SkyColor;

		[Token(Token = "0x4000D90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Scene W2C_ActiveScene;

		[Token(Token = "0x4000D91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public List<Sprite> loadingScreenImages;

		[Token(Token = "0x4000D92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public List<string> loadingScreenTips;

		[Token(Token = "0x4000D93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public float loadingScreenRenderScale;

		[Token(Token = "0x4000D94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9EAA80", Offset = "0x9EAA80")]
		public GameObject notificationUI;

		[Token(Token = "0x4000D95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9EAAB8", Offset = "0x9EAAB8")]
		public LocationSO destination;

		[Token(Token = "0x4000D96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9EAAF0", Offset = "0x9EAAF0")]
		public bool sceneOverride;

		[Token(Token = "0x4000D97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC9")]
		public bool showFps;

		[Token(Token = "0x4000D99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCA")]
		private bool fromSceneLoaderScene;

		[Token(Token = "0x4000D9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCB")]
		private bool unloadCompleted;

		[Token(Token = "0x4000D9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		private bool fishingVFXPrewarmed;

		[Token(Token = "0x4000D9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static bool canShowHands;

		[Token(Token = "0x4000D9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static bool isFading;

		[Token(Token = "0x4000DA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCD")]
		private bool outroIsPlaying;

		[Token(Token = "0x4000DA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public VideoPlayer player;

		[Token(Token = "0x4000DA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private VideoClip OutroEnglish;

		[Token(Token = "0x4000DA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private VideoClip OutroChinese;

		[Token(Token = "0x170000F6")]
		public static bool LocationIsChanging
		{
			[Token(Token = "0x6000B3A")]
			[Address(RVA = "0xCE2F84", Offset = "0xCE2F84", VA = "0xCE2F84")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000F7")]
		public static LocationSO PlayerShip
		{
			[Token(Token = "0x6000B3B")]
			[Address(RVA = "0xCE7700", Offset = "0xCE7700", VA = "0xCE7700")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F8")]
		public static LocationSO Aquarium
		{
			[Token(Token = "0x6000B3C")]
			[Address(RVA = "0xCE7774", Offset = "0xCE7774", VA = "0xCE7774")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x14000010")]
		public static event SceneLoadAction OnSceneLoad
		{
			[Token(Token = "0x6000B3D")]
			[Address(RVA = "0xCE77E8", Offset = "0xCE77E8", VA = "0xCE77E8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EFF5C", Offset = "0x9EFF5C")]
			add
			{
			}
			[Token(Token = "0x6000B3E")]
			[Address(RVA = "0xCE78D8", Offset = "0xCE78D8", VA = "0xCE78D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EFF6C", Offset = "0x9EFF6C")]
			remove
			{
			}
		}

		[Token(Token = "0x14000011")]
		public static event HideHandsEvent HideHands
		{
			[Token(Token = "0x6000B3F")]
			[Address(RVA = "0xCE79C8", Offset = "0xCE79C8", VA = "0xCE79C8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EFF7C", Offset = "0x9EFF7C")]
			add
			{
			}
			[Token(Token = "0x6000B40")]
			[Address(RVA = "0xCE7AB8", Offset = "0xCE7AB8", VA = "0xCE7AB8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EFF8C", Offset = "0x9EFF8C")]
			remove
			{
			}
		}

		[Token(Token = "0x14000012")]
		public static event ShowHandsEvent ShowHands
		{
			[Token(Token = "0x6000B41")]
			[Address(RVA = "0xCE7BA8", Offset = "0xCE7BA8", VA = "0xCE7BA8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EFF9C", Offset = "0x9EFF9C")]
			add
			{
			}
			[Token(Token = "0x6000B42")]
			[Address(RVA = "0xCE7C98", Offset = "0xCE7C98", VA = "0xCE7C98")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EFFAC", Offset = "0x9EFFAC")]
			remove
			{
			}
		}

		[Token(Token = "0x6000B43")]
		[Address(RVA = "0xCE7D88", Offset = "0xCE7D88", VA = "0xCE7D88")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000B44")]
		[Address(RVA = "0xCE7E00", Offset = "0xCE7E00", VA = "0xCE7E00")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000B45")]
		[Address(RVA = "0xCE7F40", Offset = "0xCE7F40", VA = "0xCE7F40")]
		private void Start()
		{
		}

		[Token(Token = "0x6000B46")]
		[Address(RVA = "0xCE844C", Offset = "0xCE844C", VA = "0xCE844C")]
		private LocationSO GetDestinationFromLocationBCID(string locationBCID)
		{
			return null;
		}

		[Token(Token = "0x6000B47")]
		[Address(RVA = "0xCE84F8", Offset = "0xCE84F8", VA = "0xCE84F8")]
		private void LoadFishingScene()
		{
		}

		[Token(Token = "0x6000B48")]
		[Address(RVA = "0xCE8690", Offset = "0xCE8690", VA = "0xCE8690")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9EFFBC", Offset = "0x9EFFBC")]
		private IEnumerator LoadFishing()
		{
			return null;
		}

		[Token(Token = "0x6000B49")]
		[Address(RVA = "0xCE85AC", Offset = "0xCE85AC", VA = "0xCE85AC")]
		private void LoadDebugScene()
		{
		}

		[Token(Token = "0x6000B4A")]
		[Address(RVA = "0xCE8738", Offset = "0xCE8738", VA = "0xCE8738")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9F0020", Offset = "0x9F0020")]
		private IEnumerator LoadDebug()
		{
			return null;
		}

		[Token(Token = "0x6000B4B")]
		[Address(RVA = "0xCE8664", Offset = "0xCE8664", VA = "0xCE8664")]
		private void LoadEnvironmentScene()
		{
		}

		[Token(Token = "0x6000B4C")]
		[Address(RVA = "0xCE87E0", Offset = "0xCE87E0", VA = "0xCE87E0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9F0084", Offset = "0x9F0084")]
		private IEnumerator LoadEnviron()
		{
			return null;
		}

		[Token(Token = "0x6000B4D")]
		[Address(RVA = "0xCE83D0", Offset = "0xCE83D0", VA = "0xCE83D0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9F00E8", Offset = "0x9F00E8")]
		private IEnumerator AllDone()
		{
			return null;
		}

		[Token(Token = "0x6000B4E")]
		[Address(RVA = "0xCE88B4", Offset = "0xCE88B4", VA = "0xCE88B4")]
		private void InitAll()
		{
		}

		[Token(Token = "0x6000B4F")]
		[Address(RVA = "0xCE81F4", Offset = "0xCE81F4", VA = "0xCE81F4")]
		private void InitAllSceneOverride()
		{
		}

		[Token(Token = "0x6000B50")]
		[Address(RVA = "0xCE89FC", Offset = "0xCE89FC", VA = "0xCE89FC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9F014C", Offset = "0x9F014C")]
		private IEnumerator AfterInit()
		{
			return null;
		}

		[Token(Token = "0x6000B51")]
		[Address(RVA = "0xCE8AA4", Offset = "0xCE8AA4", VA = "0xCE8AA4")]
		private void FadeFinished()
		{
		}

		[Token(Token = "0x6000B52")]
		[Address(RVA = "0xCE8B10", Offset = "0xCE8B10", VA = "0xCE8B10")]
		public void ChangeLocation(LocationSO loc)
		{
		}

		[Token(Token = "0x6000B53")]
		[Address(RVA = "0xCE8D38", Offset = "0xCE8D38", VA = "0xCE8D38")]
		private void SetEnvironScene()
		{
		}

		[Token(Token = "0x6000B54")]
		[Address(RVA = "0xCE9254", Offset = "0xCE9254", VA = "0xCE9254")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9F01B0", Offset = "0x9F01B0")]
		private IEnumerator SequentialUnloadLoad()
		{
			return null;
		}

		[Token(Token = "0x6000B55")]
		[Address(RVA = "0xCE92FC", Offset = "0xCE92FC", VA = "0xCE92FC")]
		public void UnloadScene(string sceneName)
		{
		}

		[Token(Token = "0x6000B56")]
		[Address(RVA = "0xCE9328", Offset = "0xCE9328", VA = "0xCE9328")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9F0214", Offset = "0x9F0214")]
		public IEnumerator Unload(string sceneName)
		{
			return null;
		}

		[Token(Token = "0x6000B57")]
		[Address(RVA = "0xCE8240", Offset = "0xCE8240", VA = "0xCE8240")]
		private void UnloadAll()
		{
		}

		[Token(Token = "0x6000B58")]
		[Address(RVA = "0xCE9008", Offset = "0xCE9008", VA = "0xCE9008")]
		private void ShowLoadingScreen()
		{
		}

		[Token(Token = "0x6000B59")]
		[Address(RVA = "0xCE95F8", Offset = "0xCE95F8", VA = "0xCE95F8")]
		private void SelectLoadingScreenImage()
		{
		}

		[Token(Token = "0x6000B5A")]
		[Address(RVA = "0xCE9700", Offset = "0xCE9700", VA = "0xCE9700")]
		private void PrewarmFishingVFX()
		{
		}

		[Token(Token = "0x6000B5B")]
		[Address(RVA = "0xCE9B68", Offset = "0xCE9B68", VA = "0xCE9B68")]
		public static void PlayOutroVideo()
		{
		}

		[Token(Token = "0x6000B5C")]
		[Address(RVA = "0xCE9D0C", Offset = "0xCE9D0C", VA = "0xCE9D0C")]
		private void ShowVideoScreen()
		{
		}

		[Token(Token = "0x6000B5D")]
		[Address(RVA = "0xCEA090", Offset = "0xCEA090", VA = "0xCEA090")]
		private void ShortVid()
		{
		}

		[Token(Token = "0x6000B5E")]
		[Address(RVA = "0xCEA014", Offset = "0xCEA014", VA = "0xCEA014")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9F0278", Offset = "0x9F0278")]
		private IEnumerator CheckOutroVideoDone()
		{
			return null;
		}

		[Token(Token = "0x6000B5F")]
		[Address(RVA = "0xCEA0C4", Offset = "0xCEA0C4", VA = "0xCEA0C4")]
		private void OutroVideoFinished(VideoPlayer source)
		{
		}

		[Token(Token = "0x6000B60")]
		[Address(RVA = "0xCEA170", Offset = "0xCEA170", VA = "0xCEA170")]
		public SceneLoadManager()
		{
		}

		[Token(Token = "0x6000B62")]
		[Address(RVA = "0xCEA18C", Offset = "0xCEA18C", VA = "0xCEA18C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F02DC", Offset = "0x9F02DC")]
		private void <ChangeLocation>b__69_0()
		{
		}

		[Token(Token = "0x6000B63")]
		[Address(RVA = "0xCEA190", Offset = "0xCEA190", VA = "0xCEA190")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F02EC", Offset = "0x9F02EC")]
		private void <ShowLoadingScreen>b__75_0()
		{
		}
	}
	[Token(Token = "0x20001FD")]
	internal enum RaycastState
	{
		[Token(Token = "0x4000DA5")]
		Interact,
		[Token(Token = "0x4000DA6")]
		Teleport
	}
	[Token(Token = "0x20001FE")]
	public class TeleporationManager : MonoBehaviour
	{
		[Token(Token = "0x4000DA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private InputActionAsset m_actionAsset;

		[Token(Token = "0x4000DA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private TeleportationProvider m_teleportProvider;

		[Token(Token = "0x4000DA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private XRRayInteractor m_leftRay;

		[Token(Token = "0x4000DAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private XRRayInteractor m_rightRay;

		[Token(Token = "0x4000DAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private float m_RayDistance;

		[Token(Token = "0x4000DAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private XRRayInteractor m_currentRay;

		[Token(Token = "0x4000DAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private InputAction activateR;

		[Token(Token = "0x4000DAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private InputAction activateL;

		[Token(Token = "0x4000DAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private RaycastState rayState;

		[Token(Token = "0x4000DB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private bool isNavigating;

		[Token(Token = "0x170000F9")]
		public XRRayInteractor LeftRay
		{
			[Token(Token = "0x6000B64")]
			[Address(RVA = "0xC2EE9C", Offset = "0xC2EE9C", VA = "0xC2EE9C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000FA")]
		public XRRayInteractor RightRay
		{
			[Token(Token = "0x6000B65")]
			[Address(RVA = "0xC2EEA4", Offset = "0xC2EEA4", VA = "0xC2EEA4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B66")]
		[Address(RVA = "0xC2EEAC", Offset = "0xC2EEAC", VA = "0xC2EEAC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000B67")]
		[Address(RVA = "0xC2F238", Offset = "0xC2F238", VA = "0xC2F238")]
		private void Update()
		{
		}

		[Token(Token = "0x6000B68")]
		[Address(RVA = "0xC2F5EC", Offset = "0xC2F5EC", VA = "0xC2F5EC")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000B69")]
		[Address(RVA = "0xC2F734", Offset = "0xC2F734", VA = "0xC2F734")]
		private void OnInteractActive(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x6000B6A")]
		[Address(RVA = "0xC2F73C", Offset = "0xC2F73C", VA = "0xC2F73C")]
		private void OnTeleportActive(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x6000B6B")]
		[Address(RVA = "0xC2F93C", Offset = "0xC2F93C", VA = "0xC2F93C")]
		private bool IsAllowTeleport()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B6C")]
		[Address(RVA = "0xC2F0C8", Offset = "0xC2F0C8", VA = "0xC2F0C8")]
		public void EnableInteractMode(bool active)
		{
		}

		[Token(Token = "0x6000B6D")]
		[Address(RVA = "0xC2FBAC", Offset = "0xC2FBAC", VA = "0xC2FBAC")]
		public void SetRayActive(bool right, bool left)
		{
		}

		[Token(Token = "0x6000B6E")]
		[Address(RVA = "0xC2FBF8", Offset = "0xC2FBF8", VA = "0xC2FBF8")]
		public TeleporationManager()
		{
		}
	}
	[Token(Token = "0x20001FF")]
	public class XRInputSender : MonoBehaviour, XRIDefaultInputActions.IXRILeftHandActions, XRIDefaultInputActions.IXRIRightHandActions
	{
		[Token(Token = "0x20003FC")]
		public delegate void SelectEvent(InputAction.CallbackContext context);

		[Token(Token = "0x20003FD")]
		public delegate void ActivateEvent(InputAction.CallbackContext context);

		[Token(Token = "0x20003FE")]
		public delegate void BoostEvent(InputAction.CallbackContext context);

		[Token(Token = "0x20003FF")]
		public delegate void GrabHandleEvent(InputAction.CallbackContext context);

		[Token(Token = "0x2000400")]
		public delegate void SwitchPreviousLureEvent();

		[Token(Token = "0x2000401")]
		public delegate void SwitchNextLureEvent();

		[Token(Token = "0x2000402")]
		public delegate void SwitchRodEvent(int next);

		[Token(Token = "0x2000403")]
		public delegate void ResetEvent();

		[Token(Token = "0x2000404")]
		public delegate void TeleportEvent();

		[Token(Token = "0x2000405")]
		public delegate void MenuEvent();

		[Token(Token = "0x2000406")]
		public delegate void PickupEvent();

		[Token(Token = "0x2000407")]
		public delegate void AnimateLeftIndexEvent(float value);

		[Token(Token = "0x2000408")]
		public delegate void AnimateRightIndexEvent(float value);

		[Token(Token = "0x2000409")]
		public delegate void AnimateLeftFingersEvent(float value);

		[Token(Token = "0x200040A")]
		public delegate void AnimateRightFingersEvent(float value);

		[Token(Token = "0x200040B")]
		public delegate void AnimateLeftThumbEvent(bool down);

		[Token(Token = "0x200040C")]
		public delegate void AnimateRightThumbEvent(bool down);

		[Token(Token = "0x200040D")]
		public delegate void ThumbUpEvent();

		[Token(Token = "0x4000DB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public XRIDefaultInputActions inputActions;

		[Token(Token = "0x4000DB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool dialogAdvanceKeepoutActive;

		[Token(Token = "0x14000013")]
		public static event SelectEvent Select
		{
			[Token(Token = "0x6000B6F")]
			[Address(RVA = "0xD0686C", Offset = "0xD0686C", VA = "0xD0686C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F02FC", Offset = "0x9F02FC")]
			add
			{
			}
			[Token(Token = "0x6000B70")]
			[Address(RVA = "0xD06920", Offset = "0xD06920", VA = "0xD06920")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F030C", Offset = "0x9F030C")]
			remove
			{
			}
		}

		[Token(Token = "0x14000014")]
		public static event ActivateEvent Activate
		{
			[Token(Token = "0x6000B71")]
			[Address(RVA = "0xD069D4", Offset = "0xD069D4", VA = "0xD069D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F031C", Offset = "0x9F031C")]
			add
			{
			}
			[Token(Token = "0x6000B72")]
			[Address(RVA = "0xD06A8C", Offset = "0xD06A8C", VA = "0xD06A8C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F032C", Offset = "0x9F032C")]
			remove
			{
			}
		}

		[Token(Token = "0x14000015")]
		public static event BoostEvent Boost
		{
			[Token(Token = "0x6000B73")]
			[Address(RVA = "0xD06B44", Offset = "0xD06B44", VA = "0xD06B44")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F033C", Offset = "0x9F033C")]
			add
			{
			}
			[Token(Token = "0x6000B74")]
			[Address(RVA = "0xD06BFC", Offset = "0xD06BFC", VA = "0xD06BFC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F034C", Offset = "0x9F034C")]
			remove
			{
			}
		}

		[Token(Token = "0x14000016")]
		public static event GrabHandleEvent GrabHandle
		{
			[Token(Token = "0x6000B75")]
			[Address(RVA = "0xD06CB4", Offset = "0xD06CB4", VA = "0xD06CB4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F035C", Offset = "0x9F035C")]
			add
			{
			}
			[Token(Token = "0x6000B76")]
			[Address(RVA = "0xD06D6C", Offset = "0xD06D6C", VA = "0xD06D6C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F036C", Offset = "0x9F036C")]
			remove
			{
			}
		}

		[Token(Token = "0x14000017")]
		public static event SwitchPreviousLureEvent SwitchPreviousLure
		{
			[Token(Token = "0x6000B77")]
			[Address(RVA = "0xD06E24", Offset = "0xD06E24", VA = "0xD06E24")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F037C", Offset = "0x9F037C")]
			add
			{
			}
			[Token(Token = "0x6000B78")]
			[Address(RVA = "0xD06EDC", Offset = "0xD06EDC", VA = "0xD06EDC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F038C", Offset = "0x9F038C")]
			remove
			{
			}
		}

		[Token(Token = "0x14000018")]
		public static event SwitchNextLureEvent SwitchNextLure
		{
			[Token(Token = "0x6000B79")]
			[Address(RVA = "0xD06F94", Offset = "0xD06F94", VA = "0xD06F94")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F039C", Offset = "0x9F039C")]
			add
			{
			}
			[Token(Token = "0x6000B7A")]
			[Address(RVA = "0xD0704C", Offset = "0xD0704C", VA = "0xD0704C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F03AC", Offset = "0x9F03AC")]
			remove
			{
			}
		}

		[Token(Token = "0x14000019")]
		public static event SwitchRodEvent SwitchRod
		{
			[Token(Token = "0x6000B7B")]
			[Address(RVA = "0xD07104", Offset = "0xD07104", VA = "0xD07104")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F03BC", Offset = "0x9F03BC")]
			add
			{
			}
			[Token(Token = "0x6000B7C")]
			[Address(RVA = "0xD071BC", Offset = "0xD071BC", VA = "0xD071BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F03CC", Offset = "0x9F03CC")]
			remove
			{
			}
		}

		[Token(Token = "0x1400001A")]
		public static event ResetEvent Reset
		{
			[Token(Token = "0x6000B7D")]
			[Address(RVA = "0xD07274", Offset = "0xD07274", VA = "0xD07274")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F03DC", Offset = "0x9F03DC")]
			add
			{
			}
			[Token(Token = "0x6000B7E")]
			[Address(RVA = "0xD0732C", Offset = "0xD0732C", VA = "0xD0732C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F03EC", Offset = "0x9F03EC")]
			remove
			{
			}
		}

		[Token(Token = "0x1400001B")]
		public static event TeleportEvent Teleport
		{
			[Token(Token = "0x6000B7F")]
			[Address(RVA = "0xD073E4", Offset = "0xD073E4", VA = "0xD073E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F03FC", Offset = "0x9F03FC")]
			add
			{
			}
			[Token(Token = "0x6000B80")]
			[Address(RVA = "0xD0749C", Offset = "0xD0749C", VA = "0xD0749C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F040C", Offset = "0x9F040C")]
			remove
			{
			}
		}

		[Token(Token = "0x1400001C")]
		public static event MenuEvent Menu
		{
			[Token(Token = "0x6000B81")]
			[Address(RVA = "0xD07554", Offset = "0xD07554", VA = "0xD07554")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F041C", Offset = "0x9F041C")]
			add
			{
			}
			[Token(Token = "0x6000B82")]
			[Address(RVA = "0xD0760C", Offset = "0xD0760C", VA = "0xD0760C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F042C", Offset = "0x9F042C")]
			remove
			{
			}
		}

		[Token(Token = "0x1400001D")]
		public static event PickupEvent Pickup
		{
			[Token(Token = "0x6000B83")]
			[Address(RVA = "0xD076C4", Offset = "0xD076C4", VA = "0xD076C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F043C", Offset = "0x9F043C")]
			add
			{
			}
			[Token(Token = "0x6000B84")]
			[Address(RVA = "0xD0777C", Offset = "0xD0777C", VA = "0xD0777C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F044C", Offset = "0x9F044C")]
			remove
			{
			}
		}

		[Token(Token = "0x1400001E")]
		public static event AnimateLeftIndexEvent AnimateLeftIndex
		{
			[Token(Token = "0x6000B85")]
			[Address(RVA = "0xD07834", Offset = "0xD07834", VA = "0xD07834")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F045C", Offset = "0x9F045C")]
			add
			{
			}
			[Token(Token = "0x6000B86")]
			[Address(RVA = "0xD078EC", Offset = "0xD078EC", VA = "0xD078EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F046C", Offset = "0x9F046C")]
			remove
			{
			}
		}

		[Token(Token = "0x1400001F")]
		public static event AnimateRightIndexEvent AnimateRightIndex
		{
			[Token(Token = "0x6000B87")]
			[Address(RVA = "0xD079A4", Offset = "0xD079A4", VA = "0xD079A4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F047C", Offset = "0x9F047C")]
			add
			{
			}
			[Token(Token = "0x6000B88")]
			[Address(RVA = "0xD07A5C", Offset = "0xD07A5C", VA = "0xD07A5C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F048C", Offset = "0x9F048C")]
			remove
			{
			}
		}

		[Token(Token = "0x14000020")]
		public static event AnimateLeftFingersEvent AnimateLeftFingers
		{
			[Token(Token = "0x6000B89")]
			[Address(RVA = "0xD07B14", Offset = "0xD07B14", VA = "0xD07B14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F049C", Offset = "0x9F049C")]
			add
			{
			}
			[Token(Token = "0x6000B8A")]
			[Address(RVA = "0xD07BCC", Offset = "0xD07BCC", VA = "0xD07BCC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F04AC", Offset = "0x9F04AC")]
			remove
			{
			}
		}

		[Token(Token = "0x14000021")]
		public static event AnimateRightFingersEvent AnimateRightFingers
		{
			[Token(Token = "0x6000B8B")]
			[Address(RVA = "0xD07C84", Offset = "0xD07C84", VA = "0xD07C84")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F04BC", Offset = "0x9F04BC")]
			add
			{
			}
			[Token(Token = "0x6000B8C")]
			[Address(RVA = "0xD07D3C", Offset = "0xD07D3C", VA = "0xD07D3C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F04CC", Offset = "0x9F04CC")]
			remove
			{
			}
		}

		[Token(Token = "0x14000022")]
		public static event AnimateLeftThumbEvent AnimateLeftThumb
		{
			[Token(Token = "0x6000B8D")]
			[Address(RVA = "0xD07DF4", Offset = "0xD07DF4", VA = "0xD07DF4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F04DC", Offset = "0x9F04DC")]
			add
			{
			}
			[Token(Token = "0x6000B8E")]
			[Address(RVA = "0xD07EAC", Offset = "0xD07EAC", VA = "0xD07EAC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F04EC", Offset = "0x9F04EC")]
			remove
			{
			}
		}

		[Token(Token = "0x14000023")]
		public static event AnimateRightThumbEvent AnimateRightThumb
		{
			[Token(Token = "0x6000B8F")]
			[Address(RVA = "0xD07F64", Offset = "0xD07F64", VA = "0xD07F64")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F04FC", Offset = "0x9F04FC")]
			add
			{
			}
			[Token(Token = "0x6000B90")]
			[Address(RVA = "0xD0801C", Offset = "0xD0801C", VA = "0xD0801C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F050C", Offset = "0x9F050C")]
			remove
			{
			}
		}

		[Token(Token = "0x14000024")]
		public static event ThumbUpEvent ThumbUp
		{
			[Token(Token = "0x6000B91")]
			[Address(RVA = "0xD080D4", Offset = "0xD080D4", VA = "0xD080D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F051C", Offset = "0x9F051C")]
			add
			{
			}
			[Token(Token = "0x6000B92")]
			[Address(RVA = "0xD0818C", Offset = "0xD0818C", VA = "0xD0818C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F052C", Offset = "0x9F052C")]
			remove
			{
			}
		}

		[Token(Token = "0x6000B93")]
		[Address(RVA = "0xD08244", Offset = "0xD08244", VA = "0xD08244")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000B94")]
		[Address(RVA = "0xD082B8", Offset = "0xD082B8", VA = "0xD082B8")]
		private void Start()
		{
		}

		[Token(Token = "0x6000B95")]
		[Address(RVA = "0xD0839C", Offset = "0xD0839C", VA = "0xD0839C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000B96")]
		[Address(RVA = "0xD08418", Offset = "0xD08418", VA = "0xD08418")]
		private void SafeDispose(XRIDefaultInputActions self)
		{
		}

		[Token(Token = "0x6000B97")]
		[Address(RVA = "0xD084C0", Offset = "0xD084C0", VA = "0xD084C0", Slot = "55")]
		public virtual void OnPosition(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x6000B98")]
		[Address(RVA = "0xD084C4", Offset = "0xD084C4", VA = "0xD084C4", Slot = "56")]
		public virtual void OnRotation(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x6000B99")]
		[Address(RVA = "0xD084C8", Offset = "0xD084C8", VA = "0xD084C8", Slot = "57")]
		public virtual void OnSelect(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x6000B9A")]
		[Address(RVA = "0xD08548", Offset = "0xD08548", VA = "0xD08548", Slot = "58")]
		public virtual void OnActivate(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x6000B9B")]
		[Address(RVA = "0xD085C8", Offset = "0xD085C8", VA = "0xD085C8", Slot = "59")]
		public virtual void OnUIPress(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x6000B9C")]
		[Address(RVA = "0xD085CC", Offset = "0xD085CC", VA = "0xD085CC", Slot = "60")]
		public virtual void OnHapticDevice(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x6000B9D")]
		[Address(RVA = "0xD085D0", Offset = "0xD085D0", VA = "0xD085D0", Slot = "61")]
		public virtual void OnTeleportSelect(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x6000B9E")]
		[Address(RVA = "0xD085D4", Offset = "0xD085D4", VA = "0xD085D4", Slot = "62")]
		public virtual void OnTeleportModeActivate(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x6000B9F")]
		[Address(RVA = "0xD085D8", Offset = "0xD085D8", VA = "0xD085D8", Slot = "63")]
		public virtual void OnTeleportModeCancel(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x6000BA0")]
		[Address(RVA = "0xD0863C", Offset = "0xD0863C", VA = "0xD0863C", Slot = "64")]
		public virtual void OnTurn(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x6000BA1")]
		[Address(RVA = "0xD086A0", Offset = "0xD086A0", VA = "0xD086A0", Slot = "65")]
		public virtual void OnMove(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x6000BA2")]
		[Address(RVA = "0xD086A4", Offset = "0xD086A4", VA = "0xD086A4", Slot = "66")]
		public virtual void OnRotateAnchor(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x6000BA3")]
		[Address(RVA = "0xD086A8", Offset = "0xD086A8", VA = "0xD086A8", Slot = "67")]
		public virtual void OnTranslateAnchor(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x6000BA4")]
		[Address(RVA = "0xD086AC", Offset = "0xD086AC", VA = "0xD086AC", Slot = "68")]
		public virtual void OnReset(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x6000BA5")]
		[Address(RVA = "0xD08710", Offset = "0xD08710", VA = "0xD08710", Slot = "69")]
		public virtual void OnAutoReel(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x6000BA6")]
		[Address(RVA = "0xD08714", Offset = "0xD08714", VA = "0xD08714", Slot = "70")]
		public virtual void OnMenu(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x6000BA7")]
		[Address(RVA = "0xD087B0", Offset = "0xD087B0", VA = "0xD087B0", Slot = "51")]
		public void OnDialogAdvance(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x6000BA8")]
		[Address(RVA = "0xD087B4", Offset = "0xD087B4", VA = "0xD087B4", Slot = "71")]
		public virtual void OnBoost(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x6000BA9")]
		[Address(RVA = "0xD08834", Offset = "0xD08834", VA = "0xD08834", Slot = "72")]
		public virtual void OnGrabHandle(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x6000BAA")]
		[Address(RVA = "0xD088B4", Offset = "0xD088B4", VA = "0xD088B4")]
		private void SnapTurnProviderBase_OnStickTurn(float turnAmount, Handside handside)
		{
		}

		[Token(Token = "0x6000BAB")]
		[Address(RVA = "0xD089FC", Offset = "0xD089FC", VA = "0xD089FC", Slot = "44")]
		public void OnSwitchRod(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x6000BAC")]
		[Address(RVA = "0xD08B64", Offset = "0xD08B64", VA = "0xD08B64", Slot = "48")]
		public void OnEditorPause(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x6000BAD")]
		[Address(RVA = "0xD08BDC", Offset = "0xD08BDC", VA = "0xD08BDC", Slot = "50")]
		public void OnPickup(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x6000BAE")]
		[Address(RVA = "0xD08C40", Offset = "0xD08C40", VA = "0xD08C40", Slot = "26")]
		public void OnAnimateIndexLeft(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x6000BAF")]
		[Address(RVA = "0xD08D00", Offset = "0xD08D00", VA = "0xD08D00", Slot = "27")]
		public void OnAnimateFingersLeft(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x6000BB0")]
		[Address(RVA = "0xD08DC0", Offset = "0xD08DC0", VA = "0xD08DC0", Slot = "28")]
		public void OnAnimateThumbLeft(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x6000BB1")]
		[Address(RVA = "0xD08E78", Offset = "0xD08E78", VA = "0xD08E78", Slot = "52")]
		public void OnAnimateIndexRight(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x6000BB2")]
		[Address(RVA = "0xD08F38", Offset = "0xD08F38", VA = "0xD08F38", Slot = "53")]
		public void OnAnimateFingersRight(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x6000BB3")]
		[Address(RVA = "0xD08FF8", Offset = "0xD08FF8", VA = "0xD08FF8", Slot = "54")]
		public void OnAnimateThumbRight(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x6000BB4")]
		[Address(RVA = "0xD090B0", Offset = "0xD090B0", VA = "0xD090B0", Slot = "39")]
		public void OnThumbUp(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x6000BB5")]
		[Address(RVA = "0xD09228", Offset = "0xD09228", VA = "0xD09228")]
		private void DisableDialogAdvanceKeepout()
		{
		}

		[Token(Token = "0x6000BB6")]
		[Address(RVA = "0xD09230", Offset = "0xD09230", VA = "0xD09230")]
		public XRInputSender()
		{
		}
	}
	[Token(Token = "0x2000200")]
	public class XRInputSenderSceneloader : MonoBehaviour, XRIDefaultInputActions.IXRILeftHandActions, XRIDefaultInputActions.IXRIRightHandActions
	{
		[Token(Token = "0x200040E")]
		public delegate void SelectEvent(InputAction.CallbackContext context);

		[Token(Token = "0x200040F")]
		public delegate void ActivateEvent(InputAction.CallbackContext context);

		[Token(Token = "0x2000410")]
		public delegate void BoostEvent(InputAction.CallbackContext context);

		[Token(Token = "0x2000411")]
		public delegate void GrabHandleEvent(InputAction.CallbackContext context);

		[Token(Token = "0x2000412")]
		public delegate void SwitchPreviousLureEvent();

		[Token(Token = "0x2000413")]
		public delegate void SwitchNextLureEvent();

		[Token(Token = "0x2000414")]
		public delegate void ResetEvent();

		[Token(Token = "0x2000415")]
		public delegate void TeleportEvent();

		[Token(Token = "0x2000416")]
		public delegate void MenuEvent();

		[Token(Token = "0x2000417")]
		public delegate void PickupEvent();

		[Token(Token = "0x2000418")]
		public delegate void DialogAdvanceEvent();

		[Token(Token = "0x2000419")]
		public delegate void AnimateLeftIndexEvent(float value);

		[Token(Token = "0x200041A")]
		public delegate void AnimateRightIndexEvent(float value);

		[Token(Token = "0x200041B")]
		public delegate void AnimateLeftFingersEvent(float value);

		[Token(Token = "0x200041C")]
		public delegate void AnimateRightFingersEvent(float value);

		[Token(Token = "0x200041D")]
		public delegate void AnimateLeftThumbEvent(bool down);

		[Token(Token = "0x200041E")]
		public delegate void AnimateRightThumbEvent(bool down);

		[Token(Token = "0x4000DC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public XRIDefaultInputActions inputActions;

		[Token(Token = "0x4000DC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool dialogAdvanceKeepoutActive;

		[Token(Token = "0x14000025")]
		public static event SelectEvent Select
		{
			[Token(Token = "0x6000BB7")]
			[Address(RVA = "0xE1D8EC", Offset = "0xE1D8EC", VA = "0xE1D8EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F053C", Offset = "0x9F053C")]
			add
			{
			}
			[Token(Token = "0x6000BB8")]
			[Address(RVA = "0xE1D9A0", Offset = "0xE1D9A0", VA = "0xE1D9A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F054C", Offset = "0x9F054C")]
			remove
			{
			}
		}

		[Token(Token = "0x14000026")]
		public static event ActivateEvent Activate
		{
			[Token(Token = "0x6000BB9")]
			[Address(RVA = "0xE1DA54", Offset = "0xE1DA54", VA = "0xE1DA54")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F055C", Offset = "0x9F055C")]
			add
			{
			}
			[Token(Token = "0x6000BBA")]
			[Address(RVA = "0xE1DB0C", Offset = "0xE1DB0C", VA = "0xE1DB0C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F056C", Offset = "0x9F056C")]
			remove
			{
			}
		}

		[Token(Token = "0x14000027")]
		public static event BoostEvent Boost
		{
			[Token(Token = "0x6000BBB")]
			[Address(RVA = "0xE1DBC4", Offset = "0xE1DBC4", VA = "0xE1DBC4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F057C", Offset = "0x9F057C")]
			add
			{
			}
			[Token(Token = "0x6000BBC")]
			[Address(RVA = "0xE1DC7C", Offset = "0xE1DC7C", VA = "0xE1DC7C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F058C", Offset = "0x9F058C")]
			remove
			{
			}
		}

		[Token(Token = "0x14000028")]
		public static event GrabHandleEvent GrabHandle
		{
			[Token(Token = "0x6000BBD")]
			[Address(RVA = "0xE1DD34", Offset = "0xE1DD34", VA = "0xE1DD34")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F059C", Offset = "0x9F059C")]
			add
			{
			}
			[Token(Token = "0x6000BBE")]
			[Address(RVA = "0xE1DDEC", Offset = "0xE1DDEC", VA = "0xE1DDEC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F05AC", Offset = "0x9F05AC")]
			remove
			{
			}
		}

		[Token(Token = "0x14000029")]
		public static event SwitchPreviousLureEvent SwitchPreviousLure
		{
			[Token(Token = "0x6000BBF")]
			[Address(RVA = "0xE1DEA4", Offset = "0xE1DEA4", VA = "0xE1DEA4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F05BC", Offset = "0x9F05BC")]
			add
			{
			}
			[Token(Token = "0x6000BC0")]
			[Address(RVA = "0xE1DF5C", Offset = "0xE1DF5C", VA = "0xE1DF5C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F05CC", Offset = "0x9F05CC")]
			remove
			{
			}
		}

		[Token(Token = "0x1400002A")]
		public static event SwitchNextLureEvent SwitchNextLure
		{
			[Token(Token = "0x6000BC1")]
			[Address(RVA = "0xE1E014", Offset = "0xE1E014", VA = "0xE1E014")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F05DC", Offset = "0x9F05DC")]
			add
			{
			}
			[Token(Token = "0x6000BC2")]
			[Address(RVA = "0xE1E0CC", Offset = "0xE1E0CC", VA = "0xE1E0CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F05EC", Offset = "0x9F05EC")]
			remove
			{
			}
		}

		[Token(Token = "0x1400002B")]
		public static event ResetEvent Reset
		{
			[Token(Token = "0x6000BC3")]
			[Address(RVA = "0xE1E184", Offset = "0xE1E184", VA = "0xE1E184")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F05FC", Offset = "0x9F05FC")]
			add
			{
			}
			[Token(Token = "0x6000BC4")]
			[Address(RVA = "0xE1E23C", Offset = "0xE1E23C", VA = "0xE1E23C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F060C", Offset = "0x9F060C")]
			remove
			{
			}
		}

		[Token(Token = "0x1400002C")]
		public static event TeleportEvent Teleport
		{
			[Token(Token = "0x6000BC5")]
			[Address(RVA = "0xE1E2F4", Offset = "0xE1E2F4", VA = "0xE1E2F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F061C", Offset = "0x9F061C")]
			add
			{
			}
			[Token(Token = "0x6000BC6")]
			[Address(RVA = "0xE1E3AC", Offset = "0xE1E3AC", VA = "0xE1E3AC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F062C", Offset = "0x9F062C")]
			remove
			{
			}
		}

		[Token(Token = "0x1400002D")]
		public static event MenuEvent Menu
		{
			[Token(Token = "0x6000BC7")]
			[Address(RVA = "0xE1E464", Offset = "0xE1E464", VA = "0xE1E464")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F063C", Offset = "0x9F063C")]
			add
			{
			}
			[Token(Token = "0x6000BC8")]
			[Address(RVA = "0xE1E51C", Offset = "0xE1E51C", VA = "0xE1E51C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F064C", Offset = "0x9F064C")]
			remove
			{
			}
		}

		[Token(Token = "0x1400002E")]
		public static event PickupEvent Pickup
		{
			[Token(Token = "0x6000BC9")]
			[Address(RVA = "0xE1E5D4", Offset = "0xE1E5D4", VA = "0xE1E5D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F065C", Offset = "0x9F065C")]
			add
			{
			}
			[Token(Token = "0x6000BCA")]
			[Address(RVA = "0xE1E68C", Offset = "0xE1E68C", VA = "0xE1E68C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F066C", Offset = "0x9F066C")]
			remove
			{
			}
		}

		[Token(Token = "0x1400002F")]
		public static event DialogAdvanceEvent DialogAdvance
		{
			[Token(Token = "0x6000BCB")]
			[Address(RVA = "0xE1E744", Offset = "0xE1E744", VA = "0xE1E744")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F067C", Offset = "0x9F067C")]
			add
			{
			}
			[Token(Token = "0x6000BCC")]
			[Address(RVA = "0xE1E7FC", Offset = "0xE1E7FC", VA = "0xE1E7FC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F068C", Offset = "0x9F068C")]
			remove
			{
			}
		}

		[Token(Token = "0x14000030")]
		public static event AnimateLeftIndexEvent AnimateLeftIndex
		{
			[Token(Token = "0x6000BCD")]
			[Address(RVA = "0xE1E8B4", Offset = "0xE1E8B4", VA = "0xE1E8B4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F069C", Offset = "0x9F069C")]
			add
			{
			}
			[Token(Token = "0x6000BCE")]
			[Address(RVA = "0xE1E96C", Offset = "0xE1E96C", VA = "0xE1E96C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F06AC", Offset = "0x9F06AC")]
			remove
			{
			}
		}

		[Token(Token = "0x14000031")]
		public static event AnimateRightIndexEvent AnimateRightIndex
		{
			[Token(Token = "0x6000BCF")]
			[Address(RVA = "0xE1EA24", Offset = "0xE1EA24", VA = "0xE1EA24")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F06BC", Offset = "0x9F06BC")]
			add
			{
			}
			[Token(Token = "0x6000BD0")]
			[Address(RVA = "0xE1EADC", Offset = "0xE1EADC", VA = "0xE1EADC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F06CC", Offset = "0x9F06CC")]
			remove
			{
			}
		}

		[Token(Token = "0x14000032")]
		public static event AnimateLeftFingersEvent AnimateLeftFingers
		{
			[Token(Token = "0x6000BD1")]
			[Address(RVA = "0xE1EB94", Offset = "0xE1EB94", VA = "0xE1EB94")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F06DC", Offset = "0x9F06DC")]
			add
			{
			}
			[Token(Token = "0x6000BD2")]
			[Address(RVA = "0xE1EC4C", Offset = "0xE1EC4C", VA = "0xE1EC4C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F06EC", Offset = "0x9F06EC")]
			remove
			{
			}
		}

		[Token(Token = "0x14000033")]
		public static event AnimateRightFingersEvent AnimateRightFingers
		{
			[Token(Token = "0x6000BD3")]
			[Address(RVA = "0xE1ED04", Offset = "0xE1ED04", VA = "0xE1ED04")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F06FC", Offset = "0x9F06FC")]
			add
			{
			}
			[Token(Token = "0x6000BD4")]
			[Address(RVA = "0xE1EDBC", Offset = "0xE1EDBC", VA = "0xE1EDBC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F070C", Offset = "0x9F070C")]
			remove
			{
			}
		}

		[Token(Token = "0x14000034")]
		public static event AnimateLeftThumbEvent AnimateLeftThumb
		{
			[Token(Token = "0x6000BD5")]
			[Address(RVA = "0xE1EE74", Offset = "0xE1EE74", VA = "0xE1EE74")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F071C", Offset = "0x9F071C")]
			add
			{
			}
			[Token(Token = "0x6000BD6")]
			[Address(RVA = "0xE1EF2C", Offset = "0xE1EF2C", VA = "0xE1EF2C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F072C", Offset = "0x9F072C")]
			remove
			{
			}
		}

		[Token(Token = "0x14000035")]
		public static event AnimateRightThumbEvent AnimateRightThumb
		{
			[Token(Token = "0x6000BD7")]
			[Address(RVA = "0xE1EFE4", Offset = "0xE1EFE4", VA = "0xE1EFE4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F073C", Offset = "0x9F073C")]
			add
			{
			}
			[Token(Token = "0x6000BD8")]
			[Address(RVA = "0xE1F09C", Offset = "0xE1F09C", VA = "0xE1F09C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F074C", Offset = "0x9F074C")]
			remove
			{
			}
		}

		[Token(Token = "0x6000BD9")]
		[Address(RVA = "0xE1F154", Offset = "0xE1F154", VA = "0xE1F154", Slot = "29")]
		public void OnPosition(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x6000BDA")]
		[Address(RVA = "0xE1F158", Offset = "0xE1F158", VA = "0xE1F158", Slot = "30")]
		public void OnRotation(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x6000BDB")]
		[Address(RVA = "0xE1F15C", Offset = "0xE1F15C", VA = "0xE1F15C", Slot = "31")]
		public void OnSelect(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x6000BDC")]
		[Address(RVA = "0xE1F160", Offset = "0xE1F160", VA = "0xE1F160", Slot = "32")]
		public void OnActivate(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x6000BDD")]
		[Address(RVA = "0xE1F164", Offset = "0xE1F164", VA = "0xE1F164", Slot = "33")]
		public void OnUIPress(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x6000BDE")]
		[Address(RVA = "0xE1F168", Offset = "0xE1F168", VA = "0xE1F168", Slot = "34")]
		public void OnHapticDevice(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x6000BDF")]
		[Address(RVA = "0xE1F16C", Offset = "0xE1F16C", VA = "0xE1F16C", Slot = "35")]
		public void OnTeleportSelect(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x6000BE0")]
		[Address(RVA = "0xE1F170", Offset = "0xE1F170", VA = "0xE1F170", Slot = "36")]
		public void OnTeleportModeActivate(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x6000BE1")]
		[Address(RVA = "0xE1F174", Offset = "0xE1F174", VA = "0xE1F174", Slot = "37")]
		public void OnTeleportModeCancel(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x6000BE2")]
		[Address(RVA = "0xE1F178", Offset = "0xE1F178", VA = "0xE1F178", Slot = "38")]
		public void OnTurn(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x6000BE3")]
		[Address(RVA = "0xE1F17C", Offset = "0xE1F17C", VA = "0xE1F17C", Slot = "40")]
		public void OnMove(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x6000BE4")]
		[Address(RVA = "0xE1F180", Offset = "0xE1F180", VA = "0xE1F180", Slot = "41")]
		public void OnRotateAnchor(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x6000BE5")]
		[Address(RVA = "0xE1F184", Offset = "0xE1F184", VA = "0xE1F184", Slot = "42")]
		public void OnTranslateAnchor(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x6000BE6")]
		[Address(RVA = "0xE1F188", Offset = "0xE1F188", VA = "0xE1F188", Slot = "43")]
		public void OnReset(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x6000BE7")]
		[Address(RVA = "0xE1F18C", Offset = "0xE1F18C", VA = "0xE1F18C", Slot = "45")]
		public void OnAutoReel(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x6000BE8")]
		[Address(RVA = "0xE1F190", Offset = "0xE1F190", VA = "0xE1F190", Slot = "46")]
		public void OnBoost(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x6000BE9")]
		[Address(RVA = "0xE1F194", Offset = "0xE1F194", VA = "0xE1F194", Slot = "47")]
		public void OnGrabHandle(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x6000BEA")]
		[Address(RVA = "0xE1F198", Offset = "0xE1F198", VA = "0xE1F198", Slot = "49")]
		public void OnMenu(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x6000BEB")]
		[Address(RVA = "0xE1F19C", Offset = "0xE1F19C", VA = "0xE1F19C", Slot = "50")]
		public void OnPickup(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x6000BEC")]
		[Address(RVA = "0xE1F1A0", Offset = "0xE1F1A0", VA = "0xE1F1A0", Slot = "48")]
		public void OnEditorPause(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x6000BED")]
		[Address(RVA = "0xE1F1A4", Offset = "0xE1F1A4", VA = "0xE1F1A4", Slot = "44")]
		public void OnSwitchRod(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x6000BEE")]
		[Address(RVA = "0xE1F1A8", Offset = "0xE1F1A8", VA = "0xE1F1A8", Slot = "39")]
		public void OnThumbUp(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x6000BEF")]
		[Address(RVA = "0xE1F1AC", Offset = "0xE1F1AC", VA = "0xE1F1AC")]
		private void Start()
		{
		}

		[Token(Token = "0x6000BF0")]
		[Address(RVA = "0xE1F290", Offset = "0xE1F290", VA = "0xE1F290")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000BF1")]
		[Address(RVA = "0xE1F298", Offset = "0xE1F298", VA = "0xE1F298")]
		private void SafeDispose(XRIDefaultInputActions self)
		{
		}

		[Token(Token = "0x6000BF2")]
		[Address(RVA = "0xE1F340", Offset = "0xE1F340", VA = "0xE1F340", Slot = "26")]
		public void OnAnimateIndexLeft(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x6000BF3")]
		[Address(RVA = "0xE1F65C", Offset = "0xE1F65C", VA = "0xE1F65C", Slot = "27")]
		public void OnAnimateFingersLeft(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x6000BF4")]
		[Address(RVA = "0xE1F978", Offset = "0xE1F978", VA = "0xE1F978", Slot = "28")]
		public void OnAnimateThumbLeft(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x6000BF5")]
		[Address(RVA = "0xE1FC9C", Offset = "0xE1FC9C", VA = "0xE1FC9C", Slot = "52")]
		public void OnAnimateIndexRight(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x6000BF6")]
		[Address(RVA = "0xE1FFB8", Offset = "0xE1FFB8", VA = "0xE1FFB8", Slot = "53")]
		public void OnAnimateFingersRight(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x6000BF7")]
		[Address(RVA = "0xE202D4", Offset = "0xE202D4", VA = "0xE202D4", Slot = "54")]
		public void OnAnimateThumbRight(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x6000BF8")]
		[Address(RVA = "0xE205F8", Offset = "0xE205F8", VA = "0xE205F8", Slot = "51")]
		public void OnDialogAdvance(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x6000BF9")]
		[Address(RVA = "0xE206DC", Offset = "0xE206DC", VA = "0xE206DC")]
		public XRInputSenderSceneloader()
		{
		}
	}
	[Token(Token = "0x2000201")]
	public enum SfxPlayer
	{
		[Token(Token = "0x4000DD9")]
		TeleportJet,
		[Token(Token = "0x4000DDA")]
		SnapturnJetL,
		[Token(Token = "0x4000DDB")]
		SnapturnJetR
	}
	[Token(Token = "0x2000202")]
	public class PlayerAudio : MonoBehaviour
	{
		[Token(Token = "0x4000DDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static PlayerAudio instance;

		[Token(Token = "0x4000DDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AudioSource playerAudio;

		[Token(Token = "0x4000DDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9EADF8", Offset = "0x9EADF8")]
		public AudioClip[] teleportJet;

		[Token(Token = "0x4000DDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AudioClip[] snapturnJetL;

		[Token(Token = "0x4000DE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AudioClip[] snapturnJetR;

		[Token(Token = "0x6000BFA")]
		[Address(RVA = "0xC5C0E8", Offset = "0xC5C0E8", VA = "0xC5C0E8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000BFB")]
		[Address(RVA = "0xC5C178", Offset = "0xC5C178", VA = "0xC5C178")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000BFC")]
		[Address(RVA = "0xC5C1EC", Offset = "0xC5C1EC", VA = "0xC5C1EC")]
		private void OnTeleport()
		{
		}

		[Token(Token = "0x6000BFD")]
		[Address(RVA = "0xC5C2E4", Offset = "0xC5C2E4", VA = "0xC5C2E4")]
		public static void PlayAt(SfxPlayer sfx, Vector3 position)
		{
		}

		[Token(Token = "0x6000BFE")]
		[Address(RVA = "0xC5C558", Offset = "0xC5C558", VA = "0xC5C558")]
		public PlayerAudio()
		{
		}
	}
	[Token(Token = "0x2000203")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x9E762C", Offset = "0x9E762C")]
	public class PopMouthAnim : MonoBehaviour
	{
		[Token(Token = "0x4000DE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float rmsValAbs;

		[Token(Token = "0x4000DE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Material popFacialMat;

		[Token(Token = "0x4000DE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float gain;

		[Token(Token = "0x4000DE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int requestedFps;

		[Token(Token = "0x4000DE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float frameInterval;

		[Token(Token = "0x4000DE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float nextFrameTime;

		[Token(Token = "0x6000BFF")]
		[Address(RVA = "0xC65CBC", Offset = "0xC65CBC", VA = "0xC65CBC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000C00")]
		[Address(RVA = "0xC65CD4", Offset = "0xC65CD4", VA = "0xC65CD4")]
		private void Update()
		{
		}

		[Token(Token = "0x6000C01")]
		[Address(RVA = "0xC65D60", Offset = "0xC65D60", VA = "0xC65D60")]
		private void OnAudioFilterRead(float[] data, int channels)
		{
		}

		[Token(Token = "0x6000C02")]
		[Address(RVA = "0xC65E8C", Offset = "0xC65E8C", VA = "0xC65E8C")]
		public PopMouthAnim()
		{
		}
	}
	[Token(Token = "0x2000204")]
	public class PopulateMissionRewardsSpecial : MonoBehaviour
	{
		[Token(Token = "0x4000DE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MissionSO mission;

		[Token(Token = "0x4000DE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Localize missionTitle;

		[Token(Token = "0x4000DE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private UI_TakeFishController.MissionRewardItem[] rewardItems;

		[Token(Token = "0x6000C03")]
		[Address(RVA = "0xC65EA0", Offset = "0xC65EA0", VA = "0xC65EA0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000C04")]
		[Address(RVA = "0xC65EEC", Offset = "0xC65EEC", VA = "0xC65EEC")]
		private void FillUpMissionRewards(UI_TakeFishController.MissionRewardItem[] rewardsArray, MissionSO.Reward[] missionRewards)
		{
		}

		[Token(Token = "0x6000C05")]
		[Address(RVA = "0xC66200", Offset = "0xC66200", VA = "0xC66200")]
		public PopulateMissionRewardsSpecial()
		{
		}
	}
	[Token(Token = "0x2000205")]
	public class PredatorSystemDebugUI : MonoBehaviour
	{
		[Token(Token = "0x4000DEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9EAE60", Offset = "0x9EAE60")]
		public Toggle activeInPool;

		[Token(Token = "0x4000DEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Slider maxNumberSlider;

		[Token(Token = "0x4000DEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Slider initialNumberSlider;

		[Token(Token = "0x4000DED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Slider numSpawnAtOnceSlider;

		[Token(Token = "0x4000DEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Slider spawnRateSlider;

		[Token(Token = "0x4000DEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Slider lifetimeSlider;

		[Token(Token = "0x4000DF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Slider speedSlider;

		[Token(Token = "0x4000DF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Slider systemActiveDurationSlider;

		[Token(Token = "0x4000DF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Slider systemInactiveDurationSlider;

		[Token(Token = "0x4000DF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public TextMeshProUGUI maxNumberValText;

		[Token(Token = "0x4000DF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public TextMeshProUGUI initialNumberValText;

		[Token(Token = "0x4000DF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public TextMeshProUGUI numSpawnAtOnceValText;

		[Token(Token = "0x4000DF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public TextMeshProUGUI spawnRateValText;

		[Token(Token = "0x4000DF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public TextMeshProUGUI lifetimeValText;

		[Token(Token = "0x4000DF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public TextMeshProUGUI speedValText;

		[Token(Token = "0x4000DF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public TextMeshProUGUI systemActiveDurationValTextSlider;

		[Token(Token = "0x4000DFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public TextMeshProUGUI systemInactiveDurationValText;

		[Token(Token = "0x4000DFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9EAE98", Offset = "0x9EAE98")]
		public Toggle rplntActiveInPool;

		[Token(Token = "0x4000DFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public Slider rplntMaxNumberSlider;

		[Token(Token = "0x4000DFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public Slider rplntInitialNumberSlider;

		[Token(Token = "0x4000DFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public Slider rplntNumSpawnAtOnceSlider;

		[Token(Token = "0x4000DFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public Slider rplntSpawnRateSlider;

		[Token(Token = "0x4000E00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public Slider rplntLifetimeSlider;

		[Token(Token = "0x4000E01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public Slider rplntSystemActiveDurationSlider;

		[Token(Token = "0x4000E02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public Slider rplntSystemInactiveDurationSlider;

		[Token(Token = "0x4000E03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public TextMeshProUGUI rplntMaxNumberValText;

		[Token(Token = "0x4000E04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public TextMeshProUGUI rplntInitialNumberValText;

		[Token(Token = "0x4000E05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public TextMeshProUGUI rplntNumSpawnAtOnceValText;

		[Token(Token = "0x4000E06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public TextMeshProUGUI rplntSpawnRateValText;

		[Token(Token = "0x4000E07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public TextMeshProUGUI rplntLifetimeValText;

		[Token(Token = "0x4000E08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public TextMeshProUGUI rplntSystemActiveDurationValTextSlider;

		[Token(Token = "0x4000E09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public TextMeshProUGUI rplntSystemInactiveDurationValText;

		[Token(Token = "0x6000C06")]
		[Address(RVA = "0xC67328", Offset = "0xC67328", VA = "0xC67328")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000C07")]
		[Address(RVA = "0xC674A0", Offset = "0xC674A0", VA = "0xC674A0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000C08")]
		[Address(RVA = "0xC67514", Offset = "0xC67514", VA = "0xC67514")]
		private void fishPoolChanged()
		{
		}

		[Token(Token = "0x6000C09")]
		[Address(RVA = "0xC6747C", Offset = "0xC6747C", VA = "0xC6747C")]
		private void InitUI()
		{
		}

		[Token(Token = "0x6000C0A")]
		[Address(RVA = "0xC67538", Offset = "0xC67538", VA = "0xC67538")]
		public void InitPredatorUI()
		{
		}

		[Token(Token = "0x6000C0B")]
		[Address(RVA = "0xC67734", Offset = "0xC67734", VA = "0xC67734")]
		public void InitRepellentUI()
		{
		}

		[Token(Token = "0x6000C0C")]
		[Address(RVA = "0xC67904", Offset = "0xC67904", VA = "0xC67904")]
		public void UpdatePredatorValueText()
		{
		}

		[Token(Token = "0x6000C0D")]
		[Address(RVA = "0xC67B70", Offset = "0xC67B70", VA = "0xC67B70")]
		public void UpdateRepellentValueText()
		{
		}

		[Token(Token = "0x6000C0E")]
		[Address(RVA = "0xC67D94", Offset = "0xC67D94", VA = "0xC67D94")]
		public void RestorePredatorPoolValues()
		{
		}

		[Token(Token = "0x6000C0F")]
		[Address(RVA = "0xC67E50", Offset = "0xC67E50", VA = "0xC67E50")]
		public void RestoreRepellentPoolValues()
		{
		}

		[Token(Token = "0x6000C10")]
		[Address(RVA = "0xC67F0C", Offset = "0xC67F0C", VA = "0xC67F0C")]
		public void OverridePredatorValues()
		{
		}

		[Token(Token = "0x6000C11")]
		[Address(RVA = "0xC68114", Offset = "0xC68114", VA = "0xC68114")]
		public void OverrideRepellentValues()
		{
		}

		[Token(Token = "0x6000C12")]
		[Address(RVA = "0xC68338", Offset = "0xC68338", VA = "0xC68338")]
		public PredatorSystemDebugUI()
		{
		}
	}
	[Token(Token = "0x2000206")]
	public class PressBuildSaveFile : MonoBehaviour
	{
		[Token(Token = "0x6000C13")]
		[Address(RVA = "0xC6848C", Offset = "0xC6848C", VA = "0xC6848C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000C14")]
		[Address(RVA = "0xC68548", Offset = "0xC68548", VA = "0xC68548")]
		public PressBuildSaveFile()
		{
		}
	}
	[Token(Token = "0x2000207")]
	public class PressBuildWelcomeController : MonoBehaviour
	{
		[Token(Token = "0x4000E0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject pressbuildWelcomeMessage;

		[Token(Token = "0x6000C15")]
		[Address(RVA = "0xC68550", Offset = "0xC68550", VA = "0xC68550")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000C16")]
		[Address(RVA = "0xC685DC", Offset = "0xC685DC", VA = "0xC685DC")]
		public PressBuildWelcomeController()
		{
		}
	}
	[Token(Token = "0x2000208")]
	public class Protector : MonoBehaviour
	{
		[Token(Token = "0x4000E0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private ParticleSystem system;

		[Token(Token = "0x4000E0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Tween bobTween;

		[Token(Token = "0x6000C17")]
		[Address(RVA = "0xC685E4", Offset = "0xC685E4", VA = "0xC685E4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000C18")]
		[Address(RVA = "0xC686D4", Offset = "0xC686D4", VA = "0xC686D4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000C19")]
		[Address(RVA = "0xC686E4", Offset = "0xC686E4", VA = "0xC686E4")]
		private void OnTriggerEnter(Collider col)
		{
		}

		[Token(Token = "0x6000C1A")]
		[Address(RVA = "0xC685E8", Offset = "0xC685E8", VA = "0xC685E8")]
		private void Bobbing()
		{
		}

		[Token(Token = "0x6000C1B")]
		[Address(RVA = "0xC68740", Offset = "0xC68740", VA = "0xC68740")]
		private void LowerToSurface()
		{
		}

		[Token(Token = "0x6000C1C")]
		[Address(RVA = "0xC68840", Offset = "0xC68840", VA = "0xC68840")]
		private void RaiseUp()
		{
		}

		[Token(Token = "0x6000C1D")]
		[Address(RVA = "0xC68940", Offset = "0xC68940", VA = "0xC68940")]
		public Protector()
		{
		}

		[Token(Token = "0x6000C1E")]
		[Address(RVA = "0xC68948", Offset = "0xC68948", VA = "0xC68948")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F075C", Offset = "0x9F075C")]
		private void <LowerToSurface>b__6_0()
		{
		}

		[Token(Token = "0x6000C1F")]
		[Address(RVA = "0xC6894C", Offset = "0xC6894C", VA = "0xC6894C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F076C", Offset = "0x9F076C")]
		private void <RaiseUp>b__7_0()
		{
		}
	}
	[Token(Token = "0x2000209")]
	public class ProtectorManager : MonoBehaviour
	{
		[Token(Token = "0x4000E0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ProtectorSpawner spawner;

		[Token(Token = "0x4000E0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<Protector> protectors;

		[Token(Token = "0x6000C20")]
		[Address(RVA = "0xC68950", Offset = "0xC68950", VA = "0xC68950")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000C21")]
		[Address(RVA = "0xC689C0", Offset = "0xC689C0", VA = "0xC689C0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000C22")]
		[Address(RVA = "0xC68A34", Offset = "0xC68A34", VA = "0xC68A34")]
		public void AddProtectors(int numProtectors)
		{
		}

		[Token(Token = "0x6000C23")]
		[Address(RVA = "0xC689C4", Offset = "0xC689C4", VA = "0xC689C4")]
		public void RemoveAll()
		{
		}

		[Token(Token = "0x6000C24")]
		[Address(RVA = "0xC68CC8", Offset = "0xC68CC8", VA = "0xC68CC8")]
		public ProtectorManager()
		{
		}
	}
	[Token(Token = "0x200020A")]
	public class ProtectorSpawner : MonoBehaviour
	{
		[Token(Token = "0x4000E0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private SpawnPool pool;

		[Token(Token = "0x4000E10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private ProtectorManager protectorMngr;

		[Token(Token = "0x4000E11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform protector;

		[Token(Token = "0x4000E12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float minSpawnDistance;

		[Token(Token = "0x4000E13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float maxSpawnDistance;

		[Token(Token = "0x4000E14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float minDistanceBetween;

		[Token(Token = "0x6000C25")]
		[Address(RVA = "0xC68CD0", Offset = "0xC68CD0", VA = "0xC68CD0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000C26")]
		[Address(RVA = "0xC68CAC", Offset = "0xC68CAC", VA = "0xC68CAC")]
		internal void DespawnAll()
		{
		}

		[Token(Token = "0x6000C27")]
		[Address(RVA = "0xC68AD8", Offset = "0xC68AD8", VA = "0xC68AD8")]
		internal Protector SpawnProtector()
		{
			return null;
		}

		[Token(Token = "0x6000C28")]
		[Address(RVA = "0xC68D54", Offset = "0xC68D54", VA = "0xC68D54")]
		private Vector3 GetPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000C29")]
		[Address(RVA = "0xC68F90", Offset = "0xC68F90", VA = "0xC68F90")]
		public ProtectorSpawner()
		{
		}
	}
	[Token(Token = "0x200020B")]
	public class ProtectorsToggle : MonoBehaviour
	{
		[Token(Token = "0x4000E15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Toggle tog;

		[Token(Token = "0x4000E16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ProtectorManager protectorMngr;

		[Token(Token = "0x6000C2A")]
		[Address(RVA = "0xC68FAC", Offset = "0xC68FAC", VA = "0xC68FAC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000C2B")]
		[Address(RVA = "0xC6900C", Offset = "0xC6900C", VA = "0xC6900C")]
		public void OnToggle()
		{
		}

		[Token(Token = "0x6000C2C")]
		[Address(RVA = "0xC69044", Offset = "0xC69044", VA = "0xC69044")]
		public ProtectorsToggle()
		{
		}
	}
	[Token(Token = "0x200020C")]
	public class AllowCrankGrab : MonoBehaviour
	{
		[Token(Token = "0x4000E17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static AllowCrankGrab instance;

		[Token(Token = "0x4000E18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MeshRenderer highlightRend;

		[Token(Token = "0x4000E19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool canGrab;

		[Token(Token = "0x4000E1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		private bool isGrabbed;

		[Token(Token = "0x170000FB")]
		public static bool CanGrab
		{
			[Token(Token = "0x6000C2D")]
			[Address(RVA = "0xCAEF38", Offset = "0xCAEF38", VA = "0xCAEF38")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000FC")]
		public static bool IsGrabbed
		{
			[Token(Token = "0x6000C2E")]
			[Address(RVA = "0xCAEF94", Offset = "0xCAEF94", VA = "0xCAEF94")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000C2F")]
			[Address(RVA = "0xCAEFF0", Offset = "0xCAEFF0", VA = "0xCAEFF0")]
			set
			{
			}
		}

		[Token(Token = "0x6000C30")]
		[Address(RVA = "0xCAF054", Offset = "0xCAF054", VA = "0xCAF054")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000C31")]
		[Address(RVA = "0xCAF0C4", Offset = "0xCAF0C4", VA = "0xCAF0C4")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6000C32")]
		[Address(RVA = "0xCAF1B0", Offset = "0xCAF1B0", VA = "0xCAF1B0")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6000C33")]
		[Address(RVA = "0xCAF20C", Offset = "0xCAF20C", VA = "0xCAF20C")]
		public static void turnOffHighlight()
		{
		}

		[Token(Token = "0x6000C34")]
		[Address(RVA = "0xCAF274", Offset = "0xCAF274", VA = "0xCAF274")]
		public AllowCrankGrab()
		{
		}
	}
	[Token(Token = "0x200020D")]
	public class AmbientAudioController : MonoBehaviour
	{
		[Token(Token = "0x4000E1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform ship;

		[Token(Token = "0x6000C35")]
		[Address(RVA = "0xCAF6B0", Offset = "0xCAF6B0", VA = "0xCAF6B0")]
		private void Start()
		{
		}

		[Token(Token = "0x6000C36")]
		[Address(RVA = "0xCAF770", Offset = "0xCAF770", VA = "0xCAF770")]
		public AmbientAudioController()
		{
		}
	}
	[Token(Token = "0x200020E")]
	public class AutoLoadScene : MonoBehaviour
	{
		[Token(Token = "0x200041F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E7FF8", Offset = "0x9E7FF8")]
		private sealed class <LoadSceneAsync>d__6 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400198B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400198C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400198D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int sceneNum;

			[Token(Token = "0x400198E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public AutoLoadScene <>4__this;

			[Token(Token = "0x400198F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private AsyncOperation <op>5__2;

			[Token(Token = "0x1700026D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001AD4")]
				[Address(RVA = "0xCBA640", Offset = "0xCBA640", VA = "0xCBA640", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700026E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001AD6")]
				[Address(RVA = "0xCBA6A8", Offset = "0xCBA6A8", VA = "0xCBA6A8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001AD1")]
			[Address(RVA = "0xCBA468", Offset = "0xCBA468", VA = "0xCBA468")]
			[DebuggerHidden]
			public <LoadSceneAsync>d__6(int <>1__state)
			{
			}

			[Token(Token = "0x6001AD2")]
			[Address(RVA = "0xCBA4A8", Offset = "0xCBA4A8", VA = "0xCBA4A8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001AD3")]
			[Address(RVA = "0xCBA4AC", Offset = "0xCBA4AC", VA = "0xCBA4AC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001AD5")]
			[Address(RVA = "0xCBA648", Offset = "0xCBA648", VA = "0xCBA648", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000E1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float waitTimeSeconds;

		[Token(Token = "0x4000E1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int sceneNumToLoad;

		[Token(Token = "0x4000E1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool isFading;

		[Token(Token = "0x4000E1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float startTime;

		[Token(Token = "0x6000C37")]
		[Address(RVA = "0xCBA36C", Offset = "0xCBA36C", VA = "0xCBA36C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000C38")]
		[Address(RVA = "0xCBA3AC", Offset = "0xCBA3AC", VA = "0xCBA3AC")]
		private void LoadScene()
		{
		}

		[Token(Token = "0x6000C39")]
		[Address(RVA = "0xCBA3DC", Offset = "0xCBA3DC", VA = "0xCBA3DC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9F077C", Offset = "0x9F077C")]
		private IEnumerator LoadSceneAsync(int sceneNum)
		{
			return null;
		}

		[Token(Token = "0x6000C3A")]
		[Address(RVA = "0xCBA494", Offset = "0xCBA494", VA = "0xCBA494")]
		public AutoLoadScene()
		{
		}
	}
	[Token(Token = "0x200020F")]
	public class Barrel : MonoBehaviour
	{
		[Token(Token = "0x4000E20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Rigidbody rb;

		[Token(Token = "0x4000E21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Vector3 oldPos;

		[Token(Token = "0x4000E22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Quaternion oldRot;

		[Token(Token = "0x6000C3B")]
		[Address(RVA = "0xCBA6B0", Offset = "0xCBA6B0", VA = "0xCBA6B0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000C3C")]
		[Address(RVA = "0xCBA758", Offset = "0xCBA758", VA = "0xCBA758")]
		public void Reset()
		{
		}

		[Token(Token = "0x6000C3D")]
		[Address(RVA = "0xCBA8C0", Offset = "0xCBA8C0", VA = "0xCBA8C0")]
		public Barrel()
		{
		}
	}
	[Token(Token = "0x2000210")]
	public class BarrelManager : MonoBehaviour
	{
		[Token(Token = "0x2000420")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E8008", Offset = "0x9E8008")]
		private sealed class <Initialize>d__14 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001990")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001991")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001992")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public BarrelManager <>4__this;

			[Token(Token = "0x1700026F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001ADA")]
				[Address(RVA = "0xCBB20C", Offset = "0xCBB20C", VA = "0xCBB20C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000270")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001ADC")]
				[Address(RVA = "0xCBB274", Offset = "0xCBB274", VA = "0xCBB274", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001AD7")]
			[Address(RVA = "0xCBAA74", Offset = "0xCBAA74", VA = "0xCBAA74")]
			[DebuggerHidden]
			public <Initialize>d__14(int <>1__state)
			{
			}

			[Token(Token = "0x6001AD8")]
			[Address(RVA = "0xCBB0B0", Offset = "0xCBB0B0", VA = "0xCBB0B0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001AD9")]
			[Address(RVA = "0xCBB0B4", Offset = "0xCBB0B4", VA = "0xCBB0B4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001ADB")]
			[Address(RVA = "0xCBB214", Offset = "0xCBB214", VA = "0xCBB214", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000E23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static BarrelManager instance;

		[Token(Token = "0x4000E24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float areaSize;

		[Token(Token = "0x4000E25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int numBarrels;

		[Token(Token = "0x4000E26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SpawnPool items;

		[Token(Token = "0x4000E27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SpawnPool vfx;

		[Token(Token = "0x4000E28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int maxBarrels;

		[Token(Token = "0x4000E29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform barrelPrefab;

		[Token(Token = "0x4000E2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private List<ExplodingBarrel> barrels;

		[Token(Token = "0x4000E2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private TextMeshProUGUI NumBarrelsText;

		[Token(Token = "0x170000FD")]
		public static SpawnPool VFX
		{
			[Token(Token = "0x6000C3E")]
			[Address(RVA = "0xCBA8C8", Offset = "0xCBA8C8", VA = "0xCBA8C8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C3F")]
		[Address(RVA = "0xCBA924", Offset = "0xCBA924", VA = "0xCBA924")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6000C40")]
		[Address(RVA = "0xCBA974", Offset = "0xCBA974", VA = "0xCBA974")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000C41")]
		[Address(RVA = "0xCBA9CC", Offset = "0xCBA9CC", VA = "0xCBA9CC")]
		private void Start()
		{
		}

		[Token(Token = "0x6000C42")]
		[Address(RVA = "0xCBA9F8", Offset = "0xCBA9F8", VA = "0xCBA9F8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9F07E0", Offset = "0x9F07E0")]
		private IEnumerator Initialize()
		{
			return null;
		}

		[Token(Token = "0x6000C43")]
		[Address(RVA = "0xCBAAA0", Offset = "0xCBAAA0", VA = "0xCBAAA0")]
		public void SpawnBarrels()
		{
		}

		[Token(Token = "0x6000C44")]
		[Address(RVA = "0xCBAD40", Offset = "0xCBAD40", VA = "0xCBAD40")]
		private void RemoveAllBarrels()
		{
		}

		[Token(Token = "0x6000C45")]
		[Address(RVA = "0xCBAE60", Offset = "0xCBAE60", VA = "0xCBAE60")]
		public static void RemoveMe(ExplodingBarrel barrel, bool reset = false)
		{
		}

		[Token(Token = "0x6000C46")]
		[Address(RVA = "0xCBAED0", Offset = "0xCBAED0", VA = "0xCBAED0")]
		private void RemoveBarrel(ExplodingBarrel barrel, bool reset)
		{
		}

		[Token(Token = "0x6000C47")]
		[Address(RVA = "0xCBAFD4", Offset = "0xCBAFD4", VA = "0xCBAFD4")]
		public void IncreaseBarrels()
		{
		}

		[Token(Token = "0x6000C48")]
		[Address(RVA = "0xCBB058", Offset = "0xCBB058", VA = "0xCBB058")]
		public void DecreaseBarrels()
		{
		}

		[Token(Token = "0x6000C49")]
		[Address(RVA = "0xCBB014", Offset = "0xCBB014", VA = "0xCBB014")]
		private void InitBarrelUi()
		{
		}

		[Token(Token = "0x6000C4A")]
		[Address(RVA = "0xCBB098", Offset = "0xCBB098", VA = "0xCBB098")]
		public BarrelManager()
		{
		}
	}
	[Token(Token = "0x2000211")]
	public class Barrels : MonoBehaviour
	{
		[Token(Token = "0x4000E2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Barrel[] barrels;

		[Token(Token = "0x6000C4B")]
		[Address(RVA = "0xCBB27C", Offset = "0xCBB27C", VA = "0xCBB27C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000C4C")]
		[Address(RVA = "0xCBB2DC", Offset = "0xCBB2DC", VA = "0xCBB2DC")]
		public void ResetBarrels()
		{
		}

		[Token(Token = "0x6000C4D")]
		[Address(RVA = "0xCBB344", Offset = "0xCBB344", VA = "0xCBB344")]
		public Barrels()
		{
		}
	}
	[Token(Token = "0x2000212")]
	public class Bobber : MonoBehaviour
	{
		[Token(Token = "0x2000421")]
		public delegate void BobberEnteredWater();

		[Token(Token = "0x2000422")]
		public delegate void BobberExitedWater();

		[Token(Token = "0x2000423")]
		private struct jointSettings
		{
			[Token(Token = "0x4001993")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Rigidbody connectedBody;

			[Token(Token = "0x4001994")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Vector3 anchor;

			[Token(Token = "0x4001995")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public Vector3 connectedAnchor;

			[Token(Token = "0x4001996")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float springStrength;

			[Token(Token = "0x4001997")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public float jointMinDistance;

			[Token(Token = "0x4001998")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float jointMaxDistance;
		}

		[Token(Token = "0x2000424")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E8018", Offset = "0x9E8018")]
		private sealed class <Init>d__83 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001999")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400199A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400199B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Bobber <>4__this;

			[Token(Token = "0x17000271")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001AE8")]
				[Address(RVA = "0xCC3000", Offset = "0xCC3000", VA = "0xCC3000", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000272")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001AEA")]
				[Address(RVA = "0xCC3068", Offset = "0xCC3068", VA = "0xCC3068", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001AE5")]
			[Address(RVA = "0xCBBACC", Offset = "0xCBBACC", VA = "0xCBBACC")]
			[DebuggerHidden]
			public <Init>d__83(int <>1__state)
			{
			}

			[Token(Token = "0x6001AE6")]
			[Address(RVA = "0xCC2DDC", Offset = "0xCC2DDC", VA = "0xCC2DDC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001AE7")]
			[Address(RVA = "0xCC2DE0", Offset = "0xCC2DE0", VA = "0xCC2DE0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001AE9")]
			[Address(RVA = "0xCC3008", Offset = "0xCC3008", VA = "0xCC3008", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000425")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E8028", Offset = "0x9E8028")]
		private sealed class <CastCo>d__87 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400199C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400199D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400199E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Bobber <>4__this;

			[Token(Token = "0x400199F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float speed;

			[Token(Token = "0x40019A0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private int <i>5__2;

			[Token(Token = "0x17000273")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001AEE")]
				[Address(RVA = "0xCC24D0", Offset = "0xCC24D0", VA = "0xCC24D0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000274")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001AF0")]
				[Address(RVA = "0xCC2538", Offset = "0xCC2538", VA = "0xCC2538", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001AEB")]
			[Address(RVA = "0xCBBCCC", Offset = "0xCBBCCC", VA = "0xCBBCCC")]
			[DebuggerHidden]
			public <CastCo>d__87(int <>1__state)
			{
			}

			[Token(Token = "0x6001AEC")]
			[Address(RVA = "0xCC2120", Offset = "0xCC2120", VA = "0xCC2120", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001AED")]
			[Address(RVA = "0xCC2124", Offset = "0xCC2124", VA = "0xCC2124", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001AEF")]
			[Address(RVA = "0xCC24D8", Offset = "0xCC24D8", VA = "0xCC24D8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000426")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E8038", Offset = "0x9E8038")]
		private sealed class <CastCourseCorrect>d__88 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40019A1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40019A2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40019A3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Bobber <>4__this;

			[Token(Token = "0x17000275")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001AF4")]
				[Address(RVA = "0xCC2764", Offset = "0xCC2764", VA = "0xCC2764", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000276")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001AF6")]
				[Address(RVA = "0xCC27CC", Offset = "0xCC27CC", VA = "0xCC27CC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001AF1")]
			[Address(RVA = "0xCBBD74", Offset = "0xCBBD74", VA = "0xCBBD74")]
			[DebuggerHidden]
			public <CastCourseCorrect>d__88(int <>1__state)
			{
			}

			[Token(Token = "0x6001AF2")]
			[Address(RVA = "0xCC2540", Offset = "0xCC2540", VA = "0xCC2540", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001AF3")]
			[Address(RVA = "0xCC2544", Offset = "0xCC2544", VA = "0xCC2544", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001AF5")]
			[Address(RVA = "0xCC276C", Offset = "0xCC276C", VA = "0xCC276C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000427")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E8048", Offset = "0x9E8048")]
		private sealed class <BobberSnapBack>d__93 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40019A4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40019A5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40019A6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Bobber <>4__this;

			[Token(Token = "0x40019A7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float times;

			[Token(Token = "0x40019A8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Action callback;

			[Token(Token = "0x17000277")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001AFA")]
				[Address(RVA = "0xCC20B0", Offset = "0xCC20B0", VA = "0xCC20B0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000278")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001AFC")]
				[Address(RVA = "0xCC2118", Offset = "0xCC2118", VA = "0xCC2118", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001AF7")]
			[Address(RVA = "0xCBCD4C", Offset = "0xCBCD4C", VA = "0xCBCD4C")]
			[DebuggerHidden]
			public <BobberSnapBack>d__93(int <>1__state)
			{
			}

			[Token(Token = "0x6001AF8")]
			[Address(RVA = "0xCC1D6C", Offset = "0xCC1D6C", VA = "0xCC1D6C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001AF9")]
			[Address(RVA = "0xCC1D70", Offset = "0xCC1D70", VA = "0xCC1D70", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001AFB")]
			[Address(RVA = "0xCC20B8", Offset = "0xCC20B8", VA = "0xCC20B8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000428")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E8058", Offset = "0x9E8058")]
		private sealed class <FishChurn>d__105 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40019A9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40019AA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40019AB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Bobber <>4__this;

			[Token(Token = "0x40019AC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public FriMinigameState state;

			[Token(Token = "0x17000279")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001B00")]
				[Address(RVA = "0xCC2D6C", Offset = "0xCC2D6C", VA = "0xCC2D6C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700027A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001B02")]
				[Address(RVA = "0xCC2DD4", Offset = "0xCC2DD4", VA = "0xCC2DD4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001AFD")]
			[Address(RVA = "0xCBE0B4", Offset = "0xCBE0B4", VA = "0xCBE0B4")]
			[DebuggerHidden]
			public <FishChurn>d__105(int <>1__state)
			{
			}

			[Token(Token = "0x6001AFE")]
			[Address(RVA = "0xCC2BAC", Offset = "0xCC2BAC", VA = "0xCC2BAC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001AFF")]
			[Address(RVA = "0xCC2BB0", Offset = "0xCC2BB0", VA = "0xCC2BB0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001B01")]
			[Address(RVA = "0xCC2D74", Offset = "0xCC2D74", VA = "0xCC2D74", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000429")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E8068", Offset = "0x9E8068")]
		private sealed class <RunRageChurn>d__106 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40019AD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40019AE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40019AF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Bobber <>4__this;

			[Token(Token = "0x40019B0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public FriMinigameState state;

			[Token(Token = "0x1700027B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001B06")]
				[Address(RVA = "0xCC3538", Offset = "0xCC3538", VA = "0xCC3538", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700027C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001B08")]
				[Address(RVA = "0xCC35A0", Offset = "0xCC35A0", VA = "0xCC35A0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001B03")]
			[Address(RVA = "0xCBE16C", Offset = "0xCBE16C", VA = "0xCBE16C")]
			[DebuggerHidden]
			public <RunRageChurn>d__106(int <>1__state)
			{
			}

			[Token(Token = "0x6001B04")]
			[Address(RVA = "0xCC3378", Offset = "0xCC3378", VA = "0xCC3378", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001B05")]
			[Address(RVA = "0xCC337C", Offset = "0xCC337C", VA = "0xCC337C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001B07")]
			[Address(RVA = "0xCC3540", Offset = "0xCC3540", VA = "0xCC3540", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200042A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E8078", Offset = "0x9E8078")]
		private sealed class <CheckBelowSurface>d__108 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40019B1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40019B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40019B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Bobber <>4__this;

			[Token(Token = "0x1700027D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001B0C")]
				[Address(RVA = "0xCC29E4", Offset = "0xCC29E4", VA = "0xCC29E4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700027E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001B0E")]
				[Address(RVA = "0xCC2A4C", Offset = "0xCC2A4C", VA = "0xCC2A4C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001B09")]
			[Address(RVA = "0xCBE330", Offset = "0xCBE330", VA = "0xCBE330")]
			[DebuggerHidden]
			public <CheckBelowSurface>d__108(int <>1__state)
			{
			}

			[Token(Token = "0x6001B0A")]
			[Address(RVA = "0xCC27D4", Offset = "0xCC27D4", VA = "0xCC27D4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001B0B")]
			[Address(RVA = "0xCC27D8", Offset = "0xCC27D8", VA = "0xCC27D8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001B0D")]
			[Address(RVA = "0xCC29EC", Offset = "0xCC29EC", VA = "0xCC29EC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200042B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E8088", Offset = "0x9E8088")]
		private sealed class <CheckDistance>d__109 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40019B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40019B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40019B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Bobber <>4__this;

			[Token(Token = "0x1700027F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001B12")]
				[Address(RVA = "0xCC2B3C", Offset = "0xCC2B3C", VA = "0xCC2B3C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000280")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001B14")]
				[Address(RVA = "0xCC2BA4", Offset = "0xCC2BA4", VA = "0xCC2BA4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001B0F")]
			[Address(RVA = "0xCBE3D8", Offset = "0xCBE3D8", VA = "0xCBE3D8")]
			[DebuggerHidden]
			public <CheckDistance>d__109(int <>1__state)
			{
			}

			[Token(Token = "0x6001B10")]
			[Address(RVA = "0xCC2A54", Offset = "0xCC2A54", VA = "0xCC2A54", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001B11")]
			[Address(RVA = "0xCC2A58", Offset = "0xCC2A58", VA = "0xCC2A58", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001B13")]
			[Address(RVA = "0xCC2B44", Offset = "0xCC2B44", VA = "0xCC2B44", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200042C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E8098", Offset = "0x9E8098")]
		private sealed class <ReelIn>d__110 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40019B7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40019B8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40019B9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Bobber <>4__this;

			[Token(Token = "0x17000281")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001B18")]
				[Address(RVA = "0xCC3308", Offset = "0xCC3308", VA = "0xCC3308", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000282")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001B1A")]
				[Address(RVA = "0xCC3370", Offset = "0xCC3370", VA = "0xCC3370", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001B15")]
			[Address(RVA = "0xCBE404", Offset = "0xCBE404", VA = "0xCBE404")]
			[DebuggerHidden]
			public <ReelIn>d__110(int <>1__state)
			{
			}

			[Token(Token = "0x6001B16")]
			[Address(RVA = "0xCC3070", Offset = "0xCC3070", VA = "0xCC3070", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001B17")]
			[Address(RVA = "0xCC3074", Offset = "0xCC3074", VA = "0xCC3074", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001B19")]
			[Address(RVA = "0xCC3310", Offset = "0xCC3310", VA = "0xCC3310", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200042D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E80A8", Offset = "0x9E80A8")]
		private sealed class <AddReelForceFixedUpdate>d__112 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40019BA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40019BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40019BC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Bobber <>4__this;

			[Token(Token = "0x17000283")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001B1E")]
				[Address(RVA = "0xCC19C4", Offset = "0xCC19C4", VA = "0xCC19C4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000284")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001B20")]
				[Address(RVA = "0xCC1A2C", Offset = "0xCC1A2C", VA = "0xCC1A2C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001B1B")]
			[Address(RVA = "0xCBE4D8", Offset = "0xCBE4D8", VA = "0xCBE4D8")]
			[DebuggerHidden]
			public <AddReelForceFixedUpdate>d__112(int <>1__state)
			{
			}

			[Token(Token = "0x6001B1C")]
			[Address(RVA = "0xCC1318", Offset = "0xCC1318", VA = "0xCC1318", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001B1D")]
			[Address(RVA = "0xCC131C", Offset = "0xCC131C", VA = "0xCC131C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001B1F")]
			[Address(RVA = "0xCC19CC", Offset = "0xCC19CC", VA = "0xCC19CC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200042E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E80B8", Offset = "0x9E80B8")]
		private sealed class <AddFishForceFixedUpdate>d__114 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40019BD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40019BE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40019BF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Bobber <>4__this;

			[Token(Token = "0x40019C0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Vector3 direction;

			[Token(Token = "0x17000285")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001B24")]
				[Address(RVA = "0xCC0FAC", Offset = "0xCC0FAC", VA = "0xCC0FAC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000286")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001B26")]
				[Address(RVA = "0xCC1014", Offset = "0xCC1014", VA = "0xCC1014", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001B21")]
			[Address(RVA = "0xCBE5D0", Offset = "0xCBE5D0", VA = "0xCBE5D0")]
			[DebuggerHidden]
			public <AddFishForceFixedUpdate>d__114(int <>1__state)
			{
			}

			[Token(Token = "0x6001B22")]
			[Address(RVA = "0xCC0714", Offset = "0xCC0714", VA = "0xCC0714", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001B23")]
			[Address(RVA = "0xCC0718", Offset = "0xCC0718", VA = "0xCC0718", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001B25")]
			[Address(RVA = "0xCC0FB4", Offset = "0xCC0FB4", VA = "0xCC0FB4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200042F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E80C8", Offset = "0x9E80C8")]
		private sealed class <AddFishImpulseFixedUpdate>d__116 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40019C1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40019C2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40019C3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Bobber <>4__this;

			[Token(Token = "0x40019C4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Vector3 direction;

			[Token(Token = "0x17000287")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001B2A")]
				[Address(RVA = "0xCC12A8", Offset = "0xCC12A8", VA = "0xCC12A8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000288")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001B2C")]
				[Address(RVA = "0xCC1310", Offset = "0xCC1310", VA = "0xCC1310", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001B27")]
			[Address(RVA = "0xCBE6C8", Offset = "0xCBE6C8", VA = "0xCBE6C8")]
			[DebuggerHidden]
			public <AddFishImpulseFixedUpdate>d__116(int <>1__state)
			{
			}

			[Token(Token = "0x6001B28")]
			[Address(RVA = "0xCC101C", Offset = "0xCC101C", VA = "0xCC101C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001B29")]
			[Address(RVA = "0xCC1020", Offset = "0xCC1020", VA = "0xCC1020", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001B2B")]
			[Address(RVA = "0xCC12B0", Offset = "0xCC12B0", VA = "0xCC12B0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000430")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E80D8", Offset = "0x9E80D8")]
		private sealed class <TeleportDestination>d__123 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40019C5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40019C6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40019C7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Bobber <>4__this;

			[Token(Token = "0x40019C8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float distanceReduction;

			[Token(Token = "0x17000289")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001B30")]
				[Address(RVA = "0xCC3BC4", Offset = "0xCC3BC4", VA = "0xCC3BC4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700028A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001B32")]
				[Address(RVA = "0xCC3C2C", Offset = "0xCC3C2C", VA = "0xCC3C2C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001B2D")]
			[Address(RVA = "0xCBEE70", Offset = "0xCBEE70", VA = "0xCBEE70")]
			[DebuggerHidden]
			public <TeleportDestination>d__123(int <>1__state)
			{
			}

			[Token(Token = "0x6001B2E")]
			[Address(RVA = "0xCC37B8", Offset = "0xCC37B8", VA = "0xCC37B8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001B2F")]
			[Address(RVA = "0xCC37BC", Offset = "0xCC37BC", VA = "0xCC37BC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001B31")]
			[Address(RVA = "0xCC3BCC", Offset = "0xCC3BCC", VA = "0xCC3BCC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000431")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E80E8", Offset = "0x9E80E8")]
		private sealed class <AddRodForceFixedUpdate>d__126 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40019C9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40019CA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40019CB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Vector3 direction;

			[Token(Token = "0x1700028B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001B36")]
				[Address(RVA = "0xCC1CFC", Offset = "0xCC1CFC", VA = "0xCC1CFC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700028C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001B38")]
				[Address(RVA = "0xCC1D64", Offset = "0xCC1D64", VA = "0xCC1D64", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001B33")]
			[Address(RVA = "0xCBF19C", Offset = "0xCBF19C", VA = "0xCBF19C")]
			[DebuggerHidden]
			public <AddRodForceFixedUpdate>d__126(int <>1__state)
			{
			}

			[Token(Token = "0x6001B34")]
			[Address(RVA = "0xCC1A34", Offset = "0xCC1A34", VA = "0xCC1A34", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001B35")]
			[Address(RVA = "0xCC1A38", Offset = "0xCC1A38", VA = "0xCC1A38", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001B37")]
			[Address(RVA = "0xCC1D04", Offset = "0xCC1D04", VA = "0xCC1D04", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000432")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E80F8", Offset = "0x9E80F8")]
		private sealed class <SetHookPosition>d__143 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40019CC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40019CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40019CE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Bobber <>4__this;

			[Token(Token = "0x40019CF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Vector3 Gotoposition;

			[Token(Token = "0x40019D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public float duration;

			[Token(Token = "0x40019D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <elapsedTime>5__2;

			[Token(Token = "0x40019D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private Vector3 <startPos>5__3;

			[Token(Token = "0x1700028D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001B3C")]
				[Address(RVA = "0xCC3748", Offset = "0xCC3748", VA = "0xCC3748", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700028E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001B3E")]
				[Address(RVA = "0xCC37B0", Offset = "0xCC37B0", VA = "0xCC37B0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001B39")]
			[Address(RVA = "0xCC03D8", Offset = "0xCC03D8", VA = "0xCC03D8")]
			[DebuggerHidden]
			public <SetHookPosition>d__143(int <>1__state)
			{
			}

			[Token(Token = "0x6001B3A")]
			[Address(RVA = "0xCC35A8", Offset = "0xCC35A8", VA = "0xCC35A8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001B3B")]
			[Address(RVA = "0xCC35AC", Offset = "0xCC35AC", VA = "0xCC35AC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001B3D")]
			[Address(RVA = "0xCC3750", Offset = "0xCC3750", VA = "0xCC3750", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000433")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E8108", Offset = "0x9E8108")]
		private sealed class <ToggleCollider>d__147 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40019D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40019D4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40019D5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Bobber <>4__this;

			[Token(Token = "0x1700028F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001B42")]
				[Address(RVA = "0xBF1538", Offset = "0xBF1538", VA = "0xBF1538", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000290")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001B44")]
				[Address(RVA = "0xBF15A0", Offset = "0xBF15A0", VA = "0xBF15A0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001B3F")]
			[Address(RVA = "0xBF1474", Offset = "0xBF1474", VA = "0xBF1474")]
			[DebuggerHidden]
			public <ToggleCollider>d__147(int <>1__state)
			{
			}

			[Token(Token = "0x6001B40")]
			[Address(RVA = "0xBF14A0", Offset = "0xBF14A0", VA = "0xBF14A0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001B41")]
			[Address(RVA = "0xBF14A4", Offset = "0xBF14A4", VA = "0xBF14A4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001B43")]
			[Address(RVA = "0xBF1540", Offset = "0xBF1540", VA = "0xBF1540", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000E2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Bobber instance;

		[Token(Token = "0x4000E2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private jointSettings jointSet;

		[Token(Token = "0x4000E2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Rigidbody rb;

		[Token(Token = "0x4000E30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Transform rodEnd;

		[Token(Token = "0x4000E31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private AudioSource audio;

		[Token(Token = "0x4000E32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public bool isCasting;

		[Token(Token = "0x4000E33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public SpawnPool vfx;

		[Token(Token = "0x4000E34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public SpawnPool creaturePool;

		[Token(Token = "0x4000E35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public SpawnPool itemPool;

		[Token(Token = "0x4000E36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Transform fishFleeSplashPrefab;

		[Token(Token = "0x4000E37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Transform fishRunRageSplashPrefab;

		[Token(Token = "0x4000E38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public TrailRenderer tr;

		[Token(Token = "0x4000E39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private bool canPlayReelClick;

		[Token(Token = "0x4000E3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private float rippleInterval;

		[Token(Token = "0x4000E3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private float lastRipple;

		[Token(Token = "0x4000E3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private bool isJumping;

		[Token(Token = "0x4000E3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Tween jumpTween;

		[Token(Token = "0x4000E3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public GameObject recoverBobber;

		[Token(Token = "0x4000E3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public bool canRecoverBobber;

		[Token(Token = "0x4000E40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB9")]
		private bool deferSmallBite;

		[Token(Token = "0x4000E41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public GameObject smallBiteAlert;

		[Token(Token = "0x4000E42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public bool inBaitArea;

		[Token(Token = "0x4000E43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC9")]
		private bool inHotspot;

		[Token(Token = "0x4000E44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public Transform baitHitVfx;

		[Token(Token = "0x4000E45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private bool inBaitAreaLastState;

		[Token(Token = "0x4000E46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		private float bobberToRodTipDistance;

		[Token(Token = "0x4000E47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private float bobberToOriginDistance;

		[Token(Token = "0x4000E48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private Collider col;

		[Token(Token = "0x4000E49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public GameObject model;

		[Token(Token = "0x4000E4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public PerlinMover mover;

		[Token(Token = "0x4000E4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private float reelPower;

		[Token(Token = "0x4000E4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		private float reelMaxSpeed;

		[Token(Token = "0x4000E4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public float reelingSpeedMultiplier;

		[Token(Token = "0x4000E4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		private float continuousRodReelTimeCounter;

		[Token(Token = "0x4000E4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private float continuousRodRestTimeCounter;

		[Token(Token = "0x4000E50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		private float attractionRadiusMultiplier;

		[Token(Token = "0x4000E51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private float attractionRadiusUpdateInterval;

		[Token(Token = "0x4000E52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		private bool lastIsReeling;

		[Token(Token = "0x4000E53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		public GameObject bobberPosition;

		[Token(Token = "0x4000E54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private bool doingBite;

		[Token(Token = "0x4000E55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		public GameObject underwaterFish;

		[Token(Token = "0x4000E56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		public float boostPowerReel;

		[Token(Token = "0x4000E57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		public GameObject powerReelParticles;

		[Token(Token = "0x4000E58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		public Transform hookedFish;

		[Token(Token = "0x4000E59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		public bool isTakingFish;

		[Token(Token = "0x4000E5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		private Tween recoverFishTween;

		[Token(Token = "0x4000E5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		public bool isTaken;

		[Token(Token = "0x4000E5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x161")]
		public bool isAttractive;

		[Token(Token = "0x4000E5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x162")]
		public bool leanDirChangeBoost;

		[Token(Token = "0x4000E5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
		private CharmSO.CharmType m_CharmType;

		[Token(Token = "0x4000E61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		private float bobberVelo;

		[Token(Token = "0x4000E62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
		public bool debugFishForceDir;

		[Token(Token = "0x4000E63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		public LineRenderer forceDebugLR;

		[Token(Token = "0x4000E64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		public bool debugReelForceDir;

		[Token(Token = "0x4000E65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		public LineRenderer reelForceDebugLR;

		[Token(Token = "0x4000E66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		[SerializeField]
		private Transform hookTrans;

		[Token(Token = "0x4000E67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		[SerializeField]
		private WaterInteractor waterInteractor;

		[Token(Token = "0x4000E68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static float staminaEffectiveness;

		[Token(Token = "0x4000E69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		private bool isReeling;

		[Token(Token = "0x4000E6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		public Transform teleportOrigin;

		[Token(Token = "0x4000E6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		public Transform teleportDestination;

		[Token(Token = "0x170000FE")]
		public Transform rodTip
		{
			[Token(Token = "0x6000C4E")]
			[Address(RVA = "0xCBB554", Offset = "0xCBB554", VA = "0xCBB554")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000FF")]
		public static TrailRenderer trailRend
		{
			[Token(Token = "0x6000C4F")]
			[Address(RVA = "0xCBB55C", Offset = "0xCBB55C", VA = "0xCBB55C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000100")]
		public bool IsJumping
		{
			[Token(Token = "0x6000C50")]
			[Address(RVA = "0xCBB5D0", Offset = "0xCBB5D0", VA = "0xCBB5D0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000101")]
		public float distanceToRodTip
		{
			[Token(Token = "0x6000C51")]
			[Address(RVA = "0xCBB5D8", Offset = "0xCBB5D8", VA = "0xCBB5D8")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000102")]
		public float distanceToOrigin
		{
			[Token(Token = "0x6000C52")]
			[Address(RVA = "0xCBB5E0", Offset = "0xCBB5E0", VA = "0xCBB5E0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000103")]
		public CharmSO.CharmType CurrentCharmType
		{
			[Token(Token = "0x6000C53")]
			[Address(RVA = "0xCBB5E8", Offset = "0xCBB5E8", VA = "0xCBB5E8")]
			get
			{
				return default(CharmSO.CharmType);
			}
		}

		[Token(Token = "0x14000036")]
		public static event BobberEnteredWater OnBobberEnteredWater
		{
			[Token(Token = "0x6000C54")]
			[Address(RVA = "0xCBB5F0", Offset = "0xCBB5F0", VA = "0xCBB5F0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F0844", Offset = "0x9F0844")]
			add
			{
			}
			[Token(Token = "0x6000C55")]
			[Address(RVA = "0xCBB6E0", Offset = "0xCBB6E0", VA = "0xCBB6E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F0854", Offset = "0x9F0854")]
			remove
			{
			}
		}

		[Token(Token = "0x14000037")]
		public static event BobberExitedWater OnBobberExitedWater
		{
			[Token(Token = "0x6000C56")]
			[Address(RVA = "0xCBB7D0", Offset = "0xCBB7D0", VA = "0xCBB7D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F0864", Offset = "0x9F0864")]
			add
			{
			}
			[Token(Token = "0x6000C57")]
			[Address(RVA = "0xCBB8C0", Offset = "0xCBB8C0", VA = "0xCBB8C0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F0874", Offset = "0x9F0874")]
			remove
			{
			}
		}

		[Token(Token = "0x6000C58")]
		[Address(RVA = "0xCBB9B0", Offset = "0xCBB9B0", VA = "0xCBB9B0")]
		public static float GetVelocity()
		{
			return default(float);
		}

		[Token(Token = "0x6000C59")]
		[Address(RVA = "0xCBBA24", Offset = "0xCBBA24", VA = "0xCBBA24")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000C5A")]
		[Address(RVA = "0xCBBA50", Offset = "0xCBBA50", VA = "0xCBBA50")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9F0884", Offset = "0x9F0884")]
		private IEnumerator Init()
		{
			return null;
		}

		[Token(Token = "0x6000C5B")]
		[Address(RVA = "0xCBBAF8", Offset = "0xCBBAF8", VA = "0xCBBAF8")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6000C5C")]
		[Address(RVA = "0xCBBBAC", Offset = "0xCBBBAC", VA = "0xCBBBAC")]
		public static void Cast(float speed)
		{
		}

		[Token(Token = "0x6000C5D")]
		[Address(RVA = "0xCBBC40", Offset = "0xCBBC40", VA = "0xCBBC40")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9F08E8", Offset = "0x9F08E8")]
		private IEnumerator CastCo(float speed)
		{
			return null;
		}

		[Token(Token = "0x6000C5E")]
		[Address(RVA = "0xCBBCF8", Offset = "0xCBBCF8", VA = "0xCBBCF8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9F094C", Offset = "0x9F094C")]
		private IEnumerator CastCourseCorrect()
		{
			return null;
		}

		[Token(Token = "0x6000C5F")]
		[Address(RVA = "0xCBBDA0", Offset = "0xCBBDA0", VA = "0xCBBDA0")]
		public static void AddJoint()
		{
		}

		[Token(Token = "0x6000C60")]
		[Address(RVA = "0xCBBFAC", Offset = "0xCBBFAC", VA = "0xCBBFAC")]
		public static void ResetBobber()
		{
		}

		[Token(Token = "0x6000C61")]
		[Address(RVA = "0xCBC750", Offset = "0xCBC750", VA = "0xCBC750")]
		private void BobberJump(float force)
		{
		}

		[Token(Token = "0x6000C62")]
		[Address(RVA = "0xCBCC78", Offset = "0xCBCC78", VA = "0xCBCC78")]
		public void PerformSnapBack(float times, Action callback)
		{
		}

		[Token(Token = "0x6000C63")]
		[Address(RVA = "0xCBCCA4", Offset = "0xCBCCA4", VA = "0xCBCCA4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9F09B0", Offset = "0x9F09B0")]
		private IEnumerator BobberSnapBack(float times, Action callback)
		{
			return null;
		}

		[Token(Token = "0x6000C64")]
		[Address(RVA = "0xCBCD78", Offset = "0xCBCD78", VA = "0xCBCD78")]
		public void SnapFailFallback()
		{
		}

		[Token(Token = "0x6000C65")]
		[Address(RVA = "0xCBD018", Offset = "0xCBD018", VA = "0xCBD018")]
		private void CompleteJump()
		{
		}

		[Token(Token = "0x6000C66")]
		[Address(RVA = "0xCBD2D8", Offset = "0xCBD2D8", VA = "0xCBD2D8")]
		private void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x6000C67")]
		[Address(RVA = "0xCBD94C", Offset = "0xCBD94C", VA = "0xCBD94C")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6000C68")]
		[Address(RVA = "0xCBDC00", Offset = "0xCBDC00", VA = "0xCBDC00")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6000C69")]
		[Address(RVA = "0xCBDBA0", Offset = "0xCBDBA0", VA = "0xCBDBA0")]
		private void SetIsTaken()
		{
		}

		[Token(Token = "0x6000C6A")]
		[Address(RVA = "0xCBC6BC", Offset = "0xCBC6BC", VA = "0xCBC6BC")]
		public void ResetIsTaken()
		{
		}

		[Token(Token = "0x6000C6B")]
		[Address(RVA = "0xCBD068", Offset = "0xCBD068", VA = "0xCBD068")]
		private void MakeSplash(bool recoverFish = false)
		{
		}

		[Token(Token = "0x6000C6C")]
		[Address(RVA = "0xCBDC04", Offset = "0xCBDC04", VA = "0xCBDC04")]
		private void MakeRipples()
		{
		}

		[Token(Token = "0x6000C6D")]
		[Address(RVA = "0xCBDE18", Offset = "0xCBDE18", VA = "0xCBDE18")]
		private void MakeDisturbance()
		{
		}

		[Token(Token = "0x6000C6E")]
		[Address(RVA = "0xCBDF9C", Offset = "0xCBDF9C", VA = "0xCBDF9C")]
		private bool IsSameReelState(FriMinigameState state)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C6F")]
		[Address(RVA = "0xCBE028", Offset = "0xCBE028", VA = "0xCBE028")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9F0A14", Offset = "0x9F0A14")]
		public IEnumerator FishChurn(FriMinigameState state)
		{
			return null;
		}

		[Token(Token = "0x6000C70")]
		[Address(RVA = "0xCBE0E0", Offset = "0xCBE0E0", VA = "0xCBE0E0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9F0A78", Offset = "0x9F0A78")]
		public IEnumerator RunRageChurn(FriMinigameState state)
		{
			return null;
		}

		[Token(Token = "0x6000C71")]
		[Address(RVA = "0xCBE198", Offset = "0xCBE198", VA = "0xCBE198")]
		public void BigBiteChurn()
		{
		}

		[Token(Token = "0x6000C72")]
		[Address(RVA = "0xCBE2B4", Offset = "0xCBE2B4", VA = "0xCBE2B4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9F0ADC", Offset = "0x9F0ADC")]
		private IEnumerator CheckBelowSurface()
		{
			return null;
		}

		[Token(Token = "0x6000C73")]
		[Address(RVA = "0xCBE35C", Offset = "0xCBE35C", VA = "0xCBE35C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9F0B40", Offset = "0x9F0B40")]
		private IEnumerator CheckDistance()
		{
			return null;
		}

		[Token(Token = "0x6000C74")]
		[Address(RVA = "0xCBD8D0", Offset = "0xCBD8D0", VA = "0xCBD8D0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9F0BA4", Offset = "0x9F0BA4")]
		private IEnumerator ReelIn()
		{
			return null;
		}

		[Token(Token = "0x6000C75")]
		[Address(RVA = "0xCBE430", Offset = "0xCBE430", VA = "0xCBE430")]
		public void AddReelForce()
		{
		}

		[Token(Token = "0x6000C76")]
		[Address(RVA = "0xCBE45C", Offset = "0xCBE45C", VA = "0xCBE45C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9F0C08", Offset = "0x9F0C08")]
		private IEnumerator AddReelForceFixedUpdate()
		{
			return null;
		}

		[Token(Token = "0x6000C77")]
		[Address(RVA = "0xCBE504", Offset = "0xCBE504", VA = "0xCBE504")]
		public void AddFishForce(Vector3 direction)
		{
		}

		[Token(Token = "0x6000C78")]
		[Address(RVA = "0xCBE530", Offset = "0xCBE530", VA = "0xCBE530")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9F0C6C", Offset = "0x9F0C6C")]
		private IEnumerator AddFishForceFixedUpdate(Vector3 direction)
		{
			return null;
		}

		[Token(Token = "0x6000C79")]
		[Address(RVA = "0xCBE5FC", Offset = "0xCBE5FC", VA = "0xCBE5FC")]
		public void AddFishImpulse(Vector3 direction)
		{
		}

		[Token(Token = "0x6000C7A")]
		[Address(RVA = "0xCBE628", Offset = "0xCBE628", VA = "0xCBE628")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9F0CD0", Offset = "0x9F0CD0")]
		private IEnumerator AddFishImpulseFixedUpdate(Vector3 direction)
		{
			return null;
		}

		[Token(Token = "0x6000C7B")]
		[Address(RVA = "0xCBE6F4", Offset = "0xCBE6F4", VA = "0xCBE6F4")]
		private void UpdateFishForceDebug(Vector3 fleeDir)
		{
		}

		[Token(Token = "0x6000C7C")]
		[Address(RVA = "0xCBE8C0", Offset = "0xCBE8C0", VA = "0xCBE8C0")]
		private void SetForceDebugColor(Color color)
		{
		}

		[Token(Token = "0x6000C7D")]
		[Address(RVA = "0xCBE948", Offset = "0xCBE948", VA = "0xCBE948")]
		private void UpdateReelForceDebug(Vector3 reelForceDir)
		{
		}

		[Token(Token = "0x6000C7E")]
		[Address(RVA = "0xCBEB5C", Offset = "0xCBEB5C", VA = "0xCBEB5C")]
		private bool OutOfFishingCone(Vector3 forceDebugPos)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C7F")]
		[Address(RVA = "0xCBEBD4", Offset = "0xCBEBD4", VA = "0xCBEBD4")]
		public void AddShockPullForce(float multiplier)
		{
		}

		[Token(Token = "0x6000C80")]
		[Address(RVA = "0xCBEDB8", Offset = "0xCBEDB8", VA = "0xCBEDB8")]
		public void Teleport(float distanceReduction)
		{
		}

		[Token(Token = "0x6000C81")]
		[Address(RVA = "0xCBEDE4", Offset = "0xCBEDE4", VA = "0xCBEDE4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9F0D34", Offset = "0x9F0D34")]
		private IEnumerator TeleportDestination(float distanceReduction)
		{
			return null;
		}

		[Token(Token = "0x6000C82")]
		[Address(RVA = "0xCBEE9C", Offset = "0xCBEE9C", VA = "0xCBEE9C")]
		public bool DirectionOutOfBounds(Vector3 direction)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C83")]
		[Address(RVA = "0xCBF068", Offset = "0xCBF068", VA = "0xCBF068")]
		public static void AddRodForce(Vector3 direction)
		{
		}

		[Token(Token = "0x6000C84")]
		[Address(RVA = "0xCBF110", Offset = "0xCBF110", VA = "0xCBF110")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9F0D98", Offset = "0x9F0D98")]
		private IEnumerator AddRodForceFixedUpdate(Vector3 direction)
		{
			return null;
		}

		[Token(Token = "0x6000C85")]
		[Address(RVA = "0xCBF1C8", Offset = "0xCBF1C8", VA = "0xCBF1C8")]
		private void PositionRecoverBobber()
		{
		}

		[Token(Token = "0x6000C86")]
		[Address(RVA = "0xCBF298", Offset = "0xCBF298", VA = "0xCBF298")]
		private void CheckBobberDistance()
		{
		}

		[Token(Token = "0x6000C87")]
		[Address(RVA = "0xCBF5B4", Offset = "0xCBF5B4", VA = "0xCBF5B4")]
		private void CheckCanRecover()
		{
		}

		[Token(Token = "0x6000C88")]
		[Address(RVA = "0xCBF930", Offset = "0xCBF930", VA = "0xCBF930")]
		private void SetupRecoverBobber()
		{
		}

		[Token(Token = "0x6000C89")]
		[Address(RVA = "0xCBF7FC", Offset = "0xCBF7FC", VA = "0xCBF7FC")]
		private void StartReadyToRecover()
		{
		}

		[Token(Token = "0x6000C8A")]
		[Address(RVA = "0xCBC4C8", Offset = "0xCBC4C8", VA = "0xCBC4C8")]
		private void DisableRecoverBobber()
		{
		}

		[Token(Token = "0x6000C8B")]
		[Address(RVA = "0xCBCA84", Offset = "0xCBCA84", VA = "0xCBCA84")]
		private void RecoverBobber(float force = 0f)
		{
		}

		[Token(Token = "0x6000C8C")]
		[Address(RVA = "0xCBFA5C", Offset = "0xCBFA5C", VA = "0xCBFA5C")]
		private void TrySubstitueTutFish()
		{
		}

		[Token(Token = "0x6000C8D")]
		[Address(RVA = "0xCBD100", Offset = "0xCBD100", VA = "0xCBD100")]
		public void SmallBite()
		{
		}

		[Token(Token = "0x6000C8E")]
		[Address(RVA = "0xCBFB74", Offset = "0xCBFB74", VA = "0xCBFB74")]
		public void BigBite()
		{
		}

		[Token(Token = "0x6000C8F")]
		[Address(RVA = "0xCBFC50", Offset = "0xCBFC50", VA = "0xCBFC50")]
		public void Hooked()
		{
		}

		[Token(Token = "0x6000C90")]
		[Address(RVA = "0xCBFD98", Offset = "0xCBFD98", VA = "0xCBFD98")]
		public static void setTrigger(bool state)
		{
		}

		[Token(Token = "0x6000C91")]
		[Address(RVA = "0xCBC500", Offset = "0xCBC500", VA = "0xCBC500")]
		public static void SetHidden(bool state)
		{
		}

		[Token(Token = "0x6000C92")]
		[Address(RVA = "0xCBFE1C", Offset = "0xCBFE1C", VA = "0xCBFE1C")]
		public static void SpawnSelectedFish(FishTypeSO fishType, [Optional] Transform trns)
		{
		}

		[Token(Token = "0x6000C93")]
		[Address(RVA = "0xCC00A4", Offset = "0xCC00A4", VA = "0xCC00A4")]
		public static void ReparentHookTrans(Transform trns)
		{
		}

		[Token(Token = "0x6000C94")]
		[Address(RVA = "0xCC0174", Offset = "0xCC0174", VA = "0xCC0174")]
		public static void DespawnSelectedFish()
		{
		}

		[Token(Token = "0x6000C95")]
		[Address(RVA = "0xCC0334", Offset = "0xCC0334", VA = "0xCC0334")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9F0DFC", Offset = "0x9F0DFC")]
		private IEnumerator SetHookPosition(Vector3 Gotoposition, float duration)
		{
			return null;
		}

		[Token(Token = "0x6000C96")]
		[Address(RVA = "0xCBD7E8", Offset = "0xCBD7E8", VA = "0xCBD7E8")]
		private void StartBobberAttraction()
		{
		}

		[Token(Token = "0x6000C97")]
		[Address(RVA = "0xCBC648", Offset = "0xCBC648", VA = "0xCBC648")]
		private void StopBobberAttraction()
		{
		}

		[Token(Token = "0x6000C98")]
		[Address(RVA = "0xCC0404", Offset = "0xCC0404", VA = "0xCC0404")]
		private void UpdateAttractionRadius()
		{
		}

		[Token(Token = "0x6000C99")]
		[Address(RVA = "0xCC0574", Offset = "0xCC0574", VA = "0xCC0574")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9F0E60", Offset = "0x9F0E60")]
		private IEnumerator ToggleCollider()
		{
			return null;
		}

		[Token(Token = "0x6000C9A")]
		[Address(RVA = "0xCC05F0", Offset = "0xCC05F0", VA = "0xCC05F0")]
		public float GetAttractionRadius()
		{
			return default(float);
		}

		[Token(Token = "0x6000C9B")]
		[Address(RVA = "0xCBF9FC", Offset = "0xCBF9FC", VA = "0xCBF9FC")]
		private void BossFishCaught()
		{
		}

		[Token(Token = "0x6000C9C")]
		[Address(RVA = "0xCC0628", Offset = "0xCC0628", VA = "0xCC0628")]
		public Bobber()
		{
		}

		[Token(Token = "0x6000C9E")]
		[Address(RVA = "0xCC06C0", Offset = "0xCC06C0", VA = "0xCC06C0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F0EC4", Offset = "0x9F0EC4")]
		private void <BobberJump>b__91_0()
		{
		}

		[Token(Token = "0x6000C9F")]
		[Address(RVA = "0xCC06C4", Offset = "0xCC06C4", VA = "0xCC06C4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F0ED4", Offset = "0x9F0ED4")]
		private void <SnapFailFallback>b__94_0()
		{
		}

		[Token(Token = "0x6000CA0")]
		[Address(RVA = "0xCC06C8", Offset = "0xCC06C8", VA = "0xCC06C8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F0EE4", Offset = "0x9F0EE4")]
		private void <SmallBite>b__135_0()
		{
		}
	}
	[Token(Token = "0x2000213")]
	public class Bobbing : MonoBehaviour
	{
		[Token(Token = "0x4000E6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Tween bobTween;

		[Token(Token = "0x4000E6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Tween rotTween;

		[Token(Token = "0x4000E6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float duration;

		[Token(Token = "0x4000E6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float rotation;

		[Token(Token = "0x6000CA1")]
		[Address(RVA = "0xBF22E0", Offset = "0xBF22E0", VA = "0xBF22E0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000CA2")]
		[Address(RVA = "0xBF22E4", Offset = "0xBF22E4", VA = "0xBF22E4")]
		private void DoBob()
		{
		}

		[Token(Token = "0x6000CA3")]
		[Address(RVA = "0xBF24A4", Offset = "0xBF24A4", VA = "0xBF24A4")]
		public Bobbing()
		{
		}
	}
	[Token(Token = "0x2000214")]
	public class CharmModel : MonoBehaviour
	{
		[Token(Token = "0x4000E70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static CharmModel instance;

		[Token(Token = "0x4000E71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform model;

		[Token(Token = "0x17000104")]
		public static Transform Model
		{
			[Token(Token = "0x6000CA4")]
			[Address(RVA = "0xBFA684", Offset = "0xBFA684", VA = "0xBFA684")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000CA5")]
		[Address(RVA = "0xBFA6E0", Offset = "0xBFA6E0", VA = "0xBFA6E0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000CA6")]
		[Address(RVA = "0xBFA738", Offset = "0xBFA738", VA = "0xBFA738")]
		public CharmModel()
		{
		}
	}
	[Token(Token = "0x2000215")]
	public class GetCloudPathController : MonoBehaviour
	{
		[Token(Token = "0x6000CA7")]
		[Address(RVA = "0xCA07D0", Offset = "0xCA07D0", VA = "0xCA07D0")]
		public GetCloudPathController()
		{
		}
	}
	[Token(Token = "0x2000216")]
	public class UI_CraftingController : MonoBehaviour
	{
		[Token(Token = "0x2000434")]
		public delegate bool CraftingAction(CraftingRecipesSO craftingRecipes, int multiple);

		[Token(Token = "0x2000435")]
		public delegate void CraftingSuccessAction();

		[Token(Token = "0x2000436")]
		public delegate void CraftingFailedAction();

		[Token(Token = "0x2000437")]
		public delegate void UpdateNewRecipeAction(int newRecipeCount);

		[Token(Token = "0x2000438")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E8118", Offset = "0x9E8118")]
		private sealed class <>c__DisplayClass71_0
		{
			[Token(Token = "0x40019D6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public CraftingRecipesSO recipe;

			[Token(Token = "0x40019D7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public UI_CraftingController <>4__this;

			[Token(Token = "0x6001B55")]
			[Address(RVA = "0xC364E4", Offset = "0xC364E4", VA = "0xC364E4")]
			public <>c__DisplayClass71_0()
			{
			}

			[Token(Token = "0x6001B56")]
			[Address(RVA = "0xC37B8C", Offset = "0xC37B8C", VA = "0xC37B8C")]
			internal void <ChangeRecipe>b__0()
			{
			}
		}

		[Token(Token = "0x4000E72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static UI_CraftingController Instance;

		[Token(Token = "0x4000E73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private CraftingRecipesSO[] Recipes;

		[Token(Token = "0x4000E74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Sprite DefaultIcon;

		[Token(Token = "0x4000E75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Sprite ErrorIcon;

		[Token(Token = "0x4000E76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private UI_CraftingIngredient[] ItemIngredients;

		[Token(Token = "0x4000E77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Localize ItemName;

		[Token(Token = "0x4000E78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Localize ItemDescription;

		[Token(Token = "0x4000E79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Image ItemDetailIcon;

		[Token(Token = "0x4000E7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private UI_CraftingItem[] ItemIcon;

		[Token(Token = "0x4000E7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Button ItemCraftButton;

		[Token(Token = "0x4000E7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GameObject ItemDetails;

		[Token(Token = "0x4000E7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private GameObject ItemPage;

		[Token(Token = "0x4000E7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private GameObject NewAllIcon;

		[Token(Token = "0x4000E7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private GameObject NewLureIcon;

		[Token(Token = "0x4000E80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private GameObject NewRodIcon;

		[Token(Token = "0x4000E81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private GameObject NewCharmIcon;

		[Token(Token = "0x4000E82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private GameObject NewDecoIcon;

		[Token(Token = "0x4000E83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private TMP_Text NewAllCount;

		[Token(Token = "0x4000E84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private TMP_Text NewLureCount;

		[Token(Token = "0x4000E85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private TMP_Text NewRodCount;

		[Token(Token = "0x4000E86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private TMP_Text NewCharmCount;

		[Token(Token = "0x4000E87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private TMP_Text NewDecoCount;

		[Token(Token = "0x4000E88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private Button AllButton;

		[Token(Token = "0x4000E89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private Button LureButton;

		[Token(Token = "0x4000E8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private Button RodButton;

		[Token(Token = "0x4000E8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private Button CharmButton;

		[Token(Token = "0x4000E8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private Button DecoButton;

		[Token(Token = "0x4000E8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[SerializeField]
		private Color EnoughIngredients;

		[Token(Token = "0x4000E8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[SerializeField]
		private Color NotEnoughIngredients;

		[Token(Token = "0x4000E8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[SerializeField]
		private TMP_Text CraftedItemCount;

		[Token(Token = "0x4000E90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[SerializeField]
		private GameObject DetailNewIcon;

		[Token(Token = "0x4000E91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[SerializeField]
		private GameObject CraftingSuccessPopup;

		[Token(Token = "0x4000E92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[SerializeField]
		private Image CraftingSuccessIcon;

		[Token(Token = "0x4000E93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[SerializeField]
		private Localize CraftingSuccessName;

		[Token(Token = "0x4000E94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[SerializeField]
		private Localize CraftingSuccessDescription;

		[Token(Token = "0x4000E95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		[SerializeField]
		private Button ArrowNext;

		[Token(Token = "0x4000E96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		[SerializeField]
		private Button ArrowPrev;

		[Token(Token = "0x4000E97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		[SerializeField]
		private GameObject InfoPanel;

		[Token(Token = "0x4000E98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private int m_index;

		[Token(Token = "0x4000E99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		private List<CraftingRecipesSO> m_Recipes;

		[Token(Token = "0x4000E9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		private List<CraftingRecipesSO> currentRecipes;

		[Token(Token = "0x4000E9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		private int m_multiple;

		[Token(Token = "0x4000EA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		private CraftingRecipesSO awaitCraftingOfRecipe;

		[Token(Token = "0x4000EA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		private ItemTypeSO m_itemType;

		[Token(Token = "0x4000EA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		private int ListAmount;

		[Token(Token = "0x14000038")]
		public static event CraftingAction OnCraftStarted
		{
			[Token(Token = "0x6000CA8")]
			[Address(RVA = "0xC342E0", Offset = "0xC342E0", VA = "0xC342E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F0EF4", Offset = "0x9F0EF4")]
			add
			{
			}
			[Token(Token = "0x6000CA9")]
			[Address(RVA = "0xC34398", Offset = "0xC34398", VA = "0xC34398")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F0F04", Offset = "0x9F0F04")]
			remove
			{
			}
		}

		[Token(Token = "0x14000039")]
		public static event CraftingSuccessAction OnCraftFX
		{
			[Token(Token = "0x6000CAA")]
			[Address(RVA = "0xC34450", Offset = "0xC34450", VA = "0xC34450")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F0F14", Offset = "0x9F0F14")]
			add
			{
			}
			[Token(Token = "0x6000CAB")]
			[Address(RVA = "0xC34508", Offset = "0xC34508", VA = "0xC34508")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F0F24", Offset = "0x9F0F24")]
			remove
			{
			}
		}

		[Token(Token = "0x1400003A")]
		public static event CraftingFailedAction OnCraftFailFX
		{
			[Token(Token = "0x6000CAC")]
			[Address(RVA = "0xC345C0", Offset = "0xC345C0", VA = "0xC345C0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F0F34", Offset = "0x9F0F34")]
			add
			{
			}
			[Token(Token = "0x6000CAD")]
			[Address(RVA = "0xC34678", Offset = "0xC34678", VA = "0xC34678")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F0F44", Offset = "0x9F0F44")]
			remove
			{
			}
		}

		[Token(Token = "0x1400003B")]
		public static event UpdateNewRecipeAction OnNewRecipeUpdated
		{
			[Token(Token = "0x6000CAE")]
			[Address(RVA = "0xC34730", Offset = "0xC34730", VA = "0xC34730")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F0F54", Offset = "0x9F0F54")]
			add
			{
			}
			[Token(Token = "0x6000CAF")]
			[Address(RVA = "0xC347E8", Offset = "0xC347E8", VA = "0xC347E8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F0F64", Offset = "0x9F0F64")]
			remove
			{
			}
		}

		[Token(Token = "0x6000CB0")]
		[Address(RVA = "0xC348A0", Offset = "0xC348A0", VA = "0xC348A0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000CB1")]
		[Address(RVA = "0xC34A9C", Offset = "0xC34A9C", VA = "0xC34A9C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000CB2")]
		[Address(RVA = "0xC3503C", Offset = "0xC3503C", VA = "0xC3503C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000CB3")]
		[Address(RVA = "0xC34DB0", Offset = "0xC34DB0", VA = "0xC34DB0")]
		private void SetMenuNewIcon()
		{
		}

		[Token(Token = "0x6000CB4")]
		[Address(RVA = "0xC352BC", Offset = "0xC352BC", VA = "0xC352BC")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000CB5")]
		[Address(RVA = "0xC353F8", Offset = "0xC353F8", VA = "0xC353F8")]
		private void GenerateRecipeList(ItemTypeSO itemType)
		{
		}

		[Token(Token = "0x6000CB6")]
		[Address(RVA = "0xC34B48", Offset = "0xC34B48", VA = "0xC34B48")]
		public void OnTabClick(ItemTypeSO itemType)
		{
		}

		[Token(Token = "0x6000CB7")]
		[Address(RVA = "0xC36188", Offset = "0xC36188", VA = "0xC36188")]
		private void setArrows()
		{
		}

		[Token(Token = "0x6000CB8")]
		[Address(RVA = "0xC362A8", Offset = "0xC362A8", VA = "0xC362A8")]
		public void OnIncreaseCharm()
		{
		}

		[Token(Token = "0x6000CB9")]
		[Address(RVA = "0xC363C8", Offset = "0xC363C8", VA = "0xC363C8")]
		public void OnDecreaseCharm()
		{
		}

		[Token(Token = "0x6000CBA")]
		[Address(RVA = "0xC359E8", Offset = "0xC359E8", VA = "0xC359E8")]
		private void ChangeRecipe(int multiple = 1)
		{
		}

		[Token(Token = "0x6000CBB")]
		[Address(RVA = "0xC364EC", Offset = "0xC364EC", VA = "0xC364EC")]
		public void onItemClick(CraftingRecipesSO recipe)
		{
		}

		[Token(Token = "0x6000CBC")]
		[Address(RVA = "0xC36FF0", Offset = "0xC36FF0", VA = "0xC36FF0")]
		public void OnCreate()
		{
		}

		[Token(Token = "0x6000CBD")]
		[Address(RVA = "0xC37514", Offset = "0xC37514", VA = "0xC37514")]
		public void OnItemCrafted(CraftingRecipesSO recipeCrafted)
		{
		}

		[Token(Token = "0x6000CBE")]
		[Address(RVA = "0xC3761C", Offset = "0xC3761C", VA = "0xC3761C")]
		private void CraftSuccessFX()
		{
		}

		[Token(Token = "0x6000CBF")]
		[Address(RVA = "0xC37688", Offset = "0xC37688", VA = "0xC37688")]
		public void OnCreateEquipment()
		{
		}

		[Token(Token = "0x6000CC0")]
		[Address(RVA = "0xC37778", Offset = "0xC37778", VA = "0xC37778")]
		public static void CraftingFailed()
		{
		}

		[Token(Token = "0x6000CC1")]
		[Address(RVA = "0xC379E4", Offset = "0xC379E4", VA = "0xC379E4")]
		private void InitUI(IngredientsSO ingredient)
		{
		}

		[Token(Token = "0x6000CC2")]
		[Address(RVA = "0xC379E8", Offset = "0xC379E8", VA = "0xC379E8")]
		private void InitUI(CharmSO charm)
		{
		}

		[Token(Token = "0x6000CC3")]
		[Address(RVA = "0xC379EC", Offset = "0xC379EC", VA = "0xC379EC")]
		private void InitUI(CraftingRecipesSO recipe)
		{
		}

		[Token(Token = "0x6000CC4")]
		[Address(RVA = "0xC37A14", Offset = "0xC37A14", VA = "0xC37A14")]
		public void OnChangeCreateAmount(int n)
		{
		}

		[Token(Token = "0x6000CC5")]
		[Address(RVA = "0xC317C8", Offset = "0xC317C8", VA = "0xC317C8")]
		public void ResetRecipes()
		{
		}

		[Token(Token = "0x6000CC6")]
		[Address(RVA = "0xC37668", Offset = "0xC37668", VA = "0xC37668")]
		public void EnableCraftButton()
		{
		}

		[Token(Token = "0x6000CC7")]
		[Address(RVA = "0xC37AD4", Offset = "0xC37AD4", VA = "0xC37AD4")]
		public UI_CraftingController()
		{
		}
	}
	[Token(Token = "0x2000217")]
	public class UI_CraftingIngredient : MonoBehaviour
	{
		[Token(Token = "0x4000EA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Localize Name;

		[Token(Token = "0x4000EA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TMP_Text Name_TMP;

		[Token(Token = "0x4000EA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TMP_Text Amount;

		[Token(Token = "0x4000EA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Image Icon;

		[Token(Token = "0x4000EA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Localize Tooltip;

		[Token(Token = "0x6000CC8")]
		[Address(RVA = "0xC37FD8", Offset = "0xC37FD8", VA = "0xC37FD8")]
		public UI_CraftingIngredient()
		{
		}
	}
	[Token(Token = "0x2000218")]
	public class UI_CraftingItem : MonoBehaviour
	{
		[Token(Token = "0x4000EA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject New;

		[Token(Token = "0x4000EA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool isNew;

		[Token(Token = "0x4000EAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject Check;

		[Token(Token = "0x4000EAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject Outline;

		[Token(Token = "0x4000EAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Image QuestionMark;

		[Token(Token = "0x4000EAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Image Locker;

		[Token(Token = "0x4000EAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Image Bg;

		[Token(Token = "0x4000EAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Button btn;

		[Token(Token = "0x4000EB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public CraftingRecipesSO recipe;

		[Token(Token = "0x6000CC9")]
		[Address(RVA = "0xC37FE0", Offset = "0xC37FE0", VA = "0xC37FE0")]
		public UI_CraftingItem()
		{
		}
	}
	[Token(Token = "0x2000219")]
	public class UI_CraftingRodItem : MonoBehaviour
	{
		[Token(Token = "0x4000EB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject New;

		[Token(Token = "0x4000EB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject Check;

		[Token(Token = "0x4000EB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Image Icon;

		[Token(Token = "0x4000EB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Image QuestionMark;

		[Token(Token = "0x4000EB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Button btn;

		[Token(Token = "0x4000EB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Localize RodName;

		[Token(Token = "0x4000EB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public CraftingRecipesSO recipe;

		[Token(Token = "0x6000CCA")]
		[Address(RVA = "0xC37FE8", Offset = "0xC37FE8", VA = "0xC37FE8")]
		public UI_CraftingRodItem()
		{
		}
	}
	[Token(Token = "0x200021A")]
	public class CutsceneController : MonoBehaviour
	{
		[Token(Token = "0x2000439")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E8128", Offset = "0x9E8128")]
		private sealed class <>c__DisplayClass18_0
		{
			[Token(Token = "0x40019D8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public AsyncOperation async;

			[Token(Token = "0x6001B57")]
			[Address(RVA = "0xC012FC", Offset = "0xC012FC", VA = "0xC012FC")]
			public <>c__DisplayClass18_0()
			{
			}

			[Token(Token = "0x6001B58")]
			[Address(RVA = "0xC01304", Offset = "0xC01304", VA = "0xC01304")]
			internal bool <LoadAni>b__0()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x200043A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E8138", Offset = "0x9E8138")]
		private sealed class <LoadAni>d__18 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40019D9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40019DA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40019DB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CutsceneController <>4__this;

			[Token(Token = "0x40019DC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string scene;

			[Token(Token = "0x17000291")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001B5C")]
				[Address(RVA = "0xC01580", Offset = "0xC01580", VA = "0xC01580", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000292")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001B5E")]
				[Address(RVA = "0xC015E8", Offset = "0xC015E8", VA = "0xC015E8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001B59")]
			[Address(RVA = "0xC003E4", Offset = "0xC003E4", VA = "0xC003E4")]
			[DebuggerHidden]
			public <LoadAni>d__18(int <>1__state)
			{
			}

			[Token(Token = "0x6001B5A")]
			[Address(RVA = "0xC01320", Offset = "0xC01320", VA = "0xC01320", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001B5B")]
			[Address(RVA = "0xC01324", Offset = "0xC01324", VA = "0xC01324", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001B5D")]
			[Address(RVA = "0xC01588", Offset = "0xC01588", VA = "0xC01588", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200043B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E8148", Offset = "0x9E8148")]
		private sealed class <OpenMap>d__31 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40019DD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40019DE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40019DF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string locBCID;

			[Token(Token = "0x17000293")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001B62")]
				[Address(RVA = "0xC01724", Offset = "0xC01724", VA = "0xC01724", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000294")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001B64")]
				[Address(RVA = "0xC0178C", Offset = "0xC0178C", VA = "0xC0178C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001B5F")]
			[Address(RVA = "0xC01250", Offset = "0xC01250", VA = "0xC01250")]
			[DebuggerHidden]
			public <OpenMap>d__31(int <>1__state)
			{
			}

			[Token(Token = "0x6001B60")]
			[Address(RVA = "0xC015F0", Offset = "0xC015F0", VA = "0xC015F0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001B61")]
			[Address(RVA = "0xC015F4", Offset = "0xC015F4", VA = "0xC015F4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001B63")]
			[Address(RVA = "0xC0172C", Offset = "0xC0172C", VA = "0xC0172C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000EB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static CutsceneController Instance;

		[Token(Token = "0x4000EB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SignalAsset timelineStartedSignal;

		[Token(Token = "0x4000EBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SignalAsset timelineFinishedSignal;

		[Token(Token = "0x4000EBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UnityEvent timelineStartedReaction;

		[Token(Token = "0x4000EBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public UnityEvent timelineFinishedReaction;

		[Token(Token = "0x4000EBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string currentAniScene;

		[Token(Token = "0x4000EBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private PlayableDirector currentTimeline;

		[Token(Token = "0x4000EBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool SpecialCutscene;

		[Token(Token = "0x4000EC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		public bool gameCompleted;

		[Token(Token = "0x6000CCB")]
		[Address(RVA = "0xBFE094", Offset = "0xBFE094", VA = "0xBFE094")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000CCC")]
		[Address(RVA = "0xBFE7BC", Offset = "0xBFE7BC", VA = "0xBFE7BC")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000CCD")]
		[Address(RVA = "0xBFEDD0", Offset = "0xBFEDD0", VA = "0xBFEDD0")]
		public void OnTimelineStarted()
		{
		}

		[Token(Token = "0x6000CCE")]
		[Address(RVA = "0xBFEE38", Offset = "0xBFEE38", VA = "0xBFEE38")]
		public void OnTimelineFinished()
		{
		}

		[Token(Token = "0x6000CCF")]
		[Address(RVA = "0xBFEEAC", Offset = "0xBFEEAC", VA = "0xBFEEAC")]
		public void OnCutsceneLoaded()
		{
		}

		[Token(Token = "0x6000CD0")]
		[Address(RVA = "0xBFF404", Offset = "0xBFF404", VA = "0xBFF404")]
		private void OnPlayerLocationChange()
		{
		}

		[Token(Token = "0x6000CD1")]
		[Address(RVA = "0xBFFE88", Offset = "0xBFFE88", VA = "0xBFFE88")]
		private void TryTriggerCutscene()
		{
		}

		[Token(Token = "0x6000CD2")]
		[Address(RVA = "0xC00300", Offset = "0xC00300", VA = "0xC00300")]
		public void ClearCutscene()
		{
		}

		[Token(Token = "0x6000CD3")]
		[Address(RVA = "0xC001BC", Offset = "0xC001BC", VA = "0xC001BC")]
		public void LoadAniScene(string sceneName, bool isSpecialCutscene = false)
		{
		}

		[Token(Token = "0x6000CD4")]
		[Address(RVA = "0xC0034C", Offset = "0xC0034C", VA = "0xC0034C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9F0F74", Offset = "0x9F0F74")]
		private IEnumerator LoadAni(string scene)
		{
			return null;
		}

		[Token(Token = "0x6000CD5")]
		[Address(RVA = "0xBFFCE8", Offset = "0xBFFCE8", VA = "0xBFFCE8")]
		public void UnloadAniScenes()
		{
		}

		[Token(Token = "0x6000CD6")]
		[Address(RVA = "0xC0053C", Offset = "0xC0053C", VA = "0xC0053C")]
		private void CastArmed()
		{
		}

		[Token(Token = "0x6000CD7")]
		[Address(RVA = "0xC00540", Offset = "0xC00540", VA = "0xC00540")]
		private void OnFishHooked_003()
		{
		}

		[Token(Token = "0x6000CD8")]
		[Address(RVA = "0xC00650", Offset = "0xC00650", VA = "0xC00650")]
		private void OnFishCaught(FpFish fish, bool isCheating)
		{
		}

		[Token(Token = "0x6000CD9")]
		[Address(RVA = "0xC00654", Offset = "0xC00654", VA = "0xC00654")]
		private void OnFishKept(FpFish fish)
		{
		}

		[Token(Token = "0x6000CDA")]
		[Address(RVA = "0xC00658", Offset = "0xC00658", VA = "0xC00658")]
		private void OnFishReleased(FpFish fish)
		{
		}

		[Token(Token = "0x6000CDB")]
		[Address(RVA = "0xC0065C", Offset = "0xC0065C", VA = "0xC0065C")]
		private void OnFishTaken(FpFish fish)
		{
		}

		[Token(Token = "0x6000CDC")]
		[Address(RVA = "0xC00660", Offset = "0xC00660", VA = "0xC00660")]
		private void OnPlayerLureEquip_04(LureSO lure)
		{
		}

		[Token(Token = "0x6000CDD")]
		[Address(RVA = "0xBFFB40", Offset = "0xBFFB40", VA = "0xBFFB40")]
		private void AllowInteraction()
		{
		}

		[Token(Token = "0x6000CDE")]
		[Address(RVA = "0xC00748", Offset = "0xC00748", VA = "0xC00748")]
		private void DisallowInteraction()
		{
		}

		[Token(Token = "0x6000CDF")]
		[Address(RVA = "0xBFEEB0", Offset = "0xBFEEB0", VA = "0xBFEEB0")]
		public void AttachCustomEventTriggers()
		{
		}

		[Token(Token = "0x6000CE0")]
		[Address(RVA = "0xBFF42C", Offset = "0xBFF42C", VA = "0xBFF42C")]
		private void DetachCustomEventTriggers()
		{
		}

		[Token(Token = "0x6000CE1")]
		[Address(RVA = "0xC01170", Offset = "0xC01170", VA = "0xC01170")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9F0FD8", Offset = "0x9F0FD8")]
		private IEnumerator OpenMap(string locBCID)
		{
			return null;
		}

		[Token(Token = "0x6000CE2")]
		[Address(RVA = "0xC0127C", Offset = "0xC0127C", VA = "0xC0127C")]
		private void ContinueTimeline()
		{
		}

		[Token(Token = "0x6000CE3")]
		[Address(RVA = "0xC01288", Offset = "0xC01288", VA = "0xC01288")]
		public void Play()
		{
		}

		[Token(Token = "0x6000CE4")]
		[Address(RVA = "0xC0128C", Offset = "0xC0128C", VA = "0xC0128C")]
		public void Pause()
		{
		}

		[Token(Token = "0x6000CE5")]
		[Address(RVA = "0xC01290", Offset = "0xC01290", VA = "0xC01290")]
		private void ReturnRod()
		{
		}

		[Token(Token = "0x6000CE6")]
		[Address(RVA = "0xC012F4", Offset = "0xC012F4", VA = "0xC012F4")]
		public CutsceneController()
		{
		}
	}
	[Token(Token = "0x200021B")]
	public class UI_CutsceneController : MonoBehaviour
	{
		[Token(Token = "0x4000EC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Image MainPanel;

		[Token(Token = "0x4000EC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Localize MainPanelText;

		[Token(Token = "0x4000EC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Image ActionPanel;

		[Token(Token = "0x4000EC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Image SkipPanel;

		[Token(Token = "0x4000EC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Button CutsceneDismissButton;

		[Token(Token = "0x4000EC6")]
		private const int buttonCharacterLimit = 55;

		[Token(Token = "0x4000EC7")]
		private const float buttonMinimumWidth = 800f;

		[Token(Token = "0x4000EC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static UI_CutsceneController Instance;

		[Token(Token = "0x6000CE7")]
		[Address(RVA = "0xC37FF0", Offset = "0xC37FF0", VA = "0xC37FF0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000CE8")]
		[Address(RVA = "0xC38048", Offset = "0xC38048", VA = "0xC38048")]
		private void Start()
		{
		}

		[Token(Token = "0x6000CE9")]
		[Address(RVA = "0xC3804C", Offset = "0xC3804C", VA = "0xC3804C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000CEA")]
		[Address(RVA = "0xC38050", Offset = "0xC38050", VA = "0xC38050")]
		private void OnCutsceneFinished(bool isSpecialCutscene)
		{
		}

		[Token(Token = "0x6000CEB")]
		[Address(RVA = "0xC38054", Offset = "0xC38054", VA = "0xC38054")]
		private void EventHub_OnMissionLoad(MissionSO mission)
		{
		}

		[Token(Token = "0x6000CEC")]
		[Address(RVA = "0xC318A0", Offset = "0xC318A0", VA = "0xC318A0")]
		public static void ResetCutscene()
		{
		}

		[Token(Token = "0x6000CED")]
		[Address(RVA = "0xC38058", Offset = "0xC38058", VA = "0xC38058")]
		private void SetupContinueButton(MissionSO mission)
		{
		}

		[Token(Token = "0x6000CEE")]
		[Address(RVA = "0xC382F8", Offset = "0xC382F8", VA = "0xC382F8")]
		public UI_CutsceneController()
		{
		}
	}
	[Token(Token = "0x200021C")]
	public class FishPoolManager : MonoBehaviour
	{
		[Token(Token = "0x4000EC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private FishPoolSO[] Pools;

		[Token(Token = "0x4000ECA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private TMP_Text PoolNow;

		[Token(Token = "0x4000ECB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private UpdateFishDataDebug updateFishDataDebug;

		[Token(Token = "0x4000ECC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int index;

		[Token(Token = "0x6000CEF")]
		[Address(RVA = "0xD94E84", Offset = "0xD94E84", VA = "0xD94E84")]
		private void Start()
		{
		}

		[Token(Token = "0x6000CF0")]
		[Address(RVA = "0xD94E88", Offset = "0xD94E88", VA = "0xD94E88")]
		public void OnPoolNext()
		{
		}

		[Token(Token = "0x6000CF1")]
		[Address(RVA = "0xD94EBC", Offset = "0xD94EBC", VA = "0xD94EBC")]
		public void OnPoolPrevious()
		{
		}

		[Token(Token = "0x6000CF2")]
		[Address(RVA = "0xD94EB8", Offset = "0xD94EB8", VA = "0xD94EB8")]
		private void ChangePool()
		{
		}

		[Token(Token = "0x6000CF3")]
		[Address(RVA = "0xD94EEC", Offset = "0xD94EEC", VA = "0xD94EEC")]
		private void SetPool()
		{
		}

		[Token(Token = "0x6000CF4")]
		[Address(RVA = "0xD94F88", Offset = "0xD94F88", VA = "0xD94F88")]
		public FishPoolManager()
		{
		}
	}
	[Token(Token = "0x200021D")]
	public class Test_GettingFishController : MonoBehaviour
	{
		[Token(Token = "0x4000ECD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private FishTypeSO[] fish;

		[Token(Token = "0x4000ECE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Localize FishName;

		[Token(Token = "0x4000ECF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private TMP_Text FishWeight;

		[Token(Token = "0x4000ED0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public MissionSO[] Mission;

		[Token(Token = "0x4000ED1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Localize MissionName;

		[Token(Token = "0x4000ED2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private TMP_Text MissionBCID;

		[Token(Token = "0x4000ED3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private ItemSO[] Item;

		[Token(Token = "0x4000ED4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private ItemSO[] Recipes;

		[Token(Token = "0x4000ED5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private TMP_Text ItemName;

		[Token(Token = "0x4000ED6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private TMP_Text ItemAmount;

		[Token(Token = "0x4000ED7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private int m_index;

		[Token(Token = "0x4000ED8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private float m_star;

		[Token(Token = "0x4000ED9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private int m_Mission_index;

		[Token(Token = "0x4000EDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private int m_Item_index;

		[Token(Token = "0x4000EDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private int m_Item_Amount;

		[Token(Token = "0x4000EDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Dictionary<ItemSO, CraftingRecipesSO> m_itemCraft_Dic;

		[Token(Token = "0x6000CF5")]
		[Address(RVA = "0xC30658", Offset = "0xC30658", VA = "0xC30658")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000CF6")]
		[Address(RVA = "0xC30824", Offset = "0xC30824", VA = "0xC30824")]
		private void Start()
		{
		}

		[Token(Token = "0x6000CF7")]
		[Address(RVA = "0xC30944", Offset = "0xC30944", VA = "0xC30944")]
		public void OnIncreaseFish()
		{
		}

		[Token(Token = "0x6000CF8")]
		[Address(RVA = "0xC309AC", Offset = "0xC309AC", VA = "0xC309AC")]
		public void OnDecreaseFish()
		{
		}

		[Token(Token = "0x6000CF9")]
		[Address(RVA = "0xC30A24", Offset = "0xC30A24", VA = "0xC30A24")]
		public void OnIncreaseWeight()
		{
		}

		[Token(Token = "0x6000CFA")]
		[Address(RVA = "0xC30A4C", Offset = "0xC30A4C", VA = "0xC30A4C")]
		public void OnDecreaseWeight()
		{
		}

		[Token(Token = "0x6000CFB")]
		[Address(RVA = "0xC30A74", Offset = "0xC30A74", VA = "0xC30A74")]
		public void OnGetFish()
		{
		}

		[Token(Token = "0x6000CFC")]
		[Address(RVA = "0xC30BE8", Offset = "0xC30BE8", VA = "0xC30BE8")]
		private void FishCaught(FpFish fishtype)
		{
		}

		[Token(Token = "0x6000CFD")]
		[Address(RVA = "0xC30CD0", Offset = "0xC30CD0", VA = "0xC30CD0")]
		private void LootCrateCaught(LpCrate crate)
		{
		}

		[Token(Token = "0x6000CFE")]
		[Address(RVA = "0xC30DCC", Offset = "0xC30DCC", VA = "0xC30DCC")]
		public void OnIncreaseMission()
		{
		}

		[Token(Token = "0x6000CFF")]
		[Address(RVA = "0xC30E80", Offset = "0xC30E80", VA = "0xC30E80")]
		public void OnDecreaseMission()
		{
		}

		[Token(Token = "0x6000D00")]
		[Address(RVA = "0xC30F44", Offset = "0xC30F44", VA = "0xC30F44")]
		public void OnSetMission()
		{
		}

		[Token(Token = "0x6000D01")]
		[Address(RVA = "0xC31A1C", Offset = "0xC31A1C", VA = "0xC31A1C")]
		public void OnIncreaseItem()
		{
		}

		[Token(Token = "0x6000D02")]
		[Address(RVA = "0xC31A8C", Offset = "0xC31A8C", VA = "0xC31A8C")]
		public void OnDecreaseItem()
		{
		}

		[Token(Token = "0x6000D03")]
		[Address(RVA = "0xC31B0C", Offset = "0xC31B0C", VA = "0xC31B0C")]
		public void OnGetItem()
		{
		}

		[Token(Token = "0x6000D04")]
		[Address(RVA = "0xC31C10", Offset = "0xC31C10", VA = "0xC31C10")]
		public void OnIncreaseItemAmount()
		{
		}

		[Token(Token = "0x6000D05")]
		[Address(RVA = "0xC31C28", Offset = "0xC31C28", VA = "0xC31C28")]
		public void OnDecreaseItemAmount()
		{
		}

		[Token(Token = "0x6000D06")]
		[Address(RVA = "0xC31C48", Offset = "0xC31C48", VA = "0xC31C48")]
		public void OnResetProgress()
		{
		}

		[Token(Token = "0x6000D07")]
		[Address(RVA = "0xC307F8", Offset = "0xC307F8", VA = "0xC307F8")]
		private void ChangeOnUI(TMP_Text _Text, string str)
		{
		}

		[Token(Token = "0x6000D08")]
		[Address(RVA = "0xC307AC", Offset = "0xC307AC", VA = "0xC307AC")]
		private void ChangeOnUI(TMP_Text _Text, float str)
		{
		}

		[Token(Token = "0x6000D09")]
		[Address(RVA = "0xC3078C", Offset = "0xC3078C", VA = "0xC3078C")]
		private void ChangeOnUI(Localize localize, string str)
		{
		}

		[Token(Token = "0x6000D0A")]
		[Address(RVA = "0xC31E08", Offset = "0xC31E08", VA = "0xC31E08")]
		public void OnUnlockAllLocation()
		{
		}

		[Token(Token = "0x6000D0B")]
		[Address(RVA = "0xC3209C", Offset = "0xC3209C", VA = "0xC3209C")]
		public void OnActiveDebugUI(bool b)
		{
		}

		[Token(Token = "0x6000D0C")]
		[Address(RVA = "0xC321DC", Offset = "0xC321DC", VA = "0xC321DC")]
		public void OnActiveInfinityBoost(bool b)
		{
		}

		[Token(Token = "0x6000D0D")]
		[Address(RVA = "0xC3231C", Offset = "0xC3231C", VA = "0xC3231C")]
		public void OnChangeItemToRecipe()
		{
		}

		[Token(Token = "0x6000D0E")]
		[Address(RVA = "0xC3240C", Offset = "0xC3240C", VA = "0xC3240C")]
		public void OnUnlockAllItems()
		{
		}

		[Token(Token = "0x6000D0F")]
		[Address(RVA = "0xC32484", Offset = "0xC32484", VA = "0xC32484")]
		public void OnUnlockAllRecipes()
		{
		}

		[Token(Token = "0x6000D10")]
		[Address(RVA = "0xC324FC", Offset = "0xC324FC", VA = "0xC324FC")]
		public void OnUnlockAllFish()
		{
		}

		[Token(Token = "0x6000D11")]
		[Address(RVA = "0xC32680", Offset = "0xC32680", VA = "0xC32680")]
		public Test_GettingFishController()
		{
		}
	}
	[Token(Token = "0x200021E")]
	[ExecuteInEditMode]
	public class UI_AnimationSceneController : MonoBehaviour
	{
		[Token(Token = "0x4000EDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TMP_Dropdown aniScenesDropdown;

		[Token(Token = "0x4000EDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Button aniScenePlayBtn;

		[Token(Token = "0x4000EDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Button aniScenePauseBtn;

		[Token(Token = "0x4000EE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Button aniSceneRewindBtn;

		[Token(Token = "0x4000EE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private List<string> aniScenes;

		[Token(Token = "0x4000EE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private PlayerProgressSO PlayerProgress;

		[Token(Token = "0x6000D12")]
		[Address(RVA = "0xC334C8", Offset = "0xC334C8", VA = "0xC334C8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000D13")]
		[Address(RVA = "0xC335E4", Offset = "0xC335E4", VA = "0xC335E4")]
		private void Start()
		{
		}

		[Token(Token = "0x6000D14")]
		[Address(RVA = "0xC337F4", Offset = "0xC337F4", VA = "0xC337F4")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000D15")]
		[Address(RVA = "0xC335E8", Offset = "0xC335E8", VA = "0xC335E8")]
		private void SetOptions()
		{
		}

		[Token(Token = "0x6000D16")]
		[Address(RVA = "0xC33858", Offset = "0xC33858", VA = "0xC33858")]
		public void SetAniScene(int option)
		{
		}

		[Token(Token = "0x6000D17")]
		[Address(RVA = "0xC3390C", Offset = "0xC3390C", VA = "0xC3390C")]
		private void OnPlay()
		{
		}

		[Token(Token = "0x6000D18")]
		[Address(RVA = "0xC33968", Offset = "0xC33968", VA = "0xC33968")]
		private void OnPause()
		{
		}

		[Token(Token = "0x6000D19")]
		[Address(RVA = "0xC339C4", Offset = "0xC339C4", VA = "0xC339C4")]
		private void OnRewind()
		{
		}

		[Token(Token = "0x6000D1A")]
		[Address(RVA = "0xC33A20", Offset = "0xC33A20", VA = "0xC33A20")]
		public UI_AnimationSceneController()
		{
		}
	}
	[Token(Token = "0x200021F")]
	public class UpdateFishDataDebug : MonoBehaviour
	{
		[Token(Token = "0x4000EE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TMP_Text[] FishDatas;

		[Token(Token = "0x4000EE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Image[] FishImage;

		[Token(Token = "0x4000EE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private TMP_Text PoolInfo;

		[Token(Token = "0x6000D1B")]
		[Address(RVA = "0xD030A8", Offset = "0xD030A8", VA = "0xD030A8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000D1C")]
		[Address(RVA = "0xD03154", Offset = "0xD03154", VA = "0xD03154")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000D1D")]
		[Address(RVA = "0xD04094", Offset = "0xD04094", VA = "0xD04094")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000D1E")]
		[Address(RVA = "0xD04140", Offset = "0xD04140", VA = "0xD04140")]
		private void OnPoolChanged()
		{
		}

		[Token(Token = "0x6000D1F")]
		[Address(RVA = "0xD03158", Offset = "0xD03158", VA = "0xD03158")]
		public void UpdateData()
		{
		}

		[Token(Token = "0x6000D20")]
		[Address(RVA = "0xD04144", Offset = "0xD04144", VA = "0xD04144")]
		public UpdateFishDataDebug()
		{
		}
	}
	[Token(Token = "0x2000220")]
	public class UpdateHookedDebug : MonoBehaviour
	{
		[Token(Token = "0x4000EE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TextMeshProUGUI waitTime;

		[Token(Token = "0x4000EE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TextMeshProUGUI selectedFish;

		[Token(Token = "0x4000EE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TextMeshProUGUI selectedFishDifficulty;

		[Token(Token = "0x4000EE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public TextMeshProUGUI selectedFishStars;

		[Token(Token = "0x4000EEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public TextMeshProUGUI selectedFishDangerousZone;

		[Token(Token = "0x4000EEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public TextMeshProUGUI timeSpentReeling;

		[Token(Token = "0x4000EEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public TextMeshProUGUI timeSpentTotal;

		[Token(Token = "0x4000EED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static bool ShowLootCrate;

		[Token(Token = "0x4000EEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private FishHookMinigame fishHook;

		[Token(Token = "0x4000EEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float reelInMgStartTime;

		[Token(Token = "0x6000D21")]
		[Address(RVA = "0xD0414C", Offset = "0xD0414C", VA = "0xD0414C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000D22")]
		[Address(RVA = "0xD0424C", Offset = "0xD0424C", VA = "0xD0424C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000D23")]
		[Address(RVA = "0xD042F8", Offset = "0xD042F8", VA = "0xD042F8")]
		private void Update()
		{
		}

		[Token(Token = "0x6000D24")]
		[Address(RVA = "0xD04468", Offset = "0xD04468", VA = "0xD04468")]
		private void UpdateStats()
		{
		}

		[Token(Token = "0x6000D25")]
		[Address(RVA = "0xD0446C", Offset = "0xD0446C", VA = "0xD0446C")]
		public void OnWaitTimeClick(bool b)
		{
		}

		[Token(Token = "0x6000D26")]
		[Address(RVA = "0xD0448C", Offset = "0xD0448C", VA = "0xD0448C")]
		public void OnShowLootCrateClick(bool b)
		{
		}

		[Token(Token = "0x6000D27")]
		[Address(RVA = "0xD0458C", Offset = "0xD0458C", VA = "0xD0458C")]
		private void EventHub_OnReelInMinigameStarted()
		{
		}

		[Token(Token = "0x6000D28")]
		[Address(RVA = "0xD045B4", Offset = "0xD045B4", VA = "0xD045B4")]
		private void EventHub_OnFishCaught(FpFish fish, bool isCheating = false)
		{
		}

		[Token(Token = "0x6000D29")]
		[Address(RVA = "0xD04710", Offset = "0xD04710", VA = "0xD04710")]
		public UpdateHookedDebug()
		{
		}
	}
	[Token(Token = "0x2000221")]
	public class DebugHUD : MonoBehaviour
	{
		[Token(Token = "0x4000EF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TextMeshProUGUI message;

		[Token(Token = "0x4000EF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static string myLog;

		[Token(Token = "0x4000EF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private string output;

		[Token(Token = "0x4000EF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private string stack;

		[Token(Token = "0x6000D2B")]
		[Address(RVA = "0xC01804", Offset = "0xC01804", VA = "0xC01804")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000D2C")]
		[Address(RVA = "0xC01878", Offset = "0xC01878", VA = "0xC01878")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000D2D")]
		[Address(RVA = "0xC018EC", Offset = "0xC018EC", VA = "0xC018EC")]
		public void Log(string logString, string stackTrace, LogType type)
		{
		}

		[Token(Token = "0x6000D2E")]
		[Address(RVA = "0xC01A70", Offset = "0xC01A70", VA = "0xC01A70")]
		public DebugHUD()
		{
		}
	}
	[Token(Token = "0x2000222")]
	public class DebugText : MonoBehaviour
	{
		[Token(Token = "0x4000EF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TextMeshProUGUI message;

		[Token(Token = "0x4000EF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static DebugText instance;

		[Token(Token = "0x6000D30")]
		[Address(RVA = "0xC01BB0", Offset = "0xC01BB0", VA = "0xC01BB0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000D31")]
		[Address(RVA = "0xC01C08", Offset = "0xC01C08", VA = "0xC01C08")]
		public static void DebugMessage(string msg)
		{
		}

		[Token(Token = "0x6000D32")]
		[Address(RVA = "0xC01C7C", Offset = "0xC01C7C", VA = "0xC01C7C")]
		public static void DebugMessage(string msg, float duration)
		{
		}

		[Token(Token = "0x6000D33")]
		[Address(RVA = "0xC01D24", Offset = "0xC01D24", VA = "0xC01D24")]
		private void ClearMessage()
		{
		}

		[Token(Token = "0x6000D34")]
		[Address(RVA = "0xC01D9C", Offset = "0xC01D9C", VA = "0xC01D9C")]
		public DebugText()
		{
		}
	}
	[Token(Token = "0x2000223")]
	public class DifficultyManager : MonoBehaviour
	{
		[Token(Token = "0x200043C")]
		public enum Diff
		{
			[Token(Token = "0x40019E1")]
			Default = 0,
			[Token(Token = "0x40019E2")]
			Easy = 0,
			[Token(Token = "0x40019E3")]
			Medium = 1,
			[Token(Token = "0x40019E4")]
			Hard = 2
		}

		[Token(Token = "0x200043D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E8158", Offset = "0x9E8158")]
		private sealed class <Initialize>d__15 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40019E5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40019E6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40019E7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public DifficultyManager <>4__this;

			[Token(Token = "0x17000295")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001B68")]
				[Address(RVA = "0xC02E24", Offset = "0xC02E24", VA = "0xC02E24", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000296")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001B6A")]
				[Address(RVA = "0xC02E8C", Offset = "0xC02E8C", VA = "0xC02E8C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001B65")]
			[Address(RVA = "0xC02A04", Offset = "0xC02A04", VA = "0xC02A04")]
			[DebuggerHidden]
			public <Initialize>d__15(int <>1__state)
			{
			}

			[Token(Token = "0x6001B66")]
			[Address(RVA = "0xC02C90", Offset = "0xC02C90", VA = "0xC02C90", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001B67")]
			[Address(RVA = "0xC02C94", Offset = "0xC02C94", VA = "0xC02C94", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001B69")]
			[Address(RVA = "0xC02E2C", Offset = "0xC02E2C", VA = "0xC02E2C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000EF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Button[] Buttons;

		[Token(Token = "0x4000EF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private TMP_Text[] Texts;

		[Token(Token = "0x4000EF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Color32 EnableColor_Text;

		[Token(Token = "0x4000EF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private Color32 DisableColor_Text;

		[Token(Token = "0x4000EFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int Barrel_Easy;

		[Token(Token = "0x4000EFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int Barrel_Medium;

		[Token(Token = "0x4000EFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int Barrel_Hard;

		[Token(Token = "0x4000EFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int Predator_Easy;

		[Token(Token = "0x4000EFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int Predator_Medium;

		[Token(Token = "0x4000EFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private int Predator_Hard;

		[Token(Token = "0x6000D35")]
		[Address(RVA = "0xC02824", Offset = "0xC02824", VA = "0xC02824")]
		private void Start()
		{
		}

		[Token(Token = "0x6000D36")]
		[Address(RVA = "0xC028CC", Offset = "0xC028CC", VA = "0xC028CC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000D37")]
		[Address(RVA = "0xC02960", Offset = "0xC02960", VA = "0xC02960")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000D38")]
		[Address(RVA = "0xC029F4", Offset = "0xC029F4", VA = "0xC029F4")]
		private void LocationChanged(LocationSO locationSO, bool comingFromShip)
		{
		}

		[Token(Token = "0x6000D39")]
		[Address(RVA = "0xC02850", Offset = "0xC02850", VA = "0xC02850")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9F103C", Offset = "0x9F103C")]
		private IEnumerator Initialize()
		{
			return null;
		}

		[Token(Token = "0x6000D3A")]
		[Address(RVA = "0xC02A30", Offset = "0xC02A30", VA = "0xC02A30")]
		private void InitDiff()
		{
		}

		[Token(Token = "0x6000D3B")]
		[Address(RVA = "0xC02A5C", Offset = "0xC02A5C", VA = "0xC02A5C")]
		public void OnDiffChangeEvent(int diff)
		{
		}

		[Token(Token = "0x6000D3C")]
		[Address(RVA = "0xC029FC", Offset = "0xC029FC", VA = "0xC029FC")]
		private void SetEasy()
		{
		}

		[Token(Token = "0x6000D3D")]
		[Address(RVA = "0xC02AB0", Offset = "0xC02AB0", VA = "0xC02AB0")]
		private void SetMedium()
		{
		}

		[Token(Token = "0x6000D3E")]
		[Address(RVA = "0xC02AB8", Offset = "0xC02AB8", VA = "0xC02AB8")]
		private void SetHard()
		{
		}

		[Token(Token = "0x6000D3F")]
		[Address(RVA = "0xC02B98", Offset = "0xC02B98", VA = "0xC02B98")]
		private void CheckBarrel(int Num)
		{
		}

		[Token(Token = "0x6000D40")]
		[Address(RVA = "0xC02C74", Offset = "0xC02C74", VA = "0xC02C74")]
		private void CheckPredator(int Num)
		{
		}

		[Token(Token = "0x6000D41")]
		[Address(RVA = "0xC02AC0", Offset = "0xC02AC0", VA = "0xC02AC0")]
		private void ChangeColor(int diff)
		{
		}

		[Token(Token = "0x6000D42")]
		[Address(RVA = "0xC02C78", Offset = "0xC02C78", VA = "0xC02C78")]
		public DifficultyManager()
		{
		}
	}
	[Token(Token = "0x2000224")]
	public class DisableSelf : MonoBehaviour
	{
		[Token(Token = "0x4000F00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float disableTime;

		[Token(Token = "0x6000D43")]
		[Address(RVA = "0xC03190", Offset = "0xC03190", VA = "0xC03190")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000D44")]
		[Address(RVA = "0xC031E8", Offset = "0xC031E8", VA = "0xC031E8")]
		private void Disable()
		{
		}

		[Token(Token = "0x6000D45")]
		[Address(RVA = "0xC03210", Offset = "0xC03210", VA = "0xC03210")]
		public DisableSelf()
		{
		}
	}
	[Token(Token = "0x2000225")]
	public class EnableButtonAfterPause : MonoBehaviour
	{
		[Token(Token = "0x4000F01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Button but;

		[Token(Token = "0x6000D46")]
		[Address(RVA = "0xC04200", Offset = "0xC04200", VA = "0xC04200")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000D47")]
		[Address(RVA = "0xC04258", Offset = "0xC04258", VA = "0xC04258")]
		private void SetButtonInteractable()
		{
		}

		[Token(Token = "0x6000D48")]
		[Address(RVA = "0xC04278", Offset = "0xC04278", VA = "0xC04278")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000D49")]
		[Address(RVA = "0xC04298", Offset = "0xC04298", VA = "0xC04298")]
		public EnableButtonAfterPause()
		{
		}
	}
	[Token(Token = "0x2000226")]
	public class ExplodingBarrel : MonoBehaviour
	{
		[Token(Token = "0x4000F02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform explosion;

		[Token(Token = "0x4000F03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform debris;

		[Token(Token = "0x4000F04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Animator anim;

		[Token(Token = "0x6000D4A")]
		[Address(RVA = "0xD89668", Offset = "0xD89668", VA = "0xD89668")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000D4B")]
		[Address(RVA = "0xD8966C", Offset = "0xD8966C", VA = "0xD8966C")]
		private void RandomizeAnimation()
		{
		}

		[Token(Token = "0x6000D4C")]
		[Address(RVA = "0xD8970C", Offset = "0xD8970C", VA = "0xD8970C")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6000D4D")]
		[Address(RVA = "0xD898C0", Offset = "0xD898C0", VA = "0xD898C0")]
		public ExplodingBarrel()
		{
		}
	}
	[Token(Token = "0x2000227")]
	public class FacePlayer : MonoBehaviour
	{
		[Token(Token = "0x4000F05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool ignoreY;

		[Token(Token = "0x4000F06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool rotate180;

		[Token(Token = "0x6000D4E")]
		[Address(RVA = "0xD89C40", Offset = "0xD89C40", VA = "0xD89C40")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000D4F")]
		[Address(RVA = "0xD89DC0", Offset = "0xD89DC0", VA = "0xD89DC0")]
		public FacePlayer()
		{
		}
	}
	[Token(Token = "0x2000228")]
	public enum FhMinigameState
	{
		[Token(Token = "0x4000F08")]
		idle,
		[Token(Token = "0x4000F09")]
		awaitFish,
		[Token(Token = "0x4000F0A")]
		awaitCanHook,
		[Token(Token = "0x4000F0B")]
		canHook
	}
	[Token(Token = "0x2000229")]
	public class FishHookMinigame : MonoBehaviour
	{
		[Token(Token = "0x200043E")]
		public delegate void FishSpooked();

		[Token(Token = "0x4000F0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public FhMinigameState state;

		[Token(Token = "0x4000F0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FishHookReticle fishHookReticle;

		[Token(Token = "0x4000F0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject tooSoon;

		[Token(Token = "0x4000F0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject tooSlow;

		[Token(Token = "0x4000F10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Transform tooSlowVfx;

		[Token(Token = "0x4000F11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private SpawnPool VFX;

		[Token(Token = "0x4000F12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int numSmallBites;

		[Token(Token = "0x4000F13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		public UpdateHookedDebug debugUI;

		[Token(Token = "0x4000F14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public bool useShortWaitTime;

		[Token(Token = "0x4000F15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float shortWaitTime;

		[Token(Token = "0x4000F16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float durationModifier;

		[Token(Token = "0x4000F17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public FishAI selectedFishAi;

		[Token(Token = "0x4000F19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public bool allowHookFishTut;

		[Token(Token = "0x1400003C")]
		public static event FishSpooked OnFishSpooked
		{
			[Token(Token = "0x6000D50")]
			[Address(RVA = "0xD8A878", Offset = "0xD8A878", VA = "0xD8A878")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F10A0", Offset = "0x9F10A0")]
			add
			{
			}
			[Token(Token = "0x6000D51")]
			[Address(RVA = "0xD8AB6C", Offset = "0xD8AB6C", VA = "0xD8AB6C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F10B0", Offset = "0x9F10B0")]
			remove
			{
			}
		}

		[Token(Token = "0x6000D52")]
		[Address(RVA = "0xD90FE4", Offset = "0xD90FE4", VA = "0xD90FE4")]
		private void Start()
		{
		}

		[Token(Token = "0x6000D53")]
		[Address(RVA = "0xD91090", Offset = "0xD91090", VA = "0xD91090")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000D54")]
		[Address(RVA = "0xD9113C", Offset = "0xD9113C", VA = "0xD9113C")]
		private void HandleFlick(float force)
		{
		}

		[Token(Token = "0x6000D55")]
		[Address(RVA = "0xD91364", Offset = "0xD91364", VA = "0xD91364")]
		private void HandleJerk(float force)
		{
		}

		[Token(Token = "0x6000D56")]
		[Address(RVA = "0xD91140", Offset = "0xD91140", VA = "0xD91140")]
		private void CheckCanHook()
		{
		}

		[Token(Token = "0x6000D57")]
		[Address(RVA = "0xD917D8", Offset = "0xD917D8", VA = "0xD917D8")]
		public void StartMinigame(GameObject hookedObject)
		{
		}

		[Token(Token = "0x6000D58")]
		[Address(RVA = "0xD91E18", Offset = "0xD91E18", VA = "0xD91E18")]
		private void SetAwaitFish()
		{
		}

		[Token(Token = "0x6000D59")]
		[Address(RVA = "0xD91E8C", Offset = "0xD91E8C", VA = "0xD91E8C")]
		private void SetAwaitSmallBite()
		{
		}

		[Token(Token = "0x6000D5A")]
		[Address(RVA = "0xD91F8C", Offset = "0xD91F8C", VA = "0xD91F8C")]
		private void SetCanHook()
		{
		}

		[Token(Token = "0x6000D5B")]
		[Address(RVA = "0xD9215C", Offset = "0xD9215C", VA = "0xD9215C")]
		private void RetrySetCanHook()
		{
		}

		[Token(Token = "0x6000D5C")]
		[Address(RVA = "0xD8B628", Offset = "0xD8B628", VA = "0xD8B628")]
		public void ResetMinigame()
		{
		}

		[Token(Token = "0x6000D5D")]
		[Address(RVA = "0xD92160", Offset = "0xD92160", VA = "0xD92160")]
		public void RestartMinigame()
		{
		}

		[Token(Token = "0x6000D5E")]
		[Address(RVA = "0xD921D0", Offset = "0xD921D0", VA = "0xD921D0")]
		private void TooLateToHook()
		{
		}

		[Token(Token = "0x6000D5F")]
		[Address(RVA = "0xD91368", Offset = "0xD91368", VA = "0xD91368")]
		private void TooEarlyToHook()
		{
		}

		[Token(Token = "0x6000D60")]
		[Address(RVA = "0xD925E8", Offset = "0xD925E8", VA = "0xD925E8")]
		public void UseShortWaitTime(bool state)
		{
		}

		[Token(Token = "0x6000D61")]
		[Address(RVA = "0xD925F4", Offset = "0xD925F4", VA = "0xD925F4")]
		public void AdjustDurationModifier(float modifier)
		{
		}

		[Token(Token = "0x6000D62")]
		[Address(RVA = "0xD92604", Offset = "0xD92604", VA = "0xD92604")]
		public FishHookMinigame()
		{
		}
	}
	[Token(Token = "0x200022A")]
	public class FishHookReticle : MonoBehaviour
	{
		[Token(Token = "0x200043F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E8168", Offset = "0x9E8168")]
		private sealed class <CountDown>d__6 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40019E8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40019E9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40019EA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FishHookReticle <>4__this;

			[Token(Token = "0x40019EB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <startTime>5__2;

			[Token(Token = "0x40019EC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <progress>5__3;

			[Token(Token = "0x17000297")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001B72")]
				[Address(RVA = "0xD92964", Offset = "0xD92964", VA = "0xD92964", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000298")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001B74")]
				[Address(RVA = "0xD929CC", Offset = "0xD929CC", VA = "0xD929CC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001B6F")]
			[Address(RVA = "0xD927D0", Offset = "0xD927D0", VA = "0xD927D0")]
			[DebuggerHidden]
			public <CountDown>d__6(int <>1__state)
			{
			}

			[Token(Token = "0x6001B70")]
			[Address(RVA = "0xD9280C", Offset = "0xD9280C", VA = "0xD9280C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001B71")]
			[Address(RVA = "0xD92810", Offset = "0xD92810", VA = "0xD92810", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001B73")]
			[Address(RVA = "0xD9296C", Offset = "0xD9296C", VA = "0xD9296C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000F1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float timeToHook;

		[Token(Token = "0x4000F1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Image animatedReticle;

		[Token(Token = "0x4000F1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform bobber;

		[Token(Token = "0x4000F1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 bobberPos;

		[Token(Token = "0x6000D63")]
		[Address(RVA = "0xD92658", Offset = "0xD92658", VA = "0xD92658")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000D64")]
		[Address(RVA = "0xD926A4", Offset = "0xD926A4", VA = "0xD926A4")]
		private void SetPosition()
		{
		}

		[Token(Token = "0x6000D65")]
		[Address(RVA = "0xD92754", Offset = "0xD92754", VA = "0xD92754")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9F10C0", Offset = "0x9F10C0")]
		private IEnumerator CountDown()
		{
			return null;
		}

		[Token(Token = "0x6000D66")]
		[Address(RVA = "0xD927FC", Offset = "0xD927FC", VA = "0xD927FC")]
		public FishHookReticle()
		{
		}
	}
	[Token(Token = "0x200022B")]
	public class FishOPediaController : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000440")]
		public class FishOPedia_ : FishOPedia
		{
			[Token(Token = "0x40019ED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public FishTypeSO Fish;

			[Token(Token = "0x6001B75")]
			[Address(RVA = "0xD94190", Offset = "0xD94190", VA = "0xD94190")]
			public FishOPedia_()
			{
			}
		}

		[Token(Token = "0x2000441")]
		public delegate void FishSOGeneratedAction(FpFish[] fishTypeSOs);

		[Token(Token = "0x4000F1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static FishOPediaController Instance;

		[Token(Token = "0x4000F1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private FishTypeSO[] Fishes;

		[Token(Token = "0x4000F20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private FishTypeSO[] AquariumFishes;

		[Token(Token = "0x4000F21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private LoreSO[] Lores;

		[Token(Token = "0x4000F23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Dictionary<FishTypeSO, FishOPedia_> m_FishOPedia_Dic;

		[Token(Token = "0x17000105")]
		public static Dictionary<FishTypeSO, FishOPedia_> FishOPedia_Dic
		{
			[Token(Token = "0x6000D69")]
			[Address(RVA = "0xD93BB8", Offset = "0xD93BB8", VA = "0xD93BB8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1400003D")]
		public static event FishSOGeneratedAction OnFishSOGenerated
		{
			[Token(Token = "0x6000D67")]
			[Address(RVA = "0xD93A48", Offset = "0xD93A48", VA = "0xD93A48")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F1124", Offset = "0x9F1124")]
			add
			{
			}
			[Token(Token = "0x6000D68")]
			[Address(RVA = "0xD93B00", Offset = "0xD93B00", VA = "0xD93B00")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F1134", Offset = "0x9F1134")]
			remove
			{
			}
		}

		[Token(Token = "0x6000D6A")]
		[Address(RVA = "0xD93C14", Offset = "0xD93C14", VA = "0xD93C14")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000D6B")]
		[Address(RVA = "0xD93CB0", Offset = "0xD93CB0", VA = "0xD93CB0")]
		private void Start()
		{
		}

		[Token(Token = "0x6000D6C")]
		[Address(RVA = "0xD9452C", Offset = "0xD9452C", VA = "0xD9452C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000D6D")]
		[Address(RVA = "0xD945AC", Offset = "0xD945AC", VA = "0xD945AC")]
		private void EventHub_OnFishCaught(FpFish fish, bool isCheating)
		{
		}

		[Token(Token = "0x6000D6E")]
		[Address(RVA = "0xD94898", Offset = "0xD94898", VA = "0xD94898")]
		public void ResetFishOPedia()
		{
		}

		[Token(Token = "0x6000D6F")]
		[Address(RVA = "0xD9499C", Offset = "0xD9499C", VA = "0xD9499C")]
		public static bool IsNewFish(FpFish fish)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D70")]
		[Address(RVA = "0xD94A68", Offset = "0xD94A68", VA = "0xD94A68")]
		public static FishTypeSO[] GetAllFishes()
		{
			return null;
		}

		[Token(Token = "0x6000D71")]
		[Address(RVA = "0xD94AC4", Offset = "0xD94AC4", VA = "0xD94AC4")]
		public static LoreSO[] GetAllLores()
		{
			return null;
		}

		[Token(Token = "0x6000D72")]
		[Address(RVA = "0xD94B20", Offset = "0xD94B20", VA = "0xD94B20")]
		public static int GetFishCaughtAmount(FishTypeSO fish)
		{
			return default(int);
		}

		[Token(Token = "0x6000D73")]
		[Address(RVA = "0xD94BB0", Offset = "0xD94BB0", VA = "0xD94BB0")]
		public static FishTypeSO GetFishTypeByBCID(string fishBCID)
		{
			return null;
		}

		[Token(Token = "0x6000D74")]
		[Address(RVA = "0xD94CA4", Offset = "0xD94CA4", VA = "0xD94CA4")]
		public FishOPediaController()
		{
		}
	}
	[Token(Token = "0x200022C")]
	public class UI_FishOPediaController : MonoBehaviour
	{
		[Token(Token = "0x2000442")]
		public delegate void NewFishInfoUpdatedAction(int amount);

		[Token(Token = "0x2000443")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E8178", Offset = "0x9E8178")]
		private sealed class <>c__DisplayClass36_0
		{
			[Token(Token = "0x40019EE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public UI_FishOPedia_Fish UI_fish;

			[Token(Token = "0x40019EF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public UI_FishOPediaController <>4__this;

			[Token(Token = "0x6001B7E")]
			[Address(RVA = "0xC393C4", Offset = "0xC393C4", VA = "0xC393C4")]
			public <>c__DisplayClass36_0()
			{
			}

			[Token(Token = "0x6001B7F")]
			[Address(RVA = "0xC3B488", Offset = "0xC3B488", VA = "0xC3B488")]
			internal void <ShowLoreList>b__0()
			{
			}
		}

		[Token(Token = "0x2000444")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E8188", Offset = "0x9E8188")]
		private sealed class <>c__DisplayClass37_0
		{
			[Token(Token = "0x40019F0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public UI_FishOPedia_Fish UI_fish;

			[Token(Token = "0x40019F1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public FpFish fish;

			[Token(Token = "0x40019F2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public UI_FishOPediaController <>4__this;

			[Token(Token = "0x6001B80")]
			[Address(RVA = "0xC39428", Offset = "0xC39428", VA = "0xC39428")]
			public <>c__DisplayClass37_0()
			{
			}

			[Token(Token = "0x6001B81")]
			[Address(RVA = "0xC3B54C", Offset = "0xC3B54C", VA = "0xC3B54C")]
			internal void <FishOPediaController_OnFishSOGenerated>b__0()
			{
			}
		}

		[Token(Token = "0x4000F24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private LocationSO[] Locations;

		[Token(Token = "0x4000F25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform FishOPedia_Fish;

		[Token(Token = "0x4000F26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform FishPanel;

		[Token(Token = "0x4000F27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject UI_FishInfo;

		[Token(Token = "0x4000F28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private GameObject UI_LoreInfo;

		[Token(Token = "0x4000F29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private GameObject UI_List;

		[Token(Token = "0x4000F2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Button FishTabBtn;

		[Token(Token = "0x4000F2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Button LoreTabBtn;

		[Token(Token = "0x4000F2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private UI_FishOPedia_FishInfo FishInfo;

		[Token(Token = "0x4000F2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private UI_FishOPedia_LoreInfo LoreInfo;

		[Token(Token = "0x4000F2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private RectTransform Content;

		[Token(Token = "0x4000F2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private UI_PageDotController m_dotController;

		[Token(Token = "0x4000F30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private GestureScrollRect m_gestureScrollRect;

		[Token(Token = "0x4000F31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private Button m_nextButton;

		[Token(Token = "0x4000F32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private Button m_prevButton;

		[Token(Token = "0x4000F33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private Localize TitleText;

		[Token(Token = "0x4000F35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Dictionary<FpFish, UI_FishOPedia_Fish> m_Fish_UI_Dic;

		[Token(Token = "0x4000F36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Dictionary<FpFish, bool> m_UnlockedFish_Dic;

		[Token(Token = "0x4000F37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Dictionary<FishTypeSO, FpFish> m_FpFish_Dic;

		[Token(Token = "0x4000F38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private float m_MoveDuration;

		[Token(Token = "0x4000F39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		private float m_ContantSize;

		[Token(Token = "0x4000F3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private int m_NewFishCount;

		[Token(Token = "0x4000F3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private int m_FishInfo_Index;

		[Token(Token = "0x4000F3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private int m_LoreInfo_Index;

		[Token(Token = "0x4000F3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private FpFish[] allFishes;

		[Token(Token = "0x4000F3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private LoreSO[] allLores;

		[Token(Token = "0x4000F3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private List<UI_FishOPedia_Fish> m_FishInfo_FishUnlocked;

		[Token(Token = "0x4000F40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private Dictionary<UI_FishOPedia_Fish, int> m_FishInfo_FishUnlocked_Dic;

		[Token(Token = "0x4000F41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private Dictionary<int, UI_FishOPedia_Fish> m_FishInfo_FishUnlockedIndex_Dic;

		[Token(Token = "0x1400003E")]
		public static event NewFishInfoUpdatedAction OnNewFishInfoUpdated
		{
			[Token(Token = "0x6000D75")]
			[Address(RVA = "0xC38300", Offset = "0xC38300", VA = "0xC38300")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F1144", Offset = "0x9F1144")]
			add
			{
			}
			[Token(Token = "0x6000D76")]
			[Address(RVA = "0xC383B4", Offset = "0xC383B4", VA = "0xC383B4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F1154", Offset = "0x9F1154")]
			remove
			{
			}
		}

		[Token(Token = "0x6000D77")]
		[Address(RVA = "0xC38468", Offset = "0xC38468", VA = "0xC38468")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000D78")]
		[Address(RVA = "0xC38888", Offset = "0xC38888", VA = "0xC38888")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000D79")]
		[Address(RVA = "0xC38BA8", Offset = "0xC38BA8", VA = "0xC38BA8")]
		private void ShowFishList()
		{
		}

		[Token(Token = "0x6000D7A")]
		[Address(RVA = "0xC38FA8", Offset = "0xC38FA8", VA = "0xC38FA8")]
		private void ShowLoreList()
		{
		}

		[Token(Token = "0x6000D7B")]
		[Address(RVA = "0xC38BB0", Offset = "0xC38BB0", VA = "0xC38BB0")]
		private void FishOPediaController_OnFishSOGenerated(FpFish[] fishes)
		{
		}

		[Token(Token = "0x6000D7C")]
		[Address(RVA = "0xC392D0", Offset = "0xC392D0", VA = "0xC392D0")]
		private void UIFishReset()
		{
		}

		[Token(Token = "0x6000D7D")]
		[Address(RVA = "0xC395E4", Offset = "0xC395E4", VA = "0xC395E4")]
		private void OnFishWeightUpdated(FpFish fish)
		{
		}

		[Token(Token = "0x6000D7E")]
		[Address(RVA = "0xC39A48", Offset = "0xC39A48", VA = "0xC39A48")]
		private void OnFishUnlocked(FpFish fish)
		{
		}

		[Token(Token = "0x6000D7F")]
		[Address(RVA = "0xC39430", Offset = "0xC39430", VA = "0xC39430")]
		private void FillFishBtn(FishTypeSO fish)
		{
		}

		[Token(Token = "0x6000D80")]
		[Address(RVA = "0xC39E14", Offset = "0xC39E14", VA = "0xC39E14")]
		public void OnIncreaseFishPanelPos()
		{
		}

		[Token(Token = "0x6000D81")]
		[Address(RVA = "0xC393CC", Offset = "0xC393CC", VA = "0xC393CC")]
		public void SetPageTitle()
		{
		}

		[Token(Token = "0x6000D82")]
		[Address(RVA = "0xC39E1C", Offset = "0xC39E1C", VA = "0xC39E1C")]
		private void OnIncreaseFishPanelPos(int page = 1)
		{
		}

		[Token(Token = "0x6000D83")]
		[Address(RVA = "0xC39F94", Offset = "0xC39F94", VA = "0xC39F94")]
		public void OnDecreaseFishPanelPos()
		{
		}

		[Token(Token = "0x6000D84")]
		[Address(RVA = "0xC39F9C", Offset = "0xC39F9C", VA = "0xC39F9C")]
		private void OnDecreaseFishPanelPos(int page = 1)
		{
		}

		[Token(Token = "0x6000D85")]
		[Address(RVA = "0xC395B4", Offset = "0xC395B4", VA = "0xC395B4")]
		private void ChangeToPage(int target_page = 0)
		{
		}

		[Token(Token = "0x6000D86")]
		[Address(RVA = "0xC3A10C", Offset = "0xC3A10C", VA = "0xC3A10C")]
		private void OnFishClicked(UI_FishOPedia_Fish UI_fish)
		{
		}

		[Token(Token = "0x6000D87")]
		[Address(RVA = "0xC3AF3C", Offset = "0xC3AF3C", VA = "0xC3AF3C")]
		private void OnLoreClicked(LoreSO UI_lore, int index)
		{
		}

		[Token(Token = "0x6000D88")]
		[Address(RVA = "0xC3A188", Offset = "0xC3A188", VA = "0xC3A188")]
		private void FillFishInfoUI(FpFish fish)
		{
		}

		[Token(Token = "0x6000D89")]
		[Address(RVA = "0xC3AF44", Offset = "0xC3AF44", VA = "0xC3AF44")]
		private void FillLoreInfoUI(LoreSO lore)
		{
		}

		[Token(Token = "0x6000D8A")]
		[Address(RVA = "0xC39AF8", Offset = "0xC39AF8", VA = "0xC39AF8")]
		private void OnFishInfoUnlockedFishUpdated(UI_FishOPedia_Fish fish)
		{
		}

		[Token(Token = "0x6000D8B")]
		[Address(RVA = "0xC3AFD8", Offset = "0xC3AFD8", VA = "0xC3AFD8")]
		private void OnFishTotalWeightUpdated(FishOPediaController.FishOPedia_ fishOPedia)
		{
		}

		[Token(Token = "0x6000D8C")]
		[Address(RVA = "0xC3B04C", Offset = "0xC3B04C", VA = "0xC3B04C")]
		public void OnFishPadClosed()
		{
		}

		[Token(Token = "0x6000D8D")]
		[Address(RVA = "0xC3B100", Offset = "0xC3B100", VA = "0xC3B100")]
		public void OnIncreaseFishInfo()
		{
		}

		[Token(Token = "0x6000D8E")]
		[Address(RVA = "0xC3B1B4", Offset = "0xC3B1B4", VA = "0xC3B1B4")]
		public void OnDecreaseFishInfo()
		{
		}

		[Token(Token = "0x6000D8F")]
		[Address(RVA = "0xC3B268", Offset = "0xC3B268", VA = "0xC3B268")]
		public UI_FishOPediaController()
		{
		}

		[Token(Token = "0x6000D90")]
		[Address(RVA = "0xC3B3F4", Offset = "0xC3B3F4", VA = "0xC3B3F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F1164", Offset = "0x9F1164")]
		private void <OnIncreaseFishPanelPos>b__44_0(float x)
		{
		}

		[Token(Token = "0x6000D91")]
		[Address(RVA = "0xC3B440", Offset = "0xC3B440", VA = "0xC3B440")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F1174", Offset = "0x9F1174")]
		private void <OnDecreaseFishPanelPos>b__46_0(float x)
		{
		}
	}
	[Token(Token = "0x200022D")]
	public class UI_FishOPedia_Fish : MonoBehaviour
	{
		[Token(Token = "0x4000F42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject UnknownFish;

		[Token(Token = "0x4000F43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject KnownFish;

		[Token(Token = "0x4000F44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Image FishIcon;

		[Token(Token = "0x4000F45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Image FishGradeIcon;

		[Token(Token = "0x4000F46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Localize FishName;

		[Token(Token = "0x4000F47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Button FishInfoBtn;

		[Token(Token = "0x4000F48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Localize NewIcon;

		[Token(Token = "0x4000F49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public int Index;

		[Token(Token = "0x4000F4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public FpFish Fish;

		[Token(Token = "0x6000D92")]
		[Address(RVA = "0xC3B7AC", Offset = "0xC3B7AC", VA = "0xC3B7AC")]
		public UI_FishOPedia_Fish()
		{
		}
	}
	[Token(Token = "0x200022E")]
	public class UI_FishOPedia_FishInfo : MonoBehaviour
	{
		[Token(Token = "0x4000F4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Localize FishName;

		[Token(Token = "0x4000F4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Image FishIcon;

		[Token(Token = "0x4000F4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Image GradeIcon;

		[Token(Token = "0x4000F4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public TMP_Text GradeTooltipText;

		[Token(Token = "0x4000F4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Localize GradeTooltipTextLoc;

		[Token(Token = "0x4000F50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Localize BestRecord;

		[Token(Token = "0x4000F51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public GameObject BestRecordInfo;

		[Token(Token = "0x4000F52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public TMP_Text BestWeight_Text;

		[Token(Token = "0x4000F53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public TMP_Text BestLength_Text;

		[Token(Token = "0x4000F54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Image[] Stars;

		[Token(Token = "0x4000F55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Localize Total;

		[Token(Token = "0x4000F56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public TMP_Text Total_Text;

		[Token(Token = "0x4000F57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Localize Location;

		[Token(Token = "0x4000F58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public TMP_Text Location_Text;

		[Token(Token = "0x4000F59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Localize PreferredFloatingLure_TitleText;

		[Token(Token = "0x4000F5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public Localize PreferredSwimmingLure_TitleText;

		[Token(Token = "0x4000F5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public Image[] PreferredFloatingLure_Imgs;

		[Token(Token = "0x4000F5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public Image[] PreferredSwimmingLure_Imgs;

		[Token(Token = "0x4000F5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public Image[] Resources_Imgs;

		[Token(Token = "0x4000F5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public Image[] Size_Imgs;

		[Token(Token = "0x4000F5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public Localize Description;

		[Token(Token = "0x4000F60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public Button IncreaseBtn;

		[Token(Token = "0x4000F61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public Button DecreaseBtn;

		[Token(Token = "0x4000F62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public Color GradeColorCommon;

		[Token(Token = "0x4000F63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public Color GradeColorUncommon;

		[Token(Token = "0x4000F64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public Color GradeColorRare;

		[Token(Token = "0x4000F65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public Color GradeColorEpic;

		[Token(Token = "0x4000F66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public Color GradeColorLegendary;

		[Token(Token = "0x4000F67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		public Localize[] FloatingLuresTooltip;

		[Token(Token = "0x4000F68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		public Localize[] SwimmingLuresTooltip;

		[Token(Token = "0x4000F69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		public TMP_Text[] StarTooltip;

		[Token(Token = "0x4000F6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		public Localize[] ResourcesTooltip;

		[Token(Token = "0x6000D93")]
		[Address(RVA = "0xC3B7B4", Offset = "0xC3B7B4", VA = "0xC3B7B4")]
		public UI_FishOPedia_FishInfo()
		{
		}
	}
	[Token(Token = "0x200022F")]
	public class UI_FishOPedia_LoreInfo : MonoBehaviour
	{
		[Token(Token = "0x4000F6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Localize Title;

		[Token(Token = "0x4000F6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Localize Description;

		[Token(Token = "0x4000F6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Image Icon;

		[Token(Token = "0x4000F6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Image HeadlineImage;

		[Token(Token = "0x4000F6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Button IncreaseBtn;

		[Token(Token = "0x4000F70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Button DecreaseBtn;

		[Token(Token = "0x6000D94")]
		[Address(RVA = "0xC3B7BC", Offset = "0xC3B7BC", VA = "0xC3B7BC")]
		public UI_FishOPedia_LoreInfo()
		{
		}
	}
	[Token(Token = "0x2000230")]
	public class UI_PageDot : MonoBehaviour
	{
		[Token(Token = "0x4000F71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int index;

		[Token(Token = "0x4000F72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Button PageDot;

		[Token(Token = "0x6000D95")]
		[Address(RVA = "0xCF65D8", Offset = "0xCF65D8", VA = "0xCF65D8")]
		public UI_PageDot()
		{
		}
	}
	[Token(Token = "0x2000231")]
	public class UI_PageDotController : MonoBehaviour
	{
		[Token(Token = "0x2000445")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E8198", Offset = "0x9E8198")]
		private sealed class <>c__DisplayClass7_0
		{
			[Token(Token = "0x40019F3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Action<int> callback;

			[Token(Token = "0x6001B82")]
			[Address(RVA = "0xCF6968", Offset = "0xCF6968", VA = "0xCF6968")]
			public <>c__DisplayClass7_0()
			{
			}
		}

		[Token(Token = "0x2000446")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E81A8", Offset = "0x9E81A8")]
		private sealed class <>c__DisplayClass7_1
		{
			[Token(Token = "0x40019F4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public UI_PageDot pageDot;

			[Token(Token = "0x40019F5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public <>c__DisplayClass7_0 CS$<>8__locals1;

			[Token(Token = "0x6001B83")]
			[Address(RVA = "0xCF6970", Offset = "0xCF6970", VA = "0xCF6970")]
			public <>c__DisplayClass7_1()
			{
			}

			[Token(Token = "0x6001B84")]
			[Address(RVA = "0xCF6C6C", Offset = "0xCF6C6C", VA = "0xCF6C6C")]
			internal void <Init>b__0()
			{
			}
		}

		[Token(Token = "0x4000F73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int m_pageNum;

		[Token(Token = "0x4000F74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private int m_currentIndex;

		[Token(Token = "0x4000F75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int PageCount;

		[Token(Token = "0x4000F76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform PageDot;

		[Token(Token = "0x4000F77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<UI_PageDot> m_PageDots;

		[Token(Token = "0x17000106")]
		public int CurrentID
		{
			[Token(Token = "0x6000D96")]
			[Address(RVA = "0xCF65E0", Offset = "0xCF65E0", VA = "0xCF65E0")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6000D97")]
		[Address(RVA = "0xCF65E8", Offset = "0xCF65E8", VA = "0xCF65E8")]
		public void Init(int element_count, Action<int> callback)
		{
		}

		[Token(Token = "0x6000D98")]
		[Address(RVA = "0xCF6980", Offset = "0xCF6980", VA = "0xCF6980")]
		public void Init(int element_count)
		{
		}

		[Token(Token = "0x6000D99")]
		[Address(RVA = "0xCF6A18", Offset = "0xCF6A18", VA = "0xCF6A18")]
		public void ChangeIndex(int offset)
		{
		}

		[Token(Token = "0x6000D9A")]
		[Address(RVA = "0xCF6978", Offset = "0xCF6978", VA = "0xCF6978")]
		private void SetIndex(int target)
		{
		}

		[Token(Token = "0x6000D9B")]
		[Address(RVA = "0xCF6A38", Offset = "0xCF6A38", VA = "0xCF6A38")]
		private void RefreshPageDot()
		{
		}

		[Token(Token = "0x6000D9C")]
		[Address(RVA = "0xCF6BE8", Offset = "0xCF6BE8", VA = "0xCF6BE8")]
		public UI_PageDotController()
		{
		}
	}
	[Token(Token = "0x2000232")]
	public class UI_FishPad_MenuBar : MonoBehaviour
	{
		[Token(Token = "0x4000F78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject Notice_FishOPedia;

		[Token(Token = "0x4000F79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject Notice_Map;

		[Token(Token = "0x4000F7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject Notice_Inventory;

		[Token(Token = "0x4000F7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject Notice_Mission;

		[Token(Token = "0x4000F7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject Notice_Crafting;

		[Token(Token = "0x4000F7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public TMP_Text Notice_Text_FishOPedia;

		[Token(Token = "0x4000F7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private LocationSO newLocation;

		[Token(Token = "0x6000D9D")]
		[Address(RVA = "0xC3B7C4", Offset = "0xC3B7C4", VA = "0xC3B7C4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000D9E")]
		[Address(RVA = "0xC3B980", Offset = "0xC3B980", VA = "0xC3B980")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000D9F")]
		[Address(RVA = "0xC3BB3C", Offset = "0xC3BB3C", VA = "0xC3BB3C")]
		public void closeFishingPad()
		{
		}

		[Token(Token = "0x6000DA0")]
		[Address(RVA = "0xC3BB9C", Offset = "0xC3BB9C", VA = "0xC3BB9C")]
		public void removeInventoryNotice()
		{
		}

		[Token(Token = "0x6000DA1")]
		[Address(RVA = "0xC3BBBC", Offset = "0xC3BBBC", VA = "0xC3BBBC")]
		public void removeMissionNotice()
		{
		}

		[Token(Token = "0x6000DA2")]
		[Address(RVA = "0xC3BBDC", Offset = "0xC3BBDC", VA = "0xC3BBDC")]
		private void EventHub_MissionCompleted(MissionSO mission)
		{
		}

		[Token(Token = "0x6000DA3")]
		[Address(RVA = "0xC3BBFC", Offset = "0xC3BBFC", VA = "0xC3BBFC")]
		private void UI_CraftingController_OnNewRecipeUpdated(int recipeCount)
		{
		}

		[Token(Token = "0x6000DA4")]
		[Address(RVA = "0xC3BC20", Offset = "0xC3BC20", VA = "0xC3BC20")]
		private void InventoryController_OnItemGet(ItemSO item, int amount)
		{
		}

		[Token(Token = "0x6000DA5")]
		[Address(RVA = "0xC3BD50", Offset = "0xC3BD50", VA = "0xC3BD50")]
		private void LoadLocation_OnLocationUnlock(LocationSO location)
		{
		}

		[Token(Token = "0x6000DA6")]
		[Address(RVA = "0xC3BDB4", Offset = "0xC3BDB4", VA = "0xC3BDB4")]
		private void DisableMapNotify(LocationSO location)
		{
		}

		[Token(Token = "0x6000DA7")]
		[Address(RVA = "0xC3BE98", Offset = "0xC3BE98", VA = "0xC3BE98")]
		private void UI_FishOPediaController_OnNewFishInfoUpdated(int amount)
		{
		}

		[Token(Token = "0x6000DA8")]
		[Address(RVA = "0xC3BFA4", Offset = "0xC3BFA4", VA = "0xC3BFA4")]
		public UI_FishPad_MenuBar()
		{
		}
	}
	[Token(Token = "0x2000233")]
	public class UI_MapButton : MonoBehaviour
	{
		[Token(Token = "0x4000F7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public Button MapButton;

		[Token(Token = "0x4000F80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		public Localize MapName;

		[Token(Token = "0x4000F81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		public GameObject Notify;

		[Token(Token = "0x4000F82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		public LocationSO locationSO;

		[Token(Token = "0x4000F83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		public Image lockedIcon;

		[Token(Token = "0x4000F84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		public Image lockedButton;

		[Token(Token = "0x4000F85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		public Image locker;

		[Token(Token = "0x4000F86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		public Image pin;

		[Token(Token = "0x4000F87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		public Image selectedPinHighlight;

		[Token(Token = "0x6000DA9")]
		[Address(RVA = "0xC3E338", Offset = "0xC3E338", VA = "0xC3E338")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000DAA")]
		[Address(RVA = "0xC3E5A0", Offset = "0xC3E5A0", VA = "0xC3E5A0")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000DAB")]
		[Address(RVA = "0xC3E5A4", Offset = "0xC3E5A4", VA = "0xC3E5A4")]
		public void LoadLocation_OnLocationUnlock(LocationSO location)
		{
		}

		[Token(Token = "0x6000DAC")]
		[Address(RVA = "0xC3E604", Offset = "0xC3E604", VA = "0xC3E604")]
		public void DisableMapNotify(LocationSO location)
		{
		}

		[Token(Token = "0x6000DAD")]
		[Address(RVA = "0xC3E33C", Offset = "0xC3E33C", VA = "0xC3E33C")]
		public void setLocationCard()
		{
		}

		[Token(Token = "0x6000DAE")]
		[Address(RVA = "0xC3E710", Offset = "0xC3E710", VA = "0xC3E710")]
		public UI_MapButton()
		{
		}
	}
	[Token(Token = "0x2000234")]
	public class UI_WorldButton : MonoBehaviour
	{
		[Token(Token = "0x4000F88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public Button MapButton;

		[Token(Token = "0x4000F89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		public GameObject Notify;

		[Token(Token = "0x4000F8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		public GameObject LockIcon;

		[Token(Token = "0x4000F8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		public LocationSO[] nextNewLocation;

		[Token(Token = "0x4000F8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int locationIndex;

		[Token(Token = "0x6000DAF")]
		[Address(RVA = "0xD01154", Offset = "0xD01154", VA = "0xD01154")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000DB0")]
		[Address(RVA = "0xD01358", Offset = "0xD01358", VA = "0xD01358")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000DB1")]
		[Address(RVA = "0xD01208", Offset = "0xD01208", VA = "0xD01208")]
		private void UnlockWorld()
		{
		}

		[Token(Token = "0x6000DB2")]
		[Address(RVA = "0xD01404", Offset = "0xD01404", VA = "0xD01404")]
		private void LoadLocation_OnLocationUnlock(LocationSO location)
		{
		}

		[Token(Token = "0x6000DB3")]
		[Address(RVA = "0xD01540", Offset = "0xD01540", VA = "0xD01540")]
		private void DisableMapNotify(LocationSO location)
		{
		}

		[Token(Token = "0x6000DB4")]
		[Address(RVA = "0xD0164C", Offset = "0xD0164C", VA = "0xD0164C")]
		public UI_WorldButton()
		{
		}
	}
	[Token(Token = "0x2000235")]
	public enum FriMinigameState
	{
		[Token(Token = "0x4000F8E")]
		idle,
		[Token(Token = "0x4000F8F")]
		fishIsResting,
		[Token(Token = "0x4000F90")]
		fishIsResisting,
		[Token(Token = "0x4000F91")]
		fishIsInPattern,
		[Token(Token = "0x4000F92")]
		fishIsStunned,
		[Token(Token = "0x4000F93")]
		fishIsRunning,
		[Token(Token = "0x4000F94")]
		fishIsRaging
	}
	[Token(Token = "0x2000236")]
	public enum TensionAlert
	{
		[Token(Token = "0x4000F96")]
		under,
		[Token(Token = "0x4000F97")]
		over,
		[Token(Token = "0x4000F98")]
		normal
	}
	[Token(Token = "0x2000237")]
	public enum ResistDir
	{
		[Token(Token = "0x4000F9A")]
		left,
		[Token(Token = "0x4000F9B")]
		right,
		[Token(Token = "0x4000F9C")]
		none
	}
	[Token(Token = "0x2000238")]
	public class FishReelInMinigame : MonoBehaviour
	{
		[Token(Token = "0x2000447")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E81B8", Offset = "0x9E81B8")]
		private sealed class <DangerAlert>d__86 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40019F6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40019F7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40019F8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FishReelInMinigame <>4__this;

			[Token(Token = "0x17000299")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001B88")]
				[Address(RVA = "0xC943C0", Offset = "0xC943C0", VA = "0xC943C0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700029A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001B8A")]
				[Address(RVA = "0xC94428", Offset = "0xC94428", VA = "0xC94428", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001B85")]
			[Address(RVA = "0xC94094", Offset = "0xC94094", VA = "0xC94094")]
			[DebuggerHidden]
			public <DangerAlert>d__86(int <>1__state)
			{
			}

			[Token(Token = "0x6001B86")]
			[Address(RVA = "0xC940C0", Offset = "0xC940C0", VA = "0xC940C0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001B87")]
			[Address(RVA = "0xC940C4", Offset = "0xC940C4", VA = "0xC940C4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001B89")]
			[Address(RVA = "0xC943C8", Offset = "0xC943C8", VA = "0xC943C8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000448")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E81C8", Offset = "0x9E81C8")]
		private sealed class <Escape>d__88 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40019F9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40019FA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40019FB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FishReelInMinigame <>4__this;

			[Token(Token = "0x1700029B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001B8E")]
				[Address(RVA = "0xC945EC", Offset = "0xC945EC", VA = "0xC945EC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700029C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001B90")]
				[Address(RVA = "0xC94654", Offset = "0xC94654", VA = "0xC94654", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001B8B")]
			[Address(RVA = "0xC94430", Offset = "0xC94430", VA = "0xC94430")]
			[DebuggerHidden]
			public <Escape>d__88(int <>1__state)
			{
			}

			[Token(Token = "0x6001B8C")]
			[Address(RVA = "0xC9445C", Offset = "0xC9445C", VA = "0xC9445C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001B8D")]
			[Address(RVA = "0xC94460", Offset = "0xC94460", VA = "0xC94460", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001B8F")]
			[Address(RVA = "0xC945F4", Offset = "0xC945F4", VA = "0xC945F4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000F9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public FriMinigameState state;

		[Token(Token = "0x4000F9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ReelInUI reelInUi;

		[Token(Token = "0x4000F9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SpawnPool vfx;

		[Token(Token = "0x4000FA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform fishLostPrefab;

		[Token(Token = "0x4000FA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject fishLostGO;

		[Token(Token = "0x4000FA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float maxFishForce;

		[Token(Token = "0x4000FA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float restForce;

		[Token(Token = "0x4000FA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Vector3 patternFleeVector;

		[Token(Token = "0x4000FA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public bool alertIsActive;

		[Token(Token = "0x4000FA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public int dangerLevel;

		[Token(Token = "0x4000FA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public int maxDangerLevel;

		[Token(Token = "0x4000FA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public int numTimesHasFled;

		[Token(Token = "0x4000FA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public TensionAlert alert;

		[Token(Token = "0x4000FAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public HapticsClipSO alertHapticsClip;

		[Token(Token = "0x4000FAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public int patternIndex;

		[Token(Token = "0x4000FAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public PatternSO pattern;

		[Token(Token = "0x4000FAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public float resistForce;

		[Token(Token = "0x4000FAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public float fleeForce;

		[Token(Token = "0x4000FAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private double timeDebug;

		[Token(Token = "0x4000FB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private double rageEndTime;

		[Token(Token = "0x4000FB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private double rageDirTime;

		[Token(Token = "0x4000FB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private bool isRagingLeft;

		[Token(Token = "0x4000FB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private double runEndTime;

		[Token(Token = "0x4000FB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private double runDirTime;

		[Token(Token = "0x4000FB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private Vector3 runTarget;

		[Token(Token = "0x4000FB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private bool isRunningLeft;

		[Token(Token = "0x4000FB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private Vector3 runDirection;

		[Token(Token = "0x4000FB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private float restTime;

		[Token(Token = "0x4000FB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private bool hasFled;

		[Token(Token = "0x4000FBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private FishTypeSO fish;

		[Token(Token = "0x4000FBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private float timer;

		[Token(Token = "0x4000FBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		private bool showTimer;

		[Token(Token = "0x4000FBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private Arrow arrow;

		[Token(Token = "0x4000FBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private Coroutine danger;

		[Token(Token = "0x4000FBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private Vector3[] boundaryPoints;

		[Token(Token = "0x4000FC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public FishAI hookedFishAi;

		[Token(Token = "0x4000FC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private bool allowPattern;

		[Token(Token = "0x4000FC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x111")]
		private bool allowPatternNoStamina;

		[Token(Token = "0x4000FC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x112")]
		private bool hasDonePattern;

		[Token(Token = "0x4000FC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		private float runRageStartTime;

		[Token(Token = "0x4000FC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private float initialDelayTime;

		[Token(Token = "0x4000FC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		private float tensionMinimumUpperLimit;

		[Token(Token = "0x4000FC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		public Transform bigSplash;

		[Token(Token = "0x4000FC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		public Transform smallSplash;

		[Token(Token = "0x4000FC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		public Transform ripples;

		[Token(Token = "0x4000FCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private ResistDir resistDir;

		[Token(Token = "0x4000FCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
		private float snapForceMultiplier;

		[Token(Token = "0x4000FCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private float jumpForceMultiplier;

		[Token(Token = "0x4000FCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
		private int runRageAlertKeepout;

		[Token(Token = "0x6000DB5")]
		[Address(RVA = "0xD94F98", Offset = "0xD94F98", VA = "0xD94F98")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000DB6")]
		[Address(RVA = "0xD95030", Offset = "0xD95030", VA = "0xD95030")]
		public void ResetMinigame()
		{
		}

		[Token(Token = "0x6000DB7")]
		[Address(RVA = "0xD91598", Offset = "0xD91598", VA = "0xD91598")]
		public void StartMinigame(float modifier = 1f)
		{
		}

		[Token(Token = "0x6000DB8")]
		[Address(RVA = "0xD951E4", Offset = "0xD951E4", VA = "0xD951E4")]
		private void SetInitialMode(FishTypeSO fish, float modifier = 1f)
		{
		}

		[Token(Token = "0x6000DB9")]
		[Address(RVA = "0xD95A28", Offset = "0xD95A28", VA = "0xD95A28")]
		public void Update()
		{
		}

		[Token(Token = "0x6000DBA")]
		[Address(RVA = "0xD968A0", Offset = "0xD968A0", VA = "0xD968A0")]
		public void SetShowTimer(bool val)
		{
		}

		[Token(Token = "0x6000DBB")]
		[Address(RVA = "0xD95D8C", Offset = "0xD95D8C", VA = "0xD95D8C")]
		private void SetAlert()
		{
		}

		[Token(Token = "0x6000DBC")]
		[Address(RVA = "0xD96998", Offset = "0xD96998", VA = "0xD96998")]
		private void DiceRoll()
		{
		}

		[Token(Token = "0x6000DBD")]
		[Address(RVA = "0xD95F04", Offset = "0xD95F04", VA = "0xD95F04")]
		private void CheckAllowPattern()
		{
		}

		[Token(Token = "0x6000DBE")]
		[Address(RVA = "0xD9699C", Offset = "0xD9699C", VA = "0xD9699C")]
		private void CheckForcePattern(float distance)
		{
		}

		[Token(Token = "0x6000DBF")]
		[Address(RVA = "0xD95750", Offset = "0xD95750", VA = "0xD95750")]
		private void StartRunning(float modifier = 1f, float predatorDur = 0f)
		{
		}

		[Token(Token = "0x6000DC0")]
		[Address(RVA = "0xD95498", Offset = "0xD95498", VA = "0xD95498")]
		private void StartRaging(float endTime)
		{
		}

		[Token(Token = "0x6000DC1")]
		[Address(RVA = "0xD96E70", Offset = "0xD96E70", VA = "0xD96E70")]
		private void StartResting()
		{
		}

		[Token(Token = "0x6000DC2")]
		[Address(RVA = "0xD95278", Offset = "0xD95278", VA = "0xD95278")]
		public void StartResisting()
		{
		}

		[Token(Token = "0x6000DC3")]
		[Address(RVA = "0xD96F60", Offset = "0xD96F60", VA = "0xD96F60")]
		private void SetResistValues()
		{
		}

		[Token(Token = "0x6000DC4")]
		[Address(RVA = "0xD97364", Offset = "0xD97364", VA = "0xD97364")]
		private void PickDir()
		{
		}

		[Token(Token = "0x6000DC5")]
		[Address(RVA = "0xD97108", Offset = "0xD97108", VA = "0xD97108")]
		private Vector3 SetResistDirection()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000DC6")]
		[Address(RVA = "0xD970A4", Offset = "0xD970A4", VA = "0xD970A4")]
		public void ChangeResistDirection()
		{
		}

		[Token(Token = "0x6000DC7")]
		[Address(RVA = "0xD973A0", Offset = "0xD973A0", VA = "0xD973A0")]
		public void StartPatternPlay()
		{
		}

		[Token(Token = "0x6000DC8")]
		[Address(RVA = "0xD96A4C", Offset = "0xD96A4C", VA = "0xD96A4C")]
		public void StartPatternPlay(bool forcePattern)
		{
		}

		[Token(Token = "0x6000DC9")]
		[Address(RVA = "0xD97520", Offset = "0xD97520", VA = "0xD97520")]
		public void StartPowerReel(float duration)
		{
		}

		[Token(Token = "0x6000DCA")]
		[Address(RVA = "0xD975E0", Offset = "0xD975E0", VA = "0xD975E0")]
		public void StartStunned(float duration)
		{
		}

		[Token(Token = "0x6000DCB")]
		[Address(RVA = "0xD976E0", Offset = "0xD976E0", VA = "0xD976E0")]
		private void OnArrowFailed()
		{
		}

		[Token(Token = "0x6000DCC")]
		[Address(RVA = "0xD9782C", Offset = "0xD9782C", VA = "0xD9782C")]
		public void CancelFleeing(bool nextArrow, bool doRestState)
		{
		}

		[Token(Token = "0x6000DCD")]
		[Address(RVA = "0xD973A8", Offset = "0xD973A8", VA = "0xD973A8")]
		private void SetFleeValues(Arrow dir)
		{
		}

		[Token(Token = "0x6000DCE")]
		[Address(RVA = "0xD97890", Offset = "0xD97890", VA = "0xD97890")]
		public void SetFleeVector(Arrow dir)
		{
		}

		[Token(Token = "0x6000DCF")]
		[Address(RVA = "0xD9689C", Offset = "0xD9689C", VA = "0xD9689C")]
		private void Stun()
		{
		}

		[Token(Token = "0x6000DD0")]
		[Address(RVA = "0xD95F00", Offset = "0xD95F00", VA = "0xD95F00")]
		private void Rest()
		{
		}

		[Token(Token = "0x6000DD1")]
		[Address(RVA = "0xD9600C", Offset = "0xD9600C", VA = "0xD9600C")]
		private void Resist()
		{
		}

		[Token(Token = "0x6000DD2")]
		[Address(RVA = "0xD96088", Offset = "0xD96088", VA = "0xD96088")]
		private void Flee()
		{
		}

		[Token(Token = "0x6000DD3")]
		[Address(RVA = "0xD96170", Offset = "0xD96170", VA = "0xD96170")]
		private void Rage()
		{
		}

		[Token(Token = "0x6000DD4")]
		[Address(RVA = "0xD964E0", Offset = "0xD964E0", VA = "0xD964E0")]
		private void Run()
		{
		}

		[Token(Token = "0x6000DD5")]
		[Address(RVA = "0xD97D3C", Offset = "0xD97D3C", VA = "0xD97D3C")]
		private float GetDistance()
		{
			return default(float);
		}

		[Token(Token = "0x6000DD6")]
		[Address(RVA = "0xD97C50", Offset = "0xD97C50", VA = "0xD97C50")]
		private float GetDistanceFromBobberTo(Vector3 target)
		{
			return default(float);
		}

		[Token(Token = "0x6000DD7")]
		[Address(RVA = "0xD97E5C", Offset = "0xD97E5C", VA = "0xD97E5C")]
		public void ReelInSuccess()
		{
		}

		[Token(Token = "0x6000DD8")]
		[Address(RVA = "0xD968AC", Offset = "0xD968AC", VA = "0xD968AC")]
		private void StartDangerAlert()
		{
		}

		[Token(Token = "0x6000DD9")]
		[Address(RVA = "0xD95114", Offset = "0xD95114", VA = "0xD95114")]
		public void StopDangerAlert()
		{
		}

		[Token(Token = "0x6000DDA")]
		[Address(RVA = "0xD97F24", Offset = "0xD97F24", VA = "0xD97F24")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9F1184", Offset = "0x9F1184")]
		private IEnumerator DangerAlert()
		{
			return null;
		}

		[Token(Token = "0x6000DDB")]
		[Address(RVA = "0xD97FA0", Offset = "0xD97FA0", VA = "0xD97FA0")]
		public void DoEscape()
		{
		}

		[Token(Token = "0x6000DDC")]
		[Address(RVA = "0xD97FCC", Offset = "0xD97FCC", VA = "0xD97FCC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9F11E8", Offset = "0x9F11E8")]
		private IEnumerator Escape()
		{
			return null;
		}

		[Token(Token = "0x6000DDD")]
		[Address(RVA = "0xD98048", Offset = "0xD98048", VA = "0xD98048")]
		private void FishLost()
		{
		}

		[Token(Token = "0x6000DDE")]
		[Address(RVA = "0xD96CA0", Offset = "0xD96CA0", VA = "0xD96CA0")]
		public Vector3 GetRunDirection()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000DDF")]
		[Address(RVA = "0xD982E0", Offset = "0xD982E0", VA = "0xD982E0")]
		private void SetBoundaryPoints(LocationSO locationSO, bool comingFromShip)
		{
		}

		[Token(Token = "0x6000DE0")]
		[Address(RVA = "0xD984E0", Offset = "0xD984E0", VA = "0xD984E0")]
		public void PredatorCollision()
		{
		}

		[Token(Token = "0x6000DE1")]
		[Address(RVA = "0xD98570", Offset = "0xD98570", VA = "0xD98570")]
		public FishReelInMinigame()
		{
		}
	}
	[Token(Token = "0x2000239")]
	public class FishFleeVFXController : MonoBehaviour
	{
		[Token(Token = "0x4000FCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform VFX;

		[Token(Token = "0x4000FCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private ParticleSystem Particle;

		[Token(Token = "0x4000FD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float m_startSize;

		[Token(Token = "0x4000FD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private ParticleSystem.MainModule m_Particle_Main;

		[Token(Token = "0x6000DE2")]
		[Address(RVA = "0xD90B74", Offset = "0xD90B74", VA = "0xD90B74")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000DE3")]
		[Address(RVA = "0xD90CCC", Offset = "0xD90CCC", VA = "0xD90CCC")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000DE4")]
		[Address(RVA = "0xD90E00", Offset = "0xD90E00", VA = "0xD90E00")]
		private void FishReelInMinigame_OnFishStartedFleeing(Vector3 fleeDirection, bool isFish, bool directionChange)
		{
		}

		[Token(Token = "0x6000DE5")]
		[Address(RVA = "0xD90F60", Offset = "0xD90F60", VA = "0xD90F60")]
		private void FishReelInMinigame_OnFishStoppedFleeing(bool isFish)
		{
		}

		[Token(Token = "0x6000DE6")]
		[Address(RVA = "0xD90FD4", Offset = "0xD90FD4", VA = "0xD90FD4")]
		public FishFleeVFXController()
		{
		}
	}
	[Token(Token = "0x200023A")]
	internal enum RopeStatus
	{
		[Token(Token = "0x4000FD3")]
		Idle,
		[Token(Token = "0x4000FD4")]
		Stretch,
		[Token(Token = "0x4000FD5")]
		Shrink
	}
	[Token(Token = "0x200023B")]
	public class FishingLineController : MonoBehaviour, IEventListener
	{
		[Token(Token = "0x4000FD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static bool IsSlack;

		[Token(Token = "0x4000FD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public static float CacheLimitDistance;

		[Token(Token = "0x4000FD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Animator ReelineAnim;

		[Token(Token = "0x4000FD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float speed;

		[Token(Token = "0x4000FDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public LineRenderer connecting_line;

		[Token(Token = "0x4000FDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<Transform> RodJointList;

		[Token(Token = "0x4000FDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private ObiRopeCursor cursor;

		[Token(Token = "0x4000FDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private ObiRope rope;

		[Token(Token = "0x4000FDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private ObiRopeExtrudedRenderer obiRopeExtrudedRenderer;

		[Token(Token = "0x4000FDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private RopeStatus m_nowState;

		[Token(Token = "0x4000FE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float m_InitLength;

		[Token(Token = "0x4000FE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool lastIsReelingState;

		[Token(Token = "0x4000FE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float lastIsReelingTime;

		[Token(Token = "0x4000FE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9EB690", Offset = "0x9EB690")]
		private float m_limitStraightLength;

		[Token(Token = "0x4000FE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private FishingLineColor lineColor;

		[Token(Token = "0x4000FE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static FishingLineController instance;

		[Token(Token = "0x6000DE7")]
		[Address(RVA = "0xC96E30", Offset = "0xC96E30", VA = "0xC96E30")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000DE8")]
		[Address(RVA = "0xC96F10", Offset = "0xC96F10", VA = "0xC96F10")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000DE9")]
		[Address(RVA = "0xC96FD8", Offset = "0xC96FD8", VA = "0xC96FD8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000DEA")]
		[Address(RVA = "0xC9706C", Offset = "0xC9706C", VA = "0xC9706C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000DEB")]
		[Address(RVA = "0xC97248", Offset = "0xC97248", VA = "0xC97248")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000DEC")]
		[Address(RVA = "0xC978B8", Offset = "0xC978B8", VA = "0xC978B8", Slot = "4")]
		public void OnEvent(EventArgs args)
		{
		}

		[Token(Token = "0x6000DED")]
		[Address(RVA = "0xC979D0", Offset = "0xC979D0", VA = "0xC979D0")]
		public void AddLineLength(float extraLength = 1f)
		{
		}

		[Token(Token = "0x6000DEE")]
		[Address(RVA = "0xC97A6C", Offset = "0xC97A6C", VA = "0xC97A6C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000DEF")]
		[Address(RVA = "0xC97B40", Offset = "0xC97B40", VA = "0xC97B40")]
		public static void PlayReelLine(float speed)
		{
		}

		[Token(Token = "0x6000DF0")]
		[Address(RVA = "0xC97458", Offset = "0xC97458", VA = "0xC97458")]
		private void UpdateRodLine()
		{
		}

		[Token(Token = "0x6000DF1")]
		[Address(RVA = "0xC97C2C", Offset = "0xC97C2C", VA = "0xC97C2C")]
		private void ShrinkOnBobberHitWater()
		{
		}

		[Token(Token = "0x6000DF2")]
		[Address(RVA = "0xC97CF4", Offset = "0xC97CF4", VA = "0xC97CF4")]
		public FishingLineController()
		{
		}
	}
	[Token(Token = "0x200023C")]
	public class ObiGenerator : MonoBehaviour
	{
		[Token(Token = "0x4000FE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform start;

		[Token(Token = "0x4000FE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform end;

		[Token(Token = "0x4000FE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ObiSolver solver;

		[Token(Token = "0x6000DF4")]
		[Address(RVA = "0xD553B4", Offset = "0xD553B4", VA = "0xD553B4")]
		private void Start()
		{
		}

		[Token(Token = "0x6000DF5")]
		[Address(RVA = "0xD553B8", Offset = "0xD553B8", VA = "0xD553B8")]
		public void GenerateHookLine()
		{
		}

		[Token(Token = "0x6000DF6")]
		[Address(RVA = "0xD559DC", Offset = "0xD559DC", VA = "0xD559DC")]
		public ObiGenerator()
		{
		}
	}
	[Token(Token = "0x200023D")]
	public class FishingManager : MonoBehaviour
	{
		[Token(Token = "0x2000449")]
		public delegate void WaterChangeAction();

		[Token(Token = "0x200044A")]
		public delegate void DebugFishChanged(FishTypeSO fish);

		[Token(Token = "0x200044B")]
		public delegate void FishStartedPanicking(Vector3 fleeDirection, bool isFish, bool directionChange);

		[Token(Token = "0x200044C")]
		public delegate void FishStoppedPanicking(bool isFish);

		[Token(Token = "0x200044D")]
		public delegate void FishStartedFleeing(Vector3 fleeDirection, bool isFish, bool directionChange);

		[Token(Token = "0x200044E")]
		public delegate void FishStartedResisting(Vector3 fleeDirection, bool isFish, bool directionChange);

		[Token(Token = "0x200044F")]
		public delegate void FishStoppedFleeing(bool isFish);

		[Token(Token = "0x2000450")]
		public delegate void FishStoppedResisting(bool isFish);

		[Token(Token = "0x2000451")]
		public delegate void FishStunned();

		[Token(Token = "0x2000452")]
		public delegate void FishPowerReel();

		[Token(Token = "0x2000453")]
		public delegate void StopPowerReel();

		[Token(Token = "0x2000454")]
		public delegate void FishPool2Changed(FishPool2SO fp2);

		[Token(Token = "0x2000455")]
		public delegate void LootCratePoolChanged(LootCratePoolSO lcp);

		[Token(Token = "0x2000456")]
		public delegate void RodReset();

		[Token(Token = "0x4000FE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static FishingManager instance;

		[Token(Token = "0x4000FEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private RodCast rodCast;

		[Token(Token = "0x4000FEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private RodReel rodReel;

		[Token(Token = "0x4000FEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private RodChange rodChange;

		[Token(Token = "0x4000FED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private FishHookMinigame fishHookMg;

		[Token(Token = "0x4000FEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private FishReelInMinigame fishReelInMg;

		[Token(Token = "0x4000FEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private LineTension lineTension;

		[Token(Token = "0x4000FF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private BoostBar boostBar;

		[Token(Token = "0x4000FF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static bool StaminaVisible;

		[Token(Token = "0x4000FF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9")]
		public static bool IsShowingChallengeRewardsPanel;

		[Token(Token = "0x4000FF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Stamina stamina;

		[Token(Token = "0x4000FF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private RodBoost rodBoost;

		[Token(Token = "0x4000FF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private UI_TakeFishController ui_TakeFishController;

		[Token(Token = "0x4000FF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private LootCratePoolSO lootCratePoolSO;

		[Token(Token = "0x4000FF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private LootCrateController lootCrateController;

		[Token(Token = "0x4000FF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private FishAiController fishAiController;

		[Token(Token = "0x4000FF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private LureRadiusColor lureRadiusColor;

		[Token(Token = "0x4000FFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private UnderwaterLureController underwaterLureController;

		[Token(Token = "0x4000FFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private FishingLineController fishLine;

		[Token(Token = "0x4000FFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public XRIDefaultInputActions inputActions;

		[Token(Token = "0x4000FFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private XRInputSender inputSender;

		[Token(Token = "0x4000FFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private FishPool2SO fishPool2SO;

		[Token(Token = "0x4000FFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private FpFish selectedFish;

		[Token(Token = "0x4001000")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private LpCrate selectedCrate;

		[Token(Token = "0x4001001")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private Bobber bobber;

		[Token(Token = "0x4001002")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private PerlinMoverSettings bobberMoverSettings;

		[Token(Token = "0x4001003")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private Transform rodHand;

		[Token(Token = "0x4001004")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private Transform lastRodHand;

		[Token(Token = "0x4001005")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private Handside lastRodSide;

		[Token(Token = "0x4001006")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private Transform nonRodHand;

		[Token(Token = "0x4001007")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private Handside rodSide;

		[Token(Token = "0x4001008")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		private Handside reelSide;

		[Token(Token = "0x4001009")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private RecoverFish recoverFish;

		[Token(Token = "0x400100A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private RodLean rodLean;

		[Token(Token = "0x400100B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[SerializeField]
		private ItemSO rodSO;

		[Token(Token = "0x400100C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[SerializeField]
		private RodStand rodStand;

		[Token(Token = "0x400100D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[SerializeField]
		private Transform water;

		[Token(Token = "0x400100E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[SerializeField]
		private PatternController patternController;

		[Token(Token = "0x400100F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[SerializeField]
		private Transform arrowSnapCollidersRod;

		[Token(Token = "0x4001010")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[SerializeField]
		private Transform arrowSnapCollidersWorld;

		[Token(Token = "0x4001011")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		[SerializeField]
		private Transform arrowLeanCollidersRod;

		[Token(Token = "0x4001012")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		[SerializeField]
		private Transform arrowLeanCollidersWorld;

		[Token(Token = "0x4001013")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		[SerializeField]
		private Transform rodSnapArrowCollider;

		[Token(Token = "0x4001014")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		[SerializeField]
		private GameObject rodVisibleSnapCollider;

		[Token(Token = "0x4001015")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		[SerializeField]
		private GameObject tutPop;

		[Token(Token = "0x4001016")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		[SerializeField]
		private Animator tutPopAnimator;

		[Token(Token = "0x4001017")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		[SerializeField]
		private ReelInUI reelInUI;

		[Token(Token = "0x4001018")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		[SerializeField]
		private HookedFishController hookedFishController;

		[Token(Token = "0x4001019")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		[SerializeField]
		private FishingLineColor fishingLineColor;

		[Token(Token = "0x400101A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		[SerializeField]
		private PeasFishingController peasFishingController;

		[Token(Token = "0x400101B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		[SerializeField]
		public FishTypeSO debugFish;

		[Token(Token = "0x400101C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		[SerializeField]
		private float hookedFishMaxScale;

		[Token(Token = "0x17000107")]
		public static RodCast RodCast
		{
			[Token(Token = "0x6000DF7")]
			[Address(RVA = "0xC97D20", Offset = "0xC97D20", VA = "0xC97D20")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000108")]
		public static RodReel RodReel
		{
			[Token(Token = "0x6000DF8")]
			[Address(RVA = "0xC97D94", Offset = "0xC97D94", VA = "0xC97D94")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000109")]
		public static RodChange RodChange
		{
			[Token(Token = "0x6000DF9")]
			[Address(RVA = "0xC97E08", Offset = "0xC97E08", VA = "0xC97E08")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700010A")]
		public static FishHookMinigame FishHookMg
		{
			[Token(Token = "0x6000DFA")]
			[Address(RVA = "0xC96574", Offset = "0xC96574", VA = "0xC96574")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700010B")]
		public static FishReelInMinigame FishReelInMg
		{
			[Token(Token = "0x6000DFB")]
			[Address(RVA = "0xC965E8", Offset = "0xC965E8", VA = "0xC965E8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700010C")]
		public static LineTension LineTension
		{
			[Token(Token = "0x6000DFC")]
			[Address(RVA = "0xC966D0", Offset = "0xC966D0", VA = "0xC966D0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700010D")]
		public static BoostBar BoostBar
		{
			[Token(Token = "0x6000DFD")]
			[Address(RVA = "0xC97E7C", Offset = "0xC97E7C", VA = "0xC97E7C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700010E")]
		public static Stamina Stamina
		{
			[Token(Token = "0x6000DFE")]
			[Address(RVA = "0xC97EF0", Offset = "0xC97EF0", VA = "0xC97EF0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700010F")]
		public static RodBoost RodBoost
		{
			[Token(Token = "0x6000DFF")]
			[Address(RVA = "0xC9665C", Offset = "0xC9665C", VA = "0xC9665C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000110")]
		public static UI_TakeFishController UI_TakeFishController
		{
			[Token(Token = "0x6000E00")]
			[Address(RVA = "0xC97F64", Offset = "0xC97F64", VA = "0xC97F64")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000111")]
		public static LootCratePoolSO LootCratePoolSO
		{
			[Token(Token = "0x6000E01")]
			[Address(RVA = "0xC97FD8", Offset = "0xC97FD8", VA = "0xC97FD8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E02")]
			[Address(RVA = "0xC94EC8", Offset = "0xC94EC8", VA = "0xC94EC8")]
			set
			{
			}
		}

		[Token(Token = "0x17000112")]
		public static LootCrateController LootCrateController
		{
			[Token(Token = "0x6000E03")]
			[Address(RVA = "0xC983E0", Offset = "0xC983E0", VA = "0xC983E0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000113")]
		public static FishAiController FishAiController
		{
			[Token(Token = "0x6000E04")]
			[Address(RVA = "0xC98454", Offset = "0xC98454", VA = "0xC98454")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000114")]
		public static LureRadiusColor LureRadiusColor
		{
			[Token(Token = "0x6000E05")]
			[Address(RVA = "0xC984C8", Offset = "0xC984C8", VA = "0xC984C8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000115")]
		public static UnderwaterLureController UnderwaterLureController
		{
			[Token(Token = "0x6000E06")]
			[Address(RVA = "0xC9853C", Offset = "0xC9853C", VA = "0xC9853C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000116")]
		public static FishingLineController FishLine
		{
			[Token(Token = "0x6000E07")]
			[Address(RVA = "0xC985B0", Offset = "0xC985B0", VA = "0xC985B0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000117")]
		public static XRInputSender XRInputSender
		{
			[Token(Token = "0x6000E08")]
			[Address(RVA = "0xC98624", Offset = "0xC98624", VA = "0xC98624")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000118")]
		public static FishPool2SO FishPool2SO
		{
			[Token(Token = "0x6000E09")]
			[Address(RVA = "0xC98698", Offset = "0xC98698", VA = "0xC98698")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E0A")]
			[Address(RVA = "0xC94B68", Offset = "0xC94B68", VA = "0xC94B68")]
			set
			{
			}
		}

		[Token(Token = "0x17000119")]
		public static FpFish SelectedFish
		{
			[Token(Token = "0x6000E0B")]
			[Address(RVA = "0xC95164", Offset = "0xC95164", VA = "0xC95164")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E0C")]
			[Address(RVA = "0xC98AA0", Offset = "0xC98AA0", VA = "0xC98AA0")]
			set
			{
			}
		}

		[Token(Token = "0x1700011A")]
		public static LpCrate SelectedCrate
		{
			[Token(Token = "0x6000E0D")]
			[Address(RVA = "0xC98B1C", Offset = "0xC98B1C", VA = "0xC98B1C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E0E")]
			[Address(RVA = "0xC98B90", Offset = "0xC98B90", VA = "0xC98B90")]
			set
			{
			}
		}

		[Token(Token = "0x1700011B")]
		public static Bobber Bobber
		{
			[Token(Token = "0x6000E0F")]
			[Address(RVA = "0xC97844", Offset = "0xC97844", VA = "0xC97844")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E10")]
			[Address(RVA = "0xC98C0C", Offset = "0xC98C0C", VA = "0xC98C0C")]
			set
			{
			}
		}

		[Token(Token = "0x1700011C")]
		public static PerlinMoverSettings BobberMoverSettings
		{
			[Token(Token = "0x6000E11")]
			[Address(RVA = "0xC98C88", Offset = "0xC98C88", VA = "0xC98C88")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700011D")]
		public static Transform RodHand
		{
			[Token(Token = "0x6000E12")]
			[Address(RVA = "0xC98CFC", Offset = "0xC98CFC", VA = "0xC98CFC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E13")]
			[Address(RVA = "0xC98D70", Offset = "0xC98D70", VA = "0xC98D70")]
			set
			{
			}
		}

		[Token(Token = "0x1700011E")]
		public static Transform LastRodHand
		{
			[Token(Token = "0x6000E14")]
			[Address(RVA = "0xC98DEC", Offset = "0xC98DEC", VA = "0xC98DEC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700011F")]
		public static Handside LastRodSide
		{
			[Token(Token = "0x6000E15")]
			[Address(RVA = "0xC98E60", Offset = "0xC98E60", VA = "0xC98E60")]
			get
			{
				return default(Handside);
			}
		}

		[Token(Token = "0x17000120")]
		public static Transform NonRodHand
		{
			[Token(Token = "0x6000E16")]
			[Address(RVA = "0xC98ED4", Offset = "0xC98ED4", VA = "0xC98ED4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E17")]
			[Address(RVA = "0xC98F48", Offset = "0xC98F48", VA = "0xC98F48")]
			set
			{
			}
		}

		[Token(Token = "0x17000121")]
		public static Vector3 BetweenHandVec3
		{
			[Token(Token = "0x6000E18")]
			[Address(RVA = "0xC98FC4", Offset = "0xC98FC4", VA = "0xC98FC4")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000122")]
		public static Handside RodSide
		{
			[Token(Token = "0x6000E19")]
			[Address(RVA = "0xC990D0", Offset = "0xC990D0", VA = "0xC990D0")]
			get
			{
				return default(Handside);
			}
			[Token(Token = "0x6000E1A")]
			[Address(RVA = "0xC99144", Offset = "0xC99144", VA = "0xC99144")]
			set
			{
			}
		}

		[Token(Token = "0x17000123")]
		public static Handside ReelSide
		{
			[Token(Token = "0x6000E1B")]
			[Address(RVA = "0xC991BC", Offset = "0xC991BC", VA = "0xC991BC")]
			get
			{
				return default(Handside);
			}
			[Token(Token = "0x6000E1C")]
			[Address(RVA = "0xC99230", Offset = "0xC99230", VA = "0xC99230")]
			set
			{
			}
		}

		[Token(Token = "0x17000124")]
		public static RecoverFish RecoverFish
		{
			[Token(Token = "0x6000E1D")]
			[Address(RVA = "0xC992A8", Offset = "0xC992A8", VA = "0xC992A8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000125")]
		public static RodLean RodLean
		{
			[Token(Token = "0x6000E1E")]
			[Address(RVA = "0xC9931C", Offset = "0xC9931C", VA = "0xC9931C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000126")]
		public static ItemSO Rod
		{
			[Token(Token = "0x6000E1F")]
			[Address(RVA = "0xC99390", Offset = "0xC99390", VA = "0xC99390")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E20")]
			[Address(RVA = "0xC99404", Offset = "0xC99404", VA = "0xC99404")]
			set
			{
			}
		}

		[Token(Token = "0x17000127")]
		public static RodStand RodStand
		{
			[Token(Token = "0x6000E21")]
			[Address(RVA = "0xC94AF4", Offset = "0xC94AF4", VA = "0xC94AF4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000128")]
		public static Transform Water
		{
			[Token(Token = "0x6000E22")]
			[Address(RVA = "0xC99484", Offset = "0xC99484", VA = "0xC99484")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E23")]
			[Address(RVA = "0xC994F8", Offset = "0xC994F8", VA = "0xC994F8")]
			set
			{
			}
		}

		[Token(Token = "0x17000129")]
		public static PatternController PatternController
		{
			[Token(Token = "0x6000E24")]
			[Address(RVA = "0xC997CC", Offset = "0xC997CC", VA = "0xC997CC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700012A")]
		public static Transform ArrowSnapCollidersRod
		{
			[Token(Token = "0x6000E25")]
			[Address(RVA = "0xC99840", Offset = "0xC99840", VA = "0xC99840")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700012B")]
		public static Transform ArrowSnapCollidersWorld
		{
			[Token(Token = "0x6000E26")]
			[Address(RVA = "0xC998B4", Offset = "0xC998B4", VA = "0xC998B4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700012C")]
		public static Transform ArrowLeanCollidersRod
		{
			[Token(Token = "0x6000E27")]
			[Address(RVA = "0xC99928", Offset = "0xC99928", VA = "0xC99928")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700012D")]
		public static Transform ArrowLeanCollidersWorld
		{
			[Token(Token = "0x6000E28")]
			[Address(RVA = "0xC9999C", Offset = "0xC9999C", VA = "0xC9999C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700012E")]
		public static Transform RodSnapArrowCollider
		{
			[Token(Token = "0x6000E29")]
			[Address(RVA = "0xC99A10", Offset = "0xC99A10", VA = "0xC99A10")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700012F")]
		public static GameObject RodVisibleSnapCollider
		{
			[Token(Token = "0x6000E2A")]
			[Address(RVA = "0xC99A84", Offset = "0xC99A84", VA = "0xC99A84")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000130")]
		public static GameObject TutPop
		{
			[Token(Token = "0x6000E2B")]
			[Address(RVA = "0xC99AF8", Offset = "0xC99AF8", VA = "0xC99AF8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000131")]
		public static Animator TutPopAnimator
		{
			[Token(Token = "0x6000E2C")]
			[Address(RVA = "0xC99B6C", Offset = "0xC99B6C", VA = "0xC99B6C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000132")]
		public static ReelInUI ReelInUI
		{
			[Token(Token = "0x6000E2D")]
			[Address(RVA = "0xC99BE0", Offset = "0xC99BE0", VA = "0xC99BE0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000133")]
		public static HookedFishController HookedFishController
		{
			[Token(Token = "0x6000E2E")]
			[Address(RVA = "0xC94574", Offset = "0xC94574", VA = "0xC94574")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000134")]
		public static FishingLineColor FishingLineColor
		{
			[Token(Token = "0x6000E2F")]
			[Address(RVA = "0xC99C54", Offset = "0xC99C54", VA = "0xC99C54")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000135")]
		public static PeasFishingController PeasFishingController
		{
			[Token(Token = "0x6000E30")]
			[Address(RVA = "0xC99CC8", Offset = "0xC99CC8", VA = "0xC99CC8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000136")]
		public static FishTypeSO DebugFish
		{
			[Token(Token = "0x6000E31")]
			[Address(RVA = "0xC99D3C", Offset = "0xC99D3C", VA = "0xC99D3C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000137")]
		public static float HookedFishMaxScale
		{
			[Token(Token = "0x6000E32")]
			[Address(RVA = "0xC99DB0", Offset = "0xC99DB0", VA = "0xC99DB0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1400003F")]
		public static event WaterChangeAction OnWaterChanged
		{
			[Token(Token = "0x6000E33")]
			[Address(RVA = "0xC99E24", Offset = "0xC99E24", VA = "0xC99E24")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F124C", Offset = "0x9F124C")]
			add
			{
			}
			[Token(Token = "0x6000E34")]
			[Address(RVA = "0xC99F14", Offset = "0xC99F14", VA = "0xC99F14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F125C", Offset = "0x9F125C")]
			remove
			{
			}
		}

		[Token(Token = "0x14000040")]
		public static event DebugFishChanged OnDebugFishChanged
		{
			[Token(Token = "0x6000E35")]
			[Address(RVA = "0xC9A004", Offset = "0xC9A004", VA = "0xC9A004")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F126C", Offset = "0x9F126C")]
			add
			{
			}
			[Token(Token = "0x6000E36")]
			[Address(RVA = "0xC9A0F4", Offset = "0xC9A0F4", VA = "0xC9A0F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F127C", Offset = "0x9F127C")]
			remove
			{
			}
		}

		[Token(Token = "0x14000041")]
		public static event FishStartedPanicking OnFishStartedPanicking
		{
			[Token(Token = "0x6000E37")]
			[Address(RVA = "0xC9A1E4", Offset = "0xC9A1E4", VA = "0xC9A1E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F128C", Offset = "0x9F128C")]
			add
			{
			}
			[Token(Token = "0x6000E38")]
			[Address(RVA = "0xC9A2D4", Offset = "0xC9A2D4", VA = "0xC9A2D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F129C", Offset = "0x9F129C")]
			remove
			{
			}
		}

		[Token(Token = "0x14000042")]
		public static event FishStoppedPanicking OnFishStoppedPanicking
		{
			[Token(Token = "0x6000E39")]
			[Address(RVA = "0xC9A3C4", Offset = "0xC9A3C4", VA = "0xC9A3C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F12AC", Offset = "0x9F12AC")]
			add
			{
			}
			[Token(Token = "0x6000E3A")]
			[Address(RVA = "0xC9A4B4", Offset = "0xC9A4B4", VA = "0xC9A4B4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F12BC", Offset = "0x9F12BC")]
			remove
			{
			}
		}

		[Token(Token = "0x14000043")]
		public static event FishStartedFleeing OnFishStartedFleeing
		{
			[Token(Token = "0x6000E3B")]
			[Address(RVA = "0xC9A5A4", Offset = "0xC9A5A4", VA = "0xC9A5A4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F12CC", Offset = "0x9F12CC")]
			add
			{
			}
			[Token(Token = "0x6000E3C")]
			[Address(RVA = "0xC9A694", Offset = "0xC9A694", VA = "0xC9A694")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F12DC", Offset = "0x9F12DC")]
			remove
			{
			}
		}

		[Token(Token = "0x14000044")]
		public static event FishStartedResisting OnFishStartedResisting
		{
			[Token(Token = "0x6000E3D")]
			[Address(RVA = "0xC9A784", Offset = "0xC9A784", VA = "0xC9A784")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F12EC", Offset = "0x9F12EC")]
			add
			{
			}
			[Token(Token = "0x6000E3E")]
			[Address(RVA = "0xC9A874", Offset = "0xC9A874", VA = "0xC9A874")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F12FC", Offset = "0x9F12FC")]
			remove
			{
			}
		}

		[Token(Token = "0x14000045")]
		public static event FishStoppedFleeing OnFishStoppedFleeing
		{
			[Token(Token = "0x6000E3F")]
			[Address(RVA = "0xC9A964", Offset = "0xC9A964", VA = "0xC9A964")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F130C", Offset = "0x9F130C")]
			add
			{
			}
			[Token(Token = "0x6000E40")]
			[Address(RVA = "0xC9AA54", Offset = "0xC9AA54", VA = "0xC9AA54")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F131C", Offset = "0x9F131C")]
			remove
			{
			}
		}

		[Token(Token = "0x14000046")]
		public static event FishStoppedResisting OnFishStoppedResisting
		{
			[Token(Token = "0x6000E41")]
			[Address(RVA = "0xC9AB44", Offset = "0xC9AB44", VA = "0xC9AB44")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F132C", Offset = "0x9F132C")]
			add
			{
			}
			[Token(Token = "0x6000E42")]
			[Address(RVA = "0xC9AC34", Offset = "0xC9AC34", VA = "0xC9AC34")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F133C", Offset = "0x9F133C")]
			remove
			{
			}
		}

		[Token(Token = "0x14000047")]
		public static event FishStunned OnFishStunned
		{
			[Token(Token = "0x6000E43")]
			[Address(RVA = "0xC9AD24", Offset = "0xC9AD24", VA = "0xC9AD24")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F134C", Offset = "0x9F134C")]
			add
			{
			}
			[Token(Token = "0x6000E44")]
			[Address(RVA = "0xC9AE14", Offset = "0xC9AE14", VA = "0xC9AE14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F135C", Offset = "0x9F135C")]
			remove
			{
			}
		}

		[Token(Token = "0x14000048")]
		public static event FishPowerReel OnFishRodBoost
		{
			[Token(Token = "0x6000E45")]
			[Address(RVA = "0xC9AF04", Offset = "0xC9AF04", VA = "0xC9AF04")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F136C", Offset = "0x9F136C")]
			add
			{
			}
			[Token(Token = "0x6000E46")]
			[Address(RVA = "0xC9AFF4", Offset = "0xC9AFF4", VA = "0xC9AFF4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F137C", Offset = "0x9F137C")]
			remove
			{
			}
		}

		[Token(Token = "0x14000049")]
		public static event StopPowerReel OnFishStopRodBoost
		{
			[Token(Token = "0x6000E47")]
			[Address(RVA = "0xC9B0E4", Offset = "0xC9B0E4", VA = "0xC9B0E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F138C", Offset = "0x9F138C")]
			add
			{
			}
			[Token(Token = "0x6000E48")]
			[Address(RVA = "0xC9B1D4", Offset = "0xC9B1D4", VA = "0xC9B1D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F139C", Offset = "0x9F139C")]
			remove
			{
			}
		}

		[Token(Token = "0x1400004A")]
		public static event FishPool2Changed OnFishPool2Changed
		{
			[Token(Token = "0x6000E49")]
			[Address(RVA = "0xC9B2C4", Offset = "0xC9B2C4", VA = "0xC9B2C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F13AC", Offset = "0x9F13AC")]
			add
			{
			}
			[Token(Token = "0x6000E4A")]
			[Address(RVA = "0xC9B3B4", Offset = "0xC9B3B4", VA = "0xC9B3B4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F13BC", Offset = "0x9F13BC")]
			remove
			{
			}
		}

		[Token(Token = "0x1400004B")]
		public static event LootCratePoolChanged OnLootCratePoolChanged
		{
			[Token(Token = "0x6000E4B")]
			[Address(RVA = "0xC9B4A4", Offset = "0xC9B4A4", VA = "0xC9B4A4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F13CC", Offset = "0x9F13CC")]
			add
			{
			}
			[Token(Token = "0x6000E4C")]
			[Address(RVA = "0xC9B594", Offset = "0xC9B594", VA = "0xC9B594")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F13DC", Offset = "0x9F13DC")]
			remove
			{
			}
		}

		[Token(Token = "0x1400004C")]
		public static event RodReset OnRodReset
		{
			[Token(Token = "0x6000E4D")]
			[Address(RVA = "0xC95C24", Offset = "0xC95C24", VA = "0xC95C24")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F13EC", Offset = "0x9F13EC")]
			add
			{
			}
			[Token(Token = "0x6000E4E")]
			[Address(RVA = "0xC95DB0", Offset = "0xC95DB0", VA = "0xC95DB0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F13FC", Offset = "0x9F13FC")]
			remove
			{
			}
		}

		[Token(Token = "0x6000E4F")]
		[Address(RVA = "0xC9B684", Offset = "0xC9B684", VA = "0xC9B684")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000E50")]
		[Address(RVA = "0xC9BAF4", Offset = "0xC9BAF4", VA = "0xC9BAF4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000E51")]
		[Address(RVA = "0xC9BB9C", Offset = "0xC9BB9C", VA = "0xC9BB9C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000E52")]
		[Address(RVA = "0xC9B94C", Offset = "0xC9B94C", VA = "0xC9B94C")]
		private void LoadChangePlayerSetting()
		{
		}

		[Token(Token = "0x6000E53")]
		[Address(RVA = "0xC9BC80", Offset = "0xC9BC80", VA = "0xC9BC80")]
		private void LocationChanged(LocationSO locationSO, bool comingFromShip)
		{
		}

		[Token(Token = "0x6000E54")]
		[Address(RVA = "0xC9BD74", Offset = "0xC9BD74", VA = "0xC9BD74")]
		public static void SetInputActions(Handside side)
		{
		}

		[Token(Token = "0x6000E55")]
		[Address(RVA = "0xC9BF80", Offset = "0xC9BF80", VA = "0xC9BF80")]
		public static void CallStartPattern(Vector3 fleeDirection, bool isFish)
		{
		}

		[Token(Token = "0x6000E56")]
		[Address(RVA = "0xC9C338", Offset = "0xC9C338", VA = "0xC9C338")]
		public static void CallStartResisting(Vector3 fleeDirection, bool isFish, bool directionChange = false)
		{
		}

		[Token(Token = "0x6000E57")]
		[Address(RVA = "0xC9C700", Offset = "0xC9C700", VA = "0xC9C700")]
		public static void CallStopPattern(bool isFish)
		{
		}

		[Token(Token = "0x6000E58")]
		[Address(RVA = "0xC9CA1C", Offset = "0xC9CA1C", VA = "0xC9CA1C")]
		public static void CallStopResisting(bool isFish)
		{
		}

		[Token(Token = "0x6000E59")]
		[Address(RVA = "0xC9CD38", Offset = "0xC9CD38", VA = "0xC9CD38")]
		public static void CallStartPanicking(Vector3 fleeDirection, bool isFish)
		{
		}

		[Token(Token = "0x6000E5A")]
		[Address(RVA = "0xC9D0F0", Offset = "0xC9D0F0", VA = "0xC9D0F0")]
		public static void CallStopPanicking(bool isFish)
		{
		}

		[Token(Token = "0x6000E5B")]
		[Address(RVA = "0xC9D40C", Offset = "0xC9D40C", VA = "0xC9D40C")]
		public static void CallFishStunned()
		{
		}

		[Token(Token = "0x6000E5C")]
		[Address(RVA = "0xC9D6BC", Offset = "0xC9D6BC", VA = "0xC9D6BC")]
		public static void CallFishRodBoost()
		{
		}

		[Token(Token = "0x6000E5D")]
		[Address(RVA = "0xC9D96C", Offset = "0xC9D96C", VA = "0xC9D96C")]
		public static void CallFishStopRodBoost()
		{
		}

		[Token(Token = "0x6000E5E")]
		[Address(RVA = "0xC9DC1C", Offset = "0xC9DC1C", VA = "0xC9DC1C")]
		public static void CallRodReset()
		{
		}

		[Token(Token = "0x6000E5F")]
		[Address(RVA = "0xC9DECC", Offset = "0xC9DECC", VA = "0xC9DECC")]
		public static void ReturnRod(bool interactable = true)
		{
		}

		[Token(Token = "0x6000E60")]
		[Address(RVA = "0xC9DF94", Offset = "0xC9DF94", VA = "0xC9DF94")]
		public static void SetRodHand(Handside side)
		{
		}

		[Token(Token = "0x6000E61")]
		[Address(RVA = "0xC9E160", Offset = "0xC9E160", VA = "0xC9E160")]
		public void SetVisibleStamina(bool visible)
		{
		}

		[Token(Token = "0x6000E62")]
		[Address(RVA = "0xC94C9C", Offset = "0xC94C9C", VA = "0xC94C9C")]
		public static void ChangeDebugFish(FishTypeSO fish)
		{
		}

		[Token(Token = "0x6000E63")]
		[Address(RVA = "0xC9E598", Offset = "0xC9E598", VA = "0xC9E598")]
		public FishingManager()
		{
		}
	}
	[Token(Token = "0x200023E")]
	public class FpsToggle : MonoBehaviour
	{
		[Token(Token = "0x400102B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Toggle tog;

		[Token(Token = "0x6000E65")]
		[Address(RVA = "0xC9F518", Offset = "0xC9F518", VA = "0xC9F518")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000E66")]
		[Address(RVA = "0xC9F5BC", Offset = "0xC9F5BC", VA = "0xC9F5BC")]
		public void OnToggleChange()
		{
		}

		[Token(Token = "0x6000E67")]
		[Address(RVA = "0xC9F65C", Offset = "0xC9F65C", VA = "0xC9F65C")]
		public FpsToggle()
		{
		}
	}
	[Token(Token = "0x200023F")]
	public class GetSheetData : MonoBehaviour
	{
		[Token(Token = "0x400102C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private TestSheetRoot testSheet;

		[Token(Token = "0x6000E68")]
		[Address(RVA = "0xCA07D8", Offset = "0xCA07D8", VA = "0xCA07D8")]
		private void Start()
		{
		}

		[Token(Token = "0x6000E69")]
		[Address(RVA = "0xCA09B8", Offset = "0xCA09B8", VA = "0xCA09B8")]
		public GetSheetData()
		{
		}
	}
	[Token(Token = "0x2000240")]
	public class EquipController : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000457")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E81D8", Offset = "0x9E81D8")]
		private sealed class <>c
		{
			[Token(Token = "0x40019FC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40019FD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Comparison<RodSO> <>9__30_1;

			[Token(Token = "0x6001BCA")]
			[Address(RVA = "0xC07020", Offset = "0xC07020", VA = "0xC07020")]
			public <>c()
			{
			}

			[Token(Token = "0x6001BCB")]
			[Address(RVA = "0xC07028", Offset = "0xC07028", VA = "0xC07028")]
			internal int <EventHub_OnItemGot>b__30_1(RodSO x, RodSO y)
			{
				return default(int);
			}
		}

		[Token(Token = "0x400102D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static EquipController Instance;

		[Token(Token = "0x400102E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool allowSwitchingDuringTutorial;

		[Token(Token = "0x400102F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private RodSO m_Rod;

		[Token(Token = "0x4001030")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private LureSO m_Lure;

		[Token(Token = "0x4001031")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private CharmSO m_Charm;

		[Token(Token = "0x4001032")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private RodSO DefaultRod;

		[Token(Token = "0x4001033")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private LureSO DefaultFloatingLure;

		[Token(Token = "0x4001034")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Transform m_Equip_Rod;

		[Token(Token = "0x4001035")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Transform m_Equip_Lure;

		[Token(Token = "0x4001036")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Transform m_Equip_Charm;

		[Token(Token = "0x4001037")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private List<RodSO> m_UnlockedRod;

		[Token(Token = "0x4001038")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Dictionary<RodSO, int> m_UnlockedRod_Dic;

		[Token(Token = "0x4001039")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private int m_UnlockedRodIndex;

		[Token(Token = "0x400103A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private List<LureSO> m_UnlockedLures;

		[Token(Token = "0x400103B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Dictionary<LureSO, int> m_UnlockedLures_Dic;

		[Token(Token = "0x400103C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private int m_UnlockedLureIndex;

		[Token(Token = "0x400103D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private LureSO.Type m_currentLureMode;

		[Token(Token = "0x400103E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private List<LureSO> m_UnlockedSelectLures;

		[Token(Token = "0x400103F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private SpawnPool Pool;

		[Token(Token = "0x17000138")]
		public static RodSO RodData
		{
			[Token(Token = "0x6000E6A")]
			[Address(RVA = "0xC045B4", Offset = "0xC045B4", VA = "0xC045B4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000139")]
		public static LureSO LureData
		{
			[Token(Token = "0x6000E6B")]
			[Address(RVA = "0xC04610", Offset = "0xC04610", VA = "0xC04610")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700013A")]
		public static CharmSO CharmData
		{
			[Token(Token = "0x6000E6C")]
			[Address(RVA = "0xC0466C", Offset = "0xC0466C", VA = "0xC0466C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E6D")]
		[Address(RVA = "0xC046C8", Offset = "0xC046C8", VA = "0xC046C8")]
		private void Start()
		{
		}

		[Token(Token = "0x6000E6E")]
		[Address(RVA = "0xC04978", Offset = "0xC04978", VA = "0xC04978")]
		private void SetDefaultEquipment()
		{
		}

		[Token(Token = "0x6000E6F")]
		[Address(RVA = "0xC04FF0", Offset = "0xC04FF0", VA = "0xC04FF0")]
		public void Init()
		{
		}

		[Token(Token = "0x6000E70")]
		[Address(RVA = "0xC049B0", Offset = "0xC049B0", VA = "0xC049B0")]
		private void InitUnlockedItems()
		{
		}

		[Token(Token = "0x6000E71")]
		[Address(RVA = "0xC058B8", Offset = "0xC058B8", VA = "0xC058B8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000E72")]
		[Address(RVA = "0xC05BDC", Offset = "0xC05BDC", VA = "0xC05BDC")]
		public void EventHub_OnItemGot(ItemSO itemSO, int amount)
		{
		}

		[Token(Token = "0x6000E73")]
		[Address(RVA = "0xC0607C", Offset = "0xC0607C", VA = "0xC0607C")]
		private void Player_OnLocationChanged(LocationSO locationSO, bool comingFromShip)
		{
		}

		[Token(Token = "0x6000E74")]
		[Address(RVA = "0xC060A0", Offset = "0xC060A0", VA = "0xC060A0")]
		public void ReEquipAll()
		{
		}

		[Token(Token = "0x6000E75")]
		[Address(RVA = "0xC060D8", Offset = "0xC060D8", VA = "0xC060D8")]
		public void DespawnAllEquipments()
		{
		}

		[Token(Token = "0x6000E76")]
		[Address(RVA = "0xC0524C", Offset = "0xC0524C", VA = "0xC0524C")]
		public void OnEquipEvent(ItemSO equipment)
		{
		}

		[Token(Token = "0x6000E77")]
		[Address(RVA = "0xC06764", Offset = "0xC06764", VA = "0xC06764")]
		public ItemSO GetEquipmentByType(ItemTypeSO.ItemType type)
		{
			return null;
		}

		[Token(Token = "0x6000E78")]
		[Address(RVA = "0xC067A0", Offset = "0xC067A0", VA = "0xC067A0")]
		public bool IsEquippable(ItemTypeSO itemType)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E79")]
		[Address(RVA = "0xC062E8", Offset = "0xC062E8", VA = "0xC062E8")]
		private Transform ChangeEquipModel(ItemSO item, Transform parent)
		{
			return null;
		}

		[Token(Token = "0x6000E7A")]
		[Address(RVA = "0xC067C4", Offset = "0xC067C4", VA = "0xC067C4")]
		public void AddEquipWithoutCharm()
		{
		}

		[Token(Token = "0x6000E7B")]
		[Address(RVA = "0xC06110", Offset = "0xC06110", VA = "0xC06110")]
		private void DespawnEquipment(ItemSO equipment)
		{
		}

		[Token(Token = "0x6000E7C")]
		[Address(RVA = "0xC05718", Offset = "0xC05718", VA = "0xC05718")]
		private void EquipLureByCurrentMode()
		{
		}

		[Token(Token = "0x6000E7D")]
		[Address(RVA = "0xC067F0", Offset = "0xC067F0", VA = "0xC067F0")]
		private void SwitchPreviousLure()
		{
		}

		[Token(Token = "0x6000E7E")]
		[Address(RVA = "0xC0690C", Offset = "0xC0690C", VA = "0xC0690C")]
		private void SwitchNextLure()
		{
		}

		[Token(Token = "0x6000E7F")]
		[Address(RVA = "0xC06A18", Offset = "0xC06A18", VA = "0xC06A18")]
		private void SwitchLureType()
		{
		}

		[Token(Token = "0x6000E80")]
		[Address(RVA = "0xC06C88", Offset = "0xC06C88", VA = "0xC06C88")]
		private void SwitchPole(int offset)
		{
		}

		[Token(Token = "0x6000E81")]
		[Address(RVA = "0xC06D50", Offset = "0xC06D50", VA = "0xC06D50")]
		private void OnPoleCrafted(CraftingRecipesSO recipe)
		{
		}

		[Token(Token = "0x6000E82")]
		[Address(RVA = "0xC06DDC", Offset = "0xC06DDC", VA = "0xC06DDC")]
		public EquipController()
		{
		}

		[Token(Token = "0x6000E83")]
		[Address(RVA = "0xC06F28", Offset = "0xC06F28", VA = "0xC06F28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F140C", Offset = "0x9F140C")]
		private bool <InitUnlockedItems>b__28_0(LureSO x)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E84")]
		[Address(RVA = "0xC06F4C", Offset = "0xC06F4C", VA = "0xC06F4C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F141C", Offset = "0x9F141C")]
		private bool <EventHub_OnItemGot>b__30_0(LureSO x)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E85")]
		[Address(RVA = "0xC06F70", Offset = "0xC06F70", VA = "0xC06F70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F142C", Offset = "0x9F142C")]
		private bool <SwitchLureType>b__43_0(LureSO x)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E86")]
		[Address(RVA = "0xC06F94", Offset = "0xC06F94", VA = "0xC06F94")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F143C", Offset = "0x9F143C")]
		private bool <SwitchLureType>b__43_1(LureSO x)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000241")]
	public class InventoryController : MonoBehaviour
	{
		[Token(Token = "0x2000458")]
		public delegate void ItemGetAction(ItemSO item, int amount);

		[Token(Token = "0x2000459")]
		public delegate void PoleGetAction(RodSO rod);

		[Token(Token = "0x200045A")]
		public delegate void CharmGetAction(CharmSO charm);

		[Token(Token = "0x200045B")]
		public delegate void IngredientGetAction(IngredientsSO ingredient);

		[Token(Token = "0x200045C")]
		public delegate void RecipeGetAction(CraftingRecipesSO recipe);

		[Token(Token = "0x4001040")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static InventoryController Instance;

		[Token(Token = "0x4001041")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static bool isLoaded;

		[Token(Token = "0x4001042")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public ItemSO[] Items;

		[Token(Token = "0x4001043")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Dictionary<ItemSO, int> m_items;

		[Token(Token = "0x4001049")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool wasInitialized;

		[Token(Token = "0x400104A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private string lastItemReceivedBCID;

		[Token(Token = "0x400104B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int lastItemReceivedAmount;

		[Token(Token = "0x400104C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private double lastItemReceivedTime;

		[Token(Token = "0x1700013B")]
		public static Dictionary<ItemSO, int> InventoryItems
		{
			[Token(Token = "0x6000E87")]
			[Address(RVA = "0xCA31A8", Offset = "0xCA31A8", VA = "0xCA31A8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1400004D")]
		public static event ItemGetAction OnItemGet
		{
			[Token(Token = "0x6000E88")]
			[Address(RVA = "0xCA321C", Offset = "0xCA321C", VA = "0xCA321C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F144C", Offset = "0x9F144C")]
			add
			{
			}
			[Token(Token = "0x6000E89")]
			[Address(RVA = "0xCA330C", Offset = "0xCA330C", VA = "0xCA330C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F145C", Offset = "0x9F145C")]
			remove
			{
			}
		}

		[Token(Token = "0x1400004E")]
		public static event PoleGetAction OnPoleGet
		{
			[Token(Token = "0x6000E8A")]
			[Address(RVA = "0xCA33FC", Offset = "0xCA33FC", VA = "0xCA33FC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F146C", Offset = "0x9F146C")]
			add
			{
			}
			[Token(Token = "0x6000E8B")]
			[Address(RVA = "0xCA34EC", Offset = "0xCA34EC", VA = "0xCA34EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F147C", Offset = "0x9F147C")]
			remove
			{
			}
		}

		[Token(Token = "0x1400004F")]
		public static event CharmGetAction OnCharmGet
		{
			[Token(Token = "0x6000E8C")]
			[Address(RVA = "0xCA35DC", Offset = "0xCA35DC", VA = "0xCA35DC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F148C", Offset = "0x9F148C")]
			add
			{
			}
			[Token(Token = "0x6000E8D")]
			[Address(RVA = "0xCA36CC", Offset = "0xCA36CC", VA = "0xCA36CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F149C", Offset = "0x9F149C")]
			remove
			{
			}
		}

		[Token(Token = "0x14000050")]
		public static event IngredientGetAction OnIngredientGet
		{
			[Token(Token = "0x6000E8E")]
			[Address(RVA = "0xCA37BC", Offset = "0xCA37BC", VA = "0xCA37BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F14AC", Offset = "0x9F14AC")]
			add
			{
			}
			[Token(Token = "0x6000E8F")]
			[Address(RVA = "0xCA38AC", Offset = "0xCA38AC", VA = "0xCA38AC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F14BC", Offset = "0x9F14BC")]
			remove
			{
			}
		}

		[Token(Token = "0x14000051")]
		public static event RecipeGetAction OnRecipeGet
		{
			[Token(Token = "0x6000E90")]
			[Address(RVA = "0xCA399C", Offset = "0xCA399C", VA = "0xCA399C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F14CC", Offset = "0x9F14CC")]
			add
			{
			}
			[Token(Token = "0x6000E91")]
			[Address(RVA = "0xCA3A8C", Offset = "0xCA3A8C", VA = "0xCA3A8C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F14DC", Offset = "0x9F14DC")]
			remove
			{
			}
		}

		[Token(Token = "0x6000E92")]
		[Address(RVA = "0xCA3B7C", Offset = "0xCA3B7C", VA = "0xCA3B7C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000E93")]
		[Address(RVA = "0xCA3BF4", Offset = "0xCA3BF4", VA = "0xCA3BF4")]
		public void Init()
		{
		}

		[Token(Token = "0x6000E94")]
		[Address(RVA = "0xCA3D28", Offset = "0xCA3D28", VA = "0xCA3D28")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000E95")]
		[Address(RVA = "0xCA3DD4", Offset = "0xCA3DD4", VA = "0xCA3DD4")]
		private void OnMissionCompleted(MissionSO.MissionTypes type, MissionSO.Reward[] rewards, bool isCheating)
		{
		}

		[Token(Token = "0x6000E96")]
		[Address(RVA = "0xCA40DC", Offset = "0xCA40DC", VA = "0xCA40DC")]
		public void AddItem(ItemSO item, int amount)
		{
		}

		[Token(Token = "0x6000E97")]
		[Address(RVA = "0xCA5074", Offset = "0xCA5074", VA = "0xCA5074")]
		public void RemoveItem(ItemSO item)
		{
		}

		[Token(Token = "0x6000E98")]
		[Address(RVA = "0xCA5BF8", Offset = "0xCA5BF8", VA = "0xCA5BF8")]
		private bool UI_CharmCraftingController_OnCraftStarted(CraftingRecipesSO craftingRecipes, int multiple)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E99")]
		[Address(RVA = "0xCA5D34", Offset = "0xCA5D34", VA = "0xCA5D34")]
		private bool IsEnoughStock(CraftingRecipesSO craftingRecipes, int multiple)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E9A")]
		[Address(RVA = "0xCA4590", Offset = "0xCA4590", VA = "0xCA4590")]
		private void CreateItem(CraftingRecipesSO craftingRecipes, int multiple, bool isCheating = false)
		{
		}

		[Token(Token = "0x6000E9B")]
		[Address(RVA = "0xCA5CEC", Offset = "0xCA5CEC", VA = "0xCA5CEC")]
		public int GetMaxInStock(CraftingRecipesSO craftingRecipes)
		{
			return default(int);
		}

		[Token(Token = "0x6000E9C")]
		[Address(RVA = "0xCA5E18", Offset = "0xCA5E18", VA = "0xCA5E18")]
		public void ResetInventory()
		{
		}

		[Token(Token = "0x6000E9D")]
		[Address(RVA = "0xCA5F50", Offset = "0xCA5F50", VA = "0xCA5F50")]
		public InventoryController()
		{
		}
	}
	[Token(Token = "0x2000242")]
	public class Test_InventoryController : MonoBehaviour
	{
		[Token(Token = "0x400104D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private UI_InventoryController UI_InventoryController;

		[Token(Token = "0x400104E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private ItemSO[] Items;

		[Token(Token = "0x6000E9F")]
		[Address(RVA = "0xC3270C", Offset = "0xC3270C", VA = "0xC3270C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000EA0")]
		[Address(RVA = "0xC327A0", Offset = "0xC327A0", VA = "0xC327A0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000EA1")]
		[Address(RVA = "0xC32834", Offset = "0xC32834", VA = "0xC32834")]
		private void Start()
		{
		}

		[Token(Token = "0x6000EA2")]
		[Address(RVA = "0xC32F54", Offset = "0xC32F54", VA = "0xC32F54")]
		private void LocationChanged(LocationSO locationSO, bool comingFromShip)
		{
		}

		[Token(Token = "0x6000EA3")]
		[Address(RVA = "0xC32F58", Offset = "0xC32F58", VA = "0xC32F58")]
		public Test_InventoryController()
		{
		}
	}
	[Token(Token = "0x2000243")]
	public class UI_InventoryController : MonoBehaviour
	{
		[Token(Token = "0x200045D")]
		public delegate void EquipAction(ItemSO item);

		[Serializable]
		[Token(Token = "0x200045E")]
		private struct Equipped
		{
			[Token(Token = "0x40019FE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Button btn;

			[Token(Token = "0x40019FF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public ItemTypeSO itemType;
		}

		[Serializable]
		[Token(Token = "0x200045F")]
		private struct Rods
		{
			[Token(Token = "0x4001A00")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Button btn;

			[Token(Token = "0x4001A01")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Image RodIcon;

			[Token(Token = "0x4001A02")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Localize RodName;
		}

		[Token(Token = "0x2000460")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E81E8", Offset = "0x9E81E8")]
		private sealed class <>c__DisplayClass52_0
		{
			[Token(Token = "0x4001A03")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public UI_InventoryController <>4__this;

			[Token(Token = "0x4001A04")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public ItemSO item;

			[Token(Token = "0x6001BE4")]
			[Address(RVA = "0xC3DCD4", Offset = "0xC3DCD4", VA = "0xC3DCD4")]
			public <>c__DisplayClass52_0()
			{
			}

			[Token(Token = "0x6001BE5")]
			[Address(RVA = "0xC3E1C0", Offset = "0xC3E1C0", VA = "0xC3E1C0")]
			internal void <OnGenerateItemEvent>b__0()
			{
			}
		}

		[Token(Token = "0x2000461")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E81F8", Offset = "0x9E81F8")]
		private sealed class <>c__DisplayClass53_0
		{
			[Token(Token = "0x4001A05")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RodSO rod;

			[Token(Token = "0x4001A06")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public UI_InventoryController <>4__this;

			[Token(Token = "0x6001BE6")]
			[Address(RVA = "0xC3DD20", Offset = "0xC3DD20", VA = "0xC3DD20")]
			public <>c__DisplayClass53_0()
			{
			}

			[Token(Token = "0x6001BE7")]
			[Address(RVA = "0xC3E1E0", Offset = "0xC3E1E0", VA = "0xC3E1E0")]
			internal void <ItemFilter>b__0()
			{
			}

			[Token(Token = "0x6001BE8")]
			[Address(RVA = "0xC3E200", Offset = "0xC3E200", VA = "0xC3E200")]
			internal void <ItemFilter>b__1()
			{
			}

			[Token(Token = "0x6001BE9")]
			[Address(RVA = "0xC3E220", Offset = "0xC3E220", VA = "0xC3E220")]
			internal void <ItemFilter>b__2()
			{
			}
		}

		[Token(Token = "0x2000462")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E8208", Offset = "0x9E8208")]
		private sealed class <>c__DisplayClass55_0
		{
			[Token(Token = "0x4001A07")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public UI_InventoryController <>4__this;

			[Token(Token = "0x4001A08")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public ItemSO item;

			[Token(Token = "0x4001A09")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public UnityAction <>9__0;

			[Token(Token = "0x6001BEA")]
			[Address(RVA = "0xC3DDC8", Offset = "0xC3DDC8", VA = "0xC3DDC8")]
			public <>c__DisplayClass55_0()
			{
			}

			[Token(Token = "0x6001BEB")]
			[Address(RVA = "0xC3E240", Offset = "0xC3E240", VA = "0xC3E240")]
			internal void <CheckEquipped>b__0()
			{
			}
		}

		[Token(Token = "0x4001050")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Color32 DefaultColor;

		[Token(Token = "0x4001051")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private Color32 SelectColor;

		[Token(Token = "0x4001052")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Equipped[] Equipped_btns;

		[Token(Token = "0x4001053")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Button[] Tab_btns;

		[Token(Token = "0x4001054")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Localize Title;

		[Token(Token = "0x4001055")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Localize Description;

		[Token(Token = "0x4001056")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Image DetailIcon;

		[Token(Token = "0x4001057")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Image SwimmingLureIcon;

		[Token(Token = "0x4001058")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private UI_InventoryItem ItemPrefab;

		[Token(Token = "0x4001059")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Transform ItemGenerate;

		[Token(Token = "0x400105A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Image CheckIcon;

		[Token(Token = "0x400105B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private Rods PowerReelRod;

		[Token(Token = "0x400105C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private Rods StunRod;

		[Token(Token = "0x400105D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private Rods TeleportRod;

		[Token(Token = "0x400105E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private GameObject ItemList;

		[Token(Token = "0x400105F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private GameObject RodList;

		[Token(Token = "0x4001060")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private RectTransform ItemScrollView;

		[Token(Token = "0x4001061")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private RectTransform ItemContent;

		[Token(Token = "0x4001062")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private GridLayoutGroup ItemLayout;

		[Token(Token = "0x4001063")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private UI_PageDotController m_dotController;

		[Token(Token = "0x4001064")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private Button ArrowNext;

		[Token(Token = "0x4001065")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[SerializeField]
		private Button ArrowPrev;

		[Token(Token = "0x4001066")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[SerializeField]
		private GestureScrollRect m_gestureScrollRect;

		[Token(Token = "0x4001067")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[SerializeField]
		private GameObject RodChargeUI;

		[Token(Token = "0x4001068")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[SerializeField]
		private Slider RodChargeSlider;

		[Token(Token = "0x4001069")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[SerializeField]
		private TextMeshProUGUI RodChargeText;

		[Token(Token = "0x400106A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private Dictionary<ItemSO, UI_InventoryItem> m_Item_Dic;

		[Token(Token = "0x400106B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private ItemTypeSO m_itemType;

		[Token(Token = "0x400106C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private Vector3 CheckIcon_Scale;

		[Token(Token = "0x400106D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		private float m_MoveDuration;

		[Token(Token = "0x400106E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private float m_ContantSize;

		[Token(Token = "0x14000052")]
		public static event EquipAction OnEquiped
		{
			[Token(Token = "0x6000EA4")]
			[Address(RVA = "0xC3BFB4", Offset = "0xC3BFB4", VA = "0xC3BFB4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F14EC", Offset = "0x9F14EC")]
			add
			{
			}
			[Token(Token = "0x6000EA5")]
			[Address(RVA = "0xC3C068", Offset = "0xC3C068", VA = "0xC3C068")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F14FC", Offset = "0x9F14FC")]
			remove
			{
			}
		}

		[Token(Token = "0x6000EA6")]
		[Address(RVA = "0xC3C11C", Offset = "0xC3C11C", VA = "0xC3C11C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000EA7")]
		[Address(RVA = "0xC3C444", Offset = "0xC3C444", VA = "0xC3C444")]
		private void Start()
		{
		}

		[Token(Token = "0x6000EA8")]
		[Address(RVA = "0xC3C7D4", Offset = "0xC3C7D4", VA = "0xC3C7D4")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000EA9")]
		[Address(RVA = "0xC3CA04", Offset = "0xC3CA04", VA = "0xC3CA04")]
		private void EventHub_ItemGot(ItemSO item, int amount)
		{
		}

		[Token(Token = "0x6000EAA")]
		[Address(RVA = "0xC3D234", Offset = "0xC3D234", VA = "0xC3D234")]
		private void OnItemGet(ItemSO item, int amount)
		{
		}

		[Token(Token = "0x6000EAB")]
		[Address(RVA = "0xC3CAC8", Offset = "0xC3CAC8", VA = "0xC3CAC8")]
		private void ChangeAmountOnUI(ItemSO item)
		{
		}

		[Token(Token = "0x6000EAC")]
		[Address(RVA = "0xC3D238", Offset = "0xC3D238", VA = "0xC3D238")]
		public void OnItemClick(ItemSO item)
		{
		}

		[Token(Token = "0x6000EAD")]
		[Address(RVA = "0xC3D48C", Offset = "0xC3D48C", VA = "0xC3D48C")]
		private void UpdateRodChargeDisplay(ItemSO item)
		{
		}

		[Token(Token = "0x6000EAE")]
		[Address(RVA = "0xC3D70C", Offset = "0xC3D70C", VA = "0xC3D70C")]
		private void UpdateCurrentRodStatus(float charge)
		{
		}

		[Token(Token = "0x6000EAF")]
		[Address(RVA = "0xC32C1C", Offset = "0xC32C1C", VA = "0xC32C1C")]
		public void OnTabClick(ItemTypeSO itemType)
		{
		}

		[Token(Token = "0x6000EB0")]
		[Address(RVA = "0xC3D7E0", Offset = "0xC3D7E0", VA = "0xC3D7E0")]
		private void ShowEquippedCharm()
		{
		}

		[Token(Token = "0x6000EB1")]
		[Address(RVA = "0xC3D7B4", Offset = "0xC3D7B4", VA = "0xC3D7B4")]
		private void ShowEquippedLure()
		{
		}

		[Token(Token = "0x6000EB2")]
		[Address(RVA = "0xC3D738", Offset = "0xC3D738", VA = "0xC3D738")]
		private void ShowEquippedRod()
		{
		}

		[Token(Token = "0x6000EB3")]
		[Address(RVA = "0xC3D878", Offset = "0xC3D878", VA = "0xC3D878")]
		public void OnEquippedClick(ItemSO item)
		{
		}

		[Token(Token = "0x6000EB4")]
		[Address(RVA = "0xC3D688", Offset = "0xC3D688", VA = "0xC3D688")]
		public void OnEquip([Optional] ItemSO item)
		{
		}

		[Token(Token = "0x6000EB5")]
		[Address(RVA = "0xC32908", Offset = "0xC32908", VA = "0xC32908")]
		public void OnGenerateItemEvent(ItemSO item)
		{
		}

		[Token(Token = "0x6000EB6")]
		[Address(RVA = "0xC3CBB0", Offset = "0xC3CBB0", VA = "0xC3CBB0")]
		public void ItemFilter(ItemTypeSO itemType)
		{
		}

		[Token(Token = "0x6000EB7")]
		[Address(RVA = "0xC3DCDC", Offset = "0xC3DCDC", VA = "0xC3DCDC")]
		private bool CheckItemAmount(ItemSO item)
		{
			return default(bool);
		}

		[Token(Token = "0x6000EB8")]
		[Address(RVA = "0xC3C4F4", Offset = "0xC3C4F4", VA = "0xC3C4F4")]
		private void CheckEquipped(ItemSO item)
		{
		}

		[Token(Token = "0x6000EB9")]
		[Address(RVA = "0xC3DDD0", Offset = "0xC3DDD0", VA = "0xC3DDD0")]
		public void OnNextArrowClick()
		{
		}

		[Token(Token = "0x6000EBA")]
		[Address(RVA = "0xC3DE10", Offset = "0xC3DE10", VA = "0xC3DE10")]
		private void OnIncreaseScrollPos(int page = 1)
		{
		}

		[Token(Token = "0x6000EBB")]
		[Address(RVA = "0xC3DF38", Offset = "0xC3DF38", VA = "0xC3DF38")]
		public void OnPreviousArrowClick()
		{
		}

		[Token(Token = "0x6000EBC")]
		[Address(RVA = "0xC3DD28", Offset = "0xC3DD28", VA = "0xC3DD28")]
		private void setArrow(int idx = 0)
		{
		}

		[Token(Token = "0x6000EBD")]
		[Address(RVA = "0xC3DF78", Offset = "0xC3DF78", VA = "0xC3DF78")]
		private void OnDecreaseScrollPos(int page = 1)
		{
		}

		[Token(Token = "0x6000EBE")]
		[Address(RVA = "0xC3E0A0", Offset = "0xC3E0A0", VA = "0xC3E0A0")]
		public UI_InventoryController()
		{
		}

		[Token(Token = "0x6000EBF")]
		[Address(RVA = "0xC3E12C", Offset = "0xC3E12C", VA = "0xC3E12C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F150C", Offset = "0x9F150C")]
		private void <OnIncreaseScrollPos>b__57_0(float x)
		{
		}

		[Token(Token = "0x6000EC0")]
		[Address(RVA = "0xC3E178", Offset = "0xC3E178", VA = "0xC3E178")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F151C", Offset = "0x9F151C")]
		private void <OnDecreaseScrollPos>b__60_0(float x)
		{
		}
	}
	[Token(Token = "0x2000244")]
	public class UI_InventoryItem : MonoBehaviour
	{
		[Token(Token = "0x400106F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Button Btn;

		[Token(Token = "0x4001070")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Image IconImage;

		[Token(Token = "0x4001071")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject AmountGO;

		[Token(Token = "0x4001072")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public TMP_Text Amount;

		[Token(Token = "0x4001073")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Image SwimmingLureIcon;

		[Token(Token = "0x6000EC1")]
		[Address(RVA = "0xC3E2A4", Offset = "0xC3E2A4", VA = "0xC3E2A4")]
		public UI_InventoryItem()
		{
		}
	}
	[Token(Token = "0x2000245")]
	public class UI_ScreenSaverController : MonoBehaviour
	{
		[Token(Token = "0x4001074")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Localize TabTo;

		[Token(Token = "0x6000EC2")]
		[Address(RVA = "0xCF7BA4", Offset = "0xCF7BA4", VA = "0xCF7BA4")]
		public UI_ScreenSaverController()
		{
		}
	}
	[Token(Token = "0x2000246")]
	public class Jellyfish : MonoBehaviour
	{
		[Token(Token = "0x2000463")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E8218", Offset = "0x9E8218")]
		private sealed class <swimming>d__4 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001A0A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001A0B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001A0C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float duration;

			[Token(Token = "0x4001A0D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Jellyfish <>4__this;

			[Token(Token = "0x4001A0E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Vector3 targetVector;

			[Token(Token = "0x4001A0F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <targetTime>5__2;

			[Token(Token = "0x1700029D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001BEF")]
				[Address(RVA = "0xCA6568", Offset = "0xCA6568", VA = "0xCA6568", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700029E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001BF1")]
				[Address(RVA = "0xCA65D0", Offset = "0xCA65D0", VA = "0xCA65D0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001BEC")]
			[Address(RVA = "0xCA6470", Offset = "0xCA6470", VA = "0xCA6470")]
			[DebuggerHidden]
			public <swimming>d__4(int <>1__state)
			{
			}

			[Token(Token = "0x6001BED")]
			[Address(RVA = "0xCA64A4", Offset = "0xCA64A4", VA = "0xCA64A4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001BEE")]
			[Address(RVA = "0xCA64A8", Offset = "0xCA64A8", VA = "0xCA64A8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001BF0")]
			[Address(RVA = "0xCA6570", Offset = "0xCA6570", VA = "0xCA6570", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001075")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Rigidbody rb;

		[Token(Token = "0x4001076")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform target;

		[Token(Token = "0x6000EC3")]
		[Address(RVA = "0xCA61D4", Offset = "0xCA61D4", VA = "0xCA61D4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000EC4")]
		[Address(RVA = "0xCA6288", Offset = "0xCA6288", VA = "0xCA6288")]
		private void swim()
		{
		}

		[Token(Token = "0x6000EC5")]
		[Address(RVA = "0xCA63C8", Offset = "0xCA63C8", VA = "0xCA63C8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9F152C", Offset = "0x9F152C")]
		private IEnumerator swimming(Vector3 targetVector, float duration)
		{
			return null;
		}

		[Token(Token = "0x6000EC6")]
		[Address(RVA = "0xCA649C", Offset = "0xCA649C", VA = "0xCA649C")]
		public Jellyfish()
		{
		}
	}
	[Token(Token = "0x2000247")]
	public class LineTension : MonoBehaviour
	{
		[Token(Token = "0x2000464")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E8228", Offset = "0x9E8228")]
		private sealed class <RunRageTensionDrop>d__34 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001A10")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001A11")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001A12")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public LineTension <>4__this;

			[Token(Token = "0x1700029F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001BF5")]
				[Address(RVA = "0xCA7674", Offset = "0xCA7674", VA = "0xCA7674", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002A0")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001BF7")]
				[Address(RVA = "0xCA76DC", Offset = "0xCA76DC", VA = "0xCA76DC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001BF2")]
			[Address(RVA = "0xCA7418", Offset = "0xCA7418", VA = "0xCA7418")]
			[DebuggerHidden]
			public <RunRageTensionDrop>d__34(int <>1__state)
			{
			}

			[Token(Token = "0x6001BF3")]
			[Address(RVA = "0xCA75E4", Offset = "0xCA75E4", VA = "0xCA75E4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001BF4")]
			[Address(RVA = "0xCA75E8", Offset = "0xCA75E8", VA = "0xCA75E8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001BF6")]
			[Address(RVA = "0xCA767C", Offset = "0xCA767C", VA = "0xCA767C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000465")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E8238", Offset = "0x9E8238")]
		private sealed class <>c__DisplayClass36_0
		{
			[Token(Token = "0x4001A13")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public LineTension <>4__this;

			[Token(Token = "0x4001A14")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float val;

			[Token(Token = "0x6001BF8")]
			[Address(RVA = "0xCA7444", Offset = "0xCA7444", VA = "0xCA7444")]
			public <>c__DisplayClass36_0()
			{
			}

			[Token(Token = "0x6001BF9")]
			[Address(RVA = "0xCA7568", Offset = "0xCA7568", VA = "0xCA7568")]
			internal float <OverrideLineTension>b__0()
			{
				return default(float);
			}

			[Token(Token = "0x6001BFA")]
			[Address(RVA = "0xCA7584", Offset = "0xCA7584", VA = "0xCA7584")]
			internal void <OverrideLineTension>b__1(float x)
			{
			}

			[Token(Token = "0x6001BFB")]
			[Address(RVA = "0xCA75A0", Offset = "0xCA75A0", VA = "0xCA75A0")]
			internal void <OverrideLineTension>b__2()
			{
			}
		}

		[Token(Token = "0x4001077")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private RodBender rodBender;

		[Token(Token = "0x4001078")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float tension;

		[Token(Token = "0x4001079")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float tensionMinimum;

		[Token(Token = "0x400107A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float redZoneStart;

		[Token(Token = "0x400107B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float tensionRiseNormal;

		[Token(Token = "0x400107C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float tensionRisePatternPlay;

		[Token(Token = "0x400107D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float tensionRisePatternPlayFillingLean;

		[Token(Token = "0x400107E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float tensionRisePatternPlayNotFillingLean;

		[Token(Token = "0x400107F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float tensionRiseRunRage;

		[Token(Token = "0x4001080")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float tensionFallNormal;

		[Token(Token = "0x4001081")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float tensionFallPatternPlay;

		[Token(Token = "0x4001082")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float tensionFallPatternPlayFillingLean;

		[Token(Token = "0x4001083")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float tensionFallPatternPlayNotFillingLean;

		[Token(Token = "0x4001084")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float tensionFallRunRage;

		[Token(Token = "0x4001085")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float maxCrankTension;

		[Token(Token = "0x4001086")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private readonly float lineTensionMax;

		[Token(Token = "0x4001087")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private int crankSmoothing;

		[Token(Token = "0x4001088")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float[] crankTensionValsNew;

		[Token(Token = "0x4001089")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private int crankSmoothIndex;

		[Token(Token = "0x400108A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public float crankTensionSmoothed;

		[Token(Token = "0x400108B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float tensionOverrideBounceDuration;

		[Token(Token = "0x400108C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Tween rlsTension;

		[Token(Token = "0x400108D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Tween tensionBounce;

		[Token(Token = "0x400108E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private float tensionOverride;

		[Token(Token = "0x400108F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private bool isBoosting;

		[Token(Token = "0x4001090")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private float postBoostTensionVal;

		[Token(Token = "0x1700013C")]
		public float Tension
		{
			[Token(Token = "0x6000EC7")]
			[Address(RVA = "0xC96744", Offset = "0xC96744", VA = "0xC96744")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6000EC8")]
		[Address(RVA = "0xCA65D8", Offset = "0xCA65D8", VA = "0xCA65D8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000EC9")]
		[Address(RVA = "0xCA66EC", Offset = "0xCA66EC", VA = "0xCA66EC")]
		private void RodReset()
		{
		}

		[Token(Token = "0x6000ECA")]
		[Address(RVA = "0xCA6918", Offset = "0xCA6918", VA = "0xCA6918")]
		private void Update()
		{
		}

		[Token(Token = "0x6000ECB")]
		[Address(RVA = "0xCA6D54", Offset = "0xCA6D54", VA = "0xCA6D54")]
		private void UpdateRodBend()
		{
		}

		[Token(Token = "0x6000ECC")]
		[Address(RVA = "0xCA6EE8", Offset = "0xCA6EE8", VA = "0xCA6EE8")]
		internal void UpdateCrankTension(float crankVelo)
		{
		}

		[Token(Token = "0x6000ECD")]
		[Address(RVA = "0xCA7074", Offset = "0xCA7074", VA = "0xCA7074")]
		public void ReleaseMaxTension()
		{
		}

		[Token(Token = "0x6000ECE")]
		[Address(RVA = "0xCA739C", Offset = "0xCA739C", VA = "0xCA739C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9F1590", Offset = "0x9F1590")]
		private IEnumerator RunRageTensionDrop()
		{
			return null;
		}

		[Token(Token = "0x6000ECF")]
		[Address(RVA = "0xCA6BFC", Offset = "0xCA6BFC", VA = "0xCA6BFC")]
		private void StopReleaseTension()
		{
		}

		[Token(Token = "0x6000ED0")]
		[Address(RVA = "0xCA66F8", Offset = "0xCA66F8", VA = "0xCA66F8")]
		public void OverrideLineTension(float val = 0f, bool isImmediate = false)
		{
		}

		[Token(Token = "0x6000ED1")]
		[Address(RVA = "0xCA744C", Offset = "0xCA744C", VA = "0xCA744C")]
		public void OverrideTensionVals(float val)
		{
		}

		[Token(Token = "0x6000ED2")]
		[Address(RVA = "0xCA6C3C", Offset = "0xCA6C3C", VA = "0xCA6C3C")]
		private void SmoothLineTensionNew(float val)
		{
		}

		[Token(Token = "0x6000ED3")]
		[Address(RVA = "0xCA6C7C", Offset = "0xCA6C7C", VA = "0xCA6C7C")]
		private float CrankTensionSmoothed()
		{
			return default(float);
		}

		[Token(Token = "0x6000ED4")]
		[Address(RVA = "0xCA66C0", Offset = "0xCA66C0", VA = "0xCA66C0")]
		public void ResetTensionRiseFallDefaults()
		{
		}

		[Token(Token = "0x6000ED5")]
		[Address(RVA = "0xCA74AC", Offset = "0xCA74AC", VA = "0xCA74AC")]
		public void TensionMeterBoost(bool state)
		{
		}

		[Token(Token = "0x6000ED6")]
		[Address(RVA = "0xCA7518", Offset = "0xCA7518", VA = "0xCA7518")]
		public LineTension()
		{
		}

		[Token(Token = "0x6000ED7")]
		[Address(RVA = "0xCA7538", Offset = "0xCA7538", VA = "0xCA7538")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F15F4", Offset = "0x9F15F4")]
		private float <ReleaseMaxTension>b__33_0()
		{
			return default(float);
		}

		[Token(Token = "0x6000ED8")]
		[Address(RVA = "0xCA7540", Offset = "0xCA7540", VA = "0xCA7540")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F1604", Offset = "0x9F1604")]
		private void <ReleaseMaxTension>b__33_1(float x)
		{
		}

		[Token(Token = "0x6000ED9")]
		[Address(RVA = "0xCA7548", Offset = "0xCA7548", VA = "0xCA7548")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F1614", Offset = "0x9F1614")]
		private float <ReleaseMaxTension>b__33_2()
		{
			return default(float);
		}

		[Token(Token = "0x6000EDA")]
		[Address(RVA = "0xCA7550", Offset = "0xCA7550", VA = "0xCA7550")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F1624", Offset = "0x9F1624")]
		private void <ReleaseMaxTension>b__33_3(float x)
		{
		}

		[Token(Token = "0x6000EDB")]
		[Address(RVA = "0xCA7558", Offset = "0xCA7558", VA = "0xCA7558")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F1634", Offset = "0x9F1634")]
		private float <ReleaseMaxTension>b__33_4()
		{
			return default(float);
		}

		[Token(Token = "0x6000EDC")]
		[Address(RVA = "0xCA7560", Offset = "0xCA7560", VA = "0xCA7560")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F1644", Offset = "0x9F1644")]
		private void <ReleaseMaxTension>b__33_5(float x)
		{
		}
	}
	[Token(Token = "0x2000248")]
	public class LootBox_Slot : MonoBehaviour
	{
		[Token(Token = "0x6000EDD")]
		[Address(RVA = "0xCA7724", Offset = "0xCA7724", VA = "0xCA7724")]
		public LootBox_Slot()
		{
		}
	}
	[Token(Token = "0x2000249")]
	public class Lure : MonoBehaviour
	{
		[Token(Token = "0x4001091")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Lure instance;

		[Token(Token = "0x4001092")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject model;

		[Token(Token = "0x6000EDE")]
		[Address(RVA = "0xCA9B34", Offset = "0xCA9B34", VA = "0xCA9B34")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000EDF")]
		[Address(RVA = "0xCA9BC4", Offset = "0xCA9BC4", VA = "0xCA9BC4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000EE0")]
		[Address(RVA = "0xCA9C38", Offset = "0xCA9C38", VA = "0xCA9C38")]
		private void LureEquip(LureSO lure)
		{
		}

		[Token(Token = "0x6000EE1")]
		[Address(RVA = "0xCA9CD4", Offset = "0xCA9CD4", VA = "0xCA9CD4")]
		public Lure()
		{
		}
	}
	[Token(Token = "0x200024A")]
	public class ChallengeMissionController : MonoBehaviour
	{
		[Token(Token = "0x4001093")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static ChallengeMissionController instance;

		[Token(Token = "0x4001094")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Dictionary<MissionSO, bool> m_UnlockedChallengeMission_Dic;

		[Token(Token = "0x4001095")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<MissionSO> m_UnlockedChallengeMission;

		[Token(Token = "0x1700013D")]
		public static MissionSO[] UnlockedChallengeMissions
		{
			[Token(Token = "0x6000EE2")]
			[Address(RVA = "0xBF83A8", Offset = "0xBF83A8", VA = "0xBF83A8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700013E")]
		public static MissionSO CurrentChallengeMission
		{
			[Token(Token = "0x6000EE3")]
			[Address(RVA = "0xBF8414", Offset = "0xBF8414", VA = "0xBF8414")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000EE4")]
		[Address(RVA = "0xBF8490", Offset = "0xBF8490", VA = "0xBF8490")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000EE5")]
		[Address(RVA = "0xBF88DC", Offset = "0xBF88DC", VA = "0xBF88DC")]
		private void Start()
		{
		}

		[Token(Token = "0x6000EE6")]
		[Address(RVA = "0xBF8B68", Offset = "0xBF8B68", VA = "0xBF8B68")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000EE7")]
		[Address(RVA = "0xBF8F50", Offset = "0xBF8F50", VA = "0xBF8F50")]
		private void EventHub_OnChallengeMissionAccepted(MissionSO mission)
		{
		}

		[Token(Token = "0x6000EE8")]
		[Address(RVA = "0xBF8FBC", Offset = "0xBF8FBC", VA = "0xBF8FBC")]
		private void EventHub_OnMissionLoad(MissionSO mission)
		{
		}

		[Token(Token = "0x6000EE9")]
		[Address(RVA = "0xBF8FE0", Offset = "0xBF8FE0", VA = "0xBF8FE0")]
		private void EventHub_OnFishCaught(FpFish fish, bool isCheating)
		{
		}

		[Token(Token = "0x6000EEA")]
		[Address(RVA = "0xBF90B8", Offset = "0xBF90B8", VA = "0xBF90B8")]
		private void EventHub_OnItemGot(ItemSO itemSO, int amount)
		{
		}

		[Token(Token = "0x6000EEB")]
		[Address(RVA = "0xBF8AB0", Offset = "0xBF8AB0", VA = "0xBF8AB0")]
		private void OnChallengeMissionLoad(MissionSO mission)
		{
		}

		[Token(Token = "0x6000EEC")]
		[Address(RVA = "0xBF9190", Offset = "0xBF9190", VA = "0xBF9190")]
		public ChallengeMissionController()
		{
		}
	}
	[Token(Token = "0x200024B")]
	public class MissionController : MonoBehaviour
	{
		[Token(Token = "0x2000466")]
		public delegate void MissionCompleteAction(MissionSO.MissionTypes type, MissionSO.Reward[] rewards, bool isCheating);

		[Token(Token = "0x2000467")]
		public delegate void McFishCaughtAction(MissionSO.TargetFish targetFish);

		[Token(Token = "0x2000468")]
		public delegate void McItemGotAction(MissionSO.TargetItem targetItem);

		[Token(Token = "0x2000469")]
		public delegate void McLocationChangedAction(LocationSO location);

		[Token(Token = "0x200046A")]
		public delegate void McOnAquariumMissionClearedAction();

		[Token(Token = "0x200046B")]
		private class FishGoal
		{
			[Token(Token = "0x4001A15")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public FishTypeSO TargetFish;

			[Token(Token = "0x4001A16")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int GoalStarRating;

			[Token(Token = "0x4001A17")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public FishTypeSO.Grade GoalGrade;

			[Token(Token = "0x4001A18")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int GoalAmount;

			[Token(Token = "0x4001A19")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public int Goaled;

			[Token(Token = "0x4001A1A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool IsAnyofTarget;

			[Token(Token = "0x4001A1B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
			public bool IsClear;

			[Token(Token = "0x6001C10")]
			[Address(RVA = "0xD4B068", Offset = "0xD4B068", VA = "0xD4B068")]
			public FishGoal()
			{
			}
		}

		[Token(Token = "0x200046C")]
		private class ItemGoal
		{
			[Token(Token = "0x4001A1C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ItemSO TargetItem;

			[Token(Token = "0x4001A1D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int GoalAmount;

			[Token(Token = "0x4001A1E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public int Goaled;

			[Token(Token = "0x4001A1F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool IsClear;

			[Token(Token = "0x6001C11")]
			[Address(RVA = "0xD4B070", Offset = "0xD4B070", VA = "0xD4B070")]
			public ItemGoal()
			{
			}
		}

		[Token(Token = "0x200046D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E8248", Offset = "0x9E8248")]
		private sealed class <>c__DisplayClass82_0
		{
			[Token(Token = "0x4001A20")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float timer;

			[Token(Token = "0x4001A21")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public MissionController <>4__this;

			[Token(Token = "0x6001C12")]
			[Address(RVA = "0xD4F694", Offset = "0xD4F694", VA = "0xD4F694")]
			public <>c__DisplayClass82_0()
			{
			}

			[Token(Token = "0x6001C13")]
			[Address(RVA = "0xD516E8", Offset = "0xD516E8", VA = "0xD516E8")]
			internal void <OnSetupTimedMission>b__0(float x)
			{
			}

			[Token(Token = "0x6001C14")]
			[Address(RVA = "0xD516F0", Offset = "0xD516F0", VA = "0xD516F0")]
			internal void <OnSetupTimedMission>b__1()
			{
			}

			[Token(Token = "0x6001C15")]
			[Address(RVA = "0xD5176C", Offset = "0xD5176C", VA = "0xD5176C")]
			internal void <OnSetupTimedMission>b__2()
			{
			}
		}

		[Token(Token = "0x200046E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E8258", Offset = "0x9E8258")]
		private sealed class <LoadPopScene>d__113 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001A22")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001A23")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001A24")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MissionController <>4__this;

			[Token(Token = "0x170002A1")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001C19")]
				[Address(RVA = "0xD5183C", Offset = "0xD5183C", VA = "0xD5183C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002A2")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001C1B")]
				[Address(RVA = "0xD518A4", Offset = "0xD518A4", VA = "0xD518A4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001C16")]
			[Address(RVA = "0xD5144C", Offset = "0xD5144C", VA = "0xD5144C")]
			[DebuggerHidden]
			public <LoadPopScene>d__113(int <>1__state)
			{
			}

			[Token(Token = "0x6001C17")]
			[Address(RVA = "0xD51778", Offset = "0xD51778", VA = "0xD51778", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001C18")]
			[Address(RVA = "0xD5177C", Offset = "0xD5177C", VA = "0xD5177C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001C1A")]
			[Address(RVA = "0xD51844", Offset = "0xD51844", VA = "0xD51844", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200046F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E8268", Offset = "0x9E8268")]
		private sealed class <UnLoadPopScene>d__114 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001A25")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001A26")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001A27")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MissionController <>4__this;

			[Token(Token = "0x170002A3")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001C1F")]
				[Address(RVA = "0xD5196C", Offset = "0xD5196C", VA = "0xD5196C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002A4")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001C21")]
				[Address(RVA = "0xD519D4", Offset = "0xD519D4", VA = "0xD519D4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001C1C")]
			[Address(RVA = "0xD51478", Offset = "0xD51478", VA = "0xD51478")]
			[DebuggerHidden]
			public <UnLoadPopScene>d__114(int <>1__state)
			{
			}

			[Token(Token = "0x6001C1D")]
			[Address(RVA = "0xD518AC", Offset = "0xD518AC", VA = "0xD518AC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001C1E")]
			[Address(RVA = "0xD518B0", Offset = "0xD518B0", VA = "0xD518B0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001C20")]
			[Address(RVA = "0xD51974", Offset = "0xD51974", VA = "0xD51974", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001096")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static MissionController Instance;

		[Token(Token = "0x400109C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private FishTypeSO[] AnyFishable;

		[Token(Token = "0x400109D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private ItemSO[] AnyItemable;

		[Token(Token = "0x400109E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public MissionSO[] Mission;

		[Token(Token = "0x400109F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string popScene;

		[Token(Token = "0x40010A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool popVisible;

		[Token(Token = "0x40010A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private FishTypeSO finalFish;

		[Token(Token = "0x40010A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private MissionSO m_Data;

		[Token(Token = "0x40010A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private MissionSO currentStoryMission;

		[Token(Token = "0x40010A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private MissionSO m_NextMission;

		[Token(Token = "0x40010A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Tween TimedMission;

		[Token(Token = "0x40010A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Dictionary<MissionSO, bool> m_CompletedMission_Dic;

		[Token(Token = "0x40010A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private MissionSO m_CompletedMission;

		[Token(Token = "0x40010A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Dictionary<FishTypeSO, List<FishGoal>> m_FishGoal_Dic;

		[Token(Token = "0x40010A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Dictionary<FishTypeSO.FishableType, FishTypeSO> m_AnyFishAble_Dic;

		[Token(Token = "0x40010AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Dictionary<FishTypeSO, int> m_AnyFish_Dic;

		[Token(Token = "0x40010AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private float m_FishGoalTotalWeight;

		[Token(Token = "0x40010AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private int m_FishGoalTotalStar;

		[Token(Token = "0x40010AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Dictionary<ItemSO, List<ItemGoal>> m_ItemGoal_Dic;

		[Token(Token = "0x40010AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Dictionary<ItemSO, int> m_AnyItem_Dic;

		[Token(Token = "0x40010AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Dictionary<FishGoal, int> m_FishFailTime_Dic;

		[Token(Token = "0x40010B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private int m_FishCatchingCount;

		[Token(Token = "0x40010B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		private bool skippingMission;

		[Token(Token = "0x1700013F")]
		public static FishTypeSO[] AnyFishes
		{
			[Token(Token = "0x6000EF7")]
			[Address(RVA = "0xD490A8", Offset = "0xD490A8", VA = "0xD490A8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000140")]
		public static MissionSO DefaultMission
		{
			[Token(Token = "0x6000EF8")]
			[Address(RVA = "0xD49104", Offset = "0xD49104", VA = "0xD49104")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000141")]
		public static Dictionary<MissionSO, bool> CompletedMission_Dic
		{
			[Token(Token = "0x6000EF9")]
			[Address(RVA = "0xD49164", Offset = "0xD49164", VA = "0xD49164")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000142")]
		public static MissionSO CompletedMission
		{
			[Token(Token = "0x6000EFA")]
			[Address(RVA = "0xD491C0", Offset = "0xD491C0", VA = "0xD491C0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000143")]
		public static Dictionary<FishTypeSO.FishableType, FishTypeSO> AnyFishable_Dic
		{
			[Token(Token = "0x6000EFB")]
			[Address(RVA = "0xD4921C", Offset = "0xD4921C", VA = "0xD4921C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000144")]
		public static Dictionary<FishTypeSO, int> AnyFish_Dic
		{
			[Token(Token = "0x6000EFC")]
			[Address(RVA = "0xD49278", Offset = "0xD49278", VA = "0xD49278")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000145")]
		public static Dictionary<ItemSO, int> AnyItem_Dic
		{
			[Token(Token = "0x6000EFD")]
			[Address(RVA = "0xD492D4", Offset = "0xD492D4", VA = "0xD492D4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x14000053")]
		public static event MissionCompleteAction OnMissionCompleted
		{
			[Token(Token = "0x6000EED")]
			[Address(RVA = "0xD48978", Offset = "0xD48978", VA = "0xD48978")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F1654", Offset = "0x9F1654")]
			add
			{
			}
			[Token(Token = "0x6000EEE")]
			[Address(RVA = "0xD48A30", Offset = "0xD48A30", VA = "0xD48A30")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F1664", Offset = "0x9F1664")]
			remove
			{
			}
		}

		[Token(Token = "0x14000054")]
		public static event McFishCaughtAction McOnFishCaught
		{
			[Token(Token = "0x6000EEF")]
			[Address(RVA = "0xD48AE8", Offset = "0xD48AE8", VA = "0xD48AE8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F1674", Offset = "0x9F1674")]
			add
			{
			}
			[Token(Token = "0x6000EF0")]
			[Address(RVA = "0xD48BA0", Offset = "0xD48BA0", VA = "0xD48BA0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F1684", Offset = "0x9F1684")]
			remove
			{
			}
		}

		[Token(Token = "0x14000055")]
		public static event McItemGotAction McOnItemGot
		{
			[Token(Token = "0x6000EF1")]
			[Address(RVA = "0xD48C58", Offset = "0xD48C58", VA = "0xD48C58")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F1694", Offset = "0x9F1694")]
			add
			{
			}
			[Token(Token = "0x6000EF2")]
			[Address(RVA = "0xD48D10", Offset = "0xD48D10", VA = "0xD48D10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F16A4", Offset = "0x9F16A4")]
			remove
			{
			}
		}

		[Token(Token = "0x14000056")]
		public static event McLocationChangedAction McOnLocationChanged
		{
			[Token(Token = "0x6000EF3")]
			[Address(RVA = "0xD48DC8", Offset = "0xD48DC8", VA = "0xD48DC8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F16B4", Offset = "0x9F16B4")]
			add
			{
			}
			[Token(Token = "0x6000EF4")]
			[Address(RVA = "0xD48E80", Offset = "0xD48E80", VA = "0xD48E80")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F16C4", Offset = "0x9F16C4")]
			remove
			{
			}
		}

		[Token(Token = "0x14000057")]
		public static event McOnAquariumMissionClearedAction McOnAquariumMissionCleared
		{
			[Token(Token = "0x6000EF5")]
			[Address(RVA = "0xD48F38", Offset = "0xD48F38", VA = "0xD48F38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F16D4", Offset = "0x9F16D4")]
			add
			{
			}
			[Token(Token = "0x6000EF6")]
			[Address(RVA = "0xD48FF0", Offset = "0xD48FF0", VA = "0xD48FF0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F16E4", Offset = "0x9F16E4")]
			remove
			{
			}
		}

		[Token(Token = "0x6000EFE")]
		[Address(RVA = "0xD49330", Offset = "0xD49330", VA = "0xD49330")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000EFF")]
		[Address(RVA = "0xD49E70", Offset = "0xD49E70", VA = "0xD49E70")]
		private void Start()
		{
		}

		[Token(Token = "0x6000F00")]
		[Address(RVA = "0xD4A64C", Offset = "0xD4A64C", VA = "0xD4A64C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000F01")]
		[Address(RVA = "0xD4A940", Offset = "0xD4A940", VA = "0xD4A940")]
		private void EventHub_OnSideMissionQuitted()
		{
		}

		[Token(Token = "0x6000F02")]
		[Address(RVA = "0xD4AB34", Offset = "0xD4AB34", VA = "0xD4AB34")]
		private void EventHub_OnSideMissionAccepted(MissionSO mission)
		{
		}

		[Token(Token = "0x6000F03")]
		[Address(RVA = "0xD4AC10", Offset = "0xD4AC10", VA = "0xD4AC10")]
		public void InitAnyFish([Optional] FishTypeSO[] fishes)
		{
		}

		[Token(Token = "0x6000F04")]
		[Address(RVA = "0xD4AC20", Offset = "0xD4AC20", VA = "0xD4AC20")]
		public void InitAnyItem([Optional] ItemSO[] items)
		{
		}

		[Token(Token = "0x6000F05")]
		[Address(RVA = "0xD4AC30", Offset = "0xD4AC30", VA = "0xD4AC30")]
		public void InitNextMission(MissionSO mission)
		{
		}

		[Token(Token = "0x6000F06")]
		[Address(RVA = "0xD4AC74", Offset = "0xD4AC74", VA = "0xD4AC74")]
		private void LoadData()
		{
		}

		[Token(Token = "0x6000F07")]
		[Address(RVA = "0xD4A9F8", Offset = "0xD4A9F8", VA = "0xD4A9F8")]
		private void MissionLoad(MissionSO mission)
		{
		}

		[Token(Token = "0x6000F08")]
		[Address(RVA = "0xD49F88", Offset = "0xD49F88", VA = "0xD49F88")]
		public void SetMissionDic(MissionSO mission)
		{
		}

		[Token(Token = "0x6000F09")]
		[Address(RVA = "0xD4B2F8", Offset = "0xD4B2F8", VA = "0xD4B2F8")]
		private void OnCheckFishMissionComplete(FpFish fish)
		{
		}

		[Token(Token = "0x6000F0A")]
		[Address(RVA = "0xD4B380", Offset = "0xD4B380", VA = "0xD4B380")]
		public void checkFishMissionComplete(FpFish fish, MissionSO mission, LocationSO location)
		{
		}

		[Token(Token = "0x6000F0B")]
		[Address(RVA = "0xD4E010", Offset = "0xD4E010", VA = "0xD4E010")]
		private void OnCheckItemMissionComplete(ItemSO item, int amount)
		{
		}

		[Token(Token = "0x6000F0C")]
		[Address(RVA = "0xD4E0DC", Offset = "0xD4E0DC", VA = "0xD4E0DC")]
		public void checkItemMissionComplete(ItemSO item, int amount, MissionSO mission, [Optional] LocationSO location)
		{
		}

		[Token(Token = "0x6000F0D")]
		[Address(RVA = "0xD4E7E4", Offset = "0xD4E7E4", VA = "0xD4E7E4")]
		private void CheckAquariumMissionComplete()
		{
		}

		[Token(Token = "0x6000F0E")]
		[Address(RVA = "0xD4EB48", Offset = "0xD4EB48", VA = "0xD4EB48")]
		private void CheckItemMission()
		{
		}

		[Token(Token = "0x6000F0F")]
		[Address(RVA = "0xD4EB50", Offset = "0xD4EB50", VA = "0xD4EB50")]
		public bool CheckAllMission(MissionSO mission)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F10")]
		[Address(RVA = "0xD4F080", Offset = "0xD4F080", VA = "0xD4F080")]
		private void ToNextMission(MissionSO mission)
		{
		}

		[Token(Token = "0x6000F11")]
		[Address(RVA = "0xD4F3A0", Offset = "0xD4F3A0", VA = "0xD4F3A0")]
		private void OnMissionComplete(MissionSO mission, bool isCheating = false)
		{
		}

		[Token(Token = "0x6000F12")]
		[Address(RVA = "0xD4F3AC", Offset = "0xD4F3AC", VA = "0xD4F3AC")]
		private void OnMissionComplete(MissionSO mission)
		{
		}

		[Token(Token = "0x6000F13")]
		[Address(RVA = "0xD4F2E4", Offset = "0xD4F2E4", VA = "0xD4F2E4")]
		private void ChangePlayerLocation(LocationSO location)
		{
		}

		[Token(Token = "0x6000F14")]
		[Address(RVA = "0xD4F418", Offset = "0xD4F418", VA = "0xD4F418")]
		private void Player_OnLocationChanged(LocationSO locationSO, bool comingFromShip)
		{
		}

		[Token(Token = "0x6000F15")]
		[Address(RVA = "0xD4F490", Offset = "0xD4F490", VA = "0xD4F490")]
		private void OnSetupTimedMission(float time)
		{
		}

		[Token(Token = "0x6000F16")]
		[Address(RVA = "0xD4BB84", Offset = "0xD4BB84", VA = "0xD4BB84")]
		private bool CheckMissionLocation(MissionSO mission, LocationSO locationSO)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F17")]
		[Address(RVA = "0xD4ADEC", Offset = "0xD4ADEC", VA = "0xD4ADEC")]
		private void ChangeAllPool(MissionSO mission, LocationSO location)
		{
		}

		[Token(Token = "0x6000F18")]
		[Address(RVA = "0xD4F8B4", Offset = "0xD4F8B4", VA = "0xD4F8B4")]
		private FishGoal GetNonpassedFish()
		{
			return null;
		}

		[Token(Token = "0x6000F19")]
		[Address(RVA = "0xD4FB24", Offset = "0xD4FB24", VA = "0xD4FB24")]
		private void CheckFishGuarantee(FishGoal fishGoal)
		{
		}

		[Token(Token = "0x6000F1A")]
		[Address(RVA = "0xD4DED0", Offset = "0xD4DED0", VA = "0xD4DED0")]
		public static bool CheckIsAnyFishable(MissionSO mission)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F1B")]
		[Address(RVA = "0xD4E700", Offset = "0xD4E700", VA = "0xD4E700")]
		public static bool CheckIsAnyItemable(MissionSO mission)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F1C")]
		[Address(RVA = "0xD4BC84", Offset = "0xD4BC84", VA = "0xD4BC84")]
		private void CheckFishableMission(FpFish fish, MissionSO mission, [Optional] FpFish anyFishable)
		{
		}

		[Token(Token = "0x6000F1D")]
		[Address(RVA = "0xD4E1FC", Offset = "0xD4E1FC", VA = "0xD4E1FC")]
		private void CheckAnyItemableMission(ItemSO item, int amount, MissionSO mission)
		{
		}

		[Token(Token = "0x6000F1E")]
		[Address(RVA = "0xD4DFB4", Offset = "0xD4DFB4", VA = "0xD4DFB4")]
		private void CheckFishCatchCount(MissionSO mission)
		{
		}

		[Token(Token = "0x6000F1F")]
		[Address(RVA = "0xD4F69C", Offset = "0xD4F69C", VA = "0xD4F69C")]
		private void ChangeFishPool(FishPool2SO fishPool, MissionSO mission)
		{
		}

		[Token(Token = "0x6000F20")]
		[Address(RVA = "0xD4F7D8", Offset = "0xD4F7D8", VA = "0xD4F7D8")]
		private void ChangeLootCratePool(LootCratePoolSO lootCratePool, MissionSO mission)
		{
		}

		[Token(Token = "0x6000F21")]
		[Address(RVA = "0xD4FBD0", Offset = "0xD4FBD0", VA = "0xD4FBD0")]
		private bool IsValidMission(MissionSO mission)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F22")]
		[Address(RVA = "0xD4F004", Offset = "0xD4F004", VA = "0xD4F004")]
		private void GetRewards()
		{
		}

		[Token(Token = "0x6000F23")]
		[Address(RVA = "0xD5056C", Offset = "0xD5056C", VA = "0xD5056C")]
		public void ResetMission()
		{
		}

		[Token(Token = "0x6000F24")]
		[Address(RVA = "0xD50780", Offset = "0xD50780", VA = "0xD50780")]
		public void ResetCurrentMission()
		{
		}

		[Token(Token = "0x6000F25")]
		[Address(RVA = "0xD4AF24", Offset = "0xD4AF24", VA = "0xD4AF24")]
		private void ClearAllDic()
		{
		}

		[Token(Token = "0x6000F26")]
		[Address(RVA = "0xD50A80", Offset = "0xD50A80", VA = "0xD50A80")]
		public static MissionSO GetCurrentMission()
		{
			return null;
		}

		[Token(Token = "0x6000F27")]
		[Address(RVA = "0xD50ADC", Offset = "0xD50ADC", VA = "0xD50ADC")]
		public static bool IsMission()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F28")]
		[Address(RVA = "0xD50B48", Offset = "0xD50B48", VA = "0xD50B48")]
		private bool IsMission(MissionSO mission)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F29")]
		[Address(RVA = "0xD50B68", Offset = "0xD50B68", VA = "0xD50B68")]
		public static bool IsNextMission()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F2A")]
		[Address(RVA = "0xD49C74", Offset = "0xD49C74", VA = "0xD49C74")]
		public static bool IsMissionCompleted(MissionSO mission)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F2B")]
		[Address(RVA = "0xD4B554", Offset = "0xD4B554", VA = "0xD4B554")]
		public static bool IsMissionTarget(FpFish fish, [Optional] MissionSO mission)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F2C")]
		[Address(RVA = "0xD50C24", Offset = "0xD50C24", VA = "0xD50C24")]
		public static bool IsMissionTarget(ItemSO item, [Optional] MissionSO mission)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F2D")]
		[Address(RVA = "0xD50D90", Offset = "0xD50D90", VA = "0xD50D90")]
		public static bool IsSingleTarget(MissionSO mission)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F2E")]
		[Address(RVA = "0xD50E38", Offset = "0xD50E38", VA = "0xD50E38")]
		public static bool IsNewLoaded(MissionSO mission)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F2F")]
		[Address(RVA = "0xD5106C", Offset = "0xD5106C", VA = "0xD5106C")]
		public static bool CheckMissionLocation(MissionSO mission)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F30")]
		[Address(RVA = "0xD510F8", Offset = "0xD510F8", VA = "0xD510F8")]
		public static MissionSO GetNextChallenge()
		{
			return null;
		}

		[Token(Token = "0x6000F31")]
		[Address(RVA = "0xD51248", Offset = "0xD51248", VA = "0xD51248")]
		private int GetChallengeIndex(MissionSO missionToFind)
		{
			return default(int);
		}

		[Token(Token = "0x6000F32")]
		[Address(RVA = "0xD49F84", Offset = "0xD49F84", VA = "0xD49F84")]
		public void StartMission(MissionSO mission)
		{
		}

		[Token(Token = "0x6000F33")]
		[Address(RVA = "0xD5131C", Offset = "0xD5131C", VA = "0xD5131C")]
		public void PopVisibility(bool popVisible)
		{
		}

		[Token(Token = "0x6000F34")]
		[Address(RVA = "0xD51354", Offset = "0xD51354", VA = "0xD51354")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9F16F4", Offset = "0x9F16F4")]
		private IEnumerator LoadPopScene()
		{
			return null;
		}

		[Token(Token = "0x6000F35")]
		[Address(RVA = "0xD513D0", Offset = "0xD513D0", VA = "0xD513D0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9F1758", Offset = "0x9F1758")]
		private IEnumerator UnLoadPopScene()
		{
			return null;
		}

		[Token(Token = "0x6000F36")]
		[Address(RVA = "0xD514A4", Offset = "0xD514A4", VA = "0xD514A4")]
		public void CatchFinalFish()
		{
		}

		[Token(Token = "0x6000F37")]
		[Address(RVA = "0xD51534", Offset = "0xD51534", VA = "0xD51534")]
		public MissionController()
		{
		}
	}
	[Token(Token = "0x200024C")]
	public class PlayerProgressController : MonoBehaviour
	{
		[Token(Token = "0x40010B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static PlayerProgressController Instance;

		[Token(Token = "0x40010B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int SaveFileIndex;

		[Token(Token = "0x40010B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private PlayerProgressSO playerProgress;

		[Token(Token = "0x40010B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ItemSO[] DefaultEquipment;

		[Token(Token = "0x40010B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private ItemSO[] ItemSOs;

		[Token(Token = "0x40010B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Dictionary<string, ItemSO> m_Item_Dic;

		[Token(Token = "0x40010B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		public LocationSO[] LocationSOs;

		[Token(Token = "0x40010B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Dictionary<string, LocationSO> m_Location_Dic;

		[Token(Token = "0x40010BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		public MissionSO[] MissionSOs;

		[Token(Token = "0x40010BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Dictionary<string, MissionSO> m_Mission_Dic;

		[Token(Token = "0x40010BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private MissionSO FirstNonTutorialMission;

		[Token(Token = "0x40010BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Dictionary<MissionSO, int> m_missionSO_Index_Dic;

		[Token(Token = "0x40010BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private FishTypeSO[] Fishes;

		[Token(Token = "0x40010BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Dictionary<string, FishTypeSO> m_Fish_Dic;

		[Token(Token = "0x40010C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Dictionary<string, FishOPediaController.FishOPedia_> m_FishOPedia_Dic;

		[Token(Token = "0x40010C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static List<AquariumPreset> AquariumCustomizations;

		[Token(Token = "0x40010C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static int CurrentAquariumIndex;

		[Token(Token = "0x40010C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public static float BoostTimer;

		[Token(Token = "0x40010C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static float BoostLevelPowerReel;

		[Token(Token = "0x40010C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public static float BoostLevelStun;

		[Token(Token = "0x40010C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static float BoostLevelTeleport;

		[Token(Token = "0x40010C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private bool m_IsItemCraftUnlocked;

		[Token(Token = "0x40010C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x89")]
		[SerializeField]
		private bool m_IsCharmCraftUnlocked;

		[Token(Token = "0x40010C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8A")]
		[SerializeField]
		private bool m_IsCraftingSceneShowed;

		[Token(Token = "0x40010CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8B")]
		[SerializeField]
		private bool m_IsAquariumSceneShowed;

		[Token(Token = "0x40010CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private static bool IsSubscripted;

		[Token(Token = "0x40010CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[SerializeField]
		private bool m_autoReeling;

		[Token(Token = "0x40010CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8D")]
		[SerializeField]
		private bool m_showFishingUI;

		[Token(Token = "0x40010CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private float m_playerHeight;

		[Token(Token = "0x40010CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[SerializeField]
		private float m_musicVolume;

		[Token(Token = "0x40010D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private bool m_showFishFinder;

		[Token(Token = "0x40010D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x99")]
		[SerializeField]
		private bool m_showLureBeam;

		[Token(Token = "0x17000146")]
		public static PlayerProgressSO PlayerProgress
		{
			[Token(Token = "0x6000F38")]
			[Address(RVA = "0xC5C560", Offset = "0xC5C560", VA = "0xC5C560")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000147")]
		public static Dictionary<string, ItemSO> Item_Dic
		{
			[Token(Token = "0x6000F39")]
			[Address(RVA = "0xC5C5D4", Offset = "0xC5C5D4", VA = "0xC5C5D4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000148")]
		public static Dictionary<string, LocationSO> Location_Dic
		{
			[Token(Token = "0x6000F3A")]
			[Address(RVA = "0xC5C648", Offset = "0xC5C648", VA = "0xC5C648")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000149")]
		public static Dictionary<string, MissionSO> Mission_Dic
		{
			[Token(Token = "0x6000F3B")]
			[Address(RVA = "0xC5C6BC", Offset = "0xC5C6BC", VA = "0xC5C6BC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700014A")]
		public static MissionSO DefaultMissionSO
		{
			[Token(Token = "0x6000F3C")]
			[Address(RVA = "0xC5C730", Offset = "0xC5C730", VA = "0xC5C730")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700014B")]
		public static Dictionary<MissionSO, int> MissionSO_Index_Dic
		{
			[Token(Token = "0x6000F3D")]
			[Address(RVA = "0xC5C81C", Offset = "0xC5C81C", VA = "0xC5C81C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700014C")]
		public static Dictionary<string, FishTypeSO> Fish_Dic
		{
			[Token(Token = "0x6000F3E")]
			[Address(RVA = "0xC5C890", Offset = "0xC5C890", VA = "0xC5C890")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700014D")]
		public static Dictionary<string, FishOPediaController.FishOPedia_> FishOPedia_Dic
		{
			[Token(Token = "0x6000F3F")]
			[Address(RVA = "0xC5C904", Offset = "0xC5C904", VA = "0xC5C904")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700014E")]
		public static bool IsItemCraftUnlocked
		{
			[Token(Token = "0x6000F40")]
			[Address(RVA = "0xC5B568", Offset = "0xC5B568", VA = "0xC5B568")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000F41")]
			[Address(RVA = "0xC5C978", Offset = "0xC5C978", VA = "0xC5C978")]
			set
			{
			}
		}

		[Token(Token = "0x1700014F")]
		public static bool IsCharmCraftUnlocked
		{
			[Token(Token = "0x6000F42")]
			[Address(RVA = "0xC5B5DC", Offset = "0xC5B5DC", VA = "0xC5B5DC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000F43")]
			[Address(RVA = "0xC5C9F4", Offset = "0xC5C9F4", VA = "0xC5C9F4")]
			set
			{
			}
		}

		[Token(Token = "0x17000150")]
		public static bool IsCraftingSceneShowed
		{
			[Token(Token = "0x6000F44")]
			[Address(RVA = "0xC5B650", Offset = "0xC5B650", VA = "0xC5B650")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000F45")]
			[Address(RVA = "0xC5CA70", Offset = "0xC5CA70", VA = "0xC5CA70")]
			set
			{
			}
		}

		[Token(Token = "0x17000151")]
		public static bool IsAquariumSceneShowed
		{
			[Token(Token = "0x6000F46")]
			[Address(RVA = "0xC5B6C4", Offset = "0xC5B6C4", VA = "0xC5B6C4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000F47")]
			[Address(RVA = "0xC5CAEC", Offset = "0xC5CAEC", VA = "0xC5CAEC")]
			set
			{
			}
		}

		[Token(Token = "0x17000152")]
		public static bool PlayerSetting_AutoReeling
		{
			[Token(Token = "0x6000F48")]
			[Address(RVA = "0xC5CB68", Offset = "0xC5CB68", VA = "0xC5CB68")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000F49")]
			[Address(RVA = "0xC5CBDC", Offset = "0xC5CBDC", VA = "0xC5CBDC")]
			set
			{
			}
		}

		[Token(Token = "0x17000153")]
		public static bool PlayerSetting_ShowFishingUI
		{
			[Token(Token = "0x6000F4A")]
			[Address(RVA = "0xC5CC58", Offset = "0xC5CC58", VA = "0xC5CC58")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000F4B")]
			[Address(RVA = "0xC5CCCC", Offset = "0xC5CCCC", VA = "0xC5CCCC")]
			set
			{
			}
		}

		[Token(Token = "0x17000154")]
		public static float PlayerSetting_PlayerHeight
		{
			[Token(Token = "0x6000F4C")]
			[Address(RVA = "0xC5CD48", Offset = "0xC5CD48", VA = "0xC5CD48")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000F4D")]
			[Address(RVA = "0xC5CDBC", Offset = "0xC5CDBC", VA = "0xC5CDBC")]
			set
			{
			}
		}

		[Token(Token = "0x17000155")]
		public static float PlayerSetting_MusicVolume
		{
			[Token(Token = "0x6000F4E")]
			[Address(RVA = "0xC5CE3C", Offset = "0xC5CE3C", VA = "0xC5CE3C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000F4F")]
			[Address(RVA = "0xC5CEB0", Offset = "0xC5CEB0", VA = "0xC5CEB0")]
			set
			{
			}
		}

		[Token(Token = "0x17000156")]
		public static bool PlayerSetting_ShowFishFinder
		{
			[Token(Token = "0x6000F50")]
			[Address(RVA = "0xC5CF30", Offset = "0xC5CF30", VA = "0xC5CF30")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000F51")]
			[Address(RVA = "0xC5CFA4", Offset = "0xC5CFA4", VA = "0xC5CFA4")]
			set
			{
			}
		}

		[Token(Token = "0x17000157")]
		public static bool PlayerSetting_ShowLureBeam
		{
			[Token(Token = "0x6000F52")]
			[Address(RVA = "0xC5D020", Offset = "0xC5D020", VA = "0xC5D020")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000F53")]
			[Address(RVA = "0xC5D094", Offset = "0xC5D094", VA = "0xC5D094")]
			set
			{
			}
		}

		[Token(Token = "0x6000F54")]
		[Address(RVA = "0xC5D110", Offset = "0xC5D110", VA = "0xC5D110")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000F55")]
		[Address(RVA = "0xC5DC90", Offset = "0xC5DC90", VA = "0xC5DC90")]
		private void EventHub_OnFishKept(FpFish fish)
		{
		}

		[Token(Token = "0x6000F56")]
		[Address(RVA = "0xC5DFB4", Offset = "0xC5DFB4", VA = "0xC5DFB4")]
		private void EventHub_OnPlayerCharmEquip(CharmSO charm)
		{
		}

		[Token(Token = "0x6000F57")]
		[Address(RVA = "0xC5E004", Offset = "0xC5E004", VA = "0xC5E004")]
		private void EventHub_OnPlayerLureEquip(LureSO lure)
		{
		}

		[Token(Token = "0x6000F58")]
		[Address(RVA = "0xC5E108", Offset = "0xC5E108", VA = "0xC5E108")]
		private void EventHub_OnPlayerRodEquip(RodSO rod)
		{
		}

		[Token(Token = "0x6000F59")]
		[Address(RVA = "0xC5E158", Offset = "0xC5E158", VA = "0xC5E158")]
		private void LoadLocation_OnLocationUnlock(LocationSO location)
		{
		}

		[Token(Token = "0x6000F5A")]
		[Address(RVA = "0xC5E2D0", Offset = "0xC5E2D0", VA = "0xC5E2D0")]
		private void LoadLocation_OnArriveNewLocation(LocationSO location)
		{
		}

		[Token(Token = "0x6000F5B")]
		[Address(RVA = "0xC5E49C", Offset = "0xC5E49C", VA = "0xC5E49C")]
		private void EventHub_OnPlayerSettingChanged(PlayerSetting setting)
		{
		}

		[Token(Token = "0x6000F5C")]
		[Address(RVA = "0xC5EA34", Offset = "0xC5EA34", VA = "0xC5EA34")]
		private void EventHub_OnPlayerTournamentPointGot(int tp)
		{
		}

		[Token(Token = "0x6000F5D")]
		[Address(RVA = "0xC5EA68", Offset = "0xC5EA68", VA = "0xC5EA68")]
		private void EventHub_OnItemCraftUnlocked(bool locked)
		{
		}

		[Token(Token = "0x6000F5E")]
		[Address(RVA = "0xC5EA9C", Offset = "0xC5EA9C", VA = "0xC5EA9C")]
		private void EventHub_OnCharmCraftUnlocked(bool locked)
		{
		}

		[Token(Token = "0x6000F5F")]
		[Address(RVA = "0xC5EAD0", Offset = "0xC5EAD0", VA = "0xC5EAD0")]
		private void EventHub_OnSaveCraftingSceneStat()
		{
		}

		[Token(Token = "0x6000F60")]
		[Address(RVA = "0xC5EB04", Offset = "0xC5EB04", VA = "0xC5EB04")]
		private void EventHub_OnSaveAquariumSceneStat()
		{
		}

		[Token(Token = "0x6000F61")]
		[Address(RVA = "0xC5EB38", Offset = "0xC5EB38", VA = "0xC5EB38")]
		private void EventHub_OnBoostTimerUpdated(float timer)
		{
		}

		[Token(Token = "0x6000F62")]
		[Address(RVA = "0xC5ED64", Offset = "0xC5ED64", VA = "0xC5ED64")]
		private void EventHub_OnPlayerLevelUp(int level)
		{
		}

		[Token(Token = "0x6000F63")]
		[Address(RVA = "0xC5ED98", Offset = "0xC5ED98", VA = "0xC5ED98")]
		private void EventHub_OnPlayerXPGot(int xp)
		{
		}

		[Token(Token = "0x6000F64")]
		[Address(RVA = "0xC5EDCC", Offset = "0xC5EDCC", VA = "0xC5EDCC")]
		private void OnItemGet(ItemSO item, int amount)
		{
		}

		[Token(Token = "0x6000F65")]
		[Address(RVA = "0xC5F060", Offset = "0xC5F060", VA = "0xC5F060")]
		private void OnMissionLoad(MissionSO mission)
		{
		}

		[Token(Token = "0x6000F66")]
		[Address(RVA = "0xC5F0CC", Offset = "0xC5F0CC", VA = "0xC5F0CC")]
		private void EventHub_OnMissionConfirmed(MissionSO mission)
		{
		}

		[Token(Token = "0x6000F67")]
		[Address(RVA = "0xC5FB44", Offset = "0xC5FB44", VA = "0xC5FB44")]
		private void OnFishOPediaUpdated(FpFish fish)
		{
		}

		[Token(Token = "0x6000F68")]
		[Address(RVA = "0xC5FC38", Offset = "0xC5FC38", VA = "0xC5FC38")]
		private void EventHub_OnFishTotalWeightUpdated(FishOPediaController.FishOPedia_ fishOPedia)
		{
		}

		[Token(Token = "0x6000F69")]
		[Address(RVA = "0xC5FC50", Offset = "0xC5FC50", VA = "0xC5FC50")]
		public void ResetProgress(MissionSO mission)
		{
		}

		[Token(Token = "0x6000F6A")]
		[Address(RVA = "0xC5FF58", Offset = "0xC5FF58", VA = "0xC5FF58")]
		public static void StartGame(int index)
		{
		}

		[Token(Token = "0x6000F6B")]
		[Address(RVA = "0xC60CA0", Offset = "0xC60CA0", VA = "0xC60CA0")]
		public static void ClearGame(int index)
		{
		}

		[Token(Token = "0x6000F6C")]
		[Address(RVA = "0xC60E70", Offset = "0xC60E70", VA = "0xC60E70")]
		public static void LoadSaveFile(int index)
		{
		}

		[Token(Token = "0x6000F6D")]
		[Address(RVA = "0xC60EF0", Offset = "0xC60EF0", VA = "0xC60EF0")]
		public static void RemoveAquaFishOfType(int presetIndex, FishTypeSO _fish)
		{
		}

		[Token(Token = "0x6000F6E")]
		[Address(RVA = "0xC610F0", Offset = "0xC610F0", VA = "0xC610F0")]
		public static void RemoveDecoration(AquariumPreset preset, int slotIndex)
		{
		}

		[Token(Token = "0x6000F6F")]
		[Address(RVA = "0xC611BC", Offset = "0xC611BC", VA = "0xC611BC")]
		public static void AddDecoration(AquariumPreset preset, string BCID, int slotIndex)
		{
		}

		[Token(Token = "0x6000F70")]
		[Address(RVA = "0xC61254", Offset = "0xC61254", VA = "0xC61254")]
		public PlayerProgressController()
		{
		}
	}
	[Token(Token = "0x200024D")]
	public class PopController : MonoBehaviour
	{
		[Token(Token = "0x2000470")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E8278", Offset = "0x9E8278")]
		private sealed class <CheckPopPosition>d__27 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001A28")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001A29")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001A2A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PopController <>4__this;

			[Token(Token = "0x170002A5")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001C25")]
				[Address(RVA = "0xC64800", Offset = "0xC64800", VA = "0xC64800", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002A6")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001C27")]
				[Address(RVA = "0xC64868", Offset = "0xC64868", VA = "0xC64868", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001C22")]
			[Address(RVA = "0xC64508", Offset = "0xC64508", VA = "0xC64508")]
			[DebuggerHidden]
			public <CheckPopPosition>d__27(int <>1__state)
			{
			}

			[Token(Token = "0x6001C23")]
			[Address(RVA = "0xC6459C", Offset = "0xC6459C", VA = "0xC6459C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001C24")]
			[Address(RVA = "0xC645A0", Offset = "0xC645A0", VA = "0xC645A0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001C26")]
			[Address(RVA = "0xC64808", Offset = "0xC64808", VA = "0xC64808", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000471")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E8288", Offset = "0x9E8288")]
		private sealed class <CheckPopTeleport>d__28 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001A2B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001A2C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001A2D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float sec;

			[Token(Token = "0x4001A2E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public PopController <>4__this;

			[Token(Token = "0x4001A2F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public bool state;

			[Token(Token = "0x170002A7")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001C2B")]
				[Address(RVA = "0xC64950", Offset = "0xC64950", VA = "0xC64950", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002A8")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001C2D")]
				[Address(RVA = "0xC649B8", Offset = "0xC649B8", VA = "0xC649B8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001C28")]
			[Address(RVA = "0xC64534", Offset = "0xC64534", VA = "0xC64534")]
			[DebuggerHidden]
			public <CheckPopTeleport>d__28(int <>1__state)
			{
			}

			[Token(Token = "0x6001C29")]
			[Address(RVA = "0xC64870", Offset = "0xC64870", VA = "0xC64870", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001C2A")]
			[Address(RVA = "0xC64874", Offset = "0xC64874", VA = "0xC64874", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001C2C")]
			[Address(RVA = "0xC64958", Offset = "0xC64958", VA = "0xC64958", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000472")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E8298", Offset = "0x9E8298")]
		private sealed class <PlayTutorial>d__29 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001A30")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001A31")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001A32")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PopController <>4__this;

			[Token(Token = "0x4001A33")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float sec;

			[Token(Token = "0x170002A9")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001C31")]
				[Address(RVA = "0xC64AEC", Offset = "0xC64AEC", VA = "0xC64AEC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002AA")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001C33")]
				[Address(RVA = "0xC64B54", Offset = "0xC64B54", VA = "0xC64B54", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001C2E")]
			[Address(RVA = "0xC64560", Offset = "0xC64560", VA = "0xC64560")]
			[DebuggerHidden]
			public <PlayTutorial>d__29(int <>1__state)
			{
			}

			[Token(Token = "0x6001C2F")]
			[Address(RVA = "0xC649C0", Offset = "0xC649C0", VA = "0xC649C0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001C30")]
			[Address(RVA = "0xC649C4", Offset = "0xC649C4", VA = "0xC649C4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001C32")]
			[Address(RVA = "0xC64AF4", Offset = "0xC64AF4", VA = "0xC64AF4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40010D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public PopDataSO[] popData;

		[Token(Token = "0x40010D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private GameObject pop_Avatar;

		[Token(Token = "0x40010D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public LipSync popAvatar;

		[Token(Token = "0x40010D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private LipSyncData popTutData;

		[Token(Token = "0x40010D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int popTutIndex;

		[Token(Token = "0x40010D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private bool popVisible;

		[Token(Token = "0x40010D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private PopDataSO p_Data;

		[Token(Token = "0x40010D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public PopFlyController popFlyController;

		[Token(Token = "0x40010DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public PopDissolve popDissolve;

		[Token(Token = "0x40010DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private string cutsceneLanguageCode;

		[Token(Token = "0x40010DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool popPortIn;

		[Token(Token = "0x40010DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		private bool popPortOut;

		[Token(Token = "0x40010DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x62")]
		private bool popFlyRight;

		[Token(Token = "0x40010DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x63")]
		[SerializeField]
		private bool isFadeFinished;

		[Token(Token = "0x40010E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float delayFly;

		[Token(Token = "0x6000F72")]
		[Address(RVA = "0xC63544", Offset = "0xC63544", VA = "0xC63544")]
		public void Awake()
		{
		}

		[Token(Token = "0x6000F73")]
		[Address(RVA = "0xC6369C", Offset = "0xC6369C", VA = "0xC6369C")]
		public void OnDestroy()
		{
		}

		[Token(Token = "0x6000F74")]
		[Address(RVA = "0xC63780", Offset = "0xC63780", VA = "0xC63780")]
		public void Start()
		{
		}

		[Token(Token = "0x6000F75")]
		[Address(RVA = "0xC63784", Offset = "0xC63784", VA = "0xC63784")]
		public void LoadSavedFile()
		{
		}

		[Token(Token = "0x6000F76")]
		[Address(RVA = "0xC639CC", Offset = "0xC639CC", VA = "0xC639CC")]
		public void CheckCutscene()
		{
		}

		[Token(Token = "0x6000F77")]
		[Address(RVA = "0xC63898", Offset = "0xC63898", VA = "0xC63898")]
		public void CheckPopVisible()
		{
		}

		[Token(Token = "0x6000F78")]
		[Address(RVA = "0xC63EA4", Offset = "0xC63EA4", VA = "0xC63EA4")]
		public void PopVisibleScene(bool state)
		{
		}

		[Token(Token = "0x6000F79")]
		[Address(RVA = "0xC63ED4", Offset = "0xC63ED4", VA = "0xC63ED4")]
		public void OnCutsceneLoaded()
		{
		}

		[Token(Token = "0x6000F7A")]
		[Address(RVA = "0xC63ED8", Offset = "0xC63ED8", VA = "0xC63ED8")]
		private void CheckTutorials()
		{
		}

		[Token(Token = "0x6000F7B")]
		[Address(RVA = "0xC641E8", Offset = "0xC641E8", VA = "0xC641E8")]
		public void ReadPopData(int index)
		{
		}

		[Token(Token = "0x6000F7C")]
		[Address(RVA = "0xC639D8", Offset = "0xC639D8", VA = "0xC639D8")]
		public void TutIndexFlow()
		{
		}

		[Token(Token = "0x6000F7D")]
		[Address(RVA = "0xC6401C", Offset = "0xC6401C", VA = "0xC6401C")]
		public void StartPlay(bool visibleStates, string lang, int popTutIndex = 49)
		{
		}

		[Token(Token = "0x6000F7E")]
		[Address(RVA = "0xC6448C", Offset = "0xC6448C", VA = "0xC6448C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9F17BC", Offset = "0x9F17BC")]
		private IEnumerator CheckPopPosition()
		{
			return null;
		}

		[Token(Token = "0x6000F7F")]
		[Address(RVA = "0xC64360", Offset = "0xC64360", VA = "0xC64360")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9F1820", Offset = "0x9F1820")]
		private IEnumerator CheckPopTeleport(float sec, bool state)
		{
			return null;
		}

		[Token(Token = "0x6000F80")]
		[Address(RVA = "0xC64400", Offset = "0xC64400", VA = "0xC64400")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9F1884", Offset = "0x9F1884")]
		private IEnumerator PlayTutorial(float sec = 0f)
		{
			return null;
		}

		[Token(Token = "0x6000F81")]
		[Address(RVA = "0xC6458C", Offset = "0xC6458C", VA = "0xC6458C")]
		public PopController()
		{
		}

		[Token(Token = "0x6000F82")]
		[Address(RVA = "0xC64594", Offset = "0xC64594", VA = "0xC64594")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F18E8", Offset = "0x9F18E8")]
		private bool <PlayTutorial>b__29_0()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200024E")]
	public class PopFlyController : MonoBehaviour
	{
		[Token(Token = "0x40010E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int speed;

		[Token(Token = "0x40010E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform popPos;

		[Token(Token = "0x40010E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform startPoint;

		[Token(Token = "0x40010E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform endPoint;

		[Token(Token = "0x40010E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Animator animator;

		[Token(Token = "0x40010E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static PopFlyController instance;

		[Token(Token = "0x40010E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static bool onRight;

		[Token(Token = "0x6000F83")]
		[Address(RVA = "0xC65794", Offset = "0xC65794", VA = "0xC65794")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000F84")]
		[Address(RVA = "0xC6589C", Offset = "0xC6589C", VA = "0xC6589C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000F85")]
		[Address(RVA = "0xC65958", Offset = "0xC65958", VA = "0xC65958")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000F86")]
		[Address(RVA = "0xC65918", Offset = "0xC65918", VA = "0xC65918")]
		public void InitPosition()
		{
		}

		[Token(Token = "0x6000F87")]
		[Address(RVA = "0xC659CC", Offset = "0xC659CC", VA = "0xC659CC")]
		public void FlyToRight(bool fly)
		{
		}

		[Token(Token = "0x6000F88")]
		[Address(RVA = "0xC64668", Offset = "0xC64668", VA = "0xC64668")]
		public void CheckPosition()
		{
		}

		[Token(Token = "0x6000F89")]
		[Address(RVA = "0xC65B88", Offset = "0xC65B88", VA = "0xC65B88")]
		public void ChangePosition(bool onRight)
		{
		}

		[Token(Token = "0x6000F8A")]
		[Address(RVA = "0xC65B98", Offset = "0xC65B98", VA = "0xC65B98")]
		private void StartCallback()
		{
		}

		[Token(Token = "0x6000F8B")]
		[Address(RVA = "0xC65BF4", Offset = "0xC65BF4", VA = "0xC65BF4")]
		private void UpdateCallback()
		{
		}

		[Token(Token = "0x6000F8C")]
		[Address(RVA = "0xC65C50", Offset = "0xC65C50", VA = "0xC65C50")]
		private void CompleteCallback()
		{
		}

		[Token(Token = "0x6000F8D")]
		[Address(RVA = "0xC65CAC", Offset = "0xC65CAC", VA = "0xC65CAC")]
		public PopFlyController()
		{
		}
	}
	[Token(Token = "0x200024F")]
	public class SideMissionController : MonoBehaviour
	{
		[Token(Token = "0x2000473")]
		public delegate void McFishCaughtAction(MissionSO.TargetFish targetFish);

		[Token(Token = "0x2000474")]
		public delegate void McItemGotAction(MissionSO.TargetItem targetItem);

		[Token(Token = "0x40010E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static SideMissionController instance;

		[Token(Token = "0x40010E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Dictionary<MissionSO, bool> m_UnlockedSideMission_Dic;

		[Token(Token = "0x40010EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<MissionSO> m_UnlockedSideMission;

		[Token(Token = "0x17000158")]
		public static MissionSO[] UnlockedSideMissions
		{
			[Token(Token = "0x6000F92")]
			[Address(RVA = "0xCF2060", Offset = "0xCF2060", VA = "0xCF2060")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000159")]
		public static MissionSO CurrentSideMission
		{
			[Token(Token = "0x6000F93")]
			[Address(RVA = "0xCF20CC", Offset = "0xCF20CC", VA = "0xCF20CC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x14000058")]
		public static event McFishCaughtAction McOnFishCaught
		{
			[Token(Token = "0x6000F8E")]
			[Address(RVA = "0xCF1D80", Offset = "0xCF1D80", VA = "0xCF1D80")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F18F8", Offset = "0x9F18F8")]
			add
			{
			}
			[Token(Token = "0x6000F8F")]
			[Address(RVA = "0xCF1E38", Offset = "0xCF1E38", VA = "0xCF1E38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F1908", Offset = "0x9F1908")]
			remove
			{
			}
		}

		[Token(Token = "0x14000059")]
		public static event McItemGotAction McOnItemGot
		{
			[Token(Token = "0x6000F90")]
			[Address(RVA = "0xCF1EF0", Offset = "0xCF1EF0", VA = "0xCF1EF0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F1918", Offset = "0x9F1918")]
			add
			{
			}
			[Token(Token = "0x6000F91")]
			[Address(RVA = "0xCF1FA8", Offset = "0xCF1FA8", VA = "0xCF1FA8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F1928", Offset = "0x9F1928")]
			remove
			{
			}
		}

		[Token(Token = "0x6000F94")]
		[Address(RVA = "0xCF2148", Offset = "0xCF2148", VA = "0xCF2148")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000F95")]
		[Address(RVA = "0xCF2338", Offset = "0xCF2338", VA = "0xCF2338")]
		private void Start()
		{
		}

		[Token(Token = "0x6000F96")]
		[Address(RVA = "0xCF25C4", Offset = "0xCF25C4", VA = "0xCF25C4")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000F97")]
		[Address(RVA = "0xCF2718", Offset = "0xCF2718", VA = "0xCF2718")]
		private void EventHub_OnPlayerLocationChange()
		{
		}

		[Token(Token = "0x6000F98")]
		[Address(RVA = "0xCF29CC", Offset = "0xCF29CC", VA = "0xCF29CC")]
		public static bool IsSideMissionActivated()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F99")]
		[Address(RVA = "0xCF2B20", Offset = "0xCF2B20", VA = "0xCF2B20")]
		private void InitSideMission()
		{
		}

		[Token(Token = "0x6000F9A")]
		[Address(RVA = "0xCF2BE4", Offset = "0xCF2BE4", VA = "0xCF2BE4")]
		private void EventHub_OnMissionLoad(MissionSO mission)
		{
		}

		[Token(Token = "0x6000F9B")]
		[Address(RVA = "0xCF2C08", Offset = "0xCF2C08", VA = "0xCF2C08")]
		private void EventHub_OnMissionCompleted(MissionSO mission)
		{
		}

		[Token(Token = "0x6000F9C")]
		[Address(RVA = "0xCF2C8C", Offset = "0xCF2C8C", VA = "0xCF2C8C")]
		private void EventHub_OnFishCaught(FpFish fish, bool isCheating)
		{
		}

		[Token(Token = "0x6000F9D")]
		[Address(RVA = "0xCF361C", Offset = "0xCF361C", VA = "0xCF361C")]
		private void EventHub_OnItemGot(ItemSO itemSO, int amount)
		{
		}

		[Token(Token = "0x6000F9E")]
		[Address(RVA = "0xCF3734", Offset = "0xCF3734", VA = "0xCF3734")]
		private void EventHub_OnSideMissionChanged(MissionSO mission)
		{
		}

		[Token(Token = "0x6000F9F")]
		[Address(RVA = "0xCF250C", Offset = "0xCF250C", VA = "0xCF250C")]
		private void OnSideMissionLoad(MissionSO mission)
		{
		}

		[Token(Token = "0x6000FA0")]
		[Address(RVA = "0xCF2DC8", Offset = "0xCF2DC8", VA = "0xCF2DC8")]
		private void CheckMissionProgress(MissionSO mission, FpFish fish)
		{
		}

		[Token(Token = "0x6000FA1")]
		[Address(RVA = "0xCF2810", Offset = "0xCF2810", VA = "0xCF2810")]
		private bool CheckAllMission(MissionSO mission)
		{
			return default(bool);
		}

		[Token(Token = "0x6000FA2")]
		[Address(RVA = "0xCF3884", Offset = "0xCF3884", VA = "0xCF3884")]
		public SideMissionController()
		{
		}
	}
	[Token(Token = "0x2000250")]
	public class UI_GoalFish : MonoBehaviour
	{
		[Token(Token = "0x40010ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UI_SingleChallenge.GoalFish GoalFish;

		[Token(Token = "0x6000FA3")]
		[Address(RVA = "0xC3BFAC", Offset = "0xC3BFAC", VA = "0xC3BFAC")]
		public UI_GoalFish()
		{
		}
	}
	[Token(Token = "0x2000251")]
	public class UI_MissionController : MonoBehaviour
	{
		[Token(Token = "0x2000475")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E82A8", Offset = "0x9E82A8")]
		private sealed class <>c__DisplayClass24_0
		{
			[Token(Token = "0x4001A34")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public MissionSO mission;

			[Token(Token = "0x4001A35")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Button button;

			[Token(Token = "0x6001C3C")]
			[Address(RVA = "0xCF3934", Offset = "0xCF3934", VA = "0xCF3934")]
			public <>c__DisplayClass24_0()
			{
			}

			[Token(Token = "0x6001C3D")]
			[Address(RVA = "0xCF393C", Offset = "0xCF393C", VA = "0xCF393C")]
			internal void <FillTimedMissionBtn>b__0()
			{
			}
		}

		[Token(Token = "0x40010EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private UI_SingleChallenge[] Challenges;

		[Token(Token = "0x40010EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Sprite DefaultIcon;

		[Token(Token = "0x40010F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Button DecreasStoryMissionBtn;

		[Token(Token = "0x40010F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Button IncreasStoryMissionBtn;

		[Token(Token = "0x40010F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Button StoryMissionBtn;

		[Token(Token = "0x40010F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Button SideMissionBtn;

		[Token(Token = "0x40010F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Button ChallengeMissionBtn;

		[Token(Token = "0x40010F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Sprite Star;

		[Token(Token = "0x40010F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9EBEA4", Offset = "0x9EBEA4")]
		[SerializeField]
		private Button MissionBtn;

		[Token(Token = "0x40010F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private MissionSO m_mission;

		[Token(Token = "0x40010F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private MissionSO m_SideMission;

		[Token(Token = "0x40010F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private LocationSO m_location;

		[Token(Token = "0x40010FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private bool IsTimerStart;

		[Token(Token = "0x40010FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool IsFailBtnSet;

		[Token(Token = "0x40010FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private int m_StoryMission_Index;

		[Token(Token = "0x6000FA4")]
		[Address(RVA = "0xC3E718", Offset = "0xC3E718", VA = "0xC3E718")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000FA5")]
		[Address(RVA = "0xC3EB60", Offset = "0xC3EB60", VA = "0xC3EB60")]
		private void Start()
		{
		}

		[Token(Token = "0x6000FA6")]
		[Address(RVA = "0xC3EDC0", Offset = "0xC3EDC0", VA = "0xC3EDC0")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000FA7")]
		[Address(RVA = "0xC3F0A8", Offset = "0xC3F0A8", VA = "0xC3F0A8")]
		private void EventHub_OnPlayerLocationChange()
		{
		}

		[Token(Token = "0x6000FA8")]
		[Address(RVA = "0xC3F0AC", Offset = "0xC3F0AC", VA = "0xC3F0AC")]
		private void EventHub_OnChallengeMissionAccepted(MissionSO mission)
		{
		}

		[Token(Token = "0x6000FA9")]
		[Address(RVA = "0xC3F178", Offset = "0xC3F178", VA = "0xC3F178")]
		private void EventHub_OnSideMissionAccepted(MissionSO mission)
		{
		}

		[Token(Token = "0x6000FAA")]
		[Address(RVA = "0xC3F244", Offset = "0xC3F244", VA = "0xC3F244")]
		private void EventHub_OnChallengeMissionQuitted()
		{
		}

		[Token(Token = "0x6000FAB")]
		[Address(RVA = "0xC3F310", Offset = "0xC3F310", VA = "0xC3F310")]
		private void EventHub_OnSideMissionQuitted()
		{
		}

		[Token(Token = "0x6000FAC")]
		[Address(RVA = "0xC3F3DC", Offset = "0xC3F3DC", VA = "0xC3F3DC")]
		private void FillMission(MissionSO mission, UI_SingleChallenge uiSingle)
		{
		}

		[Token(Token = "0x6000FAD")]
		[Address(RVA = "0xC40D78", Offset = "0xC40D78", VA = "0xC40D78")]
		private void FillTimedMissionBtn(MissionSO mission, Button button)
		{
		}

		[Token(Token = "0x6000FAE")]
		[Address(RVA = "0xC41080", Offset = "0xC41080", VA = "0xC41080")]
		private void EventHub_OnMissionLoad(MissionSO mission)
		{
		}

		[Token(Token = "0x6000FAF")]
		[Address(RVA = "0xC41088", Offset = "0xC41088", VA = "0xC41088")]
		private void MissionController_OnMissionLoad(MissionSO mission)
		{
		}

		[Token(Token = "0x6000FB0")]
		[Address(RVA = "0xC41B5C", Offset = "0xC41B5C", VA = "0xC41B5C")]
		private void MissionController_OnFishCaught(MissionSO.TargetFish targetFish)
		{
		}

		[Token(Token = "0x6000FB1")]
		[Address(RVA = "0xC41C08", Offset = "0xC41C08", VA = "0xC41C08")]
		private void MissionController_McOnItemGot(MissionSO.TargetItem targetItem)
		{
		}

		[Token(Token = "0x6000FB2")]
		[Address(RVA = "0xC41CAC", Offset = "0xC41CAC", VA = "0xC41CAC")]
		private void OnAquariumMissionCleared()
		{
		}

		[Token(Token = "0x6000FB3")]
		[Address(RVA = "0xC41B50", Offset = "0xC41B50", VA = "0xC41B50")]
		private void OnMissionChange()
		{
		}

		[Token(Token = "0x6000FB4")]
		[Address(RVA = "0xC41CB0", Offset = "0xC41CB0", VA = "0xC41CB0")]
		private void EventHub_OnMissionFailed(MissionSO mission)
		{
		}

		[Token(Token = "0x6000FB5")]
		[Address(RVA = "0xC41CB4", Offset = "0xC41CB4", VA = "0xC41CB4")]
		private void MissionController_McOnLocationChanged(LocationSO location)
		{
		}

		[Token(Token = "0x6000FB6")]
		[Address(RVA = "0xC40F74", Offset = "0xC40F74", VA = "0xC40F74")]
		private bool IsValid_TimedMission()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FB7")]
		[Address(RVA = "0xC41D30", Offset = "0xC41D30", VA = "0xC41D30")]
		private void EventHub_OnMissionRewardGot()
		{
		}

		[Token(Token = "0x6000FB8")]
		[Address(RVA = "0xC41084", Offset = "0xC41084", VA = "0xC41084")]
		private void LoadMission(MissionSO mission)
		{
		}

		[Token(Token = "0x6000FB9")]
		[Address(RVA = "0xC41D5C", Offset = "0xC41D5C", VA = "0xC41D5C")]
		private void InceaseStoryMission()
		{
		}

		[Token(Token = "0x6000FBA")]
		[Address(RVA = "0xC41E80", Offset = "0xC41E80", VA = "0xC41E80")]
		private void DecreaseStoryMission()
		{
		}

		[Token(Token = "0x6000FBB")]
		[Address(RVA = "0xC411D8", Offset = "0xC411D8", VA = "0xC411D8")]
		private void ChangeMission()
		{
		}

		[Token(Token = "0x6000FBC")]
		[Address(RVA = "0xC410D0", Offset = "0xC410D0", VA = "0xC410D0")]
		private void CheckMissionProgressAmount()
		{
		}

		[Token(Token = "0x6000FBD")]
		[Address(RVA = "0xC40B40", Offset = "0xC40B40", VA = "0xC40B40")]
		private void CheckCompleted(MissionSO mission, UI_SingleChallenge uiSingle)
		{
		}

		[Token(Token = "0x6000FBE")]
		[Address(RVA = "0xC41E94", Offset = "0xC41E94", VA = "0xC41E94")]
		private void OnLoadStoryMission()
		{
		}

		[Token(Token = "0x6000FBF")]
		[Address(RVA = "0xC41EE4", Offset = "0xC41EE4", VA = "0xC41EE4")]
		private void OnLoadSideMission()
		{
		}

		[Token(Token = "0x6000FC0")]
		[Address(RVA = "0xC41F34", Offset = "0xC41F34", VA = "0xC41F34")]
		private void OnLoadChallengeMission()
		{
		}

		[Token(Token = "0x6000FC1")]
		[Address(RVA = "0xC41F84", Offset = "0xC41F84", VA = "0xC41F84")]
		public UI_MissionController()
		{
		}
	}
	[Token(Token = "0x2000252")]
	public class UI_MissionTimer : MonoBehaviour
	{
		[Token(Token = "0x40010FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TMP_Text Timer;

		[Token(Token = "0x40010FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject UI;

		[Token(Token = "0x40010FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float m_Timer;

		[Token(Token = "0x6000FC3")]
		[Address(RVA = "0xCF3984", Offset = "0xCF3984", VA = "0xCF3984")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000FC4")]
		[Address(RVA = "0xCF3AA0", Offset = "0xCF3AA0", VA = "0xCF3AA0")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000FC5")]
		[Address(RVA = "0xCF3BBC", Offset = "0xCF3BBC", VA = "0xCF3BBC")]
		private void EventHub_OnTimedMissionSetuped(float time)
		{
		}

		[Token(Token = "0x6000FC6")]
		[Address(RVA = "0xCF3C10", Offset = "0xCF3C10", VA = "0xCF3C10")]
		private void EventHub_OnMissionLoad(MissionSO mission)
		{
		}

		[Token(Token = "0x6000FC7")]
		[Address(RVA = "0xCF3C6C", Offset = "0xCF3C6C", VA = "0xCF3C6C")]
		private void EventHub_OnTimedMissionUpdateTimer(float time)
		{
		}

		[Token(Token = "0x6000FC8")]
		[Address(RVA = "0xCF3D68", Offset = "0xCF3D68", VA = "0xCF3D68")]
		private void EventHub_OnMissionFailed(MissionSO mission)
		{
		}

		[Token(Token = "0x6000FC9")]
		[Address(RVA = "0xCF3DB8", Offset = "0xCF3DB8", VA = "0xCF3DB8")]
		public UI_MissionTimer()
		{
		}
	}
	[Token(Token = "0x2000253")]
	public class UI_PlayerProgressController : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000476")]
		public struct SaveFileBtn
		{
			[Token(Token = "0x4001A36")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public TMP_Text SaveFileInfo;

			[Token(Token = "0x4001A37")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Localize SaveFileTitle;

			[Token(Token = "0x4001A38")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Localize Clear;

			[Token(Token = "0x4001A39")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public GameObject ClearBtn;
		}

		[Token(Token = "0x4001100")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private SaveFileBtn[] SaveFiles;

		[Token(Token = "0x4001101")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int SelectedIndex;

		[Token(Token = "0x6000FCA")]
		[Address(RVA = "0xCF6CD8", Offset = "0xCF6CD8", VA = "0xCF6CD8")]
		private void Start()
		{
		}

		[Token(Token = "0x6000FCB")]
		[Address(RVA = "0xCF70E8", Offset = "0xCF70E8", VA = "0xCF70E8")]
		public void OnPlayBtnClick()
		{
		}

		[Token(Token = "0x6000FCC")]
		[Address(RVA = "0xCF7234", Offset = "0xCF7234", VA = "0xCF7234")]
		public void OnClearBtnClick()
		{
		}

		[Token(Token = "0x6000FCD")]
		[Address(RVA = "0xCF7258", Offset = "0xCF7258", VA = "0xCF7258")]
		public void OnClearConfirmClick()
		{
		}

		[Token(Token = "0x6000FCE")]
		[Address(RVA = "0xCF7414", Offset = "0xCF7414", VA = "0xCF7414")]
		public void OnClearAllConfirmClick()
		{
		}

		[Token(Token = "0x6000FCF")]
		[Address(RVA = "0xCF7160", Offset = "0xCF7160", VA = "0xCF7160")]
		private int GetSaveFileIndex()
		{
			return default(int);
		}

		[Token(Token = "0x6000FD0")]
		[Address(RVA = "0xCF7570", Offset = "0xCF7570", VA = "0xCF7570")]
		public UI_PlayerProgressController()
		{
		}
	}
	[Token(Token = "0x2000254")]
	public class UI_SideMissionController : MonoBehaviour
	{
		[Token(Token = "0x2000477")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E82B8", Offset = "0x9E82B8")]
		private sealed class <>c__DisplayClass37_0
		{
			[Token(Token = "0x4001A3A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public MissionSO mission;

			[Token(Token = "0x4001A3B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Button button;

			[Token(Token = "0x6001C3E")]
			[Address(RVA = "0xCF9E08", Offset = "0xCF9E08", VA = "0xCF9E08")]
			public <>c__DisplayClass37_0()
			{
			}

			[Token(Token = "0x6001C3F")]
			[Address(RVA = "0xCFA5DC", Offset = "0xCFA5DC", VA = "0xCFA5DC")]
			internal void <FillTimedMissionBtn>b__0()
			{
			}
		}

		[Token(Token = "0x4001102")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Button Failed_OKBtn;

		[Token(Token = "0x4001103")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject Failed_Panel;

		[Token(Token = "0x4001104")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Sprite DefaultIcon;

		[Token(Token = "0x4001105")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Sprite Star;

		[Token(Token = "0x4001106")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Button SideMissionBtn;

		[Token(Token = "0x4001107")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Button ChallengeMissionBtn;

		[Token(Token = "0x4001108")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Color32 SelectedColor;

		[Token(Token = "0x4001109")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private GameObject SideMissionInfo;

		[Token(Token = "0x400110A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Localize SuggetedEquipment_Text_S;

		[Token(Token = "0x400110B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Image[] SuggetedEquipment_Icons_S;

		[Token(Token = "0x400110C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private Localize Rewards_Text_S;

		[Token(Token = "0x400110D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Image[] Rewards_Icons_S;

		[Token(Token = "0x400110E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private UI_GoalFish[] GoalFishs_S;

		[Token(Token = "0x400110F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private UI_GoalFish GoalFish_1st_H_S;

		[Token(Token = "0x4001110")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private Image MissionImage_S;

		[Token(Token = "0x4001111")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private Localize Title_S;

		[Token(Token = "0x4001112")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private Localize Description_S;

		[Token(Token = "0x4001113")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private TMP_Text Location_S;

		[Token(Token = "0x4001114")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private Button StartTimerBtn_S;

		[Token(Token = "0x4001115")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private Button DecreaseMissionBtn;

		[Token(Token = "0x4001116")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private Button IncreaseMissionBtn;

		[Token(Token = "0x4001117")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private Button AcceptBtn;

		[Token(Token = "0x4001118")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private Image ActiveStamp;

		[Token(Token = "0x4001119")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private bool IsTimerStart;

		[Token(Token = "0x400111A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool IsFailBtnSet;

		[Token(Token = "0x400111B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static int m_MissionIndex;

		[Token(Token = "0x400111C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private MissionSO.MissionTypes m_MissionType;

		[Token(Token = "0x1700015A")]
		private LocationSO m_location
		{
			[Token(Token = "0x6000FD1")]
			[Address(RVA = "0xCF7BAC", Offset = "0xCF7BAC", VA = "0xCF7BAC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000FD2")]
		[Address(RVA = "0xCF7C0C", Offset = "0xCF7C0C", VA = "0xCF7C0C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000FD3")]
		[Address(RVA = "0xCF7E40", Offset = "0xCF7E40", VA = "0xCF7E40")]
		private void Start()
		{
		}

		[Token(Token = "0x6000FD4")]
		[Address(RVA = "0xCF7E44", Offset = "0xCF7E44", VA = "0xCF7E44")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000FD5")]
		[Address(RVA = "0xCF7F10", Offset = "0xCF7F10", VA = "0xCF7F10")]
		private void Player_OnLocationChanged(LocationSO locationSO, bool comingFromShip)
		{
		}

		[Token(Token = "0x6000FD6")]
		[Address(RVA = "0xCF8348", Offset = "0xCF8348", VA = "0xCF8348")]
		private void EventHub_OnMissionLoad(MissionSO mission)
		{
		}

		[Token(Token = "0x6000FD7")]
		[Address(RVA = "0xCF8370", Offset = "0xCF8370", VA = "0xCF8370")]
		private void MissionLoad(MissionSO mission)
		{
		}

		[Token(Token = "0x6000FD8")]
		[Address(RVA = "0xCF8148", Offset = "0xCF8148", VA = "0xCF8148")]
		private void LoadMission(MissionSO mission)
		{
		}

		[Token(Token = "0x6000FD9")]
		[Address(RVA = "0xCF9AF0", Offset = "0xCF9AF0", VA = "0xCF9AF0")]
		private bool IsValid_TimedMission(MissionSO mission)
		{
			return default(bool);
		}

		[Token(Token = "0x6000FDA")]
		[Address(RVA = "0xCF9C0C", Offset = "0xCF9C0C", VA = "0xCF9C0C")]
		private void FillTimedMissionBtn(MissionSO mission, Button button)
		{
		}

		[Token(Token = "0x6000FDB")]
		[Address(RVA = "0xCF83FC", Offset = "0xCF83FC", VA = "0xCF83FC")]
		private void FillSideMission(MissionSO mission)
		{
		}

		[Token(Token = "0x6000FDC")]
		[Address(RVA = "0xCF9E10", Offset = "0xCF9E10", VA = "0xCF9E10")]
		private void OnChallengeMissionChange()
		{
		}

		[Token(Token = "0x6000FDD")]
		[Address(RVA = "0xCF9F40", Offset = "0xCF9F40", VA = "0xCF9F40")]
		private void OnSideMissionChange()
		{
		}

		[Token(Token = "0x6000FDE")]
		[Address(RVA = "0xCFA070", Offset = "0xCFA070", VA = "0xCFA070")]
		public void Init()
		{
		}

		[Token(Token = "0x6000FDF")]
		[Address(RVA = "0xCFA0EC", Offset = "0xCFA0EC", VA = "0xCFA0EC")]
		private void OnIncreaseMission()
		{
		}

		[Token(Token = "0x6000FE0")]
		[Address(RVA = "0xCFA290", Offset = "0xCFA290", VA = "0xCFA290")]
		private void OnDecreaseMission()
		{
		}

		[Token(Token = "0x6000FE1")]
		[Address(RVA = "0xCFA3F4", Offset = "0xCFA3F4", VA = "0xCFA3F4")]
		private void OnAcceptMission()
		{
		}

		[Token(Token = "0x6000FE2")]
		[Address(RVA = "0xCFA5C8", Offset = "0xCFA5C8", VA = "0xCFA5C8")]
		public UI_SideMissionController()
		{
		}
	}
	[Token(Token = "0x2000255")]
	public class UI_SingleChallenge : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000478")]
		public struct GoalFish
		{
			[Token(Token = "0x4001A3C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public GameObject GO;

			[Token(Token = "0x4001A3D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Localize Name;

			[Token(Token = "0x4001A3E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public TMP_Text GoalAmount;

			[Token(Token = "0x4001A3F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Image[] GoalStarRating;

			[Token(Token = "0x4001A40")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Localize GoalGrade;

			[Token(Token = "0x4001A41")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public TMP_Text ProgressAmount;

			[Token(Token = "0x4001A42")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Image Icon;

			[Token(Token = "0x4001A43")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Image ProgressBar;
		}

		[Token(Token = "0x400111D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public Localize Title;

		[Token(Token = "0x400111E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		public Localize Description;

		[Token(Token = "0x400111F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		public Localize Location;

		[Token(Token = "0x4001120")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		public Localize Rewards_Text;

		[Token(Token = "0x4001121")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		public Image[] Rewards_Icons;

		[Token(Token = "0x4001122")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		public Localize[] Rewards_Name;

		[Token(Token = "0x4001123")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		public GoalFish[] GoalFishs;

		[Token(Token = "0x4001124")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		public GoalFish GoalFish_1st_H;

		[Token(Token = "0x4001125")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		public Image MissionImage;

		[Token(Token = "0x4001126")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		public Button StartTimerBtn;

		[Token(Token = "0x4001127")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		public GameObject CompletedIcon;

		[Token(Token = "0x4001128")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		public GameObject CompletedBackground;

		[Token(Token = "0x4001129")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		public GameObject ActivedBackground;

		[Token(Token = "0x400112A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		public Sprite Star;

		[Token(Token = "0x400112B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		public Image ActiveStamp;

		[Token(Token = "0x6000FE4")]
		[Address(RVA = "0xCFA624", Offset = "0xCFA624", VA = "0xCFA624")]
		public UI_SingleChallenge()
		{
		}
	}
	[Token(Token = "0x2000256")]
	public class UI_NewsController : MonoBehaviour
	{
		[Token(Token = "0x400112C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TMP_Text XP;

		[Token(Token = "0x400112D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private TMP_Text Level;

		[Token(Token = "0x400112E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Localize NewsTitle;

		[Token(Token = "0x400112F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Image NewsImage;

		[Token(Token = "0x4001130")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private UI_News_LeaderboardChallenger[] LeaderboardChallengers;

		[Token(Token = "0x4001131")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private UI_News_LeaderboardChallenger LeaderboardPlayer;

		[Token(Token = "0x6000FE5")]
		[Address(RVA = "0xCF3DC0", Offset = "0xCF3DC0", VA = "0xCF3DC0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000FE6")]
		[Address(RVA = "0xCF3FA0", Offset = "0xCF3FA0", VA = "0xCF3FA0")]
		private void Start()
		{
		}

		[Token(Token = "0x6000FE7")]
		[Address(RVA = "0xCF415C", Offset = "0xCF415C", VA = "0xCF415C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000FE8")]
		[Address(RVA = "0xCF4278", Offset = "0xCF4278", VA = "0xCF4278")]
		private void EventHub_OnMissionCompleted(MissionSO mission)
		{
		}

		[Token(Token = "0x6000FE9")]
		[Address(RVA = "0xCF432C", Offset = "0xCF432C", VA = "0xCF432C")]
		private void SetTeamsPoint()
		{
		}

		[Token(Token = "0x6000FEA")]
		[Address(RVA = "0xCF4600", Offset = "0xCF4600", VA = "0xCF4600")]
		private void EventHub_OnMissionLoad(MissionSO mission)
		{
		}

		[Token(Token = "0x6000FEB")]
		[Address(RVA = "0xCF3FC4", Offset = "0xCF3FC4", VA = "0xCF3FC4")]
		private void EventHub_OnPlayerXPGot(int xp)
		{
		}

		[Token(Token = "0x6000FEC")]
		[Address(RVA = "0xCF4090", Offset = "0xCF4090", VA = "0xCF4090")]
		private void EventHub_OnPlayerLevelUp(int level)
		{
		}

		[Token(Token = "0x6000FED")]
		[Address(RVA = "0xCF464C", Offset = "0xCF464C", VA = "0xCF464C")]
		public UI_NewsController()
		{
		}
	}
	[Token(Token = "0x2000257")]
	public class UI_News_LeaderboardChallenger : MonoBehaviour
	{
		[Token(Token = "0x4001132")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Image Icon;

		[Token(Token = "0x4001133")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TMP_Text TP;

		[Token(Token = "0x6000FEE")]
		[Address(RVA = "0xCF4654", Offset = "0xCF4654", VA = "0xCF4654")]
		public UI_News_LeaderboardChallenger()
		{
		}
	}
	[Token(Token = "0x2000258")]
	public class UI_NotificationController : MonoBehaviour
	{
		[Token(Token = "0x2000479")]
		public enum MissionNotificationType
		{
			[Token(Token = "0x4001A45")]
			Unlocked,
			[Token(Token = "0x4001A46")]
			Updated,
			[Token(Token = "0x4001A47")]
			Completed
		}

		[Token(Token = "0x200047A")]
		public struct MissionNotification
		{
			[Token(Token = "0x4001A48")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public MissionNotificationType NType;

			[Token(Token = "0x4001A49")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public string TypeTitle;

			[Token(Token = "0x4001A4A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string Title;

			[Token(Token = "0x4001A4B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string Detail;

			[Token(Token = "0x4001A4C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MissionSO.Reward[] Rewards;

			[Token(Token = "0x4001A4D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float Timestamp;

			[Token(Token = "0x6001C40")]
			[Address(RVA = "0xCF4BAC", Offset = "0xCF4BAC", VA = "0xCF4BAC")]
			public MissionNotification(MissionSO mission, MissionNotificationType NType)
			{
			}
		}

		[Token(Token = "0x200047B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E82C8", Offset = "0x9E82C8")]
		private sealed class <NotifyCoroutine>d__40 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001A4E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001A4F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001A50")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public UI_NotificationController <>4__this;

			[Token(Token = "0x170002AB")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001C44")]
				[Address(RVA = "0xCF6568", Offset = "0xCF6568", VA = "0xCF6568", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002AC")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001C46")]
				[Address(RVA = "0xCF65D0", Offset = "0xCF65D0", VA = "0xCF65D0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001C41")]
			[Address(RVA = "0xCF5AD4", Offset = "0xCF5AD4", VA = "0xCF5AD4")]
			[DebuggerHidden]
			public <NotifyCoroutine>d__40(int <>1__state)
			{
			}

			[Token(Token = "0x6001C42")]
			[Address(RVA = "0xCF6378", Offset = "0xCF6378", VA = "0xCF6378", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001C43")]
			[Address(RVA = "0xCF637C", Offset = "0xCF637C", VA = "0xCF637C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001C45")]
			[Address(RVA = "0xCF6570", Offset = "0xCF6570", VA = "0xCF6570", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001134")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private int maxQueueLength;

		[Token(Token = "0x4001135")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float notifyRate;

		[Token(Token = "0x4001136")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float fadeInTime;

		[Token(Token = "0x4001137")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private float stayTime;

		[Token(Token = "0x4001138")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float fadeOutTime;

		[Token(Token = "0x4001139")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private float waitTimeBetweenNotifications;

		[Token(Token = "0x400113A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject notificationCanvas;

		[Token(Token = "0x400113B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private GameObject mission_TitlesPanel;

		[Token(Token = "0x400113C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private GameObject mission_DetailPanel;

		[Token(Token = "0x400113D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private GameObject mission_RewardsPanel;

		[Token(Token = "0x400113E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private GameObject[] mission_RewardsItemPanels;

		[Token(Token = "0x400113F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private CanvasGroup mission_CanvasGroup;

		[Token(Token = "0x4001140")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Localize mission_TypeTitleText;

		[Token(Token = "0x4001141")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private Localize mission_TitleText;

		[Token(Token = "0x4001142")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Localize mission_DetailText;

		[Token(Token = "0x4001143")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private RectTransform mission_DetailRT;

		[Token(Token = "0x4001144")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private Localize mission_RewardsText;

		[Token(Token = "0x4001145")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private Localize[] mission_RewardsNameTexts;

		[Token(Token = "0x4001146")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private Image[] mission_RewardsIcons;

		[Token(Token = "0x4001147")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private TMP_Text[] mission_RewardsQuantityTexts;

		[Token(Token = "0x4001148")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private List<MissionNotification> missionNotifications;

		[Token(Token = "0x4001149")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Stack<MissionNotification> missionNotificationHistory;

		[Token(Token = "0x400114A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private bool isNotifying;

		[Token(Token = "0x400114B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private Tween tween;

		[Token(Token = "0x1700015B")]
		private MissionSO currentMission
		{
			[Token(Token = "0x6000FEF")]
			[Address(RVA = "0xCF465C", Offset = "0xCF465C", VA = "0xCF465C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700015C")]
		private MissionSO completedMission
		{
			[Token(Token = "0x6000FF0")]
			[Address(RVA = "0xCF4664", Offset = "0xCF4664", VA = "0xCF4664")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000FF1")]
		[Address(RVA = "0xCF466C", Offset = "0xCF466C", VA = "0xCF466C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000FF2")]
		[Address(RVA = "0xCF4894", Offset = "0xCF4894", VA = "0xCF4894")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000FF3")]
		[Address(RVA = "0xCF4898", Offset = "0xCF4898", VA = "0xCF4898")]
		private void OnMissionCompleted(MissionSO mission)
		{
		}

		[Token(Token = "0x6000FF4")]
		[Address(RVA = "0xCF498C", Offset = "0xCF498C", VA = "0xCF498C")]
		private void EventHub_OnMissionUpdated()
		{
		}

		[Token(Token = "0x6000FF5")]
		[Address(RVA = "0xCF4AA0", Offset = "0xCF4AA0", VA = "0xCF4AA0")]
		private void EventHub_OnMissionRewardGot()
		{
		}

		[Token(Token = "0x6000FF6")]
		[Address(RVA = "0xCF4A20", Offset = "0xCF4A20", VA = "0xCF4A20")]
		private void NotifyMissionUpdate(MissionSO mission)
		{
		}

		[Token(Token = "0x6000FF7")]
		[Address(RVA = "0xCF595C", Offset = "0xCF595C", VA = "0xCF595C")]
		private void NotifyMissionCompletion(MissionSO mission)
		{
		}

		[Token(Token = "0x6000FF8")]
		[Address(RVA = "0xCF48D4", Offset = "0xCF48D4", VA = "0xCF48D4")]
		private void NotifyMissionUnlock(MissionSO mission)
		{
		}

		[Token(Token = "0x6000FF9")]
		[Address(RVA = "0xCF4AF0", Offset = "0xCF4AF0", VA = "0xCF4AF0")]
		private bool CheckCanNotify(MissionSO mission)
		{
			return default(bool);
		}

		[Token(Token = "0x6000FFA")]
		[Address(RVA = "0xCF59C8", Offset = "0xCF59C8", VA = "0xCF59C8")]
		private void TryNotify()
		{
		}

		[Token(Token = "0x6000FFB")]
		[Address(RVA = "0xCF5A58", Offset = "0xCF5A58", VA = "0xCF5A58")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9F1938", Offset = "0x9F1938")]
		private IEnumerator NotifyCoroutine()
		{
			return null;
		}

		[Token(Token = "0x6000FFC")]
		[Address(RVA = "0xCF4D74", Offset = "0xCF4D74", VA = "0xCF4D74")]
		private void PushMissionNotification(MissionNotification notification)
		{
		}

		[Token(Token = "0x6000FFD")]
		[Address(RVA = "0xCF5B00", Offset = "0xCF5B00", VA = "0xCF5B00")]
		private void FillMissionNotificationUI(MissionNotification notification)
		{
		}

		[Token(Token = "0x6000FFE")]
		[Address(RVA = "0xCF5F68", Offset = "0xCF5F68", VA = "0xCF5F68")]
		private void DisplayMissionNotificationUI(MissionNotification notification)
		{
		}

		[Token(Token = "0x6000FFF")]
		[Address(RVA = "0xCF4670", Offset = "0xCF4670", VA = "0xCF4670")]
		private void ResetMissionNotificationUI()
		{
		}

		[Token(Token = "0x6001000")]
		[Address(RVA = "0xCF6084", Offset = "0xCF6084", VA = "0xCF6084")]
		public void OnSkipMissionNotification()
		{
		}

		[Token(Token = "0x6001001")]
		[Address(RVA = "0xCF6100", Offset = "0xCF6100", VA = "0xCF6100")]
		private static string Capitalize(string str)
		{
			return null;
		}

		[Token(Token = "0x6001002")]
		[Address(RVA = "0xCF61CC", Offset = "0xCF61CC", VA = "0xCF61CC")]
		public UI_NotificationController()
		{
		}

		[Token(Token = "0x6001003")]
		[Address(RVA = "0xCF6298", Offset = "0xCF6298", VA = "0xCF6298")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F199C", Offset = "0x9F199C")]
		private void <DisplayMissionNotificationUI>b__43_0()
		{
		}

		[Token(Token = "0x6001004")]
		[Address(RVA = "0xCF6374", Offset = "0xCF6374", VA = "0xCF6374")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F19AC", Offset = "0x9F19AC")]
		private void <DisplayMissionNotificationUI>b__43_1()
		{
		}
	}
	[Token(Token = "0x2000259")]
	public class Test_CloudStorage2 : MonoBehaviour
	{
		[Token(Token = "0x6001005")]
		[Address(RVA = "0xC30650", Offset = "0xC30650", VA = "0xC30650")]
		public Test_CloudStorage2()
		{
		}
	}
	[Token(Token = "0x200025A")]
	public class OpenUiPanel : MonoBehaviour
	{
		[Token(Token = "0x400114C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject uiPanel;

		[Token(Token = "0x400114D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject[] additionalPanels;

		[Token(Token = "0x400114E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Image gearIcon;

		[Token(Token = "0x400114F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Color gearActiveColor;

		[Token(Token = "0x4001150")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private bool craftingMinigame;

		[Token(Token = "0x4001151")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		private bool craftingMinigameState;

		[Token(Token = "0x6001006")]
		[Address(RVA = "0xD559E4", Offset = "0xD559E4", VA = "0xD559E4")]
		private void Start()
		{
		}

		[Token(Token = "0x6001007")]
		[Address(RVA = "0xD55B30", Offset = "0xD55B30", VA = "0xD55B30")]
		public void ToggleVisibility()
		{
		}

		[Token(Token = "0x6001008")]
		[Address(RVA = "0xD55CD4", Offset = "0xD55CD4", VA = "0xD55CD4")]
		private void ToggleCraftingMinigame()
		{
		}

		[Token(Token = "0x6001009")]
		[Address(RVA = "0xD55CF4", Offset = "0xD55CF4", VA = "0xD55CF4")]
		public OpenUiPanel()
		{
		}
	}
	[Token(Token = "0x200025B")]
	public static class Persist
	{
		[Token(Token = "0x4001152")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static bool overrideFFR;

		[Token(Token = "0x4001153")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public static int overrideFFRLevel;

		[Token(Token = "0x4001154")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static bool showFps;

		[Token(Token = "0x4001155")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9")]
		public static bool skipTutorials;

		[Token(Token = "0x4001156")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA")]
		public static bool disablePredators;

		[Token(Token = "0x4001157")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB")]
		public static bool showDebugUI;

		[Token(Token = "0x4001158")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Dictionary<LocationSO, int> ambientAnimationIndex;

		[Token(Token = "0x4001159")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static Gradient hoverGradient;

		[Token(Token = "0x400115A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static Gradient nonHoverGradient;

		[Token(Token = "0x400115B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static bool aquariumDebug;

		[Token(Token = "0x400115C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		public static bool isPressBuild;

		[Token(Token = "0x400115D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
		public static bool allowDebugOptions;
	}
	[Token(Token = "0x200025C")]
	public enum Handside
	{
		[Token(Token = "0x400115F")]
		left,
		[Token(Token = "0x4001160")]
		right,
		[Token(Token = "0x4001161")]
		none,
		[Token(Token = "0x4001162")]
		both
	}
	[Token(Token = "0x200025D")]
	public class Player : MonoBehaviour
	{
		[Token(Token = "0x200047C")]
		public delegate void LocationChangedAction(LocationSO locationSO, bool comingFromShip);

		[Token(Token = "0x4001163")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Player instance;

		[Token(Token = "0x4001164")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform xrRig;

		[Token(Token = "0x4001165")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform hmd;

		[Token(Token = "0x4001166")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Camera xrCam;

		[Token(Token = "0x4001167")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform leftHand;

		[Token(Token = "0x4001168")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private XRBaseController leftController;

		[Token(Token = "0x4001169")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Transform rightHand;

		[Token(Token = "0x400116A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private XRBaseController rightController;

		[Token(Token = "0x400116B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public ControllerModel modelL;

		[Token(Token = "0x400116C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public ControllerModel modelR;

		[Token(Token = "0x400116D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Transform fishpad;

		[Token(Token = "0x400116E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool charmCraftingUnlocked;

		[Token(Token = "0x400116F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
		private bool itemCraftingUnlocked;

		[Token(Token = "0x4001170")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6A")]
		private bool craftingCutsceneShowed;

		[Token(Token = "0x4001171")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6B")]
		private bool aquariumCutsceneShowed;

		[Token(Token = "0x4001172")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private int newRodRecipe;

		[Token(Token = "0x4001173")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private int newLureRecipe;

		[Token(Token = "0x4001174")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private int newCharmRecipe;

		[Token(Token = "0x4001175")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private int newDecoRecipe;

		[Token(Token = "0x4001176")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Transform grabL;

		[Token(Token = "0x4001177")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Transform grabR;

		[Token(Token = "0x4001179")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private LocationSO location;

		[Token(Token = "0x400117A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private InventoryController inventoryController;

		[Token(Token = "0x400117B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private TeleporationManager teleportController;

		[Token(Token = "0x400117C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private int m_XP;

		[Token(Token = "0x400117D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private int m_Level;

		[Token(Token = "0x400117E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static readonly int XP_TO_NEXT_LEVEL;

		[Token(Token = "0x400117F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private int m_TournamentPoint;

		[Token(Token = "0x1700015D")]
		public static Transform XrRig
		{
			[Token(Token = "0x600100B")]
			[Address(RVA = "0xC598CC", Offset = "0xC598CC", VA = "0xC598CC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700015E")]
		public static Transform Hmd
		{
			[Token(Token = "0x600100C")]
			[Address(RVA = "0xC59940", Offset = "0xC59940", VA = "0xC59940")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700015F")]
		public static Camera XrCam
		{
			[Token(Token = "0x600100D")]
			[Address(RVA = "0xC599B4", Offset = "0xC599B4", VA = "0xC599B4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000160")]
		public static Transform LeftHand
		{
			[Token(Token = "0x600100E")]
			[Address(RVA = "0xC59A28", Offset = "0xC59A28", VA = "0xC59A28")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000161")]
		public static XRBaseController LeftController
		{
			[Token(Token = "0x600100F")]
			[Address(RVA = "0xC59A9C", Offset = "0xC59A9C", VA = "0xC59A9C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000162")]
		public static Transform RightHand
		{
			[Token(Token = "0x6001010")]
			[Address(RVA = "0xC59B10", Offset = "0xC59B10", VA = "0xC59B10")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000163")]
		public static XRBaseController RightController
		{
			[Token(Token = "0x6001011")]
			[Address(RVA = "0xC59B84", Offset = "0xC59B84", VA = "0xC59B84")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000164")]
		public static ControllerModel ModelL
		{
			[Token(Token = "0x6001012")]
			[Address(RVA = "0xC59BF8", Offset = "0xC59BF8", VA = "0xC59BF8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001013")]
			[Address(RVA = "0xC59C6C", Offset = "0xC59C6C", VA = "0xC59C6C")]
			set
			{
			}
		}

		[Token(Token = "0x17000165")]
		public static ControllerModel ModelR
		{
			[Token(Token = "0x6001014")]
			[Address(RVA = "0xC59CE8", Offset = "0xC59CE8", VA = "0xC59CE8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001015")]
			[Address(RVA = "0xC59D5C", Offset = "0xC59D5C", VA = "0xC59D5C")]
			set
			{
			}
		}

		[Token(Token = "0x17000166")]
		public static Transform Fishpad
		{
			[Token(Token = "0x6001016")]
			[Address(RVA = "0xC59DD8", Offset = "0xC59DD8", VA = "0xC59DD8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000167")]
		public static bool CharmCraftingUnlocked
		{
			[Token(Token = "0x6001017")]
			[Address(RVA = "0xC59E4C", Offset = "0xC59E4C", VA = "0xC59E4C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001018")]
			[Address(RVA = "0xC59EC0", Offset = "0xC59EC0", VA = "0xC59EC0")]
			set
			{
			}
		}

		[Token(Token = "0x17000168")]
		public static bool ItemCraftingUnlocked
		{
			[Token(Token = "0x6001019")]
			[Address(RVA = "0xC59FE4", Offset = "0xC59FE4", VA = "0xC59FE4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600101A")]
			[Address(RVA = "0xC5A058", Offset = "0xC5A058", VA = "0xC5A058")]
			set
			{
			}
		}

		[Token(Token = "0x17000169")]
		public static bool CraftingCutsceneShowed
		{
			[Token(Token = "0x600101B")]
			[Address(RVA = "0xC5A108", Offset = "0xC5A108", VA = "0xC5A108")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600101C")]
			[Address(RVA = "0xC5A17C", Offset = "0xC5A17C", VA = "0xC5A17C")]
			set
			{
			}
		}

		[Token(Token = "0x1700016A")]
		public static bool AquariumCutsceneShowed
		{
			[Token(Token = "0x600101D")]
			[Address(RVA = "0xC5A1F8", Offset = "0xC5A1F8", VA = "0xC5A1F8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600101E")]
			[Address(RVA = "0xC5A26C", Offset = "0xC5A26C", VA = "0xC5A26C")]
			set
			{
			}
		}

		[Token(Token = "0x1700016B")]
		public static int NewRodRecipe
		{
			[Token(Token = "0x600101F")]
			[Address(RVA = "0xC5A2E8", Offset = "0xC5A2E8", VA = "0xC5A2E8")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001020")]
			[Address(RVA = "0xC5A35C", Offset = "0xC5A35C", VA = "0xC5A35C")]
			set
			{
			}
		}

		[Token(Token = "0x1700016C")]
		public static int NewLureRecipe
		{
			[Token(Token = "0x6001021")]
			[Address(RVA = "0xC5A3D4", Offset = "0xC5A3D4", VA = "0xC5A3D4")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001022")]
			[Address(RVA = "0xC5A448", Offset = "0xC5A448", VA = "0xC5A448")]
			set
			{
			}
		}

		[Token(Token = "0x1700016D")]
		public static int NewCharmRecipe
		{
			[Token(Token = "0x6001023")]
			[Address(RVA = "0xC5A4C0", Offset = "0xC5A4C0", VA = "0xC5A4C0")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001024")]
			[Address(RVA = "0xC5A534", Offset = "0xC5A534", VA = "0xC5A534")]
			set
			{
			}
		}

		[Token(Token = "0x1700016E")]
		public static int NewDecoRecipe
		{
			[Token(Token = "0x6001025")]
			[Address(RVA = "0xC5A5AC", Offset = "0xC5A5AC", VA = "0xC5A5AC")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001026")]
			[Address(RVA = "0xC5A620", Offset = "0xC5A620", VA = "0xC5A620")]
			set
			{
			}
		}

		[Token(Token = "0x1700016F")]
		public static Transform GrabL
		{
			[Token(Token = "0x6001027")]
			[Address(RVA = "0xC5A698", Offset = "0xC5A698", VA = "0xC5A698")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000170")]
		public static Transform GrabR
		{
			[Token(Token = "0x6001028")]
			[Address(RVA = "0xC5A70C", Offset = "0xC5A70C", VA = "0xC5A70C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000171")]
		public static LocationSO Location
		{
			[Token(Token = "0x600102B")]
			[Address(RVA = "0xC59F70", Offset = "0xC59F70", VA = "0xC59F70")]
			get
			{
				return null;
			}
			[Token(Token = "0x600102C")]
			[Address(RVA = "0xC5A960", Offset = "0xC5A960", VA = "0xC5A960")]
			set
			{
			}
		}

		[Token(Token = "0x17000172")]
		public static InventoryController InventoryController
		{
			[Token(Token = "0x600102D")]
			[Address(RVA = "0xC5AF14", Offset = "0xC5AF14", VA = "0xC5AF14")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000173")]
		public static TeleporationManager TeleportController
		{
			[Token(Token = "0x600102E")]
			[Address(RVA = "0xC5AF88", Offset = "0xC5AF88", VA = "0xC5AF88")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000174")]
		public static int XP
		{
			[Token(Token = "0x600102F")]
			[Address(RVA = "0xC5AFFC", Offset = "0xC5AFFC", VA = "0xC5AFFC")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000175")]
		public static int Level
		{
			[Token(Token = "0x6001030")]
			[Address(RVA = "0xC5B07C", Offset = "0xC5B07C", VA = "0xC5B07C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000176")]
		public static int TurnamentPoint
		{
			[Token(Token = "0x6001031")]
			[Address(RVA = "0xC5B0F0", Offset = "0xC5B0F0", VA = "0xC5B0F0")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1400005A")]
		public static event LocationChangedAction OnLocationChanged
		{
			[Token(Token = "0x6001029")]
			[Address(RVA = "0xC5A780", Offset = "0xC5A780", VA = "0xC5A780")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F19BC", Offset = "0x9F19BC")]
			add
			{
			}
			[Token(Token = "0x600102A")]
			[Address(RVA = "0xC5A870", Offset = "0xC5A870", VA = "0xC5A870")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F19CC", Offset = "0x9F19CC")]
			remove
			{
			}
		}

		[Token(Token = "0x6001032")]
		[Address(RVA = "0xC5B164", Offset = "0xC5B164", VA = "0xC5B164")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001033")]
		[Address(RVA = "0xC5B358", Offset = "0xC5B358", VA = "0xC5B358")]
		private void Start()
		{
		}

		[Token(Token = "0x6001034")]
		[Address(RVA = "0xC5B828", Offset = "0xC5B828", VA = "0xC5B828")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001035")]
		[Address(RVA = "0xC5B964", Offset = "0xC5B964", VA = "0xC5B964")]
		public void InitLocation([Optional] LocationSO LSO)
		{
		}

		[Token(Token = "0x6001036")]
		[Address(RVA = "0xC5BA00", Offset = "0xC5BA00", VA = "0xC5BA00")]
		private void EventHub_OnMissionCompleted(MissionSO mission)
		{
		}

		[Token(Token = "0x6001037")]
		[Address(RVA = "0xC5BB6C", Offset = "0xC5BB6C", VA = "0xC5BB6C")]
		private void EventHub_OnFishCaught(FpFish fish, bool isCheating)
		{
		}

		[Token(Token = "0x6001038")]
		[Address(RVA = "0xC5BB78", Offset = "0xC5BB78", VA = "0xC5BB78")]
		private void EventHub_OnPlayerXPGot(int xp)
		{
		}

		[Token(Token = "0x6001039")]
		[Address(RVA = "0xC5BB90", Offset = "0xC5BB90", VA = "0xC5BB90")]
		private void CheckNextLevelXP()
		{
		}

		[Token(Token = "0x600103A")]
		[Address(RVA = "0xC5BC38", Offset = "0xC5BC38", VA = "0xC5BC38")]
		public void ResetPlayerLevel()
		{
		}

		[Token(Token = "0x600103B")]
		[Address(RVA = "0xC5BC84", Offset = "0xC5BC84", VA = "0xC5BC84")]
		private void RecipeUnlocked(CraftingRecipesSO recipe)
		{
		}

		[Token(Token = "0x600103C")]
		[Address(RVA = "0xC5BD20", Offset = "0xC5BD20", VA = "0xC5BD20")]
		public void ResetCraftingStation()
		{
		}

		[Token(Token = "0x600103D")]
		[Address(RVA = "0xC5BD54", Offset = "0xC5BD54", VA = "0xC5BD54")]
		public static void SetControllerModelVisible(Handside side, bool state)
		{
		}

		[Token(Token = "0x600103E")]
		[Address(RVA = "0xC5B738", Offset = "0xC5B738", VA = "0xC5B738")]
		public static void SetPlayerHeight(float offset)
		{
		}

		[Token(Token = "0x600103F")]
		[Address(RVA = "0xC5BFC4", Offset = "0xC5BFC4", VA = "0xC5BFC4")]
		public Player()
		{
		}
	}
	[Token(Token = "0x200025E")]
	public class PredatorController : MonoBehaviour
	{
		[Token(Token = "0x4001180")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static PredatorController Instance;

		[Token(Token = "0x4001181")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float m_PredatorDiveTime;

		[Token(Token = "0x4001182")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private SpawnPool pool;

		[Token(Token = "0x4001183")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform Predator;

		[Token(Token = "0x4001184")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private DOTweenPath[] Path;

		[Token(Token = "0x4001185")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private List<DOTweenPath> paths;

		[Token(Token = "0x4001186")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Tween m_tween;

		[Token(Token = "0x4001187")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<SharkController> predators;

		[Token(Token = "0x4001188")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private PredatorSkin skin;

		[Token(Token = "0x4001189")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private int maxNumber;

		[Token(Token = "0x400118A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int initialNumber;

		[Token(Token = "0x400118B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private int numSpawnAtOnce;

		[Token(Token = "0x400118C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float spawnRate;

		[Token(Token = "0x400118D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float speed;

		[Token(Token = "0x400118E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool initialSpawn;

		[Token(Token = "0x400118F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private int numHiddenPredators;

		[Token(Token = "0x4001190")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private readonly float speedScalingFactor;

		[Token(Token = "0x4001191")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private readonly float predatorsHiddenDuration;

		[Token(Token = "0x4001192")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private string lastLocationBCID;

		[Token(Token = "0x4001193")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private float SystemActivatedTime;

		[Token(Token = "0x4001194")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private float systemActivateKeepout;

		[Token(Token = "0x6001041")]
		[Address(RVA = "0xC6640C", Offset = "0xC6640C", VA = "0xC6640C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001042")]
		[Address(RVA = "0xC665A0", Offset = "0xC665A0", VA = "0xC665A0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001043")]
		[Address(RVA = "0xC66620", Offset = "0xC66620", VA = "0xC66620")]
		private void FishpoolChanged()
		{
		}

		[Token(Token = "0x6001044")]
		[Address(RVA = "0xC66624", Offset = "0xC66624", VA = "0xC66624")]
		public void SystemInit()
		{
		}

		[Token(Token = "0x6001045")]
		[Address(RVA = "0xC669A4", Offset = "0xC669A4", VA = "0xC669A4")]
		public void SystemInit(PredatorSkin _skin, int _maxNumber, int _initialNumber, int _numSpawnAtOnce, float _spawnRate, float _lifeTime, float _speed, float _systemActiveDur, float _systemInactiveDur)
		{
		}

		[Token(Token = "0x6001046")]
		[Address(RVA = "0xC668E8", Offset = "0xC668E8", VA = "0xC668E8")]
		private void SystemEnable()
		{
		}

		[Token(Token = "0x6001047")]
		[Address(RVA = "0xC66CA8", Offset = "0xC66CA8", VA = "0xC66CA8")]
		public void SystemDisable(float inactiveDur)
		{
		}

		[Token(Token = "0x6001048")]
		[Address(RVA = "0xC669D4", Offset = "0xC669D4", VA = "0xC669D4")]
		private void PrepPredatorList()
		{
		}

		[Token(Token = "0x6001049")]
		[Address(RVA = "0xC667B4", Offset = "0xC667B4", VA = "0xC667B4")]
		private void ClearAllPredators()
		{
		}

		[Token(Token = "0x600104A")]
		[Address(RVA = "0xC66A88", Offset = "0xC66A88", VA = "0xC66A88")]
		private void Spawn()
		{
		}

		[Token(Token = "0x600104B")]
		[Address(RVA = "0xC66F78", Offset = "0xC66F78", VA = "0xC66F78")]
		private void SpawnSingle()
		{
		}

		[Token(Token = "0x600104C")]
		[Address(RVA = "0xC664A4", Offset = "0xC664A4", VA = "0xC664A4")]
		public void InitPredator()
		{
		}

		[Token(Token = "0x600104D")]
		[Address(RVA = "0xC66EC8", Offset = "0xC66EC8", VA = "0xC66EC8")]
		public void DespawnPredator(SharkController predator, DOTweenPath tweenPath)
		{
		}

		[Token(Token = "0x600104E")]
		[Address(RVA = "0xC67244", Offset = "0xC67244", VA = "0xC67244")]
		public PredatorController()
		{
		}
	}
	[Token(Token = "0x200025F")]
	public class SharkController : MonoBehaviour
	{
		[Token(Token = "0x200047D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E82D8", Offset = "0x9E82D8")]
		private sealed class <GetAnimator>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001A51")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001A52")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001A53")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SharkController <>4__this;

			[Token(Token = "0x170002AD")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001C4E")]
				[Address(RVA = "0xCF19E8", Offset = "0xCF19E8", VA = "0xCF19E8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002AE")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001C50")]
				[Address(RVA = "0xCF1A50", Offset = "0xCF1A50", VA = "0xCF1A50", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001C4B")]
			[Address(RVA = "0xCF1378", Offset = "0xCF1378", VA = "0xCF1378")]
			[DebuggerHidden]
			public <GetAnimator>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x6001C4C")]
			[Address(RVA = "0xCF1920", Offset = "0xCF1920", VA = "0xCF1920", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001C4D")]
			[Address(RVA = "0xCF1924", Offset = "0xCF1924", VA = "0xCF1924", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001C4F")]
			[Address(RVA = "0xCF19F0", Offset = "0xCF19F0", VA = "0xCF19F0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001195")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private PredatorDataSO Data;

		[Token(Token = "0x4001196")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject[] Skins;

		[Token(Token = "0x4001197")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform Ring;

		[Token(Token = "0x4001198")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Transform Fin;

		[Token(Token = "0x4001199")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public DOTweenPath path;

		[Token(Token = "0x400119A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Tween pathTween;

		[Token(Token = "0x400119B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Tween diveTween;

		[Token(Token = "0x400119C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public HapticsClipSO crunch;

		[Token(Token = "0x400119D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public GameObject exclamations;

		[Token(Token = "0x400119E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public PredatorSkin skin;

		[Token(Token = "0x400119F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Animator anim;

		[Token(Token = "0x600104F")]
		[Address(RVA = "0xCF1194", Offset = "0xCF1194", VA = "0xCF1194")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001050")]
		[Address(RVA = "0xCF1340", Offset = "0xCF1340", VA = "0xCF1340")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001051")]
		[Address(RVA = "0xCF1274", Offset = "0xCF1274", VA = "0xCF1274")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9F19DC", Offset = "0x9F19DC")]
		private IEnumerator GetAnimator()
		{
			return null;
		}

		[Token(Token = "0x6001052")]
		[Address(RVA = "0xCF13A4", Offset = "0xCF13A4", VA = "0xCF13A4")]
		public void setSkin()
		{
		}

		[Token(Token = "0x6001053")]
		[Address(RVA = "0xCF1458", Offset = "0xCF1458", VA = "0xCF1458")]
		private void DisableAllSkins()
		{
		}

		[Token(Token = "0x6001054")]
		[Address(RVA = "0xCF14C8", Offset = "0xCF14C8", VA = "0xCF14C8")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6001055")]
		[Address(RVA = "0xCF151C", Offset = "0xCF151C", VA = "0xCF151C")]
		private void FishCollision()
		{
		}

		[Token(Token = "0x6001056")]
		[Address(RVA = "0xCF172C", Offset = "0xCF172C", VA = "0xCF172C")]
		private void SetDefaultAnimSpeed()
		{
		}

		[Token(Token = "0x6001057")]
		[Address(RVA = "0xCF174C", Offset = "0xCF174C", VA = "0xCF174C")]
		public void Dive()
		{
		}

		[Token(Token = "0x6001058")]
		[Address(RVA = "0xCF17B0", Offset = "0xCF17B0", VA = "0xCF17B0")]
		private void DoDive()
		{
		}

		[Token(Token = "0x6001059")]
		[Address(RVA = "0xCF18AC", Offset = "0xCF18AC", VA = "0xCF18AC")]
		private void RemoveSelf()
		{
		}

		[Token(Token = "0x600105A")]
		[Address(RVA = "0xCF12F0", Offset = "0xCF12F0", VA = "0xCF12F0")]
		private void Surface()
		{
		}

		[Token(Token = "0x600105B")]
		[Address(RVA = "0xCF1914", Offset = "0xCF1914", VA = "0xCF1914")]
		public SharkController()
		{
		}

		[Token(Token = "0x600105C")]
		[Address(RVA = "0xCF191C", Offset = "0xCF191C", VA = "0xCF191C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F1A40", Offset = "0x9F1A40")]
		private void <DoDive>b__20_0()
		{
		}
	}
	[Token(Token = "0x2000260")]
	public class UI_PredatorController : MonoBehaviour
	{
		[Token(Token = "0x600105D")]
		[Address(RVA = "0xCF7578", Offset = "0xCF7578", VA = "0xCF7578")]
		public UI_PredatorController()
		{
		}
	}
	[Token(Token = "0x2000261")]
	public class PredatorToggle : MonoBehaviour
	{
		[Token(Token = "0x40011A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Toggle tog;

		[Token(Token = "0x600105E")]
		[Address(RVA = "0xC68340", Offset = "0xC68340", VA = "0xC68340")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600105F")]
		[Address(RVA = "0xC683E4", Offset = "0xC683E4", VA = "0xC683E4")]
		public void OnToggleChange()
		{
		}

		[Token(Token = "0x6001060")]
		[Address(RVA = "0xC68484", Offset = "0xC68484", VA = "0xC68484")]
		public PredatorToggle()
		{
		}
	}
	[Token(Token = "0x2000262")]
	public class RecoverFish : MonoBehaviour
	{
		[Token(Token = "0x40011A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform recoveredFish;

		[Token(Token = "0x40011A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SpawnPool creaturePool;

		[Token(Token = "0x40011A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SpawnPool itemPool;

		[Token(Token = "0x40011A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public SpawnPool vfx;

		[Token(Token = "0x40011A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject takeFishUi;

		[Token(Token = "0x40011A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameObject missionUnlocked;

		[Token(Token = "0x40011A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Transform takeFishFx;

		[Token(Token = "0x40011A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private FishTypeSO fishCaught;

		[Token(Token = "0x40011A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Localize fishNameText;

		[Token(Token = "0x40011AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public TextMeshProUGUI fishWeightText;

		[Token(Token = "0x40011AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Image[] stars;

		[Token(Token = "0x40011AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public UI_FishOPediaController fishCheckist;

		[Token(Token = "0x40011AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public UI_TakeFishController takeFishUiCtrl;

		[Token(Token = "0x40011AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Tween airRotate;

		[Token(Token = "0x40011AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private bool showFishInHand;

		[Token(Token = "0x40011B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private int fishScale;

		[Token(Token = "0x40011B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private float airTime;

		[Token(Token = "0x40011B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public GameObject jumpTrail;

		[Token(Token = "0x40011B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Transform jumpTrailParent;

		[Token(Token = "0x40011B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public Transform largeObjectRecoverSplash;

		[Token(Token = "0x40011B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Vector3 releaseSplashPos;

		[Token(Token = "0x40011B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private FishTypeSO.FishScale releaseSplashScale;

		[Token(Token = "0x6001061")]
		[Address(RVA = "0xC6904C", Offset = "0xC6904C", VA = "0xC6904C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001062")]
		[Address(RVA = "0xC69050", Offset = "0xC69050", VA = "0xC69050")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001063")]
		[Address(RVA = "0xC69054", Offset = "0xC69054", VA = "0xC69054")]
		private void MissionCompleted(MissionSO.MissionTypes type, MissionSO.Reward[] rewards)
		{
		}

		[Token(Token = "0x6001064")]
		[Address(RVA = "0xC690D4", Offset = "0xC690D4", VA = "0xC690D4")]
		public void TakeFish(Vector3 position)
		{
		}

		[Token(Token = "0x6001065")]
		[Address(RVA = "0xC69C74", Offset = "0xC69C74", VA = "0xC69C74")]
		public void JumpAndRelease()
		{
		}

		[Token(Token = "0x6001066")]
		[Address(RVA = "0xC69FFC", Offset = "0xC69FFC", VA = "0xC69FFC")]
		private void ReleaseSplash()
		{
		}

		[Token(Token = "0x6001067")]
		[Address(RVA = "0xC6A12C", Offset = "0xC6A12C", VA = "0xC6A12C")]
		private void PlaySplashFizz()
		{
		}

		[Token(Token = "0x6001068")]
		[Address(RVA = "0xC6A1BC", Offset = "0xC6A1BC", VA = "0xC6A1BC")]
		public void JumpAndKeep()
		{
		}

		[Token(Token = "0x6001069")]
		[Address(RVA = "0xC6A3F8", Offset = "0xC6A3F8", VA = "0xC6A3F8")]
		private void SloMoStart()
		{
		}

		[Token(Token = "0x600106A")]
		[Address(RVA = "0xC6A468", Offset = "0xC6A468", VA = "0xC6A468")]
		private void SloMoEnd()
		{
		}

		[Token(Token = "0x600106B")]
		[Address(RVA = "0xC6A474", Offset = "0xC6A474", VA = "0xC6A474")]
		private void ShowFishInUI()
		{
		}

		[Token(Token = "0x600106C")]
		[Address(RVA = "0xC6A838", Offset = "0xC6A838", VA = "0xC6A838")]
		private void SetStars()
		{
		}

		[Token(Token = "0x600106D")]
		[Address(RVA = "0xC6A968", Offset = "0xC6A968", VA = "0xC6A968")]
		public void RemoveFishInHand()
		{
		}

		[Token(Token = "0x600106E")]
		[Address(RVA = "0xC6AB24", Offset = "0xC6AB24", VA = "0xC6AB24")]
		private void EnableMissionCompleted()
		{
		}

		[Token(Token = "0x600106F")]
		[Address(RVA = "0xC6AB44", Offset = "0xC6AB44", VA = "0xC6AB44")]
		public RecoverFish()
		{
		}

		[Token(Token = "0x6001070")]
		[Address(RVA = "0xC6AB54", Offset = "0xC6AB54", VA = "0xC6AB54")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F1A50", Offset = "0x9F1A50")]
		private void <TakeFish>b__25_0()
		{
		}

		[Token(Token = "0x6001071")]
		[Address(RVA = "0xC6AB58", Offset = "0xC6AB58", VA = "0xC6AB58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F1A60", Offset = "0x9F1A60")]
		private void <JumpAndRelease>b__26_0()
		{
		}

		[Token(Token = "0x6001072")]
		[Address(RVA = "0xC6AB7C", Offset = "0xC6AB7C", VA = "0xC6AB7C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F1A70", Offset = "0x9F1A70")]
		private void <JumpAndKeep>b__29_0()
		{
		}
	}
	[Token(Token = "0x2000263")]
	public class ReelInUI : MonoBehaviour
	{
		[Token(Token = "0x40011B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private RectTransform guage;

		[Token(Token = "0x40011B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Image guageFill;

		[Token(Token = "0x40011B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Image blueZone;

		[Token(Token = "0x40011BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Image redZone;

		[Token(Token = "0x40011BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Transform needle;

		[Token(Token = "0x40011BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private SpriteRenderer dangerGlow;

		[Token(Token = "0x40011BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Tween dangerColorPulse;

		[Token(Token = "0x40011BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Color dangerOverOn;

		[Token(Token = "0x40011BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Color dangerOverOff;

		[Token(Token = "0x40011C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Color dangerUnderOn;

		[Token(Token = "0x40011C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private Color dangerUnderOff;

		[Token(Token = "0x40011C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private Color patternStepSuccessOn;

		[Token(Token = "0x40011C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private Color patternStepSuccessOff;

		[Token(Token = "0x40011C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private GameObject blueZoneOutline;

		[Token(Token = "0x40011C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private GameObject redZoneOutline;

		[Token(Token = "0x40011C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private GameObject powerReel;

		[Token(Token = "0x40011C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public GameObject[] meterObjectsToHide;

		[Token(Token = "0x40011C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public GameObject[] staminaObjectsToHide;

		[Token(Token = "0x40011C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public int dangerLevel;

		[Token(Token = "0x40011CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		public bool meterIsHidden;

		[Token(Token = "0x40011CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ReelInUI instance;

		[Token(Token = "0x40011CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private float cachedCurrentRedzone;

		[Token(Token = "0x40011CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private float cachedCurrentBluezone;

		[Token(Token = "0x6001073")]
		[Address(RVA = "0xC6B15C", Offset = "0xC6B15C", VA = "0xC6B15C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001074")]
		[Address(RVA = "0xC6B234", Offset = "0xC6B234", VA = "0xC6B234")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001075")]
		[Address(RVA = "0xC6B528", Offset = "0xC6B528", VA = "0xC6B528")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001076")]
		[Address(RVA = "0xC6B798", Offset = "0xC6B798", VA = "0xC6B798")]
		public void DoAlert(TensionAlert alert)
		{
		}

		[Token(Token = "0x6001077")]
		[Address(RVA = "0xC6B810", Offset = "0xC6B810", VA = "0xC6B810")]
		private void TurnOutlinesOff()
		{
		}

		[Token(Token = "0x6001078")]
		[Address(RVA = "0xC6B854", Offset = "0xC6B854", VA = "0xC6B854")]
		public void PatternStepSuccessFlash()
		{
		}

		[Token(Token = "0x6001079")]
		[Address(RVA = "0xC6B8FC", Offset = "0xC6B8FC", VA = "0xC6B8FC")]
		private void SetBlueZone(float val)
		{
		}

		[Token(Token = "0x600107A")]
		[Address(RVA = "0xC6B948", Offset = "0xC6B948", VA = "0xC6B948")]
		private void SetRedZone(float val)
		{
		}

		[Token(Token = "0x600107B")]
		[Address(RVA = "0xC6B994", Offset = "0xC6B994", VA = "0xC6B994")]
		public void SetDangerZones(float blueVal, float redVal, float time = 0.5f)
		{
		}

		[Token(Token = "0x600107C")]
		[Address(RVA = "0xC6B390", Offset = "0xC6B390", VA = "0xC6B390")]
		public void HideMeter(bool state)
		{
		}

		[Token(Token = "0x600107D")]
		[Address(RVA = "0xC6B9C8", Offset = "0xC6B9C8", VA = "0xC6B9C8")]
		private void OnPowerReelStart()
		{
		}

		[Token(Token = "0x600107E")]
		[Address(RVA = "0xC6B5F8", Offset = "0xC6B5F8", VA = "0xC6B5F8")]
		private void OnPowerReelStop()
		{
		}

		[Token(Token = "0x600107F")]
		[Address(RVA = "0xC6BB98", Offset = "0xC6BB98", VA = "0xC6BB98")]
		public ReelInUI()
		{
		}

		[Token(Token = "0x6001080")]
		[Address(RVA = "0xC6BBA0", Offset = "0xC6BBA0", VA = "0xC6BBA0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F1A80", Offset = "0x9F1A80")]
		private void <OnPowerReelStart>b__33_0(float val)
		{
		}

		[Token(Token = "0x6001081")]
		[Address(RVA = "0xC6BBBC", Offset = "0xC6BBBC", VA = "0xC6BBBC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F1A90", Offset = "0x9F1A90")]
		private void <OnPowerReelStart>b__33_1(float val)
		{
		}

		[Token(Token = "0x6001082")]
		[Address(RVA = "0xC6BBD8", Offset = "0xC6BBD8", VA = "0xC6BBD8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F1AA0", Offset = "0x9F1AA0")]
		private void <OnPowerReelStop>b__34_0(float val)
		{
		}

		[Token(Token = "0x6001083")]
		[Address(RVA = "0xC6BBF4", Offset = "0xC6BBF4", VA = "0xC6BBF4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F1AB0", Offset = "0x9F1AB0")]
		private void <OnPowerReelStop>b__34_1(float val)
		{
		}
	}
	[Token(Token = "0x2000264")]
	public class ResetTextColor : MonoBehaviour
	{
		[Token(Token = "0x40011CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Color color;

		[Token(Token = "0x40011CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private TextMeshProUGUI text;

		[Token(Token = "0x40011D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private DOTweenAnimation anim;

		[Token(Token = "0x6001084")]
		[Address(RVA = "0xC6CE3C", Offset = "0xC6CE3C", VA = "0xC6CE3C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001085")]
		[Address(RVA = "0xC6CE8C", Offset = "0xC6CE8C", VA = "0xC6CE8C")]
		public ResetTextColor()
		{
		}
	}
	[Token(Token = "0x2000265")]
	public enum SfxRod
	{
		[Token(Token = "0x40011D2")]
		Cast,
		[Token(Token = "0x40011D3")]
		ReelIn,
		[Token(Token = "0x40011D4")]
		OutOfBounds,
		[Token(Token = "0x40011D5")]
		Reset,
		[Token(Token = "0x40011D6")]
		Splash,
		[Token(Token = "0x40011D7")]
		CastArm,
		[Token(Token = "0x40011D8")]
		CastRelease,
		[Token(Token = "0x40011D9")]
		FishHookSplash,
		[Token(Token = "0x40011DA")]
		FishHookSplash2,
		[Token(Token = "0x40011DB")]
		FishSplashSingle,
		[Token(Token = "0x40011DC")]
		FishSplashFlee,
		[Token(Token = "0x40011DD")]
		FishSplashFleeEnd,
		[Token(Token = "0x40011DE")]
		RodWhip,
		[Token(Token = "0x40011DF")]
		BoostReady,
		[Token(Token = "0x40011E0")]
		CastWhip,
		[Token(Token = "0x40011E1")]
		PowerReelWindup,
		[Token(Token = "0x40011E2")]
		PowerReelEnd,
		[Token(Token = "0x40011E3")]
		RodTipSplash,
		[Token(Token = "0x40011E4")]
		BoostFail,
		[Token(Token = "0x40011E5")]
		RunRageSplash,
		[Token(Token = "0x40011E6")]
		IsRunning,
		[Token(Token = "0x40011E7")]
		RodStretch,
		[Token(Token = "0x40011E8")]
		ReelJump,
		[Token(Token = "0x40011E9")]
		ReelLean,
		[Token(Token = "0x40011EA")]
		ReelLeanGood,
		[Token(Token = "0x40011EB")]
		ReelLeanBad,
		[Token(Token = "0x40011EC")]
		IsRaging,
		[Token(Token = "0x40011ED")]
		RodEquip,
		[Token(Token = "0x40011EE")]
		JumpOutSplash,
		[Token(Token = "0x40011EF")]
		JumpLandSplash,
		[Token(Token = "0x40011F0")]
		BobberBite,
		[Token(Token = "0x40011F1")]
		BobberBiteBig,
		[Token(Token = "0x40011F2")]
		RecoverSplash,
		[Token(Token = "0x40011F3")]
		SnapSplash,
		[Token(Token = "0x40011F4")]
		BoostPistonS,
		[Token(Token = "0x40011F5")]
		BoostPistonM,
		[Token(Token = "0x40011F6")]
		BoostPistonL,
		[Token(Token = "0x40011F7")]
		FishReleaseSplash,
		[Token(Token = "0x40011F8")]
		SplashFizz,
		[Token(Token = "0x40011F9")]
		ReelWhine,
		[Token(Token = "0x40011FA")]
		ElectricHum,
		[Token(Token = "0x40011FB")]
		ElectricZap,
		[Token(Token = "0x40011FC")]
		LureEquip,
		[Token(Token = "0x40011FD")]
		LineStress
	}
	[Token(Token = "0x2000266")]
	public class RodAudio : MonoBehaviour
	{
		[Token(Token = "0x200047E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E82E8", Offset = "0x9E82E8")]
		private sealed class <LowerPitch>d__71 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001A54")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001A55")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001A56")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public RodAudio <>4__this;

			[Token(Token = "0x170002AF")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001C54")]
				[Address(RVA = "0xC6F558", Offset = "0xC6F558", VA = "0xC6F558", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002B0")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001C56")]
				[Address(RVA = "0xC6F5C0", Offset = "0xC6F5C0", VA = "0xC6F5C0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001C51")]
			[Address(RVA = "0xC6F388", Offset = "0xC6F388", VA = "0xC6F388")]
			[DebuggerHidden]
			public <LowerPitch>d__71(int <>1__state)
			{
			}

			[Token(Token = "0x6001C52")]
			[Address(RVA = "0xC6F468", Offset = "0xC6F468", VA = "0xC6F468", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001C53")]
			[Address(RVA = "0xC6F46C", Offset = "0xC6F46C", VA = "0xC6F46C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001C55")]
			[Address(RVA = "0xC6F560", Offset = "0xC6F560", VA = "0xC6F560", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200047F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E82F8", Offset = "0x9E82F8")]
		private sealed class <RaiseBoostAudioPitch>d__73 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001A57")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001A58")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001A59")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public RodAudio <>4__this;

			[Token(Token = "0x170002B1")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001C5A")]
				[Address(RVA = "0xC6F6B8", Offset = "0xC6F6B8", VA = "0xC6F6B8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002B2")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001C5C")]
				[Address(RVA = "0xC6F720", Offset = "0xC6F720", VA = "0xC6F720", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001C57")]
			[Address(RVA = "0xC6F3B4", Offset = "0xC6F3B4", VA = "0xC6F3B4")]
			[DebuggerHidden]
			public <RaiseBoostAudioPitch>d__73(int <>1__state)
			{
			}

			[Token(Token = "0x6001C58")]
			[Address(RVA = "0xC6F5C8", Offset = "0xC6F5C8", VA = "0xC6F5C8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001C59")]
			[Address(RVA = "0xC6F5CC", Offset = "0xC6F5CC", VA = "0xC6F5CC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001C5B")]
			[Address(RVA = "0xC6F6C0", Offset = "0xC6F6C0", VA = "0xC6F6C0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40011FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9EC540", Offset = "0x9EC540")]
		public AudioSource lineAudio;

		[Token(Token = "0x40011FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioSource reelAudio;

		[Token(Token = "0x4001200")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AudioSource reelBoostAudio;

		[Token(Token = "0x4001201")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AudioSource reelWhineAudio;

		[Token(Token = "0x4001202")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public AudioSource bobberAudio;

		[Token(Token = "0x4001203")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public AudioSource rodTipAudio;

		[Token(Token = "0x4001204")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public AudioSource rodBodyAudio;

		[Token(Token = "0x4001205")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public AudioSource releaseSplashAudio;

		[Token(Token = "0x4001206")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public AudioSource reelElectricity;

		[Token(Token = "0x4001207")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static RodAudio instance;

		[Token(Token = "0x4001208")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9EC578", Offset = "0x9EC578")]
		public AudioClip castReelSfx;

		[Token(Token = "0x4001209")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public AudioClip[] reelPingSfx;

		[Token(Token = "0x400120A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public AudioClip outOfBounds;

		[Token(Token = "0x400120B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public AudioClip rodReset;

		[Token(Token = "0x400120C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public AudioClip bobberSplash;

		[Token(Token = "0x400120D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public AudioClip castArm;

		[Token(Token = "0x400120E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public AudioClip castRelease;

		[Token(Token = "0x400120F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public AudioClip boostReady;

		[Token(Token = "0x4001210")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public AudioClip powerReelWindup;

		[Token(Token = "0x4001211")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public AudioClip powerReelEnd;

		[Token(Token = "0x4001212")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public AudioClip boostPiston;

		[Token(Token = "0x4001213")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public AudioClip fishHookSplash;

		[Token(Token = "0x4001214")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public HapticsClipSO fishHookSplashHaptics;

		[Token(Token = "0x4001215")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public AudioClip fishHookSplash2;

		[Token(Token = "0x4001216")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public HapticsClipSO fishHookSplash2Haptics;

		[Token(Token = "0x4001217")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public AudioClip[] splashSingle;

		[Token(Token = "0x4001218")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public AudioClip[] splashFlee;

		[Token(Token = "0x4001219")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public AudioClip splashFleeEnd;

		[Token(Token = "0x400121A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public HapticsClipSO[] splashSingleHaptics;

		[Token(Token = "0x400121B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public HapticsClipSO[] splashFleeHaptics;

		[Token(Token = "0x400121C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public AudioClip[] rodWhip;

		[Token(Token = "0x400121D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public HapticsClipSO[] rodWhipHaptics;

		[Token(Token = "0x400121E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public AudioClip[] castWhip;

		[Token(Token = "0x400121F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private int lastFishSplashSingle;

		[Token(Token = "0x4001220")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		private int lastFishSplashFlee;

		[Token(Token = "0x4001221")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		public AudioClip[] rodTipSplash;

		[Token(Token = "0x4001222")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		public AudioClip boostFail;

		[Token(Token = "0x4001223")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		public AudioClip runRageSplash;

		[Token(Token = "0x4001224")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		public AudioClip[] rodStretch;

		[Token(Token = "0x4001225")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		public AudioClip[] reelJump;

		[Token(Token = "0x4001226")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		public AudioClip reelLean;

		[Token(Token = "0x4001227")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		public AudioClip[] rodEquip;

		[Token(Token = "0x4001228")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		public AudioClip[] jumpOutSplash;

		[Token(Token = "0x4001229")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		public AudioClip[] jumpLandSplash;

		[Token(Token = "0x400122A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		public AudioClip[] bobberBite;

		[Token(Token = "0x400122B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		public AudioClip[] bobberBiteBig;

		[Token(Token = "0x400122C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		public AudioClip recoverSplashSmall;

		[Token(Token = "0x400122D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		public AudioClip recoverSplashMedium;

		[Token(Token = "0x400122E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		public AudioClip recoverSplashLarge;

		[Token(Token = "0x400122F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		public AudioClip recoverSplashXLarge;

		[Token(Token = "0x4001230")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		public AudioClip[] snapSplashes;

		[Token(Token = "0x4001231")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		public AudioClip releaseSplashSmall;

		[Token(Token = "0x4001232")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		public AudioClip releaseSplashLarge;

		[Token(Token = "0x4001233")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		public AudioClip splashFizz;

		[Token(Token = "0x4001234")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		public AudioClip reelWhine;

		[Token(Token = "0x4001235")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		public AudioClip[] zaps;

		[Token(Token = "0x4001236")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		public AudioClip hum;

		[Token(Token = "0x4001237")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		public AudioClip[] equipmentChange;

		[Token(Token = "0x4001238")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		public AudioClip lineStress;

		[Token(Token = "0x4001239")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		private int rodStretchIndex;

		[Token(Token = "0x400123A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E4")]
		private int reelJumpIndex;

		[Token(Token = "0x400123B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static bool playingFishFlee;

		[Token(Token = "0x6001086")]
		[Address(RVA = "0xC6D144", Offset = "0xC6D144", VA = "0xC6D144")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001087")]
		[Address(RVA = "0xC6D1B4", Offset = "0xC6D1B4", VA = "0xC6D1B4")]
		private void FishFlee()
		{
		}

		[Token(Token = "0x6001088")]
		[Address(RVA = "0xC6D29C", Offset = "0xC6D29C", VA = "0xC6D29C")]
		public static void Play(SfxRod sfx, FishTypeSO.FishScale size = FishTypeSO.FishScale.Small)
		{
		}

		[Token(Token = "0x6001089")]
		[Address(RVA = "0xC6EF38", Offset = "0xC6EF38", VA = "0xC6EF38")]
		public static void Play(SfxRod sfx, float pitchFloat)
		{
		}

		[Token(Token = "0x600108A")]
		[Address(RVA = "0xC697E8", Offset = "0xC697E8", VA = "0xC697E8")]
		public static void PlayAt(SfxRod sfx, Vector3 position, FishTypeSO.FishScale size = FishTypeSO.FishScale.Small)
		{
		}

		[Token(Token = "0x600108B")]
		[Address(RVA = "0xC6F014", Offset = "0xC6F014", VA = "0xC6F014")]
		public static void Stop()
		{
		}

		[Token(Token = "0x600108C")]
		[Address(RVA = "0xC6F188", Offset = "0xC6F188", VA = "0xC6F188")]
		public static void StopBobberAudio()
		{
		}

		[Token(Token = "0x600108D")]
		[Address(RVA = "0xC6F204", Offset = "0xC6F204", VA = "0xC6F204")]
		public static void ReelWhine(float tension)
		{
		}

		[Token(Token = "0x600108E")]
		[Address(RVA = "0xC6F10C", Offset = "0xC6F10C", VA = "0xC6F10C")]
		public static void ReelWhineStop()
		{
		}

		[Token(Token = "0x600108F")]
		[Address(RVA = "0xC6EE40", Offset = "0xC6EE40", VA = "0xC6EE40")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9F1AC0", Offset = "0x9F1AC0")]
		private IEnumerator LowerPitch()
		{
			return null;
		}

		[Token(Token = "0x6001090")]
		[Address(RVA = "0xC6EE24", Offset = "0xC6EE24", VA = "0xC6EE24")]
		private float map(float x, float in_min, float in_max, float out_min, float out_max)
		{
			return default(float);
		}

		[Token(Token = "0x6001091")]
		[Address(RVA = "0xC6EEBC", Offset = "0xC6EEBC", VA = "0xC6EEBC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9F1B24", Offset = "0x9F1B24")]
		private IEnumerator RaiseBoostAudioPitch()
		{
			return null;
		}

		[Token(Token = "0x6001092")]
		[Address(RVA = "0xC6F3E0", Offset = "0xC6F3E0", VA = "0xC6F3E0")]
		internal static void Stop(SfxRod lineStress)
		{
		}

		[Token(Token = "0x6001093")]
		[Address(RVA = "0xC6F45C", Offset = "0xC6F45C", VA = "0xC6F45C")]
		public RodAudio()
		{
		}
	}
	[Token(Token = "0x2000267")]
	public enum RodBendStatus
	{
		[Token(Token = "0x400123D")]
		Idle,
		[Token(Token = "0x400123E")]
		Tautness
	}
	[Token(Token = "0x2000268")]
	public class RodBender : MonoBehaviour
	{
		[Token(Token = "0x400123F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TMP_Text Debugtext;

		[Token(Token = "0x4001240")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Animator rodAnim;

		[Token(Token = "0x4001241")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform bendyGuide;

		[Token(Token = "0x4001242")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float minZRot;

		[Token(Token = "0x4001243")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float maxZRot;

		[Token(Token = "0x4001244")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform armature;

		[Token(Token = "0x4001245")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float largestDeflection;

		[Token(Token = "0x4001246")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float TensionForce;

		[Token(Token = "0x4001247")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Transform m_rodSecEnd;

		[Token(Token = "0x4001248")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Transform m_rodEndTrans;

		[Token(Token = "0x4001249")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Transform m_rodEndTrans2;

		[Token(Token = "0x400124A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Transform m_bobberTrans;

		[Token(Token = "0x400124B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float tensionForceOverride;

		[Token(Token = "0x400124C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static RodBender instance;

		[Token(Token = "0x400124D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Tween overrideTween;

		[Token(Token = "0x400124E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector3 preVecNorm;

		[Token(Token = "0x6001095")]
		[Address(RVA = "0xCDBF14", Offset = "0xCDBF14", VA = "0xCDBF14")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001096")]
		[Address(RVA = "0xCDBF6C", Offset = "0xCDBF6C", VA = "0xCDBF6C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001097")]
		[Address(RVA = "0xCDBFE4", Offset = "0xCDBFE4", VA = "0xCDBFE4")]
		public void Update()
		{
		}

		[Token(Token = "0x6001098")]
		[Address(RVA = "0xCDC30C", Offset = "0xCDC30C", VA = "0xCDC30C")]
		public static void ResetBender()
		{
		}

		[Token(Token = "0x6001099")]
		[Address(RVA = "0xCDC388", Offset = "0xCDC388", VA = "0xCDC388")]
		private RodBendStatus GetBendStatus()
		{
			return default(RodBendStatus);
		}

		[Token(Token = "0x600109A")]
		[Address(RVA = "0xCDC27C", Offset = "0xCDC27C", VA = "0xCDC27C")]
		private void UpdateRodAnimation(Vector3 outputV3)
		{
		}

		[Token(Token = "0x600109B")]
		[Address(RVA = "0xCDC400", Offset = "0xCDC400", VA = "0xCDC400")]
		private void showMaxMin()
		{
		}

		[Token(Token = "0x600109C")]
		[Address(RVA = "0xCDC4EC", Offset = "0xCDC4EC", VA = "0xCDC4EC")]
		private float map(float x, float in_min, float in_max, float out_min, float out_max)
		{
			return default(float);
		}

		[Token(Token = "0x600109D")]
		[Address(RVA = "0xCDC508", Offset = "0xCDC508", VA = "0xCDC508")]
		public static void SmallBite()
		{
		}

		[Token(Token = "0x600109E")]
		[Address(RVA = "0xCDC560", Offset = "0xCDC560", VA = "0xCDC560")]
		private void DoSmallBite()
		{
		}

		[Token(Token = "0x600109F")]
		[Address(RVA = "0xCDC6D4", Offset = "0xCDC6D4", VA = "0xCDC6D4")]
		public static void BigBite()
		{
		}

		[Token(Token = "0x60010A0")]
		[Address(RVA = "0xCDC72C", Offset = "0xCDC72C", VA = "0xCDC72C")]
		private void DoBigBite()
		{
		}

		[Token(Token = "0x60010A1")]
		[Address(RVA = "0xCDC8A0", Offset = "0xCDC8A0", VA = "0xCDC8A0")]
		private void AwaitPullup()
		{
		}

		[Token(Token = "0x60010A2")]
		[Address(RVA = "0xCDCA30", Offset = "0xCDCA30", VA = "0xCDCA30")]
		public static void StopAwaitPullup()
		{
		}

		[Token(Token = "0x60010A3")]
		[Address(RVA = "0xCDCAAC", Offset = "0xCDCAAC", VA = "0xCDCAAC")]
		public RodBender()
		{
		}

		[Token(Token = "0x60010A4")]
		[Address(RVA = "0xCDCABC", Offset = "0xCDCABC", VA = "0xCDCABC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F1B88", Offset = "0x9F1B88")]
		private float <DoSmallBite>b__25_0()
		{
			return default(float);
		}

		[Token(Token = "0x60010A5")]
		[Address(RVA = "0xCDCAC4", Offset = "0xCDCAC4", VA = "0xCDCAC4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F1B98", Offset = "0x9F1B98")]
		private void <DoSmallBite>b__25_1(float x)
		{
		}

		[Token(Token = "0x60010A6")]
		[Address(RVA = "0xCDCACC", Offset = "0xCDCACC", VA = "0xCDCACC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F1BA8", Offset = "0x9F1BA8")]
		private void <DoSmallBite>b__25_2()
		{
		}

		[Token(Token = "0x60010A7")]
		[Address(RVA = "0xCDCAD4", Offset = "0xCDCAD4", VA = "0xCDCAD4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F1BB8", Offset = "0x9F1BB8")]
		private float <DoBigBite>b__27_0()
		{
			return default(float);
		}

		[Token(Token = "0x60010A8")]
		[Address(RVA = "0xCDCADC", Offset = "0xCDCADC", VA = "0xCDCADC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F1BC8", Offset = "0x9F1BC8")]
		private void <DoBigBite>b__27_1(float x)
		{
		}

		[Token(Token = "0x60010A9")]
		[Address(RVA = "0xCDCAE4", Offset = "0xCDCAE4", VA = "0xCDCAE4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F1BD8", Offset = "0x9F1BD8")]
		private void <DoBigBite>b__27_2()
		{
		}

		[Token(Token = "0x60010AA")]
		[Address(RVA = "0xCDCAE8", Offset = "0xCDCAE8", VA = "0xCDCAE8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F1BE8", Offset = "0x9F1BE8")]
		private float <AwaitPullup>b__28_0()
		{
			return default(float);
		}

		[Token(Token = "0x60010AB")]
		[Address(RVA = "0xCDCAF0", Offset = "0xCDCAF0", VA = "0xCDCAF0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F1BF8", Offset = "0x9F1BF8")]
		private void <AwaitPullup>b__28_1(float x)
		{
		}

		[Token(Token = "0x60010AC")]
		[Address(RVA = "0xCDCAF8", Offset = "0xCDCAF8", VA = "0xCDCAF8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F1C08", Offset = "0x9F1C08")]
		private void <AwaitPullup>b__28_2()
		{
		}
	}
	[Token(Token = "0x2000269")]
	public enum CastPhase
	{
		[Token(Token = "0x4001250")]
		ready,
		[Token(Token = "0x4001251")]
		armed,
		[Token(Token = "0x4001252")]
		released,
		[Token(Token = "0x4001253")]
		inWater
	}
	[Token(Token = "0x200026A")]
	public class RodCast : MonoBehaviour, XRIDefaultInputActions.IXRILeftHandActions, XRIDefaultInputActions.IXRIRightHandActions
	{
		[Serializable]
		[Token(Token = "0x2000480")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E8308", Offset = "0x9E8308")]
		private sealed class <>c
		{
			[Token(Token = "0x4001A5A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001A5B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Action <>9__14_0;

			[Token(Token = "0x6001C5E")]
			[Address(RVA = "0xCE0698", Offset = "0xCE0698", VA = "0xCE0698")]
			public <>c()
			{
			}

			[Token(Token = "0x6001C5F")]
			[Address(RVA = "0xCE06A0", Offset = "0xCE06A0", VA = "0xCE06A0")]
			internal void <LostResetRod>b__14_0()
			{
			}
		}

		[Token(Token = "0x4001254")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private CastPhase cast;

		[Token(Token = "0x4001255")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float castSpeedMultiplier;

		[Token(Token = "0x4001256")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HapticsClipSO castHaptics;

		[Token(Token = "0x4001257")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static RodCast instance;

		[Token(Token = "0x4001258")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool isCastAllowed;

		[Token(Token = "0x17000177")]
		public static CastPhase Cast
		{
			[Token(Token = "0x60010AD")]
			[Address(RVA = "0xCDC3A4", Offset = "0xCDC3A4", VA = "0xCDC3A4")]
			get
			{
				return default(CastPhase);
			}
			[Token(Token = "0x60010AE")]
			[Address(RVA = "0xCDF530", Offset = "0xCDF530", VA = "0xCDF530")]
			set
			{
			}
		}

		[Token(Token = "0x60010AF")]
		[Address(RVA = "0xCDF590", Offset = "0xCDF590", VA = "0xCDF590")]
		private void Awake()
		{
		}

		[Token(Token = "0x60010B0")]
		[Address(RVA = "0xCDF5E8", Offset = "0xCDF5E8", VA = "0xCDF5E8", Slot = "32")]
		public void OnActivate(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x60010B1")]
		[Address(RVA = "0xCDF920", Offset = "0xCDF920", VA = "0xCDF920", Slot = "43")]
		public void OnReset(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x60010B2")]
		[Address(RVA = "0xCDFC84", Offset = "0xCDFC84", VA = "0xCDFC84", Slot = "45")]
		public void OnAutoReel(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x60010B3")]
		[Address(RVA = "0xCDF5EC", Offset = "0xCDF5EC", VA = "0xCDF5EC")]
		private void HandleCast(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x60010B4")]
		[Address(RVA = "0xCDFA34", Offset = "0xCDFA34", VA = "0xCDFA34")]
		public static void ResetRod(bool mute = false)
		{
		}

		[Token(Token = "0x60010B5")]
		[Address(RVA = "0xCE0350", Offset = "0xCE0350", VA = "0xCE0350")]
		public static void LostResetRod()
		{
		}

		[Token(Token = "0x60010B6")]
		[Address(RVA = "0xCE0034", Offset = "0xCE0034", VA = "0xCE0034")]
		private void PerformCastOut()
		{
		}

		[Token(Token = "0x60010B7")]
		[Address(RVA = "0xCE0470", Offset = "0xCE0470", VA = "0xCE0470")]
		private bool isRodTipUnderWater()
		{
			return default(bool);
		}

		[Token(Token = "0x60010B8")]
		[Address(RVA = "0xCE0524", Offset = "0xCE0524", VA = "0xCE0524")]
		public void AllowCast()
		{
		}

		[Token(Token = "0x60010B9")]
		[Address(RVA = "0xCE059C", Offset = "0xCE059C", VA = "0xCE059C")]
		public void DisallowCast()
		{
		}

		[Token(Token = "0x60010BA")]
		[Address(RVA = "0xCE05A4", Offset = "0xCE05A4", VA = "0xCE05A4", Slot = "34")]
		public void OnHapticDevice(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x60010BB")]
		[Address(RVA = "0xCE05A8", Offset = "0xCE05A8", VA = "0xCE05A8", Slot = "40")]
		public void OnMove(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x60010BC")]
		[Address(RVA = "0xCE05AC", Offset = "0xCE05AC", VA = "0xCE05AC", Slot = "29")]
		public void OnPosition(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x60010BD")]
		[Address(RVA = "0xCE05B0", Offset = "0xCE05B0", VA = "0xCE05B0", Slot = "41")]
		public void OnRotateAnchor(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x60010BE")]
		[Address(RVA = "0xCE05B4", Offset = "0xCE05B4", VA = "0xCE05B4", Slot = "30")]
		public void OnRotation(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x60010BF")]
		[Address(RVA = "0xCE05B8", Offset = "0xCE05B8", VA = "0xCE05B8", Slot = "31")]
		public void OnSelect(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x60010C0")]
		[Address(RVA = "0xCE05BC", Offset = "0xCE05BC", VA = "0xCE05BC", Slot = "36")]
		public void OnTeleportModeActivate(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x60010C1")]
		[Address(RVA = "0xCE05C0", Offset = "0xCE05C0", VA = "0xCE05C0", Slot = "37")]
		public void OnTeleportModeCancel(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x60010C2")]
		[Address(RVA = "0xCE05C4", Offset = "0xCE05C4", VA = "0xCE05C4", Slot = "35")]
		public void OnTeleportSelect(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x60010C3")]
		[Address(RVA = "0xCE05C8", Offset = "0xCE05C8", VA = "0xCE05C8", Slot = "42")]
		public void OnTranslateAnchor(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x60010C4")]
		[Address(RVA = "0xCE05CC", Offset = "0xCE05CC", VA = "0xCE05CC", Slot = "38")]
		public void OnTurn(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x60010C5")]
		[Address(RVA = "0xCE05D0", Offset = "0xCE05D0", VA = "0xCE05D0", Slot = "33")]
		public void OnUIPress(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x60010C6")]
		[Address(RVA = "0xCE05D4", Offset = "0xCE05D4", VA = "0xCE05D4", Slot = "49")]
		public void OnMenu(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x60010C7")]
		[Address(RVA = "0xCE05D8", Offset = "0xCE05D8", VA = "0xCE05D8", Slot = "46")]
		public void OnBoost(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x60010C8")]
		[Address(RVA = "0xCE05DC", Offset = "0xCE05DC", VA = "0xCE05DC", Slot = "47")]
		public void OnGrabHandle(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x60010C9")]
		[Address(RVA = "0xCE05E0", Offset = "0xCE05E0", VA = "0xCE05E0", Slot = "48")]
		public void OnEditorPause(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x60010CA")]
		[Address(RVA = "0xCE05E4", Offset = "0xCE05E4", VA = "0xCE05E4", Slot = "50")]
		public void OnPickup(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x60010CB")]
		[Address(RVA = "0xCE05E8", Offset = "0xCE05E8", VA = "0xCE05E8", Slot = "51")]
		public void OnDialogAdvance(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x60010CC")]
		[Address(RVA = "0xCE05EC", Offset = "0xCE05EC", VA = "0xCE05EC")]
		public void OnAnimateRightHand(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x60010CD")]
		[Address(RVA = "0xCE05F0", Offset = "0xCE05F0", VA = "0xCE05F0")]
		public void OnAnimateLeftHand(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x60010CE")]
		[Address(RVA = "0xCE05F4", Offset = "0xCE05F4", VA = "0xCE05F4", Slot = "26")]
		public void OnAnimateIndexLeft(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x60010CF")]
		[Address(RVA = "0xCE05F8", Offset = "0xCE05F8", VA = "0xCE05F8", Slot = "52")]
		public void OnAnimateIndexRight(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x60010D0")]
		[Address(RVA = "0xCE05FC", Offset = "0xCE05FC", VA = "0xCE05FC", Slot = "53")]
		public void OnAnimateFingersRight(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x60010D1")]
		[Address(RVA = "0xCE0600", Offset = "0xCE0600", VA = "0xCE0600", Slot = "54")]
		public void OnAnimateThumbRight(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x60010D2")]
		[Address(RVA = "0xCE0604", Offset = "0xCE0604", VA = "0xCE0604", Slot = "27")]
		public void OnAnimateFingersLeft(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x60010D3")]
		[Address(RVA = "0xCE0608", Offset = "0xCE0608", VA = "0xCE0608", Slot = "28")]
		public void OnAnimateThumbLeft(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x60010D4")]
		[Address(RVA = "0xCE060C", Offset = "0xCE060C", VA = "0xCE060C", Slot = "44")]
		public void OnSwitchRod(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x60010D5")]
		[Address(RVA = "0xCE0610", Offset = "0xCE0610", VA = "0xCE0610", Slot = "39")]
		public void OnThumbUp(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x60010D6")]
		[Address(RVA = "0xCE0614", Offset = "0xCE0614", VA = "0xCE0614")]
		public RodCast()
		{
		}
	}
	[Token(Token = "0x200026B")]
	public class RodFlick : MonoBehaviour
	{
		[Token(Token = "0x2000481")]
		public delegate void FlickAction(float force);

		[Token(Token = "0x4001259")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Vector3 lastFwd;

		[Token(Token = "0x400125A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float curAngleX;

		[Token(Token = "0x400125B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float angleDifference;

		[Token(Token = "0x400125C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float largestDifference;

		[Token(Token = "0x400125E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Transform controllerTransform;

		[Token(Token = "0x400125F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float flickThreshold;

		[Token(Token = "0x1400005B")]
		public static event FlickAction OnFlick
		{
			[Token(Token = "0x60010D7")]
			[Address(RVA = "0xCE0B58", Offset = "0xCE0B58", VA = "0xCE0B58")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F1C18", Offset = "0x9F1C18")]
			add
			{
			}
			[Token(Token = "0x60010D8")]
			[Address(RVA = "0xCE0C0C", Offset = "0xCE0C0C", VA = "0xCE0C0C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F1C28", Offset = "0x9F1C28")]
			remove
			{
			}
		}

		[Token(Token = "0x60010D9")]
		[Address(RVA = "0xCE0CC0", Offset = "0xCE0CC0", VA = "0xCE0CC0")]
		private void Update()
		{
		}

		[Token(Token = "0x60010DA")]
		[Address(RVA = "0xCE0EC4", Offset = "0xCE0EC4", VA = "0xCE0EC4")]
		public void AssignControllerTransform(Transform trns)
		{
		}

		[Token(Token = "0x60010DB")]
		[Address(RVA = "0xCE0CC4", Offset = "0xCE0CC4", VA = "0xCE0CC4")]
		private void DetectRodFlick()
		{
		}

		[Token(Token = "0x60010DC")]
		[Address(RVA = "0xCE0F74", Offset = "0xCE0F74", VA = "0xCE0F74")]
		private void Flick(float force)
		{
		}

		[Token(Token = "0x60010DD")]
		[Address(RVA = "0xCE12B0", Offset = "0xCE12B0", VA = "0xCE12B0")]
		public RodFlick()
		{
		}
	}
	[Token(Token = "0x200026C")]
	public class RodJerk : MonoBehaviour
	{
		[Token(Token = "0x2000482")]
		public delegate void JerkAction(float force);

		[Token(Token = "0x4001261")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private int smoothing;

		[Token(Token = "0x4001262")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float[] movedVals;

		[Token(Token = "0x4001263")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int smoothIndex;

		[Token(Token = "0x4001264")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float smoothedMovement;

		[Token(Token = "0x4001265")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 lastPosition;

		[Token(Token = "0x4001266")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9EC620", Offset = "0x9EC620")]
		private float triggerLevel;

		[Token(Token = "0x4001267")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool awaitReset;

		[Token(Token = "0x1400005C")]
		public static event JerkAction OnJerk
		{
			[Token(Token = "0x60010DE")]
			[Address(RVA = "0xCE136C", Offset = "0xCE136C", VA = "0xCE136C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F1C38", Offset = "0x9F1C38")]
			add
			{
			}
			[Token(Token = "0x60010DF")]
			[Address(RVA = "0xCE1420", Offset = "0xCE1420", VA = "0xCE1420")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F1C48", Offset = "0x9F1C48")]
			remove
			{
			}
		}

		[Token(Token = "0x60010E0")]
		[Address(RVA = "0xCE14D4", Offset = "0xCE14D4", VA = "0xCE14D4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60010E1")]
		[Address(RVA = "0xCE1558", Offset = "0xCE1558", VA = "0xCE1558")]
		private void Update()
		{
		}

		[Token(Token = "0x60010E2")]
		[Address(RVA = "0xCE16F8", Offset = "0xCE16F8", VA = "0xCE16F8")]
		private void DetectRodJerk()
		{
		}

		[Token(Token = "0x60010E3")]
		[Address(RVA = "0xCE1568", Offset = "0xCE1568", VA = "0xCE1568")]
		private void DetectReset()
		{
		}

		[Token(Token = "0x60010E4")]
		[Address(RVA = "0xCE189C", Offset = "0xCE189C", VA = "0xCE189C")]
		private void Jerk(float force)
		{
		}

		[Token(Token = "0x60010E5")]
		[Address(RVA = "0xCE1B70", Offset = "0xCE1B70", VA = "0xCE1B70")]
		public RodJerk()
		{
		}
	}
	[Token(Token = "0x200026D")]
	public class RodPickup : MonoBehaviour
	{
		[Token(Token = "0x2000483")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E8318", Offset = "0x9E8318")]
		private sealed class <>c__DisplayClass11_0
		{
			[Token(Token = "0x4001A5C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RodPickup <>4__this;

			[Token(Token = "0x4001A5D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public SelectEnterEventArgs args;

			[Token(Token = "0x6001C68")]
			[Address(RVA = "0xCE28DC", Offset = "0xCE28DC", VA = "0xCE28DC")]
			public <>c__DisplayClass11_0()
			{
			}

			[Token(Token = "0x6001C69")]
			[Address(RVA = "0xCE36EC", Offset = "0xCE36EC", VA = "0xCE36EC")]
			internal void <OnAttach>b__0()
			{
			}
		}

		[Token(Token = "0x4001268")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static RodPickup instance;

		[Token(Token = "0x4001269")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public XRRayInteractor rayInteractor;

		[Token(Token = "0x400126A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private XRBaseInteractable interactable;

		[Token(Token = "0x400126B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public XRBaseInteractable rodStandInteractable;

		[Token(Token = "0x400126C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private RodFlick rodFlick;

		[Token(Token = "0x400126D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private HoverEnterEventArgs allowRodPickupArgs;

		[Token(Token = "0x60010E6")]
		[Address(RVA = "0xCE2068", Offset = "0xCE2068", VA = "0xCE2068")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60010E7")]
		[Address(RVA = "0xCE21B0", Offset = "0xCE21B0", VA = "0xCE21B0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60010E8")]
		[Address(RVA = "0xCE2294", Offset = "0xCE2294", VA = "0xCE2294")]
		private void PickUpRod()
		{
		}

		[Token(Token = "0x60010E9")]
		[Address(RVA = "0xCE2734", Offset = "0xCE2734", VA = "0xCE2734")]
		public void AllowRodPickup(HoverEnterEventArgs args)
		{
		}

		[Token(Token = "0x60010EA")]
		[Address(RVA = "0xCE273C", Offset = "0xCE273C", VA = "0xCE273C")]
		public void CancelAllowRodPickup()
		{
		}

		[Token(Token = "0x60010EB")]
		[Address(RVA = "0xCE2748", Offset = "0xCE2748", VA = "0xCE2748")]
		public void OnAttach(SelectEnterEventArgs args)
		{
		}

		[Token(Token = "0x60010EC")]
		[Address(RVA = "0xCE28E4", Offset = "0xCE28E4", VA = "0xCE28E4")]
		private void CompleteNormalPickupRod(SelectEnterEventArgs args)
		{
		}

		[Token(Token = "0x60010ED")]
		[Address(RVA = "0xCE2D9C", Offset = "0xCE2D9C", VA = "0xCE2D9C")]
		public void AutoPickupRod(FpFish fish)
		{
		}

		[Token(Token = "0x60010EE")]
		[Address(RVA = "0xCE2FF8", Offset = "0xCE2FF8", VA = "0xCE2FF8")]
		private void CompleteAutoPickupRod()
		{
		}

		[Token(Token = "0x60010EF")]
		[Address(RVA = "0xCE33B0", Offset = "0xCE33B0", VA = "0xCE33B0")]
		private void AutoArmCast()
		{
		}

		[Token(Token = "0x60010F0")]
		[Address(RVA = "0xCDFF2C", Offset = "0xCDFF2C", VA = "0xCDFF2C")]
		public static void CancelAutoArmCast()
		{
		}

		[Token(Token = "0x60010F1")]
		[Address(RVA = "0xCE2CE4", Offset = "0xCE2CE4", VA = "0xCE2CE4")]
		private Handside GetHandSide(SelectEnterEventArgs args)
		{
			return default(Handside);
		}

		[Token(Token = "0x60010F2")]
		[Address(RVA = "0xCE2528", Offset = "0xCE2528", VA = "0xCE2528")]
		private Handside GetHandSide(HoverEnterEventArgs args)
		{
			return default(Handside);
		}

		[Token(Token = "0x60010F3")]
		[Address(RVA = "0xCE34B4", Offset = "0xCE34B4", VA = "0xCE34B4")]
		private void EndRodPickupTimer()
		{
		}

		[Token(Token = "0x60010F4")]
		[Address(RVA = "0xCE3524", Offset = "0xCE3524", VA = "0xCE3524")]
		public void ResetRayInteractor()
		{
		}

		[Token(Token = "0x60010F5")]
		[Address(RVA = "0xCE36E0", Offset = "0xCE36E0", VA = "0xCE36E0")]
		public RodPickup()
		{
		}

		[Token(Token = "0x60010F6")]
		[Address(RVA = "0xCE36E8", Offset = "0xCE36E8", VA = "0xCE36E8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F1C58", Offset = "0x9F1C58")]
		private void <AutoPickupRod>b__13_0()
		{
		}
	}
	[Token(Token = "0x200026E")]
	public class RodReel : MonoBehaviour, XRIDefaultInputActions.IXRILeftHandActions, XRIDefaultInputActions.IXRIRightHandActions
	{
		[Token(Token = "0x2000484")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E8328", Offset = "0x9E8328")]
		private sealed class <ReelLightning>d__59 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001A5E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001A5F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001A60")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public RodReel <>4__this;

			[Token(Token = "0x170002B3")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001C6D")]
				[Address(RVA = "0xCE5664", Offset = "0xCE5664", VA = "0xCE5664", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002B4")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001C6F")]
				[Address(RVA = "0xCE56CC", Offset = "0xCE56CC", VA = "0xCE56CC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001C6A")]
			[Address(RVA = "0xCE49B4", Offset = "0xCE49B4", VA = "0xCE49B4")]
			[DebuggerHidden]
			public <ReelLightning>d__59(int <>1__state)
			{
			}

			[Token(Token = "0x6001C6B")]
			[Address(RVA = "0xCE54A0", Offset = "0xCE54A0", VA = "0xCE54A0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001C6C")]
			[Address(RVA = "0xCE54A4", Offset = "0xCE54A4", VA = "0xCE54A4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001C6E")]
			[Address(RVA = "0xCE566C", Offset = "0xCE566C", VA = "0xCE566C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000485")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E8338", Offset = "0x9E8338")]
		private sealed class <HandFacesCrank>d__62 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001A61")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001A62")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001A63")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public RodReel <>4__this;

			[Token(Token = "0x170002B5")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001C73")]
				[Address(RVA = "0xCE5430", Offset = "0xCE5430", VA = "0xCE5430", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002B6")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001C75")]
				[Address(RVA = "0xCE5498", Offset = "0xCE5498", VA = "0xCE5498", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001C70")]
			[Address(RVA = "0xCE4D74", Offset = "0xCE4D74", VA = "0xCE4D74")]
			[DebuggerHidden]
			public <HandFacesCrank>d__62(int <>1__state)
			{
			}

			[Token(Token = "0x6001C71")]
			[Address(RVA = "0xCE52CC", Offset = "0xCE52CC", VA = "0xCE52CC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001C72")]
			[Address(RVA = "0xCE52D0", Offset = "0xCE52D0", VA = "0xCE52D0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001C74")]
			[Address(RVA = "0xCE5438", Offset = "0xCE5438", VA = "0xCE5438", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400126E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static RodReel instance;

		[Token(Token = "0x400126F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject reelCrank;

		[Token(Token = "0x4001270")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform handPosition;

		[Token(Token = "0x4001271")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ReelSimulator reelSimulator;

		[Token(Token = "0x4001272")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly float maxVelo;

		[Token(Token = "0x4001273")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float reelMaxVelo;

		[Token(Token = "0x4001274")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject AutoReelTag;

		[Token(Token = "0x4001275")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool debug;

		[Token(Token = "0x4001276")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Collider rodStandCollider;

		[Token(Token = "0x4001277")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Transform reel;

		[Token(Token = "0x4001278")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9EC640", Offset = "0x9EC640")]
		public LightningBoltScript reelLightningScr;

		[Token(Token = "0x4001279")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public GameObject reelLightning;

		[Token(Token = "0x400127A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Transform lightningPointA;

		[Token(Token = "0x400127B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Transform lightningPointB;

		[Token(Token = "0x400127C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public GameObject reelPowerInputL;

		[Token(Token = "0x400127D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public GameObject reelPowerInputR;

		[Token(Token = "0x400127E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Transform powerInputPointL;

		[Token(Token = "0x400127F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public Transform powerInputPointR;

		[Token(Token = "0x4001280")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public float maxLineLength;

		[Token(Token = "0x4001281")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public bool isReeling;

		[Token(Token = "0x4001282")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private float lastXRot;

		[Token(Token = "0x4001283")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		[SerializeField]
		private Handside reelSide;

		[Token(Token = "0x4001284")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private float crankVelo;

		[Token(Token = "0x4001285")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private float maxCrankVelo;

		[Token(Token = "0x4001286")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Transform reelingHandParent;

		[Token(Token = "0x4001287")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private Transform reelingHand;

		[Token(Token = "0x4001288")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private GameObject reelingHandVfxStart;

		[Token(Token = "0x4001289")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public GameObject reelsideVfxStart;

		[Token(Token = "0x400128A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private Transform powerInput;

		[Token(Token = "0x400128B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private GameObject powerModel;

		[Token(Token = "0x400128C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private float allowedHandReelDistance;

		[Token(Token = "0x400128D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private bool handWentOutOfRange;

		[Token(Token = "0x400128E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE5")]
		private bool lastIsReeling;

		[Token(Token = "0x400128F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private float lastPingTime;

		[Token(Token = "0x4001290")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		private float pingInterval;

		[Token(Token = "0x4001291")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private bool reelInMgStarted;

		[Token(Token = "0x4001292")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		private float reelingTimer;

		[Token(Token = "0x4001293")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private float hapticsFishScale;

		[Token(Token = "0x17000178")]
		public static float CrankVelo
		{
			[Token(Token = "0x60010F7")]
			[Address(RVA = "0xCE370C", Offset = "0xCE370C", VA = "0xCE370C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000179")]
		public float ReelingTimer
		{
			[Token(Token = "0x60010F8")]
			[Address(RVA = "0xCE3768", Offset = "0xCE3768", VA = "0xCE3768")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700017A")]
		public static float HapticsFishScale
		{
			[Token(Token = "0x60010F9")]
			[Address(RVA = "0xCE3770", Offset = "0xCE3770", VA = "0xCE3770")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x60010FA")]
		[Address(RVA = "0xCE37CC", Offset = "0xCE37CC", VA = "0xCE37CC")]
		private void Awake()
		{
		}

		[Token(Token = "0x60010FB")]
		[Address(RVA = "0xCE38BC", Offset = "0xCE38BC", VA = "0xCE38BC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60010FC")]
		[Address(RVA = "0xCE39F8", Offset = "0xCE39F8", VA = "0xCE39F8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60010FD")]
		[Address(RVA = "0xCE3B34", Offset = "0xCE3B34", VA = "0xCE3B34")]
		private void Update()
		{
		}

		[Token(Token = "0x60010FE")]
		[Address(RVA = "0xCE3FF0", Offset = "0xCE3FF0", VA = "0xCE3FF0")]
		private void BobberEnteredWater()
		{
		}

		[Token(Token = "0x60010FF")]
		[Address(RVA = "0xCE4154", Offset = "0xCE4154", VA = "0xCE4154", Slot = "31")]
		public void OnSelect(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x6001100")]
		[Address(RVA = "0xCE41E4", Offset = "0xCE41E4", VA = "0xCE41E4")]
		private void PlrSettingChanged(PlayerSetting setting)
		{
		}

		[Token(Token = "0x6001101")]
		[Address(RVA = "0xCE4158", Offset = "0xCE4158", VA = "0xCE4158")]
		private void HandleGrab(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x6001102")]
		[Address(RVA = "0xCE4344", Offset = "0xCE4344", VA = "0xCE4344")]
		private void GrabCrank(Handside side)
		{
		}

		[Token(Token = "0x6001103")]
		[Address(RVA = "0xCE477C", Offset = "0xCE477C", VA = "0xCE477C")]
		public void ForceReleaseCrank()
		{
		}

		[Token(Token = "0x6001104")]
		[Address(RVA = "0xCE4504", Offset = "0xCE4504", VA = "0xCE4504")]
		private void ReleaseCrank(Handside side)
		{
		}

		[Token(Token = "0x6001105")]
		[Address(RVA = "0xCE4594", Offset = "0xCE4594", VA = "0xCE4594")]
		private void SetSide(Handside side)
		{
		}

		[Token(Token = "0x6001106")]
		[Address(RVA = "0xCE4858", Offset = "0xCE4858", VA = "0xCE4858")]
		private bool CheckHandReelDistance()
		{
			return default(bool);
		}

		[Token(Token = "0x6001107")]
		[Address(RVA = "0xCE46B8", Offset = "0xCE46B8", VA = "0xCE46B8")]
		private void StartReelLightning()
		{
		}

		[Token(Token = "0x6001108")]
		[Address(RVA = "0xCE024C", Offset = "0xCE024C", VA = "0xCE024C")]
		public void StopReelLightning()
		{
		}

		[Token(Token = "0x6001109")]
		[Address(RVA = "0xCE4938", Offset = "0xCE4938", VA = "0xCE4938")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9F1C68", Offset = "0x9F1C68")]
		private IEnumerator ReelLightning()
		{
			return null;
		}

		[Token(Token = "0x600110A")]
		[Address(RVA = "0xCE49E0", Offset = "0xCE49E0", VA = "0xCE49E0")]
		private void AttachHandToCrank(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x600110B")]
		[Address(RVA = "0xCE4C3C", Offset = "0xCE4C3C", VA = "0xCE4C3C")]
		private void DetachHandFromCrank()
		{
		}

		[Token(Token = "0x600110C")]
		[Address(RVA = "0xCE4BC0", Offset = "0xCE4BC0", VA = "0xCE4BC0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9F1CCC", Offset = "0x9F1CCC")]
		private IEnumerator HandFacesCrank()
		{
			return null;
		}

		[Token(Token = "0x600110D")]
		[Address(RVA = "0xCE4DA0", Offset = "0xCE4DA0", VA = "0xCE4DA0")]
		private bool isTickReeling()
		{
			return default(bool);
		}

		[Token(Token = "0x600110E")]
		[Address(RVA = "0xCE4E70", Offset = "0xCE4E70", VA = "0xCE4E70")]
		public void UpdateTension(float OutputVel)
		{
		}

		[Token(Token = "0x600110F")]
		[Address(RVA = "0xCE3FF4", Offset = "0xCE3FF4", VA = "0xCE3FF4")]
		public void SetFishScaleMult()
		{
		}

		[Token(Token = "0x6001110")]
		[Address(RVA = "0xCE4F84", Offset = "0xCE4F84", VA = "0xCE4F84")]
		private void PerformReel()
		{
		}

		[Token(Token = "0x6001111")]
		[Address(RVA = "0xCE3EE4", Offset = "0xCE3EE4", VA = "0xCE3EE4")]
		public void ResistHaptic()
		{
		}

		[Token(Token = "0x6001112")]
		[Address(RVA = "0xCE25E0", Offset = "0xCE25E0", VA = "0xCE25E0")]
		public void SetReelModelSide()
		{
		}

		[Token(Token = "0x6001113")]
		[Address(RVA = "0xCE51EC", Offset = "0xCE51EC", VA = "0xCE51EC")]
		public bool CheckIsReelingValueChanged()
		{
			return default(bool);
		}

		[Token(Token = "0x6001114")]
		[Address(RVA = "0xCE42C0", Offset = "0xCE42C0", VA = "0xCE42C0")]
		public Handside GetReelSide(InputAction.CallbackContext context)
		{
			return default(Handside);
		}

		[Token(Token = "0x6001115")]
		[Address(RVA = "0xCE520C", Offset = "0xCE520C", VA = "0xCE520C")]
		private void EventHub_OnReelInMinigameStarted()
		{
		}

		[Token(Token = "0x6001116")]
		[Address(RVA = "0xCE521C", Offset = "0xCE521C", VA = "0xCE521C")]
		private void EventHub_OnFishCaught(FpFish fish, bool isCheating = false)
		{
		}

		[Token(Token = "0x6001117")]
		[Address(RVA = "0xCE5224", Offset = "0xCE5224", VA = "0xCE5224", Slot = "43")]
		public void OnReset(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x6001118")]
		[Address(RVA = "0xCE5228", Offset = "0xCE5228", VA = "0xCE5228", Slot = "32")]
		public void OnActivate(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x6001119")]
		[Address(RVA = "0xCE522C", Offset = "0xCE522C", VA = "0xCE522C", Slot = "34")]
		public void OnHapticDevice(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x600111A")]
		[Address(RVA = "0xCE5230", Offset = "0xCE5230", VA = "0xCE5230", Slot = "40")]
		public void OnMove(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x600111B")]
		[Address(RVA = "0xCE5234", Offset = "0xCE5234", VA = "0xCE5234", Slot = "29")]
		public void OnPosition(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x600111C")]
		[Address(RVA = "0xCE5238", Offset = "0xCE5238", VA = "0xCE5238", Slot = "41")]
		public void OnRotateAnchor(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x600111D")]
		[Address(RVA = "0xCE523C", Offset = "0xCE523C", VA = "0xCE523C", Slot = "30")]
		public void OnRotation(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x600111E")]
		[Address(RVA = "0xCE5240", Offset = "0xCE5240", VA = "0xCE5240", Slot = "36")]
		public void OnTeleportModeActivate(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x600111F")]
		[Address(RVA = "0xCE5244", Offset = "0xCE5244", VA = "0xCE5244", Slot = "37")]
		public void OnTeleportModeCancel(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x6001120")]
		[Address(RVA = "0xCE5248", Offset = "0xCE5248", VA = "0xCE5248", Slot = "35")]
		public void OnTeleportSelect(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x6001121")]
		[Address(RVA = "0xCE524C", Offset = "0xCE524C", VA = "0xCE524C", Slot = "42")]
		public void OnTranslateAnchor(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x6001122")]
		[Address(RVA = "0xCE5250", Offset = "0xCE5250", VA = "0xCE5250", Slot = "38")]
		public void OnTurn(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x6001123")]
		[Address(RVA = "0xCE5254", Offset = "0xCE5254", VA = "0xCE5254", Slot = "33")]
		public void OnUIPress(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x6001124")]
		[Address(RVA = "0xCE5258", Offset = "0xCE5258", VA = "0xCE5258", Slot = "45")]
		public void OnAutoReel(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x6001125")]
		[Address(RVA = "0xCE525C", Offset = "0xCE525C", VA = "0xCE525C", Slot = "49")]
		public void OnMenu(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x6001126")]
		[Address(RVA = "0xCE5260", Offset = "0xCE5260", VA = "0xCE5260", Slot = "46")]
		public void OnBoost(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x6001127")]
		[Address(RVA = "0xCE5264", Offset = "0xCE5264", VA = "0xCE5264", Slot = "47")]
		public void OnGrabHandle(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x6001128")]
		[Address(RVA = "0xCE5268", Offset = "0xCE5268", VA = "0xCE5268", Slot = "48")]
		public void OnEditorPause(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x6001129")]
		[Address(RVA = "0xCE526C", Offset = "0xCE526C", VA = "0xCE526C", Slot = "50")]
		public void OnPickup(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x600112A")]
		[Address(RVA = "0xCE5270", Offset = "0xCE5270", VA = "0xCE5270", Slot = "44")]
		public void OnSwitchRod(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x600112B")]
		[Address(RVA = "0xCE5274", Offset = "0xCE5274", VA = "0xCE5274", Slot = "51")]
		public void OnDialogAdvance(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x600112C")]
		[Address(RVA = "0xCE5278", Offset = "0xCE5278", VA = "0xCE5278")]
		public void OnAnimateRightHand(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x600112D")]
		[Address(RVA = "0xCE527C", Offset = "0xCE527C", VA = "0xCE527C")]
		public void OnAnimateLeftHand(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x600112E")]
		[Address(RVA = "0xCE5280", Offset = "0xCE5280", VA = "0xCE5280", Slot = "26")]
		public void OnAnimateIndexLeft(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x600112F")]
		[Address(RVA = "0xCE5284", Offset = "0xCE5284", VA = "0xCE5284", Slot = "52")]
		public void OnAnimateIndexRight(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x6001130")]
		[Address(RVA = "0xCE5288", Offset = "0xCE5288", VA = "0xCE5288", Slot = "53")]
		public void OnAnimateFingersRight(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x6001131")]
		[Address(RVA = "0xCE528C", Offset = "0xCE528C", VA = "0xCE528C", Slot = "54")]
		public void OnAnimateThumbRight(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x6001132")]
		[Address(RVA = "0xCE5290", Offset = "0xCE5290", VA = "0xCE5290", Slot = "27")]
		public void OnAnimateFingersLeft(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x6001133")]
		[Address(RVA = "0xCE5294", Offset = "0xCE5294", VA = "0xCE5294", Slot = "28")]
		public void OnAnimateThumbLeft(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x6001134")]
		[Address(RVA = "0xCE5298", Offset = "0xCE5298", VA = "0xCE5298", Slot = "39")]
		public void OnThumbUp(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x6001135")]
		[Address(RVA = "0xCE529C", Offset = "0xCE529C", VA = "0xCE529C")]
		public RodReel()
		{
		}
	}
	[Token(Token = "0x200026F")]
	public class RodStand : MonoBehaviour
	{
		[Token(Token = "0x4001294")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static RodStand instance;

		[Token(Token = "0x4001295")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform rod;

		[Token(Token = "0x4001296")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Vector3 rodPosInStand;

		[Token(Token = "0x4001297")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Vector3 rodRotInStand;

		[Token(Token = "0x4001298")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Transform rodOriginalParent;

		[Token(Token = "0x4001299")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private XRBaseInteractable interactable;

		[Token(Token = "0x400129A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public XRBaseInteractable rodInteractable;

		[Token(Token = "0x400129B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public RodFlick rodFlick;

		[Token(Token = "0x400129C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public bool isInStand;

		[Token(Token = "0x400129D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public GameObject socketRodModel;

		[Token(Token = "0x400129E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public bool rodHover;

		[Token(Token = "0x400129F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
		public bool wasPickingUpRod;

		[Token(Token = "0x6001136")]
		[Address(RVA = "0xCE5C70", Offset = "0xCE5C70", VA = "0xCE5C70")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001137")]
		[Address(RVA = "0xCE5CC8", Offset = "0xCE5CC8", VA = "0xCE5CC8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001138")]
		[Address(RVA = "0xCE5D8C", Offset = "0xCE5D8C", VA = "0xCE5D8C")]
		public void OnSelect(SelectEnterEventArgs args)
		{
		}

		[Token(Token = "0x6001139")]
		[Address(RVA = "0xCDFD84", Offset = "0xCDFD84", VA = "0xCDFD84")]
		public void ReturnRodToStand(bool allowInteraction = true)
		{
		}

		[Token(Token = "0x600113A")]
		[Address(RVA = "0xCE5D94", Offset = "0xCE5D94", VA = "0xCE5D94")]
		private void SetRodInteractable(bool state)
		{
		}

		[Token(Token = "0x600113B")]
		[Address(RVA = "0xCE5DE8", Offset = "0xCE5DE8", VA = "0xCE5DE8")]
		public void AllowPickupRod()
		{
		}

		[Token(Token = "0x600113C")]
		[Address(RVA = "0xCE33A8", Offset = "0xCE33A8", VA = "0xCE33A8")]
		public void DisallowPickupRod()
		{
		}

		[Token(Token = "0x600113D")]
		[Address(RVA = "0xCE5DF0", Offset = "0xCE5DF0", VA = "0xCE5DF0")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x600113E")]
		[Address(RVA = "0xCE5E90", Offset = "0xCE5E90", VA = "0xCE5E90")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x600113F")]
		[Address(RVA = "0xCE5F18", Offset = "0xCE5F18", VA = "0xCE5F18")]
		public RodStand()
		{
		}
	}
	[Token(Token = "0x2000270")]
	public class SceneLoadButton : MonoBehaviour
	{
		[Token(Token = "0x40012A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int sceneNum;

		[Token(Token = "0x40012A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string sceneName;

		[Token(Token = "0x6001140")]
		[Address(RVA = "0xCE7594", Offset = "0xCE7594", VA = "0xCE7594")]
		public void OnClick()
		{
		}

		[Token(Token = "0x6001141")]
		[Address(RVA = "0xCE76F8", Offset = "0xCE76F8", VA = "0xCE76F8")]
		public SceneLoadButton()
		{
		}
	}
	[Token(Token = "0x2000271")]
	[ExecuteInEditMode]
	public class SceneLoader : MonoBehaviour
	{
		[Token(Token = "0x2000486")]
		public delegate void HideHandsEvent();

		[Token(Token = "0x2000487")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E8348", Offset = "0x9E8348")]
		private sealed class <>c__DisplayClass34_0
		{
			[Token(Token = "0x4001A64")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int sceneNum;

			[Token(Token = "0x6001C7A")]
			[Address(RVA = "0xCEC3A0", Offset = "0xCEC3A0", VA = "0xCEC3A0")]
			public <>c__DisplayClass34_0()
			{
			}

			[Token(Token = "0x6001C7B")]
			[Address(RVA = "0xCEC7B0", Offset = "0xCEC7B0", VA = "0xCEC7B0")]
			internal void <loadSceneNormal>b__0()
			{
			}
		}

		[Token(Token = "0x2000488")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E8358", Offset = "0x9E8358")]
		private sealed class <LoadSceneAsync>d__35 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001A65")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001A66")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001A67")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SceneLoader <>4__this;

			[Token(Token = "0x4001A68")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public int sceneNum;

			[Token(Token = "0x170002B7")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001C7F")]
				[Address(RVA = "0xCECACC", Offset = "0xCECACC", VA = "0xCECACC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002B8")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001C81")]
				[Address(RVA = "0xCECB34", Offset = "0xCECB34", VA = "0xCECB34", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001C7C")]
			[Address(RVA = "0xCEC3A8", Offset = "0xCEC3A8", VA = "0xCEC3A8")]
			[DebuggerHidden]
			public <LoadSceneAsync>d__35(int <>1__state)
			{
			}

			[Token(Token = "0x6001C7D")]
			[Address(RVA = "0xCEC900", Offset = "0xCEC900", VA = "0xCEC900", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001C7E")]
			[Address(RVA = "0xCEC904", Offset = "0xCEC904", VA = "0xCEC904", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001C80")]
			[Address(RVA = "0xCECAD4", Offset = "0xCECAD4", VA = "0xCECAD4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000489")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E8368", Offset = "0x9E8368")]
		private sealed class <>c__DisplayClass36_0
		{
			[Token(Token = "0x4001A69")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SceneLoader <>4__this;

			[Token(Token = "0x4001A6A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public bool isNewGame;

			[Token(Token = "0x6001C82")]
			[Address(RVA = "0xCEC81C", Offset = "0xCEC81C", VA = "0xCEC81C")]
			public <>c__DisplayClass36_0()
			{
			}

			[Token(Token = "0x6001C83")]
			[Address(RVA = "0xCEC824", Offset = "0xCEC824", VA = "0xCEC824")]
			internal void <ShowLoadingScreen>b__0()
			{
			}

			[Token(Token = "0x6001C84")]
			[Address(RVA = "0xCEC8D8", Offset = "0xCEC8D8", VA = "0xCEC8D8")]
			internal bool <ShowLoadingScreen>b__1()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x200048A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E8378", Offset = "0x9E8378")]
		private sealed class <ShowLoadingScreen>d__36 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001A6B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001A6C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001A6D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SceneLoader <>4__this;

			[Token(Token = "0x4001A6E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool isNewGame;

			[Token(Token = "0x170002B9")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001C88")]
				[Address(RVA = "0xCED3AC", Offset = "0xCED3AC", VA = "0xCED3AC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002BA")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001C8A")]
				[Address(RVA = "0xCED414", Offset = "0xCED414", VA = "0xCED414", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001C85")]
			[Address(RVA = "0xCEC464", Offset = "0xCEC464", VA = "0xCEC464")]
			[DebuggerHidden]
			public <ShowLoadingScreen>d__36(int <>1__state)
			{
			}

			[Token(Token = "0x6001C86")]
			[Address(RVA = "0xCECDF0", Offset = "0xCECDF0", VA = "0xCECDF0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001C87")]
			[Address(RVA = "0xCECDF4", Offset = "0xCECDF4", VA = "0xCECDF4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001C89")]
			[Address(RVA = "0xCED3B4", Offset = "0xCED3B4", VA = "0xCED3B4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200048B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E8388", Offset = "0x9E8388")]
		private sealed class <PerformAsyncLoadingScene>d__38 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001A6F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001A70")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001A71")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SceneLoader <>4__this;

			[Token(Token = "0x170002BB")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001C8E")]
				[Address(RVA = "0xCECBD0", Offset = "0xCECBD0", VA = "0xCECBD0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002BC")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001C90")]
				[Address(RVA = "0xCECC38", Offset = "0xCECC38", VA = "0xCECC38", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001C8B")]
			[Address(RVA = "0xCEC53C", Offset = "0xCEC53C", VA = "0xCEC53C")]
			[DebuggerHidden]
			public <PerformAsyncLoadingScene>d__38(int <>1__state)
			{
			}

			[Token(Token = "0x6001C8C")]
			[Address(RVA = "0xCECB3C", Offset = "0xCECB3C", VA = "0xCECB3C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001C8D")]
			[Address(RVA = "0xCECB40", Offset = "0xCECB40", VA = "0xCECB40", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001C8F")]
			[Address(RVA = "0xCECBD8", Offset = "0xCECBD8", VA = "0xCECBD8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200048C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E8398", Offset = "0x9E8398")]
		private sealed class <PerformHoldingSkip>d__41 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001A72")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001A73")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001A74")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SceneLoader <>4__this;

			[Token(Token = "0x4001A75")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <counter>5__2;

			[Token(Token = "0x170002BD")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001C94")]
				[Address(RVA = "0xCECD80", Offset = "0xCECD80", VA = "0xCECD80", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002BE")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001C96")]
				[Address(RVA = "0xCECDE8", Offset = "0xCECDE8", VA = "0xCECDE8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001C91")]
			[Address(RVA = "0xCEC680", Offset = "0xCEC680", VA = "0xCEC680")]
			[DebuggerHidden]
			public <PerformHoldingSkip>d__41(int <>1__state)
			{
			}

			[Token(Token = "0x6001C92")]
			[Address(RVA = "0xCECC40", Offset = "0xCECC40", VA = "0xCECC40", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001C93")]
			[Address(RVA = "0xCECC44", Offset = "0xCECC44", VA = "0xCECC44", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001C95")]
			[Address(RVA = "0xCECD88", Offset = "0xCECD88", VA = "0xCECD88", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40012A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool isMainMenu;

		[Token(Token = "0x40012A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		public List<string> Scene_Name;

		[Token(Token = "0x40012A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private XRRayInteractor leftRay;

		[Token(Token = "0x40012A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private XRRayInteractor rightRay;

		[Token(Token = "0x40012A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static SceneLoader instance;

		[Token(Token = "0x40012A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject loadingScreen;

		[Token(Token = "0x40012A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public SpriteRenderer loadingScreenImage;

		[Token(Token = "0x40012A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Transform xrRig;

		[Token(Token = "0x40012AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Material loadingScreenSkybox;

		[Token(Token = "0x40012AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float loadingScreenRenderScale;

		[Token(Token = "0x40012AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float HoldTimer;

		[Token(Token = "0x40012AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Image HoldingBar;

		[Token(Token = "0x40012AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public RawImage StoryVideoImage;

		[Token(Token = "0x40012AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool sceneIsLoading;

		[Token(Token = "0x40012B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		private bool sceneIsFadingOut;

		[Token(Token = "0x40012B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x72")]
		private bool isNewGame;

		[Token(Token = "0x40012B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x73")]
		private bool introIsPlaying;

		[Token(Token = "0x40012B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public VideoPlayer player;

		[Token(Token = "0x40012B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private IEnumerator holdingCoroutine;

		[Token(Token = "0x40012B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private int cache_sceneNum;

		[Token(Token = "0x40012B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private AsyncOperation asyncLoad;

		[Token(Token = "0x40012B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public VideoClip[] introVideos;

		[Token(Token = "0x1400005D")]
		public static event HideHandsEvent HideHands
		{
			[Token(Token = "0x6001142")]
			[Address(RVA = "0xCEBC80", Offset = "0xCEBC80", VA = "0xCEBC80")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F1D30", Offset = "0x9F1D30")]
			add
			{
			}
			[Token(Token = "0x6001143")]
			[Address(RVA = "0xCEBD38", Offset = "0xCEBD38", VA = "0xCEBD38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F1D40", Offset = "0x9F1D40")]
			remove
			{
			}
		}

		[Token(Token = "0x6001144")]
		[Address(RVA = "0xCEBDF0", Offset = "0xCEBDF0", VA = "0xCEBDF0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001145")]
		[Address(RVA = "0xCEBE48", Offset = "0xCEBE48", VA = "0xCEBE48")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001146")]
		[Address(RVA = "0xCEBF28", Offset = "0xCEBF28", VA = "0xCEBF28")]
		public void Player_prepareCompleted(VideoPlayer source)
		{
		}

		[Token(Token = "0x6001147")]
		[Address(RVA = "0xCEBFB4", Offset = "0xCEBFB4", VA = "0xCEBFB4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001148")]
		[Address(RVA = "0xCE75D8", Offset = "0xCE75D8", VA = "0xCE75D8")]
		public static void Load(int sceneNum, bool newGame = false)
		{
		}

		[Token(Token = "0x6001149")]
		[Address(RVA = "0xCE7698", Offset = "0xCE7698", VA = "0xCE7698")]
		public static void Load(string sceneName)
		{
		}

		[Token(Token = "0x600114A")]
		[Address(RVA = "0xCEC0D0", Offset = "0xCEC0D0", VA = "0xCEC0D0")]
		public void LoadScene(int sceneNum)
		{
		}

		[Token(Token = "0x600114B")]
		[Address(RVA = "0xCEC128", Offset = "0xCEC128", VA = "0xCEC128")]
		public void LoadScene(string sceneName)
		{
		}

		[Token(Token = "0x600114C")]
		[Address(RVA = "0xCEC190", Offset = "0xCEC190", VA = "0xCEC190")]
		private void loadSceneNormal(int sceneNum)
		{
		}

		[Token(Token = "0x600114D")]
		[Address(RVA = "0xCEC314", Offset = "0xCEC314", VA = "0xCEC314")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9F1D50", Offset = "0x9F1D50")]
		private IEnumerator LoadSceneAsync(int sceneNum)
		{
			return null;
		}

		[Token(Token = "0x600114E")]
		[Address(RVA = "0xCEC3D4", Offset = "0xCEC3D4", VA = "0xCEC3D4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9F1DB4", Offset = "0x9F1DB4")]
		private IEnumerator ShowLoadingScreen(bool isNewGame)
		{
			return null;
		}

		[Token(Token = "0x600114F")]
		[Address(RVA = "0xCEC490", Offset = "0xCEC490", VA = "0xCEC490")]
		private void IntroVideoFinished(VideoPlayer source)
		{
		}

		[Token(Token = "0x6001150")]
		[Address(RVA = "0xCEC4C0", Offset = "0xCEC4C0", VA = "0xCEC4C0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9F1E18", Offset = "0x9F1E18")]
		private IEnumerator PerformAsyncLoadingScene()
		{
			return null;
		}

		[Token(Token = "0x6001151")]
		[Address(RVA = "0xCEC568", Offset = "0xCEC568", VA = "0xCEC568")]
		public void TrySkipIntroVideo()
		{
		}

		[Token(Token = "0x6001152")]
		[Address(RVA = "0xCEC620", Offset = "0xCEC620", VA = "0xCEC620")]
		public void ResetHoldingSkip()
		{
		}

		[Token(Token = "0x6001153")]
		[Address(RVA = "0xCEC5A4", Offset = "0xCEC5A4", VA = "0xCEC5A4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9F1E7C", Offset = "0x9F1E7C")]
		private IEnumerator PerformHoldingSkip()
		{
			return null;
		}

		[Token(Token = "0x6001154")]
		[Address(RVA = "0xCEC6AC", Offset = "0xCEC6AC", VA = "0xCEC6AC")]
		private void OnChangeLanguage(ToggleLanguage language)
		{
		}

		[Token(Token = "0x6001155")]
		[Address(RVA = "0xCEC724", Offset = "0xCEC724", VA = "0xCEC724")]
		public void SetIntroVideoLanguage(ToggleLanguage language)
		{
		}

		[Token(Token = "0x6001156")]
		[Address(RVA = "0xCEC79C", Offset = "0xCEC79C", VA = "0xCEC79C")]
		public SceneLoader()
		{
		}
	}
	[Token(Token = "0x2000272")]
	public class ShowVersionNumber : MonoBehaviour
	{
		[Token(Token = "0x40012B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TextMeshProUGUI versionText;

		[Token(Token = "0x40012BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TextMeshProUGUI buildTargetText;

		[Token(Token = "0x6001157")]
		[Address(RVA = "0xCF1CF4", Offset = "0xCF1CF4", VA = "0xCF1CF4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001158")]
		[Address(RVA = "0xCF1D78", Offset = "0xCF1D78", VA = "0xCF1D78")]
		public ShowVersionNumber()
		{
		}
	}
	[Token(Token = "0x2000273")]
	public class SwapRodSet : MonoBehaviour
	{
		[Token(Token = "0x40012BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Material originalMaterial;

		[Token(Token = "0x40012BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Material recolorMaterial;

		[Token(Token = "0x40012BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject[] objectsToRecolor;

		[Token(Token = "0x40012BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject lure1;

		[Token(Token = "0x40012BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private GameObject lure2;

		[Token(Token = "0x40012C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int rodSet;

		[Token(Token = "0x6001159")]
		[Address(RVA = "0xC2E84C", Offset = "0xC2E84C", VA = "0xC2E84C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600115A")]
		[Address(RVA = "0xC2E850", Offset = "0xC2E850", VA = "0xC2E850")]
		public float GetRodMaxVelo()
		{
			return default(float);
		}

		[Token(Token = "0x600115B")]
		[Address(RVA = "0xC2E874", Offset = "0xC2E874", VA = "0xC2E874")]
		public float GetReelMaxVelo()
		{
			return default(float);
		}

		[Token(Token = "0x600115C")]
		[Address(RVA = "0xC2E8A0", Offset = "0xC2E8A0", VA = "0xC2E8A0")]
		public void SetRod(int num)
		{
		}

		[Token(Token = "0x600115D")]
		[Address(RVA = "0xC2E8B0", Offset = "0xC2E8B0", VA = "0xC2E8B0")]
		public SwapRodSet()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000274")]
	public class TestObject
	{
		[Token(Token = "0x40012C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string FishName;

		[Token(Token = "0x40012C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int TestInt;

		[Token(Token = "0x40012C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool TestBool;

		[Token(Token = "0x40012C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float TestFloat;

		[Token(Token = "0x40012C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string[] TestStringArray;

		[Token(Token = "0x40012C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int[] TestIntArray;

		[Token(Token = "0x40012C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool[] TestBoolArray;

		[Token(Token = "0x40012C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float[] TestFloatArray;

		[Token(Token = "0x600115E")]
		[Address(RVA = "0xC30640", Offset = "0xC30640", VA = "0xC30640")]
		public TestObject()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000275")]
	public class TestSheetRoot
	{
		[Token(Token = "0x40012C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public TestObject[] testObjects;

		[Token(Token = "0x600115F")]
		[Address(RVA = "0xC30648", Offset = "0xC30648", VA = "0xC30648")]
		public TestSheetRoot()
		{
		}
	}
	[Token(Token = "0x2000276")]
	public class UI_TutorialController : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200048D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E83A8", Offset = "0x9E83A8")]
		private sealed class <>c
		{
			[Token(Token = "0x4001A76")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001A77")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static TweenCallback <>9__13_0;

			[Token(Token = "0x6001C98")]
			[Address(RVA = "0xD010F4", Offset = "0xD010F4", VA = "0xD010F4")]
			public <>c()
			{
			}

			[Token(Token = "0x6001C99")]
			[Address(RVA = "0xD010FC", Offset = "0xD010FC", VA = "0xD010FC")]
			internal void <HideAll>b__13_0()
			{
			}
		}

		[Token(Token = "0x40012CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private CanvasGroup canvasGroup;

		[Token(Token = "0x40012CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float fadeInTime;

		[Token(Token = "0x40012CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private float fadeOutTime;

		[Token(Token = "0x40012CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9EC748", Offset = "0x9EC748")]
		public Animator[] Animators;

		[Token(Token = "0x40012CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static UI_TutorialController instance;

		[Token(Token = "0x40012CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Dictionary<string, int> animDict;

		[Token(Token = "0x40012D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Tween fadeTween;

		[Token(Token = "0x1700017B")]
		public static UI_TutorialController Instance
		{
			[Token(Token = "0x6001160")]
			[Address(RVA = "0xD00848", Offset = "0xD00848", VA = "0xD00848")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001161")]
		[Address(RVA = "0xD00898", Offset = "0xD00898", VA = "0xD00898")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001162")]
		[Address(RVA = "0xD00A64", Offset = "0xD00A64", VA = "0xD00A64")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001163")]
		[Address(RVA = "0xD00AD8", Offset = "0xD00AD8", VA = "0xD00AD8")]
		private void EventHub_OnCutsceneAnimationResumed()
		{
		}

		[Token(Token = "0x6001164")]
		[Address(RVA = "0xD00BC0", Offset = "0xD00BC0", VA = "0xD00BC0")]
		public static void Show(Animator anim, [Optional] Transform target)
		{
		}

		[Token(Token = "0x6001165")]
		[Address(RVA = "0xD00EB4", Offset = "0xD00EB4", VA = "0xD00EB4")]
		public static void HideAll()
		{
		}

		[Token(Token = "0x6001166")]
		[Address(RVA = "0xD00ADC", Offset = "0xD00ADC", VA = "0xD00ADC")]
		private void Reset()
		{
		}

		[Token(Token = "0x6001167")]
		[Address(RVA = "0xD01004", Offset = "0xD01004", VA = "0xD01004")]
		public UI_TutorialController()
		{
		}
	}
	[Token(Token = "0x2000277")]
	public class TutorialToggle : MonoBehaviour
	{
		[Token(Token = "0x40012D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Toggle tog;

		[Token(Token = "0x6001168")]
		[Address(RVA = "0xC3337C", Offset = "0xC3337C", VA = "0xC3337C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001169")]
		[Address(RVA = "0xC33420", Offset = "0xC33420", VA = "0xC33420")]
		public void OnToggleChange()
		{
		}

		[Token(Token = "0x600116A")]
		[Address(RVA = "0xC334C0", Offset = "0xC334C0", VA = "0xC334C0")]
		public TutorialToggle()
		{
		}
	}
	[Token(Token = "0x2000278")]
	public class UnderwaterFish : MonoBehaviour
	{
		[Token(Token = "0x40012D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Rigidbody rb;

		[Token(Token = "0x40012D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float nextMoveTime;

		[Token(Token = "0x40012D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Transform target;

		[Token(Token = "0x40012D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject[] models;

		[Token(Token = "0x40012D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool canLookAt;

		[Token(Token = "0x600116B")]
		[Address(RVA = "0xD01654", Offset = "0xD01654", VA = "0xD01654")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600116C")]
		[Address(RVA = "0xD016E8", Offset = "0xD016E8", VA = "0xD016E8")]
		private void Start()
		{
		}

		[Token(Token = "0x600116D")]
		[Address(RVA = "0xD01778", Offset = "0xD01778", VA = "0xD01778")]
		public void UpdateFish()
		{
		}

		[Token(Token = "0x600116E")]
		[Address(RVA = "0xD01920", Offset = "0xD01920", VA = "0xD01920")]
		private void FaceTarget()
		{
		}

		[Token(Token = "0x600116F")]
		[Address(RVA = "0xD01730", Offset = "0xD01730", VA = "0xD01730")]
		private void GetNextMoveTime()
		{
		}

		[Token(Token = "0x6001170")]
		[Address(RVA = "0xD01838", Offset = "0xD01838", VA = "0xD01838")]
		private void Move()
		{
		}

		[Token(Token = "0x6001171")]
		[Address(RVA = "0xD01A34", Offset = "0xD01A34", VA = "0xD01A34")]
		public UnderwaterFish()
		{
		}

		[Token(Token = "0x6001172")]
		[Address(RVA = "0xD01A44", Offset = "0xD01A44", VA = "0xD01A44")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F1EE0", Offset = "0x9F1EE0")]
		private void <FaceTarget>b__8_0()
		{
		}
	}
	[Token(Token = "0x2000279")]
	public class UnderwaterFishController : MonoBehaviour
	{
		[Token(Token = "0x40012D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform fishPrefab;

		[Token(Token = "0x40012D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private int numFish;

		[Token(Token = "0x40012D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private UnderwaterFish[] fish;

		[Token(Token = "0x40012DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int fishIndex;

		[Token(Token = "0x40012DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private GameObject jellyPrefab;

		[Token(Token = "0x40012DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private int numJellies;

		[Token(Token = "0x40012DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Transform pool;

		[Token(Token = "0x40012DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public SpawnPool fishSpawnPool;

		[Token(Token = "0x40012DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public UnderwaterFishTarget target;

		[Token(Token = "0x6001173")]
		[Address(RVA = "0xD01A50", Offset = "0xD01A50", VA = "0xD01A50")]
		private void Start()
		{
		}

		[Token(Token = "0x6001174")]
		[Address(RVA = "0xD01BB8", Offset = "0xD01BB8", VA = "0xD01BB8")]
		private void SpawnFish()
		{
		}

		[Token(Token = "0x6001175")]
		[Address(RVA = "0xD01E48", Offset = "0xD01E48", VA = "0xD01E48")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001176")]
		[Address(RVA = "0xD01EDC", Offset = "0xD01EDC", VA = "0xD01EDC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001177")]
		[Address(RVA = "0xD01FC8", Offset = "0xD01FC8", VA = "0xD01FC8")]
		private void LocationChanged(LocationSO locationSO, bool comingFromShip)
		{
		}

		[Token(Token = "0x6001178")]
		[Address(RVA = "0xD0204C", Offset = "0xD0204C", VA = "0xD0204C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001179")]
		[Address(RVA = "0xD020B8", Offset = "0xD020B8", VA = "0xD020B8")]
		private void WaterLevelChanged()
		{
		}

		[Token(Token = "0x600117A")]
		[Address(RVA = "0xD01AF4", Offset = "0xD01AF4", VA = "0xD01AF4")]
		private void RemoveAllFish()
		{
		}

		[Token(Token = "0x600117B")]
		[Address(RVA = "0xD0217C", Offset = "0xD0217C", VA = "0xD0217C")]
		public UnderwaterFishController()
		{
		}
	}
	[Token(Token = "0x200027A")]
	public class UnderwaterFishTarget : MonoBehaviour
	{
		[Token(Token = "0x40012E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform pool;

		[Token(Token = "0x40012E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector2 xRange;

		[Token(Token = "0x40012E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector2 yRange;

		[Token(Token = "0x40012E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector2 zRange;

		[Token(Token = "0x600117C")]
		[Address(RVA = "0xD02184", Offset = "0xD02184", VA = "0xD02184")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600117D")]
		[Address(RVA = "0xD02340", Offset = "0xD02340", VA = "0xD02340")]
		private void Move()
		{
		}

		[Token(Token = "0x600117E")]
		[Address(RVA = "0xD021A8", Offset = "0xD021A8", VA = "0xD021A8")]
		public void SetBounds()
		{
		}

		[Token(Token = "0x600117F")]
		[Address(RVA = "0xD0247C", Offset = "0xD0247C", VA = "0xD0247C")]
		public UnderwaterFishTarget()
		{
		}

		[Token(Token = "0x6001180")]
		[Address(RVA = "0xD02484", Offset = "0xD02484", VA = "0xD02484")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F1EF0", Offset = "0x9F1EF0")]
		private void <Move>b__5_0()
		{
		}
	}
	[Token(Token = "0x200027B")]
	public enum SfxWorld
	{
		[Token(Token = "0x40012E5")]
		BarrelExplode,
		[Token(Token = "0x40012E6")]
		FishFail,
		[Token(Token = "0x40012E7")]
		FishHooked,
		[Token(Token = "0x40012E8")]
		FishInHand,
		[Token(Token = "0x40012E9")]
		TakeFish,
		[Token(Token = "0x40012EA")]
		Crunch,
		[Token(Token = "0x40012EB")]
		FishDanger,
		[Token(Token = "0x40012EC")]
		RedZoneAlertLoop,
		[Token(Token = "0x40012ED")]
		RedZoneAlertStart,
		[Token(Token = "0x40012EE")]
		FishLost,
		[Token(Token = "0x40012EF")]
		Success,
		[Token(Token = "0x40012F0")]
		Success02,
		[Token(Token = "0x40012F1")]
		Gasp,
		[Token(Token = "0x40012F2")]
		Splash,
		[Token(Token = "0x40012F3")]
		ArrowSolved,
		[Token(Token = "0x40012F4")]
		ArrowAppears,
		[Token(Token = "0x40012F5")]
		ArrowFail,
		[Token(Token = "0x40012F6")]
		PatternSolved,
		[Token(Token = "0x40012F7")]
		BoostReady,
		[Token(Token = "0x40012F8")]
		BoostDischarge,
		[Token(Token = "0x40012F9")]
		ElectricZap,
		[Token(Token = "0x40012FA")]
		LineSnap,
		[Token(Token = "0x40012FB")]
		PredatorHit,
		[Token(Token = "0x40012FC")]
		BossPredatorHit,
		[Token(Token = "0x40012FD")]
		SporePodSplash,
		[Token(Token = "0x40012FE")]
		SporePodHiss,
		[Token(Token = "0x40012FF")]
		LeanDirectionChange,
		[Token(Token = "0x4001300")]
		Error01,
		[Token(Token = "0x4001301")]
		FishHandImpact,
		[Token(Token = "0x4001302")]
		FishEscape,
		[Token(Token = "0x4001303")]
		ResourceCoin,
		[Token(Token = "0x4001304")]
		Swoosh,
		[Token(Token = "0x4001305")]
		ReleaseWhoosh,
		[Token(Token = "0x4001306")]
		BoosPointZap,
		[Token(Token = "0x4001307")]
		TeleportBoostStart,
		[Token(Token = "0x4001308")]
		TeleportBoostArrive
	}
	[Token(Token = "0x200027C")]
	public enum SfxAmbience
	{
		[Token(Token = "0x400130A")]
		Water1,
		[Token(Token = "0x400130B")]
		ShipDrone1
	}
	[Token(Token = "0x200027D")]
	public class WorldAudio : MonoBehaviour
	{
		[Token(Token = "0x400130C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static WorldAudio instance;

		[Token(Token = "0x400130D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AudioSource worldAudio;

		[Token(Token = "0x400130E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioSource worldAudioNonSpatialized;

		[Token(Token = "0x400130F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AudioSource[] loopingAmbience;

		[Token(Token = "0x4001310")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AudioSource music;

		[Token(Token = "0x4001311")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public AudioSource resourceCoins;

		[Token(Token = "0x4001312")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9EC7E0", Offset = "0x9EC7E0")]
		public AudioClip barrelExplode;

		[Token(Token = "0x4001313")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public AudioClip fishFail;

		[Token(Token = "0x4001314")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public AudioClip fishHooked;

		[Token(Token = "0x4001315")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public AudioClip fishInHand;

		[Token(Token = "0x4001316")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public AudioClip takeFish;

		[Token(Token = "0x4001317")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public AudioClip crunch;

		[Token(Token = "0x4001318")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public AudioClip fishDanger;

		[Token(Token = "0x4001319")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public AudioClip redZoneAlertLoop;

		[Token(Token = "0x400131A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public AudioClip redZoneAlertStart;

		[Token(Token = "0x400131B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public AudioClip fishLost;

		[Token(Token = "0x400131C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public AudioClip lineSnap;

		[Token(Token = "0x400131D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public AudioClip fishEscape;

		[Token(Token = "0x400131E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public AudioClip splash;

		[Token(Token = "0x400131F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public AudioClip arrowSolve;

		[Token(Token = "0x4001320")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public AudioClip arrowFail;

		[Token(Token = "0x4001321")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public AudioClip patternSolve;

		[Token(Token = "0x4001322")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public AudioClip boostReady;

		[Token(Token = "0x4001323")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public AudioClip electricZap;

		[Token(Token = "0x4001324")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public AudioClip boostDischarge;

		[Token(Token = "0x4001325")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public AudioClip predatorHit;

		[Token(Token = "0x4001326")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public AudioClip bossPredatorHit;

		[Token(Token = "0x4001327")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public AudioClip sporePodSplash;

		[Token(Token = "0x4001328")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public AudioClip sporePodHiss;

		[Token(Token = "0x4001329")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public AudioClip leanDirectionChange;

		[Token(Token = "0x400132A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public AudioClip success;

		[Token(Token = "0x400132B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public AudioClip error01;

		[Token(Token = "0x400132C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public AudioClip success02;

		[Token(Token = "0x400132D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		public AudioClip fishHandImpact;

		[Token(Token = "0x400132E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		public AudioClip swoosh;

		[Token(Token = "0x400132F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		public AudioClip teleportBoostStart;

		[Token(Token = "0x4001330")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		public AudioClip teleportBoostArrive;

		[Token(Token = "0x4001331")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9EC818", Offset = "0x9EC818")]
		public AudioClip[] applause;

		[Token(Token = "0x4001332")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		public AudioClip[] gasp;

		[Token(Token = "0x4001333")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		public AudioClip[] coins;

		[Token(Token = "0x4001334")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		public AudioClip[] releaseWhoosh;

		[Token(Token = "0x4001335")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		public AudioClip[] boostPointZaps;

		[Token(Token = "0x4001336")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9EC850", Offset = "0x9EC850")]
		public AudioClip water1;

		[Token(Token = "0x4001337")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		public AudioClip shipDrone1;

		[Token(Token = "0x4001338")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9EC888", Offset = "0x9EC888")]
		public HapticsClipSO halfSecondFade;

		[Token(Token = "0x4001339")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		private Tween musicFadeTween;

		[Token(Token = "0x6001181")]
		[Address(RVA = "0xD06138", Offset = "0xD06138", VA = "0xD06138")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001182")]
		[Address(RVA = "0xCFEBD4", Offset = "0xCFEBD4", VA = "0xCFEBD4")]
		public static void Play(SfxWorld sfx, float pitch = 1f)
		{
		}

		[Token(Token = "0x6001183")]
		[Address(RVA = "0xD06190", Offset = "0xD06190", VA = "0xD06190")]
		public static void PlayAt(SfxWorld sfx, Vector3 position)
		{
		}

		[Token(Token = "0x6001184")]
		[Address(RVA = "0xD06558", Offset = "0xD06558", VA = "0xD06558")]
		public static void PlayAmbience(SfxAmbience sfx, float volume, Vector3 position)
		{
		}

		[Token(Token = "0x6001185")]
		[Address(RVA = "0xD06738", Offset = "0xD06738", VA = "0xD06738")]
		private AudioSource GetLoopingAmbienceSource()
		{
			return null;
		}

		[Token(Token = "0x6001186")]
		[Address(RVA = "0xD06864", Offset = "0xD06864", VA = "0xD06864")]
		public WorldAudio()
		{
		}
	}
	[Token(Token = "0x200027E")]
	public class SnapTurnProvider : ActionBasedSnapTurnProvider
	{
		[Token(Token = "0x200048E")]
		public delegate void StickTurnEvent(float turnAmount, Handside handside);

		[Token(Token = "0x400133A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public bool EnableXRRigRotate;

		[Token(Token = "0x400133B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x81")]
		public bool EnableSwitchLure;

		[Token(Token = "0x400133D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private float m_CurrentTurnAmount_;

		[Token(Token = "0x400133E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private float m_TimeStarted_;

		[Token(Token = "0x400133F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private Handside m_HandSide;

		[Token(Token = "0x1400005E")]
		public static event StickTurnEvent OnStickTurn
		{
			[Token(Token = "0x6001187")]
			[Address(RVA = "0xC2BB24", Offset = "0xC2BB24", VA = "0xC2BB24")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F1F00", Offset = "0x9F1F00")]
			add
			{
			}
			[Token(Token = "0x6001188")]
			[Address(RVA = "0xC2BBD8", Offset = "0xC2BBD8", VA = "0xC2BBD8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F1F10", Offset = "0x9F1F10")]
			remove
			{
			}
		}

		[Token(Token = "0x6001189")]
		[Address(RVA = "0xC2BC8C", Offset = "0xC2BC8C", VA = "0xC2BC8C")]
		private new void Update()
		{
		}

		[Token(Token = "0x600118A")]
		[Address(RVA = "0xC2BEC4", Offset = "0xC2BEC4", VA = "0xC2BEC4")]
		private new void StartTurn(float amount)
		{
		}

		[Token(Token = "0x600118B")]
		[Address(RVA = "0xC2C190", Offset = "0xC2C190", VA = "0xC2C190", Slot = "5")]
		protected override Vector2 ReadInput()
		{
			return default(Vector2);
		}

		[Token(Token = "0x600118C")]
		[Address(RVA = "0xC2C364", Offset = "0xC2C364", VA = "0xC2C364")]
		public SnapTurnProvider()
		{
		}
	}
	[Token(Token = "0x200027F")]
	public class ReelChanger : MonoBehaviour
	{
		[Token(Token = "0x4001340")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ReelChanger instance;

		[Token(Token = "0x4001341")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject[] reels;

		[Token(Token = "0x4001342")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject UI;

		[Token(Token = "0x4001343")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject powerInputL;

		[Token(Token = "0x4001344")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject powerInputR;

		[Token(Token = "0x600118D")]
		[Address(RVA = "0xC6AB80", Offset = "0xC6AB80", VA = "0xC6AB80")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600118E")]
		[Address(RVA = "0xC6ABD8", Offset = "0xC6ABD8", VA = "0xC6ABD8")]
		public static void SetReel(string BCID)
		{
		}

		[Token(Token = "0x600118F")]
		[Address(RVA = "0xC6AC38", Offset = "0xC6AC38", VA = "0xC6AC38")]
		private void setReel(string BCID)
		{
		}

		[Token(Token = "0x6001190")]
		[Address(RVA = "0xC6AED4", Offset = "0xC6AED4", VA = "0xC6AED4")]
		private int GetReelIndex(string BCID)
		{
			return default(int);
		}

		[Token(Token = "0x6001191")]
		[Address(RVA = "0xC6AE64", Offset = "0xC6AE64", VA = "0xC6AE64")]
		private void DisableAll()
		{
		}

		[Token(Token = "0x6001192")]
		[Address(RVA = "0xC6B154", Offset = "0xC6B154", VA = "0xC6B154")]
		public ReelChanger()
		{
		}
	}
	[Token(Token = "0x2000280")]
	public class ReelSimulator : MonoBehaviour
	{
		[Token(Token = "0x200048F")]
		public enum rotateDirection
		{
			[Token(Token = "0x4001A79")]
			clockwise = -1,
			[Token(Token = "0x4001A7A")]
			anticlockwise = 1
		}

		[Token(Token = "0x4001345")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static bool autoReel;

		[Token(Token = "0x4001346")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool handReel;

		[Token(Token = "0x4001347")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform grabTransform;

		[Token(Token = "0x4001348")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float m_output;

		[Token(Token = "0x4001349")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private rotateDirection reelDirection;

		[Token(Token = "0x400134A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float angVelo;

		[Token(Token = "0x400134B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform ledCollarR;

		[Token(Token = "0x400134C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Transform ledCollarL;

		[Token(Token = "0x400134D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Animator reelAnim;

		[Token(Token = "0x400134E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float apparentReelSpeed;

		[Token(Token = "0x400134F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float maxApparentReelSpeed;

		[Token(Token = "0x4001350")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool isGrabbed;

		[Token(Token = "0x4001351")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private Vector3 grabTrnsLastPos;

		[Token(Token = "0x4001352")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Vector3 handleStartRot;

		[Token(Token = "0x4001353")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private float m_angVeloReplace;

		[Token(Token = "0x4001354")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static ReelSimulator instance;

		[Token(Token = "0x1700017C")]
		public static bool HandReel
		{
			[Token(Token = "0x6001193")]
			[Address(RVA = "0xC6BC10", Offset = "0xC6BC10", VA = "0xC6BC10")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001194")]
			[Address(RVA = "0xC6BC6C", Offset = "0xC6BC6C", VA = "0xC6BC6C")]
			set
			{
			}
		}

		[Token(Token = "0x1700017D")]
		public static float ApparentReelSpeed
		{
			[Token(Token = "0x6001195")]
			[Address(RVA = "0xC6BCE8", Offset = "0xC6BCE8", VA = "0xC6BCE8")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700017E")]
		public float Output
		{
			[Token(Token = "0x6001196")]
			[Address(RVA = "0xC6BD44", Offset = "0xC6BD44", VA = "0xC6BD44")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700017F")]
		public bool IsGrabbed
		{
			[Token(Token = "0x6001198")]
			[Address(RVA = "0xC6BDA4", Offset = "0xC6BDA4", VA = "0xC6BDA4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001199")]
			[Address(RVA = "0xC6BDAC", Offset = "0xC6BDAC", VA = "0xC6BDAC")]
			set
			{
			}
		}

		[Token(Token = "0x6001197")]
		[Address(RVA = "0xC6BD4C", Offset = "0xC6BD4C", VA = "0xC6BD4C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600119A")]
		[Address(RVA = "0xC6BDEC", Offset = "0xC6BDEC", VA = "0xC6BDEC")]
		public void SetDirection()
		{
		}

		[Token(Token = "0x600119B")]
		[Address(RVA = "0xC6BDF8", Offset = "0xC6BDF8", VA = "0xC6BDF8")]
		private void Update()
		{
		}

		[Token(Token = "0x600119C")]
		[Address(RVA = "0xC6C1C4", Offset = "0xC6C1C4", VA = "0xC6C1C4")]
		private void ReelRunOut()
		{
		}

		[Token(Token = "0x600119D")]
		[Address(RVA = "0xC6C59C", Offset = "0xC6C59C", VA = "0xC6C59C")]
		public float CheckAngVelo()
		{
			return default(float);
		}

		[Token(Token = "0x600119E")]
		[Address(RVA = "0xC6C2B0", Offset = "0xC6C2B0", VA = "0xC6C2B0")]
		public void UpdateCrankPos(float angVelo)
		{
		}

		[Token(Token = "0x600119F")]
		[Address(RVA = "0xC6C6DC", Offset = "0xC6C6DC", VA = "0xC6C6DC")]
		public void ResetCrankPos()
		{
		}

		[Token(Token = "0x60011A0")]
		[Address(RVA = "0xC6C3B4", Offset = "0xC6C3B4", VA = "0xC6C3B4")]
		public void SetReelAnimSpeed(float speed = 0f)
		{
		}

		[Token(Token = "0x60011A1")]
		[Address(RVA = "0xC6C714", Offset = "0xC6C714", VA = "0xC6C714")]
		public void SetPistonHeight(float height)
		{
		}

		[Token(Token = "0x60011A2")]
		[Address(RVA = "0xC6C780", Offset = "0xC6C780", VA = "0xC6C780")]
		public ReelSimulator()
		{
		}
	}
	[Token(Token = "0x2000281")]
	public class RepellentManager : MonoBehaviour
	{
		[Token(Token = "0x4001355")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SpawnPool pool;

		[Token(Token = "0x4001356")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<SporePod> pods;

		[Token(Token = "0x4001357")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform sporePod;

		[Token(Token = "0x4001358")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private RepellentSkin skin;

		[Token(Token = "0x4001359")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int maxNumber;

		[Token(Token = "0x400135A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int initialNumber;

		[Token(Token = "0x400135B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int numSpawnAtOnce;

		[Token(Token = "0x400135C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float spawnRate;

		[Token(Token = "0x400135D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float lifetime;

		[Token(Token = "0x400135E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float repellentEffectiveDuration;

		[Token(Token = "0x400135F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private bool initialSpawn;

		[Token(Token = "0x4001360")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float startTime;

		[Token(Token = "0x4001361")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static RepellentManager Instance;

		[Token(Token = "0x60011A3")]
		[Address(RVA = "0xC6C7F0", Offset = "0xC6C7F0", VA = "0xC6C7F0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60011A4")]
		[Address(RVA = "0xC6C848", Offset = "0xC6C848", VA = "0xC6C848")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60011A5")]
		[Address(RVA = "0xC66B70", Offset = "0xC66B70", VA = "0xC66B70")]
		public void SystemInit()
		{
		}

		[Token(Token = "0x60011A6")]
		[Address(RVA = "0xC68308", Offset = "0xC68308", VA = "0xC68308")]
		public void SystemInit(RepellentSkin _skin, int _maxNumber, int _initialNumber, int _numSpawnAtOnce, float _spawnRate, float _lifeTime, float _systemActiveDur, float _systemInactiveDur)
		{
		}

		[Token(Token = "0x60011A7")]
		[Address(RVA = "0xC6C994", Offset = "0xC6C994", VA = "0xC6C994")]
		private void SystemEnable()
		{
		}

		[Token(Token = "0x60011A8")]
		[Address(RVA = "0xC66DF8", Offset = "0xC66DF8", VA = "0xC66DF8")]
		public void SystemDisable()
		{
		}

		[Token(Token = "0x60011A9")]
		[Address(RVA = "0xC6C850", Offset = "0xC6C850", VA = "0xC6C850")]
		private void ClearAllPods()
		{
		}

		[Token(Token = "0x60011AA")]
		[Address(RVA = "0xC6CA30", Offset = "0xC6CA30", VA = "0xC6CA30")]
		public void PrepPodsList()
		{
		}

		[Token(Token = "0x60011AB")]
		[Address(RVA = "0xC6CAE4", Offset = "0xC6CAE4", VA = "0xC6CAE4")]
		public void Spawn()
		{
		}

		[Token(Token = "0x60011AC")]
		[Address(RVA = "0xC6CCEC", Offset = "0xC6CCEC", VA = "0xC6CCEC")]
		public void RemovePod(SporePod pod)
		{
		}

		[Token(Token = "0x60011AD")]
		[Address(RVA = "0xC6CD54", Offset = "0xC6CD54", VA = "0xC6CD54")]
		public RepellentManager()
		{
		}
	}
	[Token(Token = "0x2000282")]
	public class ResetDebugOptions : MonoBehaviour
	{
		[Token(Token = "0x60011AE")]
		[Address(RVA = "0xC6CD5C", Offset = "0xC6CD5C", VA = "0xC6CD5C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60011AF")]
		[Address(RVA = "0xC6CDC4", Offset = "0xC6CDC4", VA = "0xC6CDC4")]
		public ResetDebugOptions()
		{
		}
	}
	[Token(Token = "0x2000283")]
	public class ResetLureScale : MonoBehaviour
	{
		[Token(Token = "0x60011B0")]
		[Address(RVA = "0xC6CDCC", Offset = "0xC6CDCC", VA = "0xC6CDCC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60011B1")]
		[Address(RVA = "0xC6CE34", Offset = "0xC6CE34", VA = "0xC6CE34")]
		public ResetLureScale()
		{
		}
	}
	[Token(Token = "0x2000284")]
	public class ReturnToMainMenu : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000490")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E83B8", Offset = "0x9E83B8")]
		private sealed class <>c
		{
			[Token(Token = "0x4001A7B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001A7C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Action <>9__0_0;

			[Token(Token = "0x6001C9F")]
			[Address(RVA = "0xC6D060", Offset = "0xC6D060", VA = "0xC6D060")]
			public <>c()
			{
			}

			[Token(Token = "0x6001CA0")]
			[Address(RVA = "0xC6D068", Offset = "0xC6D068", VA = "0xC6D068")]
			internal void <OnClick>b__0_0()
			{
			}
		}

		[Token(Token = "0x60011B2")]
		[Address(RVA = "0xC6CE94", Offset = "0xC6CE94", VA = "0xC6CE94")]
		public void OnClick()
		{
		}

		[Token(Token = "0x60011B3")]
		[Address(RVA = "0xC6CFF0", Offset = "0xC6CFF0", VA = "0xC6CFF0")]
		public ReturnToMainMenu()
		{
		}
	}
	[Token(Token = "0x2000285")]
	public class RodBoost : MonoBehaviour, IEventListener
	{
		[Token(Token = "0x2000491")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E83C8", Offset = "0x9E83C8")]
		private sealed class <BoostVFX>d__41 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001A7D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001A7E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001A7F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float boostDuration;

			[Token(Token = "0x4001A80")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public RodBoost <>4__this;

			[Token(Token = "0x4001A81")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <startTime>5__2;

			[Token(Token = "0x4001A82")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <endTime>5__3;

			[Token(Token = "0x170002BF")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001CA4")]
				[Address(RVA = "0xCDF0B0", Offset = "0xCDF0B0", VA = "0xCDF0B0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002C0")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001CA6")]
				[Address(RVA = "0xCDF118", Offset = "0xCDF118", VA = "0xCDF118", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001CA1")]
			[Address(RVA = "0xCDEAA4", Offset = "0xCDEAA4", VA = "0xCDEAA4")]
			[DebuggerHidden]
			public <BoostVFX>d__41(int <>1__state)
			{
			}

			[Token(Token = "0x6001CA2")]
			[Address(RVA = "0xCDEFD4", Offset = "0xCDEFD4", VA = "0xCDEFD4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001CA3")]
			[Address(RVA = "0xCDEFD8", Offset = "0xCDEFD8", VA = "0xCDEFD8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001CA5")]
			[Address(RVA = "0xCDF0B8", Offset = "0xCDF0B8", VA = "0xCDF0B8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001362")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private RodSO rod;

		[Token(Token = "0x4001363")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RodSO.BoostType boostType;

		[Token(Token = "0x4001364")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public RodBoostFX boostFX;

		[Token(Token = "0x4001365")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int boostLevel;

		[Token(Token = "0x4001366")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public bool isBoosting;

		[Token(Token = "0x4001367")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float boostDuration;

		[Token(Token = "0x4001368")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float fishStunnedDuration;

		[Token(Token = "0x4001369")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private readonly float chargeBase;

		[Token(Token = "0x400136A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float chargeOffset;

		[Token(Token = "0x400136B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Tween cooldownTask;

		[Token(Token = "0x400136C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static float currentBoost;

		[Token(Token = "0x400136D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static RodBoost instance;

		[Token(Token = "0x400136E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool isCheating;

		[Token(Token = "0x400136F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float boostModifier;

		[Token(Token = "0x4001370")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Material rodCrystalGlowMaterial;

		[Token(Token = "0x4001371")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float autosaveTimer;

		[Token(Token = "0x4001372")]
		private const float autosaveTimeInterval = 5f;

		[Token(Token = "0x4001373")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Gradient boostGradient;

		[Token(Token = "0x17000180")]
		public static float MaxCharge
		{
			[Token(Token = "0x60011B4")]
			[Address(RVA = "0xCDCAFC", Offset = "0xCDCAFC", VA = "0xCDCAFC")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000181")]
		public static float currentBoostNormalized
		{
			[Token(Token = "0x60011B5")]
			[Address(RVA = "0xCDCBB8", Offset = "0xCDCBB8", VA = "0xCDCBB8")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000182")]
		public bool IsCheating
		{
			[Token(Token = "0x60011B6")]
			[Address(RVA = "0xCDCC60", Offset = "0xCDCC60", VA = "0xCDCC60")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60011B7")]
			[Address(RVA = "0xCDCC68", Offset = "0xCDCC68", VA = "0xCDCC68")]
			set
			{
			}
		}

		[Token(Token = "0x60011B8")]
		[Address(RVA = "0xCDCEB4", Offset = "0xCDCEB4", VA = "0xCDCEB4")]
		private void Awake()
		{
		}

		[Token(Token = "0x60011B9")]
		[Address(RVA = "0xCDD124", Offset = "0xCDD124", VA = "0xCDD124")]
		private void Start()
		{
		}

		[Token(Token = "0x60011BA")]
		[Address(RVA = "0xCDD1C0", Offset = "0xCDD1C0", VA = "0xCDD1C0")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60011BB")]
		[Address(RVA = "0xCDD34C", Offset = "0xCDD34C", VA = "0xCDD34C")]
		private void OnRodReset()
		{
		}

		[Token(Token = "0x60011BC")]
		[Address(RVA = "0xCDD3A0", Offset = "0xCDD3A0", VA = "0xCDD3A0")]
		public static void ResetBoost()
		{
		}

		[Token(Token = "0x60011BD")]
		[Address(RVA = "0xCDD350", Offset = "0xCDD350", VA = "0xCDD350")]
		private void Reset()
		{
		}

		[Token(Token = "0x60011BE")]
		[Address(RVA = "0xCDCD4C", Offset = "0xCDCD4C", VA = "0xCDCD4C")]
		private void setBoost(float energy = 0f)
		{
		}

		[Token(Token = "0x60011BF")]
		[Address(RVA = "0xCDD63C", Offset = "0xCDD63C", VA = "0xCDD63C")]
		public void SetBoostReady()
		{
		}

		[Token(Token = "0x60011C0")]
		[Address(RVA = "0xCDD1BC", Offset = "0xCDD1BC", VA = "0xCDD1BC")]
		private void EventHub_OnPlayerLevelUp(int level)
		{
		}

		[Token(Token = "0x60011C1")]
		[Address(RVA = "0xCDD6A0", Offset = "0xCDD6A0", VA = "0xCDD6A0")]
		private void EventHub_OnFishKept(FpFish fish)
		{
		}

		[Token(Token = "0x60011C2")]
		[Address(RVA = "0xCDD828", Offset = "0xCDD828", VA = "0xCDD828")]
		private void EventHub_OnFishReleased(FpFish fish)
		{
		}

		[Token(Token = "0x60011C3")]
		[Address(RVA = "0xCDD9D8", Offset = "0xCDD9D8", VA = "0xCDD9D8")]
		private void EventHub_OnPlayerXPGot(int xp)
		{
		}

		[Token(Token = "0x60011C4")]
		[Address(RVA = "0xCDD9DC", Offset = "0xCDD9DC", VA = "0xCDD9DC")]
		private void HandleBoost(InputAction.CallbackContext context)
		{
		}

		[Token(Token = "0x60011C5")]
		[Address(RVA = "0xCDDE74", Offset = "0xCDDE74", VA = "0xCDDE74")]
		private void OnRodEquip(RodSO _rod)
		{
		}

		[Token(Token = "0x60011C6")]
		[Address(RVA = "0xCDDC9C", Offset = "0xCDDC9C", VA = "0xCDDC9C")]
		public void DoBoost()
		{
		}

		[Token(Token = "0x60011C7")]
		[Address(RVA = "0xCDE088", Offset = "0xCDE088", VA = "0xCDE088")]
		private void StaminaReduction(RodSO _rod)
		{
		}

		[Token(Token = "0x60011C8")]
		[Address(RVA = "0xCDEA18", Offset = "0xCDEA18", VA = "0xCDEA18")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9F1F20", Offset = "0x9F1F20")]
		private IEnumerator BoostVFX(float boostDuration)
		{
			return null;
		}

		[Token(Token = "0x60011C9")]
		[Address(RVA = "0xCDD3F8", Offset = "0xCDD3F8", VA = "0xCDD3F8")]
		private void StopBoosting()
		{
		}

		[Token(Token = "0x60011CA")]
		[Address(RVA = "0xCDE500", Offset = "0xCDE500", VA = "0xCDE500")]
		private void StartPowerReel()
		{
		}

		[Token(Token = "0x60011CB")]
		[Address(RVA = "0xCDD4BC", Offset = "0xCDD4BC", VA = "0xCDD4BC")]
		private void StopPowerReel()
		{
		}

		[Token(Token = "0x60011CC")]
		[Address(RVA = "0xCDE6F0", Offset = "0xCDE6F0", VA = "0xCDE6F0")]
		private void StartStun()
		{
		}

		[Token(Token = "0x60011CD")]
		[Address(RVA = "0xCDE88C", Offset = "0xCDE88C", VA = "0xCDE88C")]
		private void StartTeleport()
		{
		}

		[Token(Token = "0x60011CE")]
		[Address(RVA = "0xCDEDCC", Offset = "0xCDEDCC", VA = "0xCDEDCC", Slot = "4")]
		public void OnEvent(EventArgs args)
		{
		}

		[Token(Token = "0x60011CF")]
		[Address(RVA = "0xCDD55C", Offset = "0xCDD55C", VA = "0xCDD55C")]
		public void SetBoostLevelUI(float level)
		{
		}

		[Token(Token = "0x60011D0")]
		[Address(RVA = "0xCDEFB4", Offset = "0xCDEFB4", VA = "0xCDEFB4")]
		public RodBoost()
		{
		}
	}
	[Token(Token = "0x2000286")]
	public class RodBoostFX : MonoBehaviour
	{
		[Token(Token = "0x2000492")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E83D8", Offset = "0x9E83D8")]
		private sealed class <ShockPullFX>d__7 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001A83")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001A84")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001A85")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public RodBoostFX <>4__this;

			[Token(Token = "0x170002C1")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001CAA")]
				[Address(RVA = "0xCDF4C0", Offset = "0xCDF4C0", VA = "0xCDF4C0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002C2")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001CAC")]
				[Address(RVA = "0xCDF528", Offset = "0xCDF528", VA = "0xCDF528", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001CA7")]
			[Address(RVA = "0xCDF2E4", Offset = "0xCDF2E4", VA = "0xCDF2E4")]
			[DebuggerHidden]
			public <ShockPullFX>d__7(int <>1__state)
			{
			}

			[Token(Token = "0x6001CA8")]
			[Address(RVA = "0xCDF318", Offset = "0xCDF318", VA = "0xCDF318", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001CA9")]
			[Address(RVA = "0xCDF31C", Offset = "0xCDF31C", VA = "0xCDF31C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001CAB")]
			[Address(RVA = "0xCDF4C8", Offset = "0xCDF4C8", VA = "0xCDF4C8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001374")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public RodBoost rodBoost;

		[Token(Token = "0x4001375")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9EC8E0", Offset = "0x9EC8E0")]
		public GameObject lightning;

		[Token(Token = "0x4001376")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform lightningPointA;

		[Token(Token = "0x4001377")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform lightningPointB;

		[Token(Token = "0x4001378")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9EC918", Offset = "0x9EC918")]
		public GameObject powerReelFX;

		[Token(Token = "0x60011D1")]
		[Address(RVA = "0xCDED60", Offset = "0xCDED60", VA = "0xCDED60")]
		public void StartShockPullFX()
		{
		}

		[Token(Token = "0x60011D2")]
		[Address(RVA = "0xCDF120", Offset = "0xCDF120", VA = "0xCDF120")]
		public void StartShockPullFXDelayed()
		{
		}

		[Token(Token = "0x60011D3")]
		[Address(RVA = "0xCDF268", Offset = "0xCDF268", VA = "0xCDF268")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9F1F84", Offset = "0x9F1F84")]
		public IEnumerator ShockPullFX()
		{
			return null;
		}

		[Token(Token = "0x60011D4")]
		[Address(RVA = "0xCDEAD0", Offset = "0xCDEAD0", VA = "0xCDEAD0")]
		public void StartPowerReelFX()
		{
		}

		[Token(Token = "0x60011D5")]
		[Address(RVA = "0xCDEC18", Offset = "0xCDEC18", VA = "0xCDEC18")]
		public void StopPowerReelFX()
		{
		}

		[Token(Token = "0x60011D6")]
		[Address(RVA = "0xCDF310", Offset = "0xCDF310", VA = "0xCDF310")]
		public RodBoostFX()
		{
		}
	}
	[Token(Token = "0x2000287")]
	public class RodChange : MonoBehaviour
	{
		[Token(Token = "0x4001379")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SkinnedMeshRenderer rod;

		[Token(Token = "0x400137A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SkinnedMeshRenderer rodHighlight;

		[Token(Token = "0x400137B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public MeshFilter reelHighlight;

		[Token(Token = "0x400137C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public MeshFilter handleHighlight;

		[Token(Token = "0x60011D7")]
		[Address(RVA = "0xCE07C4", Offset = "0xCE07C4", VA = "0xCE07C4")]
		public void ChangeRod(Transform newRod, ItemSO rodSO)
		{
		}

		[Token(Token = "0x60011D8")]
		[Address(RVA = "0xCE0B48", Offset = "0xCE0B48", VA = "0xCE0B48")]
		public RodChange()
		{
		}
	}
	[Token(Token = "0x2000288")]
	public enum Lean
	{
		[Token(Token = "0x400137E")]
		Left,
		[Token(Token = "0x400137F")]
		Right,
		[Token(Token = "0x4001380")]
		Up,
		[Token(Token = "0x4001381")]
		None
	}
	[Token(Token = "0x2000289")]
	public class RodLean : MonoBehaviour
	{
		[Token(Token = "0x4001382")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform rodReel;

		[Token(Token = "0x4001383")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform referenceObject;

		[Token(Token = "0x4001384")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector2 debugDif;

		[Token(Token = "0x60011D9")]
		[Address(RVA = "0xCE1C30", Offset = "0xCE1C30", VA = "0xCE1C30")]
		public Lean CheckLeanDir(Arrow dir)
		{
			return default(Lean);
		}

		[Token(Token = "0x60011DA")]
		[Address(RVA = "0xCE1F18", Offset = "0xCE1F18", VA = "0xCE1F18")]
		public Vector3 GetHandForwardVector(float times = 1.5f)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60011DB")]
		[Address(RVA = "0xCE2060", Offset = "0xCE2060", VA = "0xCE2060")]
		public RodLean()
		{
		}
	}
	[Token(Token = "0x200028A")]
	public class RodShake : MonoBehaviour
	{
		[Token(Token = "0x2000493")]
		public delegate void ShakeAction();

		[Token(Token = "0x4001385")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float veloMagnitude;

		[Token(Token = "0x4001386")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private Vector3 lastVelo;

		[Token(Token = "0x4001387")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 lastPos;

		[Token(Token = "0x4001388")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float threshold;

		[Token(Token = "0x4001389")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool awaitOver;

		[Token(Token = "0x400138A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int counter;

		[Token(Token = "0x1400005F")]
		public static event ShakeAction OnShake
		{
			[Token(Token = "0x60011DC")]
			[Address(RVA = "0xCE56DC", Offset = "0xCE56DC", VA = "0xCE56DC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F1FE8", Offset = "0x9F1FE8")]
			add
			{
			}
			[Token(Token = "0x60011DD")]
			[Address(RVA = "0xCE5790", Offset = "0xCE5790", VA = "0xCE5790")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F1FF8", Offset = "0x9F1FF8")]
			remove
			{
			}
		}

		[Token(Token = "0x60011DE")]
		[Address(RVA = "0xCE5844", Offset = "0xCE5844", VA = "0xCE5844")]
		private void Update()
		{
		}

		[Token(Token = "0x60011DF")]
		[Address(RVA = "0xCE5C08", Offset = "0xCE5C08", VA = "0xCE5C08")]
		public RodShake()
		{
		}
	}
	[Token(Token = "0x200028B")]
	public class RodTip : MonoBehaviour
	{
		[Token(Token = "0x400138C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static RodTip instance;

		[Token(Token = "0x400138D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SpawnPool Vfx;

		[Token(Token = "0x400138E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform ripples;

		[Token(Token = "0x400138F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool isUnder;

		[Token(Token = "0x4001390")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3[] change;

		[Token(Token = "0x4001391")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int changeIndex;

		[Token(Token = "0x4001392")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int avgWindow;

		[Token(Token = "0x4001393")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Vector3 lastPos;

		[Token(Token = "0x4001394")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float cooloff;

		[Token(Token = "0x4001395")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float lastTime;

		[Token(Token = "0x4001396")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float[] speedVals;

		[Token(Token = "0x4001397")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private int speedIndex;

		[Token(Token = "0x4001398")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private int speedSmoothing;

		[Token(Token = "0x4001399")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float validSpeedLimit;

		[Token(Token = "0x400139A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private float lastValidSpeed;

		[Token(Token = "0x400139B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float lastValidSpeedTime;

		[Token(Token = "0x400139C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private float validSpeedWindow;

		[Token(Token = "0x400139D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float speed;

		[Token(Token = "0x400139E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private Vector3 oldpos;

		[Token(Token = "0x17000183")]
		public static float Speed
		{
			[Token(Token = "0x60011E0")]
			[Address(RVA = "0xCDFF94", Offset = "0xCDFF94", VA = "0xCDFF94")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x60011E1")]
		[Address(RVA = "0xCE5F20", Offset = "0xCE5F20", VA = "0xCE5F20")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60011E2")]
		[Address(RVA = "0xCE5FE4", Offset = "0xCE5FE4", VA = "0xCE5FE4")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60011E3")]
		[Address(RVA = "0xCE6638", Offset = "0xCE6638", VA = "0xCE6638")]
		private void UpdateSpeed()
		{
		}

		[Token(Token = "0x60011E4")]
		[Address(RVA = "0xCE6230", Offset = "0xCE6230", VA = "0xCE6230")]
		private void UpdateChangeXZ(Vector3 changeXZ)
		{
		}

		[Token(Token = "0x60011E5")]
		[Address(RVA = "0xCE6404", Offset = "0xCE6404", VA = "0xCE6404")]
		private void HasGoneUnder()
		{
		}

		[Token(Token = "0x60011E6")]
		[Address(RVA = "0xCE6630", Offset = "0xCE6630", VA = "0xCE6630")]
		private void HasSurfaced()
		{
		}

		[Token(Token = "0x60011E7")]
		[Address(RVA = "0xCE01C8", Offset = "0xCE01C8", VA = "0xCE01C8")]
		public static void Reset()
		{
		}

		[Token(Token = "0x60011E8")]
		[Address(RVA = "0xCE67D8", Offset = "0xCE67D8", VA = "0xCE67D8")]
		public RodTip()
		{
		}
	}
	[Token(Token = "0x200028C")]
	public class Rotator : MonoBehaviour
	{
		[Token(Token = "0x400139F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float xSpeed;

		[Token(Token = "0x40013A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float ySpeed;

		[Token(Token = "0x40013A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float zSpeed;

		[Token(Token = "0x60011E9")]
		[Address(RVA = "0xCE6810", Offset = "0xCE6810", VA = "0xCE6810")]
		private void Update()
		{
		}

		[Token(Token = "0x60011EA")]
		[Address(RVA = "0xCE689C", Offset = "0xCE689C", VA = "0xCE689C")]
		public Rotator()
		{
		}
	}
	[Token(Token = "0x200028D")]
	public class RunRageSpray : MonoBehaviour
	{
		[Token(Token = "0x40013A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private ParticleSystem ps;

		[Token(Token = "0x40013A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool isActive;

		[Token(Token = "0x60011EB")]
		[Address(RVA = "0xCE68A4", Offset = "0xCE68A4", VA = "0xCE68A4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60011EC")]
		[Address(RVA = "0xCE695C", Offset = "0xCE695C", VA = "0xCE695C")]
		private void Update()
		{
		}

		[Token(Token = "0x60011ED")]
		[Address(RVA = "0xCE6C64", Offset = "0xCE6C64", VA = "0xCE6C64")]
		private void Play()
		{
		}

		[Token(Token = "0x60011EE")]
		[Address(RVA = "0xCE6C40", Offset = "0xCE6C40", VA = "0xCE6C40")]
		private void Stop()
		{
		}

		[Token(Token = "0x60011EF")]
		[Address(RVA = "0xCE6C8C", Offset = "0xCE6C8C", VA = "0xCE6C8C")]
		public RunRageSpray()
		{
		}
	}
	[Token(Token = "0x200028E")]
	public class ScalePerlinMoveBasedOnVelocity : MonoBehaviour
	{
		[Token(Token = "0x40013A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PerlinMover perlin;

		[Token(Token = "0x40013A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 posMoveScale;

		[Token(Token = "0x40013A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Rigidbody rbToFollow;

		[Token(Token = "0x40013A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float moveVeloMax;

		[Token(Token = "0x40013A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float speedVeloMax;

		[Token(Token = "0x60011F0")]
		[Address(RVA = "0xCE73E8", Offset = "0xCE73E8", VA = "0xCE73E8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60011F1")]
		[Address(RVA = "0xCE74A0", Offset = "0xCE74A0", VA = "0xCE74A0")]
		private void Update()
		{
		}

		[Token(Token = "0x60011F2")]
		[Address(RVA = "0xCE7580", Offset = "0xCE7580", VA = "0xCE7580")]
		public ScalePerlinMoveBasedOnVelocity()
		{
		}
	}
	[Token(Token = "0x200028F")]
	public class SceneloaderAudioFade : MonoBehaviour
	{
		[Token(Token = "0x40013A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AudioSource musicSource;

		[Token(Token = "0x40013AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static SceneloaderAudioFade instance;

		[Token(Token = "0x60011F3")]
		[Address(RVA = "0xCED468", Offset = "0xCED468", VA = "0xCED468")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60011F4")]
		[Address(RVA = "0xCED4C8", Offset = "0xCED4C8", VA = "0xCED4C8")]
		private void FadeIn()
		{
		}

		[Token(Token = "0x60011F5")]
		[Address(RVA = "0xCED50C", Offset = "0xCED50C", VA = "0xCED50C")]
		public static void FadeOut()
		{
		}

		[Token(Token = "0x60011F6")]
		[Address(RVA = "0xCED598", Offset = "0xCED598", VA = "0xCED598")]
		public SceneloaderAudioFade()
		{
		}
	}
	[Token(Token = "0x2000290")]
	public class SetDefaultLanguage : MonoBehaviour
	{
		[Token(Token = "0x40013AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SceneLoader sceneLoader;

		[Token(Token = "0x60011F7")]
		[Address(RVA = "0xCF0798", Offset = "0xCF0798", VA = "0xCF0798")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60011F8")]
		[Address(RVA = "0xCF0A1C", Offset = "0xCF0A1C", VA = "0xCF0A1C")]
		private string CheckSupportedLanguage(string language)
		{
			return null;
		}

		[Token(Token = "0x60011F9")]
		[Address(RVA = "0xCF0AE4", Offset = "0xCF0AE4", VA = "0xCF0AE4")]
		public SetDefaultLanguage()
		{
		}
	}
	[Token(Token = "0x2000291")]
	public class SetInteractionLineColor : MonoBehaviour
	{
		[Token(Token = "0x40013AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Gradient hoverLineColor;

		[Token(Token = "0x40013AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Gradient nonHoverLineColor;

		[Token(Token = "0x60011FA")]
		[Address(RVA = "0xCF0AEC", Offset = "0xCF0AEC", VA = "0xCF0AEC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60011FB")]
		[Address(RVA = "0xCF0B7C", Offset = "0xCF0B7C", VA = "0xCF0B7C")]
		public SetInteractionLineColor()
		{
		}
	}
	[Token(Token = "0x2000292")]
	public class SetRenderScaleSceneLoader : MonoBehaviour
	{
		[Token(Token = "0x60011FC")]
		[Address(RVA = "0xCF0BB0", Offset = "0xCF0BB0", VA = "0xCF0BB0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60011FD")]
		[Address(RVA = "0xCF0BC0", Offset = "0xCF0BC0", VA = "0xCF0BC0")]
		public SetRenderScaleSceneLoader()
		{
		}
	}
	[Token(Token = "0x2000293")]
	public class SetSceneQuality : MonoBehaviour
	{
		[Token(Token = "0x2000494")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E83E8", Offset = "0x9E83E8")]
		private sealed class <QualityInit>d__4 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001A86")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001A87")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001A88")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SetSceneQuality <>4__this;

			[Token(Token = "0x170002C3")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001CB4")]
				[Address(RVA = "0xCF1124", Offset = "0xCF1124", VA = "0xCF1124", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002C4")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001CB6")]
				[Address(RVA = "0xCF118C", Offset = "0xCF118C", VA = "0xCF118C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001CB1")]
			[Address(RVA = "0xCF0FDC", Offset = "0xCF0FDC", VA = "0xCF0FDC")]
			[DebuggerHidden]
			public <QualityInit>d__4(int <>1__state)
			{
			}

			[Token(Token = "0x6001CB2")]
			[Address(RVA = "0xCF1010", Offset = "0xCF1010", VA = "0xCF1010", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001CB3")]
			[Address(RVA = "0xCF1014", Offset = "0xCF1014", VA = "0xCF1014", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001CB5")]
			[Address(RVA = "0xCF112C", Offset = "0xCF112C", VA = "0xCF112C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40013AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int qualityLevel;

		[Token(Token = "0x40013AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int ffrLevel;

		[Token(Token = "0x40013B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float renderScale;

		[Token(Token = "0x60011FE")]
		[Address(RVA = "0xCF0F34", Offset = "0xCF0F34", VA = "0xCF0F34")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60011FF")]
		[Address(RVA = "0xCF0F60", Offset = "0xCF0F60", VA = "0xCF0F60")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9F2008", Offset = "0x9F2008")]
		private IEnumerator QualityInit()
		{
			return null;
		}

		[Token(Token = "0x6001200")]
		[Address(RVA = "0xCF1008", Offset = "0xCF1008", VA = "0xCF1008")]
		public SetSceneQuality()
		{
		}
	}
	[Token(Token = "0x2000294")]
	public class GameSettingController : MonoBehaviour
	{
		[Token(Token = "0x6001201")]
		[Address(RVA = "0xC9F664", Offset = "0xC9F664", VA = "0xC9F664")]
		public static void ActiveTeleport(bool active)
		{
		}

		[Token(Token = "0x6001202")]
		[Address(RVA = "0xC9F6E4", Offset = "0xC9F6E4", VA = "0xC9F6E4")]
		public static void ActiveUiRay(bool active)
		{
		}

		[Token(Token = "0x6001203")]
		[Address(RVA = "0xC9F798", Offset = "0xC9F798", VA = "0xC9F798")]
		public GameSettingController()
		{
		}
	}
	[Token(Token = "0x2000295")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x9E76B0", Offset = "0x9E76B0")]
	public class GameSettingSO : SingletonScriptableObject<GameSettingSO>
	{
		[Token(Token = "0x40013B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9EC960", Offset = "0x9EC960")]
		public bool TeleportActive;

		[Token(Token = "0x40013B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool UiRayActive;

		[Token(Token = "0x40013B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<string> TeleportSceneList;

		[Token(Token = "0x40013B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9EC998", Offset = "0x9EC998")]
		public float LineRad_Mag;

		[Token(Token = "0x40013B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int Max_ReelSpeed;

		[Token(Token = "0x40013B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9EC9B4", Offset = "0x9EC9B4")]
		public int AutoReel_Acceleration;

		[Token(Token = "0x40013B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float Rod_initTension;

		[Token(Token = "0x40013B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float Max_fishweight;

		[Token(Token = "0x40013B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9EC9D0", Offset = "0x9EC9D0")]
		public int SnapForce_scale;

		[Token(Token = "0x40013BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9EC9E8", Offset = "0x9EC9E8")]
		public float TimeToLure0Min;

		[Token(Token = "0x40013BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float TimeToLure0Max;

		[Token(Token = "0x40013BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float TimeToLure1Min;

		[Token(Token = "0x40013BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float TimeToLure1Max;

		[Token(Token = "0x40013BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float TimeToLure2Min;

		[Token(Token = "0x40013BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float TimeToLure2Max;

		[Token(Token = "0x40013C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float TimeToLure3Min;

		[Token(Token = "0x40013C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float TimeToLure3Max;

		[Token(Token = "0x40013C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float TimeToLure4Min;

		[Token(Token = "0x40013C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public float TimeToLure4Max;

		[Token(Token = "0x6001204")]
		[Address(RVA = "0xC9F7A0", Offset = "0xC9F7A0", VA = "0xC9F7A0")]
		public GameSettingSO()
		{
		}
	}
	[Token(Token = "0x2000296")]
	public abstract class SingletonScriptableObject<T> : ScriptableObject where T : ScriptableObject
	{
		[Token(Token = "0x40013C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static T m_Instance;

		[Token(Token = "0x40013C5")]
		private const string assetpath = "PersistSetting/GameSettingSO";

		[Token(Token = "0x17000184")]
		public static T Instance
		{
			[Token(Token = "0x6001205")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001206")]
		protected SingletonScriptableObject()
		{
		}
	}
	[Token(Token = "0x2000297")]
	public enum SfxShip
	{
		[Token(Token = "0x40013C7")]
		AquariumDoor
	}
	[Token(Token = "0x2000298")]
	public class ShipAudio : MonoBehaviour
	{
		[Token(Token = "0x40013C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AudioSource shipAudio;

		[Token(Token = "0x40013C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ShipAudio instance;

		[Token(Token = "0x40013CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9ECA20", Offset = "0x9ECA20")]
		public AudioClip aquariumDoor;

		[Token(Token = "0x6001208")]
		[Address(RVA = "0xCF1A58", Offset = "0xCF1A58", VA = "0xCF1A58")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001209")]
		[Address(RVA = "0xCF1AB0", Offset = "0xCF1AB0", VA = "0xCF1AB0")]
		public static void PlayAt(SfxShip sfx, Vector3 position)
		{
		}

		[Token(Token = "0x600120A")]
		[Address(RVA = "0xCF1BA0", Offset = "0xCF1BA0", VA = "0xCF1BA0")]
		public ShipAudio()
		{
		}
	}
	[Token(Token = "0x2000299")]
	public class ShowDebugPressOptions : MonoBehaviour
	{
		[Token(Token = "0x40013CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TextMeshProUGUI textField;

		[Token(Token = "0x600120B")]
		[Address(RVA = "0xCF1BA8", Offset = "0xCF1BA8", VA = "0xCF1BA8")]
		private void Start()
		{
		}

		[Token(Token = "0x600120C")]
		[Address(RVA = "0xCF1CA4", Offset = "0xCF1CA4", VA = "0xCF1CA4")]
		public ShowDebugPressOptions()
		{
		}
	}
	[Token(Token = "0x200029A")]
	public class ShowFFRLevel : MonoBehaviour
	{
		[Token(Token = "0x40013CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TextMeshProUGUI ffrLevelText;

		[Token(Token = "0x600120D")]
		[Address(RVA = "0xCF1CAC", Offset = "0xCF1CAC", VA = "0xCF1CAC")]
		private void Update()
		{
		}

		[Token(Token = "0x600120E")]
		[Address(RVA = "0xCF1CEC", Offset = "0xCF1CEC", VA = "0xCF1CEC")]
		public ShowFFRLevel()
		{
		}
	}
	[Token(Token = "0x200029B")]
	public class SlantedButton : MonoBehaviour
	{
		[Token(Token = "0x600120F")]
		[Address(RVA = "0xC2B0FC", Offset = "0xC2B0FC", VA = "0xC2B0FC")]
		private void Start()
		{
		}

		[Token(Token = "0x6001210")]
		[Address(RVA = "0xC2B164", Offset = "0xC2B164", VA = "0xC2B164")]
		public SlantedButton()
		{
		}
	}
	[Token(Token = "0x200029C")]
	public class SpawnDistanceDebug : MonoBehaviour
	{
		[Token(Token = "0x40013CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TextMeshProUGUI noPatternLimitValText;

		[Token(Token = "0x40013CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TextMeshProUGUI maxDistanceLimitValText;

		[Token(Token = "0x40013CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TextMeshProUGUI easyMinText;

		[Token(Token = "0x40013D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public TextMeshProUGUI easyMaxText;

		[Token(Token = "0x40013D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public TextMeshProUGUI mediumMinText;

		[Token(Token = "0x40013D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public TextMeshProUGUI mediumMaxText;

		[Token(Token = "0x40013D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public TextMeshProUGUI hardMinText;

		[Token(Token = "0x40013D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public TextMeshProUGUI hardMaxText;

		[Token(Token = "0x40013D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public TextMeshProUGUI expertMinText;

		[Token(Token = "0x40013D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public TextMeshProUGUI expertMaxText;

		[Token(Token = "0x40013D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Slider easyMin;

		[Token(Token = "0x40013D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Slider easyMax;

		[Token(Token = "0x40013D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Slider mediumMin;

		[Token(Token = "0x40013DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Slider mediumMax;

		[Token(Token = "0x40013DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Slider hardMin;

		[Token(Token = "0x40013DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public Slider hardMax;

		[Token(Token = "0x40013DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public Slider expertMin;

		[Token(Token = "0x40013DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public Slider expertMax;

		[Token(Token = "0x6001211")]
		[Address(RVA = "0xC2C440", Offset = "0xC2C440", VA = "0xC2C440")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001212")]
		[Address(RVA = "0xC2C9F8", Offset = "0xC2C9F8", VA = "0xC2C9F8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001213")]
		[Address(RVA = "0xC2C4BC", Offset = "0xC2C4BC", VA = "0xC2C4BC")]
		private void InitSliders()
		{
		}

		[Token(Token = "0x6001214")]
		[Address(RVA = "0xC2CA6C", Offset = "0xC2CA6C", VA = "0xC2CA6C")]
		public void OnValueChanged(Slider slider)
		{
		}

		[Token(Token = "0x6001215")]
		[Address(RVA = "0xC2D0F0", Offset = "0xC2D0F0", VA = "0xC2D0F0")]
		private void LocationChange()
		{
		}

		[Token(Token = "0x6001216")]
		[Address(RVA = "0xC2D24C", Offset = "0xC2D24C", VA = "0xC2D24C")]
		public void ResetDefaults()
		{
		}

		[Token(Token = "0x6001217")]
		[Address(RVA = "0xC2D2D0", Offset = "0xC2D2D0", VA = "0xC2D2D0")]
		public SpawnDistanceDebug()
		{
		}
	}
	[Token(Token = "0x200029D")]
	public class SpecialRodToStand : MonoBehaviour
	{
		[Token(Token = "0x40013DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool noPickupOnDismiss;

		[Token(Token = "0x6001218")]
		[Address(RVA = "0xC2D2D8", Offset = "0xC2D2D8", VA = "0xC2D2D8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001219")]
		[Address(RVA = "0xC2D33C", Offset = "0xC2D33C", VA = "0xC2D33C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600121A")]
		[Address(RVA = "0xC2D3B4", Offset = "0xC2D3B4", VA = "0xC2D3B4")]
		public SpecialRodToStand()
		{
		}
	}
	[Token(Token = "0x200029E")]
	public class Splash : MonoBehaviour
	{
		[Token(Token = "0x40013E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Splash instance;

		[Token(Token = "0x600121B")]
		[Address(RVA = "0xC2D3BC", Offset = "0xC2D3BC", VA = "0xC2D3BC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600121C")]
		[Address(RVA = "0xC2D414", Offset = "0xC2D414", VA = "0xC2D414")]
		public static void DoSplash()
		{
		}

		[Token(Token = "0x600121D")]
		[Address(RVA = "0xC2D418", Offset = "0xC2D418", VA = "0xC2D418")]
		public Splash()
		{
		}
	}
	[Token(Token = "0x200029F")]
	public class SporePod : MonoBehaviour
	{
		[Token(Token = "0x40013E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float hiddenTime;

		[Token(Token = "0x40013E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float lifetime;

		[Token(Token = "0x40013E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float appearTime;

		[Token(Token = "0x40013E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform tweenMover;

		[Token(Token = "0x40013E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Tween moveTween;

		[Token(Token = "0x40013E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Collider col;

		[Token(Token = "0x40013E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public RepellentManager rplntManager;

		[Token(Token = "0x40013E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Transform explosion;

		[Token(Token = "0x40013E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Transform sporePuff;

		[Token(Token = "0x40013EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Transform sporeDisperse;

		[Token(Token = "0x40013EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public RepellentSkin skin;

		[Token(Token = "0x40013EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public GameObject[] skinModels;

		[Token(Token = "0x600121E")]
		[Address(RVA = "0xC2D420", Offset = "0xC2D420", VA = "0xC2D420")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600121F")]
		[Address(RVA = "0xC2D698", Offset = "0xC2D698", VA = "0xC2D698")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001220")]
		[Address(RVA = "0xC2D48C", Offset = "0xC2D48C", VA = "0xC2D48C")]
		private void SetRandomPos(bool ignoreWater = false)
		{
		}

		[Token(Token = "0x6001221")]
		[Address(RVA = "0xC2D6A0", Offset = "0xC2D6A0", VA = "0xC2D6A0")]
		public void ShowPod()
		{
		}

		[Token(Token = "0x6001222")]
		[Address(RVA = "0xC2D8C8", Offset = "0xC2D8C8", VA = "0xC2D8C8")]
		private void DisableAllSkins()
		{
		}

		[Token(Token = "0x6001223")]
		[Address(RVA = "0xC2D938", Offset = "0xC2D938", VA = "0xC2D938")]
		public void RemovePod()
		{
		}

		[Token(Token = "0x6001224")]
		[Address(RVA = "0xC2DA44", Offset = "0xC2DA44", VA = "0xC2DA44")]
		public void RemovePodInstant()
		{
		}

		[Token(Token = "0x6001225")]
		[Address(RVA = "0xC2DAD0", Offset = "0xC2DAD0", VA = "0xC2DAD0")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6001226")]
		[Address(RVA = "0xC2DD8C", Offset = "0xC2DD8C", VA = "0xC2DD8C")]
		public SporePod()
		{
		}

		[Token(Token = "0x6001227")]
		[Address(RVA = "0xC2DDA8", Offset = "0xC2DDA8", VA = "0xC2DDA8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F206C", Offset = "0x9F206C")]
		private void <RemovePod>b__17_0()
		{
		}
	}
	[Token(Token = "0x20002A0")]
	public class Stamina : MonoBehaviour
	{
		[Token(Token = "0x40013ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float maxStamina;

		[Token(Token = "0x40013EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float currentStamina;

		[Token(Token = "0x17000185")]
		public float CurrentStamina
		{
			[Token(Token = "0x6001228")]
			[Address(RVA = "0xC2DDE8", Offset = "0xC2DDE8", VA = "0xC2DDE8")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000186")]
		public float CurrentStaminaScaled
		{
			[Token(Token = "0x6001229")]
			[Address(RVA = "0xC2DDF0", Offset = "0xC2DDF0", VA = "0xC2DDF0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x600122A")]
		[Address(RVA = "0xC2DE0C", Offset = "0xC2DE0C", VA = "0xC2DE0C")]
		public void ResetStamina()
		{
		}

		[Token(Token = "0x600122B")]
		[Address(RVA = "0xC2DE14", Offset = "0xC2DE14", VA = "0xC2DE14")]
		public void SetStaminaMax(float max)
		{
		}

		[Token(Token = "0x600122C")]
		[Address(RVA = "0xC2DE1C", Offset = "0xC2DE1C", VA = "0xC2DE1C")]
		public void ReduceStaminaBy(float val)
		{
		}

		[Token(Token = "0x600122D")]
		[Address(RVA = "0xC2DE38", Offset = "0xC2DE38", VA = "0xC2DE38")]
		public void ReduceStaminaByPercent(float percent)
		{
		}

		[Token(Token = "0x600122E")]
		[Address(RVA = "0xC2DE64", Offset = "0xC2DE64", VA = "0xC2DE64")]
		public Stamina()
		{
		}
	}
	[Token(Token = "0x20002A1")]
	public class StaminaDebug : MonoBehaviour
	{
		[Token(Token = "0x40013EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TextMeshProUGUI staminaValue;

		[Token(Token = "0x40013F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TextMeshProUGUI staminaPercent;

		[Token(Token = "0x40013F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TextMeshProUGUI staminaEffectiveness;

		[Token(Token = "0x600122F")]
		[Address(RVA = "0xC2DE6C", Offset = "0xC2DE6C", VA = "0xC2DE6C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001230")]
		[Address(RVA = "0xC2E028", Offset = "0xC2E028", VA = "0xC2E028")]
		public void SetEffectiveness(float val)
		{
		}

		[Token(Token = "0x6001231")]
		[Address(RVA = "0xC2E09C", Offset = "0xC2E09C", VA = "0xC2E09C")]
		public StaminaDebug()
		{
		}
	}
	[Token(Token = "0x20002A2")]
	public static class EventHub
	{
		[Token(Token = "0x2000495")]
		public delegate void FishCaughtAction(FpFish fish, bool isCheating = false);

		[Token(Token = "0x2000496")]
		public delegate void SummonFishingPadAction(bool onShip = false);

		[Token(Token = "0x2000497")]
		public delegate void CloseFishPadAction();

		[Token(Token = "0x2000498")]
		public delegate void GrabRodAction();

		[Token(Token = "0x2000499")]
		public delegate void ReleaseRodAction();

		[Token(Token = "0x200049A")]
		public delegate void GrabReelAction();

		[Token(Token = "0x200049B")]
		public delegate void ReleaseReelAction();

		[Token(Token = "0x200049C")]
		public delegate void PlayerSettingHasChanged(PlayerSetting setting);

		[Token(Token = "0x200049D")]
		public delegate void PlayerXPGotAction(int xp);

		[Token(Token = "0x200049E")]
		public delegate void PlayerLevelUpAction(int level);

		[Token(Token = "0x200049F")]
		public delegate void PlayerTournamentPointGotAction(int tp);

		[Token(Token = "0x20004A0")]
		public delegate void PlayerRodEquipAction(RodSO rod);

		[Token(Token = "0x20004A1")]
		public delegate void PlayerLureEquipAction(LureSO lure);

		[Token(Token = "0x20004A2")]
		public delegate void PlayerCharmEquipAction(CharmSO charm);

		[Token(Token = "0x20004A3")]
		public delegate void PlayerLocationChangeAction();

		[Token(Token = "0x20004A4")]
		public delegate void PlayerSnapSuccessAction();

		[Token(Token = "0x20004A5")]
		public delegate void MissionChangedAction(MissionSO mission);

		[Token(Token = "0x20004A6")]
		public delegate void SideMissionAcceptedAction(MissionSO mission);

		[Token(Token = "0x20004A7")]
		public delegate void SideMissionQuittedAction();

		[Token(Token = "0x20004A8")]
		public delegate void ChallengeMissionAcceptedAction(MissionSO mission);

		[Token(Token = "0x20004A9")]
		public delegate void ChallengeMissionQuittedAction();

		[Token(Token = "0x20004AA")]
		public delegate void Mission_TutorialClearAction(MissionSO mission, bool isCheating = false);

		[Token(Token = "0x20004AB")]
		public delegate void TeleportEnabledAction();

		[Token(Token = "0x20004AC")]
		public delegate void TeleportDisabledAction();

		[Token(Token = "0x20004AD")]
		public delegate void Mission_CutsceneClearAction(MissionSO mission, bool isCheating = false);

		[Token(Token = "0x20004AE")]
		public delegate void Mission_FishPadClearAction(MissionSO mission, bool isCheating = false);

		[Token(Token = "0x20004AF")]
		public delegate void MissionCompletedAction(MissionSO mission);

		[Token(Token = "0x20004B0")]
		public delegate void MissionSkippedAction(MissionSO mission);

		[Token(Token = "0x20004B1")]
		public delegate void ItemGotAction(ItemSO itemSO, int amount);

		[Token(Token = "0x20004B2")]
		public delegate void ItemCraftedAction(CraftingRecipesSO recipe);

		[Token(Token = "0x20004B3")]
		public delegate void FishCanHookAction();

		[Token(Token = "0x20004B4")]
		public delegate void FishHookedAction();

		[Token(Token = "0x20004B5")]
		public delegate void FishCanRecoverAction();

		[Token(Token = "0x20004B6")]
		public delegate void BobberRecoverAction();

		[Token(Token = "0x20004B7")]
		public delegate void FishTakenAction(FpFish fish);

		[Token(Token = "0x20004B8")]
		public delegate void FishReleaseAction(FpFish fish);

		[Token(Token = "0x20004B9")]
		public delegate void FishKeepAction(FpFish fish);

		[Token(Token = "0x20004BA")]
		public delegate void FishLostAction(FpFish fish);

		[Token(Token = "0x20004BB")]
		public delegate void PatternPlayStarted();

		[Token(Token = "0x20004BC")]
		public delegate void MissionLoadAction(MissionSO mission);

		[Token(Token = "0x20004BD")]
		public delegate void MissionConfirmedAction(MissionSO mission);

		[Token(Token = "0x20004BE")]
		public delegate void TimedMissionSetupedAction(float time);

		[Token(Token = "0x20004BF")]
		public delegate void TimedMissionUpdateTimerAction(float time);

		[Token(Token = "0x20004C0")]
		public delegate void MissionFailedAction(MissionSO mission);

		[Token(Token = "0x20004C1")]
		public delegate void FishOPediaFishUnlockedAction(FpFish fishType);

		[Token(Token = "0x20004C2")]
		public delegate void FishOPediaFishWeightUpdatedAction(FpFish fishType);

		[Token(Token = "0x20004C3")]
		public delegate void FishOPediaFishTotalWeightUpdatedAction(FishOPediaController.FishOPedia_ fishOPedia);

		[Token(Token = "0x20004C4")]
		public delegate void ItemCraftingUnlockedAction(bool locked);

		[Token(Token = "0x20004C5")]
		public delegate void SaveCraftingSceneStatAction();

		[Token(Token = "0x20004C6")]
		public delegate void SaveAquariumSceneStatAction();

		[Token(Token = "0x20004C7")]
		public delegate void CharmCraftingUnlockedAction(bool locked);

		[Token(Token = "0x20004C8")]
		public delegate void BoostTimerUpdateAction(float val);

		[Token(Token = "0x20004C9")]
		public delegate void MissionUpdatedAction();

		[Token(Token = "0x20004CA")]
		public delegate void MissionRewardGotAction();

		[Token(Token = "0x20004CB")]
		public delegate void DismissTakeFishUIAction();

		[Token(Token = "0x20004CC")]
		public delegate void FishPoolChangedAction();

		[Token(Token = "0x20004CD")]
		public delegate void FishPoolRestockAction();

		[Token(Token = "0x20004CE")]
		public delegate void SceneLoadFinishedAction();

		[Token(Token = "0x20004CF")]
		public delegate void SceneLoadFadeFinishedAction();

		[Token(Token = "0x20004D0")]
		public delegate void CutsceneLoadAction();

		[Token(Token = "0x20004D1")]
		public delegate void CutsceneUnloadAction();

		[Token(Token = "0x20004D2")]
		public delegate void CutsceneStartedAction();

		[Token(Token = "0x20004D3")]
		public delegate void CutsceneFinishedAction(bool isSpecialCutscene = false);

		[Token(Token = "0x20004D4")]
		public delegate void CutsceneTimelinePausedAction();

		[Token(Token = "0x20004D5")]
		public delegate void CutsceneTimelineResumedAction();

		[Token(Token = "0x20004D6")]
		public delegate void CutsceneTimelineFinishedAction();

		[Token(Token = "0x20004D7")]
		public delegate void ReelInMinigameStartedAction();

		[Token(Token = "0x20004D8")]
		public delegate void CastArmedAction();

		[Token(Token = "0x20004D9")]
		public delegate void CastTargetHitAction();

		[Token(Token = "0x20004DA")]
		public delegate void TensionOverAlertAction();

		[Token(Token = "0x20004DB")]
		public delegate void TensionUnderAlertAction();

		[Token(Token = "0x20004DC")]
		public delegate void ReturnMainMenuAction();

		[Token(Token = "0x20004DD")]
		public delegate void TakeTutCompleteRewardAction();

		[Token(Token = "0x20004DE")]
		public delegate void SetPopVisibilityAction(bool state);

		[Token(Token = "0x20004DF")]
		public delegate void SetPopFlyToRightAction(bool state);

		[Token(Token = "0x20004E0")]
		public delegate void ClearCutsceneViaButtonAction();

		[Token(Token = "0x20004E1")]
		public delegate void StartBoostAction();

		[Token(Token = "0x20004E2")]
		public delegate void StopBoostAction();

		[Token(Token = "0x20004E3")]
		public delegate void FailedBoostAction();

		[Token(Token = "0x20004E4")]
		public delegate void CraftingMinigameActivateAction(bool state);

		[Token(Token = "0x20004E5")]
		public delegate void NewChallengePanelDismissedAction();

		[Token(Token = "0x20004E6")]
		public delegate void FishRewardsSequenceFinished();

		[Token(Token = "0x20004E7")]
		public delegate void PlaceFishInAquariumAction();

		[Token(Token = "0x20004E8")]
		public delegate void AquariumCutsceneDismissedAction();

		[Token(Token = "0x20004E9")]
		public delegate void ReachedFinalCutsceneAction();

		[Token(Token = "0x14000060")]
		public static event FishCaughtAction OnFishCaught
		{
			[Token(Token = "0x6001232")]
			[Address(RVA = "0xBF86B8", Offset = "0xBF86B8", VA = "0xBF86B8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F207C", Offset = "0x9F207C")]
			add
			{
			}
			[Token(Token = "0x6001233")]
			[Address(RVA = "0xBF8D2C", Offset = "0xBF8D2C", VA = "0xBF8D2C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F208C", Offset = "0x9F208C")]
			remove
			{
			}
		}

		[Token(Token = "0x14000061")]
		public static event SummonFishingPadAction OnSummonFP
		{
			[Token(Token = "0x6001234")]
			[Address(RVA = "0xC07054", Offset = "0xC07054", VA = "0xC07054")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F209C", Offset = "0x9F209C")]
			add
			{
			}
			[Token(Token = "0x6001235")]
			[Address(RVA = "0xC0710C", Offset = "0xC0710C", VA = "0xC0710C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F20AC", Offset = "0x9F20AC")]
			remove
			{
			}
		}

		[Token(Token = "0x14000062")]
		public static event CloseFishPadAction OnFishPadClosed
		{
			[Token(Token = "0x6001236")]
			[Address(RVA = "0xC071C4", Offset = "0xC071C4", VA = "0xC071C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F20BC", Offset = "0x9F20BC")]
			add
			{
			}
			[Token(Token = "0x6001237")]
			[Address(RVA = "0xC0727C", Offset = "0xC0727C", VA = "0xC0727C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F20CC", Offset = "0x9F20CC")]
			remove
			{
			}
		}

		[Token(Token = "0x14000063")]
		public static event GrabRodAction OnGrabRod
		{
			[Token(Token = "0x6001238")]
			[Address(RVA = "0xBFAFC0", Offset = "0xBFAFC0", VA = "0xBFAFC0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F20DC", Offset = "0x9F20DC")]
			add
			{
			}
			[Token(Token = "0x6001239")]
			[Address(RVA = "0xBFBB0C", Offset = "0xBFBB0C", VA = "0xBFBB0C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F20EC", Offset = "0x9F20EC")]
			remove
			{
			}
		}

		[Token(Token = "0x14000064")]
		public static event ReleaseRodAction OnReleaseRod
		{
			[Token(Token = "0x600123A")]
			[Address(RVA = "0xBFB078", Offset = "0xBFB078", VA = "0xBFB078")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F20FC", Offset = "0x9F20FC")]
			add
			{
			}
			[Token(Token = "0x600123B")]
			[Address(RVA = "0xBFBBC4", Offset = "0xBFBBC4", VA = "0xBFBBC4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F210C", Offset = "0x9F210C")]
			remove
			{
			}
		}

		[Token(Token = "0x14000065")]
		public static event GrabReelAction OnGrabReel
		{
			[Token(Token = "0x600123C")]
			[Address(RVA = "0xBFB130", Offset = "0xBFB130", VA = "0xBFB130")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F211C", Offset = "0x9F211C")]
			add
			{
			}
			[Token(Token = "0x600123D")]
			[Address(RVA = "0xBFBC7C", Offset = "0xBFBC7C", VA = "0xBFBC7C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F212C", Offset = "0x9F212C")]
			remove
			{
			}
		}

		[Token(Token = "0x14000066")]
		public static event ReleaseReelAction OnReleaseReel
		{
			[Token(Token = "0x600123E")]
			[Address(RVA = "0xBFB1E8", Offset = "0xBFB1E8", VA = "0xBFB1E8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F213C", Offset = "0x9F213C")]
			add
			{
			}
			[Token(Token = "0x600123F")]
			[Address(RVA = "0xBFBD34", Offset = "0xBFBD34", VA = "0xBFBD34")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F214C", Offset = "0x9F214C")]
			remove
			{
			}
		}

		[Token(Token = "0x14000067")]
		public static event PlayerSettingHasChanged OnPlayerSettingChanged
		{
			[Token(Token = "0x6001240")]
			[Address(RVA = "0xC07334", Offset = "0xC07334", VA = "0xC07334")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F215C", Offset = "0x9F215C")]
			add
			{
			}
			[Token(Token = "0x6001241")]
			[Address(RVA = "0xC073EC", Offset = "0xC073EC", VA = "0xC073EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F216C", Offset = "0x9F216C")]
			remove
			{
			}
		}

		[Token(Token = "0x14000068")]
		public static event PlayerXPGotAction OnPlayerXPGot
		{
			[Token(Token = "0x6001242")]
			[Address(RVA = "0xC074A4", Offset = "0xC074A4", VA = "0xC074A4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F217C", Offset = "0x9F217C")]
			add
			{
			}
			[Token(Token = "0x6001243")]
			[Address(RVA = "0xC0755C", Offset = "0xC0755C", VA = "0xC0755C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F218C", Offset = "0x9F218C")]
			remove
			{
			}
		}

		[Token(Token = "0x14000069")]
		public static event PlayerLevelUpAction OnPlayerLevelUp
		{
			[Token(Token = "0x6001244")]
			[Address(RVA = "0xC07614", Offset = "0xC07614", VA = "0xC07614")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F219C", Offset = "0x9F219C")]
			add
			{
			}
			[Token(Token = "0x6001245")]
			[Address(RVA = "0xC076CC", Offset = "0xC076CC", VA = "0xC076CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F21AC", Offset = "0x9F21AC")]
			remove
			{
			}
		}

		[Token(Token = "0x1400006A")]
		public static event PlayerTournamentPointGotAction OnPlayerTournamentPointGot
		{
			[Token(Token = "0x6001246")]
			[Address(RVA = "0xC07784", Offset = "0xC07784", VA = "0xC07784")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F21BC", Offset = "0x9F21BC")]
			add
			{
			}
			[Token(Token = "0x6001247")]
			[Address(RVA = "0xC0783C", Offset = "0xC0783C", VA = "0xC0783C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F21CC", Offset = "0x9F21CC")]
			remove
			{
			}
		}

		[Token(Token = "0x1400006B")]
		public static event PlayerRodEquipAction OnPlayerRodEquip
		{
			[Token(Token = "0x6001248")]
			[Address(RVA = "0xC078F4", Offset = "0xC078F4", VA = "0xC078F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F21DC", Offset = "0x9F21DC")]
			add
			{
			}
			[Token(Token = "0x6001249")]
			[Address(RVA = "0xC079AC", Offset = "0xC079AC", VA = "0xC079AC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F21EC", Offset = "0x9F21EC")]
			remove
			{
			}
		}

		[Token(Token = "0x1400006C")]
		public static event PlayerLureEquipAction OnPlayerLureEquip
		{
			[Token(Token = "0x600124A")]
			[Address(RVA = "0xBF1AC8", Offset = "0xBF1AC8", VA = "0xBF1AC8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F21FC", Offset = "0x9F21FC")]
			add
			{
			}
			[Token(Token = "0x600124B")]
			[Address(RVA = "0xBF1BF0", Offset = "0xBF1BF0", VA = "0xBF1BF0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F220C", Offset = "0x9F220C")]
			remove
			{
			}
		}

		[Token(Token = "0x1400006D")]
		public static event PlayerCharmEquipAction OnPlayerCharmEquip
		{
			[Token(Token = "0x600124C")]
			[Address(RVA = "0xC07A64", Offset = "0xC07A64", VA = "0xC07A64")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F221C", Offset = "0x9F221C")]
			add
			{
			}
			[Token(Token = "0x600124D")]
			[Address(RVA = "0xC07B1C", Offset = "0xC07B1C", VA = "0xC07B1C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F222C", Offset = "0x9F222C")]
			remove
			{
			}
		}

		[Token(Token = "0x1400006E")]
		public static event PlayerLocationChangeAction OnPlayerLocationChange
		{
			[Token(Token = "0x600124E")]
			[Address(RVA = "0xBFE36C", Offset = "0xBFE36C", VA = "0xBFE36C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F223C", Offset = "0x9F223C")]
			add
			{
			}
			[Token(Token = "0x600124F")]
			[Address(RVA = "0xBFEA38", Offset = "0xBFEA38", VA = "0xBFEA38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F224C", Offset = "0x9F224C")]
			remove
			{
			}
		}

		[Token(Token = "0x1400006F")]
		public static event PlayerSnapSuccessAction OnPlayerSnapSuccess
		{
			[Token(Token = "0x6001250")]
			[Address(RVA = "0xC07BD4", Offset = "0xC07BD4", VA = "0xC07BD4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F225C", Offset = "0x9F225C")]
			add
			{
			}
			[Token(Token = "0x6001251")]
			[Address(RVA = "0xC07C8C", Offset = "0xC07C8C", VA = "0xC07C8C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F226C", Offset = "0x9F226C")]
			remove
			{
			}
		}

		[Token(Token = "0x14000070")]
		public static event MissionChangedAction OnMissionChanged
		{
			[Token(Token = "0x6001252")]
			[Address(RVA = "0xC07D44", Offset = "0xC07D44", VA = "0xC07D44")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F227C", Offset = "0x9F227C")]
			add
			{
			}
			[Token(Token = "0x6001253")]
			[Address(RVA = "0xC07DFC", Offset = "0xC07DFC", VA = "0xC07DFC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F228C", Offset = "0x9F228C")]
			remove
			{
			}
		}

		[Token(Token = "0x14000071")]
		public static event SideMissionAcceptedAction OnSideMissionAccepted
		{
			[Token(Token = "0x6001254")]
			[Address(RVA = "0xC07EB4", Offset = "0xC07EB4", VA = "0xC07EB4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F229C", Offset = "0x9F229C")]
			add
			{
			}
			[Token(Token = "0x6001255")]
			[Address(RVA = "0xC07F6C", Offset = "0xC07F6C", VA = "0xC07F6C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F22AC", Offset = "0x9F22AC")]
			remove
			{
			}
		}

		[Token(Token = "0x14000072")]
		public static event SideMissionQuittedAction OnSideMissionQuitted
		{
			[Token(Token = "0x6001256")]
			[Address(RVA = "0xC08024", Offset = "0xC08024", VA = "0xC08024")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F22BC", Offset = "0x9F22BC")]
			add
			{
			}
			[Token(Token = "0x6001257")]
			[Address(RVA = "0xC080DC", Offset = "0xC080DC", VA = "0xC080DC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F22CC", Offset = "0x9F22CC")]
			remove
			{
			}
		}

		[Token(Token = "0x14000073")]
		public static event ChallengeMissionAcceptedAction OnChallengeMissionAccepted
		{
			[Token(Token = "0x6001258")]
			[Address(RVA = "0xBF8824", Offset = "0xBF8824", VA = "0xBF8824")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F22DC", Offset = "0x9F22DC")]
			add
			{
			}
			[Token(Token = "0x6001259")]
			[Address(RVA = "0xBF8E98", Offset = "0xBF8E98", VA = "0xBF8E98")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F22EC", Offset = "0x9F22EC")]
			remove
			{
			}
		}

		[Token(Token = "0x14000074")]
		public static event ChallengeMissionQuittedAction OnChallengeMissionQuitted
		{
			[Token(Token = "0x600125A")]
			[Address(RVA = "0xC08194", Offset = "0xC08194", VA = "0xC08194")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F22FC", Offset = "0x9F22FC")]
			add
			{
			}
			[Token(Token = "0x600125B")]
			[Address(RVA = "0xC0824C", Offset = "0xC0824C", VA = "0xC0824C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F230C", Offset = "0x9F230C")]
			remove
			{
			}
		}

		[Token(Token = "0x14000075")]
		public static event Mission_TutorialClearAction OnMission_TutorialClear
		{
			[Token(Token = "0x600125C")]
			[Address(RVA = "0xC08304", Offset = "0xC08304", VA = "0xC08304")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F231C", Offset = "0x9F231C")]
			add
			{
			}
			[Token(Token = "0x600125D")]
			[Address(RVA = "0xC083BC", Offset = "0xC083BC", VA = "0xC083BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F232C", Offset = "0x9F232C")]
			remove
			{
			}
		}

		[Token(Token = "0x14000076")]
		public static event TeleportEnabledAction OnTeleportEnabled
		{
			[Token(Token = "0x600125E")]
			[Address(RVA = "0xC03314", Offset = "0xC03314", VA = "0xC03314")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F233C", Offset = "0x9F233C")]
			add
			{
			}
			[Token(Token = "0x600125F")]
			[Address(RVA = "0xC03580", Offset = "0xC03580", VA = "0xC03580")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F234C", Offset = "0x9F234C")]
			remove
			{
			}
		}

		[Token(Token = "0x14000077")]
		public static event TeleportDisabledAction OnTeleportDisabled
		{
			[Token(Token = "0x6001260")]
			[Address(RVA = "0xC033CC", Offset = "0xC033CC", VA = "0xC033CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F235C", Offset = "0x9F235C")]
			add
			{
			}
			[Token(Token = "0x6001261")]
			[Address(RVA = "0xC03638", Offset = "0xC03638", VA = "0xC03638")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F236C", Offset = "0x9F236C")]
			remove
			{
			}
		}

		[Token(Token = "0x14000078")]
		public static event Mission_CutsceneClearAction OnMission_CutsceneClear
		{
			[Token(Token = "0x6001262")]
			[Address(RVA = "0xC08474", Offset = "0xC08474", VA = "0xC08474")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F237C", Offset = "0x9F237C")]
			add
			{
			}
			[Token(Token = "0x6001263")]
			[Address(RVA = "0xC0852C", Offset = "0xC0852C", VA = "0xC0852C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F238C", Offset = "0x9F238C")]
			remove
			{
			}
		}

		[Token(Token = "0x14000079")]
		public static event Mission_FishPadClearAction OnMission_FishPadClear
		{
			[Token(Token = "0x6001264")]
			[Address(RVA = "0xC085E4", Offset = "0xC085E4", VA = "0xC085E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F239C", Offset = "0x9F239C")]
			add
			{
			}
			[Token(Token = "0x6001265")]
			[Address(RVA = "0xC0869C", Offset = "0xC0869C", VA = "0xC0869C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F23AC", Offset = "0x9F23AC")]
			remove
			{
			}
		}

		[Token(Token = "0x1400007A")]
		public static event MissionCompletedAction OnMissionCompleted
		{
			[Token(Token = "0x6001266")]
			[Address(RVA = "0xC08754", Offset = "0xC08754", VA = "0xC08754")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F23BC", Offset = "0x9F23BC")]
			add
			{
			}
			[Token(Token = "0x6001267")]
			[Address(RVA = "0xC0880C", Offset = "0xC0880C", VA = "0xC0880C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F23CC", Offset = "0x9F23CC")]
			remove
			{
			}
		}

		[Token(Token = "0x1400007B")]
		public static event MissionSkippedAction OnMissionSkipped
		{
			[Token(Token = "0x6001268")]
			[Address(RVA = "0xC088C4", Offset = "0xC088C4", VA = "0xC088C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F23DC", Offset = "0x9F23DC")]
			add
			{
			}
			[Token(Token = "0x6001269")]
			[Address(RVA = "0xC0897C", Offset = "0xC0897C", VA = "0xC0897C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F23EC", Offset = "0x9F23EC")]
			remove
			{
			}
		}

		[Token(Token = "0x1400007C")]
		public static event ItemGotAction OnItemGot
		{
			[Token(Token = "0x600126A")]
			[Address(RVA = "0xBF876C", Offset = "0xBF876C", VA = "0xBF876C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F23FC", Offset = "0x9F23FC")]
			add
			{
			}
			[Token(Token = "0x600126B")]
			[Address(RVA = "0xBF8DE0", Offset = "0xBF8DE0", VA = "0xBF8DE0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F240C", Offset = "0x9F240C")]
			remove
			{
			}
		}

		[Token(Token = "0x1400007D")]
		public static event ItemCraftedAction OnItemCrafted
		{
			[Token(Token = "0x600126C")]
			[Address(RVA = "0xC04F38", Offset = "0xC04F38", VA = "0xC04F38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F241C", Offset = "0x9F241C")]
			add
			{
			}
			[Token(Token = "0x600126D")]
			[Address(RVA = "0xC05B24", Offset = "0xC05B24", VA = "0xC05B24")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F242C", Offset = "0x9F242C")]
			remove
			{
			}
		}

		[Token(Token = "0x1400007E")]
		public static event FishCanHookAction OnFishCanHook
		{
			[Token(Token = "0x600126E")]
			[Address(RVA = "0xC008D0", Offset = "0xC008D0", VA = "0xC008D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F243C", Offset = "0x9F243C")]
			add
			{
			}
			[Token(Token = "0x600126F")]
			[Address(RVA = "0xC00D20", Offset = "0xC00D20", VA = "0xC00D20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F244C", Offset = "0x9F244C")]
			remove
			{
			}
		}

		[Token(Token = "0x1400007F")]
		public static event FishHookedAction OnFishHooked
		{
			[Token(Token = "0x6001270")]
			[Address(RVA = "0xC00988", Offset = "0xC00988", VA = "0xC00988")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F245C", Offset = "0x9F245C")]
			add
			{
			}
			[Token(Token = "0x6001271")]
			[Address(RVA = "0xC00DD8", Offset = "0xC00DD8", VA = "0xC00DD8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F246C", Offset = "0x9F246C")]
			remove
			{
			}
		}

		[Token(Token = "0x14000080")]
		public static event FishCanRecoverAction OnFishCanRecover
		{
			[Token(Token = "0x6001272")]
			[Address(RVA = "0xC00AF8", Offset = "0xC00AF8", VA = "0xC00AF8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F247C", Offset = "0x9F247C")]
			add
			{
			}
			[Token(Token = "0x6001273")]
			[Address(RVA = "0xC00F48", Offset = "0xC00F48", VA = "0xC00F48")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F248C", Offset = "0x9F248C")]
			remove
			{
			}
		}

		[Token(Token = "0x14000081")]
		public static event BobberRecoverAction OnBobberRecover
		{
			[Token(Token = "0x6001274")]
			[Address(RVA = "0xC08A34", Offset = "0xC08A34", VA = "0xC08A34")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F249C", Offset = "0x9F249C")]
			add
			{
			}
			[Token(Token = "0x6001275")]
			[Address(RVA = "0xC08AEC", Offset = "0xC08AEC", VA = "0xC08AEC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F24AC", Offset = "0x9F24AC")]
			remove
			{
			}
		}

		[Token(Token = "0x14000082")]
		public static event FishTakenAction OnFishTaken
		{
			[Token(Token = "0x6001276")]
			[Address(RVA = "0xC08BA4", Offset = "0xC08BA4", VA = "0xC08BA4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F24BC", Offset = "0x9F24BC")]
			add
			{
			}
			[Token(Token = "0x6001277")]
			[Address(RVA = "0xC08C5C", Offset = "0xC08C5C", VA = "0xC08C5C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F24CC", Offset = "0x9F24CC")]
			remove
			{
			}
		}

		[Token(Token = "0x14000083")]
		public static event FishReleaseAction OnFishReleased
		{
			[Token(Token = "0x6001278")]
			[Address(RVA = "0xC08D14", Offset = "0xC08D14", VA = "0xC08D14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F24DC", Offset = "0x9F24DC")]
			add
			{
			}
			[Token(Token = "0x6001279")]
			[Address(RVA = "0xC08DCC", Offset = "0xC08DCC", VA = "0xC08DCC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F24EC", Offset = "0x9F24EC")]
			remove
			{
			}
		}

		[Token(Token = "0x14000084")]
		public static event FishKeepAction OnFishKept
		{
			[Token(Token = "0x600127A")]
			[Address(RVA = "0xC08E84", Offset = "0xC08E84", VA = "0xC08E84")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F24FC", Offset = "0x9F24FC")]
			add
			{
			}
			[Token(Token = "0x600127B")]
			[Address(RVA = "0xC08F3C", Offset = "0xC08F3C", VA = "0xC08F3C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F250C", Offset = "0x9F250C")]
			remove
			{
			}
		}

		[Token(Token = "0x14000085")]
		public static event FishLostAction OnFishLost
		{
			[Token(Token = "0x600127C")]
			[Address(RVA = "0xC08FF4", Offset = "0xC08FF4", VA = "0xC08FF4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F251C", Offset = "0x9F251C")]
			add
			{
			}
			[Token(Token = "0x600127D")]
			[Address(RVA = "0xC090AC", Offset = "0xC090AC", VA = "0xC090AC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F252C", Offset = "0x9F252C")]
			remove
			{
			}
		}

		[Token(Token = "0x14000086")]
		public static event PatternPlayStarted OnPatternPlayStarted
		{
			[Token(Token = "0x600127E")]
			[Address(RVA = "0xC00A40", Offset = "0xC00A40", VA = "0xC00A40")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F253C", Offset = "0x9F253C")]
			add
			{
			}
			[Token(Token = "0x600127F")]
			[Address(RVA = "0xC00E90", Offset = "0xC00E90", VA = "0xC00E90")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F254C", Offset = "0x9F254C")]
			remove
			{
			}
		}

		[Token(Token = "0x14000087")]
		public static event MissionLoadAction OnMissionLoad
		{
			[Token(Token = "0x6001280")]
			[Address(RVA = "0xBF8600", Offset = "0xBF8600", VA = "0xBF8600")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F255C", Offset = "0x9F255C")]
			add
			{
			}
			[Token(Token = "0x6001281")]
			[Address(RVA = "0xBF8C74", Offset = "0xBF8C74", VA = "0xBF8C74")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F256C", Offset = "0x9F256C")]
			remove
			{
			}
		}

		[Token(Token = "0x14000088")]
		public static event MissionConfirmedAction OnMissionConfirmed
		{
			[Token(Token = "0x6001282")]
			[Address(RVA = "0xC09164", Offset = "0xC09164", VA = "0xC09164")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F257C", Offset = "0x9F257C")]
			add
			{
			}
			[Token(Token = "0x6001283")]
			[Address(RVA = "0xC0921C", Offset = "0xC0921C", VA = "0xC0921C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F258C", Offset = "0x9F258C")]
			remove
			{
			}
		}

		[Token(Token = "0x14000089")]
		public static event TimedMissionSetupedAction OnTimedMissionSetuped
		{
			[Token(Token = "0x6001284")]
			[Address(RVA = "0xC092D4", Offset = "0xC092D4", VA = "0xC092D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F259C", Offset = "0x9F259C")]
			add
			{
			}
			[Token(Token = "0x6001285")]
			[Address(RVA = "0xC0938C", Offset = "0xC0938C", VA = "0xC0938C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F25AC", Offset = "0x9F25AC")]
			remove
			{
			}
		}

		[Token(Token = "0x1400008A")]
		public static event TimedMissionUpdateTimerAction OnTimedMissionUpdateTimer
		{
			[Token(Token = "0x6001286")]
			[Address(RVA = "0xC09444", Offset = "0xC09444", VA = "0xC09444")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F25BC", Offset = "0x9F25BC")]
			add
			{
			}
			[Token(Token = "0x6001287")]
			[Address(RVA = "0xC094FC", Offset = "0xC094FC", VA = "0xC094FC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F25CC", Offset = "0x9F25CC")]
			remove
			{
			}
		}

		[Token(Token = "0x1400008B")]
		public static event MissionFailedAction OnMissionFailed
		{
			[Token(Token = "0x6001288")]
			[Address(RVA = "0xC095B4", Offset = "0xC095B4", VA = "0xC095B4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F25DC", Offset = "0x9F25DC")]
			add
			{
			}
			[Token(Token = "0x6001289")]
			[Address(RVA = "0xC0966C", Offset = "0xC0966C", VA = "0xC0966C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F25EC", Offset = "0x9F25EC")]
			remove
			{
			}
		}

		[Token(Token = "0x1400008C")]
		public static event FishOPediaFishUnlockedAction OnFishUnlocked
		{
			[Token(Token = "0x600128A")]
			[Address(RVA = "0xC09724", Offset = "0xC09724", VA = "0xC09724")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F25FC", Offset = "0x9F25FC")]
			add
			{
			}
			[Token(Token = "0x600128B")]
			[Address(RVA = "0xC097DC", Offset = "0xC097DC", VA = "0xC097DC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F260C", Offset = "0x9F260C")]
			remove
			{
			}
		}

		[Token(Token = "0x1400008D")]
		public static event FishOPediaFishWeightUpdatedAction OnFishRecordWeightUpdated
		{
			[Token(Token = "0x600128C")]
			[Address(RVA = "0xC09894", Offset = "0xC09894", VA = "0xC09894")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F261C", Offset = "0x9F261C")]
			add
			{
			}
			[Token(Token = "0x600128D")]
			[Address(RVA = "0xC0994C", Offset = "0xC0994C", VA = "0xC0994C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F262C", Offset = "0x9F262C")]
			remove
			{
			}
		}

		[Token(Token = "0x1400008E")]
		public static event FishOPediaFishTotalWeightUpdatedAction OnFishTotalWeightUpdated
		{
			[Token(Token = "0x600128E")]
			[Address(RVA = "0xC09A04", Offset = "0xC09A04", VA = "0xC09A04")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F263C", Offset = "0x9F263C")]
			add
			{
			}
			[Token(Token = "0x600128F")]
			[Address(RVA = "0xC09ABC", Offset = "0xC09ABC", VA = "0xC09ABC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F264C", Offset = "0x9F264C")]
			remove
			{
			}
		}

		[Token(Token = "0x1400008F")]
		public static event ItemCraftingUnlockedAction OnItemCraftUnlocked
		{
			[Token(Token = "0x6001290")]
			[Address(RVA = "0xC09B74", Offset = "0xC09B74", VA = "0xC09B74")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F265C", Offset = "0x9F265C")]
			add
			{
			}
			[Token(Token = "0x6001291")]
			[Address(RVA = "0xC09C2C", Offset = "0xC09C2C", VA = "0xC09C2C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F266C", Offset = "0x9F266C")]
			remove
			{
			}
		}

		[Token(Token = "0x14000090")]
		public static event SaveCraftingSceneStatAction OnSaveCraftingSceneStat
		{
			[Token(Token = "0x6001292")]
			[Address(RVA = "0xC09CE4", Offset = "0xC09CE4", VA = "0xC09CE4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F267C", Offset = "0x9F267C")]
			add
			{
			}
			[Token(Token = "0x6001293")]
			[Address(RVA = "0xC09D9C", Offset = "0xC09D9C", VA = "0xC09D9C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F268C", Offset = "0x9F268C")]
			remove
			{
			}
		}

		[Token(Token = "0x14000091")]
		public static event SaveAquariumSceneStatAction OnSaveAquariumSceneStat
		{
			[Token(Token = "0x6001294")]
			[Address(RVA = "0xC09E54", Offset = "0xC09E54", VA = "0xC09E54")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F269C", Offset = "0x9F269C")]
			add
			{
			}
			[Token(Token = "0x6001295")]
			[Address(RVA = "0xC09F0C", Offset = "0xC09F0C", VA = "0xC09F0C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F26AC", Offset = "0x9F26AC")]
			remove
			{
			}
		}

		[Token(Token = "0x14000092")]
		public static event CharmCraftingUnlockedAction OnCharmCraftUnlocked
		{
			[Token(Token = "0x6001296")]
			[Address(RVA = "0xC09FC4", Offset = "0xC09FC4", VA = "0xC09FC4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F26BC", Offset = "0x9F26BC")]
			add
			{
			}
			[Token(Token = "0x6001297")]
			[Address(RVA = "0xC0A07C", Offset = "0xC0A07C", VA = "0xC0A07C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F26CC", Offset = "0x9F26CC")]
			remove
			{
			}
		}

		[Token(Token = "0x14000093")]
		public static event BoostTimerUpdateAction OnBoostUpdated
		{
			[Token(Token = "0x6001298")]
			[Address(RVA = "0xBF251C", Offset = "0xBF251C", VA = "0xBF251C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F26DC", Offset = "0x9F26DC")]
			add
			{
			}
			[Token(Token = "0x6001299")]
			[Address(RVA = "0xBF269C", Offset = "0xBF269C", VA = "0xBF269C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F26EC", Offset = "0x9F26EC")]
			remove
			{
			}
		}

		[Token(Token = "0x14000094")]
		public static event MissionUpdatedAction OnMissionUpdated
		{
			[Token(Token = "0x600129A")]
			[Address(RVA = "0xC0A134", Offset = "0xC0A134", VA = "0xC0A134")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F26FC", Offset = "0x9F26FC")]
			add
			{
			}
			[Token(Token = "0x600129B")]
			[Address(RVA = "0xC0A1EC", Offset = "0xC0A1EC", VA = "0xC0A1EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F270C", Offset = "0x9F270C")]
			remove
			{
			}
		}

		[Token(Token = "0x14000095")]
		public static event MissionRewardGotAction OnMissionRewardGot
		{
			[Token(Token = "0x600129C")]
			[Address(RVA = "0xBFE4DC", Offset = "0xBFE4DC", VA = "0xBFE4DC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F271C", Offset = "0x9F271C")]
			add
			{
			}
			[Token(Token = "0x600129D")]
			[Address(RVA = "0xBFEBA8", Offset = "0xBFEBA8", VA = "0xBFEBA8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F272C", Offset = "0x9F272C")]
			remove
			{
			}
		}

		[Token(Token = "0x14000096")]
		public static event DismissTakeFishUIAction OnDismissTakeFishUI
		{
			[Token(Token = "0x600129E")]
			[Address(RVA = "0xC0A2A4", Offset = "0xC0A2A4", VA = "0xC0A2A4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F273C", Offset = "0x9F273C")]
			add
			{
			}
			[Token(Token = "0x600129F")]
			[Address(RVA = "0xC0A35C", Offset = "0xC0A35C", VA = "0xC0A35C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F274C", Offset = "0x9F274C")]
			remove
			{
			}
		}

		[Token(Token = "0x14000097")]
		public static event FishPoolChangedAction OnFishPoolChanged
		{
			[Token(Token = "0x60012A0")]
			[Address(RVA = "0xBF4DC0", Offset = "0xBF4DC0", VA = "0xBF4DC0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F275C", Offset = "0x9F275C")]
			add
			{
			}
			[Token(Token = "0x60012A1")]
			[Address(RVA = "0xBF4F78", Offset = "0xBF4F78", VA = "0xBF4F78")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F276C", Offset = "0x9F276C")]
			remove
			{
			}
		}

		[Token(Token = "0x14000098")]
		public static event FishPoolRestockAction OnFishPoolRestock
		{
			[Token(Token = "0x60012A2")]
			[Address(RVA = "0xC0A414", Offset = "0xC0A414", VA = "0xC0A414")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F277C", Offset = "0x9F277C")]
			add
			{
			}
			[Token(Token = "0x60012A3")]
			[Address(RVA = "0xC0A4CC", Offset = "0xC0A4CC", VA = "0xC0A4CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F278C", Offset = "0x9F278C")]
			remove
			{
			}
		}

		[Token(Token = "0x14000099")]
		public static event SceneLoadFinishedAction OnSceneLoadFinished
		{
			[Token(Token = "0x60012A4")]
			[Address(RVA = "0xBFB4C8", Offset = "0xBFB4C8", VA = "0xBFB4C8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F279C", Offset = "0x9F279C")]
			add
			{
			}
			[Token(Token = "0x60012A5")]
			[Address(RVA = "0xBFBDEC", Offset = "0xBFBDEC", VA = "0xBFBDEC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F27AC", Offset = "0x9F27AC")]
			remove
			{
			}
		}

		[Token(Token = "0x1400009A")]
		public static event SceneLoadFadeFinishedAction OnSceneLoadFadeFinished
		{
			[Token(Token = "0x60012A6")]
			[Address(RVA = "0xC0A584", Offset = "0xC0A584", VA = "0xC0A584")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F27BC", Offset = "0x9F27BC")]
			add
			{
			}
			[Token(Token = "0x60012A7")]
			[Address(RVA = "0xC0A63C", Offset = "0xC0A63C", VA = "0xC0A63C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F27CC", Offset = "0x9F27CC")]
			remove
			{
			}
		}

		[Token(Token = "0x1400009B")]
		public static event CutsceneLoadAction OnCutsceneLoaded
		{
			[Token(Token = "0x60012A8")]
			[Address(RVA = "0xBFE2B4", Offset = "0xBFE2B4", VA = "0xBFE2B4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F27DC", Offset = "0x9F27DC")]
			add
			{
			}
			[Token(Token = "0x60012A9")]
			[Address(RVA = "0xBFE980", Offset = "0xBFE980", VA = "0xBFE980")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F27EC", Offset = "0x9F27EC")]
			remove
			{
			}
		}

		[Token(Token = "0x1400009C")]
		public static event CutsceneUnloadAction OnCutsceneUnloaded
		{
			[Token(Token = "0x60012AA")]
			[Address(RVA = "0xC0A6F4", Offset = "0xC0A6F4", VA = "0xC0A6F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F27FC", Offset = "0x9F27FC")]
			add
			{
			}
			[Token(Token = "0x60012AB")]
			[Address(RVA = "0xC0A7AC", Offset = "0xC0A7AC", VA = "0xC0A7AC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F280C", Offset = "0x9F280C")]
			remove
			{
			}
		}

		[Token(Token = "0x1400009D")]
		public static event CutsceneStartedAction OnCutsceneStarted
		{
			[Token(Token = "0x60012AC")]
			[Address(RVA = "0xC0A864", Offset = "0xC0A864", VA = "0xC0A864")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F281C", Offset = "0x9F281C")]
			add
			{
			}
			[Token(Token = "0x60012AD")]
			[Address(RVA = "0xC0A91C", Offset = "0xC0A91C", VA = "0xC0A91C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F282C", Offset = "0x9F282C")]
			remove
			{
			}
		}

		[Token(Token = "0x1400009E")]
		public static event CutsceneFinishedAction OnCutsceneFinished
		{
			[Token(Token = "0x60012AE")]
			[Address(RVA = "0xC0A9D4", Offset = "0xC0A9D4", VA = "0xC0A9D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F283C", Offset = "0x9F283C")]
			add
			{
			}
			[Token(Token = "0x60012AF")]
			[Address(RVA = "0xC0AA8C", Offset = "0xC0AA8C", VA = "0xC0AA8C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F284C", Offset = "0x9F284C")]
			remove
			{
			}
		}

		[Token(Token = "0x1400009F")]
		public static event CutsceneTimelinePausedAction OnCutsceneTimelinePaused
		{
			[Token(Token = "0x60012B0")]
			[Address(RVA = "0xC0AB44", Offset = "0xC0AB44", VA = "0xC0AB44")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F285C", Offset = "0x9F285C")]
			add
			{
			}
			[Token(Token = "0x60012B1")]
			[Address(RVA = "0xC0ABFC", Offset = "0xC0ABFC", VA = "0xC0ABFC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F286C", Offset = "0x9F286C")]
			remove
			{
			}
		}

		[Token(Token = "0x140000A0")]
		public static event CutsceneTimelineResumedAction OnCutsceneTimelineResumed
		{
			[Token(Token = "0x60012B2")]
			[Address(RVA = "0xC0ACB4", Offset = "0xC0ACB4", VA = "0xC0ACB4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F287C", Offset = "0x9F287C")]
			add
			{
			}
			[Token(Token = "0x60012B3")]
			[Address(RVA = "0xC0AD6C", Offset = "0xC0AD6C", VA = "0xC0AD6C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F288C", Offset = "0x9F288C")]
			remove
			{
			}
		}

		[Token(Token = "0x140000A1")]
		public static event CutsceneTimelineFinishedAction OnCutsceneTimelineFinished
		{
			[Token(Token = "0x60012B4")]
			[Address(RVA = "0xC0AE24", Offset = "0xC0AE24", VA = "0xC0AE24")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F289C", Offset = "0x9F289C")]
			add
			{
			}
			[Token(Token = "0x60012B5")]
			[Address(RVA = "0xC0AEDC", Offset = "0xC0AEDC", VA = "0xC0AEDC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F28AC", Offset = "0x9F28AC")]
			remove
			{
			}
		}

		[Token(Token = "0x140000A2")]
		public static event ReelInMinigameStartedAction OnReelInMinigameStarted
		{
			[Token(Token = "0x60012B6")]
			[Address(RVA = "0xC0AF94", Offset = "0xC0AF94", VA = "0xC0AF94")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F28BC", Offset = "0x9F28BC")]
			add
			{
			}
			[Token(Token = "0x60012B7")]
			[Address(RVA = "0xC0B04C", Offset = "0xC0B04C", VA = "0xC0B04C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F28CC", Offset = "0x9F28CC")]
			remove
			{
			}
		}

		[Token(Token = "0x140000A3")]
		public static event CastArmedAction OnCastArmed
		{
			[Token(Token = "0x60012B8")]
			[Address(RVA = "0xC0B104", Offset = "0xC0B104", VA = "0xC0B104")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F28DC", Offset = "0x9F28DC")]
			add
			{
			}
			[Token(Token = "0x60012B9")]
			[Address(RVA = "0xC0B1BC", Offset = "0xC0B1BC", VA = "0xC0B1BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F28EC", Offset = "0x9F28EC")]
			remove
			{
			}
		}

		[Token(Token = "0x140000A4")]
		public static event CastTargetHitAction OnCastTargetHit
		{
			[Token(Token = "0x60012BA")]
			[Address(RVA = "0xC0B274", Offset = "0xC0B274", VA = "0xC0B274")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F28FC", Offset = "0x9F28FC")]
			add
			{
			}
			[Token(Token = "0x60012BB")]
			[Address(RVA = "0xC0B32C", Offset = "0xC0B32C", VA = "0xC0B32C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F290C", Offset = "0x9F290C")]
			remove
			{
			}
		}

		[Token(Token = "0x140000A5")]
		public static event TensionOverAlertAction OnTensionOverAlert
		{
			[Token(Token = "0x60012BC")]
			[Address(RVA = "0xC0B3E4", Offset = "0xC0B3E4", VA = "0xC0B3E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F291C", Offset = "0x9F291C")]
			add
			{
			}
			[Token(Token = "0x60012BD")]
			[Address(RVA = "0xC0B49C", Offset = "0xC0B49C", VA = "0xC0B49C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F292C", Offset = "0x9F292C")]
			remove
			{
			}
		}

		[Token(Token = "0x140000A6")]
		public static event TensionUnderAlertAction OnTensionUnderAlert
		{
			[Token(Token = "0x60012BE")]
			[Address(RVA = "0xC0B554", Offset = "0xC0B554", VA = "0xC0B554")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F293C", Offset = "0x9F293C")]
			add
			{
			}
			[Token(Token = "0x60012BF")]
			[Address(RVA = "0xC0B60C", Offset = "0xC0B60C", VA = "0xC0B60C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F294C", Offset = "0x9F294C")]
			remove
			{
			}
		}

		[Token(Token = "0x140000A7")]
		public static event ReturnMainMenuAction OnReturnMainMenu
		{
			[Token(Token = "0x60012C0")]
			[Address(RVA = "0xBFE424", Offset = "0xBFE424", VA = "0xBFE424")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F295C", Offset = "0x9F295C")]
			add
			{
			}
			[Token(Token = "0x60012C1")]
			[Address(RVA = "0xBFEAF0", Offset = "0xBFEAF0", VA = "0xBFEAF0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F296C", Offset = "0x9F296C")]
			remove
			{
			}
		}

		[Token(Token = "0x140000A8")]
		public static event TakeTutCompleteRewardAction OnTakeTutCompleteReward
		{
			[Token(Token = "0x60012C2")]
			[Address(RVA = "0xC00C68", Offset = "0xC00C68", VA = "0xC00C68")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F297C", Offset = "0x9F297C")]
			add
			{
			}
			[Token(Token = "0x60012C3")]
			[Address(RVA = "0xC010B8", Offset = "0xC010B8", VA = "0xC010B8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F298C", Offset = "0x9F298C")]
			remove
			{
			}
		}

		[Token(Token = "0x140000A9")]
		public static event SetPopVisibilityAction OnSetPopVisibility
		{
			[Token(Token = "0x60012C4")]
			[Address(RVA = "0xC0B6C4", Offset = "0xC0B6C4", VA = "0xC0B6C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F299C", Offset = "0x9F299C")]
			add
			{
			}
			[Token(Token = "0x60012C5")]
			[Address(RVA = "0xC0B77C", Offset = "0xC0B77C", VA = "0xC0B77C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F29AC", Offset = "0x9F29AC")]
			remove
			{
			}
		}

		[Token(Token = "0x140000AA")]
		public static event SetPopFlyToRightAction OnSetPopFly
		{
			[Token(Token = "0x60012C6")]
			[Address(RVA = "0xC0B834", Offset = "0xC0B834", VA = "0xC0B834")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F29BC", Offset = "0x9F29BC")]
			add
			{
			}
			[Token(Token = "0x60012C7")]
			[Address(RVA = "0xC0B8EC", Offset = "0xC0B8EC", VA = "0xC0B8EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F29CC", Offset = "0x9F29CC")]
			remove
			{
			}
		}

		[Token(Token = "0x140000AB")]
		public static event ClearCutsceneViaButtonAction OnClearCutsceneViaButton
		{
			[Token(Token = "0x60012C8")]
			[Address(RVA = "0xBFE64C", Offset = "0xBFE64C", VA = "0xBFE64C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F29DC", Offset = "0x9F29DC")]
			add
			{
			}
			[Token(Token = "0x60012C9")]
			[Address(RVA = "0xBFED18", Offset = "0xBFED18", VA = "0xBFED18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F29EC", Offset = "0x9F29EC")]
			remove
			{
			}
		}

		[Token(Token = "0x140000AC")]
		public static event StartBoostAction OnStartBoost
		{
			[Token(Token = "0x60012CA")]
			[Address(RVA = "0xBFB2A0", Offset = "0xBFB2A0", VA = "0xBFB2A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F29FC", Offset = "0x9F29FC")]
			add
			{
			}
			[Token(Token = "0x60012CB")]
			[Address(RVA = "0xBFBEA4", Offset = "0xBFBEA4", VA = "0xBFBEA4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F2A0C", Offset = "0x9F2A0C")]
			remove
			{
			}
		}

		[Token(Token = "0x140000AD")]
		public static event StopBoostAction OnStopBoost
		{
			[Token(Token = "0x60012CC")]
			[Address(RVA = "0xBFB358", Offset = "0xBFB358", VA = "0xBFB358")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F2A1C", Offset = "0x9F2A1C")]
			add
			{
			}
			[Token(Token = "0x60012CD")]
			[Address(RVA = "0xBFBF5C", Offset = "0xBFBF5C", VA = "0xBFBF5C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F2A2C", Offset = "0x9F2A2C")]
			remove
			{
			}
		}

		[Token(Token = "0x140000AE")]
		public static event FailedBoostAction OnFailedBoost
		{
			[Token(Token = "0x60012CE")]
			[Address(RVA = "0xBFB410", Offset = "0xBFB410", VA = "0xBFB410")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F2A3C", Offset = "0x9F2A3C")]
			add
			{
			}
			[Token(Token = "0x60012CF")]
			[Address(RVA = "0xC0B9A4", Offset = "0xC0B9A4", VA = "0xC0B9A4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F2A4C", Offset = "0x9F2A4C")]
			remove
			{
			}
		}

		[Token(Token = "0x140000AF")]
		public static event CraftingMinigameActivateAction OnCraftingMinigameActivate
		{
			[Token(Token = "0x60012D0")]
			[Address(RVA = "0xBFDA04", Offset = "0xBFDA04", VA = "0xBFDA04")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F2A5C", Offset = "0x9F2A5C")]
			add
			{
			}
			[Token(Token = "0x60012D1")]
			[Address(RVA = "0xBFDB2C", Offset = "0xBFDB2C", VA = "0xBFDB2C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F2A6C", Offset = "0x9F2A6C")]
			remove
			{
			}
		}

		[Token(Token = "0x140000B0")]
		public static event NewChallengePanelDismissedAction OnNewChallengePanelDismissed
		{
			[Token(Token = "0x60012D2")]
			[Address(RVA = "0xBFE594", Offset = "0xBFE594", VA = "0xBFE594")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F2A7C", Offset = "0x9F2A7C")]
			add
			{
			}
			[Token(Token = "0x60012D3")]
			[Address(RVA = "0xBFEC60", Offset = "0xBFEC60", VA = "0xBFEC60")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F2A8C", Offset = "0x9F2A8C")]
			remove
			{
			}
		}

		[Token(Token = "0x140000B1")]
		public static event FishRewardsSequenceFinished OnFishRewardsSequenceFinished
		{
			[Token(Token = "0x60012D4")]
			[Address(RVA = "0xC00BB0", Offset = "0xC00BB0", VA = "0xC00BB0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F2A9C", Offset = "0x9F2A9C")]
			add
			{
			}
			[Token(Token = "0x60012D5")]
			[Address(RVA = "0xC01000", Offset = "0xC01000", VA = "0xC01000")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F2AAC", Offset = "0x9F2AAC")]
			remove
			{
			}
		}

		[Token(Token = "0x140000B2")]
		public static event PlaceFishInAquariumAction OnPlaceFishInAquarium
		{
			[Token(Token = "0x60012D6")]
			[Address(RVA = "0xC0BA5C", Offset = "0xC0BA5C", VA = "0xC0BA5C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F2ABC", Offset = "0x9F2ABC")]
			add
			{
			}
			[Token(Token = "0x60012D7")]
			[Address(RVA = "0xC0BB14", Offset = "0xC0BB14", VA = "0xC0BB14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F2ACC", Offset = "0x9F2ACC")]
			remove
			{
			}
		}

		[Token(Token = "0x140000B3")]
		public static event AquariumCutsceneDismissedAction OnAquariumCutsceneDismissed
		{
			[Token(Token = "0x60012D8")]
			[Address(RVA = "0xC0BBCC", Offset = "0xC0BBCC", VA = "0xC0BBCC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F2ADC", Offset = "0x9F2ADC")]
			add
			{
			}
			[Token(Token = "0x60012D9")]
			[Address(RVA = "0xC0BC84", Offset = "0xC0BC84", VA = "0xC0BC84")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F2AEC", Offset = "0x9F2AEC")]
			remove
			{
			}
		}

		[Token(Token = "0x140000B4")]
		public static event ReachedFinalCutsceneAction OnReachedFinalCutscene
		{
			[Token(Token = "0x60012DA")]
			[Address(RVA = "0xBFE704", Offset = "0xBFE704", VA = "0xBFE704")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F2AFC", Offset = "0x9F2AFC")]
			add
			{
			}
			[Token(Token = "0x60012DB")]
			[Address(RVA = "0xC0BD3C", Offset = "0xC0BD3C", VA = "0xC0BD3C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F2B0C", Offset = "0x9F2B0C")]
			remove
			{
			}
		}

		[Token(Token = "0x60012DC")]
		[Address(RVA = "0xC0BDF4", Offset = "0xC0BDF4", VA = "0xC0BDF4")]
		public static void FishCaught(FpFish fish, bool isCheating = false)
		{
		}

		[Token(Token = "0x60012DD")]
		[Address(RVA = "0xC0BE98", Offset = "0xC0BE98", VA = "0xC0BE98")]
		public static void SummonFishingPad()
		{
		}

		[Token(Token = "0x60012DE")]
		[Address(RVA = "0xC0BF00", Offset = "0xC0BF00", VA = "0xC0BF00")]
		public static void FishPadClosed()
		{
		}

		[Token(Token = "0x60012DF")]
		[Address(RVA = "0xC0BF64", Offset = "0xC0BF64", VA = "0xC0BF64")]
		public static void GrabRod()
		{
		}

		[Token(Token = "0x60012E0")]
		[Address(RVA = "0xC0BFC8", Offset = "0xC0BFC8", VA = "0xC0BFC8")]
		public static void ReleaseRod()
		{
		}

		[Token(Token = "0x60012E1")]
		[Address(RVA = "0xC0C02C", Offset = "0xC0C02C", VA = "0xC0C02C")]
		public static void GrabReel()
		{
		}

		[Token(Token = "0x60012E2")]
		[Address(RVA = "0xC0C090", Offset = "0xC0C090", VA = "0xC0C090")]
		public static void ReleaseReel()
		{
		}

		[Token(Token = "0x60012E3")]
		[Address(RVA = "0xC0C0F4", Offset = "0xC0C0F4", VA = "0xC0C0F4")]
		public static void PlayerSettingChanged(PlayerSetting setting)
		{
		}

		[Token(Token = "0x60012E4")]
		[Address(RVA = "0xC0C160", Offset = "0xC0C160", VA = "0xC0C160")]
		public static void Mission_TutorialClear(MissionSO mission, bool isCheating = false)
		{
		}

		[Token(Token = "0x60012E5")]
		[Address(RVA = "0xC0027C", Offset = "0xC0027C", VA = "0xC0027C")]
		public static void Mission_CutsceneClear(MissionSO mission, bool isCheating = false)
		{
		}

		[Token(Token = "0x60012E6")]
		[Address(RVA = "0xC0C244", Offset = "0xC0C244", VA = "0xC0C244")]
		public static void Mission_FishPadClear(MissionSO mission, bool isCheating = false)
		{
		}

		[Token(Token = "0x60012E7")]
		[Address(RVA = "0xC0C2C4", Offset = "0xC0C2C4", VA = "0xC0C2C4")]
		public static void FishCanHook()
		{
		}

		[Token(Token = "0x60012E8")]
		[Address(RVA = "0xC0C328", Offset = "0xC0C328", VA = "0xC0C328")]
		public static void FishHooked()
		{
		}

		[Token(Token = "0x60012E9")]
		[Address(RVA = "0xC0C38C", Offset = "0xC0C38C", VA = "0xC0C38C")]
		public static void FishCanRecover()
		{
		}

		[Token(Token = "0x60012EA")]
		[Address(RVA = "0xC0C3F0", Offset = "0xC0C3F0", VA = "0xC0C3F0")]
		public static void BobberRecover()
		{
		}

		[Token(Token = "0x60012EB")]
		[Address(RVA = "0xC0C454", Offset = "0xC0C454", VA = "0xC0C454")]
		public static void ItemGot(ItemSO itemSO, int amount)
		{
		}

		[Token(Token = "0x60012EC")]
		[Address(RVA = "0xC0C528", Offset = "0xC0C528", VA = "0xC0C528")]
		public static void FishTake(FpFish fish)
		{
		}

		[Token(Token = "0x60012ED")]
		[Address(RVA = "0xC0C594", Offset = "0xC0C594", VA = "0xC0C594")]
		public static void FishRelease(FpFish fish)
		{
		}

		[Token(Token = "0x60012EE")]
		[Address(RVA = "0xC0C67C", Offset = "0xC0C67C", VA = "0xC0C67C")]
		public static void FishKeep(FpFish fish)
		{
		}

		[Token(Token = "0x60012EF")]
		[Address(RVA = "0xC0C75C", Offset = "0xC0C75C", VA = "0xC0C75C")]
		public static void FishLost(FpFish fish)
		{
		}

		[Token(Token = "0x60012F0")]
		[Address(RVA = "0xC0C610", Offset = "0xC0C610", VA = "0xC0C610")]
		public static void PlayerXPGet(int xp)
		{
		}

		[Token(Token = "0x60012F1")]
		[Address(RVA = "0xC0C7C8", Offset = "0xC0C7C8", VA = "0xC0C7C8")]
		public static void PlayerLevelUp(int level)
		{
		}

		[Token(Token = "0x60012F2")]
		[Address(RVA = "0xC0C834", Offset = "0xC0C834", VA = "0xC0C834")]
		public static void MissionLoad(MissionSO mission)
		{
		}

		[Token(Token = "0x60012F3")]
		[Address(RVA = "0xC0C8A0", Offset = "0xC0C8A0", VA = "0xC0C8A0")]
		public static void MissionChanged(MissionSO mission)
		{
		}

		[Token(Token = "0x60012F4")]
		[Address(RVA = "0xC0C90C", Offset = "0xC0C90C", VA = "0xC0C90C")]
		public static void SideMissionAccepted(MissionSO mission)
		{
		}

		[Token(Token = "0x60012F5")]
		[Address(RVA = "0xC0C978", Offset = "0xC0C978", VA = "0xC0C978")]
		public static void ChallengeMissionAccepted(MissionSO mission)
		{
		}

		[Token(Token = "0x60012F6")]
		[Address(RVA = "0xC0C9E4", Offset = "0xC0C9E4", VA = "0xC0C9E4")]
		public static void MissionCompleted(MissionSO mission, bool isCheating = false)
		{
		}

		[Token(Token = "0x60012F7")]
		[Address(RVA = "0xC0CA90", Offset = "0xC0CA90", VA = "0xC0CA90")]
		public static void MissionConfirmed(MissionSO mission)
		{
		}

		[Token(Token = "0x60012F8")]
		[Address(RVA = "0xC0CAFC", Offset = "0xC0CAFC", VA = "0xC0CAFC")]
		public static void MissionFailed(MissionSO mission)
		{
		}

		[Token(Token = "0x60012F9")]
		[Address(RVA = "0xC0CB68", Offset = "0xC0CB68", VA = "0xC0CB68")]
		public static void TimedMissionSetuped(float time)
		{
		}

		[Token(Token = "0x60012FA")]
		[Address(RVA = "0xC0CBE0", Offset = "0xC0CBE0", VA = "0xC0CBE0")]
		public static void TimedMissionUpdateTimer(float time)
		{
		}

		[Token(Token = "0x60012FB")]
		[Address(RVA = "0xC0CC58", Offset = "0xC0CC58", VA = "0xC0CC58")]
		public static void FishUnlocked(FpFish fishType)
		{
		}

		[Token(Token = "0x60012FC")]
		[Address(RVA = "0xC0CCC4", Offset = "0xC0CCC4", VA = "0xC0CCC4")]
		public static void FishRecordWeightUpdated(FpFish fishType)
		{
		}

		[Token(Token = "0x60012FD")]
		[Address(RVA = "0xC0CD30", Offset = "0xC0CD30", VA = "0xC0CD30")]
		public static void FishTotalWeightUpdated(FishOPediaController.FishOPedia_ fishOPedia)
		{
		}

		[Token(Token = "0x60012FE")]
		[Address(RVA = "0xC0CD9C", Offset = "0xC0CD9C", VA = "0xC0CD9C")]
		public static void ItemCraftingUnlocked(bool locked)
		{
		}

		[Token(Token = "0x60012FF")]
		[Address(RVA = "0xC00410", Offset = "0xC00410", VA = "0xC00410")]
		public static void SaveCraftingSceneStat()
		{
		}

		[Token(Token = "0x6001300")]
		[Address(RVA = "0xC00474", Offset = "0xC00474", VA = "0xC00474")]
		public static void SaveAquariumSceneStat()
		{
		}

		[Token(Token = "0x6001301")]
		[Address(RVA = "0xC0CE08", Offset = "0xC0CE08", VA = "0xC0CE08")]
		public static void CharmCraftingUnlocked(bool locked)
		{
		}

		[Token(Token = "0x6001302")]
		[Address(RVA = "0xC0CE74", Offset = "0xC0CE74", VA = "0xC0CE74")]
		public static void BoostUpdate(float val)
		{
		}

		[Token(Token = "0x6001303")]
		[Address(RVA = "0xC0CEEC", Offset = "0xC0CEEC", VA = "0xC0CEEC")]
		public static void NotificationTrigger()
		{
		}

		[Token(Token = "0x6001304")]
		[Address(RVA = "0xC0C1E0", Offset = "0xC0C1E0", VA = "0xC0C1E0")]
		public static void MissionRewardGet()
		{
		}

		[Token(Token = "0x6001305")]
		[Address(RVA = "0xC0CF50", Offset = "0xC0CF50", VA = "0xC0CF50")]
		public static void DismissTakeFishUI()
		{
		}

		[Token(Token = "0x6001306")]
		[Address(RVA = "0xC0CFB4", Offset = "0xC0CFB4", VA = "0xC0CFB4")]
		public static void PlayerTournmentPointGet(int tp)
		{
		}

		[Token(Token = "0x6001307")]
		[Address(RVA = "0xC06620", Offset = "0xC06620", VA = "0xC06620")]
		public static void PlayerRodEquip(RodSO rod)
		{
		}

		[Token(Token = "0x6001308")]
		[Address(RVA = "0xC0668C", Offset = "0xC0668C", VA = "0xC0668C")]
		public static void PlayerLureEquip(LureSO lure)
		{
		}

		[Token(Token = "0x6001309")]
		[Address(RVA = "0xC066F8", Offset = "0xC066F8", VA = "0xC066F8")]
		public static void PlayerCharmEquip(CharmSO charm)
		{
		}

		[Token(Token = "0x600130A")]
		[Address(RVA = "0xC0D020", Offset = "0xC0D020", VA = "0xC0D020")]
		public static void FishPoolChange()
		{
		}

		[Token(Token = "0x600130B")]
		[Address(RVA = "0xC0D084", Offset = "0xC0D084", VA = "0xC0D084")]
		public static void FishPoolRestock()
		{
		}

		[Token(Token = "0x600130C")]
		[Address(RVA = "0xC0D0E8", Offset = "0xC0D0E8", VA = "0xC0D0E8")]
		public static void ItemCrafting(CraftingRecipesSO craftingRecipe)
		{
		}

		[Token(Token = "0x600130D")]
		[Address(RVA = "0xC0D154", Offset = "0xC0D154", VA = "0xC0D154")]
		public static void SceneLoadFinish()
		{
		}

		[Token(Token = "0x600130E")]
		[Address(RVA = "0xC0D1B8", Offset = "0xC0D1B8", VA = "0xC0D1B8")]
		public static void SceneLoadFadeFinish()
		{
		}

		[Token(Token = "0x600130F")]
		[Address(RVA = "0xC0151C", Offset = "0xC0151C", VA = "0xC0151C")]
		public static void CutsceneLoad()
		{
		}

		[Token(Token = "0x6001310")]
		[Address(RVA = "0xC004D8", Offset = "0xC004D8", VA = "0xC004D8")]
		public static void CutsceneUnload()
		{
		}

		[Token(Token = "0x6001311")]
		[Address(RVA = "0xBFEDD4", Offset = "0xBFEDD4", VA = "0xBFEDD4")]
		public static void CutsceneStart()
		{
		}

		[Token(Token = "0x6001312")]
		[Address(RVA = "0xBFEE40", Offset = "0xBFEE40", VA = "0xBFEE40")]
		public static void CutsceneFinish(bool isSpecialCutscene)
		{
		}

		[Token(Token = "0x6001313")]
		[Address(RVA = "0xC0D21C", Offset = "0xC0D21C", VA = "0xC0D21C")]
		public static void CutsceneTimelinePause()
		{
		}

		[Token(Token = "0x6001314")]
		[Address(RVA = "0xC0D280", Offset = "0xC0D280", VA = "0xC0D280")]
		public static void CutsceneTimelineResume()
		{
		}

		[Token(Token = "0x6001315")]
		[Address(RVA = "0xC0D2E4", Offset = "0xC0D2E4", VA = "0xC0D2E4")]
		public static void CutsceneTimelineFinish()
		{
		}

		[Token(Token = "0x6001316")]
		[Address(RVA = "0xC006E4", Offset = "0xC006E4", VA = "0xC006E4")]
		public static void TeleportEnable()
		{
		}

		[Token(Token = "0x6001317")]
		[Address(RVA = "0xC0086C", Offset = "0xC0086C", VA = "0xC0086C")]
		public static void TeleportDisable()
		{
		}

		[Token(Token = "0x6001318")]
		[Address(RVA = "0xC0D348", Offset = "0xC0D348", VA = "0xC0D348")]
		public static void PlayerLocationChange()
		{
		}

		[Token(Token = "0x6001319")]
		[Address(RVA = "0xC0D3AC", Offset = "0xC0D3AC", VA = "0xC0D3AC")]
		public static void PlayerSnapSuccess()
		{
		}

		[Token(Token = "0x600131A")]
		[Address(RVA = "0xC0D410", Offset = "0xC0D410", VA = "0xC0D410")]
		public static void SideMissionQuit()
		{
		}

		[Token(Token = "0x600131B")]
		[Address(RVA = "0xC0D474", Offset = "0xC0D474", VA = "0xC0D474")]
		public static void ChallengeMissionQuit()
		{
		}

		[Token(Token = "0x600131C")]
		[Address(RVA = "0xC0D4D8", Offset = "0xC0D4D8", VA = "0xC0D4D8")]
		public static void ReelInMinigameStart()
		{
		}

		[Token(Token = "0x600131D")]
		[Address(RVA = "0xBF7664", Offset = "0xBF7664", VA = "0xBF7664")]
		public static void CastTargetHit()
		{
		}

		[Token(Token = "0x600131E")]
		[Address(RVA = "0xC0D53C", Offset = "0xC0D53C", VA = "0xC0D53C")]
		public static void CastArmed()
		{
		}

		[Token(Token = "0x600131F")]
		[Address(RVA = "0xC0D5A0", Offset = "0xC0D5A0", VA = "0xC0D5A0")]
		public static void TensionUnderAlert()
		{
		}

		[Token(Token = "0x6001320")]
		[Address(RVA = "0xC0D604", Offset = "0xC0D604", VA = "0xC0D604")]
		public static void TensionOverAlert()
		{
		}

		[Token(Token = "0x6001321")]
		[Address(RVA = "0xC0D668", Offset = "0xC0D668", VA = "0xC0D668")]
		public static void ReturnMainMenu()
		{
		}

		[Token(Token = "0x6001322")]
		[Address(RVA = "0xC0D6CC", Offset = "0xC0D6CC", VA = "0xC0D6CC")]
		public static void TakeTutCompleteReward()
		{
		}

		[Token(Token = "0x6001323")]
		[Address(RVA = "0xC0D730", Offset = "0xC0D730", VA = "0xC0D730")]
		public static void SetPopVisibility(bool state)
		{
		}

		[Token(Token = "0x6001324")]
		[Address(RVA = "0xC0D79C", Offset = "0xC0D79C", VA = "0xC0D79C")]
		public static void SetPopFly(bool state)
		{
		}

		[Token(Token = "0x6001325")]
		[Address(RVA = "0xC01798", Offset = "0xC01798", VA = "0xC01798")]
		public static void ClearCutsceneViaButton()
		{
		}

		[Token(Token = "0x6001326")]
		[Address(RVA = "0xC0D808", Offset = "0xC0D808", VA = "0xC0D808")]
		public static void StartBoost()
		{
		}

		[Token(Token = "0x6001327")]
		[Address(RVA = "0xC0D86C", Offset = "0xC0D86C", VA = "0xC0D86C")]
		public static void StopBoost()
		{
		}

		[Token(Token = "0x6001328")]
		[Address(RVA = "0xC0D8D0", Offset = "0xC0D8D0", VA = "0xC0D8D0")]
		public static void FailedBoost()
		{
		}

		[Token(Token = "0x6001329")]
		[Address(RVA = "0xC0D934", Offset = "0xC0D934", VA = "0xC0D934")]
		public static void CraftingMiniGameActivate(bool state)
		{
		}

		[Token(Token = "0x600132A")]
		[Address(RVA = "0xC0D9A0", Offset = "0xC0D9A0", VA = "0xC0D9A0")]
		public static void NewChallengePanelDismissed()
		{
		}

		[Token(Token = "0x600132B")]
		[Address(RVA = "0xC0DA04", Offset = "0xC0DA04", VA = "0xC0DA04")]
		public static void StartedPatternPlay()
		{
		}

		[Token(Token = "0x600132C")]
		[Address(RVA = "0xC0DA68", Offset = "0xC0DA68", VA = "0xC0DA68")]
		public static void FishRewardsSeqFinished()
		{
		}

		[Token(Token = "0x600132D")]
		[Address(RVA = "0xC0DACC", Offset = "0xC0DACC", VA = "0xC0DACC")]
		public static void PlaceFishInAquarium()
		{
		}

		[Token(Token = "0x600132E")]
		[Address(RVA = "0xC011EC", Offset = "0xC011EC", VA = "0xC011EC")]
		public static void AquariumCutsceneDismissed()
		{
		}

		[Token(Token = "0x600132F")]
		[Address(RVA = "0xC0DB30", Offset = "0xC0DB30", VA = "0xC0DB30")]
		public static void ReachedFinalCutscene()
		{
		}

		[Token(Token = "0x6001330")]
		[Address(RVA = "0xC0DB94", Offset = "0xC0DB94", VA = "0xC0DB94")]
		public static void ClearAll()
		{
		}
	}
	[Token(Token = "0x20002A3")]
	public static class FFR
	{
		[Token(Token = "0x6001331")]
		[Address(RVA = "0xD898C8", Offset = "0xD898C8", VA = "0xD898C8")]
		public static void SetLevel(int lvl)
		{
		}

		[Token(Token = "0x6001332")]
		[Address(RVA = "0xD89998", Offset = "0xD89998", VA = "0xD89998")]
		internal static string GetFFRLevelText()
		{
			return null;
		}
	}
	[Token(Token = "0x20002A4")]
	public enum Stations
	{
		[Token(Token = "0x4001448")]
		CharmCrafter,
		[Token(Token = "0x4001449")]
		ItemCrafter,
		[Token(Token = "0x400144A")]
		Aquarium
	}
	[Token(Token = "0x20002A5")]
	public class StationController : MonoBehaviour
	{
		[Token(Token = "0x400144B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static StationController instance;

		[Token(Token = "0x400144C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject itemCraftingStation;

		[Token(Token = "0x6001333")]
		[Address(RVA = "0xC2E0A4", Offset = "0xC2E0A4", VA = "0xC2E0A4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001334")]
		[Address(RVA = "0xC2E100", Offset = "0xC2E100", VA = "0xC2E100")]
		public static void ShowPanels()
		{
		}

		[Token(Token = "0x6001335")]
		[Address(RVA = "0xC2E218", Offset = "0xC2E218", VA = "0xC2E218")]
		public static void ShowCraftingUI(bool state)
		{
		}

		[Token(Token = "0x6001336")]
		[Address(RVA = "0xC2E284", Offset = "0xC2E284", VA = "0xC2E284")]
		public StationController()
		{
		}
	}
	[Token(Token = "0x20002A6")]
	public class SubstituteTutPop : MonoBehaviour
	{
		[Token(Token = "0x400144D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject LocalPop;

		[Token(Token = "0x400144E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioFollower popAudioFollower;

		[Token(Token = "0x400144F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private PlayableDirector director;

		[Token(Token = "0x4001450")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private PlayableAsset asset;

		[Token(Token = "0x4001451")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float tweenDuration;

		[Token(Token = "0x6001337")]
		[Address(RVA = "0xC2E28C", Offset = "0xC2E28C", VA = "0xC2E28C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001338")]
		[Address(RVA = "0xC2E834", Offset = "0xC2E834", VA = "0xC2E834")]
		public SubstituteTutPop()
		{
		}
	}
	[Token(Token = "0x20002A7")]
	public class SummonFishingPad : MonoBehaviour
	{
		[Token(Token = "0x6001339")]
		[Address(RVA = "0xC2E83C", Offset = "0xC2E83C", VA = "0xC2E83C")]
		public void SummonFP()
		{
		}

		[Token(Token = "0x600133A")]
		[Address(RVA = "0xC2E844", Offset = "0xC2E844", VA = "0xC2E844")]
		public SummonFishingPad()
		{
		}
	}
	[Token(Token = "0x20002A8")]
	public class TakeTutCompleteRewardButton : MonoBehaviour
	{
		[Token(Token = "0x600133B")]
		[Address(RVA = "0xC2E8B8", Offset = "0xC2E8B8", VA = "0xC2E8B8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600133C")]
		[Address(RVA = "0xC2EE7C", Offset = "0xC2EE7C", VA = "0xC2EE7C")]
		public void OnClick()
		{
		}

		[Token(Token = "0x600133D")]
		[Address(RVA = "0xC2EE84", Offset = "0xC2EE84", VA = "0xC2EE84")]
		public TakeTutCompleteRewardButton()
		{
		}
	}
	[Token(Token = "0x20002A9")]
	public class TeleportHotspotVisibility : MonoBehaviour
	{
		[Token(Token = "0x4001452")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject hotspotMarker;

		[Token(Token = "0x4001453")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AquariumMissionUiController aquariumMissionUiController;

		[Token(Token = "0x600133E")]
		[Address(RVA = "0xC2FC08", Offset = "0xC2FC08", VA = "0xC2FC08")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600133F")]
		[Address(RVA = "0xC2FC28", Offset = "0xC2FC28", VA = "0xC2FC28")]
		public void SetInvisible()
		{
		}

		[Token(Token = "0x6001340")]
		[Address(RVA = "0xC2FC48", Offset = "0xC2FC48", VA = "0xC2FC48")]
		public void SetVisible()
		{
		}

		[Token(Token = "0x6001341")]
		[Address(RVA = "0xC2FCE8", Offset = "0xC2FCE8", VA = "0xC2FCE8")]
		public TeleportHotspotVisibility()
		{
		}
	}
	[Token(Token = "0x20002AA")]
	public class TensionDebug : MonoBehaviour
	{
		[Token(Token = "0x4001454")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Slider sliderRiseNormal;

		[Token(Token = "0x4001455")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Slider sliderRisePatternPlay;

		[Token(Token = "0x4001456")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Slider sliderRiseRunRage;

		[Token(Token = "0x4001457")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Slider sliderFallNormal;

		[Token(Token = "0x4001458")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Slider sliderFallPatternPlay;

		[Token(Token = "0x4001459")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Slider sliderFallRunRage;

		[Token(Token = "0x400145A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public TextMeshProUGUI sliderRiseNormalValText;

		[Token(Token = "0x400145B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public TextMeshProUGUI sliderRisePatternPlayValText;

		[Token(Token = "0x400145C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public TextMeshProUGUI sliderRiseRunRageValText;

		[Token(Token = "0x400145D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public TextMeshProUGUI sliderFallNormalValText;

		[Token(Token = "0x400145E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public TextMeshProUGUI sliderFallPatternPlayValText;

		[Token(Token = "0x400145F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public TextMeshProUGUI sliderFallRunRageValText;

		[Token(Token = "0x4001460")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float val;

		[Token(Token = "0x6001342")]
		[Address(RVA = "0xC2FCF0", Offset = "0xC2FCF0", VA = "0xC2FCF0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001343")]
		[Address(RVA = "0xC2FCF4", Offset = "0xC2FCF4", VA = "0xC2FCF4")]
		private void InitSliders()
		{
		}

		[Token(Token = "0x6001344")]
		[Address(RVA = "0xC30090", Offset = "0xC30090", VA = "0xC30090")]
		public void OnValueChanged(Slider slider)
		{
		}

		[Token(Token = "0x6001345")]
		[Address(RVA = "0xC305BC", Offset = "0xC305BC", VA = "0xC305BC")]
		public void ResetDefaults()
		{
		}

		[Token(Token = "0x6001346")]
		[Address(RVA = "0xC30638", Offset = "0xC30638", VA = "0xC30638")]
		public TensionDebug()
		{
		}
	}
	[Token(Token = "0x20002AB")]
	public class TitleCardRenderScale : MonoBehaviour
	{
		[Token(Token = "0x6001347")]
		[Address(RVA = "0xC32F60", Offset = "0xC32F60", VA = "0xC32F60")]
		private void Start()
		{
		}

		[Token(Token = "0x6001348")]
		[Address(RVA = "0xC32F6C", Offset = "0xC32F6C", VA = "0xC32F6C")]
		public TitleCardRenderScale()
		{
		}
	}
	[Token(Token = "0x20002AC")]
	public class ToggleActivation : MonoBehaviour
	{
		[Token(Token = "0x4001461")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject[] objectsToToggleOnOff;

		[Token(Token = "0x4001462")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool defaulEnabled;

		[Token(Token = "0x6001349")]
		[Address(RVA = "0xC32F74", Offset = "0xC32F74", VA = "0xC32F74")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600134A")]
		[Address(RVA = "0xC33000", Offset = "0xC33000", VA = "0xC33000")]
		public void OnClick()
		{
		}

		[Token(Token = "0x600134B")]
		[Address(RVA = "0xC330A4", Offset = "0xC330A4", VA = "0xC330A4")]
		public ToggleActivation()
		{
		}
	}
	[Token(Token = "0x20002AD")]
	public class TransformFollower : MonoBehaviour
	{
		[Token(Token = "0x4001463")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform transformToFollow;

		[Token(Token = "0x600134C")]
		[Address(RVA = "0xC330AC", Offset = "0xC330AC", VA = "0xC330AC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600134D")]
		[Address(RVA = "0xC3314C", Offset = "0xC3314C", VA = "0xC3314C")]
		private void Update()
		{
		}

		[Token(Token = "0x600134E")]
		[Address(RVA = "0xC33198", Offset = "0xC33198", VA = "0xC33198")]
		public TransformFollower()
		{
		}
	}
	[Token(Token = "0x20002AE")]
	public class TugOfWar : MonoBehaviour
	{
		[Token(Token = "0x600134F")]
		[Address(RVA = "0xC331A0", Offset = "0xC331A0", VA = "0xC331A0")]
		public TugOfWar()
		{
		}
	}
	[Token(Token = "0x20002AF")]
	public class TutCompleteChallengePanels : MonoBehaviour
	{
		[Token(Token = "0x4001464")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject challengeCompletePanel;

		[Token(Token = "0x4001465")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject newChallengePanel;

		[Token(Token = "0x6001350")]
		[Address(RVA = "0xC331A8", Offset = "0xC331A8", VA = "0xC331A8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001351")]
		[Address(RVA = "0xC331EC", Offset = "0xC331EC", VA = "0xC331EC")]
		public void OnClickChallengeComplete()
		{
		}

		[Token(Token = "0x6001352")]
		[Address(RVA = "0xC332A8", Offset = "0xC332A8", VA = "0xC332A8")]
		private void ShowNewChallengePanel()
		{
		}

		[Token(Token = "0x6001353")]
		[Address(RVA = "0xC33368", Offset = "0xC33368", VA = "0xC33368")]
		public void OnClickNewChallenge()
		{
		}

		[Token(Token = "0x6001354")]
		[Address(RVA = "0xC33370", Offset = "0xC33370", VA = "0xC33370")]
		public TutCompleteChallengePanels()
		{
		}

		[Token(Token = "0x6001355")]
		[Address(RVA = "0xC33378", Offset = "0xC33378", VA = "0xC33378")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F2B1C", Offset = "0x9F2B1C")]
		private void <OnClickChallengeComplete>b__3_0()
		{
		}
	}
	[Token(Token = "0x20002B0")]
	public class UI_QualityController : MonoBehaviour
	{
		[Token(Token = "0x20004EA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E83F8", Offset = "0x9E83F8")]
		private sealed class <Init>d__16 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001A89")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001A8A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001A8B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public UI_QualityController <>4__this;

			[Token(Token = "0x170002C5")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001E0E")]
				[Address(RVA = "0xCF7AA8", Offset = "0xCF7AA8", VA = "0xCF7AA8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002C6")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E10")]
				[Address(RVA = "0xCF7B10", Offset = "0xCF7B10", VA = "0xCF7B10", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E0B")]
			[Address(RVA = "0xCF78A8", Offset = "0xCF78A8", VA = "0xCF78A8")]
			[DebuggerHidden]
			public <Init>d__16(int <>1__state)
			{
			}

			[Token(Token = "0x6001E0C")]
			[Address(RVA = "0xCF78F0", Offset = "0xCF78F0", VA = "0xCF78F0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E0D")]
			[Address(RVA = "0xCF78F4", Offset = "0xCF78F4", VA = "0xCF78F4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E0F")]
			[Address(RVA = "0xCF7AB0", Offset = "0xCF7AB0", VA = "0xCF7AB0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001466")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Slider BuildInRP_Slider;

		[Token(Token = "0x4001467")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float BuildInRP_MinValue;

		[Token(Token = "0x4001468")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float BuildInRP_MaxValue;

		[Token(Token = "0x4001469")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private TMP_Text BuildInRP_SliderValue_Text;

		[Token(Token = "0x400146A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private TMP_Text FFR_Quality_Text;

		[Token(Token = "0x400146B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int FFR_Quality;

		[Token(Token = "0x400146C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int FFR_Quality_Max;

		[Token(Token = "0x6001356")]
		[Address(RVA = "0xCF7580", Offset = "0xCF7580", VA = "0xCF7580")]
		private void Start()
		{
		}

		[Token(Token = "0x6001357")]
		[Address(RVA = "0xCF7628", Offset = "0xCF7628", VA = "0xCF7628")]
		public void OnBuildInRPQualityRenderScaleUp()
		{
		}

		[Token(Token = "0x6001358")]
		[Address(RVA = "0xCF76EC", Offset = "0xCF76EC", VA = "0xCF76EC")]
		public void OnBuildInRPQualityRenderScaleDown()
		{
		}

		[Token(Token = "0x6001359")]
		[Address(RVA = "0xCF7664", Offset = "0xCF7664", VA = "0xCF7664")]
		private void BuildInRPQulityRenderScaleTextChange()
		{
		}

		[Token(Token = "0x600135A")]
		[Address(RVA = "0xCF7728", Offset = "0xCF7728", VA = "0xCF7728")]
		private void InitBuiltInQualityRenderScale()
		{
		}

		[Token(Token = "0x600135B")]
		[Address(RVA = "0xCF7798", Offset = "0xCF7798", VA = "0xCF7798")]
		public void OnFFRUp()
		{
		}

		[Token(Token = "0x600135C")]
		[Address(RVA = "0xCF7848", Offset = "0xCF7848", VA = "0xCF7848")]
		public void OnFFRDown()
		{
		}

		[Token(Token = "0x600135D")]
		[Address(RVA = "0xCF77B0", Offset = "0xCF77B0", VA = "0xCF77B0")]
		private void OnFFRChanged()
		{
		}

		[Token(Token = "0x600135E")]
		[Address(RVA = "0xCF7868", Offset = "0xCF7868", VA = "0xCF7868")]
		private void InitFFRChangeText()
		{
		}

		[Token(Token = "0x600135F")]
		[Address(RVA = "0xCF75AC", Offset = "0xCF75AC", VA = "0xCF75AC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9F2B2C", Offset = "0x9F2B2C")]
		private IEnumerator Init()
		{
			return null;
		}

		[Token(Token = "0x6001360")]
		[Address(RVA = "0xCF78D4", Offset = "0xCF78D4", VA = "0xCF78D4")]
		public UI_QualityController()
		{
		}
	}
	[Token(Token = "0x20002B1")]
	public class UI_TakeFishController : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20004EB")]
		public struct LootBox
		{
			[Token(Token = "0x4001A8C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public GameObject LootBoxInfo;

			[Token(Token = "0x4001A8D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Image icon;

			[Token(Token = "0x4001A8E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Localize name;

			[Token(Token = "0x4001A8F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public ParticleSystem particle;

			[Token(Token = "0x4001A90")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TMP_Text amount;
		}

		[Serializable]
		[Token(Token = "0x20004EC")]
		public struct RewardItem
		{
			[Token(Token = "0x4001A91")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public GameObject panel;

			[Token(Token = "0x4001A92")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Image icon;

			[Token(Token = "0x4001A93")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Localize name;

			[Token(Token = "0x4001A94")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public ParticleSystem particle;

			[Token(Token = "0x4001A95")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TMP_Text amount;
		}

		[Serializable]
		[Token(Token = "0x20004ED")]
		public struct MissionRewardItem
		{
			[Token(Token = "0x4001A96")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public GameObject panel;

			[Token(Token = "0x4001A97")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Image icon;

			[Token(Token = "0x4001A98")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public TMP_Text nameAmount;

			[Token(Token = "0x4001A99")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public MissionRewardBGSelect bgSelect;
		}

		[Token(Token = "0x20004EE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E8408", Offset = "0x9E8408")]
		private sealed class <>c__DisplayClass92_0
		{
			[Token(Token = "0x4001A9A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float currentValue;

			[Token(Token = "0x4001A9B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public UI_TakeFishController <>4__this;

			[Token(Token = "0x6001E11")]
			[Address(RVA = "0xCFBAF0", Offset = "0xCFBAF0", VA = "0xCFBAF0")]
			public <>c__DisplayClass92_0()
			{
			}
		}

		[Token(Token = "0x20004EF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E8418", Offset = "0x9E8418")]
		private sealed class <>c__DisplayClass92_1
		{
			[Token(Token = "0x4001A9C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float increasedValue;

			[Token(Token = "0x4001A9D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public <>c__DisplayClass92_0 CS$<>8__locals1;

			[Token(Token = "0x6001E12")]
			[Address(RVA = "0xCFBAF8", Offset = "0xCFBAF8", VA = "0xCFBAF8")]
			public <>c__DisplayClass92_1()
			{
			}

			[Token(Token = "0x6001E13")]
			[Address(RVA = "0xD00350", Offset = "0xD00350", VA = "0xD00350")]
			internal float <EventHub_OnFishCaught>b__0()
			{
				return default(float);
			}

			[Token(Token = "0x6001E14")]
			[Address(RVA = "0xD00358", Offset = "0xD00358", VA = "0xD00358")]
			internal void <EventHub_OnFishCaught>b__1(float x)
			{
			}

			[Token(Token = "0x6001E15")]
			[Address(RVA = "0xD00360", Offset = "0xD00360", VA = "0xD00360")]
			internal void <EventHub_OnFishCaught>b__2()
			{
			}
		}

		[Token(Token = "0x20004F0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E8428", Offset = "0x9E8428")]
		private sealed class <>c__DisplayClass109_0
		{
			[Token(Token = "0x4001A9E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vector3 coinFlyOutPos;

			[Token(Token = "0x4001A9F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public UI_TakeFishController <>4__this;

			[Token(Token = "0x4001AA0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public FishTypeSO.Resources[] resources;

			[Token(Token = "0x6001E16")]
			[Address(RVA = "0xCFDDD0", Offset = "0xCFDDD0", VA = "0xCFDDD0")]
			public <>c__DisplayClass109_0()
			{
			}

			[Token(Token = "0x6001E17")]
			[Address(RVA = "0xCFE954", Offset = "0xCFE954", VA = "0xCFE954")]
			internal void <PlayGettingFishVFX>b__0()
			{
			}

			[Token(Token = "0x6001E18")]
			[Address(RVA = "0xCFF5DC", Offset = "0xCFF5DC", VA = "0xCFF5DC")]
			internal void <PlayGettingFishVFX>b__1()
			{
			}

			[Token(Token = "0x6001E19")]
			[Address(RVA = "0xCFF734", Offset = "0xCFF734", VA = "0xCFF734")]
			internal void <PlayGettingFishVFX>b__2()
			{
			}

			[Token(Token = "0x6001E1A")]
			[Address(RVA = "0xCFF8F0", Offset = "0xCFF8F0", VA = "0xCFF8F0")]
			internal void <PlayGettingFishVFX>b__3()
			{
			}
		}

		[Token(Token = "0x20004F1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E8438", Offset = "0x9E8438")]
		private sealed class <>c__DisplayClass109_1
		{
			[Token(Token = "0x4001AA1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Transform coin;

			[Token(Token = "0x4001AA2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public <>c__DisplayClass109_0 CS$<>8__locals1;

			[Token(Token = "0x6001E1B")]
			[Address(RVA = "0xCFDDD8", Offset = "0xCFDDD8", VA = "0xCFDDD8")]
			public <>c__DisplayClass109_1()
			{
			}

			[Token(Token = "0x6001E1C")]
			[Address(RVA = "0xCFF95C", Offset = "0xCFF95C", VA = "0xCFF95C")]
			internal void <PlayGettingFishVFX>b__4()
			{
			}
		}

		[Token(Token = "0x20004F2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E8448", Offset = "0x9E8448")]
		private sealed class <>c__DisplayClass110_0
		{
			[Token(Token = "0x4001AA3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public UI_TakeFishController <>4__this;

			[Token(Token = "0x4001AA4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float currentBoost;

			[Token(Token = "0x4001AA5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public float increasedBoost;

			[Token(Token = "0x4001AA6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int currentLevel;

			[Token(Token = "0x6001E1D")]
			[Address(RVA = "0xCFDE64", Offset = "0xCFDE64", VA = "0xCFDE64")]
			public <>c__DisplayClass110_0()
			{
			}

			[Token(Token = "0x6001E1E")]
			[Address(RVA = "0xCFFA70", Offset = "0xCFFA70", VA = "0xCFFA70")]
			internal void <PlayGettingBoostPointsFX>b__0()
			{
			}

			[Token(Token = "0x6001E1F")]
			[Address(RVA = "0xCFFF1C", Offset = "0xCFFF1C", VA = "0xCFFF1C")]
			internal void <PlayGettingBoostPointsFX>b__1()
			{
			}

			[Token(Token = "0x6001E20")]
			[Address(RVA = "0xD00030", Offset = "0xD00030", VA = "0xD00030")]
			internal float <PlayGettingBoostPointsFX>b__2()
			{
				return default(float);
			}

			[Token(Token = "0x6001E21")]
			[Address(RVA = "0xD00038", Offset = "0xD00038", VA = "0xD00038")]
			internal void <PlayGettingBoostPointsFX>b__3(float x)
			{
			}

			[Token(Token = "0x6001E22")]
			[Address(RVA = "0xD00040", Offset = "0xD00040", VA = "0xD00040")]
			internal void <PlayGettingBoostPointsFX>b__4()
			{
			}

			[Token(Token = "0x6001E23")]
			[Address(RVA = "0xD00060", Offset = "0xD00060", VA = "0xD00060")]
			internal void <PlayGettingBoostPointsFX>b__5()
			{
			}

			[Token(Token = "0x6001E24")]
			[Address(RVA = "0xD0010C", Offset = "0xD0010C", VA = "0xD0010C")]
			internal void <PlayGettingBoostPointsFX>b__6()
			{
			}
		}

		[Token(Token = "0x20004F3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E8458", Offset = "0x9E8458")]
		private sealed class <>c__DisplayClass110_1
		{
			[Token(Token = "0x4001AA7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Transform bpVFX;

			[Token(Token = "0x4001AA8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public <>c__DisplayClass110_0 CS$<>8__locals1;

			[Token(Token = "0x6001E25")]
			[Address(RVA = "0xCFDF80", Offset = "0xCFDF80", VA = "0xCFDF80")]
			public <>c__DisplayClass110_1()
			{
			}
		}

		[Token(Token = "0x20004F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E8468", Offset = "0x9E8468")]
		private sealed class <>c__DisplayClass110_2
		{
			[Token(Token = "0x4001AA9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vector3 reelPos;

			[Token(Token = "0x4001AAA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public <>c__DisplayClass110_1 CS$<>8__locals2;

			[Token(Token = "0x6001E26")]
			[Address(RVA = "0xCFDF88", Offset = "0xCFDF88", VA = "0xCFDF88")]
			public <>c__DisplayClass110_2()
			{
			}

			[Token(Token = "0x6001E27")]
			[Address(RVA = "0xD001D0", Offset = "0xD001D0", VA = "0xD001D0")]
			internal void <PlayGettingBoostPointsFX>b__7()
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20004F5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E8478", Offset = "0x9E8478")]
		private struct <PlayUnboxingVFX>d__113 : IAsyncStateMachine
		{
			[Token(Token = "0x4001AAB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001AAC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4001AAD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public UI_TakeFishController <>4__this;

			[Token(Token = "0x6001E28")]
			[Address(RVA = "0xD003A8", Offset = "0xD003A8", VA = "0xD003A8", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001E29")]
			[Address(RVA = "0xD0083C", Offset = "0xD0083C", VA = "0xD0083C", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x20004F6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E8488", Offset = "0x9E8488")]
		private sealed class <>c__DisplayClass118_0
		{
			[Token(Token = "0x4001AAE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RectTransform rt;

			[Token(Token = "0x6001E2A")]
			[Address(RVA = "0xCFE328", Offset = "0xCFE328", VA = "0xCFE328")]
			public <>c__DisplayClass118_0()
			{
			}
		}

		[Token(Token = "0x20004F7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E8498", Offset = "0x9E8498")]
		private sealed class <>c__DisplayClass118_1
		{
			[Token(Token = "0x4001AAF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vector3 outPos;

			[Token(Token = "0x4001AB0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public <>c__DisplayClass118_0 CS$<>8__locals1;

			[Token(Token = "0x6001E2B")]
			[Address(RVA = "0xCFE330", Offset = "0xCFE330", VA = "0xCFE330")]
			public <>c__DisplayClass118_1()
			{
			}

			[Token(Token = "0x6001E2C")]
			[Address(RVA = "0xD0031C", Offset = "0xD0031C", VA = "0xD0031C")]
			internal void <HideUi>b__0()
			{
			}
		}

		[Token(Token = "0x400146D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Canvas Canvas;

		[Token(Token = "0x400146E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform FishModelPoint;

		[Token(Token = "0x400146F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Button KeepButton;

		[Token(Token = "0x4001470")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Button ReleaseButton;

		[Token(Token = "0x4001471")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Canvas RewardCanvas;

		[Token(Token = "0x4001472")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private AudioSource RewardSfx;

		[Token(Token = "0x4001473")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private CanvasGroup ChargeRewardPanel;

		[Token(Token = "0x4001474")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private TMP_Text ChargeRewarded;

		[Token(Token = "0x4001475")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private TMP_Text ChargeReadout;

		[Token(Token = "0x4001476")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private CanvasGroup FishingRewardPanel;

		[Token(Token = "0x4001477")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private CanvasGroup LootboxRewardPanel;

		[Token(Token = "0x4001478")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9ED098", Offset = "0x9ED098")]
		[SerializeField]
		private Canvas ChallengeCompleteCanvas;

		[Token(Token = "0x4001479")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private TMP_Text ChallengeCompleteNameText;

		[Token(Token = "0x400147A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private TMP_Text ChallengeCompleteDescriptionText;

		[Token(Token = "0x400147B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private Canvas NewChallengeCanvas;

		[Token(Token = "0x400147C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private TMP_Text NewChallengeNameText;

		[Token(Token = "0x400147D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private TMP_Text NewChallengeDescriptionText;

		[Token(Token = "0x400147E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9ED134", Offset = "0x9ED134")]
		[SerializeField]
		private GameObject MissionProgress;

		[Token(Token = "0x400147F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private Slider Charge_Slider;

		[Token(Token = "0x4001480")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private TMP_Text XP_LevelNumber;

		[Token(Token = "0x4001481")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private TMP_Text XP_NextLevelNumber;

		[Token(Token = "0x4001482")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private GameObject ChallengeMissionPanel;

		[Token(Token = "0x4001483")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private Localize ChallengeMissionTitle;

		[Token(Token = "0x4001484")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private Localize ChallengeMissionDescription;

		[Token(Token = "0x4001485")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private Slider ChallengeMissionTargetSlider;

		[Token(Token = "0x4001486")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private GameObject ChallengeMissionTargetsPanel;

		[Token(Token = "0x4001487")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[SerializeField]
		private MissionTarget[] ChallengeMissionTargets;

		[Token(Token = "0x4001488")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[SerializeField]
		private GameObject JobMissionPanel;

		[Token(Token = "0x4001489")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[SerializeField]
		private Localize JobMissionTitle;

		[Token(Token = "0x400148A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[SerializeField]
		private GameObject JobMissionTargetsPanel;

		[Token(Token = "0x400148B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[SerializeField]
		private MissionTarget[] JobMissionTargets;

		[Token(Token = "0x400148C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[SerializeField]
		private GameObject TakeFishPanel;

		[Token(Token = "0x400148D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[SerializeField]
		private GameObject TakeLootboxPanel;

		[Token(Token = "0x400148E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9ED270", Offset = "0x9ED270")]
		[SerializeField]
		private Localize FishName;

		[Token(Token = "0x400148F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[SerializeField]
		private Image FishGradeIcon;

		[Token(Token = "0x4001490")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[SerializeField]
		private GameObject ChargeInfo;

		[Token(Token = "0x4001491")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		[SerializeField]
		private Localize ChargeLabel;

		[Token(Token = "0x4001492")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		[SerializeField]
		private TMP_Text ChargeToBeGainedText;

		[Token(Token = "0x4001493")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		[SerializeField]
		private Image[] Stars;

		[Token(Token = "0x4001494")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		[SerializeField]
		private GameObject WeightLengthInfo;

		[Token(Token = "0x4001495")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		[SerializeField]
		private Localize Weight;

		[Token(Token = "0x4001496")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		[SerializeField]
		private TMP_Text Weight_Text;

		[Token(Token = "0x4001497")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		[SerializeField]
		private Color WeightColor;

		[Token(Token = "0x4001498")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		[SerializeField]
		private Color BonusWeightColor;

		[Token(Token = "0x4001499")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		[SerializeField]
		private Image Weight_Charm;

		[Token(Token = "0x400149A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		[SerializeField]
		private Image Weight_Icon;

		[Token(Token = "0x400149B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		[SerializeField]
		private Localize Length;

		[Token(Token = "0x400149C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		[SerializeField]
		private TMP_Text Length_Text;

		[Token(Token = "0x400149D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		[SerializeField]
		private Localize PreviousRecord;

		[Token(Token = "0x400149E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		[SerializeField]
		private Image[] RecordStars;

		[Token(Token = "0x400149F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		[SerializeField]
		private Localize RecordWeight;

		[Token(Token = "0x40014A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		[SerializeField]
		private TMP_Text RecordWeight_Text;

		[Token(Token = "0x40014A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		[SerializeField]
		private Localize RecordLength;

		[Token(Token = "0x40014A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		[SerializeField]
		private TMP_Text RecordLength_Text;

		[Token(Token = "0x40014A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		[SerializeField]
		private GameObject TournamentPointInfo;

		[Token(Token = "0x40014A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		[SerializeField]
		private Localize TournamentPoint;

		[Token(Token = "0x40014A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		[SerializeField]
		private TMP_Text TournamentPoint_Text;

		[Token(Token = "0x40014A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		[SerializeField]
		private Localize TournamentScore;

		[Token(Token = "0x40014A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		[SerializeField]
		private TMP_Text TournamentScore_Text;

		[Token(Token = "0x40014A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		[SerializeField]
		private GameObject ResourceInfo;

		[Token(Token = "0x40014A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		[SerializeField]
		private LootBox[] Resources;

		[Token(Token = "0x40014AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		[SerializeField]
		private TMP_Text KeepChargeToBeGained;

		[Token(Token = "0x40014AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
		[SerializeField]
		private Image NewIcon;

		[Token(Token = "0x40014AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
		[SerializeField]
		private MissionSO SpreeusCrafterMission;

		[Token(Token = "0x40014AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9ED49C", Offset = "0x9ED49C")]
		[SerializeField]
		private RewardItem[] FishingRewards;

		[Token(Token = "0x40014AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
		[SerializeField]
		private LootBox[] LootBoxes;

		[Token(Token = "0x40014AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
		[SerializeField]
		private MissionRewardItem[] MissionRewards;

		[Token(Token = "0x40014B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
		[SerializeField]
		private RewardItem[] NewChallengeRewards;

		[Token(Token = "0x40014B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
		[SerializeField]
		private MakeResourceCoin makeResourceCoin;

		[Token(Token = "0x40014B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
		[SerializeField]
		private Transform resourceCoinRotator;

		[Token(Token = "0x40014B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
		private List<Transform> resourceCoins;

		[Token(Token = "0x40014B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
		public Vector3 fishPosition;

		[Token(Token = "0x40014B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
		[SerializeField]
		private Transform boostPointVFXPrefab;

		[Token(Token = "0x40014B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
		[SerializeField]
		private SpawnPool vfxPool;

		[Token(Token = "0x40014B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
		private List<Transform> bpVFXs;

		[Token(Token = "0x40014B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
		private FpFish m_fish;

		[Token(Token = "0x40014B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
		private Transform m_fishModel;

		[Token(Token = "0x40014BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
		private bool missionCompleted;

		[Token(Token = "0x40014BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
		private Dictionary<MissionSO, bool> m_ShowedMissionDic;

		[Token(Token = "0x40014BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
		private float m_heightOffset;

		[Token(Token = "0x40014BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
		private Tween scaleTween;

		[Token(Token = "0x40014BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B8")]
		private int substitutedBoostPoints;

		[Token(Token = "0x40014BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2BC")]
		private float keepBoostPts;

		[Token(Token = "0x17000187")]
		private MissionSO m_completedMission
		{
			[Token(Token = "0x6001361")]
			[Address(RVA = "0xCFA62C", Offset = "0xCFA62C", VA = "0xCFA62C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001362")]
		[Address(RVA = "0xCFA634", Offset = "0xCFA634", VA = "0xCFA634")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001363")]
		[Address(RVA = "0xCFA718", Offset = "0xCFA718", VA = "0xCFA718")]
		private void Start()
		{
		}

		[Token(Token = "0x6001364")]
		[Address(RVA = "0xCFA970", Offset = "0xCFA970", VA = "0xCFA970")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001365")]
		[Address(RVA = "0xCFAA54", Offset = "0xCFAA54", VA = "0xCFAA54")]
		private void OnMissionSkipped(MissionSO mission)
		{
		}

		[Token(Token = "0x6001366")]
		[Address(RVA = "0xCFAA58", Offset = "0xCFAA58", VA = "0xCFAA58")]
		private void EventHub_OnFishCaught(FpFish fish, bool isCheating)
		{
		}

		[Token(Token = "0x6001367")]
		[Address(RVA = "0xCFA844", Offset = "0xCFA844", VA = "0xCFA844")]
		private void FillUpXPInfo()
		{
		}

		[Token(Token = "0x6001368")]
		[Address(RVA = "0xCFAF38", Offset = "0xCFAF38", VA = "0xCFAF38")]
		private void FillUpProgressInfo(MissionSO challenge)
		{
		}

		[Token(Token = "0x6001369")]
		[Address(RVA = "0xCFBB00", Offset = "0xCFBB00", VA = "0xCFBB00")]
		public void SetHeight()
		{
		}

		[Token(Token = "0x600136A")]
		[Address(RVA = "0xCFB354", Offset = "0xCFB354", VA = "0xCFB354")]
		private void FillUpFishableInfo()
		{
		}

		[Token(Token = "0x600136B")]
		[Address(RVA = "0xCFBBD0", Offset = "0xCFBBD0", VA = "0xCFBBD0")]
		private void FillUpResources(FishTypeSO.Resources[] resources)
		{
		}

		[Token(Token = "0x600136C")]
		[Address(RVA = "0xCFBF88", Offset = "0xCFBF88", VA = "0xCFBF88")]
		private void FillUpFishingRewards(FishTypeSO.Resources[] resources)
		{
		}

		[Token(Token = "0x600136D")]
		[Address(RVA = "0xCFC2B8", Offset = "0xCFC2B8", VA = "0xCFC2B8")]
		private void FillUpResourceCoins(FishTypeSO.Resources[] resources)
		{
		}

		[Token(Token = "0x600136E")]
		[Address(RVA = "0xCFC550", Offset = "0xCFC550", VA = "0xCFC550")]
		private void FillUpLootboxRewards(ItemSO[] items)
		{
		}

		[Token(Token = "0x600136F")]
		[Address(RVA = "0xCFC770", Offset = "0xCFC770", VA = "0xCFC770")]
		private void FillUpMissionRewards(MissionRewardItem[] rewardsArray, MissionSO.Reward[] missionRewards)
		{
		}

		[Token(Token = "0x6001370")]
		[Address(RVA = "0xCFCA84", Offset = "0xCFCA84", VA = "0xCFCA84")]
		public void OnKeep()
		{
		}

		[Token(Token = "0x6001371")]
		[Address(RVA = "0xCFD020", Offset = "0xCFD020", VA = "0xCFD020")]
		public void OnRelease()
		{
		}

		[Token(Token = "0x6001372")]
		[Address(RVA = "0xCFD844", Offset = "0xCFD844", VA = "0xCFD844")]
		public void OnOpenLootbox()
		{
		}

		[Token(Token = "0x6001373")]
		[Address(RVA = "0xCFD9D0", Offset = "0xCFD9D0", VA = "0xCFD9D0")]
		public void OnReceiveMissionRewards()
		{
		}

		[Token(Token = "0x6001374")]
		[Address(RVA = "0xCFDA94", Offset = "0xCFDA94", VA = "0xCFDA94")]
		private void ShowNewChallengePanel()
		{
		}

		[Token(Token = "0x6001375")]
		[Address(RVA = "0xCFDBDC", Offset = "0xCFDBDC", VA = "0xCFDBDC")]
		public void OnDismissNewChallengePanel()
		{
		}

		[Token(Token = "0x6001376")]
		[Address(RVA = "0xCFDB5C", Offset = "0xCFDB5C", VA = "0xCFDB5C")]
		private void FillNewChallangeCanvas()
		{
		}

		[Token(Token = "0x6001377")]
		[Address(RVA = "0xCFCCFC", Offset = "0xCFCCFC", VA = "0xCFCCFC")]
		private void PlayGettingFishVFX()
		{
		}

		[Token(Token = "0x6001378")]
		[Address(RVA = "0xCFD0FC", Offset = "0xCFD0FC", VA = "0xCFD0FC")]
		private void PlayGettingBoostPointsFX()
		{
		}

		[Token(Token = "0x6001379")]
		[Address(RVA = "0xCFDF90", Offset = "0xCFDF90", VA = "0xCFDF90")]
		private void UpdateBoostDisplay(float currentBoost, float increasedBoost)
		{
		}

		[Token(Token = "0x600137A")]
		[Address(RVA = "0xCFE0E8", Offset = "0xCFE0E8", VA = "0xCFE0E8")]
		private void MissionCompletedSFX()
		{
		}

		[Token(Token = "0x600137B")]
		[Address(RVA = "0xCFD908", Offset = "0xCFD908", VA = "0xCFD908")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0x9F2B90", Offset = "0x9F2B90")]
		private void PlayUnboxingVFX()
		{
		}

		[Token(Token = "0x600137C")]
		[Address(RVA = "0xCFBE58", Offset = "0xCFBE58", VA = "0xCFBE58")]
		private void SetStars(FpFish fish, Image[] stars)
		{
		}

		[Token(Token = "0x600137D")]
		[Address(RVA = "0xCFCB60", Offset = "0xCFCB60", VA = "0xCFCB60")]
		private void Dismiss()
		{
		}

		[Token(Token = "0x600137E")]
		[Address(RVA = "0xCFDC98", Offset = "0xCFDC98", VA = "0xCFDC98")]
		private string GetMissionName(MissionSO mission)
		{
			return null;
		}

		[Token(Token = "0x600137F")]
		[Address(RVA = "0xCFDD34", Offset = "0xCFDD34", VA = "0xCFDD34")]
		private string GetMissionDescription(MissionSO mission)
		{
			return null;
		}

		[Token(Token = "0x6001380")]
		[Address(RVA = "0xCFE0EC", Offset = "0xCFE0EC", VA = "0xCFE0EC")]
		public void HideUi(bool state)
		{
		}

		[Token(Token = "0x6001381")]
		[Address(RVA = "0xCFDE6C", Offset = "0xCFDE6C", VA = "0xCFDE6C")]
		private void FillUpBoostPoints(int boostPoint)
		{
		}

		[Token(Token = "0x6001382")]
		[Address(RVA = "0xCFDDE0", Offset = "0xCFDDE0", VA = "0xCFDDE0")]
		private void AppendShowMissionCompleteCanvas(Sequence sequence)
		{
		}

		[Token(Token = "0x6001383")]
		[Address(RVA = "0xCFE338", Offset = "0xCFE338", VA = "0xCFE338")]
		private void CheckIsSpreeusLure(CraftingRecipesSO recipe)
		{
		}

		[Token(Token = "0x6001384")]
		[Address(RVA = "0xCFE578", Offset = "0xCFE578", VA = "0xCFE578")]
		public void FinalFishRewards()
		{
		}

		[Token(Token = "0x6001385")]
		[Address(RVA = "0xCFE3F8", Offset = "0xCFE3F8", VA = "0xCFE3F8")]
		private void ShowMissionRewards([Optional] MissionSO missionOverride)
		{
		}

		[Token(Token = "0x6001386")]
		[Address(RVA = "0xCFE5AC", Offset = "0xCFE5AC", VA = "0xCFE5AC")]
		public UI_TakeFishController()
		{
		}

		[Token(Token = "0x6001387")]
		[Address(RVA = "0xCFE634", Offset = "0xCFE634", VA = "0xCFE634")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F2BF4", Offset = "0x9F2BF4")]
		private void <OnReceiveMissionRewards>b__105_0()
		{
		}

		[Token(Token = "0x6001388")]
		[Address(RVA = "0xCFE638", Offset = "0xCFE638", VA = "0xCFE638")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F2C04", Offset = "0x9F2C04")]
		private void <OnDismissNewChallengePanel>b__107_0()
		{
		}

		[Token(Token = "0x6001389")]
		[Address(RVA = "0xCFE6D4", Offset = "0xCFE6D4", VA = "0xCFE6D4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F2C14", Offset = "0x9F2C14")]
		private void <PlayUnboxingVFX>b__113_0()
		{
		}

		[Token(Token = "0x600138A")]
		[Address(RVA = "0xCFE7C4", Offset = "0xCFE7C4", VA = "0xCFE7C4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F2C24", Offset = "0x9F2C24")]
		private void <PlayUnboxingVFX>b__113_1()
		{
		}

		[Token(Token = "0x600138B")]
		[Address(RVA = "0xCFE8D8", Offset = "0xCFE8D8", VA = "0xCFE8D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F2C34", Offset = "0x9F2C34")]
		private void <AppendShowMissionCompleteCanvas>b__120_0()
		{
		}
	}
	[Token(Token = "0x20002B2")]
	public class UnderwaterLureController : MonoBehaviour
	{
		[Token(Token = "0x40014C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ParticleSystem ps;

		[Token(Token = "0x40014C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private ParticleSystem.ShapeModule psShape;

		[Token(Token = "0x40014C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private ParticleSystem.MainModule psMain;

		[Token(Token = "0x40014C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Tween radiusTween;

		[Token(Token = "0x40014C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float endRadius;

		[Token(Token = "0x40014C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float currentRadius;

		[Token(Token = "0x40014C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float time;

		[Token(Token = "0x40014C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Transform connectedBody;

		[Token(Token = "0x40014C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public GameObject bobberModel;

		[Token(Token = "0x40014C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Transform bobberModelLineConnectPoint;

		[Token(Token = "0x40014CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Transform localParent;

		[Token(Token = "0x40014CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Transform lureModelOldParent;

		[Token(Token = "0x40014CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Transform lureModel;

		[Token(Token = "0x40014CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector3 lureModelOriginalScale;

		[Token(Token = "0x40014CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Material underwaterLureMat;

		[Token(Token = "0x40014CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public LureLineController lureLineController;

		[Token(Token = "0x40014D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public GameObject lureFX;

		[Token(Token = "0x40014D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public GameObject lureBeam;

		[Token(Token = "0x40014D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public GameObject lureBeamExpanding;

		[Token(Token = "0x40014D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public float lureFxLastActivatedTime;

		[Token(Token = "0x40014D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private Material[] lureOriginalMats;

		[Token(Token = "0x40014D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private bool swapLureMat;

		[Token(Token = "0x40014D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private int originalLayer;

		[Token(Token = "0x600138C")]
		[Address(RVA = "0xD02488", Offset = "0xD02488", VA = "0xD02488")]
		private void Start()
		{
		}

		[Token(Token = "0x600138D")]
		[Address(RVA = "0xD024FC", Offset = "0xD024FC", VA = "0xD024FC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600138E")]
		[Address(RVA = "0xD02B8C", Offset = "0xD02B8C", VA = "0xD02B8C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600138F")]
		[Address(RVA = "0xD02D7C", Offset = "0xD02D7C", VA = "0xD02D7C")]
		public void OpenLureRadius(float attractionRadius)
		{
		}

		[Token(Token = "0x6001390")]
		[Address(RVA = "0xD02E08", Offset = "0xD02E08", VA = "0xD02E08")]
		public void CloseLureRadius()
		{
		}

		[Token(Token = "0x6001391")]
		[Address(RVA = "0xD02E64", Offset = "0xD02E64", VA = "0xD02E64")]
		private void DelayCancelBobberAttraction()
		{
		}

		[Token(Token = "0x6001392")]
		[Address(RVA = "0xD02ED4", Offset = "0xD02ED4", VA = "0xD02ED4")]
		private void UpdateRadius()
		{
		}

		[Token(Token = "0x6001393")]
		[Address(RVA = "0xD02EE4", Offset = "0xD02EE4", VA = "0xD02EE4")]
		internal void ActivateLureFX(bool isActive, bool showBeam)
		{
		}

		[Token(Token = "0x6001394")]
		[Address(RVA = "0xD02A54", Offset = "0xD02A54", VA = "0xD02A54")]
		public void ShowBeamSFX(PlayerSetting setting)
		{
		}

		[Token(Token = "0x6001395")]
		[Address(RVA = "0xD03008", Offset = "0xD03008", VA = "0xD03008")]
		private void DelayDisableLureFX()
		{
		}

		[Token(Token = "0x6001396")]
		[Address(RVA = "0xD03014", Offset = "0xD03014", VA = "0xD03014")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001397")]
		[Address(RVA = "0xD03088", Offset = "0xD03088", VA = "0xD03088")]
		public UnderwaterLureController()
		{
		}
	}
	[Token(Token = "0x20002B3")]
	internal class AesUtil
	{
		[Token(Token = "0x40014D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static string _key;

		[Token(Token = "0x40014D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static string _iv;

		[Token(Token = "0x6001398")]
		[Address(RVA = "0xCAE2F4", Offset = "0xCAE2F4", VA = "0xCAE2F4")]
		public static byte[] Encrypt(string original)
		{
			return null;
		}

		[Token(Token = "0x6001399")]
		[Address(RVA = "0xCAE914", Offset = "0xCAE914", VA = "0xCAE914")]
		public static string Decrypt(byte[] encrypted)
		{
			return null;
		}

		[Token(Token = "0x600139A")]
		[Address(RVA = "0xCAE3CC", Offset = "0xCAE3CC", VA = "0xCAE3CC")]
		private static byte[] EncryptStringToBytes_Aes(string plainText, byte[] Key, byte[] IV)
		{
			return null;
		}

		[Token(Token = "0x600139B")]
		[Address(RVA = "0xCAE9EC", Offset = "0xCAE9EC", VA = "0xCAE9EC")]
		private static string DecryptStringFromBytes_Aes(byte[] cipherText, byte[] Key, byte[] IV)
		{
			return null;
		}

		[Token(Token = "0x600139C")]
		[Address(RVA = "0xCAEEB8", Offset = "0xCAEEB8", VA = "0xCAEEB8")]
		public AesUtil()
		{
		}
	}
	[Token(Token = "0x20002B4")]
	public class DisplaySliderValue : MonoBehaviour
	{
		[Token(Token = "0x40014D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Slider slider;

		[Token(Token = "0x40014DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TMP_Text text;

		[Token(Token = "0x40014DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform minValuePosition;

		[Token(Token = "0x40014DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform maxValuePosition;

		[Token(Token = "0x600139E")]
		[Address(RVA = "0xC037FC", Offset = "0xC037FC", VA = "0xC037FC")]
		private void Update()
		{
		}

		[Token(Token = "0x600139F")]
		[Address(RVA = "0xC039BC", Offset = "0xC039BC", VA = "0xC039BC")]
		public DisplaySliderValue()
		{
		}
	}
	[Token(Token = "0x20002B5")]
	public class FPSCounter : MonoBehaviour
	{
		[Token(Token = "0x40014DD")]
		private const float fpsMeasurePeriod = 0.5f;

		[Token(Token = "0x40014DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int m_FpsAccumulator;

		[Token(Token = "0x40014DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float m_FpsNextPeriod;

		[Token(Token = "0x40014E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int m_CurrentFps;

		[Token(Token = "0x40014E1")]
		private const string display = "{0} FPS";

		[Token(Token = "0x40014E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TextMeshPro m_Text;

		[Token(Token = "0x60013A0")]
		[Address(RVA = "0xD89A70", Offset = "0xD89A70", VA = "0xD89A70")]
		private void Start()
		{
		}

		[Token(Token = "0x60013A1")]
		[Address(RVA = "0xD89B0C", Offset = "0xD89B0C", VA = "0xD89B0C")]
		private void Update()
		{
		}

		[Token(Token = "0x60013A2")]
		[Address(RVA = "0xD89C38", Offset = "0xD89C38", VA = "0xD89C38")]
		public FPSCounter()
		{
		}
	}
	[Token(Token = "0x20002B6")]
	public class FadeText : MonoBehaviour
	{
		[Token(Token = "0x40014E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TextMeshProUGUI text;

		[Token(Token = "0x40014E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Color startColor;

		[Token(Token = "0x40014E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Color endColor;

		[Token(Token = "0x40014E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float time;

		[Token(Token = "0x40014E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Tween fadeTween;

		[Token(Token = "0x60013A3")]
		[Address(RVA = "0xD89DC8", Offset = "0xD89DC8", VA = "0xD89DC8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60013A4")]
		[Address(RVA = "0xD89E1C", Offset = "0xD89E1C", VA = "0xD89E1C")]
		private void DoFade()
		{
		}

		[Token(Token = "0x60013A5")]
		[Address(RVA = "0xD89EE8", Offset = "0xD89EE8", VA = "0xD89EE8")]
		public FadeText()
		{
		}

		[Token(Token = "0x60013A6")]
		[Address(RVA = "0xD89EF0", Offset = "0xD89EF0", VA = "0xD89EF0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F2C44", Offset = "0x9F2C44")]
		private void <DoFade>b__6_0()
		{
		}
	}
	[Token(Token = "0x20002B7")]
	public class GestureScrollRect : ScrollRect, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
	{
		[Token(Token = "0x20004F8")]
		public delegate void NextPageEvent();

		[Token(Token = "0x20004F9")]
		public delegate void PrevicousPageEvent();

		[Token(Token = "0x40014E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static bool IsPointEnter;

		[Token(Token = "0x140000B5")]
		public event NextPageEvent OnNextPage
		{
			[Token(Token = "0x60013A7")]
			[Address(RVA = "0xC9FFA8", Offset = "0xC9FFA8", VA = "0xC9FFA8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F2C54", Offset = "0x9F2C54")]
			add
			{
			}
			[Token(Token = "0x60013A8")]
			[Address(RVA = "0xCA0050", Offset = "0xCA0050", VA = "0xCA0050")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F2C64", Offset = "0x9F2C64")]
			remove
			{
			}
		}

		[Token(Token = "0x140000B6")]
		public event PrevicousPageEvent OnPreviousPage
		{
			[Token(Token = "0x60013A9")]
			[Address(RVA = "0xCA00F8", Offset = "0xCA00F8", VA = "0xCA00F8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F2C74", Offset = "0x9F2C74")]
			add
			{
			}
			[Token(Token = "0x60013AA")]
			[Address(RVA = "0xCA01A0", Offset = "0xCA01A0", VA = "0xCA01A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F2C84", Offset = "0x9F2C84")]
			remove
			{
			}
		}

		[Token(Token = "0x60013AB")]
		[Address(RVA = "0xCA0248", Offset = "0xCA0248", VA = "0xCA0248", Slot = "44")]
		public override void OnBeginDrag(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60013AC")]
		[Address(RVA = "0xCA024C", Offset = "0xCA024C", VA = "0xCA024C", Slot = "46")]
		public override void OnDrag(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60013AD")]
		[Address(RVA = "0xCA0250", Offset = "0xCA0250", VA = "0xCA0250", Slot = "45")]
		public override void OnEndDrag(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60013AE")]
		[Address(RVA = "0xCA0254", Offset = "0xCA0254", VA = "0xCA0254", Slot = "61")]
		public void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60013AF")]
		[Address(RVA = "0xCA0258", Offset = "0xCA0258", VA = "0xCA0258", Slot = "62")]
		public void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60013B0")]
		[Address(RVA = "0xCA025C", Offset = "0xCA025C", VA = "0xCA025C")]
		private void SnapTurnProviderBase_OnStickTurn(float turnAmount, Handside handside)
		{
		}

		[Token(Token = "0x60013B1")]
		[Address(RVA = "0xCA072C", Offset = "0xCA072C", VA = "0xCA072C")]
		public GestureScrollRect()
		{
		}
	}
	[Token(Token = "0x20002B8")]
	public class SaveFileUtils
	{
		[Token(Token = "0x60013B3")]
		[Address(RVA = "0xCE6C94", Offset = "0xCE6C94", VA = "0xCE6C94")]
		public static void ConvertAll()
		{
		}

		[Token(Token = "0x60013B4")]
		[Address(RVA = "0xCE6D80", Offset = "0xCE6D80", VA = "0xCE6D80")]
		private static void Convert(string filePath)
		{
		}

		[Token(Token = "0x60013B5")]
		[Address(RVA = "0xCE6FD4", Offset = "0xCE6FD4", VA = "0xCE6FD4")]
		public static void ConvertAllDebug()
		{
		}

		[Token(Token = "0x60013B6")]
		[Address(RVA = "0xCE70C0", Offset = "0xCE70C0", VA = "0xCE70C0")]
		private static void ConvertDebug(string filePath)
		{
		}

		[Token(Token = "0x60013B7")]
		[Address(RVA = "0xCE73E0", Offset = "0xCE73E0", VA = "0xCE73E0")]
		public SaveFileUtils()
		{
		}
	}
	[Token(Token = "0x20002B9")]
	public class SetScaleBasedOnDistance : MonoBehaviour
	{
		[Token(Token = "0x40014EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float minScale;

		[Token(Token = "0x40014EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float maxScale;

		[Token(Token = "0x40014ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private RectTransform guageUi;

		[Token(Token = "0x40014EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float maxDistance;

		[Token(Token = "0x40014EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float minDistance;

		[Token(Token = "0x40014F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AnimationCurve curve;

		[Token(Token = "0x60013B8")]
		[Address(RVA = "0xCF0BC8", Offset = "0xCF0BC8", VA = "0xCF0BC8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60013B9")]
		[Address(RVA = "0xCF0C54", Offset = "0xCF0C54", VA = "0xCF0C54")]
		private void Update()
		{
		}

		[Token(Token = "0x60013BA")]
		[Address(RVA = "0xCF0F2C", Offset = "0xCF0F2C", VA = "0xCF0F2C")]
		public SetScaleBasedOnDistance()
		{
		}
	}
	[Token(Token = "0x20002BA")]
	public class SmoothFollowHeadset : MonoBehaviour
	{
		[Token(Token = "0x40014F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9ED5A8", Offset = "0x9ED5A8")]
		[SerializeField]
		private float distance;

		[Token(Token = "0x40014F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9ED5F4", Offset = "0x9ED5F4")]
		[SerializeField]
		private float height;

		[Token(Token = "0x40014F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9ED640", Offset = "0x9ED640")]
		[SerializeField]
		private float rotateSpeed;

		[Token(Token = "0x40014F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9ED68C", Offset = "0x9ED68C")]
		[SerializeField]
		private float laziness;

		[Token(Token = "0x40014F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Transform hmd;

		[Token(Token = "0x40014F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 lastHmdPos;

		[Token(Token = "0x60013BB")]
		[Address(RVA = "0xC2B16C", Offset = "0xC2B16C", VA = "0xC2B16C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60013BC")]
		[Address(RVA = "0xC2B200", Offset = "0xC2B200", VA = "0xC2B200")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60013BD")]
		[Address(RVA = "0xC2B294", Offset = "0xC2B294", VA = "0xC2B294")]
		private void Start()
		{
		}

		[Token(Token = "0x60013BE")]
		[Address(RVA = "0xC2B448", Offset = "0xC2B448", VA = "0xC2B448")]
		private void Update()
		{
		}

		[Token(Token = "0x60013BF")]
		[Address(RVA = "0xC2B5E4", Offset = "0xC2B5E4", VA = "0xC2B5E4")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60013C0")]
		[Address(RVA = "0xC2BAB0", Offset = "0xC2BAB0", VA = "0xC2BAB0")]
		private void Player_OnLocationChanged(LocationSO location, bool fromShip)
		{
		}

		[Token(Token = "0x60013C1")]
		[Address(RVA = "0xC2B330", Offset = "0xC2B330", VA = "0xC2B330")]
		private void InitializeTransform()
		{
		}

		[Token(Token = "0x60013C2")]
		[Address(RVA = "0xC2BA78", Offset = "0xC2BA78", VA = "0xC2BA78")]
		private float GetSightHeight()
		{
			return default(float);
		}

		[Token(Token = "0x60013C3")]
		[Address(RVA = "0xC2B908", Offset = "0xC2B908", VA = "0xC2B908")]
		private Vector3 GetTargetPos()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60013C4")]
		[Address(RVA = "0xC2BAB4", Offset = "0xC2BAB4", VA = "0xC2BAB4")]
		private Vector3 GetSightPos()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60013C5")]
		[Address(RVA = "0xC2BB08", Offset = "0xC2BB08", VA = "0xC2BB08")]
		public SmoothFollowHeadset()
		{
		}
	}
	[Token(Token = "0x20002BB")]
	public static class Util
	{
		[Token(Token = "0x20004FA")]
		public struct LaunchData
		{
			[Token(Token = "0x4001AB1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public readonly Vector3 initialVelocity;

			[Token(Token = "0x4001AB2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public readonly float timeToTarget;

			[Token(Token = "0x6001E35")]
			[Address(RVA = "0xD04B6C", Offset = "0xD04B6C", VA = "0xD04B6C")]
			public LaunchData(Vector3 initialVelocity, float timeToTarget)
			{
			}
		}

		[Token(Token = "0x17000188")]
		public static float TargetFramerate
		{
			[Token(Token = "0x60013C7")]
			[Address(RVA = "0xD04738", Offset = "0xD04738", VA = "0xD04738")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000189")]
		public static float FramerateMult
		{
			[Token(Token = "0x60013C8")]
			[Address(RVA = "0xD04744", Offset = "0xD04744", VA = "0xD04744")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x60013C6")]
		[Address(RVA = "0xD0471C", Offset = "0xD0471C", VA = "0xD0471C")]
		public static float Map(float x, float in_min, float in_max, float out_min, float out_max)
		{
			return default(float);
		}

		[Token(Token = "0x60013C9")]
		[Address(RVA = "0xD04768", Offset = "0xD04768", VA = "0xD04768")]
		public static Vector3 BallisticVel(Vector3 origin, Vector3 target, float angle)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60013CA")]
		[Address(RVA = "0xD04978", Offset = "0xD04978", VA = "0xD04978")]
		public static LaunchData GetLaunchData(Vector3 target, Vector3 origin, float maxHeight, float gravityScale = 2f)
		{
			return default(LaunchData);
		}

		[Token(Token = "0x60013CB")]
		[Address(RVA = "0xD04B78", Offset = "0xD04B78", VA = "0xD04B78")]
		public static Vector3 PerlinPos(float input, float scale, float seed)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60013CC")]
		[Address(RVA = "0xD04CF4", Offset = "0xD04CF4", VA = "0xD04CF4")]
		public static Vector3 GetSurfacePos(Vector3 underWaterPoint, Vector3 aboveWaterPoint)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60013CD")]
		[Address(RVA = "0xD04FE0", Offset = "0xD04FE0", VA = "0xD04FE0")]
		public static Vector3 RandomPatrolTarget(Vector3 org, float minRadius, float maxRadius)
		{
			return default(Vector3);
		}
	}
	[Token(Token = "0x20002BC")]
	public class VFX : MonoBehaviour
	{
		[Token(Token = "0x40014F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static VFX instance;

		[Token(Token = "0x40014F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SpawnPool vfx;

		[Token(Token = "0x40014F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform rippleRingPrefab;

		[Token(Token = "0x40014FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform smallSplashPrefab;

		[Token(Token = "0x40014FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject distanceRipple;

		[Token(Token = "0x40014FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Transform lootCrateBubblesPrefab;

		[Token(Token = "0x1700018A")]
		public static GameObject DistanceRipple
		{
			[Token(Token = "0x60013CE")]
			[Address(RVA = "0xD05144", Offset = "0xD05144", VA = "0xD05144")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60013CF")]
		[Address(RVA = "0xD051A0", Offset = "0xD051A0", VA = "0xD051A0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60013D0")]
		[Address(RVA = "0xD051F8", Offset = "0xD051F8", VA = "0xD051F8")]
		public static void DoRipple(Vector3 pos, float size)
		{
		}

		[Token(Token = "0x60013D1")]
		[Address(RVA = "0xD053B4", Offset = "0xD053B4", VA = "0xD053B4")]
		internal static void DoSplash(Vector3 pos, float size)
		{
		}

		[Token(Token = "0x60013D2")]
		[Address(RVA = "0xD05554", Offset = "0xD05554", VA = "0xD05554")]
		public static Transform ShowLootCrateBubbles(Vector3 pos)
		{
			return null;
		}

		[Token(Token = "0x60013D3")]
		[Address(RVA = "0xD05668", Offset = "0xD05668", VA = "0xD05668")]
		public static void RemoveLootCrateBubbles(Transform bubbles)
		{
		}

		[Token(Token = "0x60013D4")]
		[Address(RVA = "0xD056D4", Offset = "0xD056D4", VA = "0xD056D4")]
		public VFX()
		{
		}
	}
	[Token(Token = "0x20002BD")]
	public class WaterInteractor : MonoBehaviour
	{
		[Token(Token = "0x40014FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private MeshRenderer water;

		[Token(Token = "0x40014FE")]
		private const float rippleDuration = 1f;

		[Token(Token = "0x40014FF")]
		private const float rippleRadius = 1f;

		[Token(Token = "0x4001500")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float rippleTimer;

		[Token(Token = "0x60013D5")]
		[Address(RVA = "0xD056DC", Offset = "0xD056DC", VA = "0xD056DC")]
		private void Update()
		{
		}

		[Token(Token = "0x60013D6")]
		[Address(RVA = "0xD05820", Offset = "0xD05820", VA = "0xD05820")]
		public void DoRipple(Vector3 pos, float sizeMultiplier)
		{
		}

		[Token(Token = "0x60013D7")]
		[Address(RVA = "0xD05974", Offset = "0xD05974", VA = "0xD05974")]
		public WaterInteractor()
		{
		}
	}
	[Token(Token = "0x20002BE")]
	public class WaterWake : MonoBehaviour
	{
		[Token(Token = "0x20004FB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E84A8", Offset = "0x9E84A8")]
		private sealed class <SetScale>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001AB3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001AB4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001AB5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WaterWake <>4__this;

			[Token(Token = "0x4001AB6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Arrow dir;

			[Token(Token = "0x4001AB7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private int <i>5__2;

			[Token(Token = "0x170002C7")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001E39")]
				[Address(RVA = "0xD060C8", Offset = "0xD060C8", VA = "0xD060C8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002C8")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E3B")]
				[Address(RVA = "0xD06130", Offset = "0xD06130", VA = "0xD06130", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E36")]
			[Address(RVA = "0xD05EE8", Offset = "0xD05EE8", VA = "0xD05EE8")]
			[DebuggerHidden]
			public <SetScale>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x6001E37")]
			[Address(RVA = "0xD05FE4", Offset = "0xD05FE4", VA = "0xD05FE4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E38")]
			[Address(RVA = "0xD05FE8", Offset = "0xD05FE8", VA = "0xD05FE8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E3A")]
			[Address(RVA = "0xD060D0", Offset = "0xD060D0", VA = "0xD060D0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001501")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool isActive;

		[Token(Token = "0x4001502")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject wakeUp;

		[Token(Token = "0x4001503")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject wakeLeft;

		[Token(Token = "0x4001504")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject wakeRight;

		[Token(Token = "0x4001505")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject spray;

		[Token(Token = "0x60013D8")]
		[Address(RVA = "0xD0597C", Offset = "0xD0597C", VA = "0xD0597C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60013D9")]
		[Address(RVA = "0xD05A60", Offset = "0xD05A60", VA = "0xD05A60")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60013DA")]
		[Address(RVA = "0xD05B44", Offset = "0xD05B44", VA = "0xD05B44")]
		private void Update()
		{
		}

		[Token(Token = "0x60013DB")]
		[Address(RVA = "0xD05D9C", Offset = "0xD05D9C", VA = "0xD05D9C")]
		private void Play(Arrow dir)
		{
		}

		[Token(Token = "0x60013DC")]
		[Address(RVA = "0xD05DE4", Offset = "0xD05DE4", VA = "0xD05DE4")]
		private void DisableAll()
		{
		}

		[Token(Token = "0x60013DD")]
		[Address(RVA = "0xD05E50", Offset = "0xD05E50", VA = "0xD05E50")]
		private void Stop()
		{
		}

		[Token(Token = "0x60013DE")]
		[Address(RVA = "0xD05E58", Offset = "0xD05E58", VA = "0xD05E58")]
		private void DirChange(Arrow dir)
		{
		}

		[Token(Token = "0x60013DF")]
		[Address(RVA = "0xD05DA8", Offset = "0xD05DA8", VA = "0xD05DA8")]
		private void SetDir(Arrow dir)
		{
		}

		[Token(Token = "0x60013E0")]
		[Address(RVA = "0xD05E5C", Offset = "0xD05E5C", VA = "0xD05E5C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9F2C94", Offset = "0x9F2C94")]
		private IEnumerator SetScale(Arrow dir)
		{
			return null;
		}

		[Token(Token = "0x60013E1")]
		[Address(RVA = "0xD05F14", Offset = "0xD05F14", VA = "0xD05F14")]
		private void SetSprayDir(Arrow dir, Vector3 sprayScale)
		{
		}

		[Token(Token = "0x60013E2")]
		[Address(RVA = "0xD05FDC", Offset = "0xD05FDC", VA = "0xD05FDC")]
		public WaterWake()
		{
		}
	}
}
namespace MantisLOD
{
	[Token(Token = "0x20002BF")]
	internal class My_Half_edge : IComparable
	{
		[Token(Token = "0x4001506")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool alive;

		[Token(Token = "0x4001507")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int pqIndex;

		[Token(Token = "0x4001508")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public My_Half_vertex vertex;

		[Token(Token = "0x4001509")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int index;

		[Token(Token = "0x400150A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public My_Half_face face;

		[Token(Token = "0x400150B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public My_Half_edge next;

		[Token(Token = "0x400150C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float cost;

		[Token(Token = "0x60013E3")]
		[Address(RVA = "0xF41C58", Offset = "0xF41C58", VA = "0xF41C58")]
		public My_Half_edge()
		{
		}

		[Token(Token = "0x60013E4")]
		[Address(RVA = "0xF43568", Offset = "0xF43568", VA = "0xF43568", Slot = "4")]
		public int CompareTo(object obj)
		{
			return default(int);
		}
	}
	[Token(Token = "0x20002C0")]
	internal class My_Half_vertex
	{
		[Token(Token = "0x400150D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool alive;

		[Token(Token = "0x400150E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public bool on_boundary;

		[Token(Token = "0x400150F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
		public bool on_symmetry;

		[Token(Token = "0x4001510")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Vector3 position;

		[Token(Token = "0x4001511")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<My_Half_edge> edges;

		[Token(Token = "0x60013E5")]
		[Address(RVA = "0xF436EC", Offset = "0xF436EC", VA = "0xF436EC")]
		public My_Half_vertex()
		{
		}
	}
	[Token(Token = "0x20002C1")]
	internal class My_Half_face
	{
		[Token(Token = "0x4001512")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool alive;

		[Token(Token = "0x4001513")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int mat;

		[Token(Token = "0x4001514")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public My_Half_edge edge;

		[Token(Token = "0x4001515")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 n;

		[Token(Token = "0x60013E6")]
		[Address(RVA = "0xF43604", Offset = "0xF43604", VA = "0xF43604")]
		public My_Half_face()
		{
		}
	}
	[Token(Token = "0x20002C2")]
	internal class My_Half_edge_index
	{
		[Token(Token = "0x4001516")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public My_Half_edge edge;

		[Token(Token = "0x4001517")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int index_from;

		[Token(Token = "0x4001518")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int index_to;

		[Token(Token = "0x60013E7")]
		[Address(RVA = "0xF435FC", Offset = "0xF435FC", VA = "0xF435FC")]
		public My_Half_edge_index()
		{
		}
	}
	[Token(Token = "0x20002C3")]
	internal class My_Half_trace
	{
		[Token(Token = "0x4001519")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool safe;

		[Token(Token = "0x400151A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public My_Half_vertex v_from;

		[Token(Token = "0x400151B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public My_Half_vertex v_to;

		[Token(Token = "0x400151C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<My_Half_face> erased_faces;

		[Token(Token = "0x400151D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<My_Half_edge_index> updated_edge_indices;

		[Token(Token = "0x60013E8")]
		[Address(RVA = "0xF43630", Offset = "0xF43630", VA = "0xF43630")]
		public My_Half_trace()
		{
		}
	}
	[Token(Token = "0x20002C4")]
	internal abstract class BinaryHeap
	{
		[Token(Token = "0x400151E")]
		private const int rootIndex = 1;

		[Token(Token = "0x400151F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly List<My_Half_edge> collection;

		[Token(Token = "0x1700018B")]
		private int LastNodeIndex
		{
			[Token(Token = "0x60013F0")]
			[Address(RVA = "0xF41DE4", Offset = "0xF41DE4", VA = "0xF41DE4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x60013E9")]
		[Address(RVA = "0xF41B94", Offset = "0xF41B94", VA = "0xF41B94")]
		public BinaryHeap()
		{
		}

		[Token(Token = "0x60013EA")]
		[Address(RVA = "0xF41C84", Offset = "0xF41C84", VA = "0xF41C84")]
		public BinaryHeap(int capacity)
		{
		}

		[Token(Token = "0x60013EB")]
		[Address(RVA = "0xF41D58", Offset = "0xF41D58", VA = "0xF41D58")]
		public void Push(My_Half_edge item)
		{
		}

		[Token(Token = "0x60013EC")]
		[Address(RVA = "0xF41FEC", Offset = "0xF41FEC", VA = "0xF41FEC")]
		public My_Half_edge Pop()
		{
			return null;
		}

		[Token(Token = "0x60013ED")]
		[Address(RVA = "0xF423B8", Offset = "0xF423B8", VA = "0xF423B8")]
		public bool Remove(int index)
		{
			return default(bool);
		}

		[Token(Token = "0x60013EE")]
		[Address(RVA = "0xF42500", Offset = "0xF42500", VA = "0xF42500")]
		public int Size()
		{
			return default(int);
		}

		[Token(Token = "0x60013EF")]
		[Address(RVA = "0xF42554", Offset = "0xF42554", VA = "0xF42554")]
		public My_Half_edge Top()
		{
			return null;
		}

		[Token(Token = "0x60013F1")]
		protected abstract bool Compare(My_Half_edge current, My_Half_edge other);

		[Token(Token = "0x60013F2")]
		[Address(RVA = "0xF41E38", Offset = "0xF41E38", VA = "0xF41E38")]
		private void BubbleUp(int index)
		{
		}

		[Token(Token = "0x60013F3")]
		[Address(RVA = "0xF42158", Offset = "0xF42158", VA = "0xF42158")]
		private void BubbleDown(int index)
		{
		}
	}
	[Token(Token = "0x20002C5")]
	internal class MinHeap : BinaryHeap
	{
		[Token(Token = "0x60013F4")]
		[Address(RVA = "0xF4353C", Offset = "0xF4353C", VA = "0xF4353C")]
		public MinHeap()
		{
		}

		[Token(Token = "0x60013F5")]
		[Address(RVA = "0xF43540", Offset = "0xF43540", VA = "0xF43540")]
		public MinHeap(int capacity)
		{
		}

		[Token(Token = "0x60013F6")]
		[Address(RVA = "0xF43544", Offset = "0xF43544", VA = "0xF43544", Slot = "4")]
		protected override bool Compare(My_Half_edge current, My_Half_edge other)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20002C6")]
	internal class Vector3Comparer : IEqualityComparer<Vector3>
	{
		[Token(Token = "0x60013F7")]
		[Address(RVA = "0xF47C18", Offset = "0xF47C18", VA = "0xF47C18", Slot = "4")]
		public bool Equals(Vector3 vec1, Vector3 vec2)
		{
			return default(bool);
		}

		[Token(Token = "0x60013F8")]
		[Address(RVA = "0xF47C70", Offset = "0xF47C70", VA = "0xF47C70", Slot = "5")]
		public int GetHashCode(Vector3 vec)
		{
			return default(int);
		}

		[Token(Token = "0x60013F9")]
		[Address(RVA = "0xF44660", Offset = "0xF44660", VA = "0xF44660")]
		public Vector3Comparer()
		{
		}
	}
	[Token(Token = "0x20002C7")]
	internal class Progressive_Mesh
	{
		[Token(Token = "0x4001520")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly List<My_Half_vertex> vertices;

		[Token(Token = "0x4001521")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly List<My_Half_face> faces;

		[Token(Token = "0x4001522")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly List<My_Half_edge> edges;

		[Token(Token = "0x4001523")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly List<My_Half_trace> contract_trace;

		[Token(Token = "0x4001524")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly List<Vector3> normals;

		[Token(Token = "0x4001525")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private readonly List<Vector4> colors;

		[Token(Token = "0x4001526")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private readonly List<Vector2> uvs;

		[Token(Token = "0x4001527")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int current_trace_position;

		[Token(Token = "0x4001528")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private readonly MinHeap pq;

		[Token(Token = "0x4001529")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Vector3 MAX;

		[Token(Token = "0x400152A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private Vector3 MIN;

		[Token(Token = "0x400152B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float max_square_length_of_mesh;

		[Token(Token = "0x400152C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private int face_count;

		[Token(Token = "0x400152D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private int mat_count;

		[Token(Token = "0x400152E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private bool lock_boundary;

		[Token(Token = "0x400152F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7D")]
		private bool lock_detail;

		[Token(Token = "0x4001530")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7E")]
		private bool lock_symmetry;

		[Token(Token = "0x4001531")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7F")]
		private bool lock_normal;

		[Token(Token = "0x4001532")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private bool lock_shape;

		[Token(Token = "0x4001533")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x81")]
		private bool use_detail_map;

		[Token(Token = "0x4001534")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private int detail_boost;

		[Token(Token = "0x60013FA")]
		[Address(RVA = "0xF42884", Offset = "0xF42884", VA = "0xF42884")]
		public Progressive_Mesh()
		{
		}

		[Token(Token = "0x60013FB")]
		[Address(RVA = "0xF42DB4", Offset = "0xF42DB4", VA = "0xF42DB4")]
		public int get_trace_num()
		{
			return default(int);
		}

		[Token(Token = "0x60013FC")]
		[Address(RVA = "0xF42A74", Offset = "0xF42A74", VA = "0xF42A74")]
		public void create_progressive_mesh(Vector3[] vertex_array, int vertex_count, int[] triangle_array, int triangle_count, Vector3[] normal_array, int normal_count, Color[] color_array, int color_count, Vector2[] uv_array, int uv_count, int protect_boundary, int protect_detail, int protect_symmetry, int protect_normal, int protect_shape, int use_detail_map, int detail_boost)
		{
		}

		[Token(Token = "0x60013FD")]
		[Address(RVA = "0xF42E04", Offset = "0xF42E04", VA = "0xF42E04")]
		public void get_triangle_list(int goal, int[] triangle_array, ref int triangle_count)
		{
		}

		[Token(Token = "0x60013FE")]
		[Address(RVA = "0xF43778", Offset = "0xF43778", VA = "0xF43778")]
		private void load_mesh_from_array(Vector3[] vertex_array, int vertex_count, int[] triangle_array, int triangle_count, Vector3[] normal_array, int normal_count, Color[] color_array, int color_count, Vector2[] uv_array, int uv_count)
		{
		}

		[Token(Token = "0x60013FF")]
		[Address(RVA = "0xF44668", Offset = "0xF44668", VA = "0xF44668")]
		private void calculate_face_normal(My_Half_face one_face)
		{
		}

		[Token(Token = "0x6001400")]
		[Address(RVA = "0xF447B4", Offset = "0xF447B4", VA = "0xF447B4")]
		private void calculate_face_normals()
		{
		}

		[Token(Token = "0x6001401")]
		[Address(RVA = "0xF4489C", Offset = "0xF4489C", VA = "0xF4489C")]
		private bool is_boundary_edge(My_Half_edge edge)
		{
			return default(bool);
		}

		[Token(Token = "0x6001402")]
		[Address(RVA = "0xF44AF0", Offset = "0xF44AF0", VA = "0xF44AF0")]
		private void detect_and_mark_boundaries()
		{
		}

		[Token(Token = "0x6001403")]
		[Address(RVA = "0xF44C30", Offset = "0xF44C30", VA = "0xF44C30")]
		private bool is_symmetry_edge(My_Half_edge edge)
		{
			return default(bool);
		}

		[Token(Token = "0x6001404")]
		[Address(RVA = "0xF45190", Offset = "0xF45190", VA = "0xF45190")]
		private void detect_and_mark_symmetries()
		{
		}

		[Token(Token = "0x6001405")]
		[Address(RVA = "0xF452D4", Offset = "0xF452D4", VA = "0xF452D4")]
		private float cost_of_edge(My_Half_edge edge)
		{
			return default(float);
		}

		[Token(Token = "0x6001406")]
		[Address(RVA = "0xF4409C", Offset = "0xF4409C", VA = "0xF4409C")]
		private void calculate_cost_of_edges()
		{
		}

		[Token(Token = "0x6001407")]
		[Address(RVA = "0xF46A34", Offset = "0xF46A34", VA = "0xF46A34")]
		private bool contract_edge(My_Half_edge edge)
		{
			return default(bool);
		}

		[Token(Token = "0x6001408")]
		[Address(RVA = "0xF441D8", Offset = "0xF441D8", VA = "0xF441D8")]
		private void contract_edges()
		{
		}

		[Token(Token = "0x6001409")]
		[Address(RVA = "0xF44264", Offset = "0xF44264", VA = "0xF44264")]
		private int trace_to(int goal)
		{
			return default(int);
		}
	}
	[Token(Token = "0x20002C8")]
	public static class MantisLODSimpler
	{
		[Token(Token = "0x4001535")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly List<Progressive_Mesh> simplers;

		[Token(Token = "0x600140A")]
		[Address(RVA = "0xF425D0", Offset = "0xF425D0", VA = "0xF425D0")]
		public static int create_progressive_mesh(Vector3[] vertex_array, int vertex_count, int[] triangle_array, int triangle_count, Vector3[] normal_array, int normal_count, Color[] color_array, int color_count, Vector2[] uv_array, int uv_count, int protect_boundary, int protect_detail, int protect_symmetry, int protect_normal, int protect_shape, int use_detail_map, int detail_boost)
		{
			return default(int);
		}

		[Token(Token = "0x600140B")]
		[Address(RVA = "0xF42C10", Offset = "0xF42C10", VA = "0xF42C10")]
		public static int get_triangle_list(int index, float goal, int[] triangle_array, ref int triangle_count)
		{
			return default(int);
		}

		[Token(Token = "0x600140C")]
		[Address(RVA = "0xF433A4", Offset = "0xF433A4", VA = "0xF433A4")]
		public static int delete_progressive_mesh(int index)
		{
			return default(int);
		}
	}
}
namespace MantisLODEditor
{
	[Token(Token = "0x20002C9")]
	public class Lod_Mesh
	{
		[Token(Token = "0x4001536")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Mesh mesh;

		[Token(Token = "0x4001537")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int triangle_count;

		[Token(Token = "0x600140E")]
		[Address(RVA = "0xF47CE0", Offset = "0xF47CE0", VA = "0xF47CE0")]
		public Lod_Mesh()
		{
		}
	}
	[Token(Token = "0x20002CA")]
	public class Lod_Mesh_Table
	{
		[Token(Token = "0x4001538")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Mesh origin_mesh;

		[Token(Token = "0x4001539")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<Component> containers;

		[Token(Token = "0x400153A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Lod_Mesh[] lod_meshes;

		[Token(Token = "0x600140F")]
		[Address(RVA = "0xF47CE8", Offset = "0xF47CE8", VA = "0xF47CE8")]
		public Lod_Mesh_Table()
		{
		}
	}
	[Token(Token = "0x20002CB")]
	public static class MantisLODEditorUtility
	{
		[Token(Token = "0x6001410")]
		[Address(RVA = "0xF47CF0", Offset = "0xF47CF0", VA = "0xF47CF0")]
		public static string get_uuid_from_mesh(Mesh mesh)
		{
			return null;
		}

		[Token(Token = "0x6001411")]
		[Address(RVA = "0xF47F64", Offset = "0xF47F64", VA = "0xF47F64")]
		public static int PrepareSimplify(Mantis_Mesh[] Mantis_Meshes, bool use_origin_triangles = true)
		{
			return default(int);
		}

		[Token(Token = "0x6001412")]
		[Address(RVA = "0xF481D8", Offset = "0xF481D8", VA = "0xF481D8")]
		public static void Simplify(Mantis_Mesh[] Mantis_Meshes, bool protect_boundary, bool protect_detail, bool protect_symmetry, bool protect_normal, bool protect_shape, bool use_detail_map, int detail_boost)
		{
		}

		[Token(Token = "0x6001413")]
		[Address(RVA = "0xF484C0", Offset = "0xF484C0", VA = "0xF484C0")]
		public static int SetQuality(Mantis_Mesh[] Mantis_Meshes, float quality)
		{
			return default(int);
		}

		[Token(Token = "0x6001414")]
		[Address(RVA = "0xF486C4", Offset = "0xF486C4", VA = "0xF486C4")]
		public static void SaveSimplifiedMesh(Mesh mesh, string filePath)
		{
		}

		[Token(Token = "0x6001415")]
		[Address(RVA = "0xF486C8", Offset = "0xF486C8", VA = "0xF486C8")]
		public static void FinishSimplify(Mantis_Mesh[] Mantis_Meshes, bool use_origin_triangles = true, bool unload_asset = false)
		{
		}

		[Token(Token = "0x6001416")]
		[Address(RVA = "0xF48820", Offset = "0xF48820", VA = "0xF48820")]
		public static ProgressiveMesh MakeProgressiveMesh(Mantis_Mesh[] Mantis_Meshes, int max_lod_count)
		{
			return null;
		}

		[Token(Token = "0x6001417")]
		[Address(RVA = "0xF48F98", Offset = "0xF48F98", VA = "0xF48F98")]
		public static void SaveProgressiveMesh(ProgressiveMesh pm, string filePath)
		{
		}

		[Token(Token = "0x6001418")]
		[Address(RVA = "0xF48F9C", Offset = "0xF48F9C", VA = "0xF48F9C")]
		public static ProgressiveMesh LoadProgressiveMesh(string filePath)
		{
			return null;
		}

		[Token(Token = "0x6001419")]
		[Address(RVA = "0xF48FEC", Offset = "0xF48FEC", VA = "0xF48FEC")]
		public static int get_triangles_count_from_progressive_mesh(ProgressiveMesh pm, int _lod, int _mesh_count)
		{
			return default(int);
		}

		[Token(Token = "0x600141A")]
		[Address(RVA = "0xF490F4", Offset = "0xF490F4", VA = "0xF490F4")]
		private static int[] get_triangles_from_progressive_mesh(ProgressiveMesh pm, int _lod, int _mesh_count, int _mat)
		{
			return null;
		}

		[Token(Token = "0x600141B")]
		[Address(RVA = "0xF49270", Offset = "0xF49270", VA = "0xF49270")]
		private static void set_triangles(ProgressiveMesh pm, Mesh mesh, string uuid, int lod)
		{
		}

		[Token(Token = "0x600141C")]
		[Address(RVA = "0xF49354", Offset = "0xF49354", VA = "0xF49354")]
		public static void GenerateRuntimeLOD(ProgressiveMesh pm, Component[] containers, bool optimize_on_the_fly)
		{
		}

		[Token(Token = "0x600141D")]
		[Address(RVA = "0xF49840", Offset = "0xF49840", VA = "0xF49840")]
		public static int SwitchRuntimeLOD(ProgressiveMesh pm, int[] mesh_lod_range, int lod, Component[] Components)
		{
			return default(int);
		}

		[Token(Token = "0x600141E")]
		[Address(RVA = "0xF49DC0", Offset = "0xF49DC0", VA = "0xF49DC0")]
		public static void FinishRuntimeLOD(ProgressiveMesh pm)
		{
		}
	}
	[Token(Token = "0x20002CC")]
	public class Mantis_Mesh
	{
		[Token(Token = "0x400153B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Mesh mesh;

		[Token(Token = "0x400153C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int index;

		[Token(Token = "0x400153D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string uuid;

		[Token(Token = "0x400153E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int[][] origin_triangles;

		[Token(Token = "0x400153F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int[] out_triangles;

		[Token(Token = "0x4001540")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int out_count;

		[Token(Token = "0x600141F")]
		[Address(RVA = "0xF4A0F0", Offset = "0xF4A0F0", VA = "0xF4A0F0")]
		public Mantis_Mesh()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002CD")]
	public class ProgressiveMesh : ScriptableObject
	{
		[Token(Token = "0x4001541")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int[] triangles;

		[Token(Token = "0x4001542")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string[] uuids;

		[Token(Token = "0x4001543")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Dictionary<string, Lod_Mesh_Table> lod_meshes_dic;

		[Token(Token = "0x6001420")]
		[Address(RVA = "0xF4A130", Offset = "0xF4A130", VA = "0xF4A130")]
		public ProgressiveMesh()
		{
		}
	}
	[Token(Token = "0x20002CE")]
	public class ProgressiveMeshRuntime : MonoBehaviour
	{
		[Token(Token = "0x4001544")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ProgressiveMesh progressiveMesh;

		[Token(Token = "0x4001545")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Text fpsHint;

		[Token(Token = "0x4001546")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Text lodHint;

		[Token(Token = "0x4001547")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Text triangleHint;

		[Token(Token = "0x4001548")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		public bool optimize_on_the_fly;

		[Token(Token = "0x4001549")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public int[] mesh_lod_range;

		[Token(Token = "0x400154A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[HideInInspector]
		public bool never_cull;

		[Token(Token = "0x400154B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[HideInInspector]
		public int lod_strategy;

		[Token(Token = "0x400154C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[HideInInspector]
		public float cull_ratio;

		[Token(Token = "0x400154D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[HideInInspector]
		public float disappear_distance;

		[Token(Token = "0x400154E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[HideInInspector]
		public float updateInterval;

		[Token(Token = "0x400154F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private int current_lod;

		[Token(Token = "0x4001550")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Component[] allBasicRenderers;

		[Token(Token = "0x4001551")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float currentTimeToInterval;

		[Token(Token = "0x4001552")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private bool culled;

		[Token(Token = "0x4001553")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6D")]
		private bool working;

		[Token(Token = "0x6001421")]
		[Address(RVA = "0xF4A138", Offset = "0xF4A138", VA = "0xF4A138")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001422")]
		[Address(RVA = "0xF4A350", Offset = "0xF4A350", VA = "0xF4A350")]
		private void Start()
		{
		}

		[Token(Token = "0x6001423")]
		[Address(RVA = "0xF4A354", Offset = "0xF4A354", VA = "0xF4A354")]
		private float ratio_of_screen()
		{
			return default(float);
		}

		[Token(Token = "0x6001424")]
		[Address(RVA = "0xF4A820", Offset = "0xF4A820", VA = "0xF4A820")]
		private float ratio_of_distance(float distance0)
		{
			return default(float);
		}

		[Token(Token = "0x6001425")]
		[Address(RVA = "0xF4ACC0", Offset = "0xF4ACC0", VA = "0xF4ACC0")]
		private void Update()
		{
		}

		[Token(Token = "0x6001426")]
		[Address(RVA = "0xF4B560", Offset = "0xF4B560", VA = "0xF4B560")]
		private void create_default_mesh_lod_range()
		{
		}

		[Token(Token = "0x6001427")]
		[Address(RVA = "0xF4A13C", Offset = "0xF4A13C", VA = "0xF4A13C")]
		private void get_all_meshes()
		{
		}

		[Token(Token = "0x6001428")]
		[Address(RVA = "0xF4B678", Offset = "0xF4B678", VA = "0xF4B678")]
		public void reset_all_parameters()
		{
		}

		[Token(Token = "0x6001429")]
		[Address(RVA = "0xF4B6C8", Offset = "0xF4B6C8", VA = "0xF4B6C8")]
		private void clean_all()
		{
		}

		[Token(Token = "0x600142A")]
		[Address(RVA = "0xF4B708", Offset = "0xF4B708", VA = "0xF4B708")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600142B")]
		[Address(RVA = "0xF4B70C", Offset = "0xF4B70C", VA = "0xF4B70C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600142C")]
		[Address(RVA = "0xF4B710", Offset = "0xF4B710", VA = "0xF4B710")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600142D")]
		[Address(RVA = "0xF4B714", Offset = "0xF4B714", VA = "0xF4B714")]
		public ProgressiveMeshRuntime()
		{
		}
	}
}
namespace MagicArsenal
{
	[Token(Token = "0x20002CF")]
	public class MagicBeamScript : MonoBehaviour
	{
		[Token(Token = "0x4001554")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9ED768", Offset = "0x9ED768")]
		public GameObject[] beamLineRendererPrefab;

		[Token(Token = "0x4001555")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject[] beamStartPrefab;

		[Token(Token = "0x4001556")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject[] beamEndPrefab;

		[Token(Token = "0x4001557")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int currentBeam;

		[Token(Token = "0x4001558")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private GameObject beamStart;

		[Token(Token = "0x4001559")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private GameObject beamEnd;

		[Token(Token = "0x400155A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private GameObject beam;

		[Token(Token = "0x400155B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private LineRenderer line;

		[Token(Token = "0x400155C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9ED7A0", Offset = "0x9ED7A0")]
		public float beamEndOffset;

		[Token(Token = "0x400155D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float textureScrollSpeed;

		[Token(Token = "0x400155E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float textureLengthScale;

		[Token(Token = "0x400155F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9ED7D8", Offset = "0x9ED7D8")]
		public Slider endOffSetSlider;

		[Token(Token = "0x4001560")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Slider scrollSpeedSlider;

		[Token(Token = "0x4001561")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9ED810", Offset = "0x9ED810")]
		public Text textBeamName;

		[Token(Token = "0x600142E")]
		[Address(RVA = "0xF3D55C", Offset = "0xF3D55C", VA = "0xF3D55C")]
		private void Start()
		{
		}

		[Token(Token = "0x600142F")]
		[Address(RVA = "0xF3D6D0", Offset = "0xF3D6D0", VA = "0xF3D6D0")]
		private void Update()
		{
		}

		[Token(Token = "0x6001430")]
		[Address(RVA = "0xF3DFF8", Offset = "0xF3DFF8", VA = "0xF3DFF8")]
		public void nextBeam()
		{
		}

		[Token(Token = "0x6001431")]
		[Address(RVA = "0xF3E0F0", Offset = "0xF3E0F0", VA = "0xF3E0F0")]
		public void previousBeam()
		{
		}

		[Token(Token = "0x6001432")]
		[Address(RVA = "0xF3E1E8", Offset = "0xF3E1E8", VA = "0xF3E1E8")]
		public void UpdateEndOffset()
		{
		}

		[Token(Token = "0x6001433")]
		[Address(RVA = "0xF3E224", Offset = "0xF3E224", VA = "0xF3E224")]
		public void UpdateScrollSpeed()
		{
		}

		[Token(Token = "0x6001434")]
		[Address(RVA = "0xF3DBA0", Offset = "0xF3DBA0", VA = "0xF3DBA0")]
		private void ShootBeamInDir(Vector3 start, Vector3 dir)
		{
		}

		[Token(Token = "0x6001435")]
		[Address(RVA = "0xF3E260", Offset = "0xF3E260", VA = "0xF3E260")]
		public MagicBeamScript()
		{
		}
	}
	[Token(Token = "0x20002D0")]
	public class MagicButtonScript : MonoBehaviour
	{
		[Token(Token = "0x4001562")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject Button;

		[Token(Token = "0x4001563")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Text MyButtonText;

		[Token(Token = "0x4001564")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private string projectileParticleName;

		[Token(Token = "0x4001565")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private MagicFireProjectile effectScript;

		[Token(Token = "0x4001566")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private MagicProjectileScript projectileScript;

		[Token(Token = "0x4001567")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float buttonsX;

		[Token(Token = "0x4001568")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float buttonsY;

		[Token(Token = "0x4001569")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float buttonsSizeX;

		[Token(Token = "0x400156A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float buttonsSizeY;

		[Token(Token = "0x400156B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float buttonsDistance;

		[Token(Token = "0x6001436")]
		[Address(RVA = "0xF3EC14", Offset = "0xF3EC14", VA = "0xF3EC14")]
		private void Start()
		{
		}

		[Token(Token = "0x6001437")]
		[Address(RVA = "0xF3EDC4", Offset = "0xF3EDC4", VA = "0xF3EDC4")]
		private void Update()
		{
		}

		[Token(Token = "0x6001438")]
		[Address(RVA = "0xF3ED00", Offset = "0xF3ED00", VA = "0xF3ED00")]
		public void getProjectileNames()
		{
		}

		[Token(Token = "0x6001439")]
		[Address(RVA = "0xF3EDF0", Offset = "0xF3EDF0", VA = "0xF3EDF0")]
		public bool overButton()
		{
			return default(bool);
		}

		[Token(Token = "0x600143A")]
		[Address(RVA = "0xF3EEFC", Offset = "0xF3EEFC", VA = "0xF3EEFC")]
		public MagicButtonScript()
		{
		}
	}
	[Token(Token = "0x20002D1")]
	public class MagicDragMouseOrbit : MonoBehaviour
	{
		[Token(Token = "0x400156C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform target;

		[Token(Token = "0x400156D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float distance;

		[Token(Token = "0x400156E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float xSpeed;

		[Token(Token = "0x400156F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float ySpeed;

		[Token(Token = "0x4001570")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float yMinLimit;

		[Token(Token = "0x4001571")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float yMaxLimit;

		[Token(Token = "0x4001572")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float distanceMin;

		[Token(Token = "0x4001573")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float distanceMax;

		[Token(Token = "0x4001574")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float smoothTime;

		[Token(Token = "0x4001575")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float rotationYAxis;

		[Token(Token = "0x4001576")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float rotationXAxis;

		[Token(Token = "0x4001577")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float velocityX;

		[Token(Token = "0x4001578")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float velocityY;

		[Token(Token = "0x600143B")]
		[Address(RVA = "0xF3EF04", Offset = "0xF3EF04", VA = "0xF3EF04")]
		private void Start()
		{
		}

		[Token(Token = "0x600143C")]
		[Address(RVA = "0xF3EFE0", Offset = "0xF3EFE0", VA = "0xF3EFE0")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x600143D")]
		[Address(RVA = "0xF3F3E0", Offset = "0xF3F3E0", VA = "0xF3F3E0")]
		public static float ClampAngle(float angle, float min, float max)
		{
			return default(float);
		}

		[Token(Token = "0x600143E")]
		[Address(RVA = "0xF3F490", Offset = "0xF3F490", VA = "0xF3F490")]
		public MagicDragMouseOrbit()
		{
		}
	}
	[Token(Token = "0x20002D2")]
	public class MagicEffectCycler : MonoBehaviour
	{
		[Token(Token = "0x4001579")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private List<GameObject> listOfEffects;

		[Token(Token = "0x400157A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9ED858", Offset = "0x9ED858")]
		[SerializeField]
		private float loopTimeLength;

		[Token(Token = "0x400157B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float timeOfLastInstantiate;

		[Token(Token = "0x400157C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GameObject instantiatedEffect;

		[Token(Token = "0x400157D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int effectIndex;

		[Token(Token = "0x600143F")]
		[Address(RVA = "0xF3F4AC", Offset = "0xF3F4AC", VA = "0xF3F4AC")]
		private void Start()
		{
		}

		[Token(Token = "0x6001440")]
		[Address(RVA = "0xF3F608", Offset = "0xF3F608", VA = "0xF3F608")]
		private void Update()
		{
		}

		[Token(Token = "0x6001441")]
		[Address(RVA = "0xF3F794", Offset = "0xF3F794", VA = "0xF3F794")]
		public MagicEffectCycler()
		{
		}
	}
	[Token(Token = "0x20002D3")]
	public class MagicFireProjectile : MonoBehaviour
	{
		[Token(Token = "0x400157E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private RaycastHit hit;

		[Token(Token = "0x400157F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public GameObject[] projectiles;

		[Token(Token = "0x4001580")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Transform spawnPosition;

		[Token(Token = "0x4001581")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[HideInInspector]
		public int currentProjectile;

		[Token(Token = "0x4001582")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float speed;

		[Token(Token = "0x4001583")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private MagicButtonScript selectedProjectileButton;

		[Token(Token = "0x6001442")]
		[Address(RVA = "0xF3F7A4", Offset = "0xF3F7A4", VA = "0xF3F7A4")]
		private void Start()
		{
		}

		[Token(Token = "0x6001443")]
		[Address(RVA = "0xF3F81C", Offset = "0xF3F81C", VA = "0xF3F81C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001444")]
		[Address(RVA = "0xF3FC90", Offset = "0xF3FC90", VA = "0xF3FC90")]
		public void nextEffect()
		{
		}

		[Token(Token = "0x6001445")]
		[Address(RVA = "0xF3FCD0", Offset = "0xF3FCD0", VA = "0xF3FCD0")]
		public void previousEffect()
		{
		}

		[Token(Token = "0x6001446")]
		[Address(RVA = "0xF3FD10", Offset = "0xF3FD10", VA = "0xF3FD10")]
		public void AdjustSpeed(float newSpeed)
		{
		}

		[Token(Token = "0x6001447")]
		[Address(RVA = "0xF3FD18", Offset = "0xF3FD18", VA = "0xF3FD18")]
		public MagicFireProjectile()
		{
		}
	}
	[Token(Token = "0x20002D4")]
	public class MagicLoadSceneOnClick : MonoBehaviour
	{
		[Token(Token = "0x4001584")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool GUIHide;

		[Token(Token = "0x4001585")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool GUIHide2;

		[Token(Token = "0x4001586")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		public bool GUIHide3;

		[Token(Token = "0x6001448")]
		[Address(RVA = "0xF40308", Offset = "0xF40308", VA = "0xF40308")]
		public void LoadSceneProjectiles()
		{
		}

		[Token(Token = "0x6001449")]
		[Address(RVA = "0xF40374", Offset = "0xF40374", VA = "0xF40374")]
		public void LoadSceneSprays()
		{
		}

		[Token(Token = "0x600144A")]
		[Address(RVA = "0xF403E0", Offset = "0xF403E0", VA = "0xF403E0")]
		public void LoadSceneAura()
		{
		}

		[Token(Token = "0x600144B")]
		[Address(RVA = "0xF4044C", Offset = "0xF4044C", VA = "0xF4044C")]
		public void LoadSceneModular()
		{
		}

		[Token(Token = "0x600144C")]
		[Address(RVA = "0xF404B8", Offset = "0xF404B8", VA = "0xF404B8")]
		public void LoadSceneShields2()
		{
		}

		[Token(Token = "0x600144D")]
		[Address(RVA = "0xF40524", Offset = "0xF40524", VA = "0xF40524")]
		public void LoadSceneShields()
		{
		}

		[Token(Token = "0x600144E")]
		[Address(RVA = "0xF40590", Offset = "0xF40590", VA = "0xF40590")]
		public void LoadSceneSphereBlast()
		{
		}

		[Token(Token = "0x600144F")]
		[Address(RVA = "0xF405FC", Offset = "0xF405FC", VA = "0xF405FC")]
		public void LoadSceneEnchant()
		{
		}

		[Token(Token = "0x6001450")]
		[Address(RVA = "0xF40668", Offset = "0xF40668", VA = "0xF40668")]
		public void LoadSceneSlash()
		{
		}

		[Token(Token = "0x6001451")]
		[Address(RVA = "0xF406D4", Offset = "0xF406D4", VA = "0xF406D4")]
		public void LoadSceneCharge()
		{
		}

		[Token(Token = "0x6001452")]
		[Address(RVA = "0xF40740", Offset = "0xF40740", VA = "0xF40740")]
		public void LoadSceneCleave()
		{
		}

		[Token(Token = "0x6001453")]
		[Address(RVA = "0xF407AC", Offset = "0xF407AC", VA = "0xF407AC")]
		public void LoadSceneAura2()
		{
		}

		[Token(Token = "0x6001454")]
		[Address(RVA = "0xF40818", Offset = "0xF40818", VA = "0xF40818")]
		public void LoadSceneWalls()
		{
		}

		[Token(Token = "0x6001455")]
		[Address(RVA = "0xF40884", Offset = "0xF40884", VA = "0xF40884")]
		public void LoadSceneBeams()
		{
		}

		[Token(Token = "0x6001456")]
		[Address(RVA = "0xF408F0", Offset = "0xF408F0", VA = "0xF408F0")]
		public void LoadSceneMeshGlow()
		{
		}

		[Token(Token = "0x6001457")]
		[Address(RVA = "0xF4095C", Offset = "0xF4095C", VA = "0xF4095C")]
		public void LoadScenePillarBlast()
		{
		}

		[Token(Token = "0x6001458")]
		[Address(RVA = "0xF409C8", Offset = "0xF409C8", VA = "0xF409C8")]
		public void LoadSceneAura3()
		{
		}

		[Token(Token = "0x6001459")]
		[Address(RVA = "0xF40A34", Offset = "0xF40A34", VA = "0xF40A34")]
		public void LoadSceneAuraCast()
		{
		}

		[Token(Token = "0x600145A")]
		[Address(RVA = "0xF40AA0", Offset = "0xF40AA0", VA = "0xF40AA0")]
		public void LoadSceneRain()
		{
		}

		[Token(Token = "0x600145B")]
		[Address(RVA = "0xF40B0C", Offset = "0xF40B0C", VA = "0xF40B0C")]
		public void LoadSceneAOE()
		{
		}

		[Token(Token = "0x600145C")]
		[Address(RVA = "0xF40B78", Offset = "0xF40B78", VA = "0xF40B78")]
		public void LoadSceneNova()
		{
		}

		[Token(Token = "0x600145D")]
		[Address(RVA = "0xF40BE4", Offset = "0xF40BE4", VA = "0xF40BE4")]
		public void LoadSceneFlame()
		{
		}

		[Token(Token = "0x600145E")]
		[Address(RVA = "0xF40C50", Offset = "0xF40C50", VA = "0xF40C50")]
		public void LoadSceneAuraCast2()
		{
		}

		[Token(Token = "0x600145F")]
		[Address(RVA = "0xF40CBC", Offset = "0xF40CBC", VA = "0xF40CBC")]
		public void LoadSceneCurse()
		{
		}

		[Token(Token = "0x6001460")]
		[Address(RVA = "0xF40D28", Offset = "0xF40D28", VA = "0xF40D28")]
		public void LoadSceneBeamBlast()
		{
		}

		[Token(Token = "0x6001461")]
		[Address(RVA = "0xF40D94", Offset = "0xF40D94", VA = "0xF40D94")]
		public void LoadSceneOrbitSphere()
		{
		}

		[Token(Token = "0x6001462")]
		[Address(RVA = "0xF40E00", Offset = "0xF40E00", VA = "0xF40E00")]
		public void LoadSceneDot()
		{
		}

		[Token(Token = "0x6001463")]
		[Address(RVA = "0xF40E6C", Offset = "0xF40E6C", VA = "0xF40E6C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001464")]
		[Address(RVA = "0xF40FD8", Offset = "0xF40FD8", VA = "0xF40FD8")]
		public MagicLoadSceneOnClick()
		{
		}
	}
	[Token(Token = "0x20002D5")]
	public class MagicLoopScript : MonoBehaviour
	{
		[Token(Token = "0x20004FC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E84B8", Offset = "0x9E84B8")]
		private sealed class <EffectLoop>d__4 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001AB8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001AB9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001ABA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MagicLoopScript <>4__this;

			[Token(Token = "0x4001ABB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private GameObject <effectPlayer>5__2;

			[Token(Token = "0x170002C9")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001E3F")]
				[Address(RVA = "0xF412B8", Offset = "0xF412B8", VA = "0xF412B8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002CA")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E41")]
				[Address(RVA = "0xF41320", Offset = "0xF41320", VA = "0xF41320", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E3C")]
			[Address(RVA = "0xF410B4", Offset = "0xF410B4", VA = "0xF410B4")]
			[DebuggerHidden]
			public <EffectLoop>d__4(int <>1__state)
			{
			}

			[Token(Token = "0x6001E3D")]
			[Address(RVA = "0xF410F0", Offset = "0xF410F0", VA = "0xF410F0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E3E")]
			[Address(RVA = "0xF410F4", Offset = "0xF410F4", VA = "0xF410F4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E40")]
			[Address(RVA = "0xF412C0", Offset = "0xF412C0", VA = "0xF412C0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001587")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject chosenEffect;

		[Token(Token = "0x4001588")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float loopTimeLimit;

		[Token(Token = "0x6001465")]
		[Address(RVA = "0xF40FE0", Offset = "0xF40FE0", VA = "0xF40FE0")]
		private void Start()
		{
		}

		[Token(Token = "0x6001466")]
		[Address(RVA = "0xF40FE4", Offset = "0xF40FE4", VA = "0xF40FE4")]
		public void PlayEffect()
		{
		}

		[Token(Token = "0x6001467")]
		[Address(RVA = "0xF41038", Offset = "0xF41038", VA = "0xF41038")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9F2CF8", Offset = "0x9F2CF8")]
		private IEnumerator EffectLoop()
		{
			return null;
		}

		[Token(Token = "0x6001468")]
		[Address(RVA = "0xF410E0", Offset = "0xF410E0", VA = "0xF410E0")]
		public MagicLoopScript()
		{
		}
	}
	[Token(Token = "0x20002D6")]
	public class MagicBeamStatic : MonoBehaviour
	{
		[Token(Token = "0x4001589")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9ED8B4", Offset = "0x9ED8B4")]
		public GameObject beamLineRendererPrefab;

		[Token(Token = "0x400158A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject beamStartPrefab;

		[Token(Token = "0x400158B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject beamEndPrefab;

		[Token(Token = "0x400158C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private GameObject beamStart;

		[Token(Token = "0x400158D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private GameObject beamEnd;

		[Token(Token = "0x400158E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private GameObject beam;

		[Token(Token = "0x400158F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private LineRenderer line;

		[Token(Token = "0x4001590")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9ED8EC", Offset = "0x9ED8EC")]
		public bool alwaysOn;

		[Token(Token = "0x4001591")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		public bool beamCollides;

		[Token(Token = "0x4001592")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float beamLength;

		[Token(Token = "0x4001593")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float beamEndOffset;

		[Token(Token = "0x4001594")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float textureScrollSpeed;

		[Token(Token = "0x4001595")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float textureLengthScale;

		[Token(Token = "0x6001469")]
		[Address(RVA = "0xF3E27C", Offset = "0xF3E27C", VA = "0xF3E27C")]
		private void Start()
		{
		}

		[Token(Token = "0x600146A")]
		[Address(RVA = "0xF3E280", Offset = "0xF3E280", VA = "0xF3E280")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600146B")]
		[Address(RVA = "0xF3E578", Offset = "0xF3E578", VA = "0xF3E578")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600146C")]
		[Address(RVA = "0xF3E6D4", Offset = "0xF3E6D4", VA = "0xF3E6D4")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x600146D")]
		[Address(RVA = "0xF3E290", Offset = "0xF3E290", VA = "0xF3E290")]
		public void SpawnBeam()
		{
		}

		[Token(Token = "0x600146E")]
		[Address(RVA = "0xF3E57C", Offset = "0xF3E57C", VA = "0xF3E57C")]
		public void RemoveBeam()
		{
		}

		[Token(Token = "0x600146F")]
		[Address(RVA = "0xF3EBF4", Offset = "0xF3EBF4", VA = "0xF3EBF4")]
		public MagicBeamStatic()
		{
		}
	}
	[Token(Token = "0x20002D7")]
	public class MagicLightFade : MonoBehaviour
	{
		[Token(Token = "0x4001596")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9ED924", Offset = "0x9ED924")]
		public float life;

		[Token(Token = "0x4001597")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool killAfterLife;

		[Token(Token = "0x4001598")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Light li;

		[Token(Token = "0x4001599")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float initIntensity;

		[Token(Token = "0x6001470")]
		[Address(RVA = "0xF3FD28", Offset = "0xF3FD28", VA = "0xF3FD28")]
		private void Start()
		{
		}

		[Token(Token = "0x6001471")]
		[Address(RVA = "0xF3FE48", Offset = "0xF3FE48", VA = "0xF3FE48")]
		private void Update()
		{
		}

		[Token(Token = "0x6001472")]
		[Address(RVA = "0xF3FF9C", Offset = "0xF3FF9C", VA = "0xF3FF9C")]
		public MagicLightFade()
		{
		}
	}
	[Token(Token = "0x20002D8")]
	public class MagicLightFlicker : MonoBehaviour
	{
		[Token(Token = "0x400159A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string waveFunction;

		[Token(Token = "0x400159B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float startValue;

		[Token(Token = "0x400159C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float amplitude;

		[Token(Token = "0x400159D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float phase;

		[Token(Token = "0x400159E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float frequency;

		[Token(Token = "0x400159F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Color originalColor;

		[Token(Token = "0x6001473")]
		[Address(RVA = "0xF3FFB8", Offset = "0xF3FFB8", VA = "0xF3FFB8")]
		private void Start()
		{
		}

		[Token(Token = "0x6001474")]
		[Address(RVA = "0xF40024", Offset = "0xF40024", VA = "0xF40024")]
		private void Update()
		{
		}

		[Token(Token = "0x6001475")]
		[Address(RVA = "0xF400C8", Offset = "0xF400C8", VA = "0xF400C8")]
		private float EvalWave()
		{
			return default(float);
		}

		[Token(Token = "0x6001476")]
		[Address(RVA = "0xF40298", Offset = "0xF40298", VA = "0xF40298")]
		public MagicLightFlicker()
		{
		}
	}
	[Token(Token = "0x20002D9")]
	public class MagicRotation : MonoBehaviour
	{
		[Token(Token = "0x20004FD")]
		public enum spaceEnum
		{
			[Token(Token = "0x4001ABD")]
			Local,
			[Token(Token = "0x4001ABE")]
			World
		}

		[Token(Token = "0x40015A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9ED95C", Offset = "0x9ED95C")]
		public Vector3 rotateVector;

		[Token(Token = "0x40015A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public spaceEnum rotateSpace;

		[Token(Token = "0x6001477")]
		[Address(RVA = "0xF41328", Offset = "0xF41328", VA = "0xF41328")]
		private void Start()
		{
		}

		[Token(Token = "0x6001478")]
		[Address(RVA = "0xF4132C", Offset = "0xF4132C", VA = "0xF4132C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001479")]
		[Address(RVA = "0xF41480", Offset = "0xF41480", VA = "0xF41480")]
		public MagicRotation()
		{
		}
	}
}
namespace DigitalRuby.LightningBolt
{
	[Token(Token = "0x20002DA")]
	public enum LightningBoltAnimationMode
	{
		[Token(Token = "0x40015A3")]
		None,
		[Token(Token = "0x40015A4")]
		Random,
		[Token(Token = "0x40015A5")]
		Loop,
		[Token(Token = "0x40015A6")]
		PingPong
	}
	[Token(Token = "0x20002DB")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x9E7710", Offset = "0x9E7710")]
	public class LightningBoltScript : MonoBehaviour
	{
		[Token(Token = "0x40015A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9ED994", Offset = "0x9ED994")]
		public GameObject StartObject;

		[Token(Token = "0x40015A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9ED9CC", Offset = "0x9ED9CC")]
		public Vector3 StartPosition;

		[Token(Token = "0x40015A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9EDA04", Offset = "0x9EDA04")]
		public GameObject EndObject;

		[Token(Token = "0x40015AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9EDA3C", Offset = "0x9EDA3C")]
		public Vector3 EndPosition;

		[Token(Token = "0x40015AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9EDA74", Offset = "0x9EDA74")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9EDA74", Offset = "0x9EDA74")]
		public int Generations;

		[Token(Token = "0x40015AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9EDAC8", Offset = "0x9EDAC8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9EDAC8", Offset = "0x9EDAC8")]
		public float Duration;

		[Token(Token = "0x40015AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float timer;

		[Token(Token = "0x40015AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9EDB20", Offset = "0x9EDB20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9EDB20", Offset = "0x9EDB20")]
		public float ChaosFactor;

		[Token(Token = "0x40015AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9EDB74", Offset = "0x9EDB74")]
		public bool ManualMode;

		[Token(Token = "0x40015B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9EDBAC", Offset = "0x9EDBAC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9EDBAC", Offset = "0x9EDBAC")]
		public int Rows;

		[Token(Token = "0x40015B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9EDC04", Offset = "0x9EDC04")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9EDC04", Offset = "0x9EDC04")]
		public int Columns;

		[Token(Token = "0x40015B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9EDC5C", Offset = "0x9EDC5C")]
		public LightningBoltAnimationMode AnimationMode;

		[NonSerialized]
		[Token(Token = "0x40015B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[HideInInspector]
		public System.Random RandomGenerator;

		[Token(Token = "0x40015B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private LineRenderer lineRenderer;

		[Token(Token = "0x40015B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private List<KeyValuePair<Vector3, Vector3>> segments;

		[Token(Token = "0x40015B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int startIndex;

		[Token(Token = "0x40015B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private Vector2 size;

		[Token(Token = "0x40015B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Vector2[] offsets;

		[Token(Token = "0x40015B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private int animationOffsetIndex;

		[Token(Token = "0x40015BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private int animationPingPongDirection;

		[Token(Token = "0x40015BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private bool orthographic;

		[Token(Token = "0x600147A")]
		[Address(RVA = "0xE2BD40", Offset = "0xE2BD40", VA = "0xE2BD40")]
		private void GetPerpendicularVector(ref Vector3 directionNormalized, out Vector3 side)
		{
		}

		[Token(Token = "0x600147B")]
		[Address(RVA = "0xE2BEEC", Offset = "0xE2BEEC", VA = "0xE2BEEC")]
		private void GenerateLightningBolt(Vector3 start, Vector3 end, int generation, int totalGenerations, float offsetAmount)
		{
		}

		[Token(Token = "0x600147C")]
		[Address(RVA = "0xE2C2E8", Offset = "0xE2C2E8", VA = "0xE2C2E8")]
		public void RandomVector(ref Vector3 start, ref Vector3 end, float offsetAmount, out Vector3 result)
		{
		}

		[Token(Token = "0x600147D")]
		[Address(RVA = "0xE2C554", Offset = "0xE2C554", VA = "0xE2C554")]
		private void SelectOffsetFromAnimationMode()
		{
		}

		[Token(Token = "0x600147E")]
		[Address(RVA = "0xE2C6B0", Offset = "0xE2C6B0", VA = "0xE2C6B0")]
		private void UpdateLineRenderer()
		{
		}

		[Token(Token = "0x600147F")]
		[Address(RVA = "0xE2C834", Offset = "0xE2C834", VA = "0xE2C834")]
		private void Start()
		{
		}

		[Token(Token = "0x6001480")]
		[Address(RVA = "0xE2CA90", Offset = "0xE2CA90", VA = "0xE2CA90")]
		private void Update()
		{
		}

		[Token(Token = "0x6001481")]
		[Address(RVA = "0xE2CB9C", Offset = "0xE2CB9C", VA = "0xE2CB9C")]
		public void Trigger()
		{
		}

		[Token(Token = "0x6001482")]
		[Address(RVA = "0xE2C924", Offset = "0xE2C924", VA = "0xE2C924")]
		public void UpdateFromMaterialChange()
		{
		}

		[Token(Token = "0x6001483")]
		[Address(RVA = "0xE2CDE8", Offset = "0xE2CDE8", VA = "0xE2CDE8")]
		public LightningBoltScript()
		{
		}
	}
}
namespace IE.ObjectGlitchShader
{
	[Token(Token = "0x20002DC")]
	public class BandGlitchLooper : MonoBehaviour
	{
		[Token(Token = "0x20004FE")]
		private enum LoopType
		{
			[Token(Token = "0x4001AC0")]
			StartOver,
			[Token(Token = "0x4001AC1")]
			PingPong
		}

		[Token(Token = "0x20004FF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E84C8", Offset = "0x9E84C8")]
		private sealed class <BandLoop>d__10 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001AC2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001AC3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001AC4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public BandGlitchLooper <>4__this;

			[Token(Token = "0x4001AC5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <looped>5__2;

			[Token(Token = "0x4001AC6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <current>5__3;

			[Token(Token = "0x4001AC7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <target>5__4;

			[Token(Token = "0x4001AC8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private bool <pingPongToggle>5__5;

			[Token(Token = "0x4001AC9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
			private bool <increment>5__6;

			[Token(Token = "0x4001ACA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <i>5__7;

			[Token(Token = "0x170002CB")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001E45")]
				[Address(RVA = "0xD3E2B8", Offset = "0xD3E2B8", VA = "0xD3E2B8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002CC")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E47")]
				[Address(RVA = "0xD3E320", Offset = "0xD3E320", VA = "0xD3E320", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E42")]
			[Address(RVA = "0xD3E078", Offset = "0xD3E078", VA = "0xD3E078")]
			[DebuggerHidden]
			public <BandLoop>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x6001E43")]
			[Address(RVA = "0xD3E0B0", Offset = "0xD3E0B0", VA = "0xD3E0B0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E44")]
			[Address(RVA = "0xD3E0B4", Offset = "0xD3E0B4", VA = "0xD3E0B4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E46")]
			[Address(RVA = "0xD3E2C0", Offset = "0xD3E2C0", VA = "0xD3E2C0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40015BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Material targetMaterial;

		[Token(Token = "0x40015BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private LoopType loopType;

		[Token(Token = "0x40015BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private int loopCount;

		[Token(Token = "0x40015BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float loopDuration;

		[Token(Token = "0x40015C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private float startFill;

		[Token(Token = "0x40015C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private float targetFill;

		[Token(Token = "0x40015C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private float lastFill;

		[Token(Token = "0x40015C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float fillPercentage;

		[Token(Token = "0x6001484")]
		[Address(RVA = "0xD3DF84", Offset = "0xD3DF84", VA = "0xD3DF84")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001485")]
		[Address(RVA = "0xD3DFFC", Offset = "0xD3DFFC", VA = "0xD3DFFC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9F2D5C", Offset = "0x9F2D5C")]
		private IEnumerator BandLoop()
		{
			return null;
		}

		[Token(Token = "0x6001486")]
		[Address(RVA = "0xD3E0A4", Offset = "0xD3E0A4", VA = "0xD3E0A4")]
		private void LoopCompleted()
		{
		}

		[Token(Token = "0x6001487")]
		[Address(RVA = "0xD3E0A8", Offset = "0xD3E0A8", VA = "0xD3E0A8")]
		public BandGlitchLooper()
		{
		}
	}
	[Token(Token = "0x20002DD")]
	public class CameraController : MonoBehaviour
	{
		[Token(Token = "0x40015C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Vector2 sensitivity;

		[Token(Token = "0x40015C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Vector2 smooth;

		[Token(Token = "0x40015C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float minY;

		[Token(Token = "0x40015C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private float maxY;

		[Token(Token = "0x40015C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private float speed;

		[Token(Token = "0x40015C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Vector2 mouseInputs;

		[Token(Token = "0x40015CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Vector2 smoothedInputs;

		[Token(Token = "0x40015CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Vector2 refInputs;

		[Token(Token = "0x40015CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Quaternion thisRotation;

		[Token(Token = "0x6001488")]
		[Address(RVA = "0xD3E328", Offset = "0xD3E328", VA = "0xD3E328")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001489")]
		[Address(RVA = "0xD3E364", Offset = "0xD3E364", VA = "0xD3E364")]
		private void Update()
		{
		}

		[Token(Token = "0x600148A")]
		[Address(RVA = "0xD3E740", Offset = "0xD3E740", VA = "0xD3E740")]
		public CameraController()
		{
		}
	}
	[Token(Token = "0x20002DE")]
	public class ExamplePropertyController : MonoBehaviour
	{
		[Token(Token = "0x40015CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Material targetMaterial;

		[Token(Token = "0x40015CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Slider transitionLengthSlider;

		[Token(Token = "0x40015CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Text sliderValueText;

		[Token(Token = "0x40015D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private InputField moveSpeedField;

		[Token(Token = "0x40015D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private string sliderProperty;

		[Token(Token = "0x40015D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private string inputFieldProperty;

		[Token(Token = "0x600148B")]
		[Address(RVA = "0xD3E7C8", Offset = "0xD3E7C8", VA = "0xD3E7C8")]
		public void SliderChanged()
		{
		}

		[Token(Token = "0x600148C")]
		[Address(RVA = "0xD3E8FC", Offset = "0xD3E8FC", VA = "0xD3E8FC")]
		public void InputFieldChanged()
		{
		}

		[Token(Token = "0x600148D")]
		[Address(RVA = "0xD3E9BC", Offset = "0xD3E9BC", VA = "0xD3E9BC")]
		public ExamplePropertyController()
		{
		}
	}
}
namespace I2.Loc
{
	[Token(Token = "0x20002DF")]
	public class CallbackNotification : MonoBehaviour
	{
		[Token(Token = "0x600148E")]
		[Address(RVA = "0xE30BAC", Offset = "0xE30BAC", VA = "0xE30BAC")]
		public void OnModifyLocalization()
		{
		}

		[Token(Token = "0x600148F")]
		[Address(RVA = "0xE30CB4", Offset = "0xE30CB4", VA = "0xE30CB4")]
		public CallbackNotification()
		{
		}
	}
	[Token(Token = "0x20002E0")]
	public class Example_ChangeLanguage : MonoBehaviour
	{
		[Token(Token = "0x6001490")]
		[Address(RVA = "0xE31208", Offset = "0xE31208", VA = "0xE31208")]
		public void SetLanguage_English()
		{
		}

		[Token(Token = "0x6001491")]
		[Address(RVA = "0xE312F8", Offset = "0xE312F8", VA = "0xE312F8")]
		public void SetLanguage_French()
		{
		}

		[Token(Token = "0x6001492")]
		[Address(RVA = "0xE31340", Offset = "0xE31340", VA = "0xE31340")]
		public void SetLanguage_Spanish()
		{
		}

		[Token(Token = "0x6001493")]
		[Address(RVA = "0xE31250", Offset = "0xE31250", VA = "0xE31250")]
		public void SetLanguage(string LangName)
		{
		}

		[Token(Token = "0x6001494")]
		[Address(RVA = "0xE31388", Offset = "0xE31388", VA = "0xE31388")]
		public Example_ChangeLanguage()
		{
		}
	}
	[Token(Token = "0x20002E1")]
	public class Example_LocalizedString : MonoBehaviour
	{
		[Token(Token = "0x40015D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LocalizedString _MyLocalizedString;

		[Token(Token = "0x40015D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string _NormalString;

		[Token(Token = "0x40015D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TermsPopup", RVA = "0x9EDDC4", Offset = "0x9EDDC4")]
		public string _StringWithTermPopup;

		[Token(Token = "0x6001495")]
		[Address(RVA = "0xE31390", Offset = "0xE31390", VA = "0xE31390")]
		public void Start()
		{
		}

		[Token(Token = "0x6001496")]
		[Address(RVA = "0xE31684", Offset = "0xE31684", VA = "0xE31684")]
		public Example_LocalizedString()
		{
		}
	}
	[Token(Token = "0x20002E2")]
	public class GlobalParametersExample : RegisterGlobalParameters
	{
		[Token(Token = "0x6001497")]
		[Address(RVA = "0xE3168C", Offset = "0xE3168C", VA = "0xE3168C", Slot = "7")]
		public override string GetParameterValue(string ParamName)
		{
			return null;
		}

		[Token(Token = "0x6001498")]
		[Address(RVA = "0xE3173C", Offset = "0xE3173C", VA = "0xE3173C")]
		public GlobalParametersExample()
		{
		}
	}
	[Token(Token = "0x20002E3")]
	public class RealTimeTranslation : MonoBehaviour
	{
		[Token(Token = "0x40015D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private string OriginalText;

		[Token(Token = "0x40015D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private string TranslatedText;

		[Token(Token = "0x40015D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool IsTranslating;

		[Token(Token = "0x6001499")]
		[Address(RVA = "0xD33140", Offset = "0xD33140", VA = "0xD33140")]
		public void OnGUI()
		{
		}

		[Token(Token = "0x600149A")]
		[Address(RVA = "0xD33794", Offset = "0xD33794", VA = "0xD33794")]
		public void StartTranslating(string fromCode, string toCode)
		{
		}

		[Token(Token = "0x600149B")]
		[Address(RVA = "0xD339A8", Offset = "0xD339A8", VA = "0xD339A8")]
		private void OnTranslationReady(string Translation, string errorMsg)
		{
		}

		[Token(Token = "0x600149C")]
		[Address(RVA = "0xD33A44", Offset = "0xD33A44", VA = "0xD33A44")]
		public void ExampleMultiTranslations_Blocking()
		{
		}

		[Token(Token = "0x600149D")]
		[Address(RVA = "0xD33858", Offset = "0xD33858", VA = "0xD33858")]
		public void ExampleMultiTranslations_Async()
		{
		}

		[Token(Token = "0x600149E")]
		[Address(RVA = "0xD33C5C", Offset = "0xD33C5C", VA = "0xD33C5C")]
		private void OnMultitranslationReady(Dictionary<string, TranslationQuery> dict, string errorMsg)
		{
		}

		[Token(Token = "0x600149F")]
		[Address(RVA = "0xD33E8C", Offset = "0xD33E8C", VA = "0xD33E8C")]
		public bool IsWaitingForTranslation()
		{
			return default(bool);
		}

		[Token(Token = "0x60014A0")]
		[Address(RVA = "0xD33E94", Offset = "0xD33E94", VA = "0xD33E94")]
		public string GetTranslatedText()
		{
			return null;
		}

		[Token(Token = "0x60014A1")]
		[Address(RVA = "0xD33E9C", Offset = "0xD33E9C", VA = "0xD33E9C")]
		public void SetOriginalText(string text)
		{
		}

		[Token(Token = "0x60014A2")]
		[Address(RVA = "0xD33EA4", Offset = "0xD33EA4", VA = "0xD33EA4")]
		public RealTimeTranslation()
		{
		}
	}
	[Token(Token = "0x20002E4")]
	public class RegisterBundlesManager : MonoBehaviour, IResourceManager_Bundles
	{
		[Token(Token = "0x60014A3")]
		[Address(RVA = "0xD33F24", Offset = "0xD33F24", VA = "0xD33F24")]
		public void OnEnable()
		{
		}

		[Token(Token = "0x60014A4")]
		[Address(RVA = "0xD34340", Offset = "0xD34340", VA = "0xD34340")]
		public void OnDisable()
		{
		}

		[Token(Token = "0x60014A5")]
		[Address(RVA = "0xD343A4", Offset = "0xD343A4", VA = "0xD343A4", Slot = "5")]
		public virtual UnityEngine.Object LoadFromBundle(string path, Type assetType)
		{
			return null;
		}

		[Token(Token = "0x60014A6")]
		[Address(RVA = "0xD343AC", Offset = "0xD343AC", VA = "0xD343AC")]
		public RegisterBundlesManager()
		{
		}
	}
	[Token(Token = "0x20002E5")]
	public class ToggleLanguage : MonoBehaviour
	{
		[Token(Token = "0x60014A7")]
		[Address(RVA = "0xD3C4F0", Offset = "0xD3C4F0", VA = "0xD3C4F0")]
		private void Start()
		{
		}

		[Token(Token = "0x60014A8")]
		[Address(RVA = "0xD3C548", Offset = "0xD3C548", VA = "0xD3C548")]
		private void test()
		{
		}

		[Token(Token = "0x60014A9")]
		[Address(RVA = "0xD3C5F8", Offset = "0xD3C5F8", VA = "0xD3C5F8")]
		public ToggleLanguage()
		{
		}
	}
	[Token(Token = "0x20002E6")]
	public static class PersistentStorage
	{
		[Token(Token = "0x2000500")]
		public enum eFileType
		{
			[Token(Token = "0x4001ACC")]
			Raw,
			[Token(Token = "0x4001ACD")]
			Persistent,
			[Token(Token = "0x4001ACE")]
			Temporal,
			[Token(Token = "0x4001ACF")]
			Streaming
		}

		[Token(Token = "0x40015D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static I2CustomPersistentStorage mStorage;

		[Token(Token = "0x60014AA")]
		[Address(RVA = "0xD3062C", Offset = "0xD3062C", VA = "0xD3062C")]
		public static void SetSetting_String(string key, string value)
		{
		}

		[Token(Token = "0x60014AB")]
		[Address(RVA = "0xD306E4", Offset = "0xD306E4", VA = "0xD306E4")]
		public static string GetSetting_String(string key, string defaultValue)
		{
			return null;
		}

		[Token(Token = "0x60014AC")]
		[Address(RVA = "0xD3079C", Offset = "0xD3079C", VA = "0xD3079C")]
		public static void DeleteSetting(string key)
		{
		}

		[Token(Token = "0x60014AD")]
		[Address(RVA = "0xD3084C", Offset = "0xD3084C", VA = "0xD3084C")]
		public static bool HasSetting(string key)
		{
			return default(bool);
		}

		[Token(Token = "0x60014AE")]
		[Address(RVA = "0xD308FC", Offset = "0xD308FC", VA = "0xD308FC")]
		public static void ForceSaveSettings()
		{
		}

		[Token(Token = "0x60014AF")]
		[Address(RVA = "0xD3099C", Offset = "0xD3099C", VA = "0xD3099C")]
		public static bool CanAccessFiles()
		{
			return default(bool);
		}

		[Token(Token = "0x60014B0")]
		[Address(RVA = "0xD30A3C", Offset = "0xD30A3C", VA = "0xD30A3C")]
		public static bool SaveFile(eFileType fileType, string fileName, string data, bool logExceptions = true)
		{
			return default(bool);
		}

		[Token(Token = "0x60014B1")]
		[Address(RVA = "0xD30B0C", Offset = "0xD30B0C", VA = "0xD30B0C")]
		public static string LoadFile(eFileType fileType, string fileName, bool logExceptions = true)
		{
			return null;
		}

		[Token(Token = "0x60014B2")]
		[Address(RVA = "0xD30BD4", Offset = "0xD30BD4", VA = "0xD30BD4")]
		public static bool DeleteFile(eFileType fileType, string fileName, bool logExceptions = true)
		{
			return default(bool);
		}

		[Token(Token = "0x60014B3")]
		[Address(RVA = "0xD30C9C", Offset = "0xD30C9C", VA = "0xD30C9C")]
		public static bool HasFile(eFileType fileType, string fileName, bool logExceptions = true)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20002E7")]
	public abstract class I2BasePersistentStorage
	{
		[Token(Token = "0x60014B4")]
		[Address(RVA = "0x141E5AC", Offset = "0x141E5AC", VA = "0x141E5AC", Slot = "4")]
		public virtual void SetSetting_String(string key, string value)
		{
		}

		[Token(Token = "0x60014B5")]
		[Address(RVA = "0x141E86C", Offset = "0x141E86C", VA = "0x141E86C", Slot = "5")]
		public virtual string GetSetting_String(string key, string defaultValue)
		{
			return null;
		}

		[Token(Token = "0x60014B6")]
		[Address(RVA = "0x141EAA0", Offset = "0x141EAA0", VA = "0x141EAA0", Slot = "6")]
		public virtual void DeleteSetting(string key)
		{
		}

		[Token(Token = "0x60014B7")]
		[Address(RVA = "0x141EC9C", Offset = "0x141EC9C", VA = "0x141EC9C", Slot = "7")]
		public virtual void ForceSaveSettings()
		{
		}

		[Token(Token = "0x60014B8")]
		[Address(RVA = "0x141ECA4", Offset = "0x141ECA4", VA = "0x141ECA4", Slot = "8")]
		public virtual bool HasSetting(string key)
		{
			return default(bool);
		}

		[Token(Token = "0x60014B9")]
		[Address(RVA = "0x141ECB0", Offset = "0x141ECB0", VA = "0x141ECB0", Slot = "9")]
		public virtual bool CanAccessFiles()
		{
			return default(bool);
		}

		[Token(Token = "0x60014BA")]
		[Address(RVA = "0x141ECB8", Offset = "0x141ECB8", VA = "0x141ECB8")]
		private string UpdateFilename(PersistentStorage.eFileType fileType, string fileName)
		{
			return null;
		}

		[Token(Token = "0x60014BB")]
		[Address(RVA = "0x141ED64", Offset = "0x141ED64", VA = "0x141ED64", Slot = "10")]
		public virtual bool SaveFile(PersistentStorage.eFileType fileType, string fileName, string data, bool logExceptions = true)
		{
			return default(bool);
		}

		[Token(Token = "0x60014BC")]
		[Address(RVA = "0x141F000", Offset = "0x141F000", VA = "0x141F000", Slot = "11")]
		public virtual string LoadFile(PersistentStorage.eFileType fileType, string fileName, bool logExceptions = true)
		{
			return null;
		}

		[Token(Token = "0x60014BD")]
		[Address(RVA = "0x141F28C", Offset = "0x141F28C", VA = "0x141F28C", Slot = "12")]
		public virtual bool DeleteFile(PersistentStorage.eFileType fileType, string fileName, bool logExceptions = true)
		{
			return default(bool);
		}

		[Token(Token = "0x60014BE")]
		[Address(RVA = "0x141F508", Offset = "0x141F508", VA = "0x141F508", Slot = "13")]
		public virtual bool HasFile(PersistentStorage.eFileType fileType, string fileName, bool logExceptions = true)
		{
			return default(bool);
		}

		[Token(Token = "0x60014BF")]
		[Address(RVA = "0x141F784", Offset = "0x141F784", VA = "0x141F784")]
		protected I2BasePersistentStorage()
		{
		}
	}
	[Token(Token = "0x20002E8")]
	public class I2CustomPersistentStorage : I2BasePersistentStorage
	{
		[Token(Token = "0x60014C0")]
		[Address(RVA = "0x141F78C", Offset = "0x141F78C", VA = "0x141F78C")]
		public I2CustomPersistentStorage()
		{
		}
	}
	[Token(Token = "0x20002E9")]
	public class BaseSpecializationManager
	{
		[Token(Token = "0x40015DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string[] mSpecializations;

		[Token(Token = "0x40015DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Dictionary<string, string> mSpecializationsFallbacks;

		[Token(Token = "0x60014C1")]
		[Address(RVA = "0xE305F0", Offset = "0xE305F0", VA = "0xE305F0", Slot = "4")]
		public virtual void InitializeSpecializations()
		{
		}

		[Token(Token = "0x60014C2")]
		[Address(RVA = "0xE30A9C", Offset = "0xE30A9C", VA = "0xE30A9C", Slot = "5")]
		public virtual string GetCurrentSpecialization()
		{
			return null;
		}

		[Token(Token = "0x60014C3")]
		[Address(RVA = "0xE30B00", Offset = "0xE30B00", VA = "0xE30B00", Slot = "6")]
		public virtual string GetFallbackSpecialization(string specialization)
		{
			return null;
		}

		[Token(Token = "0x60014C4")]
		[Address(RVA = "0xE30BA4", Offset = "0xE30BA4", VA = "0xE30BA4")]
		public BaseSpecializationManager()
		{
		}
	}
	[Token(Token = "0x20002EA")]
	public class SpecializationManager : BaseSpecializationManager
	{
		[Token(Token = "0x40015DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static SpecializationManager Singleton;

		[Token(Token = "0x60014C5")]
		[Address(RVA = "0xD3AB68", Offset = "0xD3AB68", VA = "0xD3AB68")]
		private SpecializationManager()
		{
		}

		[Token(Token = "0x60014C6")]
		[Address(RVA = "0xD3AB98", Offset = "0xD3AB98", VA = "0xD3AB98")]
		public static string GetSpecializedText(string text, [Optional] string specialization)
		{
			return null;
		}

		[Token(Token = "0x60014C7")]
		[Address(RVA = "0xD3AD80", Offset = "0xD3AD80", VA = "0xD3AD80")]
		public static string SetSpecializedText(string text, string newText, string specialization)
		{
			return null;
		}

		[Token(Token = "0x60014C8")]
		[Address(RVA = "0xD3B064", Offset = "0xD3B064", VA = "0xD3B064")]
		public static string SetSpecializedText(Dictionary<string, string> specializations)
		{
			return null;
		}

		[Token(Token = "0x60014C9")]
		[Address(RVA = "0xD3AE8C", Offset = "0xD3AE8C", VA = "0xD3AE8C")]
		public static Dictionary<string, string> GetSpecializations(string text, [Optional] Dictionary<string, string> buffer)
		{
			return null;
		}

		[Token(Token = "0x60014CA")]
		[Address(RVA = "0xD3B3EC", Offset = "0xD3B3EC", VA = "0xD3B3EC")]
		public static void AppendSpecializations(string text, [Optional] List<string> list)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002EB")]
	public class EventCallback
	{
		[Token(Token = "0x40015DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public MonoBehaviour Target;

		[Token(Token = "0x40015DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string MethodName;

		[Token(Token = "0x60014CC")]
		[Address(RVA = "0xE310A4", Offset = "0xE310A4", VA = "0xE310A4")]
		public void Execute([Optional] UnityEngine.Object Sender)
		{
		}

		[Token(Token = "0x60014CD")]
		[Address(RVA = "0xE3110C", Offset = "0xE3110C", VA = "0xE3110C")]
		public bool HasCallback()
		{
			return default(bool);
		}

		[Token(Token = "0x60014CE")]
		[Address(RVA = "0xE311A0", Offset = "0xE311A0", VA = "0xE311A0")]
		public EventCallback()
		{
		}
	}
	[Token(Token = "0x20002EC")]
	public enum ePluralType
	{
		[Token(Token = "0x40015E0")]
		Zero,
		[Token(Token = "0x40015E1")]
		One,
		[Token(Token = "0x40015E2")]
		Two,
		[Token(Token = "0x40015E3")]
		Few,
		[Token(Token = "0x40015E4")]
		Many,
		[Token(Token = "0x40015E5")]
		Plural
	}
	[Token(Token = "0x20002ED")]
	public static class GoogleLanguages
	{
		[Token(Token = "0x2000501")]
		public struct LanguageCodeDef
		{
			[Token(Token = "0x4001AD0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string Code;

			[Token(Token = "0x4001AD1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public string GoogleCode;

			[Token(Token = "0x4001AD2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool HasJoinedWords;

			[Token(Token = "0x4001AD3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public int PluralRule;
		}

		[Token(Token = "0x40015E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Dictionary<string, LanguageCodeDef> mLanguageDef;

		[Token(Token = "0x60014CF")]
		[Address(RVA = "0xE31744", Offset = "0xE31744", VA = "0xE31744")]
		public static string GetLanguageCode(string Filter, bool ShowWarnings = false)
		{
			return null;
		}

		[Token(Token = "0x60014D0")]
		[Address(RVA = "0xE31AD4", Offset = "0xE31AD4", VA = "0xE31AD4")]
		public static List<string> GetLanguagesForDropdown(string Filter, string CodesToExclude)
		{
			return null;
		}

		[Token(Token = "0x60014D1")]
		[Address(RVA = "0xE3197C", Offset = "0xE3197C", VA = "0xE3197C")]
		private static bool LanguageMatchesFilter(string Language, string[] Filters)
		{
			return default(bool);
		}

		[Token(Token = "0x60014D2")]
		[Address(RVA = "0xE31F70", Offset = "0xE31F70", VA = "0xE31F70")]
		public static string GetFormatedLanguageName(string Language)
		{
			return null;
		}

		[Token(Token = "0x60014D3")]
		[Address(RVA = "0xE3209C", Offset = "0xE3209C", VA = "0xE3209C")]
		public static string GetCodedLanguage(string Language, string code)
		{
			return null;
		}

		[Token(Token = "0x60014D4")]
		[Address(RVA = "0xE32164", Offset = "0xE32164", VA = "0xE32164")]
		public static void UnPackCodeFromLanguageName(string CodedLanguage, out string Language, out string code)
		{
		}

		[Token(Token = "0x60014D5")]
		[Address(RVA = "0xE322D4", Offset = "0xE322D4", VA = "0xE322D4")]
		public static string GetGoogleLanguageCode(string InternationalCode)
		{
			return null;
		}

		[Token(Token = "0x60014D6")]
		[Address(RVA = "0xE32444", Offset = "0xE32444", VA = "0xE32444")]
		public static string GetLanguageName(string code, bool useParenthesesForRegion = false, bool allowDiscardRegion = true)
		{
			return null;
		}

		[Token(Token = "0x60014D7")]
		[Address(RVA = "0xE326C4", Offset = "0xE326C4", VA = "0xE326C4")]
		public static List<string> GetAllInternationalCodes()
		{
			return null;
		}

		[Token(Token = "0x60014D8")]
		[Address(RVA = "0xE32850", Offset = "0xE32850", VA = "0xE32850")]
		public static bool LanguageCode_HasJoinedWord(string languageCode)
		{
			return default(bool);
		}

		[Token(Token = "0x60014D9")]
		[Address(RVA = "0xE329BC", Offset = "0xE329BC", VA = "0xE329BC")]
		private static int GetPluralRule(string langCode)
		{
			return default(int);
		}

		[Token(Token = "0x60014DA")]
		[Address(RVA = "0xE32B40", Offset = "0xE32B40", VA = "0xE32B40")]
		public static bool LanguageHasPluralType(string langCode, string pluralType)
		{
			return default(bool);
		}

		[Token(Token = "0x60014DB")]
		[Address(RVA = "0xE32CC4", Offset = "0xE32CC4", VA = "0xE32CC4")]
		public static ePluralType GetPluralType(string langCode, int n)
		{
			return default(ePluralType);
		}

		[Token(Token = "0x60014DC")]
		[Address(RVA = "0xE333DC", Offset = "0xE333DC", VA = "0xE333DC")]
		public static int GetPluralTestNumber(string langCode, ePluralType pluralType)
		{
			return default(int);
		}

		[Token(Token = "0x60014DD")]
		[Address(RVA = "0xE333C4", Offset = "0xE333C4", VA = "0xE333C4")]
		private static bool inRange(int amount, int min, int max)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20002EE")]
	public static class GoogleTranslation
	{
		[Token(Token = "0x2000502")]
		public delegate void fnOnTranslated(string Translation, string Error);

		[Token(Token = "0x2000503")]
		public delegate void fnOnTranslationReady(Dictionary<string, TranslationQuery> dict, string error);

		[Token(Token = "0x2000504")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E84D8", Offset = "0x9E84D8")]
		private sealed class <>c__DisplayClass2_0
		{
			[Token(Token = "0x4001AD4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public fnOnTranslated OnTranslationReady;

			[Token(Token = "0x4001AD5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string text;

			[Token(Token = "0x4001AD6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Dictionary<string, TranslationQuery> queries;

			[Token(Token = "0x4001AD7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string LanguageCodeTo;

			[Token(Token = "0x6001E50")]
			[Address(RVA = "0x141AA5C", Offset = "0x141AA5C", VA = "0x141AA5C")]
			public <>c__DisplayClass2_0()
			{
			}

			[Token(Token = "0x6001E51")]
			[Address(RVA = "0x141D974", Offset = "0x141D974", VA = "0x141D974")]
			internal void <Translate>b__0(Dictionary<string, TranslationQuery> results, string error)
			{
			}
		}

		[Token(Token = "0x2000505")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E84E8", Offset = "0x9E84E8")]
		private sealed class <WaitForTranslations>d__11 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001AD8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001AD9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x170002CD")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001E55")]
				[Address(RVA = "0x141DBEC", Offset = "0x141DBEC", VA = "0x141DBEC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002CE")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E57")]
				[Address(RVA = "0x141DC54", Offset = "0x141DC54", VA = "0x141DC54", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E52")]
			[Address(RVA = "0x141BD48", Offset = "0x141BD48", VA = "0x141BD48")]
			[DebuggerHidden]
			public <WaitForTranslations>d__11(int <>1__state)
			{
			}

			[Token(Token = "0x6001E53")]
			[Address(RVA = "0x141DA54", Offset = "0x141DA54", VA = "0x141DA54", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E54")]
			[Address(RVA = "0x141DA58", Offset = "0x141DA58", VA = "0x141DA58", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E56")]
			[Address(RVA = "0x141DBF4", Offset = "0x141DBF4", VA = "0x141DBF4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40015E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static List<UnityWebRequest> mCurrentTranslations;

		[Token(Token = "0x40015E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static List<TranslationJob> mTranslationJobs;

		[Token(Token = "0x60014DF")]
		[Address(RVA = "0x141A594", Offset = "0x141A594", VA = "0x141A594")]
		public static bool CanTranslate()
		{
			return default(bool);
		}

		[Token(Token = "0x60014E0")]
		[Address(RVA = "0x141A80C", Offset = "0x141A80C", VA = "0x141A80C")]
		public static void Translate(string text, string LanguageCodeFrom, string LanguageCodeTo, fnOnTranslated OnTranslationReady)
		{
		}

		[Token(Token = "0x60014E1")]
		[Address(RVA = "0x141B18C", Offset = "0x141B18C", VA = "0x141B18C")]
		public static string ForceTranslate(string text, string LanguageCodeFrom, string LanguageCodeTo)
		{
			return null;
		}

		[Token(Token = "0x60014E2")]
		[Address(RVA = "0x141B0F8", Offset = "0x141B0F8", VA = "0x141B0F8")]
		public static void Translate(Dictionary<string, TranslationQuery> requests, fnOnTranslationReady OnTranslationReady, bool usePOST = true)
		{
		}

		[Token(Token = "0x60014E3")]
		[Address(RVA = "0x141B77C", Offset = "0x141B77C", VA = "0x141B77C")]
		public static bool ForceTranslate(Dictionary<string, TranslationQuery> requests, bool usePOST = true)
		{
			return default(bool);
		}

		[Token(Token = "0x60014E4")]
		[Address(RVA = "0x141B804", Offset = "0x141B804", VA = "0x141B804")]
		public static List<string> ConvertTranslationRequest(Dictionary<string, TranslationQuery> requests, bool encodeGET)
		{
			return null;
		}

		[Token(Token = "0x60014E5")]
		[Address(RVA = "0x141B6B0", Offset = "0x141B6B0", VA = "0x141B6B0")]
		private static void AddTranslationJob(TranslationJob job)
		{
		}

		[Token(Token = "0x60014E6")]
		[Address(RVA = "0x141BCE8", Offset = "0x141BCE8", VA = "0x141BCE8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9F2DC0", Offset = "0x9F2DC0")]
		private static IEnumerator WaitForTranslations()
		{
			return null;
		}

		[Token(Token = "0x60014E7")]
		[Address(RVA = "0x141BD74", Offset = "0x141BD74", VA = "0x141BD74")]
		public static string ParseTranslationResult(string html, Dictionary<string, TranslationQuery> requests)
		{
			return null;
		}

		[Token(Token = "0x60014E8")]
		[Address(RVA = "0x141C40C", Offset = "0x141C40C", VA = "0x141C40C")]
		public static bool IsTranslating()
		{
			return default(bool);
		}

		[Token(Token = "0x60014E9")]
		[Address(RVA = "0x141C4C0", Offset = "0x141C4C0", VA = "0x141C4C0")]
		public static void CancelCurrentGoogleTranslations()
		{
		}

		[Token(Token = "0x60014EA")]
		[Address(RVA = "0x141AF24", Offset = "0x141AF24", VA = "0x141AF24")]
		public static void CreateQueries(string text, string LanguageCodeFrom, string LanguageCodeTo, Dictionary<string, TranslationQuery> dict)
		{
		}

		[Token(Token = "0x60014EB")]
		[Address(RVA = "0x141C638", Offset = "0x141C638", VA = "0x141C638")]
		private static void CreateQueries_Plurals(string text, string LanguageCodeFrom, string LanguageCodeTo, Dictionary<string, TranslationQuery> dict)
		{
		}

		[Token(Token = "0x60014EC")]
		[Address(RVA = "0x141B2C8", Offset = "0x141B2C8", VA = "0x141B2C8")]
		public static void AddQuery(string text, string LanguageCodeFrom, string LanguageCodeTo, Dictionary<string, TranslationQuery> dict)
		{
		}

		[Token(Token = "0x60014ED")]
		[Address(RVA = "0x141CFDC", Offset = "0x141CFDC", VA = "0x141CFDC")]
		private static string GetTranslation(string text, string LanguageCodeTo, Dictionary<string, TranslationQuery> dict)
		{
			return null;
		}

		[Token(Token = "0x60014EE")]
		[Address(RVA = "0x141C1E0", Offset = "0x141C1E0", VA = "0x141C1E0")]
		private static TranslationQuery FindQueryFromOrigText(string origText, Dictionary<string, TranslationQuery> dict)
		{
			return default(TranslationQuery);
		}

		[Token(Token = "0x60014EF")]
		[Address(RVA = "0x141C8AC", Offset = "0x141C8AC", VA = "0x141C8AC")]
		public static bool HasParameters(string text)
		{
			return default(bool);
		}

		[Token(Token = "0x60014F0")]
		[Address(RVA = "0x141CA60", Offset = "0x141CA60", VA = "0x141CA60")]
		public static string GetPluralParameter(string text, bool forceTag)
		{
			return null;
		}

		[Token(Token = "0x60014F1")]
		[Address(RVA = "0x141C93C", Offset = "0x141C93C", VA = "0x141C93C")]
		public static string GetPluralText(string text, string pluralType)
		{
			return null;
		}

		[Token(Token = "0x60014F2")]
		[Address(RVA = "0x141D0C8", Offset = "0x141D0C8", VA = "0x141D0C8")]
		private static int FindClosingTag(string tag, MatchCollection matches, int startIndex)
		{
			return default(int);
		}

		[Token(Token = "0x60014F3")]
		[Address(RVA = "0x141C36C", Offset = "0x141C36C", VA = "0x141C36C")]
		private static string GetGoogleNoTranslateTag(int tagNumber)
		{
			return null;
		}

		[Token(Token = "0x60014F4")]
		[Address(RVA = "0x141CB44", Offset = "0x141CB44", VA = "0x141CB44")]
		private static void ParseNonTranslatableElements(ref TranslationQuery query)
		{
		}

		[Token(Token = "0x60014F5")]
		[Address(RVA = "0x141B5A0", Offset = "0x141B5A0", VA = "0x141B5A0")]
		public static string GetQueryResult(string text, string LanguageCodeTo, Dictionary<string, TranslationQuery> dict)
		{
			return null;
		}

		[Token(Token = "0x60014F6")]
		[Address(RVA = "0x141D240", Offset = "0x141D240", VA = "0x141D240")]
		public static string RebuildTranslation(string text, Dictionary<string, TranslationQuery> dict, string LanguageCodeTo)
		{
			return null;
		}

		[Token(Token = "0x60014F7")]
		[Address(RVA = "0x141D484", Offset = "0x141D484", VA = "0x141D484")]
		private static string RebuildTranslation_Plural(string text, Dictionary<string, TranslationQuery> dict, string LanguageCodeTo)
		{
			return null;
		}

		[Token(Token = "0x60014F8")]
		[Address(RVA = "0x141D7D0", Offset = "0x141D7D0", VA = "0x141D7D0")]
		public static string UppercaseFirst(string s)
		{
			return null;
		}

		[Token(Token = "0x60014F9")]
		[Address(RVA = "0x141BC30", Offset = "0x141BC30", VA = "0x141BC30")]
		public static string TitleCase(string s)
		{
			return null;
		}
	}
	[Token(Token = "0x20002EF")]
	public struct TranslationQuery
	{
		[Token(Token = "0x40015E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string OrigText;

		[Token(Token = "0x40015EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string Text;

		[Token(Token = "0x40015EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string LanguageCode;

		[Token(Token = "0x40015EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string[] TargetLanguagesCode;

		[Token(Token = "0x40015ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string[] Results;

		[Token(Token = "0x40015EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string[] Tags;
	}
	[Token(Token = "0x20002F0")]
	public class TranslationJob : IDisposable
	{
		[Token(Token = "0x2000506")]
		public enum eJobState
		{
			[Token(Token = "0x4001ADB")]
			Running,
			[Token(Token = "0x4001ADC")]
			Succeeded,
			[Token(Token = "0x4001ADD")]
			Failed
		}

		[Token(Token = "0x40015EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public eJobState mJobState;

		[Token(Token = "0x60014FB")]
		[Address(RVA = "0xD3C600", Offset = "0xD3C600", VA = "0xD3C600", Slot = "5")]
		public virtual eJobState GetState()
		{
			return default(eJobState);
		}

		[Token(Token = "0x60014FC")]
		[Address(RVA = "0xD3C608", Offset = "0xD3C608", VA = "0xD3C608", Slot = "6")]
		public virtual void Dispose()
		{
		}

		[Token(Token = "0x60014FD")]
		[Address(RVA = "0xD3C60C", Offset = "0xD3C60C", VA = "0xD3C60C")]
		public TranslationJob()
		{
		}
	}
	[Token(Token = "0x20002F1")]
	public class TranslationJob_WWW : TranslationJob
	{
		[Token(Token = "0x40015F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UnityWebRequest www;

		[Token(Token = "0x60014FE")]
		[Address(RVA = "0xD3DF4C", Offset = "0xD3DF4C", VA = "0xD3DF4C", Slot = "6")]
		public override void Dispose()
		{
		}

		[Token(Token = "0x60014FF")]
		[Address(RVA = "0xD3C6DC", Offset = "0xD3C6DC", VA = "0xD3C6DC")]
		public TranslationJob_WWW()
		{
		}
	}
	[Token(Token = "0x20002F2")]
	public class TranslationJob_GET : TranslationJob_WWW
	{
		[Token(Token = "0x40015F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Dictionary<string, TranslationQuery> _requests;

		[Token(Token = "0x40015F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GoogleTranslation.fnOnTranslationReady _OnTranslationReady;

		[Token(Token = "0x40015F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<string> mQueries;

		[Token(Token = "0x40015F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string mErrorMessage;

		[Token(Token = "0x6001500")]
		[Address(RVA = "0xD3C614", Offset = "0xD3C614", VA = "0xD3C614")]
		public TranslationJob_GET(Dictionary<string, TranslationQuery> requests, GoogleTranslation.fnOnTranslationReady OnTranslationReady)
		{
		}

		[Token(Token = "0x6001501")]
		[Address(RVA = "0xD3C6E4", Offset = "0xD3C6E4", VA = "0xD3C6E4")]
		private void ExecuteNextQuery()
		{
		}

		[Token(Token = "0x6001502")]
		[Address(RVA = "0xD3C7D8", Offset = "0xD3C7D8", VA = "0xD3C7D8", Slot = "5")]
		public override eJobState GetState()
		{
			return default(eJobState);
		}

		[Token(Token = "0x6001503")]
		[Address(RVA = "0xD3C890", Offset = "0xD3C890", VA = "0xD3C890")]
		public void ProcessResult(byte[] bytes, string errorMsg)
		{
		}
	}
	[Token(Token = "0x20002F3")]
	public class TranslationJob_Main : TranslationJob
	{
		[Token(Token = "0x40015F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private TranslationJob_WEB mWeb;

		[Token(Token = "0x40015F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private TranslationJob_POST mPost;

		[Token(Token = "0x40015F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TranslationJob_GET mGet;

		[Token(Token = "0x40015F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Dictionary<string, TranslationQuery> _requests;

		[Token(Token = "0x40015F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private GoogleTranslation.fnOnTranslationReady _OnTranslationReady;

		[Token(Token = "0x40015FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string mErrorMessage;

		[Token(Token = "0x6001504")]
		[Address(RVA = "0xD3C9B4", Offset = "0xD3C9B4", VA = "0xD3C9B4")]
		public TranslationJob_Main(Dictionary<string, TranslationQuery> requests, GoogleTranslation.fnOnTranslationReady OnTranslationReady)
		{
		}

		[Token(Token = "0x6001505")]
		[Address(RVA = "0xD3CBDC", Offset = "0xD3CBDC", VA = "0xD3CBDC", Slot = "5")]
		public override eJobState GetState()
		{
			return default(eJobState);
		}

		[Token(Token = "0x6001506")]
		[Address(RVA = "0xD3CDDC", Offset = "0xD3CDDC", VA = "0xD3CDDC", Slot = "6")]
		public override void Dispose()
		{
		}
	}
	[Token(Token = "0x20002F4")]
	public class TranslationJob_POST : TranslationJob_WWW
	{
		[Token(Token = "0x40015FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Dictionary<string, TranslationQuery> _requests;

		[Token(Token = "0x40015FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GoogleTranslation.fnOnTranslationReady _OnTranslationReady;

		[Token(Token = "0x6001507")]
		[Address(RVA = "0xD3CA5C", Offset = "0xD3CA5C", VA = "0xD3CA5C")]
		public TranslationJob_POST(Dictionary<string, TranslationQuery> requests, GoogleTranslation.fnOnTranslationReady OnTranslationReady)
		{
		}

		[Token(Token = "0x6001508")]
		[Address(RVA = "0xD3CE40", Offset = "0xD3CE40", VA = "0xD3CE40", Slot = "5")]
		public override eJobState GetState()
		{
			return default(eJobState);
		}

		[Token(Token = "0x6001509")]
		[Address(RVA = "0xD3CEE8", Offset = "0xD3CEE8", VA = "0xD3CEE8")]
		public void ProcessResult(byte[] bytes, string errorMsg)
		{
		}
	}
	[Token(Token = "0x20002F5")]
	public class TranslationJob_WEB : TranslationJob_WWW
	{
		[Serializable]
		[Token(Token = "0x2000507")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E84F8", Offset = "0x9E84F8")]
		private sealed class <>c
		{
			[Token(Token = "0x4001ADE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001ADF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Comparison<KeyValuePair<string, string>> <>9__8_0;

			[Token(Token = "0x4001AE0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static MatchEvaluator <>9__12_0;

			[Token(Token = "0x4001AE1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static MatchEvaluator <>9__12_1;

			[Token(Token = "0x6001E59")]
			[Address(RVA = "0xD3DD88", Offset = "0xD3DD88", VA = "0xD3DD88")]
			public <>c()
			{
			}

			[Token(Token = "0x6001E5A")]
			[Address(RVA = "0xD3DD90", Offset = "0xD3DD90", VA = "0xD3DD90")]
			internal int <FindAllQueries>b__8_0(KeyValuePair<string, string> a, KeyValuePair<string, string> b)
			{
				return default(int);
			}

			[Token(Token = "0x6001E5B")]
			[Address(RVA = "0xD3DDF0", Offset = "0xD3DDF0", VA = "0xD3DDF0")]
			internal string <ParseTranslationResult>b__12_0(Match match)
			{
				return null;
			}

			[Token(Token = "0x6001E5C")]
			[Address(RVA = "0xD3DEA0", Offset = "0xD3DEA0", VA = "0xD3DEA0")]
			internal string <ParseTranslationResult>b__12_1(Match match)
			{
				return null;
			}
		}

		[Token(Token = "0x40015FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Dictionary<string, TranslationQuery> _requests;

		[Token(Token = "0x40015FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GoogleTranslation.fnOnTranslationReady _OnTranslationReady;

		[Token(Token = "0x40015FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string mErrorMessage;

		[Token(Token = "0x4001600")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string mCurrentBatch_ToLanguageCode;

		[Token(Token = "0x4001601")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private string mCurrentBatch_FromLanguageCode;

		[Token(Token = "0x4001602")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<string> mCurrentBatch_Text;

		[Token(Token = "0x4001603")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private List<KeyValuePair<string, string>> mQueries;

		[Token(Token = "0x600150A")]
		[Address(RVA = "0xD3CFE0", Offset = "0xD3CFE0", VA = "0xD3CFE0")]
		public TranslationJob_WEB(Dictionary<string, TranslationQuery> requests, GoogleTranslation.fnOnTranslationReady OnTranslationReady)
		{
		}

		[Token(Token = "0x600150B")]
		[Address(RVA = "0xD3D040", Offset = "0xD3D040", VA = "0xD3D040")]
		private void FindAllQueries()
		{
		}

		[Token(Token = "0x600150C")]
		[Address(RVA = "0xD3D30C", Offset = "0xD3D30C", VA = "0xD3D30C")]
		private void ExecuteNextBatch()
		{
		}

		[Token(Token = "0x600150D")]
		[Address(RVA = "0xD3D674", Offset = "0xD3D674", VA = "0xD3D674", Slot = "5")]
		public override eJobState GetState()
		{
			return default(eJobState);
		}

		[Token(Token = "0x600150E")]
		[Address(RVA = "0xD3D72C", Offset = "0xD3D72C", VA = "0xD3D72C")]
		public void ProcessResult(byte[] bytes, string errorMsg)
		{
		}

		[Token(Token = "0x600150F")]
		[Address(RVA = "0xD3D85C", Offset = "0xD3D85C", VA = "0xD3D85C")]
		private string ParseTranslationResult(string html, string OriginalText)
		{
			return null;
		}
	}
	[Token(Token = "0x20002F6")]
	public enum eLanguageDataFlags
	{
		[Token(Token = "0x4001605")]
		DISABLED = 1,
		[Token(Token = "0x4001606")]
		KEEP_LOADED = 2,
		[Token(Token = "0x4001607")]
		NOT_LOADED = 4
	}
	[Serializable]
	[Token(Token = "0x20002F7")]
	public class LanguageData
	{
		[Token(Token = "0x4001608")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string Name;

		[Token(Token = "0x4001609")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string Code;

		[Token(Token = "0x400160A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public byte Flags;

		[NonSerialized]
		[Token(Token = "0x400160B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public bool Compressed;

		[Token(Token = "0x6001510")]
		[Address(RVA = "0x1420674", Offset = "0x1420674", VA = "0x1420674")]
		public bool IsEnabled()
		{
			return default(bool);
		}

		[Token(Token = "0x6001511")]
		[Address(RVA = "0x1420684", Offset = "0x1420684", VA = "0x1420684")]
		public void SetEnabled(bool bEnabled)
		{
		}

		[Token(Token = "0x6001512")]
		[Address(RVA = "0x14206A0", Offset = "0x14206A0", VA = "0x14206A0")]
		public bool IsLoaded()
		{
			return default(bool);
		}

		[Token(Token = "0x6001513")]
		[Address(RVA = "0x14206B0", Offset = "0x14206B0", VA = "0x14206B0")]
		public bool CanBeUnloaded()
		{
			return default(bool);
		}

		[Token(Token = "0x6001514")]
		[Address(RVA = "0x14206C0", Offset = "0x14206C0", VA = "0x14206C0")]
		public void SetLoaded(bool loaded)
		{
		}

		[Token(Token = "0x6001515")]
		[Address(RVA = "0x14206DC", Offset = "0x14206DC", VA = "0x14206DC")]
		public void SetCanBeUnLoaded(bool allowUnloading)
		{
		}

		[Token(Token = "0x6001516")]
		[Address(RVA = "0x14206F8", Offset = "0x14206F8", VA = "0x14206F8")]
		public LanguageData()
		{
		}
	}
	[Token(Token = "0x20002F8")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x9E7774", Offset = "0x9E7774")]
	[ExecuteInEditMode]
	public class LanguageSource : MonoBehaviour, ISerializationCallbackReceiver, ILanguageSource
	{
		[Token(Token = "0x2000508")]
		public delegate void fnOnSourceUpdated(LanguageSourceData source, bool ReceivedNewData, string errorMsg);

		[Token(Token = "0x400160C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LanguageSourceData mSource;

		[Token(Token = "0x400160D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int version;

		[Token(Token = "0x400160E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool NeverDestroy;

		[Token(Token = "0x400160F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
		public bool UserAgreesToHaveItOnTheScene;

		[Token(Token = "0x4001610")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x26")]
		public bool UserAgreesToHaveItInsideThePluginsFolder;

		[Token(Token = "0x4001611")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x27")]
		public bool GoogleLiveSyncIsUptoDate;

		[Token(Token = "0x4001612")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<UnityEngine.Object> Assets;

		[Token(Token = "0x4001613")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string Google_WebServiceURL;

		[Token(Token = "0x4001614")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string Google_SpreadsheetKey;

		[Token(Token = "0x4001615")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string Google_SpreadsheetName;

		[Token(Token = "0x4001616")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string Google_LastUpdatedVersion;

		[Token(Token = "0x4001617")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public LanguageSourceData.eGoogleUpdateFrequency GoogleUpdateFrequency;

		[Token(Token = "0x4001618")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float GoogleUpdateDelay;

		[Token(Token = "0x400161A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public List<LanguageData> mLanguages;

		[Token(Token = "0x400161B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public bool IgnoreDeviceLanguage;

		[Token(Token = "0x400161C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public LanguageSourceData.eAllowUnloadLanguages _AllowUnloadingLanguages;

		[Token(Token = "0x400161D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public List<TermData> mTerms;

		[Token(Token = "0x400161E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public bool CaseInsensitiveTerms;

		[Token(Token = "0x400161F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public LanguageSourceData.MissingTranslationAction OnMissingTranslation;

		[Token(Token = "0x4001620")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public string mTerm_AppName;

		[Token(Token = "0x1700018C")]
		public LanguageSourceData SourceData
		{
			[Token(Token = "0x6001517")]
			[Address(RVA = "0x1420700", Offset = "0x1420700", VA = "0x1420700", Slot = "6")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001518")]
			[Address(RVA = "0x1420708", Offset = "0x1420708", VA = "0x1420708", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x140000B7")]
		public event fnOnSourceUpdated Event_OnSourceUpdateFromGoogle
		{
			[Token(Token = "0x6001519")]
			[Address(RVA = "0x1420710", Offset = "0x1420710", VA = "0x1420710")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F2E24", Offset = "0x9F2E24")]
			add
			{
			}
			[Token(Token = "0x600151A")]
			[Address(RVA = "0x14207B4", Offset = "0x14207B4", VA = "0x14207B4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F2E34", Offset = "0x9F2E34")]
			remove
			{
			}
		}

		[Token(Token = "0x600151B")]
		[Address(RVA = "0x1420858", Offset = "0x1420858", VA = "0x1420858")]
		private void Awake()
		{
		}

		[Token(Token = "0x600151C")]
		[Address(RVA = "0x1420914", Offset = "0x1420914", VA = "0x1420914")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600151D")]
		[Address(RVA = "0x1420998", Offset = "0x1420998", VA = "0x1420998")]
		public string GetSourceName()
		{
			return null;
		}

		[Token(Token = "0x600151E")]
		[Address(RVA = "0x1420A8C", Offset = "0x1420A8C", VA = "0x1420A8C", Slot = "4")]
		public void OnBeforeSerialize()
		{
		}

		[Token(Token = "0x600151F")]
		[Address(RVA = "0x1420A98", Offset = "0x1420A98", VA = "0x1420A98", Slot = "5")]
		public void OnAfterDeserialize()
		{
		}

		[Token(Token = "0x6001520")]
		[Address(RVA = "0x14210C0", Offset = "0x14210C0", VA = "0x14210C0")]
		public LanguageSource()
		{
		}
	}
	[Token(Token = "0x20002F9")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x9E77C0", Offset = "0x9E77C0")]
	public class LanguageSourceAsset : ScriptableObject, ILanguageSource
	{
		[Token(Token = "0x4001621")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LanguageSourceData mSource;

		[Token(Token = "0x1700018D")]
		public LanguageSourceData SourceData
		{
			[Token(Token = "0x6001521")]
			[Address(RVA = "0x1421700", Offset = "0x1421700", VA = "0x1421700", Slot = "4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001522")]
			[Address(RVA = "0x1421708", Offset = "0x1421708", VA = "0x1421708", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x6001523")]
		[Address(RVA = "0x1421710", Offset = "0x1421710", VA = "0x1421710")]
		public LanguageSourceAsset()
		{
		}
	}
	[Token(Token = "0x20002FA")]
	public interface ILanguageSource
	{
		[Token(Token = "0x1700018E")]
		LanguageSourceData SourceData
		{
			[Token(Token = "0x6001524")]
			get;
			[Token(Token = "0x6001525")]
			set;
		}
	}
	[Serializable]
	[Token(Token = "0x20002FB")]
	[ExecuteInEditMode]
	public class LanguageSourceData
	{
		[Token(Token = "0x2000509")]
		public enum MissingTranslationAction
		{
			[Token(Token = "0x4001AE3")]
			Empty,
			[Token(Token = "0x4001AE4")]
			Fallback,
			[Token(Token = "0x4001AE5")]
			ShowWarning,
			[Token(Token = "0x4001AE6")]
			ShowTerm
		}

		[Token(Token = "0x200050A")]
		public enum eAllowUnloadLanguages
		{
			[Token(Token = "0x4001AE8")]
			Never,
			[Token(Token = "0x4001AE9")]
			OnlyInDevice,
			[Token(Token = "0x4001AEA")]
			EditorAndDevice
		}

		[Token(Token = "0x200050B")]
		public enum eGoogleUpdateFrequency
		{
			[Token(Token = "0x4001AEC")]
			Always,
			[Token(Token = "0x4001AED")]
			Never,
			[Token(Token = "0x4001AEE")]
			Daily,
			[Token(Token = "0x4001AEF")]
			Weekly,
			[Token(Token = "0x4001AF0")]
			Monthly,
			[Token(Token = "0x4001AF1")]
			OnlyOnce,
			[Token(Token = "0x4001AF2")]
			EveryOtherDay
		}

		[Token(Token = "0x200050C")]
		public enum eGoogleUpdateSynchronization
		{
			[Token(Token = "0x4001AF4")]
			Manual,
			[Token(Token = "0x4001AF5")]
			OnSceneLoaded,
			[Token(Token = "0x4001AF6")]
			AsSoonAsDownloaded
		}

		[Serializable]
		[Token(Token = "0x200050D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E8508", Offset = "0x9E8508")]
		private sealed class <>c
		{
			[Token(Token = "0x4001AF7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001AF8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Predicate<UnityEngine.Object> <>9__39_0;

			[Token(Token = "0x4001AF9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<UnityEngine.Object, string> <>9__39_1;

			[Token(Token = "0x4001AFA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Func<IGrouping<string, UnityEngine.Object>, string> <>9__39_2;

			[Token(Token = "0x4001AFB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static Func<IGrouping<string, UnityEngine.Object>, UnityEngine.Object> <>9__39_3;

			[Token(Token = "0x4001AFC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public static Comparison<TermData> <>9__43_0;

			[Token(Token = "0x4001AFD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public static Comparison<TermData> <>9__47_0;

			[Token(Token = "0x6001E62")]
			[Address(RVA = "0x142950C", Offset = "0x142950C", VA = "0x142950C")]
			public <>c()
			{
			}

			[Token(Token = "0x6001E63")]
			[Address(RVA = "0x1429514", Offset = "0x1429514", VA = "0x1429514")]
			internal bool <UpdateAssetDictionary>b__39_0(UnityEngine.Object x)
			{
				return default(bool);
			}

			[Token(Token = "0x6001E64")]
			[Address(RVA = "0x1429580", Offset = "0x1429580", VA = "0x1429580")]
			internal string <UpdateAssetDictionary>b__39_1(UnityEngine.Object o)
			{
				return null;
			}

			[Token(Token = "0x6001E65")]
			[Address(RVA = "0x142959C", Offset = "0x142959C", VA = "0x142959C")]
			internal string <UpdateAssetDictionary>b__39_2(IGrouping<string, UnityEngine.Object> g)
			{
				return null;
			}

			[Token(Token = "0x6001E66")]
			[Address(RVA = "0x1429648", Offset = "0x1429648", VA = "0x1429648")]
			internal UnityEngine.Object <UpdateAssetDictionary>b__39_3(IGrouping<string, UnityEngine.Object> g)
			{
				return null;
			}

			[Token(Token = "0x6001E67")]
			[Address(RVA = "0x1429698", Offset = "0x1429698", VA = "0x1429698")]
			internal int <Export_I2CSV>b__43_0(TermData a, TermData b)
			{
				return default(int);
			}

			[Token(Token = "0x6001E68")]
			[Address(RVA = "0x14296C0", Offset = "0x14296C0", VA = "0x14296C0")]
			internal int <Export_CSV>b__47_0(TermData a, TermData b)
			{
				return default(int);
			}
		}

		[Token(Token = "0x200050E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E8518", Offset = "0x9E8518")]
		private sealed class <Import_Google_Coroutine>d__65 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001AFE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001AFF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001B00")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public LanguageSourceData <>4__this;

			[Token(Token = "0x4001B01")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool JustCheck;

			[Token(Token = "0x4001B02")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private UnityWebRequest <www>5__2;

			[Token(Token = "0x170002CF")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001E6C")]
				[Address(RVA = "0x14299B4", Offset = "0x14299B4", VA = "0x14299B4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002D0")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E6E")]
				[Address(RVA = "0x1429A1C", Offset = "0x1429A1C", VA = "0x1429A1C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E69")]
			[Address(RVA = "0x1427128", Offset = "0x1427128", VA = "0x1427128")]
			[DebuggerHidden]
			public <Import_Google_Coroutine>d__65(int <>1__state)
			{
			}

			[Token(Token = "0x6001E6A")]
			[Address(RVA = "0x14296E8", Offset = "0x14296E8", VA = "0x14296E8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E6B")]
			[Address(RVA = "0x14296EC", Offset = "0x14296EC", VA = "0x14296EC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E6D")]
			[Address(RVA = "0x14299BC", Offset = "0x14299BC", VA = "0x14299BC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[NonSerialized]
		[Token(Token = "0x4001622")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ILanguageSource owner;

		[Token(Token = "0x4001623")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool UserAgreesToHaveItOnTheScene;

		[Token(Token = "0x4001624")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool UserAgreesToHaveItInsideThePluginsFolder;

		[Token(Token = "0x4001625")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		public bool GoogleLiveSyncIsUptoDate;

		[NonSerialized]
		[Token(Token = "0x4001626")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
		public bool mIsGlobalSource;

		[Token(Token = "0x4001627")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<TermData> mTerms;

		[Token(Token = "0x4001628")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool CaseInsensitiveTerms;

		[NonSerialized]
		[Token(Token = "0x4001629")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Dictionary<string, TermData> mDictionary;

		[Token(Token = "0x400162A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public MissingTranslationAction OnMissingTranslation;

		[Token(Token = "0x400162B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string mTerm_AppName;

		[Token(Token = "0x400162C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public List<LanguageData> mLanguages;

		[Token(Token = "0x400162D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public bool IgnoreDeviceLanguage;

		[Token(Token = "0x400162E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public eAllowUnloadLanguages _AllowUnloadingLanguages;

		[Token(Token = "0x400162F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public string Google_WebServiceURL;

		[Token(Token = "0x4001630")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public string Google_SpreadsheetKey;

		[Token(Token = "0x4001631")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public string Google_SpreadsheetName;

		[Token(Token = "0x4001632")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public string Google_LastUpdatedVersion;

		[Token(Token = "0x4001633")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public eGoogleUpdateFrequency GoogleUpdateFrequency;

		[Token(Token = "0x4001634")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public eGoogleUpdateFrequency GoogleInEditorCheckFrequency;

		[Token(Token = "0x4001635")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public eGoogleUpdateSynchronization GoogleUpdateSynchronization;

		[Token(Token = "0x4001636")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public float GoogleUpdateDelay;

		[Token(Token = "0x4001638")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public List<UnityEngine.Object> Assets;

		[NonSerialized]
		[Token(Token = "0x4001639")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public Dictionary<string, UnityEngine.Object> mAssetDictionary;

		[Token(Token = "0x400163A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private string mDelayedGoogleData;

		[Token(Token = "0x400163B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static string EmptyCategory;

		[Token(Token = "0x400163C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static char[] CategorySeparators;

		[Token(Token = "0x1700018F")]
		public UnityEngine.Object ownerObject
		{
			[Token(Token = "0x6001526")]
			[Address(RVA = "0x1421780", Offset = "0x1421780", VA = "0x1421780")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x140000B8")]
		public event LanguageSource.fnOnSourceUpdated Event_OnSourceUpdateFromGoogle
		{
			[Token(Token = "0x6001527")]
			[Address(RVA = "0x142101C", Offset = "0x142101C", VA = "0x142101C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F2E44", Offset = "0x9F2E44")]
			add
			{
			}
			[Token(Token = "0x6001528")]
			[Address(RVA = "0x1421804", Offset = "0x1421804", VA = "0x1421804")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F2E54", Offset = "0x9F2E54")]
			remove
			{
			}
		}

		[Token(Token = "0x6001529")]
		[Address(RVA = "0x1420894", Offset = "0x1420894", VA = "0x1420894")]
		public void Awake()
		{
		}

		[Token(Token = "0x600152A")]
		[Address(RVA = "0x1420934", Offset = "0x1420934", VA = "0x1420934")]
		public void OnDestroy()
		{
		}

		[Token(Token = "0x600152B")]
		[Address(RVA = "0x142226C", Offset = "0x142226C", VA = "0x142226C")]
		public bool IsEqualTo(LanguageSourceData Source)
		{
			return default(bool);
		}

		[Token(Token = "0x600152C")]
		[Address(RVA = "0x142278C", Offset = "0x142278C", VA = "0x142278C")]
		internal bool ManagerHasASimilarSource()
		{
			return default(bool);
		}

		[Token(Token = "0x600152D")]
		[Address(RVA = "0x14228A0", Offset = "0x14228A0", VA = "0x14228A0")]
		public void ClearAllData()
		{
		}

		[Token(Token = "0x600152E")]
		[Address(RVA = "0x1422940", Offset = "0x1422940", VA = "0x1422940")]
		public bool IsGlobalSource()
		{
			return default(bool);
		}

		[Token(Token = "0x600152F")]
		[Address(RVA = "0x1422948", Offset = "0x1422948", VA = "0x1422948")]
		public void Editor_SetDirty()
		{
		}

		[Token(Token = "0x6001530")]
		[Address(RVA = "0x1421DB0", Offset = "0x1421DB0", VA = "0x1421DB0")]
		public void UpdateAssetDictionary()
		{
		}

		[Token(Token = "0x6001531")]
		[Address(RVA = "0x142294C", Offset = "0x142294C", VA = "0x142294C")]
		public UnityEngine.Object FindAsset(string Name)
		{
			return null;
		}

		[Token(Token = "0x6001532")]
		[Address(RVA = "0x1422A10", Offset = "0x1422A10", VA = "0x1422A10")]
		public bool HasAsset(UnityEngine.Object Obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6001533")]
		[Address(RVA = "0x1422A78", Offset = "0x1422A78", VA = "0x1422A78")]
		public void AddAsset(UnityEngine.Object Obj)
		{
		}

		[Token(Token = "0x6001534")]
		[Address(RVA = "0x1422B18", Offset = "0x1422B18", VA = "0x1422B18")]
		public string Export_I2CSV(string Category, char Separator = ',', bool specializationsAsRows = true)
		{
			return null;
		}

		[Token(Token = "0x6001535")]
		[Address(RVA = "0x1423118", Offset = "0x1423118", VA = "0x1423118")]
		private static void AppendI2Term(StringBuilder Builder, int nLanguages, string Term, TermData termData, char Separator, string forceSpecialization)
		{
		}

		[Token(Token = "0x6001536")]
		[Address(RVA = "0x1423390", Offset = "0x1423390", VA = "0x1423390")]
		private static void AppendI2Text(StringBuilder Builder, string text)
		{
		}

		[Token(Token = "0x6001537")]
		[Address(RVA = "0x1423464", Offset = "0x1423464", VA = "0x1423464")]
		private string Export_Language_to_Cache(int langIndex, bool fillTermWithFallback)
		{
			return null;
		}

		[Token(Token = "0x6001538")]
		[Address(RVA = "0x14239E0", Offset = "0x14239E0", VA = "0x14239E0")]
		public string Export_CSV(string Category, char Separator = ',', bool specializationsAsRows = true)
		{
			return null;
		}

		[Token(Token = "0x6001539")]
		[Address(RVA = "0x1424200", Offset = "0x1424200", VA = "0x1424200")]
		private static void AppendTerm(StringBuilder Builder, int nLanguages, string Term, TermData termData, string specialization, char Separator)
		{
		}

		[Token(Token = "0x600153A")]
		[Address(RVA = "0x14240D0", Offset = "0x14240D0", VA = "0x14240D0")]
		private static void AppendString(StringBuilder Builder, string Text, char Separator)
		{
		}

		[Token(Token = "0x600153B")]
		[Address(RVA = "0x142448C", Offset = "0x142448C", VA = "0x142448C")]
		private static void AppendTranslation(StringBuilder Builder, string Text, char Separator, string tags)
		{
		}

		[Token(Token = "0x600153C")]
		[Address(RVA = "0x14245DC", Offset = "0x14245DC", VA = "0x14245DC")]
		public UnityWebRequest Export_Google_CreateWWWcall(eSpreadsheetUpdateMode UpdateMode = eSpreadsheetUpdateMode.Replace)
		{
			return null;
		}

		[Token(Token = "0x600153D")]
		[Address(RVA = "0x1424760", Offset = "0x1424760", VA = "0x1424760")]
		private string Export_Google_CreateData()
		{
			return null;
		}

		[Token(Token = "0x600153E")]
		[Address(RVA = "0x1424B18", Offset = "0x1424B18", VA = "0x1424B18")]
		public string Import_CSV(string Category, string CSVstring, eSpreadsheetUpdateMode UpdateMode = eSpreadsheetUpdateMode.Replace, char Separator = ',')
		{
			return null;
		}

		[Token(Token = "0x600153F")]
		[Address(RVA = "0x1425734", Offset = "0x1425734", VA = "0x1425734")]
		public string Import_I2CSV(string Category, string I2CSVstring, eSpreadsheetUpdateMode UpdateMode = eSpreadsheetUpdateMode.Replace)
		{
			return null;
		}

		[Token(Token = "0x6001540")]
		[Address(RVA = "0x1424C34", Offset = "0x1424C34", VA = "0x1424C34")]
		public string Import_CSV(string Category, List<string[]> CSV, eSpreadsheetUpdateMode UpdateMode = eSpreadsheetUpdateMode.Replace)
		{
			return null;
		}

		[Token(Token = "0x6001541")]
		[Address(RVA = "0x142593C", Offset = "0x142593C", VA = "0x142593C")]
		private bool ArrayContains(string MainText, params string[] texts)
		{
			return default(bool);
		}

		[Token(Token = "0x6001542")]
		[Address(RVA = "0x1425D70", Offset = "0x1425D70", VA = "0x1425D70")]
		public static eTermType GetTermType(string type)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6001543")]
		[Address(RVA = "0x1426004", Offset = "0x1426004", VA = "0x1426004")]
		private void Import_Language_from_Cache(int langIndex, string langData, bool useFallback, bool onlyCurrentSpecialization)
		{
		}

		[Token(Token = "0x6001544")]
		[Address(RVA = "0x142622C", Offset = "0x142622C", VA = "0x142622C")]
		public static void FreeUnusedLanguages()
		{
		}

		[Token(Token = "0x6001545")]
		[Address(RVA = "0x14263F0", Offset = "0x14263F0", VA = "0x14263F0")]
		public void Import_Google_FromCache()
		{
		}

		[Token(Token = "0x6001546")]
		[Address(RVA = "0x14267E8", Offset = "0x14267E8", VA = "0x14267E8")]
		private bool IsNewerVersion(string currentVersion, string newVersion)
		{
			return default(bool);
		}

		[Token(Token = "0x6001547")]
		[Address(RVA = "0x1426E14", Offset = "0x1426E14", VA = "0x1426E14")]
		public void Import_Google(bool ForceUpdate, bool justCheck)
		{
		}

		[Token(Token = "0x6001548")]
		[Address(RVA = "0x1426638", Offset = "0x1426638", VA = "0x1426638")]
		private string GetSourcePlayerPrefName()
		{
			return null;
		}

		[Token(Token = "0x6001549")]
		[Address(RVA = "0x1427098", Offset = "0x1427098", VA = "0x1427098")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9F2E64", Offset = "0x9F2E64")]
		private IEnumerator Import_Google_Coroutine(bool JustCheck)
		{
			return null;
		}

		[Token(Token = "0x600154A")]
		[Address(RVA = "0x1427154", Offset = "0x1427154", VA = "0x1427154")]
		private void ApplyDownloadedDataOnSceneLoaded(Scene scene, LoadSceneMode mode)
		{
		}

		[Token(Token = "0x600154B")]
		[Address(RVA = "0x14271F8", Offset = "0x14271F8", VA = "0x14271F8")]
		public void ApplyDownloadedDataFromGoogle()
		{
		}

		[Token(Token = "0x600154C")]
		[Address(RVA = "0x142733C", Offset = "0x142733C", VA = "0x142733C")]
		public UnityWebRequest Import_Google_CreateWWWcall(bool ForceUpdate, bool justCheck)
		{
			return null;
		}

		[Token(Token = "0x600154D")]
		[Address(RVA = "0x1427494", Offset = "0x1427494", VA = "0x1427494")]
		public bool HasGoogleSpreadsheet()
		{
			return default(bool);
		}

		[Token(Token = "0x600154E")]
		[Address(RVA = "0x1426878", Offset = "0x1426878", VA = "0x1426878")]
		public string Import_Google_Result(string JsonString, eSpreadsheetUpdateMode UpdateMode, bool saveInPlayerPrefs = false)
		{
			return null;
		}

		[Token(Token = "0x600154F")]
		[Address(RVA = "0x14223CC", Offset = "0x14223CC", VA = "0x14223CC")]
		public int GetLanguageIndex(string language, bool AllowDiscartingRegion = true, bool SkipDisabled = true)
		{
			return default(int);
		}

		[Token(Token = "0x6001550")]
		[Address(RVA = "0x1427714", Offset = "0x1427714", VA = "0x1427714")]
		public LanguageData GetLanguageData(string language, bool AllowDiscartingRegion = true)
		{
			return null;
		}

		[Token(Token = "0x6001551")]
		[Address(RVA = "0x14277B4", Offset = "0x14277B4", VA = "0x14277B4")]
		public bool IsCurrentLanguage(int languageIndex)
		{
			return default(bool);
		}

		[Token(Token = "0x6001552")]
		[Address(RVA = "0x14259E0", Offset = "0x14259E0", VA = "0x14259E0")]
		public int GetLanguageIndexFromCode(string Code, bool exactMatch = true, bool ignoreDisabled = false)
		{
			return default(int);
		}

		[Token(Token = "0x6001553")]
		[Address(RVA = "0x142753C", Offset = "0x142753C", VA = "0x142753C")]
		public static int GetCommonWordInLanguageNames(string Language1, string Language2)
		{
			return default(int);
		}

		[Token(Token = "0x6001554")]
		[Address(RVA = "0x1427864", Offset = "0x1427864", VA = "0x1427864")]
		public static bool AreTheSameLanguage(string Language1, string Language2)
		{
			return default(bool);
		}

		[Token(Token = "0x6001555")]
		[Address(RVA = "0x1427900", Offset = "0x1427900", VA = "0x1427900")]
		public static string GetLanguageWithoutRegion(string Language)
		{
			return null;
		}

		[Token(Token = "0x6001556")]
		[Address(RVA = "0x14279A0", Offset = "0x14279A0", VA = "0x14279A0")]
		public void AddLanguage(string LanguageName)
		{
		}

		[Token(Token = "0x6001557")]
		[Address(RVA = "0x1427A28", Offset = "0x1427A28", VA = "0x1427A28")]
		public void AddLanguage(string LanguageName, string LanguageCode)
		{
		}

		[Token(Token = "0x6001558")]
		[Address(RVA = "0x1427BBC", Offset = "0x1427BBC", VA = "0x1427BBC")]
		public void RemoveLanguage(string LanguageName)
		{
		}

		[Token(Token = "0x6001559")]
		[Address(RVA = "0x1427EB4", Offset = "0x1427EB4", VA = "0x1427EB4")]
		public List<string> GetLanguages(bool skipDisabled = true)
		{
			return null;
		}

		[Token(Token = "0x600155A")]
		[Address(RVA = "0x1427FE0", Offset = "0x1427FE0", VA = "0x1427FE0")]
		public List<string> GetLanguagesCode(bool allowRegions = true, bool skipDisabled = true)
		{
			return null;
		}

		[Token(Token = "0x600155B")]
		[Address(RVA = "0x1428174", Offset = "0x1428174", VA = "0x1428174")]
		public bool IsLanguageEnabled(string Language)
		{
			return default(bool);
		}

		[Token(Token = "0x600155C")]
		[Address(RVA = "0x1428220", Offset = "0x1428220", VA = "0x1428220")]
		public void EnableLanguage(string Language, bool bEnabled)
		{
		}

		[Token(Token = "0x600155D")]
		[Address(RVA = "0x14282D4", Offset = "0x14282D4", VA = "0x14282D4")]
		public bool AllowUnloadingLanguages()
		{
			return default(bool);
		}

		[Token(Token = "0x600155E")]
		[Address(RVA = "0x14282E4", Offset = "0x14282E4", VA = "0x14282E4")]
		private string GetSavedLanguageFileName(int languageIndex)
		{
			return null;
		}

		[Token(Token = "0x600155F")]
		[Address(RVA = "0x14284F4", Offset = "0x14284F4", VA = "0x14284F4")]
		public void LoadLanguage(int languageIndex, bool UnloadOtherLanguages, bool useFallback, bool onlyCurrentSpecialization, bool forceLoad)
		{
		}

		[Token(Token = "0x6001560")]
		[Address(RVA = "0x14288A8", Offset = "0x14288A8", VA = "0x14288A8")]
		public void LoadAllLanguages(bool forceLoad = false)
		{
		}

		[Token(Token = "0x6001561")]
		[Address(RVA = "0x142867C", Offset = "0x142867C", VA = "0x142867C")]
		public void UnloadLanguage(int languageIndex)
		{
		}

		[Token(Token = "0x6001562")]
		[Address(RVA = "0x1425EE4", Offset = "0x1425EE4", VA = "0x1425EE4")]
		public void SaveLanguages(bool unloadAll, PersistentStorage.eFileType fileLocation = PersistentStorage.eFileType.Temporal)
		{
		}

		[Token(Token = "0x6001563")]
		[Address(RVA = "0x1425E40", Offset = "0x1425E40", VA = "0x1425E40")]
		public bool HasUnloadedLanguages()
		{
			return default(bool);
		}

		[Token(Token = "0x6001564")]
		[Address(RVA = "0x1424940", Offset = "0x1424940", VA = "0x1424940")]
		public List<string> GetCategories(bool OnlyMainCategory = false, [Optional] List<string> Categories)
		{
			return null;
		}

		[Token(Token = "0x6001565")]
		[Address(RVA = "0x1428A44", Offset = "0x1428A44", VA = "0x1428A44")]
		public static string GetKeyFromFullTerm(string FullTerm, bool OnlyMainCategory = false)
		{
			return null;
		}

		[Token(Token = "0x6001566")]
		[Address(RVA = "0x142893C", Offset = "0x142893C", VA = "0x142893C")]
		public static string GetCategoryFromFullTerm(string FullTerm, bool OnlyMainCategory = false)
		{
			return null;
		}

		[Token(Token = "0x6001567")]
		[Address(RVA = "0x1428B28", Offset = "0x1428B28", VA = "0x1428B28")]
		public static void DeserializeFullTerm(string FullTerm, out string Key, out string Category, bool OnlyMainCategory = false)
		{
		}

		[Token(Token = "0x6001568")]
		[Address(RVA = "0x1421AC0", Offset = "0x1421AC0", VA = "0x1421AC0")]
		public void UpdateDictionary(bool force = false)
		{
		}

		[Token(Token = "0x6001569")]
		[Address(RVA = "0x1428C80", Offset = "0x1428C80", VA = "0x1428C80")]
		public string GetTranslation(string term, [Optional] string overrideLanguage, [Optional] string overrideSpecialization, bool skipDisabled = false, bool allowCategoryMistmatch = false)
		{
			return null;
		}

		[Token(Token = "0x600156A")]
		[Address(RVA = "0x1428D2C", Offset = "0x1428D2C", VA = "0x1428D2C")]
		public bool TryGetTranslation(string term, out string Translation, [Optional] string overrideLanguage, [Optional] string overrideSpecialization, bool skipDisabled = false, bool allowCategoryMistmatch = false)
		{
			return default(bool);
		}

		[Token(Token = "0x600156B")]
		[Address(RVA = "0x14236F4", Offset = "0x14236F4", VA = "0x14236F4")]
		private bool TryGetFallbackTranslation(TermData termData, out string Translation, int langIndex, [Optional] string overrideSpecialization, bool skipDisabled = false)
		{
			return default(bool);
		}

		[Token(Token = "0x600156C")]
		[Address(RVA = "0x1428F70", Offset = "0x1428F70", VA = "0x1428F70")]
		public TermData AddTerm(string term)
		{
			return null;
		}

		[Token(Token = "0x600156D")]
		[Address(RVA = "0x14225B8", Offset = "0x14225B8", VA = "0x14225B8")]
		public TermData GetTermData(string term, bool allowCategoryMistmatch = false)
		{
			return null;
		}

		[Token(Token = "0x600156E")]
		[Address(RVA = "0x1429130", Offset = "0x1429130", VA = "0x1429130")]
		public bool ContainsTerm(string term)
		{
			return default(bool);
		}

		[Token(Token = "0x600156F")]
		[Address(RVA = "0x1429150", Offset = "0x1429150", VA = "0x1429150")]
		public List<string> GetTermsList([Optional] string Category)
		{
			return null;
		}

		[Token(Token = "0x6001570")]
		[Address(RVA = "0x1428F7C", Offset = "0x1428F7C", VA = "0x1428F7C")]
		public TermData AddTerm(string NewTerm, eTermType termType, bool SaveSource = true)
		{
			return null;
		}

		[Token(Token = "0x6001571")]
		[Address(RVA = "0x142930C", Offset = "0x142930C", VA = "0x142930C")]
		public void RemoveTerm(string term)
		{
		}

		[Token(Token = "0x6001572")]
		[Address(RVA = "0x1425BA0", Offset = "0x1425BA0", VA = "0x1425BA0")]
		public static void ValidateFullTerm(ref string Term)
		{
		}

		[Token(Token = "0x6001573")]
		[Address(RVA = "0x1420DEC", Offset = "0x1420DEC", VA = "0x1420DEC")]
		public LanguageSourceData()
		{
		}
	}
	[Token(Token = "0x20002FC")]
	public enum eSpreadsheetUpdateMode
	{
		[Token(Token = "0x400163E")]
		None,
		[Token(Token = "0x400163F")]
		Replace,
		[Token(Token = "0x4001640")]
		Merge,
		[Token(Token = "0x4001641")]
		AddNewTerms
	}
	[Token(Token = "0x20002FD")]
	public class LocalizationReader
	{
		[Token(Token = "0x6001575")]
		[Address(RVA = "0x1431420", Offset = "0x1431420", VA = "0x1431420")]
		public static Dictionary<string, string> ReadTextAsset(TextAsset asset)
		{
			return null;
		}

		[Token(Token = "0x6001576")]
		[Address(RVA = "0x1431660", Offset = "0x1431660", VA = "0x1431660")]
		public static bool TextAsset_ReadLine(string line, out string key, out string value, out string category, out string comment, out string termType)
		{
			return default(bool);
		}

		[Token(Token = "0x6001577")]
		[Address(RVA = "0x1431AA8", Offset = "0x1431AA8", VA = "0x1431AA8")]
		public static string ReadCSVfile(string Path, Encoding encoding)
		{
			return null;
		}

		[Token(Token = "0x6001578")]
		[Address(RVA = "0x1424B60", Offset = "0x1424B60", VA = "0x1424B60")]
		public static List<string[]> ReadCSV(string Text, char Separator = ',')
		{
			return null;
		}

		[Token(Token = "0x6001579")]
		[Address(RVA = "0x1431C2C", Offset = "0x1431C2C", VA = "0x1431C2C")]
		private static string[] ParseCSVline(string Line, ref int iStart, char Separator)
		{
			return null;
		}

		[Token(Token = "0x600157A")]
		[Address(RVA = "0x1431E0C", Offset = "0x1431E0C", VA = "0x1431E0C")]
		private static void AddCSVtoken(ref List<string> list, ref string Line, int iEnd, ref int iWordStart)
		{
		}

		[Token(Token = "0x600157B")]
		[Address(RVA = "0x1425778", Offset = "0x1425778", VA = "0x1425778")]
		public static List<string[]> ReadI2CSV(string Text)
		{
			return null;
		}

		[Token(Token = "0x600157C")]
		[Address(RVA = "0x14319FC", Offset = "0x14319FC", VA = "0x14319FC")]
		public static void ValidateFullTerm(ref string Term)
		{
		}

		[Token(Token = "0x600157D")]
		[Address(RVA = "0x1431F34", Offset = "0x1431F34", VA = "0x1431F34")]
		public static string EncodeString(string str)
		{
			return null;
		}

		[Token(Token = "0x600157E")]
		[Address(RVA = "0x1431964", Offset = "0x1431964", VA = "0x1431964")]
		public static string DecodeString(string str)
		{
			return null;
		}

		[Token(Token = "0x600157F")]
		[Address(RVA = "0x1432004", Offset = "0x1432004", VA = "0x1432004")]
		public LocalizationReader()
		{
		}
	}
	[Token(Token = "0x20002FE")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x9E783C", Offset = "0x9E783C")]
	public class Localize : MonoBehaviour
	{
		[Token(Token = "0x200050F")]
		public enum TermModification
		{
			[Token(Token = "0x4001B04")]
			DontModify,
			[Token(Token = "0x4001B05")]
			ToUpper,
			[Token(Token = "0x4001B06")]
			ToLower,
			[Token(Token = "0x4001B07")]
			ToUpperFirst,
			[Token(Token = "0x4001B08")]
			ToTitle
		}

		[Serializable]
		[Token(Token = "0x2000510")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E8528", Offset = "0x9E8528")]
		private sealed class <>c
		{
			[Token(Token = "0x4001B09")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001B0A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Predicate<UnityEngine.Object> <>9__50_0;

			[Token(Token = "0x4001B0B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<UnityEngine.Object, string> <>9__50_1;

			[Token(Token = "0x4001B0C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Func<IGrouping<string, UnityEngine.Object>, string> <>9__50_2;

			[Token(Token = "0x4001B0D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static Func<IGrouping<string, UnityEngine.Object>, UnityEngine.Object> <>9__50_3;

			[Token(Token = "0x6001E70")]
			[Address(RVA = "0xD2B8A0", Offset = "0xD2B8A0", VA = "0xD2B8A0")]
			public <>c()
			{
			}

			[Token(Token = "0x6001E71")]
			[Address(RVA = "0xD2B8A8", Offset = "0xD2B8A8", VA = "0xD2B8A8")]
			internal bool <UpdateAssetDictionary>b__50_0(UnityEngine.Object x)
			{
				return default(bool);
			}

			[Token(Token = "0x6001E72")]
			[Address(RVA = "0xD2B914", Offset = "0xD2B914", VA = "0xD2B914")]
			internal string <UpdateAssetDictionary>b__50_1(UnityEngine.Object o)
			{
				return null;
			}

			[Token(Token = "0x6001E73")]
			[Address(RVA = "0xD2B930", Offset = "0xD2B930", VA = "0xD2B930")]
			internal string <UpdateAssetDictionary>b__50_2(IGrouping<string, UnityEngine.Object> g)
			{
				return null;
			}

			[Token(Token = "0x6001E74")]
			[Address(RVA = "0xD2B9DC", Offset = "0xD2B9DC", VA = "0xD2B9DC")]
			internal UnityEngine.Object <UpdateAssetDictionary>b__50_3(IGrouping<string, UnityEngine.Object> g)
			{
				return null;
			}
		}

		[Token(Token = "0x4001642")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string mTerm;

		[Token(Token = "0x4001643")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string mTermSecondary;

		[NonSerialized]
		[Token(Token = "0x4001644")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string FinalTerm;

		[NonSerialized]
		[Token(Token = "0x4001645")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string FinalSecondaryTerm;

		[Token(Token = "0x4001646")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public TermModification PrimaryTermModifier;

		[Token(Token = "0x4001647")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public TermModification SecondaryTermModifier;

		[Token(Token = "0x4001648")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string TermPrefix;

		[Token(Token = "0x4001649")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string TermSuffix;

		[Token(Token = "0x400164A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public bool LocalizeOnAwake;

		[Token(Token = "0x400164B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private string LastLocalizedLanguage;

		[Token(Token = "0x400164C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public bool IgnoreRTL;

		[Token(Token = "0x400164D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public int MaxCharactersInRTL;

		[Token(Token = "0x400164E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public bool IgnoreNumbersInRTL;

		[Token(Token = "0x400164F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
		public bool CorrectAlignmentForRTL;

		[Token(Token = "0x4001650")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6A")]
		public bool AddSpacesToJoinedLanguages;

		[Token(Token = "0x4001651")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6B")]
		public bool AllowLocalizedParameters;

		[Token(Token = "0x4001652")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public bool AllowParameters;

		[Token(Token = "0x4001653")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public List<UnityEngine.Object> TranslatedObjects;

		[NonSerialized]
		[Token(Token = "0x4001654")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Dictionary<string, UnityEngine.Object> mAssetDictionary;

		[Token(Token = "0x4001655")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public UnityEvent LocalizeEvent;

		[Token(Token = "0x4001656")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static string MainTranslation;

		[Token(Token = "0x4001657")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static string SecondaryTranslation;

		[Token(Token = "0x4001658")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static string CallBackTerm;

		[Token(Token = "0x4001659")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static string CallBackSecondaryTerm;

		[Token(Token = "0x400165A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static Localize CurrentLocalizeComponent;

		[Token(Token = "0x400165B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public bool AlwaysForceLocalize;

		[Token(Token = "0x400165C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		public EventCallback LocalizeCallBack;

		[Token(Token = "0x400165D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public bool mGUI_ShowReferences;

		[Token(Token = "0x400165E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x99")]
		public bool mGUI_ShowTems;

		[Token(Token = "0x400165F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9A")]
		public bool mGUI_ShowCallback;

		[Token(Token = "0x4001660")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public ILocalizeTarget mLocalizeTarget;

		[Token(Token = "0x4001661")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public string mLocalizeTargetName;

		[Token(Token = "0x17000190")]
		public string Term
		{
			[Token(Token = "0x6001580")]
			[Address(RVA = "0x143200C", Offset = "0x143200C", VA = "0x143200C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001581")]
			[Address(RVA = "0x1432014", Offset = "0x1432014", VA = "0x1432014")]
			set
			{
			}
		}

		[Token(Token = "0x17000191")]
		public string SecondaryTerm
		{
			[Token(Token = "0x6001582")]
			[Address(RVA = "0x1432070", Offset = "0x1432070", VA = "0x1432070")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001583")]
			[Address(RVA = "0x1432078", Offset = "0x1432078", VA = "0x1432078")]
			set
			{
			}
		}

		[Token(Token = "0x6001584")]
		[Address(RVA = "0x1432108", Offset = "0x1432108", VA = "0x1432108")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001585")]
		[Address(RVA = "0x1432978", Offset = "0x1432978", VA = "0x1432978")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001586")]
		[Address(RVA = "0x1432980", Offset = "0x1432980", VA = "0x1432980")]
		public bool HasCallback()
		{
			return default(bool);
		}

		[Token(Token = "0x6001587")]
		[Address(RVA = "0x142F1DC", Offset = "0x142F1DC", VA = "0x142F1DC")]
		public void OnLocalize(bool Force = false)
		{
		}

		[Token(Token = "0x6001588")]
		[Address(RVA = "0x143247C", Offset = "0x143247C", VA = "0x143247C")]
		public bool FindTarget()
		{
			return default(bool);
		}

		[Token(Token = "0x6001589")]
		[Address(RVA = "0x14329D4", Offset = "0x14329D4", VA = "0x14329D4")]
		public void GetFinalTerms(out string primaryTerm, out string secondaryTerm)
		{
		}

		[Token(Token = "0x600158A")]
		[Address(RVA = "0x1432B80", Offset = "0x1432B80", VA = "0x1432B80")]
		public string GetMainTargetsText()
		{
			return null;
		}

		[Token(Token = "0x600158B")]
		[Address(RVA = "0x1432C58", Offset = "0x1432C58", VA = "0x1432C58")]
		public void SetFinalTerms(string Main, string Secondary, out string primaryTerm, out string secondaryTerm, bool RemoveNonASCII)
		{
		}

		[Token(Token = "0x600158C")]
		[Address(RVA = "0x1432018", Offset = "0x1432018", VA = "0x1432018")]
		public void SetTerm(string primary)
		{
		}

		[Token(Token = "0x600158D")]
		[Address(RVA = "0x1432084", Offset = "0x1432084", VA = "0x1432084")]
		public void SetTerm(string primary, string secondary)
		{
		}

		[Token(Token = "0x600158E")]
		internal T GetSecondaryTranslatedObj<T>(ref string mainTranslation, ref string secondaryTranslation) where T : UnityEngine.Object
		{
			return null;
		}

		[Token(Token = "0x600158F")]
		[Address(RVA = "0x143214C", Offset = "0x143214C", VA = "0x143214C")]
		public void UpdateAssetDictionary()
		{
		}

		[Token(Token = "0x6001590")]
		internal T GetObject<T>(string Translation) where T : UnityEngine.Object
		{
			return null;
		}

		[Token(Token = "0x6001591")]
		private T GetTranslatedObject<T>(string Translation) where T : UnityEngine.Object
		{
			return null;
		}

		[Token(Token = "0x6001592")]
		[Address(RVA = "0x1432CB0", Offset = "0x1432CB0", VA = "0x1432CB0")]
		private void DeserializeTranslation(string translation, out string value, out string secondary)
		{
		}

		[Token(Token = "0x6001593")]
		public T FindTranslatedObject<T>(string value) where T : UnityEngine.Object
		{
			return null;
		}

		[Token(Token = "0x6001594")]
		[Address(RVA = "0x1432DC8", Offset = "0x1432DC8", VA = "0x1432DC8")]
		public bool HasTranslatedObject(UnityEngine.Object Obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6001595")]
		[Address(RVA = "0x1432E60", Offset = "0x1432E60", VA = "0x1432E60")]
		public void AddTranslatedObject(UnityEngine.Object Obj)
		{
		}

		[Token(Token = "0x6001596")]
		[Address(RVA = "0x1432F00", Offset = "0x1432F00", VA = "0x1432F00")]
		public void SetGlobalLanguage(string Language)
		{
		}

		[Token(Token = "0x6001597")]
		[Address(RVA = "0x1432F64", Offset = "0x1432F64", VA = "0x1432F64")]
		public Localize()
		{
		}
	}
	[Token(Token = "0x20002FF")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x9E7874", Offset = "0x9E7874")]
	public class LocalizeDropdown : MonoBehaviour
	{
		[Token(Token = "0x4001662")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<string> _Terms;

		[Token(Token = "0x6001598")]
		[Address(RVA = "0xD2BA2C", Offset = "0xD2BA2C", VA = "0xD2BA2C")]
		public void Start()
		{
		}

		[Token(Token = "0x6001599")]
		[Address(RVA = "0xD2BBC4", Offset = "0xD2BBC4", VA = "0xD2BBC4")]
		public void OnDestroy()
		{
		}

		[Token(Token = "0x600159A")]
		[Address(RVA = "0xD2BC58", Offset = "0xD2BC58", VA = "0xD2BC58")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600159B")]
		[Address(RVA = "0xD2BAC8", Offset = "0xD2BAC8", VA = "0xD2BAC8")]
		public void OnLocalize()
		{
		}

		[Token(Token = "0x600159C")]
		[Address(RVA = "0xD2BCB8", Offset = "0xD2BCB8", VA = "0xD2BCB8")]
		private void FillValues()
		{
		}

		[Token(Token = "0x600159D")]
		[Address(RVA = "0xD2BE48", Offset = "0xD2BE48", VA = "0xD2BE48")]
		public void UpdateLocalization()
		{
		}

		[Token(Token = "0x600159E")]
		[Address(RVA = "0xD2C1F4", Offset = "0xD2C1F4", VA = "0xD2C1F4")]
		public void UpdateLocalizationTMPro()
		{
		}

		[Token(Token = "0x600159F")]
		[Address(RVA = "0xD2C07C", Offset = "0xD2C07C", VA = "0xD2C07C")]
		private void FillValuesTMPro()
		{
		}

		[Token(Token = "0x60015A0")]
		[Address(RVA = "0xD2C41C", Offset = "0xD2C41C", VA = "0xD2C41C")]
		public LocalizeDropdown()
		{
		}
	}
	[Token(Token = "0x2000300")]
	public static class LocalizationManager
	{
		[Token(Token = "0x2000511")]
		public delegate object _GetParam(string param);

		[Token(Token = "0x2000512")]
		public delegate void OnLocalizeCallback();

		[Token(Token = "0x2000513")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E8538", Offset = "0x9E8538")]
		private sealed class <>c__DisplayClass33_0
		{
			[Token(Token = "0x4001B0E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public List<string> Languages;

			[Token(Token = "0x4001B0F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Func<string, bool> <>9__0;

			[Token(Token = "0x6001E7D")]
			[Address(RVA = "0x142BAEC", Offset = "0x142BAEC", VA = "0x142BAEC")]
			public <>c__DisplayClass33_0()
			{
			}

			[Token(Token = "0x6001E7E")]
			[Address(RVA = "0x14309FC", Offset = "0x14309FC", VA = "0x14309FC")]
			internal bool <GetAllLanguages>b__0(string x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000514")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E8548", Offset = "0x9E8548")]
		private sealed class <>c__DisplayClass34_0
		{
			[Token(Token = "0x4001B10")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public List<string> Languages;

			[Token(Token = "0x4001B11")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Func<string, bool> <>9__0;

			[Token(Token = "0x6001E7F")]
			[Address(RVA = "0x142BD14", Offset = "0x142BD14", VA = "0x142BD14")]
			public <>c__DisplayClass34_0()
			{
			}

			[Token(Token = "0x6001E80")]
			[Address(RVA = "0x1430A70", Offset = "0x1430A70", VA = "0x1430A70")]
			internal bool <GetAllLanguagesCode>b__0(string x)
			{
				return default(bool);
			}
		}

		[Serializable]
		[Token(Token = "0x2000515")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E8558", Offset = "0x9E8558")]
		private sealed class <>c
		{
			[Token(Token = "0x4001B12")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001B13")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static _GetParam <>9__41_0;

			[Token(Token = "0x6001E82")]
			[Address(RVA = "0x143098C", Offset = "0x143098C", VA = "0x143098C")]
			public <>c()
			{
			}

			[Token(Token = "0x6001E83")]
			[Address(RVA = "0x1430994", Offset = "0x1430994", VA = "0x1430994")]
			internal object <ApplyLocalizationParams>b__41_0(string p)
			{
				return null;
			}
		}

		[Token(Token = "0x2000516")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E8568", Offset = "0x9E8568")]
		private sealed class <>c__DisplayClass42_0
		{
			[Token(Token = "0x4001B14")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GameObject root;

			[Token(Token = "0x6001E84")]
			[Address(RVA = "0x142C698", Offset = "0x142C698", VA = "0x142C698")]
			public <>c__DisplayClass42_0()
			{
			}

			[Token(Token = "0x6001E85")]
			[Address(RVA = "0x1430AE4", Offset = "0x1430AE4", VA = "0x1430AE4")]
			internal object <ApplyLocalizationParams>b__0(string p)
			{
				return null;
			}
		}

		[Token(Token = "0x2000517")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E8578", Offset = "0x9E8578")]
		private sealed class <>c__DisplayClass43_0
		{
			[Token(Token = "0x4001B15")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Dictionary<string, object> parameters;

			[Token(Token = "0x6001E86")]
			[Address(RVA = "0x142C788", Offset = "0x142C788", VA = "0x142C788")]
			public <>c__DisplayClass43_0()
			{
			}

			[Token(Token = "0x6001E87")]
			[Address(RVA = "0x1430B5C", Offset = "0x1430B5C", VA = "0x1430B5C")]
			internal object <ApplyLocalizationParams>b__0(string p)
			{
				return null;
			}
		}

		[Token(Token = "0x2000518")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E8588", Offset = "0x9E8588")]
		private sealed class <Delayed_Import_Google>d__61 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001B16")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001B17")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001B18")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float delay;

			[Token(Token = "0x4001B19")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public LanguageSourceData source;

			[Token(Token = "0x4001B1A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public bool justCheck;

			[Token(Token = "0x170002D1")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001E8B")]
				[Address(RVA = "0x1430E2C", Offset = "0x1430E2C", VA = "0x1430E2C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002D2")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E8D")]
				[Address(RVA = "0x1430E94", Offset = "0x1430E94", VA = "0x1430E94", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E88")]
			[Address(RVA = "0x142DC10", Offset = "0x142DC10", VA = "0x142DC10")]
			[DebuggerHidden]
			public <Delayed_Import_Google>d__61(int <>1__state)
			{
			}

			[Token(Token = "0x6001E89")]
			[Address(RVA = "0x1430D68", Offset = "0x1430D68", VA = "0x1430D68", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E8A")]
			[Address(RVA = "0x1430D6C", Offset = "0x1430D6C", VA = "0x1430D6C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E8C")]
			[Address(RVA = "0x1430E34", Offset = "0x1430E34", VA = "0x1430E34", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000519")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E8598", Offset = "0x9E8598")]
		private sealed class <>c__DisplayClass71_0
		{
			[Token(Token = "0x4001B1B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ILocalizeTargetDescriptor desc;

			[Token(Token = "0x6001E8E")]
			[Address(RVA = "0x142E7F0", Offset = "0x142E7F0", VA = "0x142E7F0")]
			public <>c__DisplayClass71_0()
			{
			}

			[Token(Token = "0x6001E8F")]
			[Address(RVA = "0x1430BDC", Offset = "0x1430BDC", VA = "0x1430BDC")]
			internal bool <RegisterTarget>b__0(ILocalizeTargetDescriptor x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x200051A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E85A8", Offset = "0x9E85A8")]
		private sealed class <Coroutine_LocalizeAll>d__86 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001B1C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001B1D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x170002D3")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001E93")]
				[Address(RVA = "0x1430CF8", Offset = "0x1430CF8", VA = "0x1430CF8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002D4")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E95")]
				[Address(RVA = "0x1430D60", Offset = "0x1430D60", VA = "0x1430D60", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E90")]
			[Address(RVA = "0x142F1B0", Offset = "0x142F1B0", VA = "0x142F1B0")]
			[DebuggerHidden]
			public <Coroutine_LocalizeAll>d__86(int <>1__state)
			{
			}

			[Token(Token = "0x6001E91")]
			[Address(RVA = "0x1430C08", Offset = "0x1430C08", VA = "0x1430C08", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E92")]
			[Address(RVA = "0x1430C0C", Offset = "0x1430C0C", VA = "0x1430C0C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E94")]
			[Address(RVA = "0x1430D00", Offset = "0x1430D00", VA = "0x1430D00", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001663")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static string mCurrentLanguage;

		[Token(Token = "0x4001664")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static string mLanguageCode;

		[Token(Token = "0x4001665")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static CultureInfo mCurrentCulture;

		[Token(Token = "0x4001666")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static bool mChangeCultureInfo;

		[Token(Token = "0x4001667")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public static bool IsRight2Left;

		[Token(Token = "0x4001668")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		public static bool HasJoinedWords;

		[Token(Token = "0x4001669")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static List<ILocalizationParamsManager> ParamManagers;

		[Token(Token = "0x400166A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static string[] LanguagesRTL;

		[Token(Token = "0x400166B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public static List<LanguageSourceData> Sources;

		[Token(Token = "0x400166C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public static string[] GlobalSources;

		[Token(Token = "0x400166D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public static Func<LanguageSourceData, bool> Callback_AllowSyncFromGoogle;

		[Token(Token = "0x400166E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private static string mCurrentDeviceLanguage;

		[Token(Token = "0x400166F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public static List<ILocalizeTargetDescriptor> mLocalizeTargets;

		[Token(Token = "0x4001671")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private static bool mLocalizeIsScheduled;

		[Token(Token = "0x4001672")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		private static bool mLocalizeIsScheduledWithForcedValue;

		[Token(Token = "0x4001673")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x62")]
		public static bool HighlightLocalizedTargets;

		[Token(Token = "0x17000192")]
		public static string CurrentLanguage
		{
			[Token(Token = "0x60015A5")]
			[Address(RVA = "0x1426384", Offset = "0x1426384", VA = "0x1426384")]
			get
			{
				return null;
			}
			[Token(Token = "0x60015A6")]
			[Address(RVA = "0x142A10C", Offset = "0x142A10C", VA = "0x142A10C")]
			set
			{
			}
		}

		[Token(Token = "0x17000193")]
		public static string CurrentLanguageCode
		{
			[Token(Token = "0x60015A7")]
			[Address(RVA = "0x142AA70", Offset = "0x142AA70", VA = "0x142AA70")]
			get
			{
				return null;
			}
			[Token(Token = "0x60015A8")]
			[Address(RVA = "0x142AADC", Offset = "0x142AADC", VA = "0x142AADC")]
			set
			{
			}
		}

		[Token(Token = "0x17000194")]
		public static string CurrentRegion
		{
			[Token(Token = "0x60015A9")]
			[Address(RVA = "0x142ADC4", Offset = "0x142ADC4", VA = "0x142ADC4")]
			get
			{
				return null;
			}
			[Token(Token = "0x60015AA")]
			[Address(RVA = "0x142AF18", Offset = "0x142AF18", VA = "0x142AF18")]
			set
			{
			}
		}

		[Token(Token = "0x17000195")]
		public static string CurrentRegionCode
		{
			[Token(Token = "0x60015AB")]
			[Address(RVA = "0x142B0AC", Offset = "0x142B0AC", VA = "0x142B0AC")]
			get
			{
				return null;
			}
			[Token(Token = "0x60015AC")]
			[Address(RVA = "0x142B174", Offset = "0x142B174", VA = "0x142B174")]
			set
			{
			}
		}

		[Token(Token = "0x17000196")]
		public static CultureInfo CurrentCulture
		{
			[Token(Token = "0x60015AD")]
			[Address(RVA = "0x142B278", Offset = "0x142B278", VA = "0x142B278")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x140000B9")]
		public static event OnLocalizeCallback OnLocalizeEvent
		{
			[Token(Token = "0x60015D6")]
			[Address(RVA = "0x142E7F8", Offset = "0x142E7F8", VA = "0x142E7F8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F2F2C", Offset = "0x9F2F2C")]
			add
			{
			}
			[Token(Token = "0x60015D7")]
			[Address(RVA = "0x142E8E8", Offset = "0x142E8E8", VA = "0x142E8E8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F2F3C", Offset = "0x9F2F3C")]
			remove
			{
			}
		}

		[Token(Token = "0x60015A1")]
		[Address(RVA = "0x141AA64", Offset = "0x141AA64", VA = "0x141AA64")]
		public static void InitializeIfNeeded()
		{
		}

		[Token(Token = "0x60015A2")]
		[Address(RVA = "0x142A0C4", Offset = "0x142A0C4", VA = "0x142A0C4")]
		public static string GetVersion()
		{
			return null;
		}

		[Token(Token = "0x60015A3")]
		[Address(RVA = "0x1427534", Offset = "0x1427534", VA = "0x1427534")]
		public static int GetRequiredWebServiceVersion()
		{
			return default(int);
		}

		[Token(Token = "0x60015A4")]
		[Address(RVA = "0x141A644", Offset = "0x141A644", VA = "0x141A644")]
		public static string GetWebServiceURL([Optional] LanguageSourceData source)
		{
			return null;
		}

		[Token(Token = "0x60015AE")]
		[Address(RVA = "0x142A858", Offset = "0x142A858", VA = "0x142A858")]
		public static void SetLanguageAndCode(string LanguageName, string LanguageCode, bool RememberLanguage = true, bool Force = false)
		{
		}

		[Token(Token = "0x60015AF")]
		[Address(RVA = "0x142B2E0", Offset = "0x142B2E0", VA = "0x142B2E0")]
		private static CultureInfo CreateCultureForCode(string code)
		{
			return null;
		}

		[Token(Token = "0x60015B0")]
		[Address(RVA = "0x142B4F4", Offset = "0x142B4F4", VA = "0x142B4F4")]
		public static void EnableChangingCultureInfo(bool bEnable)
		{
		}

		[Token(Token = "0x60015B1")]
		[Address(RVA = "0x142B3E4", Offset = "0x142B3E4", VA = "0x142B3E4")]
		private static void SetCurrentCultureInfo()
		{
		}

		[Token(Token = "0x60015B2")]
		[Address(RVA = "0x1429C34", Offset = "0x1429C34", VA = "0x1429C34")]
		private static void SelectStartupLanguage()
		{
		}

		[Token(Token = "0x60015B3")]
		[Address(RVA = "0x142B674", Offset = "0x142B674", VA = "0x142B674")]
		public static bool HasLanguage(string Language, bool AllowDiscartingRegion = true, bool Initialize = true, bool SkipDisabled = true)
		{
			return default(bool);
		}

		[Token(Token = "0x60015B4")]
		[Address(RVA = "0x142A1FC", Offset = "0x142A1FC", VA = "0x142A1FC")]
		public static string GetSupportedLanguage(string Language, bool ignoreDisabled = false)
		{
			return null;
		}

		[Token(Token = "0x60015B5")]
		[Address(RVA = "0x142A674", Offset = "0x142A674", VA = "0x142A674")]
		public static string GetLanguageCode(string Language)
		{
			return null;
		}

		[Token(Token = "0x60015B6")]
		[Address(RVA = "0x142ABD0", Offset = "0x142ABD0", VA = "0x142ABD0")]
		public static string GetLanguageFromCode(string Code, bool exactMatch = true)
		{
			return null;
		}

		[Token(Token = "0x60015B7")]
		[Address(RVA = "0x142B880", Offset = "0x142B880", VA = "0x142B880")]
		public static List<string> GetAllLanguages(bool SkipDisabled = true)
		{
			return null;
		}

		[Token(Token = "0x60015B8")]
		[Address(RVA = "0x142BAF4", Offset = "0x142BAF4", VA = "0x142BAF4")]
		public static List<string> GetAllLanguagesCode(bool allowRegions = true, bool SkipDisabled = true)
		{
			return null;
		}

		[Token(Token = "0x60015B9")]
		[Address(RVA = "0x142BD1C", Offset = "0x142BD1C", VA = "0x142BD1C")]
		public static bool IsLanguageEnabled(string Language)
		{
			return default(bool);
		}

		[Token(Token = "0x60015BA")]
		[Address(RVA = "0x142BE28", Offset = "0x142BE28", VA = "0x142BE28")]
		private static void LoadCurrentLanguage()
		{
		}

		[Token(Token = "0x60015BB")]
		[Address(RVA = "0x142BF74", Offset = "0x142BF74", VA = "0x142BF74")]
		public static void PreviewLanguage(string NewLanguage)
		{
		}

		[Token(Token = "0x60015BC")]
		[Address(RVA = "0x1429A24", Offset = "0x1429A24", VA = "0x1429A24")]
		public static void AutoLoadGlobalParamManagers()
		{
		}

		[Token(Token = "0x60015BD")]
		[Address(RVA = "0x142C074", Offset = "0x142C074", VA = "0x142C074")]
		public static void ApplyLocalizationParams(ref string translation, bool allowLocalizedParameters = true)
		{
		}

		[Token(Token = "0x60015BE")]
		[Address(RVA = "0x142C5B0", Offset = "0x142C5B0", VA = "0x142C5B0")]
		public static void ApplyLocalizationParams(ref string translation, GameObject root, bool allowLocalizedParameters = true)
		{
		}

		[Token(Token = "0x60015BF")]
		[Address(RVA = "0x142C6A0", Offset = "0x142C6A0", VA = "0x142C6A0")]
		public static void ApplyLocalizationParams(ref string translation, Dictionary<string, object> parameters, bool allowLocalizedParameters = true)
		{
		}

		[Token(Token = "0x60015C0")]
		[Address(RVA = "0x142C1A4", Offset = "0x142C1A4", VA = "0x142C1A4")]
		public static void ApplyLocalizationParams(ref string translation, _GetParam getParam, bool allowLocalizedParameters = true)
		{
		}

		[Token(Token = "0x60015C1")]
		[Address(RVA = "0x142CCB0", Offset = "0x142CCB0", VA = "0x142CCB0")]
		internal static string GetLocalizationParam(string ParamName, GameObject root)
		{
			return null;
		}

		[Token(Token = "0x60015C2")]
		[Address(RVA = "0x142CF5C", Offset = "0x142CF5C", VA = "0x142CF5C")]
		private static string GetPluralType(MatchCollection matches, string langCode, _GetParam getParam)
		{
			return null;
		}

		[Token(Token = "0x60015C3")]
		[Address(RVA = "0x142D128", Offset = "0x142D128", VA = "0x142D128")]
		public static string ApplyRTLfix(string line)
		{
			return null;
		}

		[Token(Token = "0x60015C4")]
		[Address(RVA = "0x142D194", Offset = "0x142D194", VA = "0x142D194")]
		public static string ApplyRTLfix(string line, int maxCharacters, bool ignoreNumbers)
		{
			return null;
		}

		[Token(Token = "0x60015C5")]
		[Address(RVA = "0x142D57C", Offset = "0x142D57C", VA = "0x142D57C")]
		public static string FixRTL_IfNeeded(string text, int maxCharacters = 0, bool ignoreNumber = false)
		{
			return null;
		}

		[Token(Token = "0x60015C6")]
		[Address(RVA = "0x142B46C", Offset = "0x142B46C", VA = "0x142B46C")]
		public static bool IsRTL(string Code)
		{
			return default(bool);
		}

		[Token(Token = "0x60015C7")]
		[Address(RVA = "0x1429BAC", Offset = "0x1429BAC", VA = "0x1429BAC")]
		public static bool UpdateSources()
		{
			return default(bool);
		}

		[Token(Token = "0x60015C8")]
		[Address(RVA = "0x142D630", Offset = "0x142D630", VA = "0x142D630")]
		private static void UnregisterDeletededSources()
		{
		}

		[Token(Token = "0x60015C9")]
		[Address(RVA = "0x142D928", Offset = "0x142D928", VA = "0x142D928")]
		private static void RegisterSceneSources()
		{
		}

		[Token(Token = "0x60015CA")]
		[Address(RVA = "0x142D76C", Offset = "0x142D76C", VA = "0x142D76C")]
		private static void RegisterSourceInResources()
		{
		}

		[Token(Token = "0x60015CB")]
		[Address(RVA = "0x142DAB4", Offset = "0x142DAB4", VA = "0x142DAB4")]
		private static bool AllowSyncFromGoogle(LanguageSourceData Source)
		{
			return default(bool);
		}

		[Token(Token = "0x60015CC")]
		[Address(RVA = "0x14218A8", Offset = "0x14218A8", VA = "0x14218A8")]
		internal static void AddSource(LanguageSourceData Source)
		{
		}

		[Token(Token = "0x60015CD")]
		[Address(RVA = "0x142DB70", Offset = "0x142DB70", VA = "0x142DB70")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9F2EC8", Offset = "0x9F2EC8")]
		private static IEnumerator Delayed_Import_Google(LanguageSourceData source, float delay, bool justCheck)
		{
			return null;
		}

		[Token(Token = "0x60015CE")]
		[Address(RVA = "0x14221E8", Offset = "0x14221E8", VA = "0x14221E8")]
		internal static void RemoveSource(LanguageSourceData Source)
		{
		}

		[Token(Token = "0x60015CF")]
		[Address(RVA = "0x142DC3C", Offset = "0x142DC3C", VA = "0x142DC3C")]
		public static bool IsGlobalSource(string SourceName)
		{
			return default(bool);
		}

		[Token(Token = "0x60015D0")]
		[Address(RVA = "0x142DCC4", Offset = "0x142DCC4", VA = "0x142DCC4")]
		public static LanguageSourceData GetSourceContaining(string term, bool fallbackToFirst = true)
		{
			return null;
		}

		[Token(Token = "0x60015D1")]
		[Address(RVA = "0x142DEB0", Offset = "0x142DEB0", VA = "0x142DEB0")]
		public static UnityEngine.Object FindAsset(string value)
		{
			return null;
		}

		[Token(Token = "0x60015D2")]
		[Address(RVA = "0x142DFF0", Offset = "0x142DFF0", VA = "0x142DFF0")]
		public static void ApplyDownloadedDataFromGoogle()
		{
		}

		[Token(Token = "0x60015D3")]
		[Address(RVA = "0x142B5A8", Offset = "0x142B5A8", VA = "0x142B5A8")]
		public static string GetCurrentDeviceLanguage(bool force = false)
		{
			return null;
		}

		[Token(Token = "0x60015D4")]
		[Address(RVA = "0x142E0DC", Offset = "0x142E0DC", VA = "0x142E0DC")]
		private static void DetectDeviceLanguage()
		{
		}

		[Token(Token = "0x60015D5")]
		[Address(RVA = "0x142E5AC", Offset = "0x142E5AC", VA = "0x142E5AC")]
		public static void RegisterTarget(ILocalizeTargetDescriptor desc)
		{
		}

		[Token(Token = "0x60015D8")]
		[Address(RVA = "0x142E9D8", Offset = "0x142E9D8", VA = "0x142E9D8")]
		public static string GetTranslation(string Term, bool FixForRTL = true, int maxLineLengthForRTL = 0, bool ignoreRTLnumbers = true, bool applyParameters = false, [Optional] GameObject localParametersRoot, [Optional] string overrideLanguage, bool allowLocalizedParameters = true)
		{
			return null;
		}

		[Token(Token = "0x60015D9")]
		[Address(RVA = "0x142ECD0", Offset = "0x142ECD0", VA = "0x142ECD0")]
		public static string GetTermTranslation(string Term, bool FixForRTL = true, int maxLineLengthForRTL = 0, bool ignoreRTLnumbers = true, bool applyParameters = false, [Optional] GameObject localParametersRoot, [Optional] string overrideLanguage, bool allowLocalizedParameters = true)
		{
			return null;
		}

		[Token(Token = "0x60015DA")]
		[Address(RVA = "0x142EAAC", Offset = "0x142EAAC", VA = "0x142EAAC")]
		public static bool TryGetTranslation(string Term, out string Translation, bool FixForRTL = true, int maxLineLengthForRTL = 0, bool ignoreRTLnumbers = true, bool applyParameters = false, [Optional] GameObject localParametersRoot, [Optional] string overrideLanguage, bool allowLocalizedParameters = true)
		{
			return default(bool);
		}

		[Token(Token = "0x60015DB")]
		public static T GetTranslatedObject<T>(string AssetName, [Optional] Localize optionalLocComp) where T : UnityEngine.Object
		{
			return null;
		}

		[Token(Token = "0x60015DC")]
		public static T GetTranslatedObjectByTermName<T>(string Term, [Optional] Localize optionalLocComp) where T : UnityEngine.Object
		{
			return null;
		}

		[Token(Token = "0x60015DD")]
		[Address(RVA = "0x142ED8C", Offset = "0x142ED8C", VA = "0x142ED8C")]
		public static string GetAppName(string languageCode)
		{
			return null;
		}

		[Token(Token = "0x60015DE")]
		[Address(RVA = "0x14220E0", Offset = "0x14220E0", VA = "0x14220E0")]
		public static void LocalizeAll(bool Force = false)
		{
		}

		[Token(Token = "0x60015DF")]
		[Address(RVA = "0x142F150", Offset = "0x142F150", VA = "0x142F150")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9F2F4C", Offset = "0x9F2F4C")]
		private static IEnumerator Coroutine_LocalizeAll()
		{
			return null;
		}

		[Token(Token = "0x60015E0")]
		[Address(RVA = "0x142EFDC", Offset = "0x142EFDC", VA = "0x142EFDC")]
		private static void DoLocalizeAll(bool Force = false)
		{
		}

		[Token(Token = "0x60015E1")]
		[Address(RVA = "0x142FD18", Offset = "0x142FD18", VA = "0x142FD18")]
		public static List<string> GetCategories()
		{
			return null;
		}

		[Token(Token = "0x60015E2")]
		[Address(RVA = "0x142FE3C", Offset = "0x142FE3C", VA = "0x142FE3C")]
		public static List<string> GetTermsList([Optional] string Category)
		{
			return null;
		}

		[Token(Token = "0x60015E3")]
		[Address(RVA = "0x1430084", Offset = "0x1430084", VA = "0x1430084")]
		public static TermData GetTermData(string term)
		{
			return null;
		}

		[Token(Token = "0x60015E4")]
		[Address(RVA = "0x142CB2C", Offset = "0x142CB2C", VA = "0x142CB2C")]
		public static TermData GetTermData(string term, out LanguageSourceData source)
		{
			return null;
		}
	}
	[Token(Token = "0x2000301")]
	public abstract class ILocalizeTarget : ScriptableObject
	{
		[Token(Token = "0x60015E6")]
		public abstract bool IsValid(Localize cmp);

		[Token(Token = "0x60015E7")]
		public abstract void GetFinalTerms(Localize cmp, string Main, string Secondary, out string primaryTerm, out string secondaryTerm);

		[Token(Token = "0x60015E8")]
		public abstract void DoLocalize(Localize cmp, string mainTranslation, string secondaryTranslation);

		[Token(Token = "0x60015E9")]
		public abstract bool CanUseSecondaryTerm();

		[Token(Token = "0x60015EA")]
		public abstract bool AllowMainTermToBeRTL();

		[Token(Token = "0x60015EB")]
		public abstract bool AllowSecondTermToBeRTL();

		[Token(Token = "0x60015EC")]
		public abstract eTermType GetPrimaryTermType(Localize cmp);

		[Token(Token = "0x60015ED")]
		public abstract eTermType GetSecondaryTermType(Localize cmp);

		[Token(Token = "0x60015EE")]
		[Address(RVA = "0x1420664", Offset = "0x1420664", VA = "0x1420664")]
		protected ILocalizeTarget()
		{
		}
	}
	[Token(Token = "0x2000302")]
	public abstract class LocalizeTarget<T> : ILocalizeTarget where T : UnityEngine.Object
	{
		[Token(Token = "0x4001674")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public T mTarget;

		[Token(Token = "0x60015EF")]
		public override bool IsValid(Localize cmp)
		{
			return default(bool);
		}

		[Token(Token = "0x60015F0")]
		protected LocalizeTarget()
		{
		}
	}
	[Token(Token = "0x2000303")]
	public abstract class ILocalizeTargetDescriptor
	{
		[Token(Token = "0x4001675")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string Name;

		[Token(Token = "0x4001676")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int Priority;

		[Token(Token = "0x60015F1")]
		public abstract bool CanLocalize(Localize cmp);

		[Token(Token = "0x60015F2")]
		public abstract ILocalizeTarget CreateTarget(Localize cmp);

		[Token(Token = "0x60015F3")]
		public abstract Type GetTargetType();

		[Token(Token = "0x60015F4")]
		[Address(RVA = "0x142066C", Offset = "0x142066C", VA = "0x142066C")]
		protected ILocalizeTargetDescriptor()
		{
		}
	}
	[Token(Token = "0x2000304")]
	public abstract class LocalizeTargetDesc<T> : ILocalizeTargetDescriptor where T : ILocalizeTarget
	{
		[Token(Token = "0x60015F5")]
		public override ILocalizeTarget CreateTarget(Localize cmp)
		{
			return null;
		}

		[Token(Token = "0x60015F6")]
		public override Type GetTargetType()
		{
			return null;
		}

		[Token(Token = "0x60015F7")]
		protected LocalizeTargetDesc()
		{
		}
	}
	[Token(Token = "0x2000305")]
	public class LocalizeTargetDesc_Type<T, G> : LocalizeTargetDesc<G> where T : UnityEngine.Object where G : LocalizeTarget<T>
	{
		[Token(Token = "0x60015F8")]
		public override bool CanLocalize(Localize cmp)
		{
			return default(bool);
		}

		[Token(Token = "0x60015F9")]
		public override ILocalizeTarget CreateTarget(Localize cmp)
		{
			return null;
		}

		[Token(Token = "0x60015FA")]
		public LocalizeTargetDesc_Type()
		{
		}
	}
	[Token(Token = "0x2000306")]
	public class LocalizeTarget_TextMeshPro_Label : LocalizeTarget<TextMeshPro>
	{
		[Token(Token = "0x4001677")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private TextAlignmentOptions mAlignment_RTL;

		[Token(Token = "0x4001678")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private TextAlignmentOptions mAlignment_LTR;

		[Token(Token = "0x4001679")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool mAlignmentWasRTL;

		[Token(Token = "0x400167A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		private bool mInitializeAlignment;

		[Token(Token = "0x60015FB")]
		[Address(RVA = "0xD2C578", Offset = "0xD2C578", VA = "0xD2C578")]
		static LocalizeTarget_TextMeshPro_Label()
		{
		}

		[Token(Token = "0x60015FC")]
		[Address(RVA = "0xD2C57C", Offset = "0xD2C57C", VA = "0xD2C57C")]
		[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0x9F2FB0", Offset = "0x9F2FB0")]
		private static void AutoRegister()
		{
		}

		[Token(Token = "0x60015FD")]
		[Address(RVA = "0xD2C630", Offset = "0xD2C630", VA = "0xD2C630", Slot = "10")]
		public override eTermType GetPrimaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x60015FE")]
		[Address(RVA = "0xD2C638", Offset = "0xD2C638", VA = "0xD2C638", Slot = "11")]
		public override eTermType GetSecondaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x60015FF")]
		[Address(RVA = "0xD2C640", Offset = "0xD2C640", VA = "0xD2C640", Slot = "7")]
		public override bool CanUseSecondaryTerm()
		{
			return default(bool);
		}

		[Token(Token = "0x6001600")]
		[Address(RVA = "0xD2C648", Offset = "0xD2C648", VA = "0xD2C648", Slot = "8")]
		public override bool AllowMainTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6001601")]
		[Address(RVA = "0xD2C650", Offset = "0xD2C650", VA = "0xD2C650", Slot = "9")]
		public override bool AllowSecondTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6001602")]
		[Address(RVA = "0xD2C658", Offset = "0xD2C658", VA = "0xD2C658", Slot = "5")]
		public override void GetFinalTerms(Localize cmp, string Main, string Secondary, out string primaryTerm, out string secondaryTerm)
		{
		}

		[Token(Token = "0x6001603")]
		[Address(RVA = "0xD2C788", Offset = "0xD2C788", VA = "0xD2C788", Slot = "6")]
		public override void DoLocalize(Localize cmp, string mainTranslation, string secondaryTranslation)
		{
		}

		[Token(Token = "0x6001604")]
		[Address(RVA = "0xD2CDCC", Offset = "0xD2CDCC", VA = "0xD2CDCC")]
		internal static TMP_FontAsset GetTMPFontFromMaterial(Localize cmp, string matName)
		{
			return null;
		}

		[Token(Token = "0x6001605")]
		[Address(RVA = "0xD2D05C", Offset = "0xD2D05C", VA = "0xD2D05C")]
		internal static void InitAlignment_TMPro(bool isRTL, TextAlignmentOptions alignment, out TextAlignmentOptions alignLTR, out TextAlignmentOptions alignRTL)
		{
		}

		[Token(Token = "0x6001606")]
		[Address(RVA = "0xD2CCC4", Offset = "0xD2CCC4", VA = "0xD2CCC4")]
		internal static void SetFont(TMP_Text label, TMP_FontAsset newFont)
		{
		}

		[Token(Token = "0x6001607")]
		[Address(RVA = "0xD2CF34", Offset = "0xD2CF34", VA = "0xD2CF34")]
		internal static void SetMaterial(TMP_Text label, Material newMat)
		{
		}

		[Token(Token = "0x6001608")]
		[Address(RVA = "0xD2D270", Offset = "0xD2D270", VA = "0xD2D270")]
		public LocalizeTarget_TextMeshPro_Label()
		{
		}
	}
	[Token(Token = "0x2000307")]
	public class LocalizeTarget_TextMeshPro_UGUI : LocalizeTarget<TextMeshProUGUI>
	{
		[Token(Token = "0x400167B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TextAlignmentOptions mAlignment_RTL;

		[Token(Token = "0x400167C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public TextAlignmentOptions mAlignment_LTR;

		[Token(Token = "0x400167D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool mAlignmentWasRTL;

		[Token(Token = "0x400167E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		public bool mInitializeAlignment;

		[Token(Token = "0x6001609")]
		[Address(RVA = "0xD2D2D4", Offset = "0xD2D2D4", VA = "0xD2D2D4")]
		static LocalizeTarget_TextMeshPro_UGUI()
		{
		}

		[Token(Token = "0x600160A")]
		[Address(RVA = "0xD2D2D8", Offset = "0xD2D2D8", VA = "0xD2D2D8")]
		[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0x9F2FC4", Offset = "0x9F2FC4")]
		private static void AutoRegister()
		{
		}

		[Token(Token = "0x600160B")]
		[Address(RVA = "0xD2D38C", Offset = "0xD2D38C", VA = "0xD2D38C", Slot = "10")]
		public override eTermType GetPrimaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x600160C")]
		[Address(RVA = "0xD2D394", Offset = "0xD2D394", VA = "0xD2D394", Slot = "11")]
		public override eTermType GetSecondaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x600160D")]
		[Address(RVA = "0xD2D39C", Offset = "0xD2D39C", VA = "0xD2D39C", Slot = "7")]
		public override bool CanUseSecondaryTerm()
		{
			return default(bool);
		}

		[Token(Token = "0x600160E")]
		[Address(RVA = "0xD2D3A4", Offset = "0xD2D3A4", VA = "0xD2D3A4", Slot = "8")]
		public override bool AllowMainTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x600160F")]
		[Address(RVA = "0xD2D3AC", Offset = "0xD2D3AC", VA = "0xD2D3AC", Slot = "9")]
		public override bool AllowSecondTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6001610")]
		[Address(RVA = "0xD2D3B4", Offset = "0xD2D3B4", VA = "0xD2D3B4", Slot = "5")]
		public override void GetFinalTerms(Localize cmp, string Main, string Secondary, out string primaryTerm, out string secondaryTerm)
		{
		}

		[Token(Token = "0x6001611")]
		[Address(RVA = "0xD2D4E4", Offset = "0xD2D4E4", VA = "0xD2D4E4", Slot = "6")]
		public override void DoLocalize(Localize cmp, string mainTranslation, string secondaryTranslation)
		{
		}

		[Token(Token = "0x6001612")]
		[Address(RVA = "0xD2DA20", Offset = "0xD2DA20", VA = "0xD2DA20")]
		public LocalizeTarget_TextMeshPro_UGUI()
		{
		}
	}
	[Token(Token = "0x2000308")]
	public class LocalizeTarget_UnityStandard_AudioSource : LocalizeTarget<AudioSource>
	{
		[Token(Token = "0x6001613")]
		[Address(RVA = "0xD2DA84", Offset = "0xD2DA84", VA = "0xD2DA84")]
		static LocalizeTarget_UnityStandard_AudioSource()
		{
		}

		[Token(Token = "0x6001614")]
		[Address(RVA = "0xD2DA88", Offset = "0xD2DA88", VA = "0xD2DA88")]
		[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0x9F2FD8", Offset = "0x9F2FD8")]
		private static void AutoRegister()
		{
		}

		[Token(Token = "0x6001615")]
		[Address(RVA = "0xD2DB3C", Offset = "0xD2DB3C", VA = "0xD2DB3C", Slot = "10")]
		public override eTermType GetPrimaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6001616")]
		[Address(RVA = "0xD2DB44", Offset = "0xD2DB44", VA = "0xD2DB44", Slot = "11")]
		public override eTermType GetSecondaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6001617")]
		[Address(RVA = "0xD2DB4C", Offset = "0xD2DB4C", VA = "0xD2DB4C", Slot = "7")]
		public override bool CanUseSecondaryTerm()
		{
			return default(bool);
		}

		[Token(Token = "0x6001618")]
		[Address(RVA = "0xD2DB54", Offset = "0xD2DB54", VA = "0xD2DB54", Slot = "8")]
		public override bool AllowMainTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6001619")]
		[Address(RVA = "0xD2DB5C", Offset = "0xD2DB5C", VA = "0xD2DB5C", Slot = "9")]
		public override bool AllowSecondTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x600161A")]
		[Address(RVA = "0xD2DB64", Offset = "0xD2DB64", VA = "0xD2DB64", Slot = "5")]
		public override void GetFinalTerms(Localize cmp, string Main, string Secondary, out string primaryTerm, out string secondaryTerm)
		{
		}

		[Token(Token = "0x600161B")]
		[Address(RVA = "0xD2DC50", Offset = "0xD2DC50", VA = "0xD2DC50", Slot = "6")]
		public override void DoLocalize(Localize cmp, string mainTranslation, string secondaryTranslation)
		{
		}

		[Token(Token = "0x600161C")]
		[Address(RVA = "0xD2DDCC", Offset = "0xD2DDCC", VA = "0xD2DDCC")]
		public LocalizeTarget_UnityStandard_AudioSource()
		{
		}
	}
	[Token(Token = "0x2000309")]
	public class LocalizeTargetDesc_Child : LocalizeTargetDesc<LocalizeTarget_UnityStandard_Child>
	{
		[Token(Token = "0x600161D")]
		[Address(RVA = "0xD2C498", Offset = "0xD2C498", VA = "0xD2C498", Slot = "4")]
		public override bool CanLocalize(Localize cmp)
		{
			return default(bool);
		}

		[Token(Token = "0x600161E")]
		[Address(RVA = "0xD2C4D0", Offset = "0xD2C4D0", VA = "0xD2C4D0")]
		public LocalizeTargetDesc_Child()
		{
		}
	}
	[Token(Token = "0x200030A")]
	public class LocalizeTarget_UnityStandard_Child : LocalizeTarget<GameObject>
	{
		[Token(Token = "0x600161F")]
		[Address(RVA = "0xD2DE1C", Offset = "0xD2DE1C", VA = "0xD2DE1C")]
		static LocalizeTarget_UnityStandard_Child()
		{
		}

		[Token(Token = "0x6001620")]
		[Address(RVA = "0xD2DE20", Offset = "0xD2DE20", VA = "0xD2DE20")]
		[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0x9F2FEC", Offset = "0x9F2FEC")]
		private static void AutoRegister()
		{
		}

		[Token(Token = "0x6001621")]
		[Address(RVA = "0xD2DEC8", Offset = "0xD2DEC8", VA = "0xD2DEC8", Slot = "4")]
		public override bool IsValid(Localize cmp)
		{
			return default(bool);
		}

		[Token(Token = "0x6001622")]
		[Address(RVA = "0xD2DF00", Offset = "0xD2DF00", VA = "0xD2DF00", Slot = "10")]
		public override eTermType GetPrimaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6001623")]
		[Address(RVA = "0xD2DF08", Offset = "0xD2DF08", VA = "0xD2DF08", Slot = "11")]
		public override eTermType GetSecondaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6001624")]
		[Address(RVA = "0xD2DF10", Offset = "0xD2DF10", VA = "0xD2DF10", Slot = "7")]
		public override bool CanUseSecondaryTerm()
		{
			return default(bool);
		}

		[Token(Token = "0x6001625")]
		[Address(RVA = "0xD2DF18", Offset = "0xD2DF18", VA = "0xD2DF18", Slot = "8")]
		public override bool AllowMainTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6001626")]
		[Address(RVA = "0xD2DF20", Offset = "0xD2DF20", VA = "0xD2DF20", Slot = "9")]
		public override bool AllowSecondTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6001627")]
		[Address(RVA = "0xD2DF28", Offset = "0xD2DF28", VA = "0xD2DF28", Slot = "5")]
		public override void GetFinalTerms(Localize cmp, string Main, string Secondary, out string primaryTerm, out string secondaryTerm)
		{
		}

		[Token(Token = "0x6001628")]
		[Address(RVA = "0xD2DF78", Offset = "0xD2DF78", VA = "0xD2DF78", Slot = "6")]
		public override void DoLocalize(Localize cmp, string mainTranslation, string secondaryTranslation)
		{
		}

		[Token(Token = "0x6001629")]
		[Address(RVA = "0xD2E0D0", Offset = "0xD2E0D0", VA = "0xD2E0D0")]
		public LocalizeTarget_UnityStandard_Child()
		{
		}
	}
	[Token(Token = "0x200030B")]
	public class LocalizeTarget_UnityStandard_MeshRenderer : LocalizeTarget<MeshRenderer>
	{
		[Token(Token = "0x600162A")]
		[Address(RVA = "0xD2E120", Offset = "0xD2E120", VA = "0xD2E120")]
		static LocalizeTarget_UnityStandard_MeshRenderer()
		{
		}

		[Token(Token = "0x600162B")]
		[Address(RVA = "0xD2E124", Offset = "0xD2E124", VA = "0xD2E124")]
		[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0x9F3000", Offset = "0x9F3000")]
		private static void AutoRegister()
		{
		}

		[Token(Token = "0x600162C")]
		[Address(RVA = "0xD2E1D8", Offset = "0xD2E1D8", VA = "0xD2E1D8", Slot = "10")]
		public override eTermType GetPrimaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x600162D")]
		[Address(RVA = "0xD2E1E0", Offset = "0xD2E1E0", VA = "0xD2E1E0", Slot = "11")]
		public override eTermType GetSecondaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x600162E")]
		[Address(RVA = "0xD2E1E8", Offset = "0xD2E1E8", VA = "0xD2E1E8", Slot = "7")]
		public override bool CanUseSecondaryTerm()
		{
			return default(bool);
		}

		[Token(Token = "0x600162F")]
		[Address(RVA = "0xD2E1F0", Offset = "0xD2E1F0", VA = "0xD2E1F0", Slot = "8")]
		public override bool AllowMainTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6001630")]
		[Address(RVA = "0xD2E1F8", Offset = "0xD2E1F8", VA = "0xD2E1F8", Slot = "9")]
		public override bool AllowSecondTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6001631")]
		[Address(RVA = "0xD2E200", Offset = "0xD2E200", VA = "0xD2E200", Slot = "5")]
		public override void GetFinalTerms(Localize cmp, string Main, string Secondary, out string primaryTerm, out string secondaryTerm)
		{
		}

		[Token(Token = "0x6001632")]
		[Address(RVA = "0xD2E41C", Offset = "0xD2E41C", VA = "0xD2E41C", Slot = "6")]
		public override void DoLocalize(Localize cmp, string mainTranslation, string secondaryTranslation)
		{
		}

		[Token(Token = "0x6001633")]
		[Address(RVA = "0xD2E5F4", Offset = "0xD2E5F4", VA = "0xD2E5F4")]
		public LocalizeTarget_UnityStandard_MeshRenderer()
		{
		}
	}
	[Token(Token = "0x200030C")]
	public class LocalizeTargetDesc_Prefab : LocalizeTargetDesc<LocalizeTarget_UnityStandard_Prefab>
	{
		[Token(Token = "0x6001634")]
		[Address(RVA = "0xD2C520", Offset = "0xD2C520", VA = "0xD2C520", Slot = "4")]
		public override bool CanLocalize(Localize cmp)
		{
			return default(bool);
		}

		[Token(Token = "0x6001635")]
		[Address(RVA = "0xD2C528", Offset = "0xD2C528", VA = "0xD2C528")]
		public LocalizeTargetDesc_Prefab()
		{
		}
	}
	[Token(Token = "0x200030D")]
	public class LocalizeTarget_UnityStandard_Prefab : LocalizeTarget<GameObject>
	{
		[Token(Token = "0x6001636")]
		[Address(RVA = "0xD2E644", Offset = "0xD2E644", VA = "0xD2E644")]
		static LocalizeTarget_UnityStandard_Prefab()
		{
		}

		[Token(Token = "0x6001637")]
		[Address(RVA = "0xD2E648", Offset = "0xD2E648", VA = "0xD2E648")]
		[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0x9F3014", Offset = "0x9F3014")]
		private static void AutoRegister()
		{
		}

		[Token(Token = "0x6001638")]
		[Address(RVA = "0xD2E6F0", Offset = "0xD2E6F0", VA = "0xD2E6F0", Slot = "4")]
		public override bool IsValid(Localize cmp)
		{
			return default(bool);
		}

		[Token(Token = "0x6001639")]
		[Address(RVA = "0xD2E6F8", Offset = "0xD2E6F8", VA = "0xD2E6F8", Slot = "10")]
		public override eTermType GetPrimaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x600163A")]
		[Address(RVA = "0xD2E700", Offset = "0xD2E700", VA = "0xD2E700", Slot = "11")]
		public override eTermType GetSecondaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x600163B")]
		[Address(RVA = "0xD2E708", Offset = "0xD2E708", VA = "0xD2E708", Slot = "7")]
		public override bool CanUseSecondaryTerm()
		{
			return default(bool);
		}

		[Token(Token = "0x600163C")]
		[Address(RVA = "0xD2E710", Offset = "0xD2E710", VA = "0xD2E710", Slot = "8")]
		public override bool AllowMainTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x600163D")]
		[Address(RVA = "0xD2E718", Offset = "0xD2E718", VA = "0xD2E718", Slot = "9")]
		public override bool AllowSecondTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x600163E")]
		[Address(RVA = "0xD2E720", Offset = "0xD2E720", VA = "0xD2E720", Slot = "5")]
		public override void GetFinalTerms(Localize cmp, string Main, string Secondary, out string primaryTerm, out string secondaryTerm)
		{
		}

		[Token(Token = "0x600163F")]
		[Address(RVA = "0xD2E770", Offset = "0xD2E770", VA = "0xD2E770", Slot = "6")]
		public override void DoLocalize(Localize cmp, string mainTranslation, string secondaryTranslation)
		{
		}

		[Token(Token = "0x6001640")]
		[Address(RVA = "0xD2E998", Offset = "0xD2E998", VA = "0xD2E998")]
		private Transform InstantiateNewPrefab(Localize cmp, string mainTranslation)
		{
			return null;
		}

		[Token(Token = "0x6001641")]
		[Address(RVA = "0xD2EB54", Offset = "0xD2EB54", VA = "0xD2EB54")]
		public LocalizeTarget_UnityStandard_Prefab()
		{
		}
	}
	[Token(Token = "0x200030E")]
	public class LocalizeTarget_UnityStandard_SpriteRenderer : LocalizeTarget<SpriteRenderer>
	{
		[Token(Token = "0x6001642")]
		[Address(RVA = "0xD2EBA4", Offset = "0xD2EBA4", VA = "0xD2EBA4")]
		static LocalizeTarget_UnityStandard_SpriteRenderer()
		{
		}

		[Token(Token = "0x6001643")]
		[Address(RVA = "0xD2EBA8", Offset = "0xD2EBA8", VA = "0xD2EBA8")]
		[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0x9F3028", Offset = "0x9F3028")]
		private static void AutoRegister()
		{
		}

		[Token(Token = "0x6001644")]
		[Address(RVA = "0xD2EC5C", Offset = "0xD2EC5C", VA = "0xD2EC5C", Slot = "10")]
		public override eTermType GetPrimaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6001645")]
		[Address(RVA = "0xD2EC64", Offset = "0xD2EC64", VA = "0xD2EC64", Slot = "11")]
		public override eTermType GetSecondaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6001646")]
		[Address(RVA = "0xD2EC6C", Offset = "0xD2EC6C", VA = "0xD2EC6C", Slot = "7")]
		public override bool CanUseSecondaryTerm()
		{
			return default(bool);
		}

		[Token(Token = "0x6001647")]
		[Address(RVA = "0xD2EC74", Offset = "0xD2EC74", VA = "0xD2EC74", Slot = "8")]
		public override bool AllowMainTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6001648")]
		[Address(RVA = "0xD2EC7C", Offset = "0xD2EC7C", VA = "0xD2EC7C", Slot = "9")]
		public override bool AllowSecondTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6001649")]
		[Address(RVA = "0xD2EC84", Offset = "0xD2EC84", VA = "0xD2EC84", Slot = "5")]
		public override void GetFinalTerms(Localize cmp, string Main, string Secondary, out string primaryTerm, out string secondaryTerm)
		{
		}

		[Token(Token = "0x600164A")]
		[Address(RVA = "0xD2ED74", Offset = "0xD2ED74", VA = "0xD2ED74", Slot = "6")]
		public override void DoLocalize(Localize cmp, string mainTranslation, string secondaryTranslation)
		{
		}

		[Token(Token = "0x600164B")]
		[Address(RVA = "0xD2EE74", Offset = "0xD2EE74", VA = "0xD2EE74")]
		public LocalizeTarget_UnityStandard_SpriteRenderer()
		{
		}
	}
	[Token(Token = "0x200030F")]
	public class LocalizeTarget_UnityStandard_TextMesh : LocalizeTarget<TextMesh>
	{
		[Token(Token = "0x400167F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private TextAlignment mAlignment_RTL;

		[Token(Token = "0x4001680")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private TextAlignment mAlignment_LTR;

		[Token(Token = "0x4001681")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool mAlignmentWasRTL;

		[Token(Token = "0x4001682")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		private bool mInitializeAlignment;

		[Token(Token = "0x600164C")]
		[Address(RVA = "0xD2EEC4", Offset = "0xD2EEC4", VA = "0xD2EEC4")]
		static LocalizeTarget_UnityStandard_TextMesh()
		{
		}

		[Token(Token = "0x600164D")]
		[Address(RVA = "0xD2EEC8", Offset = "0xD2EEC8", VA = "0xD2EEC8")]
		[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0x9F303C", Offset = "0x9F303C")]
		private static void AutoRegister()
		{
		}

		[Token(Token = "0x600164E")]
		[Address(RVA = "0xD2EF7C", Offset = "0xD2EF7C", VA = "0xD2EF7C", Slot = "10")]
		public override eTermType GetPrimaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x600164F")]
		[Address(RVA = "0xD2EF84", Offset = "0xD2EF84", VA = "0xD2EF84", Slot = "11")]
		public override eTermType GetSecondaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6001650")]
		[Address(RVA = "0xD2EF8C", Offset = "0xD2EF8C", VA = "0xD2EF8C", Slot = "7")]
		public override bool CanUseSecondaryTerm()
		{
			return default(bool);
		}

		[Token(Token = "0x6001651")]
		[Address(RVA = "0xD2EF94", Offset = "0xD2EF94", VA = "0xD2EF94", Slot = "8")]
		public override bool AllowMainTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6001652")]
		[Address(RVA = "0xD2EF9C", Offset = "0xD2EF9C", VA = "0xD2EF9C", Slot = "9")]
		public override bool AllowSecondTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6001653")]
		[Address(RVA = "0xD2EFA4", Offset = "0xD2EFA4", VA = "0xD2EFA4", Slot = "5")]
		public override void GetFinalTerms(Localize cmp, string Main, string Secondary, out string primaryTerm, out string secondaryTerm)
		{
		}

		[Token(Token = "0x6001654")]
		[Address(RVA = "0xD2F0E0", Offset = "0xD2F0E0", VA = "0xD2F0E0", Slot = "6")]
		public override void DoLocalize(Localize cmp, string mainTranslation, string secondaryTranslation)
		{
		}

		[Token(Token = "0x6001655")]
		[Address(RVA = "0xD2F39C", Offset = "0xD2F39C", VA = "0xD2F39C")]
		public LocalizeTarget_UnityStandard_TextMesh()
		{
		}
	}
	[Token(Token = "0x2000310")]
	public class LocalizeTarget_UnityStandard_VideoPlayer : LocalizeTarget<VideoPlayer>
	{
		[Token(Token = "0x6001656")]
		[Address(RVA = "0xD2F3FC", Offset = "0xD2F3FC", VA = "0xD2F3FC")]
		static LocalizeTarget_UnityStandard_VideoPlayer()
		{
		}

		[Token(Token = "0x6001657")]
		[Address(RVA = "0xD2F400", Offset = "0xD2F400", VA = "0xD2F400")]
		[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0x9F3050", Offset = "0x9F3050")]
		private static void AutoRegister()
		{
		}

		[Token(Token = "0x6001658")]
		[Address(RVA = "0xD2F4B4", Offset = "0xD2F4B4", VA = "0xD2F4B4", Slot = "10")]
		public override eTermType GetPrimaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6001659")]
		[Address(RVA = "0xD2F4BC", Offset = "0xD2F4BC", VA = "0xD2F4BC", Slot = "11")]
		public override eTermType GetSecondaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x600165A")]
		[Address(RVA = "0xD2F4C4", Offset = "0xD2F4C4", VA = "0xD2F4C4", Slot = "7")]
		public override bool CanUseSecondaryTerm()
		{
			return default(bool);
		}

		[Token(Token = "0x600165B")]
		[Address(RVA = "0xD2F4CC", Offset = "0xD2F4CC", VA = "0xD2F4CC", Slot = "8")]
		public override bool AllowMainTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x600165C")]
		[Address(RVA = "0xD2F4D4", Offset = "0xD2F4D4", VA = "0xD2F4D4", Slot = "9")]
		public override bool AllowSecondTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x600165D")]
		[Address(RVA = "0xD2F4DC", Offset = "0xD2F4DC", VA = "0xD2F4DC", Slot = "5")]
		public override void GetFinalTerms(Localize cmp, string Main, string Secondary, out string primaryTerm, out string secondaryTerm)
		{
		}

		[Token(Token = "0x600165E")]
		[Address(RVA = "0xD2F5CC", Offset = "0xD2F5CC", VA = "0xD2F5CC", Slot = "6")]
		public override void DoLocalize(Localize cmp, string mainTranslation, string secondaryTranslation)
		{
		}

		[Token(Token = "0x600165F")]
		[Address(RVA = "0xD2F6CC", Offset = "0xD2F6CC", VA = "0xD2F6CC")]
		public LocalizeTarget_UnityStandard_VideoPlayer()
		{
		}
	}
	[Token(Token = "0x2000311")]
	public class LocalizeTarget_UnityUI_Image : LocalizeTarget<Image>
	{
		[Token(Token = "0x6001660")]
		[Address(RVA = "0xD2F71C", Offset = "0xD2F71C", VA = "0xD2F71C")]
		static LocalizeTarget_UnityUI_Image()
		{
		}

		[Token(Token = "0x6001661")]
		[Address(RVA = "0xD2F720", Offset = "0xD2F720", VA = "0xD2F720")]
		[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0x9F3064", Offset = "0x9F3064")]
		private static void AutoRegister()
		{
		}

		[Token(Token = "0x6001662")]
		[Address(RVA = "0xD2F7D4", Offset = "0xD2F7D4", VA = "0xD2F7D4", Slot = "7")]
		public override bool CanUseSecondaryTerm()
		{
			return default(bool);
		}

		[Token(Token = "0x6001663")]
		[Address(RVA = "0xD2F7DC", Offset = "0xD2F7DC", VA = "0xD2F7DC", Slot = "8")]
		public override bool AllowMainTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6001664")]
		[Address(RVA = "0xD2F7E4", Offset = "0xD2F7E4", VA = "0xD2F7E4", Slot = "9")]
		public override bool AllowSecondTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6001665")]
		[Address(RVA = "0xD2F7EC", Offset = "0xD2F7EC", VA = "0xD2F7EC", Slot = "10")]
		public override eTermType GetPrimaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6001666")]
		[Address(RVA = "0xD2F87C", Offset = "0xD2F87C", VA = "0xD2F87C", Slot = "11")]
		public override eTermType GetSecondaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6001667")]
		[Address(RVA = "0xD2F884", Offset = "0xD2F884", VA = "0xD2F884", Slot = "5")]
		public override void GetFinalTerms(Localize cmp, string Main, string Secondary, out string primaryTerm, out string secondaryTerm)
		{
		}

		[Token(Token = "0x6001668")]
		[Address(RVA = "0xD2FA28", Offset = "0xD2FA28", VA = "0xD2FA28", Slot = "6")]
		public override void DoLocalize(Localize cmp, string mainTranslation, string secondaryTranslation)
		{
		}

		[Token(Token = "0x6001669")]
		[Address(RVA = "0xD2FB1C", Offset = "0xD2FB1C", VA = "0xD2FB1C")]
		public LocalizeTarget_UnityUI_Image()
		{
		}
	}
	[Token(Token = "0x2000312")]
	public class LocalizeTarget_UnityUI_RawImage : LocalizeTarget<RawImage>
	{
		[Token(Token = "0x600166A")]
		[Address(RVA = "0xD2FB6C", Offset = "0xD2FB6C", VA = "0xD2FB6C")]
		static LocalizeTarget_UnityUI_RawImage()
		{
		}

		[Token(Token = "0x600166B")]
		[Address(RVA = "0xD2FB70", Offset = "0xD2FB70", VA = "0xD2FB70")]
		[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0x9F3078", Offset = "0x9F3078")]
		private static void AutoRegister()
		{
		}

		[Token(Token = "0x600166C")]
		[Address(RVA = "0xD2FC24", Offset = "0xD2FC24", VA = "0xD2FC24", Slot = "10")]
		public override eTermType GetPrimaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x600166D")]
		[Address(RVA = "0xD2FC2C", Offset = "0xD2FC2C", VA = "0xD2FC2C", Slot = "11")]
		public override eTermType GetSecondaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x600166E")]
		[Address(RVA = "0xD2FC34", Offset = "0xD2FC34", VA = "0xD2FC34", Slot = "7")]
		public override bool CanUseSecondaryTerm()
		{
			return default(bool);
		}

		[Token(Token = "0x600166F")]
		[Address(RVA = "0xD2FC3C", Offset = "0xD2FC3C", VA = "0xD2FC3C", Slot = "8")]
		public override bool AllowMainTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6001670")]
		[Address(RVA = "0xD2FC44", Offset = "0xD2FC44", VA = "0xD2FC44", Slot = "9")]
		public override bool AllowSecondTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6001671")]
		[Address(RVA = "0xD2FC4C", Offset = "0xD2FC4C", VA = "0xD2FC4C", Slot = "5")]
		public override void GetFinalTerms(Localize cmp, string Main, string Secondary, out string primaryTerm, out string secondaryTerm)
		{
		}

		[Token(Token = "0x6001672")]
		[Address(RVA = "0xD2FD40", Offset = "0xD2FD40", VA = "0xD2FD40", Slot = "6")]
		public override void DoLocalize(Localize cmp, string mainTranslation, string secondaryTranslation)
		{
		}

		[Token(Token = "0x6001673")]
		[Address(RVA = "0xD2FE34", Offset = "0xD2FE34", VA = "0xD2FE34")]
		public LocalizeTarget_UnityUI_RawImage()
		{
		}
	}
	[Token(Token = "0x2000313")]
	public class LocalizeTarget_UnityUI_Text : LocalizeTarget<Text>
	{
		[Token(Token = "0x4001683")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private TextAnchor mAlignment_RTL;

		[Token(Token = "0x4001684")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private TextAnchor mAlignment_LTR;

		[Token(Token = "0x4001685")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool mAlignmentWasRTL;

		[Token(Token = "0x4001686")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		private bool mInitializeAlignment;

		[Token(Token = "0x6001674")]
		[Address(RVA = "0xD2FE84", Offset = "0xD2FE84", VA = "0xD2FE84")]
		static LocalizeTarget_UnityUI_Text()
		{
		}

		[Token(Token = "0x6001675")]
		[Address(RVA = "0xD2FE88", Offset = "0xD2FE88", VA = "0xD2FE88")]
		[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0x9F308C", Offset = "0x9F308C")]
		private static void AutoRegister()
		{
		}

		[Token(Token = "0x6001676")]
		[Address(RVA = "0xD2FF3C", Offset = "0xD2FF3C", VA = "0xD2FF3C", Slot = "10")]
		public override eTermType GetPrimaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6001677")]
		[Address(RVA = "0xD2FF44", Offset = "0xD2FF44", VA = "0xD2FF44", Slot = "11")]
		public override eTermType GetSecondaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6001678")]
		[Address(RVA = "0xD2FF4C", Offset = "0xD2FF4C", VA = "0xD2FF4C", Slot = "7")]
		public override bool CanUseSecondaryTerm()
		{
			return default(bool);
		}

		[Token(Token = "0x6001679")]
		[Address(RVA = "0xD2FF54", Offset = "0xD2FF54", VA = "0xD2FF54", Slot = "8")]
		public override bool AllowMainTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x600167A")]
		[Address(RVA = "0xD2FF5C", Offset = "0xD2FF5C", VA = "0xD2FF5C", Slot = "9")]
		public override bool AllowSecondTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x600167B")]
		[Address(RVA = "0xD2FF64", Offset = "0xD2FF64", VA = "0xD2FF64", Slot = "5")]
		public override void GetFinalTerms(Localize cmp, string Main, string Secondary, out string primaryTerm, out string secondaryTerm)
		{
		}

		[Token(Token = "0x600167C")]
		[Address(RVA = "0xD300A4", Offset = "0xD300A4", VA = "0xD300A4", Slot = "6")]
		public override void DoLocalize(Localize cmp, string mainTranslation, string secondaryTranslation)
		{
		}

		[Token(Token = "0x600167D")]
		[Address(RVA = "0xD30388", Offset = "0xD30388", VA = "0xD30388")]
		private void InitAlignment(bool isRTL, TextAnchor alignment, out TextAnchor alignLTR, out TextAnchor alignRTL)
		{
		}

		[Token(Token = "0x600167E")]
		[Address(RVA = "0xD30448", Offset = "0xD30448", VA = "0xD30448")]
		public LocalizeTarget_UnityUI_Text()
		{
		}
	}
	[Token(Token = "0x2000314")]
	public enum eTermType
	{
		[Token(Token = "0x4001688")]
		Text,
		[Token(Token = "0x4001689")]
		Font,
		[Token(Token = "0x400168A")]
		Texture,
		[Token(Token = "0x400168B")]
		AudioClip,
		[Token(Token = "0x400168C")]
		GameObject,
		[Token(Token = "0x400168D")]
		Sprite,
		[Token(Token = "0x400168E")]
		Material,
		[Token(Token = "0x400168F")]
		Child,
		[Token(Token = "0x4001690")]
		Mesh,
		[Token(Token = "0x4001691")]
		TextMeshPFont,
		[Token(Token = "0x4001692")]
		Object,
		[Token(Token = "0x4001693")]
		Video
	}
	[Token(Token = "0x2000315")]
	public enum TranslationFlag : byte
	{
		[Token(Token = "0x4001695")]
		Normal = 1,
		[Token(Token = "0x4001696")]
		AutoTranslated
	}
	[Serializable]
	[Token(Token = "0x2000316")]
	public class TermData
	{
		[Token(Token = "0x4001697")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string Term;

		[Token(Token = "0x4001698")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public eTermType TermType;

		[NonSerialized]
		[Token(Token = "0x4001699")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string Description;

		[Token(Token = "0x400169A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string[] Languages;

		[Token(Token = "0x400169B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public byte[] Flags;

		[Token(Token = "0x400169C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private string[] Languages_Touch;

		[Token(Token = "0x600167F")]
		[Address(RVA = "0xD3BB20", Offset = "0xD3BB20", VA = "0xD3BB20")]
		public string GetTranslation(int idx, [Optional] string specialization, bool editMode = false)
		{
			return null;
		}

		[Token(Token = "0x6001680")]
		[Address(RVA = "0xD3BC30", Offset = "0xD3BC30", VA = "0xD3BC30")]
		public void SetTranslation(int idx, string translation, [Optional] string specialization)
		{
		}

		[Token(Token = "0x6001681")]
		[Address(RVA = "0xD3BD28", Offset = "0xD3BD28", VA = "0xD3BD28")]
		public void RemoveSpecialization(string specialization)
		{
		}

		[Token(Token = "0x6001682")]
		[Address(RVA = "0xD3BD88", Offset = "0xD3BD88", VA = "0xD3BD88")]
		public void RemoveSpecialization(int idx, string specialization)
		{
		}

		[Token(Token = "0x6001683")]
		[Address(RVA = "0xD3BF14", Offset = "0xD3BF14", VA = "0xD3BF14")]
		public bool IsAutoTranslated(int idx, bool IsTouch)
		{
			return default(bool);
		}

		[Token(Token = "0x6001684")]
		[Address(RVA = "0xD3BF54", Offset = "0xD3BF54", VA = "0xD3BF54")]
		public void Validate()
		{
		}

		[Token(Token = "0x6001685")]
		[Address(RVA = "0xD3C1A4", Offset = "0xD3C1A4", VA = "0xD3C1A4")]
		public bool IsTerm(string name, bool allowCategoryMistmatch)
		{
			return default(bool);
		}

		[Token(Token = "0x6001686")]
		[Address(RVA = "0xD3C23C", Offset = "0xD3C23C", VA = "0xD3C23C")]
		public bool HasSpecializations()
		{
			return default(bool);
		}

		[Token(Token = "0x6001687")]
		[Address(RVA = "0xD3C314", Offset = "0xD3C314", VA = "0xD3C314")]
		public List<string> GetAllSpecializations()
		{
			return null;
		}

		[Token(Token = "0x6001688")]
		[Address(RVA = "0xD3C3FC", Offset = "0xD3C3FC", VA = "0xD3C3FC")]
		public TermData()
		{
		}
	}
	[Token(Token = "0x2000317")]
	public class TermsPopup : PropertyAttribute
	{
		[Token(Token = "0x400169D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9EDE4C", Offset = "0x9EDE4C")]
		private string <Filter>k__BackingField;

		[Token(Token = "0x17000197")]
		public string Filter
		{
			[Token(Token = "0x600168A")]
			[Address(RVA = "0xD3C4E0", Offset = "0xD3C4E0", VA = "0xD3C4E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F30A0", Offset = "0x9F30A0")]
			get
			{
				return null;
			}
			[Token(Token = "0x600168B")]
			[Address(RVA = "0xD3C4E8", Offset = "0xD3C4E8", VA = "0xD3C4E8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9F30B0", Offset = "0x9F30B0")]
			private set
			{
			}
		}

		[Token(Token = "0x6001689")]
		[Address(RVA = "0xD3C4AC", Offset = "0xD3C4AC", VA = "0xD3C4AC")]
		public TermsPopup(string filter = "")
		{
		}
	}
	[Token(Token = "0x2000318")]
	public class AutoChangeCultureInfo : MonoBehaviour
	{
		[Token(Token = "0x600168C")]
		[Address(RVA = "0xE30584", Offset = "0xE30584", VA = "0xE30584")]
		public void Start()
		{
		}

		[Token(Token = "0x600168D")]
		[Address(RVA = "0xE305E8", Offset = "0xE305E8", VA = "0xE305E8")]
		public AutoChangeCultureInfo()
		{
		}
	}
	[Token(Token = "0x2000319")]
	public class CoroutineManager : MonoBehaviour
	{
		[Token(Token = "0x400169E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static CoroutineManager mInstance;

		[Token(Token = "0x17000198")]
		private static CoroutineManager pInstance
		{
			[Token(Token = "0x600168E")]
			[Address(RVA = "0xE30CBC", Offset = "0xE30CBC", VA = "0xE30CBC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600168F")]
		[Address(RVA = "0xE30DF0", Offset = "0xE30DF0", VA = "0xE30DF0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001690")]
		[Address(RVA = "0xE30E84", Offset = "0xE30E84", VA = "0xE30E84")]
		public static Coroutine Start(IEnumerator coroutine)
		{
			return null;
		}

		[Token(Token = "0x6001691")]
		[Address(RVA = "0xE30EB4", Offset = "0xE30EB4", VA = "0xE30EB4")]
		public CoroutineManager()
		{
		}
	}
	[Token(Token = "0x200031A")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x9E78AC", Offset = "0x9E78AC")]
	public class CustomLocalizeCallback : MonoBehaviour
	{
		[Token(Token = "0x400169F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UnityEvent _OnLocalize;

		[Token(Token = "0x6001692")]
		[Address(RVA = "0xE30EBC", Offset = "0xE30EBC", VA = "0xE30EBC")]
		public void OnEnable()
		{
		}

		[Token(Token = "0x6001693")]
		[Address(RVA = "0xE30F80", Offset = "0xE30F80", VA = "0xE30F80")]
		public void OnDisable()
		{
		}

		[Token(Token = "0x6001694")]
		[Address(RVA = "0xE31014", Offset = "0xE31014", VA = "0xE31014")]
		public void OnLocalize()
		{
		}

		[Token(Token = "0x6001695")]
		[Address(RVA = "0xE31030", Offset = "0xE31030", VA = "0xE31030")]
		public CustomLocalizeCallback()
		{
		}
	}
	[Token(Token = "0x200031B")]
	public class HindiFixer
	{
		[Serializable]
		[Token(Token = "0x200051B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E85B8", Offset = "0x9E85B8")]
		private sealed class <>c
		{
			[Token(Token = "0x4001B1E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001B1F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<char, bool> <>9__0_0;

			[Token(Token = "0x6001E97")]
			[Address(RVA = "0x141E598", Offset = "0x141E598", VA = "0x141E598")]
			public <>c()
			{
			}

			[Token(Token = "0x6001E98")]
			[Address(RVA = "0x141E5A0", Offset = "0x141E5A0", VA = "0x141E5A0")]
			internal bool <Fix>b__0_0(char x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001696")]
		[Address(RVA = "0x141E0D0", Offset = "0x141E0D0", VA = "0x141E0D0")]
		internal static string Fix(string text)
		{
			return null;
		}

		[Token(Token = "0x6001697")]
		[Address(RVA = "0x141E528", Offset = "0x141E528", VA = "0x141E528")]
		public HindiFixer()
		{
		}
	}
	[Token(Token = "0x200031C")]
	public static class I2Utils
	{
		[Serializable]
		[Token(Token = "0x200051C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E85C8", Offset = "0x9E85C8")]
		private sealed class <>c
		{
			[Token(Token = "0x4001B20")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001B21")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<char, bool> <>9__6_0;

			[Token(Token = "0x6001E9A")]
			[Address(RVA = "0x1420650", Offset = "0x1420650", VA = "0x1420650")]
			public <>c()
			{
			}

			[Token(Token = "0x6001E9B")]
			[Address(RVA = "0x1420658", Offset = "0x1420658", VA = "0x1420658")]
			internal bool <SplitLine>b__6_0(char c)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x40016A0")]
		public const string ValidChars = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789_";

		[Token(Token = "0x40016A1")]
		public const string NumberChars = "0123456789";

		[Token(Token = "0x40016A2")]
		public const string ValidNameSymbols = ".-_$#@*()[]{}+:?!&',^=<>~`";

		[Token(Token = "0x6001698")]
		[Address(RVA = "0x141F794", Offset = "0x141F794", VA = "0x141F794")]
		public static string ReverseText(string source)
		{
			return null;
		}

		[Token(Token = "0x6001699")]
		[Address(RVA = "0x141F86C", Offset = "0x141F86C", VA = "0x141F86C")]
		public static string RemoveNonASCII(string text, bool allowCategory = false)
		{
			return null;
		}

		[Token(Token = "0x600169A")]
		[Address(RVA = "0x141FA9C", Offset = "0x141FA9C", VA = "0x141FA9C")]
		public static string GetValidTermName(string text, bool allowCategory = false)
		{
			return null;
		}

		[Token(Token = "0x600169B")]
		[Address(RVA = "0x141FB48", Offset = "0x141FB48", VA = "0x141FB48")]
		public static string SplitLine(string line, int maxCharacters)
		{
			return null;
		}

		[Token(Token = "0x600169C")]
		[Address(RVA = "0x141FDF0", Offset = "0x141FDF0", VA = "0x141FDF0")]
		public static bool FindNextTag(string line, int iStart, out int tagStart, out int tagEnd)
		{
			return default(bool);
		}

		[Token(Token = "0x600169D")]
		[Address(RVA = "0x141FAC8", Offset = "0x141FAC8", VA = "0x141FAC8")]
		public static string RemoveTags(string text)
		{
			return null;
		}

		[Token(Token = "0x600169E")]
		[Address(RVA = "0x141FF78", Offset = "0x141FF78", VA = "0x141FF78")]
		public static bool RemoveResourcesPath(ref string sPath)
		{
			return default(bool);
		}

		[Token(Token = "0x600169F")]
		[Address(RVA = "0x14201FC", Offset = "0x14201FC", VA = "0x14201FC")]
		public static bool IsPlaying()
		{
			return default(bool);
		}

		[Token(Token = "0x60016A0")]
		[Address(RVA = "0x1420204", Offset = "0x1420204", VA = "0x1420204")]
		public static string GetPath(this Transform tr)
		{
			return null;
		}

		[Token(Token = "0x60016A1")]
		[Address(RVA = "0x14202D8", Offset = "0x14202D8", VA = "0x14202D8")]
		public static Transform FindObject(string objectPath)
		{
			return null;
		}

		[Token(Token = "0x60016A2")]
		[Address(RVA = "0x1420348", Offset = "0x1420348", VA = "0x1420348")]
		public static Transform FindObject(Scene scene, string objectPath)
		{
			return null;
		}

		[Token(Token = "0x60016A3")]
		[Address(RVA = "0x1420494", Offset = "0x1420494", VA = "0x1420494")]
		public static Transform FindObject(Transform root, string objectPath)
		{
			return null;
		}

		[Token(Token = "0x60016A4")]
		public static H FindInParents<H>(Transform tr) where H : Component
		{
			return null;
		}

		[Token(Token = "0x60016A5")]
		[Address(RVA = "0x141D190", Offset = "0x141D190", VA = "0x141D190")]
		public static string GetCaptureMatch(Match match)
		{
			return null;
		}

		[Token(Token = "0x60016A6")]
		[Address(RVA = "0x14205D0", Offset = "0x14205D0", VA = "0x14205D0")]
		public static void SendWebRequest(UnityWebRequest www)
		{
		}
	}
	[Token(Token = "0x200031D")]
	public interface ILocalizationParamsManager
	{
		[Token(Token = "0x60016A7")]
		string GetParameterValue(string Param);
	}
	[Token(Token = "0x200031E")]
	public class LocalizationParamsManager : MonoBehaviour, ILocalizationParamsManager
	{
		[Serializable]
		[Token(Token = "0x200051D")]
		public struct ParamValue
		{
			[Token(Token = "0x4001B22")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string Name;

			[Token(Token = "0x4001B23")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public string Value;
		}

		[Token(Token = "0x40016A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public List<ParamValue> _Params;

		[Token(Token = "0x40016A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool _IsGlobalManager;

		[Token(Token = "0x60016A8")]
		[Address(RVA = "0x1430F18", Offset = "0x1430F18", VA = "0x1430F18", Slot = "4")]
		public string GetParameterValue(string ParamName)
		{
			return null;
		}

		[Token(Token = "0x60016A9")]
		[Address(RVA = "0x1431004", Offset = "0x1431004", VA = "0x1431004")]
		public void SetParameterValue(string ParamName, string ParamValue, bool localize = true)
		{
		}

		[Token(Token = "0x60016AA")]
		[Address(RVA = "0x143118C", Offset = "0x143118C", VA = "0x143118C")]
		public void OnLocalize()
		{
		}

		[Token(Token = "0x60016AB")]
		[Address(RVA = "0x1431238", Offset = "0x1431238", VA = "0x1431238", Slot = "5")]
		public virtual void OnEnable()
		{
		}

		[Token(Token = "0x60016AC")]
		[Address(RVA = "0x1431248", Offset = "0x1431248", VA = "0x1431248")]
		public void DoAutoRegister()
		{
		}

		[Token(Token = "0x60016AD")]
		[Address(RVA = "0x1431320", Offset = "0x1431320", VA = "0x1431320")]
		public void OnDisable()
		{
		}

		[Token(Token = "0x60016AE")]
		[Address(RVA = "0x14313A4", Offset = "0x14313A4", VA = "0x14313A4")]
		public LocalizationParamsManager()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200031F")]
	public struct LocalizedString
	{
		[Token(Token = "0x40016A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string mTerm;

		[Token(Token = "0x40016A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public bool mRTL_IgnoreArabicFix;

		[Token(Token = "0x40016A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int mRTL_MaxLineLength;

		[Token(Token = "0x40016A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool mRTL_ConvertNumbers;

		[Token(Token = "0x40016A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public bool m_DontLocalizeParameters;

		[Token(Token = "0x60016AF")]
		[Address(RVA = "0xD304A8", Offset = "0xD304A8", VA = "0xD304A8")]
		public static implicit operator string(LocalizedString s)
		{
			return null;
		}

		[Token(Token = "0x60016B0")]
		[Address(RVA = "0xD30584", Offset = "0xD30584", VA = "0xD30584")]
		public static implicit operator LocalizedString(string term)
		{
			return default(LocalizedString);
		}

		[Token(Token = "0x60016B1")]
		[Address(RVA = "0xD305C8", Offset = "0xD305C8", VA = "0xD305C8")]
		public LocalizedString(LocalizedString str)
		{
		}

		[Token(Token = "0x60016B2")]
		[Address(RVA = "0xD304AC", Offset = "0xD304AC", VA = "0xD304AC", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x2000320")]
	public class RTLFixer
	{
		[Token(Token = "0x60016B3")]
		[Address(RVA = "0xD30D68", Offset = "0xD30D68", VA = "0xD30D68")]
		public static string Fix(string str)
		{
			return null;
		}

		[Token(Token = "0x60016B4")]
		[Address(RVA = "0xD31014", Offset = "0xD31014", VA = "0xD31014")]
		public static string Fix(string str, bool rtl)
		{
			return null;
		}

		[Token(Token = "0x60016B5")]
		[Address(RVA = "0xD30D74", Offset = "0xD30D74", VA = "0xD30D74")]
		public static string Fix(string str, bool showTashkeel, bool useHinduNumbers)
		{
			return null;
		}

		[Token(Token = "0x60016B6")]
		[Address(RVA = "0xD31F54", Offset = "0xD31F54", VA = "0xD31F54")]
		public RTLFixer()
		{
		}
	}
	[Token(Token = "0x2000321")]
	internal enum IsolatedArabicLetters
	{
		[Token(Token = "0x40016AB")]
		Hamza = 65152,
		[Token(Token = "0x40016AC")]
		Alef = 65165,
		[Token(Token = "0x40016AD")]
		AlefHamza = 65155,
		[Token(Token = "0x40016AE")]
		WawHamza = 65157,
		[Token(Token = "0x40016AF")]
		AlefMaksoor = 65159,
		[Token(Token = "0x40016B0")]
		AlefMaksora = 64508,
		[Token(Token = "0x40016B1")]
		HamzaNabera = 65161,
		[Token(Token = "0x40016B2")]
		Ba = 65167,
		[Token(Token = "0x40016B3")]
		Ta = 65173,
		[Token(Token = "0x40016B4")]
		Tha2 = 65177,
		[Token(Token = "0x40016B5")]
		Jeem = 65181,
		[Token(Token = "0x40016B6")]
		H7aa = 65185,
		[Token(Token = "0x40016B7")]
		Khaa2 = 65189,
		[Token(Token = "0x40016B8")]
		Dal = 65193,
		[Token(Token = "0x40016B9")]
		Thal = 65195,
		[Token(Token = "0x40016BA")]
		Ra2 = 65197,
		[Token(Token = "0x40016BB")]
		Zeen = 65199,
		[Token(Token = "0x40016BC")]
		Seen = 65201,
		[Token(Token = "0x40016BD")]
		Sheen = 65205,
		[Token(Token = "0x40016BE")]
		S9a = 65209,
		[Token(Token = "0x40016BF")]
		Dha = 65213,
		[Token(Token = "0x40016C0")]
		T6a = 65217,
		[Token(Token = "0x40016C1")]
		T6ha = 65221,
		[Token(Token = "0x40016C2")]
		Ain = 65225,
		[Token(Token = "0x40016C3")]
		Gain = 65229,
		[Token(Token = "0x40016C4")]
		Fa = 65233,
		[Token(Token = "0x40016C5")]
		Gaf = 65237,
		[Token(Token = "0x40016C6")]
		Kaf = 65241,
		[Token(Token = "0x40016C7")]
		Lam = 65245,
		[Token(Token = "0x40016C8")]
		Meem = 65249,
		[Token(Token = "0x40016C9")]
		Noon = 65253,
		[Token(Token = "0x40016CA")]
		Ha = 65257,
		[Token(Token = "0x40016CB")]
		Waw = 65261,
		[Token(Token = "0x40016CC")]
		Ya = 65265,
		[Token(Token = "0x40016CD")]
		AlefMad = 65153,
		[Token(Token = "0x40016CE")]
		TaMarboota = 65171,
		[Token(Token = "0x40016CF")]
		PersianPe = 64342,
		[Token(Token = "0x40016D0")]
		PersianChe = 64378,
		[Token(Token = "0x40016D1")]
		PersianZe = 64394,
		[Token(Token = "0x40016D2")]
		PersianGaf = 64402,
		[Token(Token = "0x40016D3")]
		PersianGaf2 = 64398
	}
	[Token(Token = "0x2000322")]
	internal enum GeneralArabicLetters
	{
		[Token(Token = "0x40016D5")]
		Hamza = 1569,
		[Token(Token = "0x40016D6")]
		Alef = 1575,
		[Token(Token = "0x40016D7")]
		AlefHamza = 1571,
		[Token(Token = "0x40016D8")]
		WawHamza = 1572,
		[Token(Token = "0x40016D9")]
		AlefMaksoor = 1573,
		[Token(Token = "0x40016DA")]
		AlefMagsora = 1609,
		[Token(Token = "0x40016DB")]
		HamzaNabera = 1574,
		[Token(Token = "0x40016DC")]
		Ba = 1576,
		[Token(Token = "0x40016DD")]
		Ta = 1578,
		[Token(Token = "0x40016DE")]
		Tha2 = 1579,
		[Token(Token = "0x40016DF")]
		Jeem = 1580,
		[Token(Token = "0x40016E0")]
		H7aa = 1581,
		[Token(Token = "0x40016E1")]
		Khaa2 = 1582,
		[Token(Token = "0x40016E2")]
		Dal = 1583,
		[Token(Token = "0x40016E3")]
		Thal = 1584,
		[Token(Token = "0x40016E4")]
		Ra2 = 1585,
		[Token(Token = "0x40016E5")]
		Zeen = 1586,
		[Token(Token = "0x40016E6")]
		Seen = 1587,
		[Token(Token = "0x40016E7")]
		Sheen = 1588,
		[Token(Token = "0x40016E8")]
		S9a = 1589,
		[Token(Token = "0x40016E9")]
		Dha = 1590,
		[Token(Token = "0x40016EA")]
		T6a = 1591,
		[Token(Token = "0x40016EB")]
		T6ha = 1592,
		[Token(Token = "0x40016EC")]
		Ain = 1593,
		[Token(Token = "0x40016ED")]
		Gain = 1594,
		[Token(Token = "0x40016EE")]
		Fa = 1601,
		[Token(Token = "0x40016EF")]
		Gaf = 1602,
		[Token(Token = "0x40016F0")]
		Kaf = 1603,
		[Token(Token = "0x40016F1")]
		Lam = 1604,
		[Token(Token = "0x40016F2")]
		Meem = 1605,
		[Token(Token = "0x40016F3")]
		Noon = 1606,
		[Token(Token = "0x40016F4")]
		Ha = 1607,
		[Token(Token = "0x40016F5")]
		Waw = 1608,
		[Token(Token = "0x40016F6")]
		Ya = 1610,
		[Token(Token = "0x40016F7")]
		AlefMad = 1570,
		[Token(Token = "0x40016F8")]
		TaMarboota = 1577,
		[Token(Token = "0x40016F9")]
		PersianPe = 1662,
		[Token(Token = "0x40016FA")]
		PersianChe = 1670,
		[Token(Token = "0x40016FB")]
		PersianZe = 1688,
		[Token(Token = "0x40016FC")]
		PersianGaf = 1711,
		[Token(Token = "0x40016FD")]
		PersianGaf2 = 1705
	}
	[Token(Token = "0x2000323")]
	internal class ArabicMapping
	{
		[Token(Token = "0x40016FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int from;

		[Token(Token = "0x40016FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int to;

		[Token(Token = "0x60016B7")]
		[Address(RVA = "0xE2F8D0", Offset = "0xE2F8D0", VA = "0xE2F8D0")]
		public ArabicMapping(int from, int to)
		{
		}
	}
	[Token(Token = "0x2000324")]
	internal class ArabicTable
	{
		[Token(Token = "0x4001700")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static List<ArabicMapping> mapList;

		[Token(Token = "0x4001701")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static ArabicTable arabicMapper;

		[Token(Token = "0x17000199")]
		internal static ArabicTable ArabicMapper
		{
			[Token(Token = "0x60016B9")]
			[Address(RVA = "0xE303F4", Offset = "0xE303F4", VA = "0xE303F4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60016B8")]
		[Address(RVA = "0xE2F908", Offset = "0xE2F908", VA = "0xE2F908")]
		private ArabicTable()
		{
		}

		[Token(Token = "0x60016BA")]
		[Address(RVA = "0xE30478", Offset = "0xE30478", VA = "0xE30478")]
		internal int Convert(int toBeConverted)
		{
			return default(int);
		}
	}
	[Token(Token = "0x2000325")]
	internal class TashkeelLocation
	{
		[Token(Token = "0x4001702")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public char tashkeel;

		[Token(Token = "0x4001703")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int position;

		[Token(Token = "0x60016BB")]
		[Address(RVA = "0xD32504", Offset = "0xD32504", VA = "0xD32504")]
		public TashkeelLocation(char tashkeel, int position)
		{
		}
	}
	[Token(Token = "0x2000326")]
	internal class RTLFixerTool
	{
		[Token(Token = "0x4001704")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal static bool showTashkeel;

		[Token(Token = "0x4001705")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		internal static bool useHinduNumbers;

		[Token(Token = "0x60016BC")]
		[Address(RVA = "0xD31F5C", Offset = "0xD31F5C", VA = "0xD31F5C")]
		internal static string RemoveTashkeel(string str, out List<TashkeelLocation> tashkeelLocation)
		{
			return null;
		}

		[Token(Token = "0x60016BD")]
		[Address(RVA = "0xD32540", Offset = "0xD32540", VA = "0xD32540")]
		internal static char[] ReturnTashkeel(char[] letters, List<TashkeelLocation> tashkeelLocation)
		{
			return null;
		}

		[Token(Token = "0x60016BE")]
		[Address(RVA = "0xD31248", Offset = "0xD31248", VA = "0xD31248")]
		internal static string FixLine(string str)
		{
			return null;
		}

		[Token(Token = "0x60016BF")]
		[Address(RVA = "0xD3273C", Offset = "0xD3273C", VA = "0xD3273C")]
		internal static bool IsIgnoredCharacter(char ch)
		{
			return default(bool);
		}

		[Token(Token = "0x60016C0")]
		[Address(RVA = "0xD32D9C", Offset = "0xD32D9C", VA = "0xD32D9C")]
		internal static bool IsLeadingLetter(char[] letters, int index)
		{
			return default(bool);
		}

		[Token(Token = "0x60016C1")]
		[Address(RVA = "0xD32C38", Offset = "0xD32C38", VA = "0xD32C38")]
		internal static bool IsFinishingLetter(char[] letters, int index)
		{
			return default(bool);
		}

		[Token(Token = "0x60016C2")]
		[Address(RVA = "0xD328B8", Offset = "0xD328B8", VA = "0xD328B8")]
		internal static bool IsMiddleLetter(char[] letters, int index)
		{
			return default(bool);
		}

		[Token(Token = "0x60016C3")]
		[Address(RVA = "0xD330D8", Offset = "0xD330D8", VA = "0xD330D8")]
		public RTLFixerTool()
		{
		}
	}
	[Token(Token = "0x2000327")]
	public class RegisterCallback_AllowSyncFromGoogle : MonoBehaviour
	{
		[Token(Token = "0x60016C5")]
		[Address(RVA = "0xD343B4", Offset = "0xD343B4", VA = "0xD343B4")]
		public void Awake()
		{
		}

		[Token(Token = "0x60016C6")]
		[Address(RVA = "0xD3445C", Offset = "0xD3445C", VA = "0xD3445C")]
		public void OnEnable()
		{
		}

		[Token(Token = "0x60016C7")]
		[Address(RVA = "0xD34504", Offset = "0xD34504", VA = "0xD34504")]
		public void OnDisable()
		{
		}

		[Token(Token = "0x60016C8")]
		[Address(RVA = "0xD34570", Offset = "0xD34570", VA = "0xD34570", Slot = "4")]
		public virtual bool AllowSyncFromGoogle(LanguageSourceData Source)
		{
			return default(bool);
		}

		[Token(Token = "0x60016C9")]
		[Address(RVA = "0xD34578", Offset = "0xD34578", VA = "0xD34578")]
		public RegisterCallback_AllowSyncFromGoogle()
		{
		}
	}
	[Token(Token = "0x2000328")]
	public class RegisterGlobalParameters : MonoBehaviour, ILocalizationParamsManager
	{
		[Token(Token = "0x60016CA")]
		[Address(RVA = "0xD34580", Offset = "0xD34580", VA = "0xD34580", Slot = "5")]
		public virtual void OnEnable()
		{
		}

		[Token(Token = "0x60016CB")]
		[Address(RVA = "0xD3465C", Offset = "0xD3465C", VA = "0xD3465C", Slot = "6")]
		public virtual void OnDisable()
		{
		}

		[Token(Token = "0x60016CC")]
		[Address(RVA = "0xD346E0", Offset = "0xD346E0", VA = "0xD346E0", Slot = "7")]
		public virtual string GetParameterValue(string ParamName)
		{
			return null;
		}

		[Token(Token = "0x60016CD")]
		[Address(RVA = "0xD346E8", Offset = "0xD346E8", VA = "0xD346E8")]
		public RegisterGlobalParameters()
		{
		}
	}
	[Token(Token = "0x2000329")]
	public interface IResourceManager_Bundles
	{
		[Token(Token = "0x60016CE")]
		UnityEngine.Object LoadFromBundle(string path, Type assetType);
	}
	[Token(Token = "0x200032A")]
	public class ResourceManager : MonoBehaviour
	{
		[Token(Token = "0x4001706")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static ResourceManager mInstance;

		[Token(Token = "0x4001707")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<IResourceManager_Bundles> mBundleManagers;

		[Token(Token = "0x4001708")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UnityEngine.Object[] Assets;

		[Token(Token = "0x4001709")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly Dictionary<string, UnityEngine.Object> mResourcesCache;

		[Token(Token = "0x1700019A")]
		public static ResourceManager pInstance
		{
			[Token(Token = "0x60016CF")]
			[Address(RVA = "0xD33FBC", Offset = "0xD33FBC", VA = "0xD33FBC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60016D0")]
		[Address(RVA = "0xD346F0", Offset = "0xD346F0", VA = "0xD346F0")]
		public static void MyOnLevelWasLoaded(Scene scene, LoadSceneMode mode)
		{
		}

		[Token(Token = "0x60016D1")]
		public T GetAsset<T>(string Name) where T : UnityEngine.Object
		{
			return null;
		}

		[Token(Token = "0x60016D2")]
		[Address(RVA = "0xD347CC", Offset = "0xD347CC", VA = "0xD347CC")]
		private UnityEngine.Object FindAsset(string Name)
		{
			return null;
		}

		[Token(Token = "0x60016D3")]
		[Address(RVA = "0xD3490C", Offset = "0xD3490C", VA = "0xD3490C")]
		public bool HasAsset(UnityEngine.Object Obj)
		{
			return default(bool);
		}

		[Token(Token = "0x60016D4")]
		public T LoadFromResources<T>(string Path) where T : UnityEngine.Object
		{
			return null;
		}

		[Token(Token = "0x60016D5")]
		public T LoadFromBundle<T>(string path) where T : UnityEngine.Object
		{
			return null;
		}

		[Token(Token = "0x60016D6")]
		[Address(RVA = "0xD34760", Offset = "0xD34760", VA = "0xD34760")]
		public void CleanResourceCache()
		{
		}

		[Token(Token = "0x60016D7")]
		[Address(RVA = "0xD3497C", Offset = "0xD3497C", VA = "0xD3497C")]
		public ResourceManager()
		{
		}
	}
	[Token(Token = "0x200032B")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x9E78F4", Offset = "0x9E78F4")]
	public class SetLanguage : MonoBehaviour
	{
		[Token(Token = "0x400170A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string _Language;

		[Token(Token = "0x60016D8")]
		[Address(RVA = "0xD34AA0", Offset = "0xD34AA0", VA = "0xD34AA0")]
		private void OnClick()
		{
		}

		[Token(Token = "0x60016D9")]
		[Address(RVA = "0xD34AA4", Offset = "0xD34AA4", VA = "0xD34AA4")]
		public void ApplyLanguage()
		{
		}

		[Token(Token = "0x60016DA")]
		[Address(RVA = "0xD34B60", Offset = "0xD34B60", VA = "0xD34B60")]
		public SetLanguage()
		{
		}
	}
	[Token(Token = "0x200032C")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x9E792C", Offset = "0x9E792C")]
	public class SetLanguageDropdown : MonoBehaviour
	{
		[Token(Token = "0x60016DB")]
		[Address(RVA = "0xD34B68", Offset = "0xD34B68", VA = "0xD34B68")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60016DC")]
		[Address(RVA = "0xD34D94", Offset = "0xD34D94", VA = "0xD34D94")]
		private void OnValueChanged(int index)
		{
		}

		[Token(Token = "0x60016DD")]
		[Address(RVA = "0xD34E84", Offset = "0xD34E84", VA = "0xD34E84")]
		public SetLanguageDropdown()
		{
		}
	}
	[Token(Token = "0x200032D")]
	public class StringObfucator
	{
		[Token(Token = "0x400170B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static char[] StringObfuscatorPassword;

		[Token(Token = "0x60016DE")]
		[Address(RVA = "0xD3B5E0", Offset = "0xD3B5E0", VA = "0xD3B5E0")]
		public static string Encode(string NormalString)
		{
			return null;
		}

		[Token(Token = "0x60016DF")]
		[Address(RVA = "0xD3B920", Offset = "0xD3B920", VA = "0xD3B920")]
		public static string Decode(string ObfucatedString)
		{
			return null;
		}

		[Token(Token = "0x60016E0")]
		[Address(RVA = "0xD3B88C", Offset = "0xD3B88C", VA = "0xD3B88C")]
		private static string ToBase64(string regularString)
		{
			return null;
		}

		[Token(Token = "0x60016E1")]
		[Address(RVA = "0xD3BA08", Offset = "0xD3BA08", VA = "0xD3BA08")]
		private static string FromBase64(string base64string)
		{
			return null;
		}

		[Token(Token = "0x60016E2")]
		[Address(RVA = "0xD3B6C8", Offset = "0xD3B6C8", VA = "0xD3B6C8")]
		private static string XoREncode(string NormalString)
		{
			return null;
		}

		[Token(Token = "0x60016E3")]
		[Address(RVA = "0xD3BAA4", Offset = "0xD3BAA4", VA = "0xD3BAA4")]
		public StringObfucator()
		{
		}
	}
}
namespace I2.Loc.SimpleJSON
{
	[Token(Token = "0x200032E")]
	public enum JSONBinaryTag
	{
		[Token(Token = "0x400170D")]
		Array = 1,
		[Token(Token = "0x400170E")]
		Class,
		[Token(Token = "0x400170F")]
		Value,
		[Token(Token = "0x4001710")]
		IntValue,
		[Token(Token = "0x4001711")]
		DoubleValue,
		[Token(Token = "0x4001712")]
		BoolValue,
		[Token(Token = "0x4001713")]
		FloatValue
	}
	[Token(Token = "0x200032F")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x9E7964", Offset = "0x9E7964")]
	public class JSONNode
	{
		[Token(Token = "0x200051E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E85D8", Offset = "0x9E85D8")]
		private sealed class <get_Childs>d__17 : IEnumerable<JSONNode>, IEnumerable, IEnumerator<JSONNode>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001B24")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001B25")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private JSONNode <>2__current;

			[Token(Token = "0x4001B26")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x170002D5")]
			private JSONNode System.Collections.Generic.IEnumerator<I2.Loc.SimpleJSON.JSONNode>.Current
			{
				[Token(Token = "0x6001E9F")]
				[Address(RVA = "0xD3A2D0", Offset = "0xD3A2D0", VA = "0xD3A2D0", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002D6")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001EA1")]
				[Address(RVA = "0xD3A338", Offset = "0xD3A338", VA = "0xD3A338", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E9C")]
			[Address(RVA = "0xD38FC8", Offset = "0xD38FC8", VA = "0xD38FC8")]
			[DebuggerHidden]
			public <get_Childs>d__17(int <>1__state)
			{
			}

			[Token(Token = "0x6001E9D")]
			[Address(RVA = "0xD3A2B4", Offset = "0xD3A2B4", VA = "0xD3A2B4", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E9E")]
			[Address(RVA = "0xD3A2B8", Offset = "0xD3A2B8", VA = "0xD3A2B8", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001EA0")]
			[Address(RVA = "0xD3A2D8", Offset = "0xD3A2D8", VA = "0xD3A2D8", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6001EA2")]
			[Address(RVA = "0xD3A340", Offset = "0xD3A340", VA = "0xD3A340", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<JSONNode> System.Collections.Generic.IEnumerable<I2.Loc.SimpleJSON.JSONNode>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6001EA3")]
			[Address(RVA = "0xD3A3D8", Offset = "0xD3A3D8", VA = "0xD3A3D8", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x200051F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E85E8", Offset = "0x9E85E8")]
		private sealed class <get_DeepChilds>d__19 : IEnumerable<JSONNode>, IEnumerable, IEnumerator<JSONNode>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001B27")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001B28")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private JSONNode <>2__current;

			[Token(Token = "0x4001B29")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4001B2A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public JSONNode <>4__this;

			[Token(Token = "0x4001B2B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private IEnumerator<JSONNode> <>7__wrap1;

			[Token(Token = "0x4001B2C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private IEnumerator<JSONNode> <>7__wrap2;

			[Token(Token = "0x170002D7")]
			private JSONNode System.Collections.Generic.IEnumerator<I2.Loc.SimpleJSON.JSONNode>.Current
			{
				[Token(Token = "0x6001EA9")]
				[Address(RVA = "0xD3AA40", Offset = "0xD3AA40", VA = "0xD3AA40", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002D8")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001EAB")]
				[Address(RVA = "0xD3AAA8", Offset = "0xD3AAA8", VA = "0xD3AAA8", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001EA4")]
			[Address(RVA = "0xD3908C", Offset = "0xD3908C", VA = "0xD3908C")]
			[DebuggerHidden]
			public <get_DeepChilds>d__19(int <>1__state)
			{
			}

			[Token(Token = "0x6001EA5")]
			[Address(RVA = "0xD3A3DC", Offset = "0xD3A3DC", VA = "0xD3A3DC", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001EA6")]
			[Address(RVA = "0xD3A5EC", Offset = "0xD3A5EC", VA = "0xD3A5EC", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001EA7")]
			[Address(RVA = "0xD3A52C", Offset = "0xD3A52C", VA = "0xD3A52C")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6001EA8")]
			[Address(RVA = "0xD3A46C", Offset = "0xD3A46C", VA = "0xD3A46C")]
			private void <>m__Finally2()
			{
			}

			[Token(Token = "0x6001EAA")]
			[Address(RVA = "0xD3AA48", Offset = "0xD3AA48", VA = "0xD3AA48", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6001EAC")]
			[Address(RVA = "0xD3AAB0", Offset = "0xD3AAB0", VA = "0xD3AAB0", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<JSONNode> System.Collections.Generic.IEnumerable<I2.Loc.SimpleJSON.JSONNode>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6001EAD")]
			[Address(RVA = "0xD3AB64", Offset = "0xD3AB64", VA = "0xD3AB64", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x1700019B")]
		public virtual JSONNode Item
		{
			[Token(Token = "0x60016E6")]
			[Address(RVA = "0xD38E6C", Offset = "0xD38E6C", VA = "0xD38E6C", Slot = "5")]
			get
			{
				return null;
			}
			[Token(Token = "0x60016E7")]
			[Address(RVA = "0xD38E74", Offset = "0xD38E74", VA = "0xD38E74", Slot = "6")]
			set
			{
			}
		}

		[Token(Token = "0x1700019C")]
		public virtual JSONNode Item
		{
			[Token(Token = "0x60016E8")]
			[Address(RVA = "0xD38E78", Offset = "0xD38E78", VA = "0xD38E78", Slot = "7")]
			get
			{
				return null;
			}
			[Token(Token = "0x60016E9")]
			[Address(RVA = "0xD38E80", Offset = "0xD38E80", VA = "0xD38E80", Slot = "8")]
			set
			{
			}
		}

		[Token(Token = "0x1700019D")]
		public virtual string Value
		{
			[Token(Token = "0x60016EA")]
			[Address(RVA = "0xD38E84", Offset = "0xD38E84", VA = "0xD38E84", Slot = "9")]
			get
			{
				return null;
			}
			[Token(Token = "0x60016EB")]
			[Address(RVA = "0xD38ECC", Offset = "0xD38ECC", VA = "0xD38ECC", Slot = "10")]
			set
			{
			}
		}

		[Token(Token = "0x1700019E")]
		public virtual int Count
		{
			[Token(Token = "0x60016EC")]
			[Address(RVA = "0xD38ED0", Offset = "0xD38ED0", VA = "0xD38ED0", Slot = "11")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700019F")]
		public virtual IEnumerable<JSONNode> Childs
		{
			[Token(Token = "0x60016F1")]
			[Address(RVA = "0xD38F58", Offset = "0xD38F58", VA = "0xD38F58", Slot = "16")]
			[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9F30D0", Offset = "0x9F30D0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001A0")]
		public IEnumerable<JSONNode> DeepChilds
		{
			[Token(Token = "0x60016F2")]
			[Address(RVA = "0xD39000", Offset = "0xD39000", VA = "0xD39000")]
			[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9F3134", Offset = "0x9F3134")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001A1")]
		public virtual int AsInt
		{
			[Token(Token = "0x60016F5")]
			[Address(RVA = "0xD39154", Offset = "0xD39154", VA = "0xD39154", Slot = "18")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60016F6")]
			[Address(RVA = "0xD39194", Offset = "0xD39194", VA = "0xD39194", Slot = "19")]
			set
			{
			}
		}

		[Token(Token = "0x170001A2")]
		public virtual float AsFloat
		{
			[Token(Token = "0x60016F7")]
			[Address(RVA = "0xD391D4", Offset = "0xD391D4", VA = "0xD391D4", Slot = "20")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60016F8")]
			[Address(RVA = "0xD39218", Offset = "0xD39218", VA = "0xD39218", Slot = "21")]
			set
			{
			}
		}

		[Token(Token = "0x170001A3")]
		public virtual double AsDouble
		{
			[Token(Token = "0x60016F9")]
			[Address(RVA = "0xD39258", Offset = "0xD39258", VA = "0xD39258", Slot = "22")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x60016FA")]
			[Address(RVA = "0xD392FC", Offset = "0xD392FC", VA = "0xD392FC", Slot = "23")]
			set
			{
			}
		}

		[Token(Token = "0x170001A4")]
		public virtual bool AsBool
		{
			[Token(Token = "0x60016FB")]
			[Address(RVA = "0xD3933C", Offset = "0xD3933C", VA = "0xD3933C", Slot = "24")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60016FC")]
			[Address(RVA = "0xD39404", Offset = "0xD39404", VA = "0xD39404", Slot = "25")]
			set
			{
			}
		}

		[Token(Token = "0x170001A5")]
		public virtual JSONArray AsArray
		{
			[Token(Token = "0x60016FD")]
			[Address(RVA = "0xD39480", Offset = "0xD39480", VA = "0xD39480", Slot = "26")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001A6")]
		public virtual JSONClass AsObject
		{
			[Token(Token = "0x60016FE")]
			[Address(RVA = "0xD39500", Offset = "0xD39500", VA = "0xD39500", Slot = "27")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60016E5")]
		[Address(RVA = "0xD38E68", Offset = "0xD38E68", VA = "0xD38E68", Slot = "4")]
		public virtual void Add(string aKey, JSONNode aItem)
		{
		}

		[Token(Token = "0x60016ED")]
		[Address(RVA = "0xD38ED8", Offset = "0xD38ED8", VA = "0xD38ED8", Slot = "12")]
		public virtual void Add(JSONNode aItem)
		{
		}

		[Token(Token = "0x60016EE")]
		[Address(RVA = "0xD38F40", Offset = "0xD38F40", VA = "0xD38F40", Slot = "13")]
		public virtual JSONNode Remove(string aKey)
		{
			return null;
		}

		[Token(Token = "0x60016EF")]
		[Address(RVA = "0xD38F48", Offset = "0xD38F48", VA = "0xD38F48", Slot = "14")]
		public virtual JSONNode Remove(int aIndex)
		{
			return null;
		}

		[Token(Token = "0x60016F0")]
		[Address(RVA = "0xD38F50", Offset = "0xD38F50", VA = "0xD38F50", Slot = "15")]
		public virtual JSONNode Remove(JSONNode aNode)
		{
			return null;
		}

		[Token(Token = "0x60016F3")]
		[Address(RVA = "0xD390C4", Offset = "0xD390C4", VA = "0xD390C4", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x60016F4")]
		[Address(RVA = "0xD3910C", Offset = "0xD3910C", VA = "0xD3910C", Slot = "17")]
		public virtual string ToString(string aPrefix)
		{
			return null;
		}

		[Token(Token = "0x60016FF")]
		[Address(RVA = "0xD39580", Offset = "0xD39580", VA = "0xD39580")]
		public static implicit operator JSONNode(string s)
		{
			return null;
		}

		[Token(Token = "0x6001700")]
		[Address(RVA = "0xD395F0", Offset = "0xD395F0", VA = "0xD395F0")]
		public static implicit operator string(JSONNode d)
		{
			return null;
		}

		[Token(Token = "0x6001701")]
		[Address(RVA = "0xD37A30", Offset = "0xD37A30", VA = "0xD37A30")]
		public static bool operator ==(JSONNode a, object b)
		{
			return default(bool);
		}

		[Token(Token = "0x6001702")]
		[Address(RVA = "0xD3963C", Offset = "0xD3963C", VA = "0xD3963C")]
		public static bool operator !=(JSONNode a, object b)
		{
			return default(bool);
		}

		[Token(Token = "0x6001703")]
		[Address(RVA = "0xD39658", Offset = "0xD39658", VA = "0xD39658", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6001704")]
		[Address(RVA = "0xD388D0", Offset = "0xD388D0", VA = "0xD388D0", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6001705")]
		[Address(RVA = "0xD371B4", Offset = "0xD371B4", VA = "0xD371B4")]
		internal static string Escape(string aText)
		{
			return null;
		}

		[Token(Token = "0x6001706")]
		[Address(RVA = "0xD34E90", Offset = "0xD34E90", VA = "0xD34E90")]
		public static JSONNode Parse(string aJSON)
		{
			return null;
		}

		[Token(Token = "0x6001707")]
		[Address(RVA = "0xD39664", Offset = "0xD39664", VA = "0xD39664", Slot = "28")]
		public virtual void Serialize(BinaryWriter aWriter)
		{
		}

		[Token(Token = "0x6001708")]
		[Address(RVA = "0xD39668", Offset = "0xD39668", VA = "0xD39668")]
		public void SaveToStream(Stream aData)
		{
		}

		[Token(Token = "0x6001709")]
		[Address(RVA = "0xD396E8", Offset = "0xD396E8", VA = "0xD396E8")]
		public void SaveToCompressedStream(Stream aData)
		{
		}

		[Token(Token = "0x600170A")]
		[Address(RVA = "0xD39754", Offset = "0xD39754", VA = "0xD39754")]
		public void SaveToCompressedFile(string aFileName)
		{
		}

		[Token(Token = "0x600170B")]
		[Address(RVA = "0xD397C0", Offset = "0xD397C0", VA = "0xD397C0")]
		public string SaveToCompressedBase64()
		{
			return null;
		}

		[Token(Token = "0x600170C")]
		[Address(RVA = "0xD3982C", Offset = "0xD3982C", VA = "0xD3982C")]
		public void SaveToFile(string aFileName)
		{
		}

		[Token(Token = "0x600170D")]
		[Address(RVA = "0xD39980", Offset = "0xD39980", VA = "0xD39980")]
		public string SaveToBase64()
		{
			return null;
		}

		[Token(Token = "0x600170E")]
		[Address(RVA = "0xD39B04", Offset = "0xD39B04", VA = "0xD39B04")]
		public static JSONNode Deserialize(BinaryReader aReader)
		{
			return null;
		}

		[Token(Token = "0x600170F")]
		[Address(RVA = "0xD39E98", Offset = "0xD39E98", VA = "0xD39E98")]
		public static JSONNode LoadFromCompressedFile(string aFileName)
		{
			return null;
		}

		[Token(Token = "0x6001710")]
		[Address(RVA = "0xD39F04", Offset = "0xD39F04", VA = "0xD39F04")]
		public static JSONNode LoadFromCompressedStream(Stream aData)
		{
			return null;
		}

		[Token(Token = "0x6001711")]
		[Address(RVA = "0xD39F70", Offset = "0xD39F70", VA = "0xD39F70")]
		public static JSONNode LoadFromCompressedBase64(string aBase64)
		{
			return null;
		}

		[Token(Token = "0x6001712")]
		[Address(RVA = "0xD39FDC", Offset = "0xD39FDC", VA = "0xD39FDC")]
		public static JSONNode LoadFromStream(Stream aData)
		{
			return null;
		}

		[Token(Token = "0x6001713")]
		[Address(RVA = "0xD3A0F8", Offset = "0xD3A0F8", VA = "0xD3A0F8")]
		public static JSONNode LoadFromFile(string aFileName)
		{
			return null;
		}

		[Token(Token = "0x6001714")]
		[Address(RVA = "0xD3A200", Offset = "0xD3A200", VA = "0xD3A200")]
		public static JSONNode LoadFromBase64(string aBase64)
		{
			return null;
		}

		[Token(Token = "0x6001715")]
		[Address(RVA = "0xD35F90", Offset = "0xD35F90", VA = "0xD35F90")]
		public JSONNode()
		{
		}
	}
	[Token(Token = "0x2000330")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x9E799C", Offset = "0x9E799C")]
	public class JSONArray : JSONNode, IEnumerable
	{
		[Token(Token = "0x2000520")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E85F8", Offset = "0x9E85F8")]
		private sealed class <get_Childs>d__13 : IEnumerable<JSONNode>, IEnumerable, IEnumerator<JSONNode>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001B2D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001B2E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private JSONNode <>2__current;

			[Token(Token = "0x4001B2F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4001B30")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public JSONArray <>4__this;

			[Token(Token = "0x4001B31")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private List<JSONNode>.Enumerator <>7__wrap1;

			[Token(Token = "0x170002D9")]
			private JSONNode System.Collections.Generic.IEnumerator<I2.Loc.SimpleJSON.JSONNode>.Current
			{
				[Token(Token = "0x6001EB2")]
				[Address(RVA = "0xD363C0", Offset = "0xD363C0", VA = "0xD363C0", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002DA")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001EB4")]
				[Address(RVA = "0xD36428", Offset = "0xD36428", VA = "0xD36428", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001EAE")]
			[Address(RVA = "0xD359D0", Offset = "0xD359D0", VA = "0xD359D0")]
			[DebuggerHidden]
			public <get_Childs>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x6001EAF")]
			[Address(RVA = "0xD361E4", Offset = "0xD361E4", VA = "0xD361E4", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001EB0")]
			[Address(RVA = "0xD36258", Offset = "0xD36258", VA = "0xD36258", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001EB1")]
			[Address(RVA = "0xD36200", Offset = "0xD36200", VA = "0xD36200")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6001EB3")]
			[Address(RVA = "0xD363C8", Offset = "0xD363C8", VA = "0xD363C8", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6001EB5")]
			[Address(RVA = "0xD36430", Offset = "0xD36430", VA = "0xD36430", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<JSONNode> System.Collections.Generic.IEnumerable<I2.Loc.SimpleJSON.JSONNode>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6001EB6")]
			[Address(RVA = "0xD364E4", Offset = "0xD364E4", VA = "0xD364E4", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x2000521")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E8608", Offset = "0x9E8608")]
		private sealed class <GetEnumerator>d__14 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001B32")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001B33")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001B34")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public JSONArray <>4__this;

			[Token(Token = "0x4001B35")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private List<JSONNode>.Enumerator <>7__wrap1;

			[Token(Token = "0x170002DB")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001EBB")]
				[Address(RVA = "0xD36174", Offset = "0xD36174", VA = "0xD36174", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002DC")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001EBD")]
				[Address(RVA = "0xD361DC", Offset = "0xD361DC", VA = "0xD361DC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001EB7")]
			[Address(RVA = "0xD35A84", Offset = "0xD35A84", VA = "0xD35A84")]
			[DebuggerHidden]
			public <GetEnumerator>d__14(int <>1__state)
			{
			}

			[Token(Token = "0x6001EB8")]
			[Address(RVA = "0xD35F98", Offset = "0xD35F98", VA = "0xD35F98", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001EB9")]
			[Address(RVA = "0xD3600C", Offset = "0xD3600C", VA = "0xD3600C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001EBA")]
			[Address(RVA = "0xD35FB4", Offset = "0xD35FB4", VA = "0xD35FB4")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6001EBC")]
			[Address(RVA = "0xD3617C", Offset = "0xD3617C", VA = "0xD3617C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001714")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private List<JSONNode> m_List;

		[Token(Token = "0x170001A7")]
		public override JSONNode Item
		{
			[Token(Token = "0x6001716")]
			[Address(RVA = "0xD3551C", Offset = "0xD3551C", VA = "0xD3551C", Slot = "5")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001717")]
			[Address(RVA = "0xD35604", Offset = "0xD35604", VA = "0xD35604", Slot = "6")]
			set
			{
			}
		}

		[Token(Token = "0x170001A8")]
		public override JSONNode Item
		{
			[Token(Token = "0x6001718")]
			[Address(RVA = "0xD356A8", Offset = "0xD356A8", VA = "0xD356A8", Slot = "7")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001719")]
			[Address(RVA = "0xD35708", Offset = "0xD35708", VA = "0xD35708", Slot = "8")]
			set
			{
			}
		}

		[Token(Token = "0x170001A9")]
		public override int Count
		{
			[Token(Token = "0x600171A")]
			[Address(RVA = "0xD35770", Offset = "0xD35770", VA = "0xD35770", Slot = "11")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001AA")]
		public override IEnumerable<JSONNode> Childs
		{
			[Token(Token = "0x600171E")]
			[Address(RVA = "0xD35944", Offset = "0xD35944", VA = "0xD35944", Slot = "16")]
			[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9F3198", Offset = "0x9F3198")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600171B")]
		[Address(RVA = "0xD357C0", Offset = "0xD357C0", VA = "0xD357C0", Slot = "4")]
		public override void Add(string aKey, JSONNode aItem)
		{
		}

		[Token(Token = "0x600171C")]
		[Address(RVA = "0xD35828", Offset = "0xD35828", VA = "0xD35828", Slot = "14")]
		public override JSONNode Remove(int aIndex)
		{
			return null;
		}

		[Token(Token = "0x600171D")]
		[Address(RVA = "0xD358D4", Offset = "0xD358D4", VA = "0xD358D4", Slot = "15")]
		public override JSONNode Remove(JSONNode aNode)
		{
			return null;
		}

		[Token(Token = "0x600171F")]
		[Address(RVA = "0xD35A08", Offset = "0xD35A08", VA = "0xD35A08", Slot = "29")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9F31FC", Offset = "0x9F31FC")]
		public IEnumerator GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6001720")]
		[Address(RVA = "0xD35AB0", Offset = "0xD35AB0", VA = "0xD35AB0", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6001721")]
		[Address(RVA = "0xD35C48", Offset = "0xD35C48", VA = "0xD35C48", Slot = "17")]
		public override string ToString(string aPrefix)
		{
			return null;
		}

		[Token(Token = "0x6001722")]
		[Address(RVA = "0xD35E34", Offset = "0xD35E34", VA = "0xD35E34", Slot = "28")]
		public override void Serialize(BinaryWriter aWriter)
		{
		}

		[Token(Token = "0x6001723")]
		[Address(RVA = "0xD35F14", Offset = "0xD35F14", VA = "0xD35F14")]
		public JSONArray()
		{
		}
	}
	[Token(Token = "0x2000331")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x9E79D4", Offset = "0x9E79D4")]
	public class JSONClass : JSONNode, IEnumerable
	{
		[Token(Token = "0x2000522")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E8618", Offset = "0x9E8618")]
		private sealed class <>c__DisplayClass12_0
		{
			[Token(Token = "0x4001B36")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public JSONNode aNode;

			[Token(Token = "0x6001EBE")]
			[Address(RVA = "0xD36C94", Offset = "0xD36C94", VA = "0xD36C94")]
			public <>c__DisplayClass12_0()
			{
			}

			[Token(Token = "0x6001EBF")]
			[Address(RVA = "0xD379DC", Offset = "0xD379DC", VA = "0xD379DC")]
			internal bool <Remove>b__0(KeyValuePair<string, JSONNode> k)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000523")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E8628", Offset = "0x9E8628")]
		private sealed class <get_Childs>d__14 : IEnumerable<JSONNode>, IEnumerable, IEnumerator<JSONNode>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001B37")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001B38")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private JSONNode <>2__current;

			[Token(Token = "0x4001B39")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4001B3A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public JSONClass <>4__this;

			[Token(Token = "0x4001B3B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Dictionary<string, JSONNode>.Enumerator <>7__wrap1;

			[Token(Token = "0x170002DD")]
			private JSONNode System.Collections.Generic.IEnumerator<I2.Loc.SimpleJSON.JSONNode>.Current
			{
				[Token(Token = "0x6001EC4")]
				[Address(RVA = "0xD37F20", Offset = "0xD37F20", VA = "0xD37F20", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002DE")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001EC6")]
				[Address(RVA = "0xD37F88", Offset = "0xD37F88", VA = "0xD37F88", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001EC0")]
			[Address(RVA = "0xD36D28", Offset = "0xD36D28", VA = "0xD36D28")]
			[DebuggerHidden]
			public <get_Childs>d__14(int <>1__state)
			{
			}

			[Token(Token = "0x6001EC1")]
			[Address(RVA = "0xD37D3C", Offset = "0xD37D3C", VA = "0xD37D3C", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001EC2")]
			[Address(RVA = "0xD37DB0", Offset = "0xD37DB0", VA = "0xD37DB0", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001EC3")]
			[Address(RVA = "0xD37D58", Offset = "0xD37D58", VA = "0xD37D58")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6001EC5")]
			[Address(RVA = "0xD37F28", Offset = "0xD37F28", VA = "0xD37F28", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6001EC7")]
			[Address(RVA = "0xD37F90", Offset = "0xD37F90", VA = "0xD37F90", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<JSONNode> System.Collections.Generic.IEnumerable<I2.Loc.SimpleJSON.JSONNode>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6001EC8")]
			[Address(RVA = "0xD38044", Offset = "0xD38044", VA = "0xD38044", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x2000524")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9E8638", Offset = "0x9E8638")]
		private sealed class <GetEnumerator>d__15 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001B3C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001B3D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001B3E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public JSONClass <>4__this;

			[Token(Token = "0x4001B3F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Dictionary<string, JSONNode>.Enumerator <>7__wrap1;

			[Token(Token = "0x170002DF")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001ECD")]
				[Address(RVA = "0xD37CCC", Offset = "0xD37CCC", VA = "0xD37CCC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002E0")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001ECF")]
				[Address(RVA = "0xD37D34", Offset = "0xD37D34", VA = "0xD37D34", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001EC9")]
			[Address(RVA = "0xD36DDC", Offset = "0xD36DDC", VA = "0xD36DDC")]
			[DebuggerHidden]
			public <GetEnumerator>d__15(int <>1__state)
			{
			}

			[Token(Token = "0x6001ECA")]
			[Address(RVA = "0xD37AC8", Offset = "0xD37AC8", VA = "0xD37AC8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001ECB")]
			[Address(RVA = "0xD37B3C", Offset = "0xD37B3C", VA = "0xD37B3C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001ECC")]
			[Address(RVA = "0xD37AE4", Offset = "0xD37AE4", VA = "0xD37AE4")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6001ECE")]
			[Address(RVA = "0xD37CD4", Offset = "0xD37CD4", VA = "0xD37CD4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001715")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Dictionary<string, JSONNode> m_Dict;

		[Token(Token = "0x170001AB")]
		public override JSONNode Item
		{
			[Token(Token = "0x6001724")]
			[Address(RVA = "0xD364E8", Offset = "0xD364E8", VA = "0xD364E8", Slot = "7")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001725")]
			[Address(RVA = "0xD365F4", Offset = "0xD365F4", VA = "0xD365F4", Slot = "8")]
			set
			{
			}
		}

		[Token(Token = "0x170001AC")]
		public override JSONNode Item
		{
			[Token(Token = "0x6001726")]
			[Address(RVA = "0xD366B0", Offset = "0xD366B0", VA = "0xD366B0", Slot = "5")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001727")]
			[Address(RVA = "0xD36748", Offset = "0xD36748", VA = "0xD36748", Slot = "6")]
			set
			{
			}
		}

		[Token(Token = "0x170001AD")]
		public override int Count
		{
			[Token(Token = "0x6001728")]
			[Address(RVA = "0xD36808", Offset = "0xD36808", VA = "0xD36808", Slot = "11")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001AE")]
		public override IEnumerable<JSONNode> Childs
		{
			[Token(Token = "0x600172D")]
			[Address(RVA = "0xD36C9C", Offset = "0xD36C9C", VA = "0xD36C9C", Slot = "16")]
			[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9F3260", Offset = "0x9F3260")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001729")]
		[Address(RVA = "0xD36860", Offset = "0xD36860", VA = "0xD36860", Slot = "4")]
		public override void Add(string aKey, JSONNode aItem)
		{
		}

		[Token(Token = "0x600172A")]
		[Address(RVA = "0xD3698C", Offset = "0xD3698C", VA = "0xD3698C", Slot = "13")]
		public override JSONNode Remove(string aKey)
		{
			return null;
		}

		[Token(Token = "0x600172B")]
		[Address(RVA = "0xD36A48", Offset = "0xD36A48", VA = "0xD36A48", Slot = "14")]
		public override JSONNode Remove(int aIndex)
		{
			return null;
		}

		[Token(Token = "0x600172C")]
		[Address(RVA = "0xD36B04", Offset = "0xD36B04", VA = "0xD36B04", Slot = "15")]
		public override JSONNode Remove(JSONNode aNode)
		{
			return null;
		}

		[Token(Token = "0x600172E")]
		[Address(RVA = "0xD36D60", Offset = "0xD36D60", VA = "0xD36D60", Slot = "29")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9F32C4", Offset = "0x9F32C4")]
		public IEnumerator GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x600172F")]
		[Address(RVA = "0xD36E08", Offset = "0xD36E08", VA = "0xD36E08", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6001730")]
		[Address(RVA = "0xD37330", Offset = "0xD37330", VA = "0xD37330", Slot = "17")]
		public override string ToString(string aPrefix)
		{
			return null;
		}

		[Token(Token = "0x6001731")]
		[Address(RVA = "0xD37734", Offset = "0xD37734", VA = "0xD37734", Slot = "28")]
		public override void Serialize(BinaryWriter aWriter)
		{
		}

		[Token(Token = "0x6001732")]
		[Address(RVA = "0xD378EC", Offset = "0xD378EC", VA = "0xD378EC")]
		public JSONClass()
		{
		}
	}
	[Token(Token = "0x2000332")]
	public class JSONData : JSONNode
	{
		[Token(Token = "0x4001716")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private string m_Data;

		[Token(Token = "0x170001AF")]
		public override string Value
		{
			[Token(Token = "0x6001733")]
			[Address(RVA = "0xD38048", Offset = "0xD38048", VA = "0xD38048", Slot = "9")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001734")]
			[Address(RVA = "0xD38050", Offset = "0xD38050", VA = "0xD38050", Slot = "10")]
			set
			{
			}
		}

		[Token(Token = "0x6001735")]
		[Address(RVA = "0xD38058", Offset = "0xD38058", VA = "0xD38058")]
		public JSONData(string aData)
		{
		}

		[Token(Token = "0x6001736")]
		[Address(RVA = "0xD3808C", Offset = "0xD3808C", VA = "0xD3808C")]
		public JSONData(float aData)
		{
		}

		[Token(Token = "0x6001737")]
		[Address(RVA = "0xD380D0", Offset = "0xD380D0", VA = "0xD380D0")]
		public JSONData(double aData)
		{
		}

		[Token(Token = "0x6001738")]
		[Address(RVA = "0xD38114", Offset = "0xD38114", VA = "0xD38114")]
		public JSONData(bool aData)
		{
		}

		[Token(Token = "0x6001739")]
		[Address(RVA = "0xD38150", Offset = "0xD38150", VA = "0xD38150")]
		public JSONData(int aData)
		{
		}

		[Token(Token = "0x600173A")]
		[Address(RVA = "0xD3818C", Offset = "0xD3818C", VA = "0xD3818C", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x600173B")]
		[Address(RVA = "0xD381EC", Offset = "0xD381EC", VA = "0xD381EC", Slot = "17")]
		public override string ToString(string aPrefix)
		{
			return null;
		}

		[Token(Token = "0x600173C")]
		[Address(RVA = "0xD3824C", Offset = "0xD3824C", VA = "0xD3824C", Slot = "28")]
		public override void Serialize(BinaryWriter aWriter)
		{
		}
	}
	[Token(Token = "0x2000333")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x9E7A0C", Offset = "0x9E7A0C")]
	internal class JSONLazyCreator : JSONNode
	{
		[Token(Token = "0x4001717")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private JSONNode m_Node;

		[Token(Token = "0x4001718")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private string m_Key;

		[Token(Token = "0x170001B0")]
		public override JSONNode Item
		{
			[Token(Token = "0x6001740")]
			[Address(RVA = "0xD38580", Offset = "0xD38580", VA = "0xD38580", Slot = "5")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001741")]
			[Address(RVA = "0xD385E0", Offset = "0xD385E0", VA = "0xD385E0", Slot = "6")]
			set
			{
			}
		}

		[Token(Token = "0x170001B1")]
		public override JSONNode Item
		{
			[Token(Token = "0x6001742")]
			[Address(RVA = "0xD38668", Offset = "0xD38668", VA = "0xD38668", Slot = "7")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001743")]
			[Address(RVA = "0xD386D8", Offset = "0xD386D8", VA = "0xD386D8", Slot = "8")]
			set
			{
			}
		}

		[Token(Token = "0x170001B2")]
		public override int AsInt
		{
			[Token(Token = "0x600174C")]
			[Address(RVA = "0xD38968", Offset = "0xD38968", VA = "0xD38968", Slot = "18")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600174D")]
			[Address(RVA = "0xD389EC", Offset = "0xD389EC", VA = "0xD389EC", Slot = "19")]
			set
			{
			}
		}

		[Token(Token = "0x170001B3")]
		public override float AsFloat
		{
			[Token(Token = "0x600174E")]
			[Address(RVA = "0xD38A74", Offset = "0xD38A74", VA = "0xD38A74", Slot = "20")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600174F")]
			[Address(RVA = "0xD38AF8", Offset = "0xD38AF8", VA = "0xD38AF8", Slot = "21")]
			set
			{
			}
		}

		[Token(Token = "0x170001B4")]
		public override double AsDouble
		{
			[Token(Token = "0x6001750")]
			[Address(RVA = "0xD38B80", Offset = "0xD38B80", VA = "0xD38B80", Slot = "22")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x6001751")]
			[Address(RVA = "0xD38C04", Offset = "0xD38C04", VA = "0xD38C04", Slot = "23")]
			set
			{
			}
		}

		[Token(Token = "0x170001B5")]
		public override bool AsBool
		{
			[Token(Token = "0x6001752")]
			[Address(RVA = "0xD38C8C", Offset = "0xD38C8C", VA = "0xD38C8C", Slot = "24")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001753")]
			[Address(RVA = "0xD38D10", Offset = "0xD38D10", VA = "0xD38D10", Slot = "25")]
			set
			{
			}
		}

		[Token(Token = "0x170001B6")]
		public override JSONArray AsArray
		{
			[Token(Token = "0x6001754")]
			[Address(RVA = "0xD38D98", Offset = "0xD38D98", VA = "0xD38D98", Slot = "26")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001B7")]
		public override JSONClass AsObject
		{
			[Token(Token = "0x6001755")]
			[Address(RVA = "0xD38E00", Offset = "0xD38E00", VA = "0xD38E00", Slot = "27")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600173D")]
		[Address(RVA = "0xD355C0", Offset = "0xD355C0", VA = "0xD355C0")]
		public JSONLazyCreator(JSONNode aNode)
		{
		}

		[Token(Token = "0x600173E")]
		[Address(RVA = "0xD365A4", Offset = "0xD365A4", VA = "0xD365A4")]
		public JSONLazyCreator(JSONNode aNode, string aKey)
		{
		}

		[Token(Token = "0x600173F")]
		[Address(RVA = "0xD38514", Offset = "0xD38514", VA = "0xD38514")]
		private void Set(JSONNode aVal)
		{
		}

		[Token(Token = "0x6001744")]
		[Address(RVA = "0xD38768", Offset = "0xD38768", VA = "0xD38768", Slot = "12")]
		public override void Add(JSONNode aItem)
		{
		}

		[Token(Token = "0x6001745")]
		[Address(RVA = "0xD387F0", Offset = "0xD387F0", VA = "0xD387F0", Slot = "4")]
		public override void Add(string aKey, JSONNode aItem)
		{
		}

		[Token(Token = "0x6001746")]
		[Address(RVA = "0xD38880", Offset = "0xD38880", VA = "0xD38880")]
		public static bool operator ==(JSONLazyCreator a, object b)
		{
			return default(bool);
		}

		[Token(Token = "0x6001747")]
		[Address(RVA = "0xD38898", Offset = "0xD38898", VA = "0xD38898")]
		public static bool operator !=(JSONLazyCreator a, object b)
		{
			return default(bool);
		}

		[Token(Token = "0x6001748")]
		[Address(RVA = "0xD388B0", Offset = "0xD388B0", VA = "0xD388B0", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6001749")]
		[Address(RVA = "0xD388C8", Offset = "0xD388C8", VA = "0xD388C8", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x600174A")]
		[Address(RVA = "0xD388D8", Offset = "0xD388D8", VA = "0xD388D8", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x600174B")]
		[Address(RVA = "0xD38920", Offset = "0xD38920", VA = "0xD38920", Slot = "17")]
		public override string ToString(string aPrefix)
		{
			return null;
		}
	}
	[Token(Token = "0x2000334")]
	public static class JSON
	{
		[Token(Token = "0x6001756")]
		[Address(RVA = "0xD34E8C", Offset = "0xD34E8C", VA = "0xD34E8C")]
		public static JSONNode Parse(string aJSON)
		{
			return null;
		}
	}
}
namespace UnityEngine.Timeline
{
	[Token(Token = "0x2000335")]
	public class VideoPlayableBehaviour : PlayableBehaviour
	{
		[Token(Token = "0x4001719")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public VideoPlayer videoPlayer;

		[Token(Token = "0x400171A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public VideoClip videoClip;

		[Token(Token = "0x400171B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool mute;

		[Token(Token = "0x400171C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public bool loop;

		[Token(Token = "0x400171D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public double preloadTime;

		[Token(Token = "0x400171E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public double clipInTime;

		[Token(Token = "0x400171F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool playedOnce;

		[Token(Token = "0x4001720")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		private bool preparing;

		[Token(Token = "0x6001757")]
		[Address(RVA = "0x147A0DC", Offset = "0x147A0DC", VA = "0x147A0DC")]
		public void PrepareVideo()
		{
		}

		[Token(Token = "0x6001758")]
		[Address(RVA = "0x147A494", Offset = "0x147A494", VA = "0x147A494")]
		private void LoopPointReached(VideoPlayer vp)
		{
		}

		[Token(Token = "0x6001759")]
		[Address(RVA = "0x147A4A4", Offset = "0x147A4A4", VA = "0x147A4A4", Slot = "19")]
		public override void PrepareFrame(Playable playable, FrameData info)
		{
		}

		[Token(Token = "0x600175A")]
		[Address(RVA = "0x147A790", Offset = "0x147A790", VA = "0x147A790", Slot = "17")]
		public override void OnBehaviourPlay(Playable playable, FrameData info)
		{
		}

		[Token(Token = "0x600175B")]
		[Address(RVA = "0x147A8F0", Offset = "0x147A8F0", VA = "0x147A8F0", Slot = "18")]
		public override void OnBehaviourPause(Playable playable, FrameData info)
		{
		}

		[Token(Token = "0x600175C")]
		[Address(RVA = "0x147AA24", Offset = "0x147AA24", VA = "0x147AA24", Slot = "20")]
		public override void ProcessFrame(Playable playable, FrameData info, object playerData)
		{
		}

		[Token(Token = "0x600175D")]
		[Address(RVA = "0x147AC18", Offset = "0x147AC18", VA = "0x147AC18", Slot = "13")]
		public override void OnGraphStart(Playable playable)
		{
		}

		[Token(Token = "0x600175E")]
		[Address(RVA = "0x147AC20", Offset = "0x147AC20", VA = "0x147AC20", Slot = "14")]
		public override void OnGraphStop(Playable playable)
		{
		}

		[Token(Token = "0x600175F")]
		[Address(RVA = "0x147AC58", Offset = "0x147AC58", VA = "0x147AC58", Slot = "16")]
		public override void OnPlayableDestroy(Playable playable)
		{
		}

		[Token(Token = "0x6001760")]
		[Address(RVA = "0x147A844", Offset = "0x147A844", VA = "0x147A844")]
		public void PlayVideo()
		{
		}

		[Token(Token = "0x6001761")]
		[Address(RVA = "0x147A994", Offset = "0x147A994", VA = "0x147A994")]
		public void PauseVideo()
		{
		}

		[Token(Token = "0x6001762")]
		[Address(RVA = "0x147A400", Offset = "0x147A400", VA = "0x147A400")]
		public void StopVideo()
		{
		}

		[Token(Token = "0x6001763")]
		[Address(RVA = "0x147A618", Offset = "0x147A618", VA = "0x147A618")]
		private void SyncVideoToPlayable(Playable playable)
		{
		}

		[Token(Token = "0x6001764")]
		[Address(RVA = "0x147AC5C", Offset = "0x147AC5C", VA = "0x147AC5C")]
		public VideoPlayableBehaviour()
		{
		}
	}
	[Token(Token = "0x2000336")]
	public sealed class VideoSchedulerPlayableBehaviour : PlayableBehaviour
	{
		[Token(Token = "0x4001721")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IEnumerable<TimelineClip> m_Clips;

		[Token(Token = "0x4001722")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private PlayableDirector m_Director;

		[Token(Token = "0x170001B8")]
		internal PlayableDirector director
		{
			[Token(Token = "0x6001765")]
			[Address(RVA = "0x147AC78", Offset = "0x147AC78", VA = "0x147AC78")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001766")]
			[Address(RVA = "0x147AC80", Offset = "0x147AC80", VA = "0x147AC80")]
			set
			{
			}
		}

		[Token(Token = "0x170001B9")]
		internal IEnumerable<TimelineClip> clips
		{
			[Token(Token = "0x6001767")]
			[Address(RVA = "0x147AC88", Offset = "0x147AC88", VA = "0x147AC88")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001768")]
			[Address(RVA = "0x147AC90", Offset = "0x147AC90", VA = "0x147AC90")]
			set
			{
			}
		}

		[Token(Token = "0x6001769")]
		[Address(RVA = "0x147AC98", Offset = "0x147AC98", VA = "0x147AC98", Slot = "20")]
		public override void ProcessFrame(Playable playable, FrameData info, object playerData)
		{
		}

		[Token(Token = "0x600176A")]
		[Address(RVA = "0x147B098", Offset = "0x147B098", VA = "0x147B098")]
		public VideoSchedulerPlayableBehaviour()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000337")]
	public class VideoScriptPlayableAsset : PlayableAsset
	{
		[Token(Token = "0x4001723")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ExposedReference<VideoPlayer> videoPlayer;

		[Token(Token = "0x4001724")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		[NotKeyable]
		public VideoClip videoClip;

		[Token(Token = "0x4001725")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		[NotKeyable]
		public bool mute;

		[Token(Token = "0x4001726")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		[SerializeField]
		[NotKeyable]
		public bool loop;

		[Token(Token = "0x4001727")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		[NotKeyable]
		public double preloadTime;

		[Token(Token = "0x4001728")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		[NotKeyable]
		public double clipInTime;

		[Token(Token = "0x600176B")]
		[Address(RVA = "0x147B0A0", Offset = "0x147B0A0", VA = "0x147B0A0", Slot = "6")]
		public override Playable CreatePlayable(PlayableGraph graph, GameObject go)
		{
			return default(Playable);
		}

		[Token(Token = "0x600176C")]
		[Address(RVA = "0x147B1E0", Offset = "0x147B1E0", VA = "0x147B1E0")]
		public VideoScriptPlayableAsset()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000338")]
	[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0x9E7A44", Offset = "0x9E7A44")]
	[AttributeAttribute(Name = "TrackColorAttribute", RVA = "0x9E7A44", Offset = "0x9E7A44")]
	public class VideoScriptPlayableTrack : TrackAsset
	{
		[Token(Token = "0x600176D")]
		[Address(RVA = "0x147B1FC", Offset = "0x147B1FC", VA = "0x147B1FC", Slot = "24")]
		public override Playable CreateTrackMixer(PlayableGraph graph, GameObject go, int inputCount)
		{
			return default(Playable);
		}

		[Token(Token = "0x600176E")]
		[Address(RVA = "0x147B350", Offset = "0x147B350", VA = "0x147B350")]
		public VideoScriptPlayableTrack()
		{
		}
	}
}
