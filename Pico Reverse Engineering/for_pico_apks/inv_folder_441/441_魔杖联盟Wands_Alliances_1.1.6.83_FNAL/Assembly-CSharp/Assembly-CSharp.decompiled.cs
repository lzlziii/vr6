using System;
using System.Collections;
using System.Collections.Generic;
using System.Diagnostics;
using System.IO;
using System.Reflection;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Threading;
using System.Threading.Tasks;
using Cortopia.CortopiaPlayFabModels;
using Cortopia.ExecuteFunctions;
using Cortopia.Scripts.Audio;
using Cortopia.Scripts.Core;
using Cortopia.Scripts.CustomAttributes;
using Cortopia.Scripts.DebugTools;
using Cortopia.Scripts.Enums;
using Cortopia.Scripts.Gameplay.Characters;
using Cortopia.Scripts.Gameplay.Grabbables;
using Cortopia.Scripts.Gameplay.Spells;
using Cortopia.Scripts.Gameplay.Wands;
using Cortopia.Scripts.Global;
using Cortopia.Scripts.InputSystem;
using Cortopia.Scripts.InputSystem.InputMaps;
using Cortopia.Scripts.Localization;
using Cortopia.Scripts.Network;
using Cortopia.Scripts.Platform.PlayFab;
using Cortopia.Scripts.Players;
using Cortopia.Scripts.UI;
using Cortopia.Scripts.UI.Challenges;
using Cortopia.Scripts.UI.CharacterBuilderUI;
using Cortopia.Scripts.UI.Interactable;
using Cortopia.Scripts.UI.Interfaces;
using Cortopia.Scripts.UI.Localization;
using Cortopia.Scripts.UI.Social;
using Cortopia.Scripts.Users;
using Cortopia.Scripts.Utils;
using Cortopia.Scripts.Utils.Reactive;
using Cortopia.Scripts.Voip;
using ExitGames.Client.Photon;
using FMOD;
using FMOD.Studio;
using FMODUnity;
using Il2CppDummyDll;
using JetBrains.Annotations;
using Microsoft.CodeAnalysis;
using Newtonsoft.Json.Converters;
using Oculus.Platform;
using Oculus.Platform.Models;
using Photon.Deterministic;
using Photon.Realtime;
using Photon.Voice.Unity;
using PlayFab;
using PlayFab.ClientModels;
using PlayFab.CloudScriptModels;
using PlayFab.ProfilesModels;
using Quantum;
using Quantum.Core;
using Quantum.Cortopia.Utility;
using Quantum.Inspector;
using Quantum.Physics2D;
using Quantum.Physics3D;
using Quantum.Prototypes;
using Quantum.Prototypes.Unity;
using QuickOutline.Scripts;
using RootMotion.FinalIK;
using TMPro;
using Unity.Collections;
using Unity.Jobs;
using Unity.XR.PXR;
using UnityEngine;
using UnityEngine.AddressableAssets;
using UnityEngine.Events;
using UnityEngine.Localization;
using UnityEngine.Localization.Components;
using UnityEngine.Localization.Pseudo;
using UnityEngine.Localization.Settings;
using UnityEngine.Localization.Tables;
using UnityEngine.Networking;
using UnityEngine.Playables;
using UnityEngine.Rendering;
using UnityEngine.ResourceManagement.AsyncOperations;
using UnityEngine.ResourceManagement.ResourceProviders;
using UnityEngine.SceneManagement;
using UnityEngine.Scripting;
using UnityEngine.SpatialTracking;
using UnityEngine.Timeline;
using UnityEngine.UI;
using UnityEngine.XR;
using UnityEngine.XR.Management;

[assembly: AssemblyVersion("0.0.0.0")]
namespace Microsoft.CodeAnalysis
{
	[Token(Token = "0x2000002")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBC3B8C", Offset = "0xBC3B8C")]
	[Microsoft.CodeAnalysis.Embedded]
	internal sealed class EmbeddedAttribute : Attribute
	{
		[Token(Token = "0x6000001")]
		[Address(RVA = "0x1042FE8", Offset = "0x1042FE8", VA = "0x1042FE8")]
		public EmbeddedAttribute()
		{
		}
	}
}
namespace System.Runtime.CompilerServices
{
	[Token(Token = "0x2000003")]
	[Microsoft.CodeAnalysis.Embedded]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBC3BC4", Offset = "0xBC3BC4")]
	internal sealed class IsUnmanagedAttribute : Attribute
	{
		[Token(Token = "0x6000002")]
		[Address(RVA = "0xF82E44", Offset = "0xF82E44", VA = "0xF82E44")]
		public IsUnmanagedAttribute()
		{
		}
	}
}
[Token(Token = "0x2000004")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBC3BFC", Offset = "0xBC3BFC")]
public class BotDisplayDataAsset : AssetBase
{
	[Token(Token = "0x4000001")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LocalizedString botName;

	[Token(Token = "0x4000002")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public BotDisplayData Settings;

	[Token(Token = "0x17000001")]
	public override AssetObject AssetObject
	{
		[Token(Token = "0x6000003")]
		[Address(RVA = "0x1333498", Offset = "0x1333498", VA = "0x1333498", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000004")]
	[Address(RVA = "0x13334A0", Offset = "0x13334A0", VA = "0x13334A0", Slot = "9")]
	public override void Reset()
	{
	}

	[Token(Token = "0x6000005")]
	[Address(RVA = "0x1333504", Offset = "0x1333504", VA = "0x1333504")]
	public BotDisplayDataAsset()
	{
	}
}
[Token(Token = "0x2000005")]
[DisallowMultipleComponent]
public class EntityComponentSpawnpoint : EntityComponentBase<Spawnpoint_Prototype>
{
	[Token(Token = "0x4000003")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Transform loadoutSelection;

	[Token(Token = "0x6000006")]
	[Address(RVA = "0x1048AC4", Offset = "0x1048AC4", VA = "0x1048AC4", Slot = "6")]
	public override ComponentPrototype CreatePrototype(EntityPrototypeConverter converter)
	{
		return null;
	}

	[Token(Token = "0x6000007")]
	[Address(RVA = "0x1048C14", Offset = "0x1048C14", VA = "0x1048C14")]
	public EntityComponentSpawnpoint()
	{
	}
}
[Token(Token = "0x2000006")]
[DisallowMultipleComponent]
public class EntityComponentTile : EntityComponentBase<Tile_Prototype>
{
	[Token(Token = "0x4000004")]
	private const int NumSquares = 4;

	[Token(Token = "0x4000005")]
	private const float GizmoHeight = 0.1f;

	[Token(Token = "0x4000006")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Transform align;

	[Token(Token = "0x6000008")]
	[Address(RVA = "0x1049970", Offset = "0x1049970", VA = "0x1049970", Slot = "6")]
	public override ComponentPrototype CreatePrototype(EntityPrototypeConverter converter)
	{
		return null;
	}

	[Token(Token = "0x6000009")]
	[Address(RVA = "0x1049A54", Offset = "0x1049A54", VA = "0x1049A54")]
	public EntityComponentTile()
	{
	}
}
[Token(Token = "0x2000007")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBC3C60", Offset = "0xBC3C60")]
public class GameConstantsAsset : AssetBase
{
	[StructLayout(3)]
	[Token(Token = "0x2000008")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBC3CA4", Offset = "0xBC3CA4")]
	private struct <GetConstantsAsync>d__1 : IAsyncStateMachine
	{
		[Token(Token = "0x4000008")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x4000009")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncTaskMethodBuilder<GameConstants> <>t__builder;

		[Token(Token = "0x400000A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private TaskAwaiter<GameConstantsAsset> <>u__1;

		[Token(Token = "0x600000F")]
		[Address(RVA = "0x103090C", Offset = "0x103090C", VA = "0x103090C", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x6000010")]
		[Address(RVA = "0x1030B3C", Offset = "0x1030B3C", VA = "0x1030B3C", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[Token(Token = "0x4000007")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameConstants Settings;

	[Token(Token = "0x17000002")]
	public override AssetObject AssetObject
	{
		[Token(Token = "0x600000C")]
		[Address(RVA = "0xFA4AD8", Offset = "0xFA4AD8", VA = "0xFA4AD8", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600000A")]
	[Address(RVA = "0xFA492C", Offset = "0xFA492C", VA = "0xFA492C")]
	public static GameConstants GetConstants()
	{
		return null;
	}

	[Token(Token = "0x600000B")]
	[Address(RVA = "0xFA49B8", Offset = "0xFA49B8", VA = "0xFA49B8")]
	[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xBDB528", Offset = "0xBDB528")]
	public static Task<GameConstants> GetConstantsAsync()
	{
		return null;
	}

	[Token(Token = "0x600000D")]
	[Address(RVA = "0xFA4AE0", Offset = "0xFA4AE0", VA = "0xFA4AE0", Slot = "9")]
	public override void Reset()
	{
	}

	[Token(Token = "0x600000E")]
	[Address(RVA = "0xFA4B4C", Offset = "0xFA4B4C", VA = "0xFA4B4C")]
	public GameConstantsAsset()
	{
	}
}
[Serializable]
[Token(Token = "0x2000009")]
public struct MatchPhaseNames
{
	[Token(Token = "0x400000B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public LocalizedString matchInit;

	[Token(Token = "0x400000C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public LocalizedString classSelection;

	[Token(Token = "0x400000D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public LocalizedString postLoadout;

	[Token(Token = "0x400000E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LocalizedString preRound;

	[Token(Token = "0x400000F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public LocalizedString gameRoundPhase1;

	[Token(Token = "0x4000010")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public LocalizedString gameRoundPhase2;

	[Token(Token = "0x4000011")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public LocalizedString postRound;

	[Token(Token = "0x4000012")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public LocalizedString postMatch;

	[Token(Token = "0x4000013")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public LocalizedString gameRound;
}
[Token(Token = "0x200000A")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBC3CB4", Offset = "0xBC3CB4")]
public class GameModeSetupAsset : AssetBase
{
	[Token(Token = "0x4000014")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBCC2E4", Offset = "0xBCC2E4")]
	private Sprite gameModeIcon;

	[Token(Token = "0x4000015")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private LocalizedString gameModeName;

	[Token(Token = "0x4000016")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private LocalizedString attackerDescription;

	[Token(Token = "0x4000017")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private LocalizedString defenderDescription;

	[Token(Token = "0x4000018")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private LocalizedString gameModeDescription;

	[Token(Token = "0x4000019")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private StringDescriptionArgument[] gameModeDescriptionParameters;

	[Token(Token = "0x400001A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private bool usingRoles;

	[Token(Token = "0x400001B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private MatchPhaseNames phaseNames;

	[Token(Token = "0x400001C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private int requiredScore;

	[Token(Token = "0x400001D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public GameModeSetup Settings;

	[Token(Token = "0x17000003")]
	public Sprite GameModeIcon
	{
		[Token(Token = "0x6000011")]
		[Address(RVA = "0xFA6448", Offset = "0xFA6448", VA = "0xFA6448")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000004")]
	public LocalizedString GameModeName
	{
		[Token(Token = "0x6000012")]
		[Address(RVA = "0xFA6450", Offset = "0xFA6450", VA = "0xFA6450")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000005")]
	public LocalizedString AttackerDescription
	{
		[Token(Token = "0x6000013")]
		[Address(RVA = "0xFA6458", Offset = "0xFA6458", VA = "0xFA6458")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000006")]
	public LocalizedString DefenderDescription
	{
		[Token(Token = "0x6000014")]
		[Address(RVA = "0xFA6460", Offset = "0xFA6460", VA = "0xFA6460")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000007")]
	public MatchPhaseNames PhaseNames
	{
		[Token(Token = "0x6000015")]
		[Address(RVA = "0xFA6468", Offset = "0xFA6468", VA = "0xFA6468")]
		get
		{
			return default(MatchPhaseNames);
		}
	}

	[Token(Token = "0x17000008")]
	public bool UsingRoles
	{
		[Token(Token = "0x6000016")]
		[Address(RVA = "0xFA6478", Offset = "0xFA6478", VA = "0xFA6478")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000009")]
	public int RequiredScore
	{
		[Token(Token = "0x6000017")]
		[Address(RVA = "0xFA6480", Offset = "0xFA6480", VA = "0xFA6480")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700000A")]
	public override AssetObject AssetObject
	{
		[Token(Token = "0x6000019")]
		[Address(RVA = "0xFA6780", Offset = "0xFA6780", VA = "0xFA6780", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000018")]
	[Address(RVA = "0xFA6488", Offset = "0xFA6488", VA = "0xFA6488")]
	public LocalizedString GetFormattedDescription()
	{
		return null;
	}

	[Token(Token = "0x600001A")]
	[Address(RVA = "0xFA6788", Offset = "0xFA6788", VA = "0xFA6788", Slot = "9")]
	public override void Reset()
	{
	}

	[Token(Token = "0x600001B")]
	[Address(RVA = "0xFA67F4", Offset = "0xFA67F4", VA = "0xFA67F4")]
	public GameModeSetupAsset()
	{
	}
}
[Token(Token = "0x200000B")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBC3CF8", Offset = "0xBC3CF8")]
public class MapAsset : AssetBase
{
	[Token(Token = "0x400001E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBCC3B0", Offset = "0xBCC3B0")]
	[SerializeField]
	private Sprite levelIcon;

	[Token(Token = "0x400001F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private LocalizedString levelName;

	[Token(Token = "0x4000020")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private LocalizedString levelDescription;

	[Token(Token = "0x4000021")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Map Settings;

	[Token(Token = "0x4000022")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<FlatEntityPrototypeContainer> Prototypes;

	[Token(Token = "0x1700000B")]
	public Sprite LevelIcon
	{
		[Token(Token = "0x600001C")]
		[Address(RVA = "0xF8D23C", Offset = "0xF8D23C", VA = "0xF8D23C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700000C")]
	public LocalizedString LevelName
	{
		[Token(Token = "0x600001D")]
		[Address(RVA = "0xF8D244", Offset = "0xF8D244", VA = "0xF8D244")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700000D")]
	public LocalizedString LevelDescription
	{
		[Token(Token = "0x600001E")]
		[Address(RVA = "0xF8D24C", Offset = "0xF8D24C", VA = "0xF8D24C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700000E")]
	public override AssetObject AssetObject
	{
		[Token(Token = "0x600001F")]
		[Address(RVA = "0xF8D254", Offset = "0xF8D254", VA = "0xF8D254", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000020")]
	[Address(RVA = "0xF8D25C", Offset = "0xF8D25C", VA = "0xF8D25C", Slot = "7")]
	public override void PrepareAsset()
	{
	}

	[Token(Token = "0x6000021")]
	[Address(RVA = "0xF8D51C", Offset = "0xF8D51C", VA = "0xF8D51C", Slot = "9")]
	public override void Reset()
	{
	}

	[Token(Token = "0x6000022")]
	[Address(RVA = "0xF8D5D0", Offset = "0xF8D5D0", VA = "0xF8D5D0")]
	public MapAsset()
	{
	}
}
[Token(Token = "0x200000C")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBC3D3C", Offset = "0xBC3D3C")]
public class PlayerClassConfigurationAsset : AssetBase
{
	[Serializable]
	[Token(Token = "0x200000D")]
	public class VRIKHandOffset
	{
		[Token(Token = "0x4000031")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		public Vector3 idlePositionOffset;

		[Token(Token = "0x4000032")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		public Vector3 idleRotationOffset;

		[Token(Token = "0x4000033")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		public Vector3 wandPositionOffset;

		[Token(Token = "0x4000034")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		public Vector3 wandRotationOffset;

		[Token(Token = "0x6000030")]
		[Address(RVA = "0x11EC7D4", Offset = "0x11EC7D4", VA = "0x11EC7D4")]
		public VRIKHandOffset()
		{
		}
	}

	[Token(Token = "0x4000023")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBCC41C", Offset = "0xBCC41C")]
	private Sprite classIcon;

	[Token(Token = "0x4000024")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Sprite classIconCircle;

	[Token(Token = "0x4000025")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Sprite classIconDiamond;

	[Token(Token = "0x4000026")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private LocalizedString classTitle;

	[Token(Token = "0x4000027")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private LocalizedString className;

	[Token(Token = "0x4000028")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private LocalizedString classDescription;

	[Token(Token = "0x4000029")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private StringDescriptionArgument[] classDescriptionArguments;

	[Token(Token = "0x400002A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private ClassType classType;

	[Token(Token = "0x400002B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[SerializeField]
	private int xpRequirement;

	[Token(Token = "0x400002C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private bool onlyUnlockAsReward;

	[Token(Token = "0x400002D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private List<CharacterSkin> characterSkins;

	[Token(Token = "0x400002E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private VRIKHandOffset leftVRIKHandOffset;

	[Token(Token = "0x400002F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private VRIKHandOffset rightVRIKHandOffset;

	[Token(Token = "0x4000030")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public PlayerClassConfiguration Settings;

	[Token(Token = "0x1700000F")]
	public LocalizedString ClassTitle
	{
		[Token(Token = "0x6000023")]
		[Address(RVA = "0xFE1754", Offset = "0xFE1754", VA = "0xFE1754")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000010")]
	public LocalizedString ClassName
	{
		[Token(Token = "0x6000024")]
		[Address(RVA = "0xFE175C", Offset = "0xFE175C", VA = "0xFE175C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000011")]
	public ClassType ClassType
	{
		[Token(Token = "0x6000025")]
		[Address(RVA = "0xFE1764", Offset = "0xFE1764", VA = "0xFE1764")]
		get
		{
			return default(ClassType);
		}
	}

	[Token(Token = "0x17000012")]
	public IReadOnlyList<CharacterSkin> CharacterSkins
	{
		[Token(Token = "0x6000026")]
		[Address(RVA = "0xFE176C", Offset = "0xFE176C", VA = "0xFE176C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000013")]
	public int XPRequirement
	{
		[Token(Token = "0x6000027")]
		[Address(RVA = "0xFE1774", Offset = "0xFE1774", VA = "0xFE1774")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000014")]
	public VRIKHandOffset LeftVRIKHandOffset
	{
		[Token(Token = "0x6000028")]
		[Address(RVA = "0xFE177C", Offset = "0xFE177C", VA = "0xFE177C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000015")]
	public VRIKHandOffset RightVRIKHandOffset
	{
		[Token(Token = "0x6000029")]
		[Address(RVA = "0xFE1784", Offset = "0xFE1784", VA = "0xFE1784")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000016")]
	public bool OnlyUnlockAsReward
	{
		[Token(Token = "0x600002A")]
		[Address(RVA = "0xFE178C", Offset = "0xFE178C", VA = "0xFE178C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000017")]
	public override AssetObject AssetObject
	{
		[Token(Token = "0x600002D")]
		[Address(RVA = "0xFE1B38", Offset = "0xFE1B38", VA = "0xFE1B38", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600002B")]
	[Address(RVA = "0xFE1794", Offset = "0xFE1794", VA = "0xFE1794")]
	public LocalizedString GetFormattedDescription()
	{
		return null;
	}

	[Token(Token = "0x600002C")]
	[Address(RVA = "0xFE1A8C", Offset = "0xFE1A8C", VA = "0xFE1A8C")]
	public Sprite ClassIcon(IconType type)
	{
		return null;
	}

	[Token(Token = "0x600002E")]
	[Address(RVA = "0xFE1B40", Offset = "0xFE1B40", VA = "0xFE1B40", Slot = "9")]
	public override void Reset()
	{
	}

	[Token(Token = "0x600002F")]
	[Address(RVA = "0xFE1BAC", Offset = "0xFE1BAC", VA = "0xFE1BAC")]
	public PlayerClassConfigurationAsset()
	{
	}
}
[Token(Token = "0x200000E")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBC3D80", Offset = "0xBC3D80")]
public class SpellSetupAsset : AssetBase
{
	[Token(Token = "0x4000035")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBCC568", Offset = "0xBCC568")]
	[SerializeField]
	private Sprite spellIcon;

	[Token(Token = "0x4000036")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private LocalizedString spellName;

	[Token(Token = "0x4000037")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private LocalizedString spellDescription;

	[Token(Token = "0x4000038")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private SpellDescriptionArguments[] spellDescriptionArguments;

	[Token(Token = "0x4000039")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private LocalizedString coloredTimeText;

	[Token(Token = "0x400003A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private LocalizedString coloredNoneText;

	[Token(Token = "0x400003B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBCC604", Offset = "0xBCC604")]
	private SpellCategory category;

	[Token(Token = "0x400003C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[SerializeField]
	private SpellElement element;

	[Token(Token = "0x400003D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private int xpRequirement;

	[Token(Token = "0x400003E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[SerializeField]
	private bool onlyUnlockAsReward;

	[Token(Token = "0x400003F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
	[SerializeField]
	private bool nonPlayerSpell;

	[Token(Token = "0x4000040")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private string hitHapticIDHead;

	[Token(Token = "0x4000041")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private string hitHapticIDBody;

	[Token(Token = "0x4000042")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private float hitHapticPowerMultiplier;

	[Token(Token = "0x4000043")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[SerializeField]
	private float hitHapticTimeMultiplier;

	[Token(Token = "0x4000044")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private string shootHapticIDLeft;

	[Token(Token = "0x4000045")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private string shootHapticIDRight;

	[Token(Token = "0x4000046")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBCC6F0", Offset = "0xBCC6F0")]
	private AssetReference chargingAsset;

	[Token(Token = "0x4000047")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private AssetReference failAsset;

	[Token(Token = "0x4000048")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private AssetReference castingAsset;

	[Token(Token = "0x4000049")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private AssetReference previewAsset;

	[Token(Token = "0x400004A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public SpellSetup Settings;

	[Token(Token = "0x17000018")]
	public Sprite SpellIcon
	{
		[Token(Token = "0x6000031")]
		[Address(RVA = "0x1147568", Offset = "0x1147568", VA = "0x1147568")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000019")]
	public LocalizedString SpellName
	{
		[Token(Token = "0x6000032")]
		[Address(RVA = "0x1147570", Offset = "0x1147570", VA = "0x1147570")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700001A")]
	public SpellCategory Category
	{
		[Token(Token = "0x6000033")]
		[Address(RVA = "0x1147578", Offset = "0x1147578", VA = "0x1147578")]
		get
		{
			return default(SpellCategory);
		}
	}

	[Token(Token = "0x1700001B")]
	public SpellElement Element
	{
		[Token(Token = "0x6000034")]
		[Address(RVA = "0x1147580", Offset = "0x1147580", VA = "0x1147580")]
		get
		{
			return default(SpellElement);
		}
	}

	[Token(Token = "0x1700001C")]
	public int XPRequirement
	{
		[Token(Token = "0x6000035")]
		[Address(RVA = "0x1147588", Offset = "0x1147588", VA = "0x1147588")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700001D")]
	public bool NonPlayerSpell
	{
		[Token(Token = "0x6000036")]
		[Address(RVA = "0x1147590", Offset = "0x1147590", VA = "0x1147590")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700001E")]
	public AssetReference ChargingAsset
	{
		[Token(Token = "0x6000037")]
		[Address(RVA = "0x1147598", Offset = "0x1147598", VA = "0x1147598")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700001F")]
	public AssetReference FailAsset
	{
		[Token(Token = "0x6000038")]
		[Address(RVA = "0x11475A0", Offset = "0x11475A0", VA = "0x11475A0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000020")]
	public AssetReference CastingAsset
	{
		[Token(Token = "0x6000039")]
		[Address(RVA = "0x11475A8", Offset = "0x11475A8", VA = "0x11475A8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000021")]
	public AssetReference PreviewAsset
	{
		[Token(Token = "0x600003A")]
		[Address(RVA = "0x11475B0", Offset = "0x11475B0", VA = "0x11475B0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000022")]
	public bool OnlyUnlockAsReward
	{
		[Token(Token = "0x600003B")]
		[Address(RVA = "0x11475B8", Offset = "0x11475B8", VA = "0x11475B8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000023")]
	public string HitHapticIDHead
	{
		[Token(Token = "0x600003C")]
		[Address(RVA = "0x11475C0", Offset = "0x11475C0", VA = "0x11475C0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000024")]
	public string HitHapticIDBody
	{
		[Token(Token = "0x600003D")]
		[Address(RVA = "0x11475C8", Offset = "0x11475C8", VA = "0x11475C8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000025")]
	public float HitHapticPowerMultiplier
	{
		[Token(Token = "0x600003E")]
		[Address(RVA = "0x11475D0", Offset = "0x11475D0", VA = "0x11475D0")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000026")]
	public float HitHapticTimeMultiplier
	{
		[Token(Token = "0x600003F")]
		[Address(RVA = "0x11475D8", Offset = "0x11475D8", VA = "0x11475D8")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000027")]
	public string ShootHapticIDLeft
	{
		[Token(Token = "0x6000040")]
		[Address(RVA = "0x11475E0", Offset = "0x11475E0", VA = "0x11475E0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000028")]
	public string ShootHapticIDRight
	{
		[Token(Token = "0x6000041")]
		[Address(RVA = "0x11475E8", Offset = "0x11475E8", VA = "0x11475E8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000029")]
	public override AssetObject AssetObject
	{
		[Token(Token = "0x6000046")]
		[Address(RVA = "0x1147AC4", Offset = "0x1147AC4", VA = "0x1147AC4", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000042")]
	[Address(RVA = "0x11475F0", Offset = "0x11475F0", VA = "0x11475F0")]
	public LocalizedString GetFormattedDescription()
	{
		return null;
	}

	[Token(Token = "0x6000043")]
	[Address(RVA = "0x11478E8", Offset = "0x11478E8", VA = "0x11478E8")]
	private LocalizedString GenerateColoredTimeText(FP time)
	{
		return null;
	}

	[Token(Token = "0x6000044")]
	[Address(RVA = "0x1147A8C", Offset = "0x1147A8C", VA = "0x1147A8C")]
	public LocalizedString GetFormattedCooldown()
	{
		return null;
	}

	[Token(Token = "0x6000045")]
	[Address(RVA = "0x1147AA8", Offset = "0x1147AA8", VA = "0x1147AA8")]
	public LocalizedString GetFormattedCharge()
	{
		return null;
	}

	[Token(Token = "0x6000047")]
	[Address(RVA = "0x1147ACC", Offset = "0x1147ACC", VA = "0x1147ACC", Slot = "9")]
	public override void Reset()
	{
	}

	[Token(Token = "0x6000048")]
	[Address(RVA = "0x1147B38", Offset = "0x1147B38", VA = "0x1147B38")]
	public SpellSetupAsset()
	{
	}
}
[Token(Token = "0x200000F")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBC3DC4", Offset = "0xBC3DC4")]
public class WandPartBarrelAsset : AssetBase
{
	[Token(Token = "0x400004B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AssetReference meshAddress;

	[Token(Token = "0x400004C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public WandPartBarrel Settings;

	[Token(Token = "0x1700002A")]
	public override AssetObject AssetObject
	{
		[Token(Token = "0x6000049")]
		[Address(RVA = "0x113A224", Offset = "0x113A224", VA = "0x113A224", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600004A")]
	[Address(RVA = "0x113A22C", Offset = "0x113A22C", VA = "0x113A22C", Slot = "9")]
	public override void Reset()
	{
	}

	[Token(Token = "0x600004B")]
	[Address(RVA = "0x113A298", Offset = "0x113A298", VA = "0x113A298")]
	public WandPartBarrelAsset()
	{
	}
}
[Token(Token = "0x2000010")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBC3E08", Offset = "0xBC3E08")]
public class WandPartChamberAsset : AssetBase
{
	[Token(Token = "0x400004D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AssetReference meshAddress;

	[Token(Token = "0x400004E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public WandPartChamber Settings;

	[Token(Token = "0x1700002B")]
	public override AssetObject AssetObject
	{
		[Token(Token = "0x600004C")]
		[Address(RVA = "0x113A2A0", Offset = "0x113A2A0", VA = "0x113A2A0", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600004D")]
	[Address(RVA = "0x113A2A8", Offset = "0x113A2A8", VA = "0x113A2A8", Slot = "9")]
	public override void Reset()
	{
	}

	[Token(Token = "0x600004E")]
	[Address(RVA = "0x113A314", Offset = "0x113A314", VA = "0x113A314")]
	public WandPartChamberAsset()
	{
	}
}
[Token(Token = "0x2000011")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBC3E4C", Offset = "0xBC3E4C")]
public class WandPartHandleAsset : AssetBase
{
	[Token(Token = "0x400004F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AssetReference meshAddress;

	[Token(Token = "0x4000050")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public WandPartHandle Settings;

	[Token(Token = "0x1700002C")]
	public override AssetObject AssetObject
	{
		[Token(Token = "0x600004F")]
		[Address(RVA = "0x113A31C", Offset = "0x113A31C", VA = "0x113A31C", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000050")]
	[Address(RVA = "0x113A324", Offset = "0x113A324", VA = "0x113A324", Slot = "9")]
	public override void Reset()
	{
	}

	[Token(Token = "0x6000051")]
	[Address(RVA = "0x113A390", Offset = "0x113A390", VA = "0x113A390")]
	public WandPartHandleAsset()
	{
	}
}
[Token(Token = "0x2000012")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xBC3E90", Offset = "0xBC3E90")]
[DisallowMultipleComponent]
public class EntityComponentTargetConditionAccumulatedDamage : EntityComponentBase<TargetConditionAccumulatedDamage_Prototype>
{
	[Token(Token = "0x6000052")]
	[Address(RVA = "0x10490D4", Offset = "0x10490D4", VA = "0x10490D4")]
	public EntityComponentTargetConditionAccumulatedDamage()
	{
	}
}
[Token(Token = "0x2000013")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xBC3F00", Offset = "0xBC3F00")]
[DisallowMultipleComponent]
public class EntityComponentTargetConditionDelay : EntityComponentBase<TargetConditionDelay_Prototype>
{
	[Token(Token = "0x6000053")]
	[Address(RVA = "0x1049120", Offset = "0x1049120", VA = "0x1049120")]
	public EntityComponentTargetConditionDelay()
	{
	}
}
[Token(Token = "0x2000014")]
public class OculusSpatializerFMOD : MonoBehaviour
{
	[Token(Token = "0x2000015")]
	public delegate void AudioRaycastCallback(Vector3 origin, Vector3 direction, out Vector3 point, out Vector3 normal, IntPtr data);

	[Token(Token = "0x4000051")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UnityEngine.LayerMask layerMask;

	[Token(Token = "0x4000052")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool visualizeRoom;

	[Token(Token = "0x4000053")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	private bool roomVisualizationInitialized;

	[Token(Token = "0x4000054")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int raysPerSecond;

	[Token(Token = "0x4000055")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float roomInterpSpeed;

	[Token(Token = "0x4000056")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float maxWallDistance;

	[Token(Token = "0x4000057")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int rayCacheSize;

	[Token(Token = "0x4000058")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool dynamicReflectionsEnabled;

	[Token(Token = "0x4000059")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private AudioRaycastCallback _raycastCallback;

	[Token(Token = "0x400005A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float particleSize;

	[Token(Token = "0x400005B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float particleOffset;

	[Token(Token = "0x400005C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private GameObject room;

	[Token(Token = "0x400005D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Renderer[] wallRenderer;

	[Token(Token = "0x400005E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float[] dims;

	[Token(Token = "0x400005F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float[] coefs;

	[Token(Token = "0x4000060")]
	private const int HIT_COUNT = 2048;

	[Token(Token = "0x4000061")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Vector3[] points;

	[Token(Token = "0x4000062")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Vector3[] normals;

	[Token(Token = "0x4000063")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private ParticleSystem sys;

	[Token(Token = "0x4000064")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private ParticleSystem.Particle[] particles;

	[Token(Token = "0x4000065")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static UnityEngine.LayerMask gLayerMask;

	[Token(Token = "0x4000066")]
	private const string strOSP = "OculusSpatializerFMOD";

	[Token(Token = "0x6000054")]
	[Address(RVA = "0x101E920", Offset = "0x101E920", VA = "0x101E920")]
	private static Vector3 swapHandedness(Vector3 vec)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000055")]
	[Address(RVA = "0x101E928", Offset = "0x101E928", VA = "0x101E928")]
	private static void AudioRaycast(Vector3 origin, Vector3 direction, out Vector3 point, out Vector3 normal, IntPtr data)
	{
	}

	[Token(Token = "0x6000056")]
	[Address(RVA = "0x101EA98", Offset = "0x101EA98", VA = "0x101EA98")]
	private void Start()
	{
	}

	[Token(Token = "0x6000057")]
	[Address(RVA = "0x101EB10", Offset = "0x101EB10", VA = "0x101EB10")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000058")]
	[Address(RVA = "0x101EC0C", Offset = "0x101EC0C", VA = "0x101EC0C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000059")]
	[Address(RVA = "0x101F4B4", Offset = "0x101F4B4", VA = "0x101F4B4")]
	private void inititalizeRoomVisualization()
	{
	}

	[PreserveSig]
	[Token(Token = "0x600005A")]
	[Address(RVA = "0x101EB7C", Offset = "0x101EB7C", VA = "0x101EB7C")]
	private static extern int OSP_FMOD_AssignRayCastCallback(IntPtr callback, IntPtr data);

	[PreserveSig]
	[Token(Token = "0x600005B")]
	[Address(RVA = "0x101F21C", Offset = "0x101F21C", VA = "0x101F21C")]
	private static extern int OSP_FMOD_SetDynamicRoomRaysPerSecond(int RaysPerSecond);

	[PreserveSig]
	[Token(Token = "0x600005C")]
	[Address(RVA = "0x101F29C", Offset = "0x101F29C", VA = "0x101F29C")]
	private static extern int OSP_FMOD_SetDynamicRoomInterpSpeed(float InterpSpeed);

	[PreserveSig]
	[Token(Token = "0x600005D")]
	[Address(RVA = "0x101F324", Offset = "0x101F324", VA = "0x101F324")]
	private static extern int OSP_FMOD_SetDynamicRoomMaxWallDistance(float MaxWallDistance);

	[PreserveSig]
	[Token(Token = "0x600005E")]
	[Address(RVA = "0x101F3AC", Offset = "0x101F3AC", VA = "0x101F3AC")]
	private static extern int OSP_FMOD_SetDynamicRoomRaysRayCacheSize(int RayCacheSize);

	[PreserveSig]
	[Token(Token = "0x600005F")]
	[Address(RVA = "0x101F42C", Offset = "0x101F42C", VA = "0x101F42C")]
	private static extern int OSP_FMOD_UpdateRoomModel(float wetLevel);

	[PreserveSig]
	[Token(Token = "0x6000060")]
	[Address(RVA = "0x102017C", Offset = "0x102017C", VA = "0x102017C")]
	private static extern int OSP_FMOD_GetRoomDimensions(float[] roomDimensions, float[] reflectionsCoefs, out Vector3 position);

	[PreserveSig]
	[Token(Token = "0x6000061")]
	[Address(RVA = "0x1020224", Offset = "0x1020224", VA = "0x1020224")]
	private static extern int OSP_FMOD_GetRaycastHits(Vector3[] points, Vector3[] normals, int length);

	[Token(Token = "0x6000062")]
	[Address(RVA = "0x10202CC", Offset = "0x10202CC", VA = "0x10202CC")]
	public OculusSpatializerFMOD()
	{
	}
}
[Token(Token = "0x2000016")]
public class BotSDKDebugger : QuantumCallbacks, IBotDebug
{
	[Token(Token = "0x2000017")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBC3F70", Offset = "0xBC3F70")]
	private sealed class <Start>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400006A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400006B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400006C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BotSDKDebugger <>4__this;

		[Token(Token = "0x1700002F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000073")]
			[Address(RVA = "0x11425C0", Offset = "0x11425C0", VA = "0x11425C0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000030")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000075")]
			[Address(RVA = "0x1142608", Offset = "0x1142608", VA = "0x1142608", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000070")]
		[Address(RVA = "0x1142410", Offset = "0x1142410", VA = "0x1142410")]
		[DebuggerHidden]
		public <Start>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6000071")]
		[Address(RVA = "0x114243C", Offset = "0x114243C", VA = "0x114243C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000072")]
		[Address(RVA = "0x1142440", Offset = "0x1142440", VA = "0x1142440", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000074")]
		[Address(RVA = "0x11425C8", Offset = "0x11425C8", VA = "0x11425C8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000067")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private EntityView _prefabView;

	[Token(Token = "0x4000068")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private HFSMData _hfsmData;

	[Token(Token = "0x4000069")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private BTAgent _btAgent;

	[Token(Token = "0x1700002D")]
	public EntityRef EntityRef
	{
		[Token(Token = "0x6000068")]
		[Address(RVA = "0x1333514", Offset = "0x1333514", VA = "0x1333514", Slot = "16")]
		get
		{
			return default(EntityRef);
		}
	}

	[Token(Token = "0x1700002E")]
	public Frame Frame
	{
		[Token(Token = "0x6000069")]
		[Address(RVA = "0x13335A8", Offset = "0x13335A8", VA = "0x13335A8", Slot = "17")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600006A")]
	[Address(RVA = "0x1333624", Offset = "0x1333624", VA = "0x1333624")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xBDB598", Offset = "0xBDB598")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x600006B")]
	[Address(RVA = "0x1333690", Offset = "0x1333690", VA = "0x1333690")]
	private bool TrySetupHFSMDebugger()
	{
		return default(bool);
	}

	[Token(Token = "0x600006C")]
	[Address(RVA = "0x13337AC", Offset = "0x13337AC", VA = "0x13337AC")]
	private bool TrySetupBTDebugger()
	{
		return default(bool);
	}

	[Token(Token = "0x600006D")]
	[Address(RVA = "0x13338C8", Offset = "0x13338C8", VA = "0x13338C8", Slot = "18")]
	public string GetHFSMRootName()
	{
		return null;
	}

	[Token(Token = "0x600006E")]
	[Address(RVA = "0x1333A00", Offset = "0x1333A00", VA = "0x1333A00", Slot = "19")]
	public string GetBTRootName()
	{
		return null;
	}

	[Token(Token = "0x600006F")]
	[Address(RVA = "0x1333B38", Offset = "0x1333B38", VA = "0x1333B38")]
	public BotSDKDebugger()
	{
	}
}
[Token(Token = "0x2000018")]
public abstract class AIActionAsset : AssetBase
{
	[Token(Token = "0x6000076")]
	[Address(RVA = "0x1323604", Offset = "0x1323604", VA = "0x1323604")]
	protected AIActionAsset()
	{
	}
}
[Token(Token = "0x2000019")]
public static class AIActionAssetExts
{
	[Token(Token = "0x6000077")]
	[Address(RVA = "0x1323614", Offset = "0x1323614", VA = "0x1323614")]
	public static AIActionAsset GetUnityAsset(this AIAction data)
	{
		return null;
	}
}
[Token(Token = "0x200001A")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBC3F90", Offset = "0xBC3F90")]
public class AIBlackboardAsset : AssetBase
{
	[Token(Token = "0x400006D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AIBlackboard Settings;

	[Token(Token = "0x17000031")]
	public override AssetObject AssetObject
	{
		[Token(Token = "0x6000078")]
		[Address(RVA = "0x132369C", Offset = "0x132369C", VA = "0x132369C", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000079")]
	[Address(RVA = "0x13236A4", Offset = "0x13236A4", VA = "0x13236A4", Slot = "9")]
	public override void Reset()
	{
	}

	[Token(Token = "0x600007A")]
	[Address(RVA = "0x132370C", Offset = "0x132370C", VA = "0x132370C")]
	public AIBlackboardAsset()
	{
	}
}
[Token(Token = "0x200001B")]
public static class AIBlackboardAssetExts
{
	[Token(Token = "0x600007B")]
	[Address(RVA = "0x1323714", Offset = "0x1323714", VA = "0x1323714")]
	public static AIBlackboardAsset GetUnityAsset(this AIBlackboard data)
	{
		return null;
	}
}
[Token(Token = "0x200001C")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBC3FE4", Offset = "0xBC3FE4")]
public class AIBlackboardInitializerAsset : AssetBase
{
	[Token(Token = "0x400006E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AIBlackboardInitializer Settings;

	[Token(Token = "0x17000032")]
	public override AssetObject AssetObject
	{
		[Token(Token = "0x600007C")]
		[Address(RVA = "0x13239B8", Offset = "0x13239B8", VA = "0x13239B8", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600007D")]
	[Address(RVA = "0x13239C0", Offset = "0x13239C0", VA = "0x13239C0", Slot = "9")]
	public override void Reset()
	{
	}

	[Token(Token = "0x600007E")]
	[Address(RVA = "0x1323A24", Offset = "0x1323A24", VA = "0x1323A24")]
	public AIBlackboardInitializerAsset()
	{
	}
}
[Token(Token = "0x200001D")]
public static class AIBlackboardInitializerAssetExts
{
	[Token(Token = "0x600007F")]
	[Address(RVA = "0x1323A2C", Offset = "0x1323A2C", VA = "0x1323A2C")]
	public static AIBlackboardInitializerAsset GetUnityAsset(this AIBlackboardInitializer data)
	{
		return null;
	}
}
[Token(Token = "0x200001E")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBC4038", Offset = "0xBC4038")]
public class AIConfigAsset : AssetBase
{
	[Token(Token = "0x400006F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AIConfig Settings;

	[Token(Token = "0x17000033")]
	public override AssetObject AssetObject
	{
		[Token(Token = "0x6000080")]
		[Address(RVA = "0x1323AB4", Offset = "0x1323AB4", VA = "0x1323AB4", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000081")]
	[Address(RVA = "0x1323ABC", Offset = "0x1323ABC", VA = "0x1323ABC", Slot = "9")]
	public override void Reset()
	{
	}

	[Token(Token = "0x6000082")]
	[Address(RVA = "0x1323B20", Offset = "0x1323B20", VA = "0x1323B20")]
	public AIConfigAsset()
	{
	}
}
[Token(Token = "0x200001F")]
public static class AIConfigAssetExts
{
	[Token(Token = "0x6000083")]
	[Address(RVA = "0x1323B28", Offset = "0x1323B28", VA = "0x1323B28")]
	public static AIConfigAsset GetUnityAsset(this AIConfig data)
	{
		return null;
	}
}
[Token(Token = "0x2000020")]
public class AddBlackboardFPValueActionAsset : AIActionAsset
{
	[Token(Token = "0x4000070")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AddBlackboardFPValueAction Settings;

	[Token(Token = "0x17000034")]
	public override AssetObject AssetObject
	{
		[Token(Token = "0x6000084")]
		[Address(RVA = "0x1323BB0", Offset = "0x1323BB0", VA = "0x1323BB0", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000085")]
	[Address(RVA = "0x1323BB8", Offset = "0x1323BB8", VA = "0x1323BB8")]
	public AddBlackboardFPValueActionAsset()
	{
	}
}
[Token(Token = "0x2000021")]
public static class AddBlackboardFPValueActionAssetExts
{
	[Token(Token = "0x6000086")]
	[Address(RVA = "0x1323BC0", Offset = "0x1323BC0", VA = "0x1323BC0")]
	public static AddBlackboardFPValueActionAsset GetUnityAsset(this AddBlackboardFPValueAction data)
	{
		return null;
	}
}
[Token(Token = "0x2000022")]
public class AddBlackboardIntValueActionAsset : AIActionAsset
{
	[Token(Token = "0x4000071")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AddBlackboardIntValueAction Settings;

	[Token(Token = "0x17000035")]
	public override AssetObject AssetObject
	{
		[Token(Token = "0x6000087")]
		[Address(RVA = "0x1323C48", Offset = "0x1323C48", VA = "0x1323C48", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000088")]
	[Address(RVA = "0x1323C50", Offset = "0x1323C50", VA = "0x1323C50")]
	public AddBlackboardIntValueActionAsset()
	{
	}
}
[Token(Token = "0x2000023")]
public static class AddBlackboardIntValueActionAssetExts
{
	[Token(Token = "0x6000089")]
	[Address(RVA = "0x1323C58", Offset = "0x1323C58", VA = "0x1323C58")]
	public static AddBlackboardIntValueActionAsset GetUnityAsset(this AddBlackboardIntValueAction data)
	{
		return null;
	}
}
[Token(Token = "0x2000024")]
public class AddOrRemoveSpellCasterActionAsset : AIActionAsset
{
	[Token(Token = "0x4000072")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AddOrRemoveSpellCasterAction Settings;

	[Token(Token = "0x17000036")]
	public override AssetObject AssetObject
	{
		[Token(Token = "0x600008A")]
		[Address(RVA = "0x1323CE0", Offset = "0x1323CE0", VA = "0x1323CE0", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600008B")]
	[Address(RVA = "0x1323CE8", Offset = "0x1323CE8", VA = "0x1323CE8")]
	public AddOrRemoveSpellCasterActionAsset()
	{
	}
}
[Token(Token = "0x2000025")]
public static class AddOrRemoveSpellCasterActionAssetExts
{
	[Token(Token = "0x600008C")]
	[Address(RVA = "0x1323CF0", Offset = "0x1323CF0", VA = "0x1323CF0")]
	public static AddOrRemoveSpellCasterActionAsset GetUnityAsset(this AddOrRemoveSpellCasterAction data)
	{
		return null;
	}
}
[Token(Token = "0x2000026")]
public class AddTeamsScoreActionAsset : AIActionAsset
{
	[Token(Token = "0x4000073")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AddTeamsScoreAction Settings;

	[Token(Token = "0x17000037")]
	public override AssetObject AssetObject
	{
		[Token(Token = "0x600008D")]
		[Address(RVA = "0x1323D78", Offset = "0x1323D78", VA = "0x1323D78", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600008E")]
	[Address(RVA = "0x1323D80", Offset = "0x1323D80", VA = "0x1323D80")]
	public AddTeamsScoreActionAsset()
	{
	}
}
[Token(Token = "0x2000027")]
public static class AddTeamsScoreActionAssetExts
{
	[Token(Token = "0x600008F")]
	[Address(RVA = "0x1323D88", Offset = "0x1323D88", VA = "0x1323D88")]
	public static AddTeamsScoreActionAsset GetUnityAsset(this AddTeamsScoreAction data)
	{
		return null;
	}
}
[Token(Token = "0x2000028")]
public class AnimationStateControlActionAsset : AIActionAsset
{
	[Token(Token = "0x4000074")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AnimationStateControlAction Settings;

	[Token(Token = "0x17000038")]
	public override AssetObject AssetObject
	{
		[Token(Token = "0x6000090")]
		[Address(RVA = "0x1328BE4", Offset = "0x1328BE4", VA = "0x1328BE4", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000091")]
	[Address(RVA = "0x1328BEC", Offset = "0x1328BEC", VA = "0x1328BEC")]
	public AnimationStateControlActionAsset()
	{
	}
}
[Token(Token = "0x2000029")]
public static class AnimationStateControlActionAssetExts
{
	[Token(Token = "0x6000092")]
	[Address(RVA = "0x1328BF4", Offset = "0x1328BF4", VA = "0x1328BF4")]
	public static AnimationStateControlActionAsset GetUnityAsset(this AnimationStateControlAction data)
	{
		return null;
	}
}
[Token(Token = "0x200002A")]
public class AreEntitiesEqualDecisionAsset : HFSMDecisionAsset
{
	[Token(Token = "0x4000075")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AreEntitiesEqualDecision Settings;

	[Token(Token = "0x17000039")]
	public override AssetObject AssetObject
	{
		[Token(Token = "0x6000093")]
		[Address(RVA = "0x1329150", Offset = "0x1329150", VA = "0x1329150", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000094")]
	[Address(RVA = "0x1329158", Offset = "0x1329158", VA = "0x1329158")]
	public AreEntitiesEqualDecisionAsset()
	{
	}
}
[Token(Token = "0x200002B")]
public static class AreEntitiesEqualDecisionAssetExts
{
	[Token(Token = "0x6000095")]
	[Address(RVA = "0x1329160", Offset = "0x1329160", VA = "0x1329160")]
	public static AreEntitiesEqualDecisionAsset GetUnityAsset(this AreEntitiesEqualDecision data)
	{
		return null;
	}
}
[Token(Token = "0x200002C")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBC40EC", Offset = "0xBC40EC")]
public class BTBlackboardCompareAsset : BTDecoratorAsset
{
	[Token(Token = "0x4000076")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public BTBlackboardCompare Settings;

	[Token(Token = "0x1700003A")]
	public override AssetObject AssetObject
	{
		[Token(Token = "0x6000096")]
		[Address(RVA = "0x132B5F4", Offset = "0x132B5F4", VA = "0x132B5F4", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000097")]
	[Address(RVA = "0x132B5FC", Offset = "0x132B5FC", VA = "0x132B5FC", Slot = "9")]
	public override void Reset()
	{
	}

	[Token(Token = "0x6000098")]
	[Address(RVA = "0x132B660", Offset = "0x132B660", VA = "0x132B660")]
	public BTBlackboardCompareAsset()
	{
	}
}
[Token(Token = "0x200002D")]
public static class BTBlackboardCompareAssetExts
{
	[Token(Token = "0x6000099")]
	[Address(RVA = "0x132B670", Offset = "0x132B670", VA = "0x132B670")]
	public static BTBlackboardCompareAsset GetUnityAsset(this BTBlackboardCompare data)
	{
		return null;
	}
}
[Token(Token = "0x200002E")]
public abstract class BTCompositeAsset : BTNodeAsset
{
	[Token(Token = "0x600009A")]
	[Address(RVA = "0x132B6F8", Offset = "0x132B6F8", VA = "0x132B6F8")]
	protected BTCompositeAsset()
	{
	}
}
[Token(Token = "0x200002F")]
public static class BTCompositeAssetExts
{
	[Token(Token = "0x600009B")]
	[Address(RVA = "0x132B708", Offset = "0x132B708", VA = "0x132B708")]
	public static BTCompositeAsset GetUnityAsset(this BTComposite data)
	{
		return null;
	}
}
[Token(Token = "0x2000030")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBC4150", Offset = "0xBC4150")]
public class BTCooldownAsset : BTDecoratorAsset
{
	[Token(Token = "0x4000077")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public BTCooldown Settings;

	[Token(Token = "0x1700003B")]
	public override AssetObject AssetObject
	{
		[Token(Token = "0x600009C")]
		[Address(RVA = "0x132B790", Offset = "0x132B790", VA = "0x132B790", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600009D")]
	[Address(RVA = "0x132B798", Offset = "0x132B798", VA = "0x132B798", Slot = "9")]
	public override void Reset()
	{
	}

	[Token(Token = "0x600009E")]
	[Address(RVA = "0x132B7FC", Offset = "0x132B7FC", VA = "0x132B7FC")]
	public BTCooldownAsset()
	{
	}
}
[Token(Token = "0x2000031")]
public static class BTCooldownAssetExts
{
	[Token(Token = "0x600009F")]
	[Address(RVA = "0x132B804", Offset = "0x132B804", VA = "0x132B804")]
	public static BTCooldownAsset GetUnityAsset(this BTCooldown data)
	{
		return null;
	}
}
[Token(Token = "0x2000032")]
public abstract class BTDecoratorAsset : BTNodeAsset
{
	[Token(Token = "0x60000A0")]
	[Address(RVA = "0x132B668", Offset = "0x132B668", VA = "0x132B668")]
	protected BTDecoratorAsset()
	{
	}
}
[Token(Token = "0x2000033")]
public static class BTDecoratorAssetExts
{
	[Token(Token = "0x60000A1")]
	[Address(RVA = "0x132B88C", Offset = "0x132B88C", VA = "0x132B88C")]
	public static BTDecoratorAsset GetUnityAsset(this BTDecorator data)
	{
		return null;
	}
}
[Token(Token = "0x2000034")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBC41B4", Offset = "0xBC41B4")]
public class BTForceResultAsset : BTDecoratorAsset
{
	[Token(Token = "0x4000078")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public BTForceResult Settings;

	[Token(Token = "0x1700003C")]
	public override AssetObject AssetObject
	{
		[Token(Token = "0x60000A2")]
		[Address(RVA = "0x132B914", Offset = "0x132B914", VA = "0x132B914", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60000A3")]
	[Address(RVA = "0x132B91C", Offset = "0x132B91C", VA = "0x132B91C", Slot = "9")]
	public override void Reset()
	{
	}

	[Token(Token = "0x60000A4")]
	[Address(RVA = "0x132B980", Offset = "0x132B980", VA = "0x132B980")]
	public BTForceResultAsset()
	{
	}
}
[Token(Token = "0x2000035")]
public static class BTForceResultAssetExts
{
	[Token(Token = "0x60000A5")]
	[Address(RVA = "0x132B988", Offset = "0x132B988", VA = "0x132B988")]
	public static BTForceResultAsset GetUnityAsset(this BTForceResult data)
	{
		return null;
	}
}
[Token(Token = "0x2000036")]
public abstract class BTLeafAsset : BTNodeAsset
{
	[Token(Token = "0x60000A6")]
	[Address(RVA = "0x132BA10", Offset = "0x132BA10", VA = "0x132BA10")]
	protected BTLeafAsset()
	{
	}
}
[Token(Token = "0x2000037")]
public static class BTLeafAssetExts
{
	[Token(Token = "0x60000A7")]
	[Address(RVA = "0x132BA18", Offset = "0x132BA18", VA = "0x132BA18")]
	public static BTLeafAsset GetUnityAsset(this BTLeaf data)
	{
		return null;
	}
}
[Token(Token = "0x2000038")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBC4218", Offset = "0xBC4218")]
public class BTLoopAsset : BTDecoratorAsset
{
	[Token(Token = "0x4000079")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public BTLoop Settings;

	[Token(Token = "0x1700003D")]
	public override AssetObject AssetObject
	{
		[Token(Token = "0x60000A8")]
		[Address(RVA = "0x132BAA0", Offset = "0x132BAA0", VA = "0x132BAA0", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60000A9")]
	[Address(RVA = "0x132BAA8", Offset = "0x132BAA8", VA = "0x132BAA8", Slot = "9")]
	public override void Reset()
	{
	}

	[Token(Token = "0x60000AA")]
	[Address(RVA = "0x132BB0C", Offset = "0x132BB0C", VA = "0x132BB0C")]
	public BTLoopAsset()
	{
	}
}
[Token(Token = "0x2000039")]
public static class BTLoopAssetExts
{
	[Token(Token = "0x60000AB")]
	[Address(RVA = "0x132BB14", Offset = "0x132BB14", VA = "0x132BB14")]
	public static BTLoopAsset GetUnityAsset(this BTLoop data)
	{
		return null;
	}
}
[Token(Token = "0x200003A")]
public abstract class BTNodeAsset : AssetBase
{
	[Token(Token = "0x60000AC")]
	[Address(RVA = "0x132B700", Offset = "0x132B700", VA = "0x132B700")]
	protected BTNodeAsset()
	{
	}
}
[Token(Token = "0x200003B")]
public static class BTNodeAssetExts
{
	[Token(Token = "0x60000AD")]
	[Address(RVA = "0x132BB9C", Offset = "0x132BB9C", VA = "0x132BB9C")]
	public static BTNodeAsset GetUnityAsset(this BTNode data)
	{
		return null;
	}
}
[Token(Token = "0x200003C")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBC427C", Offset = "0xBC427C")]
public class BTRootAsset : BTDecoratorAsset
{
	[Token(Token = "0x400007A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public BTRoot Settings;

	[Token(Token = "0x1700003E")]
	public override AssetObject AssetObject
	{
		[Token(Token = "0x60000AE")]
		[Address(RVA = "0x132BC24", Offset = "0x132BC24", VA = "0x132BC24", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60000AF")]
	[Address(RVA = "0x132BC2C", Offset = "0x132BC2C", VA = "0x132BC2C", Slot = "9")]
	public override void Reset()
	{
	}

	[Token(Token = "0x60000B0")]
	[Address(RVA = "0x132BC90", Offset = "0x132BC90", VA = "0x132BC90")]
	public BTRootAsset()
	{
	}
}
[Token(Token = "0x200003D")]
public static class BTRootAssetExts
{
	[Token(Token = "0x60000B1")]
	[Address(RVA = "0x132BC98", Offset = "0x132BC98", VA = "0x132BC98")]
	public static BTRootAsset GetUnityAsset(this BTRoot data)
	{
		return null;
	}
}
[Token(Token = "0x200003E")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBC42D0", Offset = "0xBC42D0")]
public class BTSelectorAsset : BTCompositeAsset
{
	[Token(Token = "0x400007B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public BTSelector Settings;

	[Token(Token = "0x1700003F")]
	public override AssetObject AssetObject
	{
		[Token(Token = "0x60000B2")]
		[Address(RVA = "0x132BD20", Offset = "0x132BD20", VA = "0x132BD20", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60000B3")]
	[Address(RVA = "0x132BD28", Offset = "0x132BD28", VA = "0x132BD28", Slot = "9")]
	public override void Reset()
	{
	}

	[Token(Token = "0x60000B4")]
	[Address(RVA = "0x132BD8C", Offset = "0x132BD8C", VA = "0x132BD8C")]
	public BTSelectorAsset()
	{
	}
}
[Token(Token = "0x200003F")]
public static class BTSelectorAssetExts
{
	[Token(Token = "0x60000B5")]
	[Address(RVA = "0x132BD94", Offset = "0x132BD94", VA = "0x132BD94")]
	public static BTSelectorAsset GetUnityAsset(this BTSelector data)
	{
		return null;
	}
}
[Token(Token = "0x2000040")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBC4324", Offset = "0xBC4324")]
public class BTSequenceAsset : BTCompositeAsset
{
	[Token(Token = "0x400007C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public BTSequence Settings;

	[Token(Token = "0x17000040")]
	public override AssetObject AssetObject
	{
		[Token(Token = "0x60000B6")]
		[Address(RVA = "0x132BE1C", Offset = "0x132BE1C", VA = "0x132BE1C", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60000B7")]
	[Address(RVA = "0x132BE24", Offset = "0x132BE24", VA = "0x132BE24", Slot = "9")]
	public override void Reset()
	{
	}

	[Token(Token = "0x60000B8")]
	[Address(RVA = "0x132BE88", Offset = "0x132BE88", VA = "0x132BE88")]
	public BTSequenceAsset()
	{
	}
}
[Token(Token = "0x2000041")]
public static class BTSequenceAssetExts
{
	[Token(Token = "0x60000B9")]
	[Address(RVA = "0x132BE90", Offset = "0x132BE90", VA = "0x132BE90")]
	public static BTSequenceAsset GetUnityAsset(this BTSequence data)
	{
		return null;
	}
}
[Token(Token = "0x2000042")]
public abstract class BTServiceAsset : AssetBase
{
	[Token(Token = "0x60000BA")]
	[Address(RVA = "0x132BF18", Offset = "0x132BF18", VA = "0x132BF18")]
	protected BTServiceAsset()
	{
	}
}
[Token(Token = "0x2000043")]
public static class BTServiceAssetExts
{
	[Token(Token = "0x60000BB")]
	[Address(RVA = "0x132BF20", Offset = "0x132BF20", VA = "0x132BF20")]
	public static BTServiceAsset GetUnityAsset(this BTService data)
	{
		return null;
	}
}
[Token(Token = "0x2000044")]
public static class BotDisplayDataAssetExts
{
	[Token(Token = "0x60000BC")]
	[Address(RVA = "0x1333408", Offset = "0x1333408", VA = "0x1333408")]
	public static BotDisplayDataAsset GetUnityAsset(this BotDisplayData data)
	{
		return null;
	}
}
[Token(Token = "0x2000045")]
public class CalculateGrenadeAimPositionAsset : AIActionAsset
{
	[Token(Token = "0x400007D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public CalculateGrenadeAimPosition Settings;

	[Token(Token = "0x17000041")]
	public override AssetObject AssetObject
	{
		[Token(Token = "0x60000BD")]
		[Address(RVA = "0x1334EA4", Offset = "0x1334EA4", VA = "0x1334EA4", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60000BE")]
	[Address(RVA = "0x1334EAC", Offset = "0x1334EAC", VA = "0x1334EAC")]
	public CalculateGrenadeAimPositionAsset()
	{
	}
}
[Token(Token = "0x2000046")]
public static class CalculateGrenadeAimPositionAssetExts
{
	[Token(Token = "0x60000BF")]
	[Address(RVA = "0x1334EB4", Offset = "0x1334EB4", VA = "0x1334EB4")]
	public static CalculateGrenadeAimPositionAsset GetUnityAsset(this CalculateGrenadeAimPosition data)
	{
		return null;
	}
}
[Token(Token = "0x2000047")]
public class CanShotToTileDecisionAsset : HFSMDecisionAsset
{
	[Token(Token = "0x400007E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public CanShotToTileDecision Settings;

	[Token(Token = "0x17000042")]
	public override AssetObject AssetObject
	{
		[Token(Token = "0x60000C0")]
		[Address(RVA = "0x1334FBC", Offset = "0x1334FBC", VA = "0x1334FBC", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60000C1")]
	[Address(RVA = "0x1334FC4", Offset = "0x1334FC4", VA = "0x1334FC4")]
	public CanShotToTileDecisionAsset()
	{
	}
}
[Token(Token = "0x2000048")]
public static class CanShotToTileDecisionAssetExts
{
	[Token(Token = "0x60000C2")]
	[Address(RVA = "0x1334FCC", Offset = "0x1334FCC", VA = "0x1334FCC")]
	public static CanShotToTileDecisionAsset GetUnityAsset(this CanShotToTileDecision data)
	{
		return null;
	}
}
[Token(Token = "0x2000049")]
public class CancelPingActionAsset : AIActionAsset
{
	[Token(Token = "0x400007F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public CancelPingAction Settings;

	[Token(Token = "0x17000043")]
	public override AssetObject AssetObject
	{
		[Token(Token = "0x60000C3")]
		[Address(RVA = "0x1335054", Offset = "0x1335054", VA = "0x1335054", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60000C4")]
	[Address(RVA = "0x133505C", Offset = "0x133505C", VA = "0x133505C")]
	public CancelPingActionAsset()
	{
	}
}
[Token(Token = "0x200004A")]
public static class CancelPingActionAssetExts
{
	[Token(Token = "0x60000C5")]
	[Address(RVA = "0x1335064", Offset = "0x1335064", VA = "0x1335064")]
	public static CancelPingActionAsset GetUnityAsset(this CancelPingAction data)
	{
		return null;
	}
}
[Token(Token = "0x200004B")]
public class CastSpellActionAsset : AIActionAsset
{
	[Token(Token = "0x4000080")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public CastSpellAction Settings;

	[Token(Token = "0x17000044")]
	public override AssetObject AssetObject
	{
		[Token(Token = "0x60000C6")]
		[Address(RVA = "0x1335604", Offset = "0x1335604", VA = "0x1335604", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60000C7")]
	[Address(RVA = "0x133560C", Offset = "0x133560C", VA = "0x133560C")]
	public CastSpellActionAsset()
	{
	}
}
[Token(Token = "0x200004C")]
public static class CastSpellActionAssetExts
{
	[Token(Token = "0x60000C8")]
	[Address(RVA = "0x1335614", Offset = "0x1335614", VA = "0x1335614")]
	public static CastSpellActionAsset GetUnityAsset(this CastSpellAction data)
	{
		return null;
	}
}
[Token(Token = "0x200004D")]
public class ChangeBombArmingStateActionAsset : AIActionAsset
{
	[Token(Token = "0x4000081")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ChangeBombArmingStateAction Settings;

	[Token(Token = "0x17000045")]
	public override AssetObject AssetObject
	{
		[Token(Token = "0x60000C9")]
		[Address(RVA = "0x1338EDC", Offset = "0x1338EDC", VA = "0x1338EDC", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60000CA")]
	[Address(RVA = "0x1338EE4", Offset = "0x1338EE4", VA = "0x1338EE4")]
	public ChangeBombArmingStateActionAsset()
	{
	}
}
[Token(Token = "0x200004E")]
public static class ChangeBombArmingStateActionAssetExts
{
	[Token(Token = "0x60000CB")]
	[Address(RVA = "0x1338EEC", Offset = "0x1338EEC", VA = "0x1338EEC")]
	public static ChangeBombArmingStateActionAsset GetUnityAsset(this ChangeBombArmingStateAction data)
	{
		return null;
	}
}
[Token(Token = "0x200004F")]
public class ChangeHealthActionAsset : AIActionAsset
{
	[Token(Token = "0x4000082")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ChangeHealthAction Settings;

	[Token(Token = "0x17000046")]
	public override AssetObject AssetObject
	{
		[Token(Token = "0x60000CC")]
		[Address(RVA = "0x1338F74", Offset = "0x1338F74", VA = "0x1338F74", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60000CD")]
	[Address(RVA = "0x1338F7C", Offset = "0x1338F7C", VA = "0x1338F7C")]
	public ChangeHealthActionAsset()
	{
	}
}
[Token(Token = "0x2000050")]
public static class ChangeHealthActionAssetExts
{
	[Token(Token = "0x60000CE")]
	[Address(RVA = "0x1338F84", Offset = "0x1338F84", VA = "0x1338F84")]
	public static ChangeHealthActionAsset GetUnityAsset(this ChangeHealthAction data)
	{
		return null;
	}
}
[Token(Token = "0x2000051")]
public class CheckBlackboardFPAsset : HFSMDecisionAsset
{
	[Token(Token = "0x4000083")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public CheckBlackboardFP Settings;

	[Token(Token = "0x17000047")]
	public override AssetObject AssetObject
	{
		[Token(Token = "0x60000CF")]
		[Address(RVA = "0x1160858", Offset = "0x1160858", VA = "0x1160858", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60000D0")]
	[Address(RVA = "0x1160860", Offset = "0x1160860", VA = "0x1160860")]
	public CheckBlackboardFPAsset()
	{
	}
}
[Token(Token = "0x2000052")]
public static class CheckBlackboardFPAssetExts
{
	[Token(Token = "0x60000D1")]
	[Address(RVA = "0x1160868", Offset = "0x1160868", VA = "0x1160868")]
	public static CheckBlackboardFPAsset GetUnityAsset(this CheckBlackboardFP data)
	{
		return null;
	}
}
[Token(Token = "0x2000053")]
public class CheckBlackboardIntAsset : HFSMDecisionAsset
{
	[Token(Token = "0x4000084")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public CheckBlackboardInt Settings;

	[Token(Token = "0x17000048")]
	public override AssetObject AssetObject
	{
		[Token(Token = "0x60000D2")]
		[Address(RVA = "0x11608F0", Offset = "0x11608F0", VA = "0x11608F0", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60000D3")]
	[Address(RVA = "0x11608F8", Offset = "0x11608F8", VA = "0x11608F8")]
	public CheckBlackboardIntAsset()
	{
	}
}
[Token(Token = "0x2000054")]
public static class CheckBlackboardIntAssetExts
{
	[Token(Token = "0x60000D4")]
	[Address(RVA = "0x1160900", Offset = "0x1160900", VA = "0x1160900")]
	public static CheckBlackboardIntAsset GetUnityAsset(this CheckBlackboardInt data)
	{
		return null;
	}
}
[Token(Token = "0x2000055")]
public class CheckBombStateDecisionAsset : HFSMDecisionAsset
{
	[Token(Token = "0x4000085")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public CheckBombStateDecision Settings;

	[Token(Token = "0x17000049")]
	public override AssetObject AssetObject
	{
		[Token(Token = "0x60000D5")]
		[Address(RVA = "0x1160988", Offset = "0x1160988", VA = "0x1160988", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60000D6")]
	[Address(RVA = "0x1160990", Offset = "0x1160990", VA = "0x1160990")]
	public CheckBombStateDecisionAsset()
	{
	}
}
[Token(Token = "0x2000056")]
public static class CheckBombStateDecisionAssetExts
{
	[Token(Token = "0x60000D7")]
	[Address(RVA = "0x1160998", Offset = "0x1160998", VA = "0x1160998")]
	public static CheckBombStateDecisionAsset GetUnityAsset(this CheckBombStateDecision data)
	{
		return null;
	}
}
[Token(Token = "0x2000057")]
public class CheckCastedSpellTypeDecisionAsset : HFSMDecisionAsset
{
	[Token(Token = "0x4000086")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public CheckCastedSpellTypeDecision Settings;

	[Token(Token = "0x1700004A")]
	public override AssetObject AssetObject
	{
		[Token(Token = "0x60000D8")]
		[Address(RVA = "0x1160A20", Offset = "0x1160A20", VA = "0x1160A20", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60000D9")]
	[Address(RVA = "0x1160A28", Offset = "0x1160A28", VA = "0x1160A28")]
	public CheckCastedSpellTypeDecisionAsset()
	{
	}
}
[Token(Token = "0x2000058")]
public static class CheckCastedSpellTypeDecisionAssetExts
{
	[Token(Token = "0x60000DA")]
	[Address(RVA = "0x1160A30", Offset = "0x1160A30", VA = "0x1160A30")]
	public static CheckCastedSpellTypeDecisionAsset GetUnityAsset(this CheckCastedSpellTypeDecision data)
	{
		return null;
	}
}
[Token(Token = "0x2000059")]
public class CheckDifficultyLevelDecisionAsset : HFSMDecisionAsset
{
	[Token(Token = "0x4000087")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public CheckDifficultyLevelDecision Settings;

	[Token(Token = "0x1700004B")]
	public override AssetObject AssetObject
	{
		[Token(Token = "0x60000DB")]
		[Address(RVA = "0x1160AB8", Offset = "0x1160AB8", VA = "0x1160AB8", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60000DC")]
	[Address(RVA = "0x1160AC0", Offset = "0x1160AC0", VA = "0x1160AC0")]
	public CheckDifficultyLevelDecisionAsset()
	{
	}
}
[Token(Token = "0x200005A")]
public static class CheckDifficultyLevelDecisionAssetExts
{
	[Token(Token = "0x60000DD")]
	[Address(RVA = "0x1160AC8", Offset = "0x1160AC8", VA = "0x1160AC8")]
	public static CheckDifficultyLevelDecisionAsset GetUnityAsset(this CheckDifficultyLevelDecision data)
	{
		return null;
	}
}
[Token(Token = "0x200005B")]
public class CheckDistanceDecisionAsset : HFSMDecisionAsset
{
	[Token(Token = "0x4000088")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public CheckDistanceDecision Settings;

	[Token(Token = "0x1700004C")]
	public override AssetObject AssetObject
	{
		[Token(Token = "0x60000DE")]
		[Address(RVA = "0x1160B50", Offset = "0x1160B50", VA = "0x1160B50", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60000DF")]
	[Address(RVA = "0x1160B58", Offset = "0x1160B58", VA = "0x1160B58")]
	public CheckDistanceDecisionAsset()
	{
	}
}
[Token(Token = "0x200005C")]
public static class CheckDistanceDecisionAssetExts
{
	[Token(Token = "0x60000E0")]
	[Address(RVA = "0x1160B60", Offset = "0x1160B60", VA = "0x1160B60")]
	public static CheckDistanceDecisionAsset GetUnityAsset(this CheckDistanceDecision data)
	{
		return null;
	}
}
[Token(Token = "0x200005D")]
public class CheckGameModeDecisionAsset : HFSMDecisionAsset
{
	[Token(Token = "0x4000089")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public CheckGameModeDecision Settings;

	[Token(Token = "0x1700004D")]
	public override AssetObject AssetObject
	{
		[Token(Token = "0x60000E1")]
		[Address(RVA = "0x1160BE8", Offset = "0x1160BE8", VA = "0x1160BE8", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60000E2")]
	[Address(RVA = "0x1160BF0", Offset = "0x1160BF0", VA = "0x1160BF0")]
	public CheckGameModeDecisionAsset()
	{
	}
}
[Token(Token = "0x200005E")]
public static class CheckGameModeDecisionAssetExts
{
	[Token(Token = "0x60000E3")]
	[Address(RVA = "0x1160BF8", Offset = "0x1160BF8", VA = "0x1160BF8")]
	public static CheckGameModeDecisionAsset GetUnityAsset(this CheckGameModeDecision data)
	{
		return null;
	}
}
[Token(Token = "0x200005F")]
public class CheckHealthDecisionAsset : HFSMDecisionAsset
{
	[Token(Token = "0x400008A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public CheckHealthDecision Settings;

	[Token(Token = "0x1700004E")]
	public override AssetObject AssetObject
	{
		[Token(Token = "0x60000E4")]
		[Address(RVA = "0x1160C80", Offset = "0x1160C80", VA = "0x1160C80", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60000E5")]
	[Address(RVA = "0x1160C88", Offset = "0x1160C88", VA = "0x1160C88")]
	public CheckHealthDecisionAsset()
	{
	}
}
[Token(Token = "0x2000060")]
public static class CheckHealthDecisionAssetExts
{
	[Token(Token = "0x60000E6")]
	[Address(RVA = "0x1160C90", Offset = "0x1160C90", VA = "0x1160C90")]
	public static CheckHealthDecisionAsset GetUnityAsset(this CheckHealthDecision data)
	{
		return null;
	}
}
[Token(Token = "0x2000061")]
public class CheckHumanPlayersDecisionAsset : HFSMDecisionAsset
{
	[Token(Token = "0x400008B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public CheckHumanPlayersDecision Settings;

	[Token(Token = "0x1700004F")]
	public override AssetObject AssetObject
	{
		[Token(Token = "0x60000E7")]
		[Address(RVA = "0x1160D18", Offset = "0x1160D18", VA = "0x1160D18", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60000E8")]
	[Address(RVA = "0x1160D20", Offset = "0x1160D20", VA = "0x1160D20")]
	public CheckHumanPlayersDecisionAsset()
	{
	}
}
[Token(Token = "0x2000062")]
public static class CheckHumanPlayersDecisionAssetExts
{
	[Token(Token = "0x60000E9")]
	[Address(RVA = "0x1160D28", Offset = "0x1160D28", VA = "0x1160D28")]
	public static CheckHumanPlayersDecisionAsset GetUnityAsset(this CheckHumanPlayersDecision data)
	{
		return null;
	}
}
[Token(Token = "0x2000063")]
public class CheckIfMatchIsOverDecisionAsset : HFSMDecisionAsset
{
	[Token(Token = "0x400008C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public CheckIfMatchIsOverDecision Settings;

	[Token(Token = "0x17000050")]
	public override AssetObject AssetObject
	{
		[Token(Token = "0x60000EA")]
		[Address(RVA = "0x1161150", Offset = "0x1161150", VA = "0x1161150", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60000EB")]
	[Address(RVA = "0x1161158", Offset = "0x1161158", VA = "0x1161158")]
	public CheckIfMatchIsOverDecisionAsset()
	{
	}
}
[Token(Token = "0x2000064")]
public static class CheckIfMatchIsOverDecisionAssetExts
{
	[Token(Token = "0x60000EC")]
	[Address(RVA = "0x1161160", Offset = "0x1161160", VA = "0x1161160")]
	public static CheckIfMatchIsOverDecisionAsset GetUnityAsset(this CheckIfMatchIsOverDecision data)
	{
		return null;
	}
}
[Token(Token = "0x2000065")]
public class CheckMatchPhaseDecisionAsset : HFSMDecisionAsset
{
	[Token(Token = "0x400008D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public CheckMatchPhaseDecision Settings;

	[Token(Token = "0x17000051")]
	public override AssetObject AssetObject
	{
		[Token(Token = "0x60000ED")]
		[Address(RVA = "0x11611E8", Offset = "0x11611E8", VA = "0x11611E8", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60000EE")]
	[Address(RVA = "0x11611F0", Offset = "0x11611F0", VA = "0x11611F0")]
	public CheckMatchPhaseDecisionAsset()
	{
	}
}
[Token(Token = "0x2000066")]
public static class CheckMatchPhaseDecisionAssetExts
{
	[Token(Token = "0x60000EF")]
	[Address(RVA = "0x11611F8", Offset = "0x11611F8", VA = "0x11611F8")]
	public static CheckMatchPhaseDecisionAsset GetUnityAsset(this CheckMatchPhaseDecision data)
	{
		return null;
	}
}
[Token(Token = "0x2000067")]
public class CheckSpellResultDecisionAsset : HFSMDecisionAsset
{
	[Token(Token = "0x400008E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public CheckSpellResultDecision Settings;

	[Token(Token = "0x17000052")]
	public override AssetObject AssetObject
	{
		[Token(Token = "0x60000F0")]
		[Address(RVA = "0x1161280", Offset = "0x1161280", VA = "0x1161280", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60000F1")]
	[Address(RVA = "0x1161288", Offset = "0x1161288", VA = "0x1161288")]
	public CheckSpellResultDecisionAsset()
	{
	}
}
[Token(Token = "0x2000068")]
public static class CheckSpellResultDecisionAssetExts
{
	[Token(Token = "0x60000F2")]
	[Address(RVA = "0x1161290", Offset = "0x1161290", VA = "0x1161290")]
	public static CheckSpellResultDecisionAsset GetUnityAsset(this CheckSpellResultDecision data)
	{
		return null;
	}
}
[Token(Token = "0x2000069")]
public class CheckSpellSlotDecisionAsset : HFSMDecisionAsset
{
	[Token(Token = "0x400008F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public CheckSpellSlotDecision Settings;

	[Token(Token = "0x17000053")]
	public override AssetObject AssetObject
	{
		[Token(Token = "0x60000F3")]
		[Address(RVA = "0x1161318", Offset = "0x1161318", VA = "0x1161318", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60000F4")]
	[Address(RVA = "0x1161320", Offset = "0x1161320", VA = "0x1161320")]
	public CheckSpellSlotDecisionAsset()
	{
	}
}
[Token(Token = "0x200006A")]
public static class CheckSpellSlotDecisionAssetExts
{
	[Token(Token = "0x60000F5")]
	[Address(RVA = "0x1161328", Offset = "0x1161328", VA = "0x1161328")]
	public static CheckSpellSlotDecisionAsset GetUnityAsset(this CheckSpellSlotDecision data)
	{
		return null;
	}
}
[Token(Token = "0x200006B")]
public class CheckTaskResultDecisionAsset : HFSMDecisionAsset
{
	[Token(Token = "0x4000090")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public CheckTaskResultDecision Settings;

	[Token(Token = "0x17000054")]
	public override AssetObject AssetObject
	{
		[Token(Token = "0x60000F6")]
		[Address(RVA = "0x11613B0", Offset = "0x11613B0", VA = "0x11613B0", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60000F7")]
	[Address(RVA = "0x11613B8", Offset = "0x11613B8", VA = "0x11613B8")]
	public CheckTaskResultDecisionAsset()
	{
	}
}
[Token(Token = "0x200006C")]
public static class CheckTaskResultDecisionAssetExts
{
	[Token(Token = "0x60000F8")]
	[Address(RVA = "0x11613C0", Offset = "0x11613C0", VA = "0x11613C0")]
	public static CheckTaskResultDecisionAsset GetUnityAsset(this CheckTaskResultDecision data)
	{
		return null;
	}
}
[Token(Token = "0x200006D")]
public class CheckTeamDecisionAsset : HFSMDecisionAsset
{
	[Token(Token = "0x4000091")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public CheckTeamDecision Settings;

	[Token(Token = "0x17000055")]
	public override AssetObject AssetObject
	{
		[Token(Token = "0x60000F9")]
		[Address(RVA = "0x1161448", Offset = "0x1161448", VA = "0x1161448", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60000FA")]
	[Address(RVA = "0x1161450", Offset = "0x1161450", VA = "0x1161450")]
	public CheckTeamDecisionAsset()
	{
	}
}
[Token(Token = "0x200006E")]
public static class CheckTeamDecisionAssetExts
{
	[Token(Token = "0x60000FB")]
	[Address(RVA = "0x1161458", Offset = "0x1161458", VA = "0x1161458")]
	public static CheckTeamDecisionAsset GetUnityAsset(this CheckTeamDecision data)
	{
		return null;
	}
}
[Token(Token = "0x200006F")]
public class CompareSpellsSetupDecisionAsset : HFSMDecisionAsset
{
	[Token(Token = "0x4000092")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public CompareSpellsSetupDecision Settings;

	[Token(Token = "0x17000056")]
	public override AssetObject AssetObject
	{
		[Token(Token = "0x60000FC")]
		[Address(RVA = "0x1166084", Offset = "0x1166084", VA = "0x1166084", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60000FD")]
	[Address(RVA = "0x116608C", Offset = "0x116608C", VA = "0x116608C")]
	public CompareSpellsSetupDecisionAsset()
	{
	}
}
[Token(Token = "0x2000070")]
public static class CompareSpellsSetupDecisionAssetExts
{
	[Token(Token = "0x60000FE")]
	[Address(RVA = "0x1166094", Offset = "0x1166094", VA = "0x1166094")]
	public static CompareSpellsSetupDecisionAsset GetUnityAsset(this CompareSpellsSetupDecision data)
	{
		return null;
	}
}
[Token(Token = "0x2000071")]
public class ConvertIntToFPActionAsset : AIActionAsset
{
	[Token(Token = "0x4000093")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ConvertIntToFPAction Settings;

	[Token(Token = "0x17000057")]
	public override AssetObject AssetObject
	{
		[Token(Token = "0x60000FF")]
		[Address(RVA = "0x116794C", Offset = "0x116794C", VA = "0x116794C", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000100")]
	[Address(RVA = "0x1167954", Offset = "0x1167954", VA = "0x1167954")]
	public ConvertIntToFPActionAsset()
	{
	}
}
[Token(Token = "0x2000072")]
public static class ConvertIntToFPActionAssetExts
{
	[Token(Token = "0x6000101")]
	[Address(RVA = "0x116795C", Offset = "0x116795C", VA = "0x116795C")]
	public static ConvertIntToFPActionAsset GetUnityAsset(this ConvertIntToFPAction data)
	{
		return null;
	}
}
[Token(Token = "0x2000073")]
public class CopyVariableActionAsset : AIActionAsset
{
	[Token(Token = "0x4000094")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public CopyVariableAction Settings;

	[Token(Token = "0x17000058")]
	public override AssetObject AssetObject
	{
		[Token(Token = "0x6000102")]
		[Address(RVA = "0x1167F98", Offset = "0x1167F98", VA = "0x1167F98", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000103")]
	[Address(RVA = "0x1167FA0", Offset = "0x1167FA0", VA = "0x1167FA0")]
	public CopyVariableActionAsset()
	{
	}
}
[Token(Token = "0x2000074")]
public static class CopyVariableActionAssetExts
{
	[Token(Token = "0x6000104")]
	[Address(RVA = "0x1167FA8", Offset = "0x1167FA8", VA = "0x1167FA8")]
	public static CopyVariableActionAsset GetUnityAsset(this CopyVariableAction data)
	{
		return null;
	}
}
[Token(Token = "0x2000075")]
public class CreateBombActionAsset : AIActionAsset
{
	[Token(Token = "0x4000095")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public CreateBombAction Settings;

	[Token(Token = "0x17000059")]
	public override AssetObject AssetObject
	{
		[Token(Token = "0x6000105")]
		[Address(RVA = "0x1168700", Offset = "0x1168700", VA = "0x1168700", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000106")]
	[Address(RVA = "0x1168708", Offset = "0x1168708", VA = "0x1168708")]
	public CreateBombActionAsset()
	{
	}
}
[Token(Token = "0x2000076")]
public static class CreateBombActionAssetExts
{
	[Token(Token = "0x6000107")]
	[Address(RVA = "0x1168710", Offset = "0x1168710", VA = "0x1168710")]
	public static CreateBombActionAsset GetUnityAsset(this CreateBombAction data)
	{
		return null;
	}
}
[Token(Token = "0x2000077")]
public class CreateBotsActionAsset : AIActionAsset
{
	[Token(Token = "0x4000096")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public CreateBotsAction Settings;

	[Token(Token = "0x1700005A")]
	public override AssetObject AssetObject
	{
		[Token(Token = "0x6000108")]
		[Address(RVA = "0x1168798", Offset = "0x1168798", VA = "0x1168798", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000109")]
	[Address(RVA = "0x11687A0", Offset = "0x11687A0", VA = "0x11687A0")]
	public CreateBotsActionAsset()
	{
	}
}
[Token(Token = "0x2000078")]
public static class CreateBotsActionAssetExts
{
	[Token(Token = "0x600010A")]
	[Address(RVA = "0x11687A8", Offset = "0x11687A8", VA = "0x11687A8")]
	public static CreateBotsActionAsset GetUnityAsset(this CreateBotsAction data)
	{
		return null;
	}
}
[Token(Token = "0x2000079")]
public class CreatePingActionAsset : AIActionAsset
{
	[Token(Token = "0x4000097")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public CreatePingAction Settings;

	[Token(Token = "0x1700005B")]
	public override AssetObject AssetObject
	{
		[Token(Token = "0x600010B")]
		[Address(RVA = "0x1168830", Offset = "0x1168830", VA = "0x1168830", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600010C")]
	[Address(RVA = "0x1168838", Offset = "0x1168838", VA = "0x1168838")]
	public CreatePingActionAsset()
	{
	}
}
[Token(Token = "0x200007A")]
public static class CreatePingActionAssetExts
{
	[Token(Token = "0x600010D")]
	[Address(RVA = "0x1168840", Offset = "0x1168840", VA = "0x1168840")]
	public static CreatePingActionAsset GetUnityAsset(this CreatePingAction data)
	{
		return null;
	}
}
[Token(Token = "0x200007B")]
public class CreateSpecialEffectActionAsset : AIActionAsset
{
	[Token(Token = "0x4000098")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public CreateSpecialEffectAction Settings;

	[Token(Token = "0x1700005C")]
	public override AssetObject AssetObject
	{
		[Token(Token = "0x600010E")]
		[Address(RVA = "0x11688C8", Offset = "0x11688C8", VA = "0x11688C8", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600010F")]
	[Address(RVA = "0x11688D0", Offset = "0x11688D0", VA = "0x11688D0")]
	public CreateSpecialEffectActionAsset()
	{
	}
}
[Token(Token = "0x200007C")]
public static class CreateSpecialEffectActionAssetExts
{
	[Token(Token = "0x6000110")]
	[Address(RVA = "0x11688D8", Offset = "0x11688D8", VA = "0x11688D8")]
	public static CreateSpecialEffectActionAsset GetUnityAsset(this CreateSpecialEffectAction data)
	{
		return null;
	}
}
[Token(Token = "0x200007D")]
public class CreateTaskActionAsset : AIActionAsset
{
	[Token(Token = "0x4000099")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public CreateTaskAction Settings;

	[Token(Token = "0x1700005D")]
	public override AssetObject AssetObject
	{
		[Token(Token = "0x6000111")]
		[Address(RVA = "0x1168960", Offset = "0x1168960", VA = "0x1168960", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000112")]
	[Address(RVA = "0x1168968", Offset = "0x1168968", VA = "0x1168968")]
	public CreateTaskActionAsset()
	{
	}
}
[Token(Token = "0x200007E")]
public static class CreateTaskActionAssetExts
{
	[Token(Token = "0x6000113")]
	[Address(RVA = "0x1168970", Offset = "0x1168970", VA = "0x1168970")]
	public static CreateTaskActionAsset GetUnityAsset(this CreateTaskAction data)
	{
		return null;
	}
}
[Token(Token = "0x200007F")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBC4568", Offset = "0xBC4568")]
public class DebugLeafAsset : BTLeafAsset
{
	[Token(Token = "0x400009A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public DebugLeaf Settings;

	[Token(Token = "0x1700005E")]
	public override AssetObject AssetObject
	{
		[Token(Token = "0x6000114")]
		[Address(RVA = "0x1039C88", Offset = "0x1039C88", VA = "0x1039C88", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000115")]
	[Address(RVA = "0x1039C90", Offset = "0x1039C90", VA = "0x1039C90", Slot = "9")]
	public override void Reset()
	{
	}

	[Token(Token = "0x6000116")]
	[Address(RVA = "0x1039CFC", Offset = "0x1039CFC", VA = "0x1039CFC")]
	public DebugLeafAsset()
	{
	}
}
[Token(Token = "0x2000080")]
public static class DebugLeafAssetExts
{
	[Token(Token = "0x6000117")]
	[Address(RVA = "0x1039D04", Offset = "0x1039D04", VA = "0x1039D04")]
	public static DebugLeafAsset GetUnityAsset(this DebugLeaf data)
	{
		return null;
	}
}
[Token(Token = "0x2000081")]
public class DebugMessageActionAsset : AIActionAsset
{
	[Token(Token = "0x400009B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public DebugMessageAction Settings;

	[Token(Token = "0x1700005F")]
	public override AssetObject AssetObject
	{
		[Token(Token = "0x6000118")]
		[Address(RVA = "0x103A1D0", Offset = "0x103A1D0", VA = "0x103A1D0", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000119")]
	[Address(RVA = "0x103A1D8", Offset = "0x103A1D8", VA = "0x103A1D8")]
	public DebugMessageActionAsset()
	{
	}
}
[Token(Token = "0x2000082")]
public static class DebugMessageActionAssetExts
{
	[Token(Token = "0x600011A")]
	[Address(RVA = "0x103A1E0", Offset = "0x103A1E0", VA = "0x103A1E0")]
	public static DebugMessageActionAsset GetUnityAsset(this DebugMessageAction data)
	{
		return null;
	}
}
[Token(Token = "0x2000083")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBC45CC", Offset = "0xBC45CC")]
public class DebugServiceAsset : BTServiceAsset
{
	[Token(Token = "0x400009C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public DebugService Settings;

	[Token(Token = "0x17000060")]
	public override AssetObject AssetObject
	{
		[Token(Token = "0x600011B")]
		[Address(RVA = "0x103C794", Offset = "0x103C794", VA = "0x103C794", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600011C")]
	[Address(RVA = "0x103C79C", Offset = "0x103C79C", VA = "0x103C79C", Slot = "9")]
	public override void Reset()
	{
	}

	[Token(Token = "0x600011D")]
	[Address(RVA = "0x103C808", Offset = "0x103C808", VA = "0x103C808")]
	public DebugServiceAsset()
	{
	}
}
[Token(Token = "0x2000084")]
public static class DebugServiceAssetExts
{
	[Token(Token = "0x600011E")]
	[Address(RVA = "0x103C810", Offset = "0x103C810", VA = "0x103C810")]
	public static DebugServiceAsset GetUnityAsset(this DebugService data)
	{
		return null;
	}
}
[Token(Token = "0x2000085")]
public class DestroyBombActionAsset : AIActionAsset
{
	[Token(Token = "0x400009D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public DestroyBombAction Settings;

	[Token(Token = "0x17000061")]
	public override AssetObject AssetObject
	{
		[Token(Token = "0x600011F")]
		[Address(RVA = "0x103E43C", Offset = "0x103E43C", VA = "0x103E43C", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000120")]
	[Address(RVA = "0x103E444", Offset = "0x103E444", VA = "0x103E444")]
	public DestroyBombActionAsset()
	{
	}
}
[Token(Token = "0x2000086")]
public static class DestroyBombActionAssetExts
{
	[Token(Token = "0x6000121")]
	[Address(RVA = "0x103E44C", Offset = "0x103E44C", VA = "0x103E44C")]
	public static DestroyBombActionAsset GetUnityAsset(this DestroyBombAction data)
	{
		return null;
	}
}
[Token(Token = "0x2000087")]
public class DestroyEntityAsset : AIActionAsset
{
	[Token(Token = "0x400009E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public DestroyEntity Settings;

	[Token(Token = "0x17000062")]
	public override AssetObject AssetObject
	{
		[Token(Token = "0x6000122")]
		[Address(RVA = "0x103E6A4", Offset = "0x103E6A4", VA = "0x103E6A4", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000123")]
	[Address(RVA = "0x103E6AC", Offset = "0x103E6AC", VA = "0x103E6AC")]
	public DestroyEntityAsset()
	{
	}
}
[Token(Token = "0x2000088")]
public static class DestroyEntityAssetExts
{
	[Token(Token = "0x6000124")]
	[Address(RVA = "0x103E6B4", Offset = "0x103E6B4", VA = "0x103E6B4")]
	public static DestroyEntityAsset GetUnityAsset(this DestroyEntity data)
	{
		return null;
	}
}
[Token(Token = "0x2000089")]
public class DivBlackboardFPValueActionAsset : AIActionAsset
{
	[Token(Token = "0x400009F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public DivBlackboardFPValueAction Settings;

	[Token(Token = "0x17000063")]
	public override AssetObject AssetObject
	{
		[Token(Token = "0x6000125")]
		[Address(RVA = "0x1040DA0", Offset = "0x1040DA0", VA = "0x1040DA0", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000126")]
	[Address(RVA = "0x1040DA8", Offset = "0x1040DA8", VA = "0x1040DA8")]
	public DivBlackboardFPValueActionAsset()
	{
	}
}
[Token(Token = "0x200008A")]
public static class DivBlackboardFPValueActionAssetExts
{
	[Token(Token = "0x6000127")]
	[Address(RVA = "0x1040DB0", Offset = "0x1040DB0", VA = "0x1040DB0")]
	public static DivBlackboardFPValueActionAsset GetUnityAsset(this DivBlackboardFPValueAction data)
	{
		return null;
	}
}
[Token(Token = "0x200008B")]
public class DivBlackboardIntValueActionAsset : AIActionAsset
{
	[Token(Token = "0x40000A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public DivBlackboardIntValueAction Settings;

	[Token(Token = "0x17000064")]
	public override AssetObject AssetObject
	{
		[Token(Token = "0x6000128")]
		[Address(RVA = "0x1040E38", Offset = "0x1040E38", VA = "0x1040E38", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000129")]
	[Address(RVA = "0x1040E40", Offset = "0x1040E40", VA = "0x1040E40")]
	public DivBlackboardIntValueActionAsset()
	{
	}
}
[Token(Token = "0x200008C")]
public static class DivBlackboardIntValueActionAssetExts
{
	[Token(Token = "0x600012A")]
	[Address(RVA = "0x1040E48", Offset = "0x1040E48", VA = "0x1040E48")]
	public static DivBlackboardIntValueActionAsset GetUnityAsset(this DivBlackboardIntValueAction data)
	{
		return null;
	}
}
[Token(Token = "0x200008D")]
public class DropObjectActionAsset : AIActionAsset
{
	[Token(Token = "0x40000A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public DropObjectAction Settings;

	[Token(Token = "0x17000065")]
	public override AssetObject AssetObject
	{
		[Token(Token = "0x600012B")]
		[Address(RVA = "0x1041488", Offset = "0x1041488", VA = "0x1041488", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600012C")]
	[Address(RVA = "0x1041490", Offset = "0x1041490", VA = "0x1041490")]
	public DropObjectActionAsset()
	{
	}
}
[Token(Token = "0x200008E")]
public static class DropObjectActionAssetExts
{
	[Token(Token = "0x600012D")]
	[Address(RVA = "0x1041498", Offset = "0x1041498", VA = "0x1041498")]
	public static DropObjectActionAsset GetUnityAsset(this DropObjectAction data)
	{
		return null;
	}
}
[Token(Token = "0x200008F")]
public class EndOfMatchActionAsset : AIActionAsset
{
	[Token(Token = "0x40000A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public EndOfMatchAction Settings;

	[Token(Token = "0x17000066")]
	public override AssetObject AssetObject
	{
		[Token(Token = "0x600012E")]
		[Address(RVA = "0x1044198", Offset = "0x1044198", VA = "0x1044198", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600012F")]
	[Address(RVA = "0x10441A0", Offset = "0x10441A0", VA = "0x10441A0")]
	public EndOfMatchActionAsset()
	{
	}
}
[Token(Token = "0x2000090")]
public static class EndOfMatchActionAssetExts
{
	[Token(Token = "0x6000130")]
	[Address(RVA = "0x10441A8", Offset = "0x10441A8", VA = "0x10441A8")]
	public static EndOfMatchActionAsset GetUnityAsset(this EndOfMatchAction data)
	{
		return null;
	}
}
[Token(Token = "0x2000091")]
public class EndOfRoundActionAsset : AIActionAsset
{
	[Token(Token = "0x40000A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public EndOfRoundAction Settings;

	[Token(Token = "0x17000067")]
	public override AssetObject AssetObject
	{
		[Token(Token = "0x6000131")]
		[Address(RVA = "0x1044230", Offset = "0x1044230", VA = "0x1044230", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000132")]
	[Address(RVA = "0x1044238", Offset = "0x1044238", VA = "0x1044238")]
	public EndOfRoundActionAsset()
	{
	}
}
[Token(Token = "0x2000092")]
public static class EndOfRoundActionAssetExts
{
	[Token(Token = "0x6000133")]
	[Address(RVA = "0x1044240", Offset = "0x1044240", VA = "0x1044240")]
	public static EndOfRoundActionAsset GetUnityAsset(this EndOfRoundAction data)
	{
		return null;
	}
}
[Token(Token = "0x2000093")]
public class EndPhaseActionAsset : AIActionAsset
{
	[Token(Token = "0x40000A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public EndPhaseAction Settings;

	[Token(Token = "0x17000068")]
	public override AssetObject AssetObject
	{
		[Token(Token = "0x6000134")]
		[Address(RVA = "0x10442D0", Offset = "0x10442D0", VA = "0x10442D0", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000135")]
	[Address(RVA = "0x10442D8", Offset = "0x10442D8", VA = "0x10442D8")]
	public EndPhaseActionAsset()
	{
	}
}
[Token(Token = "0x2000094")]
public static class EndPhaseActionAssetExts
{
	[Token(Token = "0x6000136")]
	[Address(RVA = "0x10442E0", Offset = "0x10442E0", VA = "0x10442E0")]
	public static EndPhaseActionAsset GetUnityAsset(this EndPhaseAction data)
	{
		return null;
	}
}
[Token(Token = "0x2000095")]
[DisallowMultipleComponent]
public class EntityComponentAIBlackboardComponent : EntityComponentBase<Quantum.Prototypes.AIBlackboardComponent_Prototype, Quantum.Prototypes.Unity.AIBlackboardComponent_Prototype>
{
	[Token(Token = "0x6000137")]
	[Address(RVA = "0x104512C", Offset = "0x104512C", VA = "0x104512C")]
	public EntityComponentAIBlackboardComponent()
	{
	}
}
[Token(Token = "0x2000096")]
[DisallowMultipleComponent]
public class EntityComponentAllowedRoles : EntityComponentBase<AllowedRoles_Prototype>
{
	[Token(Token = "0x6000138")]
	[Address(RVA = "0x1045178", Offset = "0x1045178", VA = "0x1045178")]
	public EntityComponentAllowedRoles()
	{
	}
}
[Token(Token = "0x2000097")]
[DisallowMultipleComponent]
public class EntityComponentAllowedTeams : EntityComponentBase<AllowedTeams_Prototype>
{
	[Token(Token = "0x6000139")]
	[Address(RVA = "0x10451C4", Offset = "0x10451C4", VA = "0x10451C4")]
	public EntityComponentAllowedTeams()
	{
	}
}
[Token(Token = "0x2000098")]
[DisallowMultipleComponent]
public class EntityComponentAnimatedCollision : EntityComponentBase<AnimatedCollision_Prototype>
{
	[Token(Token = "0x600013A")]
	[Address(RVA = "0x1045210", Offset = "0x1045210", VA = "0x1045210")]
	public EntityComponentAnimatedCollision()
	{
	}
}
[Token(Token = "0x2000099")]
[DisallowMultipleComponent]
public class EntityComponentAnimationStatesControl : EntityComponentBase<AnimationStatesControl_Prototype>
{
	[Token(Token = "0x600013B")]
	[Address(RVA = "0x104525C", Offset = "0x104525C", VA = "0x104525C")]
	public EntityComponentAnimationStatesControl()
	{
	}
}
[Token(Token = "0x200009A")]
[DisallowMultipleComponent]
public class EntityComponentApplyHealthModifiers : EntityComponentBase<ApplyHealthModifiers_Prototype>
{
	[Token(Token = "0x600013C")]
	[Address(RVA = "0x10452A8", Offset = "0x10452A8", VA = "0x10452A8")]
	public EntityComponentApplyHealthModifiers()
	{
	}
}
[Token(Token = "0x200009B")]
[DisallowMultipleComponent]
public class EntityComponentApplyMomentumOnTargets : EntityComponentBase<ApplyMomentumOnTargets_Prototype>
{
	[Token(Token = "0x600013D")]
	[Address(RVA = "0x10452F4", Offset = "0x10452F4", VA = "0x10452F4")]
	public EntityComponentApplyMomentumOnTargets()
	{
	}
}
[Token(Token = "0x200009C")]
[DisallowMultipleComponent]
public class EntityComponentApplyRadialForceOnTargets : EntityComponentBase<ApplyRadialForceOnTargets_Prototype>
{
	[Token(Token = "0x600013E")]
	[Address(RVA = "0x1045340", Offset = "0x1045340", VA = "0x1045340")]
	public EntityComponentApplyRadialForceOnTargets()
	{
	}
}
[Token(Token = "0x200009D")]
[DisallowMultipleComponent]
public class EntityComponentBTAgent : EntityComponentBase<BTAgent_Prototype>
{
	[Token(Token = "0x600013F")]
	[Address(RVA = "0x104538C", Offset = "0x104538C", VA = "0x104538C")]
	public EntityComponentBTAgent()
	{
	}
}
[Token(Token = "0x200009E")]
[DisallowMultipleComponent]
public class EntityComponentBasicPlayerStatistics : EntityComponentBase<BasicPlayerStatistics_Prototype>
{
	[Token(Token = "0x6000140")]
	[Address(RVA = "0x10456F0", Offset = "0x10456F0", VA = "0x10456F0")]
	public EntityComponentBasicPlayerStatistics()
	{
	}
}
[Token(Token = "0x200009F")]
[DisallowMultipleComponent]
public class EntityComponentBlockTile : EntityComponentBase<BlockTile_Prototype>
{
	[Token(Token = "0x6000141")]
	[Address(RVA = "0x104573C", Offset = "0x104573C", VA = "0x104573C")]
	public EntityComponentBlockTile()
	{
	}
}
[Token(Token = "0x20000A0")]
[DisallowMultipleComponent]
public class EntityComponentBlockTileInit : EntityComponentBase<BlockTileInit_Prototype>
{
	[Token(Token = "0x6000142")]
	[Address(RVA = "0x1045788", Offset = "0x1045788", VA = "0x1045788")]
	public EntityComponentBlockTileInit()
	{
	}
}
[Token(Token = "0x20000A1")]
[DisallowMultipleComponent]
public class EntityComponentBomb : EntityComponentBase<Quantum.Prototypes.Bomb_Prototype, Quantum.Prototypes.Unity.Bomb_Prototype>
{
	[Token(Token = "0x6000143")]
	[Address(RVA = "0x10457D4", Offset = "0x10457D4", VA = "0x10457D4")]
	public EntityComponentBomb()
	{
	}
}
[Token(Token = "0x20000A2")]
[DisallowMultipleComponent]
public class EntityComponentBombSocket : EntityComponentBase<BombSocket_Prototype>
{
	[Token(Token = "0x6000144")]
	[Address(RVA = "0x1045820", Offset = "0x1045820", VA = "0x1045820")]
	public EntityComponentBombSocket()
	{
	}
}
[Token(Token = "0x20000A3")]
[DisallowMultipleComponent]
public class EntityComponentBombSpawnPoint : EntityComponentBase<BombSpawnPoint_Prototype>
{
	[Token(Token = "0x6000145")]
	[Address(RVA = "0x104586C", Offset = "0x104586C", VA = "0x104586C")]
	public EntityComponentBombSpawnPoint()
	{
	}
}
[Token(Token = "0x20000A4")]
[DisallowMultipleComponent]
public class EntityComponentBombTimingSettings : EntityComponentBase<BombTimingSettings_Prototype>
{
	[Token(Token = "0x6000146")]
	[Address(RVA = "0x10458B8", Offset = "0x10458B8", VA = "0x10458B8")]
	public EntityComponentBombTimingSettings()
	{
	}
}
[Token(Token = "0x20000A5")]
[DisallowMultipleComponent]
public class EntityComponentBotDisplayDescription : EntityComponentBase<BotDisplayDescription_Prototype>
{
	[Token(Token = "0x6000147")]
	[Address(RVA = "0x1045904", Offset = "0x1045904", VA = "0x1045904")]
	public EntityComponentBotDisplayDescription()
	{
	}
}
[Token(Token = "0x20000A6")]
[DisallowMultipleComponent]
public class EntityComponentBounce : EntityComponentBase<Bounce_Prototype>
{
	[Token(Token = "0x6000148")]
	[Address(RVA = "0x1045950", Offset = "0x1045950", VA = "0x1045950")]
	public EntityComponentBounce()
	{
	}
}
[Token(Token = "0x20000A7")]
[DisallowMultipleComponent]
public class EntityComponentCasterLookingForTarget : EntityComponentBase<Quantum.Prototypes.CasterLookingForTarget_Prototype, Quantum.Prototypes.Unity.CasterLookingForTarget_Prototype>
{
	[Token(Token = "0x6000149")]
	[Address(RVA = "0x104599C", Offset = "0x104599C", VA = "0x104599C")]
	public EntityComponentCasterLookingForTarget()
	{
	}
}
[Token(Token = "0x20000A8")]
[DisallowMultipleComponent]
public class EntityComponentChangeHealthOnTargets : EntityComponentBase<ChangeHealthOnTargets_Prototype>
{
	[Token(Token = "0x600014A")]
	[Address(RVA = "0x10459E8", Offset = "0x10459E8", VA = "0x10459E8")]
	public EntityComponentChangeHealthOnTargets()
	{
	}
}
[Token(Token = "0x20000A9")]
[DisallowMultipleComponent]
public class EntityComponentChangeSpellOrigin : EntityComponentBase<ChangeSpellOrigin_Prototype>
{
	[Token(Token = "0x600014B")]
	[Address(RVA = "0x1045A34", Offset = "0x1045A34", VA = "0x1045A34")]
	public EntityComponentChangeSpellOrigin()
	{
	}
}
[Token(Token = "0x20000AA")]
[DisallowMultipleComponent]
public class EntityComponentCharacterBuilderSlot : EntityComponentBase<Quantum.Prototypes.CharacterBuilderSlot_Prototype, Quantum.Prototypes.Unity.CharacterBuilderSlot_Prototype>
{
	[Token(Token = "0x600014C")]
	[Address(RVA = "0x1045A80", Offset = "0x1045A80", VA = "0x1045A80")]
	public EntityComponentCharacterBuilderSlot()
	{
	}
}
[Token(Token = "0x20000AB")]
[DisallowMultipleComponent]
public class EntityComponentCharacterController2D : EntityComponentBase<CharacterController2D_Prototype>
{
	[Token(Token = "0x600014D")]
	[Address(RVA = "0x1045ACC", Offset = "0x1045ACC", VA = "0x1045ACC")]
	public EntityComponentCharacterController2D()
	{
	}
}
[Token(Token = "0x20000AC")]
[DisallowMultipleComponent]
public class EntityComponentCharacterController3D : EntityComponentBase<CharacterController3D_Prototype>
{
	[Token(Token = "0x600014E")]
	[Address(RVA = "0x1045B18", Offset = "0x1045B18", VA = "0x1045B18")]
	public EntityComponentCharacterController3D()
	{
	}
}
[Token(Token = "0x20000AD")]
[DisallowMultipleComponent]
public class EntityComponentClassMultipliers : EntityComponentBase<ClassMultipliers_Prototype>
{
	[Token(Token = "0x600014F")]
	[Address(RVA = "0x1045B64", Offset = "0x1045B64", VA = "0x1045B64")]
	public EntityComponentClassMultipliers()
	{
	}
}
[Token(Token = "0x20000AE")]
[DisallowMultipleComponent]
public class EntityComponentCollectableWand : EntityComponentBase<CollectableWand_Prototype>
{
	[Token(Token = "0x6000150")]
	[Address(RVA = "0x1045BB0", Offset = "0x1045BB0", VA = "0x1045BB0")]
	public EntityComponentCollectableWand()
	{
	}
}
[Token(Token = "0x20000AF")]
[DisallowMultipleComponent]
public class EntityComponentCollisionEvent : EntityComponentBase<CollisionEvent_Prototype>
{
	[Token(Token = "0x6000151")]
	[Address(RVA = "0x1045BFC", Offset = "0x1045BFC", VA = "0x1045BFC")]
	public EntityComponentCollisionEvent()
	{
	}
}
[Token(Token = "0x20000B0")]
[DisallowMultipleComponent]
public class EntityComponentConstraint : EntityComponentBase<Quantum.Prototypes.Constraint_Prototype, Quantum.Prototypes.Unity.Constraint_Prototype>
{
	[Token(Token = "0x6000152")]
	[Address(RVA = "0x1045C48", Offset = "0x1045C48", VA = "0x1045C48")]
	public EntityComponentConstraint()
	{
	}
}
[Token(Token = "0x20000B1")]
[DisallowMultipleComponent]
public class EntityComponentCooldownNeedValidation : EntityComponentBase<CooldownNeedValidation_Prototype>
{
	[Token(Token = "0x6000153")]
	[Address(RVA = "0x1045C94", Offset = "0x1045C94", VA = "0x1045C94")]
	public EntityComponentCooldownNeedValidation()
	{
	}
}
[Token(Token = "0x20000B2")]
[DisallowMultipleComponent]
public class EntityComponentCurrentTeam : EntityComponentBase<CurrentTeam_Prototype>
{
	[Token(Token = "0x6000154")]
	[Address(RVA = "0x1045CE0", Offset = "0x1045CE0", VA = "0x1045CE0")]
	public EntityComponentCurrentTeam()
	{
	}
}
[Token(Token = "0x20000B3")]
[DisallowMultipleComponent]
public class EntityComponentCustomEntityID : EntityComponentBase<CustomEntityID_Prototype>
{
	[Token(Token = "0x6000155")]
	[Address(RVA = "0x1045D2C", Offset = "0x1045D2C", VA = "0x1045D2C")]
	public EntityComponentCustomEntityID()
	{
	}
}
[Token(Token = "0x20000B4")]
[DisallowMultipleComponent]
public class EntityComponentDamageAssistantStatistics : EntityComponentBase<Quantum.Prototypes.DamageAssistantStatistics_Prototype, Quantum.Prototypes.Unity.DamageAssistantStatistics_Prototype>
{
	[Token(Token = "0x6000156")]
	[Address(RVA = "0x1045D78", Offset = "0x1045D78", VA = "0x1045D78")]
	public EntityComponentDamageAssistantStatistics()
	{
	}
}
[Token(Token = "0x20000B5")]
[DisallowMultipleComponent]
public class EntityComponentDamageSourceSelf : EntityComponentBase<DamageSourceSelf_Prototype>
{
	[Token(Token = "0x6000157")]
	[Address(RVA = "0x1045DC4", Offset = "0x1045DC4", VA = "0x1045DC4")]
	public EntityComponentDamageSourceSelf()
	{
	}
}
[Token(Token = "0x20000B6")]
[DisallowMultipleComponent]
public class EntityComponentDead : EntityComponentBase<Dead_Prototype>
{
	[Token(Token = "0x6000158")]
	[Address(RVA = "0x1045E10", Offset = "0x1045E10", VA = "0x1045E10")]
	public EntityComponentDead()
	{
	}
}
[Token(Token = "0x20000B7")]
[DisallowMultipleComponent]
public class EntityComponentDestroyChain : EntityComponentBase<Quantum.Prototypes.DestroyChain_Prototype, Quantum.Prototypes.Unity.DestroyChain_Prototype>
{
	[Token(Token = "0x6000159")]
	[Address(RVA = "0x1045E5C", Offset = "0x1045E5C", VA = "0x1045E5C")]
	public EntityComponentDestroyChain()
	{
	}
}
[Token(Token = "0x20000B8")]
[DisallowMultipleComponent]
public class EntityComponentDestroyChainStop : EntityComponentBase<DestroyChainStop_Prototype>
{
	[Token(Token = "0x600015A")]
	[Address(RVA = "0x1045EA8", Offset = "0x1045EA8", VA = "0x1045EA8")]
	public EntityComponentDestroyChainStop()
	{
	}
}
[Token(Token = "0x20000B9")]
[DisallowMultipleComponent]
public class EntityComponentDifficultyLevel : EntityComponentBase<DifficultyLevel_Prototype>
{
	[Token(Token = "0x600015B")]
	[Address(RVA = "0x1045EF4", Offset = "0x1045EF4", VA = "0x1045EF4")]
	public EntityComponentDifficultyLevel()
	{
	}
}
[Token(Token = "0x20000BA")]
[DisallowMultipleComponent]
public class EntityComponentDisappearInPointGravity : EntityComponentBase<DisappearInPointGravity_Prototype>
{
	[Token(Token = "0x600015C")]
	[Address(RVA = "0x1045F40", Offset = "0x1045F40", VA = "0x1045F40")]
	public EntityComponentDisappearInPointGravity()
	{
	}
}
[Token(Token = "0x20000BB")]
[DisallowMultipleComponent]
public class EntityComponentFollowTarget : EntityComponentBase<Quantum.Prototypes.FollowTarget_Prototype, Quantum.Prototypes.Unity.FollowTarget_Prototype>
{
	[Token(Token = "0x600015D")]
	[Address(RVA = "0x1045F8C", Offset = "0x1045F8C", VA = "0x1045F8C")]
	public EntityComponentFollowTarget()
	{
	}
}
[Token(Token = "0x20000BC")]
[DisallowMultipleComponent]
public class EntityComponentGOAPAgent : EntityComponentBase<GOAPAgent_Prototype>
{
	[Token(Token = "0x600015E")]
	[Address(RVA = "0x1045FD8", Offset = "0x1045FD8", VA = "0x1045FD8")]
	public EntityComponentGOAPAgent()
	{
	}
}
[Token(Token = "0x20000BD")]
[DisallowMultipleComponent]
public class EntityComponentGameModeBotsAI : EntityComponentBase<GameModeBotsAI_Prototype>
{
	[Token(Token = "0x600015F")]
	[Address(RVA = "0x1046024", Offset = "0x1046024", VA = "0x1046024")]
	public EntityComponentGameModeBotsAI()
	{
	}
}
[Token(Token = "0x20000BE")]
[DisallowMultipleComponent]
public class EntityComponentGameModeController : EntityComponentBase<GameModeController_Prototype>
{
	[Token(Token = "0x6000160")]
	[Address(RVA = "0x1046070", Offset = "0x1046070", VA = "0x1046070")]
	public EntityComponentGameModeController()
	{
	}
}
[Token(Token = "0x20000BF")]
[DisallowMultipleComponent]
public class EntityComponentGameModeEffect : EntityComponentBase<GameModeEffect_Prototype>
{
	[Token(Token = "0x6000161")]
	[Address(RVA = "0x10460BC", Offset = "0x10460BC", VA = "0x10460BC")]
	public EntityComponentGameModeEffect()
	{
	}
}
[Token(Token = "0x20000C0")]
[DisallowMultipleComponent]
public class EntityComponentGameModeEffectTimer : EntityComponentBase<GameModeEffectTimer_Prototype>
{
	[Token(Token = "0x6000162")]
	[Address(RVA = "0x1046108", Offset = "0x1046108", VA = "0x1046108")]
	public EntityComponentGameModeEffectTimer()
	{
	}
}
[Token(Token = "0x20000C1")]
[DisallowMultipleComponent]
public class EntityComponentGenerateCompositeEntity : EntityComponentBase<GenerateCompositeEntity_Prototype>
{
	[Token(Token = "0x6000163")]
	[Address(RVA = "0x1046154", Offset = "0x1046154", VA = "0x1046154")]
	public EntityComponentGenerateCompositeEntity()
	{
	}
}
[Token(Token = "0x20000C2")]
[DisallowMultipleComponent]
public class EntityComponentGlobals : EntityComponentBase<Quantum.Prototypes.Globals_Prototype, Quantum.Prototypes.Unity.Globals_Prototype>
{
	[Token(Token = "0x6000164")]
	[Address(RVA = "0x10461A0", Offset = "0x10461A0", VA = "0x10461A0")]
	public EntityComponentGlobals()
	{
	}
}
[Token(Token = "0x20000C3")]
[DisallowMultipleComponent]
public class EntityComponentGrabbable : EntityComponentBase<Quantum.Prototypes.Grabbable_Prototype, Quantum.Prototypes.Unity.Grabbable_Prototype>
{
	[Token(Token = "0x6000165")]
	[Address(RVA = "0x10461EC", Offset = "0x10461EC", VA = "0x10461EC")]
	public EntityComponentGrabbable()
	{
	}
}
[Token(Token = "0x20000C4")]
[DisallowMultipleComponent]
public class EntityComponentGrabber : EntityComponentBase<Quantum.Prototypes.Grabber_Prototype, Quantum.Prototypes.Unity.Grabber_Prototype>
{
	[Token(Token = "0x6000166")]
	[Address(RVA = "0x1046238", Offset = "0x1046238", VA = "0x1046238")]
	public EntityComponentGrabber()
	{
	}
}
[Token(Token = "0x20000C5")]
[DisallowMultipleComponent]
public class EntityComponentHFSMAgent : EntityComponentBase<HFSMAgent_Prototype>
{
	[Token(Token = "0x6000167")]
	[Address(RVA = "0x1046284", Offset = "0x1046284", VA = "0x1046284")]
	public EntityComponentHFSMAgent()
	{
	}
}
[Token(Token = "0x20000C6")]
[DisallowMultipleComponent]
public class EntityComponentHasTargetsAcquired : EntityComponentBase<HasTargetsAcquired_Prototype>
{
	[Token(Token = "0x6000168")]
	[Address(RVA = "0x10462D0", Offset = "0x10462D0", VA = "0x10462D0")]
	public EntityComponentHasTargetsAcquired()
	{
	}
}
[Token(Token = "0x20000C7")]
[DisallowMultipleComponent]
public class EntityComponentHealth : EntityComponentBase<Quantum.Prototypes.Health_Prototype, Quantum.Prototypes.Unity.Health_Prototype>
{
	[Token(Token = "0x6000169")]
	[Address(RVA = "0x104631C", Offset = "0x104631C", VA = "0x104631C")]
	public EntityComponentHealth()
	{
	}
}
[Token(Token = "0x20000C8")]
[DisallowMultipleComponent]
public class EntityComponentHealthPart : EntityComponentBase<Quantum.Prototypes.HealthPart_Prototype, Quantum.Prototypes.Unity.HealthPart_Prototype>
{
	[Token(Token = "0x600016A")]
	[Address(RVA = "0x1046368", Offset = "0x1046368", VA = "0x1046368")]
	public EntityComponentHealthPart()
	{
	}
}
[Token(Token = "0x20000C9")]
[DisallowMultipleComponent]
public class EntityComponentHitDirection : EntityComponentBase<HitDirection_Prototype>
{
	[Token(Token = "0x600016B")]
	[Address(RVA = "0x10463B4", Offset = "0x10463B4", VA = "0x10463B4")]
	public EntityComponentHitDirection()
	{
	}
}
[Token(Token = "0x20000CA")]
[DisallowMultipleComponent]
public class EntityComponentHumanPlayerJoiningSettings : EntityComponentBase<HumanPlayerJoiningSettings_Prototype>
{
	[Token(Token = "0x600016C")]
	[Address(RVA = "0x1046400", Offset = "0x1046400", VA = "0x1046400")]
	public EntityComponentHumanPlayerJoiningSettings()
	{
	}
}
[Token(Token = "0x20000CB")]
[DisallowMultipleComponent]
public class EntityComponentHumanPlayerRefID : EntityComponentBase<HumanPlayerRefID_Prototype>
{
	[Token(Token = "0x600016D")]
	[Address(RVA = "0x104644C", Offset = "0x104644C", VA = "0x104644C")]
	public EntityComponentHumanPlayerRefID()
	{
	}
}
[Token(Token = "0x20000CC")]
[DisallowMultipleComponent]
public class EntityComponentImpactNormal : EntityComponentBase<ImpactNormal_Prototype>
{
	[Token(Token = "0x600016E")]
	[Address(RVA = "0x1046498", Offset = "0x1046498", VA = "0x1046498")]
	public EntityComponentImpactNormal()
	{
	}
}
[Token(Token = "0x20000CD")]
[DisallowMultipleComponent]
public class EntityComponentLevelBoundingBox : EntityComponentBase<LevelBoundingBox_Prototype>
{
	[Token(Token = "0x600016F")]
	[Address(RVA = "0x10464E4", Offset = "0x10464E4", VA = "0x10464E4")]
	public EntityComponentLevelBoundingBox()
	{
	}
}
[Token(Token = "0x20000CE")]
[DisallowMultipleComponent]
public class EntityComponentLevelElection : EntityComponentBase<LevelElection_Prototype>
{
	[Token(Token = "0x6000170")]
	[Address(RVA = "0x1046530", Offset = "0x1046530", VA = "0x1046530")]
	public EntityComponentLevelElection()
	{
	}
}
[Token(Token = "0x20000CF")]
[DisallowMultipleComponent]
public class EntityComponentLevelRestrictions : EntityComponentBase<LevelRestrictions_Prototype>
{
	[Token(Token = "0x6000171")]
	[Address(RVA = "0x104657C", Offset = "0x104657C", VA = "0x104657C")]
	public EntityComponentLevelRestrictions()
	{
	}
}
[Token(Token = "0x20000D0")]
[DisallowMultipleComponent]
public class EntityComponentLevelVote : EntityComponentBase<LevelVote_Prototype>
{
	[Token(Token = "0x6000172")]
	[Address(RVA = "0x10465C8", Offset = "0x10465C8", VA = "0x10465C8")]
	public EntityComponentLevelVote()
	{
	}
}
[Token(Token = "0x20000D1")]
[DisallowMultipleComponent]
public class EntityComponentLoadLevel : EntityComponentBase<LoadLevel_Prototype>
{
	[Token(Token = "0x6000173")]
	[Address(RVA = "0x1046614", Offset = "0x1046614", VA = "0x1046614")]
	public EntityComponentLoadLevel()
	{
	}
}
[Token(Token = "0x20000D2")]
[DisallowMultipleComponent]
public class EntityComponentLoadoutAccepted : EntityComponentBase<LoadoutAccepted_Prototype>
{
	[Token(Token = "0x6000174")]
	[Address(RVA = "0x1046660", Offset = "0x1046660", VA = "0x1046660")]
	public EntityComponentLoadoutAccepted()
	{
	}
}
[Token(Token = "0x20000D3")]
[DisallowMultipleComponent]
public class EntityComponentLoadoutRelicSlot : EntityComponentBase<Quantum.Prototypes.LoadoutRelicSlot_Prototype, Quantum.Prototypes.Unity.LoadoutRelicSlot_Prototype>
{
	[Token(Token = "0x6000175")]
	[Address(RVA = "0x10466AC", Offset = "0x10466AC", VA = "0x10466AC")]
	public EntityComponentLoadoutRelicSlot()
	{
	}
}
[Token(Token = "0x20000D4")]
[DisallowMultipleComponent]
public class EntityComponentMatchBot : EntityComponentBase<MatchBot_Prototype>
{
	[Token(Token = "0x6000176")]
	[Address(RVA = "0x10466F8", Offset = "0x10466F8", VA = "0x10466F8")]
	public EntityComponentMatchBot()
	{
	}
}
[Token(Token = "0x20000D5")]
[DisallowMultipleComponent]
public class EntityComponentMatchPlayer : EntityComponentBase<MatchPlayer_Prototype>
{
	[Token(Token = "0x6000177")]
	[Address(RVA = "0x1046744", Offset = "0x1046744", VA = "0x1046744")]
	public EntityComponentMatchPlayer()
	{
	}
}
[Token(Token = "0x20000D6")]
[DisallowMultipleComponent]
public class EntityComponentMatchStatistics : EntityComponentBase<MatchStatistics_Prototype>
{
	[Token(Token = "0x6000178")]
	[Address(RVA = "0x1046790", Offset = "0x1046790", VA = "0x1046790")]
	public EntityComponentMatchStatistics()
	{
	}
}
[Token(Token = "0x20000D7")]
[DisallowMultipleComponent]
public class EntityComponentMatchTileOrientation : EntityComponentBase<MatchTileOrientation_Prototype>
{
	[Token(Token = "0x6000179")]
	[Address(RVA = "0x10467DC", Offset = "0x10467DC", VA = "0x10467DC")]
	public EntityComponentMatchTileOrientation()
	{
	}
}
[Token(Token = "0x20000D8")]
[DisallowMultipleComponent]
public class EntityComponentNavMeshAvoidanceAgent : EntityComponentBase<NavMeshAvoidanceAgent_Prototype>
{
	[Token(Token = "0x600017A")]
	[Address(RVA = "0x1046828", Offset = "0x1046828", VA = "0x1046828")]
	public EntityComponentNavMeshAvoidanceAgent()
	{
	}
}
[Token(Token = "0x20000D9")]
[DisallowMultipleComponent]
public class EntityComponentNavMeshAvoidanceObstacle : EntityComponentBase<NavMeshAvoidanceObstacle_Prototype>
{
	[Token(Token = "0x600017B")]
	[Address(RVA = "0x1046874", Offset = "0x1046874", VA = "0x1046874")]
	public EntityComponentNavMeshAvoidanceObstacle()
	{
	}
}
[Token(Token = "0x20000DA")]
[DisallowMultipleComponent]
public class EntityComponentNavMeshPathfinder : EntityComponentBase<NavMeshPathfinder_Prototype>
{
	[Token(Token = "0x40000A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "DrawIfAttribute", RVA = "0xBCC76C", Offset = "0xBCC76C")]
	[LocalReference]
	public MapNavMeshDefinition InitialTargetNavMeshReference;

	[Token(Token = "0x600017C")]
	[Address(RVA = "0x10468C0", Offset = "0x10468C0", VA = "0x10468C0", Slot = "5")]
	public override void Refresh()
	{
	}

	[Token(Token = "0x600017D")]
	[Address(RVA = "0x1046954", Offset = "0x1046954", VA = "0x1046954")]
	public EntityComponentNavMeshPathfinder()
	{
	}
}
[Token(Token = "0x20000DB")]
[DisallowMultipleComponent]
public class EntityComponentNavMeshSteeringAgent : EntityComponentBase<NavMeshSteeringAgent_Prototype>
{
	[Token(Token = "0x600017E")]
	[Address(RVA = "0x10469A0", Offset = "0x10469A0", VA = "0x10469A0")]
	public EntityComponentNavMeshSteeringAgent()
	{
	}
}
[Token(Token = "0x20000DC")]
[DisallowMultipleComponent]
public class EntityComponentOccupant : EntityComponentBase<Quantum.Prototypes.Occupant_Prototype, Quantum.Prototypes.Unity.Occupant_Prototype>
{
	[Token(Token = "0x600017F")]
	[Address(RVA = "0x10469EC", Offset = "0x10469EC", VA = "0x10469EC")]
	public EntityComponentOccupant()
	{
	}
}
[Token(Token = "0x20000DD")]
[DisallowMultipleComponent]
public class EntityComponentOccupantRoom : EntityComponentBase<OccupantRoom_Prototype>
{
	[Token(Token = "0x6000180")]
	[Address(RVA = "0x1046A38", Offset = "0x1046A38", VA = "0x1046A38")]
	public EntityComponentOccupantRoom()
	{
	}
}
[Token(Token = "0x20000DE")]
[DisallowMultipleComponent]
public class EntityComponentOnBounce : EntityComponentBase<OnBounce_Prototype>
{
	[Token(Token = "0x6000181")]
	[Address(RVA = "0x1046A84", Offset = "0x1046A84", VA = "0x1046A84")]
	public EntityComponentOnBounce()
	{
	}
}
[Token(Token = "0x20000DF")]
[DisallowMultipleComponent]
public class EntityComponentOnHealthDepletedDestruction : EntityComponentBase<OnHealthDepletedDestruction_Prototype>
{
	[Token(Token = "0x6000182")]
	[Address(RVA = "0x1046AD0", Offset = "0x1046AD0", VA = "0x1046AD0")]
	public EntityComponentOnHealthDepletedDestruction()
	{
	}
}
[Token(Token = "0x20000E0")]
[DisallowMultipleComponent]
public class EntityComponentOnSpellEffectCasted : EntityComponentBase<OnSpellEffectCasted_Prototype>
{
	[Token(Token = "0x6000183")]
	[Address(RVA = "0x1046B1C", Offset = "0x1046B1C", VA = "0x1046B1C")]
	public EntityComponentOnSpellEffectCasted()
	{
	}
}
[Token(Token = "0x20000E1")]
[DisallowMultipleComponent]
public class EntityComponentOnTargetAcquired : EntityComponentBase<OnTargetAcquired_Prototype>
{
	[Token(Token = "0x6000184")]
	[Address(RVA = "0x1046B68", Offset = "0x1046B68", VA = "0x1046B68")]
	public EntityComponentOnTargetAcquired()
	{
	}
}
[Token(Token = "0x20000E2")]
[DisallowMultipleComponent]
public class EntityComponentOnTargetNotAcquired : EntityComponentBase<OnTargetNotAcquired_Prototype>
{
	[Token(Token = "0x6000185")]
	[Address(RVA = "0x1046BB4", Offset = "0x1046BB4", VA = "0x1046BB4")]
	public EntityComponentOnTargetNotAcquired()
	{
	}
}
[Token(Token = "0x20000E3")]
[DisallowMultipleComponent]
public class EntityComponentOnTargetsFiltered : EntityComponentBase<OnTargetsFiltered_Prototype>
{
	[Token(Token = "0x6000186")]
	[Address(RVA = "0x1046C00", Offset = "0x1046C00", VA = "0x1046C00")]
	public EntityComponentOnTargetsFiltered()
	{
	}
}
[Token(Token = "0x20000E4")]
[DisallowMultipleComponent]
public class EntityComponentOnTimeEvent : EntityComponentBase<OnTimeEvent_Prototype>
{
	[Token(Token = "0x6000187")]
	[Address(RVA = "0x1046C4C", Offset = "0x1046C4C", VA = "0x1046C4C")]
	public EntityComponentOnTimeEvent()
	{
	}
}
[Token(Token = "0x20000E5")]
[DisallowMultipleComponent]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xBC4BA0", Offset = "0xBC4BA0")]
public class EntityComponentPhysicsBody2D : EntityComponentBase<PhysicsBody2D_Prototype>
{
	[Token(Token = "0x6000188")]
	[Address(RVA = "0x1046C98", Offset = "0x1046C98", VA = "0x1046C98")]
	public EntityComponentPhysicsBody2D()
	{
	}
}
[Token(Token = "0x20000E6")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xBC4C10", Offset = "0xBC4C10")]
[DisallowMultipleComponent]
public class EntityComponentPhysicsBody3D : EntityComponentBase<PhysicsBody3D_Prototype>
{
	[Token(Token = "0x6000189")]
	[Address(RVA = "0x1046CE4", Offset = "0x1046CE4", VA = "0x1046CE4")]
	public EntityComponentPhysicsBody3D()
	{
	}
}
[Token(Token = "0x20000E7")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xBC4C80", Offset = "0xBC4C80")]
[DisallowMultipleComponent]
public class EntityComponentPhysicsCallbacks2D : EntityComponentBase<PhysicsCallbacks2D_Prototype>
{
	[Token(Token = "0x600018A")]
	[Address(RVA = "0x1046D30", Offset = "0x1046D30", VA = "0x1046D30")]
	public EntityComponentPhysicsCallbacks2D()
	{
	}
}
[Token(Token = "0x20000E8")]
[DisallowMultipleComponent]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xBC4CF0", Offset = "0xBC4CF0")]
public class EntityComponentPhysicsCallbacks3D : EntityComponentBase<PhysicsCallbacks3D_Prototype>
{
	[Token(Token = "0x600018B")]
	[Address(RVA = "0x1046D7C", Offset = "0x1046D7C", VA = "0x1046D7C")]
	public EntityComponentPhysicsCallbacks3D()
	{
	}
}
[Token(Token = "0x20000E9")]
[DisallowMultipleComponent]
public class EntityComponentPhysicsCollider2D : EntityComponentBase<PhysicsCollider2D_Prototype>
{
	[Token(Token = "0x40000A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "MultiTypeReferenceAttribute", RVA = "0xBCC7C4", Offset = "0xBCC7C4")]
	public Component SourceCollider;

	[Token(Token = "0x600018C")]
	[Address(RVA = "0x1046DC8", Offset = "0x1046DC8", VA = "0x1046DC8")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x600018D")]
	[Address(RVA = "0x10474E4", Offset = "0x10474E4", VA = "0x10474E4", Slot = "5")]
	public override void Refresh()
	{
	}

	[Token(Token = "0x600018E")]
	[Address(RVA = "0x1047568", Offset = "0x1047568", VA = "0x1047568")]
	public EntityComponentPhysicsCollider2D()
	{
	}
}
[Token(Token = "0x20000EA")]
[DisallowMultipleComponent]
public class EntityComponentPhysicsCollider3D : EntityComponentBase<PhysicsCollider3D_Prototype>
{
	[Token(Token = "0x40000A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "MultiTypeReferenceAttribute", RVA = "0xBCC8AC", Offset = "0xBCC8AC")]
	public Collider SourceCollider3D;

	[Token(Token = "0x600018F")]
	[Address(RVA = "0x10475B4", Offset = "0x10475B4", VA = "0x10475B4")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x6000190")]
	[Address(RVA = "0x10479A4", Offset = "0x10479A4", VA = "0x10479A4", Slot = "5")]
	public override void Refresh()
	{
	}

	[Token(Token = "0x6000191")]
	[Address(RVA = "0x1047A34", Offset = "0x1047A34", VA = "0x1047A34")]
	public EntityComponentPhysicsCollider3D()
	{
	}
}
[Token(Token = "0x20000EB")]
[DisallowMultipleComponent]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xBC4D80", Offset = "0xBC4D80")]
public class EntityComponentPhysicsJoints2D : EntityComponentBase<Quantum.Prototypes.PhysicsJoints2D_Prototype, Quantum.Prototypes.Unity.PhysicsJoints2D_Prototype>
{
	[Token(Token = "0x6000192")]
	[Address(RVA = "0x1047A80", Offset = "0x1047A80", VA = "0x1047A80")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x6000193")]
	[Address(RVA = "0x1047C98", Offset = "0x1047C98", VA = "0x1047C98", Slot = "5")]
	public override void Refresh()
	{
	}

	[Token(Token = "0x6000194")]
	[Address(RVA = "0x1047A84", Offset = "0x1047A84", VA = "0x1047A84")]
	private void AutoConfigureDistance()
	{
	}

	[Token(Token = "0x6000195")]
	[Address(RVA = "0x1047E4C", Offset = "0x1047E4C", VA = "0x1047E4C")]
	public EntityComponentPhysicsJoints2D()
	{
	}
}
[Token(Token = "0x20000EC")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xBC4DF0", Offset = "0xBC4DF0")]
[DisallowMultipleComponent]
public class EntityComponentPhysicsJoints3D : EntityComponentBase<Quantum.Prototypes.PhysicsJoints3D_Prototype, Quantum.Prototypes.Unity.PhysicsJoints3D_Prototype>
{
	[Token(Token = "0x6000196")]
	[Address(RVA = "0x1047E98", Offset = "0x1047E98", VA = "0x1047E98")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x6000197")]
	[Address(RVA = "0x1047EA4", Offset = "0x1047EA4", VA = "0x1047EA4", Slot = "5")]
	public override void Refresh()
	{
	}

	[Token(Token = "0x6000198")]
	[Address(RVA = "0x1047EA8", Offset = "0x1047EA8", VA = "0x1047EA8")]
	private void AutoConfigureDistance()
	{
	}

	[Token(Token = "0x6000199")]
	[Address(RVA = "0x1048228", Offset = "0x1048228", VA = "0x1048228")]
	public EntityComponentPhysicsJoints3D()
	{
	}
}
[Token(Token = "0x20000ED")]
[DisallowMultipleComponent]
public class EntityComponentPingable : EntityComponentBase<Pingable_Prototype>
{
	[Token(Token = "0x600019A")]
	[Address(RVA = "0x1048274", Offset = "0x1048274", VA = "0x1048274")]
	public EntityComponentPingable()
	{
	}
}
[Token(Token = "0x20000EE")]
[DisallowMultipleComponent]
public class EntityComponentPlaySpace : EntityComponentBase<PlaySpace_Prototype>
{
	[Token(Token = "0x600019B")]
	[Address(RVA = "0x10482C0", Offset = "0x10482C0", VA = "0x10482C0")]
	public EntityComponentPlaySpace()
	{
	}
}
[Token(Token = "0x20000EF")]
[DisallowMultipleComponent]
public class EntityComponentPlayerBodyPart : EntityComponentBase<PlayerBodyPart_Prototype>
{
	[Token(Token = "0x600019C")]
	[Address(RVA = "0x104830C", Offset = "0x104830C", VA = "0x104830C")]
	public EntityComponentPlayerBodyPart()
	{
	}
}
[Token(Token = "0x20000F0")]
[DisallowMultipleComponent]
public class EntityComponentPlayerCantTeleport : EntityComponentBase<Quantum.Prototypes.PlayerCantTeleport_Prototype, Quantum.Prototypes.Unity.PlayerCantTeleport_Prototype>
{
	[Token(Token = "0x600019D")]
	[Address(RVA = "0x1048358", Offset = "0x1048358", VA = "0x1048358")]
	public EntityComponentPlayerCantTeleport()
	{
	}
}
[Token(Token = "0x20000F1")]
[DisallowMultipleComponent]
public class EntityComponentPlayerClampedToConstraints : EntityComponentBase<PlayerClampedToConstraints_Prototype>
{
	[Token(Token = "0x600019E")]
	[Address(RVA = "0x10483A4", Offset = "0x10483A4", VA = "0x10483A4")]
	public EntityComponentPlayerClampedToConstraints()
	{
	}
}
[Token(Token = "0x20000F2")]
[DisallowMultipleComponent]
public class EntityComponentPlayerLateJoined : EntityComponentBase<PlayerLateJoined_Prototype>
{
	[Token(Token = "0x600019F")]
	[Address(RVA = "0x10483F0", Offset = "0x10483F0", VA = "0x10483F0")]
	public EntityComponentPlayerLateJoined()
	{
	}
}
[Token(Token = "0x20000F3")]
[DisallowMultipleComponent]
public class EntityComponentPlayerLoadouts : EntityComponentBase<PlayerLoadouts_Prototype>
{
	[Token(Token = "0x60001A0")]
	[Address(RVA = "0x104843C", Offset = "0x104843C", VA = "0x104843C")]
	public EntityComponentPlayerLoadouts()
	{
	}
}
[Token(Token = "0x20000F4")]
[DisallowMultipleComponent]
public class EntityComponentPlayerReplacementBot : EntityComponentBase<PlayerReplacementBot_Prototype>
{
	[Token(Token = "0x60001A1")]
	[Address(RVA = "0x1048488", Offset = "0x1048488", VA = "0x1048488")]
	public EntityComponentPlayerReplacementBot()
	{
	}
}
[Token(Token = "0x20000F5")]
[DisallowMultipleComponent]
public class EntityComponentPlayerRoot : EntityComponentBase<Quantum.Prototypes.PlayerRoot_Prototype, Quantum.Prototypes.Unity.PlayerRoot_Prototype>
{
	[Token(Token = "0x60001A2")]
	[Address(RVA = "0x10484D4", Offset = "0x10484D4", VA = "0x10484D4")]
	public EntityComponentPlayerRoot()
	{
	}
}
[Token(Token = "0x20000F6")]
[DisallowMultipleComponent]
public class EntityComponentPlayerSelectedClass : EntityComponentBase<PlayerSelectedClass_Prototype>
{
	[Token(Token = "0x60001A3")]
	[Address(RVA = "0x1048520", Offset = "0x1048520", VA = "0x1048520")]
	public EntityComponentPlayerSelectedClass()
	{
	}
}
[Token(Token = "0x20000F7")]
[DisallowMultipleComponent]
public class EntityComponentPlayerSpawnedInMatch : EntityComponentBase<PlayerSpawnedInMatch_Prototype>
{
	[Token(Token = "0x60001A4")]
	[Address(RVA = "0x104856C", Offset = "0x104856C", VA = "0x104856C")]
	public EntityComponentPlayerSpawnedInMatch()
	{
	}
}
[Token(Token = "0x20000F8")]
[DisallowMultipleComponent]
public class EntityComponentPlayerSpells : EntityComponentBase<Quantum.Prototypes.PlayerSpells_Prototype, Quantum.Prototypes.Unity.PlayerSpells_Prototype>
{
	[Token(Token = "0x60001A5")]
	[Address(RVA = "0x10485B8", Offset = "0x10485B8", VA = "0x10485B8")]
	public EntityComponentPlayerSpells()
	{
	}
}
[Token(Token = "0x20000F9")]
[DisallowMultipleComponent]
public class EntityComponentPlayerStatisticsInfo : EntityComponentBase<PlayerStatisticsInfo_Prototype>
{
	[Token(Token = "0x60001A6")]
	[Address(RVA = "0x1048604", Offset = "0x1048604", VA = "0x1048604")]
	public EntityComponentPlayerStatisticsInfo()
	{
	}
}
[Token(Token = "0x20000FA")]
[DisallowMultipleComponent]
public class EntityComponentPlayerSync : EntityComponentBase<PlayerSync_Prototype>
{
	[Token(Token = "0x60001A7")]
	[Address(RVA = "0x1048650", Offset = "0x1048650", VA = "0x1048650")]
	public EntityComponentPlayerSync()
	{
	}
}
[Token(Token = "0x20000FB")]
[DisallowMultipleComponent]
public class EntityComponentPlayerUniqueID : EntityComponentBase<PlayerUniqueID_Prototype>
{
	[Token(Token = "0x60001A8")]
	[Address(RVA = "0x104869C", Offset = "0x104869C", VA = "0x104869C")]
	public EntityComponentPlayerUniqueID()
	{
	}
}
[Token(Token = "0x20000FC")]
[DisallowMultipleComponent]
public class EntityComponentPointGravity : EntityComponentBase<PointGravity_Prototype>
{
	[Token(Token = "0x60001A9")]
	[Address(RVA = "0x10486E8", Offset = "0x10486E8", VA = "0x10486E8")]
	public EntityComponentPointGravity()
	{
	}
}
[Token(Token = "0x20000FD")]
[DisallowMultipleComponent]
public class EntityComponentPreferableSpawnPoint : EntityComponentBase<Quantum.Prototypes.PreferableSpawnPoint_Prototype, Quantum.Prototypes.Unity.PreferableSpawnPoint_Prototype>
{
	[Token(Token = "0x60001AA")]
	[Address(RVA = "0x1048734", Offset = "0x1048734", VA = "0x1048734")]
	public EntityComponentPreferableSpawnPoint()
	{
	}
}
[Token(Token = "0x20000FE")]
[DisallowMultipleComponent]
public class EntityComponentProcessedPlayer : EntityComponentBase<ProcessedPlayer_Prototype>
{
	[Token(Token = "0x60001AB")]
	[Address(RVA = "0x1048780", Offset = "0x1048780", VA = "0x1048780")]
	public EntityComponentProcessedPlayer()
	{
	}
}
[Token(Token = "0x20000FF")]
[DisallowMultipleComponent]
public class EntityComponentRankedMatch : EntityComponentBase<RankedMatch_Prototype>
{
	[Token(Token = "0x60001AC")]
	[Address(RVA = "0x10487CC", Offset = "0x10487CC", VA = "0x10487CC")]
	public EntityComponentRankedMatch()
	{
	}
}
[Token(Token = "0x2000100")]
[DisallowMultipleComponent]
public class EntityComponentReadyForNextLevel : EntityComponentBase<ReadyForNextLevel_Prototype>
{
	[Token(Token = "0x60001AD")]
	[Address(RVA = "0x1048818", Offset = "0x1048818", VA = "0x1048818")]
	public EntityComponentReadyForNextLevel()
	{
	}
}
[Token(Token = "0x2000101")]
[DisallowMultipleComponent]
public class EntityComponentRelaxCCDOnConstraint : EntityComponentBase<RelaxCCDOnConstraint_Prototype>
{
	[Token(Token = "0x60001AE")]
	[Address(RVA = "0x1048864", Offset = "0x1048864", VA = "0x1048864")]
	public EntityComponentRelaxCCDOnConstraint()
	{
	}
}
[Token(Token = "0x2000102")]
[DisallowMultipleComponent]
public class EntityComponentRotationDragControl : EntityComponentBase<RotationDragControl_Prototype>
{
	[Token(Token = "0x60001AF")]
	[Address(RVA = "0x10488B0", Offset = "0x10488B0", VA = "0x10488B0")]
	public EntityComponentRotationDragControl()
	{
	}
}
[Token(Token = "0x2000103")]
[DisallowMultipleComponent]
public class EntityComponentScriptCreatedObject : EntityComponentBase<ScriptCreatedObject_Prototype>
{
	[Token(Token = "0x60001B0")]
	[Address(RVA = "0x10488FC", Offset = "0x10488FC", VA = "0x10488FC")]
	public EntityComponentScriptCreatedObject()
	{
	}
}
[Token(Token = "0x2000104")]
[DisallowMultipleComponent]
public class EntityComponentSelectClass : EntityComponentBase<SelectClass_Prototype>
{
	[Token(Token = "0x60001B1")]
	[Address(RVA = "0x1048948", Offset = "0x1048948", VA = "0x1048948")]
	public EntityComponentSelectClass()
	{
	}
}
[Token(Token = "0x2000105")]
[DisallowMultipleComponent]
public class EntityComponentSelectClassPreview : EntityComponentBase<SelectClassPreview_Prototype>
{
	[Token(Token = "0x60001B2")]
	[Address(RVA = "0x1048994", Offset = "0x1048994", VA = "0x1048994")]
	public EntityComponentSelectClassPreview()
	{
	}
}
[Token(Token = "0x2000106")]
[DisallowMultipleComponent]
public class EntityComponentSilenceSpellCaster : EntityComponentBase<SilenceSpellCaster_Prototype>
{
	[Token(Token = "0x60001B3")]
	[Address(RVA = "0x10489E0", Offset = "0x10489E0", VA = "0x10489E0")]
	public EntityComponentSilenceSpellCaster()
	{
	}
}
[Token(Token = "0x2000107")]
[DisallowMultipleComponent]
public class EntityComponentSingleInstanceForTarget : EntityComponentBase<Quantum.Prototypes.SingleInstanceForTarget_Prototype, Quantum.Prototypes.Unity.SingleInstanceForTarget_Prototype>
{
	[Token(Token = "0x60001B4")]
	[Address(RVA = "0x1048A2C", Offset = "0x1048A2C", VA = "0x1048A2C")]
	public EntityComponentSingleInstanceForTarget()
	{
	}
}
[Token(Token = "0x2000108")]
[DisallowMultipleComponent]
public class EntityComponentSpawnable : EntityComponentBase<Spawnable_Prototype>
{
	[Token(Token = "0x60001B5")]
	[Address(RVA = "0x1048A78", Offset = "0x1048A78", VA = "0x1048A78")]
	public EntityComponentSpawnable()
	{
	}
}
[Token(Token = "0x2000109")]
[DisallowMultipleComponent]
public class EntityComponentSpell : EntityComponentBase<Quantum.Prototypes.Spell_Prototype, Quantum.Prototypes.Unity.Spell_Prototype>
{
	[Token(Token = "0x60001B6")]
	[Address(RVA = "0x1048C60", Offset = "0x1048C60", VA = "0x1048C60")]
	public EntityComponentSpell()
	{
	}
}
[Token(Token = "0x200010A")]
[DisallowMultipleComponent]
public class EntityComponentSpellCaster : EntityComponentBase<Quantum.Prototypes.SpellCaster_Prototype, Quantum.Prototypes.Unity.SpellCaster_Prototype>
{
	[Token(Token = "0x60001B7")]
	[Address(RVA = "0x1048CAC", Offset = "0x1048CAC", VA = "0x1048CAC")]
	public EntityComponentSpellCaster()
	{
	}
}
[Token(Token = "0x200010B")]
[DisallowMultipleComponent]
public class EntityComponentSpellDescription : EntityComponentBase<SpellDescription_Prototype>
{
	[Token(Token = "0x60001B8")]
	[Address(RVA = "0x1048CF8", Offset = "0x1048CF8", VA = "0x1048CF8")]
	public EntityComponentSpellDescription()
	{
	}
}
[Token(Token = "0x200010C")]
[DisallowMultipleComponent]
public class EntityComponentSpellParent : EntityComponentBase<Quantum.Prototypes.SpellParent_Prototype, Quantum.Prototypes.Unity.SpellParent_Prototype>
{
	[Token(Token = "0x60001B9")]
	[Address(RVA = "0x1048D44", Offset = "0x1048D44", VA = "0x1048D44")]
	public EntityComponentSpellParent()
	{
	}
}
[Token(Token = "0x200010D")]
[DisallowMultipleComponent]
public class EntityComponentSpellPickerSetup : EntityComponentBase<SpellPickerSetup_Prototype>
{
	[Token(Token = "0x60001BA")]
	[Address(RVA = "0x1048D90", Offset = "0x1048D90", VA = "0x1048D90")]
	public EntityComponentSpellPickerSetup()
	{
	}
}
[Token(Token = "0x200010E")]
[DisallowMultipleComponent]
public class EntityComponentSpellResult : EntityComponentBase<SpellResult_Prototype>
{
	[Token(Token = "0x60001BB")]
	[Address(RVA = "0x1048DDC", Offset = "0x1048DDC", VA = "0x1048DDC")]
	public EntityComponentSpellResult()
	{
	}
}
[Token(Token = "0x200010F")]
[DisallowMultipleComponent]
public class EntityComponentSplineTrajectory : EntityComponentBase<SplineTrajectory_Prototype>
{
	[Token(Token = "0x60001BC")]
	[Address(RVA = "0x1048E28", Offset = "0x1048E28", VA = "0x1048E28")]
	public EntityComponentSplineTrajectory()
	{
	}
}
[Token(Token = "0x2000110")]
[DisallowMultipleComponent]
public class EntityComponentStateMachine : EntityComponentBase<StateMachine_Prototype>
{
	[Token(Token = "0x60001BD")]
	[Address(RVA = "0x1048E74", Offset = "0x1048E74", VA = "0x1048E74")]
	public EntityComponentStateMachine()
	{
	}
}
[Token(Token = "0x2000111")]
[DisallowMultipleComponent]
public class EntityComponentStatusEffectControl : EntityComponentBase<StatusEffectControl_Prototype>
{
	[Token(Token = "0x60001BE")]
	[Address(RVA = "0x1048EC0", Offset = "0x1048EC0", VA = "0x1048EC0")]
	public EntityComponentStatusEffectControl()
	{
	}
}
[Token(Token = "0x2000112")]
[DisallowMultipleComponent]
public class EntityComponentStatusEffectImmune : EntityComponentBase<StatusEffectImmune_Prototype>
{
	[Token(Token = "0x60001BF")]
	[Address(RVA = "0x1048F0C", Offset = "0x1048F0C", VA = "0x1048F0C")]
	public EntityComponentStatusEffectImmune()
	{
	}
}
[Token(Token = "0x2000113")]
[DisallowMultipleComponent]
public class EntityComponentStatusEffectsContainer : EntityComponentBase<Quantum.Prototypes.StatusEffectsContainer_Prototype, Quantum.Prototypes.Unity.StatusEffectsContainer_Prototype>
{
	[Token(Token = "0x60001C0")]
	[Address(RVA = "0x1048F58", Offset = "0x1048F58", VA = "0x1048F58")]
	public EntityComponentStatusEffectsContainer()
	{
	}
}
[Token(Token = "0x2000114")]
[DisallowMultipleComponent]
public class EntityComponentSwitchMap : EntityComponentBase<SwitchMap_Prototype>
{
	[Token(Token = "0x60001C1")]
	[Address(RVA = "0x1048FA4", Offset = "0x1048FA4", VA = "0x1048FA4")]
	public EntityComponentSwitchMap()
	{
	}
}
[Token(Token = "0x2000115")]
[DisallowMultipleComponent]
public class EntityComponentTargetAimOffset : EntityComponentBase<TargetAimOffset_Prototype>
{
	[Token(Token = "0x60001C2")]
	[Address(RVA = "0x1048FF0", Offset = "0x1048FF0", VA = "0x1048FF0")]
	public EntityComponentTargetAimOffset()
	{
	}
}
[Token(Token = "0x2000116")]
[DisallowMultipleComponent]
public class EntityComponentTargetBuiltIn : EntityComponentBase<Quantum.Prototypes.TargetBuiltIn_Prototype, Quantum.Prototypes.Unity.TargetBuiltIn_Prototype>
{
	[Token(Token = "0x60001C3")]
	[Address(RVA = "0x104903C", Offset = "0x104903C", VA = "0x104903C")]
	public EntityComponentTargetBuiltIn()
	{
	}
}
[Token(Token = "0x2000117")]
[DisallowMultipleComponent]
public class EntityComponentTargetBuiltInRef : EntityComponentBase<Quantum.Prototypes.TargetBuiltInRef_Prototype, Quantum.Prototypes.Unity.TargetBuiltInRef_Prototype>
{
	[Token(Token = "0x60001C4")]
	[Address(RVA = "0x1049088", Offset = "0x1049088", VA = "0x1049088")]
	public EntityComponentTargetBuiltInRef()
	{
	}
}
[Token(Token = "0x2000118")]
[DisallowMultipleComponent]
public class EntityComponentTargetConditional : EntityComponentBase<TargetConditional_Prototype>
{
	[Token(Token = "0x60001C5")]
	[Address(RVA = "0x104916C", Offset = "0x104916C", VA = "0x104916C")]
	public EntityComponentTargetConditional()
	{
	}
}
[Token(Token = "0x2000119")]
[DisallowMultipleComponent]
public class EntityComponentTargetFilterMovingTowards : EntityComponentBase<TargetFilterMovingTowards_Prototype>
{
	[Token(Token = "0x60001C6")]
	[Address(RVA = "0x10491B8", Offset = "0x10491B8", VA = "0x10491B8")]
	public EntityComponentTargetFilterMovingTowards()
	{
	}
}
[Token(Token = "0x200011A")]
[DisallowMultipleComponent]
public class EntityComponentTargetFilterNearest : EntityComponentBase<TargetFilterNearest_Prototype>
{
	[Token(Token = "0x60001C7")]
	[Address(RVA = "0x1049204", Offset = "0x1049204", VA = "0x1049204")]
	public EntityComponentTargetFilterNearest()
	{
	}
}
[Token(Token = "0x200011B")]
[DisallowMultipleComponent]
public class EntityComponentTargetFilterRaycast : EntityComponentBase<Quantum.Prototypes.TargetFilterRaycast_Prototype, Quantum.Prototypes.Unity.TargetFilterRaycast_Prototype>
{
	[Token(Token = "0x60001C8")]
	[Address(RVA = "0x1049250", Offset = "0x1049250", VA = "0x1049250")]
	public EntityComponentTargetFilterRaycast()
	{
	}
}
[Token(Token = "0x200011C")]
[DisallowMultipleComponent]
public class EntityComponentTargetFilterSelfCast : EntityComponentBase<TargetFilterSelfCast_Prototype>
{
	[Token(Token = "0x60001C9")]
	[Address(RVA = "0x104929C", Offset = "0x104929C", VA = "0x104929C")]
	public EntityComponentTargetFilterSelfCast()
	{
	}
}
[Token(Token = "0x200011D")]
[DisallowMultipleComponent]
public class EntityComponentTargetFilterStatusEffects : EntityComponentBase<TargetFilterStatusEffects_Prototype>
{
	[Token(Token = "0x60001CA")]
	[Address(RVA = "0x10492E8", Offset = "0x10492E8", VA = "0x10492E8")]
	public EntityComponentTargetFilterStatusEffects()
	{
	}
}
[Token(Token = "0x200011E")]
[DisallowMultipleComponent]
public class EntityComponentTargetFilterTeam : EntityComponentBase<TargetFilterTeam_Prototype>
{
	[Token(Token = "0x60001CB")]
	[Address(RVA = "0x1049334", Offset = "0x1049334", VA = "0x1049334")]
	public EntityComponentTargetFilterTeam()
	{
	}
}
[Token(Token = "0x200011F")]
[DisallowMultipleComponent]
public class EntityComponentTargetFilterTiles : EntityComponentBase<TargetFilterTiles_Prototype>
{
	[Token(Token = "0x60001CC")]
	[Address(RVA = "0x1049380", Offset = "0x1049380", VA = "0x1049380")]
	public EntityComponentTargetFilterTiles()
	{
	}
}
[Token(Token = "0x2000120")]
[DisallowMultipleComponent]
public class EntityComponentTargetFilterWithinSight : EntityComponentBase<TargetFilterWithinSight_Prototype>
{
	[Token(Token = "0x60001CD")]
	[Address(RVA = "0x10493CC", Offset = "0x10493CC", VA = "0x10493CC")]
	public EntityComponentTargetFilterWithinSight()
	{
	}
}
[Token(Token = "0x2000121")]
[DisallowMultipleComponent]
public class EntityComponentTargetImpact : EntityComponentBase<TargetImpact_Prototype>
{
	[Token(Token = "0x60001CE")]
	[Address(RVA = "0x1049418", Offset = "0x1049418", VA = "0x1049418")]
	public EntityComponentTargetImpact()
	{
	}
}
[Token(Token = "0x2000122")]
[DisallowMultipleComponent]
public class EntityComponentTargetInnerCollider : EntityComponentBase<TargetInnerCollider_Prototype>
{
	[Token(Token = "0x60001CF")]
	[Address(RVA = "0x1049464", Offset = "0x1049464", VA = "0x1049464")]
	public EntityComponentTargetInnerCollider()
	{
	}
}
[Token(Token = "0x2000123")]
[DisallowMultipleComponent]
public class EntityComponentTargetLaterSelf : EntityComponentBase<TargetLaterSelf_Prototype>
{
	[Token(Token = "0x60001D0")]
	[Address(RVA = "0x10494B0", Offset = "0x10494B0", VA = "0x10494B0")]
	public EntityComponentTargetLaterSelf()
	{
	}
}
[Token(Token = "0x2000124")]
[DisallowMultipleComponent]
public class EntityComponentTargetLockOnTarget : EntityComponentBase<Quantum.Prototypes.TargetLockOnTarget_Prototype, Quantum.Prototypes.Unity.TargetLockOnTarget_Prototype>
{
	[Token(Token = "0x60001D1")]
	[Address(RVA = "0x10494FC", Offset = "0x10494FC", VA = "0x10494FC")]
	public EntityComponentTargetLockOnTarget()
	{
	}
}
[Token(Token = "0x2000125")]
[DisallowMultipleComponent]
public class EntityComponentTargetNearestTargets : EntityComponentBase<TargetNearestTargets_Prototype>
{
	[Token(Token = "0x60001D2")]
	[Address(RVA = "0x1049548", Offset = "0x1049548", VA = "0x1049548")]
	public EntityComponentTargetNearestTargets()
	{
	}
}
[Token(Token = "0x2000126")]
[DisallowMultipleComponent]
public class EntityComponentTargetOuterCollider : EntityComponentBase<TargetOuterCollider_Prototype>
{
	[Token(Token = "0x60001D3")]
	[Address(RVA = "0x1049594", Offset = "0x1049594", VA = "0x1049594")]
	public EntityComponentTargetOuterCollider()
	{
	}
}
[Token(Token = "0x2000127")]
[DisallowMultipleComponent]
public class EntityComponentTargetPointTarget : EntityComponentBase<TargetPointTarget_Prototype>
{
	[Token(Token = "0x60001D4")]
	[Address(RVA = "0x10495E0", Offset = "0x10495E0", VA = "0x10495E0")]
	public EntityComponentTargetPointTarget()
	{
	}
}
[Token(Token = "0x2000128")]
[DisallowMultipleComponent]
public class EntityComponentTargetSelf : EntityComponentBase<TargetSelf_Prototype>
{
	[Token(Token = "0x60001D5")]
	[Address(RVA = "0x104962C", Offset = "0x104962C", VA = "0x104962C")]
	public EntityComponentTargetSelf()
	{
	}
}
[Token(Token = "0x2000129")]
[DisallowMultipleComponent]
public class EntityComponentTargetTile : EntityComponentBase<TargetTile_Prototype>
{
	[Token(Token = "0x60001D6")]
	[Address(RVA = "0x1049678", Offset = "0x1049678", VA = "0x1049678")]
	public EntityComponentTargetTile()
	{
	}
}
[Token(Token = "0x200012A")]
[DisallowMultipleComponent]
public class EntityComponentTargetTileConnections : EntityComponentBase<TargetTileConnections_Prototype>
{
	[Token(Token = "0x60001D7")]
	[Address(RVA = "0x10496C4", Offset = "0x10496C4", VA = "0x10496C4")]
	public EntityComponentTargetTileConnections()
	{
	}
}
[Token(Token = "0x200012B")]
[DisallowMultipleComponent]
public class EntityComponentTargetWithinBoxTargets : EntityComponentBase<TargetWithinBoxTargets_Prototype>
{
	[Token(Token = "0x60001D8")]
	[Address(RVA = "0x1049710", Offset = "0x1049710", VA = "0x1049710")]
	public EntityComponentTargetWithinBoxTargets()
	{
	}
}
[Token(Token = "0x200012C")]
[DisallowMultipleComponent]
public class EntityComponentTaskChild : EntityComponentBase<Quantum.Prototypes.TaskChild_Prototype, Quantum.Prototypes.Unity.TaskChild_Prototype>
{
	[Token(Token = "0x60001D9")]
	[Address(RVA = "0x104975C", Offset = "0x104975C", VA = "0x104975C")]
	public EntityComponentTaskChild()
	{
	}
}
[Token(Token = "0x200012D")]
[DisallowMultipleComponent]
public class EntityComponentTeamPlayerIndex : EntityComponentBase<TeamPlayerIndex_Prototype>
{
	[Token(Token = "0x60001DA")]
	[Address(RVA = "0x10497A8", Offset = "0x10497A8", VA = "0x10497A8")]
	public EntityComponentTeamPlayerIndex()
	{
	}
}
[Token(Token = "0x200012E")]
[DisallowMultipleComponent]
public class EntityComponentTeamTileOrientation : EntityComponentBase<TeamTileOrientation_Prototype>
{
	[Token(Token = "0x60001DB")]
	[Address(RVA = "0x10497F4", Offset = "0x10497F4", VA = "0x10497F4")]
	public EntityComponentTeamTileOrientation()
	{
	}
}
[Token(Token = "0x200012F")]
[DisallowMultipleComponent]
public class EntityComponentTeamsConfiguration : EntityComponentBase<TeamsConfiguration_Prototype>
{
	[Token(Token = "0x60001DC")]
	[Address(RVA = "0x1049840", Offset = "0x1049840", VA = "0x1049840")]
	public EntityComponentTeamsConfiguration()
	{
	}
}
[Token(Token = "0x2000130")]
[DisallowMultipleComponent]
public class EntityComponentTeleported : EntityComponentBase<Teleported_Prototype>
{
	[Token(Token = "0x60001DD")]
	[Address(RVA = "0x104988C", Offset = "0x104988C", VA = "0x104988C")]
	public EntityComponentTeleported()
	{
	}
}
[Token(Token = "0x2000131")]
[DisallowMultipleComponent]
public class EntityComponentTestRangeAutoWand : EntityComponentBase<TestRangeAutoWand_Prototype>
{
	[Token(Token = "0x60001DE")]
	[Address(RVA = "0x10498D8", Offset = "0x10498D8", VA = "0x10498D8")]
	public EntityComponentTestRangeAutoWand()
	{
	}
}
[Token(Token = "0x2000132")]
[DisallowMultipleComponent]
public class EntityComponentTestRangeWands : EntityComponentBase<TestRangeWands_Prototype>
{
	[Token(Token = "0x60001DF")]
	[Address(RVA = "0x1049924", Offset = "0x1049924", VA = "0x1049924")]
	public EntityComponentTestRangeWands()
	{
	}
}
[Token(Token = "0x2000133")]
[DisallowMultipleComponent]
public class EntityComponentTileConnections : EntityComponentBase<Quantum.Prototypes.TileConnections_Prototype, Quantum.Prototypes.Unity.TileConnections_Prototype>
{
	[Token(Token = "0x60001E0")]
	[Address(RVA = "0x1049AA0", Offset = "0x1049AA0", VA = "0x1049AA0")]
	public EntityComponentTileConnections()
	{
	}
}
[Token(Token = "0x2000134")]
[DisallowMultipleComponent]
public class EntityComponentTileHidingSpots : EntityComponentBase<TileHidingSpots_Prototype>
{
	[Token(Token = "0x60001E1")]
	[Address(RVA = "0x1049AEC", Offset = "0x1049AEC", VA = "0x1049AEC")]
	public EntityComponentTileHidingSpots()
	{
	}
}
[Token(Token = "0x2000135")]
[DisallowMultipleComponent]
public class EntityComponentTransform2D : EntityComponentBase<Transform2D_Prototype>
{
	[Token(Token = "0x40000A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool AutoSetPosition;

	[Token(Token = "0x40000A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool AutoSetRotation;

	[Token(Token = "0x60001E2")]
	[Address(RVA = "0x1049B38", Offset = "0x1049B38", VA = "0x1049B38")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x60001E3")]
	[Address(RVA = "0x1049B44", Offset = "0x1049B44", VA = "0x1049B44", Slot = "5")]
	public override void Refresh()
	{
	}

	[Token(Token = "0x60001E4")]
	[Address(RVA = "0x1049C00", Offset = "0x1049C00", VA = "0x1049C00")]
	public EntityComponentTransform2D()
	{
	}
}
[Token(Token = "0x2000136")]
[DisallowMultipleComponent]
public class EntityComponentTransform2DVertical : EntityComponentBase<Transform2DVertical_Prototype>
{
	[Token(Token = "0x40000AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBCC954", Offset = "0xBCC954")]
	public bool AutoSetHeight;

	[Token(Token = "0x40000AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool AutoSetPosition;

	[Token(Token = "0x60001E5")]
	[Address(RVA = "0x1049C54", Offset = "0x1049C54", VA = "0x1049C54")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x60001E6")]
	[Address(RVA = "0x1049C60", Offset = "0x1049C60", VA = "0x1049C60", Slot = "5")]
	public override void Refresh()
	{
	}

	[Token(Token = "0x60001E7")]
	[Address(RVA = "0x1049CF0", Offset = "0x1049CF0", VA = "0x1049CF0")]
	public EntityComponentTransform2DVertical()
	{
	}
}
[Token(Token = "0x2000137")]
[DisallowMultipleComponent]
public class EntityComponentTransform3D : EntityComponentBase<Transform3D_Prototype>
{
	[Token(Token = "0x40000AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool AutoSetPosition;

	[Token(Token = "0x40000AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool AutoSetRotation;

	[Token(Token = "0x60001E8")]
	[Address(RVA = "0x1049D44", Offset = "0x1049D44", VA = "0x1049D44")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x60001E9")]
	[Address(RVA = "0x1049D50", Offset = "0x1049D50", VA = "0x1049D50", Slot = "5")]
	public override void Refresh()
	{
	}

	[Token(Token = "0x60001EA")]
	[Address(RVA = "0x1049E30", Offset = "0x1049E30", VA = "0x1049E30")]
	public EntityComponentTransform3D()
	{
	}
}
[Token(Token = "0x2000138")]
[DisallowMultipleComponent]
public class EntityComponentVelocity : EntityComponentBase<Velocity_Prototype>
{
	[Token(Token = "0x60001EB")]
	[Address(RVA = "0x1049E84", Offset = "0x1049E84", VA = "0x1049E84")]
	public EntityComponentVelocity()
	{
	}
}
[Token(Token = "0x2000139")]
[DisallowMultipleComponent]
public class EntityComponentVelocityLimit : EntityComponentBase<Quantum.Prototypes.VelocityLimit_Prototype, Quantum.Prototypes.Unity.VelocityLimit_Prototype>
{
	[Token(Token = "0x60001EC")]
	[Address(RVA = "0x1049ED0", Offset = "0x1049ED0", VA = "0x1049ED0")]
	public EntityComponentVelocityLimit()
	{
	}
}
[Token(Token = "0x200013A")]
[DisallowMultipleComponent]
public class EntityComponentView : EntityComponentBase<View_Prototype>
{
	[Token(Token = "0x60001ED")]
	[Address(RVA = "0x1049F1C", Offset = "0x1049F1C", VA = "0x1049F1C")]
	public EntityComponentView()
	{
	}
}
[Token(Token = "0x200013B")]
[DisallowMultipleComponent]
public class EntityComponentVoteToSurrender : EntityComponentBase<VoteToSurrender_Prototype>
{
	[Token(Token = "0x60001EE")]
	[Address(RVA = "0x1049F68", Offset = "0x1049F68", VA = "0x1049F68")]
	public EntityComponentVoteToSurrender()
	{
	}
}
[Token(Token = "0x200013C")]
[DisallowMultipleComponent]
public class EntityComponentWaitingQueueIndex : EntityComponentBase<WaitingQueueIndex_Prototype>
{
	[Token(Token = "0x60001EF")]
	[Address(RVA = "0x1049FB4", Offset = "0x1049FB4", VA = "0x1049FB4")]
	public EntityComponentWaitingQueueIndex()
	{
	}
}
[Token(Token = "0x200013D")]
[DisallowMultipleComponent]
public class EntityComponentWandCollision : EntityComponentBase<WandCollision_Prototype>
{
	[Token(Token = "0x60001F0")]
	[Address(RVA = "0x104A000", Offset = "0x104A000", VA = "0x104A000")]
	public EntityComponentWandCollision()
	{
	}
}
[Token(Token = "0x200013E")]
[DisallowMultipleComponent]
public class EntityComponentWandSpells : EntityComponentBase<Quantum.Prototypes.WandSpells_Prototype, Quantum.Prototypes.Unity.WandSpells_Prototype>
{
	[Token(Token = "0x60001F1")]
	[Address(RVA = "0x104A04C", Offset = "0x104A04C", VA = "0x104A04C")]
	public EntityComponentWandSpells()
	{
	}
}
[Token(Token = "0x200013F")]
public class FindEntityAsset : AIActionAsset
{
	[Token(Token = "0x40000AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public FindEntity Settings;

	[Token(Token = "0x17000069")]
	public override AssetObject AssetObject
	{
		[Token(Token = "0x60001F2")]
		[Address(RVA = "0xF9CCE4", Offset = "0xF9CCE4", VA = "0xF9CCE4", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60001F3")]
	[Address(RVA = "0xF9CCEC", Offset = "0xF9CCEC", VA = "0xF9CCEC")]
	public FindEntityAsset()
	{
	}
}
[Token(Token = "0x2000140")]
public static class FindEntityAssetExts
{
	[Token(Token = "0x60001F4")]
	[Address(RVA = "0xF9CCF4", Offset = "0xF9CCF4", VA = "0xF9CCF4")]
	public static FindEntityAsset GetUnityAsset(this FindEntity data)
	{
		return null;
	}
}
[Token(Token = "0x2000141")]
public class FindPathAsset : AIActionAsset
{
	[Token(Token = "0x40000AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public FindPath Settings;

	[Token(Token = "0x1700006A")]
	public override AssetObject AssetObject
	{
		[Token(Token = "0x60001F5")]
		[Address(RVA = "0xF9CD7C", Offset = "0xF9CD7C", VA = "0xF9CD7C", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60001F6")]
	[Address(RVA = "0xF9CD84", Offset = "0xF9CD84", VA = "0xF9CD84")]
	public FindPathAsset()
	{
	}
}
[Token(Token = "0x2000142")]
public static class FindPathAssetExts
{
	[Token(Token = "0x60001F7")]
	[Address(RVA = "0xF9CD8C", Offset = "0xF9CD8C", VA = "0xF9CD8C")]
	public static FindPathAsset GetUnityAsset(this FindPath data)
	{
		return null;
	}
}
[Token(Token = "0x2000143")]
public class FindPingActionAsset : AIActionAsset
{
	[Token(Token = "0x40000B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public FindPingAction Settings;

	[Token(Token = "0x1700006B")]
	public override AssetObject AssetObject
	{
		[Token(Token = "0x60001F8")]
		[Address(RVA = "0xF9CE14", Offset = "0xF9CE14", VA = "0xF9CE14", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60001F9")]
	[Address(RVA = "0xF9CE1C", Offset = "0xF9CE1C", VA = "0xF9CE1C")]
	public FindPingActionAsset()
	{
	}
}
[Token(Token = "0x2000144")]
public static class FindPingActionAssetExts
{
	[Token(Token = "0x60001FA")]
	[Address(RVA = "0xF9CE24", Offset = "0xF9CE24", VA = "0xF9CE24")]
	public static FindPingActionAsset GetUnityAsset(this FindPingAction data)
	{
		return null;
	}
}
[Token(Token = "0x2000145")]
public class FindPingTargetActionAsset : AIActionAsset
{
	[Token(Token = "0x40000B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public FindPingTargetAction Settings;

	[Token(Token = "0x1700006C")]
	public override AssetObject AssetObject
	{
		[Token(Token = "0x60001FB")]
		[Address(RVA = "0xF9CEAC", Offset = "0xF9CEAC", VA = "0xF9CEAC", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60001FC")]
	[Address(RVA = "0xF9CEB4", Offset = "0xF9CEB4", VA = "0xF9CEB4")]
	public FindPingTargetActionAsset()
	{
	}
}
[Token(Token = "0x2000146")]
public static class FindPingTargetActionAssetExts
{
	[Token(Token = "0x60001FD")]
	[Address(RVA = "0xF9CEBC", Offset = "0xF9CEBC", VA = "0xF9CEBC")]
	public static FindPingTargetActionAsset GetUnityAsset(this FindPingTargetAction data)
	{
		return null;
	}
}
[Token(Token = "0x2000147")]
public class FindSafePositionActionAsset : AIActionAsset
{
	[Token(Token = "0x40000B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public FindSafePositionAction Settings;

	[Token(Token = "0x1700006D")]
	public override AssetObject AssetObject
	{
		[Token(Token = "0x60001FE")]
		[Address(RVA = "0xF9CF44", Offset = "0xF9CF44", VA = "0xF9CF44", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60001FF")]
	[Address(RVA = "0xF9CF4C", Offset = "0xF9CF4C", VA = "0xF9CF4C")]
	public FindSafePositionActionAsset()
	{
	}
}
[Token(Token = "0x2000148")]
public static class FindSafePositionActionAssetExts
{
	[Token(Token = "0x6000200")]
	[Address(RVA = "0xF9CF54", Offset = "0xF9CF54", VA = "0xF9CF54")]
	public static FindSafePositionActionAsset GetUnityAsset(this FindSafePositionAction data)
	{
		return null;
	}
}
[Token(Token = "0x2000149")]
public class FindSuitablePlayerAsset : AIActionAsset
{
	[Token(Token = "0x40000B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public FindSuitablePlayer Settings;

	[Token(Token = "0x1700006E")]
	public override AssetObject AssetObject
	{
		[Token(Token = "0x6000201")]
		[Address(RVA = "0xF9CFDC", Offset = "0xF9CFDC", VA = "0xF9CFDC", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000202")]
	[Address(RVA = "0xF9CFE4", Offset = "0xF9CFE4", VA = "0xF9CFE4")]
	public FindSuitablePlayerAsset()
	{
	}
}
[Token(Token = "0x200014A")]
public static class FindSuitablePlayerAssetExts
{
	[Token(Token = "0x6000203")]
	[Address(RVA = "0xF9CFEC", Offset = "0xF9CFEC", VA = "0xF9CFEC")]
	public static FindSuitablePlayerAsset GetUnityAsset(this FindSuitablePlayer data)
	{
		return null;
	}
}
[Token(Token = "0x200014B")]
public class FindTeleportTileAsset : AIActionAsset
{
	[Token(Token = "0x40000B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public FindTeleportTile Settings;

	[Token(Token = "0x1700006F")]
	public override AssetObject AssetObject
	{
		[Token(Token = "0x6000204")]
		[Address(RVA = "0xF9D074", Offset = "0xF9D074", VA = "0xF9D074", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000205")]
	[Address(RVA = "0xF9D07C", Offset = "0xF9D07C", VA = "0xF9D07C")]
	public FindTeleportTileAsset()
	{
	}
}
[Token(Token = "0x200014C")]
public static class FindTeleportTileAssetExts
{
	[Token(Token = "0x6000206")]
	[Address(RVA = "0xF9D084", Offset = "0xF9D084", VA = "0xF9D084")]
	public static FindTeleportTileAsset GetUnityAsset(this FindTeleportTile data)
	{
		return null;
	}
}
[Token(Token = "0x200014D")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBC53F0", Offset = "0xBC53F0")]
public class GOAPRootAsset : AssetBase
{
	[Token(Token = "0x40000B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GOAPRoot Settings;

	[Token(Token = "0x17000070")]
	public override AssetObject AssetObject
	{
		[Token(Token = "0x6000207")]
		[Address(RVA = "0xFA00E0", Offset = "0xFA00E0", VA = "0xFA00E0", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000208")]
	[Address(RVA = "0xFA00E8", Offset = "0xFA00E8", VA = "0xFA00E8", Slot = "9")]
	public override void Reset()
	{
	}

	[Token(Token = "0x6000209")]
	[Address(RVA = "0xFA0154", Offset = "0xFA0154", VA = "0xFA0154")]
	public GOAPRootAsset()
	{
	}
}
[Token(Token = "0x200014E")]
public static class GOAPRootAssetExts
{
	[Token(Token = "0x600020A")]
	[Address(RVA = "0xFA015C", Offset = "0xFA015C", VA = "0xFA015C")]
	public static GOAPRootAsset GetUnityAsset(this GOAPRoot data)
	{
		return null;
	}
}
[Token(Token = "0x200014F")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBC5444", Offset = "0xBC5444")]
public class GOAPTaskAsset : AssetBase
{
	[Token(Token = "0x40000B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GOAPTask Settings;

	[Token(Token = "0x17000071")]
	public override AssetObject AssetObject
	{
		[Token(Token = "0x600020B")]
		[Address(RVA = "0xFA01E4", Offset = "0xFA01E4", VA = "0xFA01E4", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600020C")]
	[Address(RVA = "0xFA01EC", Offset = "0xFA01EC", VA = "0xFA01EC", Slot = "9")]
	public override void Reset()
	{
	}

	[Token(Token = "0x600020D")]
	[Address(RVA = "0xFA0258", Offset = "0xFA0258", VA = "0xFA0258")]
	public GOAPTaskAsset()
	{
	}
}
[Token(Token = "0x2000150")]
public static class GOAPTaskAssetExts
{
	[Token(Token = "0x600020E")]
	[Address(RVA = "0xFA0260", Offset = "0xFA0260", VA = "0xFA0260")]
	public static GOAPTaskAsset GetUnityAsset(this GOAPTask data)
	{
		return null;
	}
}
[Token(Token = "0x2000151")]
public static class GameConstantsAssetExts
{
	[Token(Token = "0x600020F")]
	[Address(RVA = "0xFA4B54", Offset = "0xFA4B54", VA = "0xFA4B54")]
	public static GameConstantsAsset GetUnityAsset(this GameConstants data)
	{
		return null;
	}
}
[Token(Token = "0x2000152")]
public static class GameModeSetupAssetExts
{
	[Token(Token = "0x6000210")]
	[Address(RVA = "0xFA67FC", Offset = "0xFA67FC", VA = "0xFA67FC")]
	public static GameModeSetupAsset GetUnityAsset(this GameModeSetup data)
	{
		return null;
	}
}
[Token(Token = "0x2000153")]
public class GetBodyPartsActionAsset : AIActionAsset
{
	[Token(Token = "0x40000B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GetBodyPartsAction Settings;

	[Token(Token = "0x17000072")]
	public override AssetObject AssetObject
	{
		[Token(Token = "0x6000211")]
		[Address(RVA = "0xFA766C", Offset = "0xFA766C", VA = "0xFA766C", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000212")]
	[Address(RVA = "0xFA7674", Offset = "0xFA7674", VA = "0xFA7674")]
	public GetBodyPartsActionAsset()
	{
	}
}
[Token(Token = "0x2000154")]
public static class GetBodyPartsActionAssetExts
{
	[Token(Token = "0x6000213")]
	[Address(RVA = "0xFA767C", Offset = "0xFA767C", VA = "0xFA767C")]
	public static GetBodyPartsActionAsset GetUnityAsset(this GetBodyPartsAction data)
	{
		return null;
	}
}
[Token(Token = "0x2000155")]
public class GetBombActionAsset : AIActionAsset
{
	[Token(Token = "0x40000B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GetBombAction Settings;

	[Token(Token = "0x17000073")]
	public override AssetObject AssetObject
	{
		[Token(Token = "0x6000214")]
		[Address(RVA = "0xFA7704", Offset = "0xFA7704", VA = "0xFA7704", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000215")]
	[Address(RVA = "0xFA770C", Offset = "0xFA770C", VA = "0xFA770C")]
	public GetBombActionAsset()
	{
	}
}
[Token(Token = "0x2000156")]
public static class GetBombActionAssetExts
{
	[Token(Token = "0x6000216")]
	[Address(RVA = "0xFA7714", Offset = "0xFA7714", VA = "0xFA7714")]
	public static GetBombActionAsset GetUnityAsset(this GetBombAction data)
	{
		return null;
	}
}
[Token(Token = "0x2000157")]
public class GetBombActivationTimeActionAsset : AIActionAsset
{
	[Token(Token = "0x40000B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GetBombActivationTimeAction Settings;

	[Token(Token = "0x17000074")]
	public override AssetObject AssetObject
	{
		[Token(Token = "0x6000217")]
		[Address(RVA = "0xFA779C", Offset = "0xFA779C", VA = "0xFA779C", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000218")]
	[Address(RVA = "0xFA77A4", Offset = "0xFA77A4", VA = "0xFA77A4")]
	public GetBombActivationTimeActionAsset()
	{
	}
}
[Token(Token = "0x2000158")]
public static class GetBombActivationTimeActionAssetExts
{
	[Token(Token = "0x6000219")]
	[Address(RVA = "0xFA77AC", Offset = "0xFA77AC", VA = "0xFA77AC")]
	public static GetBombActivationTimeActionAsset GetUnityAsset(this GetBombActivationTimeAction data)
	{
		return null;
	}
}
[Token(Token = "0x2000159")]
public class GetHealthActionAsset : AIActionAsset
{
	[Token(Token = "0x40000BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GetHealthAction Settings;

	[Token(Token = "0x17000075")]
	public override AssetObject AssetObject
	{
		[Token(Token = "0x600021A")]
		[Address(RVA = "0xFA7834", Offset = "0xFA7834", VA = "0xFA7834", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600021B")]
	[Address(RVA = "0xFA783C", Offset = "0xFA783C", VA = "0xFA783C")]
	public GetHealthActionAsset()
	{
	}
}
[Token(Token = "0x200015A")]
public static class GetHealthActionAssetExts
{
	[Token(Token = "0x600021C")]
	[Address(RVA = "0xFA7844", Offset = "0xFA7844", VA = "0xFA7844")]
	public static GetHealthActionAsset GetUnityAsset(this GetHealthAction data)
	{
		return null;
	}
}
[Token(Token = "0x200015B")]
public class GetHumanPlayerActionAsset : AIActionAsset
{
	[Token(Token = "0x40000BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GetHumanPlayerAction Settings;

	[Token(Token = "0x17000076")]
	public override AssetObject AssetObject
	{
		[Token(Token = "0x600021D")]
		[Address(RVA = "0xFA78CC", Offset = "0xFA78CC", VA = "0xFA78CC", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600021E")]
	[Address(RVA = "0xFA78D4", Offset = "0xFA78D4", VA = "0xFA78D4")]
	public GetHumanPlayerActionAsset()
	{
	}
}
[Token(Token = "0x200015C")]
public static class GetHumanPlayerActionAssetExts
{
	[Token(Token = "0x600021F")]
	[Address(RVA = "0xFA78DC", Offset = "0xFA78DC", VA = "0xFA78DC")]
	public static GetHumanPlayerActionAsset GetUnityAsset(this GetHumanPlayerAction data)
	{
		return null;
	}
}
[Token(Token = "0x200015D")]
public class GetLampPositionActionAsset : AIActionAsset
{
	[Token(Token = "0x40000BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GetLampPositionAction Settings;

	[Token(Token = "0x17000077")]
	public override AssetObject AssetObject
	{
		[Token(Token = "0x6000220")]
		[Address(RVA = "0xFA7964", Offset = "0xFA7964", VA = "0xFA7964", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000221")]
	[Address(RVA = "0xFA796C", Offset = "0xFA796C", VA = "0xFA796C")]
	public GetLampPositionActionAsset()
	{
	}
}
[Token(Token = "0x200015E")]
public static class GetLampPositionActionAssetExts
{
	[Token(Token = "0x6000222")]
	[Address(RVA = "0xFA7974", Offset = "0xFA7974", VA = "0xFA7974")]
	public static GetLampPositionActionAsset GetUnityAsset(this GetLampPositionAction data)
	{
		return null;
	}
}
[Token(Token = "0x200015F")]
public class GetNextTargetActionAsset : AIActionAsset
{
	[Token(Token = "0x40000BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GetNextTargetAction Settings;

	[Token(Token = "0x17000078")]
	public override AssetObject AssetObject
	{
		[Token(Token = "0x6000223")]
		[Address(RVA = "0xFA7A0C", Offset = "0xFA7A0C", VA = "0xFA7A0C", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000224")]
	[Address(RVA = "0xFA7A14", Offset = "0xFA7A14", VA = "0xFA7A14")]
	public GetNextTargetActionAsset()
	{
	}
}
[Token(Token = "0x2000160")]
public static class GetNextTargetActionAssetExts
{
	[Token(Token = "0x6000225")]
	[Address(RVA = "0xFA7A1C", Offset = "0xFA7A1C", VA = "0xFA7A1C")]
	public static GetNextTargetActionAsset GetUnityAsset(this GetNextTargetAction data)
	{
		return null;
	}
}
[Token(Token = "0x2000161")]
public class GetOccupantActionAsset : AIActionAsset
{
	[Token(Token = "0x40000BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GetOccupantAction Settings;

	[Token(Token = "0x17000079")]
	public override AssetObject AssetObject
	{
		[Token(Token = "0x6000226")]
		[Address(RVA = "0xFA7AA4", Offset = "0xFA7AA4", VA = "0xFA7AA4", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000227")]
	[Address(RVA = "0xFA7AAC", Offset = "0xFA7AAC", VA = "0xFA7AAC")]
	public GetOccupantActionAsset()
	{
	}
}
[Token(Token = "0x2000162")]
public static class GetOccupantActionAssetExts
{
	[Token(Token = "0x6000228")]
	[Address(RVA = "0xFA7AB4", Offset = "0xFA7AB4", VA = "0xFA7AB4")]
	public static GetOccupantActionAsset GetUnityAsset(this GetOccupantAction data)
	{
		return null;
	}
}
[Token(Token = "0x2000163")]
public class GetPlayerFromSpellActionAsset : AIActionAsset
{
	[Token(Token = "0x40000BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GetPlayerFromSpellAction Settings;

	[Token(Token = "0x1700007A")]
	public override AssetObject AssetObject
	{
		[Token(Token = "0x6000229")]
		[Address(RVA = "0xFA7B3C", Offset = "0xFA7B3C", VA = "0xFA7B3C", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600022A")]
	[Address(RVA = "0xFA7B44", Offset = "0xFA7B44", VA = "0xFA7B44")]
	public GetPlayerFromSpellActionAsset()
	{
	}
}
[Token(Token = "0x2000164")]
public static class GetPlayerFromSpellActionAssetExts
{
	[Token(Token = "0x600022B")]
	[Address(RVA = "0xFA7B4C", Offset = "0xFA7B4C", VA = "0xFA7B4C")]
	public static GetPlayerFromSpellActionAsset GetUnityAsset(this GetPlayerFromSpellAction data)
	{
		return null;
	}
}
[Token(Token = "0x2000165")]
public class GetPositionActionAsset : AIActionAsset
{
	[Token(Token = "0x40000C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GetPositionAction Settings;

	[Token(Token = "0x1700007B")]
	public override AssetObject AssetObject
	{
		[Token(Token = "0x600022C")]
		[Address(RVA = "0xFA7BD4", Offset = "0xFA7BD4", VA = "0xFA7BD4", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600022D")]
	[Address(RVA = "0xFA7BDC", Offset = "0xFA7BDC", VA = "0xFA7BDC")]
	public GetPositionActionAsset()
	{
	}
}
[Token(Token = "0x2000166")]
public static class GetPositionActionAssetExts
{
	[Token(Token = "0x600022E")]
	[Address(RVA = "0xFA7BE4", Offset = "0xFA7BE4", VA = "0xFA7BE4")]
	public static GetPositionActionAsset GetUnityAsset(this GetPositionAction data)
	{
		return null;
	}
}
[Token(Token = "0x2000167")]
public class GetPossibleHitPositionActionAsset : AIActionAsset
{
	[Token(Token = "0x40000C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GetPossibleHitPositionAction Settings;

	[Token(Token = "0x1700007C")]
	public override AssetObject AssetObject
	{
		[Token(Token = "0x600022F")]
		[Address(RVA = "0xFA7C6C", Offset = "0xFA7C6C", VA = "0xFA7C6C", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000230")]
	[Address(RVA = "0xFA7C74", Offset = "0xFA7C74", VA = "0xFA7C74")]
	public GetPossibleHitPositionActionAsset()
	{
	}
}
[Token(Token = "0x2000168")]
public static class GetPossibleHitPositionActionAssetExts
{
	[Token(Token = "0x6000231")]
	[Address(RVA = "0xFA7C7C", Offset = "0xFA7C7C", VA = "0xFA7C7C")]
	public static GetPossibleHitPositionActionAsset GetUnityAsset(this GetPossibleHitPositionAction data)
	{
		return null;
	}
}
[Token(Token = "0x2000169")]
public class GetSpellPickerSpellsActionAsset : AIActionAsset
{
	[Token(Token = "0x40000C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GetSpellPickerSpellsAction Settings;

	[Token(Token = "0x1700007D")]
	public override AssetObject AssetObject
	{
		[Token(Token = "0x6000232")]
		[Address(RVA = "0xFA7D04", Offset = "0xFA7D04", VA = "0xFA7D04", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000233")]
	[Address(RVA = "0xFA7D0C", Offset = "0xFA7D0C", VA = "0xFA7D0C")]
	public GetSpellPickerSpellsActionAsset()
	{
	}
}
[Token(Token = "0x200016A")]
public static class GetSpellPickerSpellsActionAssetExts
{
	[Token(Token = "0x6000234")]
	[Address(RVA = "0xFA7D14", Offset = "0xFA7D14", VA = "0xFA7D14")]
	public static GetSpellPickerSpellsActionAsset GetUnityAsset(this GetSpellPickerSpellsAction data)
	{
		return null;
	}
}
[Token(Token = "0x200016B")]
public class GetTargetActionAsset : AIActionAsset
{
	[Token(Token = "0x40000C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GetTargetAction Settings;

	[Token(Token = "0x1700007E")]
	public override AssetObject AssetObject
	{
		[Token(Token = "0x6000235")]
		[Address(RVA = "0xFA7D9C", Offset = "0xFA7D9C", VA = "0xFA7D9C", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000236")]
	[Address(RVA = "0xFA7DA4", Offset = "0xFA7DA4", VA = "0xFA7DA4")]
	public GetTargetActionAsset()
	{
	}
}
[Token(Token = "0x200016C")]
public static class GetTargetActionAssetExts
{
	[Token(Token = "0x6000237")]
	[Address(RVA = "0xFA7DAC", Offset = "0xFA7DAC", VA = "0xFA7DAC")]
	public static GetTargetActionAsset GetUnityAsset(this GetTargetAction data)
	{
		return null;
	}
}
[Token(Token = "0x200016D")]
public class GrabObjectWithWandActionAsset : AIActionAsset
{
	[Token(Token = "0x40000C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GrabObjectWithWandAction Settings;

	[Token(Token = "0x1700007F")]
	public override AssetObject AssetObject
	{
		[Token(Token = "0x6000238")]
		[Address(RVA = "0xFA8B64", Offset = "0xFA8B64", VA = "0xFA8B64", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000239")]
	[Address(RVA = "0xFA8B6C", Offset = "0xFA8B6C", VA = "0xFA8B6C")]
	public GrabObjectWithWandActionAsset()
	{
	}
}
[Token(Token = "0x200016E")]
public static class GrabObjectWithWandActionAssetExts
{
	[Token(Token = "0x600023A")]
	[Address(RVA = "0xFA8B74", Offset = "0xFA8B74", VA = "0xFA8B74")]
	public static GrabObjectWithWandActionAsset GetUnityAsset(this GrabObjectWithWandAction data)
	{
		return null;
	}
}
[Token(Token = "0x200016F")]
public class HFSMAndDecisionAsset : HFSMLogicalDecisionAsset
{
	[Token(Token = "0x40000C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public HFSMAndDecision Settings;

	[Token(Token = "0x17000080")]
	public override AssetObject AssetObject
	{
		[Token(Token = "0x600023B")]
		[Address(RVA = "0xFAA960", Offset = "0xFAA960", VA = "0xFAA960", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600023C")]
	[Address(RVA = "0xFAA968", Offset = "0xFAA968", VA = "0xFAA968")]
	public HFSMAndDecisionAsset()
	{
	}
}
[Token(Token = "0x2000170")]
public static class HFSMAndDecisionAssetExts
{
	[Token(Token = "0x600023D")]
	[Address(RVA = "0xFAA978", Offset = "0xFAA978", VA = "0xFAA978")]
	public static HFSMAndDecisionAsset GetUnityAsset(this HFSMAndDecision data)
	{
		return null;
	}
}
[Token(Token = "0x2000171")]
public abstract class HFSMDecisionAsset : AssetBase
{
	[Token(Token = "0x600023E")]
	[Address(RVA = "0xFAAA00", Offset = "0xFAAA00", VA = "0xFAAA00")]
	protected HFSMDecisionAsset()
	{
	}
}
[Token(Token = "0x2000172")]
public static class HFSMDecisionAssetExts
{
	[Token(Token = "0x600023F")]
	[Address(RVA = "0xFAAA08", Offset = "0xFAAA08", VA = "0xFAAA08")]
	public static HFSMDecisionAsset GetUnityAsset(this HFSMDecision data)
	{
		return null;
	}
}
[Token(Token = "0x2000173")]
public abstract class HFSMLogicalDecisionAsset : HFSMDecisionAsset
{
	[Token(Token = "0x6000240")]
	[Address(RVA = "0xFAA970", Offset = "0xFAA970", VA = "0xFAA970")]
	protected HFSMLogicalDecisionAsset()
	{
	}
}
[Token(Token = "0x2000174")]
public static class HFSMLogicalDecisionAssetExts
{
	[Token(Token = "0x6000241")]
	[Address(RVA = "0xFAAA90", Offset = "0xFAAA90", VA = "0xFAAA90")]
	public static HFSMLogicalDecisionAsset GetUnityAsset(this HFSMLogicalDecision data)
	{
		return null;
	}
}
[Token(Token = "0x2000175")]
public class HFSMNotDecisionAsset : HFSMLogicalDecisionAsset
{
	[Token(Token = "0x40000C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public HFSMNotDecision Settings;

	[Token(Token = "0x17000081")]
	public override AssetObject AssetObject
	{
		[Token(Token = "0x6000242")]
		[Address(RVA = "0xFAAB18", Offset = "0xFAAB18", VA = "0xFAAB18", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000243")]
	[Address(RVA = "0xFAAB20", Offset = "0xFAAB20", VA = "0xFAAB20")]
	public HFSMNotDecisionAsset()
	{
	}
}
[Token(Token = "0x2000176")]
public static class HFSMNotDecisionAssetExts
{
	[Token(Token = "0x6000244")]
	[Address(RVA = "0xFAAB28", Offset = "0xFAAB28", VA = "0xFAAB28")]
	public static HFSMNotDecisionAsset GetUnityAsset(this HFSMNotDecision data)
	{
		return null;
	}
}
[Token(Token = "0x2000177")]
public class HFSMOrDecisionAsset : HFSMLogicalDecisionAsset
{
	[Token(Token = "0x40000C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public HFSMOrDecision Settings;

	[Token(Token = "0x17000082")]
	public override AssetObject AssetObject
	{
		[Token(Token = "0x6000245")]
		[Address(RVA = "0xFAABB0", Offset = "0xFAABB0", VA = "0xFAABB0", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000246")]
	[Address(RVA = "0xFAABB8", Offset = "0xFAABB8", VA = "0xFAABB8")]
	public HFSMOrDecisionAsset()
	{
	}
}
[Token(Token = "0x2000178")]
public static class HFSMOrDecisionAssetExts
{
	[Token(Token = "0x6000247")]
	[Address(RVA = "0xFAABC0", Offset = "0xFAABC0", VA = "0xFAABC0")]
	public static HFSMOrDecisionAsset GetUnityAsset(this HFSMOrDecision data)
	{
		return null;
	}
}
[Token(Token = "0x2000179")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBC55E8", Offset = "0xBC55E8")]
public class HFSMRootAsset : AssetBase
{
	[Token(Token = "0x40000C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public HFSMRoot Settings;

	[Token(Token = "0x17000083")]
	public override AssetObject AssetObject
	{
		[Token(Token = "0x6000248")]
		[Address(RVA = "0xFAAC48", Offset = "0xFAAC48", VA = "0xFAAC48", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000249")]
	[Address(RVA = "0xFAAC50", Offset = "0xFAAC50", VA = "0xFAAC50", Slot = "9")]
	public override void Reset()
	{
	}

	[Token(Token = "0x600024A")]
	[Address(RVA = "0xFAACBC", Offset = "0xFAACBC", VA = "0xFAACBC")]
	public HFSMRootAsset()
	{
	}
}
[Token(Token = "0x200017A")]
public static class HFSMRootAssetExts
{
	[Token(Token = "0x600024B")]
	[Address(RVA = "0xFAACC4", Offset = "0xFAACC4", VA = "0xFAACC4")]
	public static HFSMRootAsset GetUnityAsset(this HFSMRoot data)
	{
		return null;
	}
}
[Token(Token = "0x200017B")]
public class HFSMStateAsset : AssetBase
{
	[Token(Token = "0x40000C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public HFSMState Settings;

	[Token(Token = "0x17000084")]
	public override AssetObject AssetObject
	{
		[Token(Token = "0x600024C")]
		[Address(RVA = "0xFAAD4C", Offset = "0xFAAD4C", VA = "0xFAAD4C", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600024D")]
	[Address(RVA = "0xFAAD54", Offset = "0xFAAD54", VA = "0xFAAD54")]
	public HFSMStateAsset()
	{
	}
}
[Token(Token = "0x200017C")]
public static class HFSMStateAssetExts
{
	[Token(Token = "0x600024E")]
	[Address(RVA = "0xFAAD5C", Offset = "0xFAAD5C", VA = "0xFAAD5C")]
	public static HFSMStateAsset GetUnityAsset(this HFSMState data)
	{
		return null;
	}
}
[Token(Token = "0x200017D")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBC564C", Offset = "0xBC564C")]
public class HFSMTransitionSetAsset : AssetBase
{
	[Token(Token = "0x40000CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public HFSMTransitionSet Settings;

	[Token(Token = "0x17000085")]
	public override AssetObject AssetObject
	{
		[Token(Token = "0x600024F")]
		[Address(RVA = "0xFAADE4", Offset = "0xFAADE4", VA = "0xFAADE4", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000250")]
	[Address(RVA = "0xFAADEC", Offset = "0xFAADEC", VA = "0xFAADEC", Slot = "9")]
	public override void Reset()
	{
	}

	[Token(Token = "0x6000251")]
	[Address(RVA = "0xFAAE58", Offset = "0xFAAE58", VA = "0xFAAE58")]
	public HFSMTransitionSetAsset()
	{
	}
}
[Token(Token = "0x200017E")]
public static class HFSMTransitionSetAssetExts
{
	[Token(Token = "0x6000252")]
	[Address(RVA = "0xFAAE60", Offset = "0xFAAE60", VA = "0xFAAE60")]
	public static HFSMTransitionSetAsset GetUnityAsset(this HFSMTransitionSet data)
	{
		return null;
	}
}
[Token(Token = "0x200017F")]
public class IdleActionAsset : AIActionAsset
{
	[Token(Token = "0x40000CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IdleAction Settings;

	[Token(Token = "0x17000086")]
	public override AssetObject AssetObject
	{
		[Token(Token = "0x6000253")]
		[Address(RVA = "0xFB3F24", Offset = "0xFB3F24", VA = "0xFB3F24", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000254")]
	[Address(RVA = "0xFB3F2C", Offset = "0xFB3F2C", VA = "0xFB3F2C")]
	public IdleActionAsset()
	{
	}
}
[Token(Token = "0x2000180")]
public static class IdleActionAssetExts
{
	[Token(Token = "0x6000255")]
	[Address(RVA = "0xFB3F34", Offset = "0xFB3F34", VA = "0xFB3F34")]
	public static IdleActionAsset GetUnityAsset(this IdleAction data)
	{
		return null;
	}
}
[Token(Token = "0x2000181")]
public class IfTeleportValidDecisionAsset : HFSMDecisionAsset
{
	[Token(Token = "0x40000CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IfTeleportValidDecision Settings;

	[Token(Token = "0x17000087")]
	public override AssetObject AssetObject
	{
		[Token(Token = "0x6000256")]
		[Address(RVA = "0xFB3FBC", Offset = "0xFB3FBC", VA = "0xFB3FBC", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000257")]
	[Address(RVA = "0xFB3FC4", Offset = "0xFB3FC4", VA = "0xFB3FC4")]
	public IfTeleportValidDecisionAsset()
	{
	}
}
[Token(Token = "0x2000182")]
public static class IfTeleportValidDecisionAssetExts
{
	[Token(Token = "0x6000258")]
	[Address(RVA = "0xFB3FCC", Offset = "0xFB3FCC", VA = "0xFB3FCC")]
	public static IfTeleportValidDecisionAsset GetUnityAsset(this IfTeleportValidDecision data)
	{
		return null;
	}
}
[Token(Token = "0x2000183")]
public class IfTileAcceptableDecisionAsset : HFSMDecisionAsset
{
	[Token(Token = "0x40000CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IfTileAcceptableDecision Settings;

	[Token(Token = "0x17000088")]
	public override AssetObject AssetObject
	{
		[Token(Token = "0x6000259")]
		[Address(RVA = "0xFB4054", Offset = "0xFB4054", VA = "0xFB4054", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600025A")]
	[Address(RVA = "0xFB405C", Offset = "0xFB405C", VA = "0xFB405C")]
	public IfTileAcceptableDecisionAsset()
	{
	}
}
[Token(Token = "0x2000184")]
public static class IfTileAcceptableDecisionAssetExts
{
	[Token(Token = "0x600025B")]
	[Address(RVA = "0xFB4064", Offset = "0xFB4064", VA = "0xFB4064")]
	public static IfTileAcceptableDecisionAsset GetUnityAsset(this IfTileAcceptableDecision data)
	{
		return null;
	}
}
[Token(Token = "0x2000185")]
public class InTileMovementActionAsset : AIActionAsset
{
	[Token(Token = "0x40000CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public InTileMovementAction Settings;

	[Token(Token = "0x17000089")]
	public override AssetObject AssetObject
	{
		[Token(Token = "0x600025C")]
		[Address(RVA = "0xF804C4", Offset = "0xF804C4", VA = "0xF804C4", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600025D")]
	[Address(RVA = "0xF804CC", Offset = "0xF804CC", VA = "0xF804CC")]
	public InTileMovementActionAsset()
	{
	}
}
[Token(Token = "0x2000186")]
public static class InTileMovementActionAssetExts
{
	[Token(Token = "0x600025E")]
	[Address(RVA = "0xF804D4", Offset = "0xF804D4", VA = "0xF804D4")]
	public static InTileMovementActionAsset GetUnityAsset(this InTileMovementAction data)
	{
		return null;
	}
}
[Token(Token = "0x2000187")]
public class IncreaseBlackboardIntAsset : AIActionAsset
{
	[Token(Token = "0x40000CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IncreaseBlackboardInt Settings;

	[Token(Token = "0x1700008A")]
	public override AssetObject AssetObject
	{
		[Token(Token = "0x600025F")]
		[Address(RVA = "0xF8055C", Offset = "0xF8055C", VA = "0xF8055C", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000260")]
	[Address(RVA = "0xF80564", Offset = "0xF80564", VA = "0xF80564")]
	public IncreaseBlackboardIntAsset()
	{
	}
}
[Token(Token = "0x2000188")]
public static class IncreaseBlackboardIntAssetExts
{
	[Token(Token = "0x6000261")]
	[Address(RVA = "0xF8056C", Offset = "0xF8056C", VA = "0xF8056C")]
	public static IncreaseBlackboardIntAsset GetUnityAsset(this IncreaseBlackboardInt data)
	{
		return null;
	}
}
[Token(Token = "0x2000189")]
public class InstantTeleportActionAsset : AIActionAsset
{
	[Token(Token = "0x40000D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public InstantTeleportAction Settings;

	[Token(Token = "0x1700008B")]
	public override AssetObject AssetObject
	{
		[Token(Token = "0x6000262")]
		[Address(RVA = "0xF81FF4", Offset = "0xF81FF4", VA = "0xF81FF4", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000263")]
	[Address(RVA = "0xF81FFC", Offset = "0xF81FFC", VA = "0xF81FFC")]
	public InstantTeleportActionAsset()
	{
	}
}
[Token(Token = "0x200018A")]
public static class InstantTeleportActionAssetExts
{
	[Token(Token = "0x6000264")]
	[Address(RVA = "0xF82004", Offset = "0xF82004", VA = "0xF82004")]
	public static InstantTeleportActionAsset GetUnityAsset(this InstantTeleportAction data)
	{
		return null;
	}
}
[Token(Token = "0x200018B")]
public class IsCastingAllowedDecisionAsset : HFSMDecisionAsset
{
	[Token(Token = "0x40000D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IsCastingAllowedDecision Settings;

	[Token(Token = "0x1700008C")]
	public override AssetObject AssetObject
	{
		[Token(Token = "0x6000265")]
		[Address(RVA = "0xF821CC", Offset = "0xF821CC", VA = "0xF821CC", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000266")]
	[Address(RVA = "0xF821D4", Offset = "0xF821D4", VA = "0xF821D4")]
	public IsCastingAllowedDecisionAsset()
	{
	}
}
[Token(Token = "0x200018C")]
public static class IsCastingAllowedDecisionAssetExts
{
	[Token(Token = "0x6000267")]
	[Address(RVA = "0xF821DC", Offset = "0xF821DC", VA = "0xF821DC")]
	public static IsCastingAllowedDecisionAsset GetUnityAsset(this IsCastingAllowedDecision data)
	{
		return null;
	}
}
[Token(Token = "0x200018D")]
public class IsClassSelectedDecisionAsset : HFSMDecisionAsset
{
	[Token(Token = "0x40000D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IsClassSelectedDecision Settings;

	[Token(Token = "0x1700008D")]
	public override AssetObject AssetObject
	{
		[Token(Token = "0x6000268")]
		[Address(RVA = "0xF82264", Offset = "0xF82264", VA = "0xF82264", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000269")]
	[Address(RVA = "0xF8226C", Offset = "0xF8226C", VA = "0xF8226C")]
	public IsClassSelectedDecisionAsset()
	{
	}
}
[Token(Token = "0x200018E")]
public static class IsClassSelectedDecisionAssetExts
{
	[Token(Token = "0x600026A")]
	[Address(RVA = "0xF82274", Offset = "0xF82274", VA = "0xF82274")]
	public static IsClassSelectedDecisionAsset GetUnityAsset(this IsClassSelectedDecision data)
	{
		return null;
	}
}
[Token(Token = "0x200018F")]
public class IsEntityValidDecisionAsset : HFSMDecisionAsset
{
	[Token(Token = "0x40000D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IsEntityValidDecision Settings;

	[Token(Token = "0x1700008E")]
	public override AssetObject AssetObject
	{
		[Token(Token = "0x600026B")]
		[Address(RVA = "0xF822FC", Offset = "0xF822FC", VA = "0xF822FC", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600026C")]
	[Address(RVA = "0xF82304", Offset = "0xF82304", VA = "0xF82304")]
	public IsEntityValidDecisionAsset()
	{
	}
}
[Token(Token = "0x2000190")]
public static class IsEntityValidDecisionAssetExts
{
	[Token(Token = "0x600026D")]
	[Address(RVA = "0xF8230C", Offset = "0xF8230C", VA = "0xF8230C")]
	public static IsEntityValidDecisionAsset GetUnityAsset(this IsEntityValidDecision data)
	{
		return null;
	}
}
[Token(Token = "0x2000191")]
public class IsGameModeEffectTimerStoppedDecisionAsset : HFSMDecisionAsset
{
	[Token(Token = "0x40000D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IsGameModeEffectTimerStoppedDecision Settings;

	[Token(Token = "0x1700008F")]
	public override AssetObject AssetObject
	{
		[Token(Token = "0x600026E")]
		[Address(RVA = "0xF82394", Offset = "0xF82394", VA = "0xF82394", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600026F")]
	[Address(RVA = "0xF8239C", Offset = "0xF8239C", VA = "0xF8239C")]
	public IsGameModeEffectTimerStoppedDecisionAsset()
	{
	}
}
[Token(Token = "0x2000192")]
public static class IsGameModeEffectTimerStoppedDecisionAssetExts
{
	[Token(Token = "0x6000270")]
	[Address(RVA = "0xF823A4", Offset = "0xF823A4", VA = "0xF823A4")]
	public static IsGameModeEffectTimerStoppedDecisionAsset GetUnityAsset(this IsGameModeEffectTimerStoppedDecision data)
	{
		return null;
	}
}
[Token(Token = "0x2000193")]
public class IsGameTimerFinishedDecisionAsset : HFSMDecisionAsset
{
	[Token(Token = "0x40000D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IsGameTimerFinishedDecision Settings;

	[Token(Token = "0x17000090")]
	public override AssetObject AssetObject
	{
		[Token(Token = "0x6000271")]
		[Address(RVA = "0xF8242C", Offset = "0xF8242C", VA = "0xF8242C", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000272")]
	[Address(RVA = "0xF82434", Offset = "0xF82434", VA = "0xF82434")]
	public IsGameTimerFinishedDecisionAsset()
	{
	}
}
[Token(Token = "0x2000194")]
public static class IsGameTimerFinishedDecisionAssetExts
{
	[Token(Token = "0x6000273")]
	[Address(RVA = "0xF8243C", Offset = "0xF8243C", VA = "0xF8243C")]
	public static IsGameTimerFinishedDecisionAsset GetUnityAsset(this IsGameTimerFinishedDecision data)
	{
		return null;
	}
}
[Token(Token = "0x2000195")]
public class IsGrabbedBombDecisionAsset : HFSMDecisionAsset
{
	[Token(Token = "0x40000D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IsGrabbedBombDecision Settings;

	[Token(Token = "0x17000091")]
	public override AssetObject AssetObject
	{
		[Token(Token = "0x6000274")]
		[Address(RVA = "0xF824C4", Offset = "0xF824C4", VA = "0xF824C4", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000275")]
	[Address(RVA = "0xF824CC", Offset = "0xF824CC", VA = "0xF824CC")]
	public IsGrabbedBombDecisionAsset()
	{
	}
}
[Token(Token = "0x2000196")]
public static class IsGrabbedBombDecisionAssetExts
{
	[Token(Token = "0x6000276")]
	[Address(RVA = "0xF824D4", Offset = "0xF824D4", VA = "0xF824D4")]
	public static IsGrabbedBombDecisionAsset GetUnityAsset(this IsGrabbedBombDecision data)
	{
		return null;
	}
}
[Token(Token = "0x2000197")]
public class IsLookingAtDecisionAsset : HFSMDecisionAsset
{
	[Token(Token = "0x40000D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IsLookingAtDecision Settings;

	[Token(Token = "0x17000092")]
	public override AssetObject AssetObject
	{
		[Token(Token = "0x6000277")]
		[Address(RVA = "0xF8255C", Offset = "0xF8255C", VA = "0xF8255C", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000278")]
	[Address(RVA = "0xF82564", Offset = "0xF82564", VA = "0xF82564")]
	public IsLookingAtDecisionAsset()
	{
	}
}
[Token(Token = "0x2000198")]
public static class IsLookingAtDecisionAssetExts
{
	[Token(Token = "0x6000279")]
	[Address(RVA = "0xF8256C", Offset = "0xF8256C", VA = "0xF8256C")]
	public static IsLookingAtDecisionAsset GetUnityAsset(this IsLookingAtDecision data)
	{
		return null;
	}
}
[Token(Token = "0x2000199")]
public class IsPlayerDeadDecisionAsset : HFSMDecisionAsset
{
	[Token(Token = "0x40000D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IsPlayerDeadDecision Settings;

	[Token(Token = "0x17000093")]
	public override AssetObject AssetObject
	{
		[Token(Token = "0x600027A")]
		[Address(RVA = "0xF825F4", Offset = "0xF825F4", VA = "0xF825F4", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600027B")]
	[Address(RVA = "0xF825FC", Offset = "0xF825FC", VA = "0xF825FC")]
	public IsPlayerDeadDecisionAsset()
	{
	}
}
[Token(Token = "0x200019A")]
public static class IsPlayerDeadDecisionAssetExts
{
	[Token(Token = "0x600027C")]
	[Address(RVA = "0xF82604", Offset = "0xF82604", VA = "0xF82604")]
	public static IsPlayerDeadDecisionAsset GetUnityAsset(this IsPlayerDeadDecision data)
	{
		return null;
	}
}
[Token(Token = "0x200019B")]
public class IsPlayerHumanDecisionAsset : HFSMDecisionAsset
{
	[Token(Token = "0x40000D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IsPlayerHumanDecision Settings;

	[Token(Token = "0x17000094")]
	public override AssetObject AssetObject
	{
		[Token(Token = "0x600027D")]
		[Address(RVA = "0xF8268C", Offset = "0xF8268C", VA = "0xF8268C", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600027E")]
	[Address(RVA = "0xF82694", Offset = "0xF82694", VA = "0xF82694")]
	public IsPlayerHumanDecisionAsset()
	{
	}
}
[Token(Token = "0x200019C")]
public static class IsPlayerHumanDecisionAssetExts
{
	[Token(Token = "0x600027F")]
	[Address(RVA = "0xF8269C", Offset = "0xF8269C", VA = "0xF8269C")]
	public static IsPlayerHumanDecisionAsset GetUnityAsset(this IsPlayerHumanDecision data)
	{
		return null;
	}
}
[Token(Token = "0x200019D")]
public class IsPlayerLaterJoinedDecisionAsset : HFSMDecisionAsset
{
	[Token(Token = "0x40000DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IsPlayerLaterJoinedDecision Settings;

	[Token(Token = "0x17000095")]
	public override AssetObject AssetObject
	{
		[Token(Token = "0x6000280")]
		[Address(RVA = "0xF82724", Offset = "0xF82724", VA = "0xF82724", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000281")]
	[Address(RVA = "0xF8272C", Offset = "0xF8272C", VA = "0xF8272C")]
	public IsPlayerLaterJoinedDecisionAsset()
	{
	}
}
[Token(Token = "0x200019E")]
public static class IsPlayerLaterJoinedDecisionAssetExts
{
	[Token(Token = "0x6000282")]
	[Address(RVA = "0xF82734", Offset = "0xF82734", VA = "0xF82734")]
	public static IsPlayerLaterJoinedDecisionAsset GetUnityAsset(this IsPlayerLaterJoinedDecision data)
	{
		return null;
	}
}
[Token(Token = "0x200019F")]
public class IsPlayerTryingTeleportDecisionAsset : HFSMDecisionAsset
{
	[Token(Token = "0x40000DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IsPlayerTryingTeleportDecision Settings;

	[Token(Token = "0x17000096")]
	public override AssetObject AssetObject
	{
		[Token(Token = "0x6000283")]
		[Address(RVA = "0xF827BC", Offset = "0xF827BC", VA = "0xF827BC", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000284")]
	[Address(RVA = "0xF827C4", Offset = "0xF827C4", VA = "0xF827C4")]
	public IsPlayerTryingTeleportDecisionAsset()
	{
	}
}
[Token(Token = "0x20001A0")]
public static class IsPlayerTryingTeleportDecisionAssetExts
{
	[Token(Token = "0x6000285")]
	[Address(RVA = "0xF827CC", Offset = "0xF827CC", VA = "0xF827CC")]
	public static IsPlayerTryingTeleportDecisionAsset GetUnityAsset(this IsPlayerTryingTeleportDecision data)
	{
		return null;
	}
}
[Token(Token = "0x20001A1")]
public class IsRoundEndDecisionAsset : HFSMDecisionAsset
{
	[Token(Token = "0x40000DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IsRoundEndDecision Settings;

	[Token(Token = "0x17000097")]
	public override AssetObject AssetObject
	{
		[Token(Token = "0x6000286")]
		[Address(RVA = "0xF82854", Offset = "0xF82854", VA = "0xF82854", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000287")]
	[Address(RVA = "0xF8285C", Offset = "0xF8285C", VA = "0xF8285C")]
	public IsRoundEndDecisionAsset()
	{
	}
}
[Token(Token = "0x20001A2")]
public static class IsRoundEndDecisionAssetExts
{
	[Token(Token = "0x6000288")]
	[Address(RVA = "0xF82864", Offset = "0xF82864", VA = "0xF82864")]
	public static IsRoundEndDecisionAsset GetUnityAsset(this IsRoundEndDecision data)
	{
		return null;
	}
}
[Token(Token = "0x20001A3")]
public class IsSpellPickerReadyDecisionAsset : HFSMDecisionAsset
{
	[Token(Token = "0x40000DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IsSpellPickerReadyDecision Settings;

	[Token(Token = "0x17000098")]
	public override AssetObject AssetObject
	{
		[Token(Token = "0x6000289")]
		[Address(RVA = "0xF828EC", Offset = "0xF828EC", VA = "0xF828EC", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600028A")]
	[Address(RVA = "0xF828F4", Offset = "0xF828F4", VA = "0xF828F4")]
	public IsSpellPickerReadyDecisionAsset()
	{
	}
}
[Token(Token = "0x20001A4")]
public static class IsSpellPickerReadyDecisionAssetExts
{
	[Token(Token = "0x600028B")]
	[Address(RVA = "0xF828FC", Offset = "0xF828FC", VA = "0xF828FC")]
	public static IsSpellPickerReadyDecisionAsset GetUnityAsset(this IsSpellPickerReadyDecision data)
	{
		return null;
	}
}
[Token(Token = "0x20001A5")]
public class IsSpellPickerStartedDecisionAsset : HFSMDecisionAsset
{
	[Token(Token = "0x40000DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IsSpellPickerStartedDecision Settings;

	[Token(Token = "0x17000099")]
	public override AssetObject AssetObject
	{
		[Token(Token = "0x600028C")]
		[Address(RVA = "0xF82984", Offset = "0xF82984", VA = "0xF82984", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600028D")]
	[Address(RVA = "0xF8298C", Offset = "0xF8298C", VA = "0xF8298C")]
	public IsSpellPickerStartedDecisionAsset()
	{
	}
}
[Token(Token = "0x20001A6")]
public static class IsSpellPickerStartedDecisionAssetExts
{
	[Token(Token = "0x600028E")]
	[Address(RVA = "0xF82994", Offset = "0xF82994", VA = "0xF82994")]
	public static IsSpellPickerStartedDecisionAsset GetUnityAsset(this IsSpellPickerStartedDecision data)
	{
		return null;
	}
}
[Token(Token = "0x20001A7")]
public class IsSpellResultValidDecisionAsset : HFSMDecisionAsset
{
	[Token(Token = "0x40000DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IsSpellResultValidDecision Settings;

	[Token(Token = "0x1700009A")]
	public override AssetObject AssetObject
	{
		[Token(Token = "0x600028F")]
		[Address(RVA = "0xF82A1C", Offset = "0xF82A1C", VA = "0xF82A1C", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000290")]
	[Address(RVA = "0xF82A24", Offset = "0xF82A24", VA = "0xF82A24")]
	public IsSpellResultValidDecisionAsset()
	{
	}
}
[Token(Token = "0x20001A8")]
public static class IsSpellResultValidDecisionAssetExts
{
	[Token(Token = "0x6000291")]
	[Address(RVA = "0xF82A2C", Offset = "0xF82A2C", VA = "0xF82A2C")]
	public static IsSpellResultValidDecisionAsset GetUnityAsset(this IsSpellResultValidDecision data)
	{
		return null;
	}
}
[Token(Token = "0x20001A9")]
public class IsSpellWasCastedDecisionAsset : HFSMDecisionAsset
{
	[Token(Token = "0x40000E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IsSpellWasCastedDecision Settings;

	[Token(Token = "0x1700009B")]
	public override AssetObject AssetObject
	{
		[Token(Token = "0x6000292")]
		[Address(RVA = "0xF82AB4", Offset = "0xF82AB4", VA = "0xF82AB4", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000293")]
	[Address(RVA = "0xF82ABC", Offset = "0xF82ABC", VA = "0xF82ABC")]
	public IsSpellWasCastedDecisionAsset()
	{
	}
}
[Token(Token = "0x20001AA")]
public static class IsSpellWasCastedDecisionAssetExts
{
	[Token(Token = "0x6000294")]
	[Address(RVA = "0xF82AC4", Offset = "0xF82AC4", VA = "0xF82AC4")]
	public static IsSpellWasCastedDecisionAsset GetUnityAsset(this IsSpellWasCastedDecision data)
	{
		return null;
	}
}
[Token(Token = "0x20001AB")]
public class IsStateMachineReadyDecisionAsset : HFSMDecisionAsset
{
	[Token(Token = "0x40000E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IsStateMachineReadyDecision Settings;

	[Token(Token = "0x1700009C")]
	public override AssetObject AssetObject
	{
		[Token(Token = "0x6000295")]
		[Address(RVA = "0xF82B4C", Offset = "0xF82B4C", VA = "0xF82B4C", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000296")]
	[Address(RVA = "0xF82B54", Offset = "0xF82B54", VA = "0xF82B54")]
	public IsStateMachineReadyDecisionAsset()
	{
	}
}
[Token(Token = "0x20001AC")]
public static class IsStateMachineReadyDecisionAssetExts
{
	[Token(Token = "0x6000297")]
	[Address(RVA = "0xF82B5C", Offset = "0xF82B5C", VA = "0xF82B5C")]
	public static IsStateMachineReadyDecisionAsset GetUnityAsset(this IsStateMachineReadyDecision data)
	{
		return null;
	}
}
[Token(Token = "0x20001AD")]
public class IsSurrenderedDecisionAsset : HFSMDecisionAsset
{
	[Token(Token = "0x40000E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IsSurrenderedDecision Settings;

	[Token(Token = "0x1700009D")]
	public override AssetObject AssetObject
	{
		[Token(Token = "0x6000298")]
		[Address(RVA = "0xF82BE4", Offset = "0xF82BE4", VA = "0xF82BE4", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000299")]
	[Address(RVA = "0xF82BEC", Offset = "0xF82BEC", VA = "0xF82BEC")]
	public IsSurrenderedDecisionAsset()
	{
	}
}
[Token(Token = "0x20001AE")]
public static class IsSurrenderedDecisionAssetExts
{
	[Token(Token = "0x600029A")]
	[Address(RVA = "0xF82BF4", Offset = "0xF82BF4", VA = "0xF82BF4")]
	public static IsSurrenderedDecisionAsset GetUnityAsset(this IsSurrenderedDecision data)
	{
		return null;
	}
}
[Token(Token = "0x20001AF")]
public class IsTaskRunDecisionAsset : HFSMDecisionAsset
{
	[Token(Token = "0x40000E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IsTaskRunDecision Settings;

	[Token(Token = "0x1700009E")]
	public override AssetObject AssetObject
	{
		[Token(Token = "0x600029B")]
		[Address(RVA = "0xF82C7C", Offset = "0xF82C7C", VA = "0xF82C7C", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600029C")]
	[Address(RVA = "0xF82C84", Offset = "0xF82C84", VA = "0xF82C84")]
	public IsTaskRunDecisionAsset()
	{
	}
}
[Token(Token = "0x20001B0")]
public static class IsTaskRunDecisionAssetExts
{
	[Token(Token = "0x600029D")]
	[Address(RVA = "0xF82C8C", Offset = "0xF82C8C", VA = "0xF82C8C")]
	public static IsTaskRunDecisionAsset GetUnityAsset(this IsTaskRunDecision data)
	{
		return null;
	}
}
[Token(Token = "0x20001B1")]
public class IsTeamDeadDecisionAsset : HFSMDecisionAsset
{
	[Token(Token = "0x40000E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IsTeamDeadDecision Settings;

	[Token(Token = "0x1700009F")]
	public override AssetObject AssetObject
	{
		[Token(Token = "0x600029E")]
		[Address(RVA = "0xF82D14", Offset = "0xF82D14", VA = "0xF82D14", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600029F")]
	[Address(RVA = "0xF82D1C", Offset = "0xF82D1C", VA = "0xF82D1C")]
	public IsTeamDeadDecisionAsset()
	{
	}
}
[Token(Token = "0x20001B2")]
public static class IsTeamDeadDecisionAssetExts
{
	[Token(Token = "0x60002A0")]
	[Address(RVA = "0xF82D24", Offset = "0xF82D24", VA = "0xF82D24")]
	public static IsTeamDeadDecisionAsset GetUnityAsset(this IsTeamDeadDecision data)
	{
		return null;
	}
}
[Token(Token = "0x20001B3")]
public class IsTeamSurrenderedDecisionAsset : HFSMDecisionAsset
{
	[Token(Token = "0x40000E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IsTeamSurrenderedDecision Settings;

	[Token(Token = "0x170000A0")]
	public override AssetObject AssetObject
	{
		[Token(Token = "0x60002A1")]
		[Address(RVA = "0xF82DAC", Offset = "0xF82DAC", VA = "0xF82DAC", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60002A2")]
	[Address(RVA = "0xF82DB4", Offset = "0xF82DB4", VA = "0xF82DB4")]
	public IsTeamSurrenderedDecisionAsset()
	{
	}
}
[Token(Token = "0x20001B4")]
public static class IsTeamSurrenderedDecisionAssetExts
{
	[Token(Token = "0x60002A3")]
	[Address(RVA = "0xF82DBC", Offset = "0xF82DBC", VA = "0xF82DBC")]
	public static IsTeamSurrenderedDecisionAsset GetUnityAsset(this IsTeamSurrenderedDecision data)
	{
		return null;
	}
}
[Token(Token = "0x20001B5")]
public class IsWandGrabbedDecisionAsset : HFSMDecisionAsset
{
	[Token(Token = "0x40000E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IsWandGrabbedDecision Settings;

	[Token(Token = "0x170000A1")]
	public override AssetObject AssetObject
	{
		[Token(Token = "0x60002A4")]
		[Address(RVA = "0xF82E4C", Offset = "0xF82E4C", VA = "0xF82E4C", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60002A5")]
	[Address(RVA = "0xF82E54", Offset = "0xF82E54", VA = "0xF82E54")]
	public IsWandGrabbedDecisionAsset()
	{
	}
}
[Token(Token = "0x20001B6")]
public static class IsWandGrabbedDecisionAssetExts
{
	[Token(Token = "0x60002A6")]
	[Address(RVA = "0xF82E5C", Offset = "0xF82E5C", VA = "0xF82E5C")]
	public static IsWandGrabbedDecisionAsset GetUnityAsset(this IsWandGrabbedDecision data)
	{
		return null;
	}
}
[Token(Token = "0x20001B7")]
public class LeaveMatchActionAsset : AIActionAsset
{
	[Token(Token = "0x40000E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LeaveMatchAction Settings;

	[Token(Token = "0x170000A2")]
	public override AssetObject AssetObject
	{
		[Token(Token = "0x60002A7")]
		[Address(RVA = "0xF848D8", Offset = "0xF848D8", VA = "0xF848D8", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60002A8")]
	[Address(RVA = "0xF848E0", Offset = "0xF848E0", VA = "0xF848E0")]
	public LeaveMatchActionAsset()
	{
	}
}
[Token(Token = "0x20001B8")]
public static class LeaveMatchActionAssetExts
{
	[Token(Token = "0x60002A9")]
	[Address(RVA = "0xF848E8", Offset = "0xF848E8", VA = "0xF848E8")]
	public static LeaveMatchActionAsset GetUnityAsset(this LeaveMatchAction data)
	{
		return null;
	}
}
[Token(Token = "0x20001B9")]
public class LookToActionAsset : AIActionAsset
{
	[Token(Token = "0x40000E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LookToAction Settings;

	[Token(Token = "0x170000A3")]
	public override AssetObject AssetObject
	{
		[Token(Token = "0x60002AA")]
		[Address(RVA = "0xF8B6C0", Offset = "0xF8B6C0", VA = "0xF8B6C0", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60002AB")]
	[Address(RVA = "0xF8B6C8", Offset = "0xF8B6C8", VA = "0xF8B6C8")]
	public LookToActionAsset()
	{
	}
}
[Token(Token = "0x20001BA")]
public static class LookToActionAssetExts
{
	[Token(Token = "0x60002AC")]
	[Address(RVA = "0xF8B6D0", Offset = "0xF8B6D0", VA = "0xF8B6D0")]
	public static LookToActionAsset GetUnityAsset(this LookToAction data)
	{
		return null;
	}
}
[Token(Token = "0x20001BB")]
public class MulBlackboardFPValueActionAsset : AIActionAsset
{
	[Token(Token = "0x40000E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MulBlackboardFPValueAction Settings;

	[Token(Token = "0x170000A4")]
	public override AssetObject AssetObject
	{
		[Token(Token = "0x60002AD")]
		[Address(RVA = "0x10197B8", Offset = "0x10197B8", VA = "0x10197B8", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60002AE")]
	[Address(RVA = "0x10197C0", Offset = "0x10197C0", VA = "0x10197C0")]
	public MulBlackboardFPValueActionAsset()
	{
	}
}
[Token(Token = "0x20001BC")]
public static class MulBlackboardFPValueActionAssetExts
{
	[Token(Token = "0x60002AF")]
	[Address(RVA = "0x10197C8", Offset = "0x10197C8", VA = "0x10197C8")]
	public static MulBlackboardFPValueActionAsset GetUnityAsset(this MulBlackboardFPValueAction data)
	{
		return null;
	}
}
[Token(Token = "0x20001BD")]
public class MulBlackboardIntValueActionAsset : AIActionAsset
{
	[Token(Token = "0x40000EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MulBlackboardIntValueAction Settings;

	[Token(Token = "0x170000A5")]
	public override AssetObject AssetObject
	{
		[Token(Token = "0x60002B0")]
		[Address(RVA = "0x1019850", Offset = "0x1019850", VA = "0x1019850", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60002B1")]
	[Address(RVA = "0x1019858", Offset = "0x1019858", VA = "0x1019858")]
	public MulBlackboardIntValueActionAsset()
	{
	}
}
[Token(Token = "0x20001BE")]
public static class MulBlackboardIntValueActionAssetExts
{
	[Token(Token = "0x60002B2")]
	[Address(RVA = "0x1019860", Offset = "0x1019860", VA = "0x1019860")]
	public static MulBlackboardIntValueActionAsset GetUnityAsset(this MulBlackboardIntValueAction data)
	{
		return null;
	}
}
[Token(Token = "0x20001BF")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBC58A0", Offset = "0xBC58A0")]
public class MultiSpawnFactoryAsset : SpawnFactoryAsset
{
	[Token(Token = "0x40000EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MultiSpawnFactory Settings;

	[Token(Token = "0x170000A6")]
	public override AssetObject AssetObject
	{
		[Token(Token = "0x60002B3")]
		[Address(RVA = "0x101A144", Offset = "0x101A144", VA = "0x101A144", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60002B4")]
	[Address(RVA = "0x101A14C", Offset = "0x101A14C", VA = "0x101A14C", Slot = "9")]
	public override void Reset()
	{
	}

	[Token(Token = "0x60002B5")]
	[Address(RVA = "0x101A1B8", Offset = "0x101A1B8", VA = "0x101A1B8")]
	public MultiSpawnFactoryAsset()
	{
	}
}
[Token(Token = "0x20001C0")]
public static class MultiSpawnFactoryAssetExts
{
	[Token(Token = "0x60002B6")]
	[Address(RVA = "0x101A1C0", Offset = "0x101A1C0", VA = "0x101A1C0")]
	public static MultiSpawnFactoryAsset GetUnityAsset(this MultiSpawnFactory data)
	{
		return null;
	}
}
[Token(Token = "0x20001C1")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBC58F4", Offset = "0xBC58F4")]
public class MultiSpawnRndSpreadAsset : SpawnFactoryAsset
{
	[Token(Token = "0x40000EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MultiSpawnRndSpread Settings;

	[Token(Token = "0x170000A7")]
	public override AssetObject AssetObject
	{
		[Token(Token = "0x60002B7")]
		[Address(RVA = "0x101A248", Offset = "0x101A248", VA = "0x101A248", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60002B8")]
	[Address(RVA = "0x101A250", Offset = "0x101A250", VA = "0x101A250", Slot = "9")]
	public override void Reset()
	{
	}

	[Token(Token = "0x60002B9")]
	[Address(RVA = "0x101A2BC", Offset = "0x101A2BC", VA = "0x101A2BC")]
	public MultiSpawnRndSpreadAsset()
	{
	}
}
[Token(Token = "0x20001C2")]
public static class MultiSpawnRndSpreadAssetExts
{
	[Token(Token = "0x60002BA")]
	[Address(RVA = "0x101A2C4", Offset = "0x101A2C4", VA = "0x101A2C4")]
	public static MultiSpawnRndSpreadAsset GetUnityAsset(this MultiSpawnRndSpread data)
	{
		return null;
	}
}
[Token(Token = "0x20001C3")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBC5948", Offset = "0xBC5948")]
public class OnlySpawnInDirectionAsset : SpawnFactoryAsset
{
	[Token(Token = "0x40000ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OnlySpawnInDirection Settings;

	[Token(Token = "0x170000A8")]
	public override AssetObject AssetObject
	{
		[Token(Token = "0x60002BB")]
		[Address(RVA = "0x1021BB0", Offset = "0x1021BB0", VA = "0x1021BB0", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60002BC")]
	[Address(RVA = "0x1021BB8", Offset = "0x1021BB8", VA = "0x1021BB8", Slot = "9")]
	public override void Reset()
	{
	}

	[Token(Token = "0x60002BD")]
	[Address(RVA = "0x1021C24", Offset = "0x1021C24", VA = "0x1021C24")]
	public OnlySpawnInDirectionAsset()
	{
	}
}
[Token(Token = "0x20001C4")]
public static class OnlySpawnInDirectionAssetExts
{
	[Token(Token = "0x60002BE")]
	[Address(RVA = "0x1021C2C", Offset = "0x1021C2C", VA = "0x1021C2C")]
	public static OnlySpawnInDirectionAsset GetUnityAsset(this OnlySpawnInDirection data)
	{
		return null;
	}
}
[Token(Token = "0x20001C5")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBC599C", Offset = "0xBC599C")]
public class PhysicsCastOptionsAsset : AssetBase
{
	[Token(Token = "0x40000EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PhysicsCastOptions Settings;

	[Token(Token = "0x170000A9")]
	public override AssetObject AssetObject
	{
		[Token(Token = "0x60002BF")]
		[Address(RVA = "0xFD2178", Offset = "0xFD2178", VA = "0xFD2178", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60002C0")]
	[Address(RVA = "0xFD2180", Offset = "0xFD2180", VA = "0xFD2180", Slot = "9")]
	public override void Reset()
	{
	}

	[Token(Token = "0x60002C1")]
	[Address(RVA = "0xFD21EC", Offset = "0xFD21EC", VA = "0xFD21EC")]
	public PhysicsCastOptionsAsset()
	{
	}
}
[Token(Token = "0x20001C6")]
public static class PhysicsCastOptionsAssetExts
{
	[Token(Token = "0x60002C2")]
	[Address(RVA = "0xFD21F4", Offset = "0xFD21F4", VA = "0xFD21F4")]
	public static PhysicsCastOptionsAsset GetUnityAsset(this PhysicsCastOptions data)
	{
		return null;
	}
}
[Token(Token = "0x20001C7")]
public class PlaceBombActionAsset : AIActionAsset
{
	[Token(Token = "0x40000EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PlaceBombAction Settings;

	[Token(Token = "0x170000AA")]
	public override AssetObject AssetObject
	{
		[Token(Token = "0x60002C3")]
		[Address(RVA = "0xFD3F20", Offset = "0xFD3F20", VA = "0xFD3F20", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60002C4")]
	[Address(RVA = "0xFD3F28", Offset = "0xFD3F28", VA = "0xFD3F28")]
	public PlaceBombActionAsset()
	{
	}
}
[Token(Token = "0x20001C8")]
public static class PlaceBombActionAssetExts
{
	[Token(Token = "0x60002C5")]
	[Address(RVA = "0xFD3F30", Offset = "0xFD3F30", VA = "0xFD3F30")]
	public static PlaceBombActionAsset GetUnityAsset(this PlaceBombAction data)
	{
		return null;
	}
}
[Token(Token = "0x20001C9")]
public static class PlayerClassConfigurationAssetExts
{
	[Token(Token = "0x60002C6")]
	[Address(RVA = "0xFE1BB4", Offset = "0xFE1BB4", VA = "0xFE1BB4")]
	public static PlayerClassConfigurationAsset GetUnityAsset(this PlayerClassConfiguration data)
	{
		return null;
	}
}
[Token(Token = "0x20001CA")]
public class PutSpellOnCooldownActionAsset : AIActionAsset
{
	[Token(Token = "0x40000F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PutSpellOnCooldownAction Settings;

	[Token(Token = "0x170000AB")]
	public override AssetObject AssetObject
	{
		[Token(Token = "0x60002C7")]
		[Address(RVA = "0x111E108", Offset = "0x111E108", VA = "0x111E108", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60002C8")]
	[Address(RVA = "0x111E110", Offset = "0x111E110", VA = "0x111E110")]
	public PutSpellOnCooldownActionAsset()
	{
	}
}
[Token(Token = "0x20001CB")]
public static class PutSpellOnCooldownActionAssetExts
{
	[Token(Token = "0x60002C9")]
	[Address(RVA = "0x111E118", Offset = "0x111E118", VA = "0x111E118")]
	public static PutSpellOnCooldownActionAsset GetUnityAsset(this PutSpellOnCooldownAction data)
	{
		return null;
	}
}
[Token(Token = "0x20001CC")]
public class RandomDecisionAsset : HFSMDecisionAsset
{
	[Token(Token = "0x40000F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RandomDecision Settings;

	[Token(Token = "0x170000AC")]
	public override AssetObject AssetObject
	{
		[Token(Token = "0x60002CA")]
		[Address(RVA = "0x1253E94", Offset = "0x1253E94", VA = "0x1253E94", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60002CB")]
	[Address(RVA = "0x1253E9C", Offset = "0x1253E9C", VA = "0x1253E9C")]
	public RandomDecisionAsset()
	{
	}
}
[Token(Token = "0x20001CD")]
public static class RandomDecisionAssetExts
{
	[Token(Token = "0x60002CC")]
	[Address(RVA = "0x1253EA4", Offset = "0x1253EA4", VA = "0x1253EA4")]
	public static RandomDecisionAsset GetUnityAsset(this RandomDecision data)
	{
		return null;
	}
}
[Token(Token = "0x20001CE")]
public class ReadStatisticsActionAsset : AIActionAsset
{
	[Token(Token = "0x40000F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ReadStatisticsAction Settings;

	[Token(Token = "0x170000AD")]
	public override AssetObject AssetObject
	{
		[Token(Token = "0x60002CD")]
		[Address(RVA = "0x125A5E8", Offset = "0x125A5E8", VA = "0x125A5E8", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60002CE")]
	[Address(RVA = "0x125A5F0", Offset = "0x125A5F0", VA = "0x125A5F0")]
	public ReadStatisticsActionAsset()
	{
	}
}
[Token(Token = "0x20001CF")]
public static class ReadStatisticsActionAssetExts
{
	[Token(Token = "0x60002CF")]
	[Address(RVA = "0x125A5F8", Offset = "0x125A5F8", VA = "0x125A5F8")]
	public static ReadStatisticsActionAsset GetUnityAsset(this ReadStatisticsAction data)
	{
		return null;
	}
}
[Token(Token = "0x20001D0")]
public class RebuildTeamActionAsset : AIActionAsset
{
	[Token(Token = "0x40000F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RebuildTeamAction Settings;

	[Token(Token = "0x170000AE")]
	public override AssetObject AssetObject
	{
		[Token(Token = "0x60002D0")]
		[Address(RVA = "0x125A680", Offset = "0x125A680", VA = "0x125A680", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60002D1")]
	[Address(RVA = "0x125A688", Offset = "0x125A688", VA = "0x125A688")]
	public RebuildTeamActionAsset()
	{
	}
}
[Token(Token = "0x20001D1")]
public static class RebuildTeamActionAssetExts
{
	[Token(Token = "0x60002D2")]
	[Address(RVA = "0x125A690", Offset = "0x125A690", VA = "0x125A690")]
	public static RebuildTeamActionAsset GetUnityAsset(this RebuildTeamAction data)
	{
		return null;
	}
}
[Token(Token = "0x20001D2")]
public class ReduceSpellCooldownAsset : AIActionAsset
{
	[Token(Token = "0x40000F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ReduceSpellCooldown Settings;

	[Token(Token = "0x170000AF")]
	public override AssetObject AssetObject
	{
		[Token(Token = "0x60002D3")]
		[Address(RVA = "0x125AAF8", Offset = "0x125AAF8", VA = "0x125AAF8", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60002D4")]
	[Address(RVA = "0x125AB00", Offset = "0x125AB00", VA = "0x125AB00")]
	public ReduceSpellCooldownAsset()
	{
	}
}
[Token(Token = "0x20001D3")]
public static class ReduceSpellCooldownAssetExts
{
	[Token(Token = "0x60002D5")]
	[Address(RVA = "0x125AB08", Offset = "0x125AB08", VA = "0x125AB08")]
	public static ReduceSpellCooldownAsset GetUnityAsset(this ReduceSpellCooldown data)
	{
		return null;
	}
}
[Token(Token = "0x20001D4")]
public class ReleaseGrabbedObjectActionAsset : AIActionAsset
{
	[Token(Token = "0x40000F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ReleaseGrabbedObjectAction Settings;

	[Token(Token = "0x170000B0")]
	public override AssetObject AssetObject
	{
		[Token(Token = "0x60002D6")]
		[Address(RVA = "0x11EFE34", Offset = "0x11EFE34", VA = "0x11EFE34", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60002D7")]
	[Address(RVA = "0x11EFE3C", Offset = "0x11EFE3C", VA = "0x11EFE3C")]
	public ReleaseGrabbedObjectActionAsset()
	{
	}
}
[Token(Token = "0x20001D5")]
public static class ReleaseGrabbedObjectActionAssetExts
{
	[Token(Token = "0x60002D8")]
	[Address(RVA = "0x11EFE44", Offset = "0x11EFE44", VA = "0x11EFE44")]
	public static ReleaseGrabbedObjectActionAsset GetUnityAsset(this ReleaseGrabbedObjectAction data)
	{
		return null;
	}
}
[Token(Token = "0x20001D6")]
public class RespawnAllPlayersActionAsset : AIActionAsset
{
	[Token(Token = "0x40000F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RespawnAllPlayersAction Settings;

	[Token(Token = "0x170000B1")]
	public override AssetObject AssetObject
	{
		[Token(Token = "0x60002D9")]
		[Address(RVA = "0x11F2054", Offset = "0x11F2054", VA = "0x11F2054", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60002DA")]
	[Address(RVA = "0x11F205C", Offset = "0x11F205C", VA = "0x11F205C")]
	public RespawnAllPlayersActionAsset()
	{
	}
}
[Token(Token = "0x20001D7")]
public static class RespawnAllPlayersActionAssetExts
{
	[Token(Token = "0x60002DB")]
	[Address(RVA = "0x11F2064", Offset = "0x11F2064", VA = "0x11F2064")]
	public static RespawnAllPlayersActionAsset GetUnityAsset(this RespawnAllPlayersAction data)
	{
		return null;
	}
}
[Token(Token = "0x20001D8")]
public class RespawnPlayerActionAsset : AIActionAsset
{
	[Token(Token = "0x40000F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RespawnPlayerAction Settings;

	[Token(Token = "0x170000B2")]
	public override AssetObject AssetObject
	{
		[Token(Token = "0x60002DC")]
		[Address(RVA = "0x11F20EC", Offset = "0x11F20EC", VA = "0x11F20EC", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60002DD")]
	[Address(RVA = "0x11F20F4", Offset = "0x11F20F4", VA = "0x11F20F4")]
	public RespawnPlayerActionAsset()
	{
	}
}
[Token(Token = "0x20001D9")]
public static class RespawnPlayerActionAssetExts
{
	[Token(Token = "0x60002DE")]
	[Address(RVA = "0x11F20FC", Offset = "0x11F20FC", VA = "0x11F20FC")]
	public static RespawnPlayerActionAsset GetUnityAsset(this RespawnPlayerAction data)
	{
		return null;
	}
}
[Token(Token = "0x20001DA")]
public class RestartPlayerBotsActionAsset : AIActionAsset
{
	[Token(Token = "0x40000F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RestartPlayerBotsAction Settings;

	[Token(Token = "0x170000B3")]
	public override AssetObject AssetObject
	{
		[Token(Token = "0x60002DF")]
		[Address(RVA = "0x11F2328", Offset = "0x11F2328", VA = "0x11F2328", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60002E0")]
	[Address(RVA = "0x11F2330", Offset = "0x11F2330", VA = "0x11F2330")]
	public RestartPlayerBotsActionAsset()
	{
	}
}
[Token(Token = "0x20001DB")]
public static class RestartPlayerBotsActionAssetExts
{
	[Token(Token = "0x60002E1")]
	[Address(RVA = "0x11F2338", Offset = "0x11F2338", VA = "0x11F2338")]
	public static RestartPlayerBotsActionAsset GetUnityAsset(this RestartPlayerBotsAction data)
	{
		return null;
	}
}
[Token(Token = "0x20001DC")]
public class ResurrectActionAsset : AIActionAsset
{
	[Token(Token = "0x40000F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ResurrectAction Settings;

	[Token(Token = "0x170000B4")]
	public override AssetObject AssetObject
	{
		[Token(Token = "0x60002E2")]
		[Address(RVA = "0x11F23C0", Offset = "0x11F23C0", VA = "0x11F23C0", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60002E3")]
	[Address(RVA = "0x11F23C8", Offset = "0x11F23C8", VA = "0x11F23C8")]
	public ResurrectActionAsset()
	{
	}
}
[Token(Token = "0x20001DD")]
public static class ResurrectActionAssetExts
{
	[Token(Token = "0x60002E4")]
	[Address(RVA = "0x11F23D0", Offset = "0x11F23D0", VA = "0x11F23D0")]
	public static ResurrectActionAsset GetUnityAsset(this ResurrectAction data)
	{
		return null;
	}
}
[Token(Token = "0x20001DE")]
public class RotateObjectToActionAsset : AIActionAsset
{
	[Token(Token = "0x40000FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RotateObjectToAction Settings;

	[Token(Token = "0x170000B5")]
	public override AssetObject AssetObject
	{
		[Token(Token = "0x60002E5")]
		[Address(RVA = "0x11F3D2C", Offset = "0x11F3D2C", VA = "0x11F3D2C", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60002E6")]
	[Address(RVA = "0x11F3D34", Offset = "0x11F3D34", VA = "0x11F3D34")]
	public RotateObjectToActionAsset()
	{
	}
}
[Token(Token = "0x20001DF")]
public static class RotateObjectToActionAssetExts
{
	[Token(Token = "0x60002E7")]
	[Address(RVA = "0x11F3D3C", Offset = "0x11F3D3C", VA = "0x11F3D3C")]
	public static RotateObjectToActionAsset GetUnityAsset(this RotateObjectToAction data)
	{
		return null;
	}
}
[Token(Token = "0x20001E0")]
public class RunTaskActionAsset : AIActionAsset
{
	[Token(Token = "0x40000FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RunTaskAction Settings;

	[Token(Token = "0x170000B6")]
	public override AssetObject AssetObject
	{
		[Token(Token = "0x60002E8")]
		[Address(RVA = "0x11F424C", Offset = "0x11F424C", VA = "0x11F424C", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60002E9")]
	[Address(RVA = "0x11F4254", Offset = "0x11F4254", VA = "0x11F4254")]
	public RunTaskActionAsset()
	{
	}
}
[Token(Token = "0x20001E1")]
public static class RunTaskActionAssetExts
{
	[Token(Token = "0x60002EA")]
	[Address(RVA = "0x11F425C", Offset = "0x11F425C", VA = "0x11F425C")]
	public static RunTaskActionAsset GetUnityAsset(this RunTaskAction data)
	{
		return null;
	}
}
[Token(Token = "0x20001E2")]
public class SelectLoadoutActionAsset : AIActionAsset
{
	[Token(Token = "0x40000FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SelectLoadoutAction Settings;

	[Token(Token = "0x170000B7")]
	public override AssetObject AssetObject
	{
		[Token(Token = "0x60002EB")]
		[Address(RVA = "0x11F707C", Offset = "0x11F707C", VA = "0x11F707C", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60002EC")]
	[Address(RVA = "0x11F7084", Offset = "0x11F7084", VA = "0x11F7084")]
	public SelectLoadoutActionAsset()
	{
	}
}
[Token(Token = "0x20001E3")]
public static class SelectLoadoutActionAssetExts
{
	[Token(Token = "0x60002ED")]
	[Address(RVA = "0x11F708C", Offset = "0x11F708C", VA = "0x11F708C")]
	public static SelectLoadoutActionAsset GetUnityAsset(this SelectLoadoutAction data)
	{
		return null;
	}
}
[Token(Token = "0x20001E4")]
public class SelectMatchPhaseActionAsset : AIActionAsset
{
	[Token(Token = "0x40000FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SelectMatchPhaseAction Settings;

	[Token(Token = "0x170000B8")]
	public override AssetObject AssetObject
	{
		[Token(Token = "0x60002EE")]
		[Address(RVA = "0x11F7114", Offset = "0x11F7114", VA = "0x11F7114", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60002EF")]
	[Address(RVA = "0x11F711C", Offset = "0x11F711C", VA = "0x11F711C")]
	public SelectMatchPhaseActionAsset()
	{
	}
}
[Token(Token = "0x20001E5")]
public static class SelectMatchPhaseActionAssetExts
{
	[Token(Token = "0x60002F0")]
	[Address(RVA = "0x11F7124", Offset = "0x11F7124", VA = "0x11F7124")]
	public static SelectMatchPhaseActionAsset GetUnityAsset(this SelectMatchPhaseAction data)
	{
		return null;
	}
}
[Token(Token = "0x20001E6")]
public class SetBlackboardFPAsset : AIActionAsset
{
	[Token(Token = "0x40000FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SetBlackboardFP Settings;

	[Token(Token = "0x170000B9")]
	public override AssetObject AssetObject
	{
		[Token(Token = "0x60002F1")]
		[Address(RVA = "0x11F769C", Offset = "0x11F769C", VA = "0x11F769C", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60002F2")]
	[Address(RVA = "0x11F76A4", Offset = "0x11F76A4", VA = "0x11F76A4")]
	public SetBlackboardFPAsset()
	{
	}
}
[Token(Token = "0x20001E7")]
public static class SetBlackboardFPAssetExts
{
	[Token(Token = "0x60002F3")]
	[Address(RVA = "0x11F76AC", Offset = "0x11F76AC", VA = "0x11F76AC")]
	public static SetBlackboardFPAsset GetUnityAsset(this SetBlackboardFP data)
	{
		return null;
	}
}
[Token(Token = "0x20001E8")]
public class SetBlackboardIntAsset : AIActionAsset
{
	[Token(Token = "0x40000FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SetBlackboardInt Settings;

	[Token(Token = "0x170000BA")]
	public override AssetObject AssetObject
	{
		[Token(Token = "0x60002F4")]
		[Address(RVA = "0x11F7734", Offset = "0x11F7734", VA = "0x11F7734", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60002F5")]
	[Address(RVA = "0x11F773C", Offset = "0x11F773C", VA = "0x11F773C")]
	public SetBlackboardIntAsset()
	{
	}
}
[Token(Token = "0x20001E9")]
public static class SetBlackboardIntAssetExts
{
	[Token(Token = "0x60002F6")]
	[Address(RVA = "0x11F7744", Offset = "0x11F7744", VA = "0x11F7744")]
	public static SetBlackboardIntAsset GetUnityAsset(this SetBlackboardInt data)
	{
		return null;
	}
}
[Token(Token = "0x20001EA")]
public class SetCooldownModifierActionAsset : AIActionAsset
{
	[Token(Token = "0x4000100")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SetCooldownModifierAction Settings;

	[Token(Token = "0x170000BB")]
	public override AssetObject AssetObject
	{
		[Token(Token = "0x60002F7")]
		[Address(RVA = "0x11F77CC", Offset = "0x11F77CC", VA = "0x11F77CC", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60002F8")]
	[Address(RVA = "0x11F77D4", Offset = "0x11F77D4", VA = "0x11F77D4")]
	public SetCooldownModifierActionAsset()
	{
	}
}
[Token(Token = "0x20001EB")]
public static class SetCooldownModifierActionAssetExts
{
	[Token(Token = "0x60002F9")]
	[Address(RVA = "0x11F77DC", Offset = "0x11F77DC", VA = "0x11F77DC")]
	public static SetCooldownModifierActionAsset GetUnityAsset(this SetCooldownModifierAction data)
	{
		return null;
	}
}
[Token(Token = "0x20001EC")]
public class SetDataSourceActionAsset : AIActionAsset
{
	[Token(Token = "0x4000101")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SetDataSourceAction Settings;

	[Token(Token = "0x170000BC")]
	public override AssetObject AssetObject
	{
		[Token(Token = "0x60002FA")]
		[Address(RVA = "0x11F7864", Offset = "0x11F7864", VA = "0x11F7864", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60002FB")]
	[Address(RVA = "0x11F786C", Offset = "0x11F786C", VA = "0x11F786C")]
	public SetDataSourceActionAsset()
	{
	}
}
[Token(Token = "0x20001ED")]
public static class SetDataSourceActionAssetExts
{
	[Token(Token = "0x60002FC")]
	[Address(RVA = "0x11F7874", Offset = "0x11F7874", VA = "0x11F7874")]
	public static SetDataSourceActionAsset GetUnityAsset(this SetDataSourceAction data)
	{
		return null;
	}
}
[Token(Token = "0x20001EE")]
public class SetEndRoundActionAsset : AIActionAsset
{
	[Token(Token = "0x4000102")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SetEndRoundAction Settings;

	[Token(Token = "0x170000BD")]
	public override AssetObject AssetObject
	{
		[Token(Token = "0x60002FD")]
		[Address(RVA = "0x11F78FC", Offset = "0x11F78FC", VA = "0x11F78FC", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60002FE")]
	[Address(RVA = "0x11F7904", Offset = "0x11F7904", VA = "0x11F7904")]
	public SetEndRoundActionAsset()
	{
	}
}
[Token(Token = "0x20001EF")]
public static class SetEndRoundActionAssetExts
{
	[Token(Token = "0x60002FF")]
	[Address(RVA = "0x11F790C", Offset = "0x11F790C", VA = "0x11F790C")]
	public static SetEndRoundActionAsset GetUnityAsset(this SetEndRoundAction data)
	{
		return null;
	}
}
[Token(Token = "0x20001F0")]
public class SetGameTimerActionAsset : AIActionAsset
{
	[Token(Token = "0x4000103")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SetGameTimerAction Settings;

	[Token(Token = "0x170000BE")]
	public override AssetObject AssetObject
	{
		[Token(Token = "0x6000300")]
		[Address(RVA = "0x11F7994", Offset = "0x11F7994", VA = "0x11F7994", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000301")]
	[Address(RVA = "0x11F799C", Offset = "0x11F799C", VA = "0x11F799C")]
	public SetGameTimerActionAsset()
	{
	}
}
[Token(Token = "0x20001F1")]
public static class SetGameTimerActionAssetExts
{
	[Token(Token = "0x6000302")]
	[Address(RVA = "0x11F79A4", Offset = "0x11F79A4", VA = "0x11F79A4")]
	public static SetGameTimerActionAsset GetUnityAsset(this SetGameTimerAction data)
	{
		return null;
	}
}
[Token(Token = "0x20001F2")]
public class SetHUDModeActionAsset : AIActionAsset
{
	[Token(Token = "0x4000104")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SetHUDModeAction Settings;

	[Token(Token = "0x170000BF")]
	public override AssetObject AssetObject
	{
		[Token(Token = "0x6000303")]
		[Address(RVA = "0x11F7C64", Offset = "0x11F7C64", VA = "0x11F7C64", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000304")]
	[Address(RVA = "0x11F7C6C", Offset = "0x11F7C6C", VA = "0x11F7C6C")]
	public SetHUDModeActionAsset()
	{
	}
}
[Token(Token = "0x20001F3")]
public static class SetHUDModeActionAssetExts
{
	[Token(Token = "0x6000305")]
	[Address(RVA = "0x11F7C74", Offset = "0x11F7C74", VA = "0x11F7C74")]
	public static SetHUDModeActionAsset GetUnityAsset(this SetHUDModeAction data)
	{
		return null;
	}
}
[Token(Token = "0x20001F4")]
public class SetPingActionAsset : AIActionAsset
{
	[Token(Token = "0x4000105")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SetPingAction Settings;

	[Token(Token = "0x170000C0")]
	public override AssetObject AssetObject
	{
		[Token(Token = "0x6000306")]
		[Address(RVA = "0x11F7E9C", Offset = "0x11F7E9C", VA = "0x11F7E9C", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000307")]
	[Address(RVA = "0x11F7EA4", Offset = "0x11F7EA4", VA = "0x11F7EA4")]
	public SetPingActionAsset()
	{
	}
}
[Token(Token = "0x20001F5")]
public static class SetPingActionAssetExts
{
	[Token(Token = "0x6000308")]
	[Address(RVA = "0x11F7EAC", Offset = "0x11F7EAC", VA = "0x11F7EAC")]
	public static SetPingActionAsset GetUnityAsset(this SetPingAction data)
	{
		return null;
	}
}
[Token(Token = "0x20001F6")]
public class SetPreferableSpawnTileActionAsset : AIActionAsset
{
	[Token(Token = "0x4000106")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SetPreferableSpawnTileAction Settings;

	[Token(Token = "0x170000C1")]
	public override AssetObject AssetObject
	{
		[Token(Token = "0x6000309")]
		[Address(RVA = "0x11F7F34", Offset = "0x11F7F34", VA = "0x11F7F34", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600030A")]
	[Address(RVA = "0x11F7F3C", Offset = "0x11F7F3C", VA = "0x11F7F3C")]
	public SetPreferableSpawnTileActionAsset()
	{
	}
}
[Token(Token = "0x20001F7")]
public static class SetPreferableSpawnTileActionAssetExts
{
	[Token(Token = "0x600030B")]
	[Address(RVA = "0x11F7F44", Offset = "0x11F7F44", VA = "0x11F7F44")]
	public static SetPreferableSpawnTileActionAsset GetUnityAsset(this SetPreferableSpawnTileAction data)
	{
		return null;
	}
}
[Token(Token = "0x20001F8")]
public class SetTaskResultActionAsset : AIActionAsset
{
	[Token(Token = "0x4000107")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SetTaskResultAction Settings;

	[Token(Token = "0x170000C2")]
	public override AssetObject AssetObject
	{
		[Token(Token = "0x600030C")]
		[Address(RVA = "0x11F7FCC", Offset = "0x11F7FCC", VA = "0x11F7FCC", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600030D")]
	[Address(RVA = "0x11F7FD4", Offset = "0x11F7FD4", VA = "0x11F7FD4")]
	public SetTaskResultActionAsset()
	{
	}
}
[Token(Token = "0x20001F9")]
public static class SetTaskResultActionAssetExts
{
	[Token(Token = "0x600030E")]
	[Address(RVA = "0x11F7FDC", Offset = "0x11F7FDC", VA = "0x11F7FDC")]
	public static SetTaskResultActionAsset GetUnityAsset(this SetTaskResultAction data)
	{
		return null;
	}
}
[Token(Token = "0x20001FA")]
public class SetVoiceOverTypeActionAsset : AIActionAsset
{
	[Token(Token = "0x4000108")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SetVoiceOverTypeAction Settings;

	[Token(Token = "0x170000C3")]
	public override AssetObject AssetObject
	{
		[Token(Token = "0x600030F")]
		[Address(RVA = "0x11F8064", Offset = "0x11F8064", VA = "0x11F8064", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000310")]
	[Address(RVA = "0x11F806C", Offset = "0x11F806C", VA = "0x11F806C")]
	public SetVoiceOverTypeActionAsset()
	{
	}
}
[Token(Token = "0x20001FB")]
public static class SetVoiceOverTypeActionAssetExts
{
	[Token(Token = "0x6000311")]
	[Address(RVA = "0x11F8074", Offset = "0x11F8074", VA = "0x11F8074")]
	public static SetVoiceOverTypeActionAsset GetUnityAsset(this SetVoiceOverTypeAction data)
	{
		return null;
	}
}
[Token(Token = "0x20001FC")]
public class SetupSpellResultActionAsset : AIActionAsset
{
	[Token(Token = "0x4000109")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SetupSpellResultAction Settings;

	[Token(Token = "0x170000C4")]
	public override AssetObject AssetObject
	{
		[Token(Token = "0x6000312")]
		[Address(RVA = "0x11F8D58", Offset = "0x11F8D58", VA = "0x11F8D58", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000313")]
	[Address(RVA = "0x11F8D60", Offset = "0x11F8D60", VA = "0x11F8D60")]
	public SetupSpellResultActionAsset()
	{
	}
}
[Token(Token = "0x20001FD")]
public static class SetupSpellResultActionAssetExts
{
	[Token(Token = "0x6000314")]
	[Address(RVA = "0x11F8D68", Offset = "0x11F8D68", VA = "0x11F8D68")]
	public static SetupSpellResultActionAsset GetUnityAsset(this SetupSpellResultAction data)
	{
		return null;
	}
}
[Token(Token = "0x20001FE")]
public class ShowOrHideSelectClassActionAsset : AIActionAsset
{
	[Token(Token = "0x400010A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ShowOrHideSelectClassAction Settings;

	[Token(Token = "0x170000C5")]
	public override AssetObject AssetObject
	{
		[Token(Token = "0x6000315")]
		[Address(RVA = "0x11F9500", Offset = "0x11F9500", VA = "0x11F9500", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000316")]
	[Address(RVA = "0x11F9508", Offset = "0x11F9508", VA = "0x11F9508")]
	public ShowOrHideSelectClassActionAsset()
	{
	}
}
[Token(Token = "0x20001FF")]
public static class ShowOrHideSelectClassActionAssetExts
{
	[Token(Token = "0x6000317")]
	[Address(RVA = "0x11F9510", Offset = "0x11F9510", VA = "0x11F9510")]
	public static ShowOrHideSelectClassActionAsset GetUnityAsset(this ShowOrHideSelectClassAction data)
	{
		return null;
	}
}
[Token(Token = "0x2000200")]
public class ShowOrHideSpellPickupAsset : AIActionAsset
{
	[Token(Token = "0x400010B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ShowOrHideSpellPickup Settings;

	[Token(Token = "0x170000C6")]
	public override AssetObject AssetObject
	{
		[Token(Token = "0x6000318")]
		[Address(RVA = "0x11F9598", Offset = "0x11F9598", VA = "0x11F9598", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000319")]
	[Address(RVA = "0x11F95A0", Offset = "0x11F95A0", VA = "0x11F95A0")]
	public ShowOrHideSpellPickupAsset()
	{
	}
}
[Token(Token = "0x2000201")]
public static class ShowOrHideSpellPickupAssetExts
{
	[Token(Token = "0x600031A")]
	[Address(RVA = "0x11F95A8", Offset = "0x11F95A8", VA = "0x11F95A8")]
	public static ShowOrHideSpellPickupAsset GetUnityAsset(this ShowOrHideSpellPickup data)
	{
		return null;
	}
}
[Token(Token = "0x2000202")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBC5BD0", Offset = "0xBC5BD0")]
public class SimulationConfigAsset : AssetBase
{
	[Token(Token = "0x400010C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SimulationConfig Settings;

	[Token(Token = "0x170000C7")]
	public override AssetObject AssetObject
	{
		[Token(Token = "0x600031B")]
		[Address(RVA = "0x11F9984", Offset = "0x11F9984", VA = "0x11F9984", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000C8")]
	public static SimulationConfigAsset Instance
	{
		[Token(Token = "0x600031C")]
		[Address(RVA = "0x11F998C", Offset = "0x11F998C", VA = "0x11F998C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600031D")]
	[Address(RVA = "0x11F9A0C", Offset = "0x11F9A0C", VA = "0x11F9A0C", Slot = "6")]
	public override void Loaded()
	{
	}

	[Token(Token = "0x600031E")]
	[Address(RVA = "0x11F9A48", Offset = "0x11F9A48", VA = "0x11F9A48", Slot = "9")]
	public override void Reset()
	{
	}

	[Token(Token = "0x600031F")]
	[Address(RVA = "0x11F9C10", Offset = "0x11F9C10", VA = "0x11F9C10")]
	public SimulationConfigAsset()
	{
	}
}
[Token(Token = "0x2000203")]
public static class SimulationConfigAssetExts
{
	[Token(Token = "0x6000320")]
	[Address(RVA = "0x11F9C18", Offset = "0x11F9C18", VA = "0x11F9C18")]
	public static SimulationConfigAsset GetUnityAsset(this SimulationConfig data)
	{
		return null;
	}
}
[Token(Token = "0x2000204")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBC5C34", Offset = "0xBC5C34")]
public class SingleSpawnFactoryXzPlaneRotationAsset : SpawnFactoryAsset
{
	[Token(Token = "0x400010D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SingleSpawnFactoryXzPlaneRotation Settings;

	[Token(Token = "0x170000C9")]
	public override AssetObject AssetObject
	{
		[Token(Token = "0x6000321")]
		[Address(RVA = "0x11FA060", Offset = "0x11FA060", VA = "0x11FA060", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000322")]
	[Address(RVA = "0x11FA068", Offset = "0x11FA068", VA = "0x11FA068", Slot = "9")]
	public override void Reset()
	{
	}

	[Token(Token = "0x6000323")]
	[Address(RVA = "0x11FA0D4", Offset = "0x11FA0D4", VA = "0x11FA0D4")]
	public SingleSpawnFactoryXzPlaneRotationAsset()
	{
	}
}
[Token(Token = "0x2000205")]
public static class SingleSpawnFactoryXzPlaneRotationAssetExts
{
	[Token(Token = "0x6000324")]
	[Address(RVA = "0x11FA0E4", Offset = "0x11FA0E4", VA = "0x11FA0E4")]
	public static SingleSpawnFactoryXzPlaneRotationAsset GetUnityAsset(this SingleSpawnFactoryXzPlaneRotation data)
	{
		return null;
	}
}
[Token(Token = "0x2000206")]
public abstract class SpawnFactoryAsset : AssetBase
{
	[Token(Token = "0x6000325")]
	[Address(RVA = "0x11FA0DC", Offset = "0x11FA0DC", VA = "0x11FA0DC")]
	protected SpawnFactoryAsset()
	{
	}
}
[Token(Token = "0x2000207")]
public static class SpawnFactoryAssetExts
{
	[Token(Token = "0x6000326")]
	[Address(RVA = "0x1200A74", Offset = "0x1200A74", VA = "0x1200A74")]
	public static SpawnFactoryAsset GetUnityAsset(this SpawnFactory data)
	{
		return null;
	}
}
[Token(Token = "0x2000208")]
public static class SpellSetupAssetExts
{
	[Token(Token = "0x6000327")]
	[Address(RVA = "0x1145898", Offset = "0x1145898", VA = "0x1145898")]
	public static SpellSetupAsset GetUnityAsset(this SpellSetup data)
	{
		return null;
	}
}
[Token(Token = "0x2000209")]
public class StartMatchActionAsset : AIActionAsset
{
	[Token(Token = "0x400010E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public StartMatchAction Settings;

	[Token(Token = "0x170000CA")]
	public override AssetObject AssetObject
	{
		[Token(Token = "0x6000328")]
		[Address(RVA = "0x114A3DC", Offset = "0x114A3DC", VA = "0x114A3DC", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000329")]
	[Address(RVA = "0x114A3E4", Offset = "0x114A3E4", VA = "0x114A3E4")]
	public StartMatchActionAsset()
	{
	}
}
[Token(Token = "0x200020A")]
public static class StartMatchActionAssetExts
{
	[Token(Token = "0x600032A")]
	[Address(RVA = "0x114A3EC", Offset = "0x114A3EC", VA = "0x114A3EC")]
	public static StartMatchActionAsset GetUnityAsset(this StartMatchAction data)
	{
		return null;
	}
}
[Token(Token = "0x200020B")]
public class StartOrStopGameModeEffectTimerActionAsset : AIActionAsset
{
	[Token(Token = "0x400010F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public StartOrStopGameModeEffectTimerAction Settings;

	[Token(Token = "0x170000CB")]
	public override AssetObject AssetObject
	{
		[Token(Token = "0x600032B")]
		[Address(RVA = "0x114A484", Offset = "0x114A484", VA = "0x114A484", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600032C")]
	[Address(RVA = "0x114A48C", Offset = "0x114A48C", VA = "0x114A48C")]
	public StartOrStopGameModeEffectTimerActionAsset()
	{
	}
}
[Token(Token = "0x200020C")]
public static class StartOrStopGameModeEffectTimerActionAssetExts
{
	[Token(Token = "0x600032D")]
	[Address(RVA = "0x114A494", Offset = "0x114A494", VA = "0x114A494")]
	public static StartOrStopGameModeEffectTimerActionAsset GetUnityAsset(this StartOrStopGameModeEffectTimerAction data)
	{
		return null;
	}
}
[Token(Token = "0x200020D")]
public class SubBlackboardFPValueActionAsset : AIActionAsset
{
	[Token(Token = "0x4000110")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SubBlackboardFPValueAction Settings;

	[Token(Token = "0x170000CC")]
	public override AssetObject AssetObject
	{
		[Token(Token = "0x600032E")]
		[Address(RVA = "0x114C734", Offset = "0x114C734", VA = "0x114C734", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600032F")]
	[Address(RVA = "0x114C73C", Offset = "0x114C73C", VA = "0x114C73C")]
	public SubBlackboardFPValueActionAsset()
	{
	}
}
[Token(Token = "0x200020E")]
public static class SubBlackboardFPValueActionAssetExts
{
	[Token(Token = "0x6000330")]
	[Address(RVA = "0x114C744", Offset = "0x114C744", VA = "0x114C744")]
	public static SubBlackboardFPValueActionAsset GetUnityAsset(this SubBlackboardFPValueAction data)
	{
		return null;
	}
}
[Token(Token = "0x200020F")]
public class SubBlackboardIntValueActionAsset : AIActionAsset
{
	[Token(Token = "0x4000111")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SubBlackboardIntValueAction Settings;

	[Token(Token = "0x170000CD")]
	public override AssetObject AssetObject
	{
		[Token(Token = "0x6000331")]
		[Address(RVA = "0x114C7CC", Offset = "0x114C7CC", VA = "0x114C7CC", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000332")]
	[Address(RVA = "0x114C7D4", Offset = "0x114C7D4", VA = "0x114C7D4")]
	public SubBlackboardIntValueActionAsset()
	{
	}
}
[Token(Token = "0x2000210")]
public static class SubBlackboardIntValueActionAssetExts
{
	[Token(Token = "0x6000333")]
	[Address(RVA = "0x114C7DC", Offset = "0x114C7DC", VA = "0x114C7DC")]
	public static SubBlackboardIntValueActionAsset GetUnityAsset(this SubBlackboardIntValueAction data)
	{
		return null;
	}
}
[Token(Token = "0x2000211")]
public class SwitchSideActionAsset : AIActionAsset
{
	[Token(Token = "0x4000112")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SwitchSideAction Settings;

	[Token(Token = "0x170000CE")]
	public override AssetObject AssetObject
	{
		[Token(Token = "0x6000334")]
		[Address(RVA = "0x114F774", Offset = "0x114F774", VA = "0x114F774", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000335")]
	[Address(RVA = "0x114F77C", Offset = "0x114F77C", VA = "0x114F77C")]
	public SwitchSideActionAsset()
	{
	}
}
[Token(Token = "0x2000212")]
public static class SwitchSideActionAssetExts
{
	[Token(Token = "0x6000336")]
	[Address(RVA = "0x114F784", Offset = "0x114F784", VA = "0x114F784")]
	public static SwitchSideActionAsset GetUnityAsset(this SwitchSideAction data)
	{
		return null;
	}
}
[Token(Token = "0x2000213")]
public class SwitchToLevelActionAsset : AIActionAsset
{
	[Token(Token = "0x4000113")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SwitchToLevelAction Settings;

	[Token(Token = "0x170000CF")]
	public override AssetObject AssetObject
	{
		[Token(Token = "0x6000337")]
		[Address(RVA = "0x114F80C", Offset = "0x114F80C", VA = "0x114F80C", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000338")]
	[Address(RVA = "0x114F814", Offset = "0x114F814", VA = "0x114F814")]
	public SwitchToLevelActionAsset()
	{
	}
}
[Token(Token = "0x2000214")]
public static class SwitchToLevelActionAssetExts
{
	[Token(Token = "0x6000339")]
	[Address(RVA = "0x114F81C", Offset = "0x114F81C", VA = "0x114F81C")]
	public static SwitchToLevelActionAsset GetUnityAsset(this SwitchToLevelAction data)
	{
		return null;
	}
}
[Token(Token = "0x2000215")]
public class TaskDestroyActionAsset : AIActionAsset
{
	[Token(Token = "0x4000114")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TaskDestroyAction Settings;

	[Token(Token = "0x170000D0")]
	public override AssetObject AssetObject
	{
		[Token(Token = "0x600033A")]
		[Address(RVA = "0x1152ACC", Offset = "0x1152ACC", VA = "0x1152ACC", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600033B")]
	[Address(RVA = "0x1152AD4", Offset = "0x1152AD4", VA = "0x1152AD4")]
	public TaskDestroyActionAsset()
	{
	}
}
[Token(Token = "0x2000216")]
public static class TaskDestroyActionAssetExts
{
	[Token(Token = "0x600033C")]
	[Address(RVA = "0x1152ADC", Offset = "0x1152ADC", VA = "0x1152ADC")]
	public static TaskDestroyActionAsset GetUnityAsset(this TaskDestroyAction data)
	{
		return null;
	}
}
[Token(Token = "0x2000217")]
public class TeamIsLeadingDecisionAsset : HFSMDecisionAsset
{
	[Token(Token = "0x4000115")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TeamIsLeadingDecision Settings;

	[Token(Token = "0x170000D1")]
	public override AssetObject AssetObject
	{
		[Token(Token = "0x600033D")]
		[Address(RVA = "0x1154844", Offset = "0x1154844", VA = "0x1154844", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600033E")]
	[Address(RVA = "0x115484C", Offset = "0x115484C", VA = "0x115484C")]
	public TeamIsLeadingDecisionAsset()
	{
	}
}
[Token(Token = "0x2000218")]
public static class TeamIsLeadingDecisionAssetExts
{
	[Token(Token = "0x600033F")]
	[Address(RVA = "0x1154854", Offset = "0x1154854", VA = "0x1154854")]
	public static TeamIsLeadingDecisionAsset GetUnityAsset(this TeamIsLeadingDecision data)
	{
		return null;
	}
}
[Token(Token = "0x2000219")]
public class TeleportActionAsset : AIActionAsset
{
	[Token(Token = "0x4000116")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TeleportAction Settings;

	[Token(Token = "0x170000D2")]
	public override AssetObject AssetObject
	{
		[Token(Token = "0x6000340")]
		[Address(RVA = "0x1154B34", Offset = "0x1154B34", VA = "0x1154B34", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000341")]
	[Address(RVA = "0x1154B3C", Offset = "0x1154B3C", VA = "0x1154B3C")]
	public TeleportActionAsset()
	{
	}
}
[Token(Token = "0x200021A")]
public static class TeleportActionAssetExts
{
	[Token(Token = "0x6000342")]
	[Address(RVA = "0x1154B44", Offset = "0x1154B44", VA = "0x1154B44")]
	public static TeleportActionAsset GetUnityAsset(this TeleportAction data)
	{
		return null;
	}
}
[Token(Token = "0x200021B")]
public class TimerDecisionAsset : HFSMDecisionAsset
{
	[Token(Token = "0x4000117")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TimerDecision Settings;

	[Token(Token = "0x170000D3")]
	public override AssetObject AssetObject
	{
		[Token(Token = "0x6000343")]
		[Address(RVA = "0x1157E24", Offset = "0x1157E24", VA = "0x1157E24", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000344")]
	[Address(RVA = "0x1157E2C", Offset = "0x1157E2C", VA = "0x1157E2C")]
	public TimerDecisionAsset()
	{
	}
}
[Token(Token = "0x200021C")]
public static class TimerDecisionAssetExts
{
	[Token(Token = "0x6000345")]
	[Address(RVA = "0x1157E34", Offset = "0x1157E34", VA = "0x1157E34")]
	public static TimerDecisionAsset GetUnityAsset(this TimerDecision data)
	{
		return null;
	}
}
[Token(Token = "0x200021D")]
public class TrueDecisionAsset : HFSMDecisionAsset
{
	[Token(Token = "0x4000118")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TrueDecision Settings;

	[Token(Token = "0x170000D4")]
	public override AssetObject AssetObject
	{
		[Token(Token = "0x6000346")]
		[Address(RVA = "0x1159C9C", Offset = "0x1159C9C", VA = "0x1159C9C", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000347")]
	[Address(RVA = "0x1159CA4", Offset = "0x1159CA4", VA = "0x1159CA4")]
	public TrueDecisionAsset()
	{
	}
}
[Token(Token = "0x200021E")]
public static class TrueDecisionAssetExts
{
	[Token(Token = "0x6000348")]
	[Address(RVA = "0x1159CAC", Offset = "0x1159CAC", VA = "0x1159CAC")]
	public static TrueDecisionAsset GetUnityAsset(this TrueDecision data)
	{
		return null;
	}
}
[Token(Token = "0x200021F")]
public class UpdateGameModeEffectActionAsset : AIActionAsset
{
	[Token(Token = "0x4000119")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UpdateGameModeEffectAction Settings;

	[Token(Token = "0x170000D5")]
	public override AssetObject AssetObject
	{
		[Token(Token = "0x6000349")]
		[Address(RVA = "0x112E130", Offset = "0x112E130", VA = "0x112E130", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600034A")]
	[Address(RVA = "0x112E138", Offset = "0x112E138", VA = "0x112E138")]
	public UpdateGameModeEffectActionAsset()
	{
	}
}
[Token(Token = "0x2000220")]
public static class UpdateGameModeEffectActionAssetExts
{
	[Token(Token = "0x600034B")]
	[Address(RVA = "0x112E140", Offset = "0x112E140", VA = "0x112E140")]
	public static UpdateGameModeEffectActionAsset GetUnityAsset(this UpdateGameModeEffectAction data)
	{
		return null;
	}
}
[Token(Token = "0x2000221")]
public class UpdateLastCastFramesAsset : AIActionAsset
{
	[Token(Token = "0x400011A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UpdateLastCastFrames Settings;

	[Token(Token = "0x170000D6")]
	public override AssetObject AssetObject
	{
		[Token(Token = "0x600034C")]
		[Address(RVA = "0x112E1C8", Offset = "0x112E1C8", VA = "0x112E1C8", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600034D")]
	[Address(RVA = "0x112E1D0", Offset = "0x112E1D0", VA = "0x112E1D0")]
	public UpdateLastCastFramesAsset()
	{
	}
}
[Token(Token = "0x2000222")]
public static class UpdateLastCastFramesAssetExts
{
	[Token(Token = "0x600034E")]
	[Address(RVA = "0x112E1D8", Offset = "0x112E1D8", VA = "0x112E1D8")]
	public static UpdateLastCastFramesAsset GetUnityAsset(this UpdateLastCastFrames data)
	{
		return null;
	}
}
[Token(Token = "0x2000223")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBC5D78", Offset = "0xBC5D78")]
public class WaitLeafAsset : BTLeafAsset
{
	[Token(Token = "0x400011B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public WaitLeaf Settings;

	[Token(Token = "0x170000D7")]
	public override AssetObject AssetObject
	{
		[Token(Token = "0x600034F")]
		[Address(RVA = "0x1139154", Offset = "0x1139154", VA = "0x1139154", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000350")]
	[Address(RVA = "0x113915C", Offset = "0x113915C", VA = "0x113915C", Slot = "9")]
	public override void Reset()
	{
	}

	[Token(Token = "0x6000351")]
	[Address(RVA = "0x11391C8", Offset = "0x11391C8", VA = "0x11391C8")]
	public WaitLeafAsset()
	{
	}
}
[Token(Token = "0x2000224")]
public static class WaitLeafAssetExts
{
	[Token(Token = "0x6000352")]
	[Address(RVA = "0x11391D0", Offset = "0x11391D0", VA = "0x11391D0")]
	public static WaitLeafAsset GetUnityAsset(this WaitLeaf data)
	{
		return null;
	}
}
[Token(Token = "0x2000225")]
public static class WandPartBarrelAssetExts
{
	[Token(Token = "0x6000353")]
	[Address(RVA = "0x1139CA4", Offset = "0x1139CA4", VA = "0x1139CA4")]
	public static WandPartBarrelAsset GetUnityAsset(this WandPartBarrel data)
	{
		return null;
	}
}
[Token(Token = "0x2000226")]
public static class WandPartChamberAssetExts
{
	[Token(Token = "0x6000354")]
	[Address(RVA = "0x1139EC0", Offset = "0x1139EC0", VA = "0x1139EC0")]
	public static WandPartChamberAsset GetUnityAsset(this WandPartChamber data)
	{
		return null;
	}
}
[Token(Token = "0x2000227")]
public static class WandPartHandleAssetExts
{
	[Token(Token = "0x6000355")]
	[Address(RVA = "0x1139F48", Offset = "0x1139F48", VA = "0x1139F48")]
	public static WandPartHandleAsset GetUnityAsset(this WandPartHandle data)
	{
		return null;
	}
}
[Token(Token = "0x2000228")]
public class WithinRangeDecisionAsset : HFSMDecisionAsset
{
	[Token(Token = "0x400011C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public WithinRangeDecision Settings;

	[Token(Token = "0x170000D8")]
	public override AssetObject AssetObject
	{
		[Token(Token = "0x6000356")]
		[Address(RVA = "0x113C53C", Offset = "0x113C53C", VA = "0x113C53C", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000357")]
	[Address(RVA = "0x113C544", Offset = "0x113C544", VA = "0x113C544")]
	public WithinRangeDecisionAsset()
	{
	}
}
[Token(Token = "0x2000229")]
public static class WithinRangeDecisionAssetExts
{
	[Token(Token = "0x6000358")]
	[Address(RVA = "0x113C54C", Offset = "0x113C54C", VA = "0x113C54C")]
	public static WithinRangeDecisionAsset GetUnityAsset(this WithinRangeDecision data)
	{
		return null;
	}
}
[Token(Token = "0x200022A")]
public class QuantumAOT
{
	[Token(Token = "0x400011D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public List<DeterministicTickInputSet> DeterministicTickInputSet;

	[Token(Token = "0x400011E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<FPVector2> FPVector2;

	[Token(Token = "0x400011F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<AIBlackboardEntry> AIBlackboardEntry;

	[Token(Token = "0x4000120")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<AIBlackboardInitializer.AIBlackboardInitialValueEntry> AIBlackboardInitialValueEntry;

	[Token(Token = "0x4000121")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<AssetRefAIAction> AssetRefAIAction;

	[Token(Token = "0x4000122")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<AssetRefBTNode> AssetRefBTNode;

	[Token(Token = "0x4000123")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public List<AssetRefBTService> AssetRefBTService;

	[Token(Token = "0x4000124")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public List<AssetRefGOAPTask> AssetRefGOAPTask;

	[Token(Token = "0x4000125")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public List<AssetRefHFSMDecision> AssetRefHFSMDecision;

	[Token(Token = "0x4000126")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public List<AssetRefHFSMState> AssetRefHFSMState;

	[Token(Token = "0x4000127")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public List<AssetRefNavMesh> AssetRefNavMesh;

	[Token(Token = "0x4000128")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public List<FrameBase.EntitiesConfig.ComponentBufferConfig> ComponentBufferConfig;

	[Token(Token = "0x4000129")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public List<MapStaticCollider2D> MapStaticCollider2D;

	[Token(Token = "0x400012A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public List<MapStaticCollider3D> MapStaticCollider3D;

	[Token(Token = "0x400012B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public List<byte> Byte;

	[Token(Token = "0x400012C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public List<int> Int32;

	[Token(Token = "0x6000359")]
	[Address(RVA = "0x111E1A0", Offset = "0x111E1A0", VA = "0x111E1A0")]
	[Preserve]
	private static void PreserveReflectedMethods()
	{
	}

	[Token(Token = "0x600035A")]
	[Address(RVA = "0x111E1BC", Offset = "0x111E1BC", VA = "0x111E1BC")]
	public QuantumAOT()
	{
	}
}
[Token(Token = "0x200022B")]
public abstract class AssetBase : ScriptableObject
{
	[Token(Token = "0x400012D")]
	public const string DefaultAssetObjectPropertyPath = "Settings";

	[Token(Token = "0x400012E")]
	public const char NestedPathSeparator = '|';

	[Token(Token = "0x170000D9")]
	public abstract AssetObject AssetObject
	{
		[Token(Token = "0x600035B")]
		get;
	}

	[Token(Token = "0x170000DA")]
	public bool IsTransient
	{
		[Token(Token = "0x600035C")]
		[Address(RVA = "0x1329878", Offset = "0x1329878", VA = "0x1329878")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000DB")]
	public virtual string AssetObjectPropertyPath
	{
		[Token(Token = "0x600035D")]
		[Address(RVA = "0x13298D0", Offset = "0x13298D0", VA = "0x13298D0", Slot = "5")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600035E")]
	[Address(RVA = "0x1329914", Offset = "0x1329914", VA = "0x1329914", Slot = "6")]
	public virtual void Loaded()
	{
	}

	[Token(Token = "0x600035F")]
	[Address(RVA = "0x1329920", Offset = "0x1329920", VA = "0x1329920", Slot = "7")]
	public virtual void PrepareAsset()
	{
	}

	[Token(Token = "0x6000360")]
	[Address(RVA = "0x1329924", Offset = "0x1329924", VA = "0x1329924", Slot = "8")]
	public virtual void Disposed()
	{
	}

	[Token(Token = "0x6000361")]
	[Address(RVA = "0x1323708", Offset = "0x1323708", VA = "0x1323708", Slot = "9")]
	public virtual void Reset()
	{
	}

	[Token(Token = "0x6000362")]
	[Address(RVA = "0x1329928", Offset = "0x1329928", VA = "0x1329928", Slot = "10")]
	public virtual void Awake()
	{
	}

	[Token(Token = "0x6000363")]
	[Address(RVA = "0x132992C", Offset = "0x132992C", VA = "0x132992C")]
	private string GetNameForNesting()
	{
		return null;
	}

	[Token(Token = "0x6000364")]
	[Address(RVA = "0x13299C0", Offset = "0x13299C0", VA = "0x13299C0")]
	public static bool GetMainAssetPath(string path, out string mainAssetPath)
	{
		return default(bool);
	}

	[Token(Token = "0x6000365")]
	[Address(RVA = "0x132360C", Offset = "0x132360C", VA = "0x132360C")]
	protected AssetBase()
	{
	}
}
[Token(Token = "0x200022C")]
public interface IQuantumPrefabBakedAsset
{
	[Token(Token = "0x6000366")]
	void Import(QuantumPrefabAsset prefab, IQuantumPrefabNestedAsset asset);
}
[Token(Token = "0x200022D")]
public interface IQuantumPrefabNestedAsset
{
	[Token(Token = "0x170000DC")]
	Component Parent
	{
		[Token(Token = "0x6000367")]
		get;
	}
}
[Token(Token = "0x200022E")]
public interface IQuantumPrefabNestedAsset<THostingComponent> : IQuantumPrefabNestedAsset where THostingComponent : Component
{
}
[Token(Token = "0x200022F")]
public static class UnityDB
{
	[Token(Token = "0x2000230")]
	private sealed class Context : IDisposable
	{
		[Token(Token = "0x4000130")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public QuantumUnityNativeAllocator Allocator;

		[Token(Token = "0x4000131")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<AssetResource> AssetResources;

		[Token(Token = "0x4000132")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AssetResourceContainer ResourceContainer;

		[Token(Token = "0x4000133")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UnityResourceLoader ResourceLoader;

		[Token(Token = "0x4000134")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public ResourceManagerDynamic ResourceManager;

		[Token(Token = "0x6000378")]
		[Address(RVA = "0x1067ADC", Offset = "0x1067ADC", VA = "0x1067ADC")]
		public Context()
		{
		}

		[Token(Token = "0x6000379")]
		[Address(RVA = "0x1067BF0", Offset = "0x1067BF0", VA = "0x1067BF0")]
		public ResourceManagerDynamic CreateResourceManager()
		{
			return null;
		}

		[Token(Token = "0x600037A")]
		[Address(RVA = "0x1067C68", Offset = "0x1067C68", VA = "0x1067C68", Slot = "4")]
		public void Dispose()
		{
		}
	}

	[Token(Token = "0x400012F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Context _context;

	[Token(Token = "0x170000DD")]
	public static IEnumerable<AssetResource> AssetResources
	{
		[Token(Token = "0x6000369")]
		[Address(RVA = "0x1129E50", Offset = "0x1129E50", VA = "0x1129E50")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000DE")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xBE5668", Offset = "0xBE5668")]
	public static ResourceManagerDynamic ResourceManager
	{
		[Token(Token = "0x600036A")]
		[Address(RVA = "0x1129F90", Offset = "0x1129F90", VA = "0x1129F90")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000DF")]
	public static ResourceManagerDynamic DefaultResourceManager
	{
		[Token(Token = "0x600036B")]
		[Address(RVA = "0x1129FE8", Offset = "0x1129FE8", VA = "0x1129FE8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000368")]
	[Address(RVA = "0x1129E4C", Offset = "0x1129E4C", VA = "0x1129E4C")]
	static UnityDB()
	{
	}

	[Token(Token = "0x600036C")]
	[Address(RVA = "0x112A050", Offset = "0x112A050", VA = "0x112A050")]
	public static List<QTuple<AssetRef, string>> CollectAddressableAssets()
	{
		return null;
	}

	[Token(Token = "0x600036D")]
	[Address(RVA = "0x112A0F0", Offset = "0x112A0F0", VA = "0x112A0F0")]
	public static void CollectAddressableAssets(List<QTuple<AssetRef, string>> entries)
	{
	}

	[Token(Token = "0x600036E")]
	[Address(RVA = "0x112A460", Offset = "0x112A460", VA = "0x112A460")]
	public static void Dispose()
	{
	}

	[Token(Token = "0x600036F")]
	public static T FindAsset<T>(AssetObject asset) where T : AssetBase
	{
		return null;
	}

	[Token(Token = "0x6000370")]
	public static T FindAsset<T>(string path) where T : AssetBase
	{
		return null;
	}

	[Token(Token = "0x6000371")]
	public static T FindAsset<T>(AssetGuid guid) where T : AssetBase
	{
		return null;
	}

	[Token(Token = "0x6000372")]
	[Address(RVA = "0x112A5DC", Offset = "0x112A5DC", VA = "0x112A5DC")]
	public static AssetBase FindAsset(string path)
	{
		return null;
	}

	[Token(Token = "0x6000373")]
	[Address(RVA = "0x112A708", Offset = "0x112A708", VA = "0x112A708")]
	public static AssetBase FindAsset(AssetGuid guid)
	{
		return null;
	}

	[Token(Token = "0x6000374")]
	[Address(RVA = "0x112A7CC", Offset = "0x112A7CC", VA = "0x112A7CC")]
	public static AssetGuid GetAssetGuid(string path)
	{
		return default(AssetGuid);
	}

	[Token(Token = "0x6000375")]
	[Address(RVA = "0x112A83C", Offset = "0x112A83C", VA = "0x112A83C")]
	public static void Update()
	{
	}

	[Token(Token = "0x6000376")]
	[Address(RVA = "0x1129EB8", Offset = "0x1129EB8", VA = "0x1129EB8")]
	private static Context GetOrCreateContext()
	{
		return null;
	}

	[Token(Token = "0x6000377")]
	[Address(RVA = "0x112A9C8", Offset = "0x112A9C8", VA = "0x112A9C8")]
	private static AssetResourceContainer LoadContainer()
	{
		return null;
	}
}
[Token(Token = "0x2000231")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBC5E0C", Offset = "0xBC5E0C")]
public class BinaryDataAsset : AssetBase, ISerializationCallbackReceiver
{
	[Token(Token = "0x4000135")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public BinaryData Settings;

	[Token(Token = "0x4000136")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextAsset SourceTextAsset;

	[Token(Token = "0x170000E0")]
	public override AssetObject AssetObject
	{
		[Token(Token = "0x600037B")]
		[Address(RVA = "0x1330670", Offset = "0x1330670", VA = "0x1330670", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600037C")]
	[Address(RVA = "0x1330678", Offset = "0x1330678", VA = "0x1330678", Slot = "7")]
	public override void PrepareAsset()
	{
	}

	[Token(Token = "0x600037D")]
	[Address(RVA = "0x1330718", Offset = "0x1330718", VA = "0x1330718", Slot = "9")]
	public override void Reset()
	{
	}

	[Token(Token = "0x600037E")]
	[Address(RVA = "0x133077C", Offset = "0x133077C", VA = "0x133077C")]
	public void SetData(byte[] data, bool compressed)
	{
	}

	[Token(Token = "0x600037F")]
	[Address(RVA = "0x13307D4", Offset = "0x13307D4", VA = "0x13307D4")]
	public void Store(Stream stream)
	{
	}

	[Token(Token = "0x6000380")]
	[Address(RVA = "0x1330838", Offset = "0x1330838", VA = "0x1330838", Slot = "11")]
	private void UnityEngine.ISerializationCallbackReceiver.OnBeforeSerialize()
	{
	}

	[Token(Token = "0x6000381")]
	[Address(RVA = "0x1330968", Offset = "0x1330968", VA = "0x1330968", Slot = "12")]
	private void UnityEngine.ISerializationCallbackReceiver.OnAfterDeserialize()
	{
	}

	[Token(Token = "0x6000382")]
	[Address(RVA = "0x133096C", Offset = "0x133096C", VA = "0x133096C")]
	public BinaryDataAsset()
	{
	}
}
[Token(Token = "0x2000232")]
public static class RawAssetAssetExt
{
	[Token(Token = "0x6000383")]
	[Address(RVA = "0x1253F2C", Offset = "0x1253F2C", VA = "0x1253F2C")]
	public static BinaryDataAsset GetUnityAsset(this BinaryData data)
	{
		return null;
	}
}
[Token(Token = "0x2000233")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBC5E60", Offset = "0xBC5E60")]
public class CharacterController2DConfigAsset : AssetBase
{
	[Token(Token = "0x4000137")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public CharacterController2DConfig Settings;

	[Token(Token = "0x170000E1")]
	public override AssetObject AssetObject
	{
		[Token(Token = "0x6000384")]
		[Address(RVA = "0x133B7CC", Offset = "0x133B7CC", VA = "0x133B7CC", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000385")]
	[Address(RVA = "0x133B7D4", Offset = "0x133B7D4", VA = "0x133B7D4", Slot = "9")]
	public override void Reset()
	{
	}

	[Token(Token = "0x6000386")]
	[Address(RVA = "0x133B838", Offset = "0x133B838", VA = "0x133B838", Slot = "6")]
	public override void Loaded()
	{
	}

	[Token(Token = "0x6000387")]
	[Address(RVA = "0x133B86C", Offset = "0x133B86C", VA = "0x133B86C")]
	public CharacterController2DConfigAsset()
	{
	}
}
[Token(Token = "0x2000234")]
public static class CharacterController3DConfigAssetExt
{
	[Token(Token = "0x6000388")]
	[Address(RVA = "0x133B91C", Offset = "0x133B91C", VA = "0x133B91C")]
	public static CharacterController2DConfigAsset GetUnityAsset(this CharacterController2DConfig data)
	{
		return null;
	}

	[Token(Token = "0x6000389")]
	[Address(RVA = "0x133B9A4", Offset = "0x133B9A4", VA = "0x133B9A4")]
	public static CharacterController3DConfigAsset GetUnityAsset(this CharacterController3DConfig data)
	{
		return null;
	}
}
[Token(Token = "0x2000235")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBC5EB4", Offset = "0xBC5EB4")]
public class CharacterController3DConfigAsset : AssetBase
{
	[Token(Token = "0x4000138")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public CharacterController3DConfig Settings;

	[Token(Token = "0x170000E2")]
	public override AssetObject AssetObject
	{
		[Token(Token = "0x600038A")]
		[Address(RVA = "0x133B874", Offset = "0x133B874", VA = "0x133B874", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600038B")]
	[Address(RVA = "0x133B87C", Offset = "0x133B87C", VA = "0x133B87C", Slot = "9")]
	public override void Reset()
	{
	}

	[Token(Token = "0x600038C")]
	[Address(RVA = "0x133B8E0", Offset = "0x133B8E0", VA = "0x133B8E0", Slot = "6")]
	public override void Loaded()
	{
	}

	[Token(Token = "0x600038D")]
	[Address(RVA = "0x133B914", Offset = "0x133B914", VA = "0x133B914")]
	public CharacterController3DConfigAsset()
	{
	}
}
[Token(Token = "0x2000236")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xBC5EF8", Offset = "0xBC5EF8")]
public abstract class EntityComponentBase : MonoBehaviour
{
	[Token(Token = "0x4000139")]
	private const string ExpectedTypeNamePrefix = "EntityComponent";

	[Token(Token = "0x170000E3")]
	public abstract Type PrototypeType
	{
		[Token(Token = "0x600038E")]
		get;
	}

	[Token(Token = "0x170000E4")]
	public Type ComponentType
	{
		[Token(Token = "0x600038F")]
		[Address(RVA = "0x10453D8", Offset = "0x10453D8", VA = "0x10453D8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000390")]
	[Address(RVA = "0x10453F8", Offset = "0x10453F8", VA = "0x10453F8", Slot = "5")]
	public virtual void Refresh()
	{
	}

	[Token(Token = "0x6000391")]
	public abstract ComponentPrototype CreatePrototype(EntityPrototypeConverter converter);

	[Token(Token = "0x6000392")]
	[Address(RVA = "0x10453FC", Offset = "0x10453FC", VA = "0x10453FC")]
	public static Type UnityComponentTypeToQuantumPrototypeType(Type type)
	{
		return null;
	}

	[Token(Token = "0x6000393")]
	[Address(RVA = "0x10456D0", Offset = "0x10456D0", VA = "0x10456D0")]
	public static Type UnityComponentTypeToQuantumComponentType(Type type)
	{
		return null;
	}

	[Token(Token = "0x6000394")]
	[Address(RVA = "0x10456E8", Offset = "0x10456E8", VA = "0x10456E8")]
	protected EntityComponentBase()
	{
	}
}
[Token(Token = "0x2000237")]
public abstract class EntityComponentBase<TPrototype> : EntityComponentBase where TPrototype : ComponentPrototype, new()
{
	[Token(Token = "0x400013A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xBCC98C", Offset = "0xBCC98C")]
	public TPrototype Prototype;

	[Token(Token = "0x170000E5")]
	public override Type PrototypeType
	{
		[Token(Token = "0x6000395")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000E6")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xBE56A0", Offset = "0xBE56A0")]
	public TPrototype prototype
	{
		[Token(Token = "0x6000396")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000397")]
	public override ComponentPrototype CreatePrototype(EntityPrototypeConverter converter)
	{
		return null;
	}

	[Token(Token = "0x6000398")]
	protected EntityComponentBase()
	{
	}
}
[Token(Token = "0x2000238")]
public abstract class EntityComponentBase<TPrototype, TAdapter> : EntityComponentBase where TPrototype : ComponentPrototype, new() where TAdapter : PrototypeAdapter<TPrototype>, new()
{
	[Token(Token = "0x400013B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xBCC9C4", Offset = "0xBCC9C4")]
	public TAdapter Prototype;

	[Token(Token = "0x170000E7")]
	public override Type PrototypeType
	{
		[Token(Token = "0x6000399")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000E8")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xBE56D8", Offset = "0xBE56D8")]
	public TAdapter prototype
	{
		[Token(Token = "0x600039A")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600039B")]
	public override ComponentPrototype CreatePrototype(EntityPrototypeConverter converter)
	{
		return null;
	}

	[Token(Token = "0x600039C")]
	protected EntityComponentBase()
	{
	}
}
[Token(Token = "0x2000239")]
public class EntityPrototypeAsset : AssetBase, IQuantumPrefabNestedAsset<EntityPrototype>, IQuantumPrefabNestedAsset
{
	[Token(Token = "0x200023A")]
	private class Visitor : ComponentPrototypeVisitor
	{
		[Token(Token = "0x60003A4")]
		[Address(RVA = "0x102B9BC", Offset = "0x102B9BC", VA = "0x102B9BC", Slot = "22")]
		protected override void VisitFallback(ComponentPrototype prototype)
		{
		}

		[Token(Token = "0x60003A5")]
		[Address(RVA = "0x102BA48", Offset = "0x102BA48", VA = "0x102BA48")]
		public Visitor()
		{
		}
	}

	[Token(Token = "0x400013C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	protected static readonly List<ComponentPrototype> prototypeBuffer;

	[Token(Token = "0x400013D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static readonly List<EntityComponentBase> behaviourBuffer;

	[Token(Token = "0x400013E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static readonly Visitor cache;

	[Token(Token = "0x400013F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Quantum.EntityPrototype Settings;

	[Token(Token = "0x4000140")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public EntityPrototype Parent;

	[Token(Token = "0x170000E9")]
	public override AssetObject AssetObject
	{
		[Token(Token = "0x600039D")]
		[Address(RVA = "0x104B180", Offset = "0x104B180", VA = "0x104B180", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000EA")]
	private Component IQuantumPrefabNestedAsset.Parent
	{
		[Token(Token = "0x600039E")]
		[Address(RVA = "0x104B188", Offset = "0x104B188", VA = "0x104B188", Slot = "11")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600039F")]
	[Address(RVA = "0x104B190", Offset = "0x104B190", VA = "0x104B190", Slot = "6")]
	public override void Loaded()
	{
	}

	[Token(Token = "0x60003A0")]
	[Address(RVA = "0x104B198", Offset = "0x104B198", VA = "0x104B198", Slot = "7")]
	public override void PrepareAsset()
	{
	}

	[Token(Token = "0x60003A1")]
	[Address(RVA = "0x104B938", Offset = "0x104B938", VA = "0x104B938", Slot = "9")]
	public override void Reset()
	{
	}

	[Token(Token = "0x60003A2")]
	[Address(RVA = "0x104BA04", Offset = "0x104BA04", VA = "0x104BA04")]
	public EntityPrototypeAsset()
	{
	}
}
[Token(Token = "0x200023B")]
public static class EntityPrototypeAssetExts
{
	[Token(Token = "0x60003A6")]
	[Address(RVA = "0x104BB10", Offset = "0x104BB10", VA = "0x104BB10")]
	public static EntityPrototypeAsset GetUnityAsset(this Quantum.EntityPrototype data)
	{
		return null;
	}
}
[Token(Token = "0x200023C")]
internal class EntityPrototypeBakedAsset : EntityPrototypeAsset, IQuantumPrefabBakedAsset
{
	[Token(Token = "0x4000141")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public FlatEntityPrototypeContainer Container;

	[Token(Token = "0x60003A7")]
	[Address(RVA = "0x104BB98", Offset = "0x104BB98", VA = "0x104BB98", Slot = "6")]
	public override void Loaded()
	{
	}

	[Token(Token = "0x60003A8")]
	[Address(RVA = "0x104BBA4", Offset = "0x104BBA4", VA = "0x104BBA4", Slot = "7")]
	public override void PrepareAsset()
	{
	}

	[Token(Token = "0x60003A9")]
	[Address(RVA = "0x104BD5C", Offset = "0x104BD5C", VA = "0x104BD5C", Slot = "12")]
	private void IQuantumPrefabBakedAsset.Import(QuantumPrefabAsset prefab, IQuantumPrefabNestedAsset asset)
	{
	}

	[Token(Token = "0x60003AA")]
	[Address(RVA = "0x104BE98", Offset = "0x104BE98", VA = "0x104BE98")]
	public EntityPrototypeBakedAsset()
	{
	}
}
[Token(Token = "0x200023D")]
public class EntityViewAsset : AssetBase, IQuantumPrefabNestedAsset<EntityView>, IQuantumPrefabNestedAsset
{
	[Token(Token = "0x4000142")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Quantum.EntityView Settings;

	[Token(Token = "0x4000143")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public EntityView Parent;

	[Token(Token = "0x170000EB")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xBE5710", Offset = "0xBE5710")]
	public EntityView Prefab
	{
		[Token(Token = "0x60003AB")]
		[Address(RVA = "0x104DD68", Offset = "0x104DD68", VA = "0x104DD68")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000EC")]
	public EntityView View
	{
		[Token(Token = "0x60003AC")]
		[Address(RVA = "0x104DD70", Offset = "0x104DD70", VA = "0x104DD70")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000ED")]
	public override AssetObject AssetObject
	{
		[Token(Token = "0x60003AD")]
		[Address(RVA = "0x104DD78", Offset = "0x104DD78", VA = "0x104DD78", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000EE")]
	private Component IQuantumPrefabNestedAsset.Parent
	{
		[Token(Token = "0x60003AE")]
		[Address(RVA = "0x104DD80", Offset = "0x104DD80", VA = "0x104DD80", Slot = "11")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000EF")]
	public virtual EntityViewAssetStatus ViewStatus
	{
		[Token(Token = "0x60003B0")]
		[Address(RVA = "0x104DDF4", Offset = "0x104DDF4", VA = "0x104DDF4", Slot = "12")]
		get
		{
			return default(EntityViewAssetStatus);
		}
	}

	[Token(Token = "0x60003AF")]
	[Address(RVA = "0x104DD88", Offset = "0x104DD88", VA = "0x104DD88", Slot = "9")]
	public override void Reset()
	{
	}

	[Token(Token = "0x60003B1")]
	[Address(RVA = "0x104DDFC", Offset = "0x104DDFC", VA = "0x104DDFC", Slot = "13")]
	public virtual void LoadViewPrefab(bool async = false)
	{
	}

	[Token(Token = "0x60003B2")]
	[Address(RVA = "0x104DE70", Offset = "0x104DE70", VA = "0x104DE70")]
	public EntityViewAsset()
	{
	}
}
[Token(Token = "0x200023E")]
public enum EntityViewAssetStatus
{
	[Token(Token = "0x4000145")]
	NotLoaded,
	[Token(Token = "0x4000146")]
	Loading,
	[Token(Token = "0x4000147")]
	Loaded,
	[Token(Token = "0x4000148")]
	Error
}
[Token(Token = "0x200023F")]
internal class EntityViewBakedAsset : EntityViewAsset, IQuantumPrefabBakedAsset, QuantumPrefabAsset.IListener
{
	[Token(Token = "0x4000149")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public QuantumPrefabAsset PrefabAsset;

	[Token(Token = "0x400014A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private EntityViewAssetStatus _status;

	[Token(Token = "0x170000F0")]
	public override EntityViewAssetStatus ViewStatus
	{
		[Token(Token = "0x60003B3")]
		[Address(RVA = "0x104DE78", Offset = "0x104DE78", VA = "0x104DE78", Slot = "12")]
		get
		{
			return default(EntityViewAssetStatus);
		}
	}

	[Token(Token = "0x60003B4")]
	[Address(RVA = "0x104DE80", Offset = "0x104DE80", VA = "0x104DE80", Slot = "13")]
	public override void LoadViewPrefab(bool async)
	{
	}

	[Token(Token = "0x60003B5")]
	[Address(RVA = "0x104DEB0", Offset = "0x104DEB0", VA = "0x104DEB0", Slot = "6")]
	public override void Loaded()
	{
	}

	[Token(Token = "0x60003B6")]
	[Address(RVA = "0x104DEB8", Offset = "0x104DEB8", VA = "0x104DEB8", Slot = "7")]
	public override void PrepareAsset()
	{
	}

	[Token(Token = "0x60003B7")]
	[Address(RVA = "0x104DEC0", Offset = "0x104DEC0", VA = "0x104DEC0", Slot = "15")]
	private void QuantumPrefabAsset.IListener.Error(QuantumPrefabAsset source, Exception error)
	{
	}

	[Token(Token = "0x60003B8")]
	[Address(RVA = "0x104DF64", Offset = "0x104DF64", VA = "0x104DF64", Slot = "16")]
	private void QuantumPrefabAsset.IListener.Loaded(QuantumPrefabAsset source, GameObject prefab)
	{
	}

	[Token(Token = "0x60003B9")]
	[Address(RVA = "0x104DFD4", Offset = "0x104DFD4", VA = "0x104DFD4", Slot = "14")]
	private void IQuantumPrefabBakedAsset.Import(QuantumPrefabAsset prefab, IQuantumPrefabNestedAsset asset)
	{
	}

	[Token(Token = "0x60003BA")]
	[Address(RVA = "0x104E070", Offset = "0x104E070", VA = "0x104E070")]
	public EntityViewBakedAsset()
	{
	}
}
[Token(Token = "0x2000240")]
public interface IQuantumPrefabNestedAssetHost
{
	[Token(Token = "0x170000F1")]
	Type NestedAssetType
	{
		[Token(Token = "0x60003BB")]
		get;
	}

	[Token(Token = "0x170000F2")]
	Type SplitAssetType
	{
		[Token(Token = "0x60003BC")]
		get;
	}
}
[Token(Token = "0x2000241")]
public static class MapAssetExts
{
	[Token(Token = "0x60003BD")]
	[Address(RVA = "0xF8D5D8", Offset = "0xF8D5D8", VA = "0xF8D5D8")]
	public static MapAsset GetUnityAsset(this Map data)
	{
		return null;
	}
}
[Token(Token = "0x2000242")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBC5F78", Offset = "0xBC5F78")]
public class NavMeshAgentConfigAsset : AssetBase
{
	[Token(Token = "0x400014B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public NavMeshAgentConfig Settings;

	[Token(Token = "0x170000F3")]
	public override AssetObject AssetObject
	{
		[Token(Token = "0x60003BE")]
		[Address(RVA = "0x101AC88", Offset = "0x101AC88", VA = "0x101AC88", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60003BF")]
	[Address(RVA = "0x101AC90", Offset = "0x101AC90", VA = "0x101AC90", Slot = "9")]
	public override void Reset()
	{
	}

	[Token(Token = "0x60003C0")]
	[Address(RVA = "0x101ACFC", Offset = "0x101ACFC", VA = "0x101ACFC")]
	public NavMeshAgentConfigAsset()
	{
	}
}
[Token(Token = "0x2000243")]
public static class NavMeshAgentConfigAssetExts
{
	[Token(Token = "0x60003C1")]
	[Address(RVA = "0x101AD04", Offset = "0x101AD04", VA = "0x101AD04")]
	public static NavMeshAgentConfigAsset GetUnityAsset(this NavMeshAgentConfig data)
	{
		return null;
	}
}
[Token(Token = "0x2000244")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBC5FCC", Offset = "0xBC5FCC")]
public class NavMeshAsset : AssetBase
{
	[Token(Token = "0x400014C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public NavMesh Settings;

	[Token(Token = "0x170000F4")]
	public override AssetObject AssetObject
	{
		[Token(Token = "0x60003C2")]
		[Address(RVA = "0x101AD8C", Offset = "0x101AD8C", VA = "0x101AD8C", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60003C3")]
	[Address(RVA = "0x101AD94", Offset = "0x101AD94", VA = "0x101AD94", Slot = "9")]
	public override void Reset()
	{
	}

	[Token(Token = "0x60003C4")]
	[Address(RVA = "0x101AE00", Offset = "0x101AE00", VA = "0x101AE00")]
	public NavMeshAsset()
	{
	}
}
[Token(Token = "0x2000245")]
public static class NavMeshAssetExts
{
	[Token(Token = "0x60003C5")]
	[Address(RVA = "0x101AE08", Offset = "0x101AE08", VA = "0x101AE08")]
	public static NavMeshAsset GetUnityAsset(this NavMesh data)
	{
		return null;
	}
}
[Token(Token = "0x2000246")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBC6020", Offset = "0xBC6020")]
public class PhysicsMaterialAsset : AssetBase
{
	[Token(Token = "0x400014D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PhysicsMaterial Settings;

	[Token(Token = "0x170000F5")]
	public override AssetObject AssetObject
	{
		[Token(Token = "0x60003C6")]
		[Address(RVA = "0xFD26A4", Offset = "0xFD26A4", VA = "0xFD26A4", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60003C7")]
	[Address(RVA = "0xFD26AC", Offset = "0xFD26AC", VA = "0xFD26AC", Slot = "9")]
	public override void Reset()
	{
	}

	[Token(Token = "0x60003C8")]
	[Address(RVA = "0xFD2718", Offset = "0xFD2718", VA = "0xFD2718")]
	public PhysicsMaterialAsset()
	{
	}
}
[Token(Token = "0x2000247")]
public static class PhysicsMaterialAssetExt
{
	[Token(Token = "0x60003C9")]
	[Address(RVA = "0xFD2720", Offset = "0xFD2720", VA = "0xFD2720")]
	public static PhysicsMaterialAsset GetUnityAsset(this PhysicsMaterial data)
	{
		return null;
	}
}
[Token(Token = "0x2000248")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBC6074", Offset = "0xBC6074")]
public class PolygonColliderAsset : AssetBase
{
	[Token(Token = "0x400014E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PolygonCollider Settings;

	[Token(Token = "0x170000F6")]
	public override AssetObject AssetObject
	{
		[Token(Token = "0x60003CA")]
		[Address(RVA = "0x111765C", Offset = "0x111765C", VA = "0x111765C", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60003CB")]
	[Address(RVA = "0x1117664", Offset = "0x1117664", VA = "0x1117664", Slot = "9")]
	public override void Reset()
	{
	}

	[Token(Token = "0x60003CC")]
	[Address(RVA = "0x11176D0", Offset = "0x11176D0", VA = "0x11176D0")]
	public PolygonColliderAsset()
	{
	}
}
[Token(Token = "0x2000249")]
public static class PolygonColliderAssetExt
{
	[Token(Token = "0x60003CD")]
	[Address(RVA = "0x11176D8", Offset = "0x11176D8", VA = "0x11176D8")]
	public static PolygonColliderAsset GetUnityAsset(this PolygonCollider data)
	{
		return null;
	}
}
[Token(Token = "0x200024A")]
public abstract class QuantumPrefabAsset : ScriptableObject
{
	[Token(Token = "0x200024B")]
	public interface IListener
	{
		[Token(Token = "0x60003D6")]
		void Error(QuantumPrefabAsset source, Exception error);

		[Token(Token = "0x60003D7")]
		void Loaded(QuantumPrefabAsset source, GameObject prefab);
	}

	[Token(Token = "0x200024C")]
	protected struct LoadContext
	{
		[Token(Token = "0x4000151")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IListener Listener;

		[Token(Token = "0x4000152")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public QuantumPrefabAsset PrefabAsset;

		[Token(Token = "0x4000153")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool PreferAsync;

		[Token(Token = "0x60003D8")]
		[Address(RVA = "0x105BA24", Offset = "0x105BA24", VA = "0x105BA24")]
		public void Error(Exception error)
		{
		}

		[Token(Token = "0x60003D9")]
		[Address(RVA = "0x105BA4C", Offset = "0x105BA4C", VA = "0x105BA4C")]
		public void Loaded(GameObject prefab)
		{
		}
	}

	[Token(Token = "0x400014F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string PrefabGuid;

	[Token(Token = "0x4000150")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject _loadedInstance;

	[Token(Token = "0x60003CE")]
	[Address(RVA = "0x124A028", Offset = "0x124A028", VA = "0x124A028")]
	public void Load(IListener listener, bool async = false)
	{
	}

	[Token(Token = "0x60003CF")]
	[Address(RVA = "0x124A178", Offset = "0x124A178", VA = "0x124A178")]
	public void UnloadInstance()
	{
	}

	[Token(Token = "0x60003D0")]
	protected abstract void Load(in LoadContext context);

	[Token(Token = "0x60003D1")]
	protected abstract void Unload();

	[Token(Token = "0x60003D2")]
	private T EnsureComponent<T>(GameObject go) where T : Component
	{
		return null;
	}

	[Token(Token = "0x60003D3")]
	[Address(RVA = "0x124A228", Offset = "0x124A228", VA = "0x124A228")]
	private void LoadFinished(in LoadContext context, GameObject prefab)
	{
	}

	[Token(Token = "0x60003D4")]
	[Address(RVA = "0x124A548", Offset = "0x124A548", VA = "0x124A548")]
	private void LoadFinished(in LoadContext context, Exception error)
	{
	}

	[Token(Token = "0x60003D5")]
	[Address(RVA = "0x124A6CC", Offset = "0x124A6CC", VA = "0x124A6CC")]
	protected QuantumPrefabAsset()
	{
	}
}
[Token(Token = "0x200024D")]
public class QuantumPrefabAsset_Addressable : QuantumPrefabAsset
{
	[Token(Token = "0x200024E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBC60C8", Offset = "0xBC60C8")]
	private sealed class <>c__DisplayClass1_0
	{
		[Token(Token = "0x4000155")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public LoadContext c;

		[Token(Token = "0x60003DD")]
		[Address(RVA = "0x105BA74", Offset = "0x105BA74", VA = "0x105BA74")]
		public <>c__DisplayClass1_0()
		{
		}

		[Token(Token = "0x60003DE")]
		[Address(RVA = "0x105BA7C", Offset = "0x105BA7C", VA = "0x105BA7C")]
		internal void <Load>b__0(AsyncOperationHandle<GameObject> _op)
		{
		}
	}

	[Token(Token = "0x4000154")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AssetReferenceGameObject Address;

	[Token(Token = "0x60003DA")]
	[Address(RVA = "0x124A6D4", Offset = "0x124A6D4", VA = "0x124A6D4", Slot = "4")]
	protected override void Load(in LoadContext context)
	{
	}

	[Token(Token = "0x60003DB")]
	[Address(RVA = "0x124A880", Offset = "0x124A880", VA = "0x124A880", Slot = "5")]
	protected override void Unload()
	{
	}

	[Token(Token = "0x60003DC")]
	[Address(RVA = "0x124A8A4", Offset = "0x124A8A4", VA = "0x124A8A4")]
	public QuantumPrefabAsset_Addressable()
	{
	}
}
[Token(Token = "0x200024F")]
public class QuantumPrefabAsset_AssetBundle : QuantumPrefabAsset
{
	[Token(Token = "0x2000250")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBC60D8", Offset = "0xBC60D8")]
	private sealed class <>c__DisplayClass4_0
	{
		[Token(Token = "0x400015A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public LoadContext cc;

		[Token(Token = "0x400015B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public QuantumPrefabAsset_AssetBundle <>4__this;

		[Token(Token = "0x60003E4")]
		[Address(RVA = "0x105BAE4", Offset = "0x105BAE4", VA = "0x105BAE4")]
		public <>c__DisplayClass4_0()
		{
		}

		[Token(Token = "0x60003E5")]
		[Address(RVA = "0x105BAEC", Offset = "0x105BAEC", VA = "0x105BAEC")]
		internal void <Load>b__1(AsyncOperation op)
		{
		}
	}

	[Token(Token = "0x4000156")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string AssetBundle;

	[Token(Token = "0x4000157")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string AssetName;

	[Token(Token = "0x4000158")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private object _state;

	[Token(Token = "0x4000159")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private AssetBundle _bundle;

	[Token(Token = "0x60003DF")]
	[Address(RVA = "0x124A8AC", Offset = "0x124A8AC", VA = "0x124A8AC", Slot = "4")]
	protected override void Load(in LoadContext context)
	{
	}

	[Token(Token = "0x60003E0")]
	[Address(RVA = "0x124AC00", Offset = "0x124AC00", VA = "0x124AC00", Slot = "5")]
	protected override void Unload()
	{
	}

	[Token(Token = "0x60003E1")]
	[Address(RVA = "0x124ACA0", Offset = "0x124ACA0", VA = "0x124ACA0")]
	private void UnloadPrefab(GameObject prefab)
	{
	}

	[Token(Token = "0x60003E2")]
	[Address(RVA = "0x124AD04", Offset = "0x124AD04", VA = "0x124AD04")]
	public QuantumPrefabAsset_AssetBundle()
	{
	}

	[Token(Token = "0x60003E3")]
	[Address(RVA = "0x124AD0C", Offset = "0x124AD0C", VA = "0x124AD0C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDC268", Offset = "0xBDC268")]
	private bool <Load>b__4_0(AssetBundle ab)
	{
		return default(bool);
	}
}
[Token(Token = "0x2000251")]
public class QuantumPrefabAsset_Resource : QuantumPrefabAsset
{
	[Token(Token = "0x2000252")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBC60E8", Offset = "0xBC60E8")]
	private sealed class <>c__DisplayClass2_0
	{
		[Token(Token = "0x400015E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public QuantumPrefabAsset_Resource <>4__this;

		[Token(Token = "0x400015F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LoadContext cc;

		[Token(Token = "0x60003EA")]
		[Address(RVA = "0x105BC48", Offset = "0x105BC48", VA = "0x105BC48")]
		public <>c__DisplayClass2_0()
		{
		}

		[Token(Token = "0x60003EB")]
		[Address(RVA = "0x105BC50", Offset = "0x105BC50", VA = "0x105BC50")]
		internal void <Load>b__0(AsyncOperation op)
		{
		}
	}

	[Token(Token = "0x400015C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string ResourcePath;

	[Token(Token = "0x400015D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private object _state;

	[Token(Token = "0x60003E6")]
	[Address(RVA = "0x124AD44", Offset = "0x124AD44", VA = "0x124AD44", Slot = "4")]
	protected override void Load(in LoadContext context)
	{
	}

	[Token(Token = "0x60003E7")]
	[Address(RVA = "0x124AF1C", Offset = "0x124AF1C", VA = "0x124AF1C", Slot = "5")]
	protected override void Unload()
	{
	}

	[Token(Token = "0x60003E8")]
	[Address(RVA = "0x124AFC0", Offset = "0x124AFC0", VA = "0x124AFC0")]
	private void UnloadPrefab(GameObject asset)
	{
	}

	[Token(Token = "0x60003E9")]
	[Address(RVA = "0x124AFCC", Offset = "0x124AFCC", VA = "0x124AFCC")]
	public QuantumPrefabAsset_Resource()
	{
	}
}
[Token(Token = "0x2000253")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBC60F8", Offset = "0xBC60F8")]
public class TerrainColliderAsset : AssetBase
{
	[Token(Token = "0x4000160")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TerrainCollider Settings;

	[Token(Token = "0x170000F7")]
	public override AssetObject AssetObject
	{
		[Token(Token = "0x60003EC")]
		[Address(RVA = "0x1155A58", Offset = "0x1155A58", VA = "0x1155A58", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60003ED")]
	[Address(RVA = "0x1155A60", Offset = "0x1155A60", VA = "0x1155A60", Slot = "9")]
	public override void Reset()
	{
	}

	[Token(Token = "0x60003EE")]
	[Address(RVA = "0x1155ACC", Offset = "0x1155ACC", VA = "0x1155ACC")]
	public TerrainColliderAsset()
	{
	}
}
[Token(Token = "0x2000254")]
public static class TerrainColliderAssetExt
{
	[Token(Token = "0x60003EF")]
	[Address(RVA = "0x1155AD4", Offset = "0x1155AD4", VA = "0x1155AD4")]
	public static TerrainColliderAsset GetUnityAsset(this TerrainCollider data)
	{
		return null;
	}
}
[Token(Token = "0x2000255")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBC614C", Offset = "0xBC614C")]
public class DeterministicSessionConfigAsset : ScriptableObject
{
	[Token(Token = "0x4000161")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public DeterministicSessionConfig Config;

	[Token(Token = "0x170000F8")]
	public static DeterministicSessionConfigAsset Instance
	{
		[Token(Token = "0x60003F0")]
		[Address(RVA = "0x103E73C", Offset = "0x103E73C", VA = "0x103E73C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60003F1")]
	[Address(RVA = "0x103E798", Offset = "0x103E798", VA = "0x103E798")]
	public DeterministicSessionConfigAsset()
	{
	}
}
[Token(Token = "0x2000256")]
public static class SimulationConfigAssetHelper
{
	[Token(Token = "0x2000257")]
	public enum PhysicsType
	{
		[Token(Token = "0x4000163")]
		Physics3D,
		[Token(Token = "0x4000164")]
		Physics2D
	}

	[Token(Token = "0x60003F2")]
	[Address(RVA = "0x11F9BAC", Offset = "0x11F9BAC", VA = "0x11F9BAC")]
	public static void ImportLayersFromUnity(this SimulationConfigAsset data, PhysicsType physicsType = PhysicsType.Physics3D)
	{
	}

	[Token(Token = "0x60003F3")]
	[Address(RVA = "0x11F9CA0", Offset = "0x11F9CA0", VA = "0x11F9CA0")]
	public static string[] GetUnityLayerNameArray()
	{
		return null;
	}

	[Token(Token = "0x60003F4")]
	[Address(RVA = "0x11F9E30", Offset = "0x11F9E30", VA = "0x11F9E30")]
	public static int[] GetUnityLayerMatrix(PhysicsType physicsType)
	{
		return null;
	}
}
[Token(Token = "0x2000258")]
public interface IQuantumUnityDispatcher
{
}
[Token(Token = "0x2000259")]
public static class IQuantumUnityDispatcherExtensions
{
	[Token(Token = "0x4000165")]
	public const uint CustomFlag_IsUnityObject = 256u;

	[Token(Token = "0x4000166")]
	public const uint CustomFlag_OnlyIfActiveAndEnabled = 512u;

	[Token(Token = "0x60003F5")]
	[Address(RVA = "0xFB3DB8", Offset = "0xFB3DB8", VA = "0xFB3DB8")]
	internal static DispatcherBase.ListenerStatus GetUnityListenerStatus(this IQuantumUnityDispatcher _, object listener, uint flags)
	{
		return default(DispatcherBase.ListenerStatus);
	}

	[Token(Token = "0x60003F6")]
	internal static DispatcherSubscription Subscribe<TDispatcher, T>(this TDispatcher dispatcher, UnityEngine.Object listener, DispatchableHandler<T> handler, bool once = false, bool onlyIfActiveAndEnabled = false, [System.Runtime.InteropServices.Optional] DispatchableFilter filter) where TDispatcher : DispatcherBase, IQuantumUnityDispatcher where T : IDispatchable
	{
		return default(DispatcherSubscription);
	}
}
[Token(Token = "0x200025A")]
public class QuantumCallback : QuantumUnityStaticDispatcherAdapter<QuantumUnityCallbackDispatcher, CallbackBase>
{
	[Token(Token = "0x60003F7")]
	[Address(RVA = "0x111EC44", Offset = "0x111EC44", VA = "0x111EC44")]
	private QuantumCallback()
	{
	}

	[Token(Token = "0x60003F8")]
	[Address(RVA = "0x111ECD8", Offset = "0x111ECD8", VA = "0x111ECD8")]
	[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0xBDC2B8", Offset = "0xBDC2B8")]
	private static void SetupDefaultHandlers()
	{
	}
}
[Token(Token = "0x200025B")]
public class QuantumUnityCallbackDispatcher : CallbackDispatcher, IQuantumUnityDispatcher
{
	[Token(Token = "0x60003F9")]
	[Address(RVA = "0x1253540", Offset = "0x1253540", VA = "0x1253540")]
	public QuantumUnityCallbackDispatcher()
	{
	}

	[Token(Token = "0x60003FA")]
	[Address(RVA = "0x12536C8", Offset = "0x12536C8", VA = "0x12536C8", Slot = "4")]
	protected override ListenerStatus GetListenerStatus(object listener, uint flags)
	{
		return default(ListenerStatus);
	}

	[Token(Token = "0x60003FB")]
	[Address(RVA = "0x125356C", Offset = "0x125356C", VA = "0x125356C")]
	private static Dictionary<Type, int> GetCallbackTypes()
	{
		return null;
	}
}
[Token(Token = "0x200025C")]
public static class QuantumCallbackHandler_DebugDraw
{
	[Token(Token = "0x200025D")]
	private class CompositeDisposable : IDisposable
	{
		[Token(Token = "0x4000167")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private List<IDisposable> _disposables;

		[Token(Token = "0x60003FD")]
		[Address(RVA = "0x1056250", Offset = "0x1056250", VA = "0x1056250")]
		public void Add(IDisposable disposable)
		{
		}

		[Token(Token = "0x60003FE")]
		[Address(RVA = "0x10562B4", Offset = "0x10562B4", VA = "0x10562B4", Slot = "4")]
		public void Dispose()
		{
		}

		[Token(Token = "0x60003FF")]
		[Address(RVA = "0x105658C", Offset = "0x105658C", VA = "0x105658C")]
		public CompositeDisposable()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x200025E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBC61B0", Offset = "0xBC61B0")]
	private sealed class <>c
	{
		[Token(Token = "0x4000168")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4000169")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static DispatchableHandler<CallbackGameStarted> <>9__0_0;

		[Token(Token = "0x400016A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static DispatchableHandler<CallbackGameDestroyed> <>9__0_1;

		[Token(Token = "0x400016B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static DispatchableHandler<CallbackSimulateFinished> <>9__0_2;

		[Token(Token = "0x400016C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static DispatchableHandler<CallbackUpdateView> <>9__0_3;

		[Token(Token = "0x6000401")]
		[Address(RVA = "0x10560D8", Offset = "0x10560D8", VA = "0x10560D8")]
		public <>c()
		{
		}

		[Token(Token = "0x6000402")]
		[Address(RVA = "0x10560E0", Offset = "0x10560E0", VA = "0x10560E0")]
		internal void <Initialize>b__0_0(CallbackGameStarted c)
		{
		}

		[Token(Token = "0x6000403")]
		[Address(RVA = "0x105613C", Offset = "0x105613C", VA = "0x105613C")]
		internal void <Initialize>b__0_1(CallbackGameDestroyed c)
		{
		}

		[Token(Token = "0x6000404")]
		[Address(RVA = "0x1056198", Offset = "0x1056198", VA = "0x1056198")]
		internal void <Initialize>b__0_2(CallbackSimulateFinished c)
		{
		}

		[Token(Token = "0x6000405")]
		[Address(RVA = "0x10561F4", Offset = "0x10561F4", VA = "0x10561F4")]
		internal void <Initialize>b__0_3(CallbackUpdateView c)
		{
		}
	}

	[Token(Token = "0x60003FC")]
	[Address(RVA = "0x111ECF8", Offset = "0x111ECF8", VA = "0x111ECF8")]
	public static IDisposable Initialize()
	{
		return null;
	}
}
[Token(Token = "0x200025F")]
public static class QuantumCallbackHandler_FrameDiffer
{
	[Serializable]
	[Token(Token = "0x2000260")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBC61C0", Offset = "0xBC61C0")]
	private sealed class <>c
	{
		[Token(Token = "0x400016D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x400016E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static DispatchableHandler<CallbackChecksumErrorFrameDump> <>9__0_0;

		[Token(Token = "0x6000408")]
		[Address(RVA = "0x1056664", Offset = "0x1056664", VA = "0x1056664")]
		public <>c()
		{
		}

		[Token(Token = "0x6000409")]
		[Address(RVA = "0x105666C", Offset = "0x105666C", VA = "0x105666C")]
		internal void <Initialize>b__0_0(CallbackChecksumErrorFrameDump c)
		{
		}
	}

	[Token(Token = "0x6000406")]
	[Address(RVA = "0x111F24C", Offset = "0x111F24C", VA = "0x111F24C")]
	public static IDisposable Initialize()
	{
		return null;
	}
}
[Token(Token = "0x2000261")]
public static class QuantumCallbackHandler_LegacyQuantumCallback
{
	[Token(Token = "0x2000262")]
	private class CompositeDisposabe : IDisposable
	{
		[Token(Token = "0x400016F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private List<IDisposable> _disposables;

		[Token(Token = "0x600040B")]
		[Address(RVA = "0x1057DCC", Offset = "0x1057DCC", VA = "0x1057DCC")]
		public void Add(IDisposable disposable)
		{
		}

		[Token(Token = "0x600040C")]
		[Address(RVA = "0x1057E30", Offset = "0x1057E30", VA = "0x1057E30", Slot = "4")]
		public void Dispose()
		{
		}

		[Token(Token = "0x600040D")]
		[Address(RVA = "0x1058108", Offset = "0x1058108", VA = "0x1058108")]
		public CompositeDisposabe()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000263")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBC61D0", Offset = "0xBC61D0")]
	private sealed class <>c
	{
		[Token(Token = "0x4000170")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4000171")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static DispatchableHandler<CallbackChecksumError> <>9__0_0;

		[Token(Token = "0x4000172")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static DispatchableHandler<CallbackGameDestroyed> <>9__0_1;

		[Token(Token = "0x4000173")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static DispatchableHandler<CallbackGameStarted> <>9__0_2;

		[Token(Token = "0x4000174")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static DispatchableHandler<CallbackGameResynced> <>9__0_3;

		[Token(Token = "0x4000175")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static DispatchableHandler<CallbackSimulateFinished> <>9__0_4;

		[Token(Token = "0x4000176")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public static DispatchableHandler<CallbackUpdateView> <>9__0_5;

		[Token(Token = "0x4000177")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public static DispatchableHandler<CallbackUnitySceneLoadBegin> <>9__0_6;

		[Token(Token = "0x4000178")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public static DispatchableHandler<CallbackUnitySceneLoadDone> <>9__0_7;

		[Token(Token = "0x4000179")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public static DispatchableHandler<CallbackUnitySceneUnloadBegin> <>9__0_8;

		[Token(Token = "0x400017A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public static DispatchableHandler<CallbackUnitySceneUnloadDone> <>9__0_9;

		[Token(Token = "0x600040F")]
		[Address(RVA = "0x1056928", Offset = "0x1056928", VA = "0x1056928")]
		public <>c()
		{
		}

		[Token(Token = "0x6000410")]
		[Address(RVA = "0x1056930", Offset = "0x1056930", VA = "0x1056930")]
		internal void <Initialize>b__0_0(CallbackChecksumError c)
		{
		}

		[Token(Token = "0x6000411")]
		[Address(RVA = "0x1056B68", Offset = "0x1056B68", VA = "0x1056B68")]
		internal void <Initialize>b__0_1(CallbackGameDestroyed c)
		{
		}

		[Token(Token = "0x6000412")]
		[Address(RVA = "0x1056D5C", Offset = "0x1056D5C", VA = "0x1056D5C")]
		internal void <Initialize>b__0_2(CallbackGameStarted c)
		{
		}

		[Token(Token = "0x6000413")]
		[Address(RVA = "0x1056F68", Offset = "0x1056F68", VA = "0x1056F68")]
		internal void <Initialize>b__0_3(CallbackGameResynced c)
		{
		}

		[Token(Token = "0x6000414")]
		[Address(RVA = "0x1057174", Offset = "0x1057174", VA = "0x1057174")]
		internal void <Initialize>b__0_4(CallbackSimulateFinished c)
		{
		}

		[Token(Token = "0x6000415")]
		[Address(RVA = "0x1057388", Offset = "0x1057388", VA = "0x1057388")]
		internal void <Initialize>b__0_5(CallbackUpdateView c)
		{
		}

		[Token(Token = "0x6000416")]
		[Address(RVA = "0x1057594", Offset = "0x1057594", VA = "0x1057594")]
		internal void <Initialize>b__0_6(CallbackUnitySceneLoadBegin c)
		{
		}

		[Token(Token = "0x6000417")]
		[Address(RVA = "0x10577A0", Offset = "0x10577A0", VA = "0x10577A0")]
		internal void <Initialize>b__0_7(CallbackUnitySceneLoadDone c)
		{
		}

		[Token(Token = "0x6000418")]
		[Address(RVA = "0x10579AC", Offset = "0x10579AC", VA = "0x10579AC")]
		internal void <Initialize>b__0_8(CallbackUnitySceneUnloadBegin c)
		{
		}

		[Token(Token = "0x6000419")]
		[Address(RVA = "0x1057BBC", Offset = "0x1057BBC", VA = "0x1057BBC")]
		internal void <Initialize>b__0_9(CallbackUnitySceneUnloadDone c)
		{
		}
	}

	[Token(Token = "0x600040A")]
	[Address(RVA = "0x111F3B0", Offset = "0x111F3B0", VA = "0x111F3B0")]
	public static IDisposable Initialize()
	{
		return null;
	}
}
[Token(Token = "0x2000264")]
public class QuantumCallbackHandler_StartRecording
{
	[Token(Token = "0x2000265")]
	private class CompositeDisposable : IDisposable
	{
		[Token(Token = "0x400017B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private List<IDisposable> _disposables;

		[Token(Token = "0x600041C")]
		[Address(RVA = "0x10584C8", Offset = "0x10584C8", VA = "0x10584C8")]
		public void Add(IDisposable disposable)
		{
		}

		[Token(Token = "0x600041D")]
		[Address(RVA = "0x105852C", Offset = "0x105852C", VA = "0x105852C", Slot = "4")]
		public void Dispose()
		{
		}

		[Token(Token = "0x600041E")]
		[Address(RVA = "0x1058804", Offset = "0x1058804", VA = "0x1058804")]
		public CompositeDisposable()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000266")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBC61E0", Offset = "0xBC61E0")]
	private sealed class <>c
	{
		[Token(Token = "0x400017C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x400017D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static DispatchableHandler<CallbackGameStarted> <>9__0_0;

		[Token(Token = "0x400017E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static DispatchableHandler<CallbackGameResynced> <>9__0_1;

		[Token(Token = "0x6000420")]
		[Address(RVA = "0x10581E0", Offset = "0x10581E0", VA = "0x10581E0")]
		public <>c()
		{
		}

		[Token(Token = "0x6000421")]
		[Address(RVA = "0x10581E8", Offset = "0x10581E8", VA = "0x10581E8")]
		internal void <Initialize>b__0_0(CallbackGameStarted c)
		{
		}

		[Token(Token = "0x6000422")]
		[Address(RVA = "0x1058368", Offset = "0x1058368", VA = "0x1058368")]
		internal void <Initialize>b__0_1(CallbackGameResynced c)
		{
		}
	}

	[Token(Token = "0x600041A")]
	[Address(RVA = "0x111FF34", Offset = "0x111FF34", VA = "0x111FF34")]
	public static IDisposable Initialize()
	{
		return null;
	}

	[Token(Token = "0x600041B")]
	[Address(RVA = "0x11203BC", Offset = "0x11203BC", VA = "0x11203BC")]
	public QuantumCallbackHandler_StartRecording()
	{
	}
}
[Token(Token = "0x2000267")]
public class QuantumCallbackHandler_UnityCallbacks : IDisposable
{
	[Token(Token = "0x2000268")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBC61F0", Offset = "0xBC61F0")]
	private sealed class <>c__DisplayClass8_0
	{
		[Token(Token = "0x4000186")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public QuantumCallbackHandler_UnityCallbacks callbacksHost;

		[Token(Token = "0x600042C")]
		[Address(RVA = "0x1058B84", Offset = "0x1058B84", VA = "0x1058B84")]
		public <>c__DisplayClass8_0()
		{
		}

		[Token(Token = "0x600042D")]
		[Address(RVA = "0x1058B8C", Offset = "0x1058B8C", VA = "0x1058B8C")]
		internal void <Initialize>b__1(CallbackGameDestroyed cc)
		{
		}

		[Token(Token = "0x600042E")]
		[Address(RVA = "0x1058BA8", Offset = "0x1058BA8", VA = "0x1058BA8")]
		internal void <Initialize>b__2(CallbackUpdateView cc)
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000269")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBC6200", Offset = "0xBC6200")]
	private sealed class <>c
	{
		[Token(Token = "0x4000187")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4000188")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static DispatchableHandler<CallbackGameStarted> <>9__8_0;

		[Token(Token = "0x6000430")]
		[Address(RVA = "0x10588DC", Offset = "0x10588DC", VA = "0x10588DC")]
		public <>c()
		{
		}

		[Token(Token = "0x6000431")]
		[Address(RVA = "0x10588E4", Offset = "0x10588E4", VA = "0x10588E4")]
		internal void <Initialize>b__8_0(CallbackGameStarted c)
		{
		}
	}

	[Token(Token = "0x200026A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBC6210", Offset = "0xBC6210")]
	private sealed class <SwitchScene>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000189")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400018A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400018B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string previousSceneName;

		[Token(Token = "0x400018C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string newSceneName;

		[Token(Token = "0x400018D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool unloadFirst;

		[Token(Token = "0x400018E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public QuantumCallbackHandler_UnityCallbacks <>4__this;

		[Token(Token = "0x400018F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private LoadSceneMode <loadSceneMode>5__2;

		[Token(Token = "0x170000F9")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000436")]
			[Address(RVA = "0x105940C", Offset = "0x105940C", VA = "0x105940C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000FA")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000438")]
			[Address(RVA = "0x1059454", Offset = "0x1059454", VA = "0x1059454", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000432")]
		[Address(RVA = "0x1058E9C", Offset = "0x1058E9C", VA = "0x1058E9C")]
		[DebuggerHidden]
		public <SwitchScene>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x6000433")]
		[Address(RVA = "0x1058EC8", Offset = "0x1058EC8", VA = "0x1058EC8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000434")]
		[Address(RVA = "0x1058F34", Offset = "0x1058F34", VA = "0x1058F34", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000435")]
		[Address(RVA = "0x1058F10", Offset = "0x1058F10", VA = "0x1058F10")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x6000437")]
		[Address(RVA = "0x1059414", Offset = "0x1059414", VA = "0x1059414", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200026B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBC6220", Offset = "0xBC6220")]
	private sealed class <LoadScene>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000190")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000191")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000192")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public QuantumCallbackHandler_UnityCallbacks <>4__this;

		[Token(Token = "0x4000193")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string sceneName;

		[Token(Token = "0x170000FB")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600043D")]
			[Address(RVA = "0x1058E4C", Offset = "0x1058E4C", VA = "0x1058E4C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000FC")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600043F")]
			[Address(RVA = "0x1058E94", Offset = "0x1058E94", VA = "0x1058E94", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000439")]
		[Address(RVA = "0x1058BE8", Offset = "0x1058BE8", VA = "0x1058BE8")]
		[DebuggerHidden]
		public <LoadScene>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x600043A")]
		[Address(RVA = "0x1058C14", Offset = "0x1058C14", VA = "0x1058C14", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600043B")]
		[Address(RVA = "0x1058C70", Offset = "0x1058C70", VA = "0x1058C70", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600043C")]
		[Address(RVA = "0x1058C4C", Offset = "0x1058C4C", VA = "0x1058C4C")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x600043E")]
		[Address(RVA = "0x1058E54", Offset = "0x1058E54", VA = "0x1058E54", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200026C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBC6230", Offset = "0xBC6230")]
	private sealed class <UnloadScene>d__13 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000194")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000195")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000196")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public QuantumCallbackHandler_UnityCallbacks <>4__this;

		[Token(Token = "0x4000197")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string sceneName;

		[Token(Token = "0x170000FD")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000444")]
			[Address(RVA = "0x1059668", Offset = "0x1059668", VA = "0x1059668", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000FE")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000446")]
			[Address(RVA = "0x10596B0", Offset = "0x10596B0", VA = "0x10596B0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000440")]
		[Address(RVA = "0x105945C", Offset = "0x105945C", VA = "0x105945C")]
		[DebuggerHidden]
		public <UnloadScene>d__13(int <>1__state)
		{
		}

		[Token(Token = "0x6000441")]
		[Address(RVA = "0x1059488", Offset = "0x1059488", VA = "0x1059488", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000442")]
		[Address(RVA = "0x10594E4", Offset = "0x10594E4", VA = "0x10594E4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000443")]
		[Address(RVA = "0x10594C0", Offset = "0x10594C0", VA = "0x10594C0")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x6000445")]
		[Address(RVA = "0x1059670", Offset = "0x1059670", VA = "0x1059670", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400017F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Coroutine _coroutine;

	[Token(Token = "0x4000180")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Map _currentMap;

	[Token(Token = "0x4000181")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool _currentSceneNeedsCleanup;

	[Token(Token = "0x4000182")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly CallbackUnitySceneLoadBegin _callbackUnitySceneLoadBegin;

	[Token(Token = "0x4000183")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly CallbackUnitySceneLoadDone _callbackUnitySceneLoadDone;

	[Token(Token = "0x4000184")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly CallbackUnitySceneUnloadBegin _callbackUnitySceneUnloadBegin;

	[Token(Token = "0x4000185")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private readonly CallbackUnitySceneUnloadDone _callbackUnitySceneUnloadDone;

	[Token(Token = "0x6000423")]
	[Address(RVA = "0x11203C4", Offset = "0x11203C4", VA = "0x11203C4")]
	public QuantumCallbackHandler_UnityCallbacks(QuantumGame game)
	{
	}

	[Token(Token = "0x6000424")]
	[Address(RVA = "0x1120278", Offset = "0x1120278", VA = "0x1120278")]
	public static IDisposable Initialize()
	{
		return null;
	}

	[Token(Token = "0x6000425")]
	[Address(RVA = "0x11204CC", Offset = "0x11204CC", VA = "0x11204CC", Slot = "4")]
	public void Dispose()
	{
	}

	[Token(Token = "0x6000426")]
	private static void PublishCallback<T>(T callback, string sceneName) where T : CallbackBase, ICallbackUnityScene
	{
	}

	[Token(Token = "0x6000427")]
	[Address(RVA = "0x11206D4", Offset = "0x11206D4", VA = "0x11206D4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xBDC2C8", Offset = "0xBDC2C8")]
	private IEnumerator SwitchScene(string previousSceneName, string newSceneName, bool unloadFirst)
	{
		return null;
	}

	[Token(Token = "0x6000428")]
	[Address(RVA = "0x1120768", Offset = "0x1120768", VA = "0x1120768")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xBDC328", Offset = "0xBDC328")]
	private IEnumerator LoadScene(string sceneName)
	{
		return null;
	}

	[Token(Token = "0x6000429")]
	[Address(RVA = "0x112065C", Offset = "0x112065C", VA = "0x112065C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xBDC388", Offset = "0xBDC388")]
	private IEnumerator UnloadScene(string sceneName)
	{
		return null;
	}

	[Token(Token = "0x600042A")]
	[Address(RVA = "0x11207E0", Offset = "0x11207E0", VA = "0x11207E0")]
	private void UpdateLoading(QuantumGame game)
	{
	}

	[Token(Token = "0x600042B")]
	[Address(RVA = "0x11209F0", Offset = "0x11209F0", VA = "0x11209F0")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xBDC3E8", Offset = "0xBDC3E8")]
	private static void VerboseLog(string msg)
	{
	}
}
[Token(Token = "0x200026D")]
public class QuantumEvent : QuantumUnityStaticDispatcherAdapter<QuantumUnityEventDispatcher, EventBase>
{
	[Token(Token = "0x6000447")]
	[Address(RVA = "0x11215EC", Offset = "0x11215EC", VA = "0x11215EC")]
	private QuantumEvent()
	{
	}
}
[Token(Token = "0x200026E")]
public class QuantumUnityEventDispatcher : EventDispatcher, IQuantumUnityDispatcher
{
	[Token(Token = "0x6000448")]
	[Address(RVA = "0x12536D0", Offset = "0x12536D0", VA = "0x12536D0", Slot = "4")]
	protected override ListenerStatus GetListenerStatus(object listener, uint flags)
	{
		return default(ListenerStatus);
	}

	[Token(Token = "0x6000449")]
	[Address(RVA = "0x12536D8", Offset = "0x12536D8", VA = "0x12536D8")]
	public QuantumUnityEventDispatcher()
	{
	}
}
[Token(Token = "0x200026F")]
public abstract class QuantumUnityStaticDispatcherAdapter
{
	[Token(Token = "0x2000270")]
	protected sealed class Worker : MonoBehaviour
	{
		[Token(Token = "0x4000198")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public DispatcherBase Dispatcher;

		[Token(Token = "0x600044B")]
		[Address(RVA = "0x105D050", Offset = "0x105D050", VA = "0x105D050")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x600044C")]
		[Address(RVA = "0x105D0E0", Offset = "0x105D0E0", VA = "0x105D0E0")]
		public Worker()
		{
		}
	}

	[Token(Token = "0x600044A")]
	[Address(RVA = "0x1253988", Offset = "0x1253988", VA = "0x1253988")]
	protected QuantumUnityStaticDispatcherAdapter()
	{
	}
}
[Token(Token = "0x2000271")]
public abstract class QuantumUnityStaticDispatcherAdapter<TDispatcher, TDispatchableBase> : QuantumUnityStaticDispatcherAdapter where TDispatcher : DispatcherBase, IQuantumUnityDispatcher, new() where TDispatchableBase : IDispatchable
{
	[Token(Token = "0x2000272")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBC6240", Offset = "0xBC6240")]
	private sealed class <>c__DisplayClass6_0<TDispatchable> where TDispatchable : TDispatchableBase
	{
		[Token(Token = "0x400019B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public EntityView view;

		[Token(Token = "0x600045F")]
		public <>c__DisplayClass6_0()
		{
		}

		[Token(Token = "0x6000460")]
		internal bool <Subscribe>b__0(IDeterministicGame _)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000273")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBC6250", Offset = "0xBC6250")]
	private sealed class <>c__DisplayClass7_0<TDispatchable> where TDispatchable : TDispatchableBase
	{
		[Token(Token = "0x400019C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public DeterministicGameMode gameMode;

		[Token(Token = "0x400019D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool exclude;

		[Token(Token = "0x6000461")]
		public <>c__DisplayClass7_0()
		{
		}

		[Token(Token = "0x6000462")]
		internal bool <Subscribe>b__0(IDeterministicGame game)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000274")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBC6260", Offset = "0xBC6260")]
	private sealed class <>c__DisplayClass8_0<TDispatchable> where TDispatchable : TDispatchableBase
	{
		[Token(Token = "0x400019E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public DeterministicGameMode[] gameModes;

		[Token(Token = "0x400019F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool exclude;

		[Token(Token = "0x6000463")]
		public <>c__DisplayClass8_0()
		{
		}

		[Token(Token = "0x6000464")]
		internal bool <Subscribe>b__0(IDeterministicGame game)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000275")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBC6270", Offset = "0xBC6270")]
	private sealed class <>c__DisplayClass9_0<TDispatchable> where TDispatchable : TDispatchableBase
	{
		[Token(Token = "0x40001A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string runnerId;

		[Token(Token = "0x6000465")]
		public <>c__DisplayClass9_0()
		{
		}

		[Token(Token = "0x6000466")]
		internal bool <Subscribe>b__0(IDeterministicGame game)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000276")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBC6280", Offset = "0xBC6280")]
	private sealed class <>c__DisplayClass10_0<TDispatchable> where TDispatchable : TDispatchableBase
	{
		[Token(Token = "0x40001A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int runnerInstanceId;

		[Token(Token = "0x6000467")]
		public <>c__DisplayClass10_0()
		{
		}

		[Token(Token = "0x6000468")]
		internal bool <Subscribe>b__0(IDeterministicGame game)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000277")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBC6290", Offset = "0xBC6290")]
	private sealed class <>c__DisplayClass11_0<TDispatchable> where TDispatchable : TDispatchableBase
	{
		[Token(Token = "0x40001A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public QuantumGame game;

		[Token(Token = "0x6000469")]
		public <>c__DisplayClass11_0()
		{
		}

		[Token(Token = "0x600046A")]
		internal bool <Subscribe>b__0(IDeterministicGame g)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000278")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBC62A0", Offset = "0xBC62A0")]
	private sealed class <>c__DisplayClass18_0
	{
		[Token(Token = "0x40001A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public DispatchableFilter first;

		[Token(Token = "0x40001A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public DispatchableFilter second;

		[Token(Token = "0x600046B")]
		public <>c__DisplayClass18_0()
		{
		}

		[Token(Token = "0x600046C")]
		internal bool <ComposeFilters>b__0(IDeterministicGame x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4000199")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	protected static Worker _worker;

	[Token(Token = "0x400019A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCC9FC", Offset = "0xBCC9FC")]
	private static readonly TDispatcher <Dispatcher>k__BackingField;

	[Token(Token = "0x170000FF")]
	public static TDispatcher Dispatcher
	{
		[Token(Token = "0x600044D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDC510", Offset = "0xBDC510")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600044E")]
	public static void Clear()
	{
	}

	[Token(Token = "0x600044F")]
	public static void RemoveDeadListeners()
	{
	}

	[Token(Token = "0x6000450")]
	public static DispatcherSubscription Subscribe<TDispatchable>(UnityEngine.Object listener, DispatchableHandler<TDispatchable> handler, [System.Runtime.InteropServices.Optional] DispatchableFilter filter, bool once = false, bool onlyIfActiveAndEnabled = false, bool onlyIfEntityViewBound = false) where TDispatchable : TDispatchableBase
	{
		return default(DispatcherSubscription);
	}

	[Token(Token = "0x6000451")]
	public static DispatcherSubscription Subscribe<TDispatchable>(UnityEngine.Object listener, DispatchableHandler<TDispatchable> handler, DeterministicGameMode gameMode, bool exclude = false, bool once = false, bool onlyIfActiveAndEnabled = false, bool onlyIfEntityViewBound = false) where TDispatchable : TDispatchableBase
	{
		return default(DispatcherSubscription);
	}

	[Token(Token = "0x6000452")]
	public static DispatcherSubscription Subscribe<TDispatchable>(UnityEngine.Object listener, DispatchableHandler<TDispatchable> handler, DeterministicGameMode[] gameModes, bool exclude = false, bool once = false, bool onlyIfActiveAndEnabled = false, bool onlyIfEntityViewBound = false) where TDispatchable : TDispatchableBase
	{
		return default(DispatcherSubscription);
	}

	[Token(Token = "0x6000453")]
	public static DispatcherSubscription Subscribe<TDispatchable>(UnityEngine.Object listener, DispatchableHandler<TDispatchable> handler, string runnerId, bool once = false, bool onlyIfActiveAndEnabled = false, bool onlyIfEntityViewBound = false) where TDispatchable : TDispatchableBase
	{
		return default(DispatcherSubscription);
	}

	[Token(Token = "0x6000454")]
	public static DispatcherSubscription Subscribe<TDispatchable>(UnityEngine.Object listener, DispatchableHandler<TDispatchable> handler, QuantumRunner runner, bool once = false, bool onlyIfActiveAndEnabled = false, bool onlyIfEntityViewBound = false) where TDispatchable : TDispatchableBase
	{
		return default(DispatcherSubscription);
	}

	[Token(Token = "0x6000455")]
	public static DispatcherSubscription Subscribe<TDispatchable>(UnityEngine.Object listener, DispatchableHandler<TDispatchable> handler, QuantumGame game, bool once = false, bool onlyIfActiveAndEnabled = false, bool onlyIfEntityViewBound = false) where TDispatchable : TDispatchableBase
	{
		return default(DispatcherSubscription);
	}

	[Token(Token = "0x6000456")]
	public static IDisposable SubscribeManual<TDispatchable>(object listener, DispatchableHandler<TDispatchable> handler, [System.Runtime.InteropServices.Optional] DispatchableFilter filter, bool once = false) where TDispatchable : TDispatchableBase
	{
		return null;
	}

	[Token(Token = "0x6000457")]
	public static IDisposable SubscribeManual<TDispatchable>(DispatchableHandler<TDispatchable> handler, [System.Runtime.InteropServices.Optional] DispatchableFilter filter, bool once = false) where TDispatchable : TDispatchableBase
	{
		return null;
	}

	[Token(Token = "0x6000458")]
	public static bool Unsubscribe(DispatcherSubscription subscription)
	{
		return default(bool);
	}

	[Token(Token = "0x6000459")]
	public static bool UnsubscribeListener(object listener)
	{
		return default(bool);
	}

	[Token(Token = "0x600045A")]
	public static bool UnsubscribeListener<TDispatchable>(object listener) where TDispatchable : TDispatchableBase
	{
		return default(bool);
	}

	[Token(Token = "0x600045B")]
	private static void EnsureWorkerExistsAndIsActive()
	{
	}

	[Token(Token = "0x600045C")]
	private static DispatchableFilter ComposeFilters(DispatchableFilter first, DispatchableFilter second)
	{
		return null;
	}

	[Token(Token = "0x600045D")]
	protected QuantumUnityStaticDispatcherAdapter()
	{
	}
}
[Token(Token = "0x2000279")]
public abstract class ComponentPrototypeRefWrapperBase
{
	[Token(Token = "0x40001A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public AssetRefEntityPrototype AssetPrototype;

	[Token(Token = "0x17000100")]
	public abstract string ComponentTypeName
	{
		[Token(Token = "0x600046D")]
		get;
	}

	[Token(Token = "0x17000101")]
	public abstract EntityComponentBase ScenePrototype
	{
		[Token(Token = "0x600046E")]
		get;
	}

	[Token(Token = "0x600046F")]
	[Address(RVA = "0x1166134", Offset = "0x1166134", VA = "0x1166134")]
	protected ComponentPrototypeRefWrapperBase()
	{
	}
}
[Token(Token = "0x200027A")]
public abstract class ComponentPrototypeRefWrapperBase<T, U> : ComponentPrototypeRefWrapperBase where T : EntityComponentBase where U : struct, IComponent
{
	[Token(Token = "0x40001A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[LocalReference]
	[SerializeField]
	private T _scenePrototype;

	[Token(Token = "0x17000102")]
	public override string ComponentTypeName
	{
		[Token(Token = "0x6000470")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000103")]
	public override EntityComponentBase ScenePrototype
	{
		[Token(Token = "0x6000471")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000472")]
	protected ComponentPrototypeRefWrapperBase()
	{
	}
}
[Serializable]
[Token(Token = "0x200027B")]
public class ComponentPrototypeRefWrapper : ComponentPrototypeRefWrapperBase
{
	[Token(Token = "0x40001A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[LocalReference]
	[SerializeField]
	private EntityComponentBase _scenePrototype;

	[Token(Token = "0x40001A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private string _componentTypeName;

	[Token(Token = "0x17000104")]
	public override string ComponentTypeName
	{
		[Token(Token = "0x6000473")]
		[Address(RVA = "0x116611C", Offset = "0x116611C", VA = "0x116611C", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000105")]
	public override EntityComponentBase ScenePrototype
	{
		[Token(Token = "0x6000474")]
		[Address(RVA = "0x1166124", Offset = "0x1166124", VA = "0x1166124", Slot = "5")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000475")]
	[Address(RVA = "0x116612C", Offset = "0x116612C", VA = "0x116612C")]
	public ComponentPrototypeRefWrapper()
	{
	}
}
[Token(Token = "0x200027C")]
public enum EntityPrototypeTransformMode
{
	[Token(Token = "0x40001AA")]
	Transform2D,
	[Token(Token = "0x40001AB")]
	Transform3D,
	[Token(Token = "0x40001AC")]
	None
}
[Token(Token = "0x200027D")]
public class EntityPrototype : MonoBehaviour, IQuantumPrefabNestedAssetHost
{
	[Serializable]
	[Token(Token = "0x200027E")]
	public struct Transform2DVerticalInfo
	{
		[Token(Token = "0x40001B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[HideInInspectorAttribute]
		public bool IsEnabled;

		[Token(Token = "0x40001B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public FP Height;

		[Token(Token = "0x40001B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public FP PositionOffset;
	}

	[Serializable]
	[Token(Token = "0x200027F")]
	public struct PhysicsColliderGeneric
	{
		[Token(Token = "0x40001B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool IsTrigger;

		[Token(Token = "0x40001B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AssetRefPhysicsMaterial Material;

		[Token(Token = "0x40001BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Component SourceCollider;

		[Token(Token = "0x40001BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspectorAttribute]
		public bool IsEnabled;

		[Token(Token = "0x40001BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Shape2DConfig Shape2D;

		[Token(Token = "0x40001BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Shape3DConfig Shape3D;

		[Token(Token = "0x40001BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[Quantum.Inspector.Layer]
		[AttributeAttribute(Name = "DrawIfAttribute", RVA = "0xBCCE48", Offset = "0xBCCE48")]
		public int Layer;

		[Token(Token = "0x40001BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public CallbackFlags_Wrapper CallbackFlags;
	}

	[Serializable]
	[Token(Token = "0x2000280")]
	public struct PhysicsBodyGeneric
	{
		[Token(Token = "0x40001C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[HideInInspectorAttribute]
		public bool IsEnabled;

		[Token(Token = "0x40001C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		[HideInInspectorAttribute]
		public int Version2D;

		[Token(Token = "0x40001C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[HideInInspectorAttribute]
		public int Version3D;

		[Token(Token = "0x40001C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[Quantum.Inspector.EnumFlags]
		[AttributeAttribute(Name = "DisplayNameAttribute", RVA = "0xBCCED0", Offset = "0xBCCED0")]
		public PhysicsBody2D.ConfigFlags Config2D;

		[Token(Token = "0x40001C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD")]
		[Quantum.Inspector.EnumFlags]
		[AttributeAttribute(Name = "DisplayNameAttribute", RVA = "0xBCCF1C", Offset = "0xBCCF1C")]
		public PhysicsBody3D.ConfigFlags Config3D;

		[Token(Token = "0x40001C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE")]
		[Quantum.Inspector.EnumFlags]
		public RotationFreezeFlags RotationFreeze;

		[Token(Token = "0x40001C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public FP Mass;

		[Token(Token = "0x40001C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public FP Drag;

		[Token(Token = "0x40001C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FP AngularDrag;

		[Token(Token = "0x40001C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "DisplayNameAttribute", RVA = "0xBCCF78", Offset = "0xBCCF78")]
		public FPVector2 CenterOfMass2D;

		[Token(Token = "0x40001CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "DisplayNameAttribute", RVA = "0xBCCFB0", Offset = "0xBCCFB0")]
		public FPVector3 CenterOfMass3D;

		[Token(Token = "0x40001CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public NullableFP GravityScale;

		[Token(Token = "0x17000108")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xBE5748", Offset = "0xBE5748")]
		public int Version
		{
			[Token(Token = "0x600047D")]
			[Address(RVA = "0x102B920", Offset = "0x102B920", VA = "0x102B920")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600047E")]
			[Address(RVA = "0x102B928", Offset = "0x102B928", VA = "0x102B928")]
			set
			{
			}
		}

		[Token(Token = "0x600047F")]
		[Address(RVA = "0x102B930", Offset = "0x102B930", VA = "0x102B930")]
		public void EnsureVersionUpdated()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000281")]
	public struct NavMeshPathfinderInfo
	{
		[Token(Token = "0x40001CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[HideInInspectorAttribute]
		public bool IsEnabled;

		[Token(Token = "0x40001CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AssetRefNavMeshAgentConfig NavMeshAgentConfig;

		[Token(Token = "0x40001CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "OptionalAttribute", RVA = "0xBCCFF8", Offset = "0xBCCFF8")]
		public InitialNavMeshTargetInfo InitialTarget;
	}

	[Serializable]
	[Token(Token = "0x2000282")]
	public struct InitialNavMeshTargetInfo
	{
		[Token(Token = "0x40001CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[HideInInspectorAttribute]
		public bool IsEnabled;

		[Token(Token = "0x40001D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Transform Target;

		[Token(Token = "0x40001D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "DrawIfAttribute", RVA = "0xBCD040", Offset = "0xBCD040")]
		public FPVector3 Position;

		[Token(Token = "0x40001D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public NavMeshSpec NavMesh;
	}

	[Serializable]
	[Token(Token = "0x2000283")]
	public struct NavMeshSpec
	{
		[Token(Token = "0x40001D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public MapNavMeshDefinition Reference;

		[Token(Token = "0x40001D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AssetRefNavMesh Asset;

		[Token(Token = "0x40001D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string Name;
	}

	[Serializable]
	[Token(Token = "0x2000284")]
	public struct NavMeshSteeringAgentInfo
	{
		[Token(Token = "0x40001D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[HideInInspectorAttribute]
		public bool IsEnabled;

		[Token(Token = "0x40001D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[AttributeAttribute(Name = "OptionalAttribute", RVA = "0xBCD094", Offset = "0xBCD094")]
		public OverrideFP MaxSpeed;

		[Token(Token = "0x40001D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "OptionalAttribute", RVA = "0xBCD0CC", Offset = "0xBCD0CC")]
		public OverrideFP Acceleration;
	}

	[Serializable]
	[Token(Token = "0x2000285")]
	public struct OverrideFP
	{
		[Token(Token = "0x40001D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[HideInInspectorAttribute]
		public bool IsEnabled;

		[Token(Token = "0x40001DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public FP Value;
	}

	[Serializable]
	[Token(Token = "0x2000286")]
	public struct NavMeshAvoidanceAgentInfo
	{
		[Token(Token = "0x40001DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[HideInInspectorAttribute]
		public bool IsEnabled;
	}

	[Token(Token = "0x2000287")]
	private class CheckComponentDuplicatesVisitor : ComponentPrototypeVisitor
	{
		[Token(Token = "0x40001DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public EntityPrototype Source;

		[Token(Token = "0x40001DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Dictionary<Type, List<Component>> TypeToSources;

		[Token(Token = "0x6000480")]
		[Address(RVA = "0x102B830", Offset = "0x102B830", VA = "0x102B830", Slot = "22")]
		protected override void VisitFallback(ComponentPrototype prototype)
		{
		}

		[Token(Token = "0x6000481")]
		[Address(RVA = "0x102B918", Offset = "0x102B918", VA = "0x102B918")]
		public CheckComponentDuplicatesVisitor()
		{
		}
	}

	[Token(Token = "0x40001AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public EntityPrototypeTransformMode TransformMode;

	[Token(Token = "0x40001AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "DrawIfAttribute", RVA = "0xBCCA8C", Offset = "0xBCCA8C")]
	[AttributeAttribute(Name = "OptionalAttribute", RVA = "0xBCCA8C", Offset = "0xBCCA8C")]
	public Transform2DVerticalInfo Transform2DVertical;

	[Token(Token = "0x40001AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "OptionalAttribute", RVA = "0xBCCAF8", Offset = "0xBCCAF8")]
	[AttributeAttribute(Name = "DrawIfAttribute", RVA = "0xBCCAF8", Offset = "0xBCCAF8")]
	public PhysicsColliderGeneric PhysicsCollider;

	[Token(Token = "0x40001B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "OptionalAttribute", RVA = "0xBCCB64", Offset = "0xBCCB64")]
	[AttributeAttribute(Name = "DrawIfAttribute", RVA = "0xBCCB64", Offset = "0xBCCB64")]
	[AttributeAttribute(Name = "DrawIfAttribute", RVA = "0xBCCB64", Offset = "0xBCCB64")]
	[AttributeAttribute(Name = "DrawIfAttribute", RVA = "0xBCCB64", Offset = "0xBCCB64")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBCCB64", Offset = "0xBCCB64")]
	public PhysicsBodyGeneric PhysicsBody;

	[Token(Token = "0x40001B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[AttributeAttribute(Name = "DrawIfAttribute", RVA = "0xBCCC54", Offset = "0xBCCC54")]
	[AttributeAttribute(Name = "OptionalAttribute", RVA = "0xBCCC54", Offset = "0xBCCC54")]
	public NavMeshPathfinderInfo NavMeshPathfinder;

	[Token(Token = "0x40001B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	[AttributeAttribute(Name = "OptionalAttribute", RVA = "0xBCCCC0", Offset = "0xBCCCC0")]
	[AttributeAttribute(Name = "DrawIfAttribute", RVA = "0xBCCCC0", Offset = "0xBCCCC0")]
	[AttributeAttribute(Name = "DrawIfAttribute", RVA = "0xBCCCC0", Offset = "0xBCCCC0")]
	public NavMeshSteeringAgentInfo NavMeshSteeringAgent;

	[Token(Token = "0x40001B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	[AttributeAttribute(Name = "DrawIfAttribute", RVA = "0xBCCD5C", Offset = "0xBCCD5C")]
	[AttributeAttribute(Name = "DrawIfAttribute", RVA = "0xBCCD5C", Offset = "0xBCCD5C")]
	[AttributeAttribute(Name = "DrawIfAttribute", RVA = "0xBCCD5C", Offset = "0xBCCD5C")]
	[AttributeAttribute(Name = "OptionalAttribute", RVA = "0xBCCD5C", Offset = "0xBCCD5C")]
	public NavMeshAvoidanceAgentInfo NavMeshAvoidanceAgent;

	[Token(Token = "0x40001B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public AssetRefEntityView View;

	[Token(Token = "0x17000106")]
	private Type IQuantumPrefabNestedAssetHost.NestedAssetType
	{
		[Token(Token = "0x6000476")]
		[Address(RVA = "0x104A3A0", Offset = "0x104A3A0", VA = "0x104A3A0", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000107")]
	private Type IQuantumPrefabNestedAssetHost.SplitAssetType
	{
		[Token(Token = "0x6000477")]
		[Address(RVA = "0x104A418", Offset = "0x104A418", VA = "0x104A418", Slot = "5")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000478")]
	[Address(RVA = "0x104A490", Offset = "0x104A490", VA = "0x104A490")]
	public void PreSerialize()
	{
	}

	[Token(Token = "0x6000479")]
	[Address(RVA = "0x104A65C", Offset = "0x104A65C", VA = "0x104A65C")]
	public void SerializeImplicitComponents(ComponentPrototypeVisitor visitor, out EntityView selfView)
	{
	}

	[Token(Token = "0x600047A")]
	[Address(RVA = "0x104AD54", Offset = "0x104AD54", VA = "0x104AD54")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xBDC520", Offset = "0xBDC520")]
	public void CheckComponentDuplicates(Action<string> duplicateCallback)
	{
	}

	[Token(Token = "0x600047B")]
	[Address(RVA = "0x104AD58", Offset = "0x104AD58", VA = "0x104AD58")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xBDC558", Offset = "0xBDC558")]
	public void CheckComponentDuplicates(Action<Type, List<Component>> duplicateCallback)
	{
	}

	[Token(Token = "0x600047C")]
	[Address(RVA = "0x104B0D8", Offset = "0x104B0D8", VA = "0x104B0D8")]
	public EntityPrototype()
	{
	}
}
[Serializable]
[Token(Token = "0x2000288")]
public struct EntityPrototypeRefWrapper
{
	[Token(Token = "0x40001DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[LocalReference]
	public EntityPrototype ScenePrototype;

	[Token(Token = "0x40001DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public AssetRefEntityPrototype AssetPrototype;
}
[Token(Token = "0x2000289")]
public static class EntityPrototypeUtils
{
	[Serializable]
	[Token(Token = "0x200028A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBC62C0", Offset = "0xBC62C0")]
	private sealed class <>c
	{
		[Token(Token = "0x40001E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x40001E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<Type, string> <>9__5_0;

		[Token(Token = "0x600048B")]
		[Address(RVA = "0x102BAB0", Offset = "0x102BAB0", VA = "0x102BAB0")]
		public <>c()
		{
		}

		[Token(Token = "0x600048C")]
		[Address(RVA = "0x102BAB8", Offset = "0x102BAB8", VA = "0x102BAB8")]
		internal string <CreateTypeNotSupportedMessage>b__5_0(Type x)
		{
			return null;
		}
	}

	[Token(Token = "0x6000482")]
	[Address(RVA = "0x1046E4C", Offset = "0x1046E4C", VA = "0x1046E4C")]
	public static bool TrySetShapeConfigFromSourceCollider2D(Shape2DConfig config, Transform reference, Component collider)
	{
		return default(bool);
	}

	[Token(Token = "0x6000483")]
	[Address(RVA = "0x1047644", Offset = "0x1047644", VA = "0x1047644")]
	public static bool TrySetShapeConfigFromSourceCollider3D(Shape3DConfig config, Transform reference, Component collider)
	{
		return default(bool);
	}

	[Token(Token = "0x6000484")]
	[Address(RVA = "0x104C560", Offset = "0x104C560", VA = "0x104C560")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xBDC590", Offset = "0xBDC590")]
	public static Shape2DConfig ColliderToShape2D(Transform reference, Component collider, out bool isTrigger)
	{
		return null;
	}

	[Token(Token = "0x6000485")]
	[Address(RVA = "0x104CAB8", Offset = "0x104CAB8", VA = "0x104CAB8")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xBDC5C8", Offset = "0xBDC5C8")]
	public static Shape3DConfig ColliderToShape3D(Transform reference, Component collider, out bool isTrigger)
	{
		return null;
	}

	[Token(Token = "0x6000486")]
	[Address(RVA = "0x10472A4", Offset = "0x10472A4", VA = "0x10472A4")]
	public static bool IsColliderTrigger(this Component component)
	{
		return default(bool);
	}

	[Token(Token = "0x6000487")]
	[Address(RVA = "0x104C39C", Offset = "0x104C39C", VA = "0x104C39C")]
	private static string CreateTypeNotSupportedMessage(Type colliderType, params Type[] supportedTypes)
	{
		return null;
	}

	[Token(Token = "0x6000488")]
	[Address(RVA = "0x104C1F8", Offset = "0x104C1F8", VA = "0x104C1F8")]
	private static void ThrowIfDifferentWorldPosition(Transform reference, Bounds bounds)
	{
	}

	[Token(Token = "0x6000489")]
	[Address(RVA = "0x104C2BC", Offset = "0x104C2BC", VA = "0x104C2BC")]
	private static void ThrowIfDifferentWorldRotation(Transform reference, Component collider)
	{
	}
}
[Token(Token = "0x200028B")]
[DisallowMultipleComponent]
public class EntityView : MonoBehaviour, IQuantumPrefabNestedAssetHost
{
	[Serializable]
	[Token(Token = "0x200028C")]
	public class EntityUnityEvent : UnityEvent<QuantumGame>
	{
		[Token(Token = "0x6000497")]
		[Address(RVA = "0x102BAD8", Offset = "0x102BAD8", VA = "0x102BAD8")]
		public EntityUnityEvent()
		{
		}
	}

	[Token(Token = "0x200028D")]
	public struct UpdatePostionParameter
	{
		[Token(Token = "0x40001FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 NewPosition;

		[Token(Token = "0x40001FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Quaternion NewRotation;

		[Token(Token = "0x40001FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 UninterpolatedPosition;

		[Token(Token = "0x40001FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Quaternion UninterpolatedRotation;

		[Token(Token = "0x40001FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Vector3 ErrorVisualVector;

		[Token(Token = "0x40001FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public Quaternion ErrorVisualQuaternion;

		[Token(Token = "0x4000200")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public bool PositionTeleport;

		[Token(Token = "0x4000201")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
		public bool RotationTeleport;
	}

	[NonSerialized]
	[Token(Token = "0x40001E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AssetGuid AssetGuid;

	[NonSerialized]
	[Token(Token = "0x40001E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public EntityRef EntityRef;

	[Token(Token = "0x40001E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xBCD134", Offset = "0xBCD134")]
	public EntityViewBindBehaviour BindBehaviour;

	[Token(Token = "0x40001E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBCD16C", Offset = "0xBCD16C")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xBCD16C", Offset = "0xBCD16C")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xBCD16C", Offset = "0xBCD16C")]
	public bool ManualDisposal;

	[Token(Token = "0x40001E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBCD1F0", Offset = "0xBCD1F0")]
	public bool GameObjectNameIsEntityRef;

	[Token(Token = "0x40001E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBCD228", Offset = "0xBCD228")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBCD228", Offset = "0xBCD228")]
	public float ErrorCorrectionRateMin;

	[Token(Token = "0x40001E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBCD288", Offset = "0xBCD288")]
	public float ErrorCorrectionRateMax;

	[Token(Token = "0x40001E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBCD2C0", Offset = "0xBCD2C0")]
	public float ErrorPositionBlendStart;

	[Token(Token = "0x40001EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBCD2F8", Offset = "0xBCD2F8")]
	public float ErrorPositionBlendEnd;

	[Token(Token = "0x40001EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBCD330", Offset = "0xBCD330")]
	public float ErrorRotationBlendStart;

	[Token(Token = "0x40001EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBCD368", Offset = "0xBCD368")]
	public float ErrorRotationBlendEnd;

	[Token(Token = "0x40001ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBCD3A0", Offset = "0xBCD3A0")]
	public float ErrorPositionMinCorrection;

	[Token(Token = "0x40001EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBCD3D8", Offset = "0xBCD3D8")]
	public float ErrorPositionTeleportDistance;

	[Token(Token = "0x40001EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBCD410", Offset = "0xBCD410")]
	public float ErrorRotationTeleportDistance;

	[Token(Token = "0x40001F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBCD448", Offset = "0xBCD448")]
	public EntityUnityEvent OnEntityInstantiated;

	[Token(Token = "0x40001F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public EntityUnityEvent OnEntityDestroyed;

	[Token(Token = "0x40001F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private FP _lastPredictedVerticalPosition2D;

	[Token(Token = "0x40001F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private FPVector2 _lastPredictedPosition2D;

	[Token(Token = "0x40001F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Vector3 _lastPredictedPosition3D;

	[Token(Token = "0x40001F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private FP _lastPredictedRotation2D;

	[Token(Token = "0x40001F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Quaternion _lastPredictedRotation3D;

	[Token(Token = "0x40001F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Vector3 _errorVisualVector;

	[Token(Token = "0x40001F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private Quaternion _errorVisualQuaternion;

	[Token(Token = "0x40001F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	public EntityViewUpdateMode updateMode;

	[Token(Token = "0x17000109")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xBE5780", Offset = "0xBE5780")]
	public bool ManualDiposal
	{
		[Token(Token = "0x600048D")]
		[Address(RVA = "0x104CF04", Offset = "0x104CF04", VA = "0x104CF04")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700010A")]
	private Type IQuantumPrefabNestedAssetHost.NestedAssetType
	{
		[Token(Token = "0x600048E")]
		[Address(RVA = "0x104CF0C", Offset = "0x104CF0C", VA = "0x104CF0C", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700010B")]
	private Type IQuantumPrefabNestedAssetHost.SplitAssetType
	{
		[Token(Token = "0x600048F")]
		[Address(RVA = "0x104CF84", Offset = "0x104CF84", VA = "0x104CF84", Slot = "5")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000490")]
	[Address(RVA = "0x104CFFC", Offset = "0x104CFFC", VA = "0x104CFFC")]
	public void OnInstantiated()
	{
	}

	[Token(Token = "0x6000491")]
	[Address(RVA = "0x104D040", Offset = "0x104D040", VA = "0x104D040")]
	public void UpdateFromTransform3D(QuantumGame game, bool useClockAliasingInterpolation, bool useErrorCorrectionInterpolation)
	{
	}

	[Token(Token = "0x6000492")]
	[Address(RVA = "0x104D61C", Offset = "0x104D61C", VA = "0x104D61C")]
	public void UpdateFromTransform2D(QuantumGame game, bool useClockAliasingInterpolation, bool useErrorCorrectionInterpolation)
	{
	}

	[Token(Token = "0x6000493")]
	[Address(RVA = "0x104D384", Offset = "0x104D384", VA = "0x104D384")]
	private void UpdateRenderPosition(ref UpdatePostionParameter param)
	{
	}

	[Token(Token = "0x6000494")]
	[Address(RVA = "0x104DCB4", Offset = "0x104DCB4", VA = "0x104DCB4", Slot = "6")]
	protected virtual void ApplyTransform(ref UpdatePostionParameter param)
	{
	}

	[Token(Token = "0x6000495")]
	[Address(RVA = "0x104DBE4", Offset = "0x104DBE4", VA = "0x104DBE4")]
	private void UpdateMinPositionCorrection(float positionCorrectionMultiplier, Vector3 positionCorrectionAmount)
	{
	}

	[Token(Token = "0x6000496")]
	[Address(RVA = "0x104DD3C", Offset = "0x104DD3C", VA = "0x104DD3C")]
	public EntityView()
	{
	}
}
[Token(Token = "0x200028E")]
public enum EntityViewBindBehaviour
{
	[Token(Token = "0x4000203")]
	NonVerified,
	[Token(Token = "0x4000204")]
	Verified
}
[Token(Token = "0x200028F")]
public class EntityViewUpdater : MonoBehaviour
{
	[Token(Token = "0x4000205")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBCD480", Offset = "0xBCD480")]
	public Transform ViewParentTransform;

	[Token(Token = "0x4000206")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBCD4B8", Offset = "0xBCD4B8")]
	public bool AutoFindMapData;

	[NonSerialized]
	[Token(Token = "0x4000207")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private MapData _mapData;

	[Token(Token = "0x4000208")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private HashSet<EntityRef> _removeEntities;

	[Token(Token = "0x4000209")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private HashSet<EntityRef> _activeEntities;

	[Token(Token = "0x400020A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Dictionary<EntityRef, EntityView> _activeViews;

	[Token(Token = "0x400020B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool _teleport;

	[Token(Token = "0x400020C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private QuantumGame _observedGame;

	[Token(Token = "0x1700010C")]
	protected MapData MapData
	{
		[Token(Token = "0x6000498")]
		[Address(RVA = "0x104E078", Offset = "0x104E078", VA = "0x104E078")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700010D")]
	protected HashSet<EntityRef> ActiveEntities
	{
		[Token(Token = "0x6000499")]
		[Address(RVA = "0x104E080", Offset = "0x104E080", VA = "0x104E080")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700010E")]
	protected HashSet<EntityRef> RemoveEntities
	{
		[Token(Token = "0x600049A")]
		[Address(RVA = "0x104E088", Offset = "0x104E088", VA = "0x104E088")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700010F")]
	protected Dictionary<EntityRef, EntityView> ActiveViews
	{
		[Token(Token = "0x600049B")]
		[Address(RVA = "0x104E090", Offset = "0x104E090", VA = "0x104E090")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000110")]
	protected bool Teleport
	{
		[Token(Token = "0x600049C")]
		[Address(RVA = "0x104E098", Offset = "0x104E098", VA = "0x104E098")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000111")]
	public QuantumGame ObservedGame
	{
		[Token(Token = "0x600049D")]
		[Address(RVA = "0x104E0A0", Offset = "0x104E0A0", VA = "0x104E0A0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600049E")]
	[Address(RVA = "0x104E0A8", Offset = "0x104E0A8", VA = "0x104E0A8")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xBDC610", Offset = "0xBDC610")]
	public EntityView GetPrefab(EntityRef entityRef)
	{
		return null;
	}

	[Token(Token = "0x600049F")]
	[Address(RVA = "0x10439D4", Offset = "0x10439D4", VA = "0x10439D4")]
	public EntityView GetView(EntityRef entityRef)
	{
		return null;
	}

	[Token(Token = "0x60004A0")]
	[Address(RVA = "0x104E0AC", Offset = "0x104E0AC", VA = "0x104E0AC")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xBDC648", Offset = "0xBDC648")]
	public void SetTeleportOnce()
	{
	}

	[Token(Token = "0x60004A1")]
	[Address(RVA = "0x104E0B8", Offset = "0x104E0B8", VA = "0x104E0B8")]
	public void TeleportAllEntities()
	{
	}

	[Token(Token = "0x60004A2")]
	[Address(RVA = "0x104E0C4", Offset = "0x104E0C4", VA = "0x104E0C4")]
	public void SetCurrentGame(QuantumGame game)
	{
	}

	[Token(Token = "0x60004A3")]
	[Address(RVA = "0x104E0CC", Offset = "0x104E0CC", VA = "0x104E0CC")]
	public void Awake()
	{
	}

	[Token(Token = "0x60004A4")]
	[Address(RVA = "0x104E48C", Offset = "0x104E48C", VA = "0x104E48C")]
	private void OnGameStarted(QuantumGame game)
	{
	}

	[Token(Token = "0x60004A5")]
	[Address(RVA = "0x104E4A0", Offset = "0x104E4A0", VA = "0x104E4A0")]
	private void OnObservedGameDestroyed(QuantumGame game, bool destroyed)
	{
	}

	[Token(Token = "0x60004A6")]
	[Address(RVA = "0x104E658", Offset = "0x104E658", VA = "0x104E658")]
	private void OnObservedGameUpdated(QuantumGame game)
	{
	}

	[Token(Token = "0x60004A7")]
	[Address(RVA = "0x104EE48", Offset = "0x104EE48", VA = "0x104EE48")]
	private void SyncViews(QuantumGame game, Frame frame, EntityViewBindBehaviour createBehaviour)
	{
	}

	[Token(Token = "0x60004A8")]
	[Address(RVA = "0x104F234", Offset = "0x104F234", VA = "0x104F234")]
	private void CreateViewIfNeeded(QuantumGame game, Frame f, EntityRef handle, View view, EntityViewBindBehaviour createBehaviour)
	{
	}

	[Token(Token = "0x60004A9")]
	[Address(RVA = "0x104F400", Offset = "0x104F400", VA = "0x104F400")]
	private void BindMapEntityIfNeeded(QuantumGame game, Frame f, EntityRef handle, MapEntityLink mapEntity, EntityViewBindBehaviour createBehaviour)
	{
	}

	[Token(Token = "0x60004AA")]
	[Address(RVA = "0x104F550", Offset = "0x104F550", VA = "0x104F550")]
	private EntityView CreateView(QuantumGame game, Frame f, EntityRef handle, Quantum.EntityView view, EntityViewBindBehaviour createBehaviour)
	{
		return null;
	}

	[Token(Token = "0x60004AB")]
	[Address(RVA = "0x104F878", Offset = "0x104F878", VA = "0x104F878")]
	private EntityView BindMapEntity(QuantumGame game, Frame f, EntityRef handle, MapEntityLink mapEntity, EntityViewBindBehaviour createBehaviour)
	{
		return null;
	}

	[Token(Token = "0x60004AC")]
	[Address(RVA = "0x104FE00", Offset = "0x104FE00", VA = "0x104FE00")]
	private void OnEntityViewInstantiated(QuantumGame game, Frame f, EntityView instance, EntityRef handle)
	{
	}

	[Token(Token = "0x60004AD")]
	[Address(RVA = "0x104F174", Offset = "0x104F174", VA = "0x104F174")]
	private void DestroyEntityView(QuantumGame game, EntityRef entityRef)
	{
	}

	[Token(Token = "0x60004AE")]
	[Address(RVA = "0x104FFA0", Offset = "0x104FFA0", VA = "0x104FFA0", Slot = "4")]
	protected virtual void DestroyEntityView(QuantumGame game, EntityView view)
	{
	}

	[Token(Token = "0x60004AF")]
	[Address(RVA = "0x1050050", Offset = "0x1050050", VA = "0x1050050")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60004B0")]
	[Address(RVA = "0x1050244", Offset = "0x1050244", VA = "0x1050244", Slot = "5")]
	protected virtual EntityView CreateEntityViewInstance(EntityViewAsset asset, [System.Runtime.InteropServices.Optional] Vector3? position, [System.Runtime.InteropServices.Optional] Quaternion? rotation)
	{
		return null;
	}

	[Token(Token = "0x60004B1")]
	[Address(RVA = "0x1050410", Offset = "0x1050410", VA = "0x1050410", Slot = "6")]
	protected virtual void DestroyEntityViewInstance(EntityView instance)
	{
	}

	[Token(Token = "0x60004B2")]
	[Address(RVA = "0x1050490", Offset = "0x1050490", VA = "0x1050490", Slot = "7")]
	protected virtual void ActivateMapEntityInstance(EntityView instance, [System.Runtime.InteropServices.Optional] Vector3? position, [System.Runtime.InteropServices.Optional] Quaternion? rotation)
	{
	}

	[Token(Token = "0x60004B3")]
	[Address(RVA = "0x10505D0", Offset = "0x10505D0", VA = "0x10505D0", Slot = "8")]
	protected virtual void DisableMapEntityInstance(EntityView instance)
	{
	}

	[Token(Token = "0x60004B4")]
	[Address(RVA = "0x1050600", Offset = "0x1050600", VA = "0x1050600", Slot = "9")]
	protected virtual void LoadMissingPrefab(EntityViewAsset viewAsset)
	{
	}

	[Token(Token = "0x60004B5")]
	[Address(RVA = "0x104FC1C", Offset = "0x104FC1C", VA = "0x104FC1C")]
	private static bool TryGetTransform(Frame f, EntityRef handle, out Vector3 position, out Quaternion rotation)
	{
		return default(bool);
	}

	[Token(Token = "0x60004B6")]
	[Address(RVA = "0x1050658", Offset = "0x1050658", VA = "0x1050658")]
	public EntityViewUpdater()
	{
	}

	[Token(Token = "0x60004B7")]
	[Address(RVA = "0x105073C", Offset = "0x105073C", VA = "0x105073C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDC680", Offset = "0xBDC680")]
	private void <Awake>b__25_0(CallbackGameStarted c)
	{
	}

	[Token(Token = "0x60004B8")]
	[Address(RVA = "0x1050778", Offset = "0x1050778", VA = "0x1050778")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDC690", Offset = "0xBDC690")]
	private void <Awake>b__25_1(CallbackUnitySceneLoadDone c)
	{
	}

	[Token(Token = "0x60004B9")]
	[Address(RVA = "0x10507B4", Offset = "0x10507B4", VA = "0x10507B4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDC6A0", Offset = "0xBDC6A0")]
	private void <Awake>b__25_2(CallbackUpdateView c)
	{
	}

	[Token(Token = "0x60004BA")]
	[Address(RVA = "0x10507EC", Offset = "0x10507EC", VA = "0x10507EC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDC6B0", Offset = "0xBDC6B0")]
	private bool <Awake>b__25_3(IDeterministicGame game)
	{
		return default(bool);
	}

	[Token(Token = "0x60004BB")]
	[Address(RVA = "0x10507FC", Offset = "0x10507FC", VA = "0x10507FC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDC6C0", Offset = "0xBDC6C0")]
	private void <Awake>b__25_4(CallbackGameDestroyed c)
	{
	}

	[Token(Token = "0x60004BC")]
	[Address(RVA = "0x1050838", Offset = "0x1050838", VA = "0x1050838")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDC6D0", Offset = "0xBDC6D0")]
	private bool <Awake>b__25_5(IDeterministicGame game)
	{
		return default(bool);
	}

	[Token(Token = "0x60004BD")]
	[Address(RVA = "0x1050848", Offset = "0x1050848", VA = "0x1050848")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDC6E0", Offset = "0xBDC6E0")]
	private void <Awake>b__25_6(CallbackUnitySceneLoadBegin c)
	{
	}

	[Token(Token = "0x60004BE")]
	[Address(RVA = "0x1050884", Offset = "0x1050884", VA = "0x1050884")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDC6F0", Offset = "0xBDC6F0")]
	private bool <Awake>b__25_7(IDeterministicGame game)
	{
		return default(bool);
	}
}
[Token(Token = "0x2000290")]
[ExecuteInEditMode]
public class MapData : MonoBehaviour
{
	[Token(Token = "0x2000291")]
	[Flags]
	public enum DrawMode
	{
		[Token(Token = "0x4000214")]
		PhysicsArea = 4,
		[Token(Token = "0x4000215")]
		PhysicsBuckets = 8,
		[Token(Token = "0x4000216")]
		NavMeshArea = 0x10,
		[Token(Token = "0x4000217")]
		NavMeshGrid = 0x20,
		[Token(Token = "0x4000218")]
		All = 0x3C
	}

	[Token(Token = "0x400020D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MapAsset Asset;

	[Token(Token = "0x400020E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Quantum.Inspector.EnumFlags]
	public DrawMode DrawGridMode;

	[Token(Token = "0x400020F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[Quantum.Inspector.EnumFlags]
	[@HideInInspector]
	public QuantumMapDataBakeFlags BakeAllMode;

	[Token(Token = "0x4000210")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<MonoBehaviour> StaticCollider2DReferences;

	[Token(Token = "0x4000211")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<MonoBehaviour> StaticCollider3DReferences;

	[Token(Token = "0x4000212")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<EntityView> MapEntityReferences;

	[Token(Token = "0x60004BF")]
	[Address(RVA = "0xF8D660", Offset = "0xF8D660", VA = "0xF8D660")]
	private void Update()
	{
	}

	[Token(Token = "0x60004C0")]
	[Address(RVA = "0xF8D6C8", Offset = "0xF8D6C8", VA = "0xF8D6C8")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x60004C1")]
	[Address(RVA = "0xF8D6D0", Offset = "0xF8D6D0", VA = "0xF8D6D0")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x60004C2")]
	[Address(RVA = "0xF8D6CC", Offset = "0xF8D6CC", VA = "0xF8D6CC")]
	private void DrawGizmos(bool selected)
	{
	}

	[Token(Token = "0x60004C3")]
	[Address(RVA = "0xF8D6D4", Offset = "0xF8D6D4", VA = "0xF8D6D4")]
	public MapData()
	{
	}
}
[Token(Token = "0x2000292")]
public static class MapDataBaker
{
	[Token(Token = "0x2000293")]
	public enum BuildTrigger
	{
		[Token(Token = "0x400021B")]
		SceneSave,
		[Token(Token = "0x400021C")]
		PlaymodeChange,
		[Token(Token = "0x400021D")]
		Build,
		[Token(Token = "0x400021E")]
		Manual
	}

	[Token(Token = "0x2000294")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBC6300", Offset = "0xBC6300")]
	private sealed class <>c__DisplayClass7_0
	{
		[Token(Token = "0x400021F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 s;

		[Token(Token = "0x60004D8")]
		[Address(RVA = "0x1035A20", Offset = "0x1035A20", VA = "0x1035A20")]
		public <>c__DisplayClass7_0()
		{
		}

		[Token(Token = "0x60004D9")]
		[Address(RVA = "0x1035A28", Offset = "0x1035A28", VA = "0x1035A28")]
		internal Vector3 <BakeColliders>b__1(FPVector2 x)
		{
			return default(Vector3);
		}
	}

	[Serializable]
	[Token(Token = "0x2000295")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBC6310", Offset = "0xBC6310")]
	private sealed class <>c
	{
		[Token(Token = "0x4000220")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4000221")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<Vector3, FPVector2> <>9__7_2;

		[Token(Token = "0x4000222")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Func<KeyValuePair<int, TriangleCCW[]>, int> <>9__7_0;

		[Token(Token = "0x4000223")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static Func<Type, int> <>9__9_0;

		[Token(Token = "0x4000224")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static Comparison<MapNavMeshUnity> <>9__14_0;

		[Token(Token = "0x4000225")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static Comparison<MapNavMeshDefinition> <>9__14_1;

		[Token(Token = "0x60004DB")]
		[Address(RVA = "0x10358C8", Offset = "0x10358C8", VA = "0x10358C8")]
		public <>c()
		{
		}

		[Token(Token = "0x60004DC")]
		[Address(RVA = "0x10358D0", Offset = "0x10358D0", VA = "0x10358D0")]
		internal FPVector2 <BakeColliders>b__7_2(Vector3 x)
		{
			return default(FPVector2);
		}

		[Token(Token = "0x60004DD")]
		[Address(RVA = "0x10358D8", Offset = "0x10358D8", VA = "0x10358D8")]
		internal int <BakeColliders>b__7_0(KeyValuePair<int, TriangleCCW[]> x)
		{
			return default(int);
		}

		[Token(Token = "0x60004DE")]
		[Address(RVA = "0x1035920", Offset = "0x1035920", VA = "0x1035920")]
		internal int <FindCallbackInstances>b__9_0(Type t)
		{
			return default(int);
		}

		[Token(Token = "0x60004DF")]
		[Address(RVA = "0x1035978", Offset = "0x1035978", VA = "0x1035978")]
		internal int <BakeNavMeshesLoop>b__14_0(MapNavMeshUnity a, MapNavMeshUnity b)
		{
			return default(int);
		}

		[Token(Token = "0x60004E0")]
		[Address(RVA = "0x10359CC", Offset = "0x10359CC", VA = "0x10359CC")]
		internal int <BakeNavMeshesLoop>b__14_1(MapNavMeshDefinition a, MapNavMeshDefinition b)
		{
			return default(int);
		}
	}

	[Token(Token = "0x2000296")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBC6320", Offset = "0xBC6320")]
	private sealed class <BakeNavMeshesLoop>d__14 : IEnumerable<NavMesh>, IEnumerable, IEnumerator<NavMesh>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000226")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000227")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private NavMesh <>2__current;

		[Token(Token = "0x4000228")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int <>l__initialThreadId;

		[Token(Token = "0x4000229")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private MapData data;

		[Token(Token = "0x400022A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public MapData <>3__data;

		[Token(Token = "0x400022B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private List<MapNavMesh.BakeData> <allBakeData>5__2;

		[Token(Token = "0x400022C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int <i>5__3;

		[Token(Token = "0x17000112")]
		private NavMesh System.Collections.Generic.IEnumerator<Quantum.NavMesh>.Current
		{
			[Token(Token = "0x60004E4")]
			[Address(RVA = "0x1036EDC", Offset = "0x1036EDC", VA = "0x1036EDC", Slot = "6")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000113")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60004E6")]
			[Address(RVA = "0x1036F24", Offset = "0x1036F24", VA = "0x1036F24", Slot = "9")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60004E1")]
		[Address(RVA = "0x1035A68", Offset = "0x1035A68", VA = "0x1035A68")]
		[DebuggerHidden]
		public <BakeNavMeshesLoop>d__14(int <>1__state)
		{
		}

		[Token(Token = "0x60004E2")]
		[Address(RVA = "0x1035AA0", Offset = "0x1035AA0", VA = "0x1035AA0", Slot = "7")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60004E3")]
		[Address(RVA = "0x1035AA4", Offset = "0x1035AA4", VA = "0x1035AA4", Slot = "8")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60004E5")]
		[Address(RVA = "0x1036EE4", Offset = "0x1036EE4", VA = "0x1036EE4", Slot = "10")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}

		[Token(Token = "0x60004E7")]
		[Address(RVA = "0x1036F2C", Offset = "0x1036F2C", VA = "0x1036F2C", Slot = "4")]
		[DebuggerHidden]
		private IEnumerator<NavMesh> System.Collections.Generic.IEnumerable<Quantum.NavMesh>.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x60004E8")]
		[Address(RVA = "0x1036FD4", Offset = "0x1036FD4", VA = "0x1036FD4", Slot = "5")]
		[DebuggerHidden]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}
	}

	[Token(Token = "0x2000297")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBC6330", Offset = "0xBC6330")]
	private sealed class <>c__DisplayClass15_0<T> where T : Component
	{
		[Token(Token = "0x400022D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public List<int> list0;

		[Token(Token = "0x400022E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public List<int> list1;

		[Token(Token = "0x60004E9")]
		public <>c__DisplayClass15_0()
		{
		}

		[Token(Token = "0x60004EA")]
		internal int <SortBySiblingIndex>b__0(T a, T b)
		{
			return default(int);
		}
	}

	[Token(Token = "0x4000219")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int NavMeshSerializationBufferSize;

	[Token(Token = "0x60004C4")]
	[Address(RVA = "0xF8D7B8", Offset = "0xF8D7B8", VA = "0xF8D7B8")]
	public static void BakeMapData(MapData data, bool inEditor, bool bakeColliders = true, bool bakePrototypes = true, QuantumMapDataBakeFlags bakeFlags = QuantumMapDataBakeFlags.None, BuildTrigger buildTrigger = BuildTrigger.Manual)
	{
	}

	[Token(Token = "0x60004C5")]
	[Address(RVA = "0xF91A98", Offset = "0xF91A98", VA = "0xF91A98")]
	public static void BakeMeshes(MapData data, bool inEditor)
	{
	}

	[Token(Token = "0x60004C6")]
	[Address(RVA = "0xF91A9C", Offset = "0xF91A9C", VA = "0xF91A9C")]
	public static IEnumerable<NavMesh> BakeNavMeshes(MapData data, bool inEditor)
	{
		return null;
	}

	[Token(Token = "0x60004C7")]
	[Address(RVA = "0xF92430", Offset = "0xF92430", VA = "0xF92430")]
	private static void RemoveLegacyResourcesBinaryFile(ref string name)
	{
	}

	[Token(Token = "0x60004C8")]
	[Address(RVA = "0xF92434", Offset = "0xF92434", VA = "0xF92434")]
	private static StaticColliderData GetStaticData(GameObject gameObject, QuantumStaticColliderSettings settings, int colliderId)
	{
		return default(StaticColliderData);
	}

	[Token(Token = "0x60004C9")]
	[Address(RVA = "0xF8E788", Offset = "0xF8E788", VA = "0xF8E788")]
	public static void BakeColliders(MapData data, bool inEditor)
	{
	}

	[Token(Token = "0x60004CA")]
	[Address(RVA = "0xF91604", Offset = "0xF91604", VA = "0xF91604")]
	public static void BakePrototypes(MapData data)
	{
	}

	[Token(Token = "0x60004CB")]
	[Address(RVA = "0xF927D4", Offset = "0xF927D4", VA = "0xF927D4")]
	private static IEnumerable<Type> FindCallbackInstances()
	{
		return null;
	}

	[Token(Token = "0x60004CC")]
	[Address(RVA = "0xF8D9A0", Offset = "0xF8D9A0", VA = "0xF8D9A0")]
	private static void InvokeCallbacks(string callbackName, MapData data, BuildTrigger buildTrigger, QuantumMapDataBakeFlags bakeFlags)
	{
	}

	[Token(Token = "0x60004CD")]
	[Address(RVA = "0xF8DF78", Offset = "0xF8DF78", VA = "0xF8DF78")]
	private static void InvokeCallbacks(string callbackName, MapData data)
	{
	}

	[Token(Token = "0x60004CE")]
	[Address(RVA = "0xF929B8", Offset = "0xF929B8", VA = "0xF929B8")]
	private static void InvokeCallbacks(string callbackName, MapData data, List<MapNavMesh.BakeData> bakeData)
	{
	}

	[Token(Token = "0x60004CF")]
	[Address(RVA = "0xF91E60", Offset = "0xF91E60", VA = "0xF91E60")]
	private static void InvokeCallbacks(string callbackName, MapData data, List<NavMesh> navmeshes)
	{
	}

	[Token(Token = "0x60004D0")]
	[Address(RVA = "0xF91DF4", Offset = "0xF91DF4", VA = "0xF91DF4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xBDC700", Offset = "0xBDC700")]
	private static IEnumerable<NavMesh> BakeNavMeshesLoop(MapData data)
	{
		return null;
	}

	[Token(Token = "0x60004D1")]
	private static void SortBySiblingIndex<T>(T[] array) where T : Component
	{
	}

	[Token(Token = "0x60004D2")]
	[Address(RVA = "0xF92F88", Offset = "0xF92F88", VA = "0xF92F88")]
	private static List<int> GetSiblingIndexPath(Transform t, List<int> buffer)
	{
		return null;
	}

	[Token(Token = "0x60004D3")]
	[Address(RVA = "0xF93098", Offset = "0xF93098", VA = "0xF93098")]
	private static int CompareLists(List<int> left, List<int> right)
	{
		return default(int);
	}

	[Token(Token = "0x60004D4")]
	[Address(RVA = "0xF924E8", Offset = "0xF924E8", VA = "0xF924E8")]
	private static MapStaticCollider2D BakeStaticEdge2D(Transform t, FPVector2 positionOffset, FP rotationOffset, FPVector2 vertexA, FPVector2 vertexB, FP height, QuantumStaticColliderSettings settings, int colliderId)
	{
		return default(MapStaticCollider2D);
	}

	[Token(Token = "0x60004D5")]
	public static List<T> FindLocalObjects<T>(Scene scene) where T : Component
	{
		return null;
	}

	[Token(Token = "0x60004D6")]
	[Address(RVA = "0xF931B4", Offset = "0xF931B4", VA = "0xF931B4")]
	public static List<Component> FindLocalObjects(Scene scene, Type type)
	{
		return null;
	}
}
[Token(Token = "0x2000298")]
public abstract class MapDataBakerCallback
{
	[Token(Token = "0x60004EB")]
	public abstract void OnBeforeBake(MapData data);

	[Token(Token = "0x60004EC")]
	[Address(RVA = "0xF93370", Offset = "0xF93370", VA = "0xF93370", Slot = "5")]
	public virtual void OnBeforeBake(MapData data, MapDataBaker.BuildTrigger buildTrigger, QuantumMapDataBakeFlags bakeFlags)
	{
	}

	[Token(Token = "0x60004ED")]
	public abstract void OnBake(MapData data);

	[Token(Token = "0x60004EE")]
	[Address(RVA = "0xF93374", Offset = "0xF93374", VA = "0xF93374", Slot = "7")]
	public virtual void OnBeforeBakeNavMesh(MapData data)
	{
	}

	[Token(Token = "0x60004EF")]
	[Address(RVA = "0xF93378", Offset = "0xF93378", VA = "0xF93378", Slot = "8")]
	public virtual void OnCollectNavMeshBakeData(MapData data, List<MapNavMesh.BakeData> navMeshBakeData)
	{
	}

	[Token(Token = "0x60004F0")]
	[Address(RVA = "0xF9337C", Offset = "0xF9337C", VA = "0xF9337C", Slot = "9")]
	public virtual void OnCollectNavMeshes(MapData data, List<NavMesh> navmeshes)
	{
	}

	[Token(Token = "0x60004F1")]
	[Address(RVA = "0xF93380", Offset = "0xF93380", VA = "0xF93380", Slot = "10")]
	public virtual void OnBakeNavMesh(MapData data)
	{
	}

	[Token(Token = "0x60004F2")]
	[Address(RVA = "0xF93384", Offset = "0xF93384", VA = "0xF93384")]
	protected MapDataBakerCallback()
	{
	}
}
[Token(Token = "0x2000299")]
public class MapDataBakerCallbackAttribute : Attribute
{
	[Token(Token = "0x400022F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCD538", Offset = "0xBCD538")]
	private int <InvokeOrder>k__BackingField;

	[Token(Token = "0x17000114")]
	public int InvokeOrder
	{
		[Token(Token = "0x60004F3")]
		[Address(RVA = "0xF9338C", Offset = "0xF9338C", VA = "0xF9338C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDC7D0", Offset = "0xBDC7D0")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60004F4")]
		[Address(RVA = "0xF93394", Offset = "0xF93394", VA = "0xF93394")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDC7E0", Offset = "0xBDC7E0")]
		private set
		{
		}
	}

	[Token(Token = "0x60004F5")]
	[Address(RVA = "0xF9339C", Offset = "0xF9339C", VA = "0xF9339C")]
	public MapDataBakerCallbackAttribute(int invokeOrder)
	{
	}
}
[Token(Token = "0x200029A")]
public static class MapNavMesh
{
	[Serializable]
	[Token(Token = "0x200029B")]
	public enum FindClosestTriangleCalculation
	{
		[Token(Token = "0x4000235")]
		BruteForce,
		[Token(Token = "0x4000236")]
		SpiralOut
	}

	[Serializable]
	[Token(Token = "0x200029C")]
	public class BakeData
	{
		[Token(Token = "0x4000237")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string Name;

		[Token(Token = "0x4000238")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 Position;

		[Token(Token = "0x4000239")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public FP AgentRadius;

		[Token(Token = "0x400023A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<string> Regions;

		[Token(Token = "0x400023B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public MapNavMeshVertex[] Vertices;

		[Token(Token = "0x400023C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public MapNavMeshTriangle[] Triangles;

		[Token(Token = "0x400023D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public MapNavMeshLink[] Links;

		[Token(Token = "0x400023E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public FindClosestTriangleCalculation ClosestTriangleCalculation;

		[Token(Token = "0x400023F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public int ClosestTriangleCalculationDepth;

		[Token(Token = "0x4000240")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public bool EnableQuantum_XY;

		[Token(Token = "0x4000241")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
		public bool LinkErrorCorrection;

		[Token(Token = "0x60004FF")]
		[Address(RVA = "0x1037450", Offset = "0x1037450", VA = "0x1037450")]
		public BakeData()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x200029D")]
	public class ImportSettings
	{
		[Token(Token = "0x4000242")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBCD548", Offset = "0xBCD548")]
		public bool WeldIdenticalVertices;

		[Token(Token = "0x4000243")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBCD580", Offset = "0xBCD580")]
		public float WeldVertexEpsilon;

		[Token(Token = "0x4000244")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBCD5B8", Offset = "0xBCD5B8")]
		public bool DelaunayTriangulation;

		[Token(Token = "0x4000245")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBCD5F0", Offset = "0xBCD5F0")]
		public bool DelaunayTriangulationRestrictToPlanes;

		[Token(Token = "0x4000246")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBCD628", Offset = "0xBCD628")]
		public bool FixTrianglesOnEdges;

		[Token(Token = "0x4000247")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBCD660", Offset = "0xBCD660")]
		public float FixTrianglesOnEdgesEpsilon;

		[Token(Token = "0x4000248")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBCD698", Offset = "0xBCD698")]
		public bool LinkErrorCorrection;

		[Token(Token = "0x4000249")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBCD6D0", Offset = "0xBCD6D0")]
		public FindClosestTriangleCalculation ClosestTriangleCalculation;

		[Token(Token = "0x400024A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBCD708", Offset = "0xBCD708")]
		public int ClosestTriangleCalculationDepth;

		[Token(Token = "0x400024B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBCD740", Offset = "0xBCD740")]
		public bool EnableQuantum_XY;

		[Token(Token = "0x400024C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBCD778", Offset = "0xBCD778")]
		public FP MinAgentRadius;

		[Token(Token = "0x400024D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBCD7B0", Offset = "0xBCD7B0")]
		public bool ImportRegions;

		[Token(Token = "0x400024E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBCD7E8", Offset = "0xBCD7E8")]
		public float RegionDetectionMargin;

		[Token(Token = "0x400024F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public List<int> RegionAreaIds;

		[Token(Token = "0x6000500")]
		[Address(RVA = "0x1037EB0", Offset = "0x1037EB0", VA = "0x1037EB0")]
		public ImportSettings()
		{
		}
	}

	[Token(Token = "0x200029E")]
	public static class ImportUtils
	{
		[Serializable]
		[Token(Token = "0x200029F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBC6340", Offset = "0xBC6340")]
		private sealed class <>c
		{
			[Token(Token = "0x4000250")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000251")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<int, string> <>9__2_0;

			[Token(Token = "0x6000509")]
			[Address(RVA = "0x1068FD8", Offset = "0x1068FD8", VA = "0x1068FD8")]
			public <>c()
			{
			}

			[Token(Token = "0x600050A")]
			[Address(RVA = "0x1068FE0", Offset = "0x1068FE0", VA = "0x1068FE0")]
			internal string <ImportRegions>b__2_0(int sdfdsf)
			{
				return null;
			}
		}

		[Token(Token = "0x6000501")]
		[Address(RVA = "0x1037EF8", Offset = "0x1037EF8", VA = "0x1037EF8")]
		public static void WeldIdenticalVertices(ref MapNavMeshVertex[] vertices, ref MapNavMeshTriangle[] triangles, float cleanupEpsilon, Action<float> reporter)
		{
		}

		[Token(Token = "0x6000502")]
		[Address(RVA = "0x103817C", Offset = "0x103817C", VA = "0x103817C")]
		public static void RemoveUnusedVertices(ref MapNavMeshVertex[] vertices, ref MapNavMeshTriangle[] triangles, Action<float> reporter)
		{
		}

		[Token(Token = "0x6000503")]
		[Address(RVA = "0x1038458", Offset = "0x1038458", VA = "0x1038458")]
		public static void ImportRegions(Scene scene, ref MapNavMeshVertex[] vertices, ref MapNavMeshTriangle[] triangles, int t, ref List<string> regionMap, float regionDetectionMargin)
		{
		}

		[Token(Token = "0x6000504")]
		[Address(RVA = "0x1039378", Offset = "0x1039378", VA = "0x1039378")]
		public static void FixTrianglesOnEdges(ref MapNavMeshVertex[] vertices, ref MapNavMeshTriangle[] triangles, int t, int v0, float epsilon)
		{
		}

		[Token(Token = "0x6000505")]
		[Address(RVA = "0x103947C", Offset = "0x103947C", VA = "0x103947C")]
		public static int FindTriangleOnEdge(ref MapNavMeshVertex[] vertices, ref MapNavMeshTriangle[] triangles, int tri, int v0, int v1, float epsilon, out int triangleVertexIndex)
		{
			return default(int);
		}

		[Token(Token = "0x6000506")]
		[Address(RVA = "0x10399A0", Offset = "0x10399A0", VA = "0x10399A0")]
		public static bool IsPointBetween(Vector3 p, Vector3 v0, Vector3 v1, float epsilon)
		{
			return default(bool);
		}

		[Token(Token = "0x6000507")]
		[Address(RVA = "0x1039788", Offset = "0x1039788", VA = "0x1039788")]
		public static void SplitTriangle(ref MapNavMeshTriangle[] triangles, int t, int v0, int vNew)
		{
		}
	}

	[Token(Token = "0x20002A0")]
	private struct GizmoNavmeshData
	{
		[Token(Token = "0x4000252")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Mesh GizmoMesh;

		[Token(Token = "0x4000253")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public NavMeshRegionMask CurrentRegionMask;
	}

	[Token(Token = "0x20002A1")]
	public static class DelaunayTriangulation
	{
		[Token(Token = "0x20002A2")]
		public class HalfEdge
		{
			[Token(Token = "0x4000254")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public HalfEdgeVertex v;

			[Token(Token = "0x4000255")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public HalfEdge nextEdge;

			[Token(Token = "0x4000256")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public HalfEdge oppositeEdge;

			[Token(Token = "0x4000257")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public HalfEdge prevEdge;

			[Token(Token = "0x4000258")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Triangle t;

			[Token(Token = "0x6000512")]
			[Address(RVA = "0x1068EE4", Offset = "0x1068EE4", VA = "0x1068EE4")]
			public HalfEdge(HalfEdgeVertex v)
			{
			}
		}

		[Token(Token = "0x20002A3")]
		public class HalfEdgeVertex
		{
			[Token(Token = "0x4000259")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vector3 position;

			[Token(Token = "0x400025A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public int index;

			[Token(Token = "0x400025B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public HalfEdge edge;

			[Token(Token = "0x6000513")]
			[Address(RVA = "0x1068F10", Offset = "0x1068F10", VA = "0x1068F10")]
			public HalfEdgeVertex(Vector3 position, int index)
			{
			}
		}

		[Token(Token = "0x20002A4")]
		public class Triangle
		{
			[Token(Token = "0x400025C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public HalfEdgeVertex v1;

			[Token(Token = "0x400025D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public HalfEdgeVertex v2;

			[Token(Token = "0x400025E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public HalfEdgeVertex v3;

			[Token(Token = "0x400025F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public int t;

			[Token(Token = "0x4000260")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public HalfEdge edge;

			[Token(Token = "0x6000514")]
			[Address(RVA = "0x1068F60", Offset = "0x1068F60", VA = "0x1068F60")]
			public void ChangeOrientation()
			{
			}

			[Token(Token = "0x6000515")]
			[Address(RVA = "0x1068F70", Offset = "0x1068F70", VA = "0x1068F70")]
			public Triangle()
			{
			}
		}

		[Token(Token = "0x600050B")]
		[Address(RVA = "0x1037458", Offset = "0x1037458", VA = "0x1037458")]
		public static List<Triangle> TriangulateByFlippingEdges(List<Triangle> triangles, bool retrictToPlanes, Action reporter)
		{
			return null;
		}

		[Token(Token = "0x600050C")]
		[Address(RVA = "0x10377B8", Offset = "0x10377B8", VA = "0x10377B8")]
		private static List<HalfEdge> TransformFromTriangleToHalfEdge(List<Triangle> triangles)
		{
			return null;
		}

		[Token(Token = "0x600050D")]
		[Address(RVA = "0x1037D7C", Offset = "0x1037D7C", VA = "0x1037D7C")]
		private static void OrientTrianglesClockwise(List<Triangle> triangles)
		{
		}

		[Token(Token = "0x600050E")]
		[Address(RVA = "0x1037E78", Offset = "0x1037E78", VA = "0x1037E78")]
		private static bool IsTriangleOrientedClockwise(Vector2 p1, Vector2 p2, Vector2 p3)
		{
			return default(bool);
		}

		[Token(Token = "0x600050F")]
		[Address(RVA = "0x1037AD8", Offset = "0x1037AD8", VA = "0x1037AD8")]
		private static float IsPointInsideOutsideOrOnCircle(Vector2 aVec, Vector2 bVec, Vector2 cVec, Vector2 dVec)
		{
			return default(float);
		}

		[Token(Token = "0x6000510")]
		[Address(RVA = "0x1037B5C", Offset = "0x1037B5C", VA = "0x1037B5C")]
		private static bool IsQuadrilateralConvex(Vector2 a, Vector2 b, Vector2 c, Vector2 d)
		{
			return default(bool);
		}

		[Token(Token = "0x6000511")]
		[Address(RVA = "0x1037C8C", Offset = "0x1037C8C", VA = "0x1037C8C")]
		private static void FlipEdge(HalfEdge one)
		{
		}
	}

	[Token(Token = "0x20002A5")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBC6350", Offset = "0xBC6350")]
	private sealed class <>c__DisplayClass5_0
	{
		[Token(Token = "0x4000261")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ProgressBar progressBar;

		[Token(Token = "0x6000516")]
		[Address(RVA = "0x10373A8", Offset = "0x10373A8", VA = "0x10373A8")]
		public <>c__DisplayClass5_0()
		{
		}

		[Token(Token = "0x6000517")]
		[Address(RVA = "0x10373B0", Offset = "0x10373B0", VA = "0x10373B0")]
		internal void <ImportFromUnity>b__0(float p)
		{
		}

		[Token(Token = "0x6000518")]
		[Address(RVA = "0x10373CC", Offset = "0x10373CC", VA = "0x10373CC")]
		internal void <ImportFromUnity>b__1(float p)
		{
		}

		[Token(Token = "0x6000519")]
		[Address(RVA = "0x10373E8", Offset = "0x10373E8", VA = "0x10373E8")]
		internal void <ImportFromUnity>b__2(float p)
		{
		}

		[Token(Token = "0x600051A")]
		[Address(RVA = "0x1037404", Offset = "0x1037404", VA = "0x1037404")]
		internal void <ImportFromUnity>b__4()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20002A6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBC6360", Offset = "0xBC6360")]
	private sealed class <>c
	{
		[Token(Token = "0x4000262")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4000263")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Comparison<string> <>9__5_3;

		[Token(Token = "0x4000264")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Func<NavMeshVertex, Vector3> <>9__11_0;

		[Token(Token = "0x4000265")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static Func<NavMeshTriangle, IEnumerable<int>> <>9__11_1;

		[Token(Token = "0x600051C")]
		[Address(RVA = "0x1037038", Offset = "0x1037038", VA = "0x1037038")]
		public <>c()
		{
		}

		[Token(Token = "0x600051D")]
		[Address(RVA = "0x1037040", Offset = "0x1037040", VA = "0x1037040")]
		internal int <ImportFromUnity>b__5_3(string a, string b)
		{
			return default(int);
		}

		[Token(Token = "0x600051E")]
		[Address(RVA = "0x1037050", Offset = "0x1037050", VA = "0x1037050")]
		internal Vector3 <CreateGizmoMesh>b__11_0(NavMeshVertex x)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600051F")]
		[Address(RVA = "0x1037084", Offset = "0x1037084", VA = "0x1037084")]
		internal IEnumerable<int> <CreateGizmoMesh>b__11_1(NavMeshTriangle x)
		{
			return null;
		}

		[Token(Token = "0x6000520")]
		[Address(RVA = "0x1037140", Offset = "0x1037140", VA = "0x1037140")]
		internal Type <.cctor>b__20_0()
		{
			return null;
		}

		[Token(Token = "0x6000521")]
		[Address(RVA = "0x1037188", Offset = "0x1037188", VA = "0x1037188")]
		internal Type <.cctor>b__20_1()
		{
			return null;
		}
	}

	[Token(Token = "0x20002A7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBC6370", Offset = "0xBC6370")]
	private sealed class <>c__DisplayClass11_0
	{
		[Token(Token = "0x4000266")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public NavMeshRegionMask regionMask;

		[Token(Token = "0x6000522")]
		[Address(RVA = "0x10371D0", Offset = "0x10371D0", VA = "0x10371D0")]
		public <>c__DisplayClass11_0()
		{
		}

		[Token(Token = "0x6000523")]
		[Address(RVA = "0x10371D8", Offset = "0x10371D8", VA = "0x10371D8")]
		internal IEnumerable<int> <CreateGizmoMesh>b__2(NavMeshTriangle x)
		{
			return null;
		}

		[Token(Token = "0x6000524")]
		[Address(RVA = "0x10372C0", Offset = "0x10372C0", VA = "0x10372C0")]
		internal IEnumerable<int> <CreateGizmoMesh>b__3(NavMeshTriangle x)
		{
			return null;
		}
	}

	[Token(Token = "0x4000230")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static float DefaultMinAgentRadius;

	[Token(Token = "0x4000231")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Dictionary<string, GizmoNavmeshData> _navmeshGizmoMap;

	[Token(Token = "0x4000232")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static Lazy<Type> _navMeshSurfaceType;

	[Token(Token = "0x4000233")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static Lazy<Type> _navMeshAssetManagerType;

	[Token(Token = "0x17000115")]
	public static Type NavMeshSurfaceType
	{
		[Token(Token = "0x60004FC")]
		[Address(RVA = "0xF95594", Offset = "0xF95594", VA = "0xF95594")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000116")]
	public static Type NavMeshAssetManagerType
	{
		[Token(Token = "0x60004FD")]
		[Address(RVA = "0xF95EFC", Offset = "0xF95EFC", VA = "0xF95EFC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60004F6")]
	[Address(RVA = "0xF933C8", Offset = "0xF933C8", VA = "0xF933C8")]
	public static BakeData ImportFromUnity(Scene scene, ImportSettings settings, string name)
	{
		return null;
	}

	[Token(Token = "0x60004F7")]
	[Address(RVA = "0xF95208", Offset = "0xF95208", VA = "0xF95208")]
	public static FP FindSmallestAgentRadius(GameObject[] navmeshSurfaces)
	{
		return default(FP);
	}

	[Token(Token = "0x60004F8")]
	[Address(RVA = "0xF95618", Offset = "0xF95618", VA = "0xF95618")]
	public static void InvalidateGizmos()
	{
	}

	[Token(Token = "0x60004F9")]
	[Address(RVA = "0xF956D0", Offset = "0xF956D0", VA = "0xF956D0")]
	public static void CreateAndDrawGizmoMesh(NavMesh navmesh, NavMeshRegionMask regionMask)
	{
	}

	[Token(Token = "0x60004FA")]
	[Address(RVA = "0xF95744", Offset = "0xF95744", VA = "0xF95744")]
	public static Mesh CreateGizmoMesh(NavMesh navmesh, NavMeshRegionMask regionMask)
	{
		return null;
	}

	[Token(Token = "0x60004FB")]
	[Address(RVA = "0xF95CA8", Offset = "0xF95CA8", VA = "0xF95CA8")]
	public static void DrawGizmoMesh(Mesh mesh)
	{
	}
}
[Token(Token = "0x20002A8")]
public class MapNavMeshDebugDrawer : MonoBehaviour
{
	[Token(Token = "0x4000267")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AssetRefBinaryData BinaryAsset;

	[Token(Token = "0x4000268")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool DrawBorders;

	[Token(Token = "0x4000269")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool DrawLinks;

	[Token(Token = "0x400026A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
	public bool DrawBorderNormals;

	[Token(Token = "0x400026B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x23")]
	public bool DrawVertexNormals;

	[Token(Token = "0x400026C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool DrawTriangleNeighbors;

	[Token(Token = "0x400026D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
	public bool DrawVertexIds;

	[Token(Token = "0x400026E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x26")]
	public bool DrawTrianglesIds;

	[Token(Token = "0x6000525")]
	[Address(RVA = "0x100BBBC", Offset = "0x100BBBC", VA = "0x100BBBC")]
	public MapNavMeshDebugDrawer()
	{
	}
}
[Serializable]
[Token(Token = "0x20002A9")]
public struct MapNavMeshTriangle
{
	[Token(Token = "0x400026F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public string Id;

	[Token(Token = "0x4000270")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public string[] VertexIds;

	[Token(Token = "0x4000271")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int[] VertexIds2;

	[Token(Token = "0x4000272")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int Area;

	[Token(Token = "0x4000273")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string RegionId;

	[Token(Token = "0x4000274")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public FP Cost;
}
[Serializable]
[Token(Token = "0x20002AA")]
public struct MapNavMeshVertex
{
	[Token(Token = "0x4000275")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public string Id;

	[Token(Token = "0x4000276")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public Vector3 Position;

	[Token(Token = "0x4000277")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<int> Neighbors;

	[Token(Token = "0x4000278")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<int> Triangles;
}
[Serializable]
[Token(Token = "0x20002AB")]
public struct MapNavMeshLink
{
	[Token(Token = "0x4000279")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 Start;

	[Token(Token = "0x400027A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Vector3 End;

	[Token(Token = "0x400027B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool Bidirectional;

	[Token(Token = "0x400027C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float CostOverride;

	[Token(Token = "0x400027D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string RegionId;

	[Token(Token = "0x400027E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string Name;
}
[Token(Token = "0x20002AC")]
[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xBC6380", Offset = "0xBC6380")]
public class MapNavMeshBakeData : MapNavMesh.BakeData
{
	[Token(Token = "0x6000526")]
	[Address(RVA = "0xF96124", Offset = "0xF96124", VA = "0xF96124")]
	public MapNavMeshBakeData()
	{
	}
}
[Token(Token = "0x20002AD")]
public class MapNavMeshDefinition : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20002AE")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xBC63B8", Offset = "0xBC63B8")]
	public enum FindClosestTriangleCalculation
	{
		[Token(Token = "0x4000293")]
		BruteForce,
		[Token(Token = "0x4000294")]
		SpiralOut
	}

	[Token(Token = "0x20002AF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBC63F0", Offset = "0xBC63F0")]
	private sealed class <>c__DisplayClass23_0
	{
		[Token(Token = "0x4000295")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string id;

		[Token(Token = "0x600052F")]
		[Address(RVA = "0x11DA42C", Offset = "0x11DA42C", VA = "0x11DA42C")]
		public <>c__DisplayClass23_0()
		{
		}

		[Token(Token = "0x6000530")]
		[Address(RVA = "0x11DA434", Offset = "0x11DA434", VA = "0x11DA434")]
		internal bool <GetVertexIndex>b__0(MapNavMeshVertex x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x400027F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] NavMeshSurfaces;

	[Token(Token = "0x4000280")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public FP AgentRadius;

	[Token(Token = "0x4000281")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool WeldIdenticalVertices;

	[Token(Token = "0x4000282")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float WeldVertexEpsilon;

	[Token(Token = "0x4000283")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool DelaunayTriangulation;

	[Token(Token = "0x4000284")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public bool DelaunayTriangulationRestrictToPlanes;

	[Token(Token = "0x4000285")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
	public bool FixTrianglesOnEdges;

	[Token(Token = "0x4000286")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float FixTrianglesOnEdgesEpsilon;

	[Token(Token = "0x4000287")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool ImportRegions;

	[Token(Token = "0x4000288")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float RegionDetectionMargin;

	[Token(Token = "0x4000289")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public List<int> RegionAreaIds;

	[Token(Token = "0x400028A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public MapNavMesh.FindClosestTriangleCalculation ClosestTriangleCalculation;

	[Token(Token = "0x400028B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public int ClosestTriangleCalculationDepth;

	[Token(Token = "0x400028C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool LinkErrorCorrection;

	[Token(Token = "0x400028D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
	public bool EnableQuantum_XY;

	[Token(Token = "0x400028E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[Quantum.Inspector.ReadOnly]
	[QuantumInspector]
	public MapNavMeshVertex[] Vertices;

	[Token(Token = "0x400028F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[Quantum.Inspector.ReadOnly]
	[QuantumInspector]
	public MapNavMeshTriangle[] Triangles;

	[Token(Token = "0x4000290")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[QuantumInspector]
	[Quantum.Inspector.ReadOnly]
	public List<string> Regions;

	[Token(Token = "0x4000291")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[Quantum.Inspector.ReadOnly]
	[QuantumInspector]
	public MapNavMeshLink[] Links;

	[Token(Token = "0x6000527")]
	[Address(RVA = "0x100BBCC", Offset = "0x100BBCC", VA = "0x100BBCC")]
	public static MapNavMesh.BakeData CreateBakeData(MapNavMeshDefinition definition)
	{
		return null;
	}

	[Token(Token = "0x6000528")]
	[Address(RVA = "0x100BCAC", Offset = "0x100BCAC", VA = "0x100BCAC")]
	public static MapNavMesh.ImportSettings CreateImportSettings(MapNavMeshDefinition definition)
	{
		return null;
	}

	[Token(Token = "0x6000529")]
	[Address(RVA = "0x100BDC4", Offset = "0x100BDC4", VA = "0x100BDC4")]
	public MapNavMeshVertex GetVertex(string id)
	{
		return default(MapNavMeshVertex);
	}

	[Token(Token = "0x600052A")]
	[Address(RVA = "0x100BEAC", Offset = "0x100BEAC", VA = "0x100BEAC")]
	public int GetVertexIndex(string id)
	{
		return default(int);
	}

	[Token(Token = "0x600052B")]
	[Address(RVA = "0x100BF98", Offset = "0x100BF98", VA = "0x100BF98")]
	public bool Contains(FPVector2 point)
	{
		return default(bool);
	}

	[Token(Token = "0x600052C")]
	[Address(RVA = "0x100BFC8", Offset = "0x100BFC8", VA = "0x100BFC8")]
	public bool Contains(Vector3 point)
	{
		return default(bool);
	}

	[Token(Token = "0x600052D")]
	[Address(RVA = "0x100C240", Offset = "0x100C240", VA = "0x100C240")]
	public MapNavMeshDefinition()
	{
	}

	[Token(Token = "0x600052E")]
	[Address(RVA = "0x100C27C", Offset = "0x100C27C", VA = "0x100C27C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDC7F0", Offset = "0xBDC7F0")]
	private Vector3 <Contains>b__25_0(string x)
	{
		return default(Vector3);
	}
}
[Token(Token = "0x20002B0")]
public class MapNavMeshRegion : MonoBehaviour
{
	[Token(Token = "0x20002B1")]
	public enum RegionCastType
	{
		[Token(Token = "0x400029B")]
		CastRegion,
		[Token(Token = "0x400029C")]
		NoRegion
	}

	[Token(Token = "0x4000296")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBCD900", Offset = "0xBCD900")]
	public string Id;

	[Token(Token = "0x4000297")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBCD938", Offset = "0xBCD938")]
	public RegionCastType CastRegion;

	[Token(Token = "0x4000298")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBCD970", Offset = "0xBCD970")]
	public FP Cost;

	[Token(Token = "0x4000299")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool OverwriteCost;

	[Token(Token = "0x6000531")]
	[Address(RVA = "0x100C2A4", Offset = "0x100C2A4", VA = "0x100C2A4")]
	public MapNavMeshRegion()
	{
	}
}
[Token(Token = "0x20002B2")]
public class MapNavMeshUnity : MonoBehaviour
{
	[Token(Token = "0x400029D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] NavMeshSurfaces;

	[Token(Token = "0x400029E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MapNavMesh.ImportSettings Settings;

	[Token(Token = "0x6000532")]
	[Address(RVA = "0x100C2B4", Offset = "0x100C2B4", VA = "0x100C2B4")]
	public MapNavMeshUnity()
	{
	}
}
[Token(Token = "0x20002B3")]
public class QuantumMultiClientPlayer : MonoBehaviour, IConnectionCallbacks, IMatchmakingCallbacks, IInRoomCallbacks, IOnEventCallback
{
	[Token(Token = "0x400029F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RuntimeConfig RuntimeConfig;

	[Token(Token = "0x40002A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public RuntimePlayer RuntimePlayer;

	[Token(Token = "0x40002A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public QuantumEditorSettings GizmoSettings;

	[Token(Token = "0x40002A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int PlayerCount;

	[Token(Token = "0x40002A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool IsFirstPlayer;

	[Token(Token = "0x40002A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AssetGuid MapGuid;

	[Token(Token = "0x40002A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject PlayerInputTemplate;

	[Token(Token = "0x40002A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public EntityViewUpdater EntityViewUpdaterTemplate;

	[Token(Token = "0x40002A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Action<QuantumMultiClientPlayer> OnPlayerQuitCallback;

	[Token(Token = "0x40002A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Action<QuantumMultiClientPlayer> OnPlayerCreatedCallback;

	[Token(Token = "0x40002A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private QuantumLoadBalancingClient _client;

	[Token(Token = "0x40002AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private EnterRoomParams _enterRoomParams;

	[Token(Token = "0x40002AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private QuantumMultiClientPlayerView _ui;

	[Token(Token = "0x40002AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private QuantumRunner _runner;

	[Token(Token = "0x40002AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private GameObject _input;

	[Token(Token = "0x40002AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private EntityViewUpdater _evu;

	[Token(Token = "0x40002AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private DispatcherSubscription _quantumGameStartedSubscription;

	[Token(Token = "0x17000117")]
	public string RunnerId
	{
		[Token(Token = "0x6000533")]
		[Address(RVA = "0x12477E8", Offset = "0x12477E8", VA = "0x12477E8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000118")]
	public GameObject Input
	{
		[Token(Token = "0x6000534")]
		[Address(RVA = "0x1247800", Offset = "0x1247800", VA = "0x1247800")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000535")]
	[Address(RVA = "0x1247808", Offset = "0x1247808", VA = "0x1247808")]
	public void Update()
	{
	}

	[Token(Token = "0x6000536")]
	[Address(RVA = "0x124781C", Offset = "0x124781C", VA = "0x124781C")]
	public void BindView(QuantumMultiClientPlayerView view)
	{
	}

	[Token(Token = "0x6000537")]
	[Address(RVA = "0x1247914", Offset = "0x1247914", VA = "0x1247914")]
	public void Run(AppSettings appSettings)
	{
	}

	[Token(Token = "0x6000538")]
	[Address(RVA = "0x1247A28", Offset = "0x1247A28", VA = "0x1247A28")]
	public void Stop()
	{
	}

	[Token(Token = "0x6000539")]
	[Address(RVA = "0x1247C90", Offset = "0x1247C90", VA = "0x1247C90")]
	private void OnQuantumGameStarted(QuantumGame game)
	{
	}

	[Token(Token = "0x600053A")]
	[Address(RVA = "0x1247D7C", Offset = "0x1247D7C", VA = "0x1247D7C")]
	private void OnInputToggle(bool isEnabled)
	{
	}

	[Token(Token = "0x600053B")]
	[Address(RVA = "0x1247E20", Offset = "0x1247E20", VA = "0x1247E20")]
	private void OnViewToggle(bool isEnabled)
	{
	}

	[Token(Token = "0x600053C")]
	[Address(RVA = "0x1247E5C", Offset = "0x1247E5C", VA = "0x1247E5C")]
	private void OnGizmoToggle(bool isEnabled)
	{
	}

	[Token(Token = "0x600053D")]
	[Address(RVA = "0x1247E80", Offset = "0x1247E80", VA = "0x1247E80")]
	private void OnQuitClicked()
	{
	}

	[Token(Token = "0x600053E")]
	[Address(RVA = "0x1247E84", Offset = "0x1247E84", VA = "0x1247E84", Slot = "4")]
	public void OnConnected()
	{
	}

	[Token(Token = "0x600053F")]
	[Address(RVA = "0x1247E88", Offset = "0x1247E88", VA = "0x1247E88", Slot = "5")]
	public void OnConnectedToMaster()
	{
	}

	[Token(Token = "0x6000540")]
	[Address(RVA = "0x124820C", Offset = "0x124820C", VA = "0x124820C", Slot = "11")]
	public void OnCreatedRoom()
	{
	}

	[Token(Token = "0x6000541")]
	[Address(RVA = "0x1248210", Offset = "0x1248210", VA = "0x1248210", Slot = "12")]
	public void OnCreateRoomFailed(short returnCode, string message)
	{
	}

	[Token(Token = "0x6000542")]
	[Address(RVA = "0x12482DC", Offset = "0x12482DC", VA = "0x12482DC", Slot = "9")]
	public void OnCustomAuthenticationFailed(string debugMessage)
	{
	}

	[Token(Token = "0x6000543")]
	[Address(RVA = "0x124836C", Offset = "0x124836C", VA = "0x124836C", Slot = "8")]
	public void OnCustomAuthenticationResponse(Dictionary<string, object> data)
	{
	}

	[Token(Token = "0x6000544")]
	[Address(RVA = "0x1248370", Offset = "0x1248370", VA = "0x1248370", Slot = "6")]
	public void OnDisconnected(DisconnectCause cause)
	{
	}

	[Token(Token = "0x6000545")]
	[Address(RVA = "0x1248454", Offset = "0x1248454", VA = "0x1248454", Slot = "10")]
	public void OnFriendListUpdate(List<Photon.Realtime.FriendInfo> friendList)
	{
	}

	[Token(Token = "0x6000546")]
	[Address(RVA = "0x1248458", Offset = "0x1248458", VA = "0x1248458", Slot = "13")]
	public void OnJoinedRoom()
	{
	}

	[Token(Token = "0x6000547")]
	[Address(RVA = "0x1248530", Offset = "0x1248530", VA = "0x1248530")]
	private void StartQuantumGame()
	{
	}

	[Token(Token = "0x6000548")]
	[Address(RVA = "0x1248D48", Offset = "0x1248D48", VA = "0x1248D48", Slot = "15")]
	public void OnJoinRandomFailed(short returnCode, string message)
	{
	}

	[Token(Token = "0x6000549")]
	[Address(RVA = "0x1248E38", Offset = "0x1248E38", VA = "0x1248E38", Slot = "14")]
	public void OnJoinRoomFailed(short returnCode, string message)
	{
	}

	[Token(Token = "0x600054A")]
	[Address(RVA = "0x1248F28", Offset = "0x1248F28", VA = "0x1248F28", Slot = "16")]
	public void OnLeftRoom()
	{
	}

	[Token(Token = "0x600054B")]
	[Address(RVA = "0x1248F2C", Offset = "0x1248F2C", VA = "0x1248F2C", Slot = "7")]
	public void OnRegionListReceived(RegionHandler regionHandler)
	{
	}

	[Token(Token = "0x600054C")]
	[Address(RVA = "0x1248F30", Offset = "0x1248F30", VA = "0x1248F30", Slot = "17")]
	public void OnPlayerEnteredRoom(Photon.Realtime.Player newPlayer)
	{
	}

	[Token(Token = "0x600054D")]
	[Address(RVA = "0x1248F34", Offset = "0x1248F34", VA = "0x1248F34", Slot = "18")]
	public void OnPlayerLeftRoom(Photon.Realtime.Player otherPlayer)
	{
	}

	[Token(Token = "0x600054E")]
	[Address(RVA = "0x1248F38", Offset = "0x1248F38", VA = "0x1248F38", Slot = "19")]
	public void OnRoomPropertiesUpdate(ExitGames.Client.Photon.Hashtable propertiesThatChanged)
	{
	}

	[Token(Token = "0x600054F")]
	[Address(RVA = "0x1248F3C", Offset = "0x1248F3C", VA = "0x1248F3C", Slot = "20")]
	public void OnPlayerPropertiesUpdate(Photon.Realtime.Player targetPlayer, ExitGames.Client.Photon.Hashtable changedProps)
	{
	}

	[Token(Token = "0x6000550")]
	[Address(RVA = "0x1248F40", Offset = "0x1248F40", VA = "0x1248F40", Slot = "21")]
	public void OnMasterClientSwitched(Photon.Realtime.Player newMasterClient)
	{
	}

	[Token(Token = "0x6000551")]
	[Address(RVA = "0x1248F44", Offset = "0x1248F44", VA = "0x1248F44", Slot = "22")]
	public void OnEvent(EventData photonEvent)
	{
	}

	[Token(Token = "0x6000552")]
	[Address(RVA = "0x1248F48", Offset = "0x1248F48", VA = "0x1248F48")]
	public QuantumMultiClientPlayer()
	{
	}

	[Token(Token = "0x6000553")]
	[Address(RVA = "0x1248F50", Offset = "0x1248F50", VA = "0x1248F50")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDC800", Offset = "0xBDC800")]
	private void <StartQuantumGame>b__39_0(CallbackGameStarted c)
	{
	}

	[Token(Token = "0x6000554")]
	[Address(RVA = "0x1248F88", Offset = "0x1248F88", VA = "0x1248F88")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDC810", Offset = "0xBDC810")]
	private bool <StartQuantumGame>b__39_1(IDeterministicGame game)
	{
		return default(bool);
	}
}
[Token(Token = "0x20002B4")]
public class QuantumMultiClientPlayerView : MonoBehaviour
{
	[Token(Token = "0x40002B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text Label;

	[Token(Token = "0x40002B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Toggle Input;

	[Token(Token = "0x40002B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Toggle View;

	[Token(Token = "0x40002B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Toggle Gizmos;

	[Token(Token = "0x40002B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public UnityEngine.UI.Button Quit;

	[Token(Token = "0x6000555")]
	[Address(RVA = "0x1248FAC", Offset = "0x1248FAC", VA = "0x1248FAC")]
	public QuantumMultiClientPlayerView()
	{
	}
}
[Token(Token = "0x20002B5")]
public class QuantumMultiClientRunner : MonoBehaviour
{
	[Token(Token = "0x20002B6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBC6400", Offset = "0xBC6400")]
	private sealed class <>c__DisplayClass12_0
	{
		[Token(Token = "0x40002C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool created;

		[Token(Token = "0x6000560")]
		[Address(RVA = "0x105B3F8", Offset = "0x105B3F8", VA = "0x105B3F8")]
		public <>c__DisplayClass12_0()
		{
		}

		[Token(Token = "0x6000561")]
		[Address(RVA = "0x105B400", Offset = "0x105B400", VA = "0x105B400")]
		internal void <Start>b__1(QuantumMultiClientPlayer p)
		{
		}

		[Token(Token = "0x6000562")]
		[Address(RVA = "0x105B40C", Offset = "0x105B40C", VA = "0x105B40C")]
		internal bool <Start>b__0()
		{
			return default(bool);
		}
	}

	[Token(Token = "0x20002B7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBC6410", Offset = "0xBC6410")]
	private sealed class <Start>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40002C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40002C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40002C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public QuantumMultiClientRunner <>4__this;

		[Token(Token = "0x40002C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <i>5__2;

		[Token(Token = "0x17000119")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000566")]
			[Address(RVA = "0x105B908", Offset = "0x105B908", VA = "0x105B908", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700011A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000568")]
			[Address(RVA = "0x105B950", Offset = "0x105B950", VA = "0x105B950", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000563")]
		[Address(RVA = "0x105B5C4", Offset = "0x105B5C4", VA = "0x105B5C4")]
		[DebuggerHidden]
		public <Start>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x6000564")]
		[Address(RVA = "0x105B5F0", Offset = "0x105B5F0", VA = "0x105B5F0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000565")]
		[Address(RVA = "0x105B5F4", Offset = "0x105B5F4", VA = "0x105B5F4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000567")]
		[Address(RVA = "0x105B910", Offset = "0x105B910", VA = "0x105B910", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002B8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBC6420", Offset = "0xBC6420")]
	private sealed class <>c__DisplayClass14_0
	{
		[Token(Token = "0x40002C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public CallbackPollInput c;

		[Token(Token = "0x6000569")]
		[Address(RVA = "0x105B414", Offset = "0x105B414", VA = "0x105B414")]
		public <>c__DisplayClass14_0()
		{
		}

		[Token(Token = "0x600056A")]
		[Address(RVA = "0x105B41C", Offset = "0x105B41C", VA = "0x105B41C")]
		internal bool <OnCallbackPollInput>b__0(QuantumMultiClientPlayer p)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x20002B9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBC6430", Offset = "0xBC6430")]
	private sealed class <>c__DisplayClass17_0
	{
		[Token(Token = "0x40002C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int playerId;

		[Token(Token = "0x40002C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public QuantumMultiClientRunner <>4__this;

		[Token(Token = "0x600056B")]
		[Address(RVA = "0x105B4CC", Offset = "0x105B4CC", VA = "0x105B4CC")]
		public <>c__DisplayClass17_0()
		{
		}

		[Token(Token = "0x600056C")]
		[Address(RVA = "0x105B4D4", Offset = "0x105B4D4", VA = "0x105B4D4")]
		internal bool <CreateNewPlayerInternal>b__0(QuantumMultiClientPlayer p)
		{
			return default(bool);
		}

		[Token(Token = "0x600056D")]
		[Address(RVA = "0x105B58C", Offset = "0x105B58C", VA = "0x105B58C")]
		internal void <CreateNewPlayerInternal>b__1(QuantumMultiClientPlayer p)
		{
		}

		[Token(Token = "0x600056E")]
		[Address(RVA = "0x105B5A8", Offset = "0x105B5A8", VA = "0x105B5A8")]
		internal void <CreateNewPlayerInternal>b__2(QuantumMultiClientPlayer p)
		{
		}
	}

	[Token(Token = "0x40002B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public QuantumMultiClientPlayerView PlayerViewTemplate;

	[Token(Token = "0x40002B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UnityEngine.UI.Button CreatePlayerBtn;

	[Token(Token = "0x40002B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBCD9A8", Offset = "0xBCD9A8")]
	public List<GameObject> DisableOnStart;

	[Token(Token = "0x40002B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBCD9E0", Offset = "0xBCD9E0")]
	public QuantumEditorSettings EditorSettings;

	[Token(Token = "0x40002B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBCDA18", Offset = "0xBCDA18")]
	public PhotonServerSettings ServerSettings;

	[Token(Token = "0x40002BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBCDA50", Offset = "0xBCDA50")]
	public RuntimeConfig RuntimeConfig;

	[Token(Token = "0x40002BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBCDA88", Offset = "0xBCDA88")]
	public int PlayerCount;

	[Token(Token = "0x40002BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBCDAC0", Offset = "0xBCDAC0")]
	public int InitialPlayerCount;

	[Token(Token = "0x40002BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBCDAF8", Offset = "0xBCDAF8")]
	public RuntimePlayer[] RuntimePlayer;

	[Token(Token = "0x40002BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBCDB30", Offset = "0xBCDB30")]
	public GameObject PlayerInputTemplate;

	[Token(Token = "0x40002BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBCDB68", Offset = "0xBCDB68")]
	public EntityViewUpdater EntityViewUpdaterTemplate;

	[Token(Token = "0x40002C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private List<QuantumMultiClientPlayer> players;

	[Token(Token = "0x6000556")]
	[Address(RVA = "0x1248FB4", Offset = "0x1248FB4", VA = "0x1248FB4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xBDC820", Offset = "0xBDC820")]
	public IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000557")]
	[Address(RVA = "0x1249020", Offset = "0x1249020", VA = "0x1249020")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x6000558")]
	[Address(RVA = "0x1249174", Offset = "0x1249174", VA = "0x1249174")]
	private void OnCallbackPollInput(CallbackPollInput c)
	{
	}

	[Token(Token = "0x6000559")]
	[Address(RVA = "0x1249320", Offset = "0x1249320", VA = "0x1249320")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x600055A")]
	[Address(RVA = "0x12493BC", Offset = "0x12493BC", VA = "0x12493BC")]
	public void CreateNewPlayer()
	{
	}

	[Token(Token = "0x600055B")]
	[Address(RVA = "0x12493C0", Offset = "0x12493C0", VA = "0x12493C0")]
	private QuantumMultiClientPlayer CreateNewPlayerInternal()
	{
		return null;
	}

	[Token(Token = "0x600055C")]
	[Address(RVA = "0x124990C", Offset = "0x124990C", VA = "0x124990C")]
	public void OnPlayerLeft(QuantumMultiClientPlayer player)
	{
	}

	[Token(Token = "0x600055D")]
	[Address(RVA = "0x12499B0", Offset = "0x12499B0", VA = "0x12499B0")]
	public void OnPlayerCreated(QuantumMultiClientPlayer player)
	{
	}

	[Token(Token = "0x600055E")]
	[Address(RVA = "0x1249A84", Offset = "0x1249A84", VA = "0x1249A84")]
	public QuantumMultiClientRunner()
	{
	}

	[Token(Token = "0x600055F")]
	[Address(RVA = "0x1249B44", Offset = "0x1249B44", VA = "0x1249B44")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDC880", Offset = "0xBDC880")]
	private void <OnEnable>b__13_0(CallbackPollInput c)
	{
	}
}
[Serializable]
[Token(Token = "0x20002BA")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBC6440", Offset = "0xBC6440")]
public class PhotonServerSettings : ScriptableObject
{
	[Token(Token = "0x40002C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static PhotonServerSettings _instance;

	[Token(Token = "0x40002CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AppSettings AppSettings;

	[Token(Token = "0x40002CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int PlayerTtlInSeconds;

	[Token(Token = "0x40002CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int EmptyRoomTtlInSeconds;

	[Token(Token = "0x1700011B")]
	public static PhotonServerSettings Instance
	{
		[Token(Token = "0x600056F")]
		[Address(RVA = "0xFD1FA8", Offset = "0xFD1FA8", VA = "0xFD1FA8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700011C")]
	public bool CanRejoin
	{
		[Token(Token = "0x6000570")]
		[Address(RVA = "0xFD2080", Offset = "0xFD2080", VA = "0xFD2080")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000571")]
	[Address(RVA = "0xFD2090", Offset = "0xFD2090", VA = "0xFD2090")]
	public static AppSettings CloneAppSettings(AppSettings appSettings)
	{
		return null;
	}

	[Token(Token = "0x6000572")]
	[Address(RVA = "0xFD2170", Offset = "0xFD2170", VA = "0xFD2170")]
	public PhotonServerSettings()
	{
	}
}
[Token(Token = "0x20002BB")]
public class QuantumLoadBalancingClient : LoadBalancingClient, IConnectionCallbacks
{
	[Token(Token = "0x40002CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string BestRegionSummaryKey;

	[Token(Token = "0x6000573")]
	[Address(RVA = "0x1246A2C", Offset = "0x1246A2C", VA = "0x1246A2C")]
	public QuantumLoadBalancingClient(ConnectionProtocol protocol = ConnectionProtocol.Udp)
	{
	}

	[Token(Token = "0x6000574")]
	[Address(RVA = "0x1246AE0", Offset = "0x1246AE0", VA = "0x1246AE0", Slot = "25")]
	public virtual bool ConnectUsingSettings(AppSettings appSettings, string nickname)
	{
		return default(bool);
	}

	[Token(Token = "0x6000575")]
	[Address(RVA = "0x1246BA0", Offset = "0x1246BA0", VA = "0x1246BA0", Slot = "19")]
	public void OnConnected()
	{
	}

	[Token(Token = "0x6000576")]
	[Address(RVA = "0x1246BA4", Offset = "0x1246BA4", VA = "0x1246BA4", Slot = "20")]
	public void OnConnectedToMaster()
	{
	}

	[Token(Token = "0x6000577")]
	[Address(RVA = "0x1246C2C", Offset = "0x1246C2C", VA = "0x1246C2C", Slot = "21")]
	public void OnDisconnected(DisconnectCause cause)
	{
	}

	[Token(Token = "0x6000578")]
	[Address(RVA = "0x1246C30", Offset = "0x1246C30", VA = "0x1246C30", Slot = "22")]
	public void OnRegionListReceived(RegionHandler regionHandler)
	{
	}

	[Token(Token = "0x6000579")]
	[Address(RVA = "0x1246C34", Offset = "0x1246C34", VA = "0x1246C34", Slot = "23")]
	public void OnCustomAuthenticationResponse(Dictionary<string, object> data)
	{
	}

	[Token(Token = "0x600057A")]
	[Address(RVA = "0x1246C38", Offset = "0x1246C38", VA = "0x1246C38", Slot = "24")]
	public void OnCustomAuthenticationFailed(string debugMessage)
	{
	}
}
[Token(Token = "0x20002BC")]
public class QuantumStaticBoxCollider2D : MonoBehaviour
{
	[Token(Token = "0x40002CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Component SourceCollider;

	[Token(Token = "0x40002CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "DrawIfAttribute", RVA = "0xBCDBA0", Offset = "0xBCDBA0")]
	public FPVector2 Size;

	[Token(Token = "0x40002D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "DrawIfAttribute", RVA = "0xBCDBE4", Offset = "0xBCDBE4")]
	public FPVector2 PositionOffset;

	[Token(Token = "0x40002D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public FP RotationOffset;

	[Token(Token = "0x40002D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public FP Height;

	[Token(Token = "0x40002D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public QuantumStaticColliderSettings Settings;

	[Token(Token = "0x600057C")]
	[Address(RVA = "0x124FF00", Offset = "0x124FF00", VA = "0x124FF00")]
	public void UpdateFromSourceCollider()
	{
	}

	[Token(Token = "0x600057D")]
	[Address(RVA = "0x1250080", Offset = "0x1250080", VA = "0x1250080", Slot = "4")]
	public virtual void BeforeBake()
	{
	}

	[Token(Token = "0x600057E")]
	[Address(RVA = "0x1250084", Offset = "0x1250084", VA = "0x1250084")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x600057F")]
	[Address(RVA = "0x125031C", Offset = "0x125031C", VA = "0x125031C")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x6000580")]
	[Address(RVA = "0x12500BC", Offset = "0x12500BC", VA = "0x12500BC")]
	private void DrawGizmo(bool selected)
	{
	}

	[Token(Token = "0x6000581")]
	[Address(RVA = "0x1250354", Offset = "0x1250354", VA = "0x1250354")]
	public QuantumStaticBoxCollider2D()
	{
	}
}
[Token(Token = "0x20002BD")]
public class QuantumStaticBoxCollider3D : MonoBehaviour
{
	[Token(Token = "0x40002D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public BoxCollider SourceCollider;

	[Token(Token = "0x40002D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "DrawIfAttribute", RVA = "0xBCDC28", Offset = "0xBCDC28")]
	public FPVector3 Size;

	[Token(Token = "0x40002D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "DrawIfAttribute", RVA = "0xBCDC6C", Offset = "0xBCDC6C")]
	public FPVector3 PositionOffset;

	[Token(Token = "0x40002D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public FPVector3 RotationOffset;

	[Token(Token = "0x40002D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public QuantumStaticColliderSettings Settings;

	[Token(Token = "0x6000582")]
	[Address(RVA = "0x12503C0", Offset = "0x12503C0", VA = "0x12503C0")]
	public void UpdateFromSourceCollider()
	{
	}

	[Token(Token = "0x6000583")]
	[Address(RVA = "0x12504D0", Offset = "0x12504D0", VA = "0x12504D0", Slot = "4")]
	public virtual void BeforeBake()
	{
	}

	[Token(Token = "0x6000584")]
	[Address(RVA = "0x12504D4", Offset = "0x12504D4", VA = "0x12504D4")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000585")]
	[Address(RVA = "0x1250710", Offset = "0x1250710", VA = "0x1250710")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x6000586")]
	[Address(RVA = "0x125050C", Offset = "0x125050C", VA = "0x125050C")]
	private void DrawGizmo(bool selected)
	{
	}

	[Token(Token = "0x6000587")]
	[Address(RVA = "0x1250748", Offset = "0x1250748", VA = "0x1250748")]
	public QuantumStaticBoxCollider3D()
	{
	}
}
[Token(Token = "0x20002BE")]
public class QuantumStaticCircleCollider2D : MonoBehaviour
{
	[Token(Token = "0x40002D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Component SourceCollider;

	[Token(Token = "0x40002DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "DrawIfAttribute", RVA = "0xBCDCB0", Offset = "0xBCDCB0")]
	public FP Radius;

	[Token(Token = "0x40002DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "DrawIfAttribute", RVA = "0xBCDCF4", Offset = "0xBCDCF4")]
	public FPVector2 PositionOffset;

	[Token(Token = "0x40002DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public FP Height;

	[Token(Token = "0x40002DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public QuantumStaticColliderSettings Settings;

	[Token(Token = "0x6000588")]
	[Address(RVA = "0x12507AC", Offset = "0x12507AC", VA = "0x12507AC")]
	public void UpdateFromSourceCollider()
	{
	}

	[Token(Token = "0x6000589")]
	[Address(RVA = "0x125092C", Offset = "0x125092C", VA = "0x125092C", Slot = "4")]
	public virtual void BeforeBake()
	{
	}

	[Token(Token = "0x600058A")]
	[Address(RVA = "0x1250930", Offset = "0x1250930", VA = "0x1250930")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x600058B")]
	[Address(RVA = "0x1250AE4", Offset = "0x1250AE4", VA = "0x1250AE4")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x600058C")]
	[Address(RVA = "0x1250968", Offset = "0x1250968", VA = "0x1250968")]
	private void DrawGizmo(bool selected)
	{
	}

	[Token(Token = "0x600058D")]
	[Address(RVA = "0x1250B1C", Offset = "0x1250B1C", VA = "0x1250B1C")]
	public QuantumStaticCircleCollider2D()
	{
	}
}
[Serializable]
[Token(Token = "0x20002BF")]
public class QuantumStaticColliderSettings
{
	[Token(Token = "0x40002DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public PhysicsCommon.StaticColliderMutableMode MutableMode;

	[Token(Token = "0x40002DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AssetRefPhysicsMaterial PhysicsMaterial;

	[Token(Token = "0x40002E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AssetRef Asset;

	[Token(Token = "0x40002E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool Trigger;

	[Token(Token = "0x600058E")]
	[Address(RVA = "0x12503B8", Offset = "0x12503B8", VA = "0x12503B8")]
	public QuantumStaticColliderSettings()
	{
	}
}
[Token(Token = "0x20002C0")]
public class QuantumStaticEdgeCollider2D : MonoBehaviour
{
	[Token(Token = "0x40002E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public EdgeCollider2D SourceCollider;

	[Token(Token = "0x40002E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "DrawIfAttribute", RVA = "0xBCDD38", Offset = "0xBCDD38")]
	public FPVector2 VertexA;

	[Token(Token = "0x40002E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "DrawIfAttribute", RVA = "0xBCDD7C", Offset = "0xBCDD7C")]
	public FPVector2 VertexB;

	[Token(Token = "0x40002E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "DrawIfAttribute", RVA = "0xBCDDC0", Offset = "0xBCDDC0")]
	public FPVector2 PositionOffset;

	[Token(Token = "0x40002E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public FP RotationOffset;

	[Token(Token = "0x40002E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public FP Height;

	[Token(Token = "0x40002E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public QuantumStaticColliderSettings Settings;

	[Token(Token = "0x600058F")]
	[Address(RVA = "0x1250B80", Offset = "0x1250B80", VA = "0x1250B80")]
	public void UpdateFromSourceCollider()
	{
	}

	[Token(Token = "0x6000590")]
	[Address(RVA = "0x1250CA4", Offset = "0x1250CA4", VA = "0x1250CA4", Slot = "4")]
	public virtual void BeforeBake()
	{
	}

	[Token(Token = "0x6000591")]
	[Address(RVA = "0x1250CA8", Offset = "0x1250CA8", VA = "0x1250CA8")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000592")]
	[Address(RVA = "0x1250E0C", Offset = "0x1250E0C", VA = "0x1250E0C")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x6000593")]
	[Address(RVA = "0x1250CE0", Offset = "0x1250CE0", VA = "0x1250CE0")]
	private void DrawGizmos(bool selected)
	{
	}

	[Token(Token = "0x6000594")]
	[Address(RVA = "0x1250E44", Offset = "0x1250E44", VA = "0x1250E44")]
	public static void GetEdgeGizmosSettings(Transform t, FPVector2 posOffset, FP rotOffset, FPVector2 localStart, FPVector2 localEnd, FP localHeight, out Vector3 start, out Vector3 end, out float height)
	{
	}

	[Token(Token = "0x6000595")]
	[Address(RVA = "0x1251020", Offset = "0x1251020", VA = "0x1251020")]
	public QuantumStaticEdgeCollider2D()
	{
	}
}
[Token(Token = "0x20002C1")]
public class QuantumStaticMeshCollider3D : MonoBehaviour
{
	[Token(Token = "0x40002E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Mesh Mesh;

	[Token(Token = "0x40002EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public QuantumStaticColliderSettings Settings;

	[Token(Token = "0x40002EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBCDE04", Offset = "0xBCDE04")]
	public bool SmoothSphereMeshCollisions;

	[NonSerialized]
	[Token(Token = "0x40002EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TriangleCCW[] Triangles;

	[Token(Token = "0x40002ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[@HideInInspector]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xBCDE3C", Offset = "0xBCDE3C")]
	public MapStaticCollider3D.MutableModes Mode;

	[Token(Token = "0x6000596")]
	[Address(RVA = "0x12510D0", Offset = "0x12510D0", VA = "0x12510D0")]
	private void Reset()
	{
	}

	[Token(Token = "0x6000597")]
	[Address(RVA = "0x12511E8", Offset = "0x12511E8", VA = "0x12511E8")]
	public bool Bake(int index)
	{
		return default(bool);
	}

	[Token(Token = "0x6000598")]
	[Address(RVA = "0x1251824", Offset = "0x1251824", VA = "0x1251824")]
	public QuantumStaticMeshCollider3D()
	{
	}
}
[Token(Token = "0x20002C2")]
public class QuantumStaticPolygonCollider2D : MonoBehaviour
{
	[Token(Token = "0x40002EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PolygonCollider2D SourceCollider;

	[Token(Token = "0x40002EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool BakeAsStaticEdges2D;

	[Token(Token = "0x40002F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "DrawIfAttribute", RVA = "0xBCDE88", Offset = "0xBCDE88")]
	public FPVector2[] Vertices;

	[Token(Token = "0x40002F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "DrawIfAttribute", RVA = "0xBCDECC", Offset = "0xBCDECC")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBCDECC", Offset = "0xBCDECC")]
	public FPVector2 PositionOffset;

	[Token(Token = "0x40002F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBCDF38", Offset = "0xBCDF38")]
	public FP RotationOffset;

	[Token(Token = "0x40002F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public FP Height;

	[Token(Token = "0x40002F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public QuantumStaticColliderSettings Settings;

	[Token(Token = "0x1700011D")]
	protected virtual bool UpdateVerticesFromSourceOnBake
	{
		[Token(Token = "0x6000599")]
		[Address(RVA = "0x1251888", Offset = "0x1251888", VA = "0x1251888", Slot = "4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x600059A")]
	[Address(RVA = "0x1251890", Offset = "0x1251890", VA = "0x1251890")]
	public void UpdateFromSourceCollider(bool updateVertices = true)
	{
	}

	[Token(Token = "0x600059B")]
	[Address(RVA = "0x1251A34", Offset = "0x1251A34", VA = "0x1251A34", Slot = "5")]
	public virtual void BeforeBake()
	{
	}

	[Token(Token = "0x600059C")]
	[Address(RVA = "0x1251A64", Offset = "0x1251A64", VA = "0x1251A64")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x600059D")]
	[Address(RVA = "0x1251DDC", Offset = "0x1251DDC", VA = "0x1251DDC")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x600059E")]
	[Address(RVA = "0x1251AA0", Offset = "0x1251AA0", VA = "0x1251AA0")]
	private void DrawGizmo(bool selected)
	{
	}

	[Token(Token = "0x600059F")]
	[Address(RVA = "0x1251E18", Offset = "0x1251E18", VA = "0x1251E18")]
	public QuantumStaticPolygonCollider2D()
	{
	}
}
[Token(Token = "0x20002C3")]
public class QuantumStaticSphereCollider3D : MonoBehaviour
{
	[Token(Token = "0x40002F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SphereCollider SourceCollider;

	[Token(Token = "0x40002F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "DrawIfAttribute", RVA = "0xBCDF70", Offset = "0xBCDF70")]
	public FP Radius;

	[Token(Token = "0x40002F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "DrawIfAttribute", RVA = "0xBCDFB4", Offset = "0xBCDFB4")]
	public FPVector3 PositionOffset;

	[Token(Token = "0x40002F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public QuantumStaticColliderSettings Settings;

	[Token(Token = "0x60005A0")]
	[Address(RVA = "0x1251F44", Offset = "0x1251F44", VA = "0x1251F44")]
	public void UpdateFromSourceCollider()
	{
	}

	[Token(Token = "0x60005A1")]
	[Address(RVA = "0x125203C", Offset = "0x125203C", VA = "0x125203C", Slot = "4")]
	public virtual void BeforeBake()
	{
	}

	[Token(Token = "0x60005A2")]
	[Address(RVA = "0x1252040", Offset = "0x1252040", VA = "0x1252040")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x60005A3")]
	[Address(RVA = "0x12521B8", Offset = "0x12521B8", VA = "0x12521B8")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x60005A4")]
	[Address(RVA = "0x1252078", Offset = "0x1252078", VA = "0x1252078")]
	private void DrawGizmo(bool selected)
	{
	}

	[Token(Token = "0x60005A5")]
	[Address(RVA = "0x12521F0", Offset = "0x12521F0", VA = "0x12521F0")]
	public QuantumStaticSphereCollider3D()
	{
	}
}
[Token(Token = "0x20002C4")]
[ExecuteInEditMode]
public class QuantumStaticTerrainCollider3D : MonoBehaviour
{
	[Token(Token = "0x40002F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TerrainColliderAsset Asset;

	[Token(Token = "0x40002FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public PhysicsCommon.StaticColliderMutableMode MutableMode;

	[Token(Token = "0x40002FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[@HideInInspector]
	public bool SmoothSphereMeshCollisions;

	[Token(Token = "0x40002FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[@HideInInspector]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xBCE008", Offset = "0xBCE008")]
	public MapStaticCollider3D.MutableModes Mode;

	[Token(Token = "0x60005A6")]
	[Address(RVA = "0x1252254", Offset = "0x1252254", VA = "0x1252254")]
	public void Bake()
	{
	}

	[Token(Token = "0x60005A7")]
	[Address(RVA = "0x1252578", Offset = "0x1252578", VA = "0x1252578")]
	public QuantumStaticTerrainCollider3D()
	{
	}
}
[Token(Token = "0x20002C5")]
public abstract class QuantumCallbacks : MonoBehaviour
{
	[Token(Token = "0x40002FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly List<QuantumCallbacks> Instances;

	[Token(Token = "0x60005A8")]
	[Address(RVA = "0x1120AD4", Offset = "0x1120AD4", VA = "0x1120AD4", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x60005A9")]
	[Address(RVA = "0x1120B60", Offset = "0x1120B60", VA = "0x1120B60", Slot = "5")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x60005AA")]
	[Address(RVA = "0x1120BEC", Offset = "0x1120BEC", VA = "0x1120BEC", Slot = "6")]
	public virtual void OnGameStart(QuantumGame game)
	{
	}

	[Token(Token = "0x60005AB")]
	[Address(RVA = "0x1120BF0", Offset = "0x1120BF0", VA = "0x1120BF0", Slot = "7")]
	public virtual void OnGameResync(QuantumGame game)
	{
	}

	[Token(Token = "0x60005AC")]
	[Address(RVA = "0x1120BF4", Offset = "0x1120BF4", VA = "0x1120BF4", Slot = "8")]
	public virtual void OnGameDestroyed(QuantumGame game)
	{
	}

	[Token(Token = "0x60005AD")]
	[Address(RVA = "0x1120BF8", Offset = "0x1120BF8", VA = "0x1120BF8", Slot = "9")]
	public virtual void OnUpdateView(QuantumGame game)
	{
	}

	[Token(Token = "0x60005AE")]
	[Address(RVA = "0x1120BFC", Offset = "0x1120BFC", VA = "0x1120BFC", Slot = "10")]
	public virtual void OnSimulateFinished(QuantumGame game, Frame frame)
	{
	}

	[Token(Token = "0x60005AF")]
	[Address(RVA = "0x1120C00", Offset = "0x1120C00", VA = "0x1120C00", Slot = "11")]
	public virtual void OnUnitySceneLoadBegin(QuantumGame game)
	{
	}

	[Token(Token = "0x60005B0")]
	[Address(RVA = "0x1120C04", Offset = "0x1120C04", VA = "0x1120C04", Slot = "12")]
	public virtual void OnUnitySceneLoadDone(QuantumGame game)
	{
	}

	[Token(Token = "0x60005B1")]
	[Address(RVA = "0x1120C08", Offset = "0x1120C08", VA = "0x1120C08", Slot = "13")]
	public virtual void OnUnitySceneUnloadBegin(QuantumGame game)
	{
	}

	[Token(Token = "0x60005B2")]
	[Address(RVA = "0x1120C0C", Offset = "0x1120C0C", VA = "0x1120C0C", Slot = "14")]
	public virtual void OnUnitySceneUnloadDone(QuantumGame game)
	{
	}

	[Token(Token = "0x60005B3")]
	[Address(RVA = "0x1120C10", Offset = "0x1120C10", VA = "0x1120C10", Slot = "15")]
	public virtual void OnChecksumError(QuantumGame game, DeterministicTickChecksumError error, Frame[] frames)
	{
	}

	[Token(Token = "0x60005B4")]
	[Address(RVA = "0x1120C14", Offset = "0x1120C14", VA = "0x1120C14")]
	protected QuantumCallbacks()
	{
	}
}
[Token(Token = "0x20002C6")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBC6494", Offset = "0xBC6494")]
public class QuantumEditorSettings : ScriptableObject
{
	[Serializable]
	[Token(Token = "0x20002C7")]
	[Flags]
	public enum GizmosMode
	{
		[Token(Token = "0x400033F")]
		None = 0,
		[Token(Token = "0x4000340")]
		OnDraw = 1,
		[Token(Token = "0x4000341")]
		OnSelected = 2,
		[Token(Token = "0x4000342")]
		OnApplicationPlaying = 4
	}

	[Token(Token = "0x40002FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static QuantumEditorSettings _instance;

	[Token(Token = "0x40002FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBCE054", Offset = "0xBCE054")]
	public string AssetResourcesPath;

	[Token(Token = "0x4000300")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBCE08C", Offset = "0xBCE08C")]
	public string[] AssetSearchPaths;

	[Token(Token = "0x4000301")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBCE0C4", Offset = "0xBCE0C4")]
	public string[] SearchAssemblies;

	[Token(Token = "0x4000302")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBCE0FC", Offset = "0xBCE0FC")]
	public string[] SearchEditorAssemblies;

	[Token(Token = "0x4000303")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBCE134", Offset = "0xBCE134")]
	public Color PhysicsGridColor;

	[Token(Token = "0x4000304")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Color NavMeshGridColor;

	[Token(Token = "0x4000305")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBCE16C", Offset = "0xBCE16C")]
	public FP GizmoIconScale;

	[Token(Token = "0x4000306")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float GizmoSelectedBrightness;

	[Token(Token = "0x4000307")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBCE1A4", Offset = "0xBCE1A4")]
	[Quantum.Inspector.EnumFlags]
	public GizmosMode DrawColliderGizmos;

	[Token(Token = "0x4000308")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public QuantumGizmoStyle ColliderGizmosStyle;

	[Token(Token = "0x4000309")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
	public QuantumGizmoStyle StaticColliderGizmoStyle;

	[Token(Token = "0x400030A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6A")]
	public bool DrawStaticMeshTriangles;

	[Token(Token = "0x400030B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6B")]
	public bool DrawStaticMeshNormals;

	[Token(Token = "0x400030C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public bool DrawSceneMeshCells;

	[Token(Token = "0x400030D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6D")]
	public bool DrawSceneMeshTriangles;

	[Token(Token = "0x400030E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Color StaticColliderColor;

	[Token(Token = "0x400030F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Color DynamicColliderColor;

	[Token(Token = "0x4000310")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Color KinematicColliderColor;

	[Token(Token = "0x4000311")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Color CharacterControllerColor;

	[Token(Token = "0x4000312")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Color AsleepColliderColor;

	[Token(Token = "0x4000313")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Color DisabledColliderColor;

	[Token(Token = "0x4000314")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[Quantum.Inspector.EnumFlags]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBCE1F0", Offset = "0xBCE1F0")]
	public GizmosMode DrawJointGizmos;

	[Token(Token = "0x4000315")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	public QuantumGizmoStyle JointGizmosStyle;

	[Token(Token = "0x4000316")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public Color JointGizmosPrimaryColor;

	[Token(Token = "0x4000317")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public Color JointGizmosSecondaryColor;

	[Token(Token = "0x4000318")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public Color JointGizmosWarningColor;

	[Token(Token = "0x4000319")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBCE23C", Offset = "0xBCE23C")]
	public bool DrawPredictionArea;

	[Token(Token = "0x400031A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	public Color PredictionAreaColor;

	[Token(Token = "0x400031B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBCE274", Offset = "0xBCE274")]
	public bool DrawPathfinderRawPath;

	[Token(Token = "0x400031C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11D")]
	public bool DrawPathfinderRawTrianglePath;

	[Token(Token = "0x400031D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11E")]
	public bool DrawPathfinderFunnel;

	[Token(Token = "0x400031E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11F")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBCE2AC", Offset = "0xBCE2AC")]
	public bool DrawNavMeshAgents;

	[Token(Token = "0x400031F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public Color NavMeshAgentColor;

	[Token(Token = "0x4000320")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public Color NavMeshAvoidanceColor;

	[Token(Token = "0x4000321")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBCE2E4", Offset = "0xBCE2E4")]
	public bool DrawNavMesh;

	[Token(Token = "0x4000322")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x141")]
	public bool DrawNavMeshBorders;

	[Token(Token = "0x4000323")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x142")]
	public bool DrawNavMeshTriangleIds;

	[Token(Token = "0x4000324")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x143")]
	public bool DrawNavMeshRegionIds;

	[Token(Token = "0x4000325")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	public bool DrawNavMeshVertexNormals;

	[Token(Token = "0x4000326")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x145")]
	public bool DrawNavMeshLinks;

	[Token(Token = "0x4000327")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public Color NavMeshDefaultColor;

	[Token(Token = "0x4000328")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public Color NavMeshRegionColor;

	[Token(Token = "0x4000329")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBCE31C", Offset = "0xBCE31C")]
	public bool DrawNavMeshDefinitionAlways;

	[Token(Token = "0x400032A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x169")]
	public bool DrawNavMeshDefinitionMesh;

	[Token(Token = "0x400032B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16A")]
	public bool DrawNavMeshDefinitionOptimized;

	[Token(Token = "0x400032C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16B")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBCE354", Offset = "0xBCE354")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBCE354", Offset = "0xBCE354")]
	public bool UseQuantumAssetInspector;

	[Token(Token = "0x400032D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBCE3B4", Offset = "0xBCE3B4")]
	public bool UseAssetBasePostprocessor;

	[Token(Token = "0x400032E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16D")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBCE3EC", Offset = "0xBCE3EC")]
	public bool UseQuantumToolbarUtilities;

	[Token(Token = "0x400032F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBCE424", Offset = "0xBCE424")]
	public QuantumToolbarAnchor QuantumToolbarAnchor;

	[Token(Token = "0x4000330")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBCE45C", Offset = "0xBCE45C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBCE45C", Offset = "0xBCE45C")]
	public float QuantumToolbarSize;

	[Token(Token = "0x4000331")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBCE4B4", Offset = "0xBCE4B4")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBCE4B4", Offset = "0xBCE4B4")]
	public float QuantumToolbarOffset;

	[Token(Token = "0x4000332")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBCE510", Offset = "0xBCE510")]
	public bool UsePhotonAppVersionsPostprocessor;

	[Token(Token = "0x4000333")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBCE548", Offset = "0xBCE548")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xBCE548", Offset = "0xBCE548")]
	public QuantumEntityComponentInspectorMode EntityComponentInspectorMode;

	[Token(Token = "0x4000334")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBCE5A8", Offset = "0xBCE5A8")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBCE5A8", Offset = "0xBCE5A8")]
	public int FPDisplayPrecision;

	[Token(Token = "0x4000335")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	[Quantum.Inspector.EnumFlags]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBCE5FC", Offset = "0xBCE5FC")]
	public QuantumMapDataBakeFlags AutoBuildOnSceneSave;

	[Token(Token = "0x4000336")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBCE648", Offset = "0xBCE648")]
	[Quantum.Inspector.EnumFlags]
	public QuantumMapDataBakeFlags AutoBuildOnPlaymodeChanged;

	[Token(Token = "0x4000337")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	[Quantum.Inspector.EnumFlags]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBCE694", Offset = "0xBCE694")]
	public QuantumMapDataBakeFlags AutoBuildOnBuild;

	[Token(Token = "0x4000338")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBCE6E0", Offset = "0xBCE6E0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBCE6E0", Offset = "0xBCE6E0")]
	public string QuantumSolutionPath;

	[Token(Token = "0x4000339")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBCE740", Offset = "0xBCE740")]
	public bool MergeWithVisualStudioSolution;

	[Token(Token = "0x400033A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A1")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBCE778", Offset = "0xBCE778")]
	public bool ImportQuantumLibrariesImmediately;

	[Token(Token = "0x400033B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A2")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBCE7B0", Offset = "0xBCE7B0")]
	public bool AutoRunQtnCodeGen;

	[NonSerialized]
	[Token(Token = "0x400033C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	private string databasePathInResources;

	[NonSerialized]
	[Token(Token = "0x400033D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	private string assetResourcesPathInResources;

	[Token(Token = "0x1700011E")]
	public static QuantumEditorSettings Instance
	{
		[Token(Token = "0x60005B6")]
		[Address(RVA = "0x1120CA4", Offset = "0x1120CA4", VA = "0x1120CA4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700011F")]
	public static QuantumEditorSettings InstanceFailSilently
	{
		[Token(Token = "0x60005B7")]
		[Address(RVA = "0x1120DD8", Offset = "0x1120DD8", VA = "0x1120DD8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000120")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xBE57B8", Offset = "0xBE57B8")]
	public string DatabasePath
	{
		[Token(Token = "0x60005B8")]
		[Address(RVA = "0x1120EB0", Offset = "0x1120EB0", VA = "0x1120EB0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000121")]
	public string DefaultAssetSearchPath
	{
		[Token(Token = "0x60005B9")]
		[Address(RVA = "0x1120EB4", Offset = "0x1120EB4", VA = "0x1120EB4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000122")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xBE57F0", Offset = "0xBE57F0")]
	public string ResourceDatabasePath
	{
		[Token(Token = "0x60005BA")]
		[Address(RVA = "0x1120EE8", Offset = "0x1120EE8", VA = "0x1120EE8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000123")]
	public string DatabasePathInResources
	{
		[Token(Token = "0x60005BB")]
		[Address(RVA = "0x1120EEC", Offset = "0x1120EEC", VA = "0x1120EEC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000124")]
	public string AssetResourcesPathInResources
	{
		[Token(Token = "0x60005BC")]
		[Address(RVA = "0x1120FD4", Offset = "0x1120FD4", VA = "0x1120FD4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60005BD")]
	[Address(RVA = "0x11210B8", Offset = "0x11210B8", VA = "0x11210B8")]
	public Color GetNavMeshColor(NavMeshRegionMask regionMask)
	{
		return default(Color);
	}

	[Token(Token = "0x60005BE")]
	[Address(RVA = "0x112111C", Offset = "0x112111C", VA = "0x112111C")]
	public QuantumEditorSettings()
	{
	}
}
[Serializable]
[Token(Token = "0x20002C8")]
public enum QuantumToolbarAnchor
{
	[Token(Token = "0x4000344")]
	Legacy,
	[Token(Token = "0x4000345")]
	Center,
	[Token(Token = "0x4000346")]
	Left,
	[Token(Token = "0x4000347")]
	Right
}
[Serializable]
[Token(Token = "0x20002C9")]
public enum QuantumToolbarZone
{
	[Token(Token = "0x4000349")]
	ToolbarZoneRightAlign,
	[Token(Token = "0x400034A")]
	ToolbarZoneLeftAlign
}
[Serializable]
[Token(Token = "0x20002CA")]
[Flags]
public enum QuantumMapDataBakeFlags
{
	[Token(Token = "0x400034C")]
	None = 0,
	[Token(Token = "0x400034D")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xBCE7E8", Offset = "0xBCE7E8")]
	Obsolete_BakeMapData = 1,
	[Token(Token = "0x400034E")]
	BakeMapData = 0x60,
	[Token(Token = "0x400034F")]
	BakeMapPrototypes = 0x20,
	[Token(Token = "0x4000350")]
	BakeMapColliders = 0x40,
	[Token(Token = "0x4000351")]
	BakeUnityNavMesh = 8,
	[Token(Token = "0x4000352")]
	ImportUnityNavMesh = 4,
	[Token(Token = "0x4000353")]
	BakeNavMesh = 2,
	[Token(Token = "0x4000354")]
	ClearUnityNavMesh = 0x100,
	[Token(Token = "0x4000355")]
	GenerateAssetDB = 0x10,
	[Token(Token = "0x4000356")]
	SaveUnityAssets = 0x80
}
[Token(Token = "0x20002CB")]
public enum QuantumEntityComponentInspectorMode
{
	[Token(Token = "0x4000358")]
	ShowMonoBehaviours,
	[Token(Token = "0x4000359")]
	InlineInEntityPrototypeAndShowMonoBehavioursStubs,
	[Token(Token = "0x400035A")]
	InlineInEntityPrototypeAndHideMonoBehaviours
}
[Token(Token = "0x20002CC")]
public class QuantumFrameDiffer : MonoBehaviour
{
	[Token(Token = "0x20002CD")]
	private class QuantumFrameDifferGUIRuntime : QuantumFrameDifferGUI
	{
		[Token(Token = "0x17000125")]
		public override int TextLineHeight
		{
			[Token(Token = "0x60005C4")]
			[Address(RVA = "0x10596C0", Offset = "0x10596C0", VA = "0x10596C0", Slot = "5")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000126")]
		public override Rect Position
		{
			[Token(Token = "0x60005C5")]
			[Address(RVA = "0x10596C8", Offset = "0x10596C8", VA = "0x10596C8", Slot = "15")]
			get
			{
				return default(Rect);
			}
		}

		[Token(Token = "0x60005C3")]
		[Address(RVA = "0x10596B8", Offset = "0x10596B8", VA = "0x10596B8")]
		public QuantumFrameDifferGUIRuntime(FrameDifferState state)
		{
		}

		[Token(Token = "0x60005C6")]
		[Address(RVA = "0x1059724", Offset = "0x1059724", VA = "0x1059724", Slot = "18")]
		public override void DrawHeader()
		{
		}
	}

	[Token(Token = "0x400035B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public QuantumFrameDifferGUI.FrameDifferState State;

	[Token(Token = "0x400035C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private QuantumFrameDifferGUI _gui;

	[Token(Token = "0x60005BF")]
	[Address(RVA = "0x1121680", Offset = "0x1121680", VA = "0x1121680")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x60005C0")]
	[Address(RVA = "0x1121810", Offset = "0x1121810", VA = "0x1121810")]
	public static QuantumFrameDiffer Show()
	{
		return null;
	}

	[Token(Token = "0x60005C1")]
	[Address(RVA = "0x11219C0", Offset = "0x11219C0", VA = "0x11219C0")]
	public static string TryGetPhotonNickname(LoadBalancingClient client, int actorId)
	{
		return null;
	}

	[Token(Token = "0x60005C2")]
	[Address(RVA = "0x1121A50", Offset = "0x1121A50", VA = "0x1121A50")]
	public QuantumFrameDiffer()
	{
	}
}
[Token(Token = "0x20002CE")]
public abstract class QuantumFrameDifferGUI
{
	[Serializable]
	[Token(Token = "0x20002CF")]
	private class StateEntry
	{
		[Token(Token = "0x4000364")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string RunnerId;

		[Token(Token = "0x4000365")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int ActorId;

		[Token(Token = "0x4000366")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int FrameNumber;

		[Token(Token = "0x4000367")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string CompressedFrameDump;

		[Token(Token = "0x4000368")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string ActorName;

		[NonSerialized]
		[Token(Token = "0x4000369")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string FrameDump;

		[Token(Token = "0x60005E6")]
		[Address(RVA = "0x105A1E4", Offset = "0x105A1E4", VA = "0x105A1E4")]
		public StateEntry()
		{
		}
	}

	[Token(Token = "0x20002D0")]
	internal class FrameData
	{
		[Token(Token = "0x400036A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string String;

		[Token(Token = "0x400036B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int Diffs;

		[Token(Token = "0x400036C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<string> Lines;

		[Token(Token = "0x400036D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool Initialized;

		[Token(Token = "0x400036E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string Title;

		[Token(Token = "0x60005E7")]
		[Address(RVA = "0x105A0F4", Offset = "0x105A0F4", VA = "0x105A0F4")]
		public FrameData()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20002D1")]
	public class FrameDifferState : ISerializationCallbackReceiver
	{
		[Token(Token = "0x400036F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private List<StateEntry> Entries;

		[Token(Token = "0x4000370")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Dictionary<string, Dictionary<int, Dictionary<int, FrameData>>> _byRunner;

		[Token(Token = "0x17000136")]
		public IEnumerable<string> RunnerIds
		{
			[Token(Token = "0x60005ED")]
			[Address(RVA = "0x105A70C", Offset = "0x105A70C", VA = "0x105A70C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60005E8")]
		[Address(RVA = "0x105A16C", Offset = "0x105A16C", VA = "0x105A16C")]
		public void Clear()
		{
		}

		[Token(Token = "0x60005E9")]
		[Address(RVA = "0x1056800", Offset = "0x1056800", VA = "0x1056800")]
		public void AddEntry(string runnerId, int actorId, int frameNumber, string frameDump, [System.Runtime.InteropServices.Optional] string actorName)
		{
		}

		[Token(Token = "0x60005EA")]
		[Address(RVA = "0x105A41C", Offset = "0x105A41C", VA = "0x105A41C", Slot = "5")]
		public void OnAfterDeserialize()
		{
		}

		[Token(Token = "0x60005EB")]
		[Address(RVA = "0x105A5B0", Offset = "0x105A5B0", VA = "0x105A5B0", Slot = "4")]
		public void OnBeforeSerialize()
		{
		}

		[Token(Token = "0x60005EC")]
		[Address(RVA = "0x105A1EC", Offset = "0x105A1EC", VA = "0x105A1EC")]
		private void OnEntryAdded(StateEntry entry)
		{
		}

		[Token(Token = "0x60005EE")]
		[Address(RVA = "0x105A760", Offset = "0x105A760", VA = "0x105A760")]
		internal Dictionary<int, FrameData> GetFirstFrameDiff(string runnerId, out int frameNumber)
		{
			return null;
		}

		[Token(Token = "0x60005EF")]
		[Address(RVA = "0x105A858", Offset = "0x105A858", VA = "0x105A858")]
		public FrameDifferState()
		{
		}
	}

	[Token(Token = "0x20002D2")]
	private class LongestCommonSequence
	{
		[Token(Token = "0x20002D3")]
		public struct DiffChunk
		{
			[Token(Token = "0x4000373")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int StartA;

			[Token(Token = "0x4000374")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public int StartB;

			[Token(Token = "0x4000375")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int AddedA;

			[Token(Token = "0x4000376")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public int AddedB;

			[Token(Token = "0x60005F5")]
			[Address(RVA = "0x2EDD8BC", Offset = "0x2EDD8BC", VA = "0x2EDD8BC", Slot = "3")]
			public override string ToString()
			{
				return null;
			}
		}

		[Token(Token = "0x4000371")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private ushort[,] m_c;

		[Token(Token = "0x4000372")]
		private const int MaxSlice = 5000;

		[Token(Token = "0x60005F0")]
		[Address(RVA = "0x1059A00", Offset = "0x1059A00", VA = "0x1059A00")]
		public LongestCommonSequence()
		{
		}

		[Token(Token = "0x60005F1")]
		public void Diff<T>(T[] x, T[] y, IEqualityComparer<T> comparer, List<DiffChunk> result)
		{
		}

		[Token(Token = "0x60005F2")]
		[Address(RVA = "0x105A910", Offset = "0x105A910", VA = "0x105A910")]
		private void AllocateMatrix(int x, int y)
		{
		}

		[Token(Token = "0x60005F3")]
		private static void FillMatrix<T>(ushort[,] c, ArraySegment<T> x, ArraySegment<T> y, IEqualityComparer<T> comparer)
		{
		}

		[Token(Token = "0x60005F4")]
		private static void FillDiff<T>(ushort[,] c, ArraySegment<T> x, ArraySegment<T> y, IEqualityComparer<T> comparer, List<DiffChunk> result)
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20002D4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBC6508", Offset = "0xBC6508")]
	private sealed class <>c
	{
		[Token(Token = "0x4000377")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4000378")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<int, int> <>9__48_0;

		[Token(Token = "0x4000379")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Func<KeyValuePair<int, FrameData>, int> <>9__48_1;

		[Token(Token = "0x400037A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static Func<int, int> <>9__55_0;

		[Token(Token = "0x400037B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static Func<KeyValuePair<int, FrameData>, int> <>9__55_2;

		[Token(Token = "0x400037C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static Func<KeyValuePair<int, FrameData>, FrameData> <>9__55_3;

		[Token(Token = "0x400037D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public static Func<LongestCommonSequence> <>9__55_4;

		[Token(Token = "0x400037E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public static Action<LongestCommonSequence> <>9__55_6;

		[Token(Token = "0x60005F7")]
		[Address(RVA = "0x10598D0", Offset = "0x10598D0", VA = "0x10598D0")]
		public <>c()
		{
		}

		[Token(Token = "0x60005F8")]
		[Address(RVA = "0x10598D8", Offset = "0x10598D8", VA = "0x10598D8")]
		internal int <DrawDiff>b__48_0(int x)
		{
			return default(int);
		}

		[Token(Token = "0x60005F9")]
		[Address(RVA = "0x10598E0", Offset = "0x10598E0", VA = "0x10598E0")]
		internal int <DrawDiff>b__48_1(KeyValuePair<int, FrameData> x)
		{
			return default(int);
		}

		[Token(Token = "0x60005FA")]
		[Address(RVA = "0x1059920", Offset = "0x1059920", VA = "0x1059920")]
		internal int <Diff>b__55_0(int x)
		{
			return default(int);
		}

		[Token(Token = "0x60005FB")]
		[Address(RVA = "0x1059928", Offset = "0x1059928", VA = "0x1059928")]
		internal int <Diff>b__55_2(KeyValuePair<int, FrameData> x)
		{
			return default(int);
		}

		[Token(Token = "0x60005FC")]
		[Address(RVA = "0x1059968", Offset = "0x1059968", VA = "0x1059968")]
		internal FrameData <Diff>b__55_3(KeyValuePair<int, FrameData> x)
		{
			return null;
		}

		[Token(Token = "0x60005FD")]
		[Address(RVA = "0x10599A8", Offset = "0x10599A8", VA = "0x10599A8")]
		internal LongestCommonSequence <Diff>b__55_4()
		{
			return null;
		}

		[Token(Token = "0x60005FE")]
		[Address(RVA = "0x1059A08", Offset = "0x1059A08", VA = "0x1059A08")]
		internal void <Diff>b__55_6(LongestCommonSequence lcs)
		{
		}
	}

	[Token(Token = "0x20002D5")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBC6518", Offset = "0xBC6518")]
	private sealed class <>c__DisplayClass55_0
	{
		[Token(Token = "0x400037F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public QuantumFrameDifferGUI <>4__this;

		[Token(Token = "0x4000380")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public FrameData[] otherFrames;

		[Token(Token = "0x4000381")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string[] splits;

		[Token(Token = "0x4000382")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string[] baseLines;

		[Token(Token = "0x4000383")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<(string, string)>[] diffs;

		[Token(Token = "0x60005FF")]
		[Address(RVA = "0x1059A0C", Offset = "0x1059A0C", VA = "0x1059A0C")]
		public <>c__DisplayClass55_0()
		{
		}

		[Token(Token = "0x6000600")]
		[Address(RVA = "0x1059A14", Offset = "0x1059A14", VA = "0x1059A14")]
		internal bool <Diff>b__1(KeyValuePair<int, FrameData> x)
		{
			return default(bool);
		}

		[Token(Token = "0x6000601")]
		[Address(RVA = "0x1059A74", Offset = "0x1059A74", VA = "0x1059A74")]
		internal LongestCommonSequence <Diff>b__5(int frameIndex, ParallelLoopState state, LongestCommonSequence lcs)
		{
			return null;
		}
	}

	[Token(Token = "0x400035D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int ReferenceActorId;

	[Token(Token = "0x400035E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private string _search;

	[Token(Token = "0x400035F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private string _gameId;

	[Token(Token = "0x4000360")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int _scrollOffset;

	[Token(Token = "0x4000361")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	protected bool _hidden;

	[Token(Token = "0x4000362")]
	private const float HeaderHeight = 28f;

	[Token(Token = "0x4000363")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCE820", Offset = "0xBCE820")]
	private FrameDifferState <State>k__BackingField;

	[Token(Token = "0x17000127")]
	public FrameDifferState State
	{
		[Token(Token = "0x60005C8")]
		[Address(RVA = "0x1121B1C", Offset = "0x1121B1C", VA = "0x1121B1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDC8E0", Offset = "0xBDC8E0")]
		get
		{
			return null;
		}
		[Token(Token = "0x60005C9")]
		[Address(RVA = "0x1121B24", Offset = "0x1121B24", VA = "0x1121B24")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDC8F0", Offset = "0xBDC8F0")]
		set
		{
		}
	}

	[Token(Token = "0x17000128")]
	public virtual bool IsEditor
	{
		[Token(Token = "0x60005CA")]
		[Address(RVA = "0x1121B2C", Offset = "0x1121B2C", VA = "0x1121B2C", Slot = "4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000129")]
	public virtual int TextLineHeight
	{
		[Token(Token = "0x60005CB")]
		[Address(RVA = "0x1121B34", Offset = "0x1121B34", VA = "0x1121B34", Slot = "5")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700012A")]
	public virtual GUIStyle DiffBackground
	{
		[Token(Token = "0x60005CC")]
		[Address(RVA = "0x1121B3C", Offset = "0x1121B3C", VA = "0x1121B3C", Slot = "6")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700012B")]
	public virtual GUIStyle DiffHeader
	{
		[Token(Token = "0x60005CD")]
		[Address(RVA = "0x1121BA8", Offset = "0x1121BA8", VA = "0x1121BA8", Slot = "7")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700012C")]
	public virtual GUIStyle DiffHeaderError
	{
		[Token(Token = "0x60005CE")]
		[Address(RVA = "0x1121C14", Offset = "0x1121C14", VA = "0x1121C14", Slot = "8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700012D")]
	public virtual GUIStyle DiffLineOverlay
	{
		[Token(Token = "0x60005CF")]
		[Address(RVA = "0x1121C80", Offset = "0x1121C80", VA = "0x1121C80", Slot = "9")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700012E")]
	public virtual GUIStyle MiniButton
	{
		[Token(Token = "0x60005D0")]
		[Address(RVA = "0x1121CEC", Offset = "0x1121CEC", VA = "0x1121CEC", Slot = "10")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700012F")]
	public virtual GUIStyle TextLabel
	{
		[Token(Token = "0x60005D1")]
		[Address(RVA = "0x1121D58", Offset = "0x1121D58", VA = "0x1121D58", Slot = "11")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000130")]
	public virtual GUIStyle BoldLabel
	{
		[Token(Token = "0x60005D2")]
		[Address(RVA = "0x1121DC4", Offset = "0x1121DC4", VA = "0x1121DC4", Slot = "12")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000131")]
	public virtual GUIStyle MiniButtonLeft
	{
		[Token(Token = "0x60005D3")]
		[Address(RVA = "0x1121E30", Offset = "0x1121E30", VA = "0x1121E30", Slot = "13")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000132")]
	public virtual GUIStyle MiniButtonRight
	{
		[Token(Token = "0x60005D4")]
		[Address(RVA = "0x1121E9C", Offset = "0x1121E9C", VA = "0x1121E9C", Slot = "14")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000133")]
	public abstract Rect Position
	{
		[Token(Token = "0x60005D5")]
		get;
	}

	[Token(Token = "0x17000134")]
	public virtual float ScrollWidth
	{
		[Token(Token = "0x60005D6")]
		[Address(RVA = "0x1121F08", Offset = "0x1121F08", VA = "0x1121F08", Slot = "16")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000135")]
	private StringComparer Comparer
	{
		[Token(Token = "0x60005D7")]
		[Address(RVA = "0x1121F10", Offset = "0x1121F10", VA = "0x1121F10")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60005C7")]
	[Address(RVA = "0x1121AB4", Offset = "0x1121AB4", VA = "0x1121AB4")]
	protected QuantumFrameDifferGUI(FrameDifferState state)
	{
	}

	[Token(Token = "0x60005D8")]
	[Address(RVA = "0x1121FAC", Offset = "0x1121FAC", VA = "0x1121FAC", Slot = "17")]
	public virtual void Repaint()
	{
	}

	[Token(Token = "0x60005D9")]
	public abstract void DrawHeader();

	[Token(Token = "0x60005DA")]
	[Address(RVA = "0x11219B8", Offset = "0x11219B8", VA = "0x11219B8")]
	public void Show()
	{
	}

	[Token(Token = "0x60005DB")]
	[Address(RVA = "0x1121728", Offset = "0x1121728", VA = "0x1121728")]
	public void OnGUI()
	{
	}

	[Token(Token = "0x60005DC")]
	[Address(RVA = "0x1122AE4", Offset = "0x1122AE4", VA = "0x1122AE4")]
	private void DrawNoDumps()
	{
	}

	[Token(Token = "0x60005DD")]
	[Address(RVA = "0x1121FB0", Offset = "0x1121FB0", VA = "0x1121FB0")]
	private void DrawSelection()
	{
	}

	[Token(Token = "0x60005DE")]
	[Address(RVA = "0x1122D14", Offset = "0x1122D14", VA = "0x1122D14")]
	private void DrawDiff()
	{
	}

	[Token(Token = "0x60005DF")]
	[Address(RVA = "0x1124818", Offset = "0x1124818", VA = "0x1124818")]
	private Rect CalculateLineRect(int line, Rect mainRect)
	{
		return default(Rect);
	}

	[Token(Token = "0x60005E0")]
	[Address(RVA = "0x1124444", Offset = "0x1124444", VA = "0x1124444")]
	private Rect CalculateTopBarRect()
	{
		return default(Rect);
	}

	[Token(Token = "0x60005E1")]
	[Address(RVA = "0x1124720", Offset = "0x1124720", VA = "0x1124720")]
	private Rect CalculateMainRect(int frameDataCount)
	{
		return default(Rect);
	}

	[Token(Token = "0x60005E2")]
	[Address(RVA = "0x1125668", Offset = "0x1125668", VA = "0x1125668")]
	private void SearchDiff(FrameData frameData, FrameData baseFrame, int startIndex, int searchDirection)
	{
	}

	[Token(Token = "0x60005E3")]
	[Address(RVA = "0x112461C", Offset = "0x112461C", VA = "0x112461C")]
	private void Search(FrameData frameData, int startIndex, int searchDirection)
	{
	}

	[Token(Token = "0x60005E4")]
	[Address(RVA = "0x11244B0", Offset = "0x11244B0", VA = "0x11244B0")]
	private Dictionary<int, FrameData> GetSelectedFrameData()
	{
		return null;
	}

	[Token(Token = "0x60005E5")]
	[Address(RVA = "0x1124910", Offset = "0x1124910", VA = "0x1124910")]
	private void Diff(Dictionary<int, FrameData> frames)
	{
	}
}
[Token(Token = "0x20002D6")]
public static class QuantumGameGizmos
{
	[Token(Token = "0x6000602")]
	[Address(RVA = "0x1125784", Offset = "0x1125784", VA = "0x1125784")]
	private static Color Desaturate(Color c, float t)
	{
		return default(Color);
	}

	[Token(Token = "0x6000603")]
	[Address(RVA = "0x112581C", Offset = "0x112581C", VA = "0x112581C")]
	public static bool ShouldDraw(QuantumEditorSettings.GizmosMode mode, bool selected, bool hasStateDrawer = true)
	{
		return default(bool);
	}

	[Token(Token = "0x6000604")]
	[Address(RVA = "0x1125870", Offset = "0x1125870", VA = "0x1125870")]
	public static void OnDrawGizmos(QuantumGame game, QuantumEditorSettings editorSettings)
	{
	}

	[Token(Token = "0x6000605")]
	[Address(RVA = "0x1125874", Offset = "0x1125874", VA = "0x1125874")]
	public static void DrawCharacterController2DGizmo(Vector3 position, CharacterController2DConfig config, bool selected, QuantumGizmoStyle style)
	{
	}

	[Token(Token = "0x6000606")]
	[Address(RVA = "0x1125978", Offset = "0x1125978", VA = "0x1125978")]
	public static void DrawCharacterController3DGizmo(Vector3 position, CharacterController3DConfig config, bool selected, QuantumGizmoStyle style)
	{
	}

	[Token(Token = "0x6000607")]
	[Address(RVA = "0x1125AA0", Offset = "0x1125AA0", VA = "0x1125AA0")]
	public unsafe static void DrawCollider3DGizmo(Frame frame, EntityRef handle, PhysicsCollider3D* collider, QuantumGizmoStyle style)
	{
	}

	[Token(Token = "0x6000608")]
	[Address(RVA = "0x1126164", Offset = "0x1126164", VA = "0x1126164")]
	public unsafe static void DrawCollider2DGizmo(Frame frame, EntityRef handle, PhysicsCollider2D* collider, QuantumGizmoStyle style)
	{
	}

	[Token(Token = "0x6000609")]
	[Address(RVA = "0x1125EB4", Offset = "0x1125EB4", VA = "0x1125EB4")]
	public static void DrawShape3DGizmo(Shape3D s, Vector3 position, Quaternion rotation, Color color, [System.Runtime.InteropServices.Optional] QuantumGizmoStyle style)
	{
	}

	[Token(Token = "0x600060A")]
	[Address(RVA = "0x1126604", Offset = "0x1126604", VA = "0x1126604")]
	public static void DrawShape2DGizmo(Shape2D s, Vector3 pos, Quaternion rot, Color color, float height, Frame currentFrame, [System.Runtime.InteropServices.Optional] QuantumGizmoStyle style)
	{
	}

	[Token(Token = "0x600060B")]
	[Address(RVA = "0x112644C", Offset = "0x112644C", VA = "0x112644C")]
	private unsafe static void DrawCompoundShape2D(Frame f, Shape2D* compoundShape, Transform2D* transform, Transform2DVertical* transformVertical, Color color, float height, [System.Runtime.InteropServices.Optional] QuantumGizmoStyle style)
	{
	}

	[Token(Token = "0x600060C")]
	[Address(RVA = "0x1125D08", Offset = "0x1125D08", VA = "0x1125D08")]
	private unsafe static void DrawCompoundShape3D(Frame f, Shape3D* compoundShape, Transform3D* transform, Color color, [System.Runtime.InteropServices.Optional] QuantumGizmoStyle style)
	{
	}
}
[Token(Token = "0x20002D7")]
public class QuantumMapLoader : MonoBehaviour
{
	[Token(Token = "0x4000384")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static QuantumMapLoader _instance;

	[Token(Token = "0x4000385")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static bool _isApplicationQuitting;

	[Token(Token = "0x17000137")]
	public static QuantumMapLoader Instance
	{
		[Token(Token = "0x600060D")]
		[Address(RVA = "0x1246CA0", Offset = "0x1246CA0", VA = "0x1246CA0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600060E")]
	[Address(RVA = "0x1246E3C", Offset = "0x1246E3C", VA = "0x1246E3C")]
	public void Awake()
	{
	}

	[Token(Token = "0x600060F")]
	[Address(RVA = "0x1246EA0", Offset = "0x1246EA0", VA = "0x1246EA0")]
	public void OnApplicationQuit()
	{
	}

	[Token(Token = "0x6000610")]
	[Address(RVA = "0x1246EF0", Offset = "0x1246EF0", VA = "0x1246EF0")]
	public static void ResetStatics()
	{
	}

	[Token(Token = "0x6000611")]
	[Address(RVA = "0x1246F48", Offset = "0x1246F48", VA = "0x1246F48")]
	public QuantumMapLoader()
	{
	}
}
[Token(Token = "0x20002D8")]
public static class QuantumProfilingClientConstants
{
	[Token(Token = "0x4000386")]
	public const string DISCOVER_TOKEN = "QuantumProfiling/Discover";

	[Token(Token = "0x4000387")]
	public const string DISCOVER_RESPONSE_TOKEN = "QuantumProfiling/DiscoverResponse";

	[Token(Token = "0x4000388")]
	public const string CONNECT_TOKEN = "QuantumProfiling/Connect";

	[Token(Token = "0x4000389")]
	public const byte ClientInfoMessage = 0;

	[Token(Token = "0x400038A")]
	public const byte FrameMessage = 1;
}
[Serializable]
[Token(Token = "0x20002D9")]
public class QuantumProfilingClientInfo
{
	[Serializable]
	[Token(Token = "0x20002DA")]
	public class CustomProperty
	{
		[Token(Token = "0x400038E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string Name;

		[Token(Token = "0x400038F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string Value;

		[Token(Token = "0x6000617")]
		[Address(RVA = "0x105BDD8", Offset = "0x105BDD8", VA = "0x105BDD8")]
		public CustomProperty()
		{
		}
	}

	[Token(Token = "0x20002DB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBC6528", Offset = "0xBC6528")]
	private sealed class <>c__DisplayClass6_0
	{
		[Token(Token = "0x4000390")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x6000618")]
		[Address(RVA = "0x105BDAC", Offset = "0x105BDAC", VA = "0x105BDAC")]
		public <>c__DisplayClass6_0()
		{
		}

		[Token(Token = "0x6000619")]
		[Address(RVA = "0x105BDB4", Offset = "0x105BDB4", VA = "0x105BDB4")]
		internal bool <GetProperty>b__0(CustomProperty x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x400038B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string ProfilerId;

	[Token(Token = "0x400038C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public DeterministicSessionConfig Config;

	[Token(Token = "0x400038D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<CustomProperty> Properties;

	[Token(Token = "0x6000612")]
	[Address(RVA = "0x124AFD4", Offset = "0x124AFD4", VA = "0x124AFD4")]
	public QuantumProfilingClientInfo()
	{
	}

	[Token(Token = "0x6000613")]
	[Address(RVA = "0x124B04C", Offset = "0x124B04C", VA = "0x124B04C")]
	public QuantumProfilingClientInfo(string clientId, DeterministicSessionConfig config, DeterministicPlatformInfo platformInfo)
	{
	}

	[Token(Token = "0x6000614")]
	[Address(RVA = "0x124B5C4", Offset = "0x124B5C4", VA = "0x124B5C4")]
	public string GetProperty(string name, string defaultValue = "Unknown")
	{
		return null;
	}

	[Token(Token = "0x6000615")]
	private static CustomProperty CreateProperty<T>(string name, T value)
	{
		return null;
	}

	[Token(Token = "0x6000616")]
	[Address(RVA = "0x124B550", Offset = "0x124B550", VA = "0x124B550")]
	private static CustomProperty CreateProperty(string name, string value)
	{
		return null;
	}
}
[Token(Token = "0x20002DC")]
public sealed class QuantumRunner : MonoBehaviour, IDisposable
{
	[Token(Token = "0x20002DD")]
	public struct StartParameters
	{
		[Token(Token = "0x400039D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public RuntimeConfig RuntimeConfig;

		[Token(Token = "0x400039E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public DeterministicSessionConfig DeterministicConfig;

		[Token(Token = "0x400039F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public IDeterministicReplayProvider ReplayProvider;

		[Token(Token = "0x40003A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public DeterministicGameMode GameMode;

		[Token(Token = "0x40003A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int InitialFrame;

		[Token(Token = "0x40003A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public byte[] FrameData;

		[Token(Token = "0x40003A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string RunnerId;

		[Token(Token = "0x40003A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public QuantumNetworkCommunicator.QuitBehaviour QuitBehaviour;

		[Token(Token = "0x40003A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public int PlayerCount;

		[Token(Token = "0x40003A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int LocalPlayerCount;

		[Token(Token = "0x40003A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public RecordingFlags RecordingFlags;

		[Token(Token = "0x40003A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public LoadBalancingClient NetworkClient;

		[Token(Token = "0x40003A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public IResourceManager ResourceManagerOverride;

		[Token(Token = "0x40003AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public InstantReplaySettings InstantReplayConfig;

		[Token(Token = "0x40003AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public int HeapExtraCount;

		[Token(Token = "0x40003AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public DynamicAssetDB InitialDynamicAssets;

		[Token(Token = "0x40003AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xBCE8B0", Offset = "0xBCE8B0")]
		public bool IsRejoin;

		[Token(Token = "0x40003AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public float StartGameTimeoutInSeconds;
	}

	[Serializable]
	[Token(Token = "0x20002DE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBC6538", Offset = "0xBC6538")]
	private sealed class <>c
	{
		[Token(Token = "0x40003AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x40003B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action<string> <>9__46_0;

		[Token(Token = "0x40003B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Action <>9__46_1;

		[Token(Token = "0x40003B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static Action<string, string> <>9__46_2;

		[Token(Token = "0x40003B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static Action <>9__46_3;

		[Token(Token = "0x600063C")]
		[Address(RVA = "0x105BFA4", Offset = "0x105BFA4", VA = "0x105BFA4")]
		public <>c()
		{
		}

		[Token(Token = "0x600063D")]
		[Address(RVA = "0x105BFAC", Offset = "0x105BFAC", VA = "0x105BFAC")]
		internal void <Init>b__46_0(string x)
		{
		}

		[Token(Token = "0x600063E")]
		[Address(RVA = "0x105BFB0", Offset = "0x105BFB0", VA = "0x105BFB0")]
		internal void <Init>b__46_1()
		{
		}

		[Token(Token = "0x600063F")]
		[Address(RVA = "0x105BFB4", Offset = "0x105BFB4", VA = "0x105BFB4")]
		internal void <Init>b__46_2(string a, string b)
		{
		}

		[Token(Token = "0x6000640")]
		[Address(RVA = "0x105BFB8", Offset = "0x105BFB8", VA = "0x105BFB8")]
		internal void <Init>b__46_3()
		{
		}
	}

	[Token(Token = "0x4000391")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static List<QuantumRunner> _activeRunners;

	[Token(Token = "0x4000392")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[@HideInInspector]
	public bool OverrideUpdateSession;

	[Token(Token = "0x4000393")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCE850", Offset = "0xBCE850")]
	private QuantumGame <Game>k__BackingField;

	[Token(Token = "0x4000394")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCE860", Offset = "0xBCE860")]
	private DeterministicSession <Session>k__BackingField;

	[Token(Token = "0x4000395")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCE870", Offset = "0xBCE870")]
	private string <Id>k__BackingField;

	[Token(Token = "0x4000396")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCE880", Offset = "0xBCE880")]
	private SimulationUpdateTime <DeltaTimeType>k__BackingField;

	[Token(Token = "0x4000397")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCE890", Offset = "0xBCE890")]
	private LoadBalancingClient <NetworkClient>k__BackingField;

	[Token(Token = "0x4000398")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCE8A0", Offset = "0xBCE8A0")]
	private RecordingFlags <RecordingFlags>k__BackingField;

	[Token(Token = "0x4000399")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public bool HideGizmos;

	[Token(Token = "0x400039A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public QuantumEditorSettings GizmoSettings;

	[Token(Token = "0x400039B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool _shutdownRequested;

	[Token(Token = "0x400039C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float _startGameTimeout;

	[Token(Token = "0x17000138")]
	public static QuantumRunner Default
	{
		[Token(Token = "0x600061A")]
		[Address(RVA = "0x124704C", Offset = "0x124704C", VA = "0x124704C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000139")]
	public static IEnumerable<QuantumRunner> ActiveRunners
	{
		[Token(Token = "0x600061B")]
		[Address(RVA = "0x124D578", Offset = "0x124D578", VA = "0x124D578")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700013A")]
	public QuantumGame Game
	{
		[Token(Token = "0x600061C")]
		[Address(RVA = "0x124D5DC", Offset = "0x124D5DC", VA = "0x124D5DC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDC900", Offset = "0xBDC900")]
		get
		{
			return null;
		}
		[Token(Token = "0x600061D")]
		[Address(RVA = "0x124D5E4", Offset = "0x124D5E4", VA = "0x124D5E4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDC910", Offset = "0xBDC910")]
		private set
		{
		}
	}

	[Token(Token = "0x1700013B")]
	public DeterministicSession Session
	{
		[Token(Token = "0x600061E")]
		[Address(RVA = "0x124D5EC", Offset = "0x124D5EC", VA = "0x124D5EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDC920", Offset = "0xBDC920")]
		get
		{
			return null;
		}
		[Token(Token = "0x600061F")]
		[Address(RVA = "0x124D5F4", Offset = "0x124D5F4", VA = "0x124D5F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDC930", Offset = "0xBDC930")]
		private set
		{
		}
	}

	[Token(Token = "0x1700013C")]
	public string Id
	{
		[Token(Token = "0x6000620")]
		[Address(RVA = "0x124D5FC", Offset = "0x124D5FC", VA = "0x124D5FC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDC940", Offset = "0xBDC940")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000621")]
		[Address(RVA = "0x124D604", Offset = "0x124D604", VA = "0x124D604")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDC950", Offset = "0xBDC950")]
		private set
		{
		}
	}

	[Token(Token = "0x1700013D")]
	public SimulationUpdateTime DeltaTimeType
	{
		[Token(Token = "0x6000622")]
		[Address(RVA = "0x124D60C", Offset = "0x124D60C", VA = "0x124D60C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDC960", Offset = "0xBDC960")]
		get
		{
			return default(SimulationUpdateTime);
		}
		[Token(Token = "0x6000623")]
		[Address(RVA = "0x124D614", Offset = "0x124D614", VA = "0x124D614")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDC970", Offset = "0xBDC970")]
		set
		{
		}
	}

	[Token(Token = "0x1700013E")]
	public LoadBalancingClient NetworkClient
	{
		[Token(Token = "0x6000624")]
		[Address(RVA = "0x124D61C", Offset = "0x124D61C", VA = "0x124D61C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDC980", Offset = "0xBDC980")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000625")]
		[Address(RVA = "0x124D624", Offset = "0x124D624", VA = "0x124D624")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDC990", Offset = "0xBDC990")]
		private set
		{
		}
	}

	[Token(Token = "0x1700013F")]
	public RecordingFlags RecordingFlags
	{
		[Token(Token = "0x6000626")]
		[Address(RVA = "0x124D62C", Offset = "0x124D62C", VA = "0x124D62C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDC9A0", Offset = "0xBDC9A0")]
		get
		{
			return default(RecordingFlags);
		}
		[Token(Token = "0x6000627")]
		[Address(RVA = "0x124D634", Offset = "0x124D634", VA = "0x124D634")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDC9B0", Offset = "0xBDC9B0")]
		private set
		{
		}
	}

	[Token(Token = "0x17000140")]
	public bool IsRunning
	{
		[Token(Token = "0x6000628")]
		[Address(RVA = "0x124D63C", Offset = "0x124D63C", VA = "0x124D63C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000141")]
	public bool HasGameStartTimedOut
	{
		[Token(Token = "0x6000629")]
		[Address(RVA = "0x124D670", Offset = "0x124D670", VA = "0x124D670")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000142")]
	public float? DeltaTime
	{
		[Token(Token = "0x600062A")]
		[Address(RVA = "0x124D6C8", Offset = "0x124D6C8", VA = "0x124D6C8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600062B")]
	[Address(RVA = "0x124D758", Offset = "0x124D758", VA = "0x124D758")]
	private void Update()
	{
	}

	[Token(Token = "0x600062C")]
	[Address(RVA = "0x124D858", Offset = "0x124D858", VA = "0x124D858")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600062D")]
	[Address(RVA = "0x124D888", Offset = "0x124D888", VA = "0x124D888")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x600062E")]
	[Address(RVA = "0x12469B4", Offset = "0x12469B4", VA = "0x12469B4")]
	public void Shutdown()
	{
	}

	[Token(Token = "0x600062F")]
	[Address(RVA = "0x124D88C", Offset = "0x124D88C", VA = "0x124D88C", Slot = "4")]
	public void Dispose()
	{
	}

	[Token(Token = "0x6000630")]
	[Address(RVA = "0x124D918", Offset = "0x124D918", VA = "0x124D918")]
	public static void Init(bool force = false)
	{
	}

	[Token(Token = "0x6000631")]
	[Address(RVA = "0x1246090", Offset = "0x1246090", VA = "0x1246090")]
	public static QuantumRunner StartGame(string clientId, StartParameters param)
	{
		return null;
	}

	[Token(Token = "0x6000632")]
	[Address(RVA = "0x124DFB8", Offset = "0x124DFB8", VA = "0x124DFB8")]
	public static DeterministicPlatformInfo CreatePlatformInfo()
	{
		return null;
	}

	[Token(Token = "0x6000633")]
	[Address(RVA = "0x124E208", Offset = "0x124E208", VA = "0x124E208")]
	public static bool ShutdownAll(bool immediate = false)
	{
		return default(bool);
	}

	[Token(Token = "0x6000634")]
	[Address(RVA = "0x124E420", Offset = "0x124E420", VA = "0x124E420")]
	public static QuantumRunner FindRunner(string id)
	{
		return null;
	}

	[Token(Token = "0x6000635")]
	[Address(RVA = "0x124E5A0", Offset = "0x124E5A0", VA = "0x124E5A0")]
	public static QuantumRunner FindRunner(IDeterministicGame game)
	{
		return null;
	}

	[Token(Token = "0x6000636")]
	[Address(RVA = "0x124E710", Offset = "0x124E710", VA = "0x124E710")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xBDC9C0", Offset = "0xBDC9C0")]
	internal static QuantumRunner FindRunnerForGame(IDeterministicGame game)
	{
		return null;
	}

	[Token(Token = "0x6000637")]
	[Address(RVA = "0x124E060", Offset = "0x124E060", VA = "0x124E060")]
	private static QuantumNetworkCommunicator CreateCommunicator(DeterministicGameMode mode, LoadBalancingClient networkClient, QuantumNetworkCommunicator.QuitBehaviour quitBehaviour)
	{
		return null;
	}

	[Token(Token = "0x6000638")]
	[Address(RVA = "0x124DE3C", Offset = "0x124DE3C", VA = "0x124DE3C")]
	private static QuantumRunner CreateInstance(string name)
	{
		return null;
	}

	[Token(Token = "0x6000639")]
	[Address(RVA = "0x124E770", Offset = "0x124E770", VA = "0x124E770")]
	public QuantumRunner()
	{
	}
}
[Token(Token = "0x20002DF")]
public class QuantumRunnerLocalDebug : QuantumCallbacks
{
	[Serializable]
	[Token(Token = "0x20002E0")]
	public struct DynamicAssetDBSettings
	{
		[Serializable]
		[Token(Token = "0x20002E1")]
		public class InitialDynamicAssetsRequestedUnityEvent : UnityEvent<DynamicAssetDB>
		{
			[Token(Token = "0x6000648")]
			[Address(RVA = "0x2EDDC4C", Offset = "0x2EDDC4C", VA = "0x2EDDC4C")]
			public InitialDynamicAssetsRequestedUnityEvent()
			{
			}
		}

		[Token(Token = "0x40003BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public InitialDynamicAssetsRequestedUnityEvent OnInitialDynamicAssetsRequested;
	}

	[StructLayout(3)]
	[Token(Token = "0x20002E2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBC6548", Offset = "0xBC6548")]
	private struct <Start>d__9 : IAsyncStateMachine
	{
		[Token(Token = "0x40003BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x40003BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncVoidMethodBuilder <>t__builder;

		[Token(Token = "0x40003C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public QuantumRunnerLocalDebug <>4__this;

		[Token(Token = "0x40003C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<QTuple<AssetRef, string>>.Enumerator <>7__wrap1;

		[Token(Token = "0x40003C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private TaskAwaiter<AssetBase> <>u__1;

		[Token(Token = "0x6000649")]
		[Address(RVA = "0x105C2F4", Offset = "0x105C2F4", VA = "0x105C2F4", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x600064A")]
		[Address(RVA = "0x105C7B8", Offset = "0x105C7B8", VA = "0x105C7B8", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[Token(Token = "0x20002E3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBC6558", Offset = "0xBC6558")]
	private sealed class <SaveAndReload>d__14 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40003C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40003C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40003C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public QuantumRunnerLocalDebug <>4__this;

		[Token(Token = "0x40003C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <frameNumber>5__2;

		[Token(Token = "0x40003C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private byte[] <frameData>5__3;

		[Token(Token = "0x17000143")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600064E")]
			[Address(RVA = "0x105C2A4", Offset = "0x105C2A4", VA = "0x105C2A4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000144")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000650")]
			[Address(RVA = "0x105C2EC", Offset = "0x105C2EC", VA = "0x105C2EC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600064B")]
		[Address(RVA = "0x105BFC0", Offset = "0x105BFC0", VA = "0x105BFC0")]
		[DebuggerHidden]
		public <SaveAndReload>d__14(int <>1__state)
		{
		}

		[Token(Token = "0x600064C")]
		[Address(RVA = "0x105BFEC", Offset = "0x105BFEC", VA = "0x105BFEC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600064D")]
		[Address(RVA = "0x105BFF0", Offset = "0x105BFF0", VA = "0x105BFF0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600064F")]
		[Address(RVA = "0x105C2AC", Offset = "0x105C2AC", VA = "0x105C2AC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40003B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RecordingFlags RecordingFlags;

	[Token(Token = "0x40003B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public InstantReplaySettings InstantReplayConfig;

	[Token(Token = "0x40003B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float SimulationSpeedMultiplier;

	[Token(Token = "0x40003B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool DisplaySaveAndReloadButton;

	[Token(Token = "0x40003B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public RuntimeConfig Config;

	[Token(Token = "0x40003B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public RuntimePlayer[] Players;

	[Token(Token = "0x40003BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool PreloadAddressables;

	[Token(Token = "0x40003BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public DynamicAssetDBSettings DynamicAssetDB;

	[Token(Token = "0x40003BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool _isReload;

	[Token(Token = "0x6000641")]
	[Address(RVA = "0x124E800", Offset = "0x124E800", VA = "0x124E800")]
	[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xBDC9F8", Offset = "0xBDC9F8")]
	public void Start()
	{
	}

	[Token(Token = "0x6000642")]
	[Address(RVA = "0x124E8C0", Offset = "0x124E8C0", VA = "0x124E8C0")]
	public void StartWithFrame(int frameNumber = 0, [System.Runtime.InteropServices.Optional] byte[] frameData)
	{
	}

	[Token(Token = "0x6000643")]
	[Address(RVA = "0x124EBAC", Offset = "0x124EBAC", VA = "0x124EBAC", Slot = "6")]
	public override void OnGameStart(QuantumGame game)
	{
	}

	[Token(Token = "0x6000644")]
	[Address(RVA = "0x124EC34", Offset = "0x124EC34", VA = "0x124EC34")]
	public void OnGUI()
	{
	}

	[Token(Token = "0x6000645")]
	[Address(RVA = "0x124EE4C", Offset = "0x124EE4C", VA = "0x124EE4C")]
	public void Update()
	{
	}

	[Token(Token = "0x6000646")]
	[Address(RVA = "0x124EDE0", Offset = "0x124EDE0", VA = "0x124EDE0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xBDCA58", Offset = "0xBDCA58")]
	private IEnumerator SaveAndReload()
	{
		return null;
	}

	[Token(Token = "0x6000647")]
	[Address(RVA = "0x124F0A0", Offset = "0x124F0A0", VA = "0x124F0A0")]
	public QuantumRunnerLocalDebug()
	{
	}
}
[Token(Token = "0x20002E4")]
public class QuantumTaskRunnerJobs : MonoBehaviour, IDeterministicPlatformTaskRunner
{
	[Token(Token = "0x20002E5")]
	private struct ActionJob : IJob
	{
		[Token(Token = "0x40003CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int Index;

		[Token(Token = "0x6000657")]
		[Address(RVA = "0x105C7C4", Offset = "0x105C7C4", VA = "0x105C7C4", Slot = "4")]
		public void Execute()
		{
		}
	}

	[Token(Token = "0x40003C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Action[] _delegates;

	[Token(Token = "0x40003C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private NativeArray<JobHandle> _handles;

	[Token(Token = "0x40003CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private ActionJob[] _jobs;

	[Token(Token = "0x6000651")]
	[Address(RVA = "0x124E0EC", Offset = "0x124E0EC", VA = "0x124E0EC")]
	public static QuantumTaskRunnerJobs GetInstance()
	{
		return null;
	}

	[Token(Token = "0x6000652")]
	[Address(RVA = "0x12530A8", Offset = "0x12530A8", VA = "0x12530A8", Slot = "6")]
	public virtual void Schedule(Action[] delegates)
	{
	}

	[Token(Token = "0x6000653")]
	[Address(RVA = "0x1253288", Offset = "0x1253288", VA = "0x1253288", Slot = "5")]
	public bool PollForComplete()
	{
		return default(bool);
	}

	[Token(Token = "0x6000654")]
	[Address(RVA = "0x1253344", Offset = "0x1253344", VA = "0x1253344", Slot = "7")]
	public void WaitForComplete()
	{
	}

	[Token(Token = "0x6000655")]
	[Address(RVA = "0x1253354", Offset = "0x1253354", VA = "0x1253354")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000656")]
	[Address(RVA = "0x12533F0", Offset = "0x12533F0", VA = "0x12533F0")]
	public QuantumTaskRunnerJobs()
	{
	}
}
[Token(Token = "0x20002E6")]
public class QuantumUnityMemoryLayoutVerifierPlatform : MemoryLayoutVerifier.IPlatform
{
	[Token(Token = "0x17000145")]
	public bool CanResolveEnumSize
	{
		[Token(Token = "0x600065A")]
		[Address(RVA = "0x125371C", Offset = "0x125371C", VA = "0x125371C", Slot = "4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000658")]
	[Address(RVA = "0x1253704", Offset = "0x1253704", VA = "0x1253704", Slot = "5")]
	public int FieldOffset(FieldInfo field)
	{
		return default(int);
	}

	[Token(Token = "0x6000659")]
	[Address(RVA = "0x1253710", Offset = "0x1253710", VA = "0x1253710", Slot = "6")]
	public int SizeOf(Type type)
	{
		return default(int);
	}

	[Token(Token = "0x600065B")]
	[Address(RVA = "0x124DE2C", Offset = "0x124DE2C", VA = "0x124DE2C")]
	public QuantumUnityMemoryLayoutVerifierPlatform()
	{
	}
}
[Token(Token = "0x20002E7")]
public sealed class QuantumUnityNativeAllocator : Native.Allocator
{
	[Token(Token = "0x600065C")]
	[Address(RVA = "0x1253724", Offset = "0x1253724", VA = "0x1253724", Slot = "5")]
	public unsafe sealed override void* Alloc(int count)
	{
		//IL_0002: Expected I, but got O
		return (void*)unchecked((nint)null);
	}

	[Token(Token = "0x600065D")]
	[Address(RVA = "0x1253738", Offset = "0x1253738", VA = "0x1253738", Slot = "6")]
	public unsafe sealed override void* Alloc(int count, int alignment)
	{
		//IL_0002: Expected I, but got O
		return (void*)unchecked((nint)null);
	}

	[Token(Token = "0x600065E")]
	[Address(RVA = "0x1253750", Offset = "0x1253750", VA = "0x1253750", Slot = "4")]
	public unsafe sealed override void Free(void* ptr)
	{
	}

	[Token(Token = "0x600065F")]
	[Address(RVA = "0x1253760", Offset = "0x1253760", VA = "0x1253760", Slot = "7")]
	protected unsafe sealed override void Clear(void* dest, int count)
	{
	}

	[Token(Token = "0x6000660")]
	[Address(RVA = "0x124E0E4", Offset = "0x124E0E4", VA = "0x124E0E4")]
	public QuantumUnityNativeAllocator()
	{
	}
}
[Token(Token = "0x20002E8")]
public class QuantumUnityNativeUtility : Native.Utility
{
	[Token(Token = "0x20002E9")]
	private static class ObjectPinner
	{
		[Token(Token = "0x40003CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static object _pinLock;

		[Token(Token = "0x40003CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static object _pinnedObject;

		[Token(Token = "0x40003CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static ulong _pinnedHandle;

		[Token(Token = "0x600066A")]
		[Address(RVA = "0x105C848", Offset = "0x105C848", VA = "0x105C848")]
		private static void VerifyHandle(Native.ObjectHandle handle)
		{
		}

		[Token(Token = "0x600066B")]
		[Address(RVA = "0x105C910", Offset = "0x105C910", VA = "0x105C910")]
		public static Native.ObjectHandle HandleAcquire(object obj)
		{
			return default(Native.ObjectHandle);
		}

		[Token(Token = "0x600066C")]
		[Address(RVA = "0x105CB00", Offset = "0x105CB00", VA = "0x105CB00")]
		public static void HandleRelease(Native.ObjectHandle handle)
		{
		}

		[Token(Token = "0x600066D")]
		[Address(RVA = "0x105CD74", Offset = "0x105CD74", VA = "0x105CD74")]
		public static object GetObjectForHandle(Native.ObjectHandle handle)
		{
			return null;
		}
	}

	[Token(Token = "0x6000661")]
	[Address(RVA = "0x1253774", Offset = "0x1253774", VA = "0x1253774", Slot = "4")]
	public override Native.ObjectHandle HandleAcquire(object obj)
	{
		return default(Native.ObjectHandle);
	}

	[Token(Token = "0x6000662")]
	[Address(RVA = "0x12537D8", Offset = "0x12537D8", VA = "0x12537D8", Slot = "5")]
	public override void HandleRelease(Native.ObjectHandle handle)
	{
	}

	[Token(Token = "0x6000663")]
	[Address(RVA = "0x125384C", Offset = "0x125384C", VA = "0x125384C", Slot = "6")]
	public override object GetObjectForHandle(Native.ObjectHandle handle)
	{
		return null;
	}

	[Token(Token = "0x6000664")]
	[Address(RVA = "0x12538C0", Offset = "0x12538C0", VA = "0x12538C0", Slot = "8")]
	public unsafe override void Clear(void* dest, int count)
	{
	}

	[Token(Token = "0x6000665")]
	[Address(RVA = "0x12538D4", Offset = "0x12538D4", VA = "0x12538D4", Slot = "7")]
	public unsafe override void Copy(void* dest, void* src, int count)
	{
	}

	[Token(Token = "0x6000666")]
	[Address(RVA = "0x12538EC", Offset = "0x12538EC", VA = "0x12538EC", Slot = "9")]
	public unsafe override void Move(void* dest, void* src, int count)
	{
	}

	[Token(Token = "0x6000667")]
	[Address(RVA = "0x1253904", Offset = "0x1253904", VA = "0x1253904", Slot = "10")]
	public unsafe override int Compare(void* ptr1, void* ptr2, int count)
	{
		return default(int);
	}

	[Token(Token = "0x6000668")]
	[Address(RVA = "0x125391C", Offset = "0x125391C", VA = "0x125391C")]
	public static void ResetStatics()
	{
	}

	[Token(Token = "0x6000669")]
	[Address(RVA = "0x124DE34", Offset = "0x124DE34", VA = "0x124DE34")]
	public QuantumUnityNativeUtility()
	{
	}
}
[Token(Token = "0x20002EA")]
[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xBC6568", Offset = "0xBC6568")]
public class QuantumInputRecorderStarter : MonoBehaviour
{
	[Token(Token = "0x600066F")]
	[Address(RVA = "0x112702C", Offset = "0x112702C", VA = "0x112702C")]
	public QuantumInputRecorderStarter()
	{
	}
}
[Token(Token = "0x20002EB")]
public class QuantumInstantReplayDemo : MonoBehaviour
{
	[Token(Token = "0x40003CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float PlaybackSpeed;

	[Token(Token = "0x40003D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[QuantumInspector]
	[Quantum.Inspector.ReadOnly]
	public bool IsReplayRunning;

	[Token(Token = "0x40003D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	[AttributeAttribute(Name = "InspectorButtonAttribute", RVA = "0xBCE920", Offset = "0xBCE920")]
	public bool Button_StartInstantReplay;

	[Token(Token = "0x40003D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
	[AttributeAttribute(Name = "InspectorButtonAttribute", RVA = "0xBCE970", Offset = "0xBCE970")]
	public bool Button_StopInstantReplay;

	[Token(Token = "0x40003D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float ReplayLengthSec;

	[Token(Token = "0x40003D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool ShowReplayLabel;

	[Token(Token = "0x40003D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
	public bool ShowFadingEffect;

	[Token(Token = "0x40003D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xBCE9C0", Offset = "0xBCE9C0")]
	public QuantumInstantReplaySeekMode RewindMode;

	[Token(Token = "0x40003D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBCE9D0", Offset = "0xBCE9D0")]
	public bool EnableLoop;

	[Token(Token = "0x40003D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBCEA08", Offset = "0xBCEA08")]
	public float NormalizedTime;

	[Token(Token = "0x40003D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float previousNormalizedTime;

	[Token(Token = "0x40003DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private QuantumInstantReplay _instantReplay;

	[Token(Token = "0x40003DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool _isFading;

	[Token(Token = "0x40003DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float _fadingAlpha;

	[Token(Token = "0x40003DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Texture2D _fadingTexture;

	[Token(Token = "0x40003DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float _fadingTime;

	[Token(Token = "0x6000670")]
	[Address(RVA = "0x1127F68", Offset = "0x1127F68", VA = "0x1127F68")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000671")]
	[Address(RVA = "0x112804C", Offset = "0x112804C", VA = "0x112804C")]
	public void Update()
	{
	}

	[Token(Token = "0x6000672")]
	[Address(RVA = "0x112822C", Offset = "0x112822C", VA = "0x112822C")]
	private void CleanUpReplay()
	{
	}

	[Token(Token = "0x6000673")]
	[Address(RVA = "0x112844C", Offset = "0x112844C", VA = "0x112844C")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x6000674")]
	[Address(RVA = "0x1128514", Offset = "0x1128514", VA = "0x1128514")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000675")]
	[Address(RVA = "0x11285BC", Offset = "0x11285BC", VA = "0x11285BC")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000676")]
	[Address(RVA = "0x1128A38", Offset = "0x1128A38", VA = "0x1128A38")]
	private void OnReplayStarted(QuantumGame game)
	{
	}

	[Token(Token = "0x6000677")]
	[Address(RVA = "0x1128260", Offset = "0x1128260", VA = "0x1128260")]
	private void OnReplayStopped()
	{
	}

	[Token(Token = "0x6000678")]
	[Address(RVA = "0x1128C00", Offset = "0x1128C00", VA = "0x1128C00")]
	private void StartFading()
	{
	}

	[Token(Token = "0x6000679")]
	[Address(RVA = "0x1128C20", Offset = "0x1128C20", VA = "0x1128C20")]
	public void Editor_StartInstantReplay()
	{
	}

	[Token(Token = "0x600067A")]
	[Address(RVA = "0x1128D8C", Offset = "0x1128D8C", VA = "0x1128D8C")]
	public void Editor_StopInstantReplay()
	{
	}

	[Token(Token = "0x600067B")]
	[Address(RVA = "0x1128D9C", Offset = "0x1128D9C", VA = "0x1128D9C")]
	public QuantumInstantReplayDemo()
	{
	}

	[Token(Token = "0x600067C")]
	[Address(RVA = "0x1128DC4", Offset = "0x1128DC4", VA = "0x1128DC4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDCB18", Offset = "0xBDCB18")]
	private void <Awake>b__16_0(CallbackGameDestroyed c)
	{
	}
}
[Token(Token = "0x20002EC")]
public class QuantumRunnerLocalReplay : MonoBehaviour
{
	[Token(Token = "0x40003DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextAsset ReplayFile;

	[Token(Token = "0x40003E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextAsset DatabaseFile;

	[Token(Token = "0x40003E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string DatabasePath;

	[Token(Token = "0x40003E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TextAsset ChecksumFile;

	[Token(Token = "0x40003E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float SimulationSpeedMultiplier;

	[Token(Token = "0x40003E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public bool ShowReplayLabel;

	[Token(Token = "0x40003E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public InstantReplaySettings InstantReplayConfig;

	[Token(Token = "0x40003E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private QuantumRunner _runner;

	[Token(Token = "0x40003E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private IResourceManager _resourceManager;

	[Token(Token = "0x40003E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private InputProvider _inputProvider;

	[Token(Token = "0x600067D")]
	[Address(RVA = "0x124F120", Offset = "0x124F120", VA = "0x124F120")]
	private void Start()
	{
	}

	[Token(Token = "0x600067E")]
	[Address(RVA = "0x124F598", Offset = "0x124F598", VA = "0x124F598")]
	public void Update()
	{
	}

	[Token(Token = "0x600067F")]
	[Address(RVA = "0x124F7EC", Offset = "0x124F7EC", VA = "0x124F7EC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000680")]
	[Address(RVA = "0x124F89C", Offset = "0x124F89C", VA = "0x124F89C")]
	public QuantumRunnerLocalReplay()
	{
	}
}
[Token(Token = "0x20002ED")]
public class QuantumRunnerLocalSavegame : MonoBehaviour
{
	[Token(Token = "0x40003E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextAsset SavegameFile;

	[Token(Token = "0x40003EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextAsset DatabaseFile;

	[Token(Token = "0x40003EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string DatabasePath;

	[Token(Token = "0x40003EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public InstantReplaySettings InstantReplayConfig;

	[Token(Token = "0x40003ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private IResourceManager _resourceManager;

	[Token(Token = "0x6000681")]
	[Address(RVA = "0x124F8D4", Offset = "0x124F8D4", VA = "0x124F8D4")]
	public void Start()
	{
	}

	[Token(Token = "0x6000682")]
	[Address(RVA = "0x124FCA4", Offset = "0x124FCA4", VA = "0x124FCA4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000683")]
	[Address(RVA = "0x124FD54", Offset = "0x124FD54", VA = "0x124FD54")]
	public QuantumRunnerLocalSavegame()
	{
	}
}
[Token(Token = "0x20002EE")]
public class QuantumSimpleReplaySaver : MonoBehaviour
{
	[Token(Token = "0x40003EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string Folderpath;

	[Token(Token = "0x40003EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool isSaving;

	[Token(Token = "0x6000684")]
	[Address(RVA = "0x124FD84", Offset = "0x124FD84", VA = "0x124FD84")]
	public void Update()
	{
	}

	[Token(Token = "0x6000685")]
	[Address(RVA = "0x124FDE4", Offset = "0x124FDE4", VA = "0x124FDE4", Slot = "4")]
	protected virtual bool IsTriggerValid()
	{
		return default(bool);
	}

	[Token(Token = "0x6000686")]
	[Address(RVA = "0x124FE10", Offset = "0x124FE10", VA = "0x124FE10", Slot = "5")]
	protected virtual void Save()
	{
	}

	[Token(Token = "0x6000687")]
	[Address(RVA = "0x124FEAC", Offset = "0x124FEAC", VA = "0x124FEAC")]
	public QuantumSimpleReplaySaver()
	{
	}
}
[Token(Token = "0x20002EF")]
public class QuantumMemoryStats : MonoBehaviour
{
	[Token(Token = "0x40003F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text TotalMemory;

	[Token(Token = "0x40003F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text TotalPages;

	[Token(Token = "0x40003F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text TotalUsage;

	[Token(Token = "0x40003F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text PagesFree;

	[Token(Token = "0x40003F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Text PagesFull;

	[Token(Token = "0x40003F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Text PagesUsed;

	[Token(Token = "0x40003F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Text BytesAllocated;

	[Token(Token = "0x40003F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Text BytesReserved;

	[Token(Token = "0x40003F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Text BytesCommited;

	[Token(Token = "0x40003F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Text EntityCount;

	[Token(Token = "0x40003FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Text EntityMemory;

	[Token(Token = "0x40003FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string[] suf;

	[Token(Token = "0x6000688")]
	[Address(RVA = "0x1246F50", Offset = "0x1246F50", VA = "0x1246F50")]
	private void Update()
	{
	}

	[Token(Token = "0x6000689")]
	[Address(RVA = "0x124711C", Offset = "0x124711C", VA = "0x124711C")]
	private void UpdateStats(Frame f)
	{
	}

	[Token(Token = "0x600068A")]
	[Address(RVA = "0x12472E4", Offset = "0x12472E4", VA = "0x12472E4")]
	private void UpdateStatsValue(Text text, int value, bool isBytes = true)
	{
	}

	[Token(Token = "0x600068B")]
	[Address(RVA = "0x1247398", Offset = "0x1247398", VA = "0x1247398")]
	private static string BytesToString(long byteCount)
	{
		return null;
	}

	[Token(Token = "0x600068C")]
	[Address(RVA = "0x1247594", Offset = "0x1247594", VA = "0x1247594")]
	public QuantumMemoryStats()
	{
	}
}
[Token(Token = "0x20002F0")]
public class QuantumStats : MonoBehaviour
{
	[Token(Token = "0x40003FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text FrameVerified;

	[Token(Token = "0x40003FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text FramePredicted;

	[Token(Token = "0x40003FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text Predicted;

	[Token(Token = "0x40003FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text Resimulated;

	[Token(Token = "0x4000400")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Text SimulateTime;

	[Token(Token = "0x4000401")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Text SimulationState;

	[Token(Token = "0x4000402")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Text NetworkPing;

	[Token(Token = "0x4000403")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Text NetworkIn;

	[Token(Token = "0x4000404")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Text NetworkOut;

	[Token(Token = "0x4000405")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Text InputOffset;

	[Token(Token = "0x4000406")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Text ToggleButtonText;

	[Token(Token = "0x4000407")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject[] Toggles;

	[Token(Token = "0x4000408")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public bool StartEnabled;

	[Token(Token = "0x4000409")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Stopwatch _networkTimer;

	[Token(Token = "0x600068E")]
	[Address(RVA = "0x1252580", Offset = "0x1252580", VA = "0x1252580")]
	private void Start()
	{
	}

	[Token(Token = "0x600068F")]
	[Address(RVA = "0x1252740", Offset = "0x1252740", VA = "0x1252740")]
	private void Update()
	{
	}

	[Token(Token = "0x6000690")]
	[Address(RVA = "0x1252DB0", Offset = "0x1252DB0", VA = "0x1252DB0")]
	public void ResetNetworkStats()
	{
	}

	[Token(Token = "0x6000691")]
	[Address(RVA = "0x1252668", Offset = "0x1252668", VA = "0x1252668")]
	private void SetState(bool state)
	{
	}

	[Token(Token = "0x6000692")]
	[Address(RVA = "0x1252EFC", Offset = "0x1252EFC", VA = "0x1252EFC")]
	public void Toggle()
	{
	}

	[Token(Token = "0x6000693")]
	[Address(RVA = "0x1252F54", Offset = "0x1252F54", VA = "0x1252F54")]
	public static void Show()
	{
	}

	[Token(Token = "0x6000694")]
	[Address(RVA = "0x1253078", Offset = "0x1253078", VA = "0x1253078")]
	public static void Hide()
	{
	}

	[Token(Token = "0x6000695")]
	[Address(RVA = "0x1252F74", Offset = "0x1252F74", VA = "0x1252F74")]
	public static QuantumStats GetObject()
	{
		return null;
	}

	[Token(Token = "0x6000696")]
	[Address(RVA = "0x1253098", Offset = "0x1253098", VA = "0x1253098")]
	public QuantumStats()
	{
	}
}
[Token(Token = "0x20002F1")]
public static class FPMathUtils
{
	[Serializable]
	[Token(Token = "0x20002F2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBC65B0", Offset = "0xBC65B0")]
	private sealed class <>c
	{
		[Token(Token = "0x400040A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x400040B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static LutProvider <>9__0_0;

		[Token(Token = "0x60006AE")]
		[Address(RVA = "0x102BB84", Offset = "0x102BB84", VA = "0x102BB84")]
		public <>c()
		{
		}

		[Token(Token = "0x60006AF")]
		[Address(RVA = "0x102BB8C", Offset = "0x102BB8C", VA = "0x102BB8C")]
		internal byte[] <LoadLookupTables>b__0_0(string file)
		{
			return null;
		}
	}

	[Token(Token = "0x6000697")]
	[Address(RVA = "0x1047C9C", Offset = "0x1047C9C", VA = "0x1047C9C")]
	public static void LoadLookupTables(bool force = false)
	{
	}

	[Token(Token = "0x6000698")]
	[Address(RVA = "0x103DA30", Offset = "0x103DA30", VA = "0x103DA30")]
	public static FP ToFP(this float v)
	{
		return default(FP);
	}

	[Token(Token = "0x6000699")]
	[Address(RVA = "0x1051AE8", Offset = "0x1051AE8", VA = "0x1051AE8")]
	public static FP FlipRotation(this FP r)
	{
		return default(FP);
	}

	[Token(Token = "0x600069A")]
	[Address(RVA = "0x1051AF0", Offset = "0x1051AF0", VA = "0x1051AF0")]
	public static Quaternion ToUnityQuaternionDegrees(this FP r)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x600069B")]
	[Address(RVA = "0x104DBB4", Offset = "0x104DBB4", VA = "0x104DBB4")]
	public static Quaternion ToUnityQuaternion(this FP r)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x600069C")]
	[Address(RVA = "0x103C32C", Offset = "0x103C32C", VA = "0x103C32C")]
	public static Quaternion ToUnityQuaternion(this FPQuaternion r)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x600069D")]
	[Address(RVA = "0x10481A8", Offset = "0x10481A8", VA = "0x10481A8")]
	public static FPQuaternion ToFPQuaternion(this Quaternion r)
	{
		return default(FPQuaternion);
	}

	[Token(Token = "0x600069E")]
	[Address(RVA = "0x1049BC4", Offset = "0x1049BC4", VA = "0x1049BC4")]
	public static FP ToFPRotation2DDegrees(this Quaternion r)
	{
		return default(FP);
	}

	[Token(Token = "0x600069F")]
	[Address(RVA = "0x1047E08", Offset = "0x1047E08", VA = "0x1047E08")]
	public static FP ToFPRotation2D(this Quaternion r)
	{
		return default(FP);
	}

	[Token(Token = "0x60006A0")]
	[Address(RVA = "0x10499F4", Offset = "0x10499F4", VA = "0x10499F4")]
	public static FPVector2 ToFPVector2(this Vector2 v)
	{
		return default(FPVector2);
	}

	[Token(Token = "0x60006A1")]
	[Address(RVA = "0x1051B10", Offset = "0x1051B10", VA = "0x1051B10")]
	public static Vector2 ToUnityVector2(this FPVector2 v)
	{
		return default(Vector2);
	}

	[Token(Token = "0x60006A2")]
	[Address(RVA = "0x1047DA8", Offset = "0x1047DA8", VA = "0x1047DA8")]
	public static FPVector2 ToFPVector2(this Vector3 v)
	{
		return default(FPVector2);
	}

	[Token(Token = "0x60006A3")]
	[Address(RVA = "0x104AD48", Offset = "0x104AD48", VA = "0x104AD48")]
	public static FP ToFPVerticalPosition(this Vector3 v)
	{
		return default(FP);
	}

	[Token(Token = "0x60006A4")]
	[Address(RVA = "0x1048130", Offset = "0x1048130", VA = "0x1048130")]
	public static FPVector3 ToFPVector3(this Vector3 v)
	{
		return default(FPVector3);
	}

	[Token(Token = "0x60006A5")]
	[Address(RVA = "0x104DB94", Offset = "0x104DB94", VA = "0x104DB94")]
	public static Vector3 ToUnityVector3(this FPVector2 v)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60006A6")]
	[Address(RVA = "0x103B6C4", Offset = "0x103B6C4", VA = "0x103B6C4")]
	public static Vector3 ToUnityVector3(this FPVector3 v)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60006A7")]
	[Address(RVA = "0x1051B2C", Offset = "0x1051B2C", VA = "0x1051B2C")]
	public static Vector3 ToUnityVector3(this FPVector3 v, bool quantumXYSwizzle)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60006A8")]
	[Address(RVA = "0x1051B58", Offset = "0x1051B58", VA = "0x1051B58")]
	public static Vector2 ToUnityVector2(this FPVector3 v)
	{
		return default(Vector2);
	}

	[Token(Token = "0x60006A9")]
	[Address(RVA = "0x1051B78", Offset = "0x1051B78", VA = "0x1051B78")]
	public static Vector3 RoundToInt(this Vector3 v)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60006AA")]
	[Address(RVA = "0x1051BD4", Offset = "0x1051BD4", VA = "0x1051BD4")]
	public static Vector2 RoundToInt(this Vector2 v)
	{
		return default(Vector2);
	}

	[Token(Token = "0x60006AB")]
	[Address(RVA = "0x1051C10", Offset = "0x1051C10", VA = "0x1051C10")]
	public static Color32 ToColor32(this ColorRGBA clr)
	{
		return default(Color32);
	}

	[Token(Token = "0x60006AC")]
	[Address(RVA = "0x1051C4C", Offset = "0x1051C4C", VA = "0x1051C4C")]
	public static Color ToColor(this ColorRGBA clr)
	{
		return default(Color);
	}
}
[Token(Token = "0x20002F3")]
[DisallowMultipleComponent]
public class SteamManager : MonoBehaviour
{
	[Token(Token = "0x17000146")]
	public static bool Initialized
	{
		[Token(Token = "0x60006B0")]
		[Address(RVA = "0x114BA34", Offset = "0x114BA34", VA = "0x114BA34")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60006B1")]
	[Address(RVA = "0x114BA3C", Offset = "0x114BA3C", VA = "0x114BA3C")]
	public SteamManager()
	{
	}
}
namespace QuickOutline.Scripts
{
	[Token(Token = "0x20002F4")]
	[DisallowMultipleComponent]
	public class Outline : MonoBehaviour
	{
		[Token(Token = "0x20002F5")]
		public enum Mode
		{
			[Token(Token = "0x400041D")]
			OutlineAll,
			[Token(Token = "0x400041E")]
			OutlineVisible,
			[Token(Token = "0x400041F")]
			OutlineHidden,
			[Token(Token = "0x4000420")]
			OutlineAndSilhouette,
			[Token(Token = "0x4000421")]
			SilhouetteOnly
		}

		[Serializable]
		[Token(Token = "0x20002F6")]
		private class ListVector3
		{
			[Token(Token = "0x4000422")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public List<Vector3> data;

			[Token(Token = "0x60006C6")]
			[Address(RVA = "0x11E206C", Offset = "0x11E206C", VA = "0x11E206C")]
			public ListVector3()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20002F7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBC65E0", Offset = "0xBC65E0")]
		private sealed class <>c
		{
			[Token(Token = "0x4000423")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000424")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Vector3, int, KeyValuePair<Vector3, int>> <>9__37_0;

			[Token(Token = "0x4000425")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<KeyValuePair<Vector3, int>, Vector3> <>9__37_1;

			[Token(Token = "0x60006C8")]
			[Address(RVA = "0x11E1F74", Offset = "0x11E1F74", VA = "0x11E1F74")]
			public <>c()
			{
			}

			[Token(Token = "0x60006C9")]
			[Address(RVA = "0x11E1F7C", Offset = "0x11E1F7C", VA = "0x11E1F7C")]
			internal KeyValuePair<Vector3, int> <SmoothNormals>b__37_0(Vector3 vertex, int index)
			{
				return default(KeyValuePair<Vector3, int>);
			}

			[Token(Token = "0x60006CA")]
			[Address(RVA = "0x11E2008", Offset = "0x11E2008", VA = "0x11E2008")]
			internal Vector3 <SmoothNormals>b__37_1(KeyValuePair<Vector3, int> pair)
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x400040C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly HashSet<Mesh> RegisteredMeshes;

		[Token(Token = "0x400040D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly int OutlineColor1;

		[Token(Token = "0x400040E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private static readonly int ZTest;

		[Token(Token = "0x400040F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static readonly int StencilMask;

		[Token(Token = "0x4000410")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private static readonly int Width;

		[Token(Token = "0x4000411")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Mode outlineMode;

		[Token(Token = "0x4000412")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private Color outlineColor;

		[Token(Token = "0x4000413")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBCEA40", Offset = "0xBCEA40")]
		private float outlineWidth;

		[Token(Token = "0x4000414")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBCEA80", Offset = "0xBCEA80")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBCEA80", Offset = "0xBCEA80")]
		private bool precomputeOutline;

		[Token(Token = "0x4000415")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[@HideInInspector]
		[SerializeField]
		private List<Mesh> bakeKeys;

		[Token(Token = "0x4000416")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		[@HideInInspector]
		private List<ListVector3> bakeValues;

		[Token(Token = "0x4000417")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool _needsUpdate;

		[Token(Token = "0x4000418")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private int _outlineBit;

		[Token(Token = "0x4000419")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Material _outlineFillMaterial;

		[Token(Token = "0x400041A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Material _outlineMaskMaterial;

		[Token(Token = "0x400041B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Renderer[] _renderers;

		[Token(Token = "0x17000147")]
		public Mode OutlineMode
		{
			[Token(Token = "0x60006B2")]
			[Address(RVA = "0x1021E4C", Offset = "0x1021E4C", VA = "0x1021E4C")]
			get
			{
				return default(Mode);
			}
			[Token(Token = "0x60006B3")]
			[Address(RVA = "0x1021E54", Offset = "0x1021E54", VA = "0x1021E54")]
			set
			{
			}
		}

		[Token(Token = "0x17000148")]
		public Color OutlineColor
		{
			[Token(Token = "0x60006B4")]
			[Address(RVA = "0x1021E70", Offset = "0x1021E70", VA = "0x1021E70")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x60006B5")]
			[Address(RVA = "0x1021E7C", Offset = "0x1021E7C", VA = "0x1021E7C")]
			set
			{
			}
		}

		[Token(Token = "0x17000149")]
		public float OutlineWidth
		{
			[Token(Token = "0x60006B6")]
			[Address(RVA = "0x1021EF0", Offset = "0x1021EF0", VA = "0x1021EF0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60006B7")]
			[Address(RVA = "0x1021EF8", Offset = "0x1021EF8", VA = "0x1021EF8")]
			set
			{
			}
		}

		[Token(Token = "0x1700014A")]
		public int OutlineBit
		{
			[Token(Token = "0x60006B8")]
			[Address(RVA = "0x1021F84", Offset = "0x1021F84", VA = "0x1021F84")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60006B9")]
			[Address(RVA = "0x1021F8C", Offset = "0x1021F8C", VA = "0x1021F8C")]
			set
			{
			}
		}

		[Token(Token = "0x60006BA")]
		[Address(RVA = "0x1021FA8", Offset = "0x1021FA8", VA = "0x1021FA8")]
		private void Awake()
		{
		}

		[Token(Token = "0x60006BB")]
		[Address(RVA = "0x102240C", Offset = "0x102240C", VA = "0x102240C")]
		private void Update()
		{
		}

		[Token(Token = "0x60006BC")]
		[Address(RVA = "0x1022734", Offset = "0x1022734", VA = "0x1022734")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60006BD")]
		[Address(RVA = "0x102286C", Offset = "0x102286C", VA = "0x102286C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60006BE")]
		[Address(RVA = "0x1022990", Offset = "0x1022990", VA = "0x1022990")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60006BF")]
		[Address(RVA = "0x1022A04", Offset = "0x1022A04", VA = "0x1022A04")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x60006C0")]
		[Address(RVA = "0x1022AFC", Offset = "0x1022AFC", VA = "0x1022AFC")]
		private void Bake()
		{
		}

		[Token(Token = "0x60006C1")]
		[Address(RVA = "0x1022124", Offset = "0x1022124", VA = "0x1022124")]
		private void LoadSmoothNormals()
		{
		}

		[Token(Token = "0x60006C2")]
		[Address(RVA = "0x1022CD8", Offset = "0x1022CD8", VA = "0x1022CD8")]
		private List<Vector3> SmoothNormals(Mesh mesh)
		{
			return null;
		}

		[Token(Token = "0x60006C3")]
		[Address(RVA = "0x1022420", Offset = "0x1022420", VA = "0x1022420")]
		private void UpdateMaterialProperties()
		{
		}

		[Token(Token = "0x60006C4")]
		[Address(RVA = "0x102379C", Offset = "0x102379C", VA = "0x102379C")]
		public Outline()
		{
		}
	}
}
namespace Quantum
{
	[Token(Token = "0x20002F8")]
	public class AssetResourceContainer : ScriptableObject
	{
		[Serializable]
		[Token(Token = "0x20002F9")]
		public class AssetResourceInfo_Addressables : AssetResourceInfo
		{
			[Token(Token = "0x400042A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string Address;

			[Token(Token = "0x60006D3")]
			[Address(RVA = "0x11414A8", Offset = "0x11414A8", VA = "0x11414A8")]
			public AssetResourceInfo_Addressables()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20002FA")]
		public class AssetResourceInfoGroup_Addressables : AssetResourceInfoGroup<AssetResourceInfo_Addressables>
		{
			[Token(Token = "0x1700014D")]
			public override int SortOrder
			{
				[Token(Token = "0x60006D4")]
				[Address(RVA = "0x114118C", Offset = "0x114118C", VA = "0x114118C", Slot = "5")]
				get
				{
					return default(int);
				}
			}

			[Token(Token = "0x60006D5")]
			[Address(RVA = "0x1141194", Offset = "0x1141194", VA = "0x1141194", Slot = "6")]
			public override UnityResourceLoader.ILoader CreateLoader()
			{
				return null;
			}

			[Token(Token = "0x60006D6")]
			[Address(RVA = "0x1141274", Offset = "0x1141274", VA = "0x1141274")]
			public AssetResourceInfoGroup_Addressables()
			{
			}
		}

		[Token(Token = "0x20002FB")]
		private class Loader_Addressables : UnityResourceLoader.LoaderBase<AssetResourceInfo_Addressables, AsyncOperationHandle<AssetBase>>
		{
			[Token(Token = "0x400042B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private Dictionary<AssetGuid, AsyncOperationHandle<AssetBase>> _handles;

			[Token(Token = "0x60006D7")]
			[Address(RVA = "0x11414C0", Offset = "0x11414C0", VA = "0x11414C0", Slot = "10")]
			protected override AssetBase GetAssetFromAsyncState(AssetResourceInfo_Addressables resourceInfo, AsyncOperationHandle<AssetBase> asyncState)
			{
				return null;
			}

			[Token(Token = "0x60006D8")]
			[Address(RVA = "0x1141598", Offset = "0x1141598", VA = "0x1141598", Slot = "11")]
			protected override bool IsDone(AsyncOperationHandle<AssetBase> asyncState)
			{
				return default(bool);
			}

			[Token(Token = "0x60006D9")]
			[Address(RVA = "0x11415E4", Offset = "0x11415E4", VA = "0x11415E4", Slot = "12")]
			protected override AsyncOperationHandle<AssetBase> LoadAsync(AssetResourceInfo_Addressables info)
			{
				return default(AsyncOperationHandle<AssetBase>);
			}

			[Token(Token = "0x60006DA")]
			[Address(RVA = "0x11416E4", Offset = "0x11416E4", VA = "0x11416E4", Slot = "13")]
			protected override AssetBase LoadSync(AssetResourceInfo_Addressables info)
			{
				return null;
			}

			[Token(Token = "0x60006DB")]
			[Address(RVA = "0x1141A2C", Offset = "0x1141A2C", VA = "0x1141A2C", Slot = "14")]
			protected override void Unload(AssetResourceInfo_Addressables info, AssetBase asset)
			{
			}

			[Token(Token = "0x60006DC")]
			[Address(RVA = "0x11411E8", Offset = "0x11411E8", VA = "0x11411E8")]
			public Loader_Addressables()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20002FC")]
		public class AssetResourceInfo_AssetBundle : AssetResourceInfo
		{
			[Token(Token = "0x400042C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string AssetBundle;

			[Token(Token = "0x400042D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string AssetName;

			[Token(Token = "0x60006DD")]
			[Address(RVA = "0x11414B0", Offset = "0x11414B0", VA = "0x11414B0")]
			public AssetResourceInfo_AssetBundle()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20002FD")]
		public class AssetResourceInfoGroup_AssetBundle : AssetResourceInfoGroup<AssetResourceInfo_AssetBundle>
		{
			[Token(Token = "0x1700014E")]
			public override int SortOrder
			{
				[Token(Token = "0x60006DE")]
				[Address(RVA = "0x11412C0", Offset = "0x11412C0", VA = "0x11412C0", Slot = "5")]
				get
				{
					return default(int);
				}
			}

			[Token(Token = "0x60006DF")]
			[Address(RVA = "0x11412C8", Offset = "0x11412C8", VA = "0x11412C8", Slot = "6")]
			public override UnityResourceLoader.ILoader CreateLoader()
			{
				return null;
			}

			[Token(Token = "0x60006E0")]
			[Address(RVA = "0x1141368", Offset = "0x1141368", VA = "0x1141368")]
			public AssetResourceInfoGroup_AssetBundle()
			{
			}
		}

		[Token(Token = "0x20002FE")]
		private class Loader_AssetBundles : UnityResourceLoader.LoaderBase<AssetResourceInfo_AssetBundle, AssetBundleRequest>
		{
			[Token(Token = "0x20002FF")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBC65F0", Offset = "0xBC65F0")]
			private sealed class <>c__DisplayClass5_0
			{
				[Token(Token = "0x400042E")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				public AssetResourceInfo_AssetBundle resource;

				[Token(Token = "0x60006E8")]
				[Address(RVA = "0x1068E9C", Offset = "0x1068E9C", VA = "0x1068E9C")]
				public <>c__DisplayClass5_0()
				{
				}

				[Token(Token = "0x60006E9")]
				[Address(RVA = "0x1068EA4", Offset = "0x1068EA4", VA = "0x1068EA4")]
				internal bool <GetAssetBundleOrThrow>b__0(AssetBundle ab)
				{
					return default(bool);
				}
			}

			[Token(Token = "0x60006E1")]
			[Address(RVA = "0x1141B80", Offset = "0x1141B80", VA = "0x1141B80", Slot = "10")]
			protected override AssetBase GetAssetFromAsyncState(AssetResourceInfo_AssetBundle resourceInfo, AssetBundleRequest asyncState)
			{
				return null;
			}

			[Token(Token = "0x60006E2")]
			[Address(RVA = "0x1141C78", Offset = "0x1141C78", VA = "0x1141C78", Slot = "11")]
			protected override bool IsDone(AssetBundleRequest asyncState)
			{
				return default(bool);
			}

			[Token(Token = "0x60006E3")]
			[Address(RVA = "0x1141C94", Offset = "0x1141C94", VA = "0x1141C94", Slot = "12")]
			protected override AssetBundleRequest LoadAsync(AssetResourceInfo_AssetBundle info)
			{
				return null;
			}

			[Token(Token = "0x60006E4")]
			[Address(RVA = "0x1141F4C", Offset = "0x1141F4C", VA = "0x1141F4C", Slot = "13")]
			protected override AssetBase LoadSync(AssetResourceInfo_AssetBundle info)
			{
				return null;
			}

			[Token(Token = "0x60006E5")]
			[Address(RVA = "0x1142020", Offset = "0x1142020", VA = "0x1142020", Slot = "14")]
			protected override void Unload(AssetResourceInfo_AssetBundle info, AssetBase asset)
			{
			}

			[Token(Token = "0x60006E6")]
			[Address(RVA = "0x1141D34", Offset = "0x1141D34", VA = "0x1141D34")]
			private AssetBundle GetAssetBundleOrThrow(AssetResourceInfo_AssetBundle resource)
			{
				return null;
			}

			[Token(Token = "0x60006E7")]
			[Address(RVA = "0x114131C", Offset = "0x114131C", VA = "0x114131C")]
			public Loader_AssetBundles()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000300")]
		public class AssetResourceInfo_Resources : AssetResourceInfo
		{
			[Token(Token = "0x400042F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string ResourcePath;

			[Token(Token = "0x60006EA")]
			[Address(RVA = "0x11414B8", Offset = "0x11414B8", VA = "0x11414B8")]
			public AssetResourceInfo_Resources()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000301")]
		public class AssetResourceInfoGroup_Resources : AssetResourceInfoGroup<AssetResourceInfo_Resources>
		{
			[Token(Token = "0x1700014F")]
			public override int SortOrder
			{
				[Token(Token = "0x60006EB")]
				[Address(RVA = "0x11413B4", Offset = "0x11413B4", VA = "0x11413B4", Slot = "5")]
				get
				{
					return default(int);
				}
			}

			[Token(Token = "0x60006EC")]
			[Address(RVA = "0x11413BC", Offset = "0x11413BC", VA = "0x11413BC", Slot = "6")]
			public override UnityResourceLoader.ILoader CreateLoader()
			{
				return null;
			}

			[Token(Token = "0x60006ED")]
			[Address(RVA = "0x114145C", Offset = "0x114145C", VA = "0x114145C")]
			public AssetResourceInfoGroup_Resources()
			{
			}
		}

		[Token(Token = "0x2000302")]
		private class Loader_Resources : UnityResourceLoader.LoaderBase<AssetResourceInfo_Resources, ResourceRequest>
		{
			[Token(Token = "0x60006EE")]
			[Address(RVA = "0x1142024", Offset = "0x1142024", VA = "0x1142024", Slot = "10")]
			protected override AssetBase GetAssetFromAsyncState(AssetResourceInfo_Resources info, ResourceRequest asyncState)
			{
				return null;
			}

			[Token(Token = "0x60006EF")]
			[Address(RVA = "0x1142130", Offset = "0x1142130", VA = "0x1142130", Slot = "11")]
			protected override bool IsDone(ResourceRequest asyncState)
			{
				return default(bool);
			}

			[Token(Token = "0x60006F0")]
			[Address(RVA = "0x114214C", Offset = "0x114214C", VA = "0x114214C", Slot = "12")]
			protected override ResourceRequest LoadAsync(AssetResourceInfo_Resources info)
			{
				return null;
			}

			[Token(Token = "0x60006F1")]
			[Address(RVA = "0x11421A0", Offset = "0x11421A0", VA = "0x11421A0", Slot = "13")]
			protected override AssetBase LoadSync(AssetResourceInfo_Resources info)
			{
				return null;
			}

			[Token(Token = "0x60006F2")]
			[Address(RVA = "0x1142264", Offset = "0x1142264", VA = "0x1142264", Slot = "14")]
			protected override void Unload(AssetResourceInfo_Resources info, AssetBase asset)
			{
			}

			[Token(Token = "0x60006F3")]
			[Address(RVA = "0x1141410", Offset = "0x1141410", VA = "0x1141410")]
			public Loader_Resources()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000303")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBC6600", Offset = "0xBC6600")]
		private sealed class <>c
		{
			[Token(Token = "0x4000430")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000431")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<AssetResourceInfoGroup, int> <>9__2_0;

			[Token(Token = "0x4000432")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<AssetResourceInfoGroup, UnityResourceLoader.ILoader> <>9__3_0;

			[Token(Token = "0x4000433")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Func<FieldInfo, bool> <>9__8_0;

			[Token(Token = "0x4000434")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static Func<AssetResourceInfoGroup, int> <>9__8_2;

			[Token(Token = "0x60006F5")]
			[Address(RVA = "0x1140FC8", Offset = "0x1140FC8", VA = "0x1140FC8")]
			public <>c()
			{
			}

			[Token(Token = "0x60006F6")]
			[Address(RVA = "0x1140FD0", Offset = "0x1140FD0", VA = "0x1140FD0")]
			internal int <get_AssetCount>b__2_0(AssetResourceInfoGroup x)
			{
				return default(int);
			}

			[Token(Token = "0x60006F7")]
			[Address(RVA = "0x1141090", Offset = "0x1141090", VA = "0x1141090")]
			internal UnityResourceLoader.ILoader <CreateLoader>b__3_0(AssetResourceInfoGroup x)
			{
				return null;
			}

			[Token(Token = "0x60006F8")]
			[Address(RVA = "0x11410B0", Offset = "0x11410B0", VA = "0x11410B0")]
			internal bool <InitGroups>b__8_0(FieldInfo x)
			{
				return default(bool);
			}

			[Token(Token = "0x60006F9")]
			[Address(RVA = "0x114116C", Offset = "0x114116C", VA = "0x114116C")]
			internal int <InitGroups>b__8_2(AssetResourceInfoGroup x)
			{
				return default(int);
			}
		}

		[Token(Token = "0x4000426")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<AssetResourceInfoGroup> _groups;

		[Token(Token = "0x4000427")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AssetResourceInfoGroup_Addressables AddressablesGroup;

		[Token(Token = "0x4000428")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AssetResourceInfoGroup_AssetBundle AssetBundlesGroup;

		[Token(Token = "0x4000429")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AssetResourceInfoGroup_Resources ResourcesGroup;

		[Token(Token = "0x1700014B")]
		public int AssetCount
		{
			[Token(Token = "0x60006CB")]
			[Address(RVA = "0x1329A20", Offset = "0x1329A20", VA = "0x1329A20")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700014C")]
		public IReadOnlyList<AssetResourceInfoGroup> Groups
		{
			[Token(Token = "0x60006CE")]
			[Address(RVA = "0x1329B4C", Offset = "0x1329B4C", VA = "0x1329B4C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60006CC")]
		[Address(RVA = "0x1329B7C", Offset = "0x1329B7C", VA = "0x1329B7C")]
		public UnityResourceLoader CreateLoader()
		{
			return null;
		}

		[Token(Token = "0x60006CD")]
		[Address(RVA = "0x1329D00", Offset = "0x1329D00", VA = "0x1329D00")]
		public List<AssetResource> CreateResourceWrappers()
		{
			return null;
		}

		[Token(Token = "0x60006CF")]
		[Address(RVA = "0x132A470", Offset = "0x132A470", VA = "0x132A470")]
		public AssetResourceInfo FindResourceInfo(AssetGuid guid)
		{
			return null;
		}

		[Token(Token = "0x60006D0")]
		[Address(RVA = "0x132A1A0", Offset = "0x132A1A0", VA = "0x132A1A0")]
		private void InitGroups()
		{
		}

		[Token(Token = "0x60006D1")]
		[Address(RVA = "0x132A878", Offset = "0x132A878", VA = "0x132A878")]
		public AssetResourceContainer()
		{
		}

		[Token(Token = "0x60006D2")]
		[Address(RVA = "0x132A880", Offset = "0x132A880", VA = "0x132A880")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDCC78", Offset = "0xBDCC78")]
		private AssetResourceInfoGroup <InitGroups>b__8_1(FieldInfo x)
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x2000304")]
	public class AssetResourceInfo
	{
		[Token(Token = "0x4000435")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string Path;

		[Token(Token = "0x4000436")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AssetRef AssetRef;

		[Token(Token = "0x17000150")]
		public AssetGuid Guid
		{
			[Token(Token = "0x60006FA")]
			[Address(RVA = "0x132A998", Offset = "0x132A998", VA = "0x132A998")]
			get
			{
				return default(AssetGuid);
			}
			[Token(Token = "0x60006FB")]
			[Address(RVA = "0x132A9A0", Offset = "0x132A9A0", VA = "0x132A9A0")]
			set
			{
			}
		}

		[Token(Token = "0x17000151")]
		public bool IsNestedAsset
		{
			[Token(Token = "0x60006FC")]
			[Address(RVA = "0x132A9A8", Offset = "0x132A9A8", VA = "0x132A9A8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60006FD")]
		[Address(RVA = "0x132A9F8", Offset = "0x132A9F8", VA = "0x132A9F8")]
		public AssetResourceInfo()
		{
		}
	}
	[Token(Token = "0x2000305")]
	public abstract class AssetResourceInfoGroup
	{
		[Token(Token = "0x17000152")]
		public abstract IReadOnlyList<AssetResourceInfo> Resources
		{
			[Token(Token = "0x60006FE")]
			get;
		}

		[Token(Token = "0x17000153")]
		public abstract int SortOrder
		{
			[Token(Token = "0x60006FF")]
			get;
		}

		[Token(Token = "0x6000700")]
		public abstract UnityResourceLoader.ILoader CreateLoader();

		[Token(Token = "0x6000701")]
		public abstract void Clear();

		[Token(Token = "0x6000702")]
		public abstract void Add(AssetResourceInfo info);

		[Token(Token = "0x6000703")]
		[Address(RVA = "0x132A778", Offset = "0x132A778", VA = "0x132A778")]
		public AssetResourceInfo FindResourceInfo(AssetGuid guid)
		{
			return null;
		}

		[Token(Token = "0x6000704")]
		[Address(RVA = "0x132AA00", Offset = "0x132AA00", VA = "0x132AA00")]
		private static int BinarySearch(IReadOnlyList<AssetResourceInfo> list, AssetGuid guid)
		{
			return default(int);
		}

		[Token(Token = "0x6000705")]
		[Address(RVA = "0x132AB9C", Offset = "0x132AB9C", VA = "0x132AB9C")]
		protected AssetResourceInfoGroup()
		{
		}
	}
	[Token(Token = "0x2000306")]
	public abstract class AssetResourceInfoGroup<T> : AssetResourceInfoGroup where T : AssetResourceInfo, new()
	{
		[Token(Token = "0x4000437")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private List<T> _resources;

		[Token(Token = "0x17000154")]
		public override IReadOnlyList<AssetResourceInfo> Resources
		{
			[Token(Token = "0x6000706")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000155")]
		public IReadOnlyList<T> ResourcesT
		{
			[Token(Token = "0x6000707")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000708")]
		public override void Clear()
		{
		}

		[Token(Token = "0x6000709")]
		public override void Add(AssetResourceInfo info)
		{
		}

		[Token(Token = "0x600070A")]
		protected AssetResourceInfoGroup()
		{
		}
	}
	[Token(Token = "0x2000307")]
	public sealed class UnityResourceLoader : IResourceLoader, IDisposable
	{
		[Token(Token = "0x2000308")]
		public sealed class UnityAssetResource : AssetResource
		{
			[Token(Token = "0x400043D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public AssetBase AssetWrapper;

			[Token(Token = "0x400043E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public AssetResourceInfo ResourceInfo;

			[Token(Token = "0x400043F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public bool IsBeingLoadedAsync;

			[Token(Token = "0x4000440")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			public int LoaderIndex;

			[Token(Token = "0x600071B")]
			[Address(RVA = "0x1067D70", Offset = "0x1067D70", VA = "0x1067D70")]
			public UnityAssetResource(AssetResourceInfo resourceInfo, int groupIndex)
			{
			}
		}

		[Token(Token = "0x2000309")]
		public interface ILoader : IDisposable
		{
			[Token(Token = "0x600071C")]
			void LoadAsync(AssetResourceInfo resourceInfo);

			[Token(Token = "0x600071D")]
			AssetBase LoadSync(AssetResourceInfo resourceInfo);

			[Token(Token = "0x600071E")]
			void Unload(AssetResourceInfo resourceInfo, AssetBase asset);

			[Token(Token = "0x600071F")]
			void UpdateLoadAsync(Action<AssetResourceInfo, AssetBase> asyncLoadedCallback);
		}

		[Token(Token = "0x200030A")]
		public abstract class LoaderBase<T, AsyncState> : ILoader, IDisposable where T : AssetResourceInfo
		{
			[Token(Token = "0x4000441")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private List<(T, AsyncState)> _asyncRequests;

			[Token(Token = "0x6000720")]
			public virtual void Dispose()
			{
			}

			[Token(Token = "0x6000721")]
			private void Quantum.UnityResourceLoader.ILoader.LoadAsync(AssetResourceInfo resourceInfo)
			{
			}

			[Token(Token = "0x6000722")]
			private AssetBase Quantum.UnityResourceLoader.ILoader.LoadSync(AssetResourceInfo resourceInfo)
			{
				return null;
			}

			[Token(Token = "0x6000723")]
			private void Quantum.UnityResourceLoader.ILoader.Unload(AssetResourceInfo resourceInfo, AssetBase asset)
			{
			}

			[Token(Token = "0x6000724")]
			private void Quantum.UnityResourceLoader.ILoader.UpdateLoadAsync(Action<AssetResourceInfo, AssetBase> asyncLoadedCallback)
			{
			}

			[Token(Token = "0x6000725")]
			protected static AssetBase FindAsset(UnityEngine.Object[] assets, AssetGuid subAssetGuid)
			{
				return null;
			}

			[Token(Token = "0x6000726")]
			protected static AssetBase FindAsset(AssetBase[] assets, AssetGuid subAssetGuid)
			{
				return null;
			}

			[Token(Token = "0x6000727")]
			protected abstract AssetBase GetAssetFromAsyncState(T resourceInfo, AsyncState asyncState);

			[Token(Token = "0x6000728")]
			protected abstract bool IsDone(AsyncState asyncState);

			[Token(Token = "0x6000729")]
			protected abstract AsyncState LoadAsync(T info);

			[Token(Token = "0x600072A")]
			protected abstract AssetBase LoadSync(T info);

			[Token(Token = "0x600072B")]
			protected virtual void Unload(T info, AssetBase asset)
			{
			}

			[Token(Token = "0x600072C")]
			protected LoaderBase()
			{
			}
		}

		[Token(Token = "0x4000438")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly ILoader[] _loaders;

		[Token(Token = "0x4000439")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Dictionary<AssetGuid, UnityAssetResource> _inProgress;

		[Token(Token = "0x400043A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Action<AssetResourceInfo, AssetBase> _loadedAsync;

		[Token(Token = "0x14000001")]
		public event ResourceLoaded LoadCompleted
		{
			[Token(Token = "0x600070E")]
			[Address(RVA = "0x112AC44", Offset = "0x112AC44", VA = "0x112AC44", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDCC88", Offset = "0xBDCC88")]
			add
			{
			}
			[Token(Token = "0x600070F")]
			[Address(RVA = "0x112ACE4", Offset = "0x112ACE4", VA = "0x112ACE4", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDCC98", Offset = "0xBDCC98")]
			remove
			{
			}
		}

		[Token(Token = "0x14000002")]
		public event ResourceLoadFailed LoadFailed
		{
			[Token(Token = "0x6000710")]
			[Address(RVA = "0x112AD84", Offset = "0x112AD84", VA = "0x112AD84", Slot = "6")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDCCA8", Offset = "0xBDCCA8")]
			add
			{
			}
			[Token(Token = "0x6000711")]
			[Address(RVA = "0x112AE24", Offset = "0x112AE24", VA = "0x112AE24", Slot = "7")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDCCB8", Offset = "0xBDCCB8")]
			remove
			{
			}
		}

		[Token(Token = "0x600070B")]
		[Address(RVA = "0x112AAEC", Offset = "0x112AAEC", VA = "0x112AAEC")]
		public static AssetResource CreateAssetResource(AssetResourceInfo resouceInfo, int loaderIndex)
		{
			return null;
		}

		[Token(Token = "0x600070C")]
		[Address(RVA = "0x112A6A0", Offset = "0x112A6A0", VA = "0x112A6A0")]
		public static AssetBase GetWrapperFromResource(AssetResource resource)
		{
			return null;
		}

		[Token(Token = "0x600070D")]
		[Address(RVA = "0x112AB5C", Offset = "0x112AB5C", VA = "0x112AB5C")]
		public UnityResourceLoader(ILoader[] loaders)
		{
		}

		[Token(Token = "0x6000712")]
		[Address(RVA = "0x112AEC4", Offset = "0x112AEC4", VA = "0x112AEC4", Slot = "11")]
		public void Dispose()
		{
		}

		[Token(Token = "0x6000713")]
		[Address(RVA = "0x112AFBC", Offset = "0x112AFBC", VA = "0x112AFBC", Slot = "10")]
		private void Quantum.IResourceLoader.DisposeResource(AssetResource resource)
		{
		}

		[Token(Token = "0x6000714")]
		[Address(RVA = "0x112B10C", Offset = "0x112B10C", VA = "0x112B10C", Slot = "9")]
		private void Quantum.IResourceLoader.LoadResource(AssetResource resource)
		{
		}

		[Token(Token = "0x6000715")]
		[Address(RVA = "0x112B4D4", Offset = "0x112B4D4", VA = "0x112B4D4", Slot = "8")]
		private void Quantum.IResourceLoader.LoadResourceAsync(AssetResource resource)
		{
		}

		[Token(Token = "0x6000716")]
		[Address(RVA = "0x112A8BC", Offset = "0x112A8BC", VA = "0x112A8BC")]
		public void Update()
		{
		}

		[Token(Token = "0x6000717")]
		[Address(RVA = "0x112B4B0", Offset = "0x112B4B0", VA = "0x112B4B0")]
		private void FinishLoading(UnityAssetResource resource, Exception error)
		{
		}

		[Token(Token = "0x6000718")]
		[Address(RVA = "0x112B304", Offset = "0x112B304", VA = "0x112B304")]
		private void FinishLoading(UnityAssetResource resource, AssetBase asset)
		{
		}

		[Token(Token = "0x6000719")]
		[Address(RVA = "0x112B0C8", Offset = "0x112B0C8", VA = "0x112B0C8")]
		private ILoader GetLoaderForResource(UnityAssetResource resource)
		{
			return null;
		}

		[Token(Token = "0x600071A")]
		[Address(RVA = "0x112B6B8", Offset = "0x112B6B8", VA = "0x112B6B8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDCCC8", Offset = "0xBDCCC8")]
		private void <.ctor>b__6_0(AssetResourceInfo resourceInfo, AssetBase asset)
		{
		}
	}
	[Token(Token = "0x200030B")]
	public abstract class PrototypeAdapter
	{
		[Token(Token = "0x17000156")]
		public abstract Type PrototypedType
		{
			[Token(Token = "0x600072D")]
			get;
		}

		[Token(Token = "0x600072E")]
		[Address(RVA = "0x111E100", Offset = "0x111E100", VA = "0x111E100")]
		protected PrototypeAdapter()
		{
		}
	}
	[Token(Token = "0x200030C")]
	public abstract class PrototypeAdapter<PrototypeType> : PrototypeAdapter where PrototypeType : IPrototype
	{
		[Token(Token = "0x17000157")]
		public sealed override Type PrototypedType
		{
			[Token(Token = "0x600072F")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000730")]
		public abstract PrototypeType Convert(EntityPrototypeConverter converter);

		[Token(Token = "0x6000731")]
		protected PrototypeAdapter()
		{
		}
	}
	[Token(Token = "0x200030D")]
	public enum UnityCallbackId
	{
		[Token(Token = "0x4000443")]
		UnitySceneLoadBegin = 13,
		[Token(Token = "0x4000444")]
		UnitySceneLoadDone,
		[Token(Token = "0x4000445")]
		UnitySceneUnloadBegin,
		[Token(Token = "0x4000446")]
		UnitySceneUnloadDone
	}
	[Token(Token = "0x200030E")]
	public interface ICallbackUnityScene
	{
		[Token(Token = "0x17000158")]
		string SceneName
		{
			[Token(Token = "0x6000732")]
			get;
			[Token(Token = "0x6000733")]
			set;
		}
	}
	[Token(Token = "0x200030F")]
	public class CallbackUnitySceneLoadBegin : QuantumGame.CallbackBase, ICallbackUnityScene
	{
		[Token(Token = "0x4000447")]
		public new const int ID = 13;

		[Token(Token = "0x4000448")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCEB90", Offset = "0xBCEB90")]
		private string <SceneName>k__BackingField;

		[Token(Token = "0x17000159")]
		public string SceneName
		{
			[Token(Token = "0x6000735")]
			[Address(RVA = "0x1334F4C", Offset = "0x1334F4C", VA = "0x1334F4C", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDCCD8", Offset = "0xBDCCD8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000736")]
			[Address(RVA = "0x1334F54", Offset = "0x1334F54", VA = "0x1334F54", Slot = "6")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDCCE8", Offset = "0xBDCCE8")]
			set
			{
			}
		}

		[Token(Token = "0x6000734")]
		[Address(RVA = "0x1334F3C", Offset = "0x1334F3C", VA = "0x1334F3C")]
		public CallbackUnitySceneLoadBegin(QuantumGame game)
		{
		}
	}
	[Token(Token = "0x2000310")]
	public class CallbackUnitySceneLoadDone : QuantumGame.CallbackBase, ICallbackUnityScene
	{
		[Token(Token = "0x4000449")]
		public new const int ID = 14;

		[Token(Token = "0x400044A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCEBA0", Offset = "0xBCEBA0")]
		private string <SceneName>k__BackingField;

		[Token(Token = "0x1700015A")]
		public string SceneName
		{
			[Token(Token = "0x6000738")]
			[Address(RVA = "0x1334F6C", Offset = "0x1334F6C", VA = "0x1334F6C", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDCCF8", Offset = "0xBDCCF8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000739")]
			[Address(RVA = "0x1334F74", Offset = "0x1334F74", VA = "0x1334F74", Slot = "6")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDCD08", Offset = "0xBDCD08")]
			set
			{
			}
		}

		[Token(Token = "0x6000737")]
		[Address(RVA = "0x1334F5C", Offset = "0x1334F5C", VA = "0x1334F5C")]
		public CallbackUnitySceneLoadDone(QuantumGame game)
		{
		}
	}
	[Token(Token = "0x2000311")]
	public class CallbackUnitySceneUnloadBegin : QuantumGame.CallbackBase, ICallbackUnityScene
	{
		[Token(Token = "0x400044B")]
		public new const int ID = 15;

		[Token(Token = "0x400044C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCEBB0", Offset = "0xBCEBB0")]
		private string <SceneName>k__BackingField;

		[Token(Token = "0x1700015B")]
		public string SceneName
		{
			[Token(Token = "0x600073B")]
			[Address(RVA = "0x1334F8C", Offset = "0x1334F8C", VA = "0x1334F8C", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDCD18", Offset = "0xBDCD18")]
			get
			{
				return null;
			}
			[Token(Token = "0x600073C")]
			[Address(RVA = "0x1334F94", Offset = "0x1334F94", VA = "0x1334F94", Slot = "6")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDCD28", Offset = "0xBDCD28")]
			set
			{
			}
		}

		[Token(Token = "0x600073A")]
		[Address(RVA = "0x1334F7C", Offset = "0x1334F7C", VA = "0x1334F7C")]
		public CallbackUnitySceneUnloadBegin(QuantumGame game)
		{
		}
	}
	[Token(Token = "0x2000312")]
	public class CallbackUnitySceneUnloadDone : QuantumGame.CallbackBase, ICallbackUnityScene
	{
		[Token(Token = "0x400044D")]
		public new const int ID = 16;

		[Token(Token = "0x400044E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCEBC0", Offset = "0xBCEBC0")]
		private string <SceneName>k__BackingField;

		[Token(Token = "0x1700015C")]
		public string SceneName
		{
			[Token(Token = "0x600073E")]
			[Address(RVA = "0x1334FAC", Offset = "0x1334FAC", VA = "0x1334FAC", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDCD38", Offset = "0xBDCD38")]
			get
			{
				return null;
			}
			[Token(Token = "0x600073F")]
			[Address(RVA = "0x1334FB4", Offset = "0x1334FB4", VA = "0x1334FB4", Slot = "6")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDCD48", Offset = "0xBDCD48")]
			set
			{
			}
		}

		[Token(Token = "0x600073D")]
		[Address(RVA = "0x1334F9C", Offset = "0x1334F9C", VA = "0x1334F9C")]
		public CallbackUnitySceneUnloadDone(QuantumGame game)
		{
		}
	}
	[Token(Token = "0x2000313")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xBC6610", Offset = "0xBC6610")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xBC6610", Offset = "0xBC6610")]
	public class EnumFlagsAttribute : UnityEngine.PropertyAttribute
	{
		[Token(Token = "0x400044F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCEBD0", Offset = "0xBCEBD0")]
		private string <tooltip>k__BackingField;

		[Token(Token = "0x1700015D")]
		public string tooltip
		{
			[Token(Token = "0x6000740")]
			[Address(RVA = "0x1050918", Offset = "0x1050918", VA = "0x1050918")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDCD58", Offset = "0xBDCD58")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000741")]
			[Address(RVA = "0x1050920", Offset = "0x1050920", VA = "0x1050920")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDCD68", Offset = "0xBDCD68")]
			set
			{
			}
		}

		[Token(Token = "0x6000742")]
		[Address(RVA = "0x1050928", Offset = "0x1050928", VA = "0x1050928")]
		public EnumFlagsAttribute()
		{
		}
	}
	[Token(Token = "0x2000314")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xBC6660", Offset = "0xBC6660")]
	public class InspectorButtonAttribute : UnityEngine.PropertyAttribute
	{
		[Token(Token = "0x4000450")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string Method;

		[Token(Token = "0x4000451")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string Label;

		[Token(Token = "0x4000452")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool IsToggleable;

		[Token(Token = "0x6000743")]
		[Address(RVA = "0xF81F0C", Offset = "0xF81F0C", VA = "0xF81F0C")]
		public InspectorButtonAttribute(string method)
		{
		}

		[Token(Token = "0x6000744")]
		[Address(RVA = "0xF81F38", Offset = "0xF81F38", VA = "0xF81F38")]
		public InspectorButtonAttribute(string method, string label)
		{
		}

		[Token(Token = "0x6000745")]
		[Address(RVA = "0xF81F70", Offset = "0xF81F70", VA = "0xF81F70")]
		public InspectorButtonAttribute(string method, bool isToggleable)
		{
		}

		[Token(Token = "0x6000746")]
		[Address(RVA = "0xF81FB0", Offset = "0xF81FB0", VA = "0xF81FB0")]
		public InspectorButtonAttribute(string method, string label, bool isToggleable)
		{
		}
	}
	[Token(Token = "0x2000315")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xBC6674", Offset = "0xBC6674")]
	public class LocalReferenceAttribute : UnityEngine.PropertyAttribute
	{
		[Token(Token = "0x6000747")]
		[Address(RVA = "0xF896A4", Offset = "0xF896A4", VA = "0xF896A4")]
		public LocalReferenceAttribute()
		{
		}
	}
	[Token(Token = "0x2000316")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xBC6688", Offset = "0xBC6688")]
	public class MultiTypeReferenceAttribute : UnityEngine.PropertyAttribute
	{
		[Token(Token = "0x4000453")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly Type[] Types;

		[Token(Token = "0x6000748")]
		[Address(RVA = "0x101A34C", Offset = "0x101A34C", VA = "0x101A34C")]
		public MultiTypeReferenceAttribute(params Type[] types)
		{
		}
	}
	[Token(Token = "0x2000317")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xBC669C", Offset = "0xBC669C")]
	public class QuantumInspectorAttribute : UnityEngine.PropertyAttribute
	{
		[Token(Token = "0x6000749")]
		[Address(RVA = "0x1127034", Offset = "0x1127034", VA = "0x1127034")]
		public QuantumInspectorAttribute()
		{
		}
	}
	[Token(Token = "0x2000318")]
	public abstract class QuantumPropertyAttributeProxyAttribute : UnityEngine.PropertyAttribute
	{
		[Token(Token = "0x4000454")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCEBE0", Offset = "0xBCEBE0")]
		private readonly Quantum.Inspector.PropertyAttribute <Attribute>k__BackingField;

		[Token(Token = "0x1700015E")]
		public Quantum.Inspector.PropertyAttribute Attribute
		{
			[Token(Token = "0x600074B")]
			[Address(RVA = "0x124B718", Offset = "0x124B718", VA = "0x124B718")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDCD78", Offset = "0xBDCD78")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600074A")]
		[Address(RVA = "0x124B6EC", Offset = "0x124B6EC", VA = "0x124B6EC")]
		public QuantumPropertyAttributeProxyAttribute(Quantum.Inspector.PropertyAttribute attribute)
		{
		}
	}
	[Token(Token = "0x2000319")]
	public class EntityPrototypeConverter
	{
		[Token(Token = "0x4000455")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly global::EntityPrototype[] OrderedMapPrototypes;

		[Token(Token = "0x4000456")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly global::EntityPrototype AssetPrototype;

		[Token(Token = "0x4000457")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly MapData Map;

		[Token(Token = "0x600074C")]
		[Address(RVA = "0x104BEFC", Offset = "0x104BEFC", VA = "0x104BEFC")]
		public EntityPrototypeConverter(MapData map, global::EntityPrototype[] orderedMapPrototypes)
		{
		}

		[Token(Token = "0x600074D")]
		[Address(RVA = "0x104B90C", Offset = "0x104B90C", VA = "0x104B90C")]
		public EntityPrototypeConverter(global::EntityPrototype prototypeAsset)
		{
		}

		[Token(Token = "0x600074E")]
		[Address(RVA = "0x103E558", Offset = "0x103E558", VA = "0x103E558")]
		public void Convert(global::EntityPrototype prototype, out MapEntityId result)
		{
		}

		[Token(Token = "0x600074F")]
		[Address(RVA = "0x104BF38", Offset = "0x104BF38", VA = "0x104BF38")]
		public void Convert(EntityPrototypeRefWrapper prototype, out EntityPrototypeRef result)
		{
		}

		[Token(Token = "0x6000750")]
		[Address(RVA = "0x104C080", Offset = "0x104C080", VA = "0x104C080")]
		public void Convert(ComponentPrototypeRefWrapperBase prototype, out ComponentPrototypeRef_Prototype result)
		{
		}
	}
	[Token(Token = "0x200031A")]
	public static class MapNavMeshBaker
	{
		[Token(Token = "0x200031B")]
		private struct TriangleCenterGrid
		{
			[Token(Token = "0x200031C")]
			public struct Pair
			{
				[Token(Token = "0x400045C")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				public int Triangle;

				[Token(Token = "0x400045D")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
				public FP Heuristic;
			}

			[Token(Token = "0x400045B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public List<Pair> Regions;
		}

		[Token(Token = "0x200031D")]
		public struct Vector3Double
		{
			[Token(Token = "0x400045E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public double X;

			[Token(Token = "0x400045F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public double Y;

			[Token(Token = "0x4000460")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public double Z;

			[Token(Token = "0x6000762")]
			[Address(RVA = "0x11D9E30", Offset = "0x11D9E30", VA = "0x11D9E30")]
			public Vector3Double(double x, double y, double z)
			{
			}

			[Token(Token = "0x6000763")]
			[Address(RVA = "0x11D9E3C", Offset = "0x11D9E3C", VA = "0x11D9E3C")]
			public Vector3Double(FPVector3 v)
			{
			}

			[Token(Token = "0x6000764")]
			[Address(RVA = "0x11D9E78", Offset = "0x11D9E78", VA = "0x11D9E78")]
			public Vector3Double(Vector3 v)
			{
			}

			[Token(Token = "0x6000765")]
			[Address(RVA = "0x11D9E90", Offset = "0x11D9E90", VA = "0x11D9E90")]
			public static Vector3Double operator -(Vector3Double a, Vector3Double b)
			{
				return default(Vector3Double);
			}

			[Token(Token = "0x6000766")]
			[Address(RVA = "0x11D9EA0", Offset = "0x11D9EA0", VA = "0x11D9EA0")]
			public static Vector3Double operator +(Vector3Double a, Vector3Double b)
			{
				return default(Vector3Double);
			}

			[Token(Token = "0x6000767")]
			[Address(RVA = "0x11D9EB0", Offset = "0x11D9EB0", VA = "0x11D9EB0")]
			public static Vector3Double operator *(Vector3Double a, double b)
			{
				return default(Vector3Double);
			}

			[Token(Token = "0x6000768")]
			[Address(RVA = "0x11D9EC0", Offset = "0x11D9EC0", VA = "0x11D9EC0")]
			public static Vector3Double operator *(double b, Vector3Double a)
			{
				return default(Vector3Double);
			}

			[Token(Token = "0x6000769")]
			[Address(RVA = "0x11D9ED4", Offset = "0x11D9ED4", VA = "0x11D9ED4")]
			public FPVector3 AsFPVector()
			{
				return default(FPVector3);
			}

			[Token(Token = "0x600076A")]
			[Address(RVA = "0x11D9F50", Offset = "0x11D9F50", VA = "0x11D9F50")]
			public double SqrMagnitude()
			{
				return default(double);
			}

			[Token(Token = "0x600076B")]
			[Address(RVA = "0x11D9F70", Offset = "0x11D9F70", VA = "0x11D9F70")]
			public void Normalize()
			{
			}

			[Token(Token = "0x600076C")]
			[Address(RVA = "0x11DA078", Offset = "0x11DA078", VA = "0x11DA078", Slot = "3")]
			public override string ToString()
			{
				return null;
			}

			[Token(Token = "0x600076D")]
			[Address(RVA = "0x11DA140", Offset = "0x11DA140", VA = "0x11DA140")]
			public static double Dot(Vector3Double a, Vector3Double b)
			{
				return default(double);
			}

			[Token(Token = "0x600076E")]
			[Address(RVA = "0x11DA158", Offset = "0x11DA158", VA = "0x11DA158")]
			public static Vector3Double Cross(Vector3Double a, Vector3Double b)
			{
				return default(Vector3Double);
			}

			[Token(Token = "0x600076F")]
			[Address(RVA = "0x11DA180", Offset = "0x11DA180", VA = "0x11DA180")]
			public static double ClosestDistanceToTriangle(Vector3Double p, Vector3Double v0, Vector3Double v1, Vector3Double v2, ref Vector3Double closestPoint)
			{
				return default(double);
			}
		}

		[Token(Token = "0x200031E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBC66B0", Offset = "0xBC66B0")]
		private sealed class <>c__DisplayClass4_0
		{
			[Token(Token = "0x4000461")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public List<string> regions;

			[Token(Token = "0x4000462")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public ProgressBar progressBar;

			[Token(Token = "0x6000770")]
			[Address(RVA = "0x11D9AE0", Offset = "0x11D9AE0", VA = "0x11D9AE0")]
			public <>c__DisplayClass4_0()
			{
			}

			[Token(Token = "0x6000771")]
			[Address(RVA = "0x11D9AE8", Offset = "0x11D9AE8", VA = "0x11D9AE8")]
			internal void <BakeNavMesh>b__0(float p)
			{
			}

			[Token(Token = "0x6000772")]
			[Address(RVA = "0x11D9B04", Offset = "0x11D9B04", VA = "0x11D9B04")]
			internal void <BakeNavMesh>b__1(float p)
			{
			}

			[Token(Token = "0x6000773")]
			[Address(RVA = "0x11D9B20", Offset = "0x11D9B20", VA = "0x11D9B20")]
			internal void <BakeNavMesh>b__2(float p)
			{
			}

			[Token(Token = "0x6000774")]
			[Address(RVA = "0x11D9B3C", Offset = "0x11D9B3C", VA = "0x11D9B3C")]
			internal void <BakeNavMesh>b__3(float p)
			{
			}

			[Token(Token = "0x6000775")]
			[Address(RVA = "0x11D9B58", Offset = "0x11D9B58", VA = "0x11D9B58")]
			internal void <BakeNavMesh>b__4(float p)
			{
			}

			[Token(Token = "0x6000776")]
			[Address(RVA = "0x11D9B74", Offset = "0x11D9B74", VA = "0x11D9B74")]
			internal void <BakeNavMesh>b__5(float p)
			{
			}
		}

		[Token(Token = "0x200031F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBC66C0", Offset = "0xBC66C0")]
		private sealed class <>c__DisplayClass4_1
		{
			[Token(Token = "0x4000463")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int i;

			[Token(Token = "0x4000464")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public <>c__DisplayClass4_0 CS$<>8__locals1;

			[Token(Token = "0x6000777")]
			[Address(RVA = "0x11D9B90", Offset = "0x11D9B90", VA = "0x11D9B90")]
			public <>c__DisplayClass4_1()
			{
			}

			[Token(Token = "0x6000778")]
			[Address(RVA = "0x11D9B98", Offset = "0x11D9B98", VA = "0x11D9B98")]
			internal bool <BakeNavMesh>b__6(string r)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000320")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBC66D0", Offset = "0xBC66D0")]
		private sealed class <>c__DisplayClass4_2
		{
			[Token(Token = "0x4000465")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public MapNavMeshTriangle t;

			[Token(Token = "0x6000779")]
			[Address(RVA = "0x11D9C20", Offset = "0x11D9C20", VA = "0x11D9C20")]
			public <>c__DisplayClass4_2()
			{
			}

			[Token(Token = "0x600077A")]
			[Address(RVA = "0x11D9C28", Offset = "0x11D9C28", VA = "0x11D9C28")]
			internal bool <BakeNavMesh>b__7(MapNavMeshVertex x)
			{
				return default(bool);
			}

			[Token(Token = "0x600077B")]
			[Address(RVA = "0x11D9C64", Offset = "0x11D9C64", VA = "0x11D9C64")]
			internal bool <BakeNavMesh>b__8(MapNavMeshVertex x)
			{
				return default(bool);
			}

			[Token(Token = "0x600077C")]
			[Address(RVA = "0x11D9CA4", Offset = "0x11D9CA4", VA = "0x11D9CA4")]
			internal bool <BakeNavMesh>b__9(MapNavMeshVertex x)
			{
				return default(bool);
			}

			[Token(Token = "0x600077D")]
			[Address(RVA = "0x11D9CE4", Offset = "0x11D9CE4", VA = "0x11D9CE4")]
			internal bool <BakeNavMesh>b__10(string r)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000321")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBC66E0", Offset = "0xBC66E0")]
		private sealed class <>c__DisplayClass7_0
		{
			[Token(Token = "0x4000466")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public NavMeshBorder border;

			[Token(Token = "0x600077E")]
			[Address(RVA = "0x11D9CF8", Offset = "0x11D9CF8", VA = "0x11D9CF8")]
			public <>c__DisplayClass7_0()
			{
			}

			[Token(Token = "0x600077F")]
			[Address(RVA = "0x11D9D00", Offset = "0x11D9D00", VA = "0x11D9D00")]
			internal bool <ProcessBorder>b__0(NavMeshBorder b)
			{
				return default(bool);
			}
		}

		[Serializable]
		[Token(Token = "0x2000322")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBC66F0", Offset = "0xBC66F0")]
		private sealed class <>c
		{
			[Token(Token = "0x4000467")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000468")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Comparison<TriangleCenterGrid.Pair> <>9__15_0;

			[Token(Token = "0x6000781")]
			[Address(RVA = "0x11D9A8C", Offset = "0x11D9A8C", VA = "0x11D9A8C")]
			public <>c()
			{
			}

			[Token(Token = "0x6000782")]
			[Address(RVA = "0x11D9A94", Offset = "0x11D9A94", VA = "0x11D9A94")]
			internal int <GenerateTriangleCenterGrid>b__15_0(TriangleCenterGrid.Pair a, TriangleCenterGrid.Pair b)
			{
				return default(int);
			}
		}

		[Token(Token = "0x2000323")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBC6700", Offset = "0xBC6700")]
		private sealed class <>c__DisplayClass18_0
		{
			[Token(Token = "0x4000469")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public MapNavMeshLink link;

			[Token(Token = "0x6000783")]
			[Address(RVA = "0x11D9AC4", Offset = "0x11D9AC4", VA = "0x11D9AC4")]
			public <>c__DisplayClass18_0()
			{
			}

			[Token(Token = "0x6000784")]
			[Address(RVA = "0x11D9ACC", Offset = "0x11D9ACC", VA = "0x11D9ACC")]
			internal bool <GenerateNavMeshLinks>b__0(string r)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000458")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static FP TriangleCheckEpsilon;

		[Token(Token = "0x4000459")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly int MaxCandidates;

		[Token(Token = "0x400045A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static List<TriangleCenterGrid.Pair> Candidates;

		[Token(Token = "0x6000751")]
		[Address(RVA = "0xF9612C", Offset = "0xF9612C", VA = "0xF9612C")]
		public static NavMesh BakeNavMesh(MapData data, MapNavMesh.BakeData navmeshBakeData)
		{
			return null;
		}

		[Token(Token = "0x6000752")]
		[Address(RVA = "0xF961B0", Offset = "0xF961B0", VA = "0xF961B0")]
		public static NavMesh BakeNavMesh(Map map, MapNavMesh.BakeData navmeshBakeData)
		{
			return null;
		}

		[Token(Token = "0x6000753")]
		[Address(RVA = "0xF978C0", Offset = "0xF978C0", VA = "0xF978C0")]
		private static NavMeshTriangleNode[] GenerateTriangleGrid(NavMesh navmesh, Action<float> reporter)
		{
			return null;
		}

		[Token(Token = "0x6000754")]
		[Address(RVA = "0xF982F0", Offset = "0xF982F0", VA = "0xF982F0")]
		private static List<NavMeshBorder> GenerateBorders(NavMesh navmesh, Action<float> reporter)
		{
			return null;
		}

		[Token(Token = "0x6000755")]
		[Address(RVA = "0xF9A3EC", Offset = "0xF9A3EC", VA = "0xF9A3EC")]
		private static void ProcessBorder(NavMesh navmesh, int t, int v0, int v1, List<NavMeshBorder> borders)
		{
		}

		[Token(Token = "0x6000756")]
		[Address(RVA = "0xF9A9D0", Offset = "0xF9A9D0", VA = "0xF9A9D0")]
		private static bool IsBorderEdge(NavMeshTriangle[] triangles, int tri, int v0, int v1, out NavMeshRegionMask otherRegion, NavMeshVertex[] vertices)
		{
			return default(bool);
		}

		[Token(Token = "0x6000757")]
		[Address(RVA = "0xF9ACC0", Offset = "0xF9ACC0", VA = "0xF9ACC0")]
		private static int FindBorderTriangle(NavMeshTriangle[] triangles, int tri, int v0, int v1)
		{
			return default(int);
		}

		[Token(Token = "0x6000758")]
		[Address(RVA = "0xF9AB24", Offset = "0xF9AB24", VA = "0xF9AB24")]
		private static bool TriangleContains(NavMeshTriangle[] ts, NavMeshVertex[] vs, FPVector3 point, NavMeshRegionMask regions)
		{
			return default(bool);
		}

		[Token(Token = "0x6000759")]
		[Address(RVA = "0xF98488", Offset = "0xF98488", VA = "0xF98488")]
		private static NavMeshBorderNode[] GenerateBorderGrid(NavMesh navmesh, Action<float> reporter)
		{
			return null;
		}

		[Token(Token = "0x600075A")]
		[Address(RVA = "0xF9AD70", Offset = "0xF9AD70", VA = "0xF9AD70")]
		private static FP CalculateCellTriangleHeuristic(FPVector3 cellCenter, FP cellSize, NavMesh navmesh, int triangle)
		{
			return default(FP);
		}

		[Token(Token = "0x600075B")]
		[Address(RVA = "0xF9B078", Offset = "0xF9B078", VA = "0xF9B078")]
		private static void CalculateCellTriangleHeuristic(NavMesh navmesh, int triangleIndex, FPVector3 cellCenter, int regionIndex)
		{
		}

		[Token(Token = "0x600075C")]
		[Address(RVA = "0xF9B450", Offset = "0xF9B450", VA = "0xF9B450")]
		private static bool FindClosestTriangle(NavMesh navmesh, int cellIndex, FPVector3 cellCenter, int regionIndex, MapNavMesh.FindClosestTriangleCalculation triangleCalc, int triangleCalcDepth, ref TriangleCenterGrid.Pair heuristic)
		{
			return default(bool);
		}

		[Token(Token = "0x600075D")]
		[Address(RVA = "0xF98CC8", Offset = "0xF98CC8", VA = "0xF98CC8")]
		private static NavMeshTriangleCenterGridNode[] GenerateTriangleCenterGrid(NavMesh navmesh, MapNavMesh.FindClosestTriangleCalculation triangleCalc, int triangleCalcDepth, List<string> regionsList, Action<float> reporter)
		{
			return null;
		}

		[Token(Token = "0x600075E")]
		[Address(RVA = "0xF989C0", Offset = "0xF989C0", VA = "0xF989C0")]
		private static void GenerateTriangleNeighbors(NavMesh navmesh, Action<float> reporter)
		{
		}

		[Token(Token = "0x600075F")]
		[Address(RVA = "0xF9A1DC", Offset = "0xF9A1DC", VA = "0xF9A1DC")]
		public static bool LocateGridCells(ref int xMin, ref int xMax, ref int yMin, ref int yMax, FPVector2 worldOffset, int gridNodeSize, int gridSizeX, int gridSizeY, params FPVector2[] positions)
		{
			return default(bool);
		}

		[Token(Token = "0x6000760")]
		[Address(RVA = "0xF9948C", Offset = "0xF9948C", VA = "0xF9948C")]
		private static void GenerateNavMeshLinks(NavMesh navmesh, MapNavMeshLink[] links, string[] regions, bool errorCorrection, bool enableQuantumXY, Action<float> reporter)
		{
		}
	}
	[Token(Token = "0x2000324")]
	public class QuantumUnityJsonSerializer : JsonAssetSerializerBase
	{
		[Token(Token = "0x6000785")]
		[Address(RVA = "0x12536E0", Offset = "0x12536E0", VA = "0x12536E0", Slot = "7")]
		protected override object FromJson(string json, Type type)
		{
			return null;
		}

		[Token(Token = "0x6000786")]
		[Address(RVA = "0x12536F0", Offset = "0x12536F0", VA = "0x12536F0", Slot = "8")]
		protected override string ToJson(object obj)
		{
			return null;
		}

		[Token(Token = "0x6000787")]
		[Address(RVA = "0x124DFB0", Offset = "0x124DFB0", VA = "0x124DFB0")]
		public QuantumUnityJsonSerializer()
		{
		}
	}
	[Token(Token = "0x2000325")]
	public enum QuantumInstantReplaySeekMode
	{
		[Token(Token = "0x400046B")]
		Disabled,
		[Token(Token = "0x400046C")]
		FromStartSnapshot,
		[Token(Token = "0x400046D")]
		FromIntermediateSnapshots
	}
	[Token(Token = "0x2000326")]
	public sealed class QuantumInstantReplay : IDisposable
	{
		[Token(Token = "0x400046E")]
		public const int InitalFramesToSimulation = 4;

		[Token(Token = "0x400046F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private bool _loop;

		[Token(Token = "0x4000470")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private QuantumRunner _replayRunner;

		[Token(Token = "0x4000471")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private DeterministicFrameRingBuffer _rewindSnapshots;

		[Token(Token = "0x4000472")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCEBF0", Offset = "0xBCEBF0")]
		private readonly int <StartFrame>k__BackingField;

		[Token(Token = "0x4000473")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCEC00", Offset = "0xBCEC00")]
		private readonly int <EndFrame>k__BackingField;

		[Token(Token = "0x4000474")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCEC10", Offset = "0xBCEC10")]
		private readonly QuantumGame <LiveGame>k__BackingField;

		[Token(Token = "0x1700015F")]
		public int StartFrame
		{
			[Token(Token = "0x6000789")]
			[Address(RVA = "0x1127BC0", Offset = "0x1127BC0", VA = "0x1127BC0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDCD88", Offset = "0xBDCD88")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000160")]
		public int CurrentFrame
		{
			[Token(Token = "0x600078A")]
			[Address(RVA = "0x11276E0", Offset = "0x11276E0", VA = "0x11276E0")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000161")]
		public int EndFrame
		{
			[Token(Token = "0x600078B")]
			[Address(RVA = "0x1127BC8", Offset = "0x1127BC8", VA = "0x1127BC8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDCD98", Offset = "0xBDCD98")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000162")]
		public bool CanSeek
		{
			[Token(Token = "0x600078C")]
			[Address(RVA = "0x1127BD0", Offset = "0x1127BD0", VA = "0x1127BD0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000163")]
		public bool IsRunning
		{
			[Token(Token = "0x600078D")]
			[Address(RVA = "0x1127BF0", Offset = "0x1127BF0", VA = "0x1127BF0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000164")]
		public QuantumGame LiveGame
		{
			[Token(Token = "0x600078E")]
			[Address(RVA = "0x1127C1C", Offset = "0x1127C1C", VA = "0x1127C1C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDCDA8", Offset = "0xBDCDA8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000165")]
		public QuantumGame ReplayGame
		{
			[Token(Token = "0x600078F")]
			[Address(RVA = "0x1127C24", Offset = "0x1127C24", VA = "0x1127C24")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000166")]
		public float NormalizedTime
		{
			[Token(Token = "0x6000790")]
			[Address(RVA = "0x1127C3C", Offset = "0x1127C3C", VA = "0x1127C3C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6000788")]
		[Address(RVA = "0x112703C", Offset = "0x112703C", VA = "0x112703C")]
		public QuantumInstantReplay(QuantumGame liveGame, float length, QuantumInstantReplaySeekMode seekMode = QuantumInstantReplaySeekMode.Disabled, bool loop = false)
		{
		}

		[Token(Token = "0x6000791")]
		[Address(RVA = "0x1127C90", Offset = "0x1127C90", VA = "0x1127C90", Slot = "4")]
		public void Dispose()
		{
		}

		[Token(Token = "0x6000792")]
		[Address(RVA = "0x1127CD4", Offset = "0x1127CD4", VA = "0x1127CD4")]
		public void SeekFrame(int frameNumber)
		{
		}

		[Token(Token = "0x6000793")]
		[Address(RVA = "0x1127E14", Offset = "0x1127E14", VA = "0x1127E14")]
		public void SeekNormalizedTime(float normalizedTime)
		{
		}

		[Token(Token = "0x6000794")]
		[Address(RVA = "0x1127E58", Offset = "0x1127E58", VA = "0x1127E58")]
		public bool Update(float deltaTime)
		{
			return default(bool);
		}

		[Token(Token = "0x6000795")]
		[Address(RVA = "0x1127718", Offset = "0x1127718", VA = "0x1127718")]
		private void FastForward(int frameNumber)
		{
		}

		[Token(Token = "0x6000796")]
		[Address(RVA = "0x1127F38", Offset = "0x1127F38", VA = "0x1127F38")]
		private static double GetDeltaTime(int frames, int simulationRate)
		{
			return default(double);
		}
	}
	[Token(Token = "0x2000327")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xBC6710", Offset = "0xBC6710")]
	public class QuantumInstantReplayLegacy
	{
		[Token(Token = "0x4000475")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCEC20", Offset = "0xBCEC20")]
		private bool <IsRunning>k__BackingField;

		[Token(Token = "0x4000476")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCEC30", Offset = "0xBCEC30")]
		private float <ReplayLength>k__BackingField;

		[Token(Token = "0x4000477")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCEC40", Offset = "0xBCEC40")]
		private float <PlaybackSpeed>k__BackingField;

		[Token(Token = "0x4000478")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCEC50", Offset = "0xBCEC50")]
		private int <StartFrame>k__BackingField;

		[Token(Token = "0x4000479")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCEC60", Offset = "0xBCEC60")]
		private int <EndFrame>k__BackingField;

		[Token(Token = "0x400047C")]
		public const int InitalFramesToSimulation = 4;

		[Token(Token = "0x400047D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private QuantumGame _liveGame;

		[Token(Token = "0x400047E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private QuantumRunner _replayRunner;

		[Token(Token = "0x400047F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private DeterministicFrameRingBuffer _rewindSnapshots;

		[Token(Token = "0x4000480")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool _loop;

		[Token(Token = "0x17000167")]
		public bool IsRunning
		{
			[Token(Token = "0x6000797")]
			[Address(RVA = "0x1245228", Offset = "0x1245228", VA = "0x1245228")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDCDB8", Offset = "0xBDCDB8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000798")]
			[Address(RVA = "0x1245230", Offset = "0x1245230", VA = "0x1245230")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDCDC8", Offset = "0xBDCDC8")]
			private set
			{
			}
		}

		[Token(Token = "0x17000168")]
		public float ReplayLength
		{
			[Token(Token = "0x6000799")]
			[Address(RVA = "0x124523C", Offset = "0x124523C", VA = "0x124523C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDCDD8", Offset = "0xBDCDD8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600079A")]
			[Address(RVA = "0x1245244", Offset = "0x1245244", VA = "0x1245244")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDCDE8", Offset = "0xBDCDE8")]
			set
			{
			}
		}

		[Token(Token = "0x17000169")]
		public float PlaybackSpeed
		{
			[Token(Token = "0x600079B")]
			[Address(RVA = "0x124524C", Offset = "0x124524C", VA = "0x124524C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDCDF8", Offset = "0xBDCDF8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600079C")]
			[Address(RVA = "0x1245254", Offset = "0x1245254", VA = "0x1245254")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDCE08", Offset = "0xBDCE08")]
			set
			{
			}
		}

		[Token(Token = "0x1700016A")]
		public QuantumGame LiveGame
		{
			[Token(Token = "0x600079D")]
			[Address(RVA = "0x124525C", Offset = "0x124525C", VA = "0x124525C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700016B")]
		public QuantumGame ReplayGame
		{
			[Token(Token = "0x600079E")]
			[Address(RVA = "0x1245264", Offset = "0x1245264", VA = "0x1245264")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700016C")]
		public int StartFrame
		{
			[Token(Token = "0x600079F")]
			[Address(RVA = "0x124527C", Offset = "0x124527C", VA = "0x124527C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDCE18", Offset = "0xBDCE18")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60007A0")]
			[Address(RVA = "0x1245284", Offset = "0x1245284", VA = "0x1245284")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDCE28", Offset = "0xBDCE28")]
			private set
			{
			}
		}

		[Token(Token = "0x1700016D")]
		public int EndFrame
		{
			[Token(Token = "0x60007A1")]
			[Address(RVA = "0x124528C", Offset = "0x124528C", VA = "0x124528C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDCE38", Offset = "0xBDCE38")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60007A2")]
			[Address(RVA = "0x1245294", Offset = "0x1245294", VA = "0x1245294")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDCE48", Offset = "0xBDCE48")]
			private set
			{
			}
		}

		[Token(Token = "0x1700016E")]
		public bool CanSeek
		{
			[Token(Token = "0x60007A3")]
			[Address(RVA = "0x124529C", Offset = "0x124529C", VA = "0x124529C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700016F")]
		public float NormalizedTime
		{
			[Token(Token = "0x60007A4")]
			[Address(RVA = "0x12452BC", Offset = "0x12452BC", VA = "0x12452BC")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x14000003")]
		public event Action<QuantumGame> OnReplayStarted
		{
			[Token(Token = "0x60007A5")]
			[Address(RVA = "0x1245364", Offset = "0x1245364", VA = "0x1245364")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDCE58", Offset = "0xBDCE58")]
			add
			{
			}
			[Token(Token = "0x60007A6")]
			[Address(RVA = "0x1245404", Offset = "0x1245404", VA = "0x1245404")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDCE68", Offset = "0xBDCE68")]
			remove
			{
			}
		}

		[Token(Token = "0x14000004")]
		public event Action<QuantumGame> OnReplayStopped
		{
			[Token(Token = "0x60007A7")]
			[Address(RVA = "0x12454A4", Offset = "0x12454A4", VA = "0x12454A4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDCE78", Offset = "0xBDCE78")]
			add
			{
			}
			[Token(Token = "0x60007A8")]
			[Address(RVA = "0x1245544", Offset = "0x1245544", VA = "0x1245544")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDCE88", Offset = "0xBDCE88")]
			remove
			{
			}
		}

		[Token(Token = "0x60007A9")]
		[Address(RVA = "0x12455E4", Offset = "0x12455E4", VA = "0x12455E4")]
		public QuantumInstantReplayLegacy(QuantumGame game)
		{
		}

		[Token(Token = "0x60007AA")]
		[Address(RVA = "0x1245610", Offset = "0x1245610", VA = "0x1245610")]
		public void Shutdown()
		{
		}

		[Token(Token = "0x60007AB")]
		[Address(RVA = "0x1245770", Offset = "0x1245770", VA = "0x1245770")]
		public void Update()
		{
		}

		[Token(Token = "0x60007AC")]
		[Address(RVA = "0x12459C8", Offset = "0x12459C8", VA = "0x12459C8")]
		public void StartInstantReplay(QuantumInstantReplaySeekMode seekMode = QuantumInstantReplaySeekMode.Disabled, bool loop = false)
		{
		}

		[Token(Token = "0x60007AD")]
		[Address(RVA = "0x1246970", Offset = "0x1246970", VA = "0x1246970")]
		public void SeekNormalizedTime(float seek)
		{
		}

		[Token(Token = "0x60007AE")]
		[Address(RVA = "0x1245860", Offset = "0x1245860", VA = "0x1245860")]
		public void SeekFrame(int frameNumber)
		{
		}

		[Token(Token = "0x60007AF")]
		[Address(RVA = "0x1245644", Offset = "0x1245644", VA = "0x1245644")]
		public void StopInstantReplay()
		{
		}

		[Token(Token = "0x60007B0")]
		[Address(RVA = "0x1246884", Offset = "0x1246884", VA = "0x1246884")]
		private void FastForwardSimulation(int frameNumber)
		{
		}
	}
	[Token(Token = "0x2000328")]
	public static class DebugDraw
	{
		[Token(Token = "0x4000481")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Queue<Draw.DebugRay> _rays;

		[Token(Token = "0x4000482")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Queue<Draw.DebugLine> _lines;

		[Token(Token = "0x4000483")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static Queue<Draw.DebugCircle> _circles;

		[Token(Token = "0x4000484")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static Queue<Draw.DebugSphere> _spheres;

		[Token(Token = "0x4000485")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static Queue<Draw.DebugRectangle> _rectangles;

		[Token(Token = "0x4000486")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static Queue<Draw.DebugBox> _boxes;

		[Token(Token = "0x4000487")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static Dictionary<ColorRGBA, Material> _materials;

		[Token(Token = "0x4000488")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static Draw.DebugRay[] _raysArray;

		[Token(Token = "0x4000489")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private static Draw.DebugLine[] _linesArray;

		[Token(Token = "0x400048A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private static Draw.DebugCircle[] _circlesArray;

		[Token(Token = "0x400048B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private static Draw.DebugSphere[] _spheresArray;

		[Token(Token = "0x400048C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private static Draw.DebugRectangle[] _rectanglesArray;

		[Token(Token = "0x400048D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private static Draw.DebugBox[] _boxesArray;

		[Token(Token = "0x400048E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private static int _raysCount;

		[Token(Token = "0x400048F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private static int _linesCount;

		[Token(Token = "0x4000490")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private static int _circlesCount;

		[Token(Token = "0x4000491")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private static int _spheresCount;

		[Token(Token = "0x4000492")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private static int _rectanglesCount;

		[Token(Token = "0x4000493")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private static int _boxesCount;

		[Token(Token = "0x4000494")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private static Mesh _solidSphere;

		[Token(Token = "0x60007B1")]
		[Address(RVA = "0x116FF14", Offset = "0x116FF14", VA = "0x116FF14")]
		public static void Ray(Draw.DebugRay ray)
		{
		}

		[Token(Token = "0x60007B2")]
		[Address(RVA = "0x117009C", Offset = "0x117009C", VA = "0x117009C")]
		public static void Line(Draw.DebugLine line)
		{
		}

		[Token(Token = "0x60007B3")]
		[Address(RVA = "0x1170224", Offset = "0x1170224", VA = "0x1170224")]
		public static void Circle(Draw.DebugCircle circle)
		{
		}

		[Token(Token = "0x60007B4")]
		[Address(RVA = "0x117039C", Offset = "0x117039C", VA = "0x117039C")]
		public static void Sphere(Draw.DebugSphere sphere)
		{
		}

		[Token(Token = "0x60007B5")]
		[Address(RVA = "0x1170514", Offset = "0x1170514", VA = "0x1170514")]
		public static void Rectangle(Draw.DebugRectangle rectangle)
		{
		}

		[Token(Token = "0x60007B6")]
		[Address(RVA = "0x117069C", Offset = "0x117069C", VA = "0x117069C")]
		public static void Box(Draw.DebugBox box)
		{
		}

		[Token(Token = "0x60007B7")]
		[Address(RVA = "0x117081C", Offset = "0x117081C", VA = "0x117081C")]
		public static Material GetMaterial(ColorRGBA color)
		{
			return null;
		}

		[Token(Token = "0x60007B8")]
		[Address(RVA = "0x1170A1C", Offset = "0x1170A1C", VA = "0x1170A1C")]
		public static void Clear()
		{
		}

		[Token(Token = "0x60007B9")]
		[Address(RVA = "0x1170BAC", Offset = "0x1170BAC", VA = "0x1170BAC")]
		public static void TakeAll()
		{
		}

		[Token(Token = "0x60007BA")]
		[Address(RVA = "0x1170D3C", Offset = "0x1170D3C", VA = "0x1170D3C")]
		public static void DrawAll()
		{
		}

		[Token(Token = "0x60007BB")]
		[Address(RVA = "0x1171104", Offset = "0x1171104", VA = "0x1171104")]
		private static void DrawRay(Draw.DebugRay ray)
		{
		}

		[Token(Token = "0x60007BC")]
		[Address(RVA = "0x117124C", Offset = "0x117124C", VA = "0x117124C")]
		private static void DrawLine(Draw.DebugLine line)
		{
		}

		[Token(Token = "0x60007BD")]
		[Address(RVA = "0x117219C", Offset = "0x117219C", VA = "0x117219C")]
		private static Mesh GetSphere()
		{
			return null;
		}

		[Token(Token = "0x60007BE")]
		[Address(RVA = "0x1171590", Offset = "0x1171590", VA = "0x1171590")]
		private static void DrawSphere(Draw.DebugSphere sphere)
		{
		}

		[Token(Token = "0x60007BF")]
		[Address(RVA = "0x1171394", Offset = "0x1171394", VA = "0x1171394")]
		private static void DrawCircle(Draw.DebugCircle circle)
		{
		}

		[Token(Token = "0x60007C0")]
		[Address(RVA = "0x117176C", Offset = "0x117176C", VA = "0x117176C")]
		private static void DrawRectangle(Draw.DebugRectangle rectangle)
		{
		}

		[Token(Token = "0x60007C1")]
		[Address(RVA = "0x1171BB0", Offset = "0x1171BB0", VA = "0x1171BB0")]
		private static void DrawBox(Draw.DebugBox box)
		{
		}

		[Token(Token = "0x60007C2")]
		private static int TakeAllFromQueueAndClearLocked<T>(Queue<T> queue, ref T[] result)
		{
			return default(int);
		}
	}
	[Token(Token = "0x2000329")]
	public static class DebugMesh
	{
		[Token(Token = "0x4000495")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Mesh _circleMesh;

		[Token(Token = "0x4000496")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Mesh _quadMesh;

		[Token(Token = "0x4000497")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static Mesh _cylinderMesh;

		[Token(Token = "0x4000498")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static Mesh _cubeMesh;

		[Token(Token = "0x4000499")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static Material _debugMaterial;

		[Token(Token = "0x17000170")]
		public static Mesh CircleMesh
		{
			[Token(Token = "0x60007C4")]
			[Address(RVA = "0x1039D8C", Offset = "0x1039D8C", VA = "0x1039D8C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000171")]
		public static Mesh QuadMesh
		{
			[Token(Token = "0x60007C5")]
			[Address(RVA = "0x1039E60", Offset = "0x1039E60", VA = "0x1039E60")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000172")]
		public static Mesh CubeMesh
		{
			[Token(Token = "0x60007C6")]
			[Address(RVA = "0x1039F3C", Offset = "0x1039F3C", VA = "0x1039F3C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000173")]
		public static Mesh CylinderMesh
		{
			[Token(Token = "0x60007C7")]
			[Address(RVA = "0x103A018", Offset = "0x103A018", VA = "0x103A018")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000174")]
		public static Material DebugMaterial
		{
			[Token(Token = "0x60007C8")]
			[Address(RVA = "0x103A0F4", Offset = "0x103A0F4", VA = "0x103A0F4")]
			get
			{
				return null;
			}
		}
	}
	[Token(Token = "0x200032A")]
	public static class EditorDefines
	{
		[Token(Token = "0x400049A")]
		public const int AssetMenuPriority = -1000;

		[Token(Token = "0x400049B")]
		public const int AssetMenuPriorityConfigurations = -999;

		[Token(Token = "0x400049C")]
		public const int AssetMenuPriorityDemo = -998;

		[Token(Token = "0x400049D")]
		public const int AssetMenuPriorityStart = -900;
	}
	[Serializable]
	[Token(Token = "0x200032B")]
	public struct FloatMinMax
	{
		[Token(Token = "0x400049E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float Min;

		[Token(Token = "0x400049F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float Max;

		[Token(Token = "0x60007C9")]
		[Address(RVA = "0xF9E104", Offset = "0xF9E104", VA = "0xF9E104")]
		public FloatMinMax(float min, float max)
		{
		}
	}
	[Token(Token = "0x200032C")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xBC6720", Offset = "0xBC6720")]
	public class MinMaxSliderAttribute : UnityEngine.PropertyAttribute
	{
		[Token(Token = "0x40004A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly float Min;

		[Token(Token = "0x40004A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public readonly float Max;

		[Token(Token = "0x60007CA")]
		[Address(RVA = "0x1017284", Offset = "0x1017284", VA = "0x1017284")]
		public MinMaxSliderAttribute()
		{
		}

		[Token(Token = "0x60007CB")]
		[Address(RVA = "0x10172B4", Offset = "0x10172B4", VA = "0x10172B4")]
		public MinMaxSliderAttribute(float min, float max)
		{
		}
	}
	[Token(Token = "0x200032D")]
	public static class GameObjectUtils
	{
		[Token(Token = "0x60007CC")]
		[Address(RVA = "0xFA6AC4", Offset = "0xFA6AC4", VA = "0xFA6AC4")]
		public static void Show(this GameObject[] gameObjects)
		{
		}

		[Token(Token = "0x60007CD")]
		[Address(RVA = "0xFA6B3C", Offset = "0xFA6B3C", VA = "0xFA6B3C")]
		public static void Hide(this GameObject[] gameObjects)
		{
		}

		[Token(Token = "0x60007CE")]
		[Address(RVA = "0xFA6BB4", Offset = "0xFA6BB4", VA = "0xFA6BB4")]
		public static void Show(this GameObject gameObject)
		{
		}

		[Token(Token = "0x60007CF")]
		[Address(RVA = "0xFA6C50", Offset = "0xFA6C50", VA = "0xFA6C50")]
		public static void Hide(this GameObject gameObject)
		{
		}

		[Token(Token = "0x60007D0")]
		[Address(RVA = "0xFA6CEC", Offset = "0xFA6CEC", VA = "0xFA6CEC")]
		public static bool Toggle(this GameObject gameObject)
		{
			return default(bool);
		}

		[Token(Token = "0x60007D1")]
		[Address(RVA = "0xFA6D88", Offset = "0xFA6D88", VA = "0xFA6D88")]
		public static bool Toggle(this GameObject gameObject, bool state)
		{
			return default(bool);
		}

		[Token(Token = "0x60007D2")]
		[Address(RVA = "0xFA6E38", Offset = "0xFA6E38", VA = "0xFA6E38")]
		public static bool Toggle(this Component component, bool state)
		{
			return default(bool);
		}

		[Token(Token = "0x60007D3")]
		[Address(RVA = "0xFA6EDC", Offset = "0xFA6EDC", VA = "0xFA6EDC")]
		public static void Show(this Component component)
		{
		}

		[Token(Token = "0x60007D4")]
		[Address(RVA = "0xFA6F68", Offset = "0xFA6F68", VA = "0xFA6F68")]
		public static void Show(this Image component, Sprite sprite)
		{
		}

		[Token(Token = "0x60007D5")]
		[Address(RVA = "0xFA7020", Offset = "0xFA7020", VA = "0xFA7020")]
		public static void Hide(this Component component)
		{
		}

		[Token(Token = "0x60007D6")]
		public static void Show<T>(this T[] gameObjects) where T : Component
		{
		}

		[Token(Token = "0x60007D7")]
		public static void Hide<T>(this T[] gameObjects) where T : Component
		{
		}
	}
	[Token(Token = "0x200032E")]
	public static class GizmoUtils
	{
		[Token(Token = "0x200032F")]
		private struct GizmosJointParams
		{
			[Token(Token = "0x2000330")]
			public enum GizmosJointType
			{
				[Token(Token = "0x40004B2")]
				None,
				[Token(Token = "0x40004B3")]
				DistanceJoint2D,
				[Token(Token = "0x40004B4")]
				DistanceJoint3D,
				[Token(Token = "0x40004B5")]
				SpringJoint2D,
				[Token(Token = "0x40004B6")]
				SpringJoint3D,
				[Token(Token = "0x40004B7")]
				HingeJoint2D,
				[Token(Token = "0x40004B8")]
				HingeJoint3D
			}

			[Token(Token = "0x40004A4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public GizmosJointType Type;

			[Token(Token = "0x40004A5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public bool Selected;

			[Token(Token = "0x40004A6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Vector3 AnchorPos;

			[Token(Token = "0x40004A7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public Vector3 ConnectedPos;

			[Token(Token = "0x40004A8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Quaternion JointRot;

			[Token(Token = "0x40004A9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Quaternion ConnectedRot;

			[Token(Token = "0x40004AA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public Quaternion RelRotRef;

			[Token(Token = "0x40004AB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public float MinDistance;

			[Token(Token = "0x40004AC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			public float MaxDistance;

			[Token(Token = "0x40004AD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public Vector3 Axis;

			[Token(Token = "0x40004AE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
			public bool UseAngleLimits;

			[Token(Token = "0x40004AF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public float LowerAngle;

			[Token(Token = "0x40004B0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
			public float UpperAngle;
		}

		[Token(Token = "0x40004A2")]
		public const float DefaultArrowHeadLength = 0.25f;

		[Token(Token = "0x40004A3")]
		public const float DefaultArrowHeadAngle = 25f;

		[Token(Token = "0x60007D8")]
		[Address(RVA = "0xFA818C", Offset = "0xFA818C", VA = "0xFA818C")]
		public static Color Alpha(this Color color, float a)
		{
			return default(Color);
		}

		[Token(Token = "0x60007D9")]
		[Address(RVA = "0xFA8194", Offset = "0xFA8194", VA = "0xFA8194")]
		public static Color Brightness(this Color color, float brightness)
		{
			return default(Color);
		}

		[Token(Token = "0x60007DA")]
		[Address(RVA = "0xFA81F0", Offset = "0xFA81F0", VA = "0xFA81F0")]
		public static void DrawGizmosBox(Transform transform, Vector3 size, Color color, [System.Runtime.InteropServices.Optional] Vector3 offset, bool selected = false, [System.Runtime.InteropServices.Optional] QuantumGizmoStyle style)
		{
		}

		[Token(Token = "0x60007DB")]
		[Address(RVA = "0xFA81F4", Offset = "0xFA81F4", VA = "0xFA81F4")]
		public static void DrawGizmosBox(Vector3 center, Vector3 size, Color color, bool selected = false, [System.Runtime.InteropServices.Optional] Quaternion? rotation, [System.Runtime.InteropServices.Optional] QuantumGizmoStyle style)
		{
		}

		[Token(Token = "0x60007DC")]
		[Address(RVA = "0xFA81F8", Offset = "0xFA81F8", VA = "0xFA81F8")]
		public static void DrawGizmosBox(Matrix4x4 matrix, Vector3 size, Color color, bool selected = false, [System.Runtime.InteropServices.Optional] QuantumGizmoStyle style)
		{
		}

		[Token(Token = "0x60007DD")]
		[Address(RVA = "0xFA81FC", Offset = "0xFA81FC", VA = "0xFA81FC")]
		public static void DrawGizmosCircle(Vector3 position, float radius, Color color, float height = 0f, bool selected = false, [System.Runtime.InteropServices.Optional] QuantumGizmoStyle style)
		{
		}

		[Token(Token = "0x60007DE")]
		[Address(RVA = "0xFA8200", Offset = "0xFA8200", VA = "0xFA8200")]
		public static void DrawGizmosSphere(Vector3 position, float radius, Color color, bool selected = false, [System.Runtime.InteropServices.Optional] QuantumGizmoStyle style)
		{
		}

		[Token(Token = "0x60007DF")]
		[Address(RVA = "0xFA8204", Offset = "0xFA8204", VA = "0xFA8204")]
		public static void DrawGizmosTriangle(Vector3 A, Vector3 B, Vector3 C, bool selected, Color color)
		{
		}

		[Token(Token = "0x60007E0")]
		[Address(RVA = "0xFA8208", Offset = "0xFA8208", VA = "0xFA8208")]
		public static void DrawGizmoGrid(FPVector2 bottomLeft, int width, int height, int nodeSize, Color color)
		{
		}

		[Token(Token = "0x60007E1")]
		[Address(RVA = "0xFA820C", Offset = "0xFA820C", VA = "0xFA820C")]
		public static void DrawGizmoGrid(Vector3 bottomLeft, int width, int height, int nodeSize, Color color)
		{
		}

		[Token(Token = "0x60007E2")]
		[Address(RVA = "0xFA8210", Offset = "0xFA8210", VA = "0xFA8210")]
		public static void DrawGizmoGrid(Vector3 bottomLeft, int width, int height, float nodeWidth, float nodeHeight, Color color)
		{
		}

		[Token(Token = "0x60007E3")]
		[Address(RVA = "0xFA8214", Offset = "0xFA8214", VA = "0xFA8214")]
		public static void DrawGizmoPolygon2D(Vector3 position, Quaternion rotation, FPVector2[] vertices, float height, Color color, [System.Runtime.InteropServices.Optional] QuantumGizmoStyle style)
		{
		}

		[Token(Token = "0x60007E4")]
		[Address(RVA = "0xFA8218", Offset = "0xFA8218", VA = "0xFA8218")]
		public static void DrawGizmoPolygon2D(Vector3 position, Quaternion rotation, FPVector2[] vertices, float height, bool drawNormals, bool selected, Color color, [System.Runtime.InteropServices.Optional] QuantumGizmoStyle style)
		{
		}

		[Token(Token = "0x60007E5")]
		[Address(RVA = "0xFA821C", Offset = "0xFA821C", VA = "0xFA821C")]
		public static void DrawGizmoPolygon2D(Transform transform, FPVector2[] vertices, float height, bool drawNormals, bool selected, Color color, [System.Runtime.InteropServices.Optional] QuantumGizmoStyle style)
		{
		}

		[Token(Token = "0x60007E6")]
		[Address(RVA = "0xFA8220", Offset = "0xFA8220", VA = "0xFA8220")]
		public static void DrawGizmoPolygon2D(Matrix4x4 matrix, FPVector2[] vertices, float height, bool drawNormals, bool selected, Color color, [System.Runtime.InteropServices.Optional] QuantumGizmoStyle style)
		{
		}

		[Token(Token = "0x60007E7")]
		[Address(RVA = "0xFA8224", Offset = "0xFA8224", VA = "0xFA8224")]
		private static void DrawGizmoPolygon2DInternal(Vector3[] vertices, float height, bool drawNormals, bool selected, Color color, [System.Runtime.InteropServices.Optional] QuantumGizmoStyle style)
		{
		}

		[Token(Token = "0x60007E8")]
		[Address(RVA = "0xFA8228", Offset = "0xFA8228", VA = "0xFA8228")]
		public static void DrawGizmoDiamond(Vector3 center, Vector2 size)
		{
		}

		[Token(Token = "0x60007E9")]
		[Address(RVA = "0xFA822C", Offset = "0xFA822C", VA = "0xFA822C")]
		public static void DrawGizmoVector3D(Vector3 start, Vector3 end, float arrowHeadLength = 0.25f, float arrowHeadAngle = 25f)
		{
		}

		[Token(Token = "0x60007EA")]
		[Address(RVA = "0xFA8230", Offset = "0xFA8230", VA = "0xFA8230")]
		public static void DrawGizmoVector(Vector3 start, Vector3 end, float arrowHeadLength = 0.25f, float arrowHeadAngle = 25f)
		{
		}

		[Token(Token = "0x60007EB")]
		[Address(RVA = "0xFA8234", Offset = "0xFA8234", VA = "0xFA8234")]
		public static void DrawGizmoArc(Vector3 position, Vector3 normal, Vector3 from, float angle, float radius, Color color, float alphaRatio = 1f, [System.Runtime.InteropServices.Optional] QuantumGizmoStyle style)
		{
		}

		[Token(Token = "0x60007EC")]
		[Address(RVA = "0xFA8238", Offset = "0xFA8238", VA = "0xFA8238")]
		public static void DrawGizmoDisc(Vector3 position, Vector3 normal, float radius, Color color, float alphaRatio = 1f, [System.Runtime.InteropServices.Optional] QuantumGizmoStyle style)
		{
		}

		[Token(Token = "0x60007ED")]
		[Address(RVA = "0xFA823C", Offset = "0xFA823C", VA = "0xFA823C")]
		public static void DrawGizmosEdge(Vector3 start, Vector3 end, float height, bool selected, Color color, [System.Runtime.InteropServices.Optional] QuantumGizmoStyle style)
		{
		}

		[Token(Token = "0x60007EE")]
		[Address(RVA = "0xFA8240", Offset = "0xFA8240", VA = "0xFA8240")]
		public static void DrawGizmosJoint2D(Quantum.Prototypes.Unity.Joint2D_Prototype prototype, Transform jointTransform, Transform connectedTransform, bool selected, QuantumEditorSettings editorSettings, [System.Runtime.InteropServices.Optional] QuantumGizmoStyle style)
		{
		}

		[Token(Token = "0x60007EF")]
		[Address(RVA = "0xFA8244", Offset = "0xFA8244", VA = "0xFA8244")]
		public unsafe static void DrawGizmosJoint2D(Quantum.Physics2D.Joint* joint, Transform2D* jointTransform, Transform2D* connectedTransform, bool selected, QuantumEditorSettings editorSettings, [System.Runtime.InteropServices.Optional] QuantumGizmoStyle style)
		{
		}

		[Token(Token = "0x60007F0")]
		[Address(RVA = "0xFA8248", Offset = "0xFA8248", VA = "0xFA8248")]
		public static void DrawGizmosJoint3D(Quantum.Prototypes.Unity.Joint3D_Prototype prototype, Transform jointTransform, Transform connectedTransform, bool selected, QuantumEditorSettings editorSettings, [System.Runtime.InteropServices.Optional] QuantumGizmoStyle style)
		{
		}

		[Token(Token = "0x60007F1")]
		[Address(RVA = "0xFA824C", Offset = "0xFA824C", VA = "0xFA824C")]
		public unsafe static void DrawGizmosJoint3D(Joint3D* joint, Transform3D* jointTransform, Transform3D* connectedTransform, bool selected, QuantumEditorSettings editorSettings, [System.Runtime.InteropServices.Optional] QuantumGizmoStyle style)
		{
		}

		[Token(Token = "0x60007F2")]
		[Address(RVA = "0xFA8250", Offset = "0xFA8250", VA = "0xFA8250")]
		private static void DrawGizmosJointInternal(ref GizmosJointParams p, QuantumEditorSettings editorSettings, [System.Runtime.InteropServices.Optional] QuantumGizmoStyle style)
		{
		}

		[Token(Token = "0x60007F3")]
		[Address(RVA = "0xFA8254", Offset = "0xFA8254", VA = "0xFA8254")]
		private static float ComputeRelativeAngleHingeJoint(Vector3 hingeAxis, Quaternion rotJoint, Quaternion rotConnectedAnchor, Quaternion relRotRef)
		{
			return default(float);
		}
	}
	[Serializable]
	[Token(Token = "0x2000331")]
	public struct QuantumGizmoStyle
	{
		[Token(Token = "0x40004B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool DisableFill;

		[Token(Token = "0x17000175")]
		public static QuantumGizmoStyle FillDisabled
		{
			[Token(Token = "0x60007F4")]
			[Address(RVA = "0x1126A88", Offset = "0x1126A88", VA = "0x1126A88")]
			get
			{
				return default(QuantumGizmoStyle);
			}
		}

		[Token(Token = "0x17000176")]
		public bool IsFillEnabled
		{
			[Token(Token = "0x60007F5")]
			[Address(RVA = "0x1126A90", Offset = "0x1126A90", VA = "0x1126A90")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000177")]
		public bool IsWireframeEnabled
		{
			[Token(Token = "0x60007F6")]
			[Address(RVA = "0x1126AA0", Offset = "0x1126AA0", VA = "0x1126AA0")]
			get
			{
				return default(bool);
			}
		}
	}
	[Token(Token = "0x2000332")]
	public interface IQuantumEditorGUI
	{
	}
	[Token(Token = "0x2000333")]
	public class ProgressBar : IDisposable
	{
		[Token(Token = "0x40004BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private float _progress;

		[Token(Token = "0x40004BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private string _info;

		[Token(Token = "0x40004BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private string _title;

		[Token(Token = "0x40004BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool _isCancelable;

		[Token(Token = "0x40004BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Stopwatch _sw;

		[Token(Token = "0x17000178")]
		public string Info
		{
			[Token(Token = "0x60007F8")]
			[Address(RVA = "0x111BF38", Offset = "0x111BF38", VA = "0x111BF38")]
			set
			{
			}
		}

		[Token(Token = "0x17000179")]
		public float Progress
		{
			[Token(Token = "0x60007FA")]
			[Address(RVA = "0x111C118", Offset = "0x111C118", VA = "0x111C118")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60007F9")]
			[Address(RVA = "0x111C0F8", Offset = "0x111C0F8", VA = "0x111C0F8")]
			set
			{
			}
		}

		[Token(Token = "0x60007F7")]
		[Address(RVA = "0x111BE98", Offset = "0x111BE98", VA = "0x111BE98")]
		public ProgressBar(string title, bool isCancelable = false, bool logStopwatch = false)
		{
		}

		[Token(Token = "0x60007FB")]
		[Address(RVA = "0x111C120", Offset = "0x111C120", VA = "0x111C120", Slot = "4")]
		public void Dispose()
		{
		}

		[Token(Token = "0x60007FC")]
		[Address(RVA = "0x111C0F4", Offset = "0x111C0F4", VA = "0x111C0F4")]
		private void Display()
		{
		}

		[Token(Token = "0x60007FD")]
		[Address(RVA = "0x111BF64", Offset = "0x111BF64", VA = "0x111BF64")]
		private void DisplayStopwatch()
		{
		}
	}
	[Token(Token = "0x2000334")]
	public static class EditorRectUtils
	{
		[Token(Token = "0x60007FE")]
		[Address(RVA = "0x10420E0", Offset = "0x10420E0", VA = "0x10420E0")]
		public static Rect SetWidth(this Rect r, float w)
		{
			return default(Rect);
		}

		[Token(Token = "0x60007FF")]
		[Address(RVA = "0x1042118", Offset = "0x1042118", VA = "0x1042118")]
		public static Rect SetWidthHeight(this Rect r, Vector2 v)
		{
			return default(Rect);
		}

		[Token(Token = "0x6000800")]
		[Address(RVA = "0x104216C", Offset = "0x104216C", VA = "0x104216C")]
		public static Rect SetWidthHeight(this Rect r, float w, float h)
		{
			return default(Rect);
		}

		[Token(Token = "0x6000801")]
		[Address(RVA = "0x10421C0", Offset = "0x10421C0", VA = "0x10421C0")]
		public static Rect AddWidth(this Rect r, float w)
		{
			return default(Rect);
		}

		[Token(Token = "0x6000802")]
		[Address(RVA = "0x1042210", Offset = "0x1042210", VA = "0x1042210")]
		public static Rect AddHeight(this Rect r, float h)
		{
			return default(Rect);
		}

		[Token(Token = "0x6000803")]
		[Address(RVA = "0x1042260", Offset = "0x1042260", VA = "0x1042260")]
		public static Rect SetHeight(this Rect r, float h)
		{
			return default(Rect);
		}

		[Token(Token = "0x6000804")]
		[Address(RVA = "0x1042298", Offset = "0x1042298", VA = "0x1042298")]
		public static Rect AddXY(this Rect r, Vector2 xy)
		{
			return default(Rect);
		}

		[Token(Token = "0x6000805")]
		[Address(RVA = "0x1042308", Offset = "0x1042308", VA = "0x1042308")]
		public static Rect AddXY(this Rect r, float x, float y)
		{
			return default(Rect);
		}

		[Token(Token = "0x6000806")]
		[Address(RVA = "0x1042378", Offset = "0x1042378", VA = "0x1042378")]
		public static Rect AddX(this Rect r, float x)
		{
			return default(Rect);
		}

		[Token(Token = "0x6000807")]
		[Address(RVA = "0x10423C8", Offset = "0x10423C8", VA = "0x10423C8")]
		public static Rect AddY(this Rect r, float y)
		{
			return default(Rect);
		}

		[Token(Token = "0x6000808")]
		[Address(RVA = "0x1042418", Offset = "0x1042418", VA = "0x1042418")]
		public static Rect SetY(this Rect r, float y)
		{
			return default(Rect);
		}

		[Token(Token = "0x6000809")]
		[Address(RVA = "0x1042450", Offset = "0x1042450", VA = "0x1042450")]
		public static Rect SetX(this Rect r, float x)
		{
			return default(Rect);
		}

		[Token(Token = "0x600080A")]
		[Address(RVA = "0x1042488", Offset = "0x1042488", VA = "0x1042488")]
		public static Rect SetXMin(this Rect r, float x)
		{
			return default(Rect);
		}

		[Token(Token = "0x600080B")]
		[Address(RVA = "0x10424C0", Offset = "0x10424C0", VA = "0x10424C0")]
		public static Rect SetXMax(this Rect r, float x)
		{
			return default(Rect);
		}

		[Token(Token = "0x600080C")]
		[Address(RVA = "0x10424F8", Offset = "0x10424F8", VA = "0x10424F8")]
		public static Rect SetYMin(this Rect r, float y)
		{
			return default(Rect);
		}

		[Token(Token = "0x600080D")]
		[Address(RVA = "0x1042530", Offset = "0x1042530", VA = "0x1042530")]
		public static Rect SetYMax(this Rect r, float y)
		{
			return default(Rect);
		}

		[Token(Token = "0x600080E")]
		[Address(RVA = "0x1042568", Offset = "0x1042568", VA = "0x1042568")]
		public static Rect AddXMin(this Rect r, float x)
		{
			return default(Rect);
		}

		[Token(Token = "0x600080F")]
		[Address(RVA = "0x10425B8", Offset = "0x10425B8", VA = "0x10425B8")]
		public static Rect AddXMax(this Rect r, float x)
		{
			return default(Rect);
		}

		[Token(Token = "0x6000810")]
		[Address(RVA = "0x1042608", Offset = "0x1042608", VA = "0x1042608")]
		public static Rect AddYMin(this Rect r, float y)
		{
			return default(Rect);
		}

		[Token(Token = "0x6000811")]
		[Address(RVA = "0x1042658", Offset = "0x1042658", VA = "0x1042658")]
		public static Rect AddYMax(this Rect r, float y)
		{
			return default(Rect);
		}

		[Token(Token = "0x6000812")]
		[Address(RVA = "0x10426A8", Offset = "0x10426A8", VA = "0x10426A8")]
		public static Rect Adjust(this Rect r, float x, float y, float w, float h)
		{
			return default(Rect);
		}

		[Token(Token = "0x6000813")]
		[Address(RVA = "0x1042760", Offset = "0x1042760", VA = "0x1042760")]
		public static Rect ToRect(this Vector2 v, float w, float h)
		{
			return default(Rect);
		}

		[Token(Token = "0x6000814")]
		[Address(RVA = "0x1042790", Offset = "0x1042790", VA = "0x1042790")]
		public static Rect ZeroXY(this Rect r)
		{
			return default(Rect);
		}

		[Token(Token = "0x6000815")]
		[Address(RVA = "0x10427FC", Offset = "0x10427FC", VA = "0x10427FC")]
		public static Vector2 ToVector2(this Rect r)
		{
			return default(Vector2);
		}
	}
	[Token(Token = "0x2000335")]
	public static class ReflectionUtils
	{
		[Token(Token = "0x2000336")]
		public struct InstanceAccessor<TValue>
		{
			[Token(Token = "0x40004C0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Func<object, TValue> GetValue;

			[Token(Token = "0x40004C1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action<object, TValue> SetValue;
		}

		[Token(Token = "0x2000337")]
		public struct StaticAccessor<TValue>
		{
			[Token(Token = "0x40004C2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Func<TValue> GetValue;

			[Token(Token = "0x40004C3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action<TValue> SetValue;
		}

		[Token(Token = "0x2000338")]
		public class DelegateSwizzle
		{
			[Token(Token = "0x40004C4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int[] _args;

			[Token(Token = "0x1700017A")]
			public int Count
			{
				[Token(Token = "0x600083D")]
				[Address(RVA = "0x105D594", Offset = "0x105D594", VA = "0x105D594")]
				get
				{
					return default(int);
				}
			}

			[Token(Token = "0x600083E")]
			[Address(RVA = "0x105D5B0", Offset = "0x105D5B0", VA = "0x105D5B0")]
			public DelegateSwizzle(params int[] args)
			{
			}

			[Token(Token = "0x600083F")]
			public T[] Swizzle<T>(T[] inputTypes)
			{
				return null;
			}
		}

		[Serializable]
		[Token(Token = "0x2000339")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBC6798", Offset = "0xBC6798")]
		private sealed class <>c
		{
			[Token(Token = "0x40004C5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40004C6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Type, string> <>9__25_0;

			[Token(Token = "0x40004C7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<ParameterInfo, Type> <>9__30_0;

			[Token(Token = "0x40004C8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Func<Type, string> <>9__30_1;

			[Token(Token = "0x40004C9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static Func<ConstructorInfo, string> <>9__30_2;

			[Token(Token = "0x40004CA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public static Func<ParameterInfo, Type> <>9__31_0;

			[Token(Token = "0x40004CB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public static Func<Type, string> <>9__31_1;

			[Token(Token = "0x40004CC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public static Func<MethodInfo, string> <>9__31_2;

			[Token(Token = "0x6000841")]
			[Address(RVA = "0x105D4A0", Offset = "0x105D4A0", VA = "0x105D4A0")]
			public <>c()
			{
			}

			[Token(Token = "0x6000842")]
			[Address(RVA = "0x105D4A8", Offset = "0x105D4A8", VA = "0x105D4A8")]
			internal string <CreateConstructorExceptionMessage>b__25_0(Type x)
			{
				return null;
			}

			[Token(Token = "0x6000843")]
			[Address(RVA = "0x105D4CC", Offset = "0x105D4CC", VA = "0x105D4CC")]
			internal Type <GetConstructorOrThrow>b__30_0(ParameterInfo x)
			{
				return null;
			}

			[Token(Token = "0x6000844")]
			[Address(RVA = "0x105D4EC", Offset = "0x105D4EC", VA = "0x105D4EC")]
			internal string <GetConstructorOrThrow>b__30_1(Type x)
			{
				return null;
			}

			[Token(Token = "0x6000845")]
			[Address(RVA = "0x105D510", Offset = "0x105D510", VA = "0x105D510")]
			internal string <GetConstructorOrThrow>b__30_2(ConstructorInfo x)
			{
				return null;
			}

			[Token(Token = "0x6000846")]
			[Address(RVA = "0x105D530", Offset = "0x105D530", VA = "0x105D530")]
			internal Type <GetMethodOrThrow>b__31_0(ParameterInfo x)
			{
				return null;
			}

			[Token(Token = "0x6000847")]
			[Address(RVA = "0x105D550", Offset = "0x105D550", VA = "0x105D550")]
			internal string <GetMethodOrThrow>b__31_1(Type x)
			{
				return null;
			}

			[Token(Token = "0x6000848")]
			[Address(RVA = "0x105D574", Offset = "0x105D574", VA = "0x105D574")]
			internal string <GetMethodOrThrow>b__31_2(MethodInfo x)
			{
				return null;
			}
		}

		[Token(Token = "0x40004BF")]
		public const BindingFlags DefaultBindingFlags = BindingFlags.Instance | BindingFlags.Static | BindingFlags.Public | BindingFlags.NonPublic;

		[Token(Token = "0x6000816")]
		[Address(RVA = "0x125AB90", Offset = "0x125AB90", VA = "0x125AB90")]
		public static Type GetUnityLeafType(this Type type)
		{
			return null;
		}

		[Token(Token = "0x6000817")]
		public static T CreateMethodDelegate<T>(this Type type, string methodName, BindingFlags flags = BindingFlags.Instance | BindingFlags.Static | BindingFlags.Public | BindingFlags.NonPublic) where T : Delegate
		{
			return null;
		}

		[Token(Token = "0x6000818")]
		[Address(RVA = "0x125ACC8", Offset = "0x125ACC8", VA = "0x125ACC8")]
		public static Delegate CreateMethodDelegate(this Type type, string methodName, BindingFlags flags, Type delegateType)
		{
			return null;
		}

		[Token(Token = "0x6000819")]
		public static T CreateMethodDelegate<T>(Assembly assembly, string typeName, string methodName, BindingFlags flags = BindingFlags.Instance | BindingFlags.Static | BindingFlags.Public | BindingFlags.NonPublic) where T : Delegate
		{
			return null;
		}

		[Token(Token = "0x600081A")]
		[Address(RVA = "0x125AD28", Offset = "0x125AD28", VA = "0x125AD28")]
		public static Delegate CreateMethodDelegate(Assembly assembly, string typeName, string methodName, BindingFlags flags, Type delegateType)
		{
			return null;
		}

		[Token(Token = "0x600081B")]
		public static T CreateMethodDelegate<T>(this Type type, string methodName, BindingFlags flags, Type delegateType, params DelegateSwizzle[] fallbackSwizzles) where T : Delegate
		{
			return null;
		}

		[Token(Token = "0x600081C")]
		public static T CreateConstructorDelegate<T>(this Type type, BindingFlags flags, Type delegateType, params DelegateSwizzle[] fallbackSwizzles) where T : Delegate
		{
			return null;
		}

		[Token(Token = "0x600081D")]
		[Address(RVA = "0x125B040", Offset = "0x125B040", VA = "0x125B040")]
		public static FieldInfo GetFieldOrThrow(this Type type, string fieldName, BindingFlags flags = BindingFlags.Instance | BindingFlags.Static | BindingFlags.Public | BindingFlags.NonPublic)
		{
			return null;
		}

		[Token(Token = "0x600081E")]
		public static FieldInfo GetFieldOrThrow<T>(this Type type, string fieldName, BindingFlags flags = BindingFlags.Instance | BindingFlags.Static | BindingFlags.Public | BindingFlags.NonPublic)
		{
			return null;
		}

		[Token(Token = "0x600081F")]
		[Address(RVA = "0x125B2CC", Offset = "0x125B2CC", VA = "0x125B2CC")]
		public static FieldInfo GetFieldOrThrow(this Type type, string fieldName, Type fieldType, BindingFlags flags = BindingFlags.Instance | BindingFlags.Static | BindingFlags.Public | BindingFlags.NonPublic)
		{
			return null;
		}

		[Token(Token = "0x6000820")]
		public static PropertyInfo GetPropertyOrThrow<T>(this Type type, string propertyName, BindingFlags flags = BindingFlags.Instance | BindingFlags.Static | BindingFlags.Public | BindingFlags.NonPublic)
		{
			return null;
		}

		[Token(Token = "0x6000821")]
		[Address(RVA = "0x125B57C", Offset = "0x125B57C", VA = "0x125B57C")]
		public static PropertyInfo GetPropertyOrThrow(this Type type, string propertyName, Type propertyType, BindingFlags flags = BindingFlags.Instance | BindingFlags.Static | BindingFlags.Public | BindingFlags.NonPublic)
		{
			return null;
		}

		[Token(Token = "0x6000822")]
		[Address(RVA = "0x125B824", Offset = "0x125B824", VA = "0x125B824")]
		public static ConstructorInfo GetConstructorInfoOrThrow(this Type type, Type[] types, BindingFlags flags = BindingFlags.Instance | BindingFlags.Static | BindingFlags.Public | BindingFlags.NonPublic)
		{
			return null;
		}

		[Token(Token = "0x6000823")]
		[Address(RVA = "0x125BC28", Offset = "0x125BC28", VA = "0x125BC28")]
		public static Type GetNestedTypeOrThrow(this Type type, string name, BindingFlags flags)
		{
			return null;
		}

		[Token(Token = "0x6000824")]
		public static InstanceAccessor<FieldType> CreateFieldAccessor<FieldType>(this Type type, string fieldName, [System.Runtime.InteropServices.Optional] Type expectedFieldType, BindingFlags flags = BindingFlags.Instance | BindingFlags.Static | BindingFlags.Public | BindingFlags.NonPublic)
		{
			return default(InstanceAccessor<FieldType>);
		}

		[Token(Token = "0x6000825")]
		[Address(RVA = "0x125BD78", Offset = "0x125BD78", VA = "0x125BD78")]
		public static StaticAccessor<object> CreateStaticFieldAccessor(this Type type, string fieldName, [System.Runtime.InteropServices.Optional] Type expectedFieldType)
		{
			return default(StaticAccessor<object>);
		}

		[Token(Token = "0x6000826")]
		public static StaticAccessor<FieldType> CreateStaticFieldAccessor<FieldType>(this Type type, string fieldName, [System.Runtime.InteropServices.Optional] Type expectedFieldType)
		{
			return default(StaticAccessor<FieldType>);
		}

		[Token(Token = "0x6000827")]
		public static InstanceAccessor<PropertyType> CreatePropertyAccessor<PropertyType>(this Type type, string fieldName, [System.Runtime.InteropServices.Optional] Type expectedPropertyType, BindingFlags flags = BindingFlags.Instance | BindingFlags.Static | BindingFlags.Public | BindingFlags.NonPublic)
		{
			return default(InstanceAccessor<PropertyType>);
		}

		[Token(Token = "0x6000828")]
		[Address(RVA = "0x125BDDC", Offset = "0x125BDDC", VA = "0x125BDDC")]
		public static StaticAccessor<object> CreateStaticPropertyAccessor(this Type type, string fieldName, [System.Runtime.InteropServices.Optional] Type expectedFieldType)
		{
			return default(StaticAccessor<object>);
		}

		[Token(Token = "0x6000829")]
		public static StaticAccessor<FieldType> CreateStaticPropertyAccessor<FieldType>(this Type type, string fieldName, [System.Runtime.InteropServices.Optional] Type expectedFieldType)
		{
			return default(StaticAccessor<FieldType>);
		}

		[Token(Token = "0x600082A")]
		private static string CreateMethodExceptionMessage<T>(Assembly assembly, string typeName, string methodName, BindingFlags flags)
		{
			return null;
		}

		[Token(Token = "0x600082B")]
		[Address(RVA = "0x125AE7C", Offset = "0x125AE7C", VA = "0x125AE7C")]
		private static string CreateMethodExceptionMessage(Assembly assembly, string typeName, string methodName, BindingFlags flags, Type delegateType)
		{
			return null;
		}

		[Token(Token = "0x600082C")]
		[Address(RVA = "0x125B13C", Offset = "0x125B13C", VA = "0x125B13C")]
		private static string CreateFieldExceptionMessage(Assembly assembly, string typeName, string fieldName, BindingFlags flags)
		{
			return null;
		}

		[Token(Token = "0x600082D")]
		[Address(RVA = "0x125BE40", Offset = "0x125BE40", VA = "0x125BE40")]
		private static string CreateConstructorExceptionMessage(Assembly assembly, string typeName, BindingFlags flags)
		{
			return null;
		}

		[Token(Token = "0x600082E")]
		[Address(RVA = "0x125B974", Offset = "0x125B974", VA = "0x125B974")]
		private static string CreateConstructorExceptionMessage(Assembly assembly, string typeName, Type[] types, BindingFlags flags)
		{
			return null;
		}

		[Token(Token = "0x600082F")]
		private static T CreateMethodDelegateInternal<T>(this Type type, string name, BindingFlags flags) where T : Delegate
		{
			return null;
		}

		[Token(Token = "0x6000830")]
		[Address(RVA = "0x125ACF8", Offset = "0x125ACF8", VA = "0x125ACF8")]
		private static Delegate CreateMethodDelegateInternal(this Type type, string name, BindingFlags flags, Type delegateType)
		{
			return null;
		}

		[Token(Token = "0x6000831")]
		[Address(RVA = "0x125BEF8", Offset = "0x125BEF8", VA = "0x125BEF8")]
		private static MethodInfo GetMethodOrThrow(Type type, string name, BindingFlags flags, Type delegateType)
		{
			return null;
		}

		[Token(Token = "0x6000832")]
		[Address(RVA = "0x125C9FC", Offset = "0x125C9FC", VA = "0x125C9FC")]
		private static MethodInfo FindMethod(Type type, string name, BindingFlags flags, Type returnType, params Type[] parameters)
		{
			return null;
		}

		[Token(Token = "0x6000833")]
		[Address(RVA = "0x125CAF4", Offset = "0x125CAF4", VA = "0x125CAF4")]
		private static ConstructorInfo GetConstructorOrThrow(Type type, BindingFlags flags, Type delegateType, DelegateSwizzle[] swizzles, out DelegateSwizzle firstMatchingSwizzle)
		{
			return null;
		}

		[Token(Token = "0x6000834")]
		[Address(RVA = "0x125C000", Offset = "0x125C000", VA = "0x125C000")]
		private static MethodInfo GetMethodOrThrow(Type type, string name, BindingFlags flags, Type delegateType, DelegateSwizzle[] swizzles, out DelegateSwizzle firstMatchingSwizzle)
		{
			return null;
		}

		[Token(Token = "0x6000835")]
		[Address(RVA = "0x125D2D4", Offset = "0x125D2D4", VA = "0x125D2D4")]
		public static bool IsArrayOrList(this Type listType)
		{
			return default(bool);
		}

		[Token(Token = "0x6000836")]
		[Address(RVA = "0x125D3C0", Offset = "0x125D3C0", VA = "0x125D3C0")]
		public static Type GetArrayOrListElementType(this Type listType)
		{
			return null;
		}

		[Token(Token = "0x6000837")]
		[Address(RVA = "0x125D504", Offset = "0x125D504", VA = "0x125D504")]
		public static Type MakeFuncType(params Type[] types)
		{
			return null;
		}

		[Token(Token = "0x6000838")]
		[Address(RVA = "0x125D544", Offset = "0x125D544", VA = "0x125D544")]
		private static Type GetFuncType(int argumentCount)
		{
			return null;
		}

		[Token(Token = "0x6000839")]
		[Address(RVA = "0x125D6DC", Offset = "0x125D6DC", VA = "0x125D6DC")]
		public static Type MakeActionType(params Type[] types)
		{
			return null;
		}

		[Token(Token = "0x600083A")]
		[Address(RVA = "0x125D78C", Offset = "0x125D78C", VA = "0x125D78C")]
		private static Type GetActionType(int argumentCount)
		{
			return null;
		}

		[Token(Token = "0x600083B")]
		private static StaticAccessor<T> CreateStaticAccessorInternal<T>(MemberInfo fieldOrProperty)
		{
			return default(StaticAccessor<T>);
		}

		[Token(Token = "0x600083C")]
		private static InstanceAccessor<T> CreateAccessorInternal<T>(MemberInfo fieldOrProperty)
		{
			return default(InstanceAccessor<T>);
		}
	}
}
namespace Quantum.Core
{
	[Token(Token = "0x200033A")]
	public class QuantumNetworkCommunicator : ICommunicator
	{
		[Token(Token = "0x200033B")]
		public enum QuitBehaviour
		{
			[Token(Token = "0x40004D4")]
			LeaveRoom,
			[Token(Token = "0x40004D5")]
			LeaveRoomAndBecomeInactive,
			[Token(Token = "0x40004D6")]
			Disconnect,
			[Token(Token = "0x40004D7")]
			None
		}

		[Token(Token = "0x200033C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBC67A8", Offset = "0xBC67A8")]
		private sealed class <>c__DisplayClass16_0
		{
			[Token(Token = "0x40004D8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public OnEventReceived onEventReceived;

			[Token(Token = "0x6000853")]
			[Address(RVA = "0x105B958", Offset = "0x105B958", VA = "0x105B958")]
			public <>c__DisplayClass16_0()
			{
			}

			[Token(Token = "0x6000854")]
			[Address(RVA = "0x105B960", Offset = "0x105B960", VA = "0x105B960")]
			internal void <AddEventListener>b__0(EventData eventData)
			{
			}
		}

		[Token(Token = "0x40004CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public QuitBehaviour ThisQuitBehaviour;

		[Token(Token = "0x40004CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly ByteArraySlice _sendSlice;

		[Token(Token = "0x40004CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly RaiseEventOptions _eventOptions;

		[Token(Token = "0x40004D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly LoadBalancingClient _loadBalancingClient;

		[Token(Token = "0x40004D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly Dictionary<byte, object> _parameters;

		[Token(Token = "0x40004D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Action<EventData> _lastEventCallback;

		[Token(Token = "0x1700017B")]
		public bool IsConnected
		{
			[Token(Token = "0x6000849")]
			[Address(RVA = "0x1249B48", Offset = "0x1249B48", VA = "0x1249B48", Slot = "10")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700017C")]
		public int RoundTripTime
		{
			[Token(Token = "0x600084A")]
			[Address(RVA = "0x1249B64", Offset = "0x1249B64", VA = "0x1249B64", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700017D")]
		public byte LocalPLayerId
		{
			[Token(Token = "0x600084B")]
			[Address(RVA = "0x1249B8C", Offset = "0x1249B8C", VA = "0x1249B8C", Slot = "11")]
			get
			{
				return default(byte);
			}
		}

		[Token(Token = "0x600084C")]
		[Address(RVA = "0x1249BB4", Offset = "0x1249BB4", VA = "0x1249BB4")]
		internal QuantumNetworkCommunicator(LoadBalancingClient loadBalancingClient, QuitBehaviour quitBehavior)
		{
		}

		[Token(Token = "0x600084D")]
		[Address(RVA = "0x1249D30", Offset = "0x1249D30", VA = "0x1249D30", Slot = "7")]
		public void DisposeEventObject(object obj)
		{
		}

		[Token(Token = "0x600084E")]
		[Address(RVA = "0x1249DC0", Offset = "0x1249DC0", VA = "0x1249DC0", Slot = "8")]
		public void RaiseEvent(byte eventCode, byte[] message, int messageLength, bool reliable, int[] toPlayers)
		{
		}

		[Token(Token = "0x600084F")]
		[Address(RVA = "0x1249E6C", Offset = "0x1249E6C", VA = "0x1249E6C", Slot = "9")]
		public void AddEventListener(OnEventReceived onEventReceived)
		{
		}

		[Token(Token = "0x6000850")]
		[Address(RVA = "0x1249F8C", Offset = "0x1249F8C", VA = "0x1249F8C", Slot = "5")]
		public void Service()
		{
		}

		[Token(Token = "0x6000851")]
		[Address(RVA = "0x1249F50", Offset = "0x1249F50", VA = "0x1249F50", Slot = "12")]
		public void RemoveEventListener()
		{
		}

		[Token(Token = "0x6000852")]
		[Address(RVA = "0x1249FA8", Offset = "0x1249FA8", VA = "0x1249FA8", Slot = "6")]
		public void OnDestroy()
		{
		}
	}
}
namespace Quantum.Prototypes.Unity
{
	[Serializable]
	[Token(Token = "0x200033D")]
	[AttributeAttribute(Name = "PrototypeAttribute", RVA = "0xBC67B8", Offset = "0xBC67B8")]
	public class AIBlackboardComponent_Prototype : PrototypeAdapter<Quantum.Prototypes.AIBlackboardComponent_Prototype>
	{
		[Token(Token = "0x200033E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBC6818", Offset = "0xBC6818")]
		private sealed class <>c__DisplayClass2_0
		{
			[Token(Token = "0x40004DB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public EntityPrototypeConverter converter;

			[Token(Token = "0x6000857")]
			[Address(RVA = "0x1140F38", Offset = "0x1140F38", VA = "0x1140F38")]
			public <>c__DisplayClass2_0()
			{
			}

			[Token(Token = "0x6000858")]
			[Address(RVA = "0x1140F40", Offset = "0x1140F40", VA = "0x1140F40")]
			internal Quantum.Prototypes.BlackboardEntry_Prototype <Convert>b__0(BlackboardEntry_Prototype x)
			{
				return null;
			}
		}

		[Token(Token = "0x40004D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AssetRefAIBlackboard Board;

		[Token(Token = "0x40004DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[DynamicCollection]
		public BlackboardEntry_Prototype[] Entries;

		[Token(Token = "0x6000855")]
		[Address(RVA = "0x132379C", Offset = "0x132379C", VA = "0x132379C", Slot = "5")]
		public sealed override Quantum.Prototypes.AIBlackboardComponent_Prototype Convert(EntityPrototypeConverter converter)
		{
			return null;
		}

		[Token(Token = "0x6000856")]
		[Address(RVA = "0x13238C8", Offset = "0x13238C8", VA = "0x13238C8")]
		public AIBlackboardComponent_Prototype()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200033F")]
	[AttributeAttribute(Name = "PrototypeAttribute", RVA = "0xBC6828", Offset = "0xBC6828")]
	public class BlackboardEntry_Prototype : PrototypeAdapter<Quantum.Prototypes.BlackboardEntry_Prototype>
	{
		[Token(Token = "0x40004DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public BlackboardValue_Prototype Value;

		[Token(Token = "0x40004DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[DynamicCollection]
		public AssetRefBTDecorator[] ReactiveDecorators;

		[Token(Token = "0x6000859")]
		[Address(RVA = "0x1330B04", Offset = "0x1330B04", VA = "0x1330B04", Slot = "5")]
		public sealed override Quantum.Prototypes.BlackboardEntry_Prototype Convert(EntityPrototypeConverter converter)
		{
			return null;
		}

		[Token(Token = "0x600085A")]
		[Address(RVA = "0x1330B98", Offset = "0x1330B98", VA = "0x1330B98")]
		public BlackboardEntry_Prototype()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000340")]
	[AttributeAttribute(Name = "PrototypeAttribute", RVA = "0xBC6888", Offset = "0xBC6888")]
	public class BlackboardValue_Prototype : PrototypeAdapter<Quantum.Prototypes.BlackboardValue_Prototype>
	{
		[Token(Token = "0x40004DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string _field_used_;

		[Token(Token = "0x40004DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public QBoolean BooleanValue;

		[Token(Token = "0x40004E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public byte ByteValue;

		[Token(Token = "0x40004E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int IntegerValue;

		[Token(Token = "0x40004E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public FP FPValue;

		[Token(Token = "0x40004E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public FPVector2 FPVector2Value;

		[Token(Token = "0x40004E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public FPVector3 FPVector3Value;

		[Token(Token = "0x40004E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[LocalReference]
		public global::EntityPrototype EntityRefValue;

		[Token(Token = "0x600085B")]
		[Address(RVA = "0x1330C88", Offset = "0x1330C88", VA = "0x1330C88", Slot = "5")]
		public sealed override Quantum.Prototypes.BlackboardValue_Prototype Convert(EntityPrototypeConverter converter)
		{
			return null;
		}

		[Token(Token = "0x600085C")]
		[Address(RVA = "0x1330D50", Offset = "0x1330D50", VA = "0x1330D50")]
		public BlackboardValue_Prototype()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000341")]
	[AttributeAttribute(Name = "PrototypeAttribute", RVA = "0xBC68E8", Offset = "0xBC68E8")]
	public class Bomb_Prototype : PrototypeAdapter<Quantum.Prototypes.Bomb_Prototype>
	{
		[Token(Token = "0x40004E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Team_Prototype team;

		[Token(Token = "0x40004E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform3D WandPosition;

		[Token(Token = "0x40004E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[LocalReference]
		[HideInInspectorAttribute]
		public global::EntityPrototype PlacedBombSocket;

		[Token(Token = "0x40004E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[HideInInspectorAttribute]
		public QBoolean IsArmed;

		[Token(Token = "0x40004EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[LocalReference]
		[HideInInspectorAttribute]
		public global::EntityPrototype CurrentWand;

		[Token(Token = "0x40004EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[HideInInspectorAttribute]
		public FP Activation;

		[Token(Token = "0x40004EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[HideInInspectorAttribute]
		public FP SwitchCounter;

		[Token(Token = "0x40004ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[HideInInspectorAttribute]
		public BombState_Prototype State;

		[Token(Token = "0x40004EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public FP MoveToPlaySpaceAcceleration;

		[Token(Token = "0x40004EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public FP WandSwitchColliderOffset;

		[Token(Token = "0x40004F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public FP WandSwitchDistance;

		[Token(Token = "0x40004F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public FP WandSwitchCosAngle;

		[Token(Token = "0x600085D")]
		[Address(RVA = "0x1332DFC", Offset = "0x1332DFC", VA = "0x1332DFC", Slot = "5")]
		public sealed override Quantum.Prototypes.Bomb_Prototype Convert(EntityPrototypeConverter converter)
		{
			return null;
		}

		[Token(Token = "0x600085E")]
		[Address(RVA = "0x1332F00", Offset = "0x1332F00", VA = "0x1332F00")]
		public Bomb_Prototype()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000342")]
	[AttributeAttribute(Name = "PrototypeAttribute", RVA = "0xBC6948", Offset = "0xBC6948")]
	public class CasterLookingForTarget_Prototype : PrototypeAdapter<Quantum.Prototypes.CasterLookingForTarget_Prototype>
	{
		[Token(Token = "0x40004F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public FP Distance;

		[Token(Token = "0x40004F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Raycast_Prototype LookingForTile;

		[Token(Token = "0x40004F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TargetAcquireOptions_Prototype TargetAcquireOptions;

		[Token(Token = "0x40004F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public LayerMask NotSingleHitOptions;

		[Token(Token = "0x40004F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[Degrees]
		[HideInInspectorAttribute]
		public FPVector3 WandRotation;

		[Token(Token = "0x40004F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[HideInInspectorAttribute]
		public ReticleRaycast_Prototype AimLine;

		[Token(Token = "0x40004F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[HideInInspectorAttribute]
		public ReticleRaycastParams_Prototype Params;

		[Token(Token = "0x40004F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[HideInInspectorAttribute]
		public NullableFPVector3 HitPoint;

		[Token(Token = "0x40004FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[HideInInspectorAttribute]
		public NullableFPVector3 HitNormal;

		[Token(Token = "0x40004FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[LocalReference]
		[HideInInspectorAttribute]
		public global::EntityPrototype HitEntity;

		[Token(Token = "0x40004FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[LocalReference]
		[HideInInspectorAttribute]
		public global::EntityPrototype Tile;

		[Token(Token = "0x40004FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[LocalReference]
		[HideInInspectorAttribute]
		public global::EntityPrototype LastValidPreviewTile;

		[Token(Token = "0x40004FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[HideInInspectorAttribute]
		public QBoolean IsCandidate;

		[Token(Token = "0x40004FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		[HideInInspectorAttribute]
		public QBoolean IsSpellPreviewVisible;

		[Token(Token = "0x4000500")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[HideInInspectorAttribute]
		public QBoolean IsPreview;

		[Token(Token = "0x600085F")]
		[Address(RVA = "0x133569C", Offset = "0x133569C", VA = "0x133569C", Slot = "5")]
		public sealed override Quantum.Prototypes.CasterLookingForTarget_Prototype Convert(EntityPrototypeConverter converter)
		{
			return null;
		}

		[Token(Token = "0x6000860")]
		[Address(RVA = "0x13357BC", Offset = "0x13357BC", VA = "0x13357BC")]
		public CasterLookingForTarget_Prototype()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000343")]
	[AttributeAttribute(Name = "PrototypeAttribute", RVA = "0xBC69A8", Offset = "0xBC69A8")]
	public class CharacterBuilderSlot_Prototype : PrototypeAdapter<Quantum.Prototypes.CharacterBuilderSlot_Prototype>
	{
		[Token(Token = "0x4000501")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AssetRefSpellSetup Spell;

		[Token(Token = "0x4000502")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int Index;

		[Token(Token = "0x4000503")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public QBoolean IsClassSpecific;

		[Token(Token = "0x4000504")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[LocalReference]
		public global::EntityPrototype CurrentRelic;

		[Token(Token = "0x6000861")]
		[Address(RVA = "0x133B6E0", Offset = "0x133B6E0", VA = "0x133B6E0", Slot = "5")]
		public sealed override Quantum.Prototypes.CharacterBuilderSlot_Prototype Convert(EntityPrototypeConverter converter)
		{
			return null;
		}

		[Token(Token = "0x6000862")]
		[Address(RVA = "0x133B780", Offset = "0x133B780", VA = "0x133B780")]
		public CharacterBuilderSlot_Prototype()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000344")]
	[AttributeAttribute(Name = "PrototypeAttribute", RVA = "0xBC6A08", Offset = "0xBC6A08")]
	public class Constraint_Prototype : PrototypeAdapter<Quantum.Prototypes.Constraint_Prototype>
	{
		[Token(Token = "0x4000505")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int Order;

		[Token(Token = "0x4000506")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public JointDecl_Prototype MovingJoint;

		[Token(Token = "0x4000507")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RotationConstraint_Prototype ConstrainRotation;

		[Token(Token = "0x4000508")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public JointDecl_Prototype FixedJoint;

		[Token(Token = "0x4000509")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public QBoolean FreezeFixedJointOnInit;

		[Token(Token = "0x400050A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[HideInInspectorAttribute]
		public QBoolean IsInit;

		[Token(Token = "0x6000863")]
		[Address(RVA = "0x116728C", Offset = "0x116728C", VA = "0x116728C", Slot = "5")]
		public sealed override Quantum.Prototypes.Constraint_Prototype Convert(EntityPrototypeConverter converter)
		{
			return null;
		}

		[Token(Token = "0x6000864")]
		[Address(RVA = "0x1167354", Offset = "0x1167354", VA = "0x1167354")]
		public Constraint_Prototype()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000345")]
	[AttributeAttribute(Name = "PrototypeAttribute", RVA = "0xBC6A68", Offset = "0xBC6A68")]
	public class JointDecl_Prototype : PrototypeAdapter<Quantum.Prototypes.JointDecl_Prototype>
	{
		[Token(Token = "0x400050B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[LocalReference]
		public global::EntityPrototype Entity;

		[Token(Token = "0x400050C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform3D LocalTransform;

		[Token(Token = "0x6000865")]
		[Address(RVA = "0xF831BC", Offset = "0xF831BC", VA = "0xF831BC", Slot = "5")]
		public sealed override Quantum.Prototypes.JointDecl_Prototype Convert(EntityPrototypeConverter converter)
		{
			return null;
		}

		[Token(Token = "0x6000866")]
		[Address(RVA = "0xF83264", Offset = "0xF83264", VA = "0xF83264")]
		public JointDecl_Prototype()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000346")]
	[AttributeAttribute(Name = "PrototypeAttribute", RVA = "0xBC6AC8", Offset = "0xBC6AC8")]
	public class DamageAssistantStatistics_Prototype : PrototypeAdapter<Quantum.Prototypes.DamageAssistantStatistics_Prototype>
	{
		[Token(Token = "0x2000347")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBC6B28", Offset = "0xBC6B28")]
		private sealed class <>c__DisplayClass2_0
		{
			[Token(Token = "0x400050F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public EntityPrototypeConverter converter;

			[Token(Token = "0x6000869")]
			[Address(RVA = "0x1027920", Offset = "0x1027920", VA = "0x1027920")]
			public <>c__DisplayClass2_0()
			{
			}

			[Token(Token = "0x600086A")]
			[Address(RVA = "0x1027928", Offset = "0x1027928", VA = "0x1027928")]
			internal Quantum.Prototypes.DictionaryEntry_EntityRef_AssistantInfo_Prototype <Convert>b__0(DictionaryEntry_EntityRef_AssistantInfo_Prototype x)
			{
				return null;
			}
		}

		[Token(Token = "0x400050D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public FP CurrentTime;

		[Token(Token = "0x400050E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Dictionary]
		[DynamicCollection]
		public DictionaryEntry_EntityRef_AssistantInfo_Prototype[] DamageAssistants;

		[Token(Token = "0x6000867")]
		[Address(RVA = "0x116E40C", Offset = "0x116E40C", VA = "0x116E40C", Slot = "5")]
		public sealed override Quantum.Prototypes.DamageAssistantStatistics_Prototype Convert(EntityPrototypeConverter converter)
		{
			return null;
		}

		[Token(Token = "0x6000868")]
		[Address(RVA = "0x116E538", Offset = "0x116E538", VA = "0x116E538")]
		public DamageAssistantStatistics_Prototype()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000348")]
	[AttributeAttribute(Name = "PrototypeAttribute", RVA = "0xBC6B38", Offset = "0xBC6B38")]
	public class DictionaryEntry_EntityRef_AssistantInfo_Prototype : PrototypeAdapter<Quantum.Prototypes.DictionaryEntry_EntityRef_AssistantInfo_Prototype>
	{
		[Token(Token = "0x4000510")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[LocalReference]
		public global::EntityPrototype Key;

		[Token(Token = "0x4000511")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AssistantInfo_Prototype Value;

		[Token(Token = "0x600086B")]
		[Address(RVA = "0x103E7B0", Offset = "0x103E7B0", VA = "0x103E7B0", Slot = "5")]
		public sealed override Quantum.Prototypes.DictionaryEntry_EntityRef_AssistantInfo_Prototype Convert(EntityPrototypeConverter converter)
		{
			return null;
		}

		[Token(Token = "0x600086C")]
		[Address(RVA = "0x103E83C", Offset = "0x103E83C", VA = "0x103E83C")]
		public DictionaryEntry_EntityRef_AssistantInfo_Prototype()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000349")]
	[AttributeAttribute(Name = "PrototypeAttribute", RVA = "0xBC6B98", Offset = "0xBC6B98")]
	public class DestroyChain_Prototype : PrototypeAdapter<Quantum.Prototypes.DestroyChain_Prototype>
	{
		[Token(Token = "0x4000512")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[HideInInspectorAttribute]
		[LocalReference]
		public global::EntityPrototype Parent;

		[Token(Token = "0x600086D")]
		[Address(RVA = "0x103E4D4", Offset = "0x103E4D4", VA = "0x103E4D4", Slot = "5")]
		public sealed override Quantum.Prototypes.DestroyChain_Prototype Convert(EntityPrototypeConverter converter)
		{
			return null;
		}

		[Token(Token = "0x600086E")]
		[Address(RVA = "0x103E658", Offset = "0x103E658", VA = "0x103E658")]
		public DestroyChain_Prototype()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200034A")]
	[AttributeAttribute(Name = "PrototypeAttribute", RVA = "0xBC6BF8", Offset = "0xBC6BF8")]
	public class FollowTarget_Prototype : PrototypeAdapter<Quantum.Prototypes.FollowTarget_Prototype>
	{
		[Token(Token = "0x4000513")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public FollowingTargetMode_Prototype FollowingMode;

		[Token(Token = "0x4000514")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public BodyPart_Prototype BodyPart;

		[Token(Token = "0x4000515")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspectorAttribute]
		[LocalReference]
		public global::EntityPrototype Target;

		[Token(Token = "0x600086F")]
		[Address(RVA = "0xF9E768", Offset = "0xF9E768", VA = "0xF9E768", Slot = "5")]
		public sealed override Quantum.Prototypes.FollowTarget_Prototype Convert(EntityPrototypeConverter converter)
		{
			return null;
		}

		[Token(Token = "0x6000870")]
		[Address(RVA = "0xF9E800", Offset = "0xF9E800", VA = "0xF9E800")]
		public FollowTarget_Prototype()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200034B")]
	[AttributeAttribute(Name = "PrototypeAttribute", RVA = "0xBC6C58", Offset = "0xBC6C58")]
	public class Globals_Prototype : PrototypeAdapter<Quantum.Prototypes.Globals_Prototype>
	{
		[Token(Token = "0x4000516")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[HideInInspectorAttribute]
		public int GameReadyFrame;

		[Token(Token = "0x4000517")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[HideInInspectorAttribute]
		public GameMode_Prototype GameMode;

		[Token(Token = "0x4000518")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspectorAttribute]
		public PlayerHUDMode_Prototype HUDMode;

		[Token(Token = "0x4000519")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[LocalReference]
		[HideInInspectorAttribute]
		public global::EntityPrototype DataSource;

		[Token(Token = "0x400051A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public VoiceOverType_Prototype VoiceOver;

		[Token(Token = "0x400051B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[HideInInspectorAttribute]
		public QBoolean DisableCooldown;

		[Token(Token = "0x6000871")]
		[Address(RVA = "0xFA8658", Offset = "0xFA8658", VA = "0xFA8658", Slot = "5")]
		public sealed override Quantum.Prototypes.Globals_Prototype Convert(EntityPrototypeConverter converter)
		{
			return null;
		}

		[Token(Token = "0x6000872")]
		[Address(RVA = "0xFA8708", Offset = "0xFA8708", VA = "0xFA8708")]
		public Globals_Prototype()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200034C")]
	[AttributeAttribute(Name = "PrototypeAttribute", RVA = "0xBC6CB8", Offset = "0xBC6CB8")]
	public class Grabbable_Prototype : PrototypeAdapter<Quantum.Prototypes.Grabbable_Prototype>
	{
		[Token(Token = "0x400051C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public QBoolean FollowTeleport;

		[Token(Token = "0x400051D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public QBoolean CantGrabWhileDead;

		[Token(Token = "0x400051E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GrabbableOffset_Prototype LeftHand;

		[Token(Token = "0x400051F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GrabbableOffset_Prototype RightHand;

		[Token(Token = "0x4000520")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[LocalReference]
		[HideInInspectorAttribute]
		public global::EntityPrototype CurrentGrabber;

		[Token(Token = "0x4000521")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspectorAttribute]
		public FPVector3 OriginalCenterOfMass;

		[Token(Token = "0x6000873")]
		[Address(RVA = "0xFAA028", Offset = "0xFAA028", VA = "0xFAA028", Slot = "5")]
		public sealed override Quantum.Prototypes.Grabbable_Prototype Convert(EntityPrototypeConverter converter)
		{
			return null;
		}

		[Token(Token = "0x6000874")]
		[Address(RVA = "0xFAA0E0", Offset = "0xFAA0E0", VA = "0xFAA0E0")]
		public Grabbable_Prototype()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200034D")]
	[AttributeAttribute(Name = "PrototypeAttribute", RVA = "0xBC6D18", Offset = "0xBC6D18")]
	public class Grabber_Prototype : PrototypeAdapter<Quantum.Prototypes.Grabber_Prototype>
	{
		[Token(Token = "0x4000522")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public FPVector3 Offset;

		[Token(Token = "0x4000523")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public FPVector3 Direction;

		[Token(Token = "0x4000524")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspectorAttribute]
		public QBoolean IsGrabbing;

		[Token(Token = "0x4000525")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[LocalReference]
		[HideInInspectorAttribute]
		public global::EntityPrototype HeldConstraint;

		[Token(Token = "0x4000526")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[HideInInspectorAttribute]
		[LocalReference]
		public global::EntityPrototype HeldForceField;

		[Token(Token = "0x4000527")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[HideInInspectorAttribute]
		public QueuedQuery_Prototype Query;

		[Token(Token = "0x4000528")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[HideInInspectorAttribute]
		[LocalReference]
		public global::EntityPrototype Highlighted;

		[Token(Token = "0x4000529")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[HideInInspectorAttribute]
		public QBoolean ShotForceField;

		[Token(Token = "0x6000875")]
		[Address(RVA = "0xFAA12C", Offset = "0xFAA12C", VA = "0xFAA12C", Slot = "5")]
		public sealed override Quantum.Prototypes.Grabber_Prototype Convert(EntityPrototypeConverter converter)
		{
			return null;
		}

		[Token(Token = "0x6000876")]
		[Address(RVA = "0xFAA22C", Offset = "0xFAA22C", VA = "0xFAA22C")]
		public Grabber_Prototype()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200034E")]
	[AttributeAttribute(Name = "PrototypeAttribute", RVA = "0xBC6D78", Offset = "0xBC6D78")]
	public class Health_Prototype : PrototypeAdapter<Quantum.Prototypes.Health_Prototype>
	{
		[Token(Token = "0x200034F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBC6DD8", Offset = "0xBC6DD8")]
		private sealed class <>c__DisplayClass8_0
		{
			[Token(Token = "0x4000532")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public EntityPrototypeConverter converter;

			[Token(Token = "0x6000879")]
			[Address(RVA = "0x1033020", Offset = "0x1033020", VA = "0x1033020")]
			public <>c__DisplayClass8_0()
			{
			}

			[Token(Token = "0x600087A")]
			[Address(RVA = "0x1033028", Offset = "0x1033028", VA = "0x1033028")]
			internal Quantum.Prototypes.HealthChangeInfo_Prototype <Convert>b__0(HealthChangeInfo_Prototype x)
			{
				return null;
			}

			[Token(Token = "0x600087B")]
			[Address(RVA = "0x1033050", Offset = "0x1033050", VA = "0x1033050")]
			internal Quantum.Prototypes.HealthChangeInfo_Prototype <Convert>b__1(HealthChangeInfo_Prototype x)
			{
				return null;
			}
		}

		[Token(Token = "0x400052A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[HideInInspectorAttribute]
		[DynamicCollection]
		public HealthChangeInfo_Prototype[] CurrentDamage;

		[Token(Token = "0x400052B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[DynamicCollection]
		[HideInInspectorAttribute]
		public HealthChangeInfo_Prototype[] CurrentHealing;

		[Token(Token = "0x400052C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspectorAttribute]
		public FP CurrentHealth;

		[Token(Token = "0x400052D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspectorAttribute]
		public HealthMultiplier_Prototype Damage;

		[Token(Token = "0x400052E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspectorAttribute]
		public HealthMultiplier_Prototype Healing;

		[Token(Token = "0x400052F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspectorAttribute]
		public int StatusEffectImmuneFrame;

		[Token(Token = "0x4000530")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public FP MaxHealth;

		[Token(Token = "0x4000531")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public QBoolean SaveSpellStatistics;

		[Token(Token = "0x6000877")]
		[Address(RVA = "0xFB2C04", Offset = "0xFB2C04", VA = "0xFB2C04", Slot = "5")]
		public sealed override Quantum.Prototypes.Health_Prototype Convert(EntityPrototypeConverter converter)
		{
			return null;
		}

		[Token(Token = "0x6000878")]
		[Address(RVA = "0xFB2DD8", Offset = "0xFB2DD8", VA = "0xFB2DD8")]
		public Health_Prototype()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000350")]
	[AttributeAttribute(Name = "PrototypeAttribute", RVA = "0xBC6DE8", Offset = "0xBC6DE8")]
	public class HealthChangeInfo_Prototype : PrototypeAdapter<Quantum.Prototypes.HealthChangeInfo_Prototype>
	{
		[Token(Token = "0x4000533")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public FP HealthChange;

		[Token(Token = "0x4000534")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AssetRefSpellSetup Spell;

		[Token(Token = "0x4000535")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[LocalReference]
		public global::EntityPrototype Sender;

		[Token(Token = "0x4000536")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public FPVector3 HitDirection;

		[Token(Token = "0x4000537")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public NullableFPVector3 HitPoint;

		[Token(Token = "0x4000538")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public NullableFPVector3 SpellPosition;

		[Token(Token = "0x4000539")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public QBoolean EnhancedHealthChange;

		[Token(Token = "0x400053A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[LocalReference]
		public global::EntityPrototype MaxKillsTracking;

		[Token(Token = "0x400053B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public BodyPart_Prototype BodyPart;

		[Token(Token = "0x400053C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public QBoolean IsHumanPlayer;

		[Token(Token = "0x600087C")]
		[Address(RVA = "0xFB2924", Offset = "0xFB2924", VA = "0xFB2924", Slot = "5")]
		public sealed override Quantum.Prototypes.HealthChangeInfo_Prototype Convert(EntityPrototypeConverter converter)
		{
			return null;
		}

		[Token(Token = "0x600087D")]
		[Address(RVA = "0xFB2A08", Offset = "0xFB2A08", VA = "0xFB2A08")]
		public HealthChangeInfo_Prototype()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000351")]
	[AttributeAttribute(Name = "PrototypeAttribute", RVA = "0xBC6E48", Offset = "0xBC6E48")]
	public class HealthMultiplier_Prototype : PrototypeAdapter<Quantum.Prototypes.HealthMultiplier_Prototype>
	{
		[Token(Token = "0x400053D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public FP Multiplier;

		[Token(Token = "0x400053E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[LocalReference]
		public global::EntityPrototype Source;

		[Token(Token = "0x600087E")]
		[Address(RVA = "0xFB2A54", Offset = "0xFB2A54", VA = "0xFB2A54", Slot = "5")]
		public sealed override Quantum.Prototypes.HealthMultiplier_Prototype Convert(EntityPrototypeConverter converter)
		{
			return null;
		}

		[Token(Token = "0x600087F")]
		[Address(RVA = "0xFB2AE4", Offset = "0xFB2AE4", VA = "0xFB2AE4")]
		public HealthMultiplier_Prototype()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000352")]
	[AttributeAttribute(Name = "PrototypeAttribute", RVA = "0xBC6EA8", Offset = "0xBC6EA8")]
	public class HealthPart_Prototype : PrototypeAdapter<Quantum.Prototypes.HealthPart_Prototype>
	{
		[Token(Token = "0x400053F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[LocalReference]
		public global::EntityPrototype HealthOwner;

		[Token(Token = "0x6000880")]
		[Address(RVA = "0xFB2B30", Offset = "0xFB2B30", VA = "0xFB2B30", Slot = "5")]
		public sealed override Quantum.Prototypes.HealthPart_Prototype Convert(EntityPrototypeConverter converter)
		{
			return null;
		}

		[Token(Token = "0x6000881")]
		[Address(RVA = "0xFB2BB8", Offset = "0xFB2BB8", VA = "0xFB2BB8")]
		public HealthPart_Prototype()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000353")]
	[AttributeAttribute(Name = "PrototypeAttribute", RVA = "0xBC6F08", Offset = "0xBC6F08")]
	public class LoadoutRelicSlot_Prototype : PrototypeAdapter<Quantum.Prototypes.LoadoutRelicSlot_Prototype>
	{
		[Token(Token = "0x4000540")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AssetRefSpellSetup Spell;

		[Token(Token = "0x4000541")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[LocalReference]
		public global::EntityPrototype CurrentRelic;

		[Token(Token = "0x4000542")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int Index;

		[Token(Token = "0x6000882")]
		[Address(RVA = "0xF87C18", Offset = "0xF87C18", VA = "0xF87C18", Slot = "5")]
		public sealed override Quantum.Prototypes.LoadoutRelicSlot_Prototype Convert(EntityPrototypeConverter converter)
		{
			return null;
		}

		[Token(Token = "0x6000883")]
		[Address(RVA = "0xF87CB0", Offset = "0xF87CB0", VA = "0xF87CB0")]
		public LoadoutRelicSlot_Prototype()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000354")]
	[AttributeAttribute(Name = "PrototypeAttribute", RVA = "0xBC6F68", Offset = "0xBC6F68")]
	public class Occupant_Prototype : PrototypeAdapter<Quantum.Prototypes.Occupant_Prototype>
	{
		[Token(Token = "0x4000543")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[LocalReference]
		[HideInInspectorAttribute]
		public global::EntityPrototype OccupyingTile;

		[Token(Token = "0x4000544")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspectorAttribute]
		public QBoolean IsGhostMode;

		[Token(Token = "0x6000884")]
		[Address(RVA = "0x101E32C", Offset = "0x101E32C", VA = "0x101E32C", Slot = "5")]
		public sealed override Quantum.Prototypes.Occupant_Prototype Convert(EntityPrototypeConverter converter)
		{
			return null;
		}

		[Token(Token = "0x6000885")]
		[Address(RVA = "0x101E3BC", Offset = "0x101E3BC", VA = "0x101E3BC")]
		public Occupant_Prototype()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000355")]
	[AttributeAttribute(Name = "PrototypeAttribute", RVA = "0xBC6FC8", Offset = "0xBC6FC8")]
	public class PlayerCantTeleport_Prototype : PrototypeAdapter<Quantum.Prototypes.PlayerCantTeleport_Prototype>
	{
		[Token(Token = "0x2000356")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBC8028", Offset = "0xBC8028")]
		private sealed class <>c__DisplayClass1_0
		{
			[Token(Token = "0x4000546")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public EntityPrototypeConverter converter;

			[Token(Token = "0x6000888")]
			[Address(RVA = "0x11EC794", Offset = "0x11EC794", VA = "0x11EC794")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x6000889")]
			[Address(RVA = "0x11EC79C", Offset = "0x11EC79C", VA = "0x11EC79C")]
			internal MapEntityId <Convert>b__0(global::EntityPrototype x)
			{
				return default(MapEntityId);
			}
		}

		[Token(Token = "0x4000545")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[LocalReference]
		[HideInInspectorAttribute]
		[DynamicCollection]
		public global::EntityPrototype[] Players;

		[Token(Token = "0x6000886")]
		[Address(RVA = "0xFE1540", Offset = "0xFE1540", VA = "0xFE1540", Slot = "5")]
		public sealed override Quantum.Prototypes.PlayerCantTeleport_Prototype Convert(EntityPrototypeConverter converter)
		{
			return null;
		}

		[Token(Token = "0x6000887")]
		[Address(RVA = "0xFE1664", Offset = "0xFE1664", VA = "0xFE1664")]
		public PlayerCantTeleport_Prototype()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000357")]
	[AttributeAttribute(Name = "PrototypeAttribute", RVA = "0xBC8038", Offset = "0xBC8038")]
	public class PlayerRoot_Prototype : PrototypeAdapter<Quantum.Prototypes.PlayerRoot_Prototype>
	{
		[Token(Token = "0x4000547")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[LocalReference]
		public global::EntityPrototype Head;

		[Token(Token = "0x4000548")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[LocalReference]
		public global::EntityPrototype LeftHand;

		[Token(Token = "0x4000549")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[LocalReference]
		public global::EntityPrototype RightHand;

		[Token(Token = "0x400054A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[LocalReference]
		public global::EntityPrototype Body;

		[Token(Token = "0x400054B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[LocalReference]
		public global::EntityPrototype PlayerLoadouts;

		[Token(Token = "0x600088A")]
		[Address(RVA = "0x1112424", Offset = "0x1112424", VA = "0x1112424", Slot = "5")]
		public sealed override Quantum.Prototypes.PlayerRoot_Prototype Convert(EntityPrototypeConverter converter)
		{
			return null;
		}

		[Token(Token = "0x600088B")]
		[Address(RVA = "0x11124FC", Offset = "0x11124FC", VA = "0x11124FC")]
		public PlayerRoot_Prototype()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000358")]
	[AttributeAttribute(Name = "PrototypeAttribute", RVA = "0xBC8098", Offset = "0xBC8098")]
	public class PlayerSpells_Prototype : PrototypeAdapter<Quantum.Prototypes.PlayerSpells_Prototype>
	{
		[Token(Token = "0x400054C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[LocalReference]
		public global::EntityPrototype LeftWandSpells;

		[Token(Token = "0x400054D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[LocalReference]
		public global::EntityPrototype RightWandSpells;

		[Token(Token = "0x600088C")]
		[Address(RVA = "0x11136D8", Offset = "0x11136D8", VA = "0x11136D8", Slot = "5")]
		public sealed override Quantum.Prototypes.PlayerSpells_Prototype Convert(EntityPrototypeConverter converter)
		{
			return null;
		}

		[Token(Token = "0x600088D")]
		[Address(RVA = "0x1113774", Offset = "0x1113774", VA = "0x1113774")]
		public PlayerSpells_Prototype()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000359")]
	[AttributeAttribute(Name = "PrototypeAttribute", RVA = "0xBC80F8", Offset = "0xBC80F8")]
	public class PreferableSpawnPoint_Prototype : PrototypeAdapter<Quantum.Prototypes.PreferableSpawnPoint_Prototype>
	{
		[Token(Token = "0x400054E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[LocalReference]
		public global::EntityPrototype Tile;

		[Token(Token = "0x600088E")]
		[Address(RVA = "0x111B40C", Offset = "0x111B40C", VA = "0x111B40C", Slot = "5")]
		public sealed override Quantum.Prototypes.PreferableSpawnPoint_Prototype Convert(EntityPrototypeConverter converter)
		{
			return null;
		}

		[Token(Token = "0x600088F")]
		[Address(RVA = "0x111B494", Offset = "0x111B494", VA = "0x111B494")]
		public PreferableSpawnPoint_Prototype()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200035A")]
	[AttributeAttribute(Name = "PrototypeAttribute", RVA = "0xBC8158", Offset = "0xBC8158")]
	public class SingleInstanceForTarget_Prototype : PrototypeAdapter<Quantum.Prototypes.SingleInstanceForTarget_Prototype>
	{
		[Token(Token = "0x400054F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[HideInInspectorAttribute]
		[LocalReference]
		public global::EntityPrototype Target;

		[Token(Token = "0x4000550")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspectorAttribute]
		public AssetRefSpellSetup SpellRef;

		[Token(Token = "0x6000890")]
		[Address(RVA = "0x11F9F84", Offset = "0x11F9F84", VA = "0x11F9F84", Slot = "5")]
		public sealed override Quantum.Prototypes.SingleInstanceForTarget_Prototype Convert(EntityPrototypeConverter converter)
		{
			return null;
		}

		[Token(Token = "0x6000891")]
		[Address(RVA = "0x11FA014", Offset = "0x11FA014", VA = "0x11FA014")]
		public SingleInstanceForTarget_Prototype()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200035B")]
	[AttributeAttribute(Name = "PrototypeAttribute", RVA = "0xBC81B8", Offset = "0xBC81B8")]
	public class Spell_Prototype : PrototypeAdapter<Quantum.Prototypes.Spell_Prototype>
	{
		[Token(Token = "0x4000551")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AssetRefSpellSetup SpellSetup;

		[Token(Token = "0x4000552")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[LocalReference]
		public global::EntityPrototype SpellCaster;

		[Token(Token = "0x4000553")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FP TimeCharged;

		[Token(Token = "0x4000554")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public QBoolean IsCharging;

		[Token(Token = "0x4000555")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public QBoolean FirstChargedFrame;

		[Token(Token = "0x4000556")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public QBoolean Successful;

		[Token(Token = "0x6000892")]
		[Address(RVA = "0x1148F4C", Offset = "0x1148F4C", VA = "0x1148F4C", Slot = "5")]
		public sealed override Quantum.Prototypes.Spell_Prototype Convert(EntityPrototypeConverter converter)
		{
			return null;
		}

		[Token(Token = "0x6000893")]
		[Address(RVA = "0x1148FFC", Offset = "0x1148FFC", VA = "0x1148FFC")]
		public Spell_Prototype()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200035C")]
	[AttributeAttribute(Name = "PrototypeAttribute", RVA = "0xBC8218", Offset = "0xBC8218")]
	public class SpellCaster_Prototype : PrototypeAdapter<Quantum.Prototypes.SpellCaster_Prototype>
	{
		[Token(Token = "0x4000557")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[LocalReference]
		public global::EntityPrototype Spell;

		[Token(Token = "0x4000558")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[LocalReference]
		public global::EntityPrototype CurrentWandSpells;

		[Token(Token = "0x4000559")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[LocalReference]
		public global::EntityPrototype Wand;

		[Token(Token = "0x400055A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int SilentModeFrame;

		[Token(Token = "0x400055B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public FPVector3 HandToWandTipOffset;

		[Token(Token = "0x400055C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public FP BarrelLength;

		[Token(Token = "0x6000894")]
		[Address(RVA = "0x12048DC", Offset = "0x12048DC", VA = "0x12048DC", Slot = "5")]
		public sealed override Quantum.Prototypes.SpellCaster_Prototype Convert(EntityPrototypeConverter converter)
		{
			return null;
		}

		[Token(Token = "0x6000895")]
		[Address(RVA = "0x12049AC", Offset = "0x12049AC", VA = "0x12049AC")]
		public SpellCaster_Prototype()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200035D")]
	[AttributeAttribute(Name = "PrototypeAttribute", RVA = "0xBC8278", Offset = "0xBC8278")]
	public class SpellParent_Prototype : PrototypeAdapter<Quantum.Prototypes.SpellParent_Prototype>
	{
		[Token(Token = "0x400055D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[HideInInspectorAttribute]
		[LocalReference]
		public global::EntityPrototype parent;

		[Token(Token = "0x6000896")]
		[Address(RVA = "0x11459C4", Offset = "0x11459C4", VA = "0x11459C4", Slot = "5")]
		public sealed override Quantum.Prototypes.SpellParent_Prototype Convert(EntityPrototypeConverter converter)
		{
			return null;
		}

		[Token(Token = "0x6000897")]
		[Address(RVA = "0x1145A4C", Offset = "0x1145A4C", VA = "0x1145A4C")]
		public SpellParent_Prototype()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200035E")]
	[AttributeAttribute(Name = "PrototypeAttribute", RVA = "0xBC82D8", Offset = "0xBC82D8")]
	public class StatusEffectsContainer_Prototype : PrototypeAdapter<Quantum.Prototypes.StatusEffectsContainer_Prototype>
	{
		[Token(Token = "0x200035F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBC8338", Offset = "0xBC8338")]
		private sealed class <>c__DisplayClass1_0
		{
			[Token(Token = "0x400055F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public EntityPrototypeConverter converter;

			[Token(Token = "0x600089A")]
			[Address(RVA = "0x10622C4", Offset = "0x10622C4", VA = "0x10622C4")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x600089B")]
			[Address(RVA = "0x10622CC", Offset = "0x10622CC", VA = "0x10622CC")]
			internal Quantum.Prototypes.StatusEffectInfo_Prototype <Convert>b__0(StatusEffectInfo_Prototype x)
			{
				return null;
			}
		}

		[Token(Token = "0x400055E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "AllocateOnComponentAddedAttribute", RVA = "0xBCF410", Offset = "0xBCF410")]
		[FreeOnComponentRemoved]
		[HideInInspectorAttribute]
		[DynamicCollection]
		public StatusEffectInfo_Prototype[] Effects;

		[Token(Token = "0x6000898")]
		[Address(RVA = "0x114B820", Offset = "0x114B820", VA = "0x114B820", Slot = "5")]
		public sealed override Quantum.Prototypes.StatusEffectsContainer_Prototype Convert(EntityPrototypeConverter converter)
		{
			return null;
		}

		[Token(Token = "0x6000899")]
		[Address(RVA = "0x114B944", Offset = "0x114B944", VA = "0x114B944")]
		public StatusEffectsContainer_Prototype()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000360")]
	[AttributeAttribute(Name = "PrototypeAttribute", RVA = "0xBC8348", Offset = "0xBC8348")]
	public class StatusEffectInfo_Prototype : PrototypeAdapter<Quantum.Prototypes.StatusEffectInfo_Prototype>
	{
		[Token(Token = "0x4000560")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public StatusEffect_Prototype Type;

		[Token(Token = "0x4000561")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[LocalReference]
		public global::EntityPrototype SpellEffect;

		[Token(Token = "0x4000562")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FP Duration;

		[Token(Token = "0x4000563")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public QBoolean IgnoreTime;

		[Token(Token = "0x4000564")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int Frame;

		[Token(Token = "0x600089C")]
		[Address(RVA = "0x114B2B8", Offset = "0x114B2B8", VA = "0x114B2B8", Slot = "5")]
		public sealed override Quantum.Prototypes.StatusEffectInfo_Prototype Convert(EntityPrototypeConverter converter)
		{
			return null;
		}

		[Token(Token = "0x600089D")]
		[Address(RVA = "0x114B360", Offset = "0x114B360", VA = "0x114B360")]
		public StatusEffectInfo_Prototype()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000361")]
	[AttributeAttribute(Name = "PrototypeAttribute", RVA = "0xBC83A8", Offset = "0xBC83A8")]
	public class TargetBuiltIn_Prototype : PrototypeAdapter<Quantum.Prototypes.TargetBuiltIn_Prototype>
	{
		[Token(Token = "0x2000362")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBC8408", Offset = "0xBC8408")]
		private sealed class <>c__DisplayClass2_0
		{
			[Token(Token = "0x4000567")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public EntityPrototypeConverter converter;

			[Token(Token = "0x60008A0")]
			[Address(RVA = "0x106451C", Offset = "0x106451C", VA = "0x106451C")]
			public <>c__DisplayClass2_0()
			{
			}

			[Token(Token = "0x60008A1")]
			[Address(RVA = "0x1064524", Offset = "0x1064524", VA = "0x1064524")]
			internal MapEntityId <Convert>b__0(global::EntityPrototype x)
			{
				return default(MapEntityId);
			}
		}

		[Token(Token = "0x4000565")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int RefIndex;

		[Token(Token = "0x4000566")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[DynamicCollection]
		[LocalReference]
		public global::EntityPrototype[] Targets;

		[Token(Token = "0x600089E")]
		[Address(RVA = "0x11524CC", Offset = "0x11524CC", VA = "0x11524CC", Slot = "5")]
		public sealed override Quantum.Prototypes.TargetBuiltIn_Prototype Convert(EntityPrototypeConverter converter)
		{
			return null;
		}

		[Token(Token = "0x600089F")]
		[Address(RVA = "0x11525F8", Offset = "0x11525F8", VA = "0x11525F8")]
		public TargetBuiltIn_Prototype()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000363")]
	[AttributeAttribute(Name = "PrototypeAttribute", RVA = "0xBC8418", Offset = "0xBC8418")]
	public class TargetBuiltInRef_Prototype : PrototypeAdapter<Quantum.Prototypes.TargetBuiltInRef_Prototype>
	{
		[Token(Token = "0x4000568")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int RefIndex;

		[Token(Token = "0x4000569")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[LocalReference]
		[HideInInspectorAttribute]
		public global::EntityPrototype TargetBuiltInList;

		[Token(Token = "0x60008A2")]
		[Address(RVA = "0x11523F0", Offset = "0x11523F0", VA = "0x11523F0", Slot = "5")]
		public sealed override Quantum.Prototypes.TargetBuiltInRef_Prototype Convert(EntityPrototypeConverter converter)
		{
			return null;
		}

		[Token(Token = "0x60008A3")]
		[Address(RVA = "0x1152480", Offset = "0x1152480", VA = "0x1152480")]
		public TargetBuiltInRef_Prototype()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000364")]
	[AttributeAttribute(Name = "PrototypeAttribute", RVA = "0xBC8478", Offset = "0xBC8478")]
	public class TargetFilterRaycast_Prototype : PrototypeAdapter<Quantum.Prototypes.TargetFilterRaycast_Prototype>
	{
		[Token(Token = "0x2000365")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBC84D8", Offset = "0xBC84D8")]
		private sealed class <>c__DisplayClass6_0
		{
			[Token(Token = "0x4000570")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public EntityPrototypeConverter converter;

			[Token(Token = "0x60008A6")]
			[Address(RVA = "0x106455C", Offset = "0x106455C", VA = "0x106455C")]
			public <>c__DisplayClass6_0()
			{
			}

			[Token(Token = "0x60008A7")]
			[Address(RVA = "0x1064564", Offset = "0x1064564", VA = "0x1064564")]
			internal MapEntityId <Convert>b__0(global::EntityPrototype x)
			{
				return default(MapEntityId);
			}
		}

		[Token(Token = "0x400056A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public FP MaxDistance;

		[Token(Token = "0x400056B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LayerMask Obstacles;

		[Token(Token = "0x400056C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TargetAcquireOptions_Prototype QueryOptions;

		[Token(Token = "0x400056D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public FP PreStartOffsetDistance;

		[Token(Token = "0x400056E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspectorAttribute]
		public QBoolean FilterCheckPerformed;

		[Token(Token = "0x400056F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[LocalReference]
		[DynamicCollection]
		[HideInInspectorAttribute]
		public global::EntityPrototype[] Result;

		[Token(Token = "0x60008A4")]
		[Address(RVA = "0x11526E8", Offset = "0x11526E8", VA = "0x11526E8", Slot = "5")]
		public sealed override Quantum.Prototypes.TargetFilterRaycast_Prototype Convert(EntityPrototypeConverter converter)
		{
			return null;
		}

		[Token(Token = "0x60008A5")]
		[Address(RVA = "0x1152834", Offset = "0x1152834", VA = "0x1152834")]
		public TargetFilterRaycast_Prototype()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000366")]
	[AttributeAttribute(Name = "PrototypeAttribute", RVA = "0xBC84E8", Offset = "0xBC84E8")]
	public class TargetLockOnTarget_Prototype : PrototypeAdapter<Quantum.Prototypes.TargetLockOnTarget_Prototype>
	{
		[Token(Token = "0x4000571")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[LocalReference]
		[HideInInspectorAttribute]
		public global::EntityPrototype LockOnTarget;

		[Token(Token = "0x60008A8")]
		[Address(RVA = "0x1152924", Offset = "0x1152924", VA = "0x1152924", Slot = "5")]
		public sealed override Quantum.Prototypes.TargetLockOnTarget_Prototype Convert(EntityPrototypeConverter converter)
		{
			return null;
		}

		[Token(Token = "0x60008A9")]
		[Address(RVA = "0x11529AC", Offset = "0x11529AC", VA = "0x11529AC")]
		public TargetLockOnTarget_Prototype()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000367")]
	[AttributeAttribute(Name = "PrototypeAttribute", RVA = "0xBC8548", Offset = "0xBC8548")]
	public class TaskChild_Prototype : PrototypeAdapter<Quantum.Prototypes.TaskChild_Prototype>
	{
		[Token(Token = "0x4000572")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[LocalReference]
		public global::EntityPrototype Parent;

		[Token(Token = "0x60008AA")]
		[Address(RVA = "0x11529F8", Offset = "0x11529F8", VA = "0x11529F8", Slot = "5")]
		public sealed override Quantum.Prototypes.TaskChild_Prototype Convert(EntityPrototypeConverter converter)
		{
			return null;
		}

		[Token(Token = "0x60008AB")]
		[Address(RVA = "0x1152A80", Offset = "0x1152A80", VA = "0x1152A80")]
		public TaskChild_Prototype()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000368")]
	[AttributeAttribute(Name = "PrototypeAttribute", RVA = "0xBC85A8", Offset = "0xBC85A8")]
	public class TileConnections_Prototype : PrototypeAdapter<Quantum.Prototypes.TileConnections_Prototype>
	{
		[Token(Token = "0x2000369")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBC8608", Offset = "0xBC8608")]
		private sealed class <>c__DisplayClass1_0
		{
			[Token(Token = "0x4000574")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public EntityPrototypeConverter converter;

			[Token(Token = "0x60008AE")]
			[Address(RVA = "0x1065D5C", Offset = "0x1065D5C", VA = "0x1065D5C")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x60008AF")]
			[Address(RVA = "0x1065D64", Offset = "0x1065D64", VA = "0x1065D64")]
			internal MapEntityId <Convert>b__0(global::EntityPrototype x)
			{
				return default(MapEntityId);
			}
		}

		[Token(Token = "0x4000573")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[LocalReference]
		[DynamicCollection]
		public global::EntityPrototype[] Connections;

		[Token(Token = "0x60008AC")]
		[Address(RVA = "0x1157088", Offset = "0x1157088", VA = "0x1157088", Slot = "5")]
		public sealed override Quantum.Prototypes.TileConnections_Prototype Convert(EntityPrototypeConverter converter)
		{
			return null;
		}

		[Token(Token = "0x60008AD")]
		[Address(RVA = "0x11571AC", Offset = "0x11571AC", VA = "0x11571AC")]
		public TileConnections_Prototype()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200036A")]
	[AttributeAttribute(Name = "PrototypeAttribute", RVA = "0xBC8618", Offset = "0xBC8618")]
	public class VelocityLimit_Prototype : PrototypeAdapter<Quantum.Prototypes.VelocityLimit_Prototype>
	{
		[Token(Token = "0x200036B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBC8678", Offset = "0xBC8678")]
		private sealed class <>c__DisplayClass5_0
		{
			[Token(Token = "0x400057A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public EntityPrototypeConverter converter;

			[Token(Token = "0x60008B2")]
			[Address(RVA = "0x106845C", Offset = "0x106845C", VA = "0x106845C")]
			public <>c__DisplayClass5_0()
			{
			}

			[Token(Token = "0x60008B3")]
			[Address(RVA = "0x1068464", Offset = "0x1068464", VA = "0x1068464")]
			internal MapEntityId <Convert>b__0(global::EntityPrototype x)
			{
				return default(MapEntityId);
			}
		}

		[Token(Token = "0x4000575")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public FP VelocityRatio;

		[Token(Token = "0x4000576")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public FP VelocityRatioAtCenter;

		[Token(Token = "0x4000577")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public VelocityLimitOnDestroy_Prototype OnDestroy;

		[Token(Token = "0x4000578")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public QBoolean ChangeSpellOwnership;

		[Token(Token = "0x4000579")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[DynamicCollection]
		[LocalReference]
		[HideInInspectorAttribute]
		public global::EntityPrototype[] Entities;

		[Token(Token = "0x60008B0")]
		[Address(RVA = "0x1133E60", Offset = "0x1133E60", VA = "0x1133E60", Slot = "5")]
		public sealed override Quantum.Prototypes.VelocityLimit_Prototype Convert(EntityPrototypeConverter converter)
		{
			return null;
		}

		[Token(Token = "0x60008B1")]
		[Address(RVA = "0x1133FA4", Offset = "0x1133FA4", VA = "0x1133FA4")]
		public VelocityLimit_Prototype()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200036C")]
	[AttributeAttribute(Name = "PrototypeAttribute", RVA = "0xBC8688", Offset = "0xBC8688")]
	public class WandSpells_Prototype : PrototypeAdapter<Quantum.Prototypes.WandSpells_Prototype>
	{
		[Token(Token = "0x400057B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[LocalReference]
		public global::EntityPrototype PrimarySpell;

		[Token(Token = "0x400057C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[LocalReference]
		public global::EntityPrototype SecondarySpell;

		[Token(Token = "0x60008B4")]
		[Address(RVA = "0x113BD28", Offset = "0x113BD28", VA = "0x113BD28", Slot = "5")]
		public sealed override Quantum.Prototypes.WandSpells_Prototype Convert(EntityPrototypeConverter converter)
		{
			return null;
		}

		[Token(Token = "0x60008B5")]
		[Address(RVA = "0x113BDC4", Offset = "0x113BDC4", VA = "0x113BDC4")]
		public WandSpells_Prototype()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200036D")]
	[AttributeAttribute(Name = "PrototypeAttribute", RVA = "0xBC86E8", Offset = "0xBC86E8")]
	public class PhysicsJoints3D_Prototype : PrototypeAdapter<Quantum.Prototypes.PhysicsJoints3D_Prototype>
	{
		[Token(Token = "0x200036E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBC8748", Offset = "0xBC8748")]
		private sealed class <>c__DisplayClass1_0
		{
			[Token(Token = "0x400057E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public EntityPrototypeConverter converter;

			[Token(Token = "0x60008B8")]
			[Address(RVA = "0x11E27F4", Offset = "0x11E27F4", VA = "0x11E27F4")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x60008B9")]
			[Address(RVA = "0x11E27FC", Offset = "0x11E27FC", VA = "0x11E27FC")]
			internal Quantum.Prototypes.Joint3D_Prototype <Convert>b__0(Joint3D_Prototype x)
			{
				return null;
			}
		}

		[Token(Token = "0x400057D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[DynamicCollection]
		public Joint3D_Prototype[] JointConfigs;

		[Token(Token = "0x60008B6")]
		[Address(RVA = "0xFD2490", Offset = "0xFD2490", VA = "0xFD2490", Slot = "5")]
		public sealed override Quantum.Prototypes.PhysicsJoints3D_Prototype Convert(EntityPrototypeConverter converter)
		{
			return null;
		}

		[Token(Token = "0x60008B7")]
		[Address(RVA = "0xFD25B4", Offset = "0xFD25B4", VA = "0xFD25B4")]
		public PhysicsJoints3D_Prototype()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200036F")]
	[AttributeAttribute(Name = "PrototypeAttribute", RVA = "0xBC8758", Offset = "0xBC8758")]
	public class Joint3D_Prototype : PrototypeAdapter<Quantum.Prototypes.Joint3D_Prototype>
	{
		[Token(Token = "0x400057F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "DrawIfAttribute", RVA = "0xBCF63C", Offset = "0xBCF63C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBCF63C", Offset = "0xBCF63C")]
		public bool StartDisabled;

		[Token(Token = "0x4000580")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
		[AttributeAttribute(Name = "DisplayNameAttribute", RVA = "0xBCF6A8", Offset = "0xBCF6A8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBCF6A8", Offset = "0xBCF6A8")]
		public JointType3D JointType;

		[Token(Token = "0x4000581")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "DrawIfAttribute", RVA = "0xBCF708", Offset = "0xBCF708")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBCF708", Offset = "0xBCF708")]
		public int UserTag;

		[Token(Token = "0x4000582")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "DrawIfAttribute", RVA = "0xBCF774", Offset = "0xBCF774")]
		[LocalReference]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBCF774", Offset = "0xBCF774")]
		public global::EntityPrototype ConnectedEntity;

		[Token(Token = "0x4000583")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBCF7F0", Offset = "0xBCF7F0")]
		[AttributeAttribute(Name = "DrawIfAttribute", RVA = "0xBCF7F0", Offset = "0xBCF7F0")]
		public FPVector3 ConnectedAnchor;

		[Token(Token = "0x4000584")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBCF85C", Offset = "0xBCF85C")]
		[AttributeAttribute(Name = "DrawIfAttribute", RVA = "0xBCF85C", Offset = "0xBCF85C")]
		public FPVector3 Anchor;

		[Token(Token = "0x4000585")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBCF8C8", Offset = "0xBCF8C8")]
		[AttributeAttribute(Name = "DrawIfAttribute", RVA = "0xBCF8C8", Offset = "0xBCF8C8")]
		public FPVector3 Axis;

		[Token(Token = "0x4000586")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBCF934", Offset = "0xBCF934")]
		[AttributeAttribute(Name = "DrawIfAttribute", RVA = "0xBCF934", Offset = "0xBCF934")]
		public FP Frequency;

		[Token(Token = "0x4000587")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBCF9A0", Offset = "0xBCF9A0")]
		[AttributeAttribute(Name = "DrawIfAttribute", RVA = "0xBCF9A0", Offset = "0xBCF9A0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBCF9A0", Offset = "0xBCF9A0")]
		public FP DampingRatio;

		[Token(Token = "0x4000588")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBCFA24", Offset = "0xBCFA24")]
		[AttributeAttribute(Name = "DrawIfAttribute", RVA = "0xBCFA24", Offset = "0xBCFA24")]
		[AttributeAttribute(Name = "DrawIfAttribute", RVA = "0xBCFA24", Offset = "0xBCFA24")]
		public bool AutoConfigureDistance;

		[Token(Token = "0x4000589")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "DrawIfAttribute", RVA = "0xBCFAC8", Offset = "0xBCFAC8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBCFAC8", Offset = "0xBCFAC8")]
		[AttributeAttribute(Name = "DrawIfAttribute", RVA = "0xBCFAC8", Offset = "0xBCFAC8")]
		public FP Distance;

		[Token(Token = "0x400058A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBCFB64", Offset = "0xBCFB64")]
		[AttributeAttribute(Name = "DrawIfAttribute", RVA = "0xBCFB64", Offset = "0xBCFB64")]
		[AttributeAttribute(Name = "DrawIfAttribute", RVA = "0xBCFB64", Offset = "0xBCFB64")]
		public FP MinDistance;

		[Token(Token = "0x400058B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBCFC00", Offset = "0xBCFC00")]
		[AttributeAttribute(Name = "DrawIfAttribute", RVA = "0xBCFC00", Offset = "0xBCFC00")]
		[AttributeAttribute(Name = "DrawIfAttribute", RVA = "0xBCFC00", Offset = "0xBCFC00")]
		public FP MaxDistance;

		[Token(Token = "0x400058C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "DrawIfAttribute", RVA = "0xBCFC9C", Offset = "0xBCFC9C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBCFC9C", Offset = "0xBCFC9C")]
		public bool UseAngleLimits;

		[Token(Token = "0x400058D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBCFD08", Offset = "0xBCFD08")]
		[AttributeAttribute(Name = "DrawIfAttribute", RVA = "0xBCFD08", Offset = "0xBCFD08")]
		[AttributeAttribute(Name = "DrawIfAttribute", RVA = "0xBCFD08", Offset = "0xBCFD08")]
		public FP LowerAngle;

		[Token(Token = "0x400058E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "DrawIfAttribute", RVA = "0xBCFDA4", Offset = "0xBCFDA4")]
		[AttributeAttribute(Name = "DrawIfAttribute", RVA = "0xBCFDA4", Offset = "0xBCFDA4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBCFDA4", Offset = "0xBCFDA4")]
		public FP UpperAngle;

		[Token(Token = "0x400058F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBCFE40", Offset = "0xBCFE40")]
		[AttributeAttribute(Name = "DrawIfAttribute", RVA = "0xBCFE40", Offset = "0xBCFE40")]
		public bool UseMotor;

		[Token(Token = "0x4000590")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBCFEAC", Offset = "0xBCFEAC")]
		[AttributeAttribute(Name = "DrawIfAttribute", RVA = "0xBCFEAC", Offset = "0xBCFEAC")]
		[AttributeAttribute(Name = "DrawIfAttribute", RVA = "0xBCFEAC", Offset = "0xBCFEAC")]
		public FP MotorSpeed;

		[Token(Token = "0x4000591")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[AttributeAttribute(Name = "DrawIfAttribute", RVA = "0xBCFF48", Offset = "0xBCFF48")]
		[AttributeAttribute(Name = "DrawIfAttribute", RVA = "0xBCFF48", Offset = "0xBCFF48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBCFF48", Offset = "0xBCFF48")]
		public NullableFP MaxMotorTorque;

		[Token(Token = "0x60008BA")]
		[Address(RVA = "0xF83040", Offset = "0xF83040", VA = "0xF83040", Slot = "5")]
		public sealed override Quantum.Prototypes.Joint3D_Prototype Convert(EntityPrototypeConverter converter)
		{
			return null;
		}

		[Token(Token = "0x60008BB")]
		[Address(RVA = "0xF83170", Offset = "0xF83170", VA = "0xF83170")]
		public Joint3D_Prototype()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000370")]
	[AttributeAttribute(Name = "PrototypeAttribute", RVA = "0xBC87B8", Offset = "0xBC87B8")]
	public class PhysicsJoints2D_Prototype : PrototypeAdapter<Quantum.Prototypes.PhysicsJoints2D_Prototype>
	{
		[Token(Token = "0x2000371")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBC8818", Offset = "0xBC8818")]
		private sealed class <>c__DisplayClass1_0
		{
			[Token(Token = "0x4000593")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public EntityPrototypeConverter converter;

			[Token(Token = "0x60008BE")]
			[Address(RVA = "0x11E27C4", Offset = "0x11E27C4", VA = "0x11E27C4")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x60008BF")]
			[Address(RVA = "0x11E27CC", Offset = "0x11E27CC", VA = "0x11E27CC")]
			internal Quantum.Prototypes.Joint2D_Prototype <Convert>b__0(Joint2D_Prototype x)
			{
				return null;
			}
		}

		[Token(Token = "0x4000592")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[DynamicCollection]
		public Joint2D_Prototype[] JointConfigs;

		[Token(Token = "0x60008BC")]
		[Address(RVA = "0xFD227C", Offset = "0xFD227C", VA = "0xFD227C", Slot = "5")]
		public sealed override Quantum.Prototypes.PhysicsJoints2D_Prototype Convert(EntityPrototypeConverter converter)
		{
			return null;
		}

		[Token(Token = "0x60008BD")]
		[Address(RVA = "0xFD23A0", Offset = "0xFD23A0", VA = "0xFD23A0")]
		public PhysicsJoints2D_Prototype()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000372")]
	[AttributeAttribute(Name = "PrototypeAttribute", RVA = "0xBC8828", Offset = "0xBC8828")]
	public class Joint2D_Prototype : PrototypeAdapter<Quantum.Prototypes.Joint2D_Prototype>
	{
		[Token(Token = "0x4000594")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBCFFF4", Offset = "0xBCFFF4")]
		[AttributeAttribute(Name = "DrawIfAttribute", RVA = "0xBCFFF4", Offset = "0xBCFFF4")]
		public bool StartDisabled;

		[Token(Token = "0x4000595")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBD0060", Offset = "0xBD0060")]
		[AttributeAttribute(Name = "DisplayNameAttribute", RVA = "0xBD0060", Offset = "0xBD0060")]
		public JointType JointType;

		[Token(Token = "0x4000596")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "DrawIfAttribute", RVA = "0xBD00C0", Offset = "0xBD00C0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBD00C0", Offset = "0xBD00C0")]
		public int UserTag;

		[Token(Token = "0x4000597")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "DrawIfAttribute", RVA = "0xBD012C", Offset = "0xBD012C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBD012C", Offset = "0xBD012C")]
		[LocalReference]
		public global::EntityPrototype ConnectedEntity;

		[Token(Token = "0x4000598")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "DrawIfAttribute", RVA = "0xBD01A8", Offset = "0xBD01A8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBD01A8", Offset = "0xBD01A8")]
		public FPVector2 ConnectedAnchor;

		[Token(Token = "0x4000599")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "DrawIfAttribute", RVA = "0xBD0214", Offset = "0xBD0214")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBD0214", Offset = "0xBD0214")]
		public FPVector2 Anchor;

		[Token(Token = "0x400059A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBD0280", Offset = "0xBD0280")]
		[AttributeAttribute(Name = "DrawIfAttribute", RVA = "0xBD0280", Offset = "0xBD0280")]
		public FP Frequency;

		[Token(Token = "0x400059B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "DrawIfAttribute", RVA = "0xBD02EC", Offset = "0xBD02EC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBD02EC", Offset = "0xBD02EC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBD02EC", Offset = "0xBD02EC")]
		public FP DampingRatio;

		[Token(Token = "0x400059C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "DrawIfAttribute", RVA = "0xBD0370", Offset = "0xBD0370")]
		[AttributeAttribute(Name = "DrawIfAttribute", RVA = "0xBD0370", Offset = "0xBD0370")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBD0370", Offset = "0xBD0370")]
		public bool AutoConfigureDistance;

		[Token(Token = "0x400059D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBD0414", Offset = "0xBD0414")]
		[AttributeAttribute(Name = "DrawIfAttribute", RVA = "0xBD0414", Offset = "0xBD0414")]
		[AttributeAttribute(Name = "DrawIfAttribute", RVA = "0xBD0414", Offset = "0xBD0414")]
		public FP Distance;

		[Token(Token = "0x400059E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "DrawIfAttribute", RVA = "0xBD04B0", Offset = "0xBD04B0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBD04B0", Offset = "0xBD04B0")]
		[AttributeAttribute(Name = "DrawIfAttribute", RVA = "0xBD04B0", Offset = "0xBD04B0")]
		public FP MinDistance;

		[Token(Token = "0x400059F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBD054C", Offset = "0xBD054C")]
		[AttributeAttribute(Name = "DrawIfAttribute", RVA = "0xBD054C", Offset = "0xBD054C")]
		[AttributeAttribute(Name = "DrawIfAttribute", RVA = "0xBD054C", Offset = "0xBD054C")]
		public FP MaxDistance;

		[Token(Token = "0x40005A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBD05E8", Offset = "0xBD05E8")]
		[AttributeAttribute(Name = "DrawIfAttribute", RVA = "0xBD05E8", Offset = "0xBD05E8")]
		public bool UseAngleLimits;

		[Token(Token = "0x40005A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBD0654", Offset = "0xBD0654")]
		[AttributeAttribute(Name = "DrawIfAttribute", RVA = "0xBD0654", Offset = "0xBD0654")]
		[AttributeAttribute(Name = "DrawIfAttribute", RVA = "0xBD0654", Offset = "0xBD0654")]
		[Degrees]
		public FP LowerAngle;

		[Token(Token = "0x40005A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "DrawIfAttribute", RVA = "0xBD0700", Offset = "0xBD0700")]
		[Degrees]
		[AttributeAttribute(Name = "DrawIfAttribute", RVA = "0xBD0700", Offset = "0xBD0700")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBD0700", Offset = "0xBD0700")]
		public FP UpperAngle;

		[Token(Token = "0x40005A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "DrawIfAttribute", RVA = "0xBD07AC", Offset = "0xBD07AC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBD07AC", Offset = "0xBD07AC")]
		public bool UseMotor;

		[Token(Token = "0x40005A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[Degrees]
		[AttributeAttribute(Name = "DrawIfAttribute", RVA = "0xBD0818", Offset = "0xBD0818")]
		[AttributeAttribute(Name = "DrawIfAttribute", RVA = "0xBD0818", Offset = "0xBD0818")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBD0818", Offset = "0xBD0818")]
		public FP MotorSpeed;

		[Token(Token = "0x40005A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "DrawIfAttribute", RVA = "0xBD08C4", Offset = "0xBD08C4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBD08C4", Offset = "0xBD08C4")]
		[AttributeAttribute(Name = "DrawIfAttribute", RVA = "0xBD08C4", Offset = "0xBD08C4")]
		public NullableFP MaxMotorTorque;

		[Token(Token = "0x60008C0")]
		[Address(RVA = "0xF82EE4", Offset = "0xF82EE4", VA = "0xF82EE4", Slot = "5")]
		public sealed override Quantum.Prototypes.Joint2D_Prototype Convert(EntityPrototypeConverter converter)
		{
			return null;
		}

		[Token(Token = "0x60008C1")]
		[Address(RVA = "0xF82FF4", Offset = "0xF82FF4", VA = "0xF82FF4")]
		public Joint2D_Prototype()
		{
		}
	}
}
namespace Cortopia.ExecuteFunctions
{
	[Token(Token = "0x2000373")]
	public struct GetLeaderboardPlayersResult
	{
		[Token(Token = "0x40005A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public LeaderboardPlayerStats[] LeaderboardPlayer;
	}
}
namespace Cortopia.CortopiaPlayFabModels
{
	[Token(Token = "0x2000374")]
	public enum AzureRegion
	{
		[Token(Token = "0x40005A8")]
		AustraliaEast,
		[Token(Token = "0x40005A9")]
		AustraliaSoutheast,
		[Token(Token = "0x40005AA")]
		BrazilSouth,
		[Token(Token = "0x40005AB")]
		CentralUs,
		[Token(Token = "0x40005AC")]
		EastAsia,
		[Token(Token = "0x40005AD")]
		EastUs,
		[Token(Token = "0x40005AE")]
		EastUs2,
		[Token(Token = "0x40005AF")]
		JapanEast,
		[Token(Token = "0x40005B0")]
		JapanWest,
		[Token(Token = "0x40005B1")]
		NorthCentralUs,
		[Token(Token = "0x40005B2")]
		NorthEurope,
		[Token(Token = "0x40005B3")]
		SouthCentralUs,
		[Token(Token = "0x40005B4")]
		SoutheastAsia,
		[Token(Token = "0x40005B5")]
		WestEurope,
		[Token(Token = "0x40005B6")]
		WestUs,
		[Token(Token = "0x40005B7")]
		ChinaEast2,
		[Token(Token = "0x40005B8")]
		ChinaNorth2
	}
	[Token(Token = "0x2000375")]
	public enum CancelJoinFriendResult
	{
		[Token(Token = "0x40005BA")]
		ApplicationRejected,
		[Token(Token = "0x40005BB")]
		InvitationCanceled,
		[Token(Token = "0x40005BC")]
		NoOpenOpportunity
	}
	[Token(Token = "0x2000376")]
	public enum ChallengeArchetype
	{
		[Token(Token = "0x40005BE")]
		KillXAsYClass,
		[Token(Token = "0x40005BF")]
		WinXGamesAsYClass,
		[Token(Token = "0x40005C0")]
		DealXDamageAsYClass,
		[Token(Token = "0x40005C1")]
		MitigateXDamageWithYSpell,
		[Token(Token = "0x40005C2")]
		GetXKillsWithoutTeleportAsY,
		[Token(Token = "0x40005C3")]
		HealXAsY,
		[Token(Token = "0x40005C4")]
		ReduceXCooldownWithYSpell,
		[Token(Token = "0x40005C5")]
		DealXDamageWithYSpell,
		[Token(Token = "0x40005C6")]
		KillXPlayersWithYSpell,
		[Token(Token = "0x40005C7")]
		TeleportXTimesInOneGameYTimes,
		[Token(Token = "0x40005C8")]
		WinXGames,
		[Token(Token = "0x40005C9")]
		MarkXEnemiesWithYSpell,
		[Token(Token = "0x40005CA")]
		XTimesCastYSpell,
		[Token(Token = "0x40005CB")]
		WinWithMoreHealingThanDamage,
		[Token(Token = "0x40005CC")]
		PlayXGames,
		[Token(Token = "0x40005CD")]
		BlockXDamageWithYSpell,
		[Token(Token = "0x40005CE")]
		HealXDamageWithYSpell,
		[Token(Token = "0x40005CF")]
		DieXTimes,
		[Token(Token = "0x40005D0")]
		ShareLanternWithAllyForXSeconds,
		[Token(Token = "0x40005D1")]
		CancelTeleportationXTimesWithYSpell,
		[Token(Token = "0x40005D2")]
		HitXTimesWithOneCastWithYSpellZTimes,
		[Token(Token = "0x40005D3")]
		WinXGamesWithYTitle,
		[Token(Token = "0x40005D4")]
		ReachLevelX,
		[Token(Token = "0x40005D5")]
		GetXKillsInSingleMatch,
		[Token(Token = "0x40005D6")]
		DealDamageWithXSpellsInSingleMatch,
		[Token(Token = "0x40005D7")]
		HealXWithYSpellsInSingleMatch,
		[Token(Token = "0x40005D8")]
		AffectXAmountOfSpellsWithSingleY,
		[Token(Token = "0x40005D9")]
		RestoreXAmountOfHealthWithSingleY,
		[Token(Token = "0x40005DA")]
		ArmOrDisarmTheOmegaYTimes
	}
	[Token(Token = "0x2000377")]
	public class ChallengeCustomData
	{
		[Token(Token = "0x40005DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int XPRequirement;

		[Token(Token = "0x40005DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string RewardID;

		[Token(Token = "0x40005DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ChallengeArchetype Archetype;

		[Token(Token = "0x40005DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<string> ArchetypeParameters;

		[Token(Token = "0x40005DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string RequiredChallenge;

		[Token(Token = "0x60008C2")]
		[Address(RVA = "0x1335F34", Offset = "0x1335F34", VA = "0x1335F34")]
		public ChallengeCustomData()
		{
		}
	}
	[Token(Token = "0x2000378")]
	public struct ChallengeData
	{
		[Token(Token = "0x40005E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string ID;

		[Token(Token = "0x40005E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int Progress;

		[Token(Token = "0x40005E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int Goal;

		[Token(Token = "0x40005E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Unlockable Reward;

		[Token(Token = "0x40005E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool Active;
	}
	[Token(Token = "0x2000379")]
	public struct ChallengeUpdate
	{
		[Token(Token = "0x40005E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string ID;

		[Token(Token = "0x40005E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int AddedProgress;

		[Token(Token = "0x40005E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public bool JustCompleted;

		[Token(Token = "0x40005E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD")]
		public bool BecameActive;
	}
	[Token(Token = "0x200037A")]
	public struct Character
	{
		[Token(Token = "0x40005E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string CharacterId;

		[Token(Token = "0x40005EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public long[] LoadoutSpells;
	}
	[Token(Token = "0x200037B")]
	public struct CreateCustomGameArgument
	{
		[Token(Token = "0x40005EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string Region;
	}
	[Token(Token = "0x200037C")]
	public enum CreateCustomGameResult
	{
		[Token(Token = "0x40005ED")]
		Created,
		[Token(Token = "0x40005EE")]
		AlreadyInCustomGame,
		[Token(Token = "0x40005EF")]
		InPartyAsNonLeader
	}
	[Token(Token = "0x200037D")]
	public static class DataConstants
	{
		[Token(Token = "0x200037E")]
		public static class ItemClassTypes
		{
			[Token(Token = "0x400060F")]
			public const string Challenge = "Challenge";

			[Token(Token = "0x4000610")]
			public const string PlayerClass = "PlayerClass";

			[Token(Token = "0x4000611")]
			public const string Spell = "Spell";

			[Token(Token = "0x4000612")]
			public const string Border = "Border";

			[Token(Token = "0x4000613")]
			public const string Title = "Title";
		}

		[Token(Token = "0x200037F")]
		public static class Sabotage8Constants
		{
			[Token(Token = "0x4000614")]
			private const int ClassSelectionTime = 30;

			[Token(Token = "0x4000615")]
			private const int PostClassSelectionTime = 5;

			[Token(Token = "0x4000616")]
			private const int SpellSelectionTime = 30;

			[Token(Token = "0x4000617")]
			private const int GameRoundTime = 120;

			[Token(Token = "0x4000618")]
			private const int CaptureTime = 45;

			[Token(Token = "0x4000619")]
			private const int PostRoundTime = 5;

			[Token(Token = "0x400061A")]
			private const int PostMatchTime = 5;

			[Token(Token = "0x400061B")]
			private const int PostMatchVotingTime = 45;

			[Token(Token = "0x400061C")]
			private const int Margin = 15;

			[Token(Token = "0x400061D")]
			public const int MaxRounds = 8;

			[Token(Token = "0x400061E")]
			public const int MaxPlayersPerTeam = 3;

			[Token(Token = "0x400061F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly TimeSpan Round0MaxLength;

			[Token(Token = "0x4000620")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static readonly TimeSpan Round4MaxLength;

			[Token(Token = "0x4000621")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static readonly TimeSpan RoundMaxLength;

			[Token(Token = "0x4000622")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static readonly TimeSpan MatchMaxLength;

			[Token(Token = "0x4000623")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static readonly TimeSpan PostMatchTimeout;
		}

		[Token(Token = "0x2000380")]
		public static class DeathMatch25Constants
		{
			[Token(Token = "0x4000624")]
			private const int ClassSelectionTime = 30;

			[Token(Token = "0x4000625")]
			private const int PostClassSelectionTime = 5;

			[Token(Token = "0x4000626")]
			private const int SpellSelectionTime = 30;

			[Token(Token = "0x4000627")]
			private const int GameRoundTime = 720;

			[Token(Token = "0x4000628")]
			private const int PostRoundTime = 5;

			[Token(Token = "0x4000629")]
			private const int PostMatchTime = 3;

			[Token(Token = "0x400062A")]
			private const int PostMatchVotingTime = 45;

			[Token(Token = "0x400062B")]
			private const int Margin = 15;

			[Token(Token = "0x400062C")]
			public const int MaxRounds = 1;

			[Token(Token = "0x400062D")]
			public const int MaxPlayersPerTeam = 3;

			[Token(Token = "0x400062E")]
			public const int MaxKillsPerTeam = 25;

			[Token(Token = "0x400062F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly TimeSpan Round0MaxLength;

			[Token(Token = "0x4000630")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static readonly TimeSpan RoundMaxLength;

			[Token(Token = "0x4000631")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static readonly TimeSpan MatchMaxLength;

			[Token(Token = "0x4000632")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static readonly TimeSpan PostMatchTimeout;
		}

		[Token(Token = "0x2000381")]
		public static class PlayerEntityData
		{
			[Token(Token = "0x4000633")]
			public const string MMR = "MMR";

			[Token(Token = "0x4000634")]
			public const string XP = "XP";

			[Token(Token = "0x4000635")]
			public const string SeasonalXP = "SeasonalXP";

			[Token(Token = "0x4000636")]
			public const string Credit = "Credit";
		}

		[Token(Token = "0x2000382")]
		public static class TitleData
		{
			[Token(Token = "0x4000637")]
			public const string NumberOfLevels = "NumberOfLevels";

			[Token(Token = "0x4000638")]
			public const string MatchMakingSeconds = "MatchMakingSeconds";

			[Token(Token = "0x4000639")]
			public const string MatchMakingDisplaySeconds = "MatchMakingDisplaySeconds";

			[Token(Token = "0x400063A")]
			public const string MatchMakingLatencyMax = "MatchMakingLatencyMax";

			[Token(Token = "0x400063B")]
			public const string MatchMakingLatencyWeight = "MatchMakingLatencyWeight";

			[Token(Token = "0x400063C")]
			public const string MatchMakingPlayerMMRWeight = "MatchMakingPlayerMMRWeight";

			[Token(Token = "0x400063D")]
			public const string MatchMakingTeamMMRWeight = "MatchMakingTeamMMRWeight";

			[Token(Token = "0x400063E")]
			public const string MatchMakingLevelLimitAt0 = "MatchMakingLevelLimitAt0";

			[Token(Token = "0x400063F")]
			public const string MatchMakingLevelLimitAtEnd = "MatchMakingLevelLimitAtEnd";

			[Token(Token = "0x4000640")]
			public const string MatchMakingLevelLimitEndLevel = "MatchMakingLevelLimitEndLevel";

			[Token(Token = "0x4000641")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static string MMRUpdateKValue;

			[Token(Token = "0x4000642")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static string MMRUpdateKValuePerDeath;

			[Token(Token = "0x4000643")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static string XPPerMatch;

			[Token(Token = "0x4000644")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static string XPPerRound;

			[Token(Token = "0x4000645")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static string XPPerDeath;

			[Token(Token = "0x4000646")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public static string RankLevels;
		}

		[Token(Token = "0x2000383")]
		public static class InternalUserData
		{
			[Token(Token = "0x4000647")]
			public const string LastReturnedMatch = "LastReturnedMatch";

			[Token(Token = "0x4000648")]
			public const string LastEndedRoundMatch = "LastEndedRoundMatch";

			[Token(Token = "0x4000649")]
			public const string RoundsLost = "RoundsLost";

			[Token(Token = "0x400064A")]
			public const string RoundsWon = "RoundsWon";

			[Token(Token = "0x400064B")]
			public const string RegionLatencies = "RegionLatencies";

			[Token(Token = "0x400064C")]
			public const string BlockedUserPlayFabIDs = "BlockedUserPlayFabIDs";

			[Token(Token = "0x400064D")]
			public const string SelectedBorder = "SelectedBorder";

			[Token(Token = "0x400064E")]
			public const string SelectedTitle = "SelectedTitle";
		}

		[Token(Token = "0x2000384")]
		public static class InventoryCustomData
		{
			[Token(Token = "0x400064F")]
			public const string Completed = "Completed";

			[Token(Token = "0x4000650")]
			public const string CompletedValue = "true";

			[Token(Token = "0x4000651")]
			public const string Progression = "Progression";
		}

		[Token(Token = "0x2000385")]
		public static class UserData
		{
			[Token(Token = "0x4000652")]
			public const string HasCompletedTutorial = "HasCompletedTutorial";
		}

		[Token(Token = "0x2000386")]
		public static class MatchMakingData
		{
			[Token(Token = "0x4000653")]
			public const int NumberOfGameModes = 2;

			[Token(Token = "0x4000654")]
			public const int MaxPlayersWaiting = 12;

			[Token(Token = "0x4000655")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly TimeSpan InstanceWatchdogTimeOut;
		}

		[Token(Token = "0x2000387")]
		public static class Tags
		{
			[Token(Token = "0x4000656")]
			public const string NoTag = "NoTag";

			[Token(Token = "0x4000657")]
			public const string Favorite = "Favorite";

			[Token(Token = "0x4000658")]
			public const string FriendRequestSent = "FriendRequestSent";

			[Token(Token = "0x4000659")]
			public const string FriendRequestReceived = "FriendRequestReceived";

			[Token(Token = "0x400065A")]
			public const string SteamPlatformFriend = "SteamPlatformFriend";
		}

		[Token(Token = "0x40005F0")]
		public const int MaxLevel = 200;

		[Token(Token = "0x40005F1")]
		public const int DefaultMMR = 1200;

		[Token(Token = "0x40005F2")]
		public const int CustomGameMaxMemberCount = 6;

		[Token(Token = "0x40005F3")]
		public const int PartyMaxMemberCount = 3;

		[Token(Token = "0x40005F4")]
		public const int LoadoutSpellCount = 6;

		[Token(Token = "0x40005F5")]
		public const int FailedToJoinMatchHistoryCount = 2;

		[Token(Token = "0x40005F6")]
		public const int VerifyOrchestrationEventMaxSeconds = 5;

		[Token(Token = "0x40005F7")]
		public const int VerifyOrchestrationTerminationMaxSeconds = 10;

		[Token(Token = "0x40005F8")]
		public const int VerifyLeaveMatchMaxRetries = 10;

		[Token(Token = "0x40005F9")]
		public const int VerifyOperationMaxSeconds = 10;

		[Token(Token = "0x40005FA")]
		public const int EntityLockMaxRetries = 100;

		[Token(Token = "0x40005FB")]
		public const string GroupRoomPrefix = "group";

		[Token(Token = "0x40005FC")]
		public const string GroupEntityType = "group";

		[Token(Token = "0x40005FD")]
		public const string TitlePlayerAccount = "title_player_account";

		[Token(Token = "0x40005FE")]
		public const string MasterPlayerAccount = "master_player_account";

		[Token(Token = "0x40005FF")]
		public const int MaxMatchHistoryCount = 18;

		[Token(Token = "0x4000600")]
		public const string AdminRoleId = "admins";

		[Token(Token = "0x4000601")]
		public const int FriendCodeMinDigits = 4;

		[Token(Token = "0x4000602")]
		public const int FriendCodeMaxDigits = 8;

		[Token(Token = "0x4000603")]
		public const int FriendCodeGenerationRetries = 2;

		[Token(Token = "0x4000604")]
		public const string Default = "Default";

		[Token(Token = "0x4000605")]
		public const string NoTitle = "NoTitle";

		[Token(Token = "0x4000606")]
		public const string NoBorder = "NoBorder";

		[Token(Token = "0x4000607")]
		public const string SteamAvatarUrlPrefix = "steam:";

		[Token(Token = "0x4000608")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly TimeSpan MatchHistoryLength;

		[Token(Token = "0x4000609")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static readonly int CheckOperationsFirstDelayMs;

		[Token(Token = "0x400060A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public static readonly float CheckOperationsFallback;

		[Token(Token = "0x400060B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static readonly TimeSpan UserFocusLostTimeout;

		[Token(Token = "0x400060C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static readonly TimeSpan UserIsOnlineTimeout;

		[Token(Token = "0x400060D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static readonly TimeSpan UserLeaveMatchTimeout;

		[Token(Token = "0x400060E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static readonly TimeSpan PlayerStatusInstanceWatchdogTimeOut;
	}
	[Token(Token = "0x2000388")]
	public class EndOfRoundArgument
	{
		[Token(Token = "0x400065B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool EndOfMatch;

		[Token(Token = "0x400065C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string RoomName;

		[Token(Token = "0x400065D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int Round;

		[Token(Token = "0x400065E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool Won;

		[Token(Token = "0x400065F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public MatchStats Stats;

		[Token(Token = "0x60008C8")]
		[Address(RVA = "0x10442C8", Offset = "0x10442C8", VA = "0x10442C8")]
		public EndOfRoundArgument()
		{
		}
	}
	[Token(Token = "0x2000389")]
	public struct FriendCodeResult
	{
		[Token(Token = "0x4000660")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int? ExistingCode;
	}
	[Token(Token = "0x200038A")]
	public enum FriendOpportunity
	{
		[Token(Token = "0x4000662")]
		PlayerRequested,
		[Token(Token = "0x4000663")]
		OtherRequested,
		[Token(Token = "0x4000664")]
		CanBefriend,
		[Token(Token = "0x4000665")]
		IsBlocked
	}
	[Token(Token = "0x200038B")]
	public struct FriendStatus
	{
		[Token(Token = "0x4000666")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string EntityId;

		[Token(Token = "0x4000667")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string DisplayName;

		[Token(Token = "0x4000668")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public JoinGroupOpportunity? JoinGroupOpportunity;

		[Token(Token = "0x4000669")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public bool IsLeaderOfPlayersGroup;

		[Token(Token = "0x400066A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public GroupType? SameGroupType;

		[Token(Token = "0x400066B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public bool IsOnline;

		[Token(Token = "0x400066C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public OnlineStatus OnlineStatus;

		[Token(Token = "0x400066D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public bool IsPlaying;

		[Token(Token = "0x400066E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x85")]
		public bool IsFavorite;

		[Token(Token = "0x400066F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public FriendOpportunity? FriendOpportunity;

		[Token(Token = "0x4000670")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public int Level;

		[Token(Token = "0x4000671")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public string AvatarUrl;

		[Token(Token = "0x4000672")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public bool IsInPlayersMatch;
	}
	[Token(Token = "0x200038C")]
	public enum FriendsFilter
	{
		[Token(Token = "0x4000674")]
		Friends,
		[Token(Token = "0x4000675")]
		Favorites,
		[Token(Token = "0x4000676")]
		History,
		[Token(Token = "0x4000677")]
		Invites,
		[Token(Token = "0x4000678")]
		Blocked
	}
	[Token(Token = "0x200038D")]
	public struct FriendsPageArgument
	{
		[Token(Token = "0x4000679")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public FriendsFilter Filter;

		[Token(Token = "0x400067A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int StartIndex;

		[Token(Token = "0x400067B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int Count;
	}
	[Token(Token = "0x200038E")]
	public struct GetFriendsStatusResult
	{
		[Token(Token = "0x400067C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string PlayerEntityId;

		[Token(Token = "0x400067D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public FriendStatus[] Friends;

		[Token(Token = "0x400067E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int TotalCount;
	}
	[Token(Token = "0x200038F")]
	public struct GetChallengeResult
	{
		[Token(Token = "0x400067F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ChallengeData[] Challenges;
	}
	[Token(Token = "0x2000390")]
	public struct GetInventoryResult
	{
		[Token(Token = "0x4000680")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public PlayerClass[] Classes;

		[Token(Token = "0x4000681")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public long[] SpellIds;

		[Token(Token = "0x4000682")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string[] BorderIds;

		[Token(Token = "0x4000683")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string[] TitleIds;
	}
	[Token(Token = "0x2000391")]
	public class GetMatchRequest
	{
		[Token(Token = "0x4000684")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public MatchType MatchType;

		[Token(Token = "0x4000685")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string AppVersion;

		[Token(Token = "0x60008C9")]
		[Address(RVA = "0xFA79FC", Offset = "0xFA79FC", VA = "0xFA79FC")]
		public GetMatchRequest()
		{
		}
	}
	[Token(Token = "0x2000392")]
	public class GetMatchResult
	{
		[Token(Token = "0x4000686")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool IsRanked;

		[Token(Token = "0x4000687")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PhotonRoom Room;

		[Token(Token = "0x4000688")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int Team;

		[Token(Token = "0x4000689")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int LevelIndex;

		[Token(Token = "0x400068A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int GameModeIndex;

		[Token(Token = "0x400068B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public int GameSeed;

		[Token(Token = "0x400068C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int TotalNumberOfPlayers;

		[Token(Token = "0x400068D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool RequireExistingMatch;

		[Token(Token = "0x60008CA")]
		[Address(RVA = "0xFA7A04", Offset = "0xFA7A04", VA = "0xFA7A04")]
		public GetMatchResult()
		{
		}
	}
	[Token(Token = "0x2000393")]
	public struct GetMatchUsersStatusResult
	{
		[Token(Token = "0x400068E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string PlayerDisplayName;

		[Token(Token = "0x400068F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int PlayerLevel;

		[Token(Token = "0x4000690")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public bool IsMemberOfGroup;

		[Token(Token = "0x4000691")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public UserStatus[] OtherMatchUsers;
	}
	[Token(Token = "0x2000394")]
	public struct GetOperationsFinishedRequest
	{
		[Token(Token = "0x4000692")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string[] OperationInstanceIds;
	}
	[Token(Token = "0x2000395")]
	public struct GetOperationsFinishedResult
	{
		[Token(Token = "0x4000693")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Dictionary<string, bool> OperationStatuses;
	}
	[Token(Token = "0x2000396")]
	public struct GetOwnGroupStatusResult
	{
		[Token(Token = "0x4000694")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public OwnGroupStatus? OwnGroupStatus;

		[Token(Token = "0x4000695")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public string[] PendingInvitationPlayFabIds;

		[Token(Token = "0x4000696")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public int MMR;

		[Token(Token = "0x4000697")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float Level;

		[Token(Token = "0x4000698")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public int XP;

		[Token(Token = "0x4000699")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xBD0960", Offset = "0xBD0960")]
		public bool IsMatchMaking;

		[Token(Token = "0x400069A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public MatchStatus MatchStatus;

		[Token(Token = "0x400069B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public MatchInfo? MatchInfo;
	}
	[Token(Token = "0x2000397")]
	public struct GetPlayersInfoResult
	{
		[Token(Token = "0x400069C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public PlayerInfo[] Players;
	}
	[Token(Token = "0x2000398")]
	public struct GetSteamPlatformFriendsResult
	{
		[Token(Token = "0x400069D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string[] SteamPlatformFriends;
	}
	[Token(Token = "0x2000399")]
	public struct GroupDescription
	{
		[Token(Token = "0x400069E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string Id;

		[Token(Token = "0x400069F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public GroupType GroupType;

		[Token(Token = "0x40006A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int TotalSeats;

		[Token(Token = "0x40006A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnlineMatch Match;
	}
	[Token(Token = "0x200039A")]
	public struct GroupMember
	{
		[Token(Token = "0x40006A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string EntityId;

		[Token(Token = "0x40006A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string DisplayName;

		[Token(Token = "0x40006A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool IsLeaderOfPlayersGroup;

		[Token(Token = "0x40006A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public bool IsPlaying;

		[Token(Token = "0x40006A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int Level;

		[Token(Token = "0x40006A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string AvatarUrl;

		[Token(Token = "0x40006A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FriendOpportunity? FriendOpportunity;

		[Token(Token = "0x40006A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool IsFavorite;
	}
	[Token(Token = "0x200039B")]
	public struct GroupOpportunity
	{
		[Token(Token = "0x40006AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public GroupDescription GroupDescription;

		[Token(Token = "0x40006AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int TakenSeats;
	}
	[Token(Token = "0x200039C")]
	public enum GroupType
	{
		[Token(Token = "0x40006AD")]
		Party,
		[Token(Token = "0x40006AE")]
		CustomGame
	}
	[Token(Token = "0x200039D")]
	public struct InviteFriendArgument
	{
		[Token(Token = "0x40006AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string PartyVoipRegion;
	}
	[Token(Token = "0x200039E")]
	public enum JoinFriendResult
	{
		[Token(Token = "0x40006B1")]
		Applied,
		[Token(Token = "0x40006B2")]
		InvitationAccepted,
		[Token(Token = "0x40006B3")]
		AlreadyMember,
		[Token(Token = "0x40006B4")]
		NoFreeSeats,
		[Token(Token = "0x40006B5")]
		FriendNotInGroup,
		[Token(Token = "0x40006B6")]
		DifferentAppVersions,
		[Token(Token = "0x40006B7")]
		JoinedMatch
	}
	[Token(Token = "0x200039F")]
	public struct JoinGroupOpportunity
	{
		[Token(Token = "0x40006B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public JoinRequest FriendJoinPlayer;

		[Token(Token = "0x40006B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public JoinRequest PlayerJoinFriend;

		[Token(Token = "0x40006BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public GroupOpportunity? FriendsGroup;

		[Token(Token = "0x40006BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public int TeamMembers;
	}
	[Token(Token = "0x20003A0")]
	public enum JoinRequest
	{
		[Token(Token = "0x40006BD")]
		CannotJoin,
		[Token(Token = "0x40006BE")]
		CouldJoin,
		[Token(Token = "0x40006BF")]
		WantsToJoin,
		[Token(Token = "0x40006C0")]
		IsInvited
	}
	[Token(Token = "0x20003A1")]
	public struct LeaderboardPlayerStats
	{
		[Token(Token = "0x40006C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int Index;

		[Token(Token = "0x40006C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string DisplayName;

		[Token(Token = "0x40006C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string AvatarUrl;

		[Token(Token = "0x40006C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int WonRounds;

		[Token(Token = "0x40006C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int Level;
	}
	[Token(Token = "0x20003A2")]
	[AttributeAttribute(Name = "JsonObjectAttribute", RVA = "0xBC8888", Offset = "0xBC8888")]
	public struct MatchInfo
	{
		[Token(Token = "0x40006C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string Id;

		[Token(Token = "0x40006C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public bool IsRanked;

		[Token(Token = "0x40006C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public PhotonRoom Room;

		[Token(Token = "0x40006C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int Team;

		[Token(Token = "0x40006CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int LevelIndex;

		[Token(Token = "0x40006CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int GameModeIndex;

		[Token(Token = "0x40006CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int GameSeed;

		[Token(Token = "0x40006CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string AppVersion;

		[Token(Token = "0x40006CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int TotalNumberOfPlayers;

		[Token(Token = "0x40006CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool RequireExistingMatch;
	}
	[Token(Token = "0x20003A3")]
	public struct MatchPlayedStats
	{
		[Token(Token = "0x40006D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int MatchesPlayed;

		[Token(Token = "0x40006D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int MatchesWon;

		[Token(Token = "0x40006D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int MatchesLost;
	}
	[Token(Token = "0x20003A4")]
	public class MatchStats
	{
		[Token(Token = "0x40006D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string RoomName;

		[Token(Token = "0x40006D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PlayerMatchStats[] PlayerStats;

		[Token(Token = "0x60008CB")]
		[Address(RVA = "0x1013E64", Offset = "0x1013E64", VA = "0x1013E64")]
		public MatchStats()
		{
		}
	}
	[Token(Token = "0x20003A5")]
	public enum MatchStatus
	{
		[Token(Token = "0x40006D6")]
		None,
		[Token(Token = "0x40006D7")]
		Matchmaking,
		[Token(Token = "0x40006D8")]
		RankedMatch,
		[Token(Token = "0x40006D9")]
		CustomGame
	}
	[Token(Token = "0x20003A6")]
	public static class MatchStatusEnumExtensions
	{
		[Token(Token = "0x60008CC")]
		[Address(RVA = "0x10142F4", Offset = "0x10142F4", VA = "0x10142F4")]
		public static bool IsPLaying(this MatchStatus matchStatus)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20003A7")]
	public enum MatchType
	{
		[Token(Token = "0x40006DB")]
		RankedMatch,
		[Token(Token = "0x40006DC")]
		CustomGame,
		[Token(Token = "0x40006DD")]
		AnyMatch
	}
	[Token(Token = "0x20003A8")]
	public struct OnlineMatch
	{
		[Token(Token = "0x40006DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool IsPlaying;

		[Token(Token = "0x40006DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public PhotonRoom? PhotonRoom;

		[Token(Token = "0x40006E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int MatchIndex;
	}
	[Token(Token = "0x20003A9")]
	public enum OnlineStatus
	{
		[Token(Token = "0x40006E2")]
		Offline,
		[Token(Token = "0x40006E3")]
		DifferentVersion,
		[Token(Token = "0x40006E4")]
		Online
	}
	[Token(Token = "0x20003AA")]
	public struct OperationStartedResult
	{
		[Token(Token = "0x40006E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string InstanceId;
	}
	[Token(Token = "0x20003AB")]
	public struct OwnGroupStatus
	{
		[Token(Token = "0x40006E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public GroupDescription GroupDescription;

		[Token(Token = "0x40006E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GroupMember[] OtherGroupMembers;

		[Token(Token = "0x40006E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool IsLeader;
	}
	[Token(Token = "0x20003AC")]
	[AttributeAttribute(Name = "JsonConverterAttribute", RVA = "0xBC88C8", Offset = "0xBC88C8")]
	public enum PhotonRegion
	{
		[Token(Token = "0x40006EA")]
		asia,
		[Token(Token = "0x40006EB")]
		au,
		[Token(Token = "0x40006EC")]
		cae,
		[Token(Token = "0x40006ED")]
		cn,
		[Token(Token = "0x40006EE")]
		eu,
		[Token(Token = "0x40006EF")]
		@in,
		[Token(Token = "0x40006F0")]
		jp,
		[Token(Token = "0x40006F1")]
		ru,
		[Token(Token = "0x40006F2")]
		rue,
		[Token(Token = "0x40006F3")]
		za,
		[Token(Token = "0x40006F4")]
		sa,
		[Token(Token = "0x40006F5")]
		kr,
		[Token(Token = "0x40006F6")]
		us,
		[Token(Token = "0x40006F7")]
		usw
	}
	[Token(Token = "0x20003AD")]
	public struct PhotonRoom
	{
		[Token(Token = "0x40006F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string RoomName;

		[Token(Token = "0x40006F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string Region;
	}
	[Token(Token = "0x20003AE")]
	public struct PlayerClass
	{
		[Token(Token = "0x40006FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public long ClassId;

		[Token(Token = "0x40006FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Character[] Characters;
	}
	[Token(Token = "0x20003AF")]
	public struct PlayerClassMatchStats
	{
		[Token(Token = "0x40006FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public long ClassAssetGuid;

		[Token(Token = "0x40006FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public PlayerClassStats Stats;

		[Token(Token = "0x40006FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public SpellStats[] Spells;
	}
	[Token(Token = "0x20003B0")]
	public struct PlayerClassStats
	{
		[Token(Token = "0x40006FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int ArmBomb;

		[Token(Token = "0x4000700")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int Assists;

		[Token(Token = "0x4000701")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public double DamageDone;

		[Token(Token = "0x4000702")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public double DamageTaken;

		[Token(Token = "0x4000703")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int Deaths;

		[Token(Token = "0x4000704")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int SpawnablesDestroys;

		[Token(Token = "0x4000705")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int DisarmBomb;

		[Token(Token = "0x4000706")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public double HealingDone;

		[Token(Token = "0x4000707")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public double MaxDistance;

		[Token(Token = "0x4000708")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int Kills;

		[Token(Token = "0x4000709")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public int LostRounds;

		[Token(Token = "0x400070A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int MaxKillsWithoutTeleports;

		[Token(Token = "0x400070B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public int Teleports;

		[Token(Token = "0x400070C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public double ShareTileTime;

		[Token(Token = "0x400070D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public int WinRounds;

		[Token(Token = "0x400070E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public int OwnTeamDeaths;

		[Token(Token = "0x400070F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public int OtherTeamsDeaths;
	}
	[Token(Token = "0x20003B1")]
	public struct PlayerInfo
	{
		[Token(Token = "0x4000710")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string EntityId;

		[Token(Token = "0x4000711")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string DisplayName;

		[Token(Token = "0x4000712")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string AvatarUrl;

		[Token(Token = "0x4000713")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int Level;

		[Token(Token = "0x4000714")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string Border;

		[Token(Token = "0x4000715")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string Title;
	}
	[Token(Token = "0x20003B2")]
	public struct PlayerMatchStats
	{
		[Token(Token = "0x4000716")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public PlayerClassMatchStats[] PlayerClasses;

		[Token(Token = "0x4000717")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string PlayerEntityId;

		[Token(Token = "0x4000718")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool? Winner;

		[Token(Token = "0x4000719")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int TeamScore;
	}
	[Token(Token = "0x20003B3")]
	public struct PlayerStats
	{
		[Token(Token = "0x400071A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public TotalPlayerClassStats[] PlayerClasses;

		[Token(Token = "0x400071B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public MatchPlayedStats LifetimeMatchesStats;

		[Token(Token = "0x400071C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public MatchPlayedStats ThisSeasonMatchesStats;
	}
	[Token(Token = "0x20003B4")]
	public struct PostInviteFriendArgument
	{
		[Token(Token = "0x400071D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public UserArgument Friend;

		[Token(Token = "0x400071E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public bool OutstandingApplicationAcceptedInstead;
	}
	[Token(Token = "0x20003B5")]
	public enum PostInviteFriendResult
	{
		[Token(Token = "0x4000720")]
		Invited,
		[Token(Token = "0x4000721")]
		ApplicationGranted,
		[Token(Token = "0x4000722")]
		NoFreeSeats
	}
	[Token(Token = "0x20003B6")]
	public struct PreInviteFriendResult
	{
		[Token(Token = "0x4000723")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string InviteToGroupEntity;
	}
	[Token(Token = "0x20003B7")]
	public enum RecordPlayerMatchStatsResult
	{
		[Token(Token = "0x4000725")]
		Recorded,
		[Token(Token = "0x4000726")]
		NoMatchFound
	}
	[Token(Token = "0x20003B8")]
	public enum RejectMemberResult
	{
		[Token(Token = "0x4000728")]
		Kicked,
		[Token(Token = "0x4000729")]
		ApplicationRejected,
		[Token(Token = "0x400072A")]
		InvitationCanceled,
		[Token(Token = "0x400072B")]
		AlreadyNotAMember,
		[Token(Token = "0x400072C")]
		PlayerNotInGroup,
		[Token(Token = "0x400072D")]
		CannotKickLeader,
		[Token(Token = "0x400072E")]
		CannotKickWhilePlaying
	}
	[Token(Token = "0x20003B9")]
	public enum SendFriendRequestResult
	{
		[Token(Token = "0x4000730")]
		UserNotFound,
		[Token(Token = "0x4000731")]
		UserBlocked,
		[Token(Token = "0x4000732")]
		UserAlreadyFriend,
		[Token(Token = "0x4000733")]
		FriendRequestSent
	}
	[Token(Token = "0x20003BA")]
	public struct SetCustomGameIsPlayingArgument
	{
		[Token(Token = "0x4000734")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool IsPlaying;

		[Token(Token = "0x4000735")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int LevelIndex;

		[Token(Token = "0x4000736")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int GameModeIndex;
	}
	[Token(Token = "0x20003BB")]
	public struct SetCustomGameIsPlayingResult
	{
		[Token(Token = "0x4000737")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public SetCustomGameIsPlayingStatus Status;

		[Token(Token = "0x4000738")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int NumberOfPlayersStarting;
	}
	[Token(Token = "0x20003BC")]
	public enum SetCustomGameIsPlayingStatus
	{
		[Token(Token = "0x400073A")]
		Ok,
		[Token(Token = "0x400073B")]
		OnlyLeaderMayStartPlaying,
		[Token(Token = "0x400073C")]
		NotInCustomGame,
		[Token(Token = "0x400073D")]
		AlreadySet
	}
	[Token(Token = "0x20003BD")]
	public struct SetPlayerIsOnlineArgument
	{
		[Token(Token = "0x400073E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool IsOnline;

		[Token(Token = "0x400073F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string AppVersion;
	}
	[Token(Token = "0x20003BE")]
	public struct SetPlayerTitleRequest
	{
		[Token(Token = "0x4000740")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string TitleID;
	}
	[Token(Token = "0x20003BF")]
	public class SpeculativeProgressionChange
	{
		[Token(Token = "0x4000741")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int SeasonalXPAfter;

		[Token(Token = "0x4000742")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int SeasonalXPBefore;

		[Token(Token = "0x4000743")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xBD0998", Offset = "0xBD0998")]
		public string[] UnlockedItems;

		[Token(Token = "0x4000744")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Unlockable[] UnlockedUnlockables;

		[Token(Token = "0x4000745")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int XPAfter;

		[Token(Token = "0x4000746")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int XPBefore;

		[Token(Token = "0x4000747")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float LevelAfter;

		[Token(Token = "0x4000748")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float LevelBefore;

		[Token(Token = "0x4000749")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int LastXPUnlockBefore;

		[Token(Token = "0x400074A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public int? NextXPUnlockAfter;

		[Token(Token = "0x400074B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public int PreviouslyUnlockedItems;

		[Token(Token = "0x400074C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public ChallengeUpdate[] ChallengeUpdates;

		[Token(Token = "0x60008CD")]
		[Address(RVA = "0x1200AFC", Offset = "0x1200AFC", VA = "0x1200AFC")]
		public SpeculativeProgressionChange()
		{
		}
	}
	[Token(Token = "0x20003C0")]
	public struct SpellStats
	{
		[Token(Token = "0x400074D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public long SpellAssetGuid;

		[Token(Token = "0x400074E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int SuccessfulHit;

		[Token(Token = "0x400074F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int Kills;

		[Token(Token = "0x4000750")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int MaxKillsPerSpell;

		[Token(Token = "0x4000751")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int MaxHitsPerSpell;

		[Token(Token = "0x4000752")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int MaxAffectedSpells;

		[Token(Token = "0x4000753")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int TotalAffectedSpells;

		[Token(Token = "0x4000754")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public double DamageDone;

		[Token(Token = "0x4000755")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public double DamageMax;

		[Token(Token = "0x4000756")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public double EnhancedHealthChange;

		[Token(Token = "0x4000757")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public double DamageChangeValue;

		[Token(Token = "0x4000758")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public double DamageTaken;

		[Token(Token = "0x4000759")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public double HealingDone;

		[Token(Token = "0x400075A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public double HealingMax;

		[Token(Token = "0x400075B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public double HealingChangeValue;

		[Token(Token = "0x400075C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public int Casts;

		[Token(Token = "0x400075D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public int RoundsEquipped;

		[Token(Token = "0x400075E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public double Seconds;

		[Token(Token = "0x400075F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public int SpawnCount;

		[Token(Token = "0x4000760")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public int TeleportCanceled;
	}
	[Token(Token = "0x20003C1")]
	public class StartMatchMakingRequest
	{
		[Token(Token = "0x4000761")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string[] FailedToJoinMatchIds;

		[Token(Token = "0x4000762")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool SkipWait;

		[Token(Token = "0x4000763")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool WaitForOpponent;

		[Token(Token = "0x60008CE")]
		[Address(RVA = "0x114A474", Offset = "0x114A474", VA = "0x114A474")]
		public StartMatchMakingRequest()
		{
		}
	}
	[Token(Token = "0x20003C2")]
	public class StartMatchMakingResult
	{
		[Token(Token = "0x4000764")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int MatchMakingSeconds;

		[Token(Token = "0x4000765")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public OperationStartedResult OperationStartedResult;

		[Token(Token = "0x60008CF")]
		[Address(RVA = "0x114A47C", Offset = "0x114A47C", VA = "0x114A47C")]
		public StartMatchMakingResult()
		{
		}
	}
	[Token(Token = "0x20003C3")]
	public class StartRematchArgument
	{
		[Token(Token = "0x4000766")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string RoomName;

		[Token(Token = "0x4000767")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int NextLevelIndex;

		[Token(Token = "0x4000768")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int NextGameModeIndex;

		[Token(Token = "0x60008D0")]
		[Address(RVA = "0x114A51C", Offset = "0x114A51C", VA = "0x114A51C")]
		public StartRematchArgument()
		{
		}
	}
	[Token(Token = "0x20003C4")]
	public struct TotalPlayerClassPeriodStats
	{
		[Token(Token = "0x4000769")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public PlayerClassStats ClassStats;

		[Token(Token = "0x400076A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public MatchPlayedStats MatchesStats;
	}
	[Token(Token = "0x20003C5")]
	public class TotalPlayerClassStats
	{
		[Token(Token = "0x400076B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public long ClassAssetGuid;

		[Token(Token = "0x400076C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TotalPlayerClassPeriodStats Lifetime;

		[Token(Token = "0x400076D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public TotalPlayerClassPeriodStats ThisSeason;

		[Token(Token = "0x60008D1")]
		[Address(RVA = "0x1159100", Offset = "0x1159100", VA = "0x1159100")]
		public TotalPlayerClassStats()
		{
		}
	}
	[Token(Token = "0x20003C6")]
	public enum UnlockType
	{
		[Token(Token = "0x400076F")]
		Unknown,
		[Token(Token = "0x4000770")]
		Spell,
		[Token(Token = "0x4000771")]
		PlayerClass,
		[Token(Token = "0x4000772")]
		Border,
		[Token(Token = "0x4000773")]
		Title,
		[Token(Token = "0x4000774")]
		Challenge
	}
	[Token(Token = "0x20003C7")]
	public struct Unlockable
	{
		[Token(Token = "0x4000775")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string ItemId;

		[Token(Token = "0x4000776")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public UnlockType UnlockType;
	}
	[Token(Token = "0x20003C8")]
	public struct UpdateCustomGameArgument
	{
		[Token(Token = "0x4000777")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int NumberOfLockedSeats;
	}
	[Token(Token = "0x20003C9")]
	public struct UpdateCustomGameResult
	{
		[Token(Token = "0x4000778")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public UpdateCustomGameStatus Status;

		[Token(Token = "0x4000779")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int NumberOfLockedSeatsSet;
	}
	[Token(Token = "0x20003CA")]
	public enum UpdateCustomGameStatus
	{
		[Token(Token = "0x400077B")]
		Ok,
		[Token(Token = "0x400077C")]
		NotInCustomGame,
		[Token(Token = "0x400077D")]
		NotLeader
	}
	[Token(Token = "0x20003CB")]
	public struct UserArgument
	{
		[Token(Token = "0x400077E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string EntityId;
	}
	[Token(Token = "0x20003CC")]
	public struct UserStatus
	{
		[Token(Token = "0x400077F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string EntityId;

		[Token(Token = "0x4000780")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string DisplayName;

		[Token(Token = "0x4000781")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public FriendOpportunity? FriendOpportunity;

		[Token(Token = "0x4000782")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string AvatarUrl;

		[Token(Token = "0x4000783")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool IsFavorite;

		[Token(Token = "0x4000784")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int Level;

		[Token(Token = "0x4000785")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool IsMemberOfSameGroup;

		[Token(Token = "0x4000786")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		public bool IsGroupLeader;
	}
	[Token(Token = "0x20003CD")]
	public struct UserWithBoolArgument
	{
		[Token(Token = "0x4000787")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string EntityId;

		[Token(Token = "0x4000788")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public bool BoolValue;
	}
	[Token(Token = "0x20003CE")]
	public class UsersArgument
	{
		[Token(Token = "0x4000789")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string[] EntityIds;

		[Token(Token = "0x60008D2")]
		[Address(RVA = "0x112E260", Offset = "0x112E260", VA = "0x112E260")]
		public UsersArgument()
		{
		}
	}
}
namespace Cortopia.Scripts.Voip
{
	[Token(Token = "0x20003CF")]
	public class MutableSpeaker : IDisposable
	{
		[StructLayout(3)]
		[Token(Token = "0x20003D0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBC8928", Offset = "0xBC8928")]
		private struct <MuteIfBlockedAsync>d__15 : IAsyncStateMachine
		{
			[Token(Token = "0x400078F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000790")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4000791")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public MutableSpeaker <>4__this;

			[Token(Token = "0x4000792")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private TaskAwaiter<bool> <>u__1;

			[Token(Token = "0x60008DB")]
			[Address(RVA = "0x11DBAAC", Offset = "0x11DBAAC", VA = "0x11DBAAC", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x60008DC")]
			[Address(RVA = "0x11DBCC4", Offset = "0x11DBCC4", VA = "0x11DBCC4", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x400078A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly ReactiveSource<bool> _muted;

		[Token(Token = "0x400078B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly string _playFabEntityId;

		[Token(Token = "0x400078C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly Speaker _speaker;

		[Token(Token = "0x400078D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool _disposed;

		[Token(Token = "0x400078E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private ReactiveSubscription _muteSubscription;

		[Token(Token = "0x1700017E")]
		public Speaker Speaker
		{
			[Token(Token = "0x60008D4")]
			[Address(RVA = "0x101A9C8", Offset = "0x101A9C8", VA = "0x101A9C8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700017F")]
		public string PlayFabEntityId
		{
			[Token(Token = "0x60008D5")]
			[Address(RVA = "0x101AA2C", Offset = "0x101AA2C", VA = "0x101AA2C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000180")]
		public ReactiveSource<bool> Muted
		{
			[Token(Token = "0x60008D6")]
			[Address(RVA = "0x101A964", Offset = "0x101A964", VA = "0x101A964")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60008D3")]
		[Address(RVA = "0x101A720", Offset = "0x101A720", VA = "0x101A720")]
		public MutableSpeaker(Speaker speaker, string playFabEntityId)
		{
		}

		[Token(Token = "0x60008D7")]
		[Address(RVA = "0x101AA90", Offset = "0x101AA90", VA = "0x101AA90", Slot = "4")]
		public void Dispose()
		{
		}

		[Token(Token = "0x60008D8")]
		[Address(RVA = "0x101AB9C", Offset = "0x101AB9C", VA = "0x101AB9C")]
		public void Start()
		{
		}

		[Token(Token = "0x60008D9")]
		[Address(RVA = "0x101AC28", Offset = "0x101AC28", VA = "0x101AC28")]
		private void OnMute(bool mute)
		{
		}

		[Token(Token = "0x60008DA")]
		[Address(RVA = "0x101A8A0", Offset = "0x101A8A0", VA = "0x101A8A0")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xBDD268", Offset = "0xBDD268")]
		private void MuteIfBlockedAsync()
		{
		}
	}
	[Token(Token = "0x20003D1")]
	public class PartyVoipJoiner : MonoBehaviour
	{
		[Token(Token = "0x4000793")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private BoundValue<PhotonRoom?> partyRoom;

		[Token(Token = "0x4000794")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private object _connection;

		[Token(Token = "0x4000795")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private ReactiveSubscription _reactiveSubscription;

		[Token(Token = "0x60008DD")]
		[Address(RVA = "0xFD1C64", Offset = "0xFD1C64", VA = "0xFD1C64")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60008DE")]
		[Address(RVA = "0xFD1D6C", Offset = "0xFD1D6C", VA = "0xFD1D6C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60008DF")]
		[Address(RVA = "0xFD1E6C", Offset = "0xFD1E6C", VA = "0xFD1E6C")]
		private void OnPartyRoomChanged(PhotonRoom? photonRoom)
		{
		}

		[Token(Token = "0x60008E0")]
		[Address(RVA = "0xFD1D98", Offset = "0xFD1D98", VA = "0xFD1D98")]
		private void Disconnect()
		{
		}

		[Token(Token = "0x60008E1")]
		[Address(RVA = "0xFD1F68", Offset = "0xFD1F68", VA = "0xFD1F68")]
		public PartyVoipJoiner()
		{
		}
	}
	[Token(Token = "0x20003D2")]
	public class VoipMute : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20003D3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBC8938", Offset = "0xBC8938")]
		private sealed class <>c
		{
			[Token(Token = "0x400079E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x400079F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<(string, bool), string> <>9__11_0;

			[Token(Token = "0x60008EC")]
			[Address(RVA = "0x10685BC", Offset = "0x10685BC", VA = "0x10685BC")]
			public <>c()
			{
			}

			[Token(Token = "0x60008ED")]
			[Address(RVA = "0x10685C4", Offset = "0x10685C4", VA = "0x10685C4")]
			internal string <OnEnable>b__11_0((string, bool) t)
			{
				return null;
			}
		}

		[Token(Token = "0x20003D4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBC8948", Offset = "0xBC8948")]
		private sealed class <>c__DisplayClass16_0
		{
			[Token(Token = "0x40007A0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public VoipMute <>4__this;

			[Token(Token = "0x40007A1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public MutableSpeaker speaker;

			[Token(Token = "0x60008EE")]
			[Address(RVA = "0x10685D0", Offset = "0x10685D0", VA = "0x10685D0")]
			public <>c__DisplayClass16_0()
			{
			}

			[Token(Token = "0x60008EF")]
			[Address(RVA = "0x10685D8", Offset = "0x10685D8", VA = "0x10685D8")]
			internal void <BindToSpeaker>b__0(bool mute)
			{
			}

			[Token(Token = "0x60008F0")]
			[Address(RVA = "0x1068688", Offset = "0x1068688", VA = "0x1068688")]
			internal void <BindToSpeaker>b__1(bool mute)
			{
			}
		}

		[Token(Token = "0x4000796")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private BoundValue<string> playFabEntityId;

		[Token(Token = "0x4000797")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool _currentMuteValue;

		[Token(Token = "0x4000798")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private ReactiveSubscription _muteSubscription;

		[Token(Token = "0x4000799")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private ReactiveSubscription _playerSubscription;

		[Token(Token = "0x400079A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string _playFabEntityId;

		[Token(Token = "0x400079B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private readonly ReactiveSource<bool> _speakerMute;

		[Token(Token = "0x400079C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private VoipSpeakerPool _subscribedSpeakers;

		[Token(Token = "0x400079D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD09F0", Offset = "0xBD09F0")]
		private readonly ReactiveSource<bool> <Muted>k__BackingField;

		[Token(Token = "0x17000181")]
		public ReactiveSource<bool> Muted
		{
			[Token(Token = "0x60008E2")]
			[Address(RVA = "0x1134BCC", Offset = "0x1134BCC", VA = "0x1134BCC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDD2D8", Offset = "0xBDD2D8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60008E3")]
		[Address(RVA = "0x1134BD4", Offset = "0x1134BD4", VA = "0x1134BD4")]
		private void Update()
		{
		}

		[Token(Token = "0x60008E4")]
		[Address(RVA = "0x11352C8", Offset = "0x11352C8", VA = "0x11352C8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60008E5")]
		[Address(RVA = "0x11355B0", Offset = "0x11355B0", VA = "0x11355B0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60008E6")]
		[Address(RVA = "0x11355DC", Offset = "0x11355DC", VA = "0x11355DC")]
		private void UnSubscribeSpeakers()
		{
		}

		[Token(Token = "0x60008E7")]
		[Address(RVA = "0x1135768", Offset = "0x1135768", VA = "0x1135768")]
		private void OnPlayFabEntityIdChanged(string value)
		{
		}

		[Token(Token = "0x60008E8")]
		[Address(RVA = "0x1135CF4", Offset = "0x1135CF4", VA = "0x1135CF4")]
		private void OnSpeakerCreated(object sender, MutableSpeaker speaker)
		{
		}

		[Token(Token = "0x60008E9")]
		[Address(RVA = "0x1135A20", Offset = "0x1135A20", VA = "0x1135A20")]
		private void BindToSpeaker(MutableSpeaker speaker)
		{
		}

		[Token(Token = "0x60008EA")]
		[Address(RVA = "0x1135D58", Offset = "0x1135D58", VA = "0x1135D58")]
		public VoipMute()
		{
		}
	}
	[Token(Token = "0x20003D5")]
	public class VoipNetworkClient : IConnectionCallbacks, IMatchmakingCallbacks
	{
		[Token(Token = "0x40007A2")]
		private const string VoiceRoomNameSuffix = "_voice_";

		[Token(Token = "0x40007A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly byte[] AllGroups;

		[Token(Token = "0x40007A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly byte[] _group;

		[Token(Token = "0x40007A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly ReactiveSource<bool> _isConnected;

		[Token(Token = "0x40007A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool _isSubscribed;

		[Token(Token = "0x40007A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Recorder _recorder;

		[Token(Token = "0x40007A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private EnterRoomParams _roomParams;

		[Token(Token = "0x40007A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private VoipSpeakerPool _speakers;

		[Token(Token = "0x40007AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private VoiceConnection _voiceConnection;

		[Token(Token = "0x17000182")]
		public VoipSpeakerPool Speakers
		{
			[Token(Token = "0x60008F1")]
			[Address(RVA = "0x1134F9C", Offset = "0x1134F9C", VA = "0x1134F9C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60008F2")]
			[Address(RVA = "0x1135E10", Offset = "0x1135E10", VA = "0x1135E10")]
			private set
			{
			}
		}

		[Token(Token = "0x17000183")]
		public object Connection
		{
			[Token(Token = "0x60008F3")]
			[Address(RVA = "0x1135E18", Offset = "0x1135E18", VA = "0x1135E18")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000184")]
		public bool IsMuted
		{
			[Token(Token = "0x60008F4")]
			[Address(RVA = "0x1135238", Offset = "0x1135238", VA = "0x1135238")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000185")]
		public Reactive<bool> IsConnected
		{
			[Token(Token = "0x60008F5")]
			[Address(RVA = "0x1135540", Offset = "0x1135540", VA = "0x1135540")]
			get
			{
				return default(Reactive<bool>);
			}
		}

		[Token(Token = "0x60008F6")]
		[Address(RVA = "0x1135E20", Offset = "0x1135E20", VA = "0x1135E20")]
		public object SetupClient(LoadBalancingClient followClient)
		{
			return null;
		}

		[Token(Token = "0x60008F7")]
		[Address(RVA = "0x113631C", Offset = "0x113631C", VA = "0x113631C")]
		public object SetupClient(string region, string room)
		{
			return null;
		}

		[Token(Token = "0x60008F8")]
		[Address(RVA = "0x11360F8", Offset = "0x11360F8", VA = "0x11360F8")]
		private void SetupConnection()
		{
		}

		[Token(Token = "0x60008F9")]
		[Address(RVA = "0x1134EAC", Offset = "0x1134EAC", VA = "0x1134EAC")]
		public void Mute(bool mute)
		{
		}

		[Token(Token = "0x60008FA")]
		[Address(RVA = "0x113674C", Offset = "0x113674C", VA = "0x113674C")]
		private void Unsubscribe()
		{
		}

		[Token(Token = "0x60008FB")]
		[Address(RVA = "0x11362CC", Offset = "0x11362CC", VA = "0x11362CC")]
		private void Subscribe()
		{
		}

		[Token(Token = "0x60008FC")]
		[Address(RVA = "0x11365D4", Offset = "0x11365D4", VA = "0x11365D4")]
		public void Stop()
		{
		}

		[Token(Token = "0x60008FD")]
		[Address(RVA = "0x1136798", Offset = "0x1136798", VA = "0x1136798")]
		public void SetGroup(byte group)
		{
		}

		[Token(Token = "0x60008FE")]
		[Address(RVA = "0x1136A4C", Offset = "0x1136A4C", VA = "0x1136A4C")]
		public void Service()
		{
		}

		[Token(Token = "0x60008FF")]
		[Address(RVA = "0x1136AE4", Offset = "0x1136AE4", VA = "0x1136AE4", Slot = "4")]
		public void OnConnected()
		{
		}

		[Token(Token = "0x6000900")]
		[Address(RVA = "0x1136B58", Offset = "0x1136B58", VA = "0x1136B58", Slot = "5")]
		public void OnConnectedToMaster()
		{
		}

		[Token(Token = "0x6000901")]
		[Address(RVA = "0x1136BF4", Offset = "0x1136BF4", VA = "0x1136BF4", Slot = "6")]
		public void OnDisconnected(DisconnectCause cause)
		{
		}

		[Token(Token = "0x6000902")]
		[Address(RVA = "0x1136C74", Offset = "0x1136C74", VA = "0x1136C74", Slot = "7")]
		public void OnRegionListReceived(RegionHandler regionHandler)
		{
		}

		[Token(Token = "0x6000903")]
		[Address(RVA = "0x1136C78", Offset = "0x1136C78", VA = "0x1136C78", Slot = "8")]
		public void OnCustomAuthenticationResponse(Dictionary<string, object> data)
		{
		}

		[Token(Token = "0x6000904")]
		[Address(RVA = "0x1136C7C", Offset = "0x1136C7C", VA = "0x1136C7C", Slot = "9")]
		public void OnCustomAuthenticationFailed(string debugMessage)
		{
		}

		[Token(Token = "0x6000905")]
		[Address(RVA = "0x1136CFC", Offset = "0x1136CFC", VA = "0x1136CFC", Slot = "10")]
		public void OnFriendListUpdate(List<Photon.Realtime.FriendInfo> friendList)
		{
		}

		[Token(Token = "0x6000906")]
		[Address(RVA = "0x1136D00", Offset = "0x1136D00", VA = "0x1136D00", Slot = "11")]
		public void OnCreatedRoom()
		{
		}

		[Token(Token = "0x6000907")]
		[Address(RVA = "0x1136D74", Offset = "0x1136D74", VA = "0x1136D74", Slot = "12")]
		public void OnCreateRoomFailed(short returnCode, string message)
		{
		}

		[Token(Token = "0x6000908")]
		[Address(RVA = "0x1136DF4", Offset = "0x1136DF4", VA = "0x1136DF4", Slot = "13")]
		public void OnJoinedRoom()
		{
		}

		[Token(Token = "0x6000909")]
		[Address(RVA = "0x1136888", Offset = "0x1136888", VA = "0x1136888")]
		private void ChangeGroup()
		{
		}

		[Token(Token = "0x600090A")]
		[Address(RVA = "0x1136EC4", Offset = "0x1136EC4", VA = "0x1136EC4", Slot = "14")]
		public void OnJoinRoomFailed(short returnCode, string message)
		{
		}

		[Token(Token = "0x600090B")]
		[Address(RVA = "0x1136F44", Offset = "0x1136F44", VA = "0x1136F44", Slot = "15")]
		public void OnJoinRandomFailed(short returnCode, string message)
		{
		}

		[Token(Token = "0x600090C")]
		[Address(RVA = "0x1136FC4", Offset = "0x1136FC4", VA = "0x1136FC4", Slot = "16")]
		public void OnLeftRoom()
		{
		}

		[Token(Token = "0x600090D")]
		[Address(RVA = "0x1136FC8", Offset = "0x1136FC8", VA = "0x1136FC8")]
		public void KeepAlive()
		{
		}

		[Token(Token = "0x600090E")]
		[Address(RVA = "0x113706C", Offset = "0x113706C", VA = "0x113706C")]
		public VoipNetworkClient()
		{
		}
	}
	[Token(Token = "0x20003D6")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xBC8958", Offset = "0xBC8958")]
	public class VoipSpeaker : MonoBehaviour
	{
		[Token(Token = "0x40007AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private AudioSource _audioSource;

		[Token(Token = "0x40007AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private ReactiveSubscription _reactiveSubscription;

		[Token(Token = "0x6000910")]
		[Address(RVA = "0x1137188", Offset = "0x1137188", VA = "0x1137188")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000911")]
		[Address(RVA = "0x11371DC", Offset = "0x11371DC", VA = "0x11371DC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000912")]
		[Address(RVA = "0x1137308", Offset = "0x1137308", VA = "0x1137308")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000913")]
		[Address(RVA = "0x1137314", Offset = "0x1137314", VA = "0x1137314")]
		public VoipSpeaker()
		{
		}

		[Token(Token = "0x6000914")]
		[Address(RVA = "0x113731C", Offset = "0x113731C", VA = "0x113731C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDD2E8", Offset = "0xBDD2E8")]
		private void <OnEnable>b__3_0(float x)
		{
		}
	}
	[Token(Token = "0x20003D7")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xBC89B8", Offset = "0xBC89B8")]
	public class VoipSpeakerPool : MonoBehaviour
	{
		[Token(Token = "0x40007AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool nameIsEntityRef;

		[Token(Token = "0x40007AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject voipSpeakerPrefab;

		[Token(Token = "0x40007AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Dictionary<string, MutableSpeaker> _allocatedSpeakers;

		[Token(Token = "0x40007B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Stack<Speaker> _freeSpeakers;

		[Token(Token = "0x14000005")]
		public event EventHandler<MutableSpeaker> SpeakerCreated
		{
			[Token(Token = "0x6000919")]
			[Address(RVA = "0x1135C54", Offset = "0x1135C54", VA = "0x1135C54")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDD2F8", Offset = "0xBDD2F8")]
			add
			{
			}
			[Token(Token = "0x600091A")]
			[Address(RVA = "0x11356C8", Offset = "0x11356C8", VA = "0x11356C8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDD308", Offset = "0xBDD308")]
			remove
			{
			}
		}

		[Token(Token = "0x6000915")]
		[Address(RVA = "0x1137338", Offset = "0x1137338", VA = "0x1137338")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000916")]
		[Address(RVA = "0x11373F0", Offset = "0x11373F0", VA = "0x11373F0")]
		private void Start()
		{
		}

		[Token(Token = "0x6000917")]
		[Address(RVA = "0x1137884", Offset = "0x1137884", VA = "0x1137884")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000918")]
		[Address(RVA = "0x11374D4", Offset = "0x11374D4", VA = "0x11374D4")]
		private Speaker CreateSpeaker()
		{
			return null;
		}

		[Token(Token = "0x600091B")]
		[Address(RVA = "0x1137660", Offset = "0x1137660", VA = "0x1137660")]
		private void AddToPool(Speaker speaker)
		{
		}

		[Token(Token = "0x600091C")]
		[Address(RVA = "0x1135058", Offset = "0x1135058", VA = "0x1135058")]
		public MutableSpeaker TryGetSpeaker(string playFabEntityId)
		{
			return null;
		}

		[Token(Token = "0x600091D")]
		[Address(RVA = "0x11379D4", Offset = "0x11379D4", VA = "0x11379D4")]
		private Speaker SpeakerFactory(int playerId, byte voiceId, object userData)
		{
			return null;
		}

		[Token(Token = "0x600091E")]
		[Address(RVA = "0x1137E60", Offset = "0x1137E60", VA = "0x1137E60")]
		private void OnRemoteVoiceRemoveAction(Speaker speaker)
		{
		}

		[Token(Token = "0x600091F")]
		[Address(RVA = "0x1138148", Offset = "0x1138148", VA = "0x1138148")]
		public VoipSpeakerPool()
		{
		}
	}
	[Token(Token = "0x20003D8")]
	public class VoipSpeakerSlot : MonoBehaviour
	{
		[Token(Token = "0x40007B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Cortopia.Scripts.Players.Player player;

		[Token(Token = "0x40007B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool _init;

		[Token(Token = "0x40007B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private string _playFabEntityId;

		[Token(Token = "0x40007B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private VoipSpeakerPool _speakers;

		[Token(Token = "0x40007B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Transform _usedSpeakerTransform;

		[Token(Token = "0x6000920")]
		[Address(RVA = "0x1138150", Offset = "0x1138150", VA = "0x1138150")]
		private void Update()
		{
		}

		[Token(Token = "0x6000921")]
		[Address(RVA = "0x11386B4", Offset = "0x11386B4", VA = "0x11386B4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000922")]
		[Address(RVA = "0x11386BC", Offset = "0x11386BC", VA = "0x11386BC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000923")]
		[Address(RVA = "0x11387DC", Offset = "0x11387DC", VA = "0x11387DC")]
		private void OnSpeakerCreated(object sender, MutableSpeaker speaker)
		{
		}

		[Token(Token = "0x6000924")]
		[Address(RVA = "0x113846C", Offset = "0x113846C", VA = "0x113846C")]
		private void UseSpeaker(Speaker speaker)
		{
		}

		[Token(Token = "0x6000925")]
		[Address(RVA = "0x11388CC", Offset = "0x11388CC", VA = "0x11388CC")]
		public VoipSpeakerSlot()
		{
		}
	}
	[Token(Token = "0x20003D9")]
	public class VoipTeamChannel : MonoBehaviour
	{
		[Token(Token = "0x40007B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private ReactiveSubscription _reactiveSubscription;

		[Token(Token = "0x40007B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool _subscribed;

		[Token(Token = "0x6000926")]
		[Address(RVA = "0x11388D4", Offset = "0x11388D4", VA = "0x11388D4")]
		private void Start()
		{
		}

		[Token(Token = "0x6000927")]
		[Address(RVA = "0x1138A44", Offset = "0x1138A44", VA = "0x1138A44")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000928")]
		[Address(RVA = "0x1138BF4", Offset = "0x1138BF4", VA = "0x1138BF4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000929")]
		[Address(RVA = "0x1138C28", Offset = "0x1138C28", VA = "0x1138C28")]
		private void UnSubscribe()
		{
		}

		[Token(Token = "0x600092A")]
		[Address(RVA = "0x1138C54", Offset = "0x1138C54", VA = "0x1138C54")]
		private void Subscribe(EntityRef localPlayer, Frame f)
		{
		}

		[Token(Token = "0x600092B")]
		[Address(RVA = "0x1138DD8", Offset = "0x1138DD8", VA = "0x1138DD8")]
		private void OnRolesChanged(EventRolesChanged callback)
		{
		}

		[Token(Token = "0x600092C")]
		[Address(RVA = "0x1138F50", Offset = "0x1138F50", VA = "0x1138F50")]
		private void UpdateLocalPlayer(EntityRef localPlayer)
		{
		}

		[Token(Token = "0x600092D")]
		[Address(RVA = "0x1139014", Offset = "0x1139014", VA = "0x1139014")]
		private void OnTeamChanged(EventTeamChanged callback)
		{
		}

		[Token(Token = "0x600092E")]
		[Address(RVA = "0x1138D1C", Offset = "0x1138D1C", VA = "0x1138D1C")]
		private void UpdateTeam(Quantum.Team team)
		{
		}

		[Token(Token = "0x600092F")]
		[Address(RVA = "0x113914C", Offset = "0x113914C", VA = "0x113914C")]
		public VoipTeamChannel()
		{
		}
	}
}
namespace Cortopia.Scripts.VFX
{
	[Token(Token = "0x20003DA")]
	public static class LineRendererUtils
	{
		[Token(Token = "0x6000930")]
		[Address(RVA = "0xF8654C", Offset = "0xF8654C", VA = "0xF8654C")]
		public static void MakeBentLine(LineRenderer lineRenderer, Quaternion startRot, Vector3 from, Vector3 to, float stepLength, float stiffness)
		{
		}

		[Token(Token = "0x6000931")]
		[Address(RVA = "0xF86754", Offset = "0xF86754", VA = "0xF86754")]
		public static void MakeSteppedLine(LineRenderer lineRenderer, Vector3 from, Vector3 to, float stepLength)
		{
		}
	}
	[Token(Token = "0x20003DB")]
	public class RemoteTeleportVFX : MonoBehaviour
	{
		[Token(Token = "0x20003DC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBC8A18", Offset = "0xBC8A18")]
		private sealed class <PlayTeleportVFX>d__14 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40007BF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40007C0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40007C1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public RemoteTeleportVFX <>4__this;

			[Token(Token = "0x40007C2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float[] <lifeTimeSegments>5__2;

			[Token(Token = "0x40007C3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <elapsedTime>5__3;

			[Token(Token = "0x40007C4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private int <currentSegmentIndex>5__4;

			[Token(Token = "0x40007C5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private int <lineEndIndex>5__5;

			[Token(Token = "0x17000187")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000940")]
				[Address(RVA = "0x105E94C", Offset = "0x105E94C", VA = "0x105E94C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000188")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000942")]
				[Address(RVA = "0x105E994", Offset = "0x105E994", VA = "0x105E994", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600093D")]
			[Address(RVA = "0x105E600", Offset = "0x105E600", VA = "0x105E600")]
			[DebuggerHidden]
			public <PlayTeleportVFX>d__14(int <>1__state)
			{
			}

			[Token(Token = "0x600093E")]
			[Address(RVA = "0x105E62C", Offset = "0x105E62C", VA = "0x105E62C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600093F")]
			[Address(RVA = "0x105E630", Offset = "0x105E630", VA = "0x105E630", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000941")]
			[Address(RVA = "0x105E954", Offset = "0x105E954", VA = "0x105E954", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40007B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Cortopia.Scripts.Players.Player player;

		[Token(Token = "0x40007BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private LineRenderer lineRenderer;

		[Token(Token = "0x40007BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float lineAnimationTime;

		[Token(Token = "0x40007BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private float lineDecayTime;

		[Token(Token = "0x40007BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private EventKey _lastTeleportEvent;

		[Token(Token = "0x40007BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Vector3[] _teleportLine;

		[Token(Token = "0x17000186")]
		private Cortopia.Scripts.Players.Player RealPlayer
		{
			[Token(Token = "0x6000932")]
			[Address(RVA = "0x11F0E00", Offset = "0x11F0E00", VA = "0x11F0E00")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000933")]
		[Address(RVA = "0x11F0EEC", Offset = "0x11F0EEC", VA = "0x11F0EEC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000934")]
		[Address(RVA = "0x11F0F40", Offset = "0x11F0F40", VA = "0x11F0F40")]
		private void Start()
		{
		}

		[Token(Token = "0x6000935")]
		[Address(RVA = "0x11F1168", Offset = "0x11F1168", VA = "0x11F1168")]
		public void Update()
		{
		}

		[Token(Token = "0x6000936")]
		[Address(RVA = "0x11F12D8", Offset = "0x11F12D8", VA = "0x11F12D8")]
		private void OnPlayerDied(EventPlayerDied callback)
		{
		}

		[Token(Token = "0x6000937")]
		[Address(RVA = "0x11F1398", Offset = "0x11F1398", VA = "0x11F1398")]
		private void OnStartTeleporting(EventStartTeleporting callback)
		{
		}

		[Token(Token = "0x6000938")]
		[Address(RVA = "0x11F1708", Offset = "0x11F1708", VA = "0x11F1708")]
		private void OnEventCancelled(CallbackEventCanceled callback)
		{
		}

		[Token(Token = "0x6000939")]
		[Address(RVA = "0x11F169C", Offset = "0x11F169C", VA = "0x11F169C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xBDD318", Offset = "0xBDD318")]
		private IEnumerator PlayTeleportVFX()
		{
			return null;
		}

		[Token(Token = "0x600093A")]
		[Address(RVA = "0x11F12A0", Offset = "0x11F12A0", VA = "0x11F12A0")]
		private void DisableTeleportVFX()
		{
		}

		[Token(Token = "0x600093B")]
		[Address(RVA = "0x11F17A0", Offset = "0x11F17A0", VA = "0x11F17A0")]
		private float[] GetLifeTimeSegments(IReadOnlyList<Vector3> vectorArray)
		{
			return null;
		}

		[Token(Token = "0x600093C")]
		[Address(RVA = "0x11F1AB8", Offset = "0x11F1AB8", VA = "0x11F1AB8")]
		public RemoteTeleportVFX()
		{
		}
	}
	[Token(Token = "0x20003DD")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xBC8A28", Offset = "0xBC8A28")]
	public class TrailController : MonoBehaviour
	{
		[Token(Token = "0x40007C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool clearTrailOnEnable;

		[Token(Token = "0x40007C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[SerializeField]
		private bool clearTrailOnDisable;

		[Token(Token = "0x40007C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private TrailRenderer _renderer;

		[Token(Token = "0x6000943")]
		[Address(RVA = "0x1159144", Offset = "0x1159144", VA = "0x1159144")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000944")]
		[Address(RVA = "0x1159198", Offset = "0x1159198", VA = "0x1159198")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000945")]
		[Address(RVA = "0x1159248", Offset = "0x1159248", VA = "0x1159248")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000946")]
		[Address(RVA = "0x115922C", Offset = "0x115922C", VA = "0x115922C")]
		private void ClearTrail()
		{
		}

		[Token(Token = "0x6000947")]
		[Address(RVA = "0x11592DC", Offset = "0x11592DC", VA = "0x11592DC")]
		public TrailController()
		{
		}
	}
	[Token(Token = "0x20003DE")]
	public class TraitVFXController : MonoBehaviour
	{
		[Token(Token = "0x40007C9")]
		private const string TraitTypeVariable = "PlayTraitVFXType";

		[Token(Token = "0x40007CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private EntityView playerEntityView;

		[Token(Token = "0x40007CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "EnumArrayAttribute", RVA = "0xBD0AB0", Offset = "0xBD0AB0")]
		[SerializeField]
		private ParticleSystem[] traitEffects;

		[Token(Token = "0x40007CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int _currentActiveTrait;

		[Token(Token = "0x6000948")]
		[Address(RVA = "0x11592E4", Offset = "0x11592E4", VA = "0x11592E4")]
		private void Update()
		{
		}

		[Token(Token = "0x6000949")]
		[Address(RVA = "0x1159578", Offset = "0x1159578", VA = "0x1159578")]
		private void ToggleParticleSystem(ParticleSystem system, bool isActive)
		{
		}

		[Token(Token = "0x600094A")]
		[Address(RVA = "0x1159640", Offset = "0x1159640", VA = "0x1159640")]
		public TraitVFXController()
		{
		}
	}
}
namespace Cortopia.Scripts.Utils
{
	[Token(Token = "0x20003DF")]
	public static class AsyncOperationExtensions
	{
		[Token(Token = "0x20003E0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBC8A98", Offset = "0xBC8A98")]
		private sealed class <>c__DisplayClass0_0
		{
			[Token(Token = "0x40007CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public TaskCompletionSource<bool> taskCompletionSource;

			[Token(Token = "0x600094C")]
			[Address(RVA = "0x11422EC", Offset = "0x11422EC", VA = "0x11422EC")]
			public <>c__DisplayClass0_0()
			{
			}

			[Token(Token = "0x600094D")]
			[Address(RVA = "0x11422F4", Offset = "0x11422F4", VA = "0x11422F4")]
			internal void <ToTask>b__0(AsyncOperation asyncOperation)
			{
			}
		}

		[Token(Token = "0x600094B")]
		[Address(RVA = "0x132ABA4", Offset = "0x132ABA4", VA = "0x132ABA4")]
		public static Task ToTask(this AsyncOperation operation)
		{
			return null;
		}
	}
	[Token(Token = "0x20003E1")]
	public struct AxisButtonState
	{
		[Token(Token = "0x40007CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ButtonState ButtonState;

		[Token(Token = "0x40007CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float NormalizedAxis;

		[Token(Token = "0x600094E")]
		[Address(RVA = "0x132AE7C", Offset = "0x132AE7C", VA = "0x132AE7C")]
		public void SetValue(bool isDown, float value)
		{
		}

		[Token(Token = "0x600094F")]
		[Address(RVA = "0x132AF80", Offset = "0x132AF80", VA = "0x132AF80")]
		public void SetBinaryValue(bool isDown)
		{
		}
	}
	[Token(Token = "0x20003E2")]
	public enum ButtonState
	{
		[Token(Token = "0x40007D1")]
		Reset,
		[Token(Token = "0x40007D2")]
		Down,
		[Token(Token = "0x40007D3")]
		WentDown,
		[Token(Token = "0x40007D4")]
		Up,
		[Token(Token = "0x40007D5")]
		WentUp
	}
	[Token(Token = "0x20003E3")]
	public static class ButtonStateExtension
	{
		[Token(Token = "0x6000950")]
		[Address(RVA = "0x132AEB0", Offset = "0x132AEB0", VA = "0x132AEB0")]
		public static void SetValue(this ref ButtonState buttonState, bool isDown)
		{
		}

		[Token(Token = "0x6000951")]
		[Address(RVA = "0x1334E10", Offset = "0x1334E10", VA = "0x1334E10")]
		public static bool IsDown(this ButtonState buttonState)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20003E4")]
	public class ConnectionProblemNotification : IConnectionProblemNotification
	{
		[Serializable]
		[Token(Token = "0x20003E5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBC8AB8", Offset = "0xBC8AB8")]
		private sealed class <>c
		{
			[Token(Token = "0x40007D8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40007D9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<int, bool> <>9__1_0;

			[Token(Token = "0x6000957")]
			[Address(RVA = "0x102594C", Offset = "0x102594C", VA = "0x102594C")]
			public <>c()
			{
			}

			[Token(Token = "0x6000958")]
			[Address(RVA = "0x1025954", Offset = "0x1025954", VA = "0x1025954")]
			internal bool <.ctor>b__1_0(int x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x40007D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly ReactiveSource<int> _connectionProblems;

		[Token(Token = "0x40007D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD0B20", Offset = "0xBD0B20")]
		private readonly Reactive<bool> <HasConnectionProblems>k__BackingField;

		[Token(Token = "0x17000189")]
		public Reactive<bool> HasConnectionProblems
		{
			[Token(Token = "0x6000953")]
			[Address(RVA = "0x1166308", Offset = "0x1166308", VA = "0x1166308")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDD3F8", Offset = "0xBDD3F8")]
			get
			{
				return default(Reactive<bool>);
			}
		}

		[Token(Token = "0x6000952")]
		[Address(RVA = "0x116613C", Offset = "0x116613C", VA = "0x116613C")]
		public ConnectionProblemNotification()
		{
		}

		[Token(Token = "0x6000954")]
		[Address(RVA = "0x1166310", Offset = "0x1166310", VA = "0x1166310", Slot = "4")]
		public void EndConnectionProblem()
		{
		}

		[Token(Token = "0x6000955")]
		[Address(RVA = "0x116638C", Offset = "0x116638C", VA = "0x116638C", Slot = "5")]
		public void StartConnectionProblem()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003E6")]
	public class EntityRefEvent : UnityEvent<EntityRef>
	{
		[Token(Token = "0x6000959")]
		[Address(RVA = "0x104CEB8", Offset = "0x104CEB8", VA = "0x104CEB8")]
		public EntityRefEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003E7")]
	public class BoolEvent : UnityEvent<bool>
	{
		[Token(Token = "0x600095A")]
		[Address(RVA = "0x1332F4C", Offset = "0x1332F4C", VA = "0x1332F4C")]
		public BoolEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003E8")]
	public class FloatEvent : UnityEvent<float>
	{
		[Token(Token = "0x600095B")]
		[Address(RVA = "0xF9E09C", Offset = "0xF9E09C", VA = "0xF9E09C")]
		public FloatEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003E9")]
	public class IntEvent : UnityEvent<int>
	{
		[Token(Token = "0x600095C")]
		[Address(RVA = "0xF8208C", Offset = "0xF8208C", VA = "0xF8208C")]
		public IntEvent()
		{
		}
	}
	[Token(Token = "0x20003EA")]
	public static class DebugUtility
	{
		[Token(Token = "0x600095D")]
		[Address(RVA = "0x103D3E0", Offset = "0x103D3E0", VA = "0x103D3E0")]
		public static string GetFullName(GameObject self, GameObject o)
		{
			return null;
		}
	}
	[Token(Token = "0x20003EB")]
	public enum EntityViewUpdateMode
	{
		[Token(Token = "0x40007DB")]
		Extrapolated,
		[Token(Token = "0x40007DC")]
		NotExtrapolated,
		[Token(Token = "0x40007DD")]
		Immovable
	}
	[Token(Token = "0x20003EC")]
	public static class EnumerableExtensions
	{
		[Token(Token = "0x600095E")]
		public static void Each<T>(this IEnumerable<T> source, Action<T, int> fn)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003ED")]
	public enum EnvironmentTags
	{
		[Token(Token = "0x40007DF")]
		Untagged,
		[Token(Token = "0x40007E0")]
		Summonable
	}
	[Token(Token = "0x20003EE")]
	public static class FloatExtensions
	{
		[Token(Token = "0x600095F")]
		[Address(RVA = "0xF9E0E8", Offset = "0xF9E0E8", VA = "0xF9E0E8")]
		public static float Remap(this float value, float from1, float to1, float from2, float to2)
		{
			return default(float);
		}
	}
	[Token(Token = "0x20003EF")]
	public static class GameObjectExtensions
	{
		[Token(Token = "0x6000960")]
		[Address(RVA = "0xFA6884", Offset = "0xFA6884", VA = "0xFA6884")]
		public static bool TrySetActive(this GameObject gameObject, bool isActive)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20003F0")]
	public interface IConnectionProblemNotification
	{
		[Token(Token = "0x6000961")]
		void EndConnectionProblem();

		[Token(Token = "0x6000962")]
		void StartConnectionProblem();
	}
	[Token(Token = "0x20003F1")]
	public class ImageUtils
	{
		[StructLayout(3)]
		[Token(Token = "0x20003F2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBC8AF8", Offset = "0xBC8AF8")]
		private struct <GetRemoteTextureUsingCache>d__1 : IAsyncStateMachine
		{
			[Token(Token = "0x40007E2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40007E3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder<OrientedTexture2D> <>t__builder;

			[Token(Token = "0x40007E4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string url;

			[Token(Token = "0x40007E5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private TaskAwaiter<Texture2D> <>u__1;

			[Token(Token = "0x6000968")]
			[Address(RVA = "0x1033E64", Offset = "0x1033E64", VA = "0x1033E64", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000969")]
			[Address(RVA = "0x10341AC", Offset = "0x10341AC", VA = "0x10341AC", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20003F3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBC8B08", Offset = "0xBC8B08")]
		private struct <GetRemoteTexture>d__2 : IAsyncStateMachine
		{
			[Token(Token = "0x40007E6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40007E7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder<Texture2D> <>t__builder;

			[Token(Token = "0x40007E8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string url;

			[Token(Token = "0x40007E9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private UnityWebRequest <www>5__2;

			[Token(Token = "0x40007EA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x600096A")]
			[Address(RVA = "0x103394C", Offset = "0x103394C", VA = "0x103394C", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x600096B")]
			[Address(RVA = "0x1033E08", Offset = "0x1033E08", VA = "0x1033E08", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x40007E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Dictionary<string, OrientedTexture2D> ImageCache;

		[Token(Token = "0x6000963")]
		[Address(RVA = "0xFB481C", Offset = "0xFB481C", VA = "0xFB481C")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xBDD438", Offset = "0xBDD438")]
		public static Task<OrientedTexture2D> GetRemoteTextureUsingCache(string url)
		{
			return null;
		}

		[Token(Token = "0x6000964")]
		[Address(RVA = "0xFB4948", Offset = "0xFB4948", VA = "0xFB4948")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xBDD498", Offset = "0xBDD498")]
		private static Task<Texture2D> GetRemoteTexture(string url)
		{
			return null;
		}

		[Token(Token = "0x6000965")]
		[Address(RVA = "0xFB4A88", Offset = "0xFB4A88", VA = "0xFB4A88")]
		public static void ClearCache()
		{
		}

		[Token(Token = "0x6000966")]
		[Address(RVA = "0xFB4B0C", Offset = "0xFB4B0C", VA = "0xFB4B0C")]
		public ImageUtils()
		{
		}
	}
	[Token(Token = "0x20003F4")]
	public struct InputConstants
	{
		[Token(Token = "0x40007EB")]
		public const int MaxHands = 2;

		[Token(Token = "0x40007EC")]
		public const int LeftHandIndex = 0;

		[Token(Token = "0x40007ED")]
		public const int RightHandIndex = 1;

		[Token(Token = "0x40007EE")]
		public const float MinHapticsAmplitude = 0.05f;

		[Token(Token = "0x40007EF")]
		public const float HapticsFrequency = 30f;

		[Token(Token = "0x40007F0")]
		public const float MinHapticDuration = 1f / 30f;

		[Token(Token = "0x40007F1")]
		public const float MaxHapticDuration = 1f;

		[Token(Token = "0x40007F2")]
		public const float JoystickDeadZoneIn = 0.5f;

		[Token(Token = "0x40007F3")]
		public const float JoystickDeadZoneOut = 0.4f;
	}
	[Token(Token = "0x20003F5")]
	public static class InputHelpers
	{
		[Token(Token = "0x600096C")]
		[Address(RVA = "0xF80680", Offset = "0xF80680", VA = "0xF80680")]
		public static int GetHandIndex(this XRNode hand)
		{
			return default(int);
		}

		[Token(Token = "0x600096D")]
		[Address(RVA = "0xF80714", Offset = "0xF80714", VA = "0xF80714")]
		public static int GetHandIndex(this Side hand)
		{
			return default(int);
		}

		[Token(Token = "0x600096E")]
		[Address(RVA = "0xF807A0", Offset = "0xF807A0", VA = "0xF807A0")]
		public static int GetHandIndex(this BodyPart bodyPart)
		{
			return default(int);
		}
	}
	[Token(Token = "0x20003F6")]
	public struct JoyStickState
	{
		[Token(Token = "0x40007F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ButtonState ButtonState;

		[Token(Token = "0x40007F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public JoystickDirection JoystickDirection;

		[Token(Token = "0x40007F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Vector2 Axis;

		[Token(Token = "0x600096F")]
		[Address(RVA = "0xF832B0", Offset = "0xF832B0", VA = "0xF832B0")]
		public void SetValue(bool isDown, Vector2 value)
		{
		}
	}
	[Token(Token = "0x20003F7")]
	public enum JoystickDirection
	{
		[Token(Token = "0x40007F8")]
		None,
		[Token(Token = "0x40007F9")]
		Up,
		[Token(Token = "0x40007FA")]
		Left,
		[Token(Token = "0x40007FB")]
		Down,
		[Token(Token = "0x40007FC")]
		Right
	}
	[Token(Token = "0x20003F8")]
	public class MonoEvents : MonoBehaviour
	{
		[Token(Token = "0x40007FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private UnityEvent onStart;

		[Token(Token = "0x40007FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private UnityEvent onEnable;

		[Token(Token = "0x40007FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private UnityEvent onDisable;

		[Token(Token = "0x6000970")]
		[Address(RVA = "0x1019774", Offset = "0x1019774", VA = "0x1019774")]
		private void Start()
		{
		}

		[Token(Token = "0x6000971")]
		[Address(RVA = "0x1019788", Offset = "0x1019788", VA = "0x1019788")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000972")]
		[Address(RVA = "0x101979C", Offset = "0x101979C", VA = "0x101979C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000973")]
		[Address(RVA = "0x10197B0", Offset = "0x10197B0", VA = "0x10197B0")]
		public MonoEvents()
		{
		}
	}
	[Token(Token = "0x20003F9")]
	public readonly struct OrientedTexture2D
	{
		[Token(Token = "0x4000800")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public readonly Texture2D Texture;

		[Token(Token = "0x4000801")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly bool IsFlippedY;

		[Token(Token = "0x1700018A")]
		public Rect UvRect
		{
			[Token(Token = "0x6000974")]
			[Address(RVA = "0x1021DEC", Offset = "0x1021DEC", VA = "0x1021DEC")]
			get
			{
				return default(Rect);
			}
		}

		[Token(Token = "0x6000975")]
		[Address(RVA = "0x10103C4", Offset = "0x10103C4", VA = "0x10103C4")]
		public OrientedTexture2D(Texture2D texture, bool isFlippedY = false)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003FA")]
	public class ParticleBehaviour
	{
		[Token(Token = "0x4000802")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ParticleSystem particleSystem;

		[Token(Token = "0x4000803")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ParticleSystemStopBehavior stopBehavior;

		[Token(Token = "0x6000976")]
		[Address(RVA = "0xFCFB2C", Offset = "0xFCFB2C", VA = "0xFCFB2C")]
		public ParticleBehaviour()
		{
		}
	}
	[Token(Token = "0x20003FB")]
	[DisallowMultipleComponent]
	public class ParticleControl : MonoBehaviour
	{
		[Token(Token = "0x4000804")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform rootTransform;

		[Token(Token = "0x4000805")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private ParticleBehaviour[] particleBehaviours;

		[Token(Token = "0x4000806")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TaskCompletionSource<bool> _stopParticlesPromise;

		[Token(Token = "0x1700018B")]
		public bool IsAlive
		{
			[Token(Token = "0x6000977")]
			[Address(RVA = "0xFCFB3C", Offset = "0xFCFB3C", VA = "0xFCFB3C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000978")]
		[Address(RVA = "0xFCFBD4", Offset = "0xFCFBD4", VA = "0xFCFBD4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000979")]
		[Address(RVA = "0xFCFC04", Offset = "0xFCFC04", VA = "0xFCFC04")]
		private void Update()
		{
		}

		[Token(Token = "0x600097A")]
		[Address(RVA = "0xFCFC98", Offset = "0xFCFC98", VA = "0xFCFC98")]
		public Task Play()
		{
			return null;
		}

		[Token(Token = "0x600097B")]
		[Address(RVA = "0xFCFE9C", Offset = "0xFCFE9C", VA = "0xFCFE9C")]
		public Task Play(Vector3 newPosition)
		{
			return null;
		}

		[Token(Token = "0x600097C")]
		[Address(RVA = "0xFCFEFC", Offset = "0xFCFEFC", VA = "0xFCFEFC")]
		public Task Stop()
		{
			return null;
		}

		[Token(Token = "0x600097D")]
		[Address(RVA = "0xFCFDAC", Offset = "0xFCFDAC", VA = "0xFCFDAC")]
		public void StopAndClear()
		{
		}

		[Token(Token = "0x600097E")]
		[Address(RVA = "0xFCFB40", Offset = "0xFCFB40", VA = "0xFCFB40")]
		private bool IsParticleSystemAlive()
		{
			return default(bool);
		}

		[Token(Token = "0x600097F")]
		[Address(RVA = "0xFCFFF8", Offset = "0xFCFFF8", VA = "0xFCFFF8")]
		public ParticleControl()
		{
		}
	}
	[Token(Token = "0x20003FC")]
	public class PlayerMonoEvents : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20003FD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBC8B48", Offset = "0xBC8B48")]
		private sealed class <>c
		{
			[Token(Token = "0x4000809")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x400080A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Cortopia.Scripts.Players.Player, bool> <>9__2_0;

			[Token(Token = "0x6000984")]
			[Address(RVA = "0x11EDEEC", Offset = "0x11EDEEC", VA = "0x11EDEEC")]
			public <>c()
			{
			}

			[Token(Token = "0x6000985")]
			[Address(RVA = "0x11EDEF4", Offset = "0x11EDEF4", VA = "0x11EDEF4")]
			internal bool <OnEnable>b__2_0(Cortopia.Scripts.Players.Player x)
			{
				return default(bool);
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20003FE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBC8B58", Offset = "0xBC8B58")]
		private struct <OnEnable>d__2 : IAsyncStateMachine
		{
			[Token(Token = "0x400080B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x400080C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x400080D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public PlayerMonoEvents <>4__this;

			[Token(Token = "0x400080E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private CancellationTokenSource <cts>5__2;

			[Token(Token = "0x400080F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private TaskAwaiter<Cortopia.Scripts.Players.Player> <>u__1;

			[Token(Token = "0x6000986")]
			[Address(RVA = "0x11EDF5C", Offset = "0x11EDF5C", VA = "0x11EDF5C", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000987")]
			[Address(RVA = "0x11EE2E0", Offset = "0x11EE2E0", VA = "0x11EE2E0", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4000807")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private UnityEvent onLocalPlayerReady;

		[Token(Token = "0x4000808")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private CancellationTokenSource _cts;

		[Token(Token = "0x6000980")]
		[Address(RVA = "0xFE94B4", Offset = "0xFE94B4", VA = "0xFE94B4")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xBDD548", Offset = "0xBDD548")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000981")]
		[Address(RVA = "0xFE9578", Offset = "0xFE9578", VA = "0xFE9578")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000982")]
		[Address(RVA = "0xFE95A8", Offset = "0xFE95A8", VA = "0xFE95A8")]
		public PlayerMonoEvents()
		{
		}
	}
	[Token(Token = "0x20003FF")]
	public static class PlayerPrefConstants
	{
		[Token(Token = "0x4000810")]
		public const string NormalizedHUDDistance = "NormalizedHUDDistance";

		[Token(Token = "0x4000811")]
		public const string NormalizedHUDHeight = "NormalizedHUDHeight";

		[Token(Token = "0x4000812")]
		public const string NormalizedHUDScale = "NormalizedHUDScale";

		[Token(Token = "0x4000813")]
		public const string MusicVolume = "MusicVolume";

		[Token(Token = "0x4000814")]
		public const string EffectsVolume = "EffectsVolume";

		[Token(Token = "0x4000815")]
		public const string VoiceChatVolume = "VoiceChatVolume";

		[Token(Token = "0x4000816")]
		public const string ShowSubtitles = "ShowSubtitles";

		[Token(Token = "0x4000817")]
		public const string ShowControlInGame = "ShowControlInGame";

		[Token(Token = "0x4000818")]
		public const string SnapTurning = "SnapTurning";

		[Token(Token = "0x4000819")]
		public const string SnapTurningAngle = "SnapTurningAngle";

		[Token(Token = "0x400081A")]
		public const string ViewedNewsFeedItems = "ViewedNewsFeedItems";
	}
	[Token(Token = "0x2000400")]
	public class QuantumTileUtils
	{
		[Token(Token = "0x6000988")]
		[Address(RVA = "0x12533F8", Offset = "0x12533F8", VA = "0x12533F8")]
		public static Vector3? GetLanternPosition(Frame frame, EntityRef tileEntity)
		{
			return null;
		}

		[Token(Token = "0x6000989")]
		[Address(RVA = "0x1253538", Offset = "0x1253538", VA = "0x1253538")]
		public QuantumTileUtils()
		{
		}
	}
	[Token(Token = "0x2000401")]
	public struct ResourceAssetPaths
	{
		[Token(Token = "0x400081B")]
		public const string BuildSettings = "JawsBuildSettings";

		[Token(Token = "0x400081C")]
		public const string VisualGameConstants = "VisualGameConstants";
	}
	[Serializable]
	[Token(Token = "0x2000402")]
	public struct StringDescriptionArgument
	{
		[Token(Token = "0x400081D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string elementName;

		[Token(Token = "0x400081E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string elementValue;

		[Token(Token = "0x400081F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Color elementColor;
	}
	[Token(Token = "0x2000403")]
	public static class TaskExtensions
	{
		[StructLayout(3)]
		[Token(Token = "0x2000404")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBC8B78", Offset = "0xBC8B78")]
		private struct <LogException>d__0<T> : IAsyncStateMachine
		{
			[Token(Token = "0x4000820")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000821")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public AsyncTaskMethodBuilder<T> <>t__builder;

			[Token(Token = "0x4000822")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Task<T> task;

			[Token(Token = "0x4000823")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private TaskAwaiter<T> <>u__1;

			[Token(Token = "0x6000992")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000993")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000405")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBC8B88", Offset = "0xBC8B88")]
		private struct <LogException>d__1 : IAsyncStateMachine
		{
			[Token(Token = "0x4000824")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000825")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x4000826")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Task task;

			[Token(Token = "0x4000827")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x6000994")]
			[Address(RVA = "0x106459C", Offset = "0x106459C", VA = "0x106459C", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000995")]
			[Address(RVA = "0x1064828", Offset = "0x1064828", VA = "0x1064828", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000406")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBC8B98", Offset = "0xBC8B98")]
		private struct <MuteException>d__2 : IAsyncStateMachine
		{
			[Token(Token = "0x4000828")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000829")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x400082A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Task task;

			[Token(Token = "0x400082B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x6000996")]
			[Address(RVA = "0x1064834", Offset = "0x1064834", VA = "0x1064834", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000997")]
			[Address(RVA = "0x1064A64", Offset = "0x1064A64", VA = "0x1064A64", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000407")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBC8BA8", Offset = "0xBC8BA8")]
		private struct <RetryWith>d__3<T> : IAsyncStateMachine
		{
			[Token(Token = "0x400082C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x400082D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public AsyncTaskMethodBuilder<T> <>t__builder;

			[Token(Token = "0x400082E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Func<Task<T>> task;

			[Token(Token = "0x400082F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IConnectionProblemNotification notification;

			[Token(Token = "0x4000830")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action rollBack;

			[Token(Token = "0x4000831")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int msRetryWait;

			[Token(Token = "0x4000832")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private bool <retrying>5__2;

			[Token(Token = "0x4000833")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private TaskAwaiter<T> <>u__1;

			[Token(Token = "0x4000834")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private TaskAwaiter <>u__2;

			[Token(Token = "0x6000998")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000999")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000408")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBC8BB8", Offset = "0xBC8BB8")]
		private struct <RetryWith>d__4 : IAsyncStateMachine
		{
			[Token(Token = "0x4000835")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000836")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x4000837")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Func<Task> task;

			[Token(Token = "0x4000838")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public IConnectionProblemNotification notification;

			[Token(Token = "0x4000839")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Action rollBack;

			[Token(Token = "0x400083A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public int msRetryWait;

			[Token(Token = "0x400083B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private bool <retrying>5__2;

			[Token(Token = "0x400083C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x600099A")]
			[Address(RVA = "0x1064FB0", Offset = "0x1064FB0", VA = "0x1064FB0", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x600099B")]
			[Address(RVA = "0x106559C", Offset = "0x106559C", VA = "0x106559C", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000409")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBC8BC8", Offset = "0xBC8BC8")]
		private struct <Retry>d__5<T> : IAsyncStateMachine
		{
			[Token(Token = "0x400083D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x400083E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public AsyncTaskMethodBuilder<T> <>t__builder;

			[Token(Token = "0x400083F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Func<Task<T>> task;

			[Token(Token = "0x4000840")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IConnectionProblemNotification notification;

			[Token(Token = "0x4000841")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int msRetryWait;

			[Token(Token = "0x4000842")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private bool <retrying>5__2;

			[Token(Token = "0x4000843")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private TaskAwaiter<T> <>u__1;

			[Token(Token = "0x4000844")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private TaskAwaiter <>u__2;

			[Token(Token = "0x600099C")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x600099D")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x200040A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBC8BD8", Offset = "0xBC8BD8")]
		private struct <Retry>d__6 : IAsyncStateMachine
		{
			[Token(Token = "0x4000845")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000846")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x4000847")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Func<Task> task;

			[Token(Token = "0x4000848")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public IConnectionProblemNotification notification;

			[Token(Token = "0x4000849")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public int msRetryWait;

			[Token(Token = "0x400084A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private bool <retrying>5__2;

			[Token(Token = "0x400084B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x600099E")]
			[Address(RVA = "0x1064A70", Offset = "0x1064A70", VA = "0x1064A70", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x600099F")]
			[Address(RVA = "0x1064FA4", Offset = "0x1064FA4", VA = "0x1064FA4", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x200040B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBC8BE8", Offset = "0xBC8BE8")]
		private struct <MuteException>d__7<TException> : IAsyncStateMachine where TException : Exception
		{
			[Token(Token = "0x400084C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x400084D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x400084E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Task task;

			[Token(Token = "0x400084F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x60009A0")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x60009A1")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x600098A")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xBDD5B8", Offset = "0xBDD5B8")]
		public static Task<T> LogException<T>(this Task<T> task)
		{
			return null;
		}

		[Token(Token = "0x600098B")]
		[Address(RVA = "0x1152B64", Offset = "0x1152B64", VA = "0x1152B64")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xBDD628", Offset = "0xBDD628")]
		public static Task LogException(this Task task)
		{
			return null;
		}

		[Token(Token = "0x600098C")]
		[Address(RVA = "0x1152C68", Offset = "0x1152C68", VA = "0x1152C68")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xBDD698", Offset = "0xBDD698")]
		public static Task MuteException(this Task task)
		{
			return null;
		}

		[Token(Token = "0x600098D")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xBDD708", Offset = "0xBDD708")]
		public static Task<T> RetryWith<T>(this Func<Task<T>> task, Action rollBack, IConnectionProblemNotification notification, int msRetryWait = 1000)
		{
			return null;
		}

		[Token(Token = "0x600098E")]
		[Address(RVA = "0x1152D6C", Offset = "0x1152D6C", VA = "0x1152D6C")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xBDD778", Offset = "0xBDD778")]
		public static Task RetryWith(this Func<Task> task, Action rollBack, IConnectionProblemNotification notification, int msRetryWait = 1000)
		{
			return null;
		}

		[Token(Token = "0x600098F")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xBDD7E8", Offset = "0xBDD7E8")]
		public static Task<T> Retry<T>(this Func<Task<T>> task, IConnectionProblemNotification notification, int msRetryWait = 1000)
		{
			return null;
		}

		[Token(Token = "0x6000990")]
		[Address(RVA = "0x1152E98", Offset = "0x1152E98", VA = "0x1152E98")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xBDD858", Offset = "0xBDD858")]
		public static Task Retry(this Func<Task> task, IConnectionProblemNotification notification, int msRetryWait = 1000)
		{
			return null;
		}

		[Token(Token = "0x6000991")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xBDD8C8", Offset = "0xBDD8C8")]
		public static Task MuteException<TException>(this Task task) where TException : Exception
		{
			return null;
		}
	}
	[Token(Token = "0x200040C")]
	public class TileConnectionFilter : MonoBehaviour
	{
		[Token(Token = "0x4000850")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public List<GameObject> whiteList;

		[Token(Token = "0x4000851")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		public List<GameObject> blackList;

		[Token(Token = "0x60009A2")]
		[Address(RVA = "0x1157080", Offset = "0x1157080", VA = "0x1157080")]
		public TileConnectionFilter()
		{
		}
	}
	[Token(Token = "0x200040D")]
	public static class TransformExtrapolator
	{
		[Token(Token = "0x4000852")]
		private const int MaxExtrapolationFrames = 36;

		[Token(Token = "0x60009A3")]
		[Address(RVA = "0x1159648", Offset = "0x1159648", VA = "0x1159648")]
		public static (Vector3, Quaternion, bool) GetTransform(QuantumGame game, EntityRef entity, bool useClockAliasingInterpolation)
		{
			return default((Vector3, Quaternion, bool));
		}

		[Token(Token = "0x60009A4")]
		[Address(RVA = "0x115997C", Offset = "0x115997C", VA = "0x115997C")]
		public static (Vector3, Quaternion, bool) GetNonExtrapolatedTransform(QuantumGame game, EntityRef entity)
		{
			return default((Vector3, Quaternion, bool));
		}
	}
	[Serializable]
	[Token(Token = "0x200040E")]
	public struct VirtualLocator
	{
		[Token(Token = "0x4000853")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xBD0BB0", Offset = "0xBD0BB0")]
		public Vector3 position;

		[Token(Token = "0x4000854")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xBD0BE8", Offset = "0xBD0BE8")]
		public Quaternion rotation;

		[Token(Token = "0x60009A5")]
		[Address(RVA = "0x113488C", Offset = "0x113488C", VA = "0x113488C")]
		public VirtualLocator(Vector3 position, Quaternion rotation)
		{
		}

		[Token(Token = "0x60009A6")]
		[Address(RVA = "0x11348A0", Offset = "0x11348A0", VA = "0x11348A0")]
		public void SetValues(Vector3 newPosition, Quaternion newRotation)
		{
		}

		[Token(Token = "0x60009A7")]
		[Address(RVA = "0x11348B4", Offset = "0x11348B4", VA = "0x11348B4")]
		public void SetValues(VirtualLocator locator)
		{
		}

		[Token(Token = "0x60009A8")]
		[Address(RVA = "0x11348D0", Offset = "0x11348D0", VA = "0x11348D0")]
		public void SetValues(VirtualTransform virtualTransform)
		{
		}

		[Token(Token = "0x60009A9")]
		[Address(RVA = "0x11348EC", Offset = "0x11348EC", VA = "0x11348EC")]
		public void SetValues(Transform transform, Space space)
		{
		}

		[Token(Token = "0x60009AA")]
		[Address(RVA = "0x113495C", Offset = "0x113495C", VA = "0x113495C")]
		public static explicit operator VirtualLocator(Transform transform)
		{
			return default(VirtualLocator);
		}
	}
	[Serializable]
	[Token(Token = "0x200040F")]
	public struct VirtualTransform
	{
		[Token(Token = "0x4000855")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xBD0C20", Offset = "0xBD0C20")]
		public Vector3 position;

		[Token(Token = "0x4000856")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xBD0C58", Offset = "0xBD0C58")]
		public Quaternion rotation;

		[Token(Token = "0x4000857")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xBD0C90", Offset = "0xBD0C90")]
		public Vector3 scale;

		[Token(Token = "0x60009AB")]
		[Address(RVA = "0x11349C4", Offset = "0x11349C4", VA = "0x11349C4")]
		public VirtualTransform(Vector3 position, Quaternion rotation, Vector3 scale)
		{
		}

		[Token(Token = "0x60009AC")]
		[Address(RVA = "0x11349E8", Offset = "0x11349E8", VA = "0x11349E8")]
		public void SetValues(Vector3 newPosition, Quaternion newRotation)
		{
		}

		[Token(Token = "0x60009AD")]
		[Address(RVA = "0x11349FC", Offset = "0x11349FC", VA = "0x11349FC")]
		public void SetValues(Vector3 newPosition, Quaternion newRotation, Vector3 newScale)
		{
		}

		[Token(Token = "0x60009AE")]
		[Address(RVA = "0x1134A20", Offset = "0x1134A20", VA = "0x1134A20")]
		public void SetValues(VirtualTransform virtualTransform)
		{
		}

		[Token(Token = "0x60009AF")]
		[Address(RVA = "0x1134A4C", Offset = "0x1134A4C", VA = "0x1134A4C")]
		public void SetValues(Transform transform, Space space)
		{
		}

		[Token(Token = "0x60009B0")]
		[Address(RVA = "0x1134AD0", Offset = "0x1134AD0", VA = "0x1134AD0")]
		public static explicit operator VirtualTransform(Transform transform)
		{
			return default(VirtualTransform);
		}

		[Token(Token = "0x60009B1")]
		[Address(RVA = "0x1134B68", Offset = "0x1134B68", VA = "0x1134B68")]
		public static explicit operator VirtualTransform(VirtualLocator locator)
		{
			return default(VirtualTransform);
		}
	}
}
namespace Cortopia.Scripts.Utils.Reactors
{
	[Token(Token = "0x2000410")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xBC8BF8", Offset = "0xBC8BF8")]
	public class AnimatorBoolReactor : MonoBehaviour
	{
		[Token(Token = "0x4000858")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly int IsActive;

		[Token(Token = "0x4000859")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private BoundValue<bool> isActive;

		[Token(Token = "0x400085A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private bool invert;

		[Token(Token = "0x400085B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		[Cortopia.Scripts.CustomAttributes.ReadOnly]
		private Animator animator;

		[Token(Token = "0x400085C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private ReactiveSubscription _subscription;

		[Token(Token = "0x60009B2")]
		[Address(RVA = "0x1328C7C", Offset = "0x1328C7C", VA = "0x1328C7C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60009B3")]
		[Address(RVA = "0x1328D68", Offset = "0x1328D68", VA = "0x1328D68")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60009B4")]
		[Address(RVA = "0x1328D74", Offset = "0x1328D74", VA = "0x1328D74")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x60009B5")]
		[Address(RVA = "0x1328E08", Offset = "0x1328E08", VA = "0x1328E08")]
		public AnimatorBoolReactor()
		{
		}

		[Token(Token = "0x60009B7")]
		[Address(RVA = "0x1328E7C", Offset = "0x1328E7C", VA = "0x1328E7C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDD9B8", Offset = "0xBDD9B8")]
		private void <OnEnable>b__5_0(bool x)
		{
		}
	}
	[Token(Token = "0x2000411")]
	public class BoolReactor : MonoBehaviour
	{
		[Token(Token = "0x400085D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private BoundValue<bool> boolValue;

		[Token(Token = "0x400085E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBD0D30", Offset = "0xBD0D30")]
		[SerializeField]
		private UnityEvent<bool> onChanged;

		[Token(Token = "0x400085F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private UnityEvent onTrue;

		[Token(Token = "0x4000860")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private UnityEvent onFalse;

		[Token(Token = "0x4000861")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private ReactiveSubscription _subscription;

		[Token(Token = "0x60009B8")]
		[Address(RVA = "0x1332F98", Offset = "0x1332F98", VA = "0x1332F98")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60009B9")]
		[Address(RVA = "0x13330A0", Offset = "0x13330A0", VA = "0x13330A0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60009BA")]
		[Address(RVA = "0x13330AC", Offset = "0x13330AC", VA = "0x13330AC")]
		public BoolReactor()
		{
		}

		[Token(Token = "0x60009BB")]
		[Address(RVA = "0x13330B4", Offset = "0x13330B4", VA = "0x13330B4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDD9C8", Offset = "0xBDD9C8")]
		private void <OnEnable>b__5_0(bool x)
		{
		}
	}
	[Token(Token = "0x2000412")]
	public class EntityGameObjectToggle : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000413")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBC8C58", Offset = "0xBC8C58")]
		private sealed class <>c
		{
			[Token(Token = "0x4000865")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000866")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<EntityRef, bool> <>9__4_0;

			[Token(Token = "0x60009C2")]
			[Address(RVA = "0x102B7F8", Offset = "0x102B7F8", VA = "0x102B7F8")]
			public <>c()
			{
			}

			[Token(Token = "0x60009C3")]
			[Address(RVA = "0x102B800", Offset = "0x102B800", VA = "0x102B800")]
			internal bool <get_HasValidEntity>b__4_0(EntityRef x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000862")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private BoundValue<EntityRef> entityRef;

		[Token(Token = "0x4000863")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject toggleGameObject;

		[Token(Token = "0x4000864")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private ReactiveSubscription _subscription;

		[Token(Token = "0x1700018C")]
		public Reactive<bool> HasValidEntity
		{
			[Token(Token = "0x60009BC")]
			[Address(RVA = "0x104A098", Offset = "0x104A098", VA = "0x104A098")]
			get
			{
				return default(Reactive<bool>);
			}
		}

		[Token(Token = "0x60009BD")]
		[Address(RVA = "0x104A1E4", Offset = "0x104A1E4", VA = "0x104A1E4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60009BE")]
		[Address(RVA = "0x104A2D0", Offset = "0x104A2D0", VA = "0x104A2D0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60009BF")]
		[Address(RVA = "0x104A2DC", Offset = "0x104A2DC", VA = "0x104A2DC")]
		public EntityGameObjectToggle()
		{
		}

		[Token(Token = "0x60009C0")]
		[Address(RVA = "0x104A2E4", Offset = "0x104A2E4", VA = "0x104A2E4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDD9D8", Offset = "0xBDD9D8")]
		private void <OnEnable>b__5_0(EntityRef x)
		{
		}
	}
	[Token(Token = "0x2000414")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xBC8C68", Offset = "0xBC8C68")]
	public class GraphicColorBoolReactor : MonoBehaviour
	{
		[Token(Token = "0x4000867")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private BoundValue<bool> boolValue;

		[Token(Token = "0x4000868")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Color trueColor;

		[Token(Token = "0x4000869")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Color falseColor;

		[Token(Token = "0x400086A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		[Cortopia.Scripts.CustomAttributes.ReadOnly]
		private Graphic graphic;

		[Token(Token = "0x400086B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private ReactiveSubscription _subscription;

		[Token(Token = "0x60009C4")]
		[Address(RVA = "0xFAA488", Offset = "0xFAA488", VA = "0xFAA488")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60009C5")]
		[Address(RVA = "0xFAA574", Offset = "0xFAA574", VA = "0xFAA574")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60009C6")]
		[Address(RVA = "0xFAA580", Offset = "0xFAA580", VA = "0xFAA580")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x60009C7")]
		[Address(RVA = "0xFAA614", Offset = "0xFAA614", VA = "0xFAA614")]
		public GraphicColorBoolReactor()
		{
		}

		[Token(Token = "0x60009C8")]
		[Address(RVA = "0xFAA61C", Offset = "0xFAA61C", VA = "0xFAA61C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDD9E8", Offset = "0xBDD9E8")]
		private void <OnEnable>b__5_0(bool x)
		{
		}
	}
	[Token(Token = "0x2000415")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xBC8CC8", Offset = "0xBC8CC8")]
	public class GraphicColorRankReactor : MonoBehaviour
	{
		[Token(Token = "0x400086C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private BoundValue<PlayerRank> boolValue;

		[Token(Token = "0x400086D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Color[] rankColors;

		[Token(Token = "0x400086E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Cortopia.Scripts.CustomAttributes.ReadOnly]
		[SerializeField]
		private Graphic graphic;

		[Token(Token = "0x400086F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private ReactiveSubscription _subscription;

		[Token(Token = "0x60009C9")]
		[Address(RVA = "0xFAA680", Offset = "0xFAA680", VA = "0xFAA680")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60009CA")]
		[Address(RVA = "0xFAA76C", Offset = "0xFAA76C", VA = "0xFAA76C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60009CB")]
		[Address(RVA = "0xFAA778", Offset = "0xFAA778", VA = "0xFAA778")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x60009CC")]
		[Address(RVA = "0xFAA80C", Offset = "0xFAA80C", VA = "0xFAA80C")]
		public GraphicColorRankReactor()
		{
		}

		[Token(Token = "0x60009CD")]
		[Address(RVA = "0xFAA814", Offset = "0xFAA814", VA = "0xFAA814")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDD9F8", Offset = "0xBDD9F8")]
		private void <OnEnable>b__4_0(PlayerRank x)
		{
		}
	}
	[Token(Token = "0x2000416")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xBC8D28", Offset = "0xBC8D28")]
	public class ImageSpriteRankReactor : MonoBehaviour
	{
		[Token(Token = "0x4000870")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private BoundValue<PlayerRank> boolValue;

		[Token(Token = "0x4000871")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[AttributeAttribute(Name = "EnumArrayAttribute", RVA = "0xBD0E8C", Offset = "0xBD0E8C")]
		private Sprite[] rankSprites;

		[Token(Token = "0x4000872")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Cortopia.Scripts.CustomAttributes.ReadOnly]
		[SerializeField]
		private Image image;

		[Token(Token = "0x4000873")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private ReactiveSubscription _subscription;

		[Token(Token = "0x60009CE")]
		[Address(RVA = "0xFB4640", Offset = "0xFB4640", VA = "0xFB4640")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60009CF")]
		[Address(RVA = "0xFB472C", Offset = "0xFB472C", VA = "0xFB472C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60009D0")]
		[Address(RVA = "0xFB4738", Offset = "0xFB4738", VA = "0xFB4738")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x60009D1")]
		[Address(RVA = "0xFB47CC", Offset = "0xFB47CC", VA = "0xFB47CC")]
		public ImageSpriteRankReactor()
		{
		}

		[Token(Token = "0x60009D2")]
		[Address(RVA = "0xFB47D4", Offset = "0xFB47D4", VA = "0xFB47D4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDDA08", Offset = "0xBDDA08")]
		private void <OnEnable>b__4_0(PlayerRank x)
		{
		}
	}
	[Token(Token = "0x2000417")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xBC8D88", Offset = "0xBC8D88")]
	public class LineRendererGradientReactor : MonoBehaviour
	{
		[Token(Token = "0x4000874")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private BoundValue<bool> boolReactive;

		[Token(Token = "0x4000875")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Gradient trueColor;

		[Token(Token = "0x4000876")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Gradient falseColor;

		[Token(Token = "0x4000877")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private LineRenderer _lineRenderer;

		[Token(Token = "0x4000878")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private ReactiveSubscription _subscription;

		[Token(Token = "0x60009D3")]
		[Address(RVA = "0xF863C4", Offset = "0xF863C4", VA = "0xF863C4")]
		private void Awake()
		{
		}

		[Token(Token = "0x60009D4")]
		[Address(RVA = "0xF86418", Offset = "0xF86418", VA = "0xF86418")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60009D5")]
		[Address(RVA = "0xF86504", Offset = "0xF86504", VA = "0xF86504")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60009D6")]
		[Address(RVA = "0xF86510", Offset = "0xF86510", VA = "0xF86510")]
		public LineRendererGradientReactor()
		{
		}

		[Token(Token = "0x60009D7")]
		[Address(RVA = "0xF86518", Offset = "0xF86518", VA = "0xF86518")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDDA18", Offset = "0xBDDA18")]
		private void <OnEnable>b__6_0(bool x)
		{
		}
	}
	[Token(Token = "0x2000418")]
	public class MaterialHighlightReactor : MonoBehaviour
	{
		[Token(Token = "0x4000879")]
		private const string Keyword = "_ISHIGHLIGHT_ON";

		[Token(Token = "0x400087A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private BoundValue<bool> isHighlighted;

		[Token(Token = "0x400087B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Renderer[] highlightRenderers;

		[Token(Token = "0x400087C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private ReactiveSubscription _subscription;

		[Token(Token = "0x60009D8")]
		[Address(RVA = "0x1016B28", Offset = "0x1016B28", VA = "0x1016B28")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60009D9")]
		[Address(RVA = "0x1016C14", Offset = "0x1016C14", VA = "0x1016C14")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60009DA")]
		[Address(RVA = "0x1016C20", Offset = "0x1016C20", VA = "0x1016C20")]
		private void OnChangedValue(bool newIsHighlighted)
		{
		}

		[Token(Token = "0x60009DB")]
		[Address(RVA = "0x1016D20", Offset = "0x1016D20", VA = "0x1016D20")]
		public MaterialHighlightReactor()
		{
		}
	}
	[Token(Token = "0x2000419")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xBC8DE8", Offset = "0xBC8DE8")]
	public class NormalizedFloatLerpReactor : MonoBehaviour
	{
		[Token(Token = "0x400087D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private BoundValue<float> normalizedFloat;

		[Token(Token = "0x400087E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Vector3 localStartPosition;

		[Token(Token = "0x400087F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private Vector3 localEndPosition;

		[Token(Token = "0x4000880")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private ReactiveSubscription _subscription;

		[Token(Token = "0x60009DC")]
		[Address(RVA = "0x101DFD4", Offset = "0x101DFD4", VA = "0x101DFD4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60009DD")]
		[Address(RVA = "0x101E0C0", Offset = "0x101E0C0", VA = "0x101E0C0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60009DE")]
		[Address(RVA = "0x101E0CC", Offset = "0x101E0CC", VA = "0x101E0CC")]
		public NormalizedFloatLerpReactor()
		{
		}

		[Token(Token = "0x60009DF")]
		[Address(RVA = "0x101E0D4", Offset = "0x101E0D4", VA = "0x101E0D4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDDA28", Offset = "0xBDDA28")]
		private void <OnEnable>b__4_0(float x)
		{
		}
	}
	[Token(Token = "0x200041A")]
	public class NormalizedFloatScaleReactor : MonoBehaviour
	{
		[Token(Token = "0x4000881")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private BoundValue<float> normalizedValue;

		[Token(Token = "0x4000882")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AnimationCurve interpolation;

		[Token(Token = "0x4000883")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private bool isInverted;

		[Token(Token = "0x4000884")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Vector3 _startingLocalScale;

		[Token(Token = "0x4000885")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private ReactiveSubscription _subscription;

		[Token(Token = "0x60009E0")]
		[Address(RVA = "0x101E160", Offset = "0x101E160", VA = "0x101E160")]
		private void Awake()
		{
		}

		[Token(Token = "0x60009E1")]
		[Address(RVA = "0x101E19C", Offset = "0x101E19C", VA = "0x101E19C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60009E2")]
		[Address(RVA = "0x101E288", Offset = "0x101E288", VA = "0x101E288")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60009E3")]
		[Address(RVA = "0x101E294", Offset = "0x101E294", VA = "0x101E294")]
		public NormalizedFloatScaleReactor()
		{
		}

		[Token(Token = "0x60009E4")]
		[Address(RVA = "0x101E29C", Offset = "0x101E29C", VA = "0x101E29C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDDA38", Offset = "0xBDDA38")]
		private void <OnEnable>b__6_0(float x)
		{
		}
	}
	[Token(Token = "0x200041B")]
	public class PostMatchWaitingQueue : MonoBehaviour
	{
		[Token(Token = "0x4000886")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private BoundValue<MatchStatisticsData> statistics;

		[Token(Token = "0x4000887")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private BoundValue<EntityRef> entityRef;

		[Token(Token = "0x4000888")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject toggleGameObject;

		[Token(Token = "0x4000889")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private ReactiveSubscription _subscription;

		[Token(Token = "0x60009E5")]
		[Address(RVA = "0x111ADC4", Offset = "0x111ADC4", VA = "0x111ADC4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60009E6")]
		[Address(RVA = "0x111AEB0", Offset = "0x111AEB0", VA = "0x111AEB0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60009E7")]
		[Address(RVA = "0x111AEBC", Offset = "0x111AEBC", VA = "0x111AEBC")]
		public PostMatchWaitingQueue()
		{
		}

		[Token(Token = "0x60009E8")]
		[Address(RVA = "0x111AEC4", Offset = "0x111AEC4", VA = "0x111AEC4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDDA48", Offset = "0xBDDA48")]
		private void <OnEnable>b__4_0(EntityRef x)
		{
		}
	}
	[Token(Token = "0x200041C")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xBC8E48", Offset = "0xBC8E48")]
	public class SpellColorReactor : MonoBehaviour
	{
		[Token(Token = "0x400088A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private BoundValue<SpellElement> spellElement;

		[Token(Token = "0x400088B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private ElementColorVariant variant;

		[Token(Token = "0x400088C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Cortopia.Scripts.CustomAttributes.ReadOnly]
		[SerializeField]
		private Graphic graphic;

		[Token(Token = "0x400088D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private ReactiveSubscription _subscription;

		[Token(Token = "0x60009E9")]
		[Address(RVA = "0x12049F8", Offset = "0x12049F8", VA = "0x12049F8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60009EA")]
		[Address(RVA = "0x1204AE4", Offset = "0x1204AE4", VA = "0x1204AE4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60009EB")]
		[Address(RVA = "0x1204AF0", Offset = "0x1204AF0", VA = "0x1204AF0")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x60009EC")]
		[Address(RVA = "0x1204B84", Offset = "0x1204B84", VA = "0x1204B84")]
		private void OnSpellElementChanged(SpellElement newElement)
		{
		}

		[Token(Token = "0x60009ED")]
		[Address(RVA = "0x1204D74", Offset = "0x1204D74", VA = "0x1204D74")]
		private static Color GetElementColorVariant(SpellElementColors colorSettings, ElementColorVariant variant)
		{
			return default(Color);
		}

		[Token(Token = "0x60009EE")]
		[Address(RVA = "0x1204E34", Offset = "0x1204E34", VA = "0x1204E34")]
		public SpellColorReactor()
		{
		}
	}
	[Token(Token = "0x200041D")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xBC8EA8", Offset = "0xBC8EA8")]
	public class SpellElementColorReactor : MonoBehaviour
	{
		[Token(Token = "0x400088E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private BoundValue<SpellElement> element;

		[Token(Token = "0x400088F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private BoundValue<bool> isActive;

		[Token(Token = "0x4000890")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private bool allowInActiveState;

		[Token(Token = "0x4000891")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private ElementColorVariant colorVariant;

		[Token(Token = "0x4000892")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[Cortopia.Scripts.CustomAttributes.ReadOnly]
		[SerializeField]
		private Image image;

		[Token(Token = "0x4000893")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private ReactiveSubscription _subscription;

		[Token(Token = "0x60009EF")]
		[Address(RVA = "0x120506C", Offset = "0x120506C", VA = "0x120506C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60009F0")]
		[Address(RVA = "0x12051A8", Offset = "0x12051A8", VA = "0x12051A8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60009F1")]
		[Address(RVA = "0x12051B4", Offset = "0x12051B4", VA = "0x12051B4")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x60009F2")]
		[Address(RVA = "0x1205284", Offset = "0x1205284", VA = "0x1205284")]
		public SpellElementColorReactor()
		{
		}

		[Token(Token = "0x60009F3")]
		[Address(RVA = "0x120528C", Offset = "0x120528C", VA = "0x120528C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDDA58", Offset = "0xBDDA58")]
		private void <OnEnable>b__6_0((SpellElement, bool) x)
		{
		}
	}
	[Token(Token = "0x200041E")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xBC8F08", Offset = "0xBC8F08")]
	public class SpellElementSpriteColorReactor : MonoBehaviour
	{
		[Token(Token = "0x4000894")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private BoundValue<SpellElement> element;

		[Token(Token = "0x4000895")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private BoundValue<bool> isActive;

		[Token(Token = "0x4000896")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private bool allowInActiveState;

		[Token(Token = "0x4000897")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private ElementColorVariant colorVariant;

		[Token(Token = "0x4000898")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		[Cortopia.Scripts.CustomAttributes.ReadOnly]
		private SpriteRenderer spriteRenderer;

		[Token(Token = "0x4000899")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private ReactiveSubscription _subscription;

		[Token(Token = "0x60009F4")]
		[Address(RVA = "0x12054E0", Offset = "0x12054E0", VA = "0x12054E0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60009F5")]
		[Address(RVA = "0x120561C", Offset = "0x120561C", VA = "0x120561C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60009F6")]
		[Address(RVA = "0x1205628", Offset = "0x1205628", VA = "0x1205628")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x60009F7")]
		[Address(RVA = "0x12056F8", Offset = "0x12056F8", VA = "0x12056F8")]
		public SpellElementSpriteColorReactor()
		{
		}

		[Token(Token = "0x60009F8")]
		[Address(RVA = "0x1205700", Offset = "0x1205700", VA = "0x1205700")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDDA68", Offset = "0xBDDA68")]
		private void <OnEnable>b__6_0((SpellElement, bool) x)
		{
		}
	}
	[Token(Token = "0x200041F")]
	public class SpriteColorReactor : MonoBehaviour
	{
		[Token(Token = "0x400089A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private BoundValue<bool> boolReactive;

		[Token(Token = "0x400089B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Color trueColor;

		[Token(Token = "0x400089C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Color falseColor;

		[Token(Token = "0x400089D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private SpriteRenderer _spriteRenderer;

		[Token(Token = "0x400089E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private ReactiveSubscription _subscription;

		[Token(Token = "0x60009F9")]
		[Address(RVA = "0x1149838", Offset = "0x1149838", VA = "0x1149838")]
		private void Awake()
		{
		}

		[Token(Token = "0x60009FA")]
		[Address(RVA = "0x114988C", Offset = "0x114988C", VA = "0x114988C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60009FB")]
		[Address(RVA = "0x1149978", Offset = "0x1149978", VA = "0x1149978")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60009FC")]
		[Address(RVA = "0x1149984", Offset = "0x1149984", VA = "0x1149984")]
		public SpriteColorReactor()
		{
		}

		[Token(Token = "0x60009FD")]
		[Address(RVA = "0x114998C", Offset = "0x114998C", VA = "0x114998C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDDA78", Offset = "0xBDDA78")]
		private void <OnEnable>b__6_0(bool x)
		{
		}
	}
	[Token(Token = "0x2000420")]
	public class SpriteRadialFillReactor : MonoBehaviour
	{
		[Token(Token = "0x400089F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly int ArcEnd;

		[Token(Token = "0x40008A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private BoundValue<float> normalizedFloat;

		[Token(Token = "0x40008A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[Cortopia.Scripts.CustomAttributes.ReadOnly]
		private SpriteRenderer spriteRenderer;

		[Token(Token = "0x40008A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private ReactiveSubscription _subscription;

		[Token(Token = "0x60009FE")]
		[Address(RVA = "0x1149B50", Offset = "0x1149B50", VA = "0x1149B50")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60009FF")]
		[Address(RVA = "0x1149D60", Offset = "0x1149D60", VA = "0x1149D60")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000A00")]
		[Address(RVA = "0x1149D6C", Offset = "0x1149D6C", VA = "0x1149D6C")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6000A01")]
		[Address(RVA = "0x1149E3C", Offset = "0x1149E3C", VA = "0x1149E3C")]
		public SpriteRadialFillReactor()
		{
		}

		[Token(Token = "0x6000A03")]
		[Address(RVA = "0x1149EB0", Offset = "0x1149EB0", VA = "0x1149EB0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDDA88", Offset = "0xBDDA88")]
		private void <OnEnable>b__4_0(float x)
		{
		}
	}
	[Token(Token = "0x2000421")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xBC8F68", Offset = "0xBC8F68")]
	public class SpriteRendererSpriteReactor : MonoBehaviour
	{
		[Token(Token = "0x40008A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private BoundValue<Sprite> sprite;

		[Token(Token = "0x40008A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[Cortopia.Scripts.CustomAttributes.ReadOnly]
		private SpriteRenderer spriteRenderer;

		[Token(Token = "0x40008A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private ReactiveSubscription _subscription;

		[Token(Token = "0x6000A04")]
		[Address(RVA = "0x1149FAC", Offset = "0x1149FAC", VA = "0x1149FAC")]
		private void Start()
		{
		}

		[Token(Token = "0x6000A05")]
		[Address(RVA = "0x114A098", Offset = "0x114A098", VA = "0x114A098")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000A06")]
		[Address(RVA = "0x114A0A4", Offset = "0x114A0A4", VA = "0x114A0A4")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6000A07")]
		[Address(RVA = "0x114A174", Offset = "0x114A174", VA = "0x114A174")]
		public SpriteRendererSpriteReactor()
		{
		}

		[Token(Token = "0x6000A08")]
		[Address(RVA = "0x114A17C", Offset = "0x114A17C", VA = "0x114A17C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDDA98", Offset = "0xBDDA98")]
		private void <Start>b__3_0(Sprite x)
		{
		}
	}
}
namespace Cortopia.Scripts.Utils.Reactive
{
	[Token(Token = "0x2000422")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0xBC8FC8", Offset = "0xBC8FC8")]
	public struct ArraySnapshot<T> : IReadOnlyList<T>, IEnumerable<T>, IEnumerable, IReadOnlyCollection<T>, IEquatable<ArraySnapshot<T>>
	{
		[Token(Token = "0x2000423")]
		public struct Enumerator : IEnumerator<T>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40008A8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private ArraySnapshot<T> _snapshot;

			[Token(Token = "0x40008A9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int _index;

			[Token(Token = "0x1700018F")]
			public T Current
			{
				[Token(Token = "0x6000A19")]
				get
				{
					return (T)null;
				}
			}

			[Token(Token = "0x17000190")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000A1A")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000A16")]
			public Enumerator(ArraySnapshot<T> snapshot)
			{
			}

			[Token(Token = "0x6000A17")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000A18")]
			public void Reset()
			{
			}

			[Token(Token = "0x6000A1B")]
			public void Dispose()
			{
			}
		}

		[Token(Token = "0x40008A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly VersionedArray<T> _source;

		[Token(Token = "0x40008A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly ulong _version;

		[Token(Token = "0x1700018D")]
		public int Count
		{
			[Token(Token = "0x6000A0D")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700018E")]
		public T Item
		{
			[Token(Token = "0x6000A0F")]
			get
			{
				return (T)null;
			}
		}

		[Token(Token = "0x6000A09")]
		public ArraySnapshot(VersionedArray<T> source)
		{
		}

		[Token(Token = "0x6000A0A")]
		public Enumerator GetEnumerator()
		{
			return default(Enumerator);
		}

		[Token(Token = "0x6000A0B")]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6000A0C")]
		private IEnumerator<T> System.Collections.Generic.IEnumerable<T>.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6000A0E")]
		private Exception WrongVersion()
		{
			return null;
		}

		[Token(Token = "0x6000A10")]
		private bool IsCorrectVersion()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A11")]
		public bool Equals(ArraySnapshot<T> other)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A12")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A13")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6000A14")]
		public static bool operator ==(ArraySnapshot<T> left, ArraySnapshot<T> right)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A15")]
		public static bool operator !=(ArraySnapshot<T> left, ArraySnapshot<T> right)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000424")]
	public class BindableIsActive : MonoBehaviour
	{
		[Token(Token = "0x40008AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly ReactiveSource<bool> _isActive;

		[Token(Token = "0x17000191")]
		public Reactive<bool> IsActive
		{
			[Token(Token = "0x6000A1C")]
			[Address(RVA = "0x1330974", Offset = "0x1330974", VA = "0x1330974")]
			get
			{
				return default(Reactive<bool>);
			}
		}

		[Token(Token = "0x6000A1D")]
		[Address(RVA = "0x13309C8", Offset = "0x13309C8", VA = "0x13309C8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000A1E")]
		[Address(RVA = "0x1330A20", Offset = "0x1330A20", VA = "0x1330A20")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000A1F")]
		[Address(RVA = "0x1330A78", Offset = "0x1330A78", VA = "0x1330A78")]
		public BindableIsActive()
		{
		}
	}
	[Token(Token = "0x2000425")]
	public class BoundAndValues : MonoBehaviour
	{
		[Token(Token = "0x40008AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private BoundValue<bool> conditionA;

		[Token(Token = "0x40008AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private bool invertConditionA;

		[Token(Token = "0x40008AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private BoundValue<bool> conditionB;

		[Token(Token = "0x40008AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private bool invertConditionB;

		[Token(Token = "0x40008AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD125C", Offset = "0xBD125C")]
		private readonly Reactive<bool> <AllConditionsTrue>k__BackingField;

		[Token(Token = "0x17000192")]
		public Reactive<bool> AllConditionsTrue
		{
			[Token(Token = "0x6000A21")]
			[Address(RVA = "0x1333CBC", Offset = "0x1333CBC", VA = "0x1333CBC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDDAA8", Offset = "0xBDDAA8")]
			get
			{
				return default(Reactive<bool>);
			}
		}

		[Token(Token = "0x6000A20")]
		[Address(RVA = "0x1333B9C", Offset = "0x1333B9C", VA = "0x1333B9C")]
		public BoundAndValues()
		{
		}

		[Token(Token = "0x6000A22")]
		[Address(RVA = "0x1333CC4", Offset = "0x1333CC4", VA = "0x1333CC4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDDAB8", Offset = "0xBDDAB8")]
		private bool <.ctor>b__4_0()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A23")]
		[Address(RVA = "0x1333D9C", Offset = "0x1333D9C", VA = "0x1333D9C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDDAC8", Offset = "0xBDDAC8")]
		private Reactive<bool> <.ctor>b__4_1()
		{
			return default(Reactive<bool>);
		}

		[Token(Token = "0x6000A24")]
		[Address(RVA = "0x1333EB8", Offset = "0x1333EB8", VA = "0x1333EB8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDDAD8", Offset = "0xBDDAD8")]
		private bool <.ctor>b__4_2((bool, bool) t)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000426")]
	public class BoundOrValues : MonoBehaviour
	{
		[Token(Token = "0x40008B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private BoundValue<bool> conditionA;

		[Token(Token = "0x40008B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private bool invertConditionA;

		[Token(Token = "0x40008B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private BoundValue<bool> conditionB;

		[Token(Token = "0x40008B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private bool invertConditionB;

		[Token(Token = "0x40008B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD12AC", Offset = "0xBD12AC")]
		private readonly Reactive<bool> <AnyConditionTrue>k__BackingField;

		[Token(Token = "0x17000193")]
		public Reactive<bool> AnyConditionTrue
		{
			[Token(Token = "0x6000A26")]
			[Address(RVA = "0x1334018", Offset = "0x1334018", VA = "0x1334018")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDDAE8", Offset = "0xBDDAE8")]
			get
			{
				return default(Reactive<bool>);
			}
		}

		[Token(Token = "0x6000A25")]
		[Address(RVA = "0x1333EF8", Offset = "0x1333EF8", VA = "0x1333EF8")]
		public BoundOrValues()
		{
		}

		[Token(Token = "0x6000A27")]
		[Address(RVA = "0x1334020", Offset = "0x1334020", VA = "0x1334020")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDDAF8", Offset = "0xBDDAF8")]
		private bool <.ctor>b__4_0()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A28")]
		[Address(RVA = "0x13340F8", Offset = "0x13340F8", VA = "0x13340F8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDDB08", Offset = "0xBDDB08")]
		private Reactive<bool> <.ctor>b__4_1()
		{
			return default(Reactive<bool>);
		}

		[Token(Token = "0x6000A29")]
		[Address(RVA = "0x1334214", Offset = "0x1334214", VA = "0x1334214")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDDB18", Offset = "0xBDDB18")]
		private bool <.ctor>b__4_2((bool, bool) t)
		{
			return default(bool);
		}
	}
	[Serializable]
	[Token(Token = "0x2000427")]
	public class BoundValue<T> : IBindableReactive<T>, IBindableReactive
	{
		[Token(Token = "0x40008B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private MonoBehaviour monoBehaviour;

		[Token(Token = "0x40008B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private string propertyName;

		[Token(Token = "0x40008B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private T defaultValue;

		[NonSerialized]
		[Token(Token = "0x40008B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private IBindableReactive<T> _bindableReactive;

		[NonSerialized]
		[Token(Token = "0x40008B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Reactive<T> _reactive;

		[Token(Token = "0x17000194")]
		public bool IsBound
		{
			[Token(Token = "0x6000A2C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000195")]
		public bool IsReadOnly
		{
			[Token(Token = "0x6000A2D")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000196")]
		public Reactive<T> Reactive
		{
			[Token(Token = "0x6000A2E")]
			get
			{
				return default(Reactive<T>);
			}
		}

		[Token(Token = "0x6000A2A")]
		public BoundValue()
		{
		}

		[Token(Token = "0x6000A2B")]
		public BoundValue(T defaultValue)
		{
		}

		[Token(Token = "0x6000A2F")]
		public bool TrySetValue(in T value)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A30")]
		private void LazyInit()
		{
		}

		[Token(Token = "0x6000A31")]
		private bool Cortopia.Scripts.Utils.Reactive.IBindableReactive<T>.TrySetValue(in T value)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000428")]
	public class BoxedReactiveSubscription : IDisposable
	{
		[Token(Token = "0x40008BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private bool _disposed;

		[Token(Token = "0x40008BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private ReactiveSubscription _subscription;

		[Token(Token = "0x6000A32")]
		[Address(RVA = "0x1334254", Offset = "0x1334254", VA = "0x1334254", Slot = "4")]
		public void Dispose()
		{
		}

		[Token(Token = "0x6000A33")]
		[Address(RVA = "0x133426C", Offset = "0x133426C", VA = "0x133426C")]
		public void Set(ReactiveSubscription subscription)
		{
		}

		[Token(Token = "0x6000A34")]
		[Address(RVA = "0x13342A4", Offset = "0x13342A4", VA = "0x13342A4")]
		public BoxedReactiveSubscription()
		{
		}
	}
	[Token(Token = "0x2000429")]
	public class GameObjectReactiveSource : MonoBehaviour
	{
		[Token(Token = "0x40008BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly ReactiveSource<bool> _isActiveSource;

		[Token(Token = "0x17000197")]
		public Reactive<bool> IsActiveReactive
		{
			[Token(Token = "0x6000A35")]
			[Address(RVA = "0xFA6934", Offset = "0xFA6934", VA = "0xFA6934")]
			get
			{
				return default(Reactive<bool>);
			}
		}

		[Token(Token = "0x6000A36")]
		[Address(RVA = "0xFA6988", Offset = "0xFA6988", VA = "0xFA6988")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000A37")]
		[Address(RVA = "0xFA69E0", Offset = "0xFA69E0", VA = "0xFA69E0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000A38")]
		[Address(RVA = "0xFA6A38", Offset = "0xFA6A38", VA = "0xFA6A38")]
		public GameObjectReactiveSource()
		{
		}
	}
	[Token(Token = "0x200042A")]
	public interface IBindableReactive
	{
		[Token(Token = "0x17000198")]
		bool IsReadOnly
		{
			[Token(Token = "0x6000A39")]
			get;
		}
	}
	[Token(Token = "0x200042B")]
	public interface IBindableReactive<T> : IBindableReactive
	{
		[Token(Token = "0x17000199")]
		Reactive<T> Reactive
		{
			[Token(Token = "0x6000A3A")]
			get;
		}

		[Token(Token = "0x6000A3B")]
		bool TrySetValue(in T value);
	}
	[Token(Token = "0x200042C")]
	public interface IReactiveHandler
	{
		[Token(Token = "0x6000A3C")]
		void OnValueChanging();

		[Token(Token = "0x6000A3D")]
		void OnValueChanged();

		[Token(Token = "0x6000A3E")]
		void OnValueChangeCancelled();
	}
	[Token(Token = "0x200042D")]
	public interface IReactiveSource
	{
		[Token(Token = "0x6000A3F")]
		ReactiveSubscription OnValueUpdate(IReactiveHandler handler);
	}
	[Token(Token = "0x200042E")]
	public interface IReactiveSource<out T> : IReactiveSource
	{
		[Token(Token = "0x1700019A")]
		T Value
		{
			[Token(Token = "0x6000A40")]
			get;
		}
	}
	[Token(Token = "0x200042F")]
	public class MultiReactiveGameObject : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000430")]
		private class ReactiveConfig
		{
			[Serializable]
			[Token(Token = "0x2000431")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBC9000", Offset = "0xBC9000")]
			private sealed class <>c
			{
				[Token(Token = "0x40008C3")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				public static readonly <>c <>9;

				[Token(Token = "0x40008C4")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
				public static Func<bool, bool> <>9__2_0;

				[Token(Token = "0x6000A4A")]
				[Address(RVA = "0x1069068", Offset = "0x1069068", VA = "0x1069068")]
				public <>c()
				{
				}

				[Token(Token = "0x6000A4B")]
				[Address(RVA = "0x1069070", Offset = "0x1069070", VA = "0x1069070")]
				internal bool <GetReactive>b__2_0(bool x)
				{
					return default(bool);
				}
			}

			[Token(Token = "0x40008C1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public BoundValue<bool> isActiveSource;

			[Token(Token = "0x40008C2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public bool inverseBoundRelation;

			[Token(Token = "0x6000A47")]
			[Address(RVA = "0x11DB7E0", Offset = "0x11DB7E0", VA = "0x11DB7E0")]
			public Reactive<bool> GetReactive()
			{
				return default(Reactive<bool>);
			}

			[Token(Token = "0x6000A48")]
			[Address(RVA = "0x11DBAA4", Offset = "0x11DBAA4", VA = "0x11DBAA4")]
			public ReactiveConfig()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000432")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBC9010", Offset = "0xBC9010")]
		private sealed class <>c
		{
			[Token(Token = "0x40008C5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40008C6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<ReactiveConfig, Reactive<bool>> <>9__4_0;

			[Token(Token = "0x40008C7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<bool, bool> <>9__4_2;

			[Token(Token = "0x40008C8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Func<ArraySnapshot<bool>, bool> <>9__4_1;

			[Token(Token = "0x6000A4D")]
			[Address(RVA = "0x11DB7C0", Offset = "0x11DB7C0", VA = "0x11DB7C0")]
			public <>c()
			{
			}

			[Token(Token = "0x6000A4E")]
			[Address(RVA = "0x11DB7C8", Offset = "0x11DB7C8", VA = "0x11DB7C8")]
			internal Reactive<bool> <Update>b__4_0(ReactiveConfig x)
			{
				return default(Reactive<bool>);
			}

			[Token(Token = "0x6000A4F")]
			[Address(RVA = "0x11DB940", Offset = "0x11DB940", VA = "0x11DB940")]
			internal bool <Update>b__4_1(ArraySnapshot<bool> x)
			{
				return default(bool);
			}

			[Token(Token = "0x6000A50")]
			[Address(RVA = "0x11DBA9C", Offset = "0x11DBA9C", VA = "0x11DBA9C")]
			internal bool <Update>b__4_2(bool y)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x40008BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private ReactiveConfig[] reactiveConfigs;

		[Token(Token = "0x40008BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject reactingGameObject;

		[Token(Token = "0x40008BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool _doSubscribe;

		[Token(Token = "0x40008C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private ReactiveSubscription _subscription;

		[Token(Token = "0x6000A41")]
		[Address(RVA = "0x1019BDC", Offset = "0x1019BDC", VA = "0x1019BDC")]
		private void Update()
		{
		}

		[Token(Token = "0x6000A42")]
		[Address(RVA = "0x1019EB0", Offset = "0x1019EB0", VA = "0x1019EB0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000A43")]
		[Address(RVA = "0x1019EBC", Offset = "0x1019EBC", VA = "0x1019EBC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000A44")]
		[Address(RVA = "0x1019ED0", Offset = "0x1019ED0", VA = "0x1019ED0")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6000A45")]
		[Address(RVA = "0x101A09C", Offset = "0x101A09C", VA = "0x101A09C")]
		private void OnActiveChanged(bool isActive)
		{
		}

		[Token(Token = "0x6000A46")]
		[Address(RVA = "0x101A13C", Offset = "0x101A13C", VA = "0x101A13C")]
		public MultiReactiveGameObject()
		{
		}
	}
	[Token(Token = "0x2000433")]
	public class NonReactiveBinding<T> : IBindableReactive<T>, IBindableReactive
	{
		[Token(Token = "0x40008C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly Action<T> _setMethod;

		[Token(Token = "0x40008CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly ReactiveSource<T> _source;

		[Token(Token = "0x1700019B")]
		public bool IsReadOnly
		{
			[Token(Token = "0x6000A52")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700019C")]
		public Reactive<T> Reactive
		{
			[Token(Token = "0x6000A53")]
			get
			{
				return default(Reactive<T>);
			}
		}

		[Token(Token = "0x6000A51")]
		public NonReactiveBinding(T value, Action<T> setMethod)
		{
		}

		[Token(Token = "0x6000A54")]
		public bool TrySetValue(in T value)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A55")]
		private bool Cortopia.Scripts.Utils.Reactive.IBindableReactive<T>.TrySetValue(in T value)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000434")]
	public static class Reactive
	{
		[Token(Token = "0x2000435")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBC9020", Offset = "0xBC9020")]
		private sealed class <>c__DisplayClass5_0<T>
		{
			[Token(Token = "0x40008CB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Func<Reactive<T>> reactive;

			[Token(Token = "0x6000A5C")]
			public <>c__DisplayClass5_0()
			{
			}

			[Token(Token = "0x6000A5D")]
			internal T <Lazy>b__0()
			{
				return (T)null;
			}
		}

		[Token(Token = "0x6000A56")]
		public static Reactive<T> FromTask<T>(Task<T> asyncValue, [System.Runtime.InteropServices.Optional] T initial)
		{
			return default(Reactive<T>);
		}

		[Token(Token = "0x6000A57")]
		public static Reactive<T> Constant<T>(T value)
		{
			return default(Reactive<T>);
		}

		[Token(Token = "0x6000A58")]
		public static Reactive<T> FromQuantumEvent<T>([System.Runtime.InteropServices.Optional] T initial) where T : EventBase
		{
			return default(Reactive<T>);
		}

		[Token(Token = "0x6000A59")]
		public static Reactive<T> FromUnityEvent<T>(UnityEvent<T> unityEvent, [System.Runtime.InteropServices.Optional] T initial)
		{
			return default(Reactive<T>);
		}

		[Token(Token = "0x6000A5A")]
		public static Reactive<T> Lazy<T>(Func<T> get, Func<Reactive<T>> subscribe, [System.Runtime.InteropServices.Optional] Action unsubscribe)
		{
			return default(Reactive<T>);
		}

		[Token(Token = "0x6000A5B")]
		public static Reactive<T> Lazy<T>(Func<Reactive<T>> reactive, [System.Runtime.InteropServices.Optional] Action unsubscribe)
		{
			return default(Reactive<T>);
		}
	}
	[Token(Token = "0x2000436")]
	public readonly struct Reactive<T> : IBindableReactive<T>, IBindableReactive
	{
		[Token(Token = "0x2000437")]
		private sealed class Handler : IReactiveHandler
		{
			[Token(Token = "0x40008CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[NotNull]
			private readonly Action<T> _handler;

			[Token(Token = "0x40008CE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[NotNull]
			private readonly IReactiveSource<T> _source;

			[Token(Token = "0x6000A65")]
			public Handler([NotNull] IReactiveSource<T> source, [NotNull] Action<T> handler)
			{
			}

			[Token(Token = "0x6000A66")]
			public void OnValueChanging()
			{
			}

			[Token(Token = "0x6000A67")]
			public void OnValueChanged()
			{
			}

			[Token(Token = "0x6000A68")]
			public void OnValueChangeCancelled()
			{
			}
		}

		[Token(Token = "0x40008CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD130C", Offset = "0xBD130C")]
		private readonly IReactiveSource<T> <Source>k__BackingField;

		[Token(Token = "0x1700019D")]
		public IReactiveSource<T> Source
		{
			[Token(Token = "0x6000A5E")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDDB28", Offset = "0xBDDB28")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700019E")]
		public T Value
		{
			[Token(Token = "0x6000A61")]
			get
			{
				return (T)null;
			}
		}

		[Token(Token = "0x1700019F")]
		private Reactive<T> Cortopia.Scripts.Utils.Reactive.IBindableReactive<T>.Reactive
		{
			[Token(Token = "0x6000A62")]
			get
			{
				return default(Reactive<T>);
			}
		}

		[Token(Token = "0x170001A0")]
		private bool Cortopia.Scripts.Utils.Reactive.IBindableReactive.IsReadOnly
		{
			[Token(Token = "0x6000A63")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000A5F")]
		public Reactive([NotNull] IReactiveSource<T> source)
		{
		}

		[Token(Token = "0x6000A60")]
		public ReactiveSubscription OnValue([NotNull] Action<T> handler)
		{
			return default(ReactiveSubscription);
		}

		[Token(Token = "0x6000A64")]
		private bool Cortopia.Scripts.Utils.Reactive.IBindableReactive<T>.TrySetValue(in T value)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000438")]
	public class ReactiveBHapticsClip : MonoBehaviour
	{
		[Token(Token = "0x40008CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private string clipID;

		[Token(Token = "0x40008D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private BoundValue<bool> playClip;

		[Token(Token = "0x40008D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool _isPlaying;

		[Token(Token = "0x6000A69")]
		[Address(RVA = "0x1254594", Offset = "0x1254594", VA = "0x1254594")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000A6A")]
		[Address(RVA = "0x12546A4", Offset = "0x12546A4", VA = "0x12546A4")]
		private void Update()
		{
		}

		[Token(Token = "0x6000A6B")]
		[Address(RVA = "0x1254768", Offset = "0x1254768", VA = "0x1254768")]
		private void Play()
		{
		}

		[Token(Token = "0x6000A6C")]
		[Address(RVA = "0x1254808", Offset = "0x1254808", VA = "0x1254808")]
		private void Stop()
		{
		}

		[Token(Token = "0x6000A6D")]
		[Address(RVA = "0x12548C8", Offset = "0x12548C8", VA = "0x12548C8")]
		public ReactiveBHapticsClip()
		{
		}

		[Token(Token = "0x6000A6E")]
		[Address(RVA = "0x12548D0", Offset = "0x12548D0", VA = "0x12548D0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDDB38", Offset = "0xBDDB38")]
		private void <OnEnable>b__3_0(bool x)
		{
		}
	}
	[Token(Token = "0x2000439")]
	public abstract class ReactiveBase : ReactiveTrigger
	{
		[Token(Token = "0x6000A6F")]
		[Address(RVA = "0x12548DC", Offset = "0x12548DC", VA = "0x12548DC", Slot = "6")]
		protected override void AddHandler(IReactiveHandler handler)
		{
		}

		[Token(Token = "0x6000A70")]
		[Address(RVA = "0x1254A64", Offset = "0x1254A64", VA = "0x1254A64", Slot = "5")]
		protected override void RemoveHandler(IReactiveHandler handler)
		{
		}

		[Token(Token = "0x6000A71")]
		protected abstract void Subscribe();

		[Token(Token = "0x6000A72")]
		protected abstract void UnSubscribe();

		[Token(Token = "0x6000A73")]
		[Address(RVA = "0x1254B90", Offset = "0x1254B90", VA = "0x1254B90")]
		protected ReactiveBase()
		{
		}
	}
	[Token(Token = "0x200043A")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xBC9040", Offset = "0xBC9040")]
	public class ReactiveClassType : MonoBehaviour
	{
		[Token(Token = "0x40008D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private BoundValue<ClassType> classType;

		[Token(Token = "0x40008D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private LocalizedString damageString;

		[Token(Token = "0x40008D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private LocalizedString controlString;

		[Token(Token = "0x40008D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private LocalizedString supportString;

		[Token(Token = "0x40008D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private ReactiveSubscription _subscription;

		[Token(Token = "0x40008D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private LocalizeStringEvent _localizeStringEvent;

		[Token(Token = "0x6000A74")]
		[Address(RVA = "0x1254C0C", Offset = "0x1254C0C", VA = "0x1254C0C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000A75")]
		[Address(RVA = "0x1254C60", Offset = "0x1254C60", VA = "0x1254C60")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000A76")]
		[Address(RVA = "0x1254D4C", Offset = "0x1254D4C", VA = "0x1254D4C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000A77")]
		[Address(RVA = "0x1254D7C", Offset = "0x1254D7C", VA = "0x1254D7C")]
		private void OnClassTypeChanged(ClassType newType)
		{
		}

		[Token(Token = "0x6000A78")]
		[Address(RVA = "0x1254E50", Offset = "0x1254E50", VA = "0x1254E50")]
		public ReactiveClassType()
		{
		}
	}
	[Token(Token = "0x200043B")]
	public static class ReactiveExtensions
	{
		[Token(Token = "0x200043C")]
		private abstract class CombinatorBase : ReactiveBase, IReactiveHandler
		{
			[Token(Token = "0x40008D8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private bool _changed;

			[Token(Token = "0x40008D9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private int _changing;

			[Token(Token = "0x6000A8B")]
			[Address(RVA = "0x105D298", Offset = "0x105D298", VA = "0x105D298", Slot = "12")]
			public new void OnValueChanging()
			{
			}

			[Token(Token = "0x6000A8C")]
			[Address(RVA = "0x105D2BC", Offset = "0x105D2BC", VA = "0x105D2BC", Slot = "13")]
			public new void OnValueChanged()
			{
			}

			[Token(Token = "0x6000A8D")]
			[Address(RVA = "0x105D2E4", Offset = "0x105D2E4", VA = "0x105D2E4", Slot = "14")]
			public new void OnValueChangeCancelled()
			{
			}

			[Token(Token = "0x6000A8E")]
			[Address(RVA = "0x105D314", Offset = "0x105D314", VA = "0x105D314")]
			protected CombinatorBase()
			{
			}
		}

		[Token(Token = "0x200043D")]
		private sealed class Combinator<T> : CombinatorBase, IReactiveSource<ArraySnapshot<T>>, IReactiveSource, IReactiveHandler
		{
			[Token(Token = "0x40008DA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[NotNull]
			private readonly ReactiveSubscription[] _reactiveSubscriptions;

			[Token(Token = "0x40008DB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[NotNull]
			private readonly IReactiveSource<T>[] _sources;

			[Token(Token = "0x40008DC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private bool _isDirty;

			[Token(Token = "0x40008DD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly VersionedArray<T> _versionedValueArray;

			[Token(Token = "0x170001A1")]
			public ArraySnapshot<T> Value
			{
				[Token(Token = "0x6000A91")]
				get
				{
					return default(ArraySnapshot<T>);
				}
			}

			[Token(Token = "0x6000A8F")]
			public Combinator([NotNull] IEnumerable<Reactive<T>> reactives)
			{
			}

			[Token(Token = "0x6000A90")]
			public new void OnValueChanged()
			{
			}

			[Token(Token = "0x6000A92")]
			protected override void Subscribe()
			{
			}

			[Token(Token = "0x6000A93")]
			protected override void UnSubscribe()
			{
			}
		}

		[Token(Token = "0x200043E")]
		private sealed class Combinator<T, T2> : CombinatorBase, IReactiveSource<(T, T2)>, IReactiveSource
		{
			[Token(Token = "0x40008DE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[NotNull]
			private readonly IReactiveSource<T2> _other;

			[Token(Token = "0x40008DF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[NotNull]
			private readonly IReactiveSource<T> _reactive;

			[Token(Token = "0x40008E0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private ReactiveSubscription _reactiveSubscription1;

			[Token(Token = "0x40008E1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private ReactiveSubscription _reactiveSubscription2;

			[Token(Token = "0x170001A2")]
			public (T, T2) Value
			{
				[Token(Token = "0x6000A95")]
				get
				{
					return default((T, T2));
				}
			}

			[Token(Token = "0x6000A94")]
			public Combinator([NotNull] IReactiveSource<T> reactive, [NotNull] IReactiveSource<T2> other)
			{
			}

			[Token(Token = "0x6000A96")]
			protected override void Subscribe()
			{
			}

			[Token(Token = "0x6000A97")]
			protected override void UnSubscribe()
			{
			}
		}

		[Token(Token = "0x200043F")]
		private sealed class Combinator<T, T2, T3> : CombinatorBase, IReactiveSource<(T, T2, T3)>, IReactiveSource
		{
			[Token(Token = "0x40008E2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[NotNull]
			private readonly IReactiveSource<T2> _other;

			[Token(Token = "0x40008E3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[NotNull]
			private readonly IReactiveSource<T3> _other2;

			[Token(Token = "0x40008E4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[NotNull]
			private readonly IReactiveSource<T> _reactive;

			[Token(Token = "0x40008E5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private ReactiveSubscription _reactiveSubscription1;

			[Token(Token = "0x40008E6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private ReactiveSubscription _reactiveSubscription2;

			[Token(Token = "0x40008E7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private ReactiveSubscription _reactiveSubscription3;

			[Token(Token = "0x170001A3")]
			public (T, T2, T3) Value
			{
				[Token(Token = "0x6000A99")]
				get
				{
					return default((T, T2, T3));
				}
			}

			[Token(Token = "0x6000A98")]
			public Combinator([NotNull] IReactiveSource<T> reactive, [NotNull] IReactiveSource<T2> other, [NotNull] IReactiveSource<T3> other2)
			{
			}

			[Token(Token = "0x6000A9A")]
			protected override void Subscribe()
			{
			}

			[Token(Token = "0x6000A9B")]
			protected override void UnSubscribe()
			{
			}
		}

		[Token(Token = "0x2000440")]
		private sealed class Combinator<T, T2, T3, T4> : CombinatorBase, IReactiveSource<(T, T2, T3, T4)>, IReactiveSource
		{
			[Token(Token = "0x40008E8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[NotNull]
			private readonly IReactiveSource<T2> _other;

			[Token(Token = "0x40008E9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[NotNull]
			private readonly IReactiveSource<T3> _other2;

			[Token(Token = "0x40008EA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[NotNull]
			private readonly IReactiveSource<T4> _other3;

			[Token(Token = "0x40008EB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[NotNull]
			private readonly IReactiveSource<T> _reactive;

			[Token(Token = "0x40008EC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private ReactiveSubscription _reactiveSubscription1;

			[Token(Token = "0x40008ED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private ReactiveSubscription _reactiveSubscription2;

			[Token(Token = "0x40008EE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private ReactiveSubscription _reactiveSubscription3;

			[Token(Token = "0x40008EF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private ReactiveSubscription _reactiveSubscription4;

			[Token(Token = "0x170001A4")]
			public (T, T2, T3, T4) Value
			{
				[Token(Token = "0x6000A9D")]
				get
				{
					return default((T, T2, T3, T4));
				}
			}

			[Token(Token = "0x6000A9C")]
			public Combinator([NotNull] IReactiveSource<T> reactive, [NotNull] IReactiveSource<T2> other, [NotNull] IReactiveSource<T3> other2, [NotNull] IReactiveSource<T4> other3)
			{
			}

			[Token(Token = "0x6000A9E")]
			protected override void Subscribe()
			{
			}

			[Token(Token = "0x6000A9F")]
			protected override void UnSubscribe()
			{
			}
		}

		[Token(Token = "0x2000441")]
		private sealed class Selector<T, T2> : ReactiveBase, IReactiveSource<T2>, IReactiveSource, IReactiveHandler
		{
			[Token(Token = "0x40008F0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[NotNull]
			private readonly IReactiveSource<T> _reactive;

			[Token(Token = "0x40008F1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[NotNull]
			private readonly Func<T, T2> _selector;

			[Token(Token = "0x40008F2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private bool _isDirty;

			[Token(Token = "0x40008F3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private ReactiveSubscription _reactiveSubscription;

			[Token(Token = "0x40008F4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private T2 _value;

			[Token(Token = "0x170001A5")]
			public T2 Value
			{
				[Token(Token = "0x6000AA2")]
				get
				{
					return (T2)null;
				}
			}

			[Token(Token = "0x6000AA0")]
			public Selector([NotNull] IReactiveSource<T> reactive, [NotNull] Func<T, T2> selector)
			{
			}

			[Token(Token = "0x6000AA1")]
			public new void OnValueChanged()
			{
			}

			[Token(Token = "0x6000AA3")]
			protected override void Subscribe()
			{
			}

			[Token(Token = "0x6000AA4")]
			protected override void UnSubscribe()
			{
			}
		}

		[Token(Token = "0x2000442")]
		private sealed class DistinctFilter<T> : ReactiveBase, IReactiveSource<T>, IReactiveSource, IReactiveHandler
		{
			[Token(Token = "0x40008F5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[NotNull]
			private readonly IReactiveSource<T> _reactiveSource;

			[Token(Token = "0x40008F6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private T _lastValue;

			[Token(Token = "0x40008F7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private ReactiveSubscription _reactiveSubscription;

			[Token(Token = "0x170001A6")]
			public T Value
			{
				[Token(Token = "0x6000AA7")]
				get
				{
					return (T)null;
				}
			}

			[Token(Token = "0x6000AA5")]
			public DistinctFilter([NotNull] IReactiveSource<T> reactiveSource)
			{
			}

			[Token(Token = "0x6000AA6")]
			public new void OnValueChanged()
			{
			}

			[Token(Token = "0x6000AA8")]
			protected override void Subscribe()
			{
			}

			[Token(Token = "0x6000AA9")]
			protected override void UnSubscribe()
			{
			}
		}

		[Token(Token = "0x2000443")]
		private sealed class Switcher<T> : ReactiveBase, IReactiveSource<T>, IReactiveSource, IReactiveHandler
		{
			[Token(Token = "0x2000444")]
			private readonly struct InnerHandler : IReactiveHandler
			{
				[Token(Token = "0x40008FB")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				private readonly ReactiveTrigger _trigger;

				[Token(Token = "0x6000AAF")]
				public InnerHandler(ReactiveTrigger trigger)
				{
				}

				[Token(Token = "0x6000AB0")]
				public void OnValueChanging()
				{
				}

				[Token(Token = "0x6000AB1")]
				public void OnValueChanged()
				{
				}

				[Token(Token = "0x6000AB2")]
				public void OnValueChangeCancelled()
				{
				}
			}

			[Token(Token = "0x40008F8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly IReactiveSource<Reactive<T>> _reactiveSource;

			[Token(Token = "0x40008F9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private ReactiveSubscription _innerSubscription;

			[Token(Token = "0x40008FA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private ReactiveSubscription _reactiveSubscription;

			[Token(Token = "0x170001A7")]
			public T Value
			{
				[Token(Token = "0x6000AAC")]
				get
				{
					return (T)null;
				}
			}

			[Token(Token = "0x6000AAA")]
			public Switcher([NotNull] IReactiveSource<Reactive<T>> reactiveSource)
			{
			}

			[Token(Token = "0x6000AAB")]
			public new void OnValueChanged()
			{
			}

			[Token(Token = "0x6000AAD")]
			protected override void Subscribe()
			{
			}

			[Token(Token = "0x6000AAE")]
			protected override void UnSubscribe()
			{
			}
		}

		[Token(Token = "0x2000445")]
		private sealed class ReactiveUnityEvent<T> : ReactiveBase, IReactiveSource<T>, IReactiveSource
		{
			[Token(Token = "0x40008FC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly UnityAction<T> _unityAction;

			[Token(Token = "0x40008FD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly UnityEvent<T> _unityEvent;

			[Token(Token = "0x40008FE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private IDisposable _subscription;

			[Token(Token = "0x40008FF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD147C", Offset = "0xBD147C")]
			private T <Value>k__BackingField;

			[Token(Token = "0x170001A8")]
			public T Value
			{
				[Token(Token = "0x6000AB4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDDCE8", Offset = "0xBDDCE8")]
				get
				{
					return (T)null;
				}
				[Token(Token = "0x6000AB5")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDDCF8", Offset = "0xBDDCF8")]
				private set
				{
				}
			}

			[Token(Token = "0x6000AB3")]
			public ReactiveUnityEvent([NotNull] UnityEvent<T> unityEvent, T initial)
			{
			}

			[Token(Token = "0x6000AB6")]
			private void Handler(T callback)
			{
			}

			[Token(Token = "0x6000AB7")]
			protected override void Subscribe()
			{
			}

			[Token(Token = "0x6000AB8")]
			protected override void UnSubscribe()
			{
			}
		}

		[Token(Token = "0x2000446")]
		private sealed class ReactiveQuantumEvent<T> : ReactiveBase, IReactiveSource<T>, IReactiveSource where T : EventBase
		{
			[Token(Token = "0x4000900")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly DispatchableHandler<T> _action;

			[Token(Token = "0x4000901")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private IDisposable _subscription;

			[Token(Token = "0x4000902")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD148C", Offset = "0xBD148C")]
			private T <Value>k__BackingField;

			[Token(Token = "0x170001A9")]
			public T Value
			{
				[Token(Token = "0x6000ABA")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDDD08", Offset = "0xBDDD08")]
				get
				{
					return null;
				}
				[Token(Token = "0x6000ABB")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDDD18", Offset = "0xBDDD18")]
				private set
				{
				}
			}

			[Token(Token = "0x6000AB9")]
			public ReactiveQuantumEvent([System.Runtime.InteropServices.Optional] T initialValue)
			{
			}

			[Token(Token = "0x6000ABC")]
			private void Handler(T callback)
			{
			}

			[Token(Token = "0x6000ABD")]
			protected override void Subscribe()
			{
			}

			[Token(Token = "0x6000ABE")]
			protected override void UnSubscribe()
			{
			}
		}

		[Token(Token = "0x2000447")]
		private sealed class LazyReactive<T> : ReactiveBase, IReactiveSource<T>, IReactiveSource, IReactiveHandler
		{
			[Token(Token = "0x4000903")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly Func<T> _get;

			[Token(Token = "0x4000904")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly Func<Reactive<T>> _subscribe;

			[Token(Token = "0x4000905")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly Action _unsubscribe;

			[Token(Token = "0x4000906")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private Reactive<T>? _reactive;

			[Token(Token = "0x4000907")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private ReactiveSubscription _subscription;

			[Token(Token = "0x170001AA")]
			public T Value
			{
				[Token(Token = "0x6000AC0")]
				get
				{
					return (T)null;
				}
			}

			[Token(Token = "0x6000ABF")]
			public LazyReactive([NotNull] Func<T> get, [NotNull] Func<Reactive<T>> subscribe, [System.Runtime.InteropServices.Optional] Action unsubscribe)
			{
			}

			[Token(Token = "0x6000AC1")]
			protected override void Subscribe()
			{
			}

			[Token(Token = "0x6000AC2")]
			protected override void UnSubscribe()
			{
			}
		}

		[Token(Token = "0x2000448")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBC90C0", Offset = "0xBC90C0")]
		private sealed class <>c__DisplayClass5_0<T, T2, T3>
		{
			[Token(Token = "0x4000908")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Func<T, T2, T3> selector;

			[Token(Token = "0x6000AC3")]
			public <>c__DisplayClass5_0()
			{
			}

			[Token(Token = "0x6000AC4")]
			internal T3 <Select>b__0((T, T2) t)
			{
				return (T3)null;
			}
		}

		[Token(Token = "0x2000449")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBC90D0", Offset = "0xBC90D0")]
		private sealed class <>c__DisplayClass6_0<T, T2, T3, T4>
		{
			[Token(Token = "0x4000909")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Func<T, T2, T3, T4> selector;

			[Token(Token = "0x6000AC5")]
			public <>c__DisplayClass6_0()
			{
			}

			[Token(Token = "0x6000AC6")]
			internal T4 <Select>b__0((T, T2, T3) t)
			{
				return (T4)null;
			}
		}

		[Token(Token = "0x200044A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBC90E0", Offset = "0xBC90E0")]
		private sealed class <>c__DisplayClass7_0<T, T2, T3, T4, T5>
		{
			[Token(Token = "0x400090A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Func<T, T2, T3, T4, T5> selector;

			[Token(Token = "0x6000AC7")]
			public <>c__DisplayClass7_0()
			{
			}

			[Token(Token = "0x6000AC8")]
			internal T5 <Select>b__0((T, T2, T3, T4) t)
			{
				return (T5)null;
			}
		}

		[Token(Token = "0x200044B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBC90F0", Offset = "0xBC90F0")]
		private sealed class <>c__DisplayClass14_0<T>
		{
			[Token(Token = "0x400090B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Func<T, bool> condition;

			[Token(Token = "0x400090C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public TaskCompletionSource<T> source;

			[Token(Token = "0x400090D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public BoxedReactiveSubscription reactiveSubscription;

			[Token(Token = "0x6000AC9")]
			public <>c__DisplayClass14_0()
			{
			}

			[Token(Token = "0x6000ACA")]
			internal void <ToTaskWhen>b__0(T x)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x200044C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBC9100", Offset = "0xBC9100")]
		private struct <SetAsync>d__15<T> : IAsyncStateMachine
		{
			[Token(Token = "0x400090E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x400090F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4000910")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ReactiveSource<T> reactiveSource;

			[Token(Token = "0x4000911")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Task<T> asyncValue;

			[Token(Token = "0x4000912")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private ReactiveSource<T> <>7__wrap1;

			[Token(Token = "0x4000913")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private TaskAwaiter<T> <>u__1;

			[Token(Token = "0x6000ACB")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000ACC")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x200044D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBC9110", Offset = "0xBC9110")]
		private struct <SetAsyncTrue>d__16 : IAsyncStateMachine
		{
			[Token(Token = "0x4000914")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000915")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4000916")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Task asyncValue;

			[Token(Token = "0x4000917")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public ReactiveSource<bool> reactiveSource;

			[Token(Token = "0x4000918")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x6000ACD")]
			[Address(RVA = "0x105D0E8", Offset = "0x105D0E8", VA = "0x105D0E8", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000ACE")]
			[Address(RVA = "0x105D28C", Offset = "0x105D28C", VA = "0x105D28C", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x6000A79")]
		public static Reactive<ArraySnapshot<T>> Combine<T>(this IEnumerable<Reactive<T>> reactives)
		{
			return default(Reactive<ArraySnapshot<T>>);
		}

		[Token(Token = "0x6000A7A")]
		public static Reactive<(T, T2)> Combine<T, T2>(this Reactive<T> reactive, Reactive<T2> other)
		{
			return default(Reactive<(T, T2)>);
		}

		[Token(Token = "0x6000A7B")]
		public static Reactive<(T, T2, T3)> Combine<T, T2, T3>(this Reactive<T> reactive, Reactive<T2> other, Reactive<T3> other2)
		{
			return default(Reactive<(T, T2, T3)>);
		}

		[Token(Token = "0x6000A7C")]
		public static Reactive<(T, T2, T3, T4)> Combine<T, T2, T3, T4>(this Reactive<T> reactive, Reactive<T2> other, Reactive<T3> other2, Reactive<T4> other3)
		{
			return default(Reactive<(T, T2, T3, T4)>);
		}

		[Token(Token = "0x6000A7D")]
		public static Reactive<T2> Select<T, T2>(this Reactive<T> reactive, [NotNull] Func<T, T2> selector)
		{
			return default(Reactive<T2>);
		}

		[Token(Token = "0x6000A7E")]
		public static Reactive<T3> Select<T, T2, T3>(this Reactive<(T, T2)> reactive, [NotNull] Func<T, T2, T3> selector)
		{
			return default(Reactive<T3>);
		}

		[Token(Token = "0x6000A7F")]
		public static Reactive<T4> Select<T, T2, T3, T4>(this Reactive<(T, T2, T3)> reactive, [NotNull] Func<T, T2, T3, T4> selector)
		{
			return default(Reactive<T4>);
		}

		[Token(Token = "0x6000A80")]
		public static Reactive<T5> Select<T, T2, T3, T4, T5>(this Reactive<(T, T2, T3, T4)> reactive, [NotNull] Func<T, T2, T3, T4, T5> selector)
		{
			return default(Reactive<T5>);
		}

		[Token(Token = "0x6000A81")]
		public static Reactive<T> DistinctUntilChanged<T>(this Reactive<T> reactive)
		{
			return default(Reactive<T>);
		}

		[Token(Token = "0x6000A82")]
		public static Reactive<T> Switch<T>(this Reactive<Reactive<T>> reactive)
		{
			return default(Reactive<T>);
		}

		[Token(Token = "0x6000A83")]
		public static Reactive<T> FromQuantumEvent<T>([System.Runtime.InteropServices.Optional] T initial) where T : EventBase
		{
			return default(Reactive<T>);
		}

		[Token(Token = "0x6000A84")]
		public static Reactive<T> ToReactive<T>(this UnityEvent<T> unityEvent, [System.Runtime.InteropServices.Optional] T initial)
		{
			return default(Reactive<T>);
		}

		[Token(Token = "0x6000A85")]
		public static Reactive<T> ToReactive<T>(this Task<T> asyncValue, [System.Runtime.InteropServices.Optional] T initial)
		{
			return default(Reactive<T>);
		}

		[Token(Token = "0x6000A86")]
		[Address(RVA = "0x1254E58", Offset = "0x1254E58", VA = "0x1254E58")]
		public static Reactive<bool> ToReactive(this Task asyncValue)
		{
			return default(Reactive<bool>);
		}

		[Token(Token = "0x6000A87")]
		public static Task<T> ToTaskWhen<T>(this Reactive<T> reactive, Func<T, bool> condition)
		{
			return null;
		}

		[Token(Token = "0x6000A88")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xBDDC28", Offset = "0xBDDC28")]
		private static void SetAsync<T>(ReactiveSource<T> reactiveSource, Task<T> asyncValue)
		{
		}

		[Token(Token = "0x6000A89")]
		[Address(RVA = "0x1254F08", Offset = "0x1254F08", VA = "0x1254F08")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xBDDC88", Offset = "0xBDDC88")]
		private static void SetAsyncTrue(ReactiveSource<bool> reactiveSource, Task asyncValue)
		{
		}

		[Token(Token = "0x6000A8A")]
		public static Reactive<T> Lazy<T>(Func<T> get, Func<Reactive<T>> subscribe, [System.Runtime.InteropServices.Optional] Action unsubscribe)
		{
			return default(Reactive<T>);
		}
	}
	[Token(Token = "0x200044E")]
	public class ReactiveGameObject : MonoBehaviour
	{
		[Token(Token = "0x4000919")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private BoundValue<bool> active;

		[Token(Token = "0x400091A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private new GameObject gameObject;

		[Token(Token = "0x400091B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private bool inverseBoundRelation;

		[Token(Token = "0x400091C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		private bool _doSubscribe;

		[Token(Token = "0x400091D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private ReactiveSubscription _subscription;

		[Token(Token = "0x6000ACF")]
		[Address(RVA = "0x1254FD0", Offset = "0x1254FD0", VA = "0x1254FD0")]
		private void Update()
		{
		}

		[Token(Token = "0x6000AD0")]
		[Address(RVA = "0x12550C8", Offset = "0x12550C8", VA = "0x12550C8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000AD1")]
		[Address(RVA = "0x12550D4", Offset = "0x12550D4", VA = "0x12550D4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000AD2")]
		[Address(RVA = "0x1255108", Offset = "0x1255108", VA = "0x1255108")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6000AD3")]
		[Address(RVA = "0x12552D4", Offset = "0x12552D4", VA = "0x12552D4")]
		private void OnActiveChanged(bool isActive)
		{
		}

		[Token(Token = "0x6000AD4")]
		[Address(RVA = "0x1255384", Offset = "0x1255384", VA = "0x1255384")]
		public ReactiveGameObject()
		{
		}
	}
	[Token(Token = "0x200044F")]
	public class ReactiveHUDMode : MonoBehaviour
	{
		[Token(Token = "0x400091E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private BoundValue<PlayerHUDMode> hudMode;

		[Token(Token = "0x400091F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private new GameObject gameObject;

		[Token(Token = "0x4000920")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		public PlayerHUDMode hudModeCheck;

		[Token(Token = "0x4000921")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private ReactiveSubscription _subscription;

		[Token(Token = "0x6000AD5")]
		[Address(RVA = "0x125562C", Offset = "0x125562C", VA = "0x125562C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000AD6")]
		[Address(RVA = "0x1255718", Offset = "0x1255718", VA = "0x1255718")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000AD7")]
		[Address(RVA = "0x1255748", Offset = "0x1255748", VA = "0x1255748")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6000AD8")]
		[Address(RVA = "0x12558F8", Offset = "0x12558F8", VA = "0x12558F8")]
		private void OnHudModeChange(PlayerHUDMode obj)
		{
		}

		[Token(Token = "0x6000AD9")]
		[Address(RVA = "0x12559E0", Offset = "0x12559E0", VA = "0x12559E0")]
		public ReactiveHUDMode()
		{
		}
	}
	[Token(Token = "0x2000450")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xBC9120", Offset = "0xBC9120")]
	public class ReactiveImage : MonoBehaviour
	{
		[Token(Token = "0x4000922")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private BoundValue<Sprite> image;

		[Token(Token = "0x4000923")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool _doSubscribe;

		[Token(Token = "0x4000924")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Image _image;

		[Token(Token = "0x4000925")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private ReactiveSubscription _subscription;

		[Token(Token = "0x6000ADA")]
		[Address(RVA = "0x125641C", Offset = "0x125641C", VA = "0x125641C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000ADB")]
		[Address(RVA = "0x1256470", Offset = "0x1256470", VA = "0x1256470")]
		private void Update()
		{
		}

		[Token(Token = "0x6000ADC")]
		[Address(RVA = "0x1256568", Offset = "0x1256568", VA = "0x1256568")]
		private void OnSpriteChange(Sprite newSprite)
		{
		}

		[Token(Token = "0x6000ADD")]
		[Address(RVA = "0x1256608", Offset = "0x1256608", VA = "0x1256608")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000ADE")]
		[Address(RVA = "0x1256614", Offset = "0x1256614", VA = "0x1256614")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000ADF")]
		[Address(RVA = "0x1256648", Offset = "0x1256648", VA = "0x1256648")]
		public ReactiveImage()
		{
		}
	}
	[Token(Token = "0x2000451")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xBC9180", Offset = "0xBC9180")]
	public class ReactiveImageColor : MonoBehaviour
	{
		[Token(Token = "0x4000926")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private BoundValue<Color> color;

		[Token(Token = "0x4000927")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool _doSubscribe;

		[Token(Token = "0x4000928")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Image _image;

		[Token(Token = "0x4000929")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private ReactiveSubscription _subscription;

		[Token(Token = "0x6000AE0")]
		[Address(RVA = "0x1256650", Offset = "0x1256650", VA = "0x1256650")]
		private void Start()
		{
		}

		[Token(Token = "0x6000AE1")]
		[Address(RVA = "0x12566A4", Offset = "0x12566A4", VA = "0x12566A4")]
		private void Update()
		{
		}

		[Token(Token = "0x6000AE2")]
		[Address(RVA = "0x125679C", Offset = "0x125679C", VA = "0x125679C")]
		private void OnColorChange(Color c)
		{
		}

		[Token(Token = "0x6000AE3")]
		[Address(RVA = "0x12567C0", Offset = "0x12567C0", VA = "0x12567C0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000AE4")]
		[Address(RVA = "0x12567CC", Offset = "0x12567CC", VA = "0x12567CC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000AE5")]
		[Address(RVA = "0x1256800", Offset = "0x1256800", VA = "0x1256800")]
		public ReactiveImageColor()
		{
		}
	}
	[Token(Token = "0x2000452")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xBC91E0", Offset = "0xBC91E0")]
	public class ReactiveImageFill : MonoBehaviour
	{
		[Token(Token = "0x400092A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private BoundValue<float> fillAmount;

		[Token(Token = "0x400092B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Image _image;

		[Token(Token = "0x400092C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private ReactiveSubscription _subscription;

		[Token(Token = "0x6000AE6")]
		[Address(RVA = "0x1256808", Offset = "0x1256808", VA = "0x1256808")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000AE7")]
		[Address(RVA = "0x125685C", Offset = "0x125685C", VA = "0x125685C")]
		private void OnNewFillAmount(float value)
		{
		}

		[Token(Token = "0x6000AE8")]
		[Address(RVA = "0x1256878", Offset = "0x1256878", VA = "0x1256878")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000AE9")]
		[Address(RVA = "0x1256964", Offset = "0x1256964", VA = "0x1256964")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000AEA")]
		[Address(RVA = "0x1256994", Offset = "0x1256994", VA = "0x1256994")]
		public ReactiveImageFill()
		{
		}
	}
	[Token(Token = "0x2000453")]
	public class ReactiveIntGameObject : MonoBehaviour
	{
		[Token(Token = "0x400092D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private BoundValue<int> active;

		[Token(Token = "0x400092E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private new GameObject gameObject;

		[Token(Token = "0x400092F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private int reactiveTargetInt;

		[Token(Token = "0x4000930")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private bool inverseBoundRelation;

		[Token(Token = "0x4000931")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
		private bool _doSubscribe;

		[Token(Token = "0x4000932")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private ReactiveSubscription _subscription;

		[Token(Token = "0x6000AEB")]
		[Address(RVA = "0x125699C", Offset = "0x125699C", VA = "0x125699C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000AEC")]
		[Address(RVA = "0x1256A94", Offset = "0x1256A94", VA = "0x1256A94")]
		private void OnActiveChanged(int newValue)
		{
		}

		[Token(Token = "0x6000AED")]
		[Address(RVA = "0x1256AD0", Offset = "0x1256AD0", VA = "0x1256AD0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000AEE")]
		[Address(RVA = "0x1256ADC", Offset = "0x1256ADC", VA = "0x1256ADC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000AEF")]
		[Address(RVA = "0x1256B10", Offset = "0x1256B10", VA = "0x1256B10")]
		public ReactiveIntGameObject()
		{
		}
	}
	[Token(Token = "0x2000454")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xBC9240", Offset = "0xBC9240")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xBC9240", Offset = "0xBC9240")]
	public class ReactiveLocalizedString : MonoBehaviour
	{
		[Token(Token = "0x4000933")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private BoundValue<LocalizedString> localizedString;

		[Token(Token = "0x4000934")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private TMP_Text _textField;

		[Token(Token = "0x4000935")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private LocalizeStringEvent _localizeStringEvent;

		[Token(Token = "0x4000936")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private ReactiveSubscription _subscription;

		[Token(Token = "0x6000AF0")]
		[Address(RVA = "0x1256B18", Offset = "0x1256B18", VA = "0x1256B18")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000AF1")]
		[Address(RVA = "0x1256B90", Offset = "0x1256B90", VA = "0x1256B90")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000AF2")]
		[Address(RVA = "0x1256C98", Offset = "0x1256C98", VA = "0x1256C98")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000AF3")]
		[Address(RVA = "0x1256CC8", Offset = "0x1256CC8", VA = "0x1256CC8")]
		public ReactiveLocalizedString()
		{
		}

		[Token(Token = "0x6000AF4")]
		[Address(RVA = "0x1256CD0", Offset = "0x1256CD0", VA = "0x1256CD0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDDD48", Offset = "0xBDDD48")]
		private void <OnEnable>b__5_0(LocalizedString x)
		{
		}
	}
	[Token(Token = "0x2000455")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xBC92D4", Offset = "0xBC92D4")]
	public class ReactiveLocalizedStringArguments : MonoBehaviour
	{
		[Token(Token = "0x4000937")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private BoundValue<IList<object>> localizedStringArguments;

		[Token(Token = "0x4000938")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private LocalizeStringEvent _localizeStringEvent;

		[Token(Token = "0x4000939")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private ReactiveSubscription _subscription;

		[Token(Token = "0x6000AF5")]
		[Address(RVA = "0x1256DC4", Offset = "0x1256DC4", VA = "0x1256DC4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000AF6")]
		[Address(RVA = "0x1256E18", Offset = "0x1256E18", VA = "0x1256E18")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000AF7")]
		[Address(RVA = "0x1256F04", Offset = "0x1256F04", VA = "0x1256F04")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000AF8")]
		[Address(RVA = "0x1256F34", Offset = "0x1256F34", VA = "0x1256F34")]
		public ReactiveLocalizedStringArguments()
		{
		}

		[Token(Token = "0x6000AF9")]
		[Address(RVA = "0x1256F3C", Offset = "0x1256F3C", VA = "0x1256F3C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDDD58", Offset = "0xBDDD58")]
		private void <OnEnable>b__4_0(IList<object> x)
		{
		}
	}
	[Token(Token = "0x2000456")]
	public class ReactiveMonoBehaviour : MonoBehaviour
	{
		[Token(Token = "0x400093A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private new BoundValue<bool> enabled;

		[Token(Token = "0x400093B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private MonoBehaviour monoBehaviour;

		[Token(Token = "0x400093C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool _doSubscribe;

		[Token(Token = "0x400093D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private ReactiveSubscription _subscription;

		[Token(Token = "0x6000AFA")]
		[Address(RVA = "0x1256F70", Offset = "0x1256F70", VA = "0x1256F70")]
		private void Update()
		{
		}

		[Token(Token = "0x6000AFB")]
		[Address(RVA = "0x1257068", Offset = "0x1257068", VA = "0x1257068")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000AFC")]
		[Address(RVA = "0x1257074", Offset = "0x1257074", VA = "0x1257074")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000AFD")]
		[Address(RVA = "0x12570A8", Offset = "0x12570A8", VA = "0x12570A8")]
		public ReactiveMonoBehaviour()
		{
		}

		[Token(Token = "0x6000AFE")]
		[Address(RVA = "0x12570B0", Offset = "0x12570B0", VA = "0x12570B0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDDD68", Offset = "0xBDDD68")]
		private void <Update>b__4_0(bool x)
		{
		}
	}
	[Token(Token = "0x2000457")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xBC9334", Offset = "0xBC9334")]
	public class ReactiveRawImage : MonoBehaviour
	{
		[Token(Token = "0x400093E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private BoundValue<OrientedTexture2D> texture;

		[Token(Token = "0x400093F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private RawImage _rawImage;

		[Token(Token = "0x4000940")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private ReactiveSubscription _subscription;

		[Token(Token = "0x6000AFF")]
		[Address(RVA = "0x12570D0", Offset = "0x12570D0", VA = "0x12570D0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000B00")]
		[Address(RVA = "0x1257124", Offset = "0x1257124", VA = "0x1257124")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000B01")]
		[Address(RVA = "0x1257210", Offset = "0x1257210", VA = "0x1257210")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000B02")]
		[Address(RVA = "0x1257240", Offset = "0x1257240", VA = "0x1257240")]
		public ReactiveRawImage()
		{
		}

		[Token(Token = "0x6000B03")]
		[Address(RVA = "0x1257248", Offset = "0x1257248", VA = "0x1257248")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDDD78", Offset = "0xBDDD78")]
		private void <OnEnable>b__4_0(OrientedTexture2D x)
		{
		}
	}
	[Token(Token = "0x2000458")]
	public class ReactiveRoundEndReason : MonoBehaviour
	{
		[Token(Token = "0x4000941")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private BoundValue<RoundEndReason?> team;

		[Token(Token = "0x4000942")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private new GameObject gameObject;

		[Token(Token = "0x4000943")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		public RoundEndReason reason;

		[Token(Token = "0x4000944")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		public bool noReason;

		[Token(Token = "0x4000945")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
		private bool _doSubscribe;

		[Token(Token = "0x4000946")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private ReactiveSubscription _subscription;

		[Token(Token = "0x6000B04")]
		[Address(RVA = "0x12572A4", Offset = "0x12572A4", VA = "0x12572A4")]
		private void Update()
		{
		}

		[Token(Token = "0x6000B05")]
		[Address(RVA = "0x125739C", Offset = "0x125739C", VA = "0x125739C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000B06")]
		[Address(RVA = "0x12573A8", Offset = "0x12573A8", VA = "0x12573A8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000B07")]
		[Address(RVA = "0x12573DC", Offset = "0x12573DC", VA = "0x12573DC")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6000B08")]
		[Address(RVA = "0x125758C", Offset = "0x125758C", VA = "0x125758C")]
		private void OnReasonChanged(RoundEndReason? obj)
		{
		}

		[Token(Token = "0x6000B09")]
		[Address(RVA = "0x1257678", Offset = "0x1257678", VA = "0x1257678")]
		public ReactiveRoundEndReason()
		{
		}
	}
	[Token(Token = "0x2000459")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xBC9394", Offset = "0xBC9394")]
	public class ReactiveSlider : MonoBehaviour
	{
		[Token(Token = "0x4000947")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private BoundValue<float> value;

		[Token(Token = "0x4000948")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Slider _slider;

		[Token(Token = "0x4000949")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private ReactiveSubscription _subscription;

		[Token(Token = "0x6000B0A")]
		[Address(RVA = "0x1257680", Offset = "0x1257680", VA = "0x1257680")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000B0B")]
		[Address(RVA = "0x12576D4", Offset = "0x12576D4", VA = "0x12576D4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000B0C")]
		[Address(RVA = "0x12577C0", Offset = "0x12577C0", VA = "0x12577C0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000B0D")]
		[Address(RVA = "0x12577F0", Offset = "0x12577F0", VA = "0x12577F0")]
		public ReactiveSlider()
		{
		}

		[Token(Token = "0x6000B0E")]
		[Address(RVA = "0x12577F8", Offset = "0x12577F8", VA = "0x12577F8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDDD88", Offset = "0xBDDD88")]
		private void <OnEnable>b__4_0(float x)
		{
		}
	}
	[Token(Token = "0x200045A")]
	public class ReactiveSource<T> : IBindableReactive<T>, IBindableReactive
	{
		[Token(Token = "0x200045B")]
		private sealed class ReactiveSourceTrigger : ReactiveTrigger, IReactiveSource<T>, IReactiveSource, IReactiveHandler
		{
			[Token(Token = "0x400094B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD160C", Offset = "0xBD160C")]
			private T <Value>k__BackingField;

			[Token(Token = "0x170001AE")]
			public T Value
			{
				[Token(Token = "0x6000B17")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDDD98", Offset = "0xBDDD98")]
				get
				{
					return (T)null;
				}
				[Token(Token = "0x6000B18")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDDDA8", Offset = "0xBDDDA8")]
				set
				{
				}
			}

			[Token(Token = "0x6000B16")]
			public ReactiveSourceTrigger(in T value)
			{
			}
		}

		[Token(Token = "0x400094A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly ReactiveSourceTrigger _reactiveTrigger;

		[Token(Token = "0x170001AB")]
		public Reactive<T> Reactive
		{
			[Token(Token = "0x6000B10")]
			get
			{
				return default(Reactive<T>);
			}
		}

		[Token(Token = "0x170001AC")]
		public T Value
		{
			[Token(Token = "0x6000B11")]
			get
			{
				return (T)null;
			}
			[Token(Token = "0x6000B12")]
			set
			{
			}
		}

		[Token(Token = "0x170001AD")]
		private bool Cortopia.Scripts.Utils.Reactive.IBindableReactive.IsReadOnly
		{
			[Token(Token = "0x6000B14")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000B0F")]
		public ReactiveSource(in T value)
		{
		}

		[Token(Token = "0x6000B13")]
		public void SetValue(in T value, ReactiveTransaction transaction)
		{
		}

		[Token(Token = "0x6000B15")]
		private bool Cortopia.Scripts.Utils.Reactive.IBindableReactive<T>.TrySetValue(in T value)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200045C")]
	public struct ReactiveSubscription : IDisposable
	{
		[Token(Token = "0x200045D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBC93F4", Offset = "0xBC93F4")]
		private sealed class <>c__DisplayClass3_0
		{
			[Token(Token = "0x400094D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Action aUnsubscribe;

			[Token(Token = "0x400094E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Action bUnsubscribe;

			[Token(Token = "0x6000B1C")]
			[Address(RVA = "0x105D3C4", Offset = "0x105D3C4", VA = "0x105D3C4")]
			public <>c__DisplayClass3_0()
			{
			}

			[Token(Token = "0x6000B1D")]
			[Address(RVA = "0x105D3CC", Offset = "0x105D3CC", VA = "0x105D3CC")]
			internal void <op_BitwiseAnd>b__0()
			{
			}
		}

		[Token(Token = "0x400094C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Action _unsubscribe;

		[Token(Token = "0x6000B19")]
		[Address(RVA = "0x125781C", Offset = "0x125781C", VA = "0x125781C")]
		public ReactiveSubscription(Action unsubscribe)
		{
		}

		[Token(Token = "0x6000B1A")]
		[Address(RVA = "0x124C798", Offset = "0x124C798", VA = "0x124C798", Slot = "4")]
		public void Dispose()
		{
		}

		[Token(Token = "0x6000B1B")]
		[Address(RVA = "0x1255CAC", Offset = "0x1255CAC", VA = "0x1255CAC")]
		public static ReactiveSubscription operator &(in ReactiveSubscription a, in ReactiveSubscription b)
		{
			return default(ReactiveSubscription);
		}
	}
	[Token(Token = "0x200045E")]
	public enum TeamCheck
	{
		[Token(Token = "0x4000950")]
		UnassignedTeam,
		[Token(Token = "0x4000951")]
		FriendTeam,
		[Token(Token = "0x4000952")]
		FoeTeam
	}
	[Token(Token = "0x200045F")]
	public class ReactiveTeam : MonoBehaviour
	{
		[Token(Token = "0x4000953")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private BoundValue<Quantum.Team> team;

		[Token(Token = "0x4000954")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private new GameObject gameObject;

		[Token(Token = "0x4000955")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		public TeamCheck teamCheck;

		[Token(Token = "0x4000956")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xBD164C", Offset = "0xBD164C")]
		private bool postMatchStatistics;

		[Token(Token = "0x4000957")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
		private bool _doSubscribe;

		[Token(Token = "0x4000958")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private ReactiveSubscription _subscription;

		[Token(Token = "0x6000B1E")]
		[Address(RVA = "0x1257824", Offset = "0x1257824", VA = "0x1257824")]
		private void Update()
		{
		}

		[Token(Token = "0x6000B1F")]
		[Address(RVA = "0x125791C", Offset = "0x125791C", VA = "0x125791C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000B20")]
		[Address(RVA = "0x1257928", Offset = "0x1257928", VA = "0x1257928")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000B21")]
		[Address(RVA = "0x125795C", Offset = "0x125795C", VA = "0x125795C")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6000B22")]
		[Address(RVA = "0x1257B0C", Offset = "0x1257B0C", VA = "0x1257B0C")]
		private Quantum.Team GetMyTeam()
		{
			return default(Quantum.Team);
		}

		[Token(Token = "0x6000B23")]
		[Address(RVA = "0x1257CA4", Offset = "0x1257CA4", VA = "0x1257CA4")]
		private void OnTeamChanged(Quantum.Team newTeam)
		{
		}

		[Token(Token = "0x6000B24")]
		[Address(RVA = "0x1257DC0", Offset = "0x1257DC0", VA = "0x1257DC0")]
		public ReactiveTeam()
		{
		}
	}
	[Token(Token = "0x2000460")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xBC9404", Offset = "0xBC9404")]
	public class ReactiveTeamName : MonoBehaviour
	{
		[Token(Token = "0x4000959")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private BoundValue<Quantum.Team> team;

		[Token(Token = "0x400095A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private LocalizedString teamAName;

		[Token(Token = "0x400095B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private LocalizedString teamBName;

		[Token(Token = "0x400095C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private LocalizedString unassignedName;

		[Token(Token = "0x400095D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private LocalizeStringEvent _localizeStringEvent;

		[Token(Token = "0x400095E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private ReactiveSubscription _subscription;

		[Token(Token = "0x6000B25")]
		[Address(RVA = "0x1257DC8", Offset = "0x1257DC8", VA = "0x1257DC8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000B26")]
		[Address(RVA = "0x1257E1C", Offset = "0x1257E1C", VA = "0x1257E1C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000B27")]
		[Address(RVA = "0x1257F08", Offset = "0x1257F08", VA = "0x1257F08")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000B28")]
		[Address(RVA = "0x1257F38", Offset = "0x1257F38", VA = "0x1257F38")]
		private void OnTeamChanged(Quantum.Team newTeam)
		{
		}

		[Token(Token = "0x6000B29")]
		[Address(RVA = "0x125800C", Offset = "0x125800C", VA = "0x125800C")]
		public ReactiveTeamName()
		{
		}
	}
	[Token(Token = "0x2000461")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xBC9464", Offset = "0xBC9464")]
	public class ReactiveTextMeshPro : MonoBehaviour
	{
		[Token(Token = "0x400095F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private BoundValue<string> text;

		[Token(Token = "0x4000960")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool _doSubscribe;

		[Token(Token = "0x4000961")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private ReactiveSubscription _subscription;

		[Token(Token = "0x4000962")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private TMP_Text _text;

		[Token(Token = "0x6000B2A")]
		[Address(RVA = "0x1258014", Offset = "0x1258014", VA = "0x1258014")]
		private void Start()
		{
		}

		[Token(Token = "0x6000B2B")]
		[Address(RVA = "0x1258068", Offset = "0x1258068", VA = "0x1258068")]
		private void Update()
		{
		}

		[Token(Token = "0x6000B2C")]
		[Address(RVA = "0x1258160", Offset = "0x1258160", VA = "0x1258160")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000B2D")]
		[Address(RVA = "0x125816C", Offset = "0x125816C", VA = "0x125816C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000B2E")]
		[Address(RVA = "0x12581A0", Offset = "0x12581A0", VA = "0x12581A0")]
		public ReactiveTextMeshPro()
		{
		}

		[Token(Token = "0x6000B2F")]
		[Address(RVA = "0x12581A8", Offset = "0x12581A8", VA = "0x12581A8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDDDB8", Offset = "0xBDDDB8")]
		private void <Update>b__5_0(string x)
		{
		}
	}
	[Token(Token = "0x2000462")]
	public class ReactiveTransaction : IDisposable
	{
		[Token(Token = "0x4000963")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly List<IReactiveHandler> _members;

		[Token(Token = "0x6000B30")]
		[Address(RVA = "0x12581CC", Offset = "0x12581CC", VA = "0x12581CC")]
		public ReactiveTransaction()
		{
		}

		[Token(Token = "0x6000B31")]
		[Address(RVA = "0x1258248", Offset = "0x1258248", VA = "0x1258248", Slot = "4")]
		public void Dispose()
		{
		}

		[Token(Token = "0x6000B32")]
		[Address(RVA = "0x12583FC", Offset = "0x12583FC", VA = "0x12583FC")]
		public void Register(IReactiveHandler reactiveTransactionMember)
		{
		}
	}
	[Token(Token = "0x2000463")]
	public class ReactiveTrigger
	{
		[Token(Token = "0x2000464")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBC94C4", Offset = "0xBC94C4")]
		private sealed class <>c__DisplayClass6_0
		{
			[Token(Token = "0x4000968")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ReactiveTrigger <>4__this;

			[Token(Token = "0x4000969")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public IReactiveHandler handler;

			[Token(Token = "0x6000B3B")]
			[Address(RVA = "0x105D410", Offset = "0x105D410", VA = "0x105D410")]
			public <>c__DisplayClass6_0()
			{
			}

			[Token(Token = "0x6000B3C")]
			[Address(RVA = "0x105D418", Offset = "0x105D418", VA = "0x105D418")]
			internal void <OnValueUpdate>b__0()
			{
			}
		}

		[Token(Token = "0x4000964")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly FastUnsafeList<IReactiveHandler> _handlers;

		[Token(Token = "0x4000965")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<IReactiveHandler> _addedHandlers;

		[Token(Token = "0x4000966")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool _changing;

		[Token(Token = "0x4000967")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<IReactiveHandler> _removedHandlers;

		[Token(Token = "0x170001AF")]
		protected bool HasHandlers
		{
			[Token(Token = "0x6000B33")]
			[Address(RVA = "0x125491C", Offset = "0x125491C", VA = "0x125491C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000B34")]
		[Address(RVA = "0x1258460", Offset = "0x1258460", VA = "0x1258460", Slot = "4")]
		public ReactiveSubscription OnValueUpdate(IReactiveHandler handler)
		{
			return default(ReactiveSubscription);
		}

		[Token(Token = "0x6000B35")]
		[Address(RVA = "0x1254AA8", Offset = "0x1254AA8", VA = "0x1254AA8", Slot = "5")]
		protected virtual void RemoveHandler(IReactiveHandler handler)
		{
		}

		[Token(Token = "0x6000B36")]
		[Address(RVA = "0x125497C", Offset = "0x125497C", VA = "0x125497C", Slot = "6")]
		protected virtual void AddHandler(IReactiveHandler handler)
		{
		}

		[Token(Token = "0x6000B37")]
		[Address(RVA = "0x125852C", Offset = "0x125852C", VA = "0x125852C", Slot = "7")]
		public void OnValueChanging()
		{
		}

		[Token(Token = "0x6000B38")]
		[Address(RVA = "0x125904C", Offset = "0x125904C", VA = "0x125904C", Slot = "8")]
		public void OnValueChanged()
		{
		}

		[Token(Token = "0x6000B39")]
		[Address(RVA = "0x125990C", Offset = "0x125990C", VA = "0x125990C", Slot = "9")]
		public void OnValueChangeCancelled()
		{
		}

		[Token(Token = "0x6000B3A")]
		[Address(RVA = "0x1254B94", Offset = "0x1254B94", VA = "0x1254B94")]
		public ReactiveTrigger()
		{
		}
	}
	[Token(Token = "0x2000465")]
	public class SpeculativeReactive<T> : IBindableReactive<T>, IBindableReactive
	{
		[Token(Token = "0x2000466")]
		private sealed class SpeculativeReactiveTrigger : ReactiveBase, IReactiveSource<T>, IReactiveSource, IReactiveHandler
		{
			[Token(Token = "0x400096B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly IReactiveSource<T> _reactive;

			[Token(Token = "0x400096C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private ReactiveSubscription _subscription;

			[Token(Token = "0x400096D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD16E8", Offset = "0xBD16E8")]
			private T <SpeculativeValue>k__BackingField;

			[Token(Token = "0x400096E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD16F8", Offset = "0xBD16F8")]
			private bool <IsSpeculating>k__BackingField;

			[Token(Token = "0x170001B3")]
			public T SpeculativeValue
			{
				[Token(Token = "0x6000B45")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDDDC8", Offset = "0xBDDDC8")]
				get
				{
					return (T)null;
				}
				[Token(Token = "0x6000B46")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDDDD8", Offset = "0xBDDDD8")]
				set
				{
				}
			}

			[Token(Token = "0x170001B4")]
			public bool IsSpeculating
			{
				[Token(Token = "0x6000B47")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDDDE8", Offset = "0xBDDDE8")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x6000B48")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDDDF8", Offset = "0xBDDDF8")]
				set
				{
				}
			}

			[Token(Token = "0x170001B5")]
			public T Value
			{
				[Token(Token = "0x6000B4A")]
				get
				{
					return (T)null;
				}
			}

			[Token(Token = "0x6000B44")]
			public SpeculativeReactiveTrigger(in IReactiveSource<T> reactive)
			{
			}

			[Token(Token = "0x6000B49")]
			public new void OnValueChanging()
			{
			}

			[Token(Token = "0x6000B4B")]
			protected override void Subscribe()
			{
			}

			[Token(Token = "0x6000B4C")]
			protected override void UnSubscribe()
			{
			}
		}

		[Token(Token = "0x400096A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly SpeculativeReactiveTrigger _reactiveTrigger;

		[Token(Token = "0x170001B0")]
		public Reactive<T> Reactive
		{
			[Token(Token = "0x6000B3E")]
			get
			{
				return default(Reactive<T>);
			}
		}

		[Token(Token = "0x170001B1")]
		public T Value
		{
			[Token(Token = "0x6000B3F")]
			get
			{
				return (T)null;
			}
			[Token(Token = "0x6000B40")]
			set
			{
			}
		}

		[Token(Token = "0x170001B2")]
		private bool Cortopia.Scripts.Utils.Reactive.IBindableReactive.IsReadOnly
		{
			[Token(Token = "0x6000B42")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000B3D")]
		public SpeculativeReactive(in Reactive<T> reactive)
		{
		}

		[Token(Token = "0x6000B41")]
		public void SetValue(in T value, ReactiveTransaction transaction)
		{
		}

		[Token(Token = "0x6000B43")]
		private bool Cortopia.Scripts.Utils.Reactive.IBindableReactive<T>.TrySetValue(in T value)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000467")]
	public class VersionedArray<T>
	{
		[Token(Token = "0x400096F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD1708", Offset = "0xBD1708")]
		private readonly T[] <Array>k__BackingField;

		[Token(Token = "0x4000970")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD1718", Offset = "0xBD1718")]
		private ulong <CurrentVersion>k__BackingField;

		[Token(Token = "0x170001B6")]
		public T[] Array
		{
			[Token(Token = "0x6000B4E")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDDE08", Offset = "0xBDDE08")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001B7")]
		public ulong CurrentVersion
		{
			[Token(Token = "0x6000B4F")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDDE18", Offset = "0xBDDE18")]
			get
			{
				return default(ulong);
			}
			[Token(Token = "0x6000B50")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDDE28", Offset = "0xBDDE28")]
			private set
			{
			}
		}

		[Token(Token = "0x6000B4D")]
		public VersionedArray(int count)
		{
		}

		[Token(Token = "0x6000B51")]
		public void InvalidateSnapshots()
		{
		}
	}
}
namespace Cortopia.Scripts.Users
{
	[Token(Token = "0x2000468")]
	public interface IUser
	{
		[Token(Token = "0x170001B8")]
		string DisplayName
		{
			[Token(Token = "0x6000B52")]
			get;
		}

		[Token(Token = "0x170001B9")]
		Reactive<bool> IsLoggedInToPlayFab
		{
			[Token(Token = "0x6000B53")]
			get;
		}

		[Token(Token = "0x170001BA")]
		Reactive<bool?> HasCompletedTutorial
		{
			[Token(Token = "0x6000B54")]
			get;
		}

		[Token(Token = "0x170001BB")]
		string ImageUrl
		{
			[Token(Token = "0x6000B55")]
			get;
		}

		[Token(Token = "0x170001BC")]
		string[] PlatformFriends
		{
			[Token(Token = "0x6000B56")]
			get;
		}

		[Token(Token = "0x6000B57")]
		Task LogInToPlayFabAsync();

		[Token(Token = "0x6000B58")]
		void SetTutorialCompleted();

		[Token(Token = "0x6000B59")]
		void UpdatePlatformFriends();

		[Token(Token = "0x6000B5A")]
		Task RefreshCredentials();
	}
	[Token(Token = "0x2000469")]
	public interface IUserProvider
	{
		[Token(Token = "0x6000B5B")]
		Task<IUser> GetUserAsync(PlayFabUser playFabUser);
	}
	[Token(Token = "0x200046A")]
	public class OculusUser : IUser
	{
		[StructLayout(3)]
		[Token(Token = "0x200046B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBC94D4", Offset = "0xBC94D4")]
		private struct <LogInToPlayFabAsync>d__23 : IAsyncStateMachine
		{
			[Token(Token = "0x400097C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x400097D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x400097E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public OculusUser <>4__this;

			[Token(Token = "0x400097F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private LoginResult <loginResult>5__2;

			[Token(Token = "0x4000980")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Task <initAnalyticsTask>5__3;

			[Token(Token = "0x4000981")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private TaskAwaiter<IReadOnlyDictionary<AssetGuid, AssetBase>> <>u__1;

			[Token(Token = "0x4000982")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private TaskAwaiter<OrgScopedID> <>u__2;

			[Token(Token = "0x4000983")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private TaskAwaiter<LoginResult> <>u__3;

			[Token(Token = "0x4000984")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private TaskAwaiter<GetPhotonAuthenticationTokenResult> <>u__4;

			[Token(Token = "0x4000985")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private TaskAwaiter <>u__5;

			[Token(Token = "0x4000986")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private TaskAwaiter<EmptyResponse> <>u__6;

			[Token(Token = "0x4000987")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			private TaskAwaiter<AddGenericIDResult> <>u__7;

			[Token(Token = "0x4000988")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			private TaskAwaiter<UpdateUserTitleDisplayNameResult> <>u__8;

			[Token(Token = "0x6000B6D")]
			[Address(RVA = "0x11DFC44", Offset = "0x11DFC44", VA = "0x11DFC44", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000B6E")]
			[Address(RVA = "0x11E0F88", Offset = "0x11E0F88", VA = "0x11E0F88", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x200046C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBC94E4", Offset = "0xBC94E4")]
		private struct <SetTutorialCompleted>d__24 : IAsyncStateMachine
		{
			[Token(Token = "0x4000989")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x400098A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x400098B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public OculusUser <>4__this;

			[Token(Token = "0x400098C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private TaskAwaiter<UpdateUserDataResult> <>u__1;

			[Token(Token = "0x6000B6F")]
			[Address(RVA = "0x11E1474", Offset = "0x11E1474", VA = "0x11E1474", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000B70")]
			[Address(RVA = "0x11E182C", Offset = "0x11E182C", VA = "0x11E182C", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x200046D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBC94F4", Offset = "0xBC94F4")]
		private struct <RefreshCredentials>d__26 : IAsyncStateMachine
		{
			[Token(Token = "0x400098D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x400098E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x400098F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public OculusUser <>4__this;

			[Token(Token = "0x4000990")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private LoginResult <loginResult>5__2;

			[Token(Token = "0x4000991")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private TaskAwaiter<LoginResult> <>u__1;

			[Token(Token = "0x4000992")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private TaskAwaiter<GetPhotonAuthenticationTokenResult> <>u__2;

			[Token(Token = "0x6000B71")]
			[Address(RVA = "0x11E0F94", Offset = "0x11E0F94", VA = "0x11E0F94", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000B72")]
			[Address(RVA = "0x11E1468", Offset = "0x11E1468", VA = "0x11E1468", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x200046E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBC9504", Offset = "0xBC9504")]
		private struct <GetHasCompletedTutorial>d__27 : IAsyncStateMachine
		{
			[Token(Token = "0x4000993")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000994")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4000995")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string playFabId;

			[Token(Token = "0x4000996")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public OculusUser <>4__this;

			[Token(Token = "0x4000997")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private TaskAwaiter<GetUserDataResult> <>u__1;

			[Token(Token = "0x6000B73")]
			[Address(RVA = "0x11DF7E8", Offset = "0x11DF7E8", VA = "0x11DF7E8", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000B74")]
			[Address(RVA = "0x11DFC38", Offset = "0x11DFC38", VA = "0x11DFC38", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200046F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBC9514", Offset = "0xBC9514")]
		private sealed class <>c
		{
			[Token(Token = "0x4000998")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000999")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<PlayFab.ClientModels.FriendInfo, string> <>9__28_0;

			[Token(Token = "0x400099A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<KeyValuePair<string, PlayFab.ProfilesModels.EntityKey>, bool> <>9__28_1;

			[Token(Token = "0x400099B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Func<KeyValuePair<string, PlayFab.ProfilesModels.EntityKey>, string> <>9__28_2;

			[Token(Token = "0x400099C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static Func<GenericPlayFabIdPair, string> <>9__30_0;

			[Token(Token = "0x400099D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public static Func<string, bool> <>9__30_1;

			[Token(Token = "0x6000B76")]
			[Address(RVA = "0x11DDBE0", Offset = "0x11DDBE0", VA = "0x11DDBE0")]
			public <>c()
			{
			}

			[Token(Token = "0x6000B77")]
			[Address(RVA = "0x11DDBE8", Offset = "0x11DDBE8", VA = "0x11DDBE8")]
			internal string <AddOculusFriendsToPlayFab>b__28_0(PlayFab.ClientModels.FriendInfo x)
			{
				return null;
			}

			[Token(Token = "0x6000B78")]
			[Address(RVA = "0x11DDC00", Offset = "0x11DDC00", VA = "0x11DDC00")]
			internal bool <AddOculusFriendsToPlayFab>b__28_1(KeyValuePair<string, PlayFab.ProfilesModels.EntityKey> x)
			{
				return default(bool);
			}

			[Token(Token = "0x6000B79")]
			[Address(RVA = "0x11DDC44", Offset = "0x11DDC44", VA = "0x11DDC44")]
			internal string <AddOculusFriendsToPlayFab>b__28_2(KeyValuePair<string, PlayFab.ProfilesModels.EntityKey> x)
			{
				return null;
			}

			[Token(Token = "0x6000B7A")]
			[Address(RVA = "0x11DDC8C", Offset = "0x11DDC8C", VA = "0x11DDC8C")]
			internal string <AddPlayFabIDsFromGenericIDsAsync>b__30_0(GenericPlayFabIdPair x)
			{
				return null;
			}

			[Token(Token = "0x6000B7B")]
			[Address(RVA = "0x11DDCA4", Offset = "0x11DDCA4", VA = "0x11DDCA4")]
			internal bool <AddPlayFabIDsFromGenericIDsAsync>b__30_1(string x)
			{
				return default(bool);
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000470")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBC9524", Offset = "0xBC9524")]
		private struct <AddOculusFriendsToPlayFab>d__28 : IAsyncStateMachine
		{
			[Token(Token = "0x400099E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x400099F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x40009A0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public OculusUser <>4__this;

			[Token(Token = "0x40009A1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Task<GetFriendsListResult> <playFabFriendsTask>5__2;

			[Token(Token = "0x40009A2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private List<string> <friendIds>5__3;

			[Token(Token = "0x40009A3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private List<GenericServiceId> <genericIds>5__4;

			[Token(Token = "0x40009A4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private TaskAwaiter<UserList> <>u__1;

			[Token(Token = "0x40009A5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private Task<UserList> <nextPageTask>5__5;

			[Token(Token = "0x40009A6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private IEnumerator<User> <>7__wrap5;

			[Token(Token = "0x40009A7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private TaskAwaiter <>u__2;

			[Token(Token = "0x40009A8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private TaskAwaiter<GetFriendsListResult> <>u__3;

			[Token(Token = "0x40009A9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			private TaskAwaiter<GetTitlePlayersFromMasterPlayerAccountIdsResponse> <>u__4;

			[Token(Token = "0x6000B7C")]
			[Address(RVA = "0x11DDCC8", Offset = "0x11DDCC8", VA = "0x11DDCC8", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000B7D")]
			[Address(RVA = "0x11DEE88", Offset = "0x11DEE88", VA = "0x11DEE88", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000471")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBC9534", Offset = "0xBC9534")]
		private struct <AddPlayFabIDsFromGenericIDsAsync>d__30 : IAsyncStateMachine
		{
			[Token(Token = "0x40009AA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40009AB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x40009AC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public List<GenericServiceId> ids;

			[Token(Token = "0x40009AD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public List<string> potentialNewFriends;

			[Token(Token = "0x40009AE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private TaskAwaiter<GetPlayFabIDsFromGenericIDsResult> <>u__1;

			[Token(Token = "0x6000B7E")]
			[Address(RVA = "0x11DF344", Offset = "0x11DF344", VA = "0x11DF344", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000B7F")]
			[Address(RVA = "0x11DF7DC", Offset = "0x11DF7DC", VA = "0x11DF7DC", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000472")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBC9544", Offset = "0xBC9544")]
		private struct <AddPlayFabFriend>d__31 : IAsyncStateMachine
		{
			[Token(Token = "0x40009AF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40009B0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x40009B1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string x;

			[Token(Token = "0x40009B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private TaskAwaiter<AddFriendResult> <>u__1;

			[Token(Token = "0x6000B80")]
			[Address(RVA = "0x11DEE94", Offset = "0x11DEE94", VA = "0x11DEE94", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000B81")]
			[Address(RVA = "0x11DF338", Offset = "0x11DF338", VA = "0x11DF338", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4000971")]
		private const string OculusUserNamePrefix = "OVR_";

		[Token(Token = "0x4000972")]
		private const int MaxGenericIdsPerRequest = 10;

		[Token(Token = "0x4000973")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly ReactiveSource<bool?> _hasCompletedTutorial;

		[Token(Token = "0x4000974")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly HashSet<ulong> _knownOculusFriends;

		[Token(Token = "0x4000975")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly PlayFabUser _playFabUser;

		[Token(Token = "0x4000976")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly User _user;

		[Token(Token = "0x4000977")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool _haveAddOculusFriendsToPlayFabBefore;

		[Token(Token = "0x4000978")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string _orgScopedID;

		[Token(Token = "0x4000979")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Task _updateTask;

		[Token(Token = "0x400097A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD1728", Offset = "0xBD1728")]
		private readonly Reactive<bool> <IsLoggedInToPlayFab>k__BackingField;

		[Token(Token = "0x400097B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD1738", Offset = "0xBD1738")]
		private string[] <PlatformFriends>k__BackingField;

		[Token(Token = "0x170001BD")]
		public Reactive<bool> IsLoggedInToPlayFab
		{
			[Token(Token = "0x6000B5D")]
			[Address(RVA = "0x102062C", Offset = "0x102062C", VA = "0x102062C", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDDE38", Offset = "0xBDDE38")]
			get
			{
				return default(Reactive<bool>);
			}
		}

		[Token(Token = "0x170001BE")]
		public Reactive<bool?> HasCompletedTutorial
		{
			[Token(Token = "0x6000B5E")]
			[Address(RVA = "0x1020634", Offset = "0x1020634", VA = "0x1020634", Slot = "6")]
			get
			{
				return default(Reactive<bool?>);
			}
		}

		[Token(Token = "0x170001BF")]
		public string DisplayName
		{
			[Token(Token = "0x6000B5F")]
			[Address(RVA = "0x1020688", Offset = "0x1020688", VA = "0x1020688", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001C0")]
		public string ImageUrl
		{
			[Token(Token = "0x6000B60")]
			[Address(RVA = "0x10206A4", Offset = "0x10206A4", VA = "0x10206A4", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001C1")]
		public string[] PlatformFriends
		{
			[Token(Token = "0x6000B61")]
			[Address(RVA = "0x10206F4", Offset = "0x10206F4", VA = "0x10206F4", Slot = "8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDDE48", Offset = "0xBDDE48")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000B62")]
			[Address(RVA = "0x10206FC", Offset = "0x10206FC", VA = "0x10206FC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDDE58", Offset = "0xBDDE58")]
			private set
			{
			}
		}

		[Token(Token = "0x6000B5C")]
		[Address(RVA = "0x102047C", Offset = "0x102047C", VA = "0x102047C")]
		public OculusUser(User user, PlayFabUser playFabUser)
		{
		}

		[Token(Token = "0x6000B63")]
		[Address(RVA = "0x1020704", Offset = "0x1020704", VA = "0x1020704", Slot = "9")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xBDDE68", Offset = "0xBDDE68")]
		public Task LogInToPlayFabAsync()
		{
			return null;
		}

		[Token(Token = "0x6000B64")]
		[Address(RVA = "0x1020818", Offset = "0x1020818", VA = "0x1020818", Slot = "10")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xBDDEC8", Offset = "0xBDDEC8")]
		public void SetTutorialCompleted()
		{
		}

		[Token(Token = "0x6000B65")]
		[Address(RVA = "0x10208DC", Offset = "0x10208DC", VA = "0x10208DC", Slot = "11")]
		public void UpdatePlatformFriends()
		{
		}

		[Token(Token = "0x6000B66")]
		[Address(RVA = "0x1020A28", Offset = "0x1020A28", VA = "0x1020A28", Slot = "12")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xBDDF28", Offset = "0xBDDF28")]
		public Task RefreshCredentials()
		{
			return null;
		}

		[Token(Token = "0x6000B67")]
		[Address(RVA = "0x1020B2C", Offset = "0x1020B2C", VA = "0x1020B2C")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xBDDF88", Offset = "0xBDDF88")]
		private void GetHasCompletedTutorial(string playFabId)
		{
		}

		[Token(Token = "0x6000B68")]
		[Address(RVA = "0x1020918", Offset = "0x1020918", VA = "0x1020918")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xBDDFE8", Offset = "0xBDDFE8")]
		private Task AddOculusFriendsToPlayFab()
		{
			return null;
		}

		[Token(Token = "0x6000B69")]
		[Address(RVA = "0x1020BF4", Offset = "0x1020BF4", VA = "0x1020BF4")]
		private static Task<GetFriendsListResult> GetPlayfabFriendsAsync()
		{
			return null;
		}

		[Token(Token = "0x6000B6A")]
		[Address(RVA = "0x1020CC8", Offset = "0x1020CC8", VA = "0x1020CC8")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xBDE048", Offset = "0xBDE048")]
		private static Task AddPlayFabIDsFromGenericIDsAsync(List<GenericServiceId> ids, List<string> potentialNewFriends)
		{
			return null;
		}

		[Token(Token = "0x6000B6B")]
		[Address(RVA = "0x1020DE8", Offset = "0x1020DE8", VA = "0x1020DE8")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xBDE0A8", Offset = "0xBDE0A8")]
		private Task AddPlayFabFriend(string x)
		{
			return null;
		}

		[Token(Token = "0x6000B6C")]
		[Address(RVA = "0x1020EEC", Offset = "0x1020EEC", VA = "0x1020EEC")]
		private static GenericServiceId GetGenericServiceId(User user)
		{
			return null;
		}
	}
	[Token(Token = "0x2000473")]
	public class OculusUserProvider : IUserProvider
	{
		[StructLayout(3)]
		[Token(Token = "0x2000474")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBC9554", Offset = "0xBC9554")]
		private struct <GetUserAsync>d__0 : IAsyncStateMachine
		{
			[Token(Token = "0x40009B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40009B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder<IUser> <>t__builder;

			[Token(Token = "0x40009B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PlayFabUser playFabUser;

			[Token(Token = "0x40009B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private TaskAwaiter<PlatformInitialize> <>u__1;

			[Token(Token = "0x40009B7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private TaskAwaiter <>u__2;

			[Token(Token = "0x40009B8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private TaskAwaiter<User> <>u__3;

			[Token(Token = "0x6000B84")]
			[Address(RVA = "0x11E1838", Offset = "0x11E1838", VA = "0x11E1838", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000B85")]
			[Address(RVA = "0x11E1EB8", Offset = "0x11E1EB8", VA = "0x11E1EB8", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x6000B82")]
		[Address(RVA = "0x1020F94", Offset = "0x1020F94", VA = "0x1020F94", Slot = "4")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xBDE178", Offset = "0xBDE178")]
		public Task<IUser> GetUserAsync(PlayFabUser playFabUser)
		{
			return null;
		}

		[Token(Token = "0x6000B83")]
		[Address(RVA = "0x10210B4", Offset = "0x10210B4", VA = "0x10210B4")]
		public OculusUserProvider()
		{
		}
	}
	[Token(Token = "0x2000475")]
	public class PicoXRUser : IUser
	{
		[StructLayout(3)]
		[Token(Token = "0x2000476")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBC9564", Offset = "0xBC9564")]
		private struct <RefreshCredentials>d__21 : IAsyncStateMachine
		{
			[Token(Token = "0x40009C3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40009C4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x40009C5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PicoXRUser <>4__this;

			[Token(Token = "0x40009C6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private LoginResult <loginResult>5__2;

			[Token(Token = "0x40009C7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private TaskAwaiter<LoginResult> <>u__1;

			[Token(Token = "0x40009C8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private TaskAwaiter<GetPhotonAuthenticationTokenResult> <>u__2;

			[Token(Token = "0x6000B92")]
			[Address(RVA = "0x11E3E5C", Offset = "0x11E3E5C", VA = "0x11E3E5C", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000B93")]
			[Address(RVA = "0x11E4348", Offset = "0x11E4348", VA = "0x11E4348", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000477")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBC9574", Offset = "0xBC9574")]
		private struct <LogInToPlayFabAsync>d__22 : IAsyncStateMachine
		{
			[Token(Token = "0x40009C9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40009CA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x40009CB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PicoXRUser <>4__this;

			[Token(Token = "0x40009CC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private LoginResult <loginResult>5__2;

			[Token(Token = "0x40009CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Task <initAnalyticsTask>5__3;

			[Token(Token = "0x40009CE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private TaskAwaiter<IReadOnlyDictionary<AssetGuid, AssetBase>> <>u__1;

			[Token(Token = "0x40009CF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private TaskAwaiter<LoginResult> <>u__2;

			[Token(Token = "0x40009D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private TaskAwaiter<GetPhotonAuthenticationTokenResult> <>u__3;

			[Token(Token = "0x40009D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private TaskAwaiter <>u__4;

			[Token(Token = "0x40009D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private TaskAwaiter<EmptyResponse> <>u__5;

			[Token(Token = "0x40009D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private TaskAwaiter<AddGenericIDResult> <>u__6;

			[Token(Token = "0x40009D4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			private TaskAwaiter<UpdateUserTitleDisplayNameResult> <>u__7;

			[Token(Token = "0x6000B94")]
			[Address(RVA = "0x11E2C80", Offset = "0x11E2C80", VA = "0x11E2C80", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000B95")]
			[Address(RVA = "0x11E3E50", Offset = "0x11E3E50", VA = "0x11E3E50", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000478")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBC9584", Offset = "0xBC9584")]
		private struct <SetTutorialCompleted>d__23 : IAsyncStateMachine
		{
			[Token(Token = "0x40009D5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40009D6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x40009D7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public PicoXRUser <>4__this;

			[Token(Token = "0x40009D8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private TaskAwaiter<UpdateUserDataResult> <>u__1;

			[Token(Token = "0x6000B96")]
			[Address(RVA = "0x11E4354", Offset = "0x11E4354", VA = "0x11E4354", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000B97")]
			[Address(RVA = "0x11E470C", Offset = "0x11E470C", VA = "0x11E470C", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000479")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBC9594", Offset = "0xBC9594")]
		private struct <GetHasCompletedTutorial>d__25 : IAsyncStateMachine
		{
			[Token(Token = "0x40009D9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40009DA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x40009DB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string playFabId;

			[Token(Token = "0x40009DC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public PicoXRUser <>4__this;

			[Token(Token = "0x40009DD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private TaskAwaiter<GetUserDataResult> <>u__1;

			[Token(Token = "0x6000B98")]
			[Address(RVA = "0x11E2824", Offset = "0x11E2824", VA = "0x11E2824", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000B99")]
			[Address(RVA = "0x11E2C74", Offset = "0x11E2C74", VA = "0x11E2C74", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x40009B9")]
		private const string PicoUserNamePrefix = "PXR_";

		[Token(Token = "0x40009BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly ReactiveSource<bool?> _hasCompletedTutorial;

		[Token(Token = "0x40009BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly PlayFabUser _playFabUser;

		[Token(Token = "0x40009BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly string _uniqueID;

		[Token(Token = "0x40009BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private string _ticket;

		[Token(Token = "0x40009BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Task _updateTask;

		[Token(Token = "0x40009BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD1748", Offset = "0xBD1748")]
		private readonly string <DisplayName>k__BackingField;

		[Token(Token = "0x40009C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD1758", Offset = "0xBD1758")]
		private readonly Reactive<bool> <IsLoggedInToPlayFab>k__BackingField;

		[Token(Token = "0x40009C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD1768", Offset = "0xBD1768")]
		private readonly string <ImageUrl>k__BackingField;

		[Token(Token = "0x40009C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD1778", Offset = "0xBD1778")]
		private readonly string[] <PlatformFriends>k__BackingField;

		[Token(Token = "0x170001C2")]
		public string DisplayName
		{
			[Token(Token = "0x6000B87")]
			[Address(RVA = "0xFD3854", Offset = "0xFD3854", VA = "0xFD3854", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDE1E8", Offset = "0xBDE1E8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001C3")]
		public Reactive<bool> IsLoggedInToPlayFab
		{
			[Token(Token = "0x6000B88")]
			[Address(RVA = "0xFD385C", Offset = "0xFD385C", VA = "0xFD385C", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDE1F8", Offset = "0xBDE1F8")]
			get
			{
				return default(Reactive<bool>);
			}
		}

		[Token(Token = "0x170001C4")]
		public Reactive<bool?> HasCompletedTutorial
		{
			[Token(Token = "0x6000B89")]
			[Address(RVA = "0xFD3864", Offset = "0xFD3864", VA = "0xFD3864", Slot = "6")]
			get
			{
				return default(Reactive<bool?>);
			}
		}

		[Token(Token = "0x170001C5")]
		public string ImageUrl
		{
			[Token(Token = "0x6000B8A")]
			[Address(RVA = "0xFD38B8", Offset = "0xFD38B8", VA = "0xFD38B8", Slot = "7")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDE208", Offset = "0xBDE208")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001C6")]
		public string[] PlatformFriends
		{
			[Token(Token = "0x6000B8B")]
			[Address(RVA = "0xFD38C0", Offset = "0xFD38C0", VA = "0xFD38C0", Slot = "8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDE218", Offset = "0xBDE218")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B86")]
		[Address(RVA = "0xFD35C0", Offset = "0xFD35C0", VA = "0xFD35C0")]
		public PicoXRUser(string name, string uniqueID, string avatarUrl, PlayFabUser playFabUser)
		{
		}

		[Token(Token = "0x6000B8C")]
		[Address(RVA = "0xFD38C8", Offset = "0xFD38C8", VA = "0xFD38C8", Slot = "12")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xBDE228", Offset = "0xBDE228")]
		public Task RefreshCredentials()
		{
			return null;
		}

		[Token(Token = "0x6000B8D")]
		[Address(RVA = "0xFD39CC", Offset = "0xFD39CC", VA = "0xFD39CC", Slot = "9")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xBDE288", Offset = "0xBDE288")]
		public Task LogInToPlayFabAsync()
		{
			return null;
		}

		[Token(Token = "0x6000B8E")]
		[Address(RVA = "0xFD3ADC", Offset = "0xFD3ADC", VA = "0xFD3ADC", Slot = "10")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xBDE2E8", Offset = "0xBDE2E8")]
		public void SetTutorialCompleted()
		{
		}

		[Token(Token = "0x6000B8F")]
		[Address(RVA = "0xFD3BA0", Offset = "0xFD3BA0", VA = "0xFD3BA0", Slot = "11")]
		public void UpdatePlatformFriends()
		{
		}

		[Token(Token = "0x6000B90")]
		[Address(RVA = "0xFD3BA4", Offset = "0xFD3BA4", VA = "0xFD3BA4")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xBDE348", Offset = "0xBDE348")]
		private void GetHasCompletedTutorial(string playFabId)
		{
		}

		[Token(Token = "0x6000B91")]
		[Address(RVA = "0xFD3C6C", Offset = "0xFD3C6C", VA = "0xFD3C6C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDE3A8", Offset = "0xBDE3A8")]
		private bool <.ctor>b__6_0(string x)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200047A")]
	public class PicoXRUserProvider : IUserProvider
	{
		[StructLayout(3)]
		[Token(Token = "0x200047B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBC95A4", Offset = "0xBC95A4")]
		private struct <GetUserAsync>d__4 : IAsyncStateMachine
		{
			[Token(Token = "0x40009E2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40009E3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder<IUser> <>t__builder;

			[Token(Token = "0x40009E4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PicoXRUserProvider <>4__this;

			[Token(Token = "0x40009E5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public PlayFabUser playFabUser;

			[Token(Token = "0x40009E6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private GameObject <picoPayment>5__2;

			[Token(Token = "0x40009E7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private Unity.XR.PXR.Callback <callback>5__3;

			[Token(Token = "0x40009E8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private TaskAwaiter<bool> <>u__1;

			[Token(Token = "0x6000B9E")]
			[Address(RVA = "0x11E4718", Offset = "0x11E4718", VA = "0x11E4718", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000B9F")]
			[Address(RVA = "0x11E4E04", Offset = "0x11E4E04", VA = "0x11E4E04", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x40009DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private string _name;

		[Token(Token = "0x40009DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private string _uniqueID;

		[Token(Token = "0x40009E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private string _avatarUrl;

		[Token(Token = "0x40009E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TaskCompletionSource<bool> _userInfoRetrieved;

		[Token(Token = "0x6000B9A")]
		[Address(RVA = "0xFD3CB8", Offset = "0xFD3CB8", VA = "0xFD3CB8", Slot = "4")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xBDE3F8", Offset = "0xBDE3F8")]
		public Task<IUser> GetUserAsync(PlayFabUser playFabUser)
		{
			return null;
		}

		[Token(Token = "0x6000B9B")]
		[Address(RVA = "0xFD3DE8", Offset = "0xFD3DE8", VA = "0xFD3DE8")]
		private void CallbackOnOnUserInfoCallback(string name, string uniqueID, string avatarUrl)
		{
		}

		[Token(Token = "0x6000B9C")]
		[Address(RVA = "0xFD3E64", Offset = "0xFD3E64", VA = "0xFD3E64")]
		private void CallbackOnOnLoginCallback(string obj)
		{
		}

		[Token(Token = "0x6000B9D")]
		[Address(RVA = "0xFD3F18", Offset = "0xFD3F18", VA = "0xFD3F18")]
		public PicoXRUserProvider()
		{
		}
	}
	[Token(Token = "0x200047C")]
	public interface IInspectablePlayer
	{
		[Token(Token = "0x170001C7")]
		string EntityId
		{
			[Token(Token = "0x6000BA0")]
			get;
		}

		[Token(Token = "0x170001C8")]
		Task<OrientedTexture2D> ImageAsync
		{
			[Token(Token = "0x6000BA1")]
			get;
		}

		[Token(Token = "0x170001C9")]
		string DisplayName
		{
			[Token(Token = "0x6000BA2")]
			get;
		}

		[Token(Token = "0x170001CA")]
		int Level
		{
			[Token(Token = "0x6000BA3")]
			get;
		}

		[Token(Token = "0x170001CB")]
		FriendOpportunity? Opportunity
		{
			[Token(Token = "0x6000BA4")]
			get;
		}

		[Token(Token = "0x170001CC")]
		bool IsFavourite
		{
			[Token(Token = "0x6000BA5")]
			get;
		}

		[Token(Token = "0x170001CD")]
		bool CanMute
		{
			[Token(Token = "0x6000BA6")]
			get;
		}

		[Token(Token = "0x170001CE")]
		bool CanKick
		{
			[Token(Token = "0x6000BA7")]
			get;
		}

		[Token(Token = "0x14000006")]
		event System.EventHandler Updated;

		[Token(Token = "0x6000BA8")]
		void RemoveFriend();

		[Token(Token = "0x6000BA9")]
		void AcceptFriendRequest();

		[Token(Token = "0x6000BAA")]
		void SetUserIsBlocked(bool isBlocked);

		[Token(Token = "0x6000BAB")]
		void SendFriendRequest();

		[Token(Token = "0x6000BAC")]
		void SetFavorite(bool isFavorite);

		[Token(Token = "0x6000BAD")]
		void RejectMember();

		[Token(Token = "0x6000BAE")]
		void LeaveParty();
	}
	[Token(Token = "0x200047D")]
	public class PlayerInspectorPlayer : IInspectablePlayer
	{
		[Token(Token = "0x40009E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public PlayFabStatusListener PlayFabStatusListener;

		[Token(Token = "0x40009EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD1788", Offset = "0xBD1788")]
		private string <EntityId>k__BackingField;

		[Token(Token = "0x40009EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD1798", Offset = "0xBD1798")]
		private Task<OrientedTexture2D> <ImageAsync>k__BackingField;

		[Token(Token = "0x40009EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD17A8", Offset = "0xBD17A8")]
		private string <DisplayName>k__BackingField;

		[Token(Token = "0x40009ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD17B8", Offset = "0xBD17B8")]
		private int <Level>k__BackingField;

		[Token(Token = "0x40009EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD17C8", Offset = "0xBD17C8")]
		private FriendOpportunity? <Opportunity>k__BackingField;

		[Token(Token = "0x40009EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD17D8", Offset = "0xBD17D8")]
		private bool <IsFavourite>k__BackingField;

		[Token(Token = "0x40009F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD17E8", Offset = "0xBD17E8")]
		private bool <CanMute>k__BackingField;

		[Token(Token = "0x40009F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD17F8", Offset = "0xBD17F8")]
		private bool <CanKick>k__BackingField;

		[Token(Token = "0x170001CF")]
		public string EntityId
		{
			[Token(Token = "0x6000BB1")]
			[Address(RVA = "0xFE9190", Offset = "0xFE9190", VA = "0xFE9190", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDE488", Offset = "0xBDE488")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000BB2")]
			[Address(RVA = "0xFE9198", Offset = "0xFE9198", VA = "0xFE9198")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDE498", Offset = "0xBDE498")]
			set
			{
			}
		}

		[Token(Token = "0x170001D0")]
		public Task<OrientedTexture2D> ImageAsync
		{
			[Token(Token = "0x6000BB3")]
			[Address(RVA = "0xFE91A0", Offset = "0xFE91A0", VA = "0xFE91A0", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDE4A8", Offset = "0xBDE4A8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000BB4")]
			[Address(RVA = "0xFE91A8", Offset = "0xFE91A8", VA = "0xFE91A8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDE4B8", Offset = "0xBDE4B8")]
			set
			{
			}
		}

		[Token(Token = "0x170001D1")]
		public string DisplayName
		{
			[Token(Token = "0x6000BB5")]
			[Address(RVA = "0xFE91B0", Offset = "0xFE91B0", VA = "0xFE91B0", Slot = "6")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDE4C8", Offset = "0xBDE4C8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000BB6")]
			[Address(RVA = "0xFE91B8", Offset = "0xFE91B8", VA = "0xFE91B8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDE4D8", Offset = "0xBDE4D8")]
			set
			{
			}
		}

		[Token(Token = "0x170001D2")]
		public int Level
		{
			[Token(Token = "0x6000BB7")]
			[Address(RVA = "0xFE91C0", Offset = "0xFE91C0", VA = "0xFE91C0", Slot = "7")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDE4E8", Offset = "0xBDE4E8")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000BB8")]
			[Address(RVA = "0xFE91C8", Offset = "0xFE91C8", VA = "0xFE91C8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDE4F8", Offset = "0xBDE4F8")]
			set
			{
			}
		}

		[Token(Token = "0x170001D3")]
		public FriendOpportunity? Opportunity
		{
			[Token(Token = "0x6000BB9")]
			[Address(RVA = "0xFE91D0", Offset = "0xFE91D0", VA = "0xFE91D0", Slot = "8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDE508", Offset = "0xBDE508")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000BBA")]
			[Address(RVA = "0xFE91D8", Offset = "0xFE91D8", VA = "0xFE91D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDE518", Offset = "0xBDE518")]
			set
			{
			}
		}

		[Token(Token = "0x170001D4")]
		public bool IsFavourite
		{
			[Token(Token = "0x6000BBB")]
			[Address(RVA = "0xFE91E0", Offset = "0xFE91E0", VA = "0xFE91E0", Slot = "9")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDE528", Offset = "0xBDE528")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000BBC")]
			[Address(RVA = "0xFE91E8", Offset = "0xFE91E8", VA = "0xFE91E8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDE538", Offset = "0xBDE538")]
			set
			{
			}
		}

		[Token(Token = "0x170001D5")]
		public bool CanMute
		{
			[Token(Token = "0x6000BBD")]
			[Address(RVA = "0xFE91F4", Offset = "0xFE91F4", VA = "0xFE91F4", Slot = "10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDE548", Offset = "0xBDE548")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000BBE")]
			[Address(RVA = "0xFE91FC", Offset = "0xFE91FC", VA = "0xFE91FC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDE558", Offset = "0xBDE558")]
			set
			{
			}
		}

		[Token(Token = "0x170001D6")]
		public bool CanKick
		{
			[Token(Token = "0x6000BBF")]
			[Address(RVA = "0xFE9208", Offset = "0xFE9208", VA = "0xFE9208", Slot = "11")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDE568", Offset = "0xBDE568")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000BC0")]
			[Address(RVA = "0xFE9210", Offset = "0xFE9210", VA = "0xFE9210")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDE578", Offset = "0xBDE578")]
			set
			{
			}
		}

		[Token(Token = "0x14000007")]
		public event System.EventHandler Updated
		{
			[Token(Token = "0x6000BC1")]
			[Address(RVA = "0xFE921C", Offset = "0xFE921C", VA = "0xFE921C", Slot = "19")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDE588", Offset = "0xBDE588")]
			add
			{
			}
			[Token(Token = "0x6000BC2")]
			[Address(RVA = "0xFE92BC", Offset = "0xFE92BC", VA = "0xFE92BC", Slot = "20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDE598", Offset = "0xBDE598")]
			remove
			{
			}
		}

		[Token(Token = "0x6000BC3")]
		[Address(RVA = "0xFE935C", Offset = "0xFE935C", VA = "0xFE935C", Slot = "12")]
		public void RemoveFriend()
		{
		}

		[Token(Token = "0x6000BC4")]
		[Address(RVA = "0xFE938C", Offset = "0xFE938C", VA = "0xFE938C", Slot = "13")]
		public void AcceptFriendRequest()
		{
		}

		[Token(Token = "0x6000BC5")]
		[Address(RVA = "0xFE93BC", Offset = "0xFE93BC", VA = "0xFE93BC", Slot = "14")]
		public void SetUserIsBlocked(bool isBlocked)
		{
		}

		[Token(Token = "0x6000BC6")]
		[Address(RVA = "0xFE93F0", Offset = "0xFE93F0", VA = "0xFE93F0", Slot = "15")]
		public void SendFriendRequest()
		{
		}

		[Token(Token = "0x6000BC7")]
		[Address(RVA = "0xFE9420", Offset = "0xFE9420", VA = "0xFE9420", Slot = "16")]
		public void SetFavorite(bool isFavorite)
		{
		}

		[Token(Token = "0x6000BC8")]
		[Address(RVA = "0xFE9454", Offset = "0xFE9454", VA = "0xFE9454", Slot = "17")]
		public void RejectMember()
		{
		}

		[Token(Token = "0x6000BC9")]
		[Address(RVA = "0xFE9484", Offset = "0xFE9484", VA = "0xFE9484", Slot = "18")]
		public void LeaveParty()
		{
		}

		[Token(Token = "0x6000BCA")]
		[Address(RVA = "0xFD12AC", Offset = "0xFD12AC", VA = "0xFD12AC")]
		public void UpdateInspector()
		{
		}

		[Token(Token = "0x6000BCB")]
		[Address(RVA = "0xFD07CC", Offset = "0xFD07CC", VA = "0xFD07CC")]
		public PlayerInspectorPlayer()
		{
		}
	}
	[Token(Token = "0x200047E")]
	public class PlayersInfoCache
	{
		[Token(Token = "0x200047F")]
		public struct PlayerInfo
		{
			[Token(Token = "0x40009F6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string EntityId;

			[Token(Token = "0x40009F7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public string DisplayName;

			[Token(Token = "0x40009F8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string AvatarUrl;

			[Token(Token = "0x40009F9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public ReactiveSource<int> Level;

			[Token(Token = "0x40009FA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ReactiveSource<string> Border;

			[Token(Token = "0x40009FB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public ReactiveSource<string> Title;

			[Token(Token = "0x6000BD3")]
			[Address(RVA = "0x10535A0", Offset = "0x10535A0", VA = "0x10535A0")]
			public PlayerInfo(string entityId, string displayName, string avatarUrl, ReactiveSource<int> level, ReactiveSource<string> border, ReactiveSource<string> title)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000480")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBC95B4", Offset = "0xBC95B4")]
		private sealed class <>c
		{
			[Token(Token = "0x40009FC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40009FD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<TaskCompletionSource<PlayerInfo>, bool> <>9__5_0;

			[Token(Token = "0x40009FE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<TaskCompletionSource<PlayerInfo>, string> <>9__5_1;

			[Token(Token = "0x6000BD5")]
			[Address(RVA = "0x1052D14", Offset = "0x1052D14", VA = "0x1052D14")]
			public <>c()
			{
			}

			[Token(Token = "0x6000BD6")]
			[Address(RVA = "0x1052D1C", Offset = "0x1052D1C", VA = "0x1052D1C")]
			internal bool <RefreshAsync>b__5_0(TaskCompletionSource<PlayerInfo> x)
			{
				return default(bool);
			}

			[Token(Token = "0x6000BD7")]
			[Address(RVA = "0x1052D6C", Offset = "0x1052D6C", VA = "0x1052D6C")]
			internal string <RefreshAsync>b__5_1(TaskCompletionSource<PlayerInfo> x)
			{
				return null;
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000481")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBC95C4", Offset = "0xBC95C4")]
		private struct <RefreshAsync>d__5 : IAsyncStateMachine
		{
			[Token(Token = "0x40009FF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000A00")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x4000A01")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PlayersInfoCache <>4__this;

			[Token(Token = "0x4000A02")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x4000A03")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private TaskAwaiter<GetPlayersInfoResult> <>u__2;

			[Token(Token = "0x6000BD8")]
			[Address(RVA = "0x10535BC", Offset = "0x10535BC", VA = "0x10535BC", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000BD9")]
			[Address(RVA = "0x1053DC4", Offset = "0x1053DC4", VA = "0x1053DC4", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000482")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBC95D4", Offset = "0xBC95D4")]
		private struct <ClearAsync>d__6 : IAsyncStateMachine
		{
			[Token(Token = "0x4000A04")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000A05")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x4000A06")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PlayersInfoCache <>4__this;

			[Token(Token = "0x4000A07")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x6000BDA")]
			[Address(RVA = "0x1052DE4", Offset = "0x1052DE4", VA = "0x1052DE4", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000BDB")]
			[Address(RVA = "0x105301C", Offset = "0x105301C", VA = "0x105301C", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000483")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBC95E4", Offset = "0xBC95E4")]
		private struct <Lookup>d__8 : IAsyncStateMachine
		{
			[Token(Token = "0x4000A08")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000A09")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x4000A0A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PlayersInfoCache <>4__this;

			[Token(Token = "0x4000A0B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private YieldAwaitable.YieldAwaiter <>u__1;

			[Token(Token = "0x4000A0C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private TaskAwaiter<GetPlayersInfoResult> <>u__2;

			[Token(Token = "0x6000BDC")]
			[Address(RVA = "0x1053028", Offset = "0x1053028", VA = "0x1053028", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000BDD")]
			[Address(RVA = "0x10535B0", Offset = "0x10535B0", VA = "0x10535B0", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x40009F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly Dictionary<string, TaskCompletionSource<PlayerInfo>> _cache;

		[Token(Token = "0x40009F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly List<string> _queuedPlayers;

		[Token(Token = "0x40009F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Task _lookupTask;

		[Token(Token = "0x6000BCC")]
		[Address(RVA = "0x1116160", Offset = "0x1116160", VA = "0x1116160")]
		public void Clear()
		{
		}

		[Token(Token = "0x6000BCD")]
		[Address(RVA = "0x1116288", Offset = "0x1116288", VA = "0x1116288")]
		public void RefreshLevels()
		{
		}

		[Token(Token = "0x6000BCE")]
		[Address(RVA = "0x11162AC", Offset = "0x11162AC", VA = "0x11162AC")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xBDE5A8", Offset = "0xBDE5A8")]
		private Task RefreshAsync()
		{
			return null;
		}

		[Token(Token = "0x6000BCF")]
		[Address(RVA = "0x1116184", Offset = "0x1116184", VA = "0x1116184")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xBDE608", Offset = "0xBDE608")]
		private Task ClearAsync()
		{
			return null;
		}

		[Token(Token = "0x6000BD0")]
		[Address(RVA = "0x11112BC", Offset = "0x11112BC", VA = "0x11112BC")]
		public Task<PlayerInfo> GetPlayerInfo(string entityId)
		{
			return null;
		}

		[Token(Token = "0x6000BD1")]
		[Address(RVA = "0x11163C8", Offset = "0x11163C8", VA = "0x11163C8")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xBDE668", Offset = "0xBDE668")]
		private Task Lookup()
		{
			return null;
		}

		[Token(Token = "0x6000BD2")]
		[Address(RVA = "0x11164E4", Offset = "0x11164E4", VA = "0x11164E4")]
		public PlayersInfoCache()
		{
		}
	}
}
namespace Cortopia.Scripts.UI
{
	[Token(Token = "0x2000484")]
	public class ArmDisarmStatusUI : MonoBehaviour
	{
		[Token(Token = "0x4000A0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly LocalizedString EmptyString;

		[Token(Token = "0x4000A0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private LocalizedString armingText;

		[Token(Token = "0x4000A0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private LocalizedString disarmingText;

		[Token(Token = "0x4000A10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly ReactiveSource<bool> _isDisplayedSource;

		[Token(Token = "0x4000A11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly ReactiveSource<float> _progressValue;

		[Token(Token = "0x4000A12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private readonly ReactiveSource<LocalizedString> _text;

		[Token(Token = "0x4000A13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private readonly ReactiveTransaction _transaction;

		[Token(Token = "0x170001D7")]
		public Reactive<bool> IsDisplayed
		{
			[Token(Token = "0x6000BDE")]
			[Address(RVA = "0x13291E8", Offset = "0x13291E8", VA = "0x13291E8")]
			get
			{
				return default(Reactive<bool>);
			}
		}

		[Token(Token = "0x170001D8")]
		public Reactive<float> ProgressValue
		{
			[Token(Token = "0x6000BDF")]
			[Address(RVA = "0x132923C", Offset = "0x132923C", VA = "0x132923C")]
			get
			{
				return default(Reactive<float>);
			}
		}

		[Token(Token = "0x170001D9")]
		public Reactive<LocalizedString> Text
		{
			[Token(Token = "0x6000BE0")]
			[Address(RVA = "0x1329290", Offset = "0x1329290", VA = "0x1329290")]
			get
			{
				return default(Reactive<LocalizedString>);
			}
		}

		[Token(Token = "0x6000BE1")]
		[Address(RVA = "0x13292E4", Offset = "0x13292E4", VA = "0x13292E4")]
		private void Update()
		{
		}

		[Token(Token = "0x6000BE2")]
		[Address(RVA = "0x1329690", Offset = "0x1329690", VA = "0x1329690")]
		public ArmDisarmStatusUI()
		{
		}
	}
	[Token(Token = "0x2000485")]
	public class AutoScroller : MonoBehaviour
	{
		[Token(Token = "0x4000A14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private RectTransform viewport;

		[Token(Token = "0x4000A15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private RectTransform content;

		[Token(Token = "0x4000A16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float startPosition;

		[Token(Token = "0x4000A17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private float scrollSpeedNormal;

		[Token(Token = "0x4000A18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private float scrollSpeedFast;

		[Token(Token = "0x4000A19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float _currentPosition;

		[Token(Token = "0x4000A1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool _isScrollingFast;

		[Token(Token = "0x6000BE4")]
		[Address(RVA = "0x132ACD0", Offset = "0x132ACD0", VA = "0x132ACD0")]
		private void Update()
		{
		}

		[Token(Token = "0x6000BE5")]
		[Address(RVA = "0x132AE0C", Offset = "0x132AE0C", VA = "0x132AE0C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000BE6")]
		[Address(RVA = "0x132AE58", Offset = "0x132AE58", VA = "0x132AE58")]
		public void ScrollNormal()
		{
		}

		[Token(Token = "0x6000BE7")]
		[Address(RVA = "0x132AE60", Offset = "0x132AE60", VA = "0x132AE60")]
		public void ScrollFast()
		{
		}

		[Token(Token = "0x6000BE8")]
		[Address(RVA = "0x132AE6C", Offset = "0x132AE6C", VA = "0x132AE6C")]
		public AutoScroller()
		{
		}
	}
	[Token(Token = "0x2000486")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBC95F4", Offset = "0xBC95F4")]
	public class BorderDefinition : ScriptableObject
	{
		[Token(Token = "0x4000A1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string id;

		[Token(Token = "0x4000A1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Sprite border;

		[Token(Token = "0x4000A1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string season;

		[Token(Token = "0x6000BE9")]
		[Address(RVA = "0x1333140", Offset = "0x1333140", VA = "0x1333140")]
		public BorderDefinition()
		{
		}
	}
	[Token(Token = "0x2000487")]
	public class ButtonSchematic : MonoBehaviour
	{
		[Token(Token = "0x4000A1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AnimationCurve scaleCurve;

		[Token(Token = "0x4000A1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float scaleDuration;

		[Token(Token = "0x4000A20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float _elapsedTime;

		[Token(Token = "0x4000A21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool _isVisible;

		[Token(Token = "0x6000BEA")]
		[Address(RVA = "0x1334BB0", Offset = "0x1334BB0", VA = "0x1334BB0")]
		private void Update()
		{
		}

		[Token(Token = "0x6000BEB")]
		[Address(RVA = "0x1334D1C", Offset = "0x1334D1C", VA = "0x1334D1C")]
		public void SetVisibility(bool isVisible)
		{
		}

		[Token(Token = "0x6000BEC")]
		[Address(RVA = "0x1334D6C", Offset = "0x1334D6C", VA = "0x1334D6C")]
		public void ForceSetVisibility(bool isVisible)
		{
		}

		[Token(Token = "0x6000BED")]
		[Address(RVA = "0x1334E00", Offset = "0x1334E00", VA = "0x1334E00")]
		public ButtonSchematic()
		{
		}
	}
	[Token(Token = "0x2000488")]
	public class CheckIfInViewport : MonoBehaviour
	{
		[Token(Token = "0x4000A22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private ScrollRect scrollView;

		[Token(Token = "0x4000A23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private bool getScrollRectFromParents;

		[Token(Token = "0x4000A24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly ReactiveSource<bool> _inViewport;

		[Token(Token = "0x4000A25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private RectTransform _myTransform;

		[Token(Token = "0x4000A26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private RectTransform _viewport;

		[Token(Token = "0x170001DA")]
		public Reactive<bool> InViewport
		{
			[Token(Token = "0x6000BEE")]
			[Address(RVA = "0x1160DB0", Offset = "0x1160DB0", VA = "0x1160DB0")]
			get
			{
				return default(Reactive<bool>);
			}
		}

		[Token(Token = "0x6000BEF")]
		[Address(RVA = "0x1160E20", Offset = "0x1160E20", VA = "0x1160E20")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000BF0")]
		[Address(RVA = "0x1160F44", Offset = "0x1160F44", VA = "0x1160F44")]
		private bool CheckCollision()
		{
			return default(bool);
		}

		[Token(Token = "0x6000BF1")]
		[Address(RVA = "0x116105C", Offset = "0x116105C", VA = "0x116105C")]
		public CheckIfInViewport()
		{
		}

		[Token(Token = "0x6000BF2")]
		[Address(RVA = "0x11610EC", Offset = "0x11610EC", VA = "0x11610EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDE6F8", Offset = "0xBDE6F8")]
		private void <Awake>b__7_0(Vector2 x)
		{
		}
	}
	[Token(Token = "0x2000489")]
	public class CollapsableMenuUI : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200048A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBC9644", Offset = "0xBC9644")]
		private sealed class <>c
		{
			[Token(Token = "0x4000A2C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000A2D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<(int, int), string> <>9__7_0;

			[Token(Token = "0x6000BFA")]
			[Address(RVA = "0x1025784", Offset = "0x1025784", VA = "0x1025784")]
			public <>c()
			{
			}

			[Token(Token = "0x6000BFB")]
			[Address(RVA = "0x102578C", Offset = "0x102578C", VA = "0x102578C")]
			internal string <get_Count>b__7_0((int, int) x)
			{
				return null;
			}
		}

		[Token(Token = "0x4000A27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private ReactiveSource<LocalizedString> _heading;

		[Token(Token = "0x4000A28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private ReactiveSource<int> _count;

		[Token(Token = "0x4000A29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private ReactiveSource<int> _maxCount;

		[Token(Token = "0x4000A2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private object[] _parameters;

		[Token(Token = "0x4000A2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform contentParent;

		[Token(Token = "0x170001DB")]
		public Reactive<LocalizedString> Heading
		{
			[Token(Token = "0x6000BF3")]
			[Address(RVA = "0x116412C", Offset = "0x116412C", VA = "0x116412C")]
			get
			{
				return default(Reactive<LocalizedString>);
			}
		}

		[Token(Token = "0x170001DC")]
		public Reactive<string> Count
		{
			[Token(Token = "0x6000BF4")]
			[Address(RVA = "0x1164180", Offset = "0x1164180", VA = "0x1164180")]
			get
			{
				return default(Reactive<string>);
			}
		}

		[Token(Token = "0x6000BF5")]
		[Address(RVA = "0x1164308", Offset = "0x1164308", VA = "0x1164308")]
		public void UpdateHeading(LocalizedString newHeading)
		{
		}

		[Token(Token = "0x6000BF6")]
		[Address(RVA = "0x11643D0", Offset = "0x11643D0", VA = "0x11643D0")]
		public void UpdateCount(int newCount)
		{
		}

		[Token(Token = "0x6000BF7")]
		[Address(RVA = "0x1164434", Offset = "0x1164434", VA = "0x1164434")]
		public void UpdateMaxCount(int newCount)
		{
		}

		[Token(Token = "0x6000BF8")]
		[Address(RVA = "0x1164498", Offset = "0x1164498", VA = "0x1164498")]
		public CollapsableMenuUI()
		{
		}
	}
	[Token(Token = "0x200048B")]
	public class CombatEventVisuals : MonoBehaviour
	{
		[Token(Token = "0x4000A2E")]
		private const int AnimatorBaseLayer = 0;

		[Token(Token = "0x4000A2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly int AnimDamageReceived;

		[Token(Token = "0x4000A30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static readonly int AnimHealthReceived;

		[Token(Token = "0x4000A31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly int AnimNormalizedHealth;

		[Token(Token = "0x4000A32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private static readonly int AnimIsDead;

		[Token(Token = "0x4000A33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static readonly int AnimIdleStateName;

		[Token(Token = "0x4000A34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private static readonly int AnimDamagedStateName;

		[Token(Token = "0x4000A35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static readonly int MatHorizontalPan;

		[Token(Token = "0x4000A36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBD18C8", Offset = "0xBD18C8")]
		[SerializeField]
		private Animator animator;

		[Token(Token = "0x4000A37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Renderer damageRenderer;

		[Token(Token = "0x4000A38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 _cachedDamageOrigin;

		[Token(Token = "0x4000A39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Vector3 _cachedHealingOrigin;

		[Token(Token = "0x4000A3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private EventKey _lastStartedDamageEvent;

		[Token(Token = "0x4000A3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private EventKey _lastStartedHealingEvent;

		[Token(Token = "0x6000BFC")]
		[Address(RVA = "0x11651C8", Offset = "0x11651C8", VA = "0x11651C8")]
		private void Start()
		{
		}

		[Token(Token = "0x6000BFD")]
		[Address(RVA = "0x1165508", Offset = "0x1165508", VA = "0x1165508")]
		private void Update()
		{
		}

		[Token(Token = "0x6000BFE")]
		[Address(RVA = "0x11657E8", Offset = "0x11657E8", VA = "0x11657E8")]
		private float GetMaterialDirection(Vector3 senderPosition)
		{
			return default(float);
		}

		[Token(Token = "0x6000BFF")]
		[Address(RVA = "0x11658DC", Offset = "0x11658DC", VA = "0x11658DC")]
		private void OnHealingTakenEvent(EventHealedBy eventHeal)
		{
		}

		[Token(Token = "0x6000C00")]
		[Address(RVA = "0x11659F8", Offset = "0x11659F8", VA = "0x11659F8")]
		private void OnDamageTakenEvent(EventHitBy eventDamage)
		{
		}

		[Token(Token = "0x6000C01")]
		[Address(RVA = "0x1165B64", Offset = "0x1165B64", VA = "0x1165B64")]
		private void OnEventCancelled(CallbackEventCanceled callback)
		{
		}

		[Token(Token = "0x6000C02")]
		[Address(RVA = "0x1165CE8", Offset = "0x1165CE8", VA = "0x1165CE8")]
		private void OnPlayerDied(EventPlayerDied callback)
		{
		}

		[Token(Token = "0x6000C03")]
		[Address(RVA = "0x1165DF8", Offset = "0x1165DF8", VA = "0x1165DF8")]
		private void OnPlayerResurrected(EventPlayerResurrected callback)
		{
		}

		[Token(Token = "0x6000C04")]
		[Address(RVA = "0x1165F08", Offset = "0x1165F08", VA = "0x1165F08")]
		public CombatEventVisuals()
		{
		}
	}
	[Token(Token = "0x200048C")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xBC9654", Offset = "0xBC9654")]
	public class ControlBindingReactiveArgument : MonoBehaviour
	{
		[Token(Token = "0x4000A3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private string staticValue;

		[Token(Token = "0x4000A3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private BoundValue<bool> hasDynamicBinding;

		[Token(Token = "0x4000A3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private BoundValue<string> binding;

		[Token(Token = "0x4000A3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private LocalizeStringEvent _localizeStringEvent;

		[Token(Token = "0x4000A40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private ReactiveSubscription _subscription;

		[Token(Token = "0x6000C06")]
		[Address(RVA = "0x11673A0", Offset = "0x11673A0", VA = "0x11673A0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000C07")]
		[Address(RVA = "0x11673F4", Offset = "0x11673F4", VA = "0x11673F4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000C08")]
		[Address(RVA = "0x1167530", Offset = "0x1167530", VA = "0x1167530")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000C09")]
		[Address(RVA = "0x116753C", Offset = "0x116753C", VA = "0x116753C")]
		private void OnBindingChanged((bool, string) data)
		{
		}

		[Token(Token = "0x6000C0A")]
		[Address(RVA = "0x1167618", Offset = "0x1167618", VA = "0x1167618")]
		public ControlBindingReactiveArgument()
		{
		}
	}
	[Token(Token = "0x200048D")]
	public class ControllerSchematic : MonoBehaviour
	{
		[Token(Token = "0x4000A41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Side side;

		[Token(Token = "0x4000A42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private ButtonSchematic primaryButton;

		[Token(Token = "0x4000A43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private ButtonSchematic secondaryButton;

		[Token(Token = "0x4000A44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private ButtonSchematic menuButton;

		[Token(Token = "0x4000A45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private ButtonSchematic triggerButton;

		[Token(Token = "0x4000A46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private ButtonSchematic grabButton;

		[Token(Token = "0x4000A47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool _hasTeleportedOnce;

		[Token(Token = "0x4000A48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private ReactiveSubscription _subscription;

		[Token(Token = "0x6000C0B")]
		[Address(RVA = "0x1167620", Offset = "0x1167620", VA = "0x1167620")]
		private void Start()
		{
		}

		[Token(Token = "0x6000C0C")]
		[Address(RVA = "0x11676A0", Offset = "0x11676A0", VA = "0x11676A0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000C0D")]
		[Address(RVA = "0x11677BC", Offset = "0x11677BC", VA = "0x11677BC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000C0E")]
		[Address(RVA = "0x11677C8", Offset = "0x11677C8", VA = "0x11677C8")]
		private void ToggleButtons(HandButton button)
		{
		}

		[Token(Token = "0x6000C0F")]
		[Address(RVA = "0x1167944", Offset = "0x1167944", VA = "0x1167944")]
		public ControllerSchematic()
		{
		}
	}
	[Token(Token = "0x200048E")]
	public class CooldownReadyNotification : MonoBehaviour
	{
		[Token(Token = "0x4000A49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private BoundValue<bool> hasCooldown;

		[Token(Token = "0x4000A4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private BoundValue<AssetRefSpellSetup> currentSpell;

		[Token(Token = "0x4000A4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float animationTime;

		[Token(Token = "0x4000A4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly ReactiveSource<float> _normalizedTime;

		[Token(Token = "0x4000A4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private readonly ReactiveSource<bool> _visualsActive;

		[Token(Token = "0x4000A4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float _elapsedTime;

		[Token(Token = "0x4000A4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private ReactiveSubscription _subscription;

		[Token(Token = "0x4000A50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool? _cooldownCache;

		[Token(Token = "0x4000A51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private AssetRefSpellSetup? _spellSetupCache;

		[Token(Token = "0x170001DD")]
		public Reactive<bool> VisualsActive
		{
			[Token(Token = "0x6000C10")]
			[Address(RVA = "0x11679E4", Offset = "0x11679E4", VA = "0x11679E4")]
			get
			{
				return default(Reactive<bool>);
			}
		}

		[Token(Token = "0x170001DE")]
		public Reactive<float> NormalizedTime
		{
			[Token(Token = "0x6000C11")]
			[Address(RVA = "0x1167A54", Offset = "0x1167A54", VA = "0x1167A54")]
			get
			{
				return default(Reactive<float>);
			}
		}

		[Token(Token = "0x6000C12")]
		[Address(RVA = "0x1167AA8", Offset = "0x1167AA8", VA = "0x1167AA8")]
		private void Update()
		{
		}

		[Token(Token = "0x6000C13")]
		[Address(RVA = "0x1167B98", Offset = "0x1167B98", VA = "0x1167B98")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000C14")]
		[Address(RVA = "0x1167CDC", Offset = "0x1167CDC", VA = "0x1167CDC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000C15")]
		[Address(RVA = "0x1167D6C", Offset = "0x1167D6C", VA = "0x1167D6C")]
		private void HasCooldownChanged((bool, AssetRefSpellSetup) valueTuple)
		{
		}

		[Token(Token = "0x6000C16")]
		[Address(RVA = "0x1167EC4", Offset = "0x1167EC4", VA = "0x1167EC4")]
		public CooldownReadyNotification()
		{
		}
	}
	[Token(Token = "0x200048F")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xBC96B4", Offset = "0xBC96B4")]
	public class Countdown : MonoBehaviour
	{
		[Token(Token = "0x4000A52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private BoundValue<int> startValue;

		[Token(Token = "0x4000A53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private TMP_Text _textField;

		[Token(Token = "0x4000A54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int _currentValue;

		[Token(Token = "0x4000A55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float _startTime;

		[Token(Token = "0x6000C17")]
		[Address(RVA = "0x1168534", Offset = "0x1168534", VA = "0x1168534")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000C18")]
		[Address(RVA = "0x1168588", Offset = "0x1168588", VA = "0x1168588")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000C19")]
		[Address(RVA = "0x11685E4", Offset = "0x11685E4", VA = "0x11685E4")]
		private void Update()
		{
		}

		[Token(Token = "0x6000C1A")]
		[Address(RVA = "0x11686F8", Offset = "0x11686F8", VA = "0x11686F8")]
		public Countdown()
		{
		}
	}
	[Token(Token = "0x2000490")]
	public class DebugCommands : MonoBehaviour
	{
		[StructLayout(3)]
		[Token(Token = "0x2000491")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBC9714", Offset = "0xBC9714")]
		private struct <UpdateXPAndEntitlementsAsync>d__20 : IAsyncStateMachine
		{
			[Token(Token = "0x4000A5E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000A5F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x4000A60")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int xp;

			[Token(Token = "0x4000A61")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x6000C29")]
			[Address(RVA = "0x1027CB0", Offset = "0x1027CB0", VA = "0x1027CB0", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000C2A")]
			[Address(RVA = "0x1027F18", Offset = "0x1027F18", VA = "0x1027F18", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4000A56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private PlayFabStatusListener playFabStatusListener;

		[Token(Token = "0x4000A57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private DebugValueAdjust adjustMMR;

		[Token(Token = "0x4000A58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private DebugValueAdjust adjustXP;

		[Token(Token = "0x4000A59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private PseudoLocale pseudoLocale;

		[Token(Token = "0x4000A5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private GameObject drawingCollision;

		[Token(Token = "0x4000A5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private GameObject eventsLogging;

		[Token(Token = "0x4000A5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Locale _previousLocale;

		[Token(Token = "0x4000A5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private ReactiveSubscription _subscription;

		[Token(Token = "0x6000C1B")]
		[Address(RVA = "0x116F43C", Offset = "0x116F43C", VA = "0x116F43C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000C1C")]
		[Address(RVA = "0x116F514", Offset = "0x116F514", VA = "0x116F514")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000C1D")]
		[Address(RVA = "0x116F520", Offset = "0x116F520", VA = "0x116F520")]
		private void OnOwnGroupStatusChanged(GetOwnGroupStatusResult? ownGroupStatus)
		{
		}

		[Token(Token = "0x6000C1E")]
		[Address(RVA = "0x116F5E0", Offset = "0x116F5E0", VA = "0x116F5E0")]
		public void NextMatchPhase()
		{
		}

		[Token(Token = "0x6000C1F")]
		[Address(RVA = "0x116F6F4", Offset = "0x116F6F4", VA = "0x116F6F4")]
		public void ToggleMatchTimer()
		{
		}

		[Token(Token = "0x6000C20")]
		[Address(RVA = "0x116F808", Offset = "0x116F808", VA = "0x116F808")]
		public void ToggleCooldown()
		{
		}

		[Token(Token = "0x6000C21")]
		[Address(RVA = "0x116F91C", Offset = "0x116F91C", VA = "0x116F91C")]
		public void ToggleCooldownTimings()
		{
		}

		[Token(Token = "0x6000C22")]
		[Address(RVA = "0x116FA28", Offset = "0x116FA28", VA = "0x116FA28")]
		public void ToggleDrawCollision()
		{
		}

		[Token(Token = "0x6000C23")]
		[Address(RVA = "0x116FB40", Offset = "0x116FB40", VA = "0x116FB40")]
		public void ToggleEventLogging()
		{
		}

		[Token(Token = "0x6000C24")]
		[Address(RVA = "0x116FC58", Offset = "0x116FC58", VA = "0x116FC58")]
		public void TogglePseudoLocale()
		{
		}

		[Token(Token = "0x6000C25")]
		[Address(RVA = "0x116FD00", Offset = "0x116FD00", VA = "0x116FD00")]
		public void UpdateMMR()
		{
		}

		[Token(Token = "0x6000C26")]
		[Address(RVA = "0x116FD84", Offset = "0x116FD84", VA = "0x116FD84")]
		public void UpdateXP()
		{
		}

		[Token(Token = "0x6000C27")]
		[Address(RVA = "0x116FE08", Offset = "0x116FE08", VA = "0x116FE08")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xBDE708", Offset = "0xBDE708")]
		private Task UpdateXPAndEntitlementsAsync(int xp)
		{
			return null;
		}

		[Token(Token = "0x6000C28")]
		[Address(RVA = "0x116FF0C", Offset = "0x116FF0C", VA = "0x116FF0C")]
		public DebugCommands()
		{
		}
	}
	[Token(Token = "0x2000492")]
	public class DebugValueAdjust : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000493")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBC9724", Offset = "0xBC9724")]
		private sealed class <>c
		{
			[Token(Token = "0x4000A68")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000A69")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<int, bool> <>9__7_0;

			[Token(Token = "0x4000A6A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<(int, int), int> <>9__12_0;

			[Token(Token = "0x6000C37")]
			[Address(RVA = "0x102A024", Offset = "0x102A024", VA = "0x102A024")]
			public <>c()
			{
			}

			[Token(Token = "0x6000C38")]
			[Address(RVA = "0x102A02C", Offset = "0x102A02C", VA = "0x102A02C")]
			internal bool <get_HasAdjustment>b__7_0(int x)
			{
				return default(bool);
			}

			[Token(Token = "0x6000C39")]
			[Address(RVA = "0x102A038", Offset = "0x102A038", VA = "0x102A038")]
			internal int <OnEnable>b__12_0((int, int) x)
			{
				return default(int);
			}
		}

		[Token(Token = "0x4000A62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private int minValue;

		[Token(Token = "0x4000A63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private int maxValue;

		[Token(Token = "0x4000A64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly ReactiveSource<IList<object>> _totalValueArguments;

		[Token(Token = "0x4000A65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly ReactiveSource<int> _originalValue;

		[Token(Token = "0x4000A66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly ReactiveSource<int> _adjustment;

		[Token(Token = "0x4000A67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private ReactiveSubscription _subscription;

		[Token(Token = "0x170001DF")]
		public Reactive<bool> HasAdjustment
		{
			[Token(Token = "0x6000C2B")]
			[Address(RVA = "0x103DA48", Offset = "0x103DA48", VA = "0x103DA48")]
			get
			{
				return default(Reactive<bool>);
			}
		}

		[Token(Token = "0x170001E0")]
		public Reactive<IList<object>> TotalValueArguments
		{
			[Token(Token = "0x6000C2C")]
			[Address(RVA = "0x103DB94", Offset = "0x103DB94", VA = "0x103DB94")]
			get
			{
				return default(Reactive<IList<object>>);
			}
		}

		[Token(Token = "0x170001E1")]
		public int TotalValue
		{
			[Token(Token = "0x6000C2D")]
			[Address(RVA = "0x103DBE8", Offset = "0x103DBE8", VA = "0x103DBE8")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6000C2E")]
		[Address(RVA = "0x103DC5C", Offset = "0x103DC5C", VA = "0x103DC5C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000C2F")]
		[Address(RVA = "0x103DEF8", Offset = "0x103DEF8", VA = "0x103DEF8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000C30")]
		[Address(RVA = "0x103DF04", Offset = "0x103DF04", VA = "0x103DF04")]
		private void ClampAdjustment()
		{
		}

		[Token(Token = "0x6000C31")]
		[Address(RVA = "0x103E000", Offset = "0x103E000", VA = "0x103E000")]
		public void UpdateOriginalValue(int value)
		{
		}

		[Token(Token = "0x6000C32")]
		[Address(RVA = "0x103E0A8", Offset = "0x103E0A8", VA = "0x103E0A8")]
		public void AdjustValue(int value)
		{
		}

		[Token(Token = "0x6000C33")]
		[Address(RVA = "0x103DEA0", Offset = "0x103DEA0", VA = "0x103DEA0")]
		public void ResetAdjustment()
		{
		}

		[Token(Token = "0x6000C34")]
		[Address(RVA = "0x103E14C", Offset = "0x103E14C", VA = "0x103E14C")]
		public DebugValueAdjust()
		{
		}

		[Token(Token = "0x6000C35")]
		[Address(RVA = "0x103E2E8", Offset = "0x103E2E8", VA = "0x103E2E8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDE778", Offset = "0xBDE778")]
		private void <OnEnable>b__12_1(int x)
		{
		}
	}
	[Token(Token = "0x2000494")]
	public class DisconnectHandler : MonoBehaviour
	{
		[Token(Token = "0x4000A6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private UnityEvent onInternetLost;

		[Token(Token = "0x4000A6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private UnityEvent onInternetGained;

		[Token(Token = "0x4000A6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private ReactiveSubscription _subscription;

		[Token(Token = "0x6000C3A")]
		[Address(RVA = "0x103E888", Offset = "0x103E888", VA = "0x103E888")]
		private void Start()
		{
		}

		[Token(Token = "0x6000C3B")]
		[Address(RVA = "0x103E9AC", Offset = "0x103E9AC", VA = "0x103E9AC")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000C3C")]
		[Address(RVA = "0x103E9B8", Offset = "0x103E9B8", VA = "0x103E9B8")]
		public DisconnectHandler()
		{
		}

		[Token(Token = "0x6000C3D")]
		[Address(RVA = "0x103E9C0", Offset = "0x103E9C0", VA = "0x103E9C0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDE788", Offset = "0xBDE788")]
		private void <Start>b__3_0(bool x)
		{
		}
	}
	[Token(Token = "0x2000495")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xBC9734", Offset = "0xBC9734")]
	public class DisplayAppVersion : MonoBehaviour
	{
		[Token(Token = "0x6000C3E")]
		[Address(RVA = "0x103E9E0", Offset = "0x103E9E0", VA = "0x103E9E0")]
		private void Start()
		{
		}

		[Token(Token = "0x6000C3F")]
		[Address(RVA = "0x103EA58", Offset = "0x103EA58", VA = "0x103EA58")]
		public DisplayAppVersion()
		{
		}
	}
	[Token(Token = "0x2000496")]
	public class DisplayPlayerInfo : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000497")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBC9794", Offset = "0xBC9794")]
		private sealed class <>c
		{
			[Token(Token = "0x4000A75")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000A76")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Reactive<IUser>> <>9__2_0;

			[Token(Token = "0x4000A77")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<IUser, Reactive<bool>> <>9__2_1;

			[Token(Token = "0x4000A78")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Func<PlayersInfoCache.PlayerInfo, Reactive<string>> <>9__2_4;

			[Token(Token = "0x4000A79")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static Func<PlayersInfoCache.PlayerInfo, Reactive<int>> <>9__2_5;

			[Token(Token = "0x4000A7A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public static Func<PlayersInfoCache.PlayerInfo, Reactive<string>> <>9__2_6;

			[Token(Token = "0x4000A7B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public static Func<string, LocalizedString> <>9__2_7;

			[Token(Token = "0x4000A7C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public static Func<PlayersInfoCache.PlayerInfo, string> <>9__2_8;

			[Token(Token = "0x4000A7D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public static Func<int, IList<object>> <>9__16_0;

			[Token(Token = "0x4000A7E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public static Func<int, string> <>9__18_0;

			[Token(Token = "0x4000A7F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public static Func<int, bool> <>9__20_0;

			[Token(Token = "0x6000C4E")]
			[Address(RVA = "0x102A0A4", Offset = "0x102A0A4", VA = "0x102A0A4")]
			public <>c()
			{
			}

			[Token(Token = "0x6000C4F")]
			[Address(RVA = "0x102A0AC", Offset = "0x102A0AC", VA = "0x102A0AC")]
			internal Reactive<IUser> <.ctor>b__2_0()
			{
				return default(Reactive<IUser>);
			}

			[Token(Token = "0x6000C50")]
			[Address(RVA = "0x102A118", Offset = "0x102A118", VA = "0x102A118")]
			internal Reactive<bool> <.ctor>b__2_1(IUser x)
			{
				return default(Reactive<bool>);
			}

			[Token(Token = "0x6000C51")]
			[Address(RVA = "0x102A1E8", Offset = "0x102A1E8", VA = "0x102A1E8")]
			internal Reactive<string> <.ctor>b__2_4(PlayersInfoCache.PlayerInfo x)
			{
				return default(Reactive<string>);
			}

			[Token(Token = "0x6000C52")]
			[Address(RVA = "0x102A274", Offset = "0x102A274", VA = "0x102A274")]
			internal Reactive<int> <.ctor>b__2_5(PlayersInfoCache.PlayerInfo x)
			{
				return default(Reactive<int>);
			}

			[Token(Token = "0x6000C53")]
			[Address(RVA = "0x102A2E8", Offset = "0x102A2E8", VA = "0x102A2E8")]
			internal Reactive<string> <.ctor>b__2_6(PlayersInfoCache.PlayerInfo x)
			{
				return default(Reactive<string>);
			}

			[Token(Token = "0x6000C54")]
			[Address(RVA = "0x102A374", Offset = "0x102A374", VA = "0x102A374")]
			internal LocalizedString <.ctor>b__2_7(string x)
			{
				return null;
			}

			[Token(Token = "0x6000C55")]
			[Address(RVA = "0x102A480", Offset = "0x102A480", VA = "0x102A480")]
			internal string <.ctor>b__2_8(PlayersInfoCache.PlayerInfo x)
			{
				return null;
			}

			[Token(Token = "0x6000C56")]
			[Address(RVA = "0x102A488", Offset = "0x102A488", VA = "0x102A488")]
			internal IList<object> <get_LevelArgument>b__16_0(int x)
			{
				return null;
			}

			[Token(Token = "0x6000C57")]
			[Address(RVA = "0x102A554", Offset = "0x102A554", VA = "0x102A554")]
			internal string <get_LevelString>b__18_0(int x)
			{
				return null;
			}

			[Token(Token = "0x6000C58")]
			[Address(RVA = "0x102A57C", Offset = "0x102A57C", VA = "0x102A57C")]
			internal bool <get_IsLevelZero>b__20_0(int x)
			{
				return default(bool);
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000498")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBC97A4", Offset = "0xBC97A4")]
		private struct <SetAvatarImageAsync>d__24 : IAsyncStateMachine
		{
			[Token(Token = "0x4000A80")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000A81")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder<OrientedTexture2D> <>t__builder;

			[Token(Token = "0x4000A82")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string url;

			[Token(Token = "0x4000A83")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private TaskAwaiter<OrientedTexture2D> <>u__1;

			[Token(Token = "0x6000C59")]
			[Address(RVA = "0x102A588", Offset = "0x102A588", VA = "0x102A588", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000C5A")]
			[Address(RVA = "0x102A87C", Offset = "0x102A87C", VA = "0x102A87C", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4000A6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private BoundValue<string> entityID;

		[Token(Token = "0x4000A6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private bool useLocalPlayerIfUnbound;

		[Token(Token = "0x4000A70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD1AB4", Offset = "0xBD1AB4")]
		private readonly Reactive<string> <Name>k__BackingField;

		[Token(Token = "0x4000A71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD1AC4", Offset = "0xBD1AC4")]
		private readonly Reactive<OrientedTexture2D> <Avatar>k__BackingField;

		[Token(Token = "0x4000A72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD1AD4", Offset = "0xBD1AD4")]
		private readonly Reactive<string> <Border>k__BackingField;

		[Token(Token = "0x4000A73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD1AE4", Offset = "0xBD1AE4")]
		private readonly Reactive<int> <Level>k__BackingField;

		[Token(Token = "0x4000A74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD1AF4", Offset = "0xBD1AF4")]
		private readonly Reactive<LocalizedString> <Title>k__BackingField;

		[Token(Token = "0x170001E2")]
		public Reactive<string> Name
		{
			[Token(Token = "0x6000C41")]
			[Address(RVA = "0x103F5D0", Offset = "0x103F5D0", VA = "0x103F5D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDE798", Offset = "0xBDE798")]
			get
			{
				return default(Reactive<string>);
			}
		}

		[Token(Token = "0x170001E3")]
		public Reactive<OrientedTexture2D> Avatar
		{
			[Token(Token = "0x6000C42")]
			[Address(RVA = "0x103F5D8", Offset = "0x103F5D8", VA = "0x103F5D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDE7A8", Offset = "0xBDE7A8")]
			get
			{
				return default(Reactive<OrientedTexture2D>);
			}
		}

		[Token(Token = "0x170001E4")]
		public Reactive<string> Border
		{
			[Token(Token = "0x6000C43")]
			[Address(RVA = "0x103F5E0", Offset = "0x103F5E0", VA = "0x103F5E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDE7B8", Offset = "0xBDE7B8")]
			get
			{
				return default(Reactive<string>);
			}
		}

		[Token(Token = "0x170001E5")]
		public Reactive<int> Level
		{
			[Token(Token = "0x6000C44")]
			[Address(RVA = "0x103F5E8", Offset = "0x103F5E8", VA = "0x103F5E8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDE7C8", Offset = "0xBDE7C8")]
			get
			{
				return default(Reactive<int>);
			}
		}

		[Token(Token = "0x170001E6")]
		public Reactive<IList<object>> LevelArgument
		{
			[Token(Token = "0x6000C45")]
			[Address(RVA = "0x103F5F0", Offset = "0x103F5F0", VA = "0x103F5F0")]
			get
			{
				return default(Reactive<IList<object>>);
			}
		}

		[Token(Token = "0x170001E7")]
		public Reactive<string> LevelString
		{
			[Token(Token = "0x6000C46")]
			[Address(RVA = "0x103F70C", Offset = "0x103F70C", VA = "0x103F70C")]
			get
			{
				return default(Reactive<string>);
			}
		}

		[Token(Token = "0x170001E8")]
		public Reactive<bool> IsLevelZero
		{
			[Token(Token = "0x6000C47")]
			[Address(RVA = "0x103F828", Offset = "0x103F828", VA = "0x103F828")]
			get
			{
				return default(Reactive<bool>);
			}
		}

		[Token(Token = "0x170001E9")]
		public Reactive<LocalizedString> Title
		{
			[Token(Token = "0x6000C48")]
			[Address(RVA = "0x103F944", Offset = "0x103F944", VA = "0x103F944")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDE7D8", Offset = "0xBDE7D8")]
			get
			{
				return default(Reactive<LocalizedString>);
			}
		}

		[Token(Token = "0x6000C40")]
		[Address(RVA = "0x103ED08", Offset = "0x103ED08", VA = "0x103ED08")]
		public DisplayPlayerInfo()
		{
		}

		[Token(Token = "0x6000C49")]
		[Address(RVA = "0x103F94C", Offset = "0x103F94C", VA = "0x103F94C")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xBDE7E8", Offset = "0xBDE7E8")]
		private Task<OrientedTexture2D> SetAvatarImageAsync(string url)
		{
			return null;
		}

		[Token(Token = "0x6000C4A")]
		[Address(RVA = "0x103FA78", Offset = "0x103FA78", VA = "0x103FA78")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDE848", Offset = "0xBDE848")]
		private Reactive<string> <.ctor>b__2_2()
		{
			return default(Reactive<string>);
		}

		[Token(Token = "0x6000C4B")]
		[Address(RVA = "0x103FACC", Offset = "0x103FACC", VA = "0x103FACC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDE858", Offset = "0xBDE858")]
		private Reactive<PlayersInfoCache.PlayerInfo> <.ctor>b__2_3((string, bool) data)
		{
			return default(Reactive<PlayersInfoCache.PlayerInfo>);
		}

		[Token(Token = "0x6000C4C")]
		[Address(RVA = "0x103FC3C", Offset = "0x103FC3C", VA = "0x103FC3C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDE868", Offset = "0xBDE868")]
		private Reactive<OrientedTexture2D> <.ctor>b__2_9(PlayersInfoCache.PlayerInfo x)
		{
			return default(Reactive<OrientedTexture2D>);
		}
	}
	[Token(Token = "0x2000499")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xBC97B4", Offset = "0xBC97B4")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xBC97B4", Offset = "0xBC97B4")]
	public class DisplayPlayerName : MonoBehaviour
	{
		[StructLayout(3)]
		[Token(Token = "0x200049A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBC9848", Offset = "0xBC9848")]
		private struct <SetHumanInfoAsync>d__23 : IAsyncStateMachine
		{
			[Token(Token = "0x4000A92")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000A93")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x4000A94")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public DisplayPlayerName <>4__this;

			[Token(Token = "0x4000A95")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public HumanPlayerName humanName;

			[Token(Token = "0x4000A96")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public int nameID;

			[Token(Token = "0x4000A97")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public BotPlayerName botName;

			[Token(Token = "0x4000A98")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x4000A99")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private TaskAwaiter<PlayersInfoCache.PlayerInfo> <>u__2;

			[Token(Token = "0x6000C66")]
			[Address(RVA = "0x102AC8C", Offset = "0x102AC8C", VA = "0x102AC8C", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000C67")]
			[Address(RVA = "0x102B11C", Offset = "0x102B11C", VA = "0x102B11C", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x200049B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBC9858", Offset = "0xBC9858")]
		private struct <SetAvatarImageAsync>d__25 : IAsyncStateMachine
		{
			[Token(Token = "0x4000A9A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000A9B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x4000A9C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public DisplayPlayerName <>4__this;

			[Token(Token = "0x4000A9D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string url;

			[Token(Token = "0x4000A9E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x4000A9F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private TaskAwaiter<OrientedTexture2D> <>u__2;

			[Token(Token = "0x6000C68")]
			[Address(RVA = "0x102A8D8", Offset = "0x102A8D8", VA = "0x102A8D8", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000C69")]
			[Address(RVA = "0x102AC80", Offset = "0x102AC80", VA = "0x102AC80", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4000A84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Texture2D defaultAvatar;

		[Token(Token = "0x4000A85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Texture2D botAvatar;

		[Token(Token = "0x4000A86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly LocalizedString _emptyString;

		[Token(Token = "0x4000A87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly ReactiveSource<Reactive<int>> _level;

		[Token(Token = "0x4000A88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private readonly ReactiveSource<OrientedTexture2D> _playerAvatar;

		[Token(Token = "0x4000A89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private readonly ReactiveSource<IPlayerName> _playerNameData;

		[Token(Token = "0x4000A8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool _doSubscribe;

		[Token(Token = "0x4000A8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private string _humanPlayFabEntityId;

		[Token(Token = "0x4000A8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Task _lastHumanInfoTask;

		[Token(Token = "0x4000A8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Task _lastImageTask;

		[Token(Token = "0x4000A8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private LocalizeStringEvent _localizeStringEvent;

		[Token(Token = "0x4000A8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private int _nameUpdateID;

		[Token(Token = "0x4000A90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private ReactiveSubscription _subscription;

		[Token(Token = "0x4000A91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private TMP_Text _textField;

		[Token(Token = "0x170001EA")]
		public Reactive<OrientedTexture2D> PlayerAvatar
		{
			[Token(Token = "0x6000C5B")]
			[Address(RVA = "0x103FC94", Offset = "0x103FC94", VA = "0x103FC94")]
			get
			{
				return default(Reactive<OrientedTexture2D>);
			}
		}

		[Token(Token = "0x170001EB")]
		public Reactive<int> Level
		{
			[Token(Token = "0x6000C5C")]
			[Address(RVA = "0x103FCE8", Offset = "0x103FCE8", VA = "0x103FCE8")]
			get
			{
				return default(Reactive<int>);
			}
		}

		[Token(Token = "0x6000C5D")]
		[Address(RVA = "0x103FD58", Offset = "0x103FD58", VA = "0x103FD58")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000C5E")]
		[Address(RVA = "0x103FDD0", Offset = "0x103FDD0", VA = "0x103FDD0")]
		private void Update()
		{
		}

		[Token(Token = "0x6000C5F")]
		[Address(RVA = "0x103FECC", Offset = "0x103FECC", VA = "0x103FECC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000C60")]
		[Address(RVA = "0x103FED4", Offset = "0x103FED4", VA = "0x103FED4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000C61")]
		[Address(RVA = "0x103FEE8", Offset = "0x103FEE8", VA = "0x103FEE8")]
		private void OnNameChanged(IPlayerName nameData)
		{
		}

		[Token(Token = "0x6000C62")]
		[Address(RVA = "0x1040078", Offset = "0x1040078", VA = "0x1040078")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xBDE888", Offset = "0xBDE888")]
		private Task SetHumanInfoAsync(HumanPlayerName humanName, BotPlayerName botName, int nameID)
		{
			return null;
		}

		[Token(Token = "0x6000C63")]
		[Address(RVA = "0x103A94C", Offset = "0x103A94C", VA = "0x103A94C")]
		public void SetName(IPlayerName nameData)
		{
		}

		[Token(Token = "0x6000C64")]
		[Address(RVA = "0x10401A8", Offset = "0x10401A8", VA = "0x10401A8")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xBDE8E8", Offset = "0xBDE8E8")]
		private Task SetAvatarImageAsync(string url)
		{
			return null;
		}

		[Token(Token = "0x6000C65")]
		[Address(RVA = "0x10402B8", Offset = "0x10402B8", VA = "0x10402B8")]
		public DisplayPlayerName()
		{
		}
	}
	[Token(Token = "0x200049C")]
	public enum DisplayTeam
	{
		[Token(Token = "0x4000AA1")]
		TeamA = 1,
		[Token(Token = "0x4000AA2")]
		TeamB
	}
	[Token(Token = "0x200049D")]
	public class DisplayTeamSize : MonoBehaviour
	{
		[Token(Token = "0x4000AA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public LocalizeStringEvent teamSizeText;

		[Token(Token = "0x4000AA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		public DisplayTeam team;

		[Token(Token = "0x6000C6A")]
		[Address(RVA = "0x1040488", Offset = "0x1040488", VA = "0x1040488")]
		private void Update()
		{
		}

		[Token(Token = "0x6000C6B")]
		[Address(RVA = "0x1040734", Offset = "0x1040734", VA = "0x1040734")]
		public DisplayTeamSize()
		{
		}
	}
	[Token(Token = "0x200049E")]
	public class DistanceToCamera : MonoBehaviour
	{
		[Token(Token = "0x4000AA5")]
		private const double SqrDistEps = 1.0;

		[Token(Token = "0x4000AA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly ReactiveSource<IList<object>> _distanceArguments;

		[Token(Token = "0x4000AA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly object[][] _pingPong;

		[Token(Token = "0x4000AA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Transform _cameraTransform;

		[Token(Token = "0x4000AA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private double _lastSqrMagnitude;

		[Token(Token = "0x4000AAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool _pingOrPong;

		[Token(Token = "0x170001EC")]
		public Reactive<IList<object>> DistanceArguments
		{
			[Token(Token = "0x6000C6C")]
			[Address(RVA = "0x10408F8", Offset = "0x10408F8", VA = "0x10408F8")]
			get
			{
				return default(Reactive<IList<object>>);
			}
		}

		[Token(Token = "0x6000C6D")]
		[Address(RVA = "0x104094C", Offset = "0x104094C", VA = "0x104094C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000C6E")]
		[Address(RVA = "0x1040BDC", Offset = "0x1040BDC", VA = "0x1040BDC")]
		public DistanceToCamera()
		{
		}
	}
	[Token(Token = "0x200049F")]
	public class DynamicControllerBindingSwitch : MonoBehaviour
	{
		[Token(Token = "0x20004A0")]
		public enum Button
		{
			[Token(Token = "0x4000AAF")]
			PrimaryButton,
			[Token(Token = "0x4000AB0")]
			SecondaryButton,
			[Token(Token = "0x4000AB1")]
			TriggerButton,
			[Token(Token = "0x4000AB2")]
			GrabButton,
			[Token(Token = "0x4000AB3")]
			MenuButton
		}

		[Token(Token = "0x20004A1")]
		public enum Controller
		{
			[Token(Token = "0x4000AB5")]
			Left,
			[Token(Token = "0x4000AB6")]
			Right,
			[Token(Token = "0x4000AB7")]
			Both
		}

		[Serializable]
		[Token(Token = "0x20004A2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBC9868", Offset = "0xBC9868")]
		private sealed class <>c
		{
			[Token(Token = "0x4000AB8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000AB9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<string, bool> <>9__8_0;

			[Token(Token = "0x6000C75")]
			[Address(RVA = "0x102B188", Offset = "0x102B188", VA = "0x102B188")]
			public <>c()
			{
			}

			[Token(Token = "0x6000C76")]
			[Address(RVA = "0x102B190", Offset = "0x102B190", VA = "0x102B190")]
			internal bool <get_IsDynamic>b__8_0(string x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000AAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Controller hand;

		[Token(Token = "0x4000AAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private Button button;

		[Token(Token = "0x4000AAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly ReactiveSource<string> _dynamicBindingName;

		[Token(Token = "0x170001ED")]
		public Reactive<string> DynamicBindingName
		{
			[Token(Token = "0x6000C6F")]
			[Address(RVA = "0x1041724", Offset = "0x1041724", VA = "0x1041724")]
			get
			{
				return default(Reactive<string>);
			}
		}

		[Token(Token = "0x170001EE")]
		public Reactive<bool> IsDynamic
		{
			[Token(Token = "0x6000C70")]
			[Address(RVA = "0x1041778", Offset = "0x1041778", VA = "0x1041778")]
			get
			{
				return default(Reactive<bool>);
			}
		}

		[Token(Token = "0x6000C71")]
		[Address(RVA = "0x10418E0", Offset = "0x10418E0", VA = "0x10418E0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000C72")]
		[Address(RVA = "0x1041A28", Offset = "0x1041A28", VA = "0x1041A28")]
		private string GetDynamicString(int handIndex)
		{
			return null;
		}

		[Token(Token = "0x6000C73")]
		[Address(RVA = "0x1041D4C", Offset = "0x1041D4C", VA = "0x1041D4C")]
		public DynamicControllerBindingSwitch()
		{
		}
	}
	[Token(Token = "0x20004A3")]
	public class EventFeedData
	{
		[Token(Token = "0x4000ABA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public IPlayerName LeftName;

		[Token(Token = "0x4000ABB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Color LeftColor;

		[Token(Token = "0x4000ABC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Sprite LeftImage;

		[Token(Token = "0x4000ABD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Sprite LeftEffectSprite;

		[Token(Token = "0x4000ABE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string LeftPlayfabEntityID;

		[Token(Token = "0x4000ABF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Sprite CenterImage;

		[Token(Token = "0x4000AC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Color CenterImageColor;

		[Token(Token = "0x4000AC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Sprite BackgroundImage;

		[Token(Token = "0x4000AC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public IPlayerName RightName;

		[Token(Token = "0x4000AC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Color RightColor;

		[Token(Token = "0x4000AC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Sprite RightImage;

		[Token(Token = "0x4000AC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Sprite RightEffectSprite;

		[Token(Token = "0x4000AC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public string RightPlayfabEntityID;

		[Token(Token = "0x4000AC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public LocalizedString CenterText;

		[Token(Token = "0x4000AC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public bool DisplayRightPlayer;

		[Token(Token = "0x4000AC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x99")]
		public bool DisplayLeftName;

		[Token(Token = "0x4000ACA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9A")]
		public bool DisplayLeftBorder;

		[Token(Token = "0x6000C77")]
		[Address(RVA = "0x105097C", Offset = "0x105097C", VA = "0x105097C")]
		public EventFeedData()
		{
		}
	}
	[Token(Token = "0x20004A4")]
	public class ExclusiveUI : MonoBehaviour
	{
		[Token(Token = "0x4000ACB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private int priority;

		[Token(Token = "0x6000C78")]
		[Address(RVA = "0x1050B4C", Offset = "0x1050B4C", VA = "0x1050B4C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000C79")]
		[Address(RVA = "0x1050BDC", Offset = "0x1050BDC", VA = "0x1050BDC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000C7A")]
		[Address(RVA = "0x1050C68", Offset = "0x1050C68", VA = "0x1050C68")]
		public ExclusiveUI()
		{
		}
	}
	[Token(Token = "0x20004A5")]
	public class FrameItemUI : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20004A6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBC9878", Offset = "0xBC9878")]
		private sealed class <>c
		{
			[Token(Token = "0x4000AD4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000AD5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<(string, string), bool> <>9__15_0;

			[Token(Token = "0x6000C88")]
			[Address(RVA = "0x102BF24", Offset = "0x102BF24", VA = "0x102BF24")]
			public <>c()
			{
			}

			[Token(Token = "0x6000C89")]
			[Address(RVA = "0x102BF2C", Offset = "0x102BF2C", VA = "0x102BF2C")]
			internal bool <get_BorderUsed>b__15_0((string, string) x)
			{
				return default(bool);
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20004A7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBC9888", Offset = "0xBC9888")]
		private struct <Awake>d__16 : IAsyncStateMachine
		{
			[Token(Token = "0x4000AD6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000AD7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4000AD8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public FrameItemUI <>4__this;

			[Token(Token = "0x4000AD9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private TaskAwaiter<PlayersInfoCache.PlayerInfo> <>u__1;

			[Token(Token = "0x6000C8A")]
			[Address(RVA = "0x102BF4C", Offset = "0x102BF4C", VA = "0x102BF4C", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000C8B")]
			[Address(RVA = "0x102C240", Offset = "0x102C240", VA = "0x102C240", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20004A8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBC9898", Offset = "0xBC9898")]
		private struct <UpdateBorderAsync>d__19 : IAsyncStateMachine
		{
			[Token(Token = "0x4000ADA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000ADB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x4000ADC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private string <newBorderID>5__2;

			[Token(Token = "0x4000ADD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x6000C8C")]
			[Address(RVA = "0x102C24C", Offset = "0x102C24C", VA = "0x102C24C", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000C8D")]
			[Address(RVA = "0x102C578", Offset = "0x102C578", VA = "0x102C578", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4000ACC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly TimeSpan WaitTimeBetweenDataUpdates;

		[Token(Token = "0x4000ACD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static string _pendingBorderID;

		[Token(Token = "0x4000ACE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static Task _updateBorderTask;

		[Token(Token = "0x4000ACF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly ReactiveSource<int> _level;

		[Token(Token = "0x4000AD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly ReactiveSource<string> _borderID;

		[Token(Token = "0x4000AD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly ReactiveSource<bool> _borderUnlocked;

		[Token(Token = "0x4000AD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly ReactiveSource<string> _currentPlayerBorder;

		[Token(Token = "0x4000AD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private PlayersInfoCache.PlayerInfo? _playerInfo;

		[Token(Token = "0x170001EF")]
		public Reactive<int> Level
		{
			[Token(Token = "0x6000C7B")]
			[Address(RVA = "0xF9ED18", Offset = "0xF9ED18", VA = "0xF9ED18")]
			get
			{
				return default(Reactive<int>);
			}
		}

		[Token(Token = "0x170001F0")]
		public Reactive<string> BorderID
		{
			[Token(Token = "0x6000C7C")]
			[Address(RVA = "0xF9ED6C", Offset = "0xF9ED6C", VA = "0xF9ED6C")]
			get
			{
				return default(Reactive<string>);
			}
		}

		[Token(Token = "0x170001F1")]
		public Reactive<bool> BorderUnlocked
		{
			[Token(Token = "0x6000C7D")]
			[Address(RVA = "0xF9EDC0", Offset = "0xF9EDC0", VA = "0xF9EDC0")]
			get
			{
				return default(Reactive<bool>);
			}
		}

		[Token(Token = "0x170001F2")]
		public Reactive<bool> BorderUsed
		{
			[Token(Token = "0x6000C7E")]
			[Address(RVA = "0xF9EE14", Offset = "0xF9EE14", VA = "0xF9EE14")]
			get
			{
				return default(Reactive<bool>);
			}
		}

		[Token(Token = "0x6000C7F")]
		[Address(RVA = "0xF9EFAC", Offset = "0xF9EFAC", VA = "0xF9EFAC")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xBDE968", Offset = "0xBDE968")]
		public void Awake()
		{
		}

		[Token(Token = "0x6000C80")]
		[Address(RVA = "0xF9F070", Offset = "0xF9F070", VA = "0xF9F070")]
		public void Setup(string borderID, Reactive<int> level, bool unlocked, Reactive<string> playerBorder)
		{
		}

		[Token(Token = "0x6000C81")]
		[Address(RVA = "0xF9F208", Offset = "0xF9F208", VA = "0xF9F208")]
		public void OnClick()
		{
		}

		[Token(Token = "0x6000C82")]
		[Address(RVA = "0xF9F3DC", Offset = "0xF9F3DC", VA = "0xF9F3DC")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xBDE9C8", Offset = "0xBDE9C8")]
		private static Task UpdateBorderAsync()
		{
			return null;
		}

		[Token(Token = "0x6000C83")]
		[Address(RVA = "0xF9F4D8", Offset = "0xF9F4D8", VA = "0xF9F4D8")]
		public FrameItemUI()
		{
		}

		[Token(Token = "0x6000C85")]
		[Address(RVA = "0xF9F728", Offset = "0xF9F728", VA = "0xF9F728")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDEA28", Offset = "0xBDEA28")]
		private void <Setup>b__17_0(int x)
		{
		}

		[Token(Token = "0x6000C86")]
		[Address(RVA = "0xF9F78C", Offset = "0xF9F78C", VA = "0xF9F78C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDEA38", Offset = "0xBDEA38")]
		private void <Setup>b__17_1(string x)
		{
		}
	}
	[Token(Token = "0x20004A9")]
	public class FrameMenuUI : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20004AA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBC98A8", Offset = "0xBC98A8")]
		private sealed class <>c
		{
			[Token(Token = "0x4000AE4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000AE5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<IUser, Reactive<bool>> <>9__6_0;

			[Token(Token = "0x4000AE6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<IReadOnlyList<string>, bool> <>9__8_2;

			[Token(Token = "0x6000C95")]
			[Address(RVA = "0x102C5E4", Offset = "0x102C5E4", VA = "0x102C5E4")]
			public <>c()
			{
			}

			[Token(Token = "0x6000C96")]
			[Address(RVA = "0x102C5EC", Offset = "0x102C5EC", VA = "0x102C5EC")]
			internal Reactive<bool> <Start>b__6_0(IUser x)
			{
				return default(Reactive<bool>);
			}

			[Token(Token = "0x6000C97")]
			[Address(RVA = "0x102C6BC", Offset = "0x102C6BC", VA = "0x102C6BC")]
			internal bool <InstantiateBorders>b__8_2(IReadOnlyList<string> x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20004AB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBC98B8", Offset = "0xBC98B8")]
		private sealed class <>c__DisplayClass8_0
		{
			[Token(Token = "0x4000AE7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string defaultBorderSeason;

			[Token(Token = "0x4000AE8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public IReadOnlyList<string> entitledBorders;

			[Token(Token = "0x6000C98")]
			[Address(RVA = "0x102C6C8", Offset = "0x102C6C8", VA = "0x102C6C8")]
			public <>c__DisplayClass8_0()
			{
			}

			[Token(Token = "0x6000C99")]
			[Address(RVA = "0x102C6D0", Offset = "0x102C6D0", VA = "0x102C6D0")]
			internal bool <InstantiateBorders>b__0(SeasonDisplayNames x)
			{
				return default(bool);
			}

			[Token(Token = "0x6000C9A")]
			[Address(RVA = "0x102C6E4", Offset = "0x102C6E4", VA = "0x102C6E4")]
			internal int <InstantiateBorders>b__1(BorderDefinition first, BorderDefinition second)
			{
				return default(int);
			}
		}

		[Token(Token = "0x20004AC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBC98C8", Offset = "0xBC98C8")]
		private sealed class <>c__DisplayClass8_1
		{
			[Token(Token = "0x4000AE9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public BorderDefinition frame;

			[Token(Token = "0x6000C9B")]
			[Address(RVA = "0x102C784", Offset = "0x102C784", VA = "0x102C784")]
			public <>c__DisplayClass8_1()
			{
			}

			[Token(Token = "0x6000C9C")]
			[Address(RVA = "0x102C78C", Offset = "0x102C78C", VA = "0x102C78C")]
			internal bool <InstantiateBorders>b__3(SeasonDisplayNames x)
			{
				return default(bool);
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20004AD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBC98D8", Offset = "0xBC98D8")]
		private struct <InstantiateBorders>d__8 : IAsyncStateMachine
		{
			[Token(Token = "0x4000AEA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000AEB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x4000AEC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private <>c__DisplayClass8_0 <>8__1;

			[Token(Token = "0x4000AED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public FrameMenuUI <>4__this;

			[Token(Token = "0x4000AEE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private PlayersInfoCache.PlayerInfo <playerInfo>5__2;

			[Token(Token = "0x4000AEF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private TaskAwaiter<PlayersInfoCache.PlayerInfo> <>u__1;

			[Token(Token = "0x4000AF0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			private TaskAwaiter<IReadOnlyList<string>> <>u__2;

			[Token(Token = "0x6000C9D")]
			[Address(RVA = "0x102C7B0", Offset = "0x102C7B0", VA = "0x102C7B0", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000C9E")]
			[Address(RVA = "0x102D4CC", Offset = "0x102D4CC", VA = "0x102D4CC", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4000ADE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform frameListParent;

		[Token(Token = "0x4000ADF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private FrameItemUI portraitFramePrefab;

		[Token(Token = "0x4000AE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private CollapsableMenuUI collapsibleMenuPrefab;

		[Token(Token = "0x4000AE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly Dictionary<string, CollapsableMenuUI> _seasonsBorders;

		[Token(Token = "0x4000AE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private ReactiveSubscription _subscription;

		[Token(Token = "0x4000AE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private AsyncOperationHandle<IList<BorderDefinition>> _borderInfoHandle;

		[Token(Token = "0x6000C8E")]
		[Address(RVA = "0xF9F7F0", Offset = "0xF9F7F0", VA = "0xF9F7F0")]
		private void Start()
		{
		}

		[Token(Token = "0x6000C8F")]
		[Address(RVA = "0xF9FA1C", Offset = "0xF9FA1C", VA = "0xF9FA1C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000C90")]
		[Address(RVA = "0xF9FA28", Offset = "0xF9FA28", VA = "0xF9FA28")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xBDEA68", Offset = "0xBDEA68")]
		private Task InstantiateBorders()
		{
			return null;
		}

		[Token(Token = "0x6000C91")]
		[Address(RVA = "0xF9FB38", Offset = "0xF9FB38", VA = "0xF9FB38")]
		private void RemoveBorderItems()
		{
		}

		[Token(Token = "0x6000C92")]
		[Address(RVA = "0xF9FD40", Offset = "0xF9FD40", VA = "0xF9FD40")]
		public FrameMenuUI()
		{
		}

		[Token(Token = "0x6000C93")]
		[Address(RVA = "0xF9FDB8", Offset = "0xF9FDB8", VA = "0xF9FDB8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDEAC8", Offset = "0xBDEAC8")]
		private void <Start>b__6_1(bool x)
		{
		}
	}
	[Token(Token = "0x20004AE")]
	public class GameTimerDisplay : MonoBehaviour
	{
		[Token(Token = "0x4000AF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TMP_Text textField;

		[Token(Token = "0x4000AF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private string _startingString;

		[Token(Token = "0x4000AF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int? _unarmedTimeRemaining;

		[Token(Token = "0x6000C9F")]
		[Address(RVA = "0xFA70AC", Offset = "0xFA70AC", VA = "0xFA70AC")]
		private void Start()
		{
		}

		[Token(Token = "0x6000CA0")]
		[Address(RVA = "0xFA7134", Offset = "0xFA7134", VA = "0xFA7134")]
		private void Update()
		{
		}

		[Token(Token = "0x6000CA1")]
		[Address(RVA = "0xFA7334", Offset = "0xFA7334", VA = "0xFA7334")]
		public GameTimerDisplay()
		{
		}
	}
	[Token(Token = "0x20004AF")]
	public class HUDController : MonoBehaviour
	{
		[Token(Token = "0x4000AF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private PlayerHUD playerHUD;

		[Token(Token = "0x6000CA2")]
		[Address(RVA = "0xFAAEE8", Offset = "0xFAAEE8", VA = "0xFAAEE8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000CA3")]
		[Address(RVA = "0xFAAF08", Offset = "0xFAAF08", VA = "0xFAAF08")]
		public GameObject GetHUDObject(string objectName)
		{
			return null;
		}

		[Token(Token = "0x6000CA4")]
		[Address(RVA = "0xFAAFC8", Offset = "0xFAAFC8", VA = "0xFAAFC8")]
		public HUDController()
		{
		}
	}
	[Token(Token = "0x20004B0")]
	public class HUDDamageIndicator : MonoBehaviour
	{
		[Token(Token = "0x4000AF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Cortopia.Scripts.Players.Player player;

		[Token(Token = "0x4000AF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float displayTime;

		[Token(Token = "0x4000AF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject root;

		[Token(Token = "0x4000AF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 _damageSourcePosition;

		[Token(Token = "0x4000AF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float _elapsedTime;

		[Token(Token = "0x4000AFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private EventKey _lastStartedIndicatorEvent;

		[Token(Token = "0x170001F3")]
		private Cortopia.Scripts.Players.Player RealPlayer
		{
			[Token(Token = "0x6000CA5")]
			[Address(RVA = "0xFAAFD0", Offset = "0xFAAFD0", VA = "0xFAAFD0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000CA6")]
		[Address(RVA = "0xFAB0B4", Offset = "0xFAB0B4", VA = "0xFAB0B4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000CA7")]
		[Address(RVA = "0xFAB0E4", Offset = "0xFAB0E4", VA = "0xFAB0E4")]
		private void Update()
		{
		}

		[Token(Token = "0x6000CA8")]
		[Address(RVA = "0xFAB1B8", Offset = "0xFAB1B8", VA = "0xFAB1B8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000CA9")]
		[Address(RVA = "0xFAB354", Offset = "0xFAB354", VA = "0xFAB354")]
		private void OnDamageTakenEvent(EventHitBy eventDamage)
		{
		}

		[Token(Token = "0x6000CAA")]
		[Address(RVA = "0xFAB4C0", Offset = "0xFAB4C0", VA = "0xFAB4C0")]
		private void OnEventCancelled(CallbackEventCanceled callback)
		{
		}

		[Token(Token = "0x6000CAB")]
		[Address(RVA = "0xFAB47C", Offset = "0xFAB47C", VA = "0xFAB47C")]
		private void StartIndicator(Vector3 damageSourcePosition, EventKey eventKey)
		{
		}

		[Token(Token = "0x6000CAC")]
		[Address(RVA = "0xFAB0E8", Offset = "0xFAB0E8", VA = "0xFAB0E8")]
		private void UpdateIndicator()
		{
		}

		[Token(Token = "0x6000CAD")]
		[Address(RVA = "0xFAB444", Offset = "0xFAB444", VA = "0xFAB444")]
		private void ResetIndicator()
		{
		}

		[Token(Token = "0x6000CAE")]
		[Address(RVA = "0xFAB558", Offset = "0xFAB558", VA = "0xFAB558")]
		public HUDDamageIndicator()
		{
		}
	}
	[Token(Token = "0x20004B1")]
	public class HUDDeathEvent : MonoBehaviour
	{
		[Token(Token = "0x4000AFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject deathPromptRoot;

		[Token(Token = "0x6000CAF")]
		[Address(RVA = "0xFAB560", Offset = "0xFAB560", VA = "0xFAB560")]
		private void Start()
		{
		}

		[Token(Token = "0x6000CB0")]
		[Address(RVA = "0xFAB6D0", Offset = "0xFAB6D0", VA = "0xFAB6D0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000CB1")]
		[Address(RVA = "0xFAB6F0", Offset = "0xFAB6F0", VA = "0xFAB6F0")]
		private void OnPlayerKilled(EventPlayerDied callback)
		{
		}

		[Token(Token = "0x6000CB2")]
		[Address(RVA = "0xFAB7DC", Offset = "0xFAB7DC", VA = "0xFAB7DC")]
		private void OnPlayerResurrected(EventPlayerResurrected callback)
		{
		}

		[Token(Token = "0x6000CB3")]
		[Address(RVA = "0xFAB7FC", Offset = "0xFAB7FC", VA = "0xFAB7FC")]
		public HUDDeathEvent()
		{
		}
	}
	[Token(Token = "0x20004B2")]
	public class HUDEventFeed : MonoBehaviour
	{
		[Token(Token = "0x20004B3")]
		private enum ConnectionType
		{
			[Token(Token = "0x4000B0E")]
			Connecting,
			[Token(Token = "0x4000B0F")]
			Disconnecting
		}

		[Token(Token = "0x20004B4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBC98E8", Offset = "0xBC98E8")]
		private sealed class <Timer>d__25 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000B10")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000B11")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000B12")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public HUDEventFeed <>4__this;

			[Token(Token = "0x170001F4")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000CCE")]
				[Address(RVA = "0x1032F0C", Offset = "0x1032F0C", VA = "0x1032F0C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001F5")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000CD0")]
				[Address(RVA = "0x1032F54", Offset = "0x1032F54", VA = "0x1032F54", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000CCB")]
			[Address(RVA = "0x1032E1C", Offset = "0x1032E1C", VA = "0x1032E1C")]
			[DebuggerHidden]
			public <Timer>d__25(int <>1__state)
			{
			}

			[Token(Token = "0x6000CCC")]
			[Address(RVA = "0x1032E48", Offset = "0x1032E48", VA = "0x1032E48", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000CCD")]
			[Address(RVA = "0x1032E4C", Offset = "0x1032E4C", VA = "0x1032E4C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000CCF")]
			[Address(RVA = "0x1032F14", Offset = "0x1032F14", VA = "0x1032F14", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20004B5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBC98F8", Offset = "0xBC98F8")]
		private struct <SendRemovePlayerEventAsync>d__28 : IAsyncStateMachine
		{
			[Token(Token = "0x4000B13")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000B14")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x4000B15")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PlayerEventInfo storedPlayer;

			[Token(Token = "0x4000B16")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public HUDEventFeed <>4__this;

			[Token(Token = "0x4000B17")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private TaskAwaiter<PlayersInfoCache.PlayerInfo> <>u__1;

			[Token(Token = "0x6000CD1")]
			[Address(RVA = "0x10329B8", Offset = "0x10329B8", VA = "0x10329B8", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000CD2")]
			[Address(RVA = "0x1032E10", Offset = "0x1032E10", VA = "0x1032E10", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20004B6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBC9908", Offset = "0xBC9908")]
		private struct <SendAddPlayerEventAsync>d__29 : IAsyncStateMachine
		{
			[Token(Token = "0x4000B18")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000B19")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x4000B1A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string playFabEntityId;

			[Token(Token = "0x4000B1B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public HUDEventFeed <>4__this;

			[Token(Token = "0x4000B1C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public PlayerEventInfo info;

			[Token(Token = "0x4000B1D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private TaskAwaiter<PlayersInfoCache.PlayerInfo> <>u__1;

			[Token(Token = "0x6000CD3")]
			[Address(RVA = "0x103256C", Offset = "0x103256C", VA = "0x103256C", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000CD4")]
			[Address(RVA = "0x10329AC", Offset = "0x10329AC", VA = "0x10329AC", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4000AFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private List<PlayerEventFeed> playerEvents;

		[Token(Token = "0x4000AFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBD1C14", Offset = "0xBD1C14")]
		[SerializeField]
		private float checkConnectedPlayerInterval;

		[Token(Token = "0x4000AFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBD1C60", Offset = "0xBD1C60")]
		private Color friendlyTeamColor;

		[Token(Token = "0x4000AFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private Color enemyTeamColor;

		[Token(Token = "0x4000B00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Sprite killEffectImage;

		[Token(Token = "0x4000B01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Sprite bombIcon;

		[Token(Token = "0x4000B02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBD1CDC", Offset = "0xBD1CDC")]
		[SerializeField]
		private Sprite defaultBackground;

		[Token(Token = "0x4000B03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBD1D28", Offset = "0xBD1D28")]
		[SerializeField]
		private Sprite connectionBackground;

		[Token(Token = "0x4000B04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private Color defaultCenterImageColor;

		[Token(Token = "0x4000B05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBD1D84", Offset = "0xBD1D84")]
		private LocalizedString[] connectionStrings;

		[Token(Token = "0x4000B06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private readonly List<EventFeedData> _eventDataToSend;

		[Token(Token = "0x4000B07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private List<Vector3> _eventLocations;

		[Token(Token = "0x4000B08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private LocalizedString _eventNames;

		[Token(Token = "0x4000B09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Dictionary<EntityRef, PlayerEventInfo> _playersInGame;

		[Token(Token = "0x4000B0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private List<EntityRef> _leftPlayers;

		[Token(Token = "0x4000B0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Task _task;

		[Token(Token = "0x4000B0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Coroutine _timer;

		[Token(Token = "0x6000CB4")]
		[Address(RVA = "0xFAB804", Offset = "0xFAB804", VA = "0xFAB804")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000CB5")]
		[Address(RVA = "0xFAB9FC", Offset = "0xFAB9FC", VA = "0xFAB9FC")]
		private void Start()
		{
		}

		[Token(Token = "0x6000CB6")]
		[Address(RVA = "0xFABBF8", Offset = "0xFABBF8", VA = "0xFABBF8")]
		private void Update()
		{
		}

		[Token(Token = "0x6000CB7")]
		[Address(RVA = "0xFABEF8", Offset = "0xFABEF8", VA = "0xFABEF8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000CB8")]
		[Address(RVA = "0xFABFAC", Offset = "0xFABFAC", VA = "0xFABFAC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000CB9")]
		[Address(RVA = "0xFABFB8", Offset = "0xFABFB8", VA = "0xFABFB8")]
		private void OnPlayerLoadoutChanged(EventPlayerLoadoutChanged callback)
		{
		}

		[Token(Token = "0x6000CBA")]
		[Address(RVA = "0xFAB94C", Offset = "0xFAB94C", VA = "0xFAB94C")]
		private void InitStartValues()
		{
		}

		[Token(Token = "0x6000CBB")]
		[Address(RVA = "0xFAB828", Offset = "0xFAB828", VA = "0xFAB828")]
		private void InitEventSizeAndLocations()
		{
		}

		[Token(Token = "0x6000CBC")]
		[Address(RVA = "0xFABF40", Offset = "0xFABF40", VA = "0xFABF40")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xBDEAE8", Offset = "0xBDEAE8")]
		private IEnumerator Timer()
		{
			return null;
		}

		[Token(Token = "0x6000CBD")]
		[Address(RVA = "0xFABF38", Offset = "0xFABF38", VA = "0xFABF38")]
		private void GetInitialPlayers()
		{
		}

		[Token(Token = "0x6000CBE")]
		[Address(RVA = "0xFAC308", Offset = "0xFAC308", VA = "0xFAC308")]
		private void CheckIfPlayersAreStillInGame(bool showEvent = true)
		{
		}

		[Token(Token = "0x6000CBF")]
		[Address(RVA = "0xFACB88", Offset = "0xFACB88", VA = "0xFACB88")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xBDEB48", Offset = "0xBDEB48")]
		private Task SendRemovePlayerEventAsync(PlayerEventInfo storedPlayer)
		{
			return null;
		}

		[Token(Token = "0x6000CC0")]
		[Address(RVA = "0xFACA70", Offset = "0xFACA70", VA = "0xFACA70")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xBDEBA8", Offset = "0xBDEBA8")]
		private Task SendAddPlayerEventAsync(PlayerEventInfo info, string playFabEntityId)
		{
			return null;
		}

		[Token(Token = "0x6000CC1")]
		[Address(RVA = "0xFAC980", Offset = "0xFAC980", VA = "0xFAC980")]
		private PlayerEventInfo GetPlayerInfo(Frame frame, EntityRef playerEntity, string playFabEntityId, Quantum.Team team)
		{
			return null;
		}

		[Token(Token = "0x6000CC2")]
		[Address(RVA = "0xFACCA8", Offset = "0xFACCA8", VA = "0xFACCA8")]
		private Quantum.Team GetLocalPlayerTeam()
		{
			return default(Quantum.Team);
		}

		[Token(Token = "0x6000CC3")]
		[Address(RVA = "0xFABD40", Offset = "0xFABD40", VA = "0xFABD40")]
		private void UpdateEventFeed(EventFeedData eventFeedData)
		{
		}

		[Token(Token = "0x6000CC4")]
		[Address(RVA = "0xFACE14", Offset = "0xFACE14", VA = "0xFACE14")]
		private string GetEntityID(Frame frame, EntityRef playerEntity)
		{
			return null;
		}

		[Token(Token = "0x6000CC5")]
		[Address(RVA = "0xFAC09C", Offset = "0xFAC09C", VA = "0xFAC09C")]
		private Sprite GetClassIcon(Frame frame, EntityRef playerEntity)
		{
			return null;
		}

		[Token(Token = "0x6000CC6")]
		[Address(RVA = "0xFACDD4", Offset = "0xFACDD4", VA = "0xFACDD4")]
		private Color GetTeamColor(Quantum.Team teamToCompare, Quantum.Team localPlayerTeam)
		{
			return default(Color);
		}

		[Token(Token = "0x6000CC7")]
		[Address(RVA = "0xFACEB4", Offset = "0xFACEB4", VA = "0xFACEB4")]
		private void PlayerPlantBombEvent(EventPlayerPlantBomb callback)
		{
		}

		[Token(Token = "0x6000CC8")]
		[Address(RVA = "0xFAD074", Offset = "0xFAD074", VA = "0xFAD074")]
		private IPlayerName GetGameName(Frame frame, EntityRef entityRef)
		{
			return null;
		}

		[Token(Token = "0x6000CC9")]
		[Address(RVA = "0xFAD0EC", Offset = "0xFAD0EC", VA = "0xFAD0EC")]
		private void PlayerDiedEvent(EventPlayerDied callback)
		{
		}

		[Token(Token = "0x6000CCA")]
		[Address(RVA = "0xFAD480", Offset = "0xFAD480", VA = "0xFAD480")]
		public HUDEventFeed()
		{
		}
	}
	[Token(Token = "0x20004B7")]
	public class HUDMatchStats : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20004B8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBC9918", Offset = "0xBC9918")]
		private sealed class <>c
		{
			[Token(Token = "0x4000B26")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000B27")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Quantum.Team, Quantum.Team> <>9__11_0;

			[Token(Token = "0x4000B28")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<int, string> <>9__17_0;

			[Token(Token = "0x4000B29")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Func<int, string> <>9__19_0;

			[Token(Token = "0x6000CE2")]
			[Address(RVA = "0x1032FBC", Offset = "0x1032FBC", VA = "0x1032FBC")]
			public <>c()
			{
			}

			[Token(Token = "0x6000CE3")]
			[Address(RVA = "0x1032FC4", Offset = "0x1032FC4", VA = "0x1032FC4")]
			internal Quantum.Team <get_OpponentTeam>b__11_0(Quantum.Team x)
			{
				return default(Quantum.Team);
			}

			[Token(Token = "0x6000CE4")]
			[Address(RVA = "0x1032FD0", Offset = "0x1032FD0", VA = "0x1032FD0")]
			internal string <get_MyScore>b__17_0(int x)
			{
				return null;
			}

			[Token(Token = "0x6000CE5")]
			[Address(RVA = "0x1032FF8", Offset = "0x1032FF8", VA = "0x1032FF8")]
			internal string <get_OpponentScore>b__19_0(int x)
			{
				return null;
			}
		}

		[Token(Token = "0x4000B1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBD1DD0", Offset = "0xBD1DD0")]
		[SerializeField]
		private Canvas matchStatsCanvas;

		[Token(Token = "0x4000B1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBD1E1C", Offset = "0xBD1E1C")]
		[SerializeField]
		private LocalizedString[] roleStrings;

		[Token(Token = "0x4000B20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly ReactiveSource<Quantum.Team> _myTeam;

		[Token(Token = "0x4000B21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly ReactiveSource<Role> _myTeamRole;

		[Token(Token = "0x4000B22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private readonly ReactiveSource<int> _myTeamScore;

		[Token(Token = "0x4000B23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private readonly ReactiveSource<Role> _opponentTeamRole;

		[Token(Token = "0x4000B24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private readonly ReactiveSource<int> _opponentTeamScore;

		[Token(Token = "0x4000B25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private readonly ReactiveTransaction _transaction;

		[Token(Token = "0x170001F6")]
		public Reactive<Quantum.Team> MyTeam
		{
			[Token(Token = "0x6000CD5")]
			[Address(RVA = "0xFAD5CC", Offset = "0xFAD5CC", VA = "0xFAD5CC")]
			get
			{
				return default(Reactive<Quantum.Team>);
			}
		}

		[Token(Token = "0x170001F7")]
		public Reactive<Quantum.Team> OpponentTeam
		{
			[Token(Token = "0x6000CD6")]
			[Address(RVA = "0xFAD63C", Offset = "0xFAD63C", VA = "0xFAD63C")]
			get
			{
				return default(Reactive<Quantum.Team>);
			}
		}

		[Token(Token = "0x170001F8")]
		public Reactive<LocalizedString> MyRole
		{
			[Token(Token = "0x6000CD7")]
			[Address(RVA = "0xFAD768", Offset = "0xFAD768", VA = "0xFAD768")]
			get
			{
				return default(Reactive<LocalizedString>);
			}
		}

		[Token(Token = "0x170001F9")]
		public Reactive<LocalizedString> OpponentRole
		{
			[Token(Token = "0x6000CD8")]
			[Address(RVA = "0xFAD864", Offset = "0xFAD864", VA = "0xFAD864")]
			get
			{
				return default(Reactive<LocalizedString>);
			}
		}

		[Token(Token = "0x170001FA")]
		public Reactive<string> MyScore
		{
			[Token(Token = "0x6000CD9")]
			[Address(RVA = "0xFAD960", Offset = "0xFAD960", VA = "0xFAD960")]
			get
			{
				return default(Reactive<string>);
			}
		}

		[Token(Token = "0x170001FB")]
		public Reactive<string> OpponentScore
		{
			[Token(Token = "0x6000CDA")]
			[Address(RVA = "0xFADAC8", Offset = "0xFADAC8", VA = "0xFADAC8")]
			get
			{
				return default(Reactive<string>);
			}
		}

		[Token(Token = "0x6000CDB")]
		[Address(RVA = "0xFADC30", Offset = "0xFADC30", VA = "0xFADC30")]
		private void Update()
		{
		}

		[Token(Token = "0x6000CDC")]
		[Address(RVA = "0xFADCC4", Offset = "0xFADCC4", VA = "0xFADCC4")]
		private void PollMatchData(FrameBase frame)
		{
		}

		[Token(Token = "0x6000CDD")]
		[Address(RVA = "0xFAE19C", Offset = "0xFAE19C", VA = "0xFAE19C")]
		private static int GetScore(Match match, Quantum.Team team)
		{
			return default(int);
		}

		[Token(Token = "0x6000CDE")]
		[Address(RVA = "0xFAE240", Offset = "0xFAE240", VA = "0xFAE240")]
		public HUDMatchStats()
		{
		}

		[Token(Token = "0x6000CDF")]
		[Address(RVA = "0xFAE3D8", Offset = "0xFAE3D8", VA = "0xFAE3D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDEC78", Offset = "0xBDEC78")]
		private LocalizedString <get_MyRole>b__13_0(Role x)
		{
			return null;
		}

		[Token(Token = "0x6000CE0")]
		[Address(RVA = "0xFAE414", Offset = "0xFAE414", VA = "0xFAE414")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDEC88", Offset = "0xBDEC88")]
		private LocalizedString <get_OpponentRole>b__15_0(Role x)
		{
			return null;
		}
	}
	[Token(Token = "0x20004B9")]
	public class HUDMenuPosition : MonoBehaviour
	{
		[Token(Token = "0x4000B2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform headSync;

		[Token(Token = "0x4000B2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject root;

		[Token(Token = "0x4000B2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 _newPosition;

		[Token(Token = "0x4000B2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private ReactiveSubscription _reactiveSubscription;

		[Token(Token = "0x6000CE6")]
		[Address(RVA = "0xFAE450", Offset = "0xFAE450", VA = "0xFAE450")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000CE7")]
		[Address(RVA = "0xFAE570", Offset = "0xFAE570", VA = "0xFAE570")]
		private void OnInspectorPositionSet(Vector3 position)
		{
		}

		[Token(Token = "0x6000CE8")]
		[Address(RVA = "0xFAE57C", Offset = "0xFAE57C", VA = "0xFAE57C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000CE9")]
		[Address(RVA = "0xFAE6F8", Offset = "0xFAE6F8", VA = "0xFAE6F8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000CEA")]
		[Address(RVA = "0xFAE724", Offset = "0xFAE724", VA = "0xFAE724")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000CEB")]
		[Address(RVA = "0xFAE730", Offset = "0xFAE730", VA = "0xFAE730")]
		public HUDMenuPosition()
		{
		}
	}
	[Token(Token = "0x20004BA")]
	public class HUDMessageDisplay : MonoBehaviour
	{
		[Token(Token = "0x4000B2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly int AnimMessageEnabled;

		[Token(Token = "0x4000B2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static readonly int AnimMessageType;

		[Token(Token = "0x4000B30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly int AnimIsDeactivated;

		[Token(Token = "0x4000B31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private static readonly int AnimWinState;

		[Token(Token = "0x4000B32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Animator messageAnimator;

		[Token(Token = "0x4000B33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private WorldSpaceOverlayUI overlayControl;

		[Token(Token = "0x4000B34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private LocalizeStringEvent messageTextField;

		[Token(Token = "0x4000B35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private LocalizeStringEvent subMessageTextField;

		[Token(Token = "0x4000B36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private TMP_Text playerTeamScore;

		[Token(Token = "0x4000B37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private TMP_Text enemyTeamScore;

		[Token(Token = "0x4000B38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Image roundOverIconField;

		[Token(Token = "0x4000B39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBD1EF8", Offset = "0xBD1EF8")]
		private LocalizedString roundWonMessage;

		[Token(Token = "0x4000B3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private LocalizedString roundLostMessage;

		[Token(Token = "0x4000B3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private LocalizedString roundDrawMessage;

		[Token(Token = "0x4000B3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private LocalizedString matchWonMessage;

		[Token(Token = "0x4000B3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private LocalizedString matchLostMessage;

		[Token(Token = "0x4000B3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private LocalizedString matchDrawMessage;

		[Token(Token = "0x4000B3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private LocalizedString teamSwitchMessage;

		[Token(Token = "0x4000B40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private LocalizedString[] roundEndReasons;

		[Token(Token = "0x4000B41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		[AttributeAttribute(Name = "EnumArrayAttribute", RVA = "0xBD1FB4", Offset = "0xBD1FB4")]
		private Sprite[] roundEndSprites;

		[Token(Token = "0x4000B42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private int _displayedEnemyScore;

		[Token(Token = "0x4000B43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private int _displayedPlayerScore;

		[Token(Token = "0x4000B44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private float _displayTime;

		[Token(Token = "0x4000B45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private float _timer;

		[Token(Token = "0x6000CEC")]
		[Address(RVA = "0xFAE738", Offset = "0xFAE738", VA = "0xFAE738")]
		private void Update()
		{
		}

		[Token(Token = "0x6000CED")]
		[Address(RVA = "0xFAE80C", Offset = "0xFAE80C", VA = "0xFAE80C")]
		private void DisableMessage()
		{
		}

		[Token(Token = "0x6000CEE")]
		[Address(RVA = "0xFAE8E0", Offset = "0xFAE8E0", VA = "0xFAE8E0")]
		private void PlayNextMessage()
		{
		}

		[Token(Token = "0x6000CEF")]
		[Address(RVA = "0xFAEBE0", Offset = "0xFAEBE0", VA = "0xFAEBE0")]
		private LocalizedString GetMessageString(MessageData data)
		{
			return null;
		}

		[Token(Token = "0x6000CF0")]
		[Address(RVA = "0xFAEC98", Offset = "0xFAEC98", VA = "0xFAEC98")]
		private LocalizedString GetRoundEndReasonString(RoundEndReason reason, WinState winState)
		{
			return null;
		}

		[Token(Token = "0x6000CF1")]
		[Address(RVA = "0xFAED00", Offset = "0xFAED00", VA = "0xFAED00")]
		public void IncrementPlayerScore()
		{
		}

		[Token(Token = "0x6000CF2")]
		[Address(RVA = "0xFAED44", Offset = "0xFAED44", VA = "0xFAED44")]
		public void IncrementEnemyScore()
		{
		}

		[Token(Token = "0x6000CF3")]
		[Address(RVA = "0xFAED88", Offset = "0xFAED88", VA = "0xFAED88")]
		public void SetTeamSwitchText()
		{
		}

		[Token(Token = "0x6000CF4")]
		[Address(RVA = "0xFAEDAC", Offset = "0xFAEDAC", VA = "0xFAEDAC")]
		public HUDMessageDisplay()
		{
		}
	}
	[Token(Token = "0x20004BB")]
	public class HUDPlayerStatus : MonoBehaviour
	{
		[Token(Token = "0x4000B46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private PlayerTeamIndexFetcher playerFetcher;

		[Token(Token = "0x4000B47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Slider healthBar;

		[Token(Token = "0x4000B48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly ReactiveSource<Sprite> _classIcon;

		[Token(Token = "0x4000B49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly ReactiveSource<bool> _isDead;

		[Token(Token = "0x4000B4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool _iconNeedsUpdating;

		[Token(Token = "0x4000B4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		private bool _playerDeadActive;

		[Token(Token = "0x4000B4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private EntityRef _playerEntity;

		[Token(Token = "0x4000B4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private ReactiveSubscription _playerFetcherSubscription;

		[Token(Token = "0x4000B4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD2044", Offset = "0xBD2044")]
		private readonly Reactive<Sprite> <ClassIcon>k__BackingField;

		[Token(Token = "0x4000B4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD2054", Offset = "0xBD2054")]
		private readonly Reactive<bool> <IsDead>k__BackingField;

		[Token(Token = "0x170001FC")]
		public Reactive<Sprite> ClassIcon
		{
			[Token(Token = "0x6000CF7")]
			[Address(RVA = "0xFAF008", Offset = "0xFAF008", VA = "0xFAF008")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDEC98", Offset = "0xBDEC98")]
			get
			{
				return default(Reactive<Sprite>);
			}
		}

		[Token(Token = "0x170001FD")]
		public Reactive<bool> IsDead
		{
			[Token(Token = "0x6000CF8")]
			[Address(RVA = "0xFAF010", Offset = "0xFAF010", VA = "0xFAF010")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDECA8", Offset = "0xBDECA8")]
			get
			{
				return default(Reactive<bool>);
			}
		}

		[Token(Token = "0x6000CF6")]
		[Address(RVA = "0xFAEEA4", Offset = "0xFAEEA4", VA = "0xFAEEA4")]
		public HUDPlayerStatus()
		{
		}

		[Token(Token = "0x6000CF9")]
		[Address(RVA = "0xFAF018", Offset = "0xFAF018", VA = "0xFAF018")]
		private void Start()
		{
		}

		[Token(Token = "0x6000CFA")]
		[Address(RVA = "0xFAF0FC", Offset = "0xFAF0FC", VA = "0xFAF0FC")]
		private void Update()
		{
		}

		[Token(Token = "0x6000CFB")]
		[Address(RVA = "0xFAF4B0", Offset = "0xFAF4B0", VA = "0xFAF4B0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000CFC")]
		[Address(RVA = "0xFAF580", Offset = "0xFAF580", VA = "0xFAF580")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000CFD")]
		[Address(RVA = "0xFAF58C", Offset = "0xFAF58C", VA = "0xFAF58C")]
		private void OnPlayerChange(EntityRef newPlayer)
		{
		}

		[Token(Token = "0x6000CFE")]
		[Address(RVA = "0xFAF6A0", Offset = "0xFAF6A0", VA = "0xFAF6A0")]
		private void OnPlayerDataChanged(EventPlayerLoadoutChanged callback)
		{
		}

		[Token(Token = "0x6000CFF")]
		[Address(RVA = "0xFAF358", Offset = "0xFAF358", VA = "0xFAF358")]
		private bool SetClassIcon(EntityRef playerEntity)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20004BC")]
	public class HUDRoundEndMessage : MonoBehaviour
	{
		[Token(Token = "0x4000B50")]
		private const float RoundOverTime = 4f;

		[Token(Token = "0x4000B51")]
		private const float TeamSwitchTime = 6f;

		[Token(Token = "0x4000B52")]
		private const float MatchOverTime = 8f;

		[Token(Token = "0x6000D00")]
		[Address(RVA = "0xFAF6EC", Offset = "0xFAF6EC", VA = "0xFAF6EC")]
		private void Start()
		{
		}

		[Token(Token = "0x6000D01")]
		[Address(RVA = "0xFAF7D0", Offset = "0xFAF7D0", VA = "0xFAF7D0")]
		private void OnRoundEnd(EventRoundEnd callback)
		{
		}

		[Token(Token = "0x6000D02")]
		[Address(RVA = "0xFAFBE8", Offset = "0xFAFBE8", VA = "0xFAFBE8")]
		public HUDRoundEndMessage()
		{
		}
	}
	[Token(Token = "0x20004BD")]
	public class HealthBarHitListener : MonoBehaviour
	{
		[Token(Token = "0x4000B53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private BoundValue<Cortopia.Scripts.Players.Player> player;

		[Token(Token = "0x4000B54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private BoundValue<bool> isDead;

		[Token(Token = "0x4000B55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Canvas canvas;

		[Token(Token = "0x4000B56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private CanvasGroup canvasGroup;

		[Token(Token = "0x4000B57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private float effectTime;

		[Token(Token = "0x4000B58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private AnimationCurve visibilityCurve;

		[Token(Token = "0x4000B59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float _elapsedTime;

		[Token(Token = "0x4000B5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private bool? _isFriendly;

		[Token(Token = "0x6000D03")]
		[Address(RVA = "0xFB12B4", Offset = "0xFB12B4", VA = "0xFB12B4")]
		private void Update()
		{
		}

		[Token(Token = "0x6000D04")]
		[Address(RVA = "0xFB1738", Offset = "0xFB1738", VA = "0xFB1738")]
		private void Start()
		{
		}

		[Token(Token = "0x6000D05")]
		[Address(RVA = "0xFB181C", Offset = "0xFB181C", VA = "0xFB181C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000D06")]
		[Address(RVA = "0xFB182C", Offset = "0xFB182C", VA = "0xFB182C")]
		private void OnChangedHealth(EventChangeHealth callback)
		{
		}

		[Token(Token = "0x6000D07")]
		[Address(RVA = "0xFB1558", Offset = "0xFB1558", VA = "0xFB1558")]
		private bool? IsFriendly()
		{
			return null;
		}

		[Token(Token = "0x6000D08")]
		[Address(RVA = "0xFB18FC", Offset = "0xFB18FC", VA = "0xFB18FC")]
		public HealthBarHitListener()
		{
		}
	}
	[Token(Token = "0x20004BE")]
	public class HealthBarSegment : MonoBehaviour
	{
		[Token(Token = "0x4000B5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Slider upperHealthSlider;

		[Token(Token = "0x4000B5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Slider lowerHealthSlider;

		[Token(Token = "0x4000B5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private ReactiveSubscription _healthSubscription;

		[Token(Token = "0x4000B5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector2 _segmentRange;

		[Token(Token = "0x6000D09")]
		[Address(RVA = "0xFB1904", Offset = "0xFB1904", VA = "0xFB1904")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000D0A")]
		[Address(RVA = "0xFB1910", Offset = "0xFB1910", VA = "0xFB1910")]
		public void ConfigureSegment(float minValue, float maxValue, Reactive<float> lowerHealth, Reactive<float> upperHealth)
		{
		}

		[Token(Token = "0x6000D0B")]
		[Address(RVA = "0xFB1A7C", Offset = "0xFB1A7C", VA = "0xFB1A7C")]
		private void OnHealthChanged((float, float) valueTuple)
		{
		}

		[Token(Token = "0x6000D0C")]
		[Address(RVA = "0xFB1B54", Offset = "0xFB1B54", VA = "0xFB1B54")]
		public HealthBarSegment()
		{
		}
	}
	[Token(Token = "0x20004BF")]
	public class HealthBarSegmentedUI : MonoBehaviour
	{
		[Token(Token = "0x4000B5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private BoundValue<Cortopia.Scripts.Players.Player> player;

		[Token(Token = "0x4000B60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private int healthPerSegment;

		[Token(Token = "0x4000B61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private float lerpTime;

		[Token(Token = "0x4000B62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private List<HealthBarSegment> healthBarSegments;

		[Token(Token = "0x4000B63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly ReactiveSource<float> _currentLowerHealth;

		[Token(Token = "0x4000B64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private readonly ReactiveSource<float> _currentUpperHealth;

		[Token(Token = "0x4000B65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private readonly ReactiveTransaction _healthValueTransaction;

		[Token(Token = "0x4000B66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int _currentSegments;

		[Token(Token = "0x4000B67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float? _elapsedTime;

		[Token(Token = "0x4000B68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float _startingLowerHealth;

		[Token(Token = "0x4000B69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float _startingUpperHealth;

		[Token(Token = "0x4000B6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float _targetHealth;

		[Token(Token = "0x4000B6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD2124", Offset = "0xBD2124")]
		private readonly Reactive<float> <CurrentLowerHealth>k__BackingField;

		[Token(Token = "0x4000B6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD2134", Offset = "0xBD2134")]
		private readonly Reactive<float> <CurrentUpperHealth>k__BackingField;

		[Token(Token = "0x170001FE")]
		private Reactive<float> CurrentLowerHealth
		{
			[Token(Token = "0x6000D0E")]
			[Address(RVA = "0xFB1C80", Offset = "0xFB1C80", VA = "0xFB1C80")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDECB8", Offset = "0xBDECB8")]
			get
			{
				return default(Reactive<float>);
			}
		}

		[Token(Token = "0x170001FF")]
		private Reactive<float> CurrentUpperHealth
		{
			[Token(Token = "0x6000D0F")]
			[Address(RVA = "0xFB1C88", Offset = "0xFB1C88", VA = "0xFB1C88")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDECC8", Offset = "0xBDECC8")]
			get
			{
				return default(Reactive<float>);
			}
		}

		[Token(Token = "0x6000D0D")]
		[Address(RVA = "0xFB1B5C", Offset = "0xFB1B5C", VA = "0xFB1B5C")]
		private HealthBarSegmentedUI()
		{
		}

		[Token(Token = "0x6000D10")]
		[Address(RVA = "0xFB1C90", Offset = "0xFB1C90", VA = "0xFB1C90")]
		private void Update()
		{
		}

		[Token(Token = "0x6000D11")]
		[Address(RVA = "0xFB1EF8", Offset = "0xFB1EF8", VA = "0xFB1EF8")]
		private void ConfigureSegments(float maxHealth)
		{
		}

		[Token(Token = "0x6000D12")]
		[Address(RVA = "0xFB2150", Offset = "0xFB2150", VA = "0xFB2150")]
		private void SetHealthValues(float newHealthValue)
		{
		}
	}
	[Token(Token = "0x20004C0")]
	public class HealthBarUI : MonoBehaviour
	{
		[Token(Token = "0x4000B6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Cortopia.Scripts.Players.Player player;

		[Token(Token = "0x4000B6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Slider healthBar;

		[Token(Token = "0x4000B6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private bool invert;

		[Token(Token = "0x4000B70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		private bool _hasInitialized;

		[Token(Token = "0x6000D13")]
		[Address(RVA = "0xFB262C", Offset = "0xFB262C", VA = "0xFB262C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000D14")]
		[Address(RVA = "0xFB2730", Offset = "0xFB2730", VA = "0xFB2730")]
		private void TryUpdateHealthBar(Frame frame)
		{
		}

		[Token(Token = "0x6000D15")]
		[Address(RVA = "0xFB291C", Offset = "0xFB291C", VA = "0xFB291C")]
		public HealthBarUI()
		{
		}
	}
	[Token(Token = "0x20004C1")]
	public class HintsAndLore : MonoBehaviour
	{
		[StructLayout(3)]
		[Token(Token = "0x20004C2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBC9928", Offset = "0xBC9928")]
		private struct <RepeatRandomizeAsync>d__12 : IAsyncStateMachine
		{
			[Token(Token = "0x4000B7B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000B7C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x4000B7D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Task prevTask;

			[Token(Token = "0x4000B7E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public HintsAndLore <>4__this;

			[Token(Token = "0x4000B7F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public CancellationToken token;

			[Token(Token = "0x4000B80")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private Task<StringTable> <loreTask>5__2;

			[Token(Token = "0x4000B81")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private StringTableEntry[] <hintsEntries>5__3;

			[Token(Token = "0x4000B82")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private StringTableEntry[] <loreEntries>5__4;

			[Token(Token = "0x4000B83")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x4000B84")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private TaskAwaiter<StringTable> <>u__2;

			[Token(Token = "0x6000D1B")]
			[Address(RVA = "0x1033078", Offset = "0x1033078", VA = "0x1033078", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000D1C")]
			[Address(RVA = "0x1033940", Offset = "0x1033940", VA = "0x1033940", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4000B71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private LocalizedStringTable hints;

		[Token(Token = "0x4000B72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private LocalizedStringTable lore;

		[Token(Token = "0x4000B73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float refreshTimeSeconds;

		[Token(Token = "0x4000B74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private AnimationCurve loreRate;

		[Token(Token = "0x4000B75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private BoundValue<int> playerLevel;

		[Token(Token = "0x4000B76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private LocalizeStringEvent stringEvent;

		[Token(Token = "0x4000B77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private CancellationTokenSource _cancellationSource;

		[Token(Token = "0x4000B78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int _hintIndex;

		[Token(Token = "0x4000B79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private int _loreIndex;

		[Token(Token = "0x4000B7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Task _task;

		[Token(Token = "0x6000D16")]
		[Address(RVA = "0xFB353C", Offset = "0xFB353C", VA = "0xFB353C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000D17")]
		[Address(RVA = "0xFB36F0", Offset = "0xFB36F0", VA = "0xFB36F0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000D18")]
		[Address(RVA = "0xFB35CC", Offset = "0xFB35CC", VA = "0xFB35CC")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xBDECD8", Offset = "0xBDECD8")]
		private Task RepeatRandomizeAsync(Task prevTask, CancellationToken token)
		{
			return null;
		}

		[Token(Token = "0x6000D19")]
		[Address(RVA = "0xFB370C", Offset = "0xFB370C", VA = "0xFB370C")]
		private static void Shuffle(StringTableEntry[] list)
		{
		}

		[Token(Token = "0x6000D1A")]
		[Address(RVA = "0xFB381C", Offset = "0xFB381C", VA = "0xFB381C")]
		public HintsAndLore()
		{
		}
	}
	[Token(Token = "0x20004C3")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xBC9938", Offset = "0xBC9938")]
	public class ImageElementColorSetter : MonoBehaviour
	{
		[Token(Token = "0x4000B85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private BoundValue<SpellElement> currentElement;

		[Token(Token = "0x4000B86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Color noElement;

		[Token(Token = "0x4000B87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Color fireElement;

		[Token(Token = "0x4000B88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Color iceElement;

		[Token(Token = "0x4000B89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Color lightningElement;

		[Token(Token = "0x4000B8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Color natureElement;

		[Token(Token = "0x4000B8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Color arcaneElement;

		[Token(Token = "0x4000B8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private ReactiveSubscription _elementSubscription;

		[Token(Token = "0x4000B8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Image _image;

		[Token(Token = "0x6000D1D")]
		[Address(RVA = "0xFB40EC", Offset = "0xFB40EC", VA = "0xFB40EC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000D1E")]
		[Address(RVA = "0xFB4140", Offset = "0xFB4140", VA = "0xFB4140")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000D1F")]
		[Address(RVA = "0xFB422C", Offset = "0xFB422C", VA = "0xFB422C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000D20")]
		[Address(RVA = "0xFB4238", Offset = "0xFB4238", VA = "0xFB4238")]
		private void OnElementChanged(SpellElement newElement)
		{
		}

		[Token(Token = "0x6000D21")]
		[Address(RVA = "0xFB4380", Offset = "0xFB4380", VA = "0xFB4380")]
		public ImageElementColorSetter()
		{
		}
	}
	[Token(Token = "0x20004C4")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xBC9998", Offset = "0xBC9998")]
	public class ImageOpacityNormalizedFloatReactor : MonoBehaviour
	{
		[Token(Token = "0x4000B8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private BoundValue<float> normalizedTime;

		[Token(Token = "0x4000B8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float minOpacity;

		[Token(Token = "0x4000B90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private float maxOpacity;

		[Token(Token = "0x4000B91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AnimationCurve interpolation;

		[Token(Token = "0x4000B92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Color _colorCache;

		[Token(Token = "0x4000B93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private ReactiveSubscription _subscription;

		[Token(Token = "0x4000B94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Image _image;

		[Token(Token = "0x6000D22")]
		[Address(RVA = "0xFB4388", Offset = "0xFB4388", VA = "0xFB4388")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000D23")]
		[Address(RVA = "0xFB43FC", Offset = "0xFB43FC", VA = "0xFB43FC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000D24")]
		[Address(RVA = "0xFB44E8", Offset = "0xFB44E8", VA = "0xFB44E8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000D25")]
		[Address(RVA = "0xFB44F4", Offset = "0xFB44F4", VA = "0xFB44F4")]
		private void OnNormalizedTimeChanged(float value)
		{
		}

		[Token(Token = "0x6000D26")]
		[Address(RVA = "0xFB456C", Offset = "0xFB456C", VA = "0xFB456C")]
		public ImageOpacityNormalizedFloatReactor()
		{
		}
	}
	[Token(Token = "0x20004C5")]
	public class InGameMenu : MonoBehaviour
	{
		[Token(Token = "0x4000B95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly int MenuIsActiveParam;

		[Token(Token = "0x4000B96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private BoundValue<bool> hasInvitations;

		[Token(Token = "0x4000B97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private BoundValue<bool> surrenderNeedsReply;

		[Token(Token = "0x4000B98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private int hasInvitationsForceIndex;

		[Token(Token = "0x4000B99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private int surrenderNeedsReplyForceIndex;

		[Token(Token = "0x4000B9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Animator menuAnimator;

		[Token(Token = "0x4000B9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Transform headSync;

		[Token(Token = "0x4000B9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private VRToggleGroup mainToggleGroup;

		[Token(Token = "0x4000B9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private readonly ReactiveSource<bool> _isActiveSource;

		[Token(Token = "0x4000B9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool _isMenuActive;

		[Token(Token = "0x4000B9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD22F4", Offset = "0xBD22F4")]
		private readonly Reactive<bool> <IsMenuActive>k__BackingField;

		[Token(Token = "0x17000200")]
		public Reactive<bool> IsMenuActive
		{
			[Token(Token = "0x6000D28")]
			[Address(RVA = "0xF7E5F0", Offset = "0xF7E5F0", VA = "0xF7E5F0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDED48", Offset = "0xBDED48")]
			get
			{
				return default(Reactive<bool>);
			}
		}

		[Token(Token = "0x6000D27")]
		[Address(RVA = "0xF7E51C", Offset = "0xF7E51C", VA = "0xF7E51C")]
		private InGameMenu()
		{
		}

		[Token(Token = "0x6000D29")]
		[Address(RVA = "0xF7E5F8", Offset = "0xF7E5F8", VA = "0xF7E5F8")]
		private void Update()
		{
		}

		[Token(Token = "0x6000D2A")]
		[Address(RVA = "0xF7E87C", Offset = "0xF7E87C", VA = "0xF7E87C")]
		public void ToggleVisible()
		{
		}

		[Token(Token = "0x6000D2B")]
		[Address(RVA = "0xF7EA80", Offset = "0xF7EA80", VA = "0xF7EA80")]
		public void QuitToMenu()
		{
		}
	}
	[Token(Token = "0x20004C6")]
	public class InGameMenuStats : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20004C7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBC99F8", Offset = "0xBC99F8")]
		private sealed class <>c
		{
			[Token(Token = "0x4000BB2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000BB3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Quantum.Team, Quantum.Team> <>9__10_0;

			[Token(Token = "0x6000D39")]
			[Address(RVA = "0x1034268", Offset = "0x1034268", VA = "0x1034268")]
			public <>c()
			{
			}

			[Token(Token = "0x6000D3A")]
			[Address(RVA = "0x1034270", Offset = "0x1034270", VA = "0x1034270")]
			internal Quantum.Team <.ctor>b__10_0(Quantum.Team x)
			{
				return default(Quantum.Team);
			}
		}

		[Token(Token = "0x4000BA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly LocalizedString EmptyString;

		[Token(Token = "0x4000BA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly ReactiveSource<string> _localPlayerTeamScore;

		[Token(Token = "0x4000BA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly ReactiveSource<string> _opponentScore;

		[Token(Token = "0x4000BA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly ReactiveSource<RoundResult[]> _roundsReason;

		[Token(Token = "0x4000BA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly ReactiveSource<int> _maxRoundsCount;

		[Token(Token = "0x4000BA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private readonly ReactiveSource<bool> _firstRoleAttacker;

		[Token(Token = "0x4000BA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private readonly ReactiveSource<Quantum.Team> _myTeam;

		[Token(Token = "0x4000BA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private readonly ReactiveSource<LocalizedString> _gameModeName;

		[Token(Token = "0x4000BA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int _cachedLocalPlayerTeamScore;

		[Token(Token = "0x4000BA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private int _cachedOpponentScore;

		[Token(Token = "0x4000BAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD2304", Offset = "0xBD2304")]
		private readonly Reactive<string> <LocalPlayerTeamScore>k__BackingField;

		[Token(Token = "0x4000BAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD2314", Offset = "0xBD2314")]
		private readonly Reactive<string> <OpponentTeamScore>k__BackingField;

		[Token(Token = "0x4000BAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD2324", Offset = "0xBD2324")]
		private readonly Reactive<RoundResult[]> <RoundsReason>k__BackingField;

		[Token(Token = "0x4000BAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD2334", Offset = "0xBD2334")]
		private readonly Reactive<int> <MaxRoundsCount>k__BackingField;

		[Token(Token = "0x4000BAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD2344", Offset = "0xBD2344")]
		private readonly Reactive<bool> <FirstRoleAttacker>k__BackingField;

		[Token(Token = "0x4000BAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD2354", Offset = "0xBD2354")]
		private readonly Reactive<Quantum.Team> <MyTeam>k__BackingField;

		[Token(Token = "0x4000BB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD2364", Offset = "0xBD2364")]
		private readonly Reactive<Quantum.Team> <OpponentTeam>k__BackingField;

		[Token(Token = "0x4000BB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD2374", Offset = "0xBD2374")]
		private readonly Reactive<LocalizedString> <GameModeName>k__BackingField;

		[Token(Token = "0x17000201")]
		public Reactive<string> LocalPlayerTeamScore
		{
			[Token(Token = "0x6000D2E")]
			[Address(RVA = "0xF7F0E0", Offset = "0xF7F0E0", VA = "0xF7F0E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDED58", Offset = "0xBDED58")]
			get
			{
				return default(Reactive<string>);
			}
		}

		[Token(Token = "0x17000202")]
		public Reactive<string> OpponentTeamScore
		{
			[Token(Token = "0x6000D2F")]
			[Address(RVA = "0xF7F0E8", Offset = "0xF7F0E8", VA = "0xF7F0E8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDED68", Offset = "0xBDED68")]
			get
			{
				return default(Reactive<string>);
			}
		}

		[Token(Token = "0x17000203")]
		public Reactive<RoundResult[]> RoundsReason
		{
			[Token(Token = "0x6000D30")]
			[Address(RVA = "0xF7F0F0", Offset = "0xF7F0F0", VA = "0xF7F0F0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDED78", Offset = "0xBDED78")]
			get
			{
				return default(Reactive<RoundResult[]>);
			}
		}

		[Token(Token = "0x17000204")]
		public Reactive<int> MaxRoundsCount
		{
			[Token(Token = "0x6000D31")]
			[Address(RVA = "0xF7F0F8", Offset = "0xF7F0F8", VA = "0xF7F0F8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDED88", Offset = "0xBDED88")]
			get
			{
				return default(Reactive<int>);
			}
		}

		[Token(Token = "0x17000205")]
		public Reactive<bool> FirstRoleAttacker
		{
			[Token(Token = "0x6000D32")]
			[Address(RVA = "0xF7F100", Offset = "0xF7F100", VA = "0xF7F100")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDED98", Offset = "0xBDED98")]
			get
			{
				return default(Reactive<bool>);
			}
		}

		[Token(Token = "0x17000206")]
		public Reactive<Quantum.Team> MyTeam
		{
			[Token(Token = "0x6000D33")]
			[Address(RVA = "0xF7F108", Offset = "0xF7F108", VA = "0xF7F108")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDEDA8", Offset = "0xBDEDA8")]
			get
			{
				return default(Reactive<Quantum.Team>);
			}
		}

		[Token(Token = "0x17000207")]
		public Reactive<Quantum.Team> OpponentTeam
		{
			[Token(Token = "0x6000D34")]
			[Address(RVA = "0xF7F110", Offset = "0xF7F110", VA = "0xF7F110")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDEDB8", Offset = "0xBDEDB8")]
			get
			{
				return default(Reactive<Quantum.Team>);
			}
		}

		[Token(Token = "0x17000208")]
		public Reactive<LocalizedString> GameModeName
		{
			[Token(Token = "0x6000D35")]
			[Address(RVA = "0xF7F118", Offset = "0xF7F118", VA = "0xF7F118")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDEDC8", Offset = "0xBDEDC8")]
			get
			{
				return default(Reactive<LocalizedString>);
			}
		}

		[Token(Token = "0x6000D2D")]
		[Address(RVA = "0xF7EBB0", Offset = "0xF7EBB0", VA = "0xF7EBB0")]
		public InGameMenuStats()
		{
		}

		[Token(Token = "0x6000D36")]
		[Address(RVA = "0xF7F120", Offset = "0xF7F120", VA = "0xF7F120")]
		private void Update()
		{
		}
	}
	[Token(Token = "0x20004C8")]
	public class InGamePlayerStats : MonoBehaviour
	{
		[Token(Token = "0x4000BB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private BoundValue<EntityRef> playerEntity;

		[Token(Token = "0x4000BB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private DisplayPlayerName playerName;

		[Token(Token = "0x4000BB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly ReactiveSource<int> _assists;

		[Token(Token = "0x4000BB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly ReactiveSource<int> _deaths;

		[Token(Token = "0x4000BB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private readonly ReactiveSource<int> _kills;

		[Token(Token = "0x4000BB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private readonly ReactiveSource<int> _objectives;

		[Token(Token = "0x4000BBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private readonly ReactiveSource<int> _totalDamage;

		[Token(Token = "0x4000BBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private readonly ReactiveSource<int> _totalHealing;

		[Token(Token = "0x4000BBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private EntityRef _currentNamePlayerEntity;

		[Token(Token = "0x4000BBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool _needCleanStatistics;

		[Token(Token = "0x17000209")]
		public Reactive<string> Kills
		{
			[Token(Token = "0x6000D3B")]
			[Address(RVA = "0xF7F648", Offset = "0xF7F648", VA = "0xF7F648")]
			get
			{
				return default(Reactive<string>);
			}
		}

		[Token(Token = "0x1700020A")]
		public Reactive<string> Deaths
		{
			[Token(Token = "0x6000D3C")]
			[Address(RVA = "0xF7F73C", Offset = "0xF7F73C", VA = "0xF7F73C")]
			get
			{
				return default(Reactive<string>);
			}
		}

		[Token(Token = "0x1700020B")]
		public Reactive<string> Assists
		{
			[Token(Token = "0x6000D3D")]
			[Address(RVA = "0xF7F830", Offset = "0xF7F830", VA = "0xF7F830")]
			get
			{
				return default(Reactive<string>);
			}
		}

		[Token(Token = "0x1700020C")]
		public Reactive<string> TotalDamage
		{
			[Token(Token = "0x6000D3E")]
			[Address(RVA = "0xF7F924", Offset = "0xF7F924", VA = "0xF7F924")]
			get
			{
				return default(Reactive<string>);
			}
		}

		[Token(Token = "0x1700020D")]
		public Reactive<string> TotalHealing
		{
			[Token(Token = "0x6000D3F")]
			[Address(RVA = "0xF7FA18", Offset = "0xF7FA18", VA = "0xF7FA18")]
			get
			{
				return default(Reactive<string>);
			}
		}

		[Token(Token = "0x1700020E")]
		public Reactive<string> Objectives
		{
			[Token(Token = "0x6000D40")]
			[Address(RVA = "0xF7FB0C", Offset = "0xF7FB0C", VA = "0xF7FB0C")]
			get
			{
				return default(Reactive<string>);
			}
		}

		[Token(Token = "0x6000D41")]
		[Address(RVA = "0xF7FC00", Offset = "0xF7FC00", VA = "0xF7FC00")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000D42")]
		[Address(RVA = "0xF7FC20", Offset = "0xF7FC20", VA = "0xF7FC20")]
		private void Update()
		{
		}

		[Token(Token = "0x6000D43")]
		[Address(RVA = "0xF7FCF8", Offset = "0xF7FCF8", VA = "0xF7FCF8")]
		private bool UpdateStatistics()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D44")]
		[Address(RVA = "0xF80324", Offset = "0xF80324", VA = "0xF80324")]
		private static string MakeString(int arg)
		{
			return null;
		}

		[Token(Token = "0x6000D45")]
		[Address(RVA = "0xF80264", Offset = "0xF80264", VA = "0xF80264")]
		private void UpdateDisplayName(Frame frame, EntityRef playerEntityRef)
		{
		}

		[Token(Token = "0x6000D46")]
		[Address(RVA = "0xF8038C", Offset = "0xF8038C", VA = "0xF8038C")]
		public InGamePlayerStats()
		{
		}
	}
	[Token(Token = "0x20004C9")]
	public class LanguageMenu : MonoBehaviour
	{
		[StructLayout(3)]
		[Token(Token = "0x20004CA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBC9A08", Offset = "0xBC9A08")]
		private struct <Start>d__6 : IAsyncStateMachine
		{
			[Token(Token = "0x4000BC2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000BC3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4000BC4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public LanguageMenu <>4__this;

			[Token(Token = "0x4000BC5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private TaskAwaiter<LocalizationSettings> <>u__1;

			[Token(Token = "0x6000D4C")]
			[Address(RVA = "0x1034280", Offset = "0x1034280", VA = "0x1034280", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000D4D")]
			[Address(RVA = "0x1034670", Offset = "0x1034670", VA = "0x1034670", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4000BBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBD23A4", Offset = "0xBD23A4")]
		private Locale[] locales;

		[Token(Token = "0x4000BBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private ReactiveSubscription _reactiveSubscription;

		[Token(Token = "0x4000BC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private CancellationTokenSource _cts;

		[Token(Token = "0x4000BC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD23F0", Offset = "0xBD23F0")]
		private readonly ReactiveSource<int> <SelectedLocaleIndex>k__BackingField;

		[Token(Token = "0x1700020F")]
		public ReactiveSource<int> SelectedLocaleIndex
		{
			[Token(Token = "0x6000D47")]
			[Address(RVA = "0xF8335C", Offset = "0xF8335C", VA = "0xF8335C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDEDD8", Offset = "0xBDEDD8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D48")]
		[Address(RVA = "0xF83364", Offset = "0xF83364", VA = "0xF83364")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xBDEDE8", Offset = "0xBDEDE8")]
		private void Start()
		{
		}

		[Token(Token = "0x6000D49")]
		[Address(RVA = "0xF83428", Offset = "0xF83428", VA = "0xF83428")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000D4A")]
		[Address(RVA = "0xF8345C", Offset = "0xF8345C", VA = "0xF8345C")]
		private void OnLocaleIndexChanged(int index)
		{
		}

		[Token(Token = "0x6000D4B")]
		[Address(RVA = "0xF834AC", Offset = "0xF834AC", VA = "0xF834AC")]
		public LanguageMenu()
		{
		}
	}
	[Token(Token = "0x20004CB")]
	public class LeaderBoardUIStats : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20004CC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBC9A18", Offset = "0xBC9A18")]
		private sealed class <>c
		{
			[Token(Token = "0x4000BCE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000BCF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<IUser, Reactive<bool>> <>9__10_0;

			[Token(Token = "0x6000D57")]
			[Address(RVA = "0x1034750", Offset = "0x1034750", VA = "0x1034750")]
			public <>c()
			{
			}

			[Token(Token = "0x6000D58")]
			[Address(RVA = "0x1034758", Offset = "0x1034758", VA = "0x1034758")]
			internal Reactive<bool> <OnEnable>b__10_0(IUser x)
			{
				return default(Reactive<bool>);
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20004CD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBC9A28", Offset = "0xBC9A28")]
		private struct <AddPlayersToUiLeaderboard>d__14 : IAsyncStateMachine
		{
			[Token(Token = "0x4000BD0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000BD1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x4000BD2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public LeaderBoardUIStats <>4__this;

			[Token(Token = "0x4000BD3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private bool <dataReadFailed>5__2;

			[Token(Token = "0x4000BD4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private TaskAwaiter<GetLeaderboardPlayersResult> <>u__1;

			[Token(Token = "0x4000BD5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private TaskAwaiter <>u__2;

			[Token(Token = "0x6000D59")]
			[Address(RVA = "0x1034828", Offset = "0x1034828", VA = "0x1034828", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000D5A")]
			[Address(RVA = "0x1034E74", Offset = "0x1034E74", VA = "0x1034E74", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4000BC6")]
		private const int BeforeSeparatorCount = 3;

		[Token(Token = "0x4000BC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly TimeSpan RePollDelay;

		[Token(Token = "0x4000BC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private LeaderboardPlayer[] playerStatsList;

		[Token(Token = "0x4000BC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject separator;

		[Token(Token = "0x4000BCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly ReactiveSource<bool> _isLoading;

		[Token(Token = "0x4000BCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool _isLoggedIn;

		[Token(Token = "0x4000BCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private ReactiveSubscription _isLoggedInSubscription;

		[Token(Token = "0x4000BCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Task _updatePlayFabTask;

		[Token(Token = "0x17000210")]
		public Reactive<bool> IsLoading
		{
			[Token(Token = "0x6000D4E")]
			[Address(RVA = "0xF8417C", Offset = "0xF8417C", VA = "0xF8417C")]
			get
			{
				return default(Reactive<bool>);
			}
		}

		[Token(Token = "0x6000D4F")]
		[Address(RVA = "0xF841D0", Offset = "0xF841D0", VA = "0xF841D0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000D50")]
		[Address(RVA = "0xF84400", Offset = "0xF84400", VA = "0xF84400")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000D51")]
		[Address(RVA = "0xF8440C", Offset = "0xF8440C", VA = "0xF8440C")]
		private void OnApplicationFocus(bool hasFocus)
		{
		}

		[Token(Token = "0x6000D52")]
		[Address(RVA = "0xF8455C", Offset = "0xF8455C", VA = "0xF8455C")]
		private void LoggedInHandler(bool value)
		{
		}

		[Token(Token = "0x6000D53")]
		[Address(RVA = "0xF84458", Offset = "0xF84458", VA = "0xF84458")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xBDEE58", Offset = "0xBDEE58")]
		private Task AddPlayersToUiLeaderboard()
		{
			return null;
		}

		[Token(Token = "0x6000D54")]
		[Address(RVA = "0xF845A8", Offset = "0xF845A8", VA = "0xF845A8")]
		public LeaderBoardUIStats()
		{
		}
	}
	[Token(Token = "0x20004CE")]
	public class LevelVote : MonoBehaviour
	{
		[Token(Token = "0x4000BD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly ReactiveSource<LocalizedString> _gameMode0;

		[Token(Token = "0x4000BD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly ReactiveSource<Sprite> _gameMode0Sprite;

		[Token(Token = "0x4000BD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly ReactiveSource<LocalizedString> _gameMode1;

		[Token(Token = "0x4000BD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly ReactiveSource<Sprite> _gameMode1Sprite;

		[Token(Token = "0x4000BDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private readonly ReactiveSource<LocalizedString> _gameMode2;

		[Token(Token = "0x4000BDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private readonly ReactiveSource<Sprite> _gameMode2Sprite;

		[Token(Token = "0x4000BDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private readonly ReactiveSource<LocalizedString> _level0;

		[Token(Token = "0x4000BDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private readonly ReactiveSource<Sprite> _level0Sprite;

		[Token(Token = "0x4000BDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private readonly ReactiveSource<LocalizedString> _level1;

		[Token(Token = "0x4000BDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private readonly ReactiveSource<Sprite> _level1Sprite;

		[Token(Token = "0x4000BE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private readonly ReactiveSource<LocalizedString> _level2;

		[Token(Token = "0x4000BE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private readonly ReactiveSource<Sprite> _level2Sprite;

		[Token(Token = "0x4000BE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private readonly ReactiveSource<string> _timer;

		[Token(Token = "0x4000BE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private readonly ReactiveSource<string> _voteCount0;

		[Token(Token = "0x4000BE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private readonly ReactiveSource<string> _voteCount1;

		[Token(Token = "0x4000BE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private readonly ReactiveSource<string> _voteCount2;

		[Token(Token = "0x4000BE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private readonly int[] _votes;

		[Token(Token = "0x4000BE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private ReactiveSubscription _reactiveSubscription;

		[Token(Token = "0x4000BE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private bool _start;

		[Token(Token = "0x4000BE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD2420", Offset = "0xBD2420")]
		private readonly ReactiveSource<int> <LevelSelection>k__BackingField;

		[Token(Token = "0x17000211")]
		public Reactive<string> Timer
		{
			[Token(Token = "0x6000D5B")]
			[Address(RVA = "0xF850EC", Offset = "0xF850EC", VA = "0xF850EC")]
			get
			{
				return default(Reactive<string>);
			}
		}

		[Token(Token = "0x17000212")]
		public Reactive<LocalizedString> Level0
		{
			[Token(Token = "0x6000D5C")]
			[Address(RVA = "0xF8515C", Offset = "0xF8515C", VA = "0xF8515C")]
			get
			{
				return default(Reactive<LocalizedString>);
			}
		}

		[Token(Token = "0x17000213")]
		public Reactive<LocalizedString> Level1
		{
			[Token(Token = "0x6000D5D")]
			[Address(RVA = "0xF851B0", Offset = "0xF851B0", VA = "0xF851B0")]
			get
			{
				return default(Reactive<LocalizedString>);
			}
		}

		[Token(Token = "0x17000214")]
		public Reactive<LocalizedString> Level2
		{
			[Token(Token = "0x6000D5E")]
			[Address(RVA = "0xF85204", Offset = "0xF85204", VA = "0xF85204")]
			get
			{
				return default(Reactive<LocalizedString>);
			}
		}

		[Token(Token = "0x17000215")]
		public Reactive<LocalizedString> GameMode0
		{
			[Token(Token = "0x6000D5F")]
			[Address(RVA = "0xF85258", Offset = "0xF85258", VA = "0xF85258")]
			get
			{
				return default(Reactive<LocalizedString>);
			}
		}

		[Token(Token = "0x17000216")]
		public Reactive<LocalizedString> GameMode1
		{
			[Token(Token = "0x6000D60")]
			[Address(RVA = "0xF852AC", Offset = "0xF852AC", VA = "0xF852AC")]
			get
			{
				return default(Reactive<LocalizedString>);
			}
		}

		[Token(Token = "0x17000217")]
		public Reactive<LocalizedString> GemeMode2
		{
			[Token(Token = "0x6000D61")]
			[Address(RVA = "0xF85300", Offset = "0xF85300", VA = "0xF85300")]
			get
			{
				return default(Reactive<LocalizedString>);
			}
		}

		[Token(Token = "0x17000218")]
		public Reactive<Sprite> Level0Sprite
		{
			[Token(Token = "0x6000D62")]
			[Address(RVA = "0xF85354", Offset = "0xF85354", VA = "0xF85354")]
			get
			{
				return default(Reactive<Sprite>);
			}
		}

		[Token(Token = "0x17000219")]
		public Reactive<Sprite> Level1Sprite
		{
			[Token(Token = "0x6000D63")]
			[Address(RVA = "0xF853A8", Offset = "0xF853A8", VA = "0xF853A8")]
			get
			{
				return default(Reactive<Sprite>);
			}
		}

		[Token(Token = "0x1700021A")]
		public Reactive<Sprite> Level2Sprite
		{
			[Token(Token = "0x6000D64")]
			[Address(RVA = "0xF853FC", Offset = "0xF853FC", VA = "0xF853FC")]
			get
			{
				return default(Reactive<Sprite>);
			}
		}

		[Token(Token = "0x1700021B")]
		public Reactive<Sprite> GameMode0Sprite
		{
			[Token(Token = "0x6000D65")]
			[Address(RVA = "0xF85450", Offset = "0xF85450", VA = "0xF85450")]
			get
			{
				return default(Reactive<Sprite>);
			}
		}

		[Token(Token = "0x1700021C")]
		public Reactive<Sprite> GameMode1Sprite
		{
			[Token(Token = "0x6000D66")]
			[Address(RVA = "0xF854A4", Offset = "0xF854A4", VA = "0xF854A4")]
			get
			{
				return default(Reactive<Sprite>);
			}
		}

		[Token(Token = "0x1700021D")]
		public Reactive<Sprite> GameMode2Sprite
		{
			[Token(Token = "0x6000D67")]
			[Address(RVA = "0xF854F8", Offset = "0xF854F8", VA = "0xF854F8")]
			get
			{
				return default(Reactive<Sprite>);
			}
		}

		[Token(Token = "0x1700021E")]
		public Reactive<string> VoteCount0
		{
			[Token(Token = "0x6000D68")]
			[Address(RVA = "0xF8554C", Offset = "0xF8554C", VA = "0xF8554C")]
			get
			{
				return default(Reactive<string>);
			}
		}

		[Token(Token = "0x1700021F")]
		public Reactive<string> VoteCount1
		{
			[Token(Token = "0x6000D69")]
			[Address(RVA = "0xF855A0", Offset = "0xF855A0", VA = "0xF855A0")]
			get
			{
				return default(Reactive<string>);
			}
		}

		[Token(Token = "0x17000220")]
		public Reactive<string> VoteCount2
		{
			[Token(Token = "0x6000D6A")]
			[Address(RVA = "0xF855F4", Offset = "0xF855F4", VA = "0xF855F4")]
			get
			{
				return default(Reactive<string>);
			}
		}

		[Token(Token = "0x17000221")]
		public ReactiveSource<int> LevelSelection
		{
			[Token(Token = "0x6000D6B")]
			[Address(RVA = "0xF85648", Offset = "0xF85648", VA = "0xF85648")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDEEC8", Offset = "0xBDEEC8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D6C")]
		[Address(RVA = "0xF85650", Offset = "0xF85650", VA = "0xF85650")]
		private void Update()
		{
		}

		[Token(Token = "0x6000D6D")]
		[Address(RVA = "0xF85C6C", Offset = "0xF85C6C", VA = "0xF85C6C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000D6E")]
		[Address(RVA = "0xF85D60", Offset = "0xF85D60", VA = "0xF85D60")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000D6F")]
		[Address(RVA = "0xF85D74", Offset = "0xF85D74", VA = "0xF85D74")]
		private void LevelSelectionChanged(int item)
		{
		}

		[Token(Token = "0x6000D70")]
		[Address(RVA = "0xF85E4C", Offset = "0xF85E4C", VA = "0xF85E4C")]
		public LevelVote()
		{
		}
	}
	[Token(Token = "0x20004CF")]
	public class LobbyAvatar : MonoBehaviour
	{
		[Token(Token = "0x4000BEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBD2430", Offset = "0xBD2430")]
		[SerializeField]
		private GameObject searchingObject;

		[Token(Token = "0x4000BEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBD247C", Offset = "0xBD247C")]
		[SerializeField]
		private GameObject avatarObject;

		[Token(Token = "0x4000BEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject localPlayerGraphics;

		[Token(Token = "0x4000BED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Image avatarField;

		[Token(Token = "0x6000D71")]
		[Address(RVA = "0xF88688", Offset = "0xF88688", VA = "0xF88688")]
		public void SetIsLocalPlayer(bool isActive)
		{
		}

		[Token(Token = "0x6000D72")]
		[Address(RVA = "0xF886A8", Offset = "0xF886A8", VA = "0xF886A8")]
		public void SetPlayerAvatar(Sprite playerAvatar)
		{
		}

		[Token(Token = "0x6000D73")]
		[Address(RVA = "0xF88764", Offset = "0xF88764", VA = "0xF88764")]
		public LobbyAvatar()
		{
		}
	}
	[Token(Token = "0x20004D0")]
	public class LocalPlayerReady : MonoBehaviour
	{
		[Token(Token = "0x4000BEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private UnityEvent onPlayerReady;

		[Token(Token = "0x4000BEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private UnityEvent onPlayerNotReady;

		[Token(Token = "0x4000BF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private PlayersStatusRef playersStatus;

		[Token(Token = "0x4000BF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private IDisposable _subscription;

		[Token(Token = "0x6000D74")]
		[Address(RVA = "0xF88A54", Offset = "0xF88A54", VA = "0xF88A54")]
		private void Update()
		{
		}

		[Token(Token = "0x6000D75")]
		[Address(RVA = "0xF88BC0", Offset = "0xF88BC0", VA = "0xF88BC0")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000D76")]
		[Address(RVA = "0xF88C74", Offset = "0xF88C74", VA = "0xF88C74")]
		private void Handler(bool ready)
		{
		}

		[Token(Token = "0x6000D77")]
		[Address(RVA = "0xF88CA0", Offset = "0xF88CA0", VA = "0xF88CA0")]
		public LocalPlayerReady()
		{
		}
	}
	[Token(Token = "0x20004D1")]
	public class MainMenuCheck : MonoBehaviour
	{
		[Token(Token = "0x4000BF2")]
		private const string MainMenuName = "MainMenu";

		[Token(Token = "0x4000BF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly ReactiveSource<bool> _isMainMenu;

		[Token(Token = "0x4000BF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD2518", Offset = "0xBD2518")]
		private readonly Reactive<bool> <IsMainMenu>k__BackingField;

		[Token(Token = "0x17000222")]
		public Reactive<bool> IsMainMenu
		{
			[Token(Token = "0x6000D79")]
			[Address(RVA = "0xF8B90C", Offset = "0xF8B90C", VA = "0xF8B90C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDEED8", Offset = "0xBDEED8")]
			get
			{
				return default(Reactive<bool>);
			}
		}

		[Token(Token = "0x6000D78")]
		[Address(RVA = "0xF8B758", Offset = "0xF8B758", VA = "0xF8B758")]
		public MainMenuCheck()
		{
		}

		[Token(Token = "0x6000D7A")]
		[Address(RVA = "0xF8B914", Offset = "0xF8B914", VA = "0xF8B914")]
		private bool GetIsMainMenu()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D7B")]
		[Address(RVA = "0xF8B9AC", Offset = "0xF8B9AC", VA = "0xF8B9AC")]
		private void Handler(object sender, [AttributeAttribute(Name = "TupleElementNamesAttribute", RVA = "0xBE3A94", Offset = "0xBE3A94")] (Scene, QuantumGame) valueTuple)
		{
		}

		[Token(Token = "0x6000D7C")]
		[Address(RVA = "0xF8BA44", Offset = "0xF8BA44", VA = "0xF8BA44")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDEEE8", Offset = "0xBDEEE8")]
		private Reactive<bool> <.ctor>b__2_0()
		{
			return default(Reactive<bool>);
		}

		[Token(Token = "0x6000D7D")]
		[Address(RVA = "0xF8BB84", Offset = "0xF8BB84", VA = "0xF8BB84")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDEEF8", Offset = "0xBDEEF8")]
		private void <.ctor>b__2_1()
		{
		}
	}
	[Token(Token = "0x20004D2")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xBC9A38", Offset = "0xBC9A38")]
	public class MaskableUICollider : MonoBehaviour
	{
		[Token(Token = "0x4000BF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private ScrollRect scrollRect;

		[Token(Token = "0x4000BF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private BoxCollider _collider;

		[Token(Token = "0x4000BF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private RectTransform _rectTransform;

		[Token(Token = "0x4000BF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private RectTransform _viewPort;

		[Token(Token = "0x6000D7E")]
		[Address(RVA = "0x100C318", Offset = "0x100C318", VA = "0x100C318")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000D7F")]
		[Address(RVA = "0x100C3AC", Offset = "0x100C3AC", VA = "0x100C3AC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000D80")]
		[Address(RVA = "0x100C470", Offset = "0x100C470", VA = "0x100C470")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000D81")]
		[Address(RVA = "0x100C534", Offset = "0x100C534", VA = "0x100C534")]
		private void PositionChangedHandler(Vector2 scrollPos)
		{
		}

		[Token(Token = "0x6000D82")]
		[Address(RVA = "0x100C8F4", Offset = "0x100C8F4", VA = "0x100C8F4")]
		public MaskableUICollider()
		{
		}
	}
	[Token(Token = "0x20004D3")]
	public class MatchCheck : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20004D4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBC9AC0", Offset = "0xBC9AC0")]
		private sealed class <>c
		{
			[Token(Token = "0x4000C00")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000C01")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<(bool, bool), bool> <>9__13_0;

			[Token(Token = "0x4000C02")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<bool, bool> <>9__15_0;

			[Token(Token = "0x4000C03")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Func<bool, bool> <>9__17_0;

			[Token(Token = "0x6000D8E")]
			[Address(RVA = "0x11DA4A8", Offset = "0x11DA4A8", VA = "0x11DA4A8")]
			public <>c()
			{
			}

			[Token(Token = "0x6000D8F")]
			[Address(RVA = "0x11DA4B0", Offset = "0x11DA4B0", VA = "0x11DA4B0")]
			internal bool <get_MatchUnFinished>b__13_0((bool, bool) t)
			{
				return default(bool);
			}

			[Token(Token = "0x6000D90")]
			[Address(RVA = "0x11DA4C8", Offset = "0x11DA4C8", VA = "0x11DA4C8")]
			internal bool <get_IsRankedGame>b__15_0(bool x)
			{
				return default(bool);
			}

			[Token(Token = "0x6000D91")]
			[Address(RVA = "0x11DA554", Offset = "0x11DA554", VA = "0x11DA554")]
			internal bool <get_IsCustomGame>b__17_0(bool x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000BF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private PlayFabStatusListener playFabStatusListener;

		[Token(Token = "0x4000BFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly ReactiveSource<bool> _hasMatch;

		[Token(Token = "0x4000BFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly ReactiveSource<bool> _matchFinished;

		[Token(Token = "0x4000BFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool _hasFrame;

		[Token(Token = "0x4000BFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private ReactiveSubscription _reactiveSubscription;

		[Token(Token = "0x4000BFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD2548", Offset = "0xBD2548")]
		private readonly Reactive<bool> <HasMatch>k__BackingField;

		[Token(Token = "0x4000BFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD2558", Offset = "0xBD2558")]
		private readonly Reactive<bool> <MatchFinished>k__BackingField;

		[Token(Token = "0x17000223")]
		public Reactive<bool> HasMatch
		{
			[Token(Token = "0x6000D84")]
			[Address(RVA = "0x100CA18", Offset = "0x100CA18", VA = "0x100CA18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDEF08", Offset = "0xBDEF08")]
			get
			{
				return default(Reactive<bool>);
			}
		}

		[Token(Token = "0x17000224")]
		public Reactive<bool> MatchFinished
		{
			[Token(Token = "0x6000D85")]
			[Address(RVA = "0x100CA20", Offset = "0x100CA20", VA = "0x100CA20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDEF18", Offset = "0xBDEF18")]
			get
			{
				return default(Reactive<bool>);
			}
		}

		[Token(Token = "0x17000225")]
		public Reactive<bool> MatchUnFinished
		{
			[Token(Token = "0x6000D86")]
			[Address(RVA = "0x100CA28", Offset = "0x100CA28", VA = "0x100CA28")]
			get
			{
				return default(Reactive<bool>);
			}
		}

		[Token(Token = "0x17000226")]
		public Reactive<bool> IsRankedGame
		{
			[Token(Token = "0x6000D87")]
			[Address(RVA = "0x100CB88", Offset = "0x100CB88", VA = "0x100CB88")]
			get
			{
				return default(Reactive<bool>);
			}
		}

		[Token(Token = "0x17000227")]
		public Reactive<bool> IsCustomGame
		{
			[Token(Token = "0x6000D88")]
			[Address(RVA = "0x100CCC0", Offset = "0x100CCC0", VA = "0x100CCC0")]
			get
			{
				return default(Reactive<bool>);
			}
		}

		[Token(Token = "0x6000D83")]
		[Address(RVA = "0x100C8FC", Offset = "0x100C8FC", VA = "0x100C8FC")]
		private MatchCheck()
		{
		}

		[Token(Token = "0x6000D89")]
		[Address(RVA = "0x100CDF8", Offset = "0x100CDF8", VA = "0x100CDF8")]
		private void Update()
		{
		}

		[Token(Token = "0x6000D8A")]
		[Address(RVA = "0x100D00C", Offset = "0x100D00C", VA = "0x100D00C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000D8B")]
		[Address(RVA = "0x100D100", Offset = "0x100D100", VA = "0x100D100")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000D8C")]
		[Address(RVA = "0x100D10C", Offset = "0x100D10C", VA = "0x100D10C")]
		private void GroupUpdated(GetOwnGroupStatusResult? getOwnGroupStatusResult)
		{
		}
	}
	[Token(Token = "0x20004D5")]
	public class MatchEndGameStatistics : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20004D6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBC9AD0", Offset = "0xBC9AD0")]
		private sealed class <>c
		{
			[Token(Token = "0x4000C10")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000C11")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<MatchStatisticsData, bool> <>9__17_0;

			[Token(Token = "0x4000C12")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<SpeculativeProgressionChange, bool> <>9__21_0;

			[Token(Token = "0x4000C13")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Func<Quantum.Team, Quantum.Team> <>9__25_0;

			[Token(Token = "0x4000C14")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static Func<int, string> <>9__31_0;

			[Token(Token = "0x4000C15")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public static Func<int, string> <>9__33_0;

			[Token(Token = "0x4000C16")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public static Func<Quantum.Team, bool> <>9__41_0;

			[Token(Token = "0x6000DA8")]
			[Address(RVA = "0x11DA644", Offset = "0x11DA644", VA = "0x11DA644")]
			public <>c()
			{
			}

			[Token(Token = "0x6000DA9")]
			[Address(RVA = "0x11DA64C", Offset = "0x11DA64C", VA = "0x11DA64C")]
			internal bool <get_HasMatchData>b__17_0(MatchStatisticsData x)
			{
				return default(bool);
			}

			[Token(Token = "0x6000DAA")]
			[Address(RVA = "0x11DA658", Offset = "0x11DA658", VA = "0x11DA658")]
			internal bool <get_HasProgressionChange>b__21_0(SpeculativeProgressionChange x)
			{
				return default(bool);
			}

			[Token(Token = "0x6000DAB")]
			[Address(RVA = "0x11DA664", Offset = "0x11DA664", VA = "0x11DA664")]
			internal Quantum.Team <get_OpponentTeam>b__25_0(Quantum.Team x)
			{
				return default(Quantum.Team);
			}

			[Token(Token = "0x6000DAC")]
			[Address(RVA = "0x11DA674", Offset = "0x11DA674", VA = "0x11DA674")]
			internal string <get_MyTeamWins>b__31_0(int x)
			{
				return null;
			}

			[Token(Token = "0x6000DAD")]
			[Address(RVA = "0x11DA69C", Offset = "0x11DA69C", VA = "0x11DA69C")]
			internal string <get_OpponentTeamWins>b__33_0(int x)
			{
				return null;
			}

			[Token(Token = "0x6000DAE")]
			[Address(RVA = "0x11DA6C4", Offset = "0x11DA6C4", VA = "0x11DA6C4")]
			internal bool <get_FirstRoleAttacker>b__41_0(Quantum.Team x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000C04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly ReactiveSource<MatchStatisticsData> _matchDataSource;

		[Token(Token = "0x4000C05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly ReactiveSource<int> _maxRoundsCount;

		[Token(Token = "0x4000C06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly ReactiveSource<Quantum.Team> _myTeam;

		[Token(Token = "0x4000C07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly ReactiveSource<int> _myTeamWonRounds;

		[Token(Token = "0x4000C08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private readonly ReactiveSource<int> _opponentTeamWonRounds;

		[Token(Token = "0x4000C09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private readonly ReactiveSource<SpeculativeProgressionChange> _progressionChange;

		[Token(Token = "0x4000C0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private readonly ReactiveSource<bool> _rankingGame;

		[Token(Token = "0x4000C0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private readonly ReactiveTransaction _reactiveTransaction;

		[Token(Token = "0x4000C0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private readonly ReactiveSource<RoundResult[]> _roundsReason;

		[Token(Token = "0x4000C0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private readonly ReactiveSource<Quantum.Team> _victoriousTeam;

		[Token(Token = "0x4000C0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool _statisticsProcessed;

		[Token(Token = "0x4000C0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
		private bool _matchProcessed;

		[Token(Token = "0x17000228")]
		public Reactive<MatchStatisticsData> MatchData
		{
			[Token(Token = "0x6000D92")]
			[Address(RVA = "0x100D57C", Offset = "0x100D57C", VA = "0x100D57C")]
			get
			{
				return default(Reactive<MatchStatisticsData>);
			}
		}

		[Token(Token = "0x17000229")]
		public Reactive<bool> RankingGame
		{
			[Token(Token = "0x6000D93")]
			[Address(RVA = "0x100D5D0", Offset = "0x100D5D0", VA = "0x100D5D0")]
			get
			{
				return default(Reactive<bool>);
			}
		}

		[Token(Token = "0x1700022A")]
		public Reactive<bool> HasMatchData
		{
			[Token(Token = "0x6000D94")]
			[Address(RVA = "0x100D624", Offset = "0x100D624", VA = "0x100D624")]
			get
			{
				return default(Reactive<bool>);
			}
		}

		[Token(Token = "0x1700022B")]
		public Reactive<SpeculativeProgressionChange> ProgressionChange
		{
			[Token(Token = "0x6000D95")]
			[Address(RVA = "0x100D750", Offset = "0x100D750", VA = "0x100D750")]
			get
			{
				return default(Reactive<SpeculativeProgressionChange>);
			}
		}

		[Token(Token = "0x1700022C")]
		public Reactive<bool> HasProgressionChange
		{
			[Token(Token = "0x6000D96")]
			[Address(RVA = "0x100D7A4", Offset = "0x100D7A4", VA = "0x100D7A4")]
			get
			{
				return default(Reactive<bool>);
			}
		}

		[Token(Token = "0x1700022D")]
		public Reactive<Quantum.Team> MyTeam
		{
			[Token(Token = "0x6000D97")]
			[Address(RVA = "0x100D8D0", Offset = "0x100D8D0", VA = "0x100D8D0")]
			get
			{
				return default(Reactive<Quantum.Team>);
			}
		}

		[Token(Token = "0x1700022E")]
		public Reactive<Quantum.Team> OpponentTeam
		{
			[Token(Token = "0x6000D98")]
			[Address(RVA = "0x100D924", Offset = "0x100D924", VA = "0x100D924")]
			get
			{
				return default(Reactive<Quantum.Team>);
			}
		}

		[Token(Token = "0x1700022F")]
		public Reactive<Quantum.Team> VictoriousTeam
		{
			[Token(Token = "0x6000D99")]
			[Address(RVA = "0x100DA70", Offset = "0x100DA70", VA = "0x100DA70")]
			get
			{
				return default(Reactive<Quantum.Team>);
			}
		}

		[Token(Token = "0x17000230")]
		public Reactive<int> MyTeamWonRounds
		{
			[Token(Token = "0x6000D9A")]
			[Address(RVA = "0x100DAC4", Offset = "0x100DAC4", VA = "0x100DAC4")]
			get
			{
				return default(Reactive<int>);
			}
		}

		[Token(Token = "0x17000231")]
		public Reactive<string> MyTeamWins
		{
			[Token(Token = "0x6000D9B")]
			[Address(RVA = "0x100DB18", Offset = "0x100DB18", VA = "0x100DB18")]
			get
			{
				return default(Reactive<string>);
			}
		}

		[Token(Token = "0x17000232")]
		public Reactive<string> OpponentTeamWins
		{
			[Token(Token = "0x6000D9C")]
			[Address(RVA = "0x100DC64", Offset = "0x100DC64", VA = "0x100DC64")]
			get
			{
				return default(Reactive<string>);
			}
		}

		[Token(Token = "0x17000233")]
		public Reactive<int> OpponentTeamWonRounds
		{
			[Token(Token = "0x6000D9D")]
			[Address(RVA = "0x100DDB0", Offset = "0x100DDB0", VA = "0x100DDB0")]
			get
			{
				return default(Reactive<int>);
			}
		}

		[Token(Token = "0x17000234")]
		public Reactive<RoundResult[]> RoundsReason
		{
			[Token(Token = "0x6000D9E")]
			[Address(RVA = "0x100DE04", Offset = "0x100DE04", VA = "0x100DE04")]
			get
			{
				return default(Reactive<RoundResult[]>);
			}
		}

		[Token(Token = "0x17000235")]
		public Reactive<int> MaxRounds
		{
			[Token(Token = "0x6000D9F")]
			[Address(RVA = "0x100DE58", Offset = "0x100DE58", VA = "0x100DE58")]
			get
			{
				return default(Reactive<int>);
			}
		}

		[Token(Token = "0x17000236")]
		public Reactive<bool> FirstRoleAttacker
		{
			[Token(Token = "0x6000DA0")]
			[Address(RVA = "0x100DEAC", Offset = "0x100DEAC", VA = "0x100DEAC")]
			get
			{
				return default(Reactive<bool>);
			}
		}

		[Token(Token = "0x6000DA1")]
		[Address(RVA = "0x100DFD8", Offset = "0x100DFD8", VA = "0x100DFD8")]
		private void Update()
		{
		}

		[Token(Token = "0x6000DA2")]
		[Address(RVA = "0x100E724", Offset = "0x100E724", VA = "0x100E724")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000DA3")]
		[Address(RVA = "0x100E72C", Offset = "0x100E72C", VA = "0x100E72C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000DA4")]
		[Address(RVA = "0x100E524", Offset = "0x100E524", VA = "0x100E524")]
		private void FetchMatchResults()
		{
		}

		[Token(Token = "0x6000DA5")]
		[Address(RVA = "0x100DFFC", Offset = "0x100DFFC", VA = "0x100DFFC")]
		private void FetchPostMatchResults()
		{
		}

		[Token(Token = "0x6000DA6")]
		[Address(RVA = "0x100E7A8", Offset = "0x100E7A8", VA = "0x100E7A8")]
		public MatchEndGameStatistics()
		{
		}
	}
	[Token(Token = "0x20004D7")]
	public class MatchGameModeInfoUI : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20004D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBC9AE0", Offset = "0xBC9AE0")]
		private sealed class <>c
		{
			[Token(Token = "0x4000C19")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000C1A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<GameModeSetupAsset, LocalizedString> <>9__3_0;

			[Token(Token = "0x4000C1B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<GameModeSetupAsset, Sprite> <>9__5_0;

			[Token(Token = "0x6000DB6")]
			[Address(RVA = "0x11DA730", Offset = "0x11DA730", VA = "0x11DA730")]
			public <>c()
			{
			}

			[Token(Token = "0x6000DB7")]
			[Address(RVA = "0x11DA738", Offset = "0x11DA738", VA = "0x11DA738")]
			internal LocalizedString <get_GameModeName>b__3_0(GameModeSetupAsset x)
			{
				return null;
			}

			[Token(Token = "0x6000DB8")]
			[Address(RVA = "0x11DA7EC", Offset = "0x11DA7EC", VA = "0x11DA7EC")]
			internal Sprite <get_GameModeIcon>b__5_0(GameModeSetupAsset x)
			{
				return null;
			}
		}

		[Token(Token = "0x4000C17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly LocalizedString EmptyString;

		[Token(Token = "0x4000C18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly ReactiveSource<GameModeSetupAsset> _gameMode;

		[Token(Token = "0x17000237")]
		public Reactive<LocalizedString> GameModeName
		{
			[Token(Token = "0x6000DAF")]
			[Address(RVA = "0x100EA3C", Offset = "0x100EA3C", VA = "0x100EA3C")]
			get
			{
				return default(Reactive<LocalizedString>);
			}
		}

		[Token(Token = "0x17000238")]
		public Reactive<Sprite> GameModeIcon
		{
			[Token(Token = "0x6000DB0")]
			[Address(RVA = "0x100EB88", Offset = "0x100EB88", VA = "0x100EB88")]
			get
			{
				return default(Reactive<Sprite>);
			}
		}

		[Token(Token = "0x6000DB1")]
		[Address(RVA = "0x100ECD4", Offset = "0x100ECD4", VA = "0x100ECD4")]
		private void Update()
		{
		}

		[Token(Token = "0x6000DB2")]
		[Address(RVA = "0x100EDAC", Offset = "0x100EDAC", VA = "0x100EDAC")]
		private void SetReactiveGameModeAssetIfChanged(AssetGuid gameModeGuid)
		{
		}

		[Token(Token = "0x6000DB3")]
		[Address(RVA = "0x100EED0", Offset = "0x100EED0", VA = "0x100EED0")]
		public MatchGameModeInfoUI()
		{
		}
	}
	[Token(Token = "0x20004D9")]
	public class MatchLoadingUI : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20004DA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBC9AF0", Offset = "0xBC9AF0")]
		private sealed class <>c
		{
			[Token(Token = "0x4000C20")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000C21")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<MapAsset, LocalizedString> <>9__5_0;

			[Token(Token = "0x4000C22")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<MapAsset, Sprite> <>9__7_0;

			[Token(Token = "0x4000C23")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Func<GameModeSetupAsset, LocalizedString> <>9__9_0;

			[Token(Token = "0x4000C24")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static Func<GameModeSetupAsset, Sprite> <>9__11_0;

			[Token(Token = "0x6000DC4")]
			[Address(RVA = "0x11DA8CC", Offset = "0x11DA8CC", VA = "0x11DA8CC")]
			public <>c()
			{
			}

			[Token(Token = "0x6000DC5")]
			[Address(RVA = "0x11DA8D4", Offset = "0x11DA8D4", VA = "0x11DA8D4")]
			internal LocalizedString <get_MapName>b__5_0(MapAsset x)
			{
				return null;
			}

			[Token(Token = "0x6000DC6")]
			[Address(RVA = "0x11DA954", Offset = "0x11DA954", VA = "0x11DA954")]
			internal Sprite <get_MapImage>b__7_0(MapAsset x)
			{
				return null;
			}

			[Token(Token = "0x6000DC7")]
			[Address(RVA = "0x11DA9D4", Offset = "0x11DA9D4", VA = "0x11DA9D4")]
			internal LocalizedString <get_GameModeName>b__9_0(GameModeSetupAsset x)
			{
				return null;
			}

			[Token(Token = "0x6000DC8")]
			[Address(RVA = "0x11DAA54", Offset = "0x11DAA54", VA = "0x11DAA54")]
			internal Sprite <get_GameModeImage>b__11_0(GameModeSetupAsset x)
			{
				return null;
			}
		}

		[Token(Token = "0x4000C1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private BoundValue<GetMatchResult> match;

		[Token(Token = "0x4000C1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly ReactiveSource<MapAsset> _mapAsset;

		[Token(Token = "0x4000C1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly ReactiveSource<GameModeSetupAsset> _gameModeAsset;

		[Token(Token = "0x4000C1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private ReactiveSubscription _reactiveSubscription;

		[Token(Token = "0x17000239")]
		public Reactive<LocalizedString> MapName
		{
			[Token(Token = "0x6000DB9")]
			[Address(RVA = "0x100EFD0", Offset = "0x100EFD0", VA = "0x100EFD0")]
			get
			{
				return default(Reactive<LocalizedString>);
			}
		}

		[Token(Token = "0x1700023A")]
		public Reactive<Sprite> MapImage
		{
			[Token(Token = "0x6000DBA")]
			[Address(RVA = "0x100F11C", Offset = "0x100F11C", VA = "0x100F11C")]
			get
			{
				return default(Reactive<Sprite>);
			}
		}

		[Token(Token = "0x1700023B")]
		public Reactive<LocalizedString> GameModeName
		{
			[Token(Token = "0x6000DBB")]
			[Address(RVA = "0x100F268", Offset = "0x100F268", VA = "0x100F268")]
			get
			{
				return default(Reactive<LocalizedString>);
			}
		}

		[Token(Token = "0x1700023C")]
		public Reactive<Sprite> GameModeImage
		{
			[Token(Token = "0x6000DBC")]
			[Address(RVA = "0x100F3B4", Offset = "0x100F3B4", VA = "0x100F3B4")]
			get
			{
				return default(Reactive<Sprite>);
			}
		}

		[Token(Token = "0x6000DBD")]
		[Address(RVA = "0x100F500", Offset = "0x100F500", VA = "0x100F500")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000DBE")]
		[Address(RVA = "0x100F608", Offset = "0x100F608", VA = "0x100F608")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000DBF")]
		[Address(RVA = "0x100F614", Offset = "0x100F614", VA = "0x100F614")]
		private void MatchResultsHandler(GetMatchResult matchResult)
		{
		}

		[Token(Token = "0x6000DC0")]
		[Address(RVA = "0x100F8DC", Offset = "0x100F8DC", VA = "0x100F8DC")]
		private void SetReactiveGameModeAssetIfChanged(AssetGuid gameModeGuid)
		{
		}

		[Token(Token = "0x6000DC1")]
		[Address(RVA = "0x100F7B8", Offset = "0x100F7B8", VA = "0x100F7B8")]
		private void SetReactiveMapAssetIfChanged(AssetGuid mapGuid)
		{
		}

		[Token(Token = "0x6000DC2")]
		[Address(RVA = "0x100FA00", Offset = "0x100FA00", VA = "0x100FA00")]
		public MatchLoadingUI()
		{
		}
	}
	[Token(Token = "0x20004DB")]
	public class MatchResult : MonoBehaviour
	{
		[Token(Token = "0x20004DC")]
		private enum MatchResultTexts
		{
			[Token(Token = "0x4000C2E")]
			TitleVictory,
			[Token(Token = "0x4000C2F")]
			TitleDraw,
			[Token(Token = "0x4000C30")]
			TitleDefeat,
			[Token(Token = "0x4000C31")]
			SubtitleVictory,
			[Token(Token = "0x4000C32")]
			SubtitleDraw,
			[Token(Token = "0x4000C33")]
			SubtitleDefeat
		}

		[Token(Token = "0x4000C25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private LocalizeStringEvent titleText;

		[Token(Token = "0x4000C26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private LocalizeStringEvent subtitleText;

		[Token(Token = "0x4000C27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private BoundValue<Quantum.Team> myTeam;

		[Token(Token = "0x4000C28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private BoundValue<Quantum.Team> victoriousTeam;

		[Token(Token = "0x4000C29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBD25B8", Offset = "0xBD25B8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBD25B8", Offset = "0xBD25B8")]
		[SerializeField]
		private LocalizedString[] matchStateStrings;

		[Token(Token = "0x4000C2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool _doSubscribe;

		[Token(Token = "0x4000C2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private ReactiveSubscription _roundsSubscription;

		[Token(Token = "0x4000C2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private ReactiveSubscription _teamSubscription;

		[Token(Token = "0x6000DC9")]
		[Address(RVA = "0x1010F20", Offset = "0x1010F20", VA = "0x1010F20")]
		private void Update()
		{
		}

		[Token(Token = "0x6000DCA")]
		[Address(RVA = "0x1011054", Offset = "0x1011054", VA = "0x1011054")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000DCB")]
		[Address(RVA = "0x1011060", Offset = "0x1011060", VA = "0x1011060")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000DCC")]
		[Address(RVA = "0x1011094", Offset = "0x1011094", VA = "0x1011094")]
		private void SetTeam([AttributeAttribute(Name = "TupleElementNamesAttribute", RVA = "0xBE3B18", Offset = "0xBE3B18")] (Quantum.Team, Quantum.Team) obj)
		{
		}

		[Token(Token = "0x6000DCD")]
		[Address(RVA = "0x1011154", Offset = "0x1011154", VA = "0x1011154")]
		public MatchResult()
		{
		}
	}
	[Token(Token = "0x20004DD")]
	public class MatchStateDisplay : MonoBehaviour
	{
		[Token(Token = "0x4000C34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly LocalizedString EmptyString;

		[Token(Token = "0x4000C35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private LocalizeStringEvent textField;

		[Token(Token = "0x4000C36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private GameModeSetupAsset _gameModeSetup;

		[Token(Token = "0x6000DCE")]
		[Address(RVA = "0x101115C", Offset = "0x101115C", VA = "0x101115C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000DCF")]
		[Address(RVA = "0x1011240", Offset = "0x1011240", VA = "0x1011240")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000DD0")]
		[Address(RVA = "0x1011758", Offset = "0x1011758", VA = "0x1011758")]
		private void OnPhaseChanged(EventPhaseChanged callback)
		{
		}

		[Token(Token = "0x6000DD1")]
		[Address(RVA = "0x10112DC", Offset = "0x10112DC", VA = "0x10112DC")]
		private void PollMatchData(Frame frame)
		{
		}

		[Token(Token = "0x6000DD2")]
		[Address(RVA = "0x101179C", Offset = "0x101179C", VA = "0x101179C")]
		public MatchStateDisplay()
		{
		}
	}
	[Token(Token = "0x20004DE")]
	public class MatchTimeDisplay : MonoBehaviour
	{
		[Token(Token = "0x4000C37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TMP_Text textField;

		[Token(Token = "0x4000C38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private LocalizeStringEvent textFieldLocalizeStringEvent;

		[Token(Token = "0x4000C39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBD2658", Offset = "0xBD2658")]
		private LocalizedString armedString;

		[Token(Token = "0x4000C3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly LocalizedString _emptyString;

		[Token(Token = "0x4000C3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int? _unarmedTimeRemaining;

		[Token(Token = "0x6000DD4")]
		[Address(RVA = "0x101672C", Offset = "0x101672C", VA = "0x101672C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000DD5")]
		[Address(RVA = "0x10167AC", Offset = "0x10167AC", VA = "0x10167AC")]
		private void Update()
		{
		}

		[Token(Token = "0x6000DD6")]
		[Address(RVA = "0x1016AC4", Offset = "0x1016AC4", VA = "0x1016AC4")]
		public MatchTimeDisplay()
		{
		}
	}
	[Token(Token = "0x20004DF")]
	public struct MessageData
	{
		[Token(Token = "0x4000C3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly LocalizedString EmptyMessage;

		[Token(Token = "0x4000C3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public MessageType MessageType;

		[Token(Token = "0x4000C3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float DisplayTime;

		[Token(Token = "0x4000C3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public LocalizedString Message;

		[Token(Token = "0x4000C40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int PlayerTeamScore;

		[Token(Token = "0x4000C41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int EnemyTeamScore;

		[Token(Token = "0x4000C42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public WinState WinState;

		[Token(Token = "0x4000C43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public RoundEndReason RoundEndReason;

		[Token(Token = "0x4000C44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool RenderOnTop;

		[Token(Token = "0x6000DD7")]
		[Address(RVA = "0x1016D28", Offset = "0x1016D28", VA = "0x1016D28")]
		public static MessageData CreateStringMessage(LocalizedString message, float displayTime, bool renderOnTop = false)
		{
			return default(MessageData);
		}

		[Token(Token = "0x6000DD8")]
		[Address(RVA = "0x1016D58", Offset = "0x1016D58", VA = "0x1016D58")]
		public static MessageData CreateRoundOverMessage(int playerTeamScore, int enemyTeamScore, float displayTime, WinState winState, RoundEndReason roundEndReason, bool renderOnTop = false)
		{
			return default(MessageData);
		}

		[Token(Token = "0x6000DD9")]
		[Address(RVA = "0x1016E44", Offset = "0x1016E44", VA = "0x1016E44")]
		public static MessageData CreateTeamSwitchMessage(int playerTeamScore, int enemyTeamScore, float displayTime, WinState winState, RoundEndReason roundEndReason, bool renderOnTop = false)
		{
			return default(MessageData);
		}

		[Token(Token = "0x6000DDA")]
		[Address(RVA = "0x1016F30", Offset = "0x1016F30", VA = "0x1016F30")]
		public static MessageData CreateMatchOverMessage(int playerTeamScore, int enemyTeamScore, float displayTime, WinState winState, RoundEndReason roundEndReason, bool renderOnTop = false)
		{
			return default(MessageData);
		}
	}
	[Token(Token = "0x20004E0")]
	public class NewLevelUI : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20004E1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBC9B00", Offset = "0xBC9B00")]
		private sealed class <>c
		{
			[Token(Token = "0x4000C47")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000C48")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<int, string> <>9__5_0;

			[Token(Token = "0x6000DE2")]
			[Address(RVA = "0x11DC8AC", Offset = "0x11DC8AC", VA = "0x11DC8AC")]
			public <>c()
			{
			}

			[Token(Token = "0x6000DE3")]
			[Address(RVA = "0x11DC8B4", Offset = "0x11DC8B4", VA = "0x11DC8B4")]
			internal string <get_LevelString>b__5_0(int x)
			{
				return null;
			}
		}

		[Token(Token = "0x4000C45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int _cachedAfterLevel;

		[Token(Token = "0x4000C46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly ReactiveSource<int> _displayedLevel;

		[Token(Token = "0x1700023D")]
		public Reactive<int> DisplayedLevel
		{
			[Token(Token = "0x6000DDC")]
			[Address(RVA = "0x101CD68", Offset = "0x101CD68", VA = "0x101CD68")]
			get
			{
				return default(Reactive<int>);
			}
		}

		[Token(Token = "0x1700023E")]
		public Reactive<string> LevelString
		{
			[Token(Token = "0x6000DDD")]
			[Address(RVA = "0x101CDBC", Offset = "0x101CDBC", VA = "0x101CDBC")]
			get
			{
				return default(Reactive<string>);
			}
		}

		[Token(Token = "0x6000DDE")]
		[Address(RVA = "0x101CF08", Offset = "0x101CF08", VA = "0x101CF08")]
		public void UpdateAnimatedLevelData()
		{
		}

		[Token(Token = "0x6000DDF")]
		[Address(RVA = "0x101CF60", Offset = "0x101CF60", VA = "0x101CF60")]
		public void SetData(int beforeLevel, int afterLevel)
		{
		}

		[Token(Token = "0x6000DE0")]
		[Address(RVA = "0x101CFD0", Offset = "0x101CFD0", VA = "0x101CFD0")]
		public NewLevelUI()
		{
		}
	}
	[Token(Token = "0x20004E2")]
	public class NewsFeedItemUI : MonoBehaviour
	{
		[Token(Token = "0x4000C49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TMP_Text header;

		[Token(Token = "0x4000C4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private TMP_Text body;

		[Token(Token = "0x6000DE4")]
		[Address(RVA = "0x101D05C", Offset = "0x101D05C", VA = "0x101D05C")]
		public void SetNewsData(string itemTitle, string itemBody)
		{
		}

		[Token(Token = "0x6000DE5")]
		[Address(RVA = "0x101D0B0", Offset = "0x101D0B0", VA = "0x101D0B0")]
		public NewsFeedItemUI()
		{
		}
	}
	[Token(Token = "0x20004E3")]
	public class NewsFeedSource : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20004E4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBC9B10", Offset = "0xBC9B10")]
		private sealed class <>c
		{
			[Token(Token = "0x4000C50")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000C51")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<TitleNewsItem, string> <>9__12_0;

			[Token(Token = "0x4000C52")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<IUser, Reactive<bool>> <>9__13_0;

			[Token(Token = "0x4000C53")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Func<bool, bool> <>9__13_1;

			[Token(Token = "0x4000C54")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static Func<TitleNewsItem, DateTime> <>9__13_3;

			[Token(Token = "0x6000DEE")]
			[Address(RVA = "0x11DC93C", Offset = "0x11DC93C", VA = "0x11DC93C")]
			public <>c()
			{
			}

			[Token(Token = "0x6000DEF")]
			[Address(RVA = "0x11DC944", Offset = "0x11DC944", VA = "0x11DC944")]
			internal string <MarkItemsAsRead>b__12_0(TitleNewsItem x)
			{
				return null;
			}

			[Token(Token = "0x6000DF0")]
			[Address(RVA = "0x11DC95C", Offset = "0x11DC95C", VA = "0x11DC95C")]
			internal Reactive<bool> <UpdateNewsAsync>b__13_0(IUser x)
			{
				return default(Reactive<bool>);
			}

			[Token(Token = "0x6000DF1")]
			[Address(RVA = "0x11DCA2C", Offset = "0x11DCA2C", VA = "0x11DCA2C")]
			internal bool <UpdateNewsAsync>b__13_1(bool x)
			{
				return default(bool);
			}

			[Token(Token = "0x6000DF2")]
			[Address(RVA = "0x11DCA34", Offset = "0x11DCA34", VA = "0x11DCA34")]
			internal DateTime <UpdateNewsAsync>b__13_3(TitleNewsItem x)
			{
				return default(DateTime);
			}
		}

		[Token(Token = "0x20004E5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBC9B20", Offset = "0xBC9B20")]
		private sealed class <>c__DisplayClass13_0
		{
			[Token(Token = "0x4000C55")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public HashSet<string> seenIds;

			[Token(Token = "0x6000DF3")]
			[Address(RVA = "0x11DCA4C", Offset = "0x11DCA4C", VA = "0x11DCA4C")]
			public <>c__DisplayClass13_0()
			{
			}

			[Token(Token = "0x6000DF4")]
			[Address(RVA = "0x11DCA54", Offset = "0x11DCA54", VA = "0x11DCA54")]
			internal bool <UpdateNewsAsync>b__2(TitleNewsItem x)
			{
				return default(bool);
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20004E6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBC9B30", Offset = "0xBC9B30")]
		private struct <UpdateNewsAsync>d__13 : IAsyncStateMachine
		{
			[Token(Token = "0x4000C56")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000C57")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x4000C58")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public NewsFeedSource <>4__this;

			[Token(Token = "0x4000C59")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private <>c__DisplayClass13_0 <>8__1;

			[Token(Token = "0x4000C5A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x4000C5B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private TaskAwaiter<bool> <>u__2;

			[Token(Token = "0x4000C5C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private TaskAwaiter<GetTitleNewsResult> <>u__3;

			[Token(Token = "0x6000DF5")]
			[Address(RVA = "0x11DCAC8", Offset = "0x11DCAC8", VA = "0x11DCAC8", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000DF6")]
			[Address(RVA = "0x11DD5B8", Offset = "0x11DD5B8", VA = "0x11DD5B8", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4000C4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly ReactiveSource<bool> _hasUnreadItems;

		[Token(Token = "0x4000C4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly ReactiveSource<bool> _isLoading;

		[Token(Token = "0x4000C4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly ReactiveSource<TitleNewsItem[]> _items;

		[Token(Token = "0x4000C4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly ReactiveTransaction _reactiveTransaction;

		[Token(Token = "0x4000C4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Task _task;

		[Token(Token = "0x1700023F")]
		public Reactive<TitleNewsItem[]> Items
		{
			[Token(Token = "0x6000DE6")]
			[Address(RVA = "0x101D0B8", Offset = "0x101D0B8", VA = "0x101D0B8")]
			get
			{
				return default(Reactive<TitleNewsItem[]>);
			}
		}

		[Token(Token = "0x17000240")]
		public Reactive<bool> HasUnreadItems
		{
			[Token(Token = "0x6000DE7")]
			[Address(RVA = "0x101D10C", Offset = "0x101D10C", VA = "0x101D10C")]
			get
			{
				return default(Reactive<bool>);
			}
		}

		[Token(Token = "0x17000241")]
		public Reactive<bool> IsLoading
		{
			[Token(Token = "0x6000DE8")]
			[Address(RVA = "0x101D160", Offset = "0x101D160", VA = "0x101D160")]
			get
			{
				return default(Reactive<bool>);
			}
		}

		[Token(Token = "0x6000DE9")]
		[Address(RVA = "0x101D1B4", Offset = "0x101D1B4", VA = "0x101D1B4")]
		public void OnEnable()
		{
		}

		[Token(Token = "0x6000DEA")]
		[Address(RVA = "0x101D2E0", Offset = "0x101D2E0", VA = "0x101D2E0")]
		public void MarkItemsAsRead(bool mark)
		{
		}

		[Token(Token = "0x6000DEB")]
		[Address(RVA = "0x101D1D8", Offset = "0x101D1D8", VA = "0x101D1D8")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xBDEF28", Offset = "0xBDEF28")]
		private Task UpdateNewsAsync()
		{
			return null;
		}

		[Token(Token = "0x6000DEC")]
		[Address(RVA = "0x101D4D4", Offset = "0x101D4D4", VA = "0x101D4D4")]
		public NewsFeedSource()
		{
		}
	}
	[Token(Token = "0x20004E7")]
	public class NewsFeedUI : MonoBehaviour
	{
		[Token(Token = "0x4000C5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private BoundValue<TitleNewsItem[]> items;

		[Token(Token = "0x4000C5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject itemPrefab;

		[Token(Token = "0x4000C5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly List<GameObject> _children;

		[Token(Token = "0x4000C60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private ReactiveSubscription _reactiveSubscription;

		[Token(Token = "0x6000DF7")]
		[Address(RVA = "0x101D6D4", Offset = "0x101D6D4", VA = "0x101D6D4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000DF8")]
		[Address(RVA = "0x101D7C0", Offset = "0x101D7C0", VA = "0x101D7C0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000DF9")]
		[Address(RVA = "0x101D954", Offset = "0x101D954", VA = "0x101D954")]
		private void ItemsChanged(TitleNewsItem[] newItems)
		{
		}

		[Token(Token = "0x6000DFA")]
		[Address(RVA = "0x101D7EC", Offset = "0x101D7EC", VA = "0x101D7EC")]
		private void ClearChildren()
		{
		}

		[Token(Token = "0x6000DFB")]
		[Address(RVA = "0x101DABC", Offset = "0x101DABC", VA = "0x101DABC")]
		public NewsFeedUI()
		{
		}
	}
	[Token(Token = "0x20004E8")]
	public class NextLevel : MonoBehaviour
	{
		[Token(Token = "0x4000C61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Image image;

		[Token(Token = "0x4000C62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private LocalizeStringEvent levelName;

		[Token(Token = "0x4000C63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private TextMeshProUGUI timeLeft;

		[Token(Token = "0x4000C64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private string getReadyText;

		[Token(Token = "0x4000C65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private AssetGuid _mapId;

		[Token(Token = "0x4000C66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool _ready;

		[Token(Token = "0x6000DFC")]
		[Address(RVA = "0x101DB34", Offset = "0x101DB34", VA = "0x101DB34")]
		private void Update()
		{
		}

		[Token(Token = "0x6000DFD")]
		[Address(RVA = "0x101DE5C", Offset = "0x101DE5C", VA = "0x101DE5C")]
		public NextLevel()
		{
		}
	}
	[Token(Token = "0x20004E9")]
	public class NonExclusiveUI : MonoBehaviour
	{
		[Token(Token = "0x4000C67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool muteGamePlayTrigger;

		[Token(Token = "0x6000DFE")]
		[Address(RVA = "0x101DEB0", Offset = "0x101DEB0", VA = "0x101DEB0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000DFF")]
		[Address(RVA = "0x101DF40", Offset = "0x101DF40", VA = "0x101DF40")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000E00")]
		[Address(RVA = "0x101DFCC", Offset = "0x101DFCC", VA = "0x101DFCC")]
		public NonExclusiveUI()
		{
		}
	}
	[Token(Token = "0x20004EA")]
	public class OnScreenKeyboard : MonoBehaviour
	{
		[Token(Token = "0x4000C68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject buttons;

		[Token(Token = "0x4000C69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private ReactiveSubscription _reactiveSubscription;

		[Token(Token = "0x4000C6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TMP_InputField _inputField;

		[Token(Token = "0x6000E01")]
		[Address(RVA = "0x10210BC", Offset = "0x10210BC", VA = "0x10210BC")]
		private void Start()
		{
		}

		[Token(Token = "0x6000E02")]
		[Address(RVA = "0x10211CC", Offset = "0x10211CC", VA = "0x10211CC")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000E03")]
		[Address(RVA = "0x10211D8", Offset = "0x10211D8", VA = "0x10211D8")]
		public void AddCharacter(string character)
		{
		}

		[Token(Token = "0x6000E04")]
		[Address(RVA = "0x10212AC", Offset = "0x10212AC", VA = "0x10212AC")]
		public void DeleteCharacter()
		{
		}

		[Token(Token = "0x6000E05")]
		[Address(RVA = "0x1021364", Offset = "0x1021364", VA = "0x1021364")]
		public void ClearText()
		{
		}

		[Token(Token = "0x6000E06")]
		[Address(RVA = "0x102141C", Offset = "0x102141C", VA = "0x102141C")]
		public void CloseKeyboard()
		{
		}

		[Token(Token = "0x6000E07")]
		[Address(RVA = "0x1021494", Offset = "0x1021494", VA = "0x1021494")]
		public OnScreenKeyboard()
		{
		}

		[Token(Token = "0x6000E08")]
		[Address(RVA = "0x102149C", Offset = "0x102149C", VA = "0x102149C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDEF98", Offset = "0xBDEF98")]
		private void <Start>b__3_0(TMP_InputField x)
		{
		}
	}
	[Token(Token = "0x20004EB")]
	public class OneSlotSpellWandUI : SpellWandUI
	{
		[Token(Token = "0x4000C6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBD2744", Offset = "0xBD2744")]
		[SerializeField]
		private WandSlotType slotType;

		[Token(Token = "0x4000C6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly ReactiveSource<bool> _isSpellActiveSource;

		[Token(Token = "0x4000C6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private readonly ReactiveSource<SpellElement> _spellElementSource;

		[Token(Token = "0x4000C6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private readonly ReactiveSource<Sprite> _spellIconSource;

		[Token(Token = "0x4000C6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private AssetGuid _currentlyShownSpell;

		[Token(Token = "0x4000C70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool _hasCooldown;

		[Token(Token = "0x4000C71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private SpellSetupAsset _spellSetupAsset;

		[Token(Token = "0x4000C72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD2790", Offset = "0xBD2790")]
		private readonly Reactive<SpellElement> <CurrentSpellElement>k__BackingField;

		[Token(Token = "0x4000C73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD27A0", Offset = "0xBD27A0")]
		private readonly Reactive<Sprite> <SpellIcon>k__BackingField;

		[Token(Token = "0x4000C74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD27B0", Offset = "0xBD27B0")]
		private readonly Reactive<bool> <IsSpellActive>k__BackingField;

		[Token(Token = "0x17000242")]
		public Reactive<SpellElement> CurrentSpellElement
		{
			[Token(Token = "0x6000E0A")]
			[Address(RVA = "0x1021724", Offset = "0x1021724", VA = "0x1021724")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDEFA8", Offset = "0xBDEFA8")]
			get
			{
				return default(Reactive<SpellElement>);
			}
		}

		[Token(Token = "0x17000243")]
		public Reactive<Sprite> SpellIcon
		{
			[Token(Token = "0x6000E0B")]
			[Address(RVA = "0x102172C", Offset = "0x102172C", VA = "0x102172C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDEFB8", Offset = "0xBDEFB8")]
			get
			{
				return default(Reactive<Sprite>);
			}
		}

		[Token(Token = "0x17000244")]
		public Reactive<bool> IsSpellActive
		{
			[Token(Token = "0x6000E0C")]
			[Address(RVA = "0x1021734", Offset = "0x1021734", VA = "0x1021734")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDEFC8", Offset = "0xBDEFC8")]
			get
			{
				return default(Reactive<bool>);
			}
		}

		[Token(Token = "0x6000E09")]
		[Address(RVA = "0x1021530", Offset = "0x1021530", VA = "0x1021530")]
		public OneSlotSpellWandUI()
		{
		}

		[Token(Token = "0x6000E0D")]
		[Address(RVA = "0x102173C", Offset = "0x102173C", VA = "0x102173C", Slot = "4")]
		protected override void ConfigureUIOnWand(XRNode hand)
		{
		}

		[Token(Token = "0x6000E0E")]
		[Address(RVA = "0x10217D8", Offset = "0x10217D8", VA = "0x10217D8", Slot = "5")]
		protected override void UpdateUI(Frame frame, WandSpells wandSpells, SpellCaster spellCaster)
		{
		}

		[Token(Token = "0x6000E0F")]
		[Address(RVA = "0x1021924", Offset = "0x1021924", VA = "0x1021924")]
		private void AssignNewSpell(SpellSetupAsset spellSetupAsset)
		{
		}
	}
	[Token(Token = "0x20004EC")]
	public class OpenInGameMenu : MonoBehaviour
	{
		[Token(Token = "0x4000C75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBD27C0", Offset = "0xBD27C0")]
		[SerializeField]
		private int openAtIndex;

		[Token(Token = "0x6000E10")]
		[Address(RVA = "0x1021CB4", Offset = "0x1021CB4", VA = "0x1021CB4")]
		public void Toggle()
		{
		}

		[Token(Token = "0x6000E11")]
		[Address(RVA = "0x1021DDC", Offset = "0x1021DDC", VA = "0x1021DDC")]
		public OpenInGameMenu()
		{
		}
	}
	[Token(Token = "0x20004ED")]
	public class OutlineHandler : MonoBehaviour
	{
		[Token(Token = "0x4000C76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBD280C", Offset = "0xBD280C")]
		[SerializeField]
		private QuickOutline.Scripts.Outline[] outlines;

		[Token(Token = "0x4000C77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBD2858", Offset = "0xBD2858")]
		[SerializeField]
		private QuickOutline.Scripts.Outline.Mode friendlyMode;

		[Token(Token = "0x4000C78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private Color friendlyColor;

		[Token(Token = "0x4000C79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private float friendlyWidth;

		[Token(Token = "0x4000C7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBD28C4", Offset = "0xBD28C4")]
		[SerializeField]
		private QuickOutline.Scripts.Outline.Mode enemyMode;

		[Token(Token = "0x4000C7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private Color enemyColor;

		[Token(Token = "0x4000C7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		private float enemyWidth;

		[Token(Token = "0x4000C7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float _alpha;

		[Token(Token = "0x4000C7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD2930", Offset = "0xBD2930")]
		private OutlineType <CurrentOutlineType>k__BackingField;

		[Token(Token = "0x17000245")]
		public OutlineType CurrentOutlineType
		{
			[Token(Token = "0x6000E12")]
			[Address(RVA = "0xFCF7F4", Offset = "0xFCF7F4", VA = "0xFCF7F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDEFD8", Offset = "0xBDEFD8")]
			get
			{
				return default(OutlineType);
			}
			[Token(Token = "0x6000E13")]
			[Address(RVA = "0xFCF7FC", Offset = "0xFCF7FC", VA = "0xFCF7FC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDEFE8", Offset = "0xBDEFE8")]
			private set
			{
			}
		}

		[Token(Token = "0x6000E14")]
		[Address(RVA = "0xFCF804", Offset = "0xFCF804", VA = "0xFCF804")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000E15")]
		[Address(RVA = "0xFCFA94", Offset = "0xFCFA94", VA = "0xFCFA94")]
		public void SetAlpha(float alpha)
		{
		}

		[Token(Token = "0x6000E16")]
		[Address(RVA = "0xFCF80C", Offset = "0xFCF80C", VA = "0xFCF80C")]
		public void SetOutlineType(OutlineType type)
		{
		}

		[Token(Token = "0x6000E17")]
		[Address(RVA = "0xFCFB1C", Offset = "0xFCFB1C", VA = "0xFCFB1C")]
		public OutlineHandler()
		{
		}
	}
	[Token(Token = "0x20004EE")]
	public class PlayerEventFeed : MonoBehaviour
	{
		[Token(Token = "0x4000C7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Image leftAvatarBackground;

		[Token(Token = "0x4000C80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Image rightAvatarBackground;

		[Token(Token = "0x4000C81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AnimationCurve scaleAnimationNormalized;

		[Token(Token = "0x4000C82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private float startingWidth;

		[Token(Token = "0x4000C83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private float endingWidth;

		[Token(Token = "0x4000C84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private float shrinkPercentage;

		[Token(Token = "0x4000C85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private float slideSpeed;

		[Token(Token = "0x4000C86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private float intervalDistance;

		[Token(Token = "0x4000C87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		private bool settingsDummy;

		[Token(Token = "0x4000C88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private readonly ReactiveSource<Sprite> _backgroundImage;

		[Token(Token = "0x4000C89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private readonly ReactiveSource<Color> _centerImageColor;

		[Token(Token = "0x4000C8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private readonly ReactiveSource<LocalizedString> _centerInfo;

		[Token(Token = "0x4000C8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private readonly ReactiveSource<Sprite> _eventImage;

		[Token(Token = "0x4000C8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private readonly ReactiveSource<Sprite> _leftAvatarIcon;

		[Token(Token = "0x4000C8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private readonly ReactiveSource<Sprite> _leftEffect;

		[Token(Token = "0x4000C8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private readonly ReactiveSource<string> _leftEntityID;

		[Token(Token = "0x4000C8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private readonly ReactiveSource<bool> _leftPlayerIsBot;

		[Token(Token = "0x4000C90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private readonly ReactiveSource<LocalizedString> _leftBotName;

		[Token(Token = "0x4000C91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private readonly ReactiveSource<Sprite> _rightAvatarIcon;

		[Token(Token = "0x4000C92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private readonly ReactiveSource<Sprite> _rightEffect;

		[Token(Token = "0x4000C93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private readonly ReactiveSource<string> _rightEntityID;

		[Token(Token = "0x4000C94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private readonly ReactiveSource<bool> _displayRightPlayer;

		[Token(Token = "0x4000C95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private readonly ReactiveSource<bool> _displayLeftName;

		[Token(Token = "0x4000C96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private readonly ReactiveSource<bool> _displayLeftBorder;

		[Token(Token = "0x4000C97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private readonly ReactiveSource<bool> _rightPlayerIsBot;

		[Token(Token = "0x4000C98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private readonly ReactiveSource<LocalizedString> _rightBotName;

		[Token(Token = "0x4000C99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private RectTransform _rectTransform;

		[Token(Token = "0x4000C9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private Vector2 _startingRectDelta;

		[Token(Token = "0x4000C9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private Vector3 _startingLocation;

		[Token(Token = "0x4000C9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		private Vector3 _startingLocalScale;

		[Token(Token = "0x4000C9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private float _elapsedTime;

		[Token(Token = "0x4000C9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		private float _animationLength;

		[Token(Token = "0x4000C9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private float _cachedEvaluatedScale;

		[Token(Token = "0x4000CA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		private Vector3 _targetLocation;

		[Token(Token = "0x4000CA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private float _targetScale;

		[Token(Token = "0x4000CA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD29D0", Offset = "0xBD29D0")]
		private readonly Reactive<bool> <DisplayLeftName>k__BackingField;

		[Token(Token = "0x4000CA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD29E0", Offset = "0xBD29E0")]
		private readonly Reactive<bool> <DisplayLeftBorder>k__BackingField;

		[Token(Token = "0x4000CA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD29F0", Offset = "0xBD29F0")]
		private readonly Reactive<LocalizedString> <CenterInfo>k__BackingField;

		[Token(Token = "0x4000CA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD2A00", Offset = "0xBD2A00")]
		private readonly Reactive<Color> <CenterImageColor>k__BackingField;

		[Token(Token = "0x4000CA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD2A10", Offset = "0xBD2A10")]
		private readonly Reactive<Sprite> <LeftAvatarIcon>k__BackingField;

		[Token(Token = "0x4000CA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD2A20", Offset = "0xBD2A20")]
		private readonly Reactive<Sprite> <RightAvatarIcon>k__BackingField;

		[Token(Token = "0x4000CA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD2A30", Offset = "0xBD2A30")]
		private readonly Reactive<Sprite> <LeftEffectImage>k__BackingField;

		[Token(Token = "0x4000CA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD2A40", Offset = "0xBD2A40")]
		private readonly Reactive<Sprite> <RightEffectImage>k__BackingField;

		[Token(Token = "0x4000CAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD2A50", Offset = "0xBD2A50")]
		private readonly Reactive<Sprite> <EventImage>k__BackingField;

		[Token(Token = "0x4000CAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD2A60", Offset = "0xBD2A60")]
		private readonly Reactive<Sprite> <Background>k__BackingField;

		[Token(Token = "0x4000CAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD2A70", Offset = "0xBD2A70")]
		private readonly Reactive<string> <LeftEntityID>k__BackingField;

		[Token(Token = "0x4000CAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD2A80", Offset = "0xBD2A80")]
		private readonly Reactive<string> <RightEntityID>k__BackingField;

		[Token(Token = "0x4000CAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD2A90", Offset = "0xBD2A90")]
		private readonly Reactive<bool> <DisplayRightPlayer>k__BackingField;

		[Token(Token = "0x4000CAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD2AA0", Offset = "0xBD2AA0")]
		private int <CurrentIndex>k__BackingField;

		[Token(Token = "0x17000246")]
		public Reactive<bool> DisplayLeftName
		{
			[Token(Token = "0x6000E19")]
			[Address(RVA = "0xFE222C", Offset = "0xFE222C", VA = "0xFE222C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDEFF8", Offset = "0xBDEFF8")]
			get
			{
				return default(Reactive<bool>);
			}
		}

		[Token(Token = "0x17000247")]
		public Reactive<bool> DisplayLeftBorder
		{
			[Token(Token = "0x6000E1A")]
			[Address(RVA = "0xFE2234", Offset = "0xFE2234", VA = "0xFE2234")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDF008", Offset = "0xBDF008")]
			get
			{
				return default(Reactive<bool>);
			}
		}

		[Token(Token = "0x17000248")]
		public Reactive<LocalizedString> CenterInfo
		{
			[Token(Token = "0x6000E1B")]
			[Address(RVA = "0xFE223C", Offset = "0xFE223C", VA = "0xFE223C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDF018", Offset = "0xBDF018")]
			get
			{
				return default(Reactive<LocalizedString>);
			}
		}

		[Token(Token = "0x17000249")]
		public Reactive<Color> CenterImageColor
		{
			[Token(Token = "0x6000E1C")]
			[Address(RVA = "0xFE2244", Offset = "0xFE2244", VA = "0xFE2244")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDF028", Offset = "0xBDF028")]
			get
			{
				return default(Reactive<Color>);
			}
		}

		[Token(Token = "0x1700024A")]
		public Reactive<Sprite> LeftAvatarIcon
		{
			[Token(Token = "0x6000E1D")]
			[Address(RVA = "0xFE224C", Offset = "0xFE224C", VA = "0xFE224C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDF038", Offset = "0xBDF038")]
			get
			{
				return default(Reactive<Sprite>);
			}
		}

		[Token(Token = "0x1700024B")]
		public Reactive<Sprite> RightAvatarIcon
		{
			[Token(Token = "0x6000E1E")]
			[Address(RVA = "0xFE2254", Offset = "0xFE2254", VA = "0xFE2254")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDF048", Offset = "0xBDF048")]
			get
			{
				return default(Reactive<Sprite>);
			}
		}

		[Token(Token = "0x1700024C")]
		public Reactive<Sprite> LeftEffectImage
		{
			[Token(Token = "0x6000E1F")]
			[Address(RVA = "0xFE225C", Offset = "0xFE225C", VA = "0xFE225C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDF058", Offset = "0xBDF058")]
			get
			{
				return default(Reactive<Sprite>);
			}
		}

		[Token(Token = "0x1700024D")]
		public Reactive<Sprite> RightEffectImage
		{
			[Token(Token = "0x6000E20")]
			[Address(RVA = "0xFE2264", Offset = "0xFE2264", VA = "0xFE2264")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDF068", Offset = "0xBDF068")]
			get
			{
				return default(Reactive<Sprite>);
			}
		}

		[Token(Token = "0x1700024E")]
		public Reactive<Sprite> EventImage
		{
			[Token(Token = "0x6000E21")]
			[Address(RVA = "0xFE226C", Offset = "0xFE226C", VA = "0xFE226C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDF078", Offset = "0xBDF078")]
			get
			{
				return default(Reactive<Sprite>);
			}
		}

		[Token(Token = "0x1700024F")]
		public Reactive<Sprite> Background
		{
			[Token(Token = "0x6000E22")]
			[Address(RVA = "0xFE2274", Offset = "0xFE2274", VA = "0xFE2274")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDF088", Offset = "0xBDF088")]
			get
			{
				return default(Reactive<Sprite>);
			}
		}

		[Token(Token = "0x17000250")]
		public Reactive<string> LeftEntityID
		{
			[Token(Token = "0x6000E23")]
			[Address(RVA = "0xFE227C", Offset = "0xFE227C", VA = "0xFE227C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDF098", Offset = "0xBDF098")]
			get
			{
				return default(Reactive<string>);
			}
		}

		[Token(Token = "0x17000251")]
		public Reactive<string> RightEntityID
		{
			[Token(Token = "0x6000E24")]
			[Address(RVA = "0xFE2284", Offset = "0xFE2284", VA = "0xFE2284")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDF0A8", Offset = "0xBDF0A8")]
			get
			{
				return default(Reactive<string>);
			}
		}

		[Token(Token = "0x17000252")]
		public Reactive<bool> DisplayRightPlayer
		{
			[Token(Token = "0x6000E25")]
			[Address(RVA = "0xFE228C", Offset = "0xFE228C", VA = "0xFE228C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDF0B8", Offset = "0xBDF0B8")]
			get
			{
				return default(Reactive<bool>);
			}
		}

		[Token(Token = "0x17000253")]
		public Reactive<bool> LeftPlayerIsBot
		{
			[Token(Token = "0x6000E26")]
			[Address(RVA = "0xFE2294", Offset = "0xFE2294", VA = "0xFE2294")]
			get
			{
				return default(Reactive<bool>);
			}
		}

		[Token(Token = "0x17000254")]
		public Reactive<bool> RightPlayerIsBot
		{
			[Token(Token = "0x6000E27")]
			[Address(RVA = "0xFE2304", Offset = "0xFE2304", VA = "0xFE2304")]
			get
			{
				return default(Reactive<bool>);
			}
		}

		[Token(Token = "0x17000255")]
		public Reactive<LocalizedString> LeftBotName
		{
			[Token(Token = "0x6000E28")]
			[Address(RVA = "0xFE2374", Offset = "0xFE2374", VA = "0xFE2374")]
			get
			{
				return default(Reactive<LocalizedString>);
			}
		}

		[Token(Token = "0x17000256")]
		public Reactive<LocalizedString> RightBotName
		{
			[Token(Token = "0x6000E29")]
			[Address(RVA = "0xFE23E4", Offset = "0xFE23E4", VA = "0xFE23E4")]
			get
			{
				return default(Reactive<LocalizedString>);
			}
		}

		[Token(Token = "0x17000257")]
		public int CurrentIndex
		{
			[Token(Token = "0x6000E2A")]
			[Address(RVA = "0xFE2454", Offset = "0xFE2454", VA = "0xFE2454")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDF0C8", Offset = "0xBDF0C8")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000E2B")]
			[Address(RVA = "0xFE245C", Offset = "0xFE245C", VA = "0xFE245C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDF0D8", Offset = "0xBDF0D8")]
			private set
			{
			}
		}

		[Token(Token = "0x6000E18")]
		[Address(RVA = "0xFE1C3C", Offset = "0xFE1C3C", VA = "0xFE1C3C")]
		internal PlayerEventFeed()
		{
		}

		[Token(Token = "0x6000E2C")]
		[Address(RVA = "0xFE2464", Offset = "0xFE2464", VA = "0xFE2464")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000E2D")]
		[Address(RVA = "0xFE2580", Offset = "0xFE2580", VA = "0xFE2580")]
		private void Update()
		{
		}

		[Token(Token = "0x6000E2E")]
		[Address(RVA = "0xFE25B0", Offset = "0xFE25B0", VA = "0xFE25B0")]
		private void AnimateScale()
		{
		}

		[Token(Token = "0x6000E2F")]
		[Address(RVA = "0xFE26C0", Offset = "0xFE26C0", VA = "0xFE26C0")]
		private void AnimateMovement()
		{
		}

		[Token(Token = "0x6000E30")]
		[Address(RVA = "0xFE2878", Offset = "0xFE2878", VA = "0xFE2878")]
		public void SetIndex(int index)
		{
		}

		[Token(Token = "0x6000E31")]
		[Address(RVA = "0xFE28C0", Offset = "0xFE28C0", VA = "0xFE28C0")]
		public void UpdateEventInfo(EventFeedData eventFeed)
		{
		}

		[Token(Token = "0x6000E32")]
		[Address(RVA = "0xFE2C80", Offset = "0xFE2C80", VA = "0xFE2C80")]
		public void ActivateEvent()
		{
		}
	}
	[Token(Token = "0x20004EF")]
	public class PlayerEventInfo
	{
		[Token(Token = "0x4000CB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Sprite PlayerClass;

		[Token(Token = "0x4000CB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Color PlayerColor;

		[Token(Token = "0x4000CB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string PlayFabEntityId;

		[Token(Token = "0x6000E33")]
		[Address(RVA = "0xFE2CEC", Offset = "0xFE2CEC", VA = "0xFE2CEC")]
		public PlayerEventInfo()
		{
		}
	}
	[Token(Token = "0x20004F0")]
	public class PlayerHUD : MonoBehaviour
	{
		[Token(Token = "0x4000CB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBD2AB0", Offset = "0xBD2AB0")]
		[SerializeField]
		private Cortopia.Scripts.Players.Player player;

		[Token(Token = "0x4000CB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBD2AFC", Offset = "0xBD2AFC")]
		[SerializeField]
		private GameObject gameplayHUD;

		[Token(Token = "0x4000CB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject mainHUD;

		[Token(Token = "0x4000CB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Vector2 distanceRange;

		[Token(Token = "0x4000CB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Vector2 heightRange;

		[Token(Token = "0x4000CB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Vector2 scaleRange;

		[Token(Token = "0x4000CB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private readonly ReactiveSource<PlayerHUDMode> _hudMode;

		[Token(Token = "0x4000CBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private readonly ReactiveSource<bool> _isDead;

		[Token(Token = "0x4000CBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private readonly ReactiveSource<bool> _isHUDVisible;

		[Token(Token = "0x4000CBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private readonly ReactiveSource<bool> _isShowSettings;

		[Token(Token = "0x4000CBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private readonly ReactiveSource<bool> _showDummyNotification;

		[Token(Token = "0x4000CBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private RectTransform _hudRectTransform;

		[Token(Token = "0x4000CBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private ReactiveSubscription _reactiveSubscription;

		[Token(Token = "0x4000CC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private bool _showHUD;

		[Token(Token = "0x17000258")]
		public Cortopia.Scripts.Players.Player Player
		{
			[Token(Token = "0x6000E34")]
			[Address(RVA = "0xFE2CF4", Offset = "0xFE2CF4", VA = "0xFE2CF4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000259")]
		public Reactive<PlayerHUDMode> HUDMode
		{
			[Token(Token = "0x6000E35")]
			[Address(RVA = "0xFE2CFC", Offset = "0xFE2CFC", VA = "0xFE2CFC")]
			get
			{
				return default(Reactive<PlayerHUDMode>);
			}
		}

		[Token(Token = "0x1700025A")]
		public Reactive<bool> ShowDummyNotification
		{
			[Token(Token = "0x6000E36")]
			[Address(RVA = "0xFE2D6C", Offset = "0xFE2D6C", VA = "0xFE2D6C")]
			get
			{
				return default(Reactive<bool>);
			}
		}

		[Token(Token = "0x1700025B")]
		public Reactive<bool> IsDead
		{
			[Token(Token = "0x6000E37")]
			[Address(RVA = "0xFE2DDC", Offset = "0xFE2DDC", VA = "0xFE2DDC")]
			get
			{
				return default(Reactive<bool>);
			}
		}

		[Token(Token = "0x1700025C")]
		public Reactive<bool> IsSettingsHUDVisible
		{
			[Token(Token = "0x6000E38")]
			[Address(RVA = "0xFE2E30", Offset = "0xFE2E30", VA = "0xFE2E30")]
			get
			{
				return default(Reactive<bool>);
			}
		}

		[Token(Token = "0x1700025D")]
		public Reactive<bool> IsHUDVisible
		{
			[Token(Token = "0x6000E39")]
			[Address(RVA = "0xFE2E84", Offset = "0xFE2E84", VA = "0xFE2E84")]
			get
			{
				return default(Reactive<bool>);
			}
		}

		[Token(Token = "0x6000E3A")]
		[Address(RVA = "0xFE2ED8", Offset = "0xFE2ED8", VA = "0xFE2ED8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000E3B")]
		[Address(RVA = "0xFE2EE8", Offset = "0xFE2EE8", VA = "0xFE2EE8")]
		private void Update()
		{
		}

		[Token(Token = "0x6000E3C")]
		[Address(RVA = "0xFE342C", Offset = "0xFE342C", VA = "0xFE342C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000E3D")]
		[Address(RVA = "0xFE35D4", Offset = "0xFE35D4", VA = "0xFE35D4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000E3E")]
		[Address(RVA = "0xFE35E0", Offset = "0xFE35E0", VA = "0xFE35E0")]
		public void SetActivePlayerHUD(HUDController controller)
		{
		}

		[Token(Token = "0x6000E3F")]
		[Address(RVA = "0xFE35FC", Offset = "0xFE35FC", VA = "0xFE35FC")]
		private void UpdateHUDPosition([AttributeAttribute(Name = "TupleElementNamesAttribute", RVA = "0xBE3B9C", Offset = "0xBE3B9C")] (float, float, float) valueTuple)
		{
		}

		[Token(Token = "0x6000E40")]
		[Address(RVA = "0xFE36E0", Offset = "0xFE36E0", VA = "0xFE36E0")]
		public PlayerHUD()
		{
		}
	}
	[Token(Token = "0x20004F1")]
	public class PlayerInspector : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20004F2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBC9B40", Offset = "0xBC9B40")]
		private sealed class <>c
		{
			[Token(Token = "0x4000CE0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000CE1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<int, IList<object>> <>9__42_0;

			[Token(Token = "0x4000CE2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<bool> <>9__54_0;

			[Token(Token = "0x4000CE3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Func<Reactive<bool>> <>9__54_1;

			[Token(Token = "0x4000CE4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static Func<(bool, bool), bool> <>9__54_2;

			[Token(Token = "0x4000CE5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public static Action <>9__61_2;

			[Token(Token = "0x6000E61")]
			[Address(RVA = "0x11ED9A4", Offset = "0x11ED9A4", VA = "0x11ED9A4")]
			public <>c()
			{
			}

			[Token(Token = "0x6000E62")]
			[Address(RVA = "0x11ED9AC", Offset = "0x11ED9AC", VA = "0x11ED9AC")]
			internal IList<object> <get_LevelArgument>b__42_0(int x)
			{
				return null;
			}

			[Token(Token = "0x6000E63")]
			[Address(RVA = "0x11EDA78", Offset = "0x11EDA78", VA = "0x11EDA78")]
			internal bool <get_CanMute>b__54_0()
			{
				return default(bool);
			}

			[Token(Token = "0x6000E64")]
			[Address(RVA = "0x11EDB24", Offset = "0x11EDB24", VA = "0x11EDB24")]
			internal Reactive<bool> <get_CanMute>b__54_1()
			{
				return default(Reactive<bool>);
			}

			[Token(Token = "0x6000E65")]
			[Address(RVA = "0x11EDBA0", Offset = "0x11EDBA0", VA = "0x11EDBA0")]
			internal bool <get_CanMute>b__54_2((bool, bool) data)
			{
				return default(bool);
			}

			[Token(Token = "0x6000E66")]
			[Address(RVA = "0x11EDBB8", Offset = "0x11EDBB8", VA = "0x11EDBB8")]
			internal void <SetButtons>b__61_2()
			{
			}
		}

		[Token(Token = "0x20004F3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBC9B50", Offset = "0xBC9B50")]
		private sealed class <>c__DisplayClass60_0
		{
			[Token(Token = "0x4000CE6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public PlayerInspector <>4__this;

			[Token(Token = "0x4000CE7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Action onButton1;

			[Token(Token = "0x4000CE8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Action onButton2;

			[Token(Token = "0x6000E67")]
			[Address(RVA = "0x11EDBBC", Offset = "0x11EDBBC", VA = "0x11EDBBC")]
			public <>c__DisplayClass60_0()
			{
			}

			[Token(Token = "0x6000E68")]
			[Address(RVA = "0x11EDBC4", Offset = "0x11EDBC4", VA = "0x11EDBC4")]
			internal void <SetButtons>b__0()
			{
			}

			[Token(Token = "0x6000E69")]
			[Address(RVA = "0x11EDC7C", Offset = "0x11EDC7C", VA = "0x11EDC7C")]
			internal void <SetButtons>b__1()
			{
			}

			[Token(Token = "0x6000E6A")]
			[Address(RVA = "0x11EDCEC", Offset = "0x11EDCEC", VA = "0x11EDCEC")]
			internal void <SetButtons>b__2()
			{
			}
		}

		[Token(Token = "0x20004F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBC9B60", Offset = "0xBC9B60")]
		private sealed class <>c__DisplayClass61_0
		{
			[Token(Token = "0x4000CE9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public PlayerInspector <>4__this;

			[Token(Token = "0x4000CEA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Action onButton1;

			[Token(Token = "0x6000E6B")]
			[Address(RVA = "0x11EDD5C", Offset = "0x11EDD5C", VA = "0x11EDD5C")]
			public <>c__DisplayClass61_0()
			{
			}

			[Token(Token = "0x6000E6C")]
			[Address(RVA = "0x11EDD64", Offset = "0x11EDD64", VA = "0x11EDD64")]
			internal void <SetButtons>b__0()
			{
			}

			[Token(Token = "0x6000E6D")]
			[Address(RVA = "0x11EDE1C", Offset = "0x11EDE1C", VA = "0x11EDE1C")]
			internal void <SetButtons>b__1()
			{
			}
		}

		[Token(Token = "0x4000CC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Texture2D defaultAvatar;

		[Token(Token = "0x4000CC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject removeFriendErrorPanel;

		[Token(Token = "0x4000CC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBD2BA8", Offset = "0xBD2BA8")]
		[SerializeField]
		private LocalizedString block;

		[Token(Token = "0x4000CC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private LocalizedString unblock;

		[Token(Token = "0x4000CC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private LocalizedString addFavorite;

		[Token(Token = "0x4000CC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private LocalizedString removeFavorite;

		[Token(Token = "0x4000CC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private LocalizedString requestFriend;

		[Token(Token = "0x4000CC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private LocalizedString cancelFriendReq;

		[Token(Token = "0x4000CC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private LocalizedString acceptFriendReq;

		[Token(Token = "0x4000CCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private LocalizedString denyFriendReq;

		[Token(Token = "0x4000CCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private LocalizedString removeFriend;

		[Token(Token = "0x4000CCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private LocalizedString kickString;

		[Token(Token = "0x4000CCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private LocalizedString leavePartyString;

		[Token(Token = "0x4000CCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private readonly ReactiveSource<LocalizedString> _button1Text;

		[Token(Token = "0x4000CCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private readonly ReactiveSource<LocalizedString> _button2Text;

		[Token(Token = "0x4000CD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private readonly ReactiveSource<bool> _button1Visible;

		[Token(Token = "0x4000CD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private readonly ReactiveSource<bool> _button2Visible;

		[Token(Token = "0x4000CD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private readonly ReactiveSource<bool> _buttonsEnabled;

		[Token(Token = "0x4000CD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private readonly ReactiveSource<bool> _humanPlayer;

		[Token(Token = "0x4000CD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private readonly ReactiveSource<bool> _isOpen;

		[Token(Token = "0x4000CD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private readonly ReactiveSource<Reactive<OrientedTexture2D>> _playerAvatar;

		[Token(Token = "0x4000CD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private readonly ReactiveSource<int> _playerLevel;

		[Token(Token = "0x4000CD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private readonly ReactiveSource<string> _playerName;

		[Token(Token = "0x4000CD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private readonly ReactiveSource<string> _playFabEntityId;

		[Token(Token = "0x4000CD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private readonly ReactiveTransaction _transaction;

		[Token(Token = "0x4000CDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private IInspectablePlayer _inspectable;

		[Token(Token = "0x4000CDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private bool _isOwnInspector;

		[Token(Token = "0x4000CDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private Action _onButton1;

		[Token(Token = "0x4000CDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private Action _onButton2;

		[Token(Token = "0x4000CDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private Reactive<OrientedTexture2D> _reactiveConstant;

		[Token(Token = "0x4000CDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private ReactiveSubscription _reactiveSubscription;

		[Token(Token = "0x1700025E")]
		public Reactive<bool> IsOpen
		{
			[Token(Token = "0x6000E41")]
			[Address(RVA = "0xFE6510", Offset = "0xFE6510", VA = "0xFE6510")]
			get
			{
				return default(Reactive<bool>);
			}
		}

		[Token(Token = "0x1700025F")]
		public Reactive<string> PlayFabEntityId
		{
			[Token(Token = "0x6000E42")]
			[Address(RVA = "0xFE6564", Offset = "0xFE6564", VA = "0xFE6564")]
			get
			{
				return default(Reactive<string>);
			}
		}

		[Token(Token = "0x17000260")]
		public Reactive<OrientedTexture2D> PlayerAvatar
		{
			[Token(Token = "0x6000E43")]
			[Address(RVA = "0xFE65B8", Offset = "0xFE65B8", VA = "0xFE65B8")]
			get
			{
				return default(Reactive<OrientedTexture2D>);
			}
		}

		[Token(Token = "0x17000261")]
		public Reactive<string> PlayerName
		{
			[Token(Token = "0x6000E44")]
			[Address(RVA = "0xFE6628", Offset = "0xFE6628", VA = "0xFE6628")]
			get
			{
				return default(Reactive<string>);
			}
		}

		[Token(Token = "0x17000262")]
		public Reactive<int> PlayerLevel
		{
			[Token(Token = "0x6000E45")]
			[Address(RVA = "0xFE667C", Offset = "0xFE667C", VA = "0xFE667C")]
			get
			{
				return default(Reactive<int>);
			}
		}

		[Token(Token = "0x17000263")]
		public Reactive<IList<object>> LevelArgument
		{
			[Token(Token = "0x6000E46")]
			[Address(RVA = "0xFE66D0", Offset = "0xFE66D0", VA = "0xFE66D0")]
			get
			{
				return default(Reactive<IList<object>>);
			}
		}

		[Token(Token = "0x17000264")]
		public Reactive<LocalizedString> Button1Text
		{
			[Token(Token = "0x6000E47")]
			[Address(RVA = "0xFE67FC", Offset = "0xFE67FC", VA = "0xFE67FC")]
			get
			{
				return default(Reactive<LocalizedString>);
			}
		}

		[Token(Token = "0x17000265")]
		public Reactive<LocalizedString> Button2Text
		{
			[Token(Token = "0x6000E48")]
			[Address(RVA = "0xFE6850", Offset = "0xFE6850", VA = "0xFE6850")]
			get
			{
				return default(Reactive<LocalizedString>);
			}
		}

		[Token(Token = "0x17000266")]
		public Reactive<bool> Button1Visible
		{
			[Token(Token = "0x6000E49")]
			[Address(RVA = "0xFE68A4", Offset = "0xFE68A4", VA = "0xFE68A4")]
			get
			{
				return default(Reactive<bool>);
			}
		}

		[Token(Token = "0x17000267")]
		public Reactive<bool> Button2Visible
		{
			[Token(Token = "0x6000E4A")]
			[Address(RVA = "0xFE68F8", Offset = "0xFE68F8", VA = "0xFE68F8")]
			get
			{
				return default(Reactive<bool>);
			}
		}

		[Token(Token = "0x17000268")]
		public Reactive<bool> ButtonsEnabled
		{
			[Token(Token = "0x6000E4B")]
			[Address(RVA = "0xFE694C", Offset = "0xFE694C", VA = "0xFE694C")]
			get
			{
				return default(Reactive<bool>);
			}
		}

		[Token(Token = "0x17000269")]
		public Reactive<bool> CanMute
		{
			[Token(Token = "0x6000E4C")]
			[Address(RVA = "0xFE69A0", Offset = "0xFE69A0", VA = "0xFE69A0")]
			get
			{
				return default(Reactive<bool>);
			}
		}

		[Token(Token = "0x6000E4D")]
		[Address(RVA = "0xFE6CA8", Offset = "0xFE6CA8", VA = "0xFE6CA8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000E4E")]
		[Address(RVA = "0xFE6D4C", Offset = "0xFE6D4C", VA = "0xFE6D4C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000E4F")]
		[Address(RVA = "0xFE6E70", Offset = "0xFE6E70", VA = "0xFE6E70")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000E50")]
		[Address(RVA = "0xFE6F80", Offset = "0xFE6F80", VA = "0xFE6F80")]
		private void OnPlayerInspector(IInspectablePlayer obj)
		{
		}

		[Token(Token = "0x6000E51")]
		[Address(RVA = "0xFE73E8", Offset = "0xFE73E8", VA = "0xFE73E8")]
		private void OnUpdated(object sender, EventArgs e)
		{
		}

		[Token(Token = "0x6000E52")]
		[Address(RVA = "0xFE83E8", Offset = "0xFE83E8", VA = "0xFE83E8")]
		private void SetButtons(LocalizedString button1String, Action onButton1, LocalizedString button2String, Action onButton2, bool addKickOption = false)
		{
		}

		[Token(Token = "0x6000E53")]
		[Address(RVA = "0xFE8178", Offset = "0xFE8178", VA = "0xFE8178")]
		private void SetButtons(LocalizedString button1String, Action onButton1, bool addKickOption = false)
		{
		}

		[Token(Token = "0x6000E54")]
		[Address(RVA = "0xFE85F8", Offset = "0xFE85F8", VA = "0xFE85F8")]
		private void RemoveFriendInput()
		{
		}

		[Token(Token = "0x6000E55")]
		[Address(RVA = "0xFE8854", Offset = "0xFE8854", VA = "0xFE8854")]
		public void ClosePlayerInspector()
		{
		}

		[Token(Token = "0x6000E56")]
		[Address(RVA = "0xFE88E0", Offset = "0xFE88E0", VA = "0xFE88E0")]
		public void OnButton1()
		{
		}

		[Token(Token = "0x6000E57")]
		[Address(RVA = "0xFE88F4", Offset = "0xFE88F4", VA = "0xFE88F4")]
		public void OnButton2()
		{
		}

		[Token(Token = "0x6000E58")]
		[Address(RVA = "0xFE8908", Offset = "0xFE8908", VA = "0xFE8908")]
		public PlayerInspector()
		{
		}

		[Token(Token = "0x6000E59")]
		[Address(RVA = "0xFE8BE8", Offset = "0xFE8BE8", VA = "0xFE8BE8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDF0E8", Offset = "0xBDF0E8")]
		private void <OnUpdated>b__59_0()
		{
		}

		[Token(Token = "0x6000E5A")]
		[Address(RVA = "0xFE8C98", Offset = "0xFE8C98", VA = "0xFE8C98")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDF0F8", Offset = "0xBDF0F8")]
		private void <OnUpdated>b__59_1()
		{
		}

		[Token(Token = "0x6000E5B")]
		[Address(RVA = "0xFE8D48", Offset = "0xFE8D48", VA = "0xFE8D48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDF108", Offset = "0xBDF108")]
		private void <OnUpdated>b__59_2()
		{
		}

		[Token(Token = "0x6000E5C")]
		[Address(RVA = "0xFE8DF8", Offset = "0xFE8DF8", VA = "0xFE8DF8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDF118", Offset = "0xBDF118")]
		private void <OnUpdated>b__59_3()
		{
		}

		[Token(Token = "0x6000E5D")]
		[Address(RVA = "0xFE8EAC", Offset = "0xFE8EAC", VA = "0xFE8EAC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDF128", Offset = "0xBDF128")]
		private void <OnUpdated>b__59_4()
		{
		}

		[Token(Token = "0x6000E5E")]
		[Address(RVA = "0xFE8F60", Offset = "0xFE8F60", VA = "0xFE8F60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDF138", Offset = "0xBDF138")]
		private void <OnUpdated>b__59_5()
		{
		}

		[Token(Token = "0x6000E5F")]
		[Address(RVA = "0xFE9014", Offset = "0xFE9014", VA = "0xFE9014")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDF148", Offset = "0xBDF148")]
		private void <OnUpdated>b__59_6()
		{
		}
	}
	[Token(Token = "0x20004F5")]
	public class PlayerInspectorOffset : MonoBehaviour
	{
		[Token(Token = "0x4000CEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject inspectorPosition;

		[Token(Token = "0x1700026A")]
		public Vector3 NewPosition
		{
			[Token(Token = "0x6000E6E")]
			[Address(RVA = "0xFE90C8", Offset = "0xFE90C8", VA = "0xFE90C8")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x6000E6F")]
		[Address(RVA = "0xFE90F4", Offset = "0xFE90F4", VA = "0xFE90F4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000E70")]
		[Address(RVA = "0xFE9188", Offset = "0xFE9188", VA = "0xFE9188")]
		public PlayerInspectorOffset()
		{
		}
	}
	[Token(Token = "0x20004F6")]
	public interface IPlayerName
	{
	}
	[Token(Token = "0x20004F7")]
	public class HumanPlayerName : IPlayerName
	{
		[Token(Token = "0x4000CEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Task<PlayersInfoCache.PlayerInfo> PlayerInfo;

		[Token(Token = "0x4000CED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string PlayFabEntityId;

		[Token(Token = "0x6000E71")]
		[Address(RVA = "0xFB3DB0", Offset = "0xFB3DB0", VA = "0xFB3DB0")]
		public HumanPlayerName()
		{
		}
	}
	[Token(Token = "0x20004F8")]
	public class BotPlayerName : IPlayerName
	{
		[Token(Token = "0x4000CEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public LocalizedString BotName;

		[Token(Token = "0x6000E72")]
		[Address(RVA = "0x133350C", Offset = "0x133350C", VA = "0x133350C")]
		public BotPlayerName()
		{
		}
	}
	[Token(Token = "0x20004F9")]
	public class PlayerNameUI : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20004FA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBC9B70", Offset = "0xBC9B70")]
		private sealed class <>c
		{
			[Token(Token = "0x4000CF4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000CF5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Cortopia.Scripts.Players.Player, Reactive<PlayerRef>> <>9__6_0;

			[Token(Token = "0x6000E7C")]
			[Address(RVA = "0x11EE34C", Offset = "0x11EE34C", VA = "0x11EE34C")]
			public <>c()
			{
			}

			[Token(Token = "0x6000E7D")]
			[Address(RVA = "0x11EE354", Offset = "0x11EE354", VA = "0x11EE354")]
			internal Reactive<PlayerRef> <OnEnable>b__6_0(Cortopia.Scripts.Players.Player x)
			{
				return default(Reactive<PlayerRef>);
			}
		}

		[Token(Token = "0x4000CEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly LocalizedString[] BotNames;

		[Token(Token = "0x4000CF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBD2CA4", Offset = "0xBD2CA4")]
		[SerializeField]
		private Cortopia.Scripts.Players.Player player;

		[Token(Token = "0x4000CF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private DisplayPlayerName playerNameField;

		[Token(Token = "0x4000CF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private ReactiveSubscription? _playerRefSubscription;

		[Token(Token = "0x4000CF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private PlayerRef? _playerRefToSetName;

		[Token(Token = "0x6000E73")]
		[Address(RVA = "0x1110C64", Offset = "0x1110C64", VA = "0x1110C64")]
		private void Update()
		{
		}

		[Token(Token = "0x6000E74")]
		[Address(RVA = "0x1110F8C", Offset = "0x1110F8C", VA = "0x1110F8C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000E75")]
		[Address(RVA = "0x111124C", Offset = "0x111124C", VA = "0x111124C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000E76")]
		[Address(RVA = "0x1110DAC", Offset = "0x1110DAC", VA = "0x1110DAC")]
		public static IPlayerName GetName(Frame frame, EntityRef playerEntity, [System.Runtime.InteropServices.Optional] PlayerRef playerRef)
		{
			return null;
		}

		[Token(Token = "0x6000E77")]
		[Address(RVA = "0x1111480", Offset = "0x1111480", VA = "0x1111480")]
		private static LocalizedString GetBotName(Frame frame, EntityRef botEntity)
		{
			return null;
		}

		[Token(Token = "0x6000E78")]
		[Address(RVA = "0x111166C", Offset = "0x111166C", VA = "0x111166C")]
		public PlayerNameUI()
		{
		}

		[Token(Token = "0x6000E7A")]
		[Address(RVA = "0x1111A10", Offset = "0x1111A10", VA = "0x1111A10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDF158", Offset = "0xBDF158")]
		private void <OnEnable>b__6_1(PlayerRef playerRef)
		{
		}
	}
	[Token(Token = "0x20004FB")]
	public class PlayerReady : MonoBehaviour
	{
		[Token(Token = "0x4000CF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private PlayersStatus.Team team;

		[Token(Token = "0x4000CF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private PlayersStatus.TeamPlayerID teamID;

		[Token(Token = "0x4000CF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private UnityEvent onPlayerReady;

		[Token(Token = "0x4000CF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private UnityEvent onPlayerNotReady;

		[Token(Token = "0x4000CFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private LobbyAvatar lobbyAvatar;

		[Token(Token = "0x4000CFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private PlayersStatusRef playersStatus;

		[Token(Token = "0x4000CFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private IDisposable _avatarSubscription;

		[Token(Token = "0x4000CFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool? _isLocalPlayer;

		[Token(Token = "0x4000CFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private IDisposable _readySubscription;

		[Token(Token = "0x6000E7E")]
		[Address(RVA = "0x1111A7C", Offset = "0x1111A7C", VA = "0x1111A7C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000E7F")]
		[Address(RVA = "0x1111AF8", Offset = "0x1111AF8", VA = "0x1111AF8")]
		private void Update()
		{
		}

		[Token(Token = "0x6000E80")]
		[Address(RVA = "0x11122B0", Offset = "0x11122B0", VA = "0x11122B0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000E81")]
		[Address(RVA = "0x11123D4", Offset = "0x11123D4", VA = "0x11123D4")]
		private void OnPlayerAvatar(Sprite avatar)
		{
		}

		[Token(Token = "0x6000E82")]
		[Address(RVA = "0x11123F0", Offset = "0x11123F0", VA = "0x11123F0")]
		private void OnPlayerReady(bool ready)
		{
		}

		[Token(Token = "0x6000E83")]
		[Address(RVA = "0x111241C", Offset = "0x111241C", VA = "0x111241C")]
		public PlayerReady()
		{
		}
	}
	[Token(Token = "0x20004FC")]
	public class PlayerStats : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20004FD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBC9B80", Offset = "0xBC9B80")]
		private sealed class <>c
		{
			[Token(Token = "0x4000D17")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000D18")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<EntitledPlayerClass, PlayerClassConfigurationAsset> <>9__24_1;

			[Token(Token = "0x4000D19")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<IReadOnlyList<EntitledPlayerClass>, IEnumerable<PlayerClassConfigurationAsset>> <>9__24_0;

			[Token(Token = "0x4000D1A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Func<IInspectablePlayer, Reactive<Cortopia.CortopiaPlayFabModels.PlayerStats>> <>9__24_2;

			[Token(Token = "0x4000D1B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static Func<TotalPlayerClassStats, PlayerClassConfigurationAsset> <>9__24_4;

			[Token(Token = "0x4000D1C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public static Func<PlayerClassConfigurationAsset, bool> <>9__24_5;

			[Token(Token = "0x4000D1D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public static Func<Cortopia.CortopiaPlayFabModels.PlayerStats, IEnumerable<PlayerClassConfigurationAsset>> <>9__24_3;

			[Token(Token = "0x4000D1E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public static Func<TotalPlayerClassStats, PlayerClassStats> <>9__29_1;

			[Token(Token = "0x4000D1F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public static Func<TotalPlayerClassStats, PlayerClassStats> <>9__29_2;

			[Token(Token = "0x6000E8E")]
			[Address(RVA = "0x11EE458", Offset = "0x11EE458", VA = "0x11EE458")]
			public <>c()
			{
			}

			[Token(Token = "0x6000E8F")]
			[Address(RVA = "0x11EE460", Offset = "0x11EE460", VA = "0x11EE460")]
			internal IEnumerable<PlayerClassConfigurationAsset> <Start>b__24_0(IReadOnlyList<EntitledPlayerClass> x)
			{
				return null;
			}

			[Token(Token = "0x6000E90")]
			[Address(RVA = "0x11EE578", Offset = "0x11EE578", VA = "0x11EE578")]
			internal PlayerClassConfigurationAsset <Start>b__24_1(EntitledPlayerClass y)
			{
				return null;
			}

			[Token(Token = "0x6000E91")]
			[Address(RVA = "0x11EE590", Offset = "0x11EE590", VA = "0x11EE590")]
			internal Reactive<Cortopia.CortopiaPlayFabModels.PlayerStats> <Start>b__24_2(IInspectablePlayer x)
			{
				return default(Reactive<Cortopia.CortopiaPlayFabModels.PlayerStats>);
			}

			[Token(Token = "0x6000E92")]
			[Address(RVA = "0x11EE6CC", Offset = "0x11EE6CC", VA = "0x11EE6CC")]
			internal IEnumerable<PlayerClassConfigurationAsset> <Start>b__24_3(Cortopia.CortopiaPlayFabModels.PlayerStats x)
			{
				return null;
			}

			[Token(Token = "0x6000E93")]
			[Address(RVA = "0x11EE8C4", Offset = "0x11EE8C4", VA = "0x11EE8C4")]
			internal PlayerClassConfigurationAsset <Start>b__24_4(TotalPlayerClassStats y)
			{
				return null;
			}

			[Token(Token = "0x6000E94")]
			[Address(RVA = "0x11EE918", Offset = "0x11EE918", VA = "0x11EE918")]
			internal bool <Start>b__24_5(PlayerClassConfigurationAsset y)
			{
				return default(bool);
			}

			[Token(Token = "0x6000E95")]
			[Address(RVA = "0x11EE980", Offset = "0x11EE980", VA = "0x11EE980")]
			internal PlayerClassStats <UpdateStats>b__29_1(TotalPlayerClassStats x)
			{
				return default(PlayerClassStats);
			}

			[Token(Token = "0x6000E96")]
			[Address(RVA = "0x11EE9A0", Offset = "0x11EE9A0", VA = "0x11EE9A0")]
			internal PlayerClassStats <UpdateStats>b__29_2(TotalPlayerClassStats x)
			{
				return default(PlayerClassStats);
			}
		}

		[Token(Token = "0x20004FE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBC9B90", Offset = "0xBC9B90")]
		private sealed class <>c__DisplayClass28_0
		{
			[Token(Token = "0x4000D20")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public PlayerClassConfigurationAsset entitledPlayerClass;

			[Token(Token = "0x4000D21")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public PlayerStats <>4__this;

			[Token(Token = "0x6000E97")]
			[Address(RVA = "0x11EE9C0", Offset = "0x11EE9C0", VA = "0x11EE9C0")]
			public <>c__DisplayClass28_0()
			{
			}

			[Token(Token = "0x6000E98")]
			[Address(RVA = "0x11EE9C8", Offset = "0x11EE9C8", VA = "0x11EE9C8")]
			internal void <BuildButtonList>b__0(bool isOn)
			{
			}
		}

		[Token(Token = "0x20004FF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBC9BA0", Offset = "0xBC9BA0")]
		private sealed class <>c__DisplayClass29_0
		{
			[Token(Token = "0x4000D22")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TupleElementNamesAttribute", RVA = "0xBD2F54", Offset = "0xBD2F54")]
			public (Cortopia.CortopiaPlayFabModels.PlayerStats, AssetRefPlayerClassConfiguration) tuple;

			[Token(Token = "0x6000E99")]
			[Address(RVA = "0x11EEA60", Offset = "0x11EEA60", VA = "0x11EEA60")]
			public <>c__DisplayClass29_0()
			{
			}

			[Token(Token = "0x6000E9A")]
			[Address(RVA = "0x11EEA68", Offset = "0x11EEA68", VA = "0x11EEA68")]
			internal bool <UpdateStats>b__0(TotalPlayerClassStats x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000CFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBD2D60", Offset = "0xBD2D60")]
		private bool isPlayerInspector;

		[Token(Token = "0x4000D00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBD2DAC", Offset = "0xBD2DAC")]
		[SerializeField]
		private VRToggleGroup toggleGroup;

		[Token(Token = "0x4000D01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform buttonParent;

		[Token(Token = "0x4000D02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject buttonPrefab;

		[Token(Token = "0x4000D03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBD2E18", Offset = "0xBD2E18")]
		private TMP_Text matchesPlayedLifetime;

		[Token(Token = "0x4000D04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private TMP_Text winRatioLifetime;

		[Token(Token = "0x4000D05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private TMP_Text damageDealtLifetime;

		[Token(Token = "0x4000D06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private TMP_Text healingDealtLifetime;

		[Token(Token = "0x4000D07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private TMP_Text killsLifetime;

		[Token(Token = "0x4000D08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private TMP_Text deathsLifetime;

		[Token(Token = "0x4000D09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private TMP_Text assistsLifetime;

		[Token(Token = "0x4000D0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private TMP_Text objectivesLifetime;

		[Token(Token = "0x4000D0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private TMP_Text matchesPlayedSeason;

		[Token(Token = "0x4000D0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private TMP_Text winRatioSeason;

		[Token(Token = "0x4000D0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private TMP_Text damageDealtSeason;

		[Token(Token = "0x4000D0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private TMP_Text healingDealtSeason;

		[Token(Token = "0x4000D0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private TMP_Text killsSeason;

		[Token(Token = "0x4000D10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private TMP_Text deathsSeason;

		[Token(Token = "0x4000D11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private TMP_Text assistsSeason;

		[Token(Token = "0x4000D12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private TMP_Text objectivesSeason;

		[Token(Token = "0x4000D13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private readonly List<PlayerStatsClassButton> _buttons;

		[Token(Token = "0x4000D14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private readonly ReactiveSource<AssetRefPlayerClassConfiguration> _filter;

		[Token(Token = "0x4000D15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private ReactiveSubscription _buttonReactives;

		[Token(Token = "0x4000D16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private ReactiveSubscription _classSubscription;

		[Token(Token = "0x6000E84")]
		[Address(RVA = "0x11137C0", Offset = "0x11137C0", VA = "0x11137C0")]
		private void Start()
		{
		}

		[Token(Token = "0x6000E85")]
		[Address(RVA = "0x1113D7C", Offset = "0x1113D7C", VA = "0x1113D7C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000E86")]
		[Address(RVA = "0x1113DAC", Offset = "0x1113DAC", VA = "0x1113DAC")]
		private static Cortopia.CortopiaPlayFabModels.PlayerStats GetEmptyStats()
		{
			return default(Cortopia.CortopiaPlayFabModels.PlayerStats);
		}

		[Token(Token = "0x6000E87")]
		[Address(RVA = "0x1113E9C", Offset = "0x1113E9C", VA = "0x1113E9C")]
		public void FilterAllClasses(bool isOn)
		{
		}

		[Token(Token = "0x6000E88")]
		[Address(RVA = "0x1113F14", Offset = "0x1113F14", VA = "0x1113F14")]
		private void BuildButtonList(IEnumerable<PlayerClassConfigurationAsset> playerClasses)
		{
		}

		[Token(Token = "0x6000E89")]
		[Address(RVA = "0x11145A0", Offset = "0x11145A0", VA = "0x11145A0")]
		private void UpdateStats([AttributeAttribute(Name = "TupleElementNamesAttribute", RVA = "0xBE3C30", Offset = "0xBE3C30")] (Cortopia.CortopiaPlayFabModels.PlayerStats, AssetRefPlayerClassConfiguration) tuple)
		{
		}

		[Token(Token = "0x6000E8A")]
		[Address(RVA = "0x1115194", Offset = "0x1115194", VA = "0x1115194")]
		private static PlayerClassStats SumClassStats(IEnumerable<PlayerClassStats> stats)
		{
			return default(PlayerClassStats);
		}

		[Token(Token = "0x6000E8B")]
		[Address(RVA = "0x1115048", Offset = "0x1115048", VA = "0x1115048")]
		private static string GetWinRatio(MatchPlayedStats matchesStats)
		{
			return null;
		}

		[Token(Token = "0x6000E8C")]
		[Address(RVA = "0x11155FC", Offset = "0x11155FC", VA = "0x11155FC")]
		public PlayerStats()
		{
		}
	}
	[Token(Token = "0x2000500")]
	public class PlayerStatsClassButton : MonoBehaviour
	{
		[Token(Token = "0x4000D23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private VRToggle toggleButton;

		[Token(Token = "0x4000D24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Image classImage;

		[Token(Token = "0x4000D25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private IconType iconType;

		[Token(Token = "0x1700026B")]
		public VRToggle ToggleButton
		{
			[Token(Token = "0x6000E9B")]
			[Address(RVA = "0x11156C8", Offset = "0x11156C8", VA = "0x11156C8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700026C")]
		public Image ClassImage
		{
			[Token(Token = "0x6000E9C")]
			[Address(RVA = "0x11156D0", Offset = "0x11156D0", VA = "0x11156D0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E9D")]
		[Address(RVA = "0x1114558", Offset = "0x1114558", VA = "0x1114558")]
		public void SetClassImage(PlayerClassConfigurationAsset classAsset)
		{
		}

		[Token(Token = "0x6000E9E")]
		[Address(RVA = "0x11156D8", Offset = "0x11156D8", VA = "0x11156D8")]
		public PlayerStatsClassButton()
		{
		}
	}
	[Token(Token = "0x2000501")]
	public class PlayerTeamIndexFetcher : MonoBehaviour
	{
		[Token(Token = "0x4000D26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private int index;

		[Token(Token = "0x4000D27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private PlayersStatus.Team team;

		[Token(Token = "0x4000D28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly ReactiveSource<EntityRef> _playerEntitySource;

		[Token(Token = "0x4000D29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly ReactiveSource<string> _playFabEntityId;

		[Token(Token = "0x4000D2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly ReactiveTransaction _transaction;

		[Token(Token = "0x4000D2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Quantum.Team _myTeam;

		[Token(Token = "0x4000D2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD3028", Offset = "0xBD3028")]
		private readonly Reactive<EntityRef> <PlayerEntity>k__BackingField;

		[Token(Token = "0x4000D2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD3038", Offset = "0xBD3038")]
		private readonly Reactive<string> <PlayFabEntityId>k__BackingField;

		[Token(Token = "0x1700026D")]
		public Reactive<EntityRef> PlayerEntity
		{
			[Token(Token = "0x6000EA0")]
			[Address(RVA = "0x111587C", Offset = "0x111587C", VA = "0x111587C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDF168", Offset = "0xBDF168")]
			get
			{
				return default(Reactive<EntityRef>);
			}
		}

		[Token(Token = "0x1700026E")]
		public Reactive<string> PlayFabEntityId
		{
			[Token(Token = "0x6000EA1")]
			[Address(RVA = "0x1115884", Offset = "0x1115884", VA = "0x1115884")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDF178", Offset = "0xBDF178")]
			get
			{
				return default(Reactive<string>);
			}
		}

		[Token(Token = "0x6000E9F")]
		[Address(RVA = "0x11156E0", Offset = "0x11156E0", VA = "0x11156E0")]
		public PlayerTeamIndexFetcher()
		{
		}

		[Token(Token = "0x6000EA2")]
		[Address(RVA = "0x111588C", Offset = "0x111588C", VA = "0x111588C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000EA3")]
		[Address(RVA = "0x1115928", Offset = "0x1115928", VA = "0x1115928")]
		private void TryGetValidPlayer(Frame frame)
		{
		}
	}
	[Token(Token = "0x2000502")]
	public class PlayersStatus : MonoBehaviour
	{
		[Token(Token = "0x2000503")]
		public enum PlayerReadyStatus
		{
			[Token(Token = "0x4000D35")]
			Missing,
			[Token(Token = "0x4000D36")]
			Available,
			[Token(Token = "0x4000D37")]
			Ready
		}

		[Token(Token = "0x2000504")]
		public enum Team
		{
			[Token(Token = "0x4000D39")]
			MyTeam,
			[Token(Token = "0x4000D3A")]
			OpponentTeam,
			[Token(Token = "0x4000D3B")]
			Attacker,
			[Token(Token = "0x4000D3C")]
			Defender
		}

		[Token(Token = "0x2000505")]
		public enum TeamPlayerID
		{
			[Token(Token = "0x4000D3E")]
			Player1,
			[Token(Token = "0x4000D3F")]
			Player2,
			[Token(Token = "0x4000D40")]
			Player3
		}

		[Token(Token = "0x2000506")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBC9BB0", Offset = "0xBC9BB0")]
		private sealed class <>c__DisplayClass10_0
		{
			[Token(Token = "0x4000D41")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Occupant occupant;

			[Token(Token = "0x6000EAE")]
			[Address(RVA = "0x1053E50", Offset = "0x1053E50", VA = "0x1053E50")]
			public <>c__DisplayClass10_0()
			{
			}

			[Token(Token = "0x6000EAF")]
			[Address(RVA = "0x1053E58", Offset = "0x1053E58", VA = "0x1053E58")]
			internal bool <Update>b__0(EntityView x)
			{
				return default(bool);
			}

			[Token(Token = "0x6000EB0")]
			[Address(RVA = "0x1053E7C", Offset = "0x1053E7C", VA = "0x1053E7C")]
			internal bool <Update>b__1(EntityView x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000507")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBC9BC0", Offset = "0xBC9BC0")]
		private sealed class <>c__DisplayClass12_0
		{
			[Token(Token = "0x4000D42")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Occupant occupant;

			[Token(Token = "0x6000EB1")]
			[Address(RVA = "0x1053EA0", Offset = "0x1053EA0", VA = "0x1053EA0")]
			public <>c__DisplayClass12_0()
			{
			}

			[Token(Token = "0x6000EB2")]
			[Address(RVA = "0x1053EA8", Offset = "0x1053EA8", VA = "0x1053EA8")]
			internal bool <GetLocalPlayerReady>b__0(EntityView x)
			{
				return default(bool);
			}
		}

		[Serializable]
		[Token(Token = "0x2000508")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBC9BD0", Offset = "0xBC9BD0")]
		private sealed class <>c
		{
			[Token(Token = "0x4000D43")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000D44")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<PlayerReadyStatus, bool> <>9__12_1;

			[Token(Token = "0x4000D45")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<PlayerReadyStatus, bool> <>9__13_0;

			[Token(Token = "0x6000EB4")]
			[Address(RVA = "0x1053E30", Offset = "0x1053E30", VA = "0x1053E30")]
			public <>c()
			{
			}

			[Token(Token = "0x6000EB5")]
			[Address(RVA = "0x1053E38", Offset = "0x1053E38", VA = "0x1053E38")]
			internal bool <GetLocalPlayerReady>b__12_1(PlayerReadyStatus x)
			{
				return default(bool);
			}

			[Token(Token = "0x6000EB6")]
			[Address(RVA = "0x1053E44", Offset = "0x1053E44", VA = "0x1053E44")]
			internal bool <GetPlayerReady>b__13_0(PlayerReadyStatus x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000509")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBC9BE0", Offset = "0xBC9BE0")]
		private sealed class <>c__DisplayClass16_0
		{
			[Token(Token = "0x4000D46")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Occupant occupant;

			[Token(Token = "0x6000EB7")]
			[Address(RVA = "0x1053ECC", Offset = "0x1053ECC", VA = "0x1053ECC")]
			public <>c__DisplayClass16_0()
			{
			}

			[Token(Token = "0x6000EB8")]
			[Address(RVA = "0x1053ED4", Offset = "0x1053ED4", VA = "0x1053ED4")]
			internal bool <IsLocalPlayer>b__0(EntityView x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000D2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Sprite playerAvatarPlaceholder;

		[Token(Token = "0x4000D2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private List<EntityView> tilesTeamA;

		[Token(Token = "0x4000D30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private List<EntityView> tilesTeamB;

		[Token(Token = "0x4000D31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private ReactiveTransaction _reactiveTransaction;

		[Token(Token = "0x4000D32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private ReactiveSource<PlayerReadyStatus>[] _statusTeamA;

		[Token(Token = "0x4000D33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private ReactiveSource<PlayerReadyStatus>[] _statusTeamB;

		[Token(Token = "0x6000EA4")]
		[Address(RVA = "0x11165D4", Offset = "0x11165D4", VA = "0x11165D4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000EA5")]
		[Address(RVA = "0x11167BC", Offset = "0x11167BC", VA = "0x11167BC")]
		private void Update()
		{
		}

		[Token(Token = "0x6000EA6")]
		[Address(RVA = "0x1116E24", Offset = "0x1116E24", VA = "0x1116E24")]
		private static bool TryGetLocalPlayer(out Frame frame, out EntityRef localPlayerEntity, out CurrentTeam localPlayerTeam)
		{
			return default(bool);
		}

		[Token(Token = "0x6000EA7")]
		[Address(RVA = "0x1116FEC", Offset = "0x1116FEC", VA = "0x1116FEC")]
		public Reactive<bool>? GetLocalPlayerReady()
		{
			return null;
		}

		[Token(Token = "0x6000EA8")]
		[Address(RVA = "0x1111E1C", Offset = "0x1111E1C", VA = "0x1111E1C")]
		public Reactive<bool>? GetPlayerReady(TeamPlayerID id, Team team)
		{
			return null;
		}

		[Token(Token = "0x6000EA9")]
		[Address(RVA = "0x1111FCC", Offset = "0x1111FCC", VA = "0x1111FCC")]
		public Reactive<Sprite>? GetPlayerAvatar(TeamPlayerID id, Team team)
		{
			return null;
		}

		[Token(Token = "0x6000EAA")]
		[Address(RVA = "0x11172CC", Offset = "0x11172CC", VA = "0x11172CC")]
		private Reactive<PlayerReadyStatus>? GetPlayerStatus(TeamPlayerID id, Team team)
		{
			return null;
		}

		[Token(Token = "0x6000EAB")]
		[Address(RVA = "0x1112114", Offset = "0x1112114", VA = "0x1112114")]
		public bool? IsLocalPlayer(TeamPlayerID id)
		{
			return null;
		}

		[Token(Token = "0x6000EAC")]
		[Address(RVA = "0x11173F4", Offset = "0x11173F4", VA = "0x11173F4")]
		public PlayersStatus()
		{
		}

		[Token(Token = "0x6000EAD")]
		[Address(RVA = "0x11173FC", Offset = "0x11173FC", VA = "0x11173FC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDF188", Offset = "0xBDF188")]
		private Sprite <GetPlayerAvatar>b__14_0(PlayerReadyStatus x)
		{
			return null;
		}
	}
	[Token(Token = "0x200050A")]
	public class PlayersStatusRef : MonoBehaviour
	{
		[Token(Token = "0x4000D47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject showForLocalPlayer;

		[Token(Token = "0x4000D48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private PlayersStatus value;

		[Token(Token = "0x4000D49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private EntityView tile;

		[Token(Token = "0x4000D4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool _done;

		[Token(Token = "0x1700026F")]
		public PlayersStatus Value
		{
			[Token(Token = "0x6000EB9")]
			[Address(RVA = "0x1117410", Offset = "0x1117410", VA = "0x1117410")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000EBA")]
		[Address(RVA = "0x1117418", Offset = "0x1117418", VA = "0x1117418")]
		private void Update()
		{
		}

		[Token(Token = "0x6000EBB")]
		[Address(RVA = "0x1117654", Offset = "0x1117654", VA = "0x1117654")]
		public PlayersStatusRef()
		{
		}
	}
	[Token(Token = "0x200050B")]
	public class PortraitFrame : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200050C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBC9BF0", Offset = "0xBC9BF0")]
		private sealed class <>c
		{
			[Token(Token = "0x4000D52")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000D53")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<int, IList<object>> <>9__14_0;

			[Token(Token = "0x4000D54")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<int, bool> <>9__16_0;

			[Token(Token = "0x4000D55")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Func<IUser, Reactive<bool>> <>9__23_0;

			[Token(Token = "0x4000D56")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static Func<bool, Reactive<PlayersInfoCache.PlayerInfo>> <>9__23_1;

			[Token(Token = "0x4000D57")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public static Func<PlayersInfoCache.PlayerInfo, Reactive<int>> <>9__23_2;

			[Token(Token = "0x4000D58")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public static Func<PlayersInfoCache.PlayerInfo, Reactive<string>> <>9__23_3;

			[Token(Token = "0x6000ECB")]
			[Address(RVA = "0x1053FF0", Offset = "0x1053FF0", VA = "0x1053FF0")]
			public <>c()
			{
			}

			[Token(Token = "0x6000ECC")]
			[Address(RVA = "0x1053FF8", Offset = "0x1053FF8", VA = "0x1053FF8")]
			internal IList<object> <get_LevelArgument>b__14_0(int x)
			{
				return null;
			}

			[Token(Token = "0x6000ECD")]
			[Address(RVA = "0x10540C4", Offset = "0x10540C4", VA = "0x10540C4")]
			internal bool <get_IsLevelZero>b__16_0(int x)
			{
				return default(bool);
			}

			[Token(Token = "0x6000ECE")]
			[Address(RVA = "0x10540D0", Offset = "0x10540D0", VA = "0x10540D0")]
			internal Reactive<bool> <OnEnable>b__23_0(IUser x)
			{
				return default(Reactive<bool>);
			}

			[Token(Token = "0x6000ECF")]
			[Address(RVA = "0x10541A0", Offset = "0x10541A0", VA = "0x10541A0")]
			internal Reactive<PlayersInfoCache.PlayerInfo> <OnEnable>b__23_1(bool x)
			{
				return default(Reactive<PlayersInfoCache.PlayerInfo>);
			}

			[Token(Token = "0x6000ED0")]
			[Address(RVA = "0x10542CC", Offset = "0x10542CC", VA = "0x10542CC")]
			internal Reactive<int> <OnEnable>b__23_2(PlayersInfoCache.PlayerInfo x)
			{
				return default(Reactive<int>);
			}

			[Token(Token = "0x6000ED1")]
			[Address(RVA = "0x1054340", Offset = "0x1054340", VA = "0x1054340")]
			internal Reactive<string> <OnEnable>b__23_3(PlayersInfoCache.PlayerInfo x)
			{
				return default(Reactive<string>);
			}
		}

		[Token(Token = "0x4000D4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private BoundValue<int> playerLevel;

		[Token(Token = "0x4000D4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private BoundValue<string> playerFrameID;

		[Token(Token = "0x4000D4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private ReactiveSource<Color> _color;

		[Token(Token = "0x4000D4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private ReactiveSource<Sprite> _frameSprite;

		[Token(Token = "0x4000D4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private ReactiveSource<Sprite> _starsSprite;

		[Token(Token = "0x4000D50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private ReactiveSubscription _subscription;

		[Token(Token = "0x4000D51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private ReactiveTransaction _transaction;

		[Token(Token = "0x17000270")]
		public Reactive<Sprite> FrameSprite
		{
			[Token(Token = "0x6000EBC")]
			[Address(RVA = "0x11185B0", Offset = "0x11185B0", VA = "0x11185B0")]
			get
			{
				return default(Reactive<Sprite>);
			}
		}

		[Token(Token = "0x17000271")]
		public Reactive<Sprite> StarsSprite
		{
			[Token(Token = "0x6000EBD")]
			[Address(RVA = "0x1118698", Offset = "0x1118698", VA = "0x1118698")]
			get
			{
				return default(Reactive<Sprite>);
			}
		}

		[Token(Token = "0x17000272")]
		public Reactive<Color> Color
		{
			[Token(Token = "0x6000EBE")]
			[Address(RVA = "0x1118780", Offset = "0x1118780", VA = "0x1118780")]
			get
			{
				return default(Reactive<Color>);
			}
		}

		[Token(Token = "0x17000273")]
		public Reactive<IList<object>> LevelArgument
		{
			[Token(Token = "0x6000EBF")]
			[Address(RVA = "0x1118878", Offset = "0x1118878", VA = "0x1118878")]
			get
			{
				return default(Reactive<IList<object>>);
			}
		}

		[Token(Token = "0x17000274")]
		public Reactive<bool> IsLevelZero
		{
			[Token(Token = "0x6000EC0")]
			[Address(RVA = "0x11189C4", Offset = "0x11189C4", VA = "0x11189C4")]
			get
			{
				return default(Reactive<bool>);
			}
		}

		[Token(Token = "0x17000275")]
		private ReactiveSource<Color> InternalColor
		{
			[Token(Token = "0x6000EC1")]
			[Address(RVA = "0x11187D8", Offset = "0x11187D8", VA = "0x11187D8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000276")]
		private ReactiveSource<Sprite> InternalFrameSprite
		{
			[Token(Token = "0x6000EC2")]
			[Address(RVA = "0x1118608", Offset = "0x1118608", VA = "0x1118608")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000277")]
		public ReactiveSource<Sprite> InternalStarsSprite
		{
			[Token(Token = "0x6000EC3")]
			[Address(RVA = "0x11186F0", Offset = "0x11186F0", VA = "0x11186F0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000EC4")]
		[Address(RVA = "0x1118B10", Offset = "0x1118B10", VA = "0x1118B10")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000EC5")]
		[Address(RVA = "0x1119108", Offset = "0x1119108", VA = "0x1119108")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000EC6")]
		[Address(RVA = "0x1119114", Offset = "0x1119114", VA = "0x1119114")]
		private void OnUpdateFrame([AttributeAttribute(Name = "TupleElementNamesAttribute", RVA = "0xBE3CB4", Offset = "0xBE3CB4")] (bool, int, string) data)
		{
		}

		[Token(Token = "0x6000EC7")]
		[Address(RVA = "0x1119180", Offset = "0x1119180", VA = "0x1119180")]
		private bool SetIDFrame(string frameID)
		{
			return default(bool);
		}

		[Token(Token = "0x6000EC8")]
		[Address(RVA = "0x1119430", Offset = "0x1119430", VA = "0x1119430")]
		private void SetLevelFrame(int level)
		{
		}

		[Token(Token = "0x6000EC9")]
		[Address(RVA = "0x11197E0", Offset = "0x11197E0", VA = "0x11197E0")]
		public PortraitFrame()
		{
		}
	}
	[Token(Token = "0x200050D")]
	public class PostGamePlayerStats : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200050E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBC9C00", Offset = "0xBC9C00")]
		private sealed class <>c
		{
			[Token(Token = "0x4000D70")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000D71")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<bool> <>9__21_0;

			[Token(Token = "0x4000D72")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<Reactive<bool>> <>9__21_1;

			[Token(Token = "0x4000D73")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Func<(string, bool), bool> <>9__21_2;

			[Token(Token = "0x6000EE2")]
			[Address(RVA = "0x105442C", Offset = "0x105442C", VA = "0x105442C")]
			public <>c()
			{
			}

			[Token(Token = "0x6000EE3")]
			[Address(RVA = "0x1054434", Offset = "0x1054434", VA = "0x1054434")]
			internal bool <get_CanBeMuted>b__21_0()
			{
				return default(bool);
			}

			[Token(Token = "0x6000EE4")]
			[Address(RVA = "0x10544E0", Offset = "0x10544E0", VA = "0x10544E0")]
			internal Reactive<bool> <get_CanBeMuted>b__21_1()
			{
				return default(Reactive<bool>);
			}

			[Token(Token = "0x6000EE5")]
			[Address(RVA = "0x105455C", Offset = "0x105455C", VA = "0x105455C")]
			internal bool <get_CanBeMuted>b__21_2((string, bool) x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000D59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private BoundValue<MatchStatisticsData> statistics;

		[Token(Token = "0x4000D5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private bool isOpponent;

		[Token(Token = "0x4000D5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private int teamPlayerIndex;

		[Token(Token = "0x4000D5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private DisplayPlayerName playerName;

		[Token(Token = "0x4000D5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private EntityRef _playerEntity;

		[Token(Token = "0x4000D5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int _playerUniqueID;

		[Token(Token = "0x4000D5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private readonly ReactiveSource<string> _playFabEntityId;

		[Token(Token = "0x4000D60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private readonly ReactiveSource<string> _assists;

		[Token(Token = "0x4000D61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private readonly ReactiveSource<string> _deaths;

		[Token(Token = "0x4000D62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private readonly ReactiveSource<string> _kills;

		[Token(Token = "0x4000D63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private readonly ReactiveSource<string> _objectives;

		[Token(Token = "0x4000D64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private readonly ReactiveSource<string> _totalDamage;

		[Token(Token = "0x4000D65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private readonly ReactiveSource<string> _totalHealing;

		[Token(Token = "0x4000D66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private readonly ReactiveSource<bool> _playerExists;

		[Token(Token = "0x4000D67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private bool _hasProcessedData;

		[Token(Token = "0x4000D68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private ReactiveSubscription _subscription;

		[Token(Token = "0x4000D69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD3108", Offset = "0xBD3108")]
		private readonly Reactive<string> <PlayFabEntityId>k__BackingField;

		[Token(Token = "0x4000D6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD3118", Offset = "0xBD3118")]
		private readonly Reactive<string> <Kills>k__BackingField;

		[Token(Token = "0x4000D6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD3128", Offset = "0xBD3128")]
		private readonly Reactive<string> <Deaths>k__BackingField;

		[Token(Token = "0x4000D6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD3138", Offset = "0xBD3138")]
		private readonly Reactive<string> <Assists>k__BackingField;

		[Token(Token = "0x4000D6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD3148", Offset = "0xBD3148")]
		private readonly Reactive<string> <TotalDamage>k__BackingField;

		[Token(Token = "0x4000D6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD3158", Offset = "0xBD3158")]
		private readonly Reactive<string> <TotalHealing>k__BackingField;

		[Token(Token = "0x4000D6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD3168", Offset = "0xBD3168")]
		private readonly Reactive<string> <Objectives>k__BackingField;

		[Token(Token = "0x17000278")]
		public Reactive<string> PlayFabEntityId
		{
			[Token(Token = "0x6000ED3")]
			[Address(RVA = "0x1119ADC", Offset = "0x1119ADC", VA = "0x1119ADC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDF198", Offset = "0xBDF198")]
			get
			{
				return default(Reactive<string>);
			}
		}

		[Token(Token = "0x17000279")]
		public Reactive<bool> CanBeMuted
		{
			[Token(Token = "0x6000ED4")]
			[Address(RVA = "0x1119AE4", Offset = "0x1119AE4", VA = "0x1119AE4")]
			get
			{
				return default(Reactive<bool>);
			}
		}

		[Token(Token = "0x1700027A")]
		public Reactive<string> Kills
		{
			[Token(Token = "0x6000ED5")]
			[Address(RVA = "0x1119DB4", Offset = "0x1119DB4", VA = "0x1119DB4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDF1A8", Offset = "0xBDF1A8")]
			get
			{
				return default(Reactive<string>);
			}
		}

		[Token(Token = "0x1700027B")]
		public Reactive<string> Deaths
		{
			[Token(Token = "0x6000ED6")]
			[Address(RVA = "0x1119DBC", Offset = "0x1119DBC", VA = "0x1119DBC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDF1B8", Offset = "0xBDF1B8")]
			get
			{
				return default(Reactive<string>);
			}
		}

		[Token(Token = "0x1700027C")]
		public Reactive<string> Assists
		{
			[Token(Token = "0x6000ED7")]
			[Address(RVA = "0x1119DC4", Offset = "0x1119DC4", VA = "0x1119DC4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDF1C8", Offset = "0xBDF1C8")]
			get
			{
				return default(Reactive<string>);
			}
		}

		[Token(Token = "0x1700027D")]
		public Reactive<string> TotalDamage
		{
			[Token(Token = "0x6000ED8")]
			[Address(RVA = "0x1119DCC", Offset = "0x1119DCC", VA = "0x1119DCC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDF1D8", Offset = "0xBDF1D8")]
			get
			{
				return default(Reactive<string>);
			}
		}

		[Token(Token = "0x1700027E")]
		public Reactive<string> TotalHealing
		{
			[Token(Token = "0x6000ED9")]
			[Address(RVA = "0x1119DD4", Offset = "0x1119DD4", VA = "0x1119DD4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDF1E8", Offset = "0xBDF1E8")]
			get
			{
				return default(Reactive<string>);
			}
		}

		[Token(Token = "0x1700027F")]
		public Reactive<string> Objectives
		{
			[Token(Token = "0x6000EDA")]
			[Address(RVA = "0x1119DDC", Offset = "0x1119DDC", VA = "0x1119DDC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDF1F8", Offset = "0xBDF1F8")]
			get
			{
				return default(Reactive<string>);
			}
		}

		[Token(Token = "0x6000ED2")]
		[Address(RVA = "0x11197F0", Offset = "0x11197F0", VA = "0x11197F0")]
		public PostGamePlayerStats()
		{
		}

		[Token(Token = "0x6000EDB")]
		[Address(RVA = "0x1119DE4", Offset = "0x1119DE4", VA = "0x1119DE4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000EDC")]
		[Address(RVA = "0x1119E04", Offset = "0x1119E04", VA = "0x1119E04")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000EDD")]
		[Address(RVA = "0x1119EF4", Offset = "0x1119EF4", VA = "0x1119EF4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000EDE")]
		[Address(RVA = "0x1119F00", Offset = "0x1119F00", VA = "0x1119F00")]
		private void Update()
		{
		}

		[Token(Token = "0x6000EDF")]
		[Address(RVA = "0x111A464", Offset = "0x111A464", VA = "0x111A464")]
		private bool TryGetStatistics(out BasicPlayerStatisticsData? statisticsData)
		{
			return default(bool);
		}

		[Token(Token = "0x6000EE0")]
		[Address(RVA = "0x111A680", Offset = "0x111A680", VA = "0x111A680")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDF208", Offset = "0xBDF208")]
		private void <OnEnable>b__41_0(MatchStatisticsData data)
		{
		}
	}
	[Token(Token = "0x200050F")]
	public class PostMatchMenu : MonoBehaviour
	{
		[Token(Token = "0x4000D74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly ReactiveSource<bool> _visibleCustomGame;

		[Token(Token = "0x4000D75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly ReactiveSource<bool> _visibleVote;

		[Token(Token = "0x4000D76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool _initialized;

		[Token(Token = "0x17000280")]
		public Reactive<bool> VisibleVote
		{
			[Token(Token = "0x6000EE6")]
			[Address(RVA = "0x111A688", Offset = "0x111A688", VA = "0x111A688")]
			get
			{
				return default(Reactive<bool>);
			}
		}

		[Token(Token = "0x17000281")]
		public Reactive<bool> VisibleCustomGame
		{
			[Token(Token = "0x6000EE7")]
			[Address(RVA = "0x111A6DC", Offset = "0x111A6DC", VA = "0x111A6DC")]
			get
			{
				return default(Reactive<bool>);
			}
		}

		[Token(Token = "0x6000EE8")]
		[Address(RVA = "0x111A730", Offset = "0x111A730", VA = "0x111A730")]
		private void Update()
		{
		}

		[Token(Token = "0x6000EE9")]
		[Address(RVA = "0x111A9F0", Offset = "0x111A9F0", VA = "0x111A9F0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000EEA")]
		[Address(RVA = "0x111AAA8", Offset = "0x111AAA8", VA = "0x111AAA8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000EEB")]
		[Address(RVA = "0x111AB1C", Offset = "0x111AB1C", VA = "0x111AB1C")]
		public void Leave()
		{
		}

		[Token(Token = "0x6000EEC")]
		[Address(RVA = "0x111AB8C", Offset = "0x111AB8C", VA = "0x111AB8C")]
		public PostMatchMenu()
		{
		}
	}
	[Token(Token = "0x2000510")]
	public class ProfileAvatar : MonoBehaviour
	{
		[StructLayout(3)]
		[Token(Token = "0x2000511")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBC9C10", Offset = "0xBC9C10")]
		private struct <SetAvatarImageAsync>d__12 : IAsyncStateMachine
		{
			[Token(Token = "0x4000D7C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000D7D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x4000D7E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ProfileAvatar <>4__this;

			[Token(Token = "0x4000D7F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string url;

			[Token(Token = "0x4000D80")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x4000D81")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private TaskAwaiter<OrientedTexture2D> <>u__2;

			[Token(Token = "0x6000EF4")]
			[Address(RVA = "0x1054594", Offset = "0x1054594", VA = "0x1054594", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000EF5")]
			[Address(RVA = "0x1054938", Offset = "0x1054938", VA = "0x1054938", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4000D77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Texture2D defaultAvatar;

		[Token(Token = "0x4000D78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly ReactiveSource<OrientedTexture2D> _playerAvatar;

		[Token(Token = "0x4000D79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly ReactiveSource<string> _playerName;

		[Token(Token = "0x4000D7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Task _lastImageTask;

		[Token(Token = "0x4000D7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private ReactiveSubscription _subscription;

		[Token(Token = "0x17000282")]
		public Reactive<OrientedTexture2D> PlayerAvatar
		{
			[Token(Token = "0x6000EED")]
			[Address(RVA = "0x111B8FC", Offset = "0x111B8FC", VA = "0x111B8FC")]
			get
			{
				return default(Reactive<OrientedTexture2D>);
			}
		}

		[Token(Token = "0x17000283")]
		public Reactive<string> PlayerName
		{
			[Token(Token = "0x6000EEE")]
			[Address(RVA = "0x111B950", Offset = "0x111B950", VA = "0x111B950")]
			get
			{
				return default(Reactive<string>);
			}
		}

		[Token(Token = "0x6000EEF")]
		[Address(RVA = "0x111B9A4", Offset = "0x111B9A4", VA = "0x111B9A4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000EF0")]
		[Address(RVA = "0x111BAA4", Offset = "0x111BAA4", VA = "0x111BAA4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000EF1")]
		[Address(RVA = "0x111BAB0", Offset = "0x111BAB0", VA = "0x111BAB0")]
		private void OnUser(IUser user)
		{
		}

		[Token(Token = "0x6000EF2")]
		[Address(RVA = "0x111BC64", Offset = "0x111BC64", VA = "0x111BC64")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xBDF218", Offset = "0xBDF218")]
		private Task SetAvatarImageAsync(string url)
		{
			return null;
		}

		[Token(Token = "0x6000EF3")]
		[Address(RVA = "0x111BD74", Offset = "0x111BD74", VA = "0x111BD74")]
		public ProfileAvatar()
		{
		}
	}
	[Token(Token = "0x2000512")]
	public class QuantumReadDataSource : MonoBehaviour
	{
		[Token(Token = "0x4000D82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private EntityView dataSourceView;

		[Token(Token = "0x4000D83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private string sourceVariable;

		[Token(Token = "0x4000D84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private bool convertToString;

		[Token(Token = "0x4000D85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private BoundValue<EntityRef> entityRef;

		[Token(Token = "0x4000D86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private readonly ReactiveSource<bool> _dataBool;

		[Token(Token = "0x4000D87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private readonly ReactiveSource<float> _dataFloat;

		[Token(Token = "0x4000D88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private readonly ReactiveSource<int> _dataInt;

		[Token(Token = "0x4000D89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private readonly ReactiveSource<string> _dataText;

		[Token(Token = "0x4000D8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private readonly ReactiveSource<Vector3> _dataVector3;

		[Token(Token = "0x4000D8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD31C8", Offset = "0xBD31C8")]
		private readonly Reactive<bool> <DataBool>k__BackingField;

		[Token(Token = "0x4000D8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD31D8", Offset = "0xBD31D8")]
		private readonly Reactive<int> <DataInt>k__BackingField;

		[Token(Token = "0x4000D8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD31E8", Offset = "0xBD31E8")]
		private readonly Reactive<float> <DataFloat>k__BackingField;

		[Token(Token = "0x4000D8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD31F8", Offset = "0xBD31F8")]
		private readonly Reactive<Vector3> <DataVector3>k__BackingField;

		[Token(Token = "0x4000D8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD3208", Offset = "0xBD3208")]
		private readonly Reactive<string> <Text>k__BackingField;

		[Token(Token = "0x17000284")]
		public Reactive<bool> DataBool
		{
			[Token(Token = "0x6000EF7")]
			[Address(RVA = "0x124BA58", Offset = "0x124BA58", VA = "0x124BA58")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDF288", Offset = "0xBDF288")]
			get
			{
				return default(Reactive<bool>);
			}
		}

		[Token(Token = "0x17000285")]
		public Reactive<int> DataInt
		{
			[Token(Token = "0x6000EF8")]
			[Address(RVA = "0x124BA60", Offset = "0x124BA60", VA = "0x124BA60")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDF298", Offset = "0xBDF298")]
			get
			{
				return default(Reactive<int>);
			}
		}

		[Token(Token = "0x17000286")]
		public Reactive<float> DataFloat
		{
			[Token(Token = "0x6000EF9")]
			[Address(RVA = "0x124BA68", Offset = "0x124BA68", VA = "0x124BA68")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDF2A8", Offset = "0xBDF2A8")]
			get
			{
				return default(Reactive<float>);
			}
		}

		[Token(Token = "0x17000287")]
		public Reactive<Vector3> DataVector3
		{
			[Token(Token = "0x6000EFA")]
			[Address(RVA = "0x124BA70", Offset = "0x124BA70", VA = "0x124BA70")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDF2B8", Offset = "0xBDF2B8")]
			get
			{
				return default(Reactive<Vector3>);
			}
		}

		[Token(Token = "0x17000288")]
		public Reactive<string> Text
		{
			[Token(Token = "0x6000EFB")]
			[Address(RVA = "0x124BA78", Offset = "0x124BA78", VA = "0x124BA78")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDF2C8", Offset = "0xBDF2C8")]
			get
			{
				return default(Reactive<string>);
			}
		}

		[Token(Token = "0x6000EF6")]
		[Address(RVA = "0x124B720", Offset = "0x124B720", VA = "0x124B720")]
		public QuantumReadDataSource()
		{
		}

		[Token(Token = "0x6000EFC")]
		[Address(RVA = "0x124BA80", Offset = "0x124BA80", VA = "0x124BA80")]
		private void Update()
		{
		}
	}
	[Token(Token = "0x2000513")]
	public class Quit : MonoBehaviour
	{
		[Token(Token = "0x6000EFD")]
		[Address(RVA = "0x1253C20", Offset = "0x1253C20", VA = "0x1253C20")]
		public void QuitGame()
		{
		}

		[Token(Token = "0x6000EFE")]
		[Address(RVA = "0x1253C28", Offset = "0x1253C28", VA = "0x1253C28")]
		public Quit()
		{
		}
	}
	[Token(Token = "0x2000514")]
	public class QuitHandler : MonoBehaviour
	{
		[Token(Token = "0x4000D90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private UnityEvent onUserQuit;

		[Token(Token = "0x4000D91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private UnityEvent onDisconnected;

		[Token(Token = "0x4000D92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private UnityEvent onKick;

		[Token(Token = "0x4000D93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private UnityEvent onPartyChange;

		[Token(Token = "0x4000D94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private ReactiveSubscription _subscription;

		[Token(Token = "0x6000EFF")]
		[Address(RVA = "0x1253C30", Offset = "0x1253C30", VA = "0x1253C30")]
		private void Start()
		{
		}

		[Token(Token = "0x6000F00")]
		[Address(RVA = "0x1253D38", Offset = "0x1253D38", VA = "0x1253D38")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000F01")]
		[Address(RVA = "0x1253D68", Offset = "0x1253D68", VA = "0x1253D68")]
		private void QuitToMenu(QuitReason? reason)
		{
		}

		[Token(Token = "0x6000F02")]
		[Address(RVA = "0x1253E8C", Offset = "0x1253E8C", VA = "0x1253E8C")]
		public QuitHandler()
		{
		}
	}
	[Token(Token = "0x2000515")]
	public class ReactiveGroupStatus : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000516")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBC9C20", Offset = "0xBC9C20")]
		private sealed class <>c
		{
			[Token(Token = "0x4000D96")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000D97")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<GetOwnGroupStatusResult?, bool> <>9__4_0;

			[Token(Token = "0x6000F0A")]
			[Address(RVA = "0x105D37C", Offset = "0x105D37C", VA = "0x105D37C")]
			public <>c()
			{
			}

			[Token(Token = "0x6000F0B")]
			[Address(RVA = "0x105D384", Offset = "0x105D384", VA = "0x105D384")]
			internal bool <get_HasValidUpdate>b__4_0(GetOwnGroupStatusResult? x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000D95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool _hasFirstUpdate;

		[Token(Token = "0x17000289")]
		public Reactive<GetOwnGroupStatusResult?> OwnGroupStatus
		{
			[Token(Token = "0x6000F03")]
			[Address(RVA = "0x125538C", Offset = "0x125538C", VA = "0x125538C")]
			get
			{
				return default(Reactive<GetOwnGroupStatusResult?>);
			}
		}

		[Token(Token = "0x1700028A")]
		public Reactive<bool> HasValidUpdate
		{
			[Token(Token = "0x6000F04")]
			[Address(RVA = "0x12553E8", Offset = "0x12553E8", VA = "0x12553E8")]
			get
			{
				return default(Reactive<bool>);
			}
		}

		[Token(Token = "0x1700028B")]
		public Reactive<bool> HasFirstValidUpdate
		{
			[Token(Token = "0x6000F05")]
			[Address(RVA = "0x125553C", Offset = "0x125553C", VA = "0x125553C")]
			get
			{
				return default(Reactive<bool>);
			}
		}

		[Token(Token = "0x6000F06")]
		[Address(RVA = "0x12555F8", Offset = "0x12555F8", VA = "0x12555F8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000F07")]
		[Address(RVA = "0x1255600", Offset = "0x1255600", VA = "0x1255600")]
		public ReactiveGroupStatus()
		{
		}

		[Token(Token = "0x6000F08")]
		[Address(RVA = "0x1255608", Offset = "0x1255608", VA = "0x1255608")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDF2D8", Offset = "0xBDF2D8")]
		private bool <get_HasFirstValidUpdate>b__6_0(bool x)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000517")]
	public class RectScrollController : MonoBehaviour
	{
		[Token(Token = "0x4000D98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private ScrollRect scrollRect;

		[Token(Token = "0x4000D99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float snapAnimationTime;

		[Token(Token = "0x4000D9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AnimationCurve snapAnimationCurve;

		[Token(Token = "0x4000D9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private ReactiveSubscription _subscription;

		[Token(Token = "0x4000D9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Transform _targetTransform;

		[Token(Token = "0x4000D9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float _startingPosition;

		[Token(Token = "0x4000D9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float _targetPosition;

		[Token(Token = "0x4000D9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float _elapsedTime;

		[Token(Token = "0x1700028C")]
		public Transform ContentTransform
		{
			[Token(Token = "0x6000F0C")]
			[Address(RVA = "0x125A718", Offset = "0x125A718", VA = "0x125A718")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F0D")]
		[Address(RVA = "0x125A7A0", Offset = "0x125A7A0", VA = "0x125A7A0")]
		private void Update()
		{
		}

		[Token(Token = "0x6000F0E")]
		[Address(RVA = "0x125A92C", Offset = "0x125A92C", VA = "0x125A92C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000F0F")]
		[Address(RVA = "0x125A934", Offset = "0x125A934", VA = "0x125A934")]
		public void SkipAnimation()
		{
		}

		[Token(Token = "0x6000F10")]
		[Address(RVA = "0x125A99C", Offset = "0x125A99C", VA = "0x125A99C")]
		public void SetNewTarget(int childIndex)
		{
		}

		[Token(Token = "0x6000F11")]
		[Address(RVA = "0x125AAF0", Offset = "0x125AAF0", VA = "0x125AAF0")]
		public RectScrollController()
		{
		}
	}
	[Token(Token = "0x2000518")]
	public class RemotePlayerUI : MonoBehaviour
	{
		[Token(Token = "0x4000DA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Cortopia.Scripts.Players.Player player;

		[Token(Token = "0x4000DA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private DisplayPlayerName playerNameField;

		[Token(Token = "0x4000DA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private ReactiveSubscription _playerRefSubscription;

		[Token(Token = "0x4000DA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private PlayerRef? _playerRefToSetName;

		[Token(Token = "0x1700028D")]
		public Cortopia.Scripts.Players.Player Player
		{
			[Token(Token = "0x6000F12")]
			[Address(RVA = "0x11F0350", Offset = "0x11F0350", VA = "0x11F0350")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F13")]
		[Address(RVA = "0x11F0358", Offset = "0x11F0358", VA = "0x11F0358")]
		private void Update()
		{
		}

		[Token(Token = "0x6000F14")]
		[Address(RVA = "0x11F04FC", Offset = "0x11F04FC", VA = "0x11F04FC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000F15")]
		[Address(RVA = "0x11F05F0", Offset = "0x11F05F0", VA = "0x11F05F0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000F16")]
		[Address(RVA = "0x11F05FC", Offset = "0x11F05FC", VA = "0x11F05FC")]
		public RemotePlayerUI()
		{
		}

		[Token(Token = "0x6000F17")]
		[Address(RVA = "0x11F0604", Offset = "0x11F0604", VA = "0x11F0604")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDF2E8", Offset = "0xBDF2E8")]
		private void <OnEnable>b__7_0(PlayerRef playerRef)
		{
		}
	}
	[Token(Token = "0x2000519")]
	public class RespawnPrompt : MonoBehaviour
	{
		[Token(Token = "0x4000DA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject root;

		[Token(Token = "0x6000F18")]
		[Address(RVA = "0x11F2184", Offset = "0x11F2184", VA = "0x11F2184")]
		private void Update()
		{
		}

		[Token(Token = "0x6000F19")]
		[Address(RVA = "0x11F2320", Offset = "0x11F2320", VA = "0x11F2320")]
		public RespawnPrompt()
		{
		}
	}
	[Token(Token = "0x200051A")]
	public class RoundEndIcon : MonoBehaviour
	{
		[Token(Token = "0x4000DA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private BoundValue<RoundResult[]> roundResults;

		[Token(Token = "0x4000DA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private int iconIndex;

		[Token(Token = "0x4000DA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly ReactiveSource<RoundEndReason?> _roundEndReason;

		[Token(Token = "0x4000DA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly ReactiveSource<Quantum.Team> _winningTeam;

		[Token(Token = "0x4000DA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool _doSubscribe;

		[Token(Token = "0x4000DAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private ReactiveSubscription _subscription;

		[Token(Token = "0x4000DAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD32D8", Offset = "0xBD32D8")]
		private readonly Reactive<Quantum.Team> <Winner>k__BackingField;

		[Token(Token = "0x4000DAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD32E8", Offset = "0xBD32E8")]
		private readonly Reactive<RoundEndReason?> <Reason>k__BackingField;

		[Token(Token = "0x1700028E")]
		public Reactive<Quantum.Team> Winner
		{
			[Token(Token = "0x6000F1B")]
			[Address(RVA = "0x11F3FDC", Offset = "0x11F3FDC", VA = "0x11F3FDC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDF2F8", Offset = "0xBDF2F8")]
			get
			{
				return default(Reactive<Quantum.Team>);
			}
		}

		[Token(Token = "0x1700028F")]
		public Reactive<RoundEndReason?> Reason
		{
			[Token(Token = "0x6000F1C")]
			[Address(RVA = "0x11F3FE4", Offset = "0x11F3FE4", VA = "0x11F3FE4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDF308", Offset = "0xBDF308")]
			get
			{
				return default(Reactive<RoundEndReason?>);
			}
		}

		[Token(Token = "0x6000F1A")]
		[Address(RVA = "0x11F3E78", Offset = "0x11F3E78", VA = "0x11F3E78")]
		private RoundEndIcon()
		{
		}

		[Token(Token = "0x6000F1D")]
		[Address(RVA = "0x11F3FEC", Offset = "0x11F3FEC", VA = "0x11F3FEC")]
		private void Update()
		{
		}

		[Token(Token = "0x6000F1E")]
		[Address(RVA = "0x11F40E4", Offset = "0x11F40E4", VA = "0x11F40E4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000F1F")]
		[Address(RVA = "0x11F40F0", Offset = "0x11F40F0", VA = "0x11F40F0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000F20")]
		[Address(RVA = "0x11F4104", Offset = "0x11F4104", VA = "0x11F4104")]
		private void UpdateInfo(RoundResult[] obj)
		{
		}

		[Token(Token = "0x6000F21")]
		[Address(RVA = "0x11F4244", Offset = "0x11F4244", VA = "0x11F4244")]
		public void SetIconIndex(int idx)
		{
		}
	}
	[Token(Token = "0x200051B")]
	public class SchematicManager
	{
		[Token(Token = "0x4000DAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly ReactiveSource<HandButton> _leftSchematicSource;

		[Token(Token = "0x4000DAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly ReactiveSource<HandButton> _rightSchematicSource;

		[Token(Token = "0x4000DAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly Dictionary<HandButton, int> _leftDisplayCount;

		[Token(Token = "0x4000DB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly Dictionary<HandButton, int> _rightDisplayCount;

		[Token(Token = "0x4000DB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD32F8", Offset = "0xBD32F8")]
		private readonly Reactive<HandButton> <LeftSchematics>k__BackingField;

		[Token(Token = "0x4000DB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD3308", Offset = "0xBD3308")]
		private readonly Reactive<HandButton> <RightSchematics>k__BackingField;

		[Token(Token = "0x17000290")]
		public Reactive<HandButton> LeftSchematics
		{
			[Token(Token = "0x6000F23")]
			[Address(RVA = "0x11F62D4", Offset = "0x11F62D4", VA = "0x11F62D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDF318", Offset = "0xBDF318")]
			get
			{
				return default(Reactive<HandButton>);
			}
		}

		[Token(Token = "0x17000291")]
		public Reactive<HandButton> RightSchematics
		{
			[Token(Token = "0x6000F24")]
			[Address(RVA = "0x11F62DC", Offset = "0x11F62DC", VA = "0x11F62DC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDF328", Offset = "0xBDF328")]
			get
			{
				return default(Reactive<HandButton>);
			}
		}

		[Token(Token = "0x6000F22")]
		[Address(RVA = "0x11F5E54", Offset = "0x11F5E54", VA = "0x11F5E54")]
		public SchematicManager()
		{
		}

		[Token(Token = "0x6000F25")]
		[Address(RVA = "0x11F62E4", Offset = "0x11F62E4", VA = "0x11F62E4")]
		public void ShowButtons(Side side, HandButton newButtons)
		{
		}

		[Token(Token = "0x6000F26")]
		[Address(RVA = "0x11F676C", Offset = "0x11F676C", VA = "0x11F676C")]
		public void HideButtons(Side side, HandButton newButtons)
		{
		}

		[Token(Token = "0x6000F27")]
		[Address(RVA = "0x11F62EC", Offset = "0x11F62EC", VA = "0x11F62EC")]
		private void IterateCountsAndUpdateValue(Side side, HandButton newButtons, int iterationAmount)
		{
		}
	}
	[Token(Token = "0x200051C")]
	public class SchematicRoundSetter : MonoBehaviour
	{
		[Token(Token = "0x4000DB3")]
		private const HandButton DisplayedButtons = HandButton.All;

		[Token(Token = "0x4000DB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Side side;

		[Token(Token = "0x4000DB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private bool _disabledOnceInRound;

		[Token(Token = "0x4000DB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
		private bool _shownOnceInRound;

		[Token(Token = "0x6000F28")]
		[Address(RVA = "0x11F6774", Offset = "0x11F6774", VA = "0x11F6774")]
		private void Update()
		{
		}

		[Token(Token = "0x6000F29")]
		[Address(RVA = "0x11F6A1C", Offset = "0x11F6A1C", VA = "0x11F6A1C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000F2A")]
		[Address(RVA = "0x11F6AB8", Offset = "0x11F6AB8", VA = "0x11F6AB8")]
		public SchematicRoundSetter()
		{
		}
	}
	[Token(Token = "0x200051D")]
	public class SchematicTutorialSetter : MonoBehaviour
	{
		[Token(Token = "0x4000DB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Side side;

		[Token(Token = "0x4000DB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		[Quantum.Inspector.EnumFlags]
		private HandButton buttons;

		[Token(Token = "0x6000F2B")]
		[Address(RVA = "0x11F6AC0", Offset = "0x11F6AC0", VA = "0x11F6AC0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000F2C")]
		[Address(RVA = "0x11F6BD8", Offset = "0x11F6BD8", VA = "0x11F6BD8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000F2D")]
		[Address(RVA = "0x11F6C54", Offset = "0x11F6C54", VA = "0x11F6C54")]
		public SchematicTutorialSetter()
		{
		}
	}
	[Token(Token = "0x200051E")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xBC9C30", Offset = "0xBC9C30")]
	public class ScrollRectDragConnector : MonoBehaviour
	{
		[Token(Token = "0x6000F2E")]
		[Address(RVA = "0x11F6F60", Offset = "0x11F6F60", VA = "0x11F6F60")]
		private void Start()
		{
		}

		[Token(Token = "0x6000F2F")]
		[Address(RVA = "0x11F7074", Offset = "0x11F7074", VA = "0x11F7074")]
		public ScrollRectDragConnector()
		{
		}
	}
	[Token(Token = "0x200051F")]
	public class SetHFSMIntCommand : MonoBehaviour
	{
		[Token(Token = "0x4000DB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private BoundValue<EntityRef> entityRef;

		[Token(Token = "0x4000DBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private EntityView hfsmEntityView;

		[Token(Token = "0x4000DBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private string variableName;

		[Token(Token = "0x4000DBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private int variableValue;

		[Token(Token = "0x6000F30")]
		[Address(RVA = "0x11F7A2C", Offset = "0x11F7A2C", VA = "0x11F7A2C")]
		public void SendCommand()
		{
		}

		[Token(Token = "0x6000F31")]
		[Address(RVA = "0x11F7C5C", Offset = "0x11F7C5C", VA = "0x11F7C5C")]
		public SetHFSMIntCommand()
		{
		}
	}
	[Token(Token = "0x2000520")]
	public class SetLocalPlayerReady : MonoBehaviour
	{
		[Token(Token = "0x4000DBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool _ready;

		[Token(Token = "0x6000F32")]
		[Address(RVA = "0x11F7CFC", Offset = "0x11F7CFC", VA = "0x11F7CFC")]
		public void ToggleReady()
		{
		}

		[Token(Token = "0x6000F33")]
		[Address(RVA = "0x11F7E94", Offset = "0x11F7E94", VA = "0x11F7E94")]
		public SetLocalPlayerReady()
		{
		}
	}
	[Token(Token = "0x2000521")]
	public class SettingsMenu : MonoBehaviour
	{
		[Token(Token = "0x4000DBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool _shouldShowHUD;

		[Token(Token = "0x17000292")]
		public Reactive<float> NormalizedHUDVerticalScale
		{
			[Token(Token = "0x6000F34")]
			[Address(RVA = "0x11F80FC", Offset = "0x11F80FC", VA = "0x11F80FC")]
			get
			{
				return default(Reactive<float>);
			}
		}

		[Token(Token = "0x17000293")]
		public Reactive<float> NormalizedHUDDistance
		{
			[Token(Token = "0x6000F35")]
			[Address(RVA = "0x11F81C0", Offset = "0x11F81C0", VA = "0x11F81C0")]
			get
			{
				return default(Reactive<float>);
			}
		}

		[Token(Token = "0x17000294")]
		public Reactive<float> NormalizedHUDHeight
		{
			[Token(Token = "0x6000F36")]
			[Address(RVA = "0x11F8284", Offset = "0x11F8284", VA = "0x11F8284")]
			get
			{
				return default(Reactive<float>);
			}
		}

		[Token(Token = "0x17000295")]
		public Reactive<float> MusicVolume
		{
			[Token(Token = "0x6000F37")]
			[Address(RVA = "0x11F8348", Offset = "0x11F8348", VA = "0x11F8348")]
			get
			{
				return default(Reactive<float>);
			}
		}

		[Token(Token = "0x17000296")]
		public Reactive<float> EffectsVolume
		{
			[Token(Token = "0x6000F38")]
			[Address(RVA = "0x11F840C", Offset = "0x11F840C", VA = "0x11F840C")]
			get
			{
				return default(Reactive<float>);
			}
		}

		[Token(Token = "0x17000297")]
		public Reactive<float> VoiceChatVolume
		{
			[Token(Token = "0x6000F39")]
			[Address(RVA = "0x11F84D0", Offset = "0x11F84D0", VA = "0x11F84D0")]
			get
			{
				return default(Reactive<float>);
			}
		}

		[Token(Token = "0x17000298")]
		public ReactiveSource<bool> ShowSubtitles
		{
			[Token(Token = "0x6000F3A")]
			[Address(RVA = "0x11F8594", Offset = "0x11F8594", VA = "0x11F8594")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000299")]
		public ReactiveSource<bool> ShowControlsInGame
		{
			[Token(Token = "0x6000F3B")]
			[Address(RVA = "0x11F8664", Offset = "0x11F8664", VA = "0x11F8664")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F3C")]
		[Address(RVA = "0x11F8734", Offset = "0x11F8734", VA = "0x11F8734")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000F3D")]
		[Address(RVA = "0x11F87AC", Offset = "0x11F87AC", VA = "0x11F87AC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000F3E")]
		[Address(RVA = "0x11F8820", Offset = "0x11F8820", VA = "0x11F8820")]
		public void SetHUDDistance(float normalizedValue)
		{
		}

		[Token(Token = "0x6000F3F")]
		[Address(RVA = "0x11F88A4", Offset = "0x11F88A4", VA = "0x11F88A4")]
		public void SetHUDScale(float normalizedValue)
		{
		}

		[Token(Token = "0x6000F40")]
		[Address(RVA = "0x11F8928", Offset = "0x11F8928", VA = "0x11F8928")]
		public void SetHUDHeight(float normalizedValue)
		{
		}

		[Token(Token = "0x6000F41")]
		[Address(RVA = "0x11F89AC", Offset = "0x11F89AC", VA = "0x11F89AC")]
		public void SetShowSubtitles(bool subtitlesOn)
		{
		}

		[Token(Token = "0x6000F42")]
		[Address(RVA = "0x11F8A20", Offset = "0x11F8A20", VA = "0x11F8A20")]
		public void SetShowControlsInGame(bool controlsOn)
		{
		}

		[Token(Token = "0x6000F43")]
		[Address(RVA = "0x11F8A94", Offset = "0x11F8A94", VA = "0x11F8A94")]
		public void SetMusicVolume(float value)
		{
		}

		[Token(Token = "0x6000F44")]
		[Address(RVA = "0x11F8B18", Offset = "0x11F8B18", VA = "0x11F8B18")]
		public void SetEffectsVolume(float value)
		{
		}

		[Token(Token = "0x6000F45")]
		[Address(RVA = "0x11F8B9C", Offset = "0x11F8B9C", VA = "0x11F8B9C")]
		public void SetVoiceChatVolume(float value)
		{
		}

		[Token(Token = "0x6000F46")]
		[Address(RVA = "0x11F8C20", Offset = "0x11F8C20", VA = "0x11F8C20")]
		public void RemeasureHeight()
		{
		}

		[Token(Token = "0x6000F47")]
		[Address(RVA = "0x11F8C94", Offset = "0x11F8C94", VA = "0x11F8C94")]
		public void ForceShowHUD(bool shouldShow)
		{
		}

		[Token(Token = "0x6000F48")]
		[Address(RVA = "0x11F8D50", Offset = "0x11F8D50", VA = "0x11F8D50")]
		public SettingsMenu()
		{
		}
	}
	[Token(Token = "0x2000522")]
	public class SpellEffectOutlineController : MonoBehaviour
	{
		[Token(Token = "0x4000DBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private EntityView entityView;

		[Token(Token = "0x4000DC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private OutlineHandler outlineHandler;

		[Token(Token = "0x6000F49")]
		[Address(RVA = "0x1204E3C", Offset = "0x1204E3C", VA = "0x1204E3C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000F4A")]
		[Address(RVA = "0x1204E94", Offset = "0x1204E94", VA = "0x1204E94")]
		private OutlineType GetOutlineType()
		{
			return default(OutlineType);
		}

		[Token(Token = "0x6000F4B")]
		[Address(RVA = "0x1205064", Offset = "0x1205064", VA = "0x1205064")]
		public SpellEffectOutlineController()
		{
		}
	}
	[Token(Token = "0x2000523")]
	public class SpellIconStatus : MonoBehaviour
	{
		[Token(Token = "0x4000DC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Side hand;

		[Token(Token = "0x4000DC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private WandSlotType slot;

		[Token(Token = "0x4000DC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject root;

		[Token(Token = "0x4000DC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly ReactiveSource<float> _cooldownChargeSource;

		[Token(Token = "0x4000DC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly ReactiveSource<bool> _isChargingSource;

		[Token(Token = "0x4000DC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private readonly ReactiveSource<bool> _hasCooldown;

		[Token(Token = "0x4000DC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private readonly ReactiveSource<bool> _isSpellActiveSource;

		[Token(Token = "0x4000DC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private readonly ReactiveSource<SpellElement> _spellElementSource;

		[Token(Token = "0x4000DC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private readonly ReactiveSource<Sprite> _spellIconSource;

		[Token(Token = "0x4000DCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private AssetGuid _currentlyShownSpell;

		[Token(Token = "0x4000DCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private FP _currentMaxChargeTime;

		[Token(Token = "0x4000DCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD3400", Offset = "0xBD3400")]
		private readonly Reactive<SpellElement> <CurrentSpellElement>k__BackingField;

		[Token(Token = "0x4000DCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD3410", Offset = "0xBD3410")]
		private readonly Reactive<Sprite> <SpellIcon>k__BackingField;

		[Token(Token = "0x4000DCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD3420", Offset = "0xBD3420")]
		private readonly Reactive<bool> <IsCharging>k__BackingField;

		[Token(Token = "0x4000DCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD3430", Offset = "0xBD3430")]
		private readonly Reactive<bool> <HasCooldown>k__BackingField;

		[Token(Token = "0x4000DD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD3440", Offset = "0xBD3440")]
		private readonly Reactive<float> <SpellCooldownCharge>k__BackingField;

		[Token(Token = "0x4000DD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD3450", Offset = "0xBD3450")]
		private readonly Reactive<bool> <IsSpellActive>k__BackingField;

		[Token(Token = "0x1700029A")]
		public Reactive<SpellElement> CurrentSpellElement
		{
			[Token(Token = "0x6000F4D")]
			[Address(RVA = "0x1145420", Offset = "0x1145420", VA = "0x1145420")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDF338", Offset = "0xBDF338")]
			get
			{
				return default(Reactive<SpellElement>);
			}
		}

		[Token(Token = "0x1700029B")]
		public Reactive<Sprite> SpellIcon
		{
			[Token(Token = "0x6000F4E")]
			[Address(RVA = "0x1145428", Offset = "0x1145428", VA = "0x1145428")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDF348", Offset = "0xBDF348")]
			get
			{
				return default(Reactive<Sprite>);
			}
		}

		[Token(Token = "0x1700029C")]
		public Reactive<bool> IsCharging
		{
			[Token(Token = "0x6000F4F")]
			[Address(RVA = "0x1145430", Offset = "0x1145430", VA = "0x1145430")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDF358", Offset = "0xBDF358")]
			get
			{
				return default(Reactive<bool>);
			}
		}

		[Token(Token = "0x1700029D")]
		public Reactive<bool> HasCooldown
		{
			[Token(Token = "0x6000F50")]
			[Address(RVA = "0x1145438", Offset = "0x1145438", VA = "0x1145438")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDF368", Offset = "0xBDF368")]
			get
			{
				return default(Reactive<bool>);
			}
		}

		[Token(Token = "0x1700029E")]
		public Reactive<float> SpellCooldownCharge
		{
			[Token(Token = "0x6000F51")]
			[Address(RVA = "0x1145440", Offset = "0x1145440", VA = "0x1145440")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDF378", Offset = "0xBDF378")]
			get
			{
				return default(Reactive<float>);
			}
		}

		[Token(Token = "0x1700029F")]
		public Reactive<bool> IsSpellActive
		{
			[Token(Token = "0x6000F52")]
			[Address(RVA = "0x1145448", Offset = "0x1145448", VA = "0x1145448")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDF388", Offset = "0xBDF388")]
			get
			{
				return default(Reactive<bool>);
			}
		}

		[Token(Token = "0x6000F4C")]
		[Address(RVA = "0x1145114", Offset = "0x1145114", VA = "0x1145114")]
		public SpellIconStatus()
		{
		}

		[Token(Token = "0x6000F53")]
		[Address(RVA = "0x1145450", Offset = "0x1145450", VA = "0x1145450")]
		private void Update()
		{
		}

		[Token(Token = "0x6000F54")]
		[Address(RVA = "0x1145920", Offset = "0x1145920", VA = "0x1145920")]
		private void AssignNewSpell(SpellSetupAsset spellSetupAsset)
		{
		}
	}
	[Token(Token = "0x2000524")]
	public class SpellPickerReady : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000525")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBC9C90", Offset = "0xBC9C90")]
		private sealed class <>c
		{
			[Token(Token = "0x4000DD9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000DDA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<bool, bool> <>9__14_0;

			[Token(Token = "0x6000F5D")]
			[Address(RVA = "0x1061DC0", Offset = "0x1061DC0", VA = "0x1061DC0")]
			public <>c()
			{
			}

			[Token(Token = "0x6000F5E")]
			[Address(RVA = "0x1061DC8", Offset = "0x1061DC8", VA = "0x1061DC8")]
			internal bool <get_LocalSpellPickerNotReady>b__14_0(bool x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000DD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private LocalizedString readyUpText;

		[Token(Token = "0x4000DD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private LocalizedString readyUpTextSolo;

		[Token(Token = "0x4000DD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private LocalizedString readyText;

		[Token(Token = "0x4000DD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private LocalizedString readyTextSolo;

		[Token(Token = "0x4000DD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private readonly ReactiveSource<bool> _allSpellPickersReady;

		[Token(Token = "0x4000DD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private readonly ReactiveSource<LocalizedString> _currentText;

		[Token(Token = "0x4000DD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private readonly ReactiveSource<bool> _localSpellPickerReady;

		[Token(Token = "0x170002A0")]
		public Reactive<LocalizedString> CurrentText
		{
			[Token(Token = "0x6000F55")]
			[Address(RVA = "0x1146A3C", Offset = "0x1146A3C", VA = "0x1146A3C")]
			get
			{
				return default(Reactive<LocalizedString>);
			}
		}

		[Token(Token = "0x170002A1")]
		public Reactive<bool> AllSpellPickersReady
		{
			[Token(Token = "0x6000F56")]
			[Address(RVA = "0x1146A90", Offset = "0x1146A90", VA = "0x1146A90")]
			get
			{
				return default(Reactive<bool>);
			}
		}

		[Token(Token = "0x170002A2")]
		public Reactive<bool> LocalSpellPickerReady
		{
			[Token(Token = "0x6000F57")]
			[Address(RVA = "0x1146AE4", Offset = "0x1146AE4", VA = "0x1146AE4")]
			get
			{
				return default(Reactive<bool>);
			}
		}

		[Token(Token = "0x170002A3")]
		public Reactive<bool> LocalSpellPickerNotReady
		{
			[Token(Token = "0x6000F58")]
			[Address(RVA = "0x1146B38", Offset = "0x1146B38", VA = "0x1146B38")]
			get
			{
				return default(Reactive<bool>);
			}
		}

		[Token(Token = "0x6000F59")]
		[Address(RVA = "0x1146C84", Offset = "0x1146C84", VA = "0x1146C84")]
		private void Update()
		{
		}

		[Token(Token = "0x6000F5A")]
		[Address(RVA = "0x11470FC", Offset = "0x11470FC", VA = "0x11470FC")]
		public void SetReady()
		{
		}

		[Token(Token = "0x6000F5B")]
		[Address(RVA = "0x11471A0", Offset = "0x11471A0", VA = "0x11471A0")]
		public SpellPickerReady()
		{
		}
	}
	[Token(Token = "0x2000526")]
	public abstract class SpellWandUI : MonoBehaviour
	{
		[Token(Token = "0x4000DDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private XRNode _hand;

		[Token(Token = "0x4000DDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Cortopia.Scripts.Players.Player _player;

		[Token(Token = "0x170002A4")]
		private Cortopia.Scripts.Players.Player RealPlayer
		{
			[Token(Token = "0x6000F5F")]
			[Address(RVA = "0x1148BD0", Offset = "0x1148BD0", VA = "0x1148BD0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F60")]
		[Address(RVA = "0x1148CBC", Offset = "0x1148CBC", VA = "0x1148CBC")]
		private void Update()
		{
		}

		[Token(Token = "0x6000F61")]
		[Address(RVA = "0x1148F28", Offset = "0x1148F28", VA = "0x1148F28")]
		public void AssignPlayer(Cortopia.Scripts.Players.Player player, XRNode hand)
		{
		}

		[Token(Token = "0x6000F62")]
		protected abstract void ConfigureUIOnWand(XRNode hand);

		[Token(Token = "0x6000F63")]
		protected abstract void UpdateUI(Frame frame, WandSpells wandSpells, SpellCaster spellCaster);

		[Token(Token = "0x6000F64")]
		[Address(RVA = "0x1148F44", Offset = "0x1148F44", VA = "0x1148F44")]
		protected SpellWandUI()
		{
		}
	}
	[Token(Token = "0x2000527")]
	public class StatusEffectBar : MonoBehaviour
	{
		[Token(Token = "0x4000DDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private BoundValue<Cortopia.Scripts.Players.Player> player;

		[Token(Token = "0x4000DDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private StatusEffectUI templateStatusEffect;

		[Token(Token = "0x4000DDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly ReactiveSource<bool> _hasStatusEffects;

		[Token(Token = "0x4000DE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly Dictionary<EntityRef, StatusEffectUI> _instantiatedIcons;

		[Token(Token = "0x4000DE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD34C0", Offset = "0xBD34C0")]
		private readonly Reactive<bool> <HasStatusEffects>k__BackingField;

		[Token(Token = "0x170002A5")]
		[AttributeAttribute(Name = "UsedImplicitlyAttribute", RVA = "0xBE5828", Offset = "0xBE5828")]
		public Reactive<bool> HasStatusEffects
		{
			[Token(Token = "0x6000F66")]
			[Address(RVA = "0x114A8A4", Offset = "0x114A8A4", VA = "0x114A8A4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDF398", Offset = "0xBDF398")]
			get
			{
				return default(Reactive<bool>);
			}
		}

		[Token(Token = "0x6000F65")]
		[Address(RVA = "0x114A790", Offset = "0x114A790", VA = "0x114A790")]
		private StatusEffectBar()
		{
		}

		[Token(Token = "0x6000F67")]
		[Address(RVA = "0x114A8AC", Offset = "0x114A8AC", VA = "0x114A8AC")]
		private void Update()
		{
		}

		[Token(Token = "0x6000F68")]
		[Address(RVA = "0x114B03C", Offset = "0x114B03C", VA = "0x114B03C")]
		private void ClearDictionary()
		{
		}
	}
	[Token(Token = "0x2000528")]
	public class StatusEffectUI : MonoBehaviour
	{
		[Token(Token = "0x4000DE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "EnumArrayAttribute", RVA = "0xBD34D0", Offset = "0xBD34D0")]
		[SerializeField]
		private Sprite[] statusEffectSprites;

		[Token(Token = "0x4000DE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly ReactiveSource<Sprite> _effectSprite;

		[Token(Token = "0x4000DE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly ReactiveSource<float> _normalizedDuration;

		[Token(Token = "0x4000DE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly ReactiveSource<bool> _ignoreTime;

		[Token(Token = "0x4000DE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private readonly ReactiveSource<bool> _isStatusNegative;

		[Token(Token = "0x4000DE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private StatusEffect _effectType;

		[Token(Token = "0x4000DE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private FP _totalDuration;

		[Token(Token = "0x170002A6")]
		public Reactive<Sprite> EffectSprite
		{
			[Token(Token = "0x6000F69")]
			[Address(RVA = "0x114B3AC", Offset = "0x114B3AC", VA = "0x114B3AC")]
			get
			{
				return default(Reactive<Sprite>);
			}
		}

		[Token(Token = "0x170002A7")]
		public Reactive<float> NormalizedDuration
		{
			[Token(Token = "0x6000F6A")]
			[Address(RVA = "0x114B400", Offset = "0x114B400", VA = "0x114B400")]
			get
			{
				return default(Reactive<float>);
			}
		}

		[Token(Token = "0x170002A8")]
		public Reactive<bool> IsStatusNegative
		{
			[Token(Token = "0x6000F6B")]
			[Address(RVA = "0x114B454", Offset = "0x114B454", VA = "0x114B454")]
			get
			{
				return default(Reactive<bool>);
			}
		}

		[Token(Token = "0x170002A9")]
		public Reactive<bool> IgnoreTime
		{
			[Token(Token = "0x6000F6C")]
			[Address(RVA = "0x114B4A8", Offset = "0x114B4A8", VA = "0x114B4A8")]
			get
			{
				return default(Reactive<bool>);
			}
		}

		[Token(Token = "0x6000F6D")]
		[Address(RVA = "0x114B1F8", Offset = "0x114B1F8", VA = "0x114B1F8")]
		public void InitializeEffect(FP totalDuration, StatusEffect type, bool ignoreTime)
		{
		}

		[Token(Token = "0x6000F6E")]
		[Address(RVA = "0x114B2A4", Offset = "0x114B2A4", VA = "0x114B2A4")]
		public void UpdateData(FP duration)
		{
		}

		[Token(Token = "0x6000F6F")]
		[Address(RVA = "0x114B64C", Offset = "0x114B64C", VA = "0x114B64C")]
		private void CalculateNormalizedDuration(FP currentDuration)
		{
		}

		[Token(Token = "0x6000F70")]
		[Address(RVA = "0x114B4FC", Offset = "0x114B4FC", VA = "0x114B4FC")]
		private void SetSpriteData(StatusEffect effectType)
		{
		}

		[Token(Token = "0x6000F71")]
		[Address(RVA = "0x114B6D8", Offset = "0x114B6D8", VA = "0x114B6D8")]
		public StatusEffectUI()
		{
		}
	}
	[Token(Token = "0x2000529")]
	public class SubWindowGroup : MonoBehaviour
	{
		[Token(Token = "0x4000DE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject[] subWindows;

		[Token(Token = "0x4000DEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private bool activateDefaultOnEnable;

		[Token(Token = "0x4000DEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly ReactiveSource<int> _activeSubWindow;

		[Token(Token = "0x4000DEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD3560", Offset = "0xBD3560")]
		private readonly Reactive<int> <ActiveSubWindow>k__BackingField;

		[Token(Token = "0x170002AA")]
		public Reactive<int> ActiveSubWindow
		{
			[Token(Token = "0x6000F73")]
			[Address(RVA = "0x114C938", Offset = "0x114C938", VA = "0x114C938")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDF3A8", Offset = "0xBDF3A8")]
			get
			{
				return default(Reactive<int>);
			}
		}

		[Token(Token = "0x6000F72")]
		[Address(RVA = "0x114C864", Offset = "0x114C864", VA = "0x114C864")]
		public SubWindowGroup()
		{
		}

		[Token(Token = "0x6000F74")]
		[Address(RVA = "0x114C940", Offset = "0x114C940", VA = "0x114C940")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000F75")]
		[Address(RVA = "0x114C954", Offset = "0x114C954", VA = "0x114C954")]
		public void ActivateSubWindow(int newWindowIndex)
		{
		}
	}
	[Token(Token = "0x200052A")]
	[AttributeAttribute(Name = "DefaultExecutionOrder", RVA = "0xBC9CA0", Offset = "0xBC9CA0")]
	public class Subtitles : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200052B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBC9CB4", Offset = "0xBC9CB4")]
		private sealed class <>c
		{
			[Token(Token = "0x4000DFB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000DFC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<SubtitleType, bool> <>9__23_0;

			[Token(Token = "0x6000F86")]
			[Address(RVA = "0x1062354", Offset = "0x1062354", VA = "0x1062354")]
			public <>c()
			{
			}

			[Token(Token = "0x6000F87")]
			[Address(RVA = "0x106235C", Offset = "0x106235C", VA = "0x106235C")]
			internal bool <get_HasSubtitle>b__23_0(SubtitleType x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000DED")]
		private const string SubtitleMarkerPrefix = "subtitle:";

		[Token(Token = "0x4000DEE")]
		private const string ImportantMarkerPrefix = "important:";

		[Token(Token = "0x4000DEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Action<EventInstance> NewEventAdded;

		[Token(Token = "0x4000DF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private LocalizedStringTable subtitlesTable;

		[Token(Token = "0x4000DF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly ReactiveTransaction _transaction;

		[Token(Token = "0x4000DF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly ReactiveSource<LocalizedString> _currentSubtitle;

		[Token(Token = "0x4000DF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly ReactiveSource<float> _currentStartTime;

		[Token(Token = "0x4000DF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private readonly ReactiveSource<int> _currentDuration;

		[Token(Token = "0x4000DF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private readonly ReactiveSource<string> _currentSpeaker;

		[Token(Token = "0x4000DF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private readonly ReactiveSource<SubtitleType> _hasSubtitle;

		[Token(Token = "0x4000DF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private readonly Dictionary<IntPtr, int> _soundDurations;

		[Token(Token = "0x4000DF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private GCHandle _subtitlesHandle;

		[Token(Token = "0x4000DF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private IntPtr _currentInstancePtr;

		[Token(Token = "0x4000DFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private EVENT_CALLBACK _voCallback;

		[Token(Token = "0x170002AB")]
		public Reactive<LocalizedString> CurrentSubtitle
		{
			[Token(Token = "0x6000F76")]
			[Address(RVA = "0x114CD10", Offset = "0x114CD10", VA = "0x114CD10")]
			get
			{
				return default(Reactive<LocalizedString>);
			}
		}

		[Token(Token = "0x170002AC")]
		public Reactive<float> CurrentStartTime
		{
			[Token(Token = "0x6000F77")]
			[Address(RVA = "0x114CD64", Offset = "0x114CD64", VA = "0x114CD64")]
			get
			{
				return default(Reactive<float>);
			}
		}

		[Token(Token = "0x170002AD")]
		public Reactive<int> CurrentDuration
		{
			[Token(Token = "0x6000F78")]
			[Address(RVA = "0x114CDB8", Offset = "0x114CDB8", VA = "0x114CDB8")]
			get
			{
				return default(Reactive<int>);
			}
		}

		[Token(Token = "0x170002AE")]
		public Reactive<string> CurrentSpeaker
		{
			[Token(Token = "0x6000F79")]
			[Address(RVA = "0x114CE0C", Offset = "0x114CE0C", VA = "0x114CE0C")]
			get
			{
				return default(Reactive<string>);
			}
		}

		[Token(Token = "0x170002AF")]
		public Reactive<bool> HasSubtitle
		{
			[Token(Token = "0x6000F7A")]
			[Address(RVA = "0x114CE60", Offset = "0x114CE60", VA = "0x114CE60")]
			get
			{
				return default(Reactive<bool>);
			}
		}

		[Token(Token = "0x6000F7B")]
		[Address(RVA = "0x114CFAC", Offset = "0x114CFAC", VA = "0x114CFAC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000F7C")]
		[Address(RVA = "0x114D024", Offset = "0x114D024", VA = "0x114D024")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000F7D")]
		[Address(RVA = "0x114D120", Offset = "0x114D120", VA = "0x114D120")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000F7E")]
		[Address(RVA = "0x114D284", Offset = "0x114D284", VA = "0x114D284")]
		public static void RegisterEventWithSubtitles(EventInstance eventInstance)
		{
		}

		[Token(Token = "0x6000F7F")]
		[Address(RVA = "0x114D300", Offset = "0x114D300", VA = "0x114D300")]
		private void EventAddedHandler(EventInstance eventInstance)
		{
		}

		[Token(Token = "0x6000F80")]
		[Address(RVA = "0x114D350", Offset = "0x114D350", VA = "0x114D350")]
		private void SoundPlayed(IntPtr instancePtr, int duration)
		{
		}

		[Token(Token = "0x6000F81")]
		[Address(RVA = "0x114D3BC", Offset = "0x114D3BC", VA = "0x114D3BC")]
		private void MarkerReached(IntPtr instancePtr, string markerName, int duration)
		{
		}

		[Token(Token = "0x6000F82")]
		[Address(RVA = "0x114D8CC", Offset = "0x114D8CC", VA = "0x114D8CC")]
		private void SoundStopped(IntPtr instancePtr)
		{
		}

		[Token(Token = "0x6000F83")]
		[Address(RVA = "0x114CA10", Offset = "0x114CA10", VA = "0x114CA10")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0xBDF3B8", Offset = "0xBDF3B8")]
		private static RESULT VOCallbackHandler(EVENT_CALLBACK_TYPE type, IntPtr instancePtr, IntPtr parameterPtr)
		{
			return default(RESULT);
		}

		[Token(Token = "0x6000F84")]
		[Address(RVA = "0x114D9B8", Offset = "0x114D9B8", VA = "0x114D9B8")]
		public Subtitles()
		{
		}
	}
	[Token(Token = "0x200052C")]
	public class SubtitlesPane : MonoBehaviour
	{
		[Token(Token = "0x200052D")]
		private enum SpeakerName
		{
			[Token(Token = "0x4000E07")]
			Artillery,
			[Token(Token = "0x4000E08")]
			Assassin,
			[Token(Token = "0x4000E09")]
			Healer,
			[Token(Token = "0x4000E0A")]
			Inventor,
			[Token(Token = "0x4000E0B")]
			Outlaw,
			[Token(Token = "0x4000E0C")]
			Tank
		}

		[Serializable]
		[Token(Token = "0x200052E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBC9CC4", Offset = "0xBC9CC4")]
		private sealed class <>c
		{
			[Token(Token = "0x4000E0D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000E0E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Sprite, bool> <>9__12_0;

			[Token(Token = "0x6000F91")]
			[Address(RVA = "0x10623C8", Offset = "0x10623C8", VA = "0x10623C8")]
			public <>c()
			{
			}

			[Token(Token = "0x6000F92")]
			[Address(RVA = "0x10623D0", Offset = "0x10623D0", VA = "0x10623D0")]
			internal bool <get_HasSpeakerImage>b__12_0(Sprite x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000DFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private BoundValue<bool> hasSubtitle;

		[Token(Token = "0x4000DFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private BoundValue<string> currentSpeaker;

		[Token(Token = "0x4000DFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform content;

		[Token(Token = "0x4000E00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private float animationSpeed;

		[Token(Token = "0x4000E01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBD35C0", Offset = "0xBD35C0")]
		[SerializeField]
		private Sprite[] speakerImages;

		[Token(Token = "0x4000E02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private readonly ReactiveSource<Sprite> _currentSpeakerImage;

		[Token(Token = "0x4000E03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float _contentScale;

		[Token(Token = "0x4000E04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private bool _isContentShown;

		[Token(Token = "0x4000E05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private ReactiveSubscription _subscription;

		[Token(Token = "0x170002B0")]
		public Reactive<Sprite> CurrentSpeakerImage
		{
			[Token(Token = "0x6000F88")]
			[Address(RVA = "0x114DBE8", Offset = "0x114DBE8", VA = "0x114DBE8")]
			get
			{
				return default(Reactive<Sprite>);
			}
		}

		[Token(Token = "0x170002B1")]
		public Reactive<bool> HasSpeakerImage
		{
			[Token(Token = "0x6000F89")]
			[Address(RVA = "0x114DC3C", Offset = "0x114DC3C", VA = "0x114DC3C")]
			get
			{
				return default(Reactive<bool>);
			}
		}

		[Token(Token = "0x6000F8A")]
		[Address(RVA = "0x114DD88", Offset = "0x114DD88", VA = "0x114DD88")]
		private void Update()
		{
		}

		[Token(Token = "0x6000F8B")]
		[Address(RVA = "0x114DE78", Offset = "0x114DE78", VA = "0x114DE78")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000F8C")]
		[Address(RVA = "0x114E144", Offset = "0x114E144", VA = "0x114E144")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000F8D")]
		[Address(RVA = "0x114E150", Offset = "0x114E150", VA = "0x114E150")]
		private void OnHasSubtitleChanged((bool, bool) valueTuple)
		{
		}

		[Token(Token = "0x6000F8E")]
		[Address(RVA = "0x114E1AC", Offset = "0x114E1AC", VA = "0x114E1AC")]
		private void OnSpeakerChanged(string speakerName)
		{
		}

		[Token(Token = "0x6000F8F")]
		[Address(RVA = "0x114E2B8", Offset = "0x114E2B8", VA = "0x114E2B8")]
		public SubtitlesPane()
		{
		}
	}
	[Token(Token = "0x200052F")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xBC9CD4", Offset = "0xBC9CD4")]
	public class SubtitlesScroller : MonoBehaviour
	{
		[Token(Token = "0x4000E0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private BoundValue<float> currentStartTime;

		[Token(Token = "0x4000E10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private BoundValue<int> currentDuration;

		[Token(Token = "0x4000E11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private RectTransform _viewport;

		[Token(Token = "0x4000E12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private RectTransform _content;

		[Token(Token = "0x4000E13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float _currentPosition;

		[Token(Token = "0x6000F93")]
		[Address(RVA = "0x114E34C", Offset = "0x114E34C", VA = "0x114E34C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000F94")]
		[Address(RVA = "0x114E3CC", Offset = "0x114E3CC", VA = "0x114E3CC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000F95")]
		[Address(RVA = "0x114E478", Offset = "0x114E478", VA = "0x114E478")]
		private void Update()
		{
		}

		[Token(Token = "0x6000F96")]
		[Address(RVA = "0x114E3D0", Offset = "0x114E3D0", VA = "0x114E3D0")]
		public void ResetPosition()
		{
		}

		[Token(Token = "0x6000F97")]
		[Address(RVA = "0x114E648", Offset = "0x114E648", VA = "0x114E648")]
		public SubtitlesScroller()
		{
		}
	}
	[Token(Token = "0x2000530")]
	public class SurrenderCommands : MonoBehaviour
	{
		[Token(Token = "0x6000F98")]
		[Address(RVA = "0x114E650", Offset = "0x114E650", VA = "0x114E650")]
		public void StartSurrender()
		{
		}

		[Token(Token = "0x6000F99")]
		[Address(RVA = "0x114E764", Offset = "0x114E764", VA = "0x114E764")]
		public void AcceptSurrender()
		{
		}

		[Token(Token = "0x6000F9A")]
		[Address(RVA = "0x114E884", Offset = "0x114E884", VA = "0x114E884")]
		public void DeclineSurrender()
		{
		}

		[Token(Token = "0x6000F9B")]
		[Address(RVA = "0x114E9A0", Offset = "0x114E9A0", VA = "0x114E9A0")]
		public SurrenderCommands()
		{
		}
	}
	[Token(Token = "0x2000531")]
	public class SurrenderNotificationUI : MonoBehaviour
	{
		[Token(Token = "0x2000532")]
		private enum State
		{
			[Token(Token = "0x4000E18")]
			NoRequest,
			[Token(Token = "0x4000E19")]
			HaveVotedYes,
			[Token(Token = "0x4000E1A")]
			VoteRequested
		}

		[Serializable]
		[Token(Token = "0x2000533")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBC9D34", Offset = "0xBC9D34")]
		private sealed class <>c
		{
			[Token(Token = "0x4000E1B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000E1C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<State, bool> <>9__4_0;

			[Token(Token = "0x4000E1D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<State, bool> <>9__6_0;

			[Token(Token = "0x6000FA7")]
			[Address(RVA = "0x1062498", Offset = "0x1062498", VA = "0x1062498")]
			public <>c()
			{
			}

			[Token(Token = "0x6000FA8")]
			[Address(RVA = "0x10624A0", Offset = "0x10624A0", VA = "0x10624A0")]
			internal bool <get_NeedsReply>b__4_0(State x)
			{
				return default(bool);
			}

			[Token(Token = "0x6000FA9")]
			[Address(RVA = "0x10624AC", Offset = "0x10624AC", VA = "0x10624AC")]
			internal bool <get_VoteInProgress>b__6_0(State x)
			{
				return default(bool);
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000534")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBC9D44", Offset = "0xBC9D44")]
		private struct <QueueRequestMessageAsync>d__12 : IAsyncStateMachine
		{
			[Token(Token = "0x4000E1E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000E1F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4000E20")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string entityId;

			[Token(Token = "0x4000E21")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public SurrenderNotificationUI <>4__this;

			[Token(Token = "0x4000E22")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private TaskAwaiter<PlayersInfoCache.PlayerInfo> <>u__1;

			[Token(Token = "0x6000FAA")]
			[Address(RVA = "0x106285C", Offset = "0x106285C", VA = "0x106285C", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000FAB")]
			[Address(RVA = "0x1062BF4", Offset = "0x1062BF4", VA = "0x1062BF4", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000535")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBC9D54", Offset = "0xBC9D54")]
		private struct <QueueDeclineMessageAsync>d__13 : IAsyncStateMachine
		{
			[Token(Token = "0x4000E23")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000E24")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4000E25")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string entityId;

			[Token(Token = "0x4000E26")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public SurrenderNotificationUI <>4__this;

			[Token(Token = "0x4000E27")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private TaskAwaiter<PlayersInfoCache.PlayerInfo> <>u__1;

			[Token(Token = "0x6000FAC")]
			[Address(RVA = "0x10624B8", Offset = "0x10624B8", VA = "0x10624B8", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000FAD")]
			[Address(RVA = "0x1062850", Offset = "0x1062850", VA = "0x1062850", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4000E14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBD362C", Offset = "0xBD362C")]
		[SerializeField]
		private LocalizedString declinedSurrenderString;

		[Token(Token = "0x4000E15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private LocalizedString wantsToSurrenderString;

		[Token(Token = "0x4000E16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly ReactiveSource<State> _state;

		[Token(Token = "0x170002B2")]
		public Reactive<bool> NeedsReply
		{
			[Token(Token = "0x6000F9C")]
			[Address(RVA = "0x114E9A8", Offset = "0x114E9A8", VA = "0x114E9A8")]
			get
			{
				return default(Reactive<bool>);
			}
		}

		[Token(Token = "0x170002B3")]
		public Reactive<bool> VoteInProgress
		{
			[Token(Token = "0x6000F9D")]
			[Address(RVA = "0x114EB10", Offset = "0x114EB10", VA = "0x114EB10")]
			get
			{
				return default(Reactive<bool>);
			}
		}

		[Token(Token = "0x6000F9E")]
		[Address(RVA = "0x114EC78", Offset = "0x114EC78", VA = "0x114EC78")]
		private void Update()
		{
		}

		[Token(Token = "0x6000F9F")]
		[Address(RVA = "0x114EF18", Offset = "0x114EF18", VA = "0x114EF18")]
		private void Start()
		{
		}

		[Token(Token = "0x6000FA0")]
		[Address(RVA = "0x114F088", Offset = "0x114F088", VA = "0x114F088")]
		private void DeclinedSurrender(EventDeclinedSurrender callback)
		{
		}

		[Token(Token = "0x6000FA1")]
		[Address(RVA = "0x114F100", Offset = "0x114F100", VA = "0x114F100")]
		private static bool ValidTeam(Quantum.Team callbackTeam)
		{
			return default(bool);
		}

		[Token(Token = "0x6000FA2")]
		[Address(RVA = "0x114F308", Offset = "0x114F308", VA = "0x114F308")]
		private void RequestSurrender(EventRequestSurrender callback)
		{
		}

		[Token(Token = "0x6000FA3")]
		[Address(RVA = "0x114F380", Offset = "0x114F380", VA = "0x114F380")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xBDF418", Offset = "0xBDF418")]
		private void QueueRequestMessageAsync(string entityId)
		{
		}

		[Token(Token = "0x6000FA4")]
		[Address(RVA = "0x114F240", Offset = "0x114F240", VA = "0x114F240")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xBDF478", Offset = "0xBDF478")]
		private void QueueDeclineMessageAsync(string entityId)
		{
		}

		[Token(Token = "0x6000FA5")]
		[Address(RVA = "0x114F448", Offset = "0x114F448", VA = "0x114F448")]
		public SurrenderNotificationUI()
		{
		}
	}
	[Token(Token = "0x2000536")]
	public class TimeDisplay : MonoBehaviour
	{
		[Token(Token = "0x4000E28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TMP_Text textField;

		[Token(Token = "0x4000E29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private BoundValue<float> timer;

		[Token(Token = "0x4000E2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private BoundValue<float> timerMax;

		[Token(Token = "0x4000E2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private bool displayOnlySeconds;

		[Token(Token = "0x6000FAE")]
		[Address(RVA = "0x115729C", Offset = "0x115729C", VA = "0x115729C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000FAF")]
		[Address(RVA = "0x11574C8", Offset = "0x11574C8", VA = "0x11574C8")]
		public TimeDisplay()
		{
		}
	}
	[Token(Token = "0x2000537")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBC9D64", Offset = "0xBC9D64")]
	public class TitleDefinition : ScriptableObject
	{
		[Token(Token = "0x4000E2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string id;

		[Token(Token = "0x4000E2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocalizedString title;

		[Token(Token = "0x4000E2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string season;

		[Token(Token = "0x6000FB0")]
		[Address(RVA = "0x1157EBC", Offset = "0x1157EBC", VA = "0x1157EBC")]
		public TitleDefinition()
		{
		}
	}
	[Token(Token = "0x2000538")]
	public class TitleItemUI : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000539")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBC9DB4", Offset = "0xBC9DB4")]
		private sealed class <>c
		{
			[Token(Token = "0x4000E37")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000E38")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<string, LocalizedString> <>9__9_0;

			[Token(Token = "0x4000E39")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<(string, string), bool> <>9__13_0;

			[Token(Token = "0x6000FBD")]
			[Address(RVA = "0x1065DFC", Offset = "0x1065DFC", VA = "0x1065DFC")]
			public <>c()
			{
			}

			[Token(Token = "0x6000FBE")]
			[Address(RVA = "0x1065E04", Offset = "0x1065E04", VA = "0x1065E04")]
			internal LocalizedString <get_Title>b__9_0(string x)
			{
				return null;
			}

			[Token(Token = "0x6000FBF")]
			[Address(RVA = "0x1065FE8", Offset = "0x1065FE8", VA = "0x1065FE8")]
			internal bool <get_TitleUsed>b__13_0((string, string) x)
			{
				return default(bool);
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x200053A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBC9DC4", Offset = "0xBC9DC4")]
		private struct <Awake>d__14 : IAsyncStateMachine
		{
			[Token(Token = "0x4000E3A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000E3B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4000E3C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public TitleItemUI <>4__this;

			[Token(Token = "0x4000E3D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private TaskAwaiter<PlayersInfoCache.PlayerInfo> <>u__1;

			[Token(Token = "0x6000FC0")]
			[Address(RVA = "0x1066008", Offset = "0x1066008", VA = "0x1066008", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000FC1")]
			[Address(RVA = "0x10662FC", Offset = "0x10662FC", VA = "0x10662FC", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x200053B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBC9DD4", Offset = "0xBC9DD4")]
		private struct <UpdateTitleAsync>d__17 : IAsyncStateMachine
		{
			[Token(Token = "0x4000E3E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000E3F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x4000E40")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private string <newTitleID>5__2;

			[Token(Token = "0x4000E41")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x6000FC2")]
			[Address(RVA = "0x1066308", Offset = "0x1066308", VA = "0x1066308", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000FC3")]
			[Address(RVA = "0x1066634", Offset = "0x1066634", VA = "0x1066634", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4000E2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly TimeSpan WaitTimeBetweenDataUpdates;

		[Token(Token = "0x4000E30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static string _pendingTitleID;

		[Token(Token = "0x4000E31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static Task _updateTitleTask;

		[Token(Token = "0x4000E32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly ReactiveSource<string> _titleID;

		[Token(Token = "0x4000E33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly ReactiveSource<bool> _titleUnlocked;

		[Token(Token = "0x4000E34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly ReactiveSource<string> _currentPlayerTitle;

		[Token(Token = "0x4000E35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private ReactiveSubscription _titleSub;

		[Token(Token = "0x4000E36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private PlayersInfoCache.PlayerInfo? _playerInfo;

		[Token(Token = "0x170002B4")]
		public Reactive<LocalizedString> Title
		{
			[Token(Token = "0x6000FB1")]
			[Address(RVA = "0x1157EC4", Offset = "0x1157EC4", VA = "0x1157EC4")]
			get
			{
				return default(Reactive<LocalizedString>);
			}
		}

		[Token(Token = "0x170002B5")]
		public Reactive<bool> TitleUnlocked
		{
			[Token(Token = "0x6000FB2")]
			[Address(RVA = "0x1158010", Offset = "0x1158010", VA = "0x1158010")]
			get
			{
				return default(Reactive<bool>);
			}
		}

		[Token(Token = "0x170002B6")]
		public Reactive<bool> TitleUsed
		{
			[Token(Token = "0x6000FB3")]
			[Address(RVA = "0x1158064", Offset = "0x1158064", VA = "0x1158064")]
			get
			{
				return default(Reactive<bool>);
			}
		}

		[Token(Token = "0x6000FB4")]
		[Address(RVA = "0x1158208", Offset = "0x1158208", VA = "0x1158208")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xBDF4F8", Offset = "0xBDF4F8")]
		public void Awake()
		{
		}

		[Token(Token = "0x6000FB5")]
		[Address(RVA = "0x11582CC", Offset = "0x11582CC", VA = "0x11582CC")]
		public void Setup(string titleID, bool unlocked, Reactive<string> playerTitle)
		{
		}

		[Token(Token = "0x6000FB6")]
		[Address(RVA = "0x11583EC", Offset = "0x11583EC", VA = "0x11583EC")]
		public void OnClick()
		{
		}

		[Token(Token = "0x6000FB7")]
		[Address(RVA = "0x11585C0", Offset = "0x11585C0", VA = "0x11585C0")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xBDF558", Offset = "0xBDF558")]
		private static Task UpdateTitleAsync()
		{
			return null;
		}

		[Token(Token = "0x6000FB8")]
		[Address(RVA = "0x11586BC", Offset = "0x11586BC", VA = "0x11586BC")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000FB9")]
		[Address(RVA = "0x11586C8", Offset = "0x11586C8", VA = "0x11586C8")]
		public TitleItemUI()
		{
		}

		[Token(Token = "0x6000FBB")]
		[Address(RVA = "0x11588D0", Offset = "0x11588D0", VA = "0x11588D0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDF5B8", Offset = "0xBDF5B8")]
		private void <Setup>b__15_0(string x)
		{
		}
	}
	[Token(Token = "0x200053C")]
	public class TitleMenuUI : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200053D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBC9DE4", Offset = "0xBC9DE4")]
		private sealed class <>c
		{
			[Token(Token = "0x4000E47")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000E48")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<IUser, Reactive<bool>> <>9__5_0;

			[Token(Token = "0x4000E49")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<IReadOnlyList<string>, bool> <>9__7_2;

			[Token(Token = "0x6000FCB")]
			[Address(RVA = "0x10666A0", Offset = "0x10666A0", VA = "0x10666A0")]
			public <>c()
			{
			}

			[Token(Token = "0x6000FCC")]
			[Address(RVA = "0x10666A8", Offset = "0x10666A8", VA = "0x10666A8")]
			internal Reactive<bool> <Start>b__5_0(IUser x)
			{
				return default(Reactive<bool>);
			}

			[Token(Token = "0x6000FCD")]
			[Address(RVA = "0x1066778", Offset = "0x1066778", VA = "0x1066778")]
			internal bool <InstantiateTitles>b__7_2(IReadOnlyList<string> x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x200053E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBC9DF4", Offset = "0xBC9DF4")]
		private sealed class <>c__DisplayClass7_0
		{
			[Token(Token = "0x4000E4A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string noTitleSeason;

			[Token(Token = "0x4000E4B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public IReadOnlyList<string> entitledTitles;

			[Token(Token = "0x6000FCE")]
			[Address(RVA = "0x1066784", Offset = "0x1066784", VA = "0x1066784")]
			public <>c__DisplayClass7_0()
			{
			}

			[Token(Token = "0x6000FCF")]
			[Address(RVA = "0x106678C", Offset = "0x106678C", VA = "0x106678C")]
			internal bool <InstantiateTitles>b__0(SeasonDisplayNames x)
			{
				return default(bool);
			}

			[Token(Token = "0x6000FD0")]
			[Address(RVA = "0x10667A0", Offset = "0x10667A0", VA = "0x10667A0")]
			internal int <InstantiateTitles>b__1(TitleDefinition first, TitleDefinition second)
			{
				return default(int);
			}
		}

		[Token(Token = "0x200053F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBC9E04", Offset = "0xBC9E04")]
		private sealed class <>c__DisplayClass7_1
		{
			[Token(Token = "0x4000E4C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public TitleDefinition title;

			[Token(Token = "0x6000FD1")]
			[Address(RVA = "0x1066840", Offset = "0x1066840", VA = "0x1066840")]
			public <>c__DisplayClass7_1()
			{
			}

			[Token(Token = "0x6000FD2")]
			[Address(RVA = "0x1066848", Offset = "0x1066848", VA = "0x1066848")]
			internal bool <InstantiateTitles>b__3(SeasonDisplayNames x)
			{
				return default(bool);
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000540")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBC9E14", Offset = "0xBC9E14")]
		private struct <InstantiateTitles>d__7 : IAsyncStateMachine
		{
			[Token(Token = "0x4000E4D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000E4E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4000E4F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private <>c__DisplayClass7_0 <>8__1;

			[Token(Token = "0x4000E50")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public TitleMenuUI <>4__this;

			[Token(Token = "0x4000E51")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private PlayersInfoCache.PlayerInfo <playerInfo>5__2;

			[Token(Token = "0x4000E52")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			private TaskAwaiter<PlayersInfoCache.PlayerInfo> <>u__1;

			[Token(Token = "0x4000E53")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			private TaskAwaiter<IReadOnlyList<string>> <>u__2;

			[Token(Token = "0x6000FD3")]
			[Address(RVA = "0x106686C", Offset = "0x106686C", VA = "0x106686C", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000FD4")]
			[Address(RVA = "0x106755C", Offset = "0x106755C", VA = "0x106755C", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4000E42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform titleListParent;

		[Token(Token = "0x4000E43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private TitleItemUI titlePrefab;

		[Token(Token = "0x4000E44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private CollapsableMenuUI collapsibleMenuPrefab;

		[Token(Token = "0x4000E45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly Dictionary<string, CollapsableMenuUI> _seasonsTitles;

		[Token(Token = "0x4000E46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private ReactiveSubscription _subscription;

		[Token(Token = "0x6000FC4")]
		[Address(RVA = "0x1158934", Offset = "0x1158934", VA = "0x1158934")]
		private void Start()
		{
		}

		[Token(Token = "0x6000FC5")]
		[Address(RVA = "0x1158B64", Offset = "0x1158B64", VA = "0x1158B64")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000FC6")]
		[Address(RVA = "0x1158B70", Offset = "0x1158B70", VA = "0x1158B70")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xBDF5E8", Offset = "0xBDF5E8")]
		private void InstantiateTitles()
		{
		}

		[Token(Token = "0x6000FC7")]
		[Address(RVA = "0x1158C34", Offset = "0x1158C34", VA = "0x1158C34")]
		private void RemoveTitleObjects()
		{
		}

		[Token(Token = "0x6000FC8")]
		[Address(RVA = "0x1158DB0", Offset = "0x1158DB0", VA = "0x1158DB0")]
		public TitleMenuUI()
		{
		}

		[Token(Token = "0x6000FC9")]
		[Address(RVA = "0x1158E28", Offset = "0x1158E28", VA = "0x1158E28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDF648", Offset = "0xBDF648")]
		private void <Start>b__5_1(bool x)
		{
		}
	}
	[Token(Token = "0x2000541")]
	public class TwoSlotSpellWandUI : SpellWandUI
	{
		[Token(Token = "0x4000E54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBD36F8", Offset = "0xBD36F8")]
		[SerializeField]
		private Image primarySpellCooldown;

		[Token(Token = "0x4000E55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Image secondarySpellCooldown;

		[Token(Token = "0x4000E56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Image currentSpellIcon;

		[Token(Token = "0x4000E57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Image currentSpellCharge;

		[Token(Token = "0x4000E58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private AssetGuid _currentlyShownSpell;

		[Token(Token = "0x6000FD5")]
		[Address(RVA = "0x115A214", Offset = "0x115A214", VA = "0x115A214", Slot = "4")]
		protected override void ConfigureUIOnWand(XRNode hand)
		{
		}

		[Token(Token = "0x6000FD6")]
		[Address(RVA = "0x115A30C", Offset = "0x115A30C", VA = "0x115A30C", Slot = "5")]
		protected override void UpdateUI(Frame frame, WandSpells wandSpells, SpellCaster spellCaster)
		{
		}

		[Token(Token = "0x6000FD7")]
		[Address(RVA = "0x115A47C", Offset = "0x115A47C", VA = "0x115A47C")]
		private void UpdateCooldownUI(Frame frame, EntityRef spellEntity, Image spellSlotCooldown)
		{
		}

		[Token(Token = "0x6000FD8")]
		[Address(RVA = "0x115A544", Offset = "0x115A544", VA = "0x115A544")]
		private void UpdateChargeUI(float chargeAmount)
		{
		}

		[Token(Token = "0x6000FD9")]
		[Address(RVA = "0x115A560", Offset = "0x115A560", VA = "0x115A560")]
		public TwoSlotSpellWandUI()
		{
		}
	}
	[Token(Token = "0x2000542")]
	public class UnlockableUI : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000543")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBC9E24", Offset = "0xBC9E24")]
		private sealed class <>c
		{
			[Token(Token = "0x4000E60")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000E61")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<int, IList<object>> <>9__4_0;

			[Token(Token = "0x6000FE3")]
			[Address(RVA = "0x1067E2C", Offset = "0x1067E2C", VA = "0x1067E2C")]
			public <>c()
			{
			}

			[Token(Token = "0x6000FE4")]
			[Address(RVA = "0x1067E34", Offset = "0x1067E34", VA = "0x1067E34")]
			internal IList<object> <.ctor>b__4_0(int x)
			{
				return null;
			}
		}

		[Token(Token = "0x4000E59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private UnlockablesMenu unlockablesMenu;

		[Token(Token = "0x4000E5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly ReactiveSource<bool> _isUnlocked;

		[Token(Token = "0x4000E5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly ReactiveSource<Sprite> _unlockableIcon;

		[Token(Token = "0x4000E5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly ReactiveSource<int> _unlockableTier;

		[Token(Token = "0x4000E5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD3784", Offset = "0xBD3784")]
		private readonly Reactive<IList<object>> <UnlockableTierArguments>k__BackingField;

		[Token(Token = "0x4000E5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD3794", Offset = "0xBD3794")]
		private readonly Reactive<Sprite> <UnlockableIcon>k__BackingField;

		[Token(Token = "0x4000E5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD37A4", Offset = "0xBD37A4")]
		private readonly Reactive<bool> <IsUnlocked>k__BackingField;

		[Token(Token = "0x170002B7")]
		public Reactive<IList<object>> UnlockableTierArguments
		{
			[Token(Token = "0x6000FDB")]
			[Address(RVA = "0x112CB08", Offset = "0x112CB08", VA = "0x112CB08")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDF668", Offset = "0xBDF668")]
			get
			{
				return default(Reactive<IList<object>>);
			}
		}

		[Token(Token = "0x170002B8")]
		public Reactive<Sprite> UnlockableIcon
		{
			[Token(Token = "0x6000FDC")]
			[Address(RVA = "0x112CB10", Offset = "0x112CB10", VA = "0x112CB10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDF678", Offset = "0xBDF678")]
			get
			{
				return default(Reactive<Sprite>);
			}
		}

		[Token(Token = "0x170002B9")]
		public Reactive<bool> IsUnlocked
		{
			[Token(Token = "0x6000FDD")]
			[Address(RVA = "0x112CB18", Offset = "0x112CB18", VA = "0x112CB18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDF688", Offset = "0xBDF688")]
			get
			{
				return default(Reactive<bool>);
			}
		}

		[Token(Token = "0x6000FDA")]
		[Address(RVA = "0x112C84C", Offset = "0x112C84C", VA = "0x112C84C")]
		public UnlockableUI()
		{
		}

		[Token(Token = "0x6000FDE")]
		[Address(RVA = "0x112CB20", Offset = "0x112CB20", VA = "0x112CB20")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000FDF")]
		[Address(RVA = "0x112CB94", Offset = "0x112CB94", VA = "0x112CB94")]
		public void SetIcon(Sprite icon)
		{
		}

		[Token(Token = "0x6000FE0")]
		[Address(RVA = "0x112CBF8", Offset = "0x112CBF8", VA = "0x112CBF8")]
		public void SetIsUnlocked(bool isUnlocked)
		{
		}

		[Token(Token = "0x6000FE1")]
		[Address(RVA = "0x112CC5C", Offset = "0x112CC5C", VA = "0x112CC5C")]
		public void SelectUnlockable()
		{
		}
	}
	[Token(Token = "0x2000544")]
	public class UnlockablesMenu : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000545")]
		private struct UnlockableData
		{
			[Token(Token = "0x4000E73")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Sprite unlockableIcon;

			[Token(Token = "0x4000E74")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public LocalizedString unlockableName;

			[Token(Token = "0x4000E75")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int xpRequirement;
		}

		[Serializable]
		[Token(Token = "0x2000546")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBC9E34", Offset = "0xBC9E34")]
		private sealed class <>c
		{
			[Token(Token = "0x4000E76")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000E77")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<(int, UnlockableData[]), LocalizedString> <>9__12_0;

			[Token(Token = "0x4000E78")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<UnlockableData, bool> <>9__30_0;

			[Token(Token = "0x4000E79")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Func<UnlockableData, int> <>9__30_1;

			[Token(Token = "0x6000FF8")]
			[Address(RVA = "0x1067F60", Offset = "0x1067F60", VA = "0x1067F60")]
			public <>c()
			{
			}

			[Token(Token = "0x6000FF9")]
			[Address(RVA = "0x1067F68", Offset = "0x1067F68", VA = "0x1067F68")]
			internal LocalizedString <.ctor>b__12_0((int, UnlockableData[]) x)
			{
				return null;
			}

			[Token(Token = "0x6000FFA")]
			[Address(RVA = "0x1067FB0", Offset = "0x1067FB0", VA = "0x1067FB0")]
			internal bool <OnUnlockablesChanged>b__30_0(UnlockableData x)
			{
				return default(bool);
			}

			[Token(Token = "0x6000FFB")]
			[Address(RVA = "0x1067FC0", Offset = "0x1067FC0", VA = "0x1067FC0")]
			internal int <OnUnlockablesChanged>b__30_1(UnlockableData x)
			{
				return default(int);
			}
		}

		[Token(Token = "0x4000E62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private BoundValue<GetOwnGroupStatusResult?> ownGroupStatusResult;

		[Token(Token = "0x4000E63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private RectScrollController rectScrollController;

		[Token(Token = "0x4000E64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private UnlockableUI unlockableTemplate;

		[Token(Token = "0x4000E65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private int unlockablesPerPage;

		[Token(Token = "0x4000E66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBD37F4", Offset = "0xBD37F4")]
		private LocalizedString unlockingTierString;

		[Token(Token = "0x4000E67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private LocalizedString maxTierString;

		[Token(Token = "0x4000E68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private readonly ReactiveSource<int> _nextLevel;

		[Token(Token = "0x4000E69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private readonly ReactiveSource<float> _normalizedUnlockProgression;

		[Token(Token = "0x4000E6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private readonly ReactiveSource<int> _selectedUnlockableIndex;

		[Token(Token = "0x4000E6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private readonly ReactiveSource<UnlockableData[]> _unlockables;

		[Token(Token = "0x4000E6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private int _nextTierIndex;

		[Token(Token = "0x4000E6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private ReactiveSubscription _subscription;

		[Token(Token = "0x4000E6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD3850", Offset = "0xBD3850")]
		private readonly Reactive<float> <NormalizedUnlockProgression>k__BackingField;

		[Token(Token = "0x4000E6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD3860", Offset = "0xBD3860")]
		private readonly Reactive<LocalizedString> <SelectedUnlockableName>k__BackingField;

		[Token(Token = "0x4000E70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD3870", Offset = "0xBD3870")]
		private readonly Reactive<LocalizedString> <NextLevel>k__BackingField;

		[Token(Token = "0x4000E71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD3880", Offset = "0xBD3880")]
		private readonly Reactive<bool> <HasNextPage>k__BackingField;

		[Token(Token = "0x4000E72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD3890", Offset = "0xBD3890")]
		private readonly Reactive<bool> <HasPreviousPage>k__BackingField;

		[Token(Token = "0x170002BA")]
		public Reactive<float> NormalizedUnlockProgression
		{
			[Token(Token = "0x6000FE6")]
			[Address(RVA = "0x112D2C4", Offset = "0x112D2C4", VA = "0x112D2C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDF698", Offset = "0xBDF698")]
			get
			{
				return default(Reactive<float>);
			}
		}

		[Token(Token = "0x170002BB")]
		public Reactive<LocalizedString> SelectedUnlockableName
		{
			[Token(Token = "0x6000FE7")]
			[Address(RVA = "0x112D2CC", Offset = "0x112D2CC", VA = "0x112D2CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDF6A8", Offset = "0xBDF6A8")]
			get
			{
				return default(Reactive<LocalizedString>);
			}
		}

		[Token(Token = "0x170002BC")]
		public Reactive<LocalizedString> NextLevel
		{
			[Token(Token = "0x6000FE8")]
			[Address(RVA = "0x112D2D4", Offset = "0x112D2D4", VA = "0x112D2D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDF6B8", Offset = "0xBDF6B8")]
			get
			{
				return default(Reactive<LocalizedString>);
			}
		}

		[Token(Token = "0x170002BD")]
		public Reactive<bool> HasNextPage
		{
			[Token(Token = "0x6000FE9")]
			[Address(RVA = "0x112D2DC", Offset = "0x112D2DC", VA = "0x112D2DC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDF6C8", Offset = "0xBDF6C8")]
			get
			{
				return default(Reactive<bool>);
			}
		}

		[Token(Token = "0x170002BE")]
		public Reactive<bool> HasPreviousPage
		{
			[Token(Token = "0x6000FEA")]
			[Address(RVA = "0x112D2E4", Offset = "0x112D2E4", VA = "0x112D2E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDF6D8", Offset = "0xBDF6D8")]
			get
			{
				return default(Reactive<bool>);
			}
		}

		[Token(Token = "0x6000FE5")]
		[Address(RVA = "0x112CD3C", Offset = "0x112CD3C", VA = "0x112CD3C")]
		public UnlockablesMenu()
		{
		}

		[Token(Token = "0x6000FEB")]
		[Address(RVA = "0x112D2EC", Offset = "0x112D2EC", VA = "0x112D2EC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000FEC")]
		[Address(RVA = "0x112D548", Offset = "0x112D548", VA = "0x112D548")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000FED")]
		[Address(RVA = "0x112D554", Offset = "0x112D554", VA = "0x112D554")]
		private void OnUnlockablesChanged([AttributeAttribute(Name = "TupleElementNamesAttribute", RVA = "0xBE3D48", Offset = "0xBE3D48")] (PlayerClassConfigurationAsset[], SpellSetupAsset[]) valueTuple)
		{
		}

		[Token(Token = "0x6000FEE")]
		[Address(RVA = "0x112DB5C", Offset = "0x112DB5C", VA = "0x112DB5C")]
		private void OnOwnGroupStatusChanged([AttributeAttribute(Name = "TupleElementNamesAttribute", RVA = "0xBE3DCC", Offset = "0xBE3DCC")] (GetOwnGroupStatusResult?, UnlockableData[]) valueTuple)
		{
		}

		[Token(Token = "0x6000FEF")]
		[Address(RVA = "0x112DA00", Offset = "0x112DA00", VA = "0x112DA00")]
		private void BuildUnlockablesMenu(UnlockableData[] unlockableDatas)
		{
		}

		[Token(Token = "0x6000FF0")]
		[Address(RVA = "0x112DDC8", Offset = "0x112DDC8", VA = "0x112DDC8")]
		private void UpdateUnlockablesMenu()
		{
		}

		[Token(Token = "0x6000FF1")]
		[Address(RVA = "0x112CCC4", Offset = "0x112CCC4", VA = "0x112CCC4")]
		public void NewSelection(int siblingIndex)
		{
		}

		[Token(Token = "0x6000FF2")]
		[Address(RVA = "0x112DE8C", Offset = "0x112DE8C", VA = "0x112DE8C")]
		public void GotoNextPage()
		{
		}

		[Token(Token = "0x6000FF3")]
		[Address(RVA = "0x112DF3C", Offset = "0x112DF3C", VA = "0x112DF3C")]
		public void GotoPreviousPage()
		{
		}

		[Token(Token = "0x6000FF4")]
		[Address(RVA = "0x112DFEC", Offset = "0x112DFEC", VA = "0x112DFEC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDF6E8", Offset = "0xBDF6E8")]
		private LocalizedString <.ctor>b__12_1(int x)
		{
			return null;
		}

		[Token(Token = "0x6000FF5")]
		[Address(RVA = "0x112E0F4", Offset = "0x112E0F4", VA = "0x112E0F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDF6F8", Offset = "0xBDF6F8")]
		private bool <.ctor>b__12_2((int, UnlockableData[]) x)
		{
			return default(bool);
		}

		[Token(Token = "0x6000FF6")]
		[Address(RVA = "0x112E11C", Offset = "0x112E11C", VA = "0x112E11C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDF708", Offset = "0xBDF708")]
		private bool <.ctor>b__12_3(int x)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000547")]
	public enum VRFadeBehaviour
	{
		[Token(Token = "0x4000E7B")]
		FadeToBlack,
		[Token(Token = "0x4000E7C")]
		FadeToWorld
	}
	[Token(Token = "0x2000548")]
	public class VRFadeController : MonoBehaviour
	{
		[Token(Token = "0x4000E7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float fadeTime;

		[Token(Token = "0x4000E7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private VRFadeBehaviour fadeBehaviour;

		[Token(Token = "0x6000FFC")]
		[Address(RVA = "0x112E684", Offset = "0x112E684", VA = "0x112E684")]
		public void StartFade()
		{
		}

		[Token(Token = "0x6000FFD")]
		[Address(RVA = "0x112E8AC", Offset = "0x112E8AC", VA = "0x112E8AC")]
		public VRFadeController()
		{
		}
	}
	[Token(Token = "0x2000549")]
	public class VRFader : MonoBehaviour
	{
		[Token(Token = "0x4000E7F")]
		private const float DefaultFadeTime = 1f;

		[Token(Token = "0x4000E80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly int Transparency;

		[Token(Token = "0x4000E81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Renderer fadeSphere;

		[Token(Token = "0x4000E82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private SyncedSceneLoader _currentSceneLoader;

		[Token(Token = "0x4000E83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float _elapsedTime;

		[Token(Token = "0x4000E84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float _fadeTime;

		[Token(Token = "0x4000E85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float _startingOpacity;

		[Token(Token = "0x4000E86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float _currentOpacity;

		[Token(Token = "0x4000E87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float _targetOpacity;

		[Token(Token = "0x6000FFE")]
		[Address(RVA = "0x112E8B4", Offset = "0x112E8B4", VA = "0x112E8B4")]
		private void Update()
		{
		}

		[Token(Token = "0x6000FFF")]
		[Address(RVA = "0x112E9F8", Offset = "0x112E9F8", VA = "0x112E9F8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001000")]
		[Address(RVA = "0x112EB74", Offset = "0x112EB74", VA = "0x112EB74")]
		public void Initialize(SyncedSceneLoader sceneLoader)
		{
		}

		[Token(Token = "0x6001001")]
		[Address(RVA = "0x112EDA4", Offset = "0x112EDA4", VA = "0x112EDA4")]
		private void SceneLoaderOnLevelLoadStarted(object sender, [AttributeAttribute(Name = "TupleElementNamesAttribute", RVA = "0xBE3E50", Offset = "0xBE3E50")] (string, AssetRefGameModeSetup, QuantumGame) tuple)
		{
		}

		[Token(Token = "0x6001002")]
		[Address(RVA = "0x112EE30", Offset = "0x112EE30", VA = "0x112EE30")]
		private void SceneLoaderOnLevelLoadSwitching(object sender, [AttributeAttribute(Name = "TupleElementNamesAttribute", RVA = "0xBE3EE4", Offset = "0xBE3EE4")] (Scene, QuantumGame) valueTuple)
		{
		}

		[Token(Token = "0x6001003")]
		[Address(RVA = "0x112EE3C", Offset = "0x112EE3C", VA = "0x112EE3C")]
		private void SceneLoaderOnLevelLoadFinished(object sender, [AttributeAttribute(Name = "TupleElementNamesAttribute", RVA = "0xBE3F68", Offset = "0xBE3F68")] (Scene, QuantumGame) valueTuple)
		{
		}

		[Token(Token = "0x6001004")]
		[Address(RVA = "0x112E708", Offset = "0x112E708", VA = "0x112E708")]
		public void Fade(VRFadeBehaviour fadeBehaviour, float fadeTime = 1f)
		{
		}

		[Token(Token = "0x6001005")]
		[Address(RVA = "0x112EE48", Offset = "0x112EE48", VA = "0x112EE48")]
		private void FadeToOpacity(float fadeTime, float opacity)
		{
		}

		[Token(Token = "0x6001006")]
		[Address(RVA = "0x112E938", Offset = "0x112E938", VA = "0x112E938")]
		private void SetOpacity(float opacity)
		{
		}

		[Token(Token = "0x6001007")]
		[Address(RVA = "0x112EE90", Offset = "0x112EE90", VA = "0x112EE90")]
		public VRFader()
		{
		}
	}
	[Token(Token = "0x200054A")]
	public class WorldSpaceOverlayUI : MonoBehaviour
	{
		[Token(Token = "0x200054B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBC9E44", Offset = "0xBC9E44")]
		private sealed class <>c__DisplayClass13_0
		{
			[Token(Token = "0x4000E92")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public IEnumerable<GameObject> exclude;

			[Token(Token = "0x6001012")]
			[Address(RVA = "0x1068D88", Offset = "0x1068D88", VA = "0x1068D88")]
			public <>c__DisplayClass13_0()
			{
			}

			[Token(Token = "0x6001013")]
			[Address(RVA = "0x1068D90", Offset = "0x1068D90", VA = "0x1068D90")]
			internal bool <Initialize>b__1(Graphic x)
			{
				return default(bool);
			}
		}

		[Serializable]
		[Token(Token = "0x200054C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBC9E54", Offset = "0xBC9E54")]
		private sealed class <>c
		{
			[Token(Token = "0x4000E93")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000E94")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<KeyValuePair<TextMeshProUGUI, int>, GameObject> <>9__13_0;

			[Token(Token = "0x6001015")]
			[Address(RVA = "0x1068D34", Offset = "0x1068D34", VA = "0x1068D34")]
			public <>c()
			{
			}

			[Token(Token = "0x6001016")]
			[Address(RVA = "0x1068D3C", Offset = "0x1068D3C", VA = "0x1068D3C")]
			internal GameObject <Initialize>b__13_0(KeyValuePair<TextMeshProUGUI, int> x)
			{
				return null;
			}
		}

		[Token(Token = "0x200054D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBC9E64", Offset = "0xBC9E64")]
		private sealed class <>c__DisplayClass16_0
		{
			[Token(Token = "0x4000E95")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Material material;

			[Token(Token = "0x6001017")]
			[Address(RVA = "0x1068E10", Offset = "0x1068E10", VA = "0x1068E10")]
			public <>c__DisplayClass16_0()
			{
			}

			[Token(Token = "0x6001018")]
			[Address(RVA = "0x1068E18", Offset = "0x1068E18", VA = "0x1068E18")]
			internal bool <RevertOverlayMode>b__0(KeyValuePair<Material, Material> kvp)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000E88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly int UnityGuizTestMode;

		[Token(Token = "0x4000E89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private LocalizationFontTable fontTable;

		[Token(Token = "0x4000E8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xBD38E0", Offset = "0xBD38E0")]
		[SerializeField]
		private CompareFunction defaultUIComparison;

		[Token(Token = "0x4000E8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private int renderQueueValue;

		[Token(Token = "0x4000E8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool _hasInitialized;

		[Token(Token = "0x4000E8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		private bool _isOverlayApplied;

		[Token(Token = "0x4000E8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Dictionary<Material, Material> _materialMappings;

		[Token(Token = "0x4000E8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Graphic[] _uiElementsToApplyTo;

		[Token(Token = "0x4000E90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private LocalizeOwnFont[] _uiLocalizeOwnFonts;

		[Token(Token = "0x4000E91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Dictionary<TextMeshProUGUI, int> _uiTextObjects;

		[Token(Token = "0x6001009")]
		[Address(RVA = "0x113C5D4", Offset = "0x113C5D4", VA = "0x113C5D4")]
		private void Awake()
		{
		}

		[Token(Token = "0x600100A")]
		[Address(RVA = "0x113CA6C", Offset = "0x113CA6C", VA = "0x113CA6C")]
		private void Start()
		{
		}

		[Token(Token = "0x600100B")]
		[Address(RVA = "0x113CF7C", Offset = "0x113CF7C", VA = "0x113CF7C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600100C")]
		[Address(RVA = "0x113C5E4", Offset = "0x113C5E4", VA = "0x113C5E4")]
		private void Initialize()
		{
		}

		[Token(Token = "0x600100D")]
		[Address(RVA = "0x113D0D0", Offset = "0x113D0D0", VA = "0x113D0D0")]
		public void SetOverlayMode()
		{
		}

		[Token(Token = "0x600100E")]
		[Address(RVA = "0x113CA74", Offset = "0x113CA74", VA = "0x113CA74")]
		public void SetOverlayMode(CompareFunction zTestMode)
		{
		}

		[Token(Token = "0x600100F")]
		[Address(RVA = "0x113D0D8", Offset = "0x113D0D8", VA = "0x113D0D8")]
		public void RevertOverlayMode()
		{
		}

		[Token(Token = "0x6001010")]
		[Address(RVA = "0x113D5FC", Offset = "0x113D5FC", VA = "0x113D5FC")]
		public WorldSpaceOverlayUI()
		{
		}
	}
	[Token(Token = "0x200054E")]
	public class XPResultAnimation : MonoBehaviour
	{
		[Token(Token = "0x4000E96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private BoundValue<SpeculativeProgressionChange> speculativeProgressionChange;

		[Token(Token = "0x4000E97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float animationTime;

		[Token(Token = "0x4000E98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AnimationCurve animationVelocity;

		[Token(Token = "0x4000E99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private StudioEventEmitter experienceSFX;

		[Token(Token = "0x4000E9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private readonly ReactiveSource<int> _currentLevel;

		[Token(Token = "0x4000E9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private readonly ReactiveSource<IList<object>> _currentXP;

		[Token(Token = "0x4000E9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private readonly ReactiveSource<float> _levelPercentage;

		[Token(Token = "0x4000E9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private readonly ReactiveSource<bool> _showLevelUp;

		[Token(Token = "0x4000E9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private readonly ReactiveTransaction _transaction;

		[Token(Token = "0x4000E9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float _elapsedTime;

		[Token(Token = "0x4000EA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private bool _hasSetStartingValues;

		[Token(Token = "0x4000EA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
		private bool _isAnimating;

		[Token(Token = "0x170002BF")]
		public Reactive<int> CurrentLevel
		{
			[Token(Token = "0x6001019")]
			[Address(RVA = "0x113D67C", Offset = "0x113D67C", VA = "0x113D67C")]
			get
			{
				return default(Reactive<int>);
			}
		}

		[Token(Token = "0x170002C0")]
		public Reactive<IList<object>> CurrentXP
		{
			[Token(Token = "0x600101A")]
			[Address(RVA = "0x113D6D0", Offset = "0x113D6D0", VA = "0x113D6D0")]
			get
			{
				return default(Reactive<IList<object>>);
			}
		}

		[Token(Token = "0x170002C1")]
		public Reactive<float> LevelPercentage
		{
			[Token(Token = "0x600101B")]
			[Address(RVA = "0x113D724", Offset = "0x113D724", VA = "0x113D724")]
			get
			{
				return default(Reactive<float>);
			}
		}

		[Token(Token = "0x170002C2")]
		public Reactive<bool> ShowLevelUp
		{
			[Token(Token = "0x600101C")]
			[Address(RVA = "0x113D778", Offset = "0x113D778", VA = "0x113D778")]
			get
			{
				return default(Reactive<bool>);
			}
		}

		[Token(Token = "0x600101D")]
		[Address(RVA = "0x113D7CC", Offset = "0x113D7CC", VA = "0x113D7CC")]
		private void Update()
		{
		}

		[Token(Token = "0x600101E")]
		[Address(RVA = "0x113DC6C", Offset = "0x113DC6C", VA = "0x113DC6C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600101F")]
		[Address(RVA = "0x113D9C0", Offset = "0x113D9C0", VA = "0x113D9C0")]
		private void UpdateXPData(float currentLevelPercent, int currentXP)
		{
		}

		[Token(Token = "0x6001020")]
		[Address(RVA = "0x113DCD0", Offset = "0x113DCD0", VA = "0x113DCD0")]
		public XPResultAnimation()
		{
		}
	}
}
namespace Cortopia.Scripts.UI.Social
{
	[Token(Token = "0x200054F")]
	public class CustomPartyMenu : MonoBehaviour
	{
		[Token(Token = "0x4000EA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private PartyMemberUI localPlayer;

		[Token(Token = "0x4000EA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private LocalizedString partyLeaderString;

		[Token(Token = "0x6001021")]
		[Address(RVA = "0x116E208", Offset = "0x116E208", VA = "0x116E208")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001022")]
		[Address(RVA = "0x116E404", Offset = "0x116E404", VA = "0x116E404")]
		public CustomPartyMenu()
		{
		}
	}
	[Token(Token = "0x2000550")]
	public class LeaderboardPlayer : MonoBehaviour
	{
		[StructLayout(3)]
		[Token(Token = "0x2000551")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBC9E74", Offset = "0xBC9E74")]
		private struct <SetAvatarImage>d__6 : IAsyncStateMachine
		{
			[Token(Token = "0x4000EA9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000EAA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4000EAB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string url;

			[Token(Token = "0x4000EAC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public LeaderboardPlayer <>4__this;

			[Token(Token = "0x4000EAD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private TaskAwaiter<OrientedTexture2D> <>u__1;

			[Token(Token = "0x6001026")]
			[Address(RVA = "0x1034E80", Offset = "0x1034E80", VA = "0x1034E80", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001027")]
			[Address(RVA = "0x1035198", Offset = "0x1035198", VA = "0x1035198", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4000EA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TMP_Text indexField;

		[Token(Token = "0x4000EA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private RawImage avatarImage;

		[Token(Token = "0x4000EA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Texture2D defaultAvatar;

		[Token(Token = "0x4000EA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private TMP_Text nameTextfield;

		[Token(Token = "0x4000EA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private TMP_Text valueField;

		[Token(Token = "0x6001023")]
		[Address(RVA = "0xF846F4", Offset = "0xF846F4", VA = "0xF846F4")]
		public void UpdateUI(int index, string playerName, string avatarUrl, int wonRounds, int level)
		{
		}

		[Token(Token = "0x6001024")]
		[Address(RVA = "0xF84808", Offset = "0xF84808", VA = "0xF84808")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xBDF718", Offset = "0xBDF718")]
		private void SetAvatarImage(string url)
		{
		}

		[Token(Token = "0x6001025")]
		[Address(RVA = "0xF848D0", Offset = "0xF848D0", VA = "0xF848D0")]
		public LeaderboardPlayer()
		{
		}
	}
	[Token(Token = "0x2000552")]
	public class MatchMenuSocialUserUI : MonoBehaviour, IInspectablePlayer
	{
		[Serializable]
		[Token(Token = "0x2000553")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBC9E84", Offset = "0xBC9E84")]
		private sealed class <>c
		{
			[Token(Token = "0x4000EBD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000EBE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<bool> <>9__9_0;

			[Token(Token = "0x4000EBF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<Reactive<bool>> <>9__9_1;

			[Token(Token = "0x4000EC0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Func<(bool, bool), bool> <>9__9_2;

			[Token(Token = "0x4000EC1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static Func<string, bool> <>9__11_0;

			[Token(Token = "0x600104F")]
			[Address(RVA = "0x11DAB34", Offset = "0x11DAB34", VA = "0x11DAB34")]
			public <>c()
			{
			}

			[Token(Token = "0x6001050")]
			[Address(RVA = "0x11DAB3C", Offset = "0x11DAB3C", VA = "0x11DAB3C")]
			internal bool <get_CanBeMuted>b__9_0()
			{
				return default(bool);
			}

			[Token(Token = "0x6001051")]
			[Address(RVA = "0x11DABE8", Offset = "0x11DABE8", VA = "0x11DABE8")]
			internal Reactive<bool> <get_CanBeMuted>b__9_1()
			{
				return default(Reactive<bool>);
			}

			[Token(Token = "0x6001052")]
			[Address(RVA = "0x11DAC64", Offset = "0x11DAC64", VA = "0x11DAC64")]
			internal bool <get_CanBeMuted>b__9_2((bool, bool) data)
			{
				return default(bool);
			}

			[Token(Token = "0x6001053")]
			[Address(RVA = "0x11DAC7C", Offset = "0x11DAC7C", VA = "0x11DAC7C")]
			internal bool <get_HumanPlayer>b__11_0(string x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000554")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBC9E94", Offset = "0xBC9E94")]
		private sealed class <>c__DisplayClass52_0
		{
			[Token(Token = "0x4000EC2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string entityId;

			[Token(Token = "0x6001054")]
			[Address(RVA = "0x11DACA0", Offset = "0x11DACA0", VA = "0x11DACA0")]
			public <>c__DisplayClass52_0()
			{
			}

			[Token(Token = "0x6001055")]
			[Address(RVA = "0x11DACA8", Offset = "0x11DACA8", VA = "0x11DACA8")]
			internal bool <UserStatusChanged>b__0(UserStatus x)
			{
				return default(bool);
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000555")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBC9EA4", Offset = "0xBC9EA4")]
		private struct <GetAvatarImageAsync>d__54 : IAsyncStateMachine
		{
			[Token(Token = "0x4000EC3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000EC4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder<OrientedTexture2D> <>t__builder;

			[Token(Token = "0x4000EC5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string url;

			[Token(Token = "0x4000EC6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public MatchMenuSocialUserUI <>4__this;

			[Token(Token = "0x4000EC7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private TaskAwaiter<OrientedTexture2D> <>u__1;

			[Token(Token = "0x6001056")]
			[Address(RVA = "0x11DACBC", Offset = "0x11DACBC", VA = "0x11DACBC", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001057")]
			[Address(RVA = "0x11DAF9C", Offset = "0x11DAF9C", VA = "0x11DAF9C", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4000EAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private BoundValue<string> playFabEntityId;

		[Token(Token = "0x4000EAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private PlayFabMatchUsersListener playFabMatchUsersListener;

		[Token(Token = "0x4000EB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Texture2D defaultAvatar;

		[Token(Token = "0x4000EB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private ReactiveSubscription _subscription;

		[Token(Token = "0x4000EB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private readonly ReactiveSource<bool> _isOtherUser;

		[Token(Token = "0x4000EB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private readonly ReactiveSource<bool> _canBlock;

		[Token(Token = "0x4000EB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private readonly ReactiveSource<bool> _canBefriend;

		[Token(Token = "0x4000EB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private PlayerInspectorOffset _playerInspectorOffset;

		[Token(Token = "0x4000EB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD3A1C", Offset = "0xBD3A1C")]
		private Task<OrientedTexture2D> <ImageAsync>k__BackingField;

		[Token(Token = "0x4000EB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD3A2C", Offset = "0xBD3A2C")]
		private string <DisplayName>k__BackingField;

		[Token(Token = "0x4000EB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD3A3C", Offset = "0xBD3A3C")]
		private int <Level>k__BackingField;

		[Token(Token = "0x4000EB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD3A4C", Offset = "0xBD3A4C")]
		private FriendOpportunity? <Opportunity>k__BackingField;

		[Token(Token = "0x4000EBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD3A5C", Offset = "0xBD3A5C")]
		private bool <IsFavourite>k__BackingField;

		[Token(Token = "0x4000EBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x75")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD3A6C", Offset = "0xBD3A6C")]
		private bool <CanKick>k__BackingField;

		[Token(Token = "0x170002C3")]
		public Reactive<bool> CanBeMuted
		{
			[Token(Token = "0x6001028")]
			[Address(RVA = "0x100FAD4", Offset = "0x100FAD4", VA = "0x100FAD4")]
			get
			{
				return default(Reactive<bool>);
			}
		}

		[Token(Token = "0x170002C4")]
		public Reactive<bool> HumanPlayer
		{
			[Token(Token = "0x6001029")]
			[Address(RVA = "0x100FDBC", Offset = "0x100FDBC", VA = "0x100FDBC")]
			get
			{
				return default(Reactive<bool>);
			}
		}

		[Token(Token = "0x170002C5")]
		public Reactive<bool> IsOtherUser
		{
			[Token(Token = "0x600102A")]
			[Address(RVA = "0x100FF08", Offset = "0x100FF08", VA = "0x100FF08")]
			get
			{
				return default(Reactive<bool>);
			}
		}

		[Token(Token = "0x170002C6")]
		public Reactive<bool> CanBlock
		{
			[Token(Token = "0x600102B")]
			[Address(RVA = "0x100FF5C", Offset = "0x100FF5C", VA = "0x100FF5C")]
			get
			{
				return default(Reactive<bool>);
			}
		}

		[Token(Token = "0x170002C7")]
		public Reactive<bool> CanBefriend
		{
			[Token(Token = "0x600102C")]
			[Address(RVA = "0x100FFB0", Offset = "0x100FFB0", VA = "0x100FFB0")]
			get
			{
				return default(Reactive<bool>);
			}
		}

		[Token(Token = "0x170002C8")]
		public string EntityId
		{
			[Token(Token = "0x600102D")]
			[Address(RVA = "0x1010004", Offset = "0x1010004", VA = "0x1010004", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002C9")]
		public Task<OrientedTexture2D> ImageAsync
		{
			[Token(Token = "0x600102E")]
			[Address(RVA = "0x10100A8", Offset = "0x10100A8", VA = "0x10100A8", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDF788", Offset = "0xBDF788")]
			get
			{
				return null;
			}
			[Token(Token = "0x600102F")]
			[Address(RVA = "0x10100B0", Offset = "0x10100B0", VA = "0x10100B0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDF798", Offset = "0xBDF798")]
			private set
			{
			}
		}

		[Token(Token = "0x170002CA")]
		public string DisplayName
		{
			[Token(Token = "0x6001030")]
			[Address(RVA = "0x10100B8", Offset = "0x10100B8", VA = "0x10100B8", Slot = "6")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDF7A8", Offset = "0xBDF7A8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001031")]
			[Address(RVA = "0x10100C0", Offset = "0x10100C0", VA = "0x10100C0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDF7B8", Offset = "0xBDF7B8")]
			private set
			{
			}
		}

		[Token(Token = "0x170002CB")]
		public int Level
		{
			[Token(Token = "0x6001032")]
			[Address(RVA = "0x10100C8", Offset = "0x10100C8", VA = "0x10100C8", Slot = "7")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDF7C8", Offset = "0xBDF7C8")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001033")]
			[Address(RVA = "0x10100D0", Offset = "0x10100D0", VA = "0x10100D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDF7D8", Offset = "0xBDF7D8")]
			private set
			{
			}
		}

		[Token(Token = "0x170002CC")]
		public FriendOpportunity? Opportunity
		{
			[Token(Token = "0x6001034")]
			[Address(RVA = "0x10100D8", Offset = "0x10100D8", VA = "0x10100D8", Slot = "8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDF7E8", Offset = "0xBDF7E8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001035")]
			[Address(RVA = "0x10100E0", Offset = "0x10100E0", VA = "0x10100E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDF7F8", Offset = "0xBDF7F8")]
			private set
			{
			}
		}

		[Token(Token = "0x170002CD")]
		public bool IsFavourite
		{
			[Token(Token = "0x6001036")]
			[Address(RVA = "0x10100E8", Offset = "0x10100E8", VA = "0x10100E8", Slot = "9")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDF808", Offset = "0xBDF808")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001037")]
			[Address(RVA = "0x10100F0", Offset = "0x10100F0", VA = "0x10100F0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDF818", Offset = "0xBDF818")]
			private set
			{
			}
		}

		[Token(Token = "0x170002CE")]
		public bool CanMute
		{
			[Token(Token = "0x6001038")]
			[Address(RVA = "0x10100FC", Offset = "0x10100FC", VA = "0x10100FC", Slot = "10")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002CF")]
		public bool CanKick
		{
			[Token(Token = "0x6001039")]
			[Address(RVA = "0x1010164", Offset = "0x1010164", VA = "0x1010164", Slot = "11")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDF828", Offset = "0xBDF828")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600103A")]
			[Address(RVA = "0x101016C", Offset = "0x101016C", VA = "0x101016C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDF838", Offset = "0xBDF838")]
			private set
			{
			}
		}

		[Token(Token = "0x14000008")]
		public event System.EventHandler Updated
		{
			[Token(Token = "0x600103B")]
			[Address(RVA = "0x1010178", Offset = "0x1010178", VA = "0x1010178", Slot = "19")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDF848", Offset = "0xBDF848")]
			add
			{
			}
			[Token(Token = "0x600103C")]
			[Address(RVA = "0x1010218", Offset = "0x1010218", VA = "0x1010218", Slot = "20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDF858", Offset = "0xBDF858")]
			remove
			{
			}
		}

		[Token(Token = "0x600103D")]
		[Address(RVA = "0x10102B8", Offset = "0x10102B8", VA = "0x10102B8")]
		private void Awake()
		{
		}

		[Token(Token = "0x600103E")]
		[Address(RVA = "0x10103D4", Offset = "0x10103D4", VA = "0x10103D4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600103F")]
		[Address(RVA = "0x1010518", Offset = "0x1010518", VA = "0x1010518")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001040")]
		[Address(RVA = "0x1010524", Offset = "0x1010524", VA = "0x1010524")]
		private void UserStatusChanged(string entityId, GetMatchUsersStatusResult result)
		{
		}

		[Token(Token = "0x6001041")]
		[Address(RVA = "0x1010928", Offset = "0x1010928", VA = "0x1010928")]
		private void SetAvatarImage(string url)
		{
		}

		[Token(Token = "0x6001042")]
		[Address(RVA = "0x10109E0", Offset = "0x10109E0", VA = "0x10109E0")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xBDF868", Offset = "0xBDF868")]
		private Task<OrientedTexture2D> GetAvatarImageAsync(string url)
		{
			return null;
		}

		[Token(Token = "0x6001043")]
		[Address(RVA = "0x1010B28", Offset = "0x1010B28", VA = "0x1010B28", Slot = "12")]
		public void RemoveFriend()
		{
		}

		[Token(Token = "0x6001044")]
		[Address(RVA = "0x1010B64", Offset = "0x1010B64", VA = "0x1010B64", Slot = "15")]
		public void SendFriendRequest()
		{
		}

		[Token(Token = "0x6001045")]
		[Address(RVA = "0x1010BA0", Offset = "0x1010BA0", VA = "0x1010BA0", Slot = "14")]
		public void SetUserIsBlocked(bool isBlocked)
		{
		}

		[Token(Token = "0x6001046")]
		[Address(RVA = "0x1010BE4", Offset = "0x1010BE4", VA = "0x1010BE4", Slot = "13")]
		public void AcceptFriendRequest()
		{
		}

		[Token(Token = "0x6001047")]
		[Address(RVA = "0x1010C20", Offset = "0x1010C20", VA = "0x1010C20", Slot = "16")]
		public void SetFavorite(bool isFavorite)
		{
		}

		[Token(Token = "0x6001048")]
		[Address(RVA = "0x1010C64", Offset = "0x1010C64", VA = "0x1010C64", Slot = "17")]
		public void RejectMember()
		{
		}

		[Token(Token = "0x6001049")]
		[Address(RVA = "0x1010CA0", Offset = "0x1010CA0", VA = "0x1010CA0", Slot = "18")]
		public void LeaveParty()
		{
		}

		[Token(Token = "0x600104A")]
		[Address(RVA = "0x101094C", Offset = "0x101094C", VA = "0x101094C")]
		private void UpdateInspector()
		{
		}

		[Token(Token = "0x600104B")]
		[Address(RVA = "0x1010CD8", Offset = "0x1010CD8", VA = "0x1010CD8")]
		public void OpenPlayerInspector()
		{
		}

		[Token(Token = "0x600104C")]
		[Address(RVA = "0x1010E10", Offset = "0x1010E10", VA = "0x1010E10")]
		public MatchMenuSocialUserUI()
		{
		}

		[Token(Token = "0x600104D")]
		[Address(RVA = "0x1010EE4", Offset = "0x1010EE4", VA = "0x1010EE4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDF8C8", Offset = "0xBDF8C8")]
		private void <OnEnable>b__50_0((string, GetMatchUsersStatusResult) x)
		{
		}
	}
	[Token(Token = "0x2000556")]
	public class OnlineStatusUI : MonoBehaviour
	{
		[Token(Token = "0x4000EC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Color offlineColor;

		[Token(Token = "0x4000EC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Color onlineColor;

		[Token(Token = "0x4000ECA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Color favoriteColor;

		[Token(Token = "0x4000ECB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Color partyColor;

		[Token(Token = "0x4000ECC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Image _image;

		[Token(Token = "0x6001058")]
		[Address(RVA = "0x10219B4", Offset = "0x10219B4", VA = "0x10219B4")]
		public void SetStatus(Cortopia.Scripts.Enums.FriendStatus status)
		{
		}

		[Token(Token = "0x6001059")]
		[Address(RVA = "0x1021BA8", Offset = "0x1021BA8", VA = "0x1021BA8")]
		public OnlineStatusUI()
		{
		}
	}
	[Token(Token = "0x2000557")]
	public class PartyMemberUI : MonoBehaviour
	{
		[StructLayout(3)]
		[Token(Token = "0x2000558")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBC9EB4", Offset = "0xBC9EB4")]
		private struct <SetAvatarImage>d__19 : IAsyncStateMachine
		{
			[Token(Token = "0x4000ED6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000ED7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4000ED8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public PartyMemberUI <>4__this;

			[Token(Token = "0x4000ED9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public string url;

			[Token(Token = "0x4000EDA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private TaskAwaiter<OrientedTexture2D> <>u__1;

			[Token(Token = "0x6001064")]
			[Address(RVA = "0x11E23B0", Offset = "0x11E23B0", VA = "0x11E23B0", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001065")]
			[Address(RVA = "0x11E2630", Offset = "0x11E2630", VA = "0x11E2630", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000559")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBC9EC4", Offset = "0xBC9EC4")]
		private struct <GetAvatarImageAsync>d__20 : IAsyncStateMachine
		{
			[Token(Token = "0x4000EDB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000EDC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder<OrientedTexture2D> <>t__builder;

			[Token(Token = "0x4000EDD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string url;

			[Token(Token = "0x4000EDE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public PartyMemberUI <>4__this;

			[Token(Token = "0x4000EDF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private TaskAwaiter<OrientedTexture2D> <>u__1;

			[Token(Token = "0x6001066")]
			[Address(RVA = "0x11E2074", Offset = "0x11E2074", VA = "0x11E2074", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001067")]
			[Address(RVA = "0x11E2354", Offset = "0x11E2354", VA = "0x11E2354", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4000ECD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private RawImage avatarImage;

		[Token(Token = "0x4000ECE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Texture2D defaultAvatar;

		[Token(Token = "0x4000ECF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private TMP_Text nameTextfield;

		[Token(Token = "0x4000ED0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private LocalizeStringEvent statusTextfield;

		[Token(Token = "0x4000ED1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private GameObject filledRoot;

		[Token(Token = "0x4000ED2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private GameObject slotRoot;

		[Token(Token = "0x4000ED3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD3B2C", Offset = "0xBD3B2C")]
		private Task<OrientedTexture2D> <ImageAsync>k__BackingField;

		[Token(Token = "0x4000ED4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private readonly ReactiveSource<bool> _canKick;

		[Token(Token = "0x4000ED5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private readonly ReactiveSource<string> _playFabEntityId;

		[Token(Token = "0x170002D0")]
		public Task<OrientedTexture2D> ImageAsync
		{
			[Token(Token = "0x600105A")]
			[Address(RVA = "0xFD0000", Offset = "0xFD0000", VA = "0xFD0000")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDF8E8", Offset = "0xBDF8E8")]
			get
			{
				return null;
			}
			[Token(Token = "0x600105B")]
			[Address(RVA = "0xFD0008", Offset = "0xFD0008", VA = "0xFD0008")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDF8F8", Offset = "0xBDF8F8")]
			private set
			{
			}
		}

		[Token(Token = "0x170002D1")]
		public Reactive<bool> CanKick
		{
			[Token(Token = "0x600105C")]
			[Address(RVA = "0xFD0010", Offset = "0xFD0010", VA = "0xFD0010")]
			get
			{
				return default(Reactive<bool>);
			}
		}

		[Token(Token = "0x170002D2")]
		public Reactive<string> PlayFabEntityId
		{
			[Token(Token = "0x600105D")]
			[Address(RVA = "0xFD0064", Offset = "0xFD0064", VA = "0xFD0064")]
			get
			{
				return default(Reactive<string>);
			}
		}

		[Token(Token = "0x600105E")]
		[Address(RVA = "0xFD00B8", Offset = "0xFD00B8", VA = "0xFD00B8")]
		private void Awake()
		{
		}

		[Token(Token = "0x600105F")]
		[Address(RVA = "0xFD0158", Offset = "0xFD0158", VA = "0xFD0158")]
		public void UpdateUI(string playerName, LocalizedString status, bool canKick, string avatarUrl, string playFabEntityId)
		{
		}

		[Token(Token = "0x6001060")]
		[Address(RVA = "0xFD0330", Offset = "0xFD0330", VA = "0xFD0330")]
		public void SetIsSlotFilled(bool hasUser)
		{
		}

		[Token(Token = "0x6001061")]
		[Address(RVA = "0xFD0268", Offset = "0xFD0268", VA = "0xFD0268")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xBDF908", Offset = "0xBDF908")]
		private void SetAvatarImage(string url)
		{
		}

		[Token(Token = "0x6001062")]
		[Address(RVA = "0xFD037C", Offset = "0xFD037C", VA = "0xFD037C")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xBDF968", Offset = "0xBDF968")]
		private Task<OrientedTexture2D> GetAvatarImageAsync(string url)
		{
			return null;
		}

		[Token(Token = "0x6001063")]
		[Address(RVA = "0xFD04C4", Offset = "0xFD04C4", VA = "0xFD04C4")]
		public PartyMemberUI()
		{
		}
	}
	[Token(Token = "0x200055A")]
	public class PartyMenu : MonoBehaviour
	{
		[Token(Token = "0x4000EE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private PartyMemberUI[] partySlots;

		[Token(Token = "0x4000EE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private VRButton inviteButton;

		[Token(Token = "0x4000EE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private PlayFabStatusListener playFabStatusListener;

		[Token(Token = "0x4000EE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBD3B6C", Offset = "0xBD3B6C")]
		private LocalizedString partyLeaderString;

		[Token(Token = "0x4000EE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private LocalizedString playingString;

		[Token(Token = "0x4000EE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private readonly ReactiveSource<bool> _hasParty;

		[Token(Token = "0x4000EE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private readonly ReactiveSource<bool> _hasMultipleMembers;

		[Token(Token = "0x4000EE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private GroupMember[] _otherMembers;

		[Token(Token = "0x4000EE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private PlayerInspectorPlayer[] _partyMemberInspectorPlayers;

		[Token(Token = "0x4000EE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private ReactiveSubscription _subscription;

		[Token(Token = "0x4000EEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD3BC8", Offset = "0xBD3BC8")]
		private readonly Reactive<bool> <HasParty>k__BackingField;

		[Token(Token = "0x4000EEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD3BD8", Offset = "0xBD3BD8")]
		private readonly Reactive<bool> <HasMultipleMembers>k__BackingField;

		[Token(Token = "0x170002D3")]
		public Reactive<bool> HasParty
		{
			[Token(Token = "0x6001069")]
			[Address(RVA = "0xFD06B4", Offset = "0xFD06B4", VA = "0xFD06B4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDF9E8", Offset = "0xBDF9E8")]
			get
			{
				return default(Reactive<bool>);
			}
		}

		[Token(Token = "0x170002D4")]
		public Reactive<bool> HasMultipleMembers
		{
			[Token(Token = "0x600106A")]
			[Address(RVA = "0xFD06BC", Offset = "0xFD06BC", VA = "0xFD06BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDF9F8", Offset = "0xBDF9F8")]
			get
			{
				return default(Reactive<bool>);
			}
		}

		[Token(Token = "0x6001068")]
		[Address(RVA = "0xFD0598", Offset = "0xFD0598", VA = "0xFD0598")]
		public PartyMenu()
		{
		}

		[Token(Token = "0x600106B")]
		[Address(RVA = "0xFD06C4", Offset = "0xFD06C4", VA = "0xFD06C4")]
		private void Awake()
		{
		}

		[Token(Token = "0x600106C")]
		[Address(RVA = "0xFD07D4", Offset = "0xFD07D4", VA = "0xFD07D4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600106D")]
		[Address(RVA = "0xFD0960", Offset = "0xFD0960", VA = "0xFD0960")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600106E")]
		[Address(RVA = "0xFD096C", Offset = "0xFD096C", VA = "0xFD096C")]
		private void OnOwnGroupStatusChanged([AttributeAttribute(Name = "TupleElementNamesAttribute", RVA = "0xBE3FEC", Offset = "0xBE3FEC")] (IUser, GetOwnGroupStatusResult?) valueTuple)
		{
		}

		[Token(Token = "0x600106F")]
		[Address(RVA = "0xFD1340", Offset = "0xFD1340", VA = "0xFD1340")]
		public void LeaveParty()
		{
		}

		[Token(Token = "0x6001070")]
		[Address(RVA = "0xFD1448", Offset = "0xFD1448", VA = "0xFD1448")]
		public void KickPartyMember(int index)
		{
		}

		[Token(Token = "0x6001071")]
		[Address(RVA = "0xFD151C", Offset = "0xFD151C", VA = "0xFD151C")]
		public void OpenPlayerInspector(int index)
		{
		}
	}
	[Token(Token = "0x200055B")]
	public class PartyStatus : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200055C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBC9ED4", Offset = "0xBC9ED4")]
		private sealed class <>c
		{
			[Token(Token = "0x4000EEF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000EF0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<int, bool> <>9__8_0;

			[Token(Token = "0x4000EF1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<(int, int), IList<object>> <>9__10_0;

			[Token(Token = "0x600107B")]
			[Address(RVA = "0x11E269C", Offset = "0x11E269C", VA = "0x11E269C")]
			public <>c()
			{
			}

			[Token(Token = "0x600107C")]
			[Address(RVA = "0x11E26A4", Offset = "0x11E26A4", VA = "0x11E26A4")]
			internal bool <get_HasParty>b__8_0(int x)
			{
				return default(bool);
			}

			[Token(Token = "0x600107D")]
			[Address(RVA = "0x11E26B0", Offset = "0x11E26B0", VA = "0x11E26B0")]
			internal IList<object> <get_PartyStatusArgs>b__10_0((int, int) x)
			{
				return null;
			}
		}

		[Token(Token = "0x4000EEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private PlayFabStatusListener playFabStatusListener;

		[Token(Token = "0x4000EED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly ReactiveSource<int> _partyMemberCount;

		[Token(Token = "0x4000EEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private ReactiveSubscription _subscription;

		[Token(Token = "0x170002D5")]
		public Reactive<int> PartySize
		{
			[Token(Token = "0x6001072")]
			[Address(RVA = "0xFD1604", Offset = "0xFD1604", VA = "0xFD1604")]
			get
			{
				return default(Reactive<int>);
			}
		}

		[Token(Token = "0x170002D6")]
		public Reactive<int> PartyMemberCount
		{
			[Token(Token = "0x6001073")]
			[Address(RVA = "0xFD164C", Offset = "0xFD164C", VA = "0xFD164C")]
			get
			{
				return default(Reactive<int>);
			}
		}

		[Token(Token = "0x170002D7")]
		public Reactive<bool> HasParty
		{
			[Token(Token = "0x6001074")]
			[Address(RVA = "0xFD16A0", Offset = "0xFD16A0", VA = "0xFD16A0")]
			get
			{
				return default(Reactive<bool>);
			}
		}

		[Token(Token = "0x170002D8")]
		public Reactive<IList<object>> PartyStatusArgs
		{
			[Token(Token = "0x6001075")]
			[Address(RVA = "0xFD17EC", Offset = "0xFD17EC", VA = "0xFD17EC")]
			get
			{
				return default(Reactive<IList<object>>);
			}
		}

		[Token(Token = "0x6001076")]
		[Address(RVA = "0xFD1944", Offset = "0xFD1944", VA = "0xFD1944")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001077")]
		[Address(RVA = "0xFD1A18", Offset = "0xFD1A18", VA = "0xFD1A18")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001078")]
		[Address(RVA = "0xFD1A24", Offset = "0xFD1A24", VA = "0xFD1A24")]
		private void OnOwnGroupStatusChanged(GetOwnGroupStatusResult? ownGroupStatus)
		{
		}

		[Token(Token = "0x6001079")]
		[Address(RVA = "0xFD1BD8", Offset = "0xFD1BD8", VA = "0xFD1BD8")]
		public PartyStatus()
		{
		}
	}
	[Token(Token = "0x200055D")]
	public class QuickPlayNotificationMessage : MonoBehaviour
	{
		[Token(Token = "0x4000EF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject matchMakingIcon;

		[Token(Token = "0x4000EF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBD3C08", Offset = "0xBD3C08")]
		private BoundValue<bool> isInGame;

		[Token(Token = "0x4000EF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBD3C54", Offset = "0xBD3C54")]
		private BoundValue<bool> isMatchMaking;

		[Token(Token = "0x4000EF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBD3CA0", Offset = "0xBD3CA0")]
		[SerializeField]
		private BoundValue<bool> hasFoundMatch;

		[Token(Token = "0x4000EF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private ReactiveSubscription _reactiveSubscription;

		[Token(Token = "0x4000EF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool _isInMatch;

		[Token(Token = "0x600107E")]
		[Address(RVA = "0x1253990", Offset = "0x1253990", VA = "0x1253990")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600107F")]
		[Address(RVA = "0x1253B60", Offset = "0x1253B60", VA = "0x1253B60")]
		private void HideIconWhileInMatch(bool obj)
		{
		}

		[Token(Token = "0x6001080")]
		[Address(RVA = "0x1253BA0", Offset = "0x1253BA0", VA = "0x1253BA0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001081")]
		[Address(RVA = "0x1253BD0", Offset = "0x1253BD0", VA = "0x1253BD0")]
		private void ShowIcon((bool, bool) valueTuple)
		{
		}

		[Token(Token = "0x6001082")]
		[Address(RVA = "0x1253C18", Offset = "0x1253C18", VA = "0x1253C18")]
		public QuickPlayNotificationMessage()
		{
		}
	}
	[Token(Token = "0x200055E")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xBC9EE4", Offset = "0xBC9EE4")]
	public class SocialNotificationMessage : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200055F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBC9F44", Offset = "0xBC9F44")]
		private sealed class <>c
		{
			[Token(Token = "0x4000EFE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000EFF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<(bool, bool), bool> <>9__6_0;

			[Token(Token = "0x6001089")]
			[Address(RVA = "0x105F1E8", Offset = "0x105F1E8", VA = "0x105F1E8")]
			public <>c()
			{
			}

			[Token(Token = "0x600108A")]
			[Address(RVA = "0x105F1F0", Offset = "0x105F1F0", VA = "0x105F1F0")]
			internal bool <OnEnable>b__6_0((bool, bool) x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000EF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly int NotificationActiveParam;

		[Token(Token = "0x4000EF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static bool _hasNotifications;

		[Token(Token = "0x4000EFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Cortopia.Scripts.CustomAttributes.ReadOnly]
		[SerializeField]
		private Animator animator;

		[Token(Token = "0x4000EFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private BoundValue<bool> showNotification;

		[Token(Token = "0x4000EFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private BoundValue<bool> orShowNotification;

		[Token(Token = "0x4000EFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private ReactiveSubscription _reactiveSubscription;

		[Token(Token = "0x6001083")]
		[Address(RVA = "0x11FC1B4", Offset = "0x11FC1B4", VA = "0x11FC1B4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001084")]
		[Address(RVA = "0x11FC3FC", Offset = "0x11FC3FC", VA = "0x11FC3FC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001085")]
		[Address(RVA = "0x11FC408", Offset = "0x11FC408", VA = "0x11FC408")]
		public SocialNotificationMessage()
		{
		}

		[Token(Token = "0x6001087")]
		[Address(RVA = "0x11FC47C", Offset = "0x11FC47C", VA = "0x11FC47C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDFA08", Offset = "0xBDFA08")]
		private void <OnEnable>b__6_1(bool x)
		{
		}
	}
	[Token(Token = "0x2000560")]
	public class SocialPlayerListFilter : MonoBehaviour
	{
		[Token(Token = "0x4000F00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private SocialPlayerListPage list;

		[Token(Token = "0x4000F01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private FriendsFilter filter;

		[Token(Token = "0x600108B")]
		[Address(RVA = "0x11FC508", Offset = "0x11FC508", VA = "0x11FC508")]
		public void SetFilter(bool filterActivated)
		{
		}

		[Token(Token = "0x600108C")]
		[Address(RVA = "0x11FC5C4", Offset = "0x11FC5C4", VA = "0x11FC5C4")]
		public SocialPlayerListFilter()
		{
		}
	}
	[Token(Token = "0x2000561")]
	public class SocialPlayerListHelper : MonoBehaviour
	{
		[Token(Token = "0x4000F02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private LocalizedString showAllStrings;

		[Token(Token = "0x4000F03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private PlayFabFriendsListener playFabFriendsListener;

		[Token(Token = "0x4000F04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private int totalNumberOfFriendsShown;

		[Token(Token = "0x4000F05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly ReactiveSource<bool> _hasMoreFriends;

		[Token(Token = "0x4000F06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private readonly ReactiveSource<LocalizedString> _showAllPlayers;

		[Token(Token = "0x4000F07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private ReactiveSubscription _friendsStatusSubscription;

		[Token(Token = "0x170002D9")]
		public Reactive<LocalizedString> ShowAllPlayers
		{
			[Token(Token = "0x600108D")]
			[Address(RVA = "0x11FC5CC", Offset = "0x11FC5CC", VA = "0x11FC5CC")]
			get
			{
				return default(Reactive<LocalizedString>);
			}
		}

		[Token(Token = "0x170002DA")]
		public Reactive<bool> HasMoreFriends
		{
			[Token(Token = "0x600108E")]
			[Address(RVA = "0x11FC620", Offset = "0x11FC620", VA = "0x11FC620")]
			get
			{
				return default(Reactive<bool>);
			}
		}

		[Token(Token = "0x600108F")]
		[Address(RVA = "0x11FC674", Offset = "0x11FC674", VA = "0x11FC674")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001090")]
		[Address(RVA = "0x11FC74C", Offset = "0x11FC74C", VA = "0x11FC74C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001091")]
		[Address(RVA = "0x11FC758", Offset = "0x11FC758", VA = "0x11FC758")]
		private void FriendsStatusUpdated(GetFriendsStatusResult friendStatuses)
		{
		}

		[Token(Token = "0x6001092")]
		[Address(RVA = "0x11FC88C", Offset = "0x11FC88C", VA = "0x11FC88C")]
		public SocialPlayerListHelper()
		{
		}
	}
	[Token(Token = "0x2000562")]
	public class SocialPlayerListPage : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000563")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBC9F54", Offset = "0xBC9F54")]
		private sealed class <>c
		{
			[Token(Token = "0x4000F26")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000F27")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<int, bool> <>9__27_0;

			[Token(Token = "0x4000F28")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<(int, int), bool> <>9__27_3;

			[Token(Token = "0x4000F29")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Func<(int, int), string> <>9__27_4;

			[Token(Token = "0x60010AC")]
			[Address(RVA = "0x105F268", Offset = "0x105F268", VA = "0x105F268")]
			public <>c()
			{
			}

			[Token(Token = "0x60010AD")]
			[Address(RVA = "0x105F270", Offset = "0x105F270", VA = "0x105F270")]
			internal bool <.ctor>b__27_0(int x)
			{
				return default(bool);
			}

			[Token(Token = "0x60010AE")]
			[Address(RVA = "0x105F27C", Offset = "0x105F27C", VA = "0x105F27C")]
			internal bool <.ctor>b__27_3((int, int) tuple)
			{
				return default(bool);
			}

			[Token(Token = "0x60010AF")]
			[Address(RVA = "0x105F28C", Offset = "0x105F28C", VA = "0x105F28C")]
			internal string <.ctor>b__27_4((int, int) tuple)
			{
				return null;
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000564")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBC9F64", Offset = "0xBC9F64")]
		private struct <AddFriendInput>d__46 : IAsyncStateMachine
		{
			[Token(Token = "0x4000F2A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000F2B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4000F2C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public SocialPlayerListPage <>4__this;

			[Token(Token = "0x4000F2D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private TaskAwaiter<SendFriendRequestResult> <>u__1;

			[Token(Token = "0x60010B0")]
			[Address(RVA = "0x105F334", Offset = "0x105F334", VA = "0x105F334", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x60010B1")]
			[Address(RVA = "0x105F728", Offset = "0x105F728", VA = "0x105F728", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000565")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBC9F74", Offset = "0xBC9F74")]
		private struct <GetFriendCodeAsync>d__57 : IAsyncStateMachine
		{
			[Token(Token = "0x4000F2E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000F2F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x4000F30")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SocialPlayerListPage <>4__this;

			[Token(Token = "0x4000F31")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private TaskAwaiter<FriendCodeResult> <>u__1;

			[Token(Token = "0x4000F32")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private TaskAwaiter <>u__2;

			[Token(Token = "0x60010B2")]
			[Address(RVA = "0x105F734", Offset = "0x105F734", VA = "0x105F734", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x60010B3")]
			[Address(RVA = "0x105FDD4", Offset = "0x105FDD4", VA = "0x105FDD4", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4000F08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private PlayFabFriendsListener playFabFriendsListener;

		[Token(Token = "0x4000F09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private BoundValue<bool> hasInvitations;

		[Token(Token = "0x4000F0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private SocialPlayerUI[] socialPlayerSlots;

		[Token(Token = "0x4000F0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBD3DC4", Offset = "0xBD3DC4")]
		[SerializeField]
		private VRToggleGroup toggleGroup;

		[Token(Token = "0x4000F0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private int hasInvitesForceIndex;

		[Token(Token = "0x4000F0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private GameObject navButtons;

		[Token(Token = "0x4000F0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private GameObject playerSlots;

		[Token(Token = "0x4000F0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private GameObject pageNavigation;

		[Token(Token = "0x4000F10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject addFriendPanel;

		[Token(Token = "0x4000F11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GameObject removeFriendErrorPanel;

		[Token(Token = "0x4000F12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private GameObject sendFriendRequestPanel;

		[Token(Token = "0x4000F13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private TMP_Text playerIdText;

		[Token(Token = "0x4000F14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private TMP_InputField friendIdInput;

		[Token(Token = "0x4000F15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private VRButton addFriendButton;

		[Token(Token = "0x4000F16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBD3EB0", Offset = "0xBD3EB0")]
		private LocalizedString sendingFriendRequestString;

		[Token(Token = "0x4000F17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private LocalizedString userBlockedString;

		[Token(Token = "0x4000F18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private LocalizedString userNotFoundString;

		[Token(Token = "0x4000F19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private LocalizedString userAlreadyFriendString;

		[Token(Token = "0x4000F1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private LocalizedString friendRequestSentString;

		[Token(Token = "0x4000F1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private readonly ReactiveSource<FriendsFilter> _filter;

		[Token(Token = "0x4000F1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private readonly ReactiveSource<LocalizedString> _friendRequestStatus;

		[Token(Token = "0x4000F1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private readonly ReactiveSource<bool> _hasSendFriendRequestReturned;

		[Token(Token = "0x4000F1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private readonly ReactiveSource<bool> _isLoadingList;

		[Token(Token = "0x4000F1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private readonly ReactiveSource<int> _pageIndex;

		[Token(Token = "0x4000F20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private CancellationTokenSource _cts;

		[Token(Token = "0x4000F21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private ReactiveSubscription _friendsStatusSubscription;

		[Token(Token = "0x4000F22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private Task _getFriendCodeTask;

		[Token(Token = "0x4000F23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD3F3C", Offset = "0xBD3F3C")]
		private readonly Reactive<string> <Page>k__BackingField;

		[Token(Token = "0x4000F24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD3F4C", Offset = "0xBD3F4C")]
		private readonly Reactive<bool> <HasNextPage>k__BackingField;

		[Token(Token = "0x4000F25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD3F5C", Offset = "0xBD3F5C")]
		private readonly Reactive<bool> <HasPrevPage>k__BackingField;

		[Token(Token = "0x170002DB")]
		public Reactive<string> Page
		{
			[Token(Token = "0x6001094")]
			[Address(RVA = "0x11FCEE0", Offset = "0x11FCEE0", VA = "0x11FCEE0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDFA18", Offset = "0xBDFA18")]
			get
			{
				return default(Reactive<string>);
			}
		}

		[Token(Token = "0x170002DC")]
		public Reactive<bool> HasNextPage
		{
			[Token(Token = "0x6001095")]
			[Address(RVA = "0x11FCEE8", Offset = "0x11FCEE8", VA = "0x11FCEE8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDFA28", Offset = "0xBDFA28")]
			get
			{
				return default(Reactive<bool>);
			}
		}

		[Token(Token = "0x170002DD")]
		public Reactive<bool> HasPrevPage
		{
			[Token(Token = "0x6001096")]
			[Address(RVA = "0x11FCEF0", Offset = "0x11FCEF0", VA = "0x11FCEF0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDFA38", Offset = "0xBDFA38")]
			get
			{
				return default(Reactive<bool>);
			}
		}

		[Token(Token = "0x170002DE")]
		public Reactive<LocalizedString> FriendRequestStatus
		{
			[Token(Token = "0x6001097")]
			[Address(RVA = "0x11FCEF8", Offset = "0x11FCEF8", VA = "0x11FCEF8")]
			get
			{
				return default(Reactive<LocalizedString>);
			}
		}

		[Token(Token = "0x170002DF")]
		public Reactive<bool> HasSendFriendRequestReturned
		{
			[Token(Token = "0x6001098")]
			[Address(RVA = "0x11FCF4C", Offset = "0x11FCF4C", VA = "0x11FCF4C")]
			get
			{
				return default(Reactive<bool>);
			}
		}

		[Token(Token = "0x170002E0")]
		public Reactive<bool> IsLoadingList
		{
			[Token(Token = "0x6001099")]
			[Address(RVA = "0x11FCFA0", Offset = "0x11FCFA0", VA = "0x11FCFA0")]
			get
			{
				return default(Reactive<bool>);
			}
		}

		[Token(Token = "0x6001093")]
		[Address(RVA = "0x11FC968", Offset = "0x11FC968", VA = "0x11FC968")]
		public SocialPlayerListPage()
		{
		}

		[Token(Token = "0x600109A")]
		[Address(RVA = "0x11FCFF4", Offset = "0x11FCFF4", VA = "0x11FCFF4")]
		private void Awake()
		{
		}

		[Token(Token = "0x600109B")]
		[Address(RVA = "0x11FD070", Offset = "0x11FD070", VA = "0x11FD070")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600109C")]
		[Address(RVA = "0x11FD4A8", Offset = "0x11FD4A8", VA = "0x11FD4A8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600109D")]
		[Address(RVA = "0x11FD588", Offset = "0x11FD588", VA = "0x11FD588")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xBDFA48", Offset = "0xBDFA48")]
		private void AddFriendInput()
		{
		}

		[Token(Token = "0x600109E")]
		[Address(RVA = "0x11FD3A8", Offset = "0x11FD3A8", VA = "0x11FD3A8")]
		private void RequestPage()
		{
		}

		[Token(Token = "0x600109F")]
		[Address(RVA = "0x11FD700", Offset = "0x11FD700", VA = "0x11FD700")]
		private void FriendsStatusUpdated(GetFriendsStatusResult friendsStatusResult)
		{
		}

		[Token(Token = "0x60010A0")]
		[Address(RVA = "0x11FD86C", Offset = "0x11FD86C", VA = "0x11FD86C")]
		private void UpdatePlayerList(Cortopia.CortopiaPlayFabModels.FriendStatus[] friends)
		{
		}

		[Token(Token = "0x60010A1")]
		[Address(RVA = "0x11FD64C", Offset = "0x11FD64C", VA = "0x11FD64C")]
		private void ClearPlayerList()
		{
		}

		[Token(Token = "0x60010A2")]
		[Address(RVA = "0x11FD7E0", Offset = "0x11FD7E0", VA = "0x11FD7E0")]
		private int GetLastPageIndex(GetFriendsStatusResult res)
		{
			return default(int);
		}

		[Token(Token = "0x60010A3")]
		[Address(RVA = "0x11FEABC", Offset = "0x11FEABC", VA = "0x11FEABC")]
		public void NextPage()
		{
		}

		[Token(Token = "0x60010A4")]
		[Address(RVA = "0x11FEC54", Offset = "0x11FEC54", VA = "0x11FEC54")]
		public void PrevPage()
		{
		}

		[Token(Token = "0x60010A5")]
		[Address(RVA = "0x11FEDA8", Offset = "0x11FEDA8", VA = "0x11FEDA8")]
		public FriendsFilter GetActiveFilter()
		{
			return default(FriendsFilter);
		}

		[Token(Token = "0x60010A6")]
		[Address(RVA = "0x11FC530", Offset = "0x11FC530", VA = "0x11FC530")]
		public void SetActiveFilter(FriendsFilter filter)
		{
		}

		[Token(Token = "0x60010A7")]
		[Address(RVA = "0x11FD328", Offset = "0x11FD328", VA = "0x11FD328")]
		public void GetFriendCode()
		{
		}

		[Token(Token = "0x60010A8")]
		[Address(RVA = "0x11FEDFC", Offset = "0x11FEDFC", VA = "0x11FEDFC")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xBDFAA8", Offset = "0xBDFAA8")]
		private Task GetFriendCodeAsync()
		{
			return null;
		}

		[Token(Token = "0x60010A9")]
		[Address(RVA = "0x11FEF18", Offset = "0x11FEF18", VA = "0x11FEF18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDFB08", Offset = "0xBDFB08")]
		private (int, int) <.ctor>b__27_1()
		{
			return default((int, int));
		}

		[Token(Token = "0x60010AA")]
		[Address(RVA = "0x11FF008", Offset = "0x11FF008", VA = "0x11FF008")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDFB18", Offset = "0xBDFB18")]
		private Reactive<(int, int)> <.ctor>b__27_2()
		{
			return default(Reactive<(int, int)>);
		}
	}
	[Token(Token = "0x2000566")]
	public class SocialPlayerUI : MonoBehaviour, IInspectablePlayer
	{
		[Serializable]
		[Token(Token = "0x2000567")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBC9F84", Offset = "0xBC9F84")]
		private sealed class <>c
		{
			[Token(Token = "0x4000F6A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000F6B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<(bool, bool), bool> <>9__58_0;

			[Token(Token = "0x60010E8")]
			[Address(RVA = "0x105FE40", Offset = "0x105FE40", VA = "0x105FE40")]
			public <>c()
			{
			}

			[Token(Token = "0x60010E9")]
			[Address(RVA = "0x105FE48", Offset = "0x105FE48", VA = "0x105FE48")]
			internal bool <get_IsOnlineOrDifferentVersion>b__58_0((bool, bool) x)
			{
				return default(bool);
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000568")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBC9F94", Offset = "0xBC9F94")]
		private struct <SetAvatarImage>d__110 : IAsyncStateMachine
		{
			[Token(Token = "0x4000F6C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000F6D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4000F6E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public SocialPlayerUI <>4__this;

			[Token(Token = "0x4000F6F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public string url;

			[Token(Token = "0x4000F70")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private TaskAwaiter<OrientedTexture2D> <>u__1;

			[Token(Token = "0x60010EA")]
			[Address(RVA = "0x10602FC", Offset = "0x10602FC", VA = "0x10602FC", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x60010EB")]
			[Address(RVA = "0x106057C", Offset = "0x106057C", VA = "0x106057C", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000569")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBC9FA4", Offset = "0xBC9FA4")]
		private struct <GetAvatarImageAsync>d__111 : IAsyncStateMachine
		{
			[Token(Token = "0x4000F71")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000F72")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder<OrientedTexture2D> <>t__builder;

			[Token(Token = "0x4000F73")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string url;

			[Token(Token = "0x4000F74")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public SocialPlayerUI <>4__this;

			[Token(Token = "0x4000F75")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private TaskAwaiter<OrientedTexture2D> <>u__1;

			[Token(Token = "0x60010EC")]
			[Address(RVA = "0x105FFC0", Offset = "0x105FFC0", VA = "0x105FFC0", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x60010ED")]
			[Address(RVA = "0x10602A0", Offset = "0x10602A0", VA = "0x10602A0", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x200056A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBC9FB4", Offset = "0xBC9FB4")]
		private sealed class <>c__DisplayClass118_0
		{
			[Token(Token = "0x4000F76")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SocialPlayerUI <>4__this;

			[Token(Token = "0x4000F77")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public (UnityAction, LocalizedString) response1;

			[Token(Token = "0x4000F78")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public (UnityAction, LocalizedString) response2;

			[Token(Token = "0x60010EE")]
			[Address(RVA = "0x105FE60", Offset = "0x105FE60", VA = "0x105FE60")]
			public <>c__DisplayClass118_0()
			{
			}

			[Token(Token = "0x60010EF")]
			[Address(RVA = "0x105FE68", Offset = "0x105FE68", VA = "0x105FE68")]
			internal void <SetAction>b__0()
			{
			}

			[Token(Token = "0x60010F0")]
			[Address(RVA = "0x105FF14", Offset = "0x105FF14", VA = "0x105FF14")]
			internal void <SetAction>b__1()
			{
			}
		}

		[Token(Token = "0x4000F33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBD3F6C", Offset = "0xBD3F6C")]
		[SerializeField]
		private TMP_Text playerNameField;

		[Token(Token = "0x4000F34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private TMP_Text playerRankField;

		[Token(Token = "0x4000F35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private RawImage avatarImage;

		[Token(Token = "0x4000F36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Texture2D defaultAvatar;

		[Token(Token = "0x4000F37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private GameObject blockedUI;

		[Token(Token = "0x4000F38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBD3FF8", Offset = "0xBD3FF8")]
		private VRButton blockButton;

		[Token(Token = "0x4000F39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private VRButton unblockButton;

		[Token(Token = "0x4000F3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private VRButton removeFriendButton;

		[Token(Token = "0x4000F3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private VRButton addFriendButton;

		[Token(Token = "0x4000F3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private VRToggle favoriteToggle;

		[Token(Token = "0x4000F3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBD4084", Offset = "0xBD4084")]
		[SerializeField]
		private LocalizeStringEvent actionStatusField;

		[Token(Token = "0x4000F3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private LocalizeStringEvent[] actionButtonTexts;

		[Token(Token = "0x4000F3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private VRButton[] actionButtons;

		[Token(Token = "0x4000F40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBD40F0", Offset = "0xBD40F0")]
		[SerializeField]
		private LocalizedString inMainMenuString;

		[Token(Token = "0x4000F41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private LocalizedString inQuickplayString;

		[Token(Token = "0x4000F42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private LocalizedString offlineString;

		[Token(Token = "0x4000F43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private LocalizedString differentVersionString;

		[Token(Token = "0x4000F44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private LocalizedString acceptString;

		[Token(Token = "0x4000F45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private LocalizedString declineString;

		[Token(Token = "0x4000F46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private LocalizedString cancelString;

		[Token(Token = "0x4000F47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private LocalizedString kickString;

		[Token(Token = "0x4000F48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private LocalizedString joinString;

		[Token(Token = "0x4000F49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private LocalizedString inviteString;

		[Token(Token = "0x4000F4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private LocalizedString friendRequestString;

		[Token(Token = "0x4000F4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private LocalizedString friendRequestSentString;

		[Token(Token = "0x4000F4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private LocalizedString inCustomGameString;

		[Token(Token = "0x4000F4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[SerializeField]
		private LocalizedString inCustomGameWithSeatsString;

		[Token(Token = "0x4000F4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[SerializeField]
		private LocalizedString customGameInviteString;

		[Token(Token = "0x4000F4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[SerializeField]
		private LocalizedString customGameLeaderString;

		[Token(Token = "0x4000F50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[SerializeField]
		private LocalizedString inPartyString;

		[Token(Token = "0x4000F51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[SerializeField]
		private LocalizedString inPartyWithSeatsString;

		[Token(Token = "0x4000F52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[SerializeField]
		private LocalizedString partyInviteString;

		[Token(Token = "0x4000F53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[SerializeField]
		private LocalizedString partyLeaderString;

		[Token(Token = "0x4000F54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[SerializeField]
		private LocalizedString wantsToJoinString;

		[Token(Token = "0x4000F55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[SerializeField]
		private LocalizedString invitationSentString;

		[Token(Token = "0x4000F56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[SerializeField]
		private LocalizedString joinRequestSentString;

		[Token(Token = "0x4000F57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBD429C", Offset = "0xBD429C")]
		[SerializeField]
		private Sprite joinFriendIcon;

		[Token(Token = "0x4000F58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		[SerializeField]
		private Sprite inviteFriendIcon;

		[Token(Token = "0x4000F59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		[SerializeField]
		private Sprite acceptInviteIcon;

		[Token(Token = "0x4000F5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		[SerializeField]
		private Sprite denyInviteIcon;

		[Token(Token = "0x4000F5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		private readonly ReactiveSource<bool> _isOnlineSource;

		[Token(Token = "0x4000F5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		private readonly ReactiveSource<bool> _isDifferentVersionSource;

		[Token(Token = "0x4000F5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		private readonly ReactiveSource<Sprite> _response1Icon;

		[Token(Token = "0x4000F5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		private readonly ReactiveSource<Sprite> _response2Icon;

		[Token(Token = "0x4000F5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		private PlayerInspectorOffset _playerInspectorOffset;

		[Token(Token = "0x4000F60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD4318", Offset = "0xBD4318")]
		private PlayFabFriendsListener <PlayFabFriendsListener>k__BackingField;

		[Token(Token = "0x4000F61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD4328", Offset = "0xBD4328")]
		private GameObject <RemoveFriendErrorPanel>k__BackingField;

		[Token(Token = "0x4000F62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD4338", Offset = "0xBD4338")]
		private string <EntityId>k__BackingField;

		[Token(Token = "0x4000F63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD4348", Offset = "0xBD4348")]
		private Task<OrientedTexture2D> <ImageAsync>k__BackingField;

		[Token(Token = "0x4000F64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD4358", Offset = "0xBD4358")]
		private int <Level>k__BackingField;

		[Token(Token = "0x4000F65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD4368", Offset = "0xBD4368")]
		private FriendOpportunity? <Opportunity>k__BackingField;

		[Token(Token = "0x4000F66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1AC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD4378", Offset = "0xBD4378")]
		private bool <IsFavourite>k__BackingField;

		[Token(Token = "0x4000F67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1AD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD4388", Offset = "0xBD4388")]
		private bool <CanMute>k__BackingField;

		[Token(Token = "0x4000F68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1AE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD4398", Offset = "0xBD4398")]
		private bool <CanKick>k__BackingField;

		[Token(Token = "0x170002E1")]
		public PlayFabFriendsListener PlayFabFriendsListener
		{
			[Token(Token = "0x60010B4")]
			[Address(RVA = "0x11FF124", Offset = "0x11FF124", VA = "0x11FF124")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDFB48", Offset = "0xBDFB48")]
			get
			{
				return null;
			}
			[Token(Token = "0x60010B5")]
			[Address(RVA = "0x11FF12C", Offset = "0x11FF12C", VA = "0x11FF12C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDFB58", Offset = "0xBDFB58")]
			set
			{
			}
		}

		[Token(Token = "0x170002E2")]
		public GameObject RemoveFriendErrorPanel
		{
			[Token(Token = "0x60010B6")]
			[Address(RVA = "0x11FF134", Offset = "0x11FF134", VA = "0x11FF134")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDFB68", Offset = "0xBDFB68")]
			get
			{
				return null;
			}
			[Token(Token = "0x60010B7")]
			[Address(RVA = "0x11FF13C", Offset = "0x11FF13C", VA = "0x11FF13C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDFB78", Offset = "0xBDFB78")]
			set
			{
			}
		}

		[Token(Token = "0x170002E3")]
		public Reactive<bool> IsOnline
		{
			[Token(Token = "0x60010B8")]
			[Address(RVA = "0x11FF144", Offset = "0x11FF144", VA = "0x11FF144")]
			get
			{
				return default(Reactive<bool>);
			}
		}

		[Token(Token = "0x170002E4")]
		public Reactive<bool> IsDifferentVersion
		{
			[Token(Token = "0x60010B9")]
			[Address(RVA = "0x11FF198", Offset = "0x11FF198", VA = "0x11FF198")]
			get
			{
				return default(Reactive<bool>);
			}
		}

		[Token(Token = "0x170002E5")]
		public Reactive<bool> IsOnlineOrDifferentVersion
		{
			[Token(Token = "0x60010BA")]
			[Address(RVA = "0x11FF1EC", Offset = "0x11FF1EC", VA = "0x11FF1EC")]
			get
			{
				return default(Reactive<bool>);
			}
		}

		[Token(Token = "0x170002E6")]
		public Reactive<Sprite> Response1Icon
		{
			[Token(Token = "0x60010BB")]
			[Address(RVA = "0x11FF348", Offset = "0x11FF348", VA = "0x11FF348")]
			get
			{
				return default(Reactive<Sprite>);
			}
		}

		[Token(Token = "0x170002E7")]
		public Reactive<Sprite> Response2Icon
		{
			[Token(Token = "0x60010BC")]
			[Address(RVA = "0x11FF39C", Offset = "0x11FF39C", VA = "0x11FF39C")]
			get
			{
				return default(Reactive<Sprite>);
			}
		}

		[Token(Token = "0x170002E8")]
		public string EntityId
		{
			[Token(Token = "0x60010C0")]
			[Address(RVA = "0x11FF8E4", Offset = "0x11FF8E4", VA = "0x11FF8E4", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDFB88", Offset = "0xBDFB88")]
			get
			{
				return null;
			}
			[Token(Token = "0x60010C1")]
			[Address(RVA = "0x11FF8EC", Offset = "0x11FF8EC", VA = "0x11FF8EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDFB98", Offset = "0xBDFB98")]
			private set
			{
			}
		}

		[Token(Token = "0x170002E9")]
		public Task<OrientedTexture2D> ImageAsync
		{
			[Token(Token = "0x60010C2")]
			[Address(RVA = "0x11FF8F4", Offset = "0x11FF8F4", VA = "0x11FF8F4", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDFBA8", Offset = "0xBDFBA8")]
			get
			{
				return null;
			}
			[Token(Token = "0x60010C3")]
			[Address(RVA = "0x11FF8FC", Offset = "0x11FF8FC", VA = "0x11FF8FC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDFBB8", Offset = "0xBDFBB8")]
			private set
			{
			}
		}

		[Token(Token = "0x170002EA")]
		public string DisplayName
		{
			[Token(Token = "0x60010C4")]
			[Address(RVA = "0x11FF904", Offset = "0x11FF904", VA = "0x11FF904", Slot = "6")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002EB")]
		public int Level
		{
			[Token(Token = "0x60010C5")]
			[Address(RVA = "0x11FF928", Offset = "0x11FF928", VA = "0x11FF928", Slot = "7")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDFBC8", Offset = "0xBDFBC8")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60010C6")]
			[Address(RVA = "0x11FF930", Offset = "0x11FF930", VA = "0x11FF930")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDFBD8", Offset = "0xBDFBD8")]
			private set
			{
			}
		}

		[Token(Token = "0x170002EC")]
		public FriendOpportunity? Opportunity
		{
			[Token(Token = "0x60010C7")]
			[Address(RVA = "0x11FF938", Offset = "0x11FF938", VA = "0x11FF938", Slot = "8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDFBE8", Offset = "0xBDFBE8")]
			get
			{
				return null;
			}
			[Token(Token = "0x60010C8")]
			[Address(RVA = "0x11FF944", Offset = "0x11FF944", VA = "0x11FF944")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDFBF8", Offset = "0xBDFBF8")]
			private set
			{
			}
		}

		[Token(Token = "0x170002ED")]
		public bool IsFavourite
		{
			[Token(Token = "0x60010C9")]
			[Address(RVA = "0x11FF950", Offset = "0x11FF950", VA = "0x11FF950", Slot = "9")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDFC08", Offset = "0xBDFC08")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60010CA")]
			[Address(RVA = "0x11FF958", Offset = "0x11FF958", VA = "0x11FF958")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDFC18", Offset = "0xBDFC18")]
			private set
			{
			}
		}

		[Token(Token = "0x170002EE")]
		public bool CanMute
		{
			[Token(Token = "0x60010CB")]
			[Address(RVA = "0x11FF964", Offset = "0x11FF964", VA = "0x11FF964", Slot = "10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDFC28", Offset = "0xBDFC28")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60010CC")]
			[Address(RVA = "0x11FF96C", Offset = "0x11FF96C", VA = "0x11FF96C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDFC38", Offset = "0xBDFC38")]
			private set
			{
			}
		}

		[Token(Token = "0x170002EF")]
		public bool CanKick
		{
			[Token(Token = "0x60010CD")]
			[Address(RVA = "0x11FF978", Offset = "0x11FF978", VA = "0x11FF978", Slot = "11")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDFC48", Offset = "0xBDFC48")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60010CE")]
			[Address(RVA = "0x11FF980", Offset = "0x11FF980", VA = "0x11FF980")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDFC58", Offset = "0xBDFC58")]
			private set
			{
			}
		}

		[Token(Token = "0x14000009")]
		public event System.EventHandler Updated
		{
			[Token(Token = "0x60010D0")]
			[Address(RVA = "0x11FFA28", Offset = "0x11FFA28", VA = "0x11FFA28", Slot = "19")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDFC68", Offset = "0xBDFC68")]
			add
			{
			}
			[Token(Token = "0x60010D1")]
			[Address(RVA = "0x11FFACC", Offset = "0x11FFACC", VA = "0x11FFACC", Slot = "20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDFC78", Offset = "0xBDFC78")]
			remove
			{
			}
		}

		[Token(Token = "0x60010BD")]
		[Address(RVA = "0x11FF3F0", Offset = "0x11FF3F0", VA = "0x11FF3F0")]
		private void Awake()
		{
		}

		[Token(Token = "0x60010BE")]
		[Address(RVA = "0x11FF4B4", Offset = "0x11FF4B4", VA = "0x11FF4B4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60010BF")]
		[Address(RVA = "0x11FF6CC", Offset = "0x11FF6CC", VA = "0x11FF6CC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60010CF")]
		[Address(RVA = "0x11FF98C", Offset = "0x11FF98C", VA = "0x11FF98C", Slot = "15")]
		public void SendFriendRequest()
		{
		}

		[Token(Token = "0x60010D2")]
		[Address(RVA = "0x11FFB70", Offset = "0x11FFB70", VA = "0x11FFB70", Slot = "12")]
		public void RemoveFriend()
		{
		}

		[Token(Token = "0x60010D3")]
		[Address(RVA = "0x11FFBB0", Offset = "0x11FFBB0", VA = "0x11FFBB0", Slot = "13")]
		public void AcceptFriendRequest()
		{
		}

		[Token(Token = "0x60010D4")]
		[Address(RVA = "0x11FFC4C", Offset = "0x11FFC4C", VA = "0x11FFC4C", Slot = "14")]
		public void SetUserIsBlocked(bool isBlocked)
		{
		}

		[Token(Token = "0x60010D5")]
		[Address(RVA = "0x11FFC90", Offset = "0x11FFC90", VA = "0x11FFC90", Slot = "16")]
		public void SetFavorite(bool isFavorite)
		{
		}

		[Token(Token = "0x60010D6")]
		[Address(RVA = "0x11FFCD4", Offset = "0x11FFCD4", VA = "0x11FFCD4")]
		private void AddFriendInput()
		{
		}

		[Token(Token = "0x60010D7")]
		[Address(RVA = "0x11FFD50", Offset = "0x11FFD50", VA = "0x11FFD50")]
		private void RemoveFriendInput()
		{
		}

		[Token(Token = "0x60010D8")]
		[Address(RVA = "0x11FFEEC", Offset = "0x11FFEEC", VA = "0x11FFEEC")]
		private void BlockPlayerInput()
		{
		}

		[Token(Token = "0x60010D9")]
		[Address(RVA = "0x11FFFFC", Offset = "0x11FFFFC", VA = "0x11FFFFC")]
		private void UnblockPlayerInput()
		{
		}

		[Token(Token = "0x60010DA")]
		[Address(RVA = "0x120007C", Offset = "0x120007C", VA = "0x120007C")]
		private void OnFavoriteToggleInput(bool isFavorite)
		{
		}

		[Token(Token = "0x60010DB")]
		[Address(RVA = "0x11FDC78", Offset = "0x11FDC78", VA = "0x11FDC78")]
		public void UpdatePlayerInfo(Cortopia.CortopiaPlayFabModels.FriendStatus data)
		{
		}

		[Token(Token = "0x60010DC")]
		[Address(RVA = "0x1200114", Offset = "0x1200114", VA = "0x1200114")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xBDFC88", Offset = "0xBDFC88")]
		private void SetAvatarImage(string url)
		{
		}

		[Token(Token = "0x60010DD")]
		[Address(RVA = "0x120059C", Offset = "0x120059C", VA = "0x120059C")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xBDFCE8", Offset = "0xBDFCE8")]
		private Task<OrientedTexture2D> GetAvatarImageAsync(string url)
		{
			return null;
		}

		[Token(Token = "0x60010DE")]
		[Address(RVA = "0x12006E4", Offset = "0x12006E4", VA = "0x12006E4")]
		private void CancelJoinFriend()
		{
		}

		[Token(Token = "0x60010DF")]
		[Address(RVA = "0x1200724", Offset = "0x1200724", VA = "0x1200724")]
		private void JoinFriend()
		{
		}

		[Token(Token = "0x60010E0")]
		[Address(RVA = "0x1200764", Offset = "0x1200764", VA = "0x1200764", Slot = "17")]
		public void RejectMember()
		{
		}

		[Token(Token = "0x60010E1")]
		[Address(RVA = "0x12007A4", Offset = "0x12007A4", VA = "0x12007A4", Slot = "18")]
		public void LeaveParty()
		{
		}

		[Token(Token = "0x60010E2")]
		[Address(RVA = "0x12007E0", Offset = "0x12007E0", VA = "0x12007E0")]
		private void InviteFriend()
		{
		}

		[Token(Token = "0x60010E3")]
		[Address(RVA = "0x1200820", Offset = "0x1200820", VA = "0x1200820")]
		public void OpenPlayerInspector()
		{
		}

		[Token(Token = "0x60010E4")]
		[Address(RVA = "0x12001DC", Offset = "0x12001DC", VA = "0x12001DC")]
		private void SetAction(LocalizedString text, [System.Runtime.InteropServices.Optional] (UnityAction, LocalizedString) response1, [System.Runtime.InteropServices.Optional] (UnityAction, LocalizedString) response2)
		{
		}

		[Token(Token = "0x60010E5")]
		[Address(RVA = "0x11FEA28", Offset = "0x11FEA28", VA = "0x11FEA28")]
		public void UpdateInspector()
		{
		}

		[Token(Token = "0x60010E6")]
		[Address(RVA = "0x1200958", Offset = "0x1200958", VA = "0x1200958")]
		public SocialPlayerUI()
		{
		}
	}
	[Token(Token = "0x200056B")]
	public class TabButtonPopout : MonoBehaviour
	{
		[Token(Token = "0x4000F79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private VRToggle vrToggleButton;

		[Token(Token = "0x4000F7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float popoutSize;

		[Token(Token = "0x4000F7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private Vector3 _defaultSize;

		[Token(Token = "0x60010F1")]
		[Address(RVA = "0x1152178", Offset = "0x1152178", VA = "0x1152178")]
		private void Awake()
		{
		}

		[Token(Token = "0x60010F2")]
		[Address(RVA = "0x11521C0", Offset = "0x11521C0", VA = "0x11521C0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60010F3")]
		[Address(RVA = "0x1152284", Offset = "0x1152284", VA = "0x1152284")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60010F4")]
		[Address(RVA = "0x1152348", Offset = "0x1152348", VA = "0x1152348")]
		private void ToggleValueChanged(bool toggleValue)
		{
		}

		[Token(Token = "0x60010F5")]
		[Address(RVA = "0x11523DC", Offset = "0x11523DC", VA = "0x11523DC")]
		public TabButtonPopout()
		{
		}
	}
}
namespace Cortopia.Scripts.UI.Rewards
{
	[Token(Token = "0x200056C")]
	public class ChallengeProgressCard : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200056D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBC9FC4", Offset = "0xBC9FC4")]
		private sealed class <>c
		{
			[Token(Token = "0x4000F89")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000F8A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<(float, int), float> <>9__18_0;

			[Token(Token = "0x4000F8B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<(float, int), string> <>9__20_0;

			[Token(Token = "0x60010FF")]
			[Address(RVA = "0x102419C", Offset = "0x102419C", VA = "0x102419C")]
			public <>c()
			{
			}

			[Token(Token = "0x6001100")]
			[Address(RVA = "0x10241A4", Offset = "0x10241A4", VA = "0x10241A4")]
			internal float <get_NormalizedChallengeProgress>b__18_0((float, int) values)
			{
				return default(float);
			}

			[Token(Token = "0x6001101")]
			[Address(RVA = "0x10241B8", Offset = "0x10241B8", VA = "0x10241B8")]
			internal string <get_ChallengeProgressString>b__20_0((float, int) values)
			{
				return null;
			}
		}

		[Token(Token = "0x4000F7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly LocalizedString EmptyString;

		[Token(Token = "0x4000F7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly int AnimIsCompleted;

		[Token(Token = "0x4000F7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Animator animator;

		[Token(Token = "0x4000F7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float sliderAnimTime;

		[Token(Token = "0x4000F80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly ReactiveSource<LocalizedString> _challengeDescription;

		[Token(Token = "0x4000F81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly ReactiveSource<int> _challengeGoal;

		[Token(Token = "0x4000F82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private readonly ReactiveSource<float> _challengeProgress;

		[Token(Token = "0x4000F83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private readonly ReactiveSource<LocalizedString> _challengeTitleSource;

		[Token(Token = "0x4000F84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private readonly ReactiveTransaction _transaction;

		[Token(Token = "0x4000F85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float _elapsedSliderTime;

		[Token(Token = "0x4000F86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private int _startingProgress;

		[Token(Token = "0x4000F87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int _targetProgress;

		[Token(Token = "0x4000F88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private bool _justCompleted;

		[Token(Token = "0x170002F0")]
		public Reactive<LocalizedString> ChallengeTitle
		{
			[Token(Token = "0x60010F6")]
			[Address(RVA = "0x1338410", Offset = "0x1338410", VA = "0x1338410")]
			get
			{
				return default(Reactive<LocalizedString>);
			}
		}

		[Token(Token = "0x170002F1")]
		public Reactive<LocalizedString> ChallengeDescription
		{
			[Token(Token = "0x60010F7")]
			[Address(RVA = "0x1338464", Offset = "0x1338464", VA = "0x1338464")]
			get
			{
				return default(Reactive<LocalizedString>);
			}
		}

		[Token(Token = "0x170002F2")]
		public Reactive<float> NormalizedChallengeProgress
		{
			[Token(Token = "0x60010F8")]
			[Address(RVA = "0x13384B8", Offset = "0x13384B8", VA = "0x13384B8")]
			get
			{
				return default(Reactive<float>);
			}
		}

		[Token(Token = "0x170002F3")]
		public Reactive<string> ChallengeProgressString
		{
			[Token(Token = "0x60010F9")]
			[Address(RVA = "0x1338654", Offset = "0x1338654", VA = "0x1338654")]
			get
			{
				return default(Reactive<string>);
			}
		}

		[Token(Token = "0x60010FA")]
		[Address(RVA = "0x13387F0", Offset = "0x13387F0", VA = "0x13387F0")]
		private void Update()
		{
		}

		[Token(Token = "0x60010FB")]
		[Address(RVA = "0x13389F8", Offset = "0x13389F8", VA = "0x13389F8")]
		public void SetData(ChallengeClass challenge, int addedProgress, bool justCompleted)
		{
		}

		[Token(Token = "0x60010FC")]
		[Address(RVA = "0x1338C98", Offset = "0x1338C98", VA = "0x1338C98")]
		public ChallengeProgressCard()
		{
		}
	}
	[Token(Token = "0x200056E")]
	public class ProgressionUpdateMenu : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200056F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBC9FD4", Offset = "0xBC9FD4")]
		private sealed class <>c
		{
			[Token(Token = "0x4000FA5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000FA6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<GameObject, bool> <>9__26_0;

			[Token(Token = "0x4000FA7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<ChallengeUpdate, bool> <>9__29_0;

			[Token(Token = "0x4000FA8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TupleElementNamesAttribute", RVA = "0xBD4634", Offset = "0xBD4634")]
			public static Func<ChallengeUpdate, (ChallengeUpdate, ChallengeClass)> <>9__29_1;

			[Token(Token = "0x4000FA9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "TupleElementNamesAttribute", RVA = "0xBD46A8", Offset = "0xBD46A8")]
			public static Func<(ChallengeUpdate, ChallengeClass), bool> <>9__29_2;

			[Token(Token = "0x4000FAA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "TupleElementNamesAttribute", RVA = "0xBD471C", Offset = "0xBD471C")]
			public static Func<(ChallengeUpdate, ChallengeClass), bool> <>9__29_3;

			[Token(Token = "0x4000FAB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[AttributeAttribute(Name = "TupleElementNamesAttribute", RVA = "0xBD4790", Offset = "0xBD4790")]
			public static Func<(ChallengeUpdate, ChallengeClass), int> <>9__29_4;

			[Token(Token = "0x4000FAC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public static Func<ChallengeUpdate, bool> <>9__29_5;

			[Token(Token = "0x4000FAD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public static Func<ChallengeUpdate, Unlockable> <>9__29_6;

			[Token(Token = "0x600110E")]
			[Address(RVA = "0x10549A4", Offset = "0x10549A4", VA = "0x10549A4")]
			public <>c()
			{
			}

			[Token(Token = "0x600110F")]
			[Address(RVA = "0x10549AC", Offset = "0x10549AC", VA = "0x10549AC")]
			internal bool <Update>b__26_0(GameObject progressedChallenge)
			{
				return default(bool);
			}

			[Token(Token = "0x6001110")]
			[Address(RVA = "0x10549D8", Offset = "0x10549D8", VA = "0x10549D8")]
			internal bool <UpdateData>b__29_0(ChallengeUpdate x)
			{
				return default(bool);
			}

			[Token(Token = "0x6001111")]
			[Address(RVA = "0x10549F0", Offset = "0x10549F0", VA = "0x10549F0")]
			internal (ChallengeUpdate, ChallengeClass) <UpdateData>b__29_1(ChallengeUpdate x)
			{
				return default((ChallengeUpdate, ChallengeClass));
			}

			[Token(Token = "0x6001112")]
			[Address(RVA = "0x1054AE8", Offset = "0x1054AE8", VA = "0x1054AE8")]
			internal bool <UpdateData>b__29_2([AttributeAttribute(Name = "TupleElementNamesAttribute", RVA = "0xBE4070", Offset = "0xBE4070")] (ChallengeUpdate, ChallengeClass) x)
			{
				return default(bool);
			}

			[Token(Token = "0x6001113")]
			[Address(RVA = "0x1054B5C", Offset = "0x1054B5C", VA = "0x1054B5C")]
			internal bool <UpdateData>b__29_3([AttributeAttribute(Name = "TupleElementNamesAttribute", RVA = "0xBE40E4", Offset = "0xBE40E4")] (ChallengeUpdate, ChallengeClass) x)
			{
				return default(bool);
			}

			[Token(Token = "0x6001114")]
			[Address(RVA = "0x1054B6C", Offset = "0x1054B6C", VA = "0x1054B6C")]
			internal int <UpdateData>b__29_4([AttributeAttribute(Name = "TupleElementNamesAttribute", RVA = "0xBE4158", Offset = "0xBE4158")] (ChallengeUpdate, ChallengeClass) x)
			{
				return default(int);
			}

			[Token(Token = "0x6001115")]
			[Address(RVA = "0x1054B90", Offset = "0x1054B90", VA = "0x1054B90")]
			internal bool <UpdateData>b__29_5(ChallengeUpdate x)
			{
				return default(bool);
			}

			[Token(Token = "0x6001116")]
			[Address(RVA = "0x1054BA0", Offset = "0x1054BA0", VA = "0x1054BA0")]
			internal Unlockable <UpdateData>b__29_6(ChallengeUpdate x)
			{
				return default(Unlockable);
			}
		}

		[Token(Token = "0x4000F8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBD43F8", Offset = "0xBD43F8")]
		private BoundValue<SpeculativeProgressionChange> speculativeProgressionChange;

		[Token(Token = "0x4000F8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBD4444", Offset = "0xBD4444")]
		private float levelUpDisplayTime;

		[Token(Token = "0x4000F8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private float maxChallengeDisplayCount;

		[Token(Token = "0x4000F8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float multiChallengeDelay;

		[Token(Token = "0x4000F90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private float multiUnlockDelay;

		[Token(Token = "0x4000F91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBD44C0", Offset = "0xBD44C0")]
		[SerializeField]
		private Vector2 unlockSpacing;

		[Token(Token = "0x4000F92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Vector2 challengeSpacing;

		[Token(Token = "0x4000F93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private int columns;

		[Token(Token = "0x4000F94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBD452C", Offset = "0xBD452C")]
		private GameObject challengeTitle;

		[Token(Token = "0x4000F95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private GameObject rewardTitle;

		[Token(Token = "0x4000F96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBD4588", Offset = "0xBD4588")]
		[SerializeField]
		private NewLevelUI newLevelUI;

		[Token(Token = "0x4000F97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private ChallengeProgressCard challengeProgressCardTemplate;

		[Token(Token = "0x4000F98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private UnlockSpellCard spellUnlockTemplate;

		[Token(Token = "0x4000F99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private UnlockCharacterCard characterUnlockTemplate;

		[Token(Token = "0x4000F9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private UnlockPortraitBorderCard portraitBorderUnlockTemplate;

		[Token(Token = "0x4000F9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private UnlockTitleCard titleUnlockTemplate;

		[Token(Token = "0x4000F9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private UnlockChallengeCard challengeUnlockTemplate;

		[Token(Token = "0x4000F9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private int _cachedLevelAfter;

		[Token(Token = "0x4000F9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private ProgressionUpdateState _currentUpdateState;

		[Token(Token = "0x4000F9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private float _elapsedTime;

		[Token(Token = "0x4000FA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private bool _hasNewLevel;

		[Token(Token = "0x4000FA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private List<GameObject> _newProgressedChallenges;

		[Token(Token = "0x4000FA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private List<GameObject> _newUnlocks;

		[Token(Token = "0x4000FA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private ReactiveSubscription _subscription;

		[Token(Token = "0x4000FA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private Vector3 _unlockOriginPosition;

		[Token(Token = "0x6001102")]
		[Address(RVA = "0x111C124", Offset = "0x111C124", VA = "0x111C124")]
		private void Start()
		{
		}

		[Token(Token = "0x6001103")]
		[Address(RVA = "0x111C254", Offset = "0x111C254", VA = "0x111C254")]
		private void Update()
		{
		}

		[Token(Token = "0x6001104")]
		[Address(RVA = "0x111C890", Offset = "0x111C890", VA = "0x111C890")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001105")]
		[Address(RVA = "0x111C97C", Offset = "0x111C97C", VA = "0x111C97C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001106")]
		[Address(RVA = "0x111C988", Offset = "0x111C988", VA = "0x111C988")]
		private void UpdateData(SpeculativeProgressionChange newData)
		{
		}

		[Token(Token = "0x6001107")]
		[Address(RVA = "0x111DB24", Offset = "0x111DB24", VA = "0x111DB24")]
		private Vector3 GetSpawnOffset(int index, float horizontalSpacing, float verticalSpacing)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001108")]
		[Address(RVA = "0x111D870", Offset = "0x111D870", VA = "0x111D870")]
		private void ResetChallengeProgressList()
		{
		}

		[Token(Token = "0x6001109")]
		[Address(RVA = "0x111D6C0", Offset = "0x111D6C0", VA = "0x111D6C0")]
		private void ResetUnlockList()
		{
		}

		[Token(Token = "0x600110A")]
		[Address(RVA = "0x111DBB8", Offset = "0x111DBB8", VA = "0x111DBB8")]
		private GameObject GetUnlockableTemplateInstance(Unlockable unlockedItem)
		{
			return null;
		}

		[Token(Token = "0x600110B")]
		[Address(RVA = "0x111DA20", Offset = "0x111DA20", VA = "0x111DA20")]
		private GameObject GetChallengeProgressTemplateInstance(ChallengeUpdate challengeUpdate, ChallengeClass challengeClass)
		{
			return null;
		}

		[Token(Token = "0x600110C")]
		[Address(RVA = "0x111E0F0", Offset = "0x111E0F0", VA = "0x111E0F0")]
		public ProgressionUpdateMenu()
		{
		}
	}
	[Token(Token = "0x2000570")]
	public class UnlockChallengeCard : MonoBehaviour
	{
		[Token(Token = "0x4000FAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly LocalizedString EmptyString;

		[Token(Token = "0x4000FAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly ReactiveSource<LocalizedString> _challengeDescription;

		[Token(Token = "0x4000FB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly ReactiveSource<LocalizedString> _challengeTitleSource;

		[Token(Token = "0x4000FB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly ReactiveTransaction _transaction;

		[Token(Token = "0x170002F4")]
		public Reactive<LocalizedString> ChallengeTitle
		{
			[Token(Token = "0x6001117")]
			[Address(RVA = "0x112B7B4", Offset = "0x112B7B4", VA = "0x112B7B4")]
			get
			{
				return default(Reactive<LocalizedString>);
			}
		}

		[Token(Token = "0x170002F5")]
		public Reactive<LocalizedString> ChallengeDescription
		{
			[Token(Token = "0x6001118")]
			[Address(RVA = "0x112B808", Offset = "0x112B808", VA = "0x112B808")]
			get
			{
				return default(Reactive<LocalizedString>);
			}
		}

		[Token(Token = "0x6001119")]
		[Address(RVA = "0x112B85C", Offset = "0x112B85C", VA = "0x112B85C")]
		public void SetData(ChallengeInfo challengeInfo)
		{
		}

		[Token(Token = "0x600111A")]
		[Address(RVA = "0x112BA04", Offset = "0x112BA04", VA = "0x112BA04")]
		public UnlockChallengeCard()
		{
		}
	}
	[Token(Token = "0x2000571")]
	public class UnlockCharacterCard : MonoBehaviour
	{
		[Token(Token = "0x4000FB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly LocalizedString EmptyString;

		[Token(Token = "0x4000FB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private IconType characterIconType;

		[Token(Token = "0x4000FB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly ReactiveSource<Sprite> _iconSource;

		[Token(Token = "0x4000FB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly ReactiveSource<LocalizedString> _nameSource;

		[Token(Token = "0x4000FB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly ReactiveTransaction _transaction;

		[Token(Token = "0x170002F6")]
		public Reactive<Sprite> Icon
		{
			[Token(Token = "0x600111C")]
			[Address(RVA = "0x112BB80", Offset = "0x112BB80", VA = "0x112BB80")]
			get
			{
				return default(Reactive<Sprite>);
			}
		}

		[Token(Token = "0x170002F7")]
		public Reactive<LocalizedString> Name
		{
			[Token(Token = "0x600111D")]
			[Address(RVA = "0x112BBD4", Offset = "0x112BBD4", VA = "0x112BBD4")]
			get
			{
				return default(Reactive<LocalizedString>);
			}
		}

		[Token(Token = "0x600111E")]
		[Address(RVA = "0x112BC28", Offset = "0x112BC28", VA = "0x112BC28")]
		public void SetData(PlayerClassConfigurationAsset asset)
		{
		}

		[Token(Token = "0x600111F")]
		[Address(RVA = "0x112BDE8", Offset = "0x112BDE8", VA = "0x112BDE8")]
		public UnlockCharacterCard()
		{
		}
	}
	[Token(Token = "0x2000572")]
	public class UnlockPortraitBorderCard : MonoBehaviour
	{
		[Token(Token = "0x4000FB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly ReactiveSource<Sprite> _iconSource;

		[Token(Token = "0x170002F8")]
		public Reactive<Sprite> Icon
		{
			[Token(Token = "0x6001121")]
			[Address(RVA = "0x112BF88", Offset = "0x112BF88", VA = "0x112BF88")]
			get
			{
				return default(Reactive<Sprite>);
			}
		}

		[Token(Token = "0x6001122")]
		[Address(RVA = "0x112BFDC", Offset = "0x112BFDC", VA = "0x112BFDC")]
		public void SetData(BorderDefinition borderDefinition)
		{
		}

		[Token(Token = "0x6001123")]
		[Address(RVA = "0x112C044", Offset = "0x112C044", VA = "0x112C044")]
		public UnlockPortraitBorderCard()
		{
		}
	}
	[Token(Token = "0x2000573")]
	public class UnlockSpellCard : MonoBehaviour
	{
		[Token(Token = "0x4000FB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly LocalizedString EmptyString;

		[Token(Token = "0x4000FB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly ReactiveSource<LocalizedString> _descriptionSource;

		[Token(Token = "0x4000FBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly ReactiveSource<SpellElement> _elementSource;

		[Token(Token = "0x4000FBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly ReactiveSource<Sprite> _iconSource;

		[Token(Token = "0x4000FBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly ReactiveSource<LocalizedString> _nameSource;

		[Token(Token = "0x4000FBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private readonly ReactiveTransaction _transaction;

		[Token(Token = "0x170002F9")]
		public Reactive<Sprite> Icon
		{
			[Token(Token = "0x6001124")]
			[Address(RVA = "0x112C0D0", Offset = "0x112C0D0", VA = "0x112C0D0")]
			get
			{
				return default(Reactive<Sprite>);
			}
		}

		[Token(Token = "0x170002FA")]
		public Reactive<LocalizedString> Name
		{
			[Token(Token = "0x6001125")]
			[Address(RVA = "0x112C124", Offset = "0x112C124", VA = "0x112C124")]
			get
			{
				return default(Reactive<LocalizedString>);
			}
		}

		[Token(Token = "0x170002FB")]
		public Reactive<LocalizedString> Description
		{
			[Token(Token = "0x6001126")]
			[Address(RVA = "0x112C178", Offset = "0x112C178", VA = "0x112C178")]
			get
			{
				return default(Reactive<LocalizedString>);
			}
		}

		[Token(Token = "0x170002FC")]
		public Reactive<SpellElement> Element
		{
			[Token(Token = "0x6001127")]
			[Address(RVA = "0x112C1CC", Offset = "0x112C1CC", VA = "0x112C1CC")]
			get
			{
				return default(Reactive<SpellElement>);
			}
		}

		[Token(Token = "0x6001128")]
		[Address(RVA = "0x112C220", Offset = "0x112C220", VA = "0x112C220")]
		public void SetData(SpellSetupAsset asset)
		{
		}

		[Token(Token = "0x6001129")]
		[Address(RVA = "0x112C450", Offset = "0x112C450", VA = "0x112C450")]
		public UnlockSpellCard()
		{
		}
	}
	[Token(Token = "0x2000574")]
	public class UnlockTitleCard : MonoBehaviour
	{
		[Token(Token = "0x4000FBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly LocalizedString EmptyString;

		[Token(Token = "0x4000FBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly ReactiveSource<LocalizedString> _nameSource;

		[Token(Token = "0x170002FD")]
		public Reactive<LocalizedString> Name
		{
			[Token(Token = "0x600112B")]
			[Address(RVA = "0x112C670", Offset = "0x112C670", VA = "0x112C670")]
			get
			{
				return default(Reactive<LocalizedString>);
			}
		}

		[Token(Token = "0x600112C")]
		[Address(RVA = "0x112C6C4", Offset = "0x112C6C4", VA = "0x112C6C4")]
		public void SetData(TitleDefinition titleDefinition)
		{
		}

		[Token(Token = "0x600112D")]
		[Address(RVA = "0x112C72C", Offset = "0x112C72C", VA = "0x112C72C")]
		public UnlockTitleCard()
		{
		}
	}
}
namespace Cortopia.Scripts.UI.RelicUI
{
	[Token(Token = "0x2000575")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xBC9FE4", Offset = "0xBC9FE4")]
	public class GhostWandRelicReactor : MonoBehaviour
	{
		[Token(Token = "0x4000FC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly int AnimGhostWandLeft;

		[Token(Token = "0x4000FC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static readonly int AnimGhostWandRight;

		[Token(Token = "0x4000FC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private BoundValue<bool> isActive;

		[Token(Token = "0x4000FC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private BoundValue<bool> isRightHand;

		[Token(Token = "0x4000FC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Cortopia.Scripts.CustomAttributes.ReadOnly]
		[SerializeField]
		private Animator animator;

		[Token(Token = "0x4000FC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private ReactiveSubscription _subscription;

		[Token(Token = "0x600112F")]
		[Address(RVA = "0xFA7E34", Offset = "0xFA7E34", VA = "0xFA7E34")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001130")]
		[Address(RVA = "0xFA7F5C", Offset = "0xFA7F5C", VA = "0xFA7F5C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001131")]
		[Address(RVA = "0xFA7F68", Offset = "0xFA7F68", VA = "0xFA7F68")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6001132")]
		[Address(RVA = "0xFA7FFC", Offset = "0xFA7FFC", VA = "0xFA7FFC")]
		private void OnGhostWandChanges((bool, bool) data)
		{
		}

		[Token(Token = "0x6001133")]
		[Address(RVA = "0xFA80EC", Offset = "0xFA80EC", VA = "0xFA80EC")]
		public GhostWandRelicReactor()
		{
		}
	}
	[Token(Token = "0x2000576")]
	public class RelicDestinationHighlight : MonoBehaviour
	{
		[Token(Token = "0x4000FC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private EntityView entityView;

		[Token(Token = "0x4000FC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject destinationTarget;

		[Token(Token = "0x4000FC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject hoverTarget;

		[Token(Token = "0x4000FC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool _isDestinationHighlighted;

		[Token(Token = "0x4000FCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		private bool _isHoverHighlighted;

		[Token(Token = "0x6001135")]
		[Address(RVA = "0x11EFECC", Offset = "0x11EFECC", VA = "0x11EFECC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001136")]
		[Address(RVA = "0x11EFF44", Offset = "0x11EFF44", VA = "0x11EFF44")]
		private void Update()
		{
		}

		[Token(Token = "0x6001137")]
		[Address(RVA = "0x11F0308", Offset = "0x11F0308", VA = "0x11F0308")]
		private void ToggleHoverHighlight(bool isHighlighted)
		{
		}

		[Token(Token = "0x6001138")]
		[Address(RVA = "0x11F02C8", Offset = "0x11F02C8", VA = "0x11F02C8")]
		private void ToggleDestinationHighlight(bool isHighlighted)
		{
		}

		[Token(Token = "0x6001139")]
		[Address(RVA = "0x11EFF08", Offset = "0x11EFF08", VA = "0x11EFF08")]
		private void ForceOffHighlights()
		{
		}

		[Token(Token = "0x600113A")]
		[Address(RVA = "0x11F01BC", Offset = "0x11F01BC", VA = "0x11F01BC")]
		private static bool IsHoldingRelic(Frame frame, EntityRef grabberEntity, out Relic relic)
		{
			return default(bool);
		}

		[Token(Token = "0x600113B")]
		[Address(RVA = "0x11F0348", Offset = "0x11F0348", VA = "0x11F0348")]
		public RelicDestinationHighlight()
		{
		}
	}
	[Token(Token = "0x2000577")]
	public class SpellCardProxy : MonoBehaviour
	{
		[Token(Token = "0x4000FCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private SpellCardUI spellCard;

		[Token(Token = "0x4000FCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool _isSpawned;

		[Token(Token = "0x600113C")]
		[Address(RVA = "0x1200B04", Offset = "0x1200B04", VA = "0x1200B04")]
		public void SpawnCard()
		{
		}

		[Token(Token = "0x600113D")]
		[Address(RVA = "0x1200B94", Offset = "0x1200B94", VA = "0x1200B94")]
		public void DeSpawnCard()
		{
		}

		[Token(Token = "0x600113E")]
		[Address(RVA = "0x1200C48", Offset = "0x1200C48", VA = "0x1200C48")]
		public void OnCloned(GameObject clonedObject)
		{
		}

		[Token(Token = "0x600113F")]
		[Address(RVA = "0x1200CE0", Offset = "0x1200CE0", VA = "0x1200CE0")]
		public SpellCardProxy()
		{
		}
	}
	[Token(Token = "0x2000578")]
	public class SpellCardUI : MonoBehaviour
	{
		[Token(Token = "0x4000FCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly int AnimIsFloating;

		[Token(Token = "0x4000FCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static readonly int AnimIsActiveInternal;

		[Token(Token = "0x4000FCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly int AnimIsSpawned;

		[Token(Token = "0x4000FD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private EntityView relicEntityView;

		[Token(Token = "0x4000FD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBD48BC", Offset = "0xBD48BC")]
		private ManualEntityDisposer manualEntityDisposer;

		[Token(Token = "0x4000FD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject canvas;

		[Token(Token = "0x4000FD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Animator animator;

		[Token(Token = "0x4000FD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBD4928", Offset = "0xBD4928")]
		[SerializeField]
		private BoundValue<bool> isGrabbed;

		[Token(Token = "0x4000FD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBD4974", Offset = "0xBD4974")]
		private float spawnDelayRange;

		[Token(Token = "0x4000FD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private TMP_Text spellDescriptionText;

		[Token(Token = "0x4000FD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private readonly ReactiveSource<IList<object>> _charge;

		[Token(Token = "0x4000FD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private readonly ReactiveSource<IList<object>> _cooldown;

		[Token(Token = "0x4000FD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private readonly ReactiveSource<bool> _isLocked;

		[Token(Token = "0x4000FDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private readonly ReactiveSource<SpellElement> _spellElementType;

		[Token(Token = "0x4000FDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private readonly ReactiveSource<Sprite> _spellIcon;

		[Token(Token = "0x4000FDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private readonly ReactiveSource<LocalizedString> _spellName;

		[Token(Token = "0x4000FDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private readonly ReactiveTransaction _transaction;

		[Token(Token = "0x4000FDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private AssetRefSpellSetup _displayedInfo;

		[Token(Token = "0x4000FDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private float _elapsedTime;

		[Token(Token = "0x4000FE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private bool _isSpawned;

		[Token(Token = "0x4000FE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private float _spawnDelay;

		[Token(Token = "0x4000FE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private ReactiveSubscription _subscription;

		[Token(Token = "0x170002FE")]
		public Reactive<bool> IsLocked
		{
			[Token(Token = "0x6001140")]
			[Address(RVA = "0x1200E24", Offset = "0x1200E24", VA = "0x1200E24")]
			get
			{
				return default(Reactive<bool>);
			}
		}

		[Token(Token = "0x170002FF")]
		public Reactive<Sprite> SpellIcon
		{
			[Token(Token = "0x6001141")]
			[Address(RVA = "0x1200E78", Offset = "0x1200E78", VA = "0x1200E78")]
			get
			{
				return default(Reactive<Sprite>);
			}
		}

		[Token(Token = "0x17000300")]
		public Reactive<SpellElement> SpellElementType
		{
			[Token(Token = "0x6001142")]
			[Address(RVA = "0x1200ECC", Offset = "0x1200ECC", VA = "0x1200ECC")]
			get
			{
				return default(Reactive<SpellElement>);
			}
		}

		[Token(Token = "0x17000301")]
		public Reactive<LocalizedString> SpellName
		{
			[Token(Token = "0x6001143")]
			[Address(RVA = "0x1200F20", Offset = "0x1200F20", VA = "0x1200F20")]
			get
			{
				return default(Reactive<LocalizedString>);
			}
		}

		[Token(Token = "0x17000302")]
		public Reactive<IList<object>> SpellCooldownArguments
		{
			[Token(Token = "0x6001144")]
			[Address(RVA = "0x1200F74", Offset = "0x1200F74", VA = "0x1200F74")]
			get
			{
				return default(Reactive<IList<object>>);
			}
		}

		[Token(Token = "0x17000303")]
		public Reactive<IList<object>> SpellChargeTimeArguments
		{
			[Token(Token = "0x6001145")]
			[Address(RVA = "0x1200FC8", Offset = "0x1200FC8", VA = "0x1200FC8")]
			get
			{
				return default(Reactive<IList<object>>);
			}
		}

		[Token(Token = "0x6001146")]
		[Address(RVA = "0x120101C", Offset = "0x120101C", VA = "0x120101C")]
		private void SpellDescriptionOnStringChanged(string value)
		{
		}

		[Token(Token = "0x6001147")]
		[Address(RVA = "0x1201040", Offset = "0x1201040", VA = "0x1201040")]
		private void Update()
		{
		}

		[Token(Token = "0x6001148")]
		[Address(RVA = "0x1200B58", Offset = "0x1200B58", VA = "0x1200B58")]
		public void SpawnCard()
		{
		}

		[Token(Token = "0x6001149")]
		[Address(RVA = "0x1200BC4", Offset = "0x1200BC4", VA = "0x1200BC4")]
		public void DeSpawnCard()
		{
		}

		[Token(Token = "0x600114A")]
		[Address(RVA = "0x120160C", Offset = "0x120160C", VA = "0x120160C")]
		private void EnterExitAnimations()
		{
		}

		[Token(Token = "0x600114B")]
		[Address(RVA = "0x1201768", Offset = "0x1201768", VA = "0x1201768")]
		private void UpdateInfo(AssetRefSpellSetup spellSetup)
		{
		}

		[Token(Token = "0x600114C")]
		[Address(RVA = "0x1201B60", Offset = "0x1201B60", VA = "0x1201B60")]
		public SpellCardUI()
		{
		}

		[Token(Token = "0x600114E")]
		[Address(RVA = "0x1201E24", Offset = "0x1201E24", VA = "0x1201E24")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDFD68", Offset = "0xBDFD68")]
		private void <UpdateInfo>b__39_0(string value)
		{
		}

		[Token(Token = "0x600114F")]
		[Address(RVA = "0x1201EF0", Offset = "0x1201EF0", VA = "0x1201EF0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDFD78", Offset = "0xBDFD78")]
		private void <UpdateInfo>b__39_1(string value)
		{
		}
	}
	[Token(Token = "0x2000579")]
	public class SpellPickerCanvasHandler : MonoBehaviour
	{
		[Token(Token = "0x4000FE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly LocalizedString EmptyString;

		[Token(Token = "0x4000FE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private EntityView tileEntityView;

		[Token(Token = "0x4000FE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject rootGameObject;

		[Token(Token = "0x4000FE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Canvas infoCanvas;

		[Token(Token = "0x4000FE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Wand leftWand;

		[Token(Token = "0x4000FE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Wand rightWand;

		[Token(Token = "0x4000FE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private readonly ReactiveSource<LocalizedString> _classDescription;

		[Token(Token = "0x4000FEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private readonly ReactiveSource<string> _classHealth;

		[Token(Token = "0x4000FEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private readonly ReactiveSource<IList<object>> _classHeightArguments;

		[Token(Token = "0x4000FEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private readonly ReactiveSource<Sprite> _classIcon;

		[Token(Token = "0x4000FED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private readonly ReactiveSource<LocalizedString> _className;

		[Token(Token = "0x4000FEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private readonly ReactiveSource<ClassType> _classType;

		[Token(Token = "0x4000FEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private readonly ReactiveSource<LocalizedString> _objectiveField;

		[Token(Token = "0x4000FF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private readonly ReactiveTransaction _transaction;

		[Token(Token = "0x4000FF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private PlayerClassConfigurationAsset _cachedClassSettings;

		[Token(Token = "0x4000FF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private EntityRef _cachedOccupantEntityRef;

		[Token(Token = "0x4000FF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Role _cachedRole;

		[Token(Token = "0x17000304")]
		public EntityView TileEntityView
		{
			[Token(Token = "0x6001150")]
			[Address(RVA = "0x1145A98", Offset = "0x1145A98", VA = "0x1145A98")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000305")]
		public Reactive<Sprite> ClassIcon
		{
			[Token(Token = "0x6001151")]
			[Address(RVA = "0x1145AA0", Offset = "0x1145AA0", VA = "0x1145AA0")]
			get
			{
				return default(Reactive<Sprite>);
			}
		}

		[Token(Token = "0x17000306")]
		public Reactive<ClassType> ClassType
		{
			[Token(Token = "0x6001152")]
			[Address(RVA = "0x1145AF4", Offset = "0x1145AF4", VA = "0x1145AF4")]
			get
			{
				return default(Reactive<ClassType>);
			}
		}

		[Token(Token = "0x17000307")]
		public Reactive<LocalizedString> ClassName
		{
			[Token(Token = "0x6001153")]
			[Address(RVA = "0x1145B48", Offset = "0x1145B48", VA = "0x1145B48")]
			get
			{
				return default(Reactive<LocalizedString>);
			}
		}

		[Token(Token = "0x17000308")]
		public Reactive<IList<object>> ClassHeightArguments
		{
			[Token(Token = "0x6001154")]
			[Address(RVA = "0x1145B9C", Offset = "0x1145B9C", VA = "0x1145B9C")]
			get
			{
				return default(Reactive<IList<object>>);
			}
		}

		[Token(Token = "0x17000309")]
		public Reactive<string> ClassHealth
		{
			[Token(Token = "0x6001155")]
			[Address(RVA = "0x1145BF0", Offset = "0x1145BF0", VA = "0x1145BF0")]
			get
			{
				return default(Reactive<string>);
			}
		}

		[Token(Token = "0x1700030A")]
		public Reactive<LocalizedString> ClassDescription
		{
			[Token(Token = "0x6001156")]
			[Address(RVA = "0x1145C44", Offset = "0x1145C44", VA = "0x1145C44")]
			get
			{
				return default(Reactive<LocalizedString>);
			}
		}

		[Token(Token = "0x1700030B")]
		public Reactive<LocalizedString> Objective
		{
			[Token(Token = "0x6001157")]
			[Address(RVA = "0x1145C98", Offset = "0x1145C98", VA = "0x1145C98")]
			get
			{
				return default(Reactive<LocalizedString>);
			}
		}

		[Token(Token = "0x6001158")]
		[Address(RVA = "0x1145CEC", Offset = "0x1145CEC", VA = "0x1145CEC")]
		private void Start()
		{
		}

		[Token(Token = "0x6001159")]
		[Address(RVA = "0x1145CFC", Offset = "0x1145CFC", VA = "0x1145CFC")]
		private void Update()
		{
		}

		[Token(Token = "0x600115A")]
		[Address(RVA = "0x1146698", Offset = "0x1146698", VA = "0x1146698")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600115B")]
		[Address(RVA = "0x11466C8", Offset = "0x11466C8", VA = "0x11466C8")]
		public SpellPickerCanvasHandler()
		{
		}
	}
	[Token(Token = "0x200057A")]
	public class SpellSlotUI : MonoBehaviour
	{
		[Token(Token = "0x4000FF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private EntityView slotEntityView;

		[Token(Token = "0x4000FF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private BoundValue<bool> hasSelectedClass;

		[Token(Token = "0x4000FF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Animator animator;

		[Token(Token = "0x4000FF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly ReactiveSource<SpellElement> _spellElementType;

		[Token(Token = "0x4000FF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private readonly ReactiveSource<Sprite> _spellIcon;

		[Token(Token = "0x4000FF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private readonly ReactiveSource<LocalizedString> _spellName;

		[Token(Token = "0x4000FFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private readonly ReactiveTransaction _transaction;

		[Token(Token = "0x4000FFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private AssetRefSpellSetup _displayedInfo;

		[Token(Token = "0x4000FFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly int IsActive;

		[Token(Token = "0x4000FFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD4A50", Offset = "0xBD4A50")]
		private readonly Reactive<Sprite> <SpellIcon>k__BackingField;

		[Token(Token = "0x4000FFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD4A60", Offset = "0xBD4A60")]
		private readonly Reactive<SpellElement> <SpellElementType>k__BackingField;

		[Token(Token = "0x4000FFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD4A70", Offset = "0xBD4A70")]
		private readonly Reactive<LocalizedString> <SpellName>k__BackingField;

		[Token(Token = "0x1700030C")]
		public Reactive<Sprite> SpellIcon
		{
			[Token(Token = "0x600115E")]
			[Address(RVA = "0x1147D14", Offset = "0x1147D14", VA = "0x1147D14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDFD88", Offset = "0xBDFD88")]
			get
			{
				return default(Reactive<Sprite>);
			}
		}

		[Token(Token = "0x1700030D")]
		public Reactive<SpellElement> SpellElementType
		{
			[Token(Token = "0x600115F")]
			[Address(RVA = "0x1147D1C", Offset = "0x1147D1C", VA = "0x1147D1C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDFD98", Offset = "0xBDFD98")]
			get
			{
				return default(Reactive<SpellElement>);
			}
		}

		[Token(Token = "0x1700030E")]
		public Reactive<LocalizedString> SpellName
		{
			[Token(Token = "0x6001160")]
			[Address(RVA = "0x1147D24", Offset = "0x1147D24", VA = "0x1147D24")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDFDA8", Offset = "0xBDFDA8")]
			get
			{
				return default(Reactive<LocalizedString>);
			}
		}

		[Token(Token = "0x600115D")]
		[Address(RVA = "0x1147B48", Offset = "0x1147B48", VA = "0x1147B48")]
		public SpellSlotUI()
		{
		}

		[Token(Token = "0x6001161")]
		[Address(RVA = "0x1147D2C", Offset = "0x1147D2C", VA = "0x1147D2C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001162")]
		[Address(RVA = "0x11482C0", Offset = "0x11482C0", VA = "0x11482C0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001163")]
		[Address(RVA = "0x1147FF4", Offset = "0x1147FF4", VA = "0x1147FF4")]
		private void UpdateInfo(AssetRefSpellSetup spellSetup)
		{
		}

		[Token(Token = "0x6001164")]
		[Address(RVA = "0x1148370", Offset = "0x1148370", VA = "0x1148370")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xBDFDB8", Offset = "0xBDFDB8")]
		private void MoveToEntityWorldPosition()
		{
		}
	}
}
namespace Cortopia.Scripts.UI.Localization
{
	[Token(Token = "0x200057B")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xBCA044", Offset = "0xBCA044")]
	public class LocalizeFontEvent : LocalizedMonoBehaviour
	{
		[Token(Token = "0x4001000")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private LocalizedFont fontReference;

		[Token(Token = "0x4001001")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBD4A90", Offset = "0xBD4A90")]
		private TMP_Text[] textFields;

		[Token(Token = "0x4001002")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private UnityEvent<TMP_FontAsset> onFontChanged;

		[Token(Token = "0x1700030F")]
		public LocalizedFont FontReference
		{
			[Token(Token = "0x6001166")]
			[Address(RVA = "0xF8A1F4", Offset = "0xF8A1F4", VA = "0xF8A1F4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001167")]
			[Address(RVA = "0xF8A1FC", Offset = "0xF8A1FC", VA = "0xF8A1FC")]
			set
			{
			}
		}

		[Token(Token = "0x6001168")]
		[Address(RVA = "0xF8A4C4", Offset = "0xF8A4C4", VA = "0xF8A4C4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001169")]
		[Address(RVA = "0xF8A4C8", Offset = "0xF8A4C8", VA = "0xF8A4C8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600116A")]
		[Address(RVA = "0xF8A4CC", Offset = "0xF8A4CC", VA = "0xF8A4CC")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600116B")]
		[Address(RVA = "0xF8A384", Offset = "0xF8A384", VA = "0xF8A384")]
		private void RegisterChangeHandler()
		{
		}

		[Token(Token = "0x600116C")]
		[Address(RVA = "0xF8A244", Offset = "0xF8A244", VA = "0xF8A244")]
		private void ClearChangeHandler()
		{
		}

		[Token(Token = "0x600116D")]
		[Address(RVA = "0xF8A4D0", Offset = "0xF8A4D0", VA = "0xF8A4D0")]
		private void UpdateFont(TMP_FontAsset font)
		{
		}

		[Token(Token = "0x600116E")]
		[Address(RVA = "0xF8A534", Offset = "0xF8A534", VA = "0xF8A534")]
		private void FontChangedHandler(TMP_FontAsset font)
		{
		}

		[Token(Token = "0x600116F")]
		[Address(RVA = "0xF8A5B0", Offset = "0xF8A5B0", VA = "0xF8A5B0")]
		public LocalizeFontEvent()
		{
		}
	}
	[Token(Token = "0x200057C")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xBCA07C", Offset = "0xBCA07C")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xBCA07C", Offset = "0xBCA07C")]
	public class LocalizeOwnFont : LocalizedMonoBehaviour
	{
		[Token(Token = "0x4001003")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private LocalizedFont fontReference;

		[Token(Token = "0x4001004")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly UnityEvent<TMP_FontAsset> _onFontChanged;

		[Token(Token = "0x4001005")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TMP_Text _textField;

		[Token(Token = "0x4001006")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public LocalizationFontTable materialReplacementTable;

		[Token(Token = "0x4001007")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int renderQueueValue;

		[Token(Token = "0x17000310")]
		public LocalizedFont FontReference
		{
			[Token(Token = "0x6001170")]
			[Address(RVA = "0xF8A65C", Offset = "0xF8A65C", VA = "0xF8A65C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001171")]
			[Address(RVA = "0xF8A664", Offset = "0xF8A664", VA = "0xF8A664")]
			set
			{
			}
		}

		[Token(Token = "0x6001172")]
		[Address(RVA = "0xF8A92C", Offset = "0xF8A92C", VA = "0xF8A92C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001173")]
		[Address(RVA = "0xF8A980", Offset = "0xF8A980", VA = "0xF8A980")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001174")]
		[Address(RVA = "0xF8A984", Offset = "0xF8A984", VA = "0xF8A984")]
		private void OnTransformChildrenChanged()
		{
		}

		[Token(Token = "0x6001175")]
		[Address(RVA = "0xF8AA68", Offset = "0xF8AA68", VA = "0xF8AA68")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001176")]
		[Address(RVA = "0xF8AA6C", Offset = "0xF8AA6C", VA = "0xF8AA6C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001177")]
		[Address(RVA = "0xF8A7EC", Offset = "0xF8A7EC", VA = "0xF8A7EC")]
		private void RegisterChangeHandler()
		{
		}

		[Token(Token = "0x6001178")]
		[Address(RVA = "0xF8A6AC", Offset = "0xF8A6AC", VA = "0xF8A6AC")]
		private void ClearChangeHandler()
		{
		}

		[Token(Token = "0x6001179")]
		[Address(RVA = "0xF8AA70", Offset = "0xF8AA70", VA = "0xF8AA70")]
		private void UpdateFont(TMP_FontAsset font)
		{
		}

		[Token(Token = "0x600117A")]
		[Address(RVA = "0xF8AAD4", Offset = "0xF8AAD4", VA = "0xF8AAD4")]
		private void FontChangedHandler(TMP_FontAsset font)
		{
		}

		[Token(Token = "0x600117B")]
		[Address(RVA = "0xF8A988", Offset = "0xF8A988", VA = "0xF8A988")]
		private void UpdateSubMeshes()
		{
		}

		[Token(Token = "0x600117C")]
		[Address(RVA = "0xF8AC04", Offset = "0xF8AC04", VA = "0xF8AC04")]
		public LocalizeOwnFont()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200057D")]
	public class LocalizedFont : LocalizedAsset<TMP_FontAsset>
	{
		[Token(Token = "0x600117D")]
		[Address(RVA = "0xF8A610", Offset = "0xF8A610", VA = "0xF8A610")]
		public LocalizedFont()
		{
		}
	}
	[Token(Token = "0x200057E")]
	public class StartupLocaleValidator : MonoBehaviour
	{
		[StructLayout(3)]
		[Token(Token = "0x200057F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCA100", Offset = "0xBCA100")]
		private struct <Start>d__5 : IAsyncStateMachine
		{
			[Token(Token = "0x400100B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x400100C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x400100D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public StartupLocaleValidator <>4__this;

			[Token(Token = "0x400100E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private TaskAwaiter<LocalizationSettings> <>u__1;

			[Token(Token = "0x6001182")]
			[Address(RVA = "0x1061DD4", Offset = "0x1061DD4", VA = "0x1061DD4", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001183")]
			[Address(RVA = "0x10622B8", Offset = "0x10622B8", VA = "0x10622B8", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4001008")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private string playerPrefsLocale;

		[Token(Token = "0x4001009")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly ReactiveSource<bool> _localeSelectorSuccessful;

		[Token(Token = "0x400100A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private CancellationTokenSource _cts;

		[Token(Token = "0x17000311")]
		public Reactive<bool> LocaleSelectorSuccessful
		{
			[Token(Token = "0x600117E")]
			[Address(RVA = "0x114A524", Offset = "0x114A524", VA = "0x114A524")]
			get
			{
				return default(Reactive<bool>);
			}
		}

		[Token(Token = "0x600117F")]
		[Address(RVA = "0x114A578", Offset = "0x114A578", VA = "0x114A578")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xBDFDF0", Offset = "0xBDFDF0")]
		private void Start()
		{
		}

		[Token(Token = "0x6001180")]
		[Address(RVA = "0x114A63C", Offset = "0x114A63C", VA = "0x114A63C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001181")]
		[Address(RVA = "0x114A650", Offset = "0x114A650", VA = "0x114A650")]
		public StartupLocaleValidator()
		{
		}
	}
	[Token(Token = "0x2000580")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xBCA110", Offset = "0xBCA110")]
	public class StaticLocalizedStringArguments : MonoBehaviour
	{
		[Token(Token = "0x400100F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private string[] arguments;

		[Token(Token = "0x4001010")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private LocalizeStringEvent _localizeStringEvent;

		[Token(Token = "0x6001184")]
		[Address(RVA = "0x114A6FC", Offset = "0x114A6FC", VA = "0x114A6FC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001185")]
		[Address(RVA = "0x114A750", Offset = "0x114A750", VA = "0x114A750")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001186")]
		[Address(RVA = "0x114A788", Offset = "0x114A788", VA = "0x114A788")]
		public StaticLocalizedStringArguments()
		{
		}
	}
}
namespace Cortopia.Scripts.UI.Interfaces
{
	[Token(Token = "0x2000581")]
	public interface IButton
	{
		[Token(Token = "0x17000312")]
		BoundValue<bool> IsInteractable
		{
			[Token(Token = "0x6001187")]
			get;
		}

		[Token(Token = "0x17000313")]
		BoundValue<bool> IsHighlighted
		{
			[Token(Token = "0x6001188")]
			get;
		}

		[Token(Token = "0x6001189")]
		void PressDown();

		[Token(Token = "0x600118A")]
		void Release();
	}
	[Token(Token = "0x2000582")]
	public interface IToggle : IButton
	{
		[Token(Token = "0x17000314")]
		BoundValue<bool> IsOn
		{
			[Token(Token = "0x600118B")]
			get;
		}
	}
}
namespace Cortopia.Scripts.UI.Interactable
{
	[Token(Token = "0x2000583")]
	public class ClassInfoDisplay : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000584")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCA170", Offset = "0xBCA170")]
		private sealed class <>c
		{
			[Token(Token = "0x4001017")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001018")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<AssetRefSpellSetup, SpellSetupAsset> <>9__7_0;

			[Token(Token = "0x6001190")]
			[Address(RVA = "0x1025654", Offset = "0x1025654", VA = "0x1025654")]
			public <>c()
			{
			}

			[Token(Token = "0x6001191")]
			[Address(RVA = "0x102565C", Offset = "0x102565C", VA = "0x102565C")]
			internal SpellSetupAsset <SetDisplayedData>b__7_0(AssetRefSpellSetup x)
			{
				return null;
			}
		}

		[Token(Token = "0x4001011")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject infoParent;

		[Token(Token = "0x4001012")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject logoParent;

		[Token(Token = "0x4001013")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private LocalizeStringEvent className;

		[Token(Token = "0x4001014")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private LocalizeStringEvent classDescription;

		[Token(Token = "0x4001015")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private List<Image> spellImages;

		[Token(Token = "0x4001016")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private List<LocalizeStringEvent> spellTexts;

		[Token(Token = "0x600118C")]
		[Address(RVA = "0x1161594", Offset = "0x1161594", VA = "0x1161594")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600118D")]
		[Address(RVA = "0x11615D8", Offset = "0x11615D8", VA = "0x11615D8")]
		public void SetDisplayedData(EntitledPlayerClass entitledClass)
		{
		}

		[Token(Token = "0x600118E")]
		[Address(RVA = "0x1161B34", Offset = "0x1161B34", VA = "0x1161B34")]
		public ClassInfoDisplay()
		{
		}
	}
	[Token(Token = "0x2000585")]
	public class ClassSelector : MonoBehaviour
	{
		[Token(Token = "0x2000586")]
		private struct ClassData
		{
			[Token(Token = "0x400102B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ClassToggle ClassToggle;

			[Token(Token = "0x400102C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD4CD0", Offset = "0xBD4CD0")]
			private ReactiveSubscription <Subscription>k__BackingField;

			[Token(Token = "0x400102D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public EntitledPlayerClass EntitledClass;

			[Token(Token = "0x17000315")]
			public ReactiveSubscription Subscription
			{
				[Token(Token = "0x60011A0")]
				[Address(RVA = "0x1025714", Offset = "0x1025714", VA = "0x1025714")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDFE60", Offset = "0xBDFE60")]
				readonly get
				{
					return default(ReactiveSubscription);
				}
				[Token(Token = "0x60011A1")]
				[Address(RVA = "0x102571C", Offset = "0x102571C", VA = "0x102571C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDFE98", Offset = "0xBDFE98")]
				set
				{
				}
			}
		}

		[Token(Token = "0x2000587")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCA180", Offset = "0xBCA180")]
		private sealed class <>c__DisplayClass22_0
		{
			[Token(Token = "0x400102E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public EntitledPlayerClass playerClass;

			[Token(Token = "0x400102F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public ClassSelector <>4__this;

			[Token(Token = "0x60011A2")]
			[Address(RVA = "0x10256C4", Offset = "0x10256C4", VA = "0x10256C4")]
			public <>c__DisplayClass22_0()
			{
			}

			[Token(Token = "0x60011A3")]
			[Address(RVA = "0x10256CC", Offset = "0x10256CC", VA = "0x10256CC")]
			internal void <ConfigureMenu>b__0(bool isOn)
			{
			}
		}

		[Token(Token = "0x4001019")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private EntityView tileEntityView;

		[Token(Token = "0x400101A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBD4B8C", Offset = "0xBD4B8C")]
		[SerializeField]
		private GameObject classSelectorParent;

		[Token(Token = "0x400101B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject selectingParent;

		[Token(Token = "0x400101C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject waitingParent;

		[Token(Token = "0x400101D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private CharacterSelectorController characterSelectorController;

		[Token(Token = "0x400101E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private ClassInfoDisplay classInfoDisplay;

		[Token(Token = "0x400101F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBD4C18", Offset = "0xBD4C18")]
		[SerializeField]
		private VRButton confirmButton;

		[Token(Token = "0x4001020")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private GameObject occupiedFakeButton;

		[Token(Token = "0x4001021")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private VRButton cancelButton;

		[Token(Token = "0x4001022")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBD4C84", Offset = "0xBD4C84")]
		private ClassToggle classToggleTemplate;

		[Token(Token = "0x4001023")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Dictionary<AssetRefPlayerClassConfiguration, ClassData> _classDataDictionary;

		[Token(Token = "0x4001024")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private AssetRefPlayerClassConfiguration _displayedClass;

		[Token(Token = "0x4001025")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private ReactiveSubscription _entitledClassSubscription;

		[Token(Token = "0x4001026")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private bool _hasConfirmationVisuals;

		[Token(Token = "0x4001027")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x81")]
		private bool _pendingVerification;

		[Token(Token = "0x4001028")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x82")]
		private bool _needsInitialClass;

		[Token(Token = "0x4001029")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private AssetRefPlayerClassConfiguration _selectedClass;

		[Token(Token = "0x400102A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private HashSet<AssetRefPlayerClassConfiguration> _takenClassesCache;

		[Token(Token = "0x6001192")]
		[Address(RVA = "0x11621D4", Offset = "0x11621D4", VA = "0x11621D4")]
		private void Start()
		{
		}

		[Token(Token = "0x6001193")]
		[Address(RVA = "0x116251C", Offset = "0x116251C", VA = "0x116251C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001194")]
		[Address(RVA = "0x116252C", Offset = "0x116252C", VA = "0x116252C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001195")]
		[Address(RVA = "0x1163578", Offset = "0x1163578", VA = "0x1163578")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001196")]
		[Address(RVA = "0x1163784", Offset = "0x1163784", VA = "0x1163784")]
		private void ConfigureMenu(IEnumerable<EntitledPlayerClass> entitledPlayerClasses)
		{
		}

		[Token(Token = "0x6001197")]
		[Address(RVA = "0x1162C14", Offset = "0x1162C14", VA = "0x1162C14")]
		private void UpdateCurrentSelection(IEnumerable<EntitledPlayerClass> entitledPlayerClasses)
		{
		}

		[Token(Token = "0x6001198")]
		[Address(RVA = "0x1163144", Offset = "0x1163144", VA = "0x1163144")]
		private void UpdateSelectionVisuals(AssetRefPlayerClassConfiguration selectedClass)
		{
		}

		[Token(Token = "0x6001199")]
		[Address(RVA = "0x116335C", Offset = "0x116335C", VA = "0x116335C")]
		private void UpdateConfirmationVisuals(bool hasConfirmedSelection)
		{
		}

		[Token(Token = "0x600119A")]
		[Address(RVA = "0x11633B8", Offset = "0x11633B8", VA = "0x11633B8")]
		private void FetchOccupiedClasses(Frame frame, CurrentTeam localPlayerTeam, ref HashSet<AssetRefPlayerClassConfiguration> occupiedClasses)
		{
		}

		[Token(Token = "0x600119B")]
		[Address(RVA = "0x1163C50", Offset = "0x1163C50", VA = "0x1163C50")]
		private void PlayerApplySelection()
		{
		}

		[Token(Token = "0x600119C")]
		[Address(RVA = "0x1163D78", Offset = "0x1163D78", VA = "0x1163D78")]
		private void PlayerCancelSelection()
		{
		}

		[Token(Token = "0x600119D")]
		[Address(RVA = "0x1163EA0", Offset = "0x1163EA0", VA = "0x1163EA0")]
		private void OnPlayerLoadoutChanged(EventPlayerLoadoutChanged callback)
		{
		}

		[Token(Token = "0x600119E")]
		[Address(RVA = "0x1163FC4", Offset = "0x1163FC4", VA = "0x1163FC4")]
		private void OnClassSelectionConfirmed(EventClassSelectionConfirmed callback)
		{
		}

		[Token(Token = "0x600119F")]
		[Address(RVA = "0x1164088", Offset = "0x1164088", VA = "0x1164088")]
		public ClassSelector()
		{
		}
	}
	[Token(Token = "0x2000588")]
	public class ClassToggle : MonoBehaviour
	{
		[Token(Token = "0x4001030")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private VRToggle vrToggle;

		[Token(Token = "0x4001031")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject occupiedVisuals;

		[Token(Token = "0x4001032")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD4D00", Offset = "0xBD4D00")]
		private readonly ReactiveSource<Sprite> <ClassIcon>k__BackingField;

		[Token(Token = "0x17000316")]
		public ReactiveSource<Sprite> ClassIcon
		{
			[Token(Token = "0x60011A4")]
			[Address(RVA = "0x1164090", Offset = "0x1164090", VA = "0x1164090")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDFEA8", Offset = "0xBDFEA8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000317")]
		public VRToggle Toggle
		{
			[Token(Token = "0x60011A5")]
			[Address(RVA = "0x1164098", Offset = "0x1164098", VA = "0x1164098")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60011A6")]
		[Address(RVA = "0x1163568", Offset = "0x1163568", VA = "0x1163568")]
		public void SetOccupied(bool isOccupied)
		{
		}

		[Token(Token = "0x60011A7")]
		[Address(RVA = "0x11640A0", Offset = "0x11640A0", VA = "0x11640A0")]
		public ClassToggle()
		{
		}
	}
	[Token(Token = "0x2000589")]
	public class DisplayClassName : MonoBehaviour
	{
		[Token(Token = "0x4001033")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private string textFieldFormat;

		[Token(Token = "0x4001034")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private TextMeshProUGUI playerNameText;

		[Token(Token = "0x60011A8")]
		[Address(RVA = "0x103EA60", Offset = "0x103EA60", VA = "0x103EA60")]
		private void Update()
		{
		}

		[Token(Token = "0x60011A9")]
		[Address(RVA = "0x103ECB4", Offset = "0x103ECB4", VA = "0x103ECB4")]
		public DisplayClassName()
		{
		}
	}
	[Token(Token = "0x200058A")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xBCA190", Offset = "0xBCA190")]
	public class DragFilter : MonoBehaviour
	{
		[Token(Token = "0x4001035")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private UnityEvent dragBegin;

		[Token(Token = "0x4001036")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private UnityEvent dragEnd;

		[Token(Token = "0x4001037")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float horizontalDragThreshold;

		[Token(Token = "0x4001038")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private float verticalDragThreshold;

		[Token(Token = "0x4001039")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Transform _aimTransform;

		[Token(Token = "0x400103A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private VRButton _button;

		[Token(Token = "0x400103B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool _isDragging;

		[Token(Token = "0x400103C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		private bool _isPressedDown;

		[Token(Token = "0x400103D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Transform _myTransform;

		[Token(Token = "0x400103E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Vector3 _startPointerPosition;

		[Token(Token = "0x17000318")]
		public UnityEvent DragBegin
		{
			[Token(Token = "0x60011AA")]
			[Address(RVA = "0x1040ED0", Offset = "0x1040ED0", VA = "0x1040ED0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000319")]
		public UnityEvent DragEnd
		{
			[Token(Token = "0x60011AB")]
			[Address(RVA = "0x1040ED8", Offset = "0x1040ED8", VA = "0x1040ED8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60011AC")]
		[Address(RVA = "0x1040EE0", Offset = "0x1040EE0", VA = "0x1040EE0")]
		private void Start()
		{
		}

		[Token(Token = "0x60011AD")]
		[Address(RVA = "0x1041000", Offset = "0x1041000", VA = "0x1041000")]
		private void Update()
		{
		}

		[Token(Token = "0x60011AE")]
		[Address(RVA = "0x1041238", Offset = "0x1041238", VA = "0x1041238")]
		private void ButtonDown()
		{
		}

		[Token(Token = "0x60011AF")]
		[Address(RVA = "0x104142C", Offset = "0x104142C", VA = "0x104142C")]
		private void ButtonUp()
		{
		}

		[Token(Token = "0x60011B0")]
		[Address(RVA = "0x1041098", Offset = "0x1041098", VA = "0x1041098")]
		private bool GetProjectedPosition(Transform myTransform, out Vector3 projectedPosition)
		{
			return default(bool);
		}

		[Token(Token = "0x60011B1")]
		[Address(RVA = "0x1041470", Offset = "0x1041470", VA = "0x1041470")]
		public DragFilter()
		{
		}
	}
	[Token(Token = "0x200058B")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xBCA1F0", Offset = "0xBCA1F0")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xBCA1F0", Offset = "0xBCA1F0")]
	public class DynamicVRInteractionCollider : MonoBehaviour
	{
		[Token(Token = "0x400103F")]
		private const float DefaultColliderThickness = 2f;

		[Token(Token = "0x4001040")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBD4D70", Offset = "0xBD4D70")]
		[SerializeField]
		private float thicknessOverride;

		[Token(Token = "0x4001041")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Collider _buttonCollider;

		[Token(Token = "0x4001042")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private RectTransform _rectTransform;

		[Token(Token = "0x4001043")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector2 _size;

		[Token(Token = "0x60011B2")]
		[Address(RVA = "0x1041DD8", Offset = "0x1041DD8", VA = "0x1041DD8")]
		private void Awake()
		{
		}

		[Token(Token = "0x60011B3")]
		[Address(RVA = "0x1041E50", Offset = "0x1041E50", VA = "0x1041E50")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60011B4")]
		[Address(RVA = "0x1042030", Offset = "0x1042030", VA = "0x1042030")]
		private void OnRectTransformDimensionsChange()
		{
		}

		[Token(Token = "0x60011B5")]
		[Address(RVA = "0x1041E54", Offset = "0x1041E54", VA = "0x1041E54")]
		private void SetColliderSize()
		{
		}

		[Token(Token = "0x60011B6")]
		[Address(RVA = "0x1042034", Offset = "0x1042034", VA = "0x1042034")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xBDFEB8", Offset = "0xBDFEB8")]
		private void FetchRectAndSetCollider()
		{
		}

		[Token(Token = "0x60011B7")]
		[Address(RVA = "0x10420D8", Offset = "0x10420D8", VA = "0x10420D8")]
		public DynamicVRInteractionCollider()
		{
		}
	}
	[Token(Token = "0x200058C")]
	public class ImageReference : MonoBehaviour
	{
		[Token(Token = "0x4001044")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD4DBC", Offset = "0xBD4DBC")]
		private readonly ReactiveSource<Sprite> <Sprite>k__BackingField;

		[Token(Token = "0x1700031A")]
		public ReactiveSource<Sprite> Sprite
		{
			[Token(Token = "0x60011B8")]
			[Address(RVA = "0xFB45AC", Offset = "0xFB45AC", VA = "0xFB45AC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDFEF0", Offset = "0xBDFEF0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60011B9")]
		[Address(RVA = "0xFB45B4", Offset = "0xFB45B4", VA = "0xFB45B4")]
		public ImageReference()
		{
		}
	}
	[Token(Token = "0x200058D")]
	public class LoadoutInfoView : MonoBehaviour
	{
		[Token(Token = "0x4001045")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private BoundValue<EntityRef> playerEntity;

		[Token(Token = "0x4001046")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject parent;

		[Token(Token = "0x4001047")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject loadingIcon;

		[Token(Token = "0x4001048")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Image classIconField;

		[Token(Token = "0x4001049")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private DisplayPlayerName teammateDisplayName;

		[Token(Token = "0x400104A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private AssetGuid _displayedClass;

		[Token(Token = "0x400104B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private ReactiveSubscription _playerSubscription;

		[Token(Token = "0x400104C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool _updateName;

		[Token(Token = "0x60011BA")]
		[Address(RVA = "0xF876B8", Offset = "0xF876B8", VA = "0xF876B8")]
		private void Update()
		{
		}

		[Token(Token = "0x60011BB")]
		[Address(RVA = "0xF87A88", Offset = "0xF87A88", VA = "0xF87A88")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60011BC")]
		[Address(RVA = "0xF87B98", Offset = "0xF87B98", VA = "0xF87B98")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60011BD")]
		[Address(RVA = "0xF87BA4", Offset = "0xF87BA4", VA = "0xF87BA4")]
		private void OnPlayerEntityChanged(EntityRef newPlayerEntity)
		{
		}

		[Token(Token = "0x60011BE")]
		[Address(RVA = "0xF878F4", Offset = "0xF878F4", VA = "0xF878F4")]
		private void UpdateDisplayName(Frame frame)
		{
		}

		[Token(Token = "0x60011BF")]
		[Address(RVA = "0xF879E4", Offset = "0xF879E4", VA = "0xF879E4")]
		private void UpdateDisplayedClass(in PlayerSelectedClass selectedClass)
		{
		}

		[Token(Token = "0x60011C0")]
		[Address(RVA = "0xF87C10", Offset = "0xF87C10", VA = "0xF87C10")]
		public LoadoutInfoView()
		{
		}
	}
	[Token(Token = "0x200058E")]
	public class LoadoutSelectionChoices : MonoBehaviour
	{
		[Token(Token = "0x400104D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly ReactiveSource<bool> _attacker;

		[Token(Token = "0x1700031B")]
		public Reactive<bool> Attacker
		{
			[Token(Token = "0x60011C1")]
			[Address(RVA = "0xF87CFC", Offset = "0xF87CFC", VA = "0xF87CFC")]
			get
			{
				return default(Reactive<bool>);
			}
		}

		[Token(Token = "0x60011C2")]
		[Address(RVA = "0xF87D6C", Offset = "0xF87D6C", VA = "0xF87D6C")]
		private void Update()
		{
		}

		[Token(Token = "0x60011C3")]
		[Address(RVA = "0xF87EDC", Offset = "0xF87EDC", VA = "0xF87EDC")]
		public LoadoutSelectionChoices()
		{
		}
	}
	[Token(Token = "0x200058F")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xBCA284", Offset = "0xBCA284")]
	public class VRButton : MonoBehaviour, IButton
	{
		[Token(Token = "0x400104E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBD4E1C", Offset = "0xBD4E1C")]
		[SerializeField]
		private BoundValue<bool> isHighlighted;

		[Token(Token = "0x400104F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private BoundValue<bool> isInteractable;

		[Token(Token = "0x4001050")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBD4E78", Offset = "0xBD4E78")]
		private BoolEvent onHighlightChange;

		[Token(Token = "0x4001051")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private BoolEvent onInteractableChanged;

		[Token(Token = "0x4001052")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private UnityEvent onButtonPressed;

		[Token(Token = "0x4001053")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private UnityEvent onButtonReleased;

		[Token(Token = "0x4001054")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private UnityEvent onUninterruptedClick;

		[Token(Token = "0x4001055")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Collider _buttonCollider;

		[Token(Token = "0x4001056")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private ReactiveSubscription _reactiveSubscription;

		[Token(Token = "0x4001057")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool _interrupted;

		[Token(Token = "0x1700031C")]
		private Collider ButtonCollider
		{
			[Token(Token = "0x60011C4")]
			[Address(RVA = "0x112E268", Offset = "0x112E268", VA = "0x112E268")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700031D")]
		public UnityEvent OnButtonPress
		{
			[Token(Token = "0x60011C5")]
			[Address(RVA = "0x112E304", Offset = "0x112E304", VA = "0x112E304")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700031E")]
		public UnityEvent OnButtonRelease
		{
			[Token(Token = "0x60011C6")]
			[Address(RVA = "0x112E30C", Offset = "0x112E30C", VA = "0x112E30C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700031F")]
		public UnityEvent OnUninterruptedClick
		{
			[Token(Token = "0x60011C7")]
			[Address(RVA = "0x112E314", Offset = "0x112E314", VA = "0x112E314")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000320")]
		public BoundValue<bool> IsHighlighted
		{
			[Token(Token = "0x60011CB")]
			[Address(RVA = "0x112E500", Offset = "0x112E500", VA = "0x112E500", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000321")]
		public BoundValue<bool> IsInteractable
		{
			[Token(Token = "0x60011CC")]
			[Address(RVA = "0x112E508", Offset = "0x112E508", VA = "0x112E508", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60011C8")]
		[Address(RVA = "0x112E31C", Offset = "0x112E31C", VA = "0x112E31C")]
		private void Start()
		{
		}

		[Token(Token = "0x60011C9")]
		[Address(RVA = "0x112E48C", Offset = "0x112E48C", VA = "0x112E48C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60011CA")]
		[Address(RVA = "0x112E4F4", Offset = "0x112E4F4", VA = "0x112E4F4")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60011CD")]
		[Address(RVA = "0x112E510", Offset = "0x112E510", VA = "0x112E510", Slot = "6")]
		public void PressDown()
		{
		}

		[Token(Token = "0x60011CE")]
		[Address(RVA = "0x112E52C", Offset = "0x112E52C", VA = "0x112E52C", Slot = "7")]
		public void Release()
		{
		}

		[Token(Token = "0x60011CF")]
		[Address(RVA = "0x112E57C", Offset = "0x112E57C", VA = "0x112E57C")]
		public void Interrupt()
		{
		}

		[Token(Token = "0x60011D0")]
		[Address(RVA = "0x112E588", Offset = "0x112E588", VA = "0x112E588")]
		public VRButton()
		{
		}

		[Token(Token = "0x60011D1")]
		[Address(RVA = "0x112E604", Offset = "0x112E604", VA = "0x112E604")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDFF00", Offset = "0xBDFF00")]
		private void <Start>b__18_0(bool x)
		{
		}
	}
	[Token(Token = "0x2000590")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xBCA2E4", Offset = "0xBCA2E4")]
	public class VRInputField : MonoBehaviour, IButton
	{
		[Token(Token = "0x4001058")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBD4F04", Offset = "0xBD4F04")]
		private BoundValue<bool> isHighlighted;

		[Token(Token = "0x4001059")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private BoundValue<bool> isInteractable;

		[Token(Token = "0x400105A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBD4F60", Offset = "0xBD4F60")]
		[SerializeField]
		private BoolEvent onHighlightChange;

		[Token(Token = "0x400105B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private BoolEvent onInteractableChanged;

		[Token(Token = "0x400105C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private UnityEvent onInputFieldPress;

		[Token(Token = "0x400105D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private UnityEvent onInputFieldRelease;

		[Token(Token = "0x400105E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBD4FDC", Offset = "0xBD4FDC")]
		[SerializeField]
		private int minimumInputLength;

		[Token(Token = "0x400105F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private readonly ReactiveSource<bool> _hasFocus;

		[Token(Token = "0x4001060")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private readonly ReactiveSource<bool> _isInputValid;

		[Token(Token = "0x4001061")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private TMP_InputField _inputField;

		[Token(Token = "0x4001062")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Collider _inputFieldCollider;

		[Token(Token = "0x4001063")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private ReactiveSubscription _reactiveSubscription;

		[Token(Token = "0x17000322")]
		private Collider InputFieldCollider
		{
			[Token(Token = "0x60011D2")]
			[Address(RVA = "0x112EF04", Offset = "0x112EF04", VA = "0x112EF04")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000323")]
		private TMP_InputField InputField
		{
			[Token(Token = "0x60011D3")]
			[Address(RVA = "0x112EFA0", Offset = "0x112EFA0", VA = "0x112EFA0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000324")]
		public UnityEvent OnInputFieldPress
		{
			[Token(Token = "0x60011D4")]
			[Address(RVA = "0x112F03C", Offset = "0x112F03C", VA = "0x112F03C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000325")]
		public UnityEvent OnInputFieldRelease
		{
			[Token(Token = "0x60011D5")]
			[Address(RVA = "0x112F044", Offset = "0x112F044", VA = "0x112F044")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000326")]
		public Reactive<bool> IsInputValid
		{
			[Token(Token = "0x60011D6")]
			[Address(RVA = "0x112F04C", Offset = "0x112F04C", VA = "0x112F04C")]
			get
			{
				return default(Reactive<bool>);
			}
		}

		[Token(Token = "0x17000327")]
		public Reactive<bool> HasFocus
		{
			[Token(Token = "0x60011D7")]
			[Address(RVA = "0x112F0A0", Offset = "0x112F0A0", VA = "0x112F0A0")]
			get
			{
				return default(Reactive<bool>);
			}
		}

		[Token(Token = "0x17000328")]
		public BoundValue<bool> IsHighlighted
		{
			[Token(Token = "0x60011DC")]
			[Address(RVA = "0x112F920", Offset = "0x112F920", VA = "0x112F920", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000329")]
		public BoundValue<bool> IsInteractable
		{
			[Token(Token = "0x60011DD")]
			[Address(RVA = "0x112F928", Offset = "0x112F928", VA = "0x112F928", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60011D8")]
		[Address(RVA = "0x112F0F4", Offset = "0x112F0F4", VA = "0x112F0F4")]
		private void Start()
		{
		}

		[Token(Token = "0x60011D9")]
		[Address(RVA = "0x112F470", Offset = "0x112F470", VA = "0x112F470")]
		private void Update()
		{
		}

		[Token(Token = "0x60011DA")]
		[Address(RVA = "0x112F7B0", Offset = "0x112F7B0", VA = "0x112F7B0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60011DB")]
		[Address(RVA = "0x112F914", Offset = "0x112F914", VA = "0x112F914")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60011DE")]
		[Address(RVA = "0x112F930", Offset = "0x112F930", VA = "0x112F930", Slot = "6")]
		public void PressDown()
		{
		}

		[Token(Token = "0x60011DF")]
		[Address(RVA = "0x112F9E8", Offset = "0x112F9E8", VA = "0x112F9E8", Slot = "7")]
		public void Release()
		{
		}

		[Token(Token = "0x60011E0")]
		[Address(RVA = "0x112F960", Offset = "0x112F960", VA = "0x112F960")]
		public void SetFocus()
		{
		}

		[Token(Token = "0x60011E1")]
		[Address(RVA = "0x112F3F4", Offset = "0x112F3F4", VA = "0x112F3F4")]
		public void ValidateInput()
		{
		}

		[Token(Token = "0x60011E2")]
		[Address(RVA = "0x112F9FC", Offset = "0x112F9FC", VA = "0x112F9FC")]
		public VRInputField()
		{
		}

		[Token(Token = "0x60011E3")]
		[Address(RVA = "0x112FAF4", Offset = "0x112FAF4", VA = "0x112FAF4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDFF10", Offset = "0xBDFF10")]
		private void <Start>b__24_0(bool x)
		{
		}

		[Token(Token = "0x60011E4")]
		[Address(RVA = "0x112FB74", Offset = "0x112FB74", VA = "0x112FB74")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDFF20", Offset = "0xBDFF20")]
		private void <Start>b__24_1(TMP_InputField x)
		{
		}

		[Token(Token = "0x60011E5")]
		[Address(RVA = "0x112FC1C", Offset = "0x112FC1C", VA = "0x112FC1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDFF30", Offset = "0xBDFF30")]
		private void <Start>b__24_2(string x)
		{
		}
	}
	[Token(Token = "0x2000591")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xBCA36C", Offset = "0xBCA36C")]
	public class VRScrollRect : MonoBehaviour, IButton
	{
		[StructLayout(3)]
		[Token(Token = "0x2000592")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCA3F4", Offset = "0xBCA3F4")]
		private struct <LocaleChangedHandler>d__25 : IAsyncStateMachine
		{
			[Token(Token = "0x400106F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001070")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4001071")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public VRScrollRect <>4__this;

			[Token(Token = "0x4001072")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private TaskAwaiter<LocalizationSettings> <>u__1;

			[Token(Token = "0x4001073")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private YieldAwaitable.YieldAwaiter <>u__2;

			[Token(Token = "0x60011F5")]
			[Address(RVA = "0x1067FC8", Offset = "0x1067FC8", VA = "0x1067FC8", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x60011F6")]
			[Address(RVA = "0x10682CC", Offset = "0x10682CC", VA = "0x10682CC", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4001064")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBD5028", Offset = "0xBD5028")]
		private BoundValue<bool> isHighlighted;

		[Token(Token = "0x4001065")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private BoundValue<bool> isInteractable;

		[Token(Token = "0x4001066")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBD5084", Offset = "0xBD5084")]
		[SerializeField]
		private BoolEvent onIsHighlightedChanged;

		[Token(Token = "0x4001067")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private BoolEvent onInteractableChanged;

		[Token(Token = "0x4001068")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private readonly ReactiveSource<bool> _isPressedDownSource;

		[Token(Token = "0x4001069")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private ReactiveSubscription _reactiveSubscription;

		[Token(Token = "0x400106A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Transform _aimTransform;

		[Token(Token = "0x400106B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Collider _collider;

		[Token(Token = "0x400106C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private ScrollRect _scrollRect;

		[Token(Token = "0x400106D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Vector3 _startButtonPosition;

		[Token(Token = "0x400106E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private Vector3 _lastProjectedPosition;

		[Token(Token = "0x1700032A")]
		public BoundValue<bool> IsHighlighted
		{
			[Token(Token = "0x60011E6")]
			[Address(RVA = "0x112FC20", Offset = "0x112FC20", VA = "0x112FC20", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700032B")]
		public BoundValue<bool> IsInteractable
		{
			[Token(Token = "0x60011E7")]
			[Address(RVA = "0x112FC28", Offset = "0x112FC28", VA = "0x112FC28", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700032C")]
		public Reactive<bool> IsPressedDown
		{
			[Token(Token = "0x60011E8")]
			[Address(RVA = "0x112FC30", Offset = "0x112FC30", VA = "0x112FC30")]
			get
			{
				return default(Reactive<bool>);
			}
		}

		[Token(Token = "0x60011E9")]
		[Address(RVA = "0x112FCA0", Offset = "0x112FCA0", VA = "0x112FCA0")]
		private void Awake()
		{
		}

		[Token(Token = "0x60011EA")]
		[Address(RVA = "0x112FD18", Offset = "0x112FD18", VA = "0x112FD18")]
		private void Start()
		{
		}

		[Token(Token = "0x60011EB")]
		[Address(RVA = "0x112FE88", Offset = "0x112FE88", VA = "0x112FE88")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60011EC")]
		[Address(RVA = "0x112FFEC", Offset = "0x112FFEC", VA = "0x112FFEC")]
		private void Update()
		{
		}

		[Token(Token = "0x60011ED")]
		[Address(RVA = "0x1130238", Offset = "0x1130238", VA = "0x1130238")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60011EE")]
		[Address(RVA = "0x11302C8", Offset = "0x11302C8", VA = "0x11302C8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60011EF")]
		[Address(RVA = "0x11302D4", Offset = "0x11302D4", VA = "0x11302D4", Slot = "6")]
		public void PressDown()
		{
		}

		[Token(Token = "0x60011F0")]
		[Address(RVA = "0x1130534", Offset = "0x1130534", VA = "0x1130534", Slot = "7")]
		public void Release()
		{
		}

		[Token(Token = "0x60011F1")]
		[Address(RVA = "0x112FF28", Offset = "0x112FF28", VA = "0x112FF28")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xBDFF40", Offset = "0xBDFF40")]
		private void LocaleChangedHandler(Locale locale)
		{
		}

		[Token(Token = "0x60011F2")]
		[Address(RVA = "0x1130100", Offset = "0x1130100", VA = "0x1130100")]
		private bool GetProjectedPosition(Transform myTransform, out Vector3 projectedPosition)
		{
			return default(bool);
		}

		[Token(Token = "0x60011F3")]
		[Address(RVA = "0x1130594", Offset = "0x1130594", VA = "0x1130594")]
		public VRScrollRect()
		{
		}

		[Token(Token = "0x60011F4")]
		[Address(RVA = "0x1130664", Offset = "0x1130664", VA = "0x1130664")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDFFA0", Offset = "0xBDFFA0")]
		private void <Start>b__18_0(bool x)
		{
		}
	}
	[Token(Token = "0x2000593")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xBCA404", Offset = "0xBCA404")]
	public class VRScrollbar : MonoBehaviour, IButton
	{
		[Token(Token = "0x4001074")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBD50E0", Offset = "0xBD50E0")]
		[SerializeField]
		private BoundValue<bool> isHighlighted;

		[Token(Token = "0x4001075")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private BoundValue<bool> isInteractable;

		[Token(Token = "0x4001076")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBD513C", Offset = "0xBD513C")]
		[SerializeField]
		private BoolEvent onIsHighlightedChanged;

		[Token(Token = "0x4001077")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private BoolEvent onInteractableChanged;

		[Token(Token = "0x4001078")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private readonly ReactiveSource<bool> _isPressedDownSource;

		[Token(Token = "0x4001079")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Transform _aimTransform;

		[Token(Token = "0x400107A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Collider _collider;

		[Token(Token = "0x400107B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private ReactiveSubscription _reactiveSubscription;

		[Token(Token = "0x400107C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private RectTransform _rectTransform;

		[Token(Token = "0x400107D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Scrollbar _scrollbar;

		[Token(Token = "0x400107E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Vector3 _startButtonPosition;

		[Token(Token = "0x1700032D")]
		public Reactive<bool> IsPressedDown
		{
			[Token(Token = "0x60011F7")]
			[Address(RVA = "0x11306E0", Offset = "0x11306E0", VA = "0x11306E0")]
			get
			{
				return default(Reactive<bool>);
			}
		}

		[Token(Token = "0x1700032E")]
		public BoundValue<bool> IsHighlighted
		{
			[Token(Token = "0x60011FC")]
			[Address(RVA = "0x1130BE8", Offset = "0x1130BE8", VA = "0x1130BE8", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700032F")]
		public BoundValue<bool> IsInteractable
		{
			[Token(Token = "0x60011FD")]
			[Address(RVA = "0x1130BF0", Offset = "0x1130BF0", VA = "0x1130BF0", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60011F8")]
		[Address(RVA = "0x1130750", Offset = "0x1130750", VA = "0x1130750")]
		private void Awake()
		{
		}

		[Token(Token = "0x60011F9")]
		[Address(RVA = "0x11307EC", Offset = "0x11307EC", VA = "0x11307EC")]
		private void Start()
		{
		}

		[Token(Token = "0x60011FA")]
		[Address(RVA = "0x113095C", Offset = "0x113095C", VA = "0x113095C")]
		private void Update()
		{
		}

		[Token(Token = "0x60011FB")]
		[Address(RVA = "0x1130BDC", Offset = "0x1130BDC", VA = "0x1130BDC")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60011FE")]
		[Address(RVA = "0x1130BF8", Offset = "0x1130BF8", VA = "0x1130BF8", Slot = "6")]
		public void PressDown()
		{
		}

		[Token(Token = "0x60011FF")]
		[Address(RVA = "0x1130E48", Offset = "0x1130E48", VA = "0x1130E48", Slot = "7")]
		public void Release()
		{
		}

		[Token(Token = "0x6001200")]
		[Address(RVA = "0x1130AA4", Offset = "0x1130AA4", VA = "0x1130AA4")]
		private bool GetProjectedPosition(Transform myTransform, out Vector3 projectedPosition)
		{
			return default(bool);
		}

		[Token(Token = "0x6001201")]
		[Address(RVA = "0x1130EA8", Offset = "0x1130EA8", VA = "0x1130EA8")]
		public VRScrollbar()
		{
		}

		[Token(Token = "0x6001202")]
		[Address(RVA = "0x1130F78", Offset = "0x1130F78", VA = "0x1130F78")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDFFC0", Offset = "0xBDFFC0")]
		private void <Start>b__14_0(bool x)
		{
		}
	}
	[Token(Token = "0x2000594")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xBCA48C", Offset = "0xBCA48C")]
	public class VRSlider : MonoBehaviour, IButton
	{
		[Token(Token = "0x400107F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBD5198", Offset = "0xBD5198")]
		private Vector2 localSliderRange;

		[Token(Token = "0x4001080")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Slider slider;

		[Token(Token = "0x4001081")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBD51F4", Offset = "0xBD51F4")]
		[SerializeField]
		private BoundValue<bool> isHighlighted;

		[Token(Token = "0x4001082")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private BoundValue<bool> isInteractable;

		[Token(Token = "0x4001083")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private BoundValue<float> normalizedValue;

		[Token(Token = "0x4001084")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBD5260", Offset = "0xBD5260")]
		[SerializeField]
		private BoolEvent onIsHighlightedChanged;

		[Token(Token = "0x4001085")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private BoolEvent onInteractableChanged;

		[Token(Token = "0x4001086")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private FloatEvent onValueChanged;

		[Token(Token = "0x4001087")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private readonly ReactiveSource<bool> _isPressedDownSource;

		[Token(Token = "0x4001088")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Transform _aimTransform;

		[Token(Token = "0x4001089")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Collider _buttonCollider;

		[Token(Token = "0x400108A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float _normalizedValue;

		[Token(Token = "0x400108B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private Vector3 _originalButtonLocalPosition;

		[Token(Token = "0x400108C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private ReactiveSubscription _reactiveSubscription;

		[Token(Token = "0x400108D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Vector3 _startButtonPosition;

		[Token(Token = "0x400108E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private Vector3 _startProjectedPosition;

		[Token(Token = "0x400108F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD52CC", Offset = "0xBD52CC")]
		private readonly Reactive<bool> <IsPressedDown>k__BackingField;

		[Token(Token = "0x17000330")]
		public Reactive<bool> IsPressedDown
		{
			[Token(Token = "0x6001204")]
			[Address(RVA = "0x113110C", Offset = "0x113110C", VA = "0x113110C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDFFD0", Offset = "0xBDFFD0")]
			get
			{
				return default(Reactive<bool>);
			}
		}

		[Token(Token = "0x17000331")]
		private Collider ButtonCollider
		{
			[Token(Token = "0x6001205")]
			[Address(RVA = "0x1131114", Offset = "0x1131114", VA = "0x1131114")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000332")]
		public BoundValue<bool> IsHighlighted
		{
			[Token(Token = "0x6001209")]
			[Address(RVA = "0x1131700", Offset = "0x1131700", VA = "0x1131700", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000333")]
		public BoundValue<bool> IsInteractable
		{
			[Token(Token = "0x600120A")]
			[Address(RVA = "0x1131708", Offset = "0x1131708", VA = "0x1131708", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001203")]
		[Address(RVA = "0x1130FF4", Offset = "0x1130FF4", VA = "0x1130FF4")]
		public VRSlider()
		{
		}

		[Token(Token = "0x6001206")]
		[Address(RVA = "0x11311B0", Offset = "0x11311B0", VA = "0x11311B0")]
		private void Start()
		{
		}

		[Token(Token = "0x6001207")]
		[Address(RVA = "0x1131404", Offset = "0x1131404", VA = "0x1131404")]
		private void Update()
		{
		}

		[Token(Token = "0x6001208")]
		[Address(RVA = "0x11316F4", Offset = "0x11316F4", VA = "0x11316F4")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600120B")]
		[Address(RVA = "0x1131710", Offset = "0x1131710", VA = "0x1131710", Slot = "6")]
		public void PressDown()
		{
		}

		[Token(Token = "0x600120C")]
		[Address(RVA = "0x1131970", Offset = "0x1131970", VA = "0x1131970", Slot = "7")]
		public void Release()
		{
		}

		[Token(Token = "0x600120D")]
		[Address(RVA = "0x11315B4", Offset = "0x11315B4", VA = "0x11315B4")]
		private bool GetProjectedPosition(Transform myTransform, out Vector3 projectedPosition)
		{
			return default(bool);
		}

		[Token(Token = "0x600120E")]
		[Address(RVA = "0x11316CC", Offset = "0x11316CC", VA = "0x11316CC")]
		private float GetNormalizedValue(float localPositionX)
		{
			return default(float);
		}

		[Token(Token = "0x600120F")]
		[Address(RVA = "0x1131A68", Offset = "0x1131A68", VA = "0x1131A68")]
		private void SetLocalPosition(float sliderValue)
		{
		}

		[Token(Token = "0x6001210")]
		[Address(RVA = "0x1131BB4", Offset = "0x1131BB4", VA = "0x1131BB4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDFFE0", Offset = "0xBDFFE0")]
		private void <Start>b__22_0(bool x)
		{
		}
	}
	[Token(Token = "0x2000595")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xBCA4EC", Offset = "0xBCA4EC")]
	public class VRSteppedSlider : MonoBehaviour, IButton
	{
		[Token(Token = "0x4001090")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBD52DC", Offset = "0xBD52DC")]
		private float[] steps;

		[Token(Token = "0x4001091")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBD5328", Offset = "0xBD5328")]
		[SerializeField]
		private BoundValue<bool> isHighlighted;

		[Token(Token = "0x4001092")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private BoundValue<bool> isInteractable;

		[Token(Token = "0x4001093")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private BoundValue<int> selectedValue;

		[Token(Token = "0x4001094")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBD5394", Offset = "0xBD5394")]
		private BoolEvent onIsHighlightedChanged;

		[Token(Token = "0x4001095")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private BoolEvent onInteractableChanged;

		[Token(Token = "0x4001096")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private IntEvent onHoverValueChanged;

		[Token(Token = "0x4001097")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Transform _aimTransform;

		[Token(Token = "0x4001098")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Collider _buttonCollider;

		[Token(Token = "0x4001099")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool _isMoving;

		[Token(Token = "0x400109A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private ReactiveSubscription _reactiveSubscription;

		[Token(Token = "0x400109B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Vector3 _startButtonPosition;

		[Token(Token = "0x400109C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private Vector3 _startProjectedPosition;

		[Token(Token = "0x17000334")]
		private Collider ButtonCollider
		{
			[Token(Token = "0x6001211")]
			[Address(RVA = "0x1131C34", Offset = "0x1131C34", VA = "0x1131C34")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000335")]
		public BoundValue<bool> IsHighlighted
		{
			[Token(Token = "0x6001215")]
			[Address(RVA = "0x1132274", Offset = "0x1132274", VA = "0x1132274", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000336")]
		public BoundValue<bool> IsInteractable
		{
			[Token(Token = "0x6001216")]
			[Address(RVA = "0x113227C", Offset = "0x113227C", VA = "0x113227C", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001212")]
		[Address(RVA = "0x1131CD0", Offset = "0x1131CD0", VA = "0x1131CD0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001213")]
		[Address(RVA = "0x1131F04", Offset = "0x1131F04", VA = "0x1131F04")]
		private void Update()
		{
		}

		[Token(Token = "0x6001214")]
		[Address(RVA = "0x1132268", Offset = "0x1132268", VA = "0x1132268")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001217")]
		[Address(RVA = "0x1132284", Offset = "0x1132284", VA = "0x1132284", Slot = "6")]
		public void PressDown()
		{
		}

		[Token(Token = "0x6001218")]
		[Address(RVA = "0x11324C4", Offset = "0x11324C4", VA = "0x11324C4", Slot = "7")]
		public void Release()
		{
		}

		[Token(Token = "0x6001219")]
		[Address(RVA = "0x11325D8", Offset = "0x11325D8", VA = "0x11325D8")]
		private void SetSteppedPosition(int index)
		{
		}

		[Token(Token = "0x600121A")]
		[Address(RVA = "0x11320C0", Offset = "0x11320C0", VA = "0x11320C0")]
		private bool GetProjectedPosition(Transform myTransform, out Vector3 projectedPosition)
		{
			return default(bool);
		}

		[Token(Token = "0x600121B")]
		[Address(RVA = "0x11321E8", Offset = "0x11321E8", VA = "0x11321E8")]
		private int GetClosestStepValue(float localPositionX)
		{
			return default(int);
		}

		[Token(Token = "0x600121C")]
		[Address(RVA = "0x1132564", Offset = "0x1132564", VA = "0x1132564")]
		private void ClampToStepValue(int step)
		{
		}

		[Token(Token = "0x600121D")]
		[Address(RVA = "0x1132664", Offset = "0x1132664", VA = "0x1132664")]
		public VRSteppedSlider()
		{
		}

		[Token(Token = "0x600121E")]
		[Address(RVA = "0x11326E0", Offset = "0x11326E0", VA = "0x11326E0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDFFF0", Offset = "0xBDFFF0")]
		private void <OnEnable>b__15_0(bool x)
		{
		}
	}
	[Token(Token = "0x2000596")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xBCA54C", Offset = "0xBCA54C")]
	public class VRToggle : MonoBehaviour, IToggle, IButton
	{
		[Serializable]
		[Token(Token = "0x2000597")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCA5AC", Offset = "0xBCA5AC")]
		private sealed class <>c
		{
			[Token(Token = "0x40010A8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40010A9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<(bool, bool), bool> <>9__16_0;

			[Token(Token = "0x600122F")]
			[Address(RVA = "0x1068338", Offset = "0x1068338", VA = "0x1068338")]
			public <>c()
			{
			}

			[Token(Token = "0x6001230")]
			[Address(RVA = "0x1068340", Offset = "0x1068340", VA = "0x1068340")]
			internal bool <get_IsOnAndActive>b__16_0((bool, bool) x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x400109D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private VRToggleGroup toggleGroup;

		[Token(Token = "0x400109E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBD5410", Offset = "0xBD5410")]
		private int overrideToggleGroupIndex;

		[Token(Token = "0x400109F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBD545C", Offset = "0xBD545C")]
		private BoundValue<bool> isHighlighted;

		[Token(Token = "0x40010A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private BoundValue<bool> isInteractable;

		[Token(Token = "0x40010A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private BoundValue<bool> isOn;

		[Token(Token = "0x40010A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBD54C8", Offset = "0xBD54C8")]
		[SerializeField]
		private BoolEvent onIsHighlightedChanged;

		[Token(Token = "0x40010A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private BoolEvent onInteractableChanged;

		[Token(Token = "0x40010A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		protected BoolEvent onValueChanged;

		[Token(Token = "0x40010A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Collider _buttonCollider;

		[Token(Token = "0x40010A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private readonly ReactiveSource<bool> _isActiveSelf;

		[Token(Token = "0x40010A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private ReactiveSubscription _reactiveSubscription;

		[Token(Token = "0x17000337")]
		private Collider ButtonCollider
		{
			[Token(Token = "0x600121F")]
			[Address(RVA = "0x1132760", Offset = "0x1132760", VA = "0x1132760")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000338")]
		public BoolEvent OnValueChanged
		{
			[Token(Token = "0x6001220")]
			[Address(RVA = "0x11327FC", Offset = "0x11327FC", VA = "0x11327FC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000339")]
		public Reactive<bool> IsOnAndActive
		{
			[Token(Token = "0x6001221")]
			[Address(RVA = "0x1132804", Offset = "0x1132804", VA = "0x1132804")]
			get
			{
				return default(Reactive<bool>);
			}
		}

		[Token(Token = "0x1700033A")]
		public BoundValue<bool> IsOn
		{
			[Token(Token = "0x6001226")]
			[Address(RVA = "0x113307C", Offset = "0x113307C", VA = "0x113307C", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700033B")]
		public BoundValue<bool> IsHighlighted
		{
			[Token(Token = "0x6001227")]
			[Address(RVA = "0x1133084", Offset = "0x1133084", VA = "0x1133084", Slot = "6")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700033C")]
		public BoundValue<bool> IsInteractable
		{
			[Token(Token = "0x6001228")]
			[Address(RVA = "0x113308C", Offset = "0x113308C", VA = "0x113308C", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001222")]
		[Address(RVA = "0x11329A0", Offset = "0x11329A0", VA = "0x11329A0")]
		private void Start()
		{
		}

		[Token(Token = "0x6001223")]
		[Address(RVA = "0x1132B78", Offset = "0x1132B78", VA = "0x1132B78")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001224")]
		[Address(RVA = "0x1132EE8", Offset = "0x1132EE8", VA = "0x1132EE8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001225")]
		[Address(RVA = "0x1133070", Offset = "0x1133070", VA = "0x1133070")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001229")]
		[Address(RVA = "0x1133094", Offset = "0x1133094", VA = "0x1133094", Slot = "7")]
		public void PressDown()
		{
		}

		[Token(Token = "0x600122A")]
		[Address(RVA = "0x1133314", Offset = "0x1133314", VA = "0x1133314", Slot = "8")]
		public void Release()
		{
		}

		[Token(Token = "0x600122B")]
		[Address(RVA = "0x1133318", Offset = "0x1133318", VA = "0x1133318")]
		public void SetToggleGroup(VRToggleGroup group)
		{
		}

		[Token(Token = "0x600122C")]
		[Address(RVA = "0x113348C", Offset = "0x113348C", VA = "0x113348C")]
		public VRToggle()
		{
		}

		[Token(Token = "0x600122D")]
		[Address(RVA = "0x1133564", Offset = "0x1133564", VA = "0x1133564")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE0000", Offset = "0xBE0000")]
		private void <Start>b__17_0(bool x)
		{
		}
	}
	[Token(Token = "0x2000598")]
	[AttributeAttribute(Name = "DefaultExecutionOrder", RVA = "0xBCA5BC", Offset = "0xBCA5BC")]
	public class VRToggleGroup : MonoBehaviour
	{
		[Token(Token = "0x2000599")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCA5D0", Offset = "0xBCA5D0")]
		private sealed class <>c__DisplayClass12_0
		{
			[Token(Token = "0x40010B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int item;

			[Token(Token = "0x600123C")]
			[Address(RVA = "0x1068400", Offset = "0x1068400", VA = "0x1068400")]
			public <>c__DisplayClass12_0()
			{
			}

			[Token(Token = "0x600123D")]
			[Address(RVA = "0x1068408", Offset = "0x1068408", VA = "0x1068408")]
			internal bool <OnSelectedItemSet>b__0(KeyValuePair<IToggle, int> x)
			{
				return default(bool);
			}
		}

		[Serializable]
		[Token(Token = "0x200059A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCA5E0", Offset = "0xBCA5E0")]
		private sealed class <>c
		{
			[Token(Token = "0x40010B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40010B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<KeyValuePair<IToggle, int>, int> <>9__15_1;

			[Token(Token = "0x600123F")]
			[Address(RVA = "0x10683B8", Offset = "0x10683B8", VA = "0x10683B8")]
			public <>c()
			{
			}

			[Token(Token = "0x6001240")]
			[Address(RVA = "0x10683C0", Offset = "0x10683C0", VA = "0x10683C0")]
			internal int <ResetGroup>b__15_1(KeyValuePair<IToggle, int> x)
			{
				return default(int);
			}
		}

		[Token(Token = "0x40010AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool allowSwitchOff;

		[Token(Token = "0x40010AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private int startingIndex;

		[Token(Token = "0x40010AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private BoundValue<int> selectedItem;

		[Token(Token = "0x40010AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private UnityEvent<int> onSelectionChanged;

		[Token(Token = "0x40010AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[@HideInInspector]
		public int forceIndex;

		[Token(Token = "0x40010AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private readonly Dictionary<IToggle, int> _toggles;

		[Token(Token = "0x40010B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private IToggle _currentActiveToggle;

		[Token(Token = "0x40010B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private ReactiveSubscription _reactiveSubscription;

		[Token(Token = "0x1700033D")]
		private int CurrentToggleValue
		{
			[Token(Token = "0x6001231")]
			[Address(RVA = "0x11335E4", Offset = "0x11335E4", VA = "0x11335E4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6001232")]
		[Address(RVA = "0x1133650", Offset = "0x1133650", VA = "0x1133650")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001233")]
		[Address(RVA = "0x1133C28", Offset = "0x1133C28", VA = "0x1133C28")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001234")]
		[Address(RVA = "0x1133C58", Offset = "0x1133C58", VA = "0x1133C58")]
		private void OnSelectedItemSet(int item)
		{
		}

		[Token(Token = "0x6001235")]
		[Address(RVA = "0x11331AC", Offset = "0x11331AC", VA = "0x11331AC")]
		public void TogglePressed(IToggle pressedToggle)
		{
		}

		[Token(Token = "0x6001236")]
		[Address(RVA = "0x11339BC", Offset = "0x11339BC", VA = "0x11339BC")]
		private void UpdateSelectedToggle()
		{
		}

		[Token(Token = "0x6001237")]
		[Address(RVA = "0x1133760", Offset = "0x1133760", VA = "0x1133760")]
		public void ResetGroup()
		{
		}

		[Token(Token = "0x6001238")]
		[Address(RVA = "0x1132C4C", Offset = "0x1132C4C", VA = "0x1132C4C")]
		public void RegisterToggle(IToggle toggle, int priority = -1)
		{
		}

		[Token(Token = "0x6001239")]
		[Address(RVA = "0x1132F94", Offset = "0x1132F94", VA = "0x1132F94")]
		public void UnregisterToggle(IToggle toggle)
		{
		}

		[Token(Token = "0x600123A")]
		[Address(RVA = "0x1133D8C", Offset = "0x1133D8C", VA = "0x1133D8C")]
		public VRToggleGroup()
		{
		}

		[Token(Token = "0x600123B")]
		[Address(RVA = "0x1133E0C", Offset = "0x1133E0C", VA = "0x1133E0C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE0010", Offset = "0xBE0010")]
		private bool <ResetGroup>b__15_0(KeyValuePair<IToggle, int> x)
		{
			return default(bool);
		}
	}
}
namespace Cortopia.Scripts.UI.GameModes
{
	[Token(Token = "0x200059B")]
	public class DisplayTimer : MonoBehaviour
	{
		[Token(Token = "0x40010B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float time;

		[Token(Token = "0x40010B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly ReactiveSource<string> _text;

		[Token(Token = "0x1700033E")]
		public Reactive<string> Text
		{
			[Token(Token = "0x6001241")]
			[Address(RVA = "0x104073C", Offset = "0x104073C", VA = "0x104073C")]
			get
			{
				return default(Reactive<string>);
			}
		}

		[Token(Token = "0x6001242")]
		[Address(RVA = "0x1040790", Offset = "0x1040790", VA = "0x1040790")]
		private void Update()
		{
		}

		[Token(Token = "0x6001243")]
		[Address(RVA = "0x1040854", Offset = "0x1040854", VA = "0x1040854")]
		public DisplayTimer()
		{
		}
	}
	[Token(Token = "0x200059C")]
	public class GameModeCustomizationObject : MonoBehaviour
	{
		[Token(Token = "0x40010B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AssetRefGameModeSetup gameMode;

		[Token(Token = "0x40010B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject customizableRoot;

		[Token(Token = "0x40010B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool _processed;

		[Token(Token = "0x6001244")]
		[Address(RVA = "0xFA5B40", Offset = "0xFA5B40", VA = "0xFA5B40")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001245")]
		[Address(RVA = "0xFA5B78", Offset = "0xFA5B78", VA = "0xFA5B78")]
		private void Update()
		{
		}

		[Token(Token = "0x6001246")]
		[Address(RVA = "0xFA5C70", Offset = "0xFA5C70", VA = "0xFA5C70")]
		public GameModeCustomizationObject()
		{
		}
	}
	[Token(Token = "0x200059D")]
	public class GameModeEffectSelector : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200059E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCA5F0", Offset = "0xBCA5F0")]
		private sealed class <>c
		{
			[Token(Token = "0x40010BF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40010C0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<EntityRef, bool> <>9__8_0;

			[Token(Token = "0x6001250")]
			[Address(RVA = "0x1031E88", Offset = "0x1031E88", VA = "0x1031E88")]
			public <>c()
			{
			}

			[Token(Token = "0x6001251")]
			[Address(RVA = "0x1031E90", Offset = "0x1031E90", VA = "0x1031E90")]
			internal bool <get_HasGameModeEffect>b__8_0(EntityRef x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x40010BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private int uniqueID;

		[Token(Token = "0x40010BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly ReactiveSource<EntityRef> _gameModeEffect;

		[Token(Token = "0x40010BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly ReactiveSource<float> _maxTimer;

		[Token(Token = "0x40010BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly ReactiveSource<float> _currentTimer;

		[Token(Token = "0x40010BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private readonly ReactiveSource<bool> _haveTimer;

		[Token(Token = "0x1700033F")]
		public Reactive<EntityRef> GameModeEffect
		{
			[Token(Token = "0x6001247")]
			[Address(RVA = "0xFA5C78", Offset = "0xFA5C78", VA = "0xFA5C78")]
			get
			{
				return default(Reactive<EntityRef>);
			}
		}

		[Token(Token = "0x17000340")]
		public Reactive<bool> HasGameModeEffect
		{
			[Token(Token = "0x6001248")]
			[Address(RVA = "0xFA5CCC", Offset = "0xFA5CCC", VA = "0xFA5CCC")]
			get
			{
				return default(Reactive<bool>);
			}
		}

		[Token(Token = "0x17000341")]
		public Reactive<bool> HasTimer
		{
			[Token(Token = "0x6001249")]
			[Address(RVA = "0xFA5E18", Offset = "0xFA5E18", VA = "0xFA5E18")]
			get
			{
				return default(Reactive<bool>);
			}
		}

		[Token(Token = "0x17000342")]
		public Reactive<float> MaxTimer
		{
			[Token(Token = "0x600124A")]
			[Address(RVA = "0xFA5E6C", Offset = "0xFA5E6C", VA = "0xFA5E6C")]
			get
			{
				return default(Reactive<float>);
			}
		}

		[Token(Token = "0x17000343")]
		public Reactive<float> CurrentTimer
		{
			[Token(Token = "0x600124B")]
			[Address(RVA = "0xFA5EC0", Offset = "0xFA5EC0", VA = "0xFA5EC0")]
			get
			{
				return default(Reactive<float>);
			}
		}

		[Token(Token = "0x600124C")]
		[Address(RVA = "0xFA5F14", Offset = "0xFA5F14", VA = "0xFA5F14")]
		private void Update()
		{
		}

		[Token(Token = "0x600124D")]
		[Address(RVA = "0xFA614C", Offset = "0xFA614C", VA = "0xFA614C")]
		private EntityRef FindGameModeEffect(Frame frame)
		{
			return default(EntityRef);
		}

		[Token(Token = "0x600124E")]
		[Address(RVA = "0xFA62F8", Offset = "0xFA62F8", VA = "0xFA62F8")]
		public GameModeEffectSelector()
		{
		}
	}
	[Token(Token = "0x200059F")]
	public class HUDVisibilityController : MonoBehaviour
	{
		[Token(Token = "0x40010C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly ReactiveSource<bool> _visibility;

		[Token(Token = "0x17000344")]
		public Reactive<bool> Visiblity
		{
			[Token(Token = "0x6001252")]
			[Address(RVA = "0xFAFBF0", Offset = "0xFAFBF0", VA = "0xFAFBF0")]
			get
			{
				return default(Reactive<bool>);
			}
		}

		[Token(Token = "0x6001253")]
		[Address(RVA = "0xFAFC44", Offset = "0xFAFC44", VA = "0xFAFC44")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001254")]
		[Address(RVA = "0xFAFC9C", Offset = "0xFAFC9C", VA = "0xFAFC9C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001255")]
		[Address(RVA = "0xFAFCF4", Offset = "0xFAFCF4", VA = "0xFAFCF4")]
		public HUDVisibilityController()
		{
		}
	}
	[Token(Token = "0x20005A0")]
	public class LocalPlayerCheck : MonoBehaviour
	{
		[Token(Token = "0x40010C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private EntityView dataSourceView;

		[Token(Token = "0x40010C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private ReactiveSource<bool> _localPlayer;

		[Token(Token = "0x40010C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool _processed;

		[Token(Token = "0x17000345")]
		public Reactive<bool> IsLocalPlayer
		{
			[Token(Token = "0x6001256")]
			[Address(RVA = "0xF8876C", Offset = "0xF8876C", VA = "0xF8876C")]
			get
			{
				return default(Reactive<bool>);
			}
		}

		[Token(Token = "0x6001257")]
		[Address(RVA = "0xF887C0", Offset = "0xF887C0", VA = "0xF887C0")]
		private void Update()
		{
		}

		[Token(Token = "0x6001258")]
		[Address(RVA = "0xF889C8", Offset = "0xF889C8", VA = "0xF889C8")]
		public LocalPlayerCheck()
		{
		}
	}
	[Token(Token = "0x20005A1")]
	public class LocalTeamSelector : MonoBehaviour
	{
		[Token(Token = "0x40010C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Quantum.Team checkTeam;

		[Token(Token = "0x40010C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly ReactiveSource<bool> _localTeam;

		[Token(Token = "0x40010C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool _selectedSide;

		[Token(Token = "0x17000346")]
		public Reactive<bool> IsLocalTeam
		{
			[Token(Token = "0x6001259")]
			[Address(RVA = "0xF89BF4", Offset = "0xF89BF4", VA = "0xF89BF4")]
			get
			{
				return default(Reactive<bool>);
			}
		}

		[Token(Token = "0x600125A")]
		[Address(RVA = "0xF89C48", Offset = "0xF89C48", VA = "0xF89C48")]
		private void Update()
		{
		}

		[Token(Token = "0x600125B")]
		[Address(RVA = "0xF89DC0", Offset = "0xF89DC0", VA = "0xF89DC0")]
		public LocalTeamSelector()
		{
		}
	}
	[Token(Token = "0x20005A2")]
	public class MultiGameModeCustomizationObject : MonoBehaviour
	{
		[Token(Token = "0x40010C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AssetRefGameModeSetup[] gameModes;

		[Token(Token = "0x40010C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject customizableRoot;

		[Token(Token = "0x40010CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private AssetGuid _processedID;

		[Token(Token = "0x600125C")]
		[Address(RVA = "0x10198E8", Offset = "0x10198E8", VA = "0x10198E8")]
		private void Update()
		{
		}

		[Token(Token = "0x600125D")]
		[Address(RVA = "0x1019A4C", Offset = "0x1019A4C", VA = "0x1019A4C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600125E")]
		[Address(RVA = "0x1019A90", Offset = "0x1019A90", VA = "0x1019A90")]
		public MultiGameModeCustomizationObject()
		{
		}
	}
	[Token(Token = "0x20005A3")]
	public class PrimaryInputEvent : MonoBehaviour
	{
		[Token(Token = "0x40010CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private HandButton sourceInput;

		[Token(Token = "0x40010CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private bool pollLeftHand;

		[Token(Token = "0x40010CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
		[SerializeField]
		private bool pollRightHand;

		[Token(Token = "0x40010CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private UnityEvent onPress;

		[Token(Token = "0x40010CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private UnityEvent onRelease;

		[Token(Token = "0x600125F")]
		[Address(RVA = "0x111B4E0", Offset = "0x111B4E0", VA = "0x111B4E0")]
		private void Update()
		{
		}

		[Token(Token = "0x6001260")]
		[Address(RVA = "0x111B568", Offset = "0x111B568", VA = "0x111B568")]
		private ButtonState GetInputState(HandButton button, int handIndex)
		{
			return default(ButtonState);
		}

		[Token(Token = "0x6001261")]
		[Address(RVA = "0x111B8F4", Offset = "0x111B8F4", VA = "0x111B8F4")]
		public PrimaryInputEvent()
		{
		}
	}
	[Token(Token = "0x20005A4")]
	public class ReactiveHUDObject : MonoBehaviour
	{
		[Token(Token = "0x40010D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private string fieldName;

		[Token(Token = "0x40010D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private BoundValue<LocalizedString> localizedString;

		[Token(Token = "0x40010D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private BoundValue<string> notLocalizedString;

		[Token(Token = "0x40010D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private BoundValue<bool> visibility;

		[Token(Token = "0x40010D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private HUDController _activeHUDController;

		[Token(Token = "0x40010D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private ReactiveSubscription _subscription;

		[Token(Token = "0x40010D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool _localizedStringSet;

		[Token(Token = "0x40010D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private GameObject _hudObject;

		[Token(Token = "0x40010D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private TMP_Text _textField;

		[Token(Token = "0x40010D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private LocalizeStringEvent _localizeStringEvent;

		[Token(Token = "0x6001262")]
		[Address(RVA = "0x12559E8", Offset = "0x12559E8", VA = "0x12559E8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001263")]
		[Address(RVA = "0x1255D70", Offset = "0x1255D70", VA = "0x1255D70")]
		private void SetVisibility(bool active)
		{
		}

		[Token(Token = "0x6001264")]
		[Address(RVA = "0x1255EA4", Offset = "0x1255EA4", VA = "0x1255EA4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001265")]
		[Address(RVA = "0x1255ED4", Offset = "0x1255ED4", VA = "0x1255ED4")]
		private void Update()
		{
		}

		[Token(Token = "0x6001266")]
		[Address(RVA = "0x1256338", Offset = "0x1256338", VA = "0x1256338")]
		private void SetNotLocalizedText(string obj)
		{
		}

		[Token(Token = "0x6001267")]
		[Address(RVA = "0x125621C", Offset = "0x125621C", VA = "0x125621C")]
		private void SetLocalizedText(LocalizedString obj)
		{
		}

		[Token(Token = "0x6001268")]
		[Address(RVA = "0x1256414", Offset = "0x1256414", VA = "0x1256414")]
		public ReactiveHUDObject()
		{
		}
	}
	[Token(Token = "0x20005A5")]
	public class ReadGameModeVariable : MonoBehaviour
	{
		[Token(Token = "0x40010DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private string variableName;

		[Token(Token = "0x40010DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly ReactiveSource<string> _text;

		[Token(Token = "0x40010DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private BlackboardValue _oldValue;

		[Token(Token = "0x17000347")]
		public Reactive<string> Text
		{
			[Token(Token = "0x6001269")]
			[Address(RVA = "0x125A060", Offset = "0x125A060", VA = "0x125A060")]
			get
			{
				return default(Reactive<string>);
			}
		}

		[Token(Token = "0x600126A")]
		[Address(RVA = "0x125A0B4", Offset = "0x125A0B4", VA = "0x125A0B4")]
		private void Update()
		{
		}

		[Token(Token = "0x600126B")]
		[Address(RVA = "0x125A53C", Offset = "0x125A53C", VA = "0x125A53C")]
		public ReadGameModeVariable()
		{
		}
	}
	[Token(Token = "0x20005A6")]
	public class SabotageTimeline : MonoBehaviour
	{
		[Token(Token = "0x40010DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private RoundEndIcon roundEndIconPrototype;

		[Token(Token = "0x40010DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject separatorPrototype;

		[Token(Token = "0x40010DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private BoundValue<int> maxRoundsCount;

		[Token(Token = "0x40010E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool _doSubscribe;

		[Token(Token = "0x40010E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private ReactiveSubscription _subscription;

		[Token(Token = "0x600126C")]
		[Address(RVA = "0x11F4DAC", Offset = "0x11F4DAC", VA = "0x11F4DAC")]
		private void Update()
		{
		}

		[Token(Token = "0x600126D")]
		[Address(RVA = "0x11F4EA4", Offset = "0x11F4EA4", VA = "0x11F4EA4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600126E")]
		[Address(RVA = "0x11F4EB0", Offset = "0x11F4EB0", VA = "0x11F4EB0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600126F")]
		[Address(RVA = "0x11F4EC4", Offset = "0x11F4EC4", VA = "0x11F4EC4")]
		private void CreateTimeLine(int maxRounds)
		{
		}

		[Token(Token = "0x6001270")]
		[Address(RVA = "0x11F52F4", Offset = "0x11F52F4", VA = "0x11F52F4")]
		public SabotageTimeline()
		{
		}
	}
	[Token(Token = "0x20005A7")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xBCA600", Offset = "0xBCA600")]
	public class TeamDeathMatchScoreSlider : MonoBehaviour
	{
		[Token(Token = "0x40010E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private BoundValue<Quantum.Team> team;

		[Token(Token = "0x40010E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private bool keepUpdated;

		[Token(Token = "0x40010E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly ReactiveSource<string> _scoreRequired;

		[Token(Token = "0x40010E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly ReactiveSource<string> _scoreString;

		[Token(Token = "0x40010E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private GameModeSetupAsset _gameMode;

		[Token(Token = "0x40010E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool _hasProcessedData;

		[Token(Token = "0x40010E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private AssetGuid _lastGameModeId;

		[Token(Token = "0x40010E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int _lastScore;

		[Token(Token = "0x40010EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Slider _slider;

		[Token(Token = "0x17000348")]
		public Reactive<string> ScoreString
		{
			[Token(Token = "0x6001271")]
			[Address(RVA = "0x11542AC", Offset = "0x11542AC", VA = "0x11542AC")]
			get
			{
				return default(Reactive<string>);
			}
		}

		[Token(Token = "0x17000349")]
		public Reactive<string> ScoreRequired
		{
			[Token(Token = "0x6001272")]
			[Address(RVA = "0x1154300", Offset = "0x1154300", VA = "0x1154300")]
			get
			{
				return default(Reactive<string>);
			}
		}

		[Token(Token = "0x6001273")]
		[Address(RVA = "0x1154354", Offset = "0x1154354", VA = "0x1154354")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001274")]
		[Address(RVA = "0x11543A8", Offset = "0x11543A8", VA = "0x11543A8")]
		private void Update()
		{
		}

		[Token(Token = "0x6001275")]
		[Address(RVA = "0x1154730", Offset = "0x1154730", VA = "0x1154730")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001276")]
		[Address(RVA = "0x115476C", Offset = "0x115476C", VA = "0x115476C")]
		public TeamDeathMatchScoreSlider()
		{
		}
	}
}
namespace Cortopia.Scripts.UI.CustomGameUI
{
	[Token(Token = "0x20005A8")]
	public class CustomGameBots : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20005A9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCA660", Offset = "0xBCA660")]
		private sealed class <>c
		{
			[Token(Token = "0x40010F7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40010F8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Comparison<EntityRef> <>9__14_0;

			[Token(Token = "0x6001282")]
			[Address(RVA = "0x1026018", Offset = "0x1026018", VA = "0x1026018")]
			public <>c()
			{
			}

			[Token(Token = "0x6001283")]
			[Address(RVA = "0x1026020", Offset = "0x1026020", VA = "0x1026020")]
			internal int <Update>b__14_0(EntityRef a, EntityRef b)
			{
				return default(int);
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20005AA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCA670", Offset = "0xBCA670")]
		private struct <ForcePlayFabUpdateAsync>d__17 : IAsyncStateMachine
		{
			[Token(Token = "0x40010F9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40010FA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x40010FB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CustomGameBots <>4__this;

			[Token(Token = "0x40010FC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x6001284")]
			[Address(RVA = "0x102604C", Offset = "0x102604C", VA = "0x102604C", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001285")]
			[Address(RVA = "0x1026290", Offset = "0x1026290", VA = "0x1026290", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20005AB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCA680", Offset = "0xBCA680")]
		private struct <UpdatePlayFabAsync>d__18 : IAsyncStateMachine
		{
			[Token(Token = "0x40010FD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40010FE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x40010FF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CustomGameBots <>4__this;

			[Token(Token = "0x4001100")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public int botCount;

			[Token(Token = "0x4001101")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public QuantumGame game;

			[Token(Token = "0x4001102")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x6001286")]
			[Address(RVA = "0x102629C", Offset = "0x102629C", VA = "0x102629C", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001287")]
			[Address(RVA = "0x1026818", Offset = "0x1026818", VA = "0x1026818", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x40010EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly TimeSpan DelayBeforeDataUpdates;

		[Token(Token = "0x40010EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly TimeSpan WaitTimeBetweenDataUpdates;

		[Token(Token = "0x40010ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private PlayFabStatusListener playFabStatusListener;

		[Token(Token = "0x40010EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private BoundValue<bool> hasMatch;

		[Token(Token = "0x40010EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly ReactiveSource<bool> _mayCreateBots;

		[Token(Token = "0x40010F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int _botCount;

		[Token(Token = "0x40010F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private EntityRef[] _botEntities;

		[Token(Token = "0x40010F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int[] _botPlayerIndex;

		[Token(Token = "0x40010F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool _isDataUpdatePending;

		[Token(Token = "0x40010F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private int _playFabBotCount;

		[Token(Token = "0x40010F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Task _playFabUpdateTask;

		[Token(Token = "0x40010F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool _recreateBots;

		[Token(Token = "0x1700034A")]
		public Reactive<bool> MayCreateBots
		{
			[Token(Token = "0x6001277")]
			[Address(RVA = "0x116945C", Offset = "0x116945C", VA = "0x116945C")]
			get
			{
				return default(Reactive<bool>);
			}
		}

		[Token(Token = "0x6001278")]
		[Address(RVA = "0x11694CC", Offset = "0x11694CC", VA = "0x11694CC")]
		private void Update()
		{
		}

		[Token(Token = "0x6001279")]
		[Address(RVA = "0x1169DF4", Offset = "0x1169DF4", VA = "0x1169DF4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600127A")]
		[Address(RVA = "0x1169AE0", Offset = "0x1169AE0", VA = "0x1169AE0")]
		private void AddOrRemoveBots(int expectedNumberOfBots, QuantumGame game)
		{
		}

		[Token(Token = "0x600127B")]
		[Address(RVA = "0x1169F68", Offset = "0x1169F68", VA = "0x1169F68")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xBE0020", Offset = "0xBE0020")]
		private Task ForcePlayFabUpdateAsync()
		{
			return null;
		}

		[Token(Token = "0x600127C")]
		[Address(RVA = "0x1169CD8", Offset = "0x1169CD8", VA = "0x1169CD8")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xBE0080", Offset = "0xBE0080")]
		private Task UpdatePlayFabAsync(QuantumGame game, int botCount)
		{
			return null;
		}

		[Token(Token = "0x600127D")]
		[Address(RVA = "0x116A06C", Offset = "0x116A06C", VA = "0x116A06C")]
		public void AddBot(int difficulty = 0)
		{
		}

		[Token(Token = "0x600127E")]
		[Address(RVA = "0x116A1A4", Offset = "0x116A1A4", VA = "0x116A1A4")]
		public EntityRef GetBotEntity(int playerIndex)
		{
			return default(EntityRef);
		}

		[Token(Token = "0x600127F")]
		[Address(RVA = "0x116A218", Offset = "0x116A218", VA = "0x116A218")]
		public CustomGameBots()
		{
		}
	}
	[Token(Token = "0x20005AC")]
	public class CustomGameLevel : MonoBehaviour
	{
		[Token(Token = "0x4001103")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xBD5714", Offset = "0xBD5714")]
		[SerializeField]
		private CustomGameLevelSelection customGameLevelSelection;

		[Token(Token = "0x4001104")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AssetRefMap map;

		[Token(Token = "0x6001288")]
		[Address(RVA = "0x116A380", Offset = "0x116A380", VA = "0x116A380")]
		public void SelectLevel()
		{
		}

		[Token(Token = "0x6001289")]
		[Address(RVA = "0x116A43C", Offset = "0x116A43C", VA = "0x116A43C")]
		public CustomGameLevel()
		{
		}
	}
	[Token(Token = "0x20005AD")]
	public class CustomGameLevelSelection : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20005AE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCA690", Offset = "0xBCA690")]
		private sealed class <>c
		{
			[Token(Token = "0x4001112")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001113")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<MapAsset, LocalizedString> <>9__14_0;

			[Token(Token = "0x4001114")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<MapAsset, LocalizedString> <>9__16_0;

			[Token(Token = "0x4001115")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Func<MapAsset, Sprite> <>9__18_0;

			[Token(Token = "0x4001116")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static Func<GameModeSetupAsset, LocalizedString> <>9__20_0;

			[Token(Token = "0x4001117")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public static Func<GameModeSetupAsset, LocalizedString> <>9__22_0;

			[Token(Token = "0x4001118")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public static Func<GameModeSetupAsset, Sprite> <>9__24_0;

			[Token(Token = "0x4001119")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public static Func<(MapAsset, bool, bool), bool> <>9__26_0;

			[Token(Token = "0x600129B")]
			[Address(RVA = "0x1026884", Offset = "0x1026884", VA = "0x1026884")]
			public <>c()
			{
			}

			[Token(Token = "0x600129C")]
			[Address(RVA = "0x102688C", Offset = "0x102688C", VA = "0x102688C")]
			internal LocalizedString <get_MapName>b__14_0(MapAsset x)
			{
				return null;
			}

			[Token(Token = "0x600129D")]
			[Address(RVA = "0x102690C", Offset = "0x102690C", VA = "0x102690C")]
			internal LocalizedString <get_MapDescription>b__16_0(MapAsset x)
			{
				return null;
			}

			[Token(Token = "0x600129E")]
			[Address(RVA = "0x102698C", Offset = "0x102698C", VA = "0x102698C")]
			internal Sprite <get_MapImage>b__18_0(MapAsset x)
			{
				return null;
			}

			[Token(Token = "0x600129F")]
			[Address(RVA = "0x1026A0C", Offset = "0x1026A0C", VA = "0x1026A0C")]
			internal LocalizedString <get_GameModeName>b__20_0(GameModeSetupAsset x)
			{
				return null;
			}

			[Token(Token = "0x60012A0")]
			[Address(RVA = "0x1026A8C", Offset = "0x1026A8C", VA = "0x1026A8C")]
			internal LocalizedString <get_GameModeDescription>b__22_0(GameModeSetupAsset x)
			{
				return null;
			}

			[Token(Token = "0x60012A1")]
			[Address(RVA = "0x1026B18", Offset = "0x1026B18", VA = "0x1026B18")]
			internal Sprite <get_GameModeImage>b__24_0(GameModeSetupAsset x)
			{
				return null;
			}

			[Token(Token = "0x60012A2")]
			[Address(RVA = "0x1026B98", Offset = "0x1026B98", VA = "0x1026B98")]
			internal bool <get_MayStart>b__26_0((MapAsset, bool, bool) t)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4001105")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private BoundValue<bool> allowedToStartCustomGame;

		[Token(Token = "0x4001106")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private BoundValue<int> groupPlayerCount;

		[Token(Token = "0x4001107")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AssetRefMap defaultMap;

		[Token(Token = "0x4001108")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly ReactiveSource<bool> _hasMatch;

		[Token(Token = "0x4001109")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private readonly ReactiveSource<MapAsset> _mapAsset;

		[Token(Token = "0x400110A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private readonly ReactiveSource<GameModeSetupAsset> _gameModeSetupAsset;

		[Token(Token = "0x400110B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private readonly ReactiveSource<bool> _teamsValid;

		[Token(Token = "0x400110C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private readonly ReactiveTransaction _transaction;

		[Token(Token = "0x400110D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool _forceGetSelectedLevel;

		[Token(Token = "0x400110E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private AssetRefMap _selectedLevel;

		[Token(Token = "0x400110F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private AssetRefGameModeSetup _selectedGameMode;

		[Token(Token = "0x4001110")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool _setSelectedLevelOrGameMode;

		[Token(Token = "0x4001111")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD57A0", Offset = "0xBD57A0")]
		private readonly Reactive<bool> <HasMatch>k__BackingField;

		[Token(Token = "0x1700034B")]
		public Reactive<LocalizedString> MapName
		{
			[Token(Token = "0x600128B")]
			[Address(RVA = "0x116A5E0", Offset = "0x116A5E0", VA = "0x116A5E0")]
			get
			{
				return default(Reactive<LocalizedString>);
			}
		}

		[Token(Token = "0x1700034C")]
		public Reactive<LocalizedString> MapDescription
		{
			[Token(Token = "0x600128C")]
			[Address(RVA = "0x116A72C", Offset = "0x116A72C", VA = "0x116A72C")]
			get
			{
				return default(Reactive<LocalizedString>);
			}
		}

		[Token(Token = "0x1700034D")]
		public Reactive<Sprite> MapImage
		{
			[Token(Token = "0x600128D")]
			[Address(RVA = "0x116A878", Offset = "0x116A878", VA = "0x116A878")]
			get
			{
				return default(Reactive<Sprite>);
			}
		}

		[Token(Token = "0x1700034E")]
		public Reactive<LocalizedString> GameModeName
		{
			[Token(Token = "0x600128E")]
			[Address(RVA = "0x116A9C4", Offset = "0x116A9C4", VA = "0x116A9C4")]
			get
			{
				return default(Reactive<LocalizedString>);
			}
		}

		[Token(Token = "0x1700034F")]
		public Reactive<LocalizedString> GameModeDescription
		{
			[Token(Token = "0x600128F")]
			[Address(RVA = "0x116AB10", Offset = "0x116AB10", VA = "0x116AB10")]
			get
			{
				return default(Reactive<LocalizedString>);
			}
		}

		[Token(Token = "0x17000350")]
		public Reactive<Sprite> GameModeImage
		{
			[Token(Token = "0x6001290")]
			[Address(RVA = "0x116AC5C", Offset = "0x116AC5C", VA = "0x116AC5C")]
			get
			{
				return default(Reactive<Sprite>);
			}
		}

		[Token(Token = "0x17000351")]
		public Reactive<bool> MayStart
		{
			[Token(Token = "0x6001291")]
			[Address(RVA = "0x116ADA8", Offset = "0x116ADA8", VA = "0x116ADA8")]
			get
			{
				return default(Reactive<bool>);
			}
		}

		[Token(Token = "0x17000352")]
		public Reactive<bool> TeamsValid
		{
			[Token(Token = "0x6001292")]
			[Address(RVA = "0x116AF48", Offset = "0x116AF48", VA = "0x116AF48")]
			get
			{
				return default(Reactive<bool>);
			}
		}

		[Token(Token = "0x17000353")]
		public Reactive<bool> HasMatch
		{
			[Token(Token = "0x6001293")]
			[Address(RVA = "0x116AF9C", Offset = "0x116AF9C", VA = "0x116AF9C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE0100", Offset = "0xBE0100")]
			get
			{
				return default(Reactive<bool>);
			}
		}

		[Token(Token = "0x600128A")]
		[Address(RVA = "0x116A444", Offset = "0x116A444", VA = "0x116A444")]
		public CustomGameLevelSelection()
		{
		}

		[Token(Token = "0x6001294")]
		[Address(RVA = "0x116AFA4", Offset = "0x116AFA4", VA = "0x116AFA4")]
		private void Update()
		{
		}

		[Token(Token = "0x6001295")]
		[Address(RVA = "0x116B8B8", Offset = "0x116B8B8", VA = "0x116B8B8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001296")]
		[Address(RVA = "0x116B670", Offset = "0x116B670", VA = "0x116B670")]
		private void SetReactiveMapAssetIfChanged(AssetGuid mapGuid)
		{
		}

		[Token(Token = "0x6001297")]
		[Address(RVA = "0x116B794", Offset = "0x116B794", VA = "0x116B794")]
		private void SetReactiveGameModeSetupAssetIfChanged(AssetGuid gameModeSetupGuid)
		{
		}

		[Token(Token = "0x6001298")]
		[Address(RVA = "0x116A3A0", Offset = "0x116A3A0", VA = "0x116A3A0")]
		public void SelectLevel(AssetRefMap map)
		{
		}

		[Token(Token = "0x6001299")]
		[Address(RVA = "0x116BA0C", Offset = "0x116BA0C", VA = "0x116BA0C")]
		public void SelectGameMode(AssetRefGameModeSetup gameModeSetup)
		{
		}
	}
	[Token(Token = "0x20005AF")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xBCA6A0", Offset = "0xBCA6A0")]
	public class CustomGameLoader : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20005B0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCA700", Offset = "0xBCA700")]
		private sealed class <>c
		{
			[Token(Token = "0x4001121")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001122")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<bool, bool> <>9__12_0;

			[Token(Token = "0x60012AE")]
			[Address(RVA = "0x1026C88", Offset = "0x1026C88", VA = "0x1026C88")]
			public <>c()
			{
			}

			[Token(Token = "0x60012AF")]
			[Address(RVA = "0x1026C90", Offset = "0x1026C90", VA = "0x1026C90")]
			internal bool <get_IsNotLoading>b__12_0(bool x)
			{
				return default(bool);
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20005B1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCA710", Offset = "0xBCA710")]
		private struct <StartCustomGameAsync>d__19 : IAsyncStateMachine
		{
			[Token(Token = "0x4001123")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001124")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x4001125")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CustomGameLoader <>4__this;

			[Token(Token = "0x4001126")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x4001127")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int <i>5__2;

			[Token(Token = "0x4001128")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private TaskAwaiter<GetMatchResult> <>u__2;

			[Token(Token = "0x60012B0")]
			[Address(RVA = "0x1026C9C", Offset = "0x1026C9C", VA = "0x1026C9C", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x60012B1")]
			[Address(RVA = "0x10273E4", Offset = "0x10273E4", VA = "0x10273E4", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x400111A")]
		public const int VerifyJoinCustomGameMaxSeconds = 20;

		[Token(Token = "0x400111B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly ReactiveSource<bool> _isLoading;

		[Token(Token = "0x400111C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly ReactiveSource<bool> _isOnline;

		[Token(Token = "0x400111D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly ReactiveSource<int> _requiredPlayers;

		[Token(Token = "0x400111E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private AssetRefMap _loadingMap;

		[Token(Token = "0x400111F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private ForcedSceneLoader _sceneLoader;

		[Token(Token = "0x4001120")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Task _task;

		[Token(Token = "0x17000354")]
		public Reactive<bool> IsOnline
		{
			[Token(Token = "0x60012A3")]
			[Address(RVA = "0x116BAA8", Offset = "0x116BAA8", VA = "0x116BAA8")]
			get
			{
				return default(Reactive<bool>);
			}
		}

		[Token(Token = "0x17000355")]
		public Reactive<bool> IsLoading
		{
			[Token(Token = "0x60012A4")]
			[Address(RVA = "0x116BB18", Offset = "0x116BB18", VA = "0x116BB18")]
			get
			{
				return default(Reactive<bool>);
			}
		}

		[Token(Token = "0x17000356")]
		public Reactive<bool> IsNotLoading
		{
			[Token(Token = "0x60012A5")]
			[Address(RVA = "0x116BB6C", Offset = "0x116BB6C", VA = "0x116BB6C")]
			get
			{
				return default(Reactive<bool>);
			}
		}

		[Token(Token = "0x17000357")]
		public Reactive<int> RequiredPlayers
		{
			[Token(Token = "0x60012A6")]
			[Address(RVA = "0x116BCB8", Offset = "0x116BCB8", VA = "0x116BCB8")]
			get
			{
				return default(Reactive<int>);
			}
		}

		[Token(Token = "0x60012A7")]
		[Address(RVA = "0x116BD0C", Offset = "0x116BD0C", VA = "0x116BD0C")]
		private void Start()
		{
		}

		[Token(Token = "0x60012A8")]
		[Address(RVA = "0x116BE14", Offset = "0x116BE14", VA = "0x116BE14")]
		private void Update()
		{
		}

		[Token(Token = "0x60012A9")]
		[Address(RVA = "0x116BF94", Offset = "0x116BF94", VA = "0x116BF94")]
		private void ForceLevelLoadTeamValidationFailed(EventForceLevelLoadTeamValidationFailed callback)
		{
		}

		[Token(Token = "0x60012AA")]
		[Address(RVA = "0x116C030", Offset = "0x116C030", VA = "0x116C030")]
		public void StartCustomGame()
		{
		}

		[Token(Token = "0x60012AB")]
		[Address(RVA = "0x116C0AC", Offset = "0x116C0AC", VA = "0x116C0AC")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xBE0110", Offset = "0xBE0110")]
		private Task StartCustomGameAsync()
		{
			return null;
		}

		[Token(Token = "0x60012AC")]
		[Address(RVA = "0x116C1B0", Offset = "0x116C1B0", VA = "0x116C1B0")]
		public CustomGameLoader()
		{
		}
	}
	[Token(Token = "0x20005B2")]
	public class CustomGameMode : MonoBehaviour
	{
		[Token(Token = "0x4001129")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private CustomGameLevelSelection customGameLevelSelection;

		[Token(Token = "0x400112A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AssetRefGameModeSetup gameMode;

		[Token(Token = "0x60012B2")]
		[Address(RVA = "0x116C2E4", Offset = "0x116C2E4", VA = "0x116C2E4")]
		public void SelectGameMode()
		{
		}

		[Token(Token = "0x60012B3")]
		[Address(RVA = "0x116C304", Offset = "0x116C304", VA = "0x116C304")]
		public CustomGameMode()
		{
		}
	}
	[Token(Token = "0x20005B3")]
	public class CustomGamePlayerUI : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20005B4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCA720", Offset = "0xBCA720")]
		private sealed class <>c
		{
			[Token(Token = "0x4001148")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001149")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<string, bool> <>9__34_0;

			[Token(Token = "0x400114A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<bool, bool> <>9__38_0;

			[Token(Token = "0x400114B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Func<PlayersInfoCache.PlayerInfo, string> <>9__40_0;

			[Token(Token = "0x400114C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static Func<(bool, bool, bool, bool), bool> <>9__44_0;

			[Token(Token = "0x400114D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public static Func<(bool, bool, bool, bool), bool> <>9__51_1;

			[Token(Token = "0x60012CC")]
			[Address(RVA = "0x1027450", Offset = "0x1027450", VA = "0x1027450")]
			public <>c()
			{
			}

			[Token(Token = "0x60012CD")]
			[Address(RVA = "0x1027458", Offset = "0x1027458", VA = "0x1027458")]
			internal bool <get_IsHumanPlayer>b__34_0(string x)
			{
				return default(bool);
			}

			[Token(Token = "0x60012CE")]
			[Address(RVA = "0x1027464", Offset = "0x1027464", VA = "0x1027464")]
			internal bool <get_MuteInteractable>b__38_0(bool x)
			{
				return default(bool);
			}

			[Token(Token = "0x60012CF")]
			[Address(RVA = "0x1027568", Offset = "0x1027568", VA = "0x1027568")]
			internal string <get_Name>b__40_0(PlayersInfoCache.PlayerInfo x)
			{
				return null;
			}

			[Token(Token = "0x60012D0")]
			[Address(RVA = "0x10275BC", Offset = "0x10275BC", VA = "0x10275BC")]
			internal bool <get_MayInteract>b__44_0((bool, bool, bool, bool) t)
			{
				return default(bool);
			}

			[Token(Token = "0x60012D1")]
			[Address(RVA = "0x10275E4", Offset = "0x10275E4", VA = "0x10275E4")]
			internal bool <OnEnable>b__51_1((bool, bool, bool, bool) tuple)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20005B5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCA730", Offset = "0xBCA730")]
		private sealed class <>c__DisplayClass54_0
		{
			[Token(Token = "0x400114E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string playFabEntityId;

			[Token(Token = "0x60012D2")]
			[Address(RVA = "0x102760C", Offset = "0x102760C", VA = "0x102760C")]
			public <>c__DisplayClass54_0()
			{
			}

			[Token(Token = "0x60012D3")]
			[Address(RVA = "0x1027614", Offset = "0x1027614", VA = "0x1027614")]
			internal bool <OnOwnGroupStatusChanged>b__0(GroupMember x)
			{
				return default(bool);
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20005B6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCA740", Offset = "0xBCA740")]
		private struct <SetAvatarImage>d__55 : IAsyncStateMachine
		{
			[Token(Token = "0x400114F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001150")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4001151")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string url;

			[Token(Token = "0x4001152")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public CustomGamePlayerUI <>4__this;

			[Token(Token = "0x4001153")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private TaskAwaiter<OrientedTexture2D> <>u__1;

			[Token(Token = "0x60012D4")]
			[Address(RVA = "0x1027628", Offset = "0x1027628", VA = "0x1027628", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x60012D5")]
			[Address(RVA = "0x1027914", Offset = "0x1027914", VA = "0x1027914", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x400112B")]
		private const int TeamAIndex = 0;

		[Token(Token = "0x400112C")]
		private const int UnAssignedIndex = 1;

		[Token(Token = "0x400112D")]
		private const int TeamBIndex = 2;

		[Token(Token = "0x400112E")]
		private const int RecheckMarginFrames = 10;

		[Token(Token = "0x400112F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private PlayFabStatusListener playFabStatusListener;

		[Token(Token = "0x4001130")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBD57E0", Offset = "0xBD57E0")]
		[SerializeField]
		private GameObject[] teamHoverImages;

		[Token(Token = "0x4001131")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject isInteractableEffect;

		[Token(Token = "0x4001132")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject highlightEffect;

		[Token(Token = "0x4001133")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Texture2D defaultAvatar;

		[Token(Token = "0x4001134")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Texture2D botAvatar;

		[Token(Token = "0x4001135")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private int playerIndex;

		[Token(Token = "0x4001136")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private BoundValue<bool> isLeader;

		[Token(Token = "0x4001137")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private BoundValue<bool> hasMatch;

		[Token(Token = "0x4001138")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private BoundValue<bool> isLoading;

		[Token(Token = "0x4001139")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private CustomGameBots customGameBots;

		[Token(Token = "0x400113A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private GameObject removeButton;

		[Token(Token = "0x400113B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBD58CC", Offset = "0xBD58CC")]
		[SerializeField]
		private LocalizedString[] botNames;

		[Token(Token = "0x400113C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private readonly ReactiveSource<OrientedTexture2D> _avatarImage;

		[Token(Token = "0x400113D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private readonly ReactiveSource<LocalizedString> _botName;

		[Token(Token = "0x400113E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private readonly ReactiveSource<bool> _isLocalPlayer;

		[Token(Token = "0x400113F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private readonly ReactiveSource<Reactive<PlayersInfoCache.PlayerInfo>> _name;

		[Token(Token = "0x4001140")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private readonly ReactiveSource<string> _playFabEntityId;

		[Token(Token = "0x4001141")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private readonly ReactiveSource<bool> _present;

		[Token(Token = "0x4001142")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private bool _isBot;

		[Token(Token = "0x4001143")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		private int _lastSeenFrame;

		[Token(Token = "0x4001144")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private bool _muteCommand;

		[Token(Token = "0x4001145")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private EntityRef _playerEntity;

		[Token(Token = "0x4001146")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private ReactiveSubscription _reactiveSubscription;

		[Token(Token = "0x4001147")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD5918", Offset = "0xBD5918")]
		private readonly ReactiveSource<int> <TeamIndex>k__BackingField;

		[Token(Token = "0x17000358")]
		public ReactiveSource<int> TeamIndex
		{
			[Token(Token = "0x60012B4")]
			[Address(RVA = "0x116C30C", Offset = "0x116C30C", VA = "0x116C30C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE0180", Offset = "0xBE0180")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000359")]
		public Reactive<string> PlayFabEntityId
		{
			[Token(Token = "0x60012B5")]
			[Address(RVA = "0x116C314", Offset = "0x116C314", VA = "0x116C314")]
			get
			{
				return default(Reactive<string>);
			}
		}

		[Token(Token = "0x1700035A")]
		public Reactive<bool> IsHumanPlayer
		{
			[Token(Token = "0x60012B6")]
			[Address(RVA = "0x116C368", Offset = "0x116C368", VA = "0x116C368")]
			get
			{
				return default(Reactive<bool>);
			}
		}

		[Token(Token = "0x1700035B")]
		public Reactive<OrientedTexture2D> AvatarImage
		{
			[Token(Token = "0x60012B7")]
			[Address(RVA = "0x116C494", Offset = "0x116C494", VA = "0x116C494")]
			get
			{
				return default(Reactive<OrientedTexture2D>);
			}
		}

		[Token(Token = "0x1700035C")]
		public Reactive<bool> MuteInteractable
		{
			[Token(Token = "0x60012B8")]
			[Address(RVA = "0x116C4E8", Offset = "0x116C4E8", VA = "0x116C4E8")]
			get
			{
				return default(Reactive<bool>);
			}
		}

		[Token(Token = "0x1700035D")]
		public Reactive<string> Name
		{
			[Token(Token = "0x60012B9")]
			[Address(RVA = "0x116C634", Offset = "0x116C634", VA = "0x116C634")]
			get
			{
				return default(Reactive<string>);
			}
		}

		[Token(Token = "0x1700035E")]
		public Reactive<LocalizedString> BotName
		{
			[Token(Token = "0x60012BA")]
			[Address(RVA = "0x116C79C", Offset = "0x116C79C", VA = "0x116C79C")]
			get
			{
				return default(Reactive<LocalizedString>);
			}
		}

		[Token(Token = "0x1700035F")]
		public Reactive<bool> MayInteract
		{
			[Token(Token = "0x60012BB")]
			[Address(RVA = "0x116C7F0", Offset = "0x116C7F0", VA = "0x116C7F0")]
			get
			{
				return default(Reactive<bool>);
			}
		}

		[Token(Token = "0x17000360")]
		public Reactive<bool> IsPresent
		{
			[Token(Token = "0x60012BC")]
			[Address(RVA = "0x116C9E0", Offset = "0x116C9E0", VA = "0x116C9E0")]
			get
			{
				return default(Reactive<bool>);
			}
		}

		[Token(Token = "0x17000361")]
		public bool IsHighlightedVisuals
		{
			[Token(Token = "0x60012BD")]
			[Address(RVA = "0x116CA34", Offset = "0x116CA34", VA = "0x116CA34")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60012BE")]
			[Address(RVA = "0x116CA50", Offset = "0x116CA50", VA = "0x116CA50")]
			set
			{
			}
		}

		[Token(Token = "0x60012BF")]
		[Address(RVA = "0x116CA60", Offset = "0x116CA60", VA = "0x116CA60")]
		private void Update()
		{
		}

		[Token(Token = "0x60012C0")]
		[Address(RVA = "0x116D23C", Offset = "0x116D23C", VA = "0x116D23C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60012C1")]
		[Address(RVA = "0x116D74C", Offset = "0x116D74C", VA = "0x116D74C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60012C2")]
		[Address(RVA = "0x116D058", Offset = "0x116D058", VA = "0x116D058")]
		private void Clear()
		{
		}

		[Token(Token = "0x60012C3")]
		[Address(RVA = "0x116D778", Offset = "0x116D778", VA = "0x116D778")]
		private void OnOwnGroupStatusChanged([AttributeAttribute(Name = "TupleElementNamesAttribute", RVA = "0xBE41DC", Offset = "0xBE41DC")] (GetOwnGroupStatusResult?, string, bool) valueTuple)
		{
		}

		[Token(Token = "0x60012C4")]
		[Address(RVA = "0x116DAD0", Offset = "0x116DAD0", VA = "0x116DAD0")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xBE0190", Offset = "0xBE0190")]
		private void SetAvatarImage(string url)
		{
		}

		[Token(Token = "0x60012C5")]
		[Address(RVA = "0x116DB98", Offset = "0x116DB98", VA = "0x116DB98")]
		private void SetTeamIndex(int teamIndex)
		{
		}

		[Token(Token = "0x60012C6")]
		[Address(RVA = "0x116D14C", Offset = "0x116D14C", VA = "0x116D14C")]
		private void SetPlayerTeam(Quantum.Team team)
		{
		}

		[Token(Token = "0x60012C7")]
		[Address(RVA = "0x116DD88", Offset = "0x116DD88", VA = "0x116DD88")]
		public void HighlightTargetTeam(int target)
		{
		}

		[Token(Token = "0x60012C8")]
		[Address(RVA = "0x116DE04", Offset = "0x116DE04", VA = "0x116DE04")]
		public void Remove()
		{
		}

		[Token(Token = "0x60012C9")]
		[Address(RVA = "0x116DFA4", Offset = "0x116DFA4", VA = "0x116DFA4")]
		public CustomGamePlayerUI()
		{
		}

		[Token(Token = "0x60012CA")]
		[Address(RVA = "0x116E1F8", Offset = "0x116E1F8", VA = "0x116E1F8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE01F0", Offset = "0xBE01F0")]
		private void <OnEnable>b__51_0(bool x)
		{
		}
	}
	[Token(Token = "0x20005B7")]
	public class StopCustomGame : MonoBehaviour
	{
		[Token(Token = "0x4001154")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private PlayFabStatusListener playFabStatusListener;

		[Token(Token = "0x4001155")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private BoundValue<bool> hasMatch;

		[Token(Token = "0x4001156")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private BoundValue<PhotonRoom?> customGameRoom;

		[Token(Token = "0x4001157")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private ReactiveSubscription _reactiveSubscription;

		[Token(Token = "0x60012D6")]
		[Address(RVA = "0x114BF08", Offset = "0x114BF08", VA = "0x114BF08")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60012D7")]
		[Address(RVA = "0x114C0B8", Offset = "0x114C0B8", VA = "0x114C0B8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60012D8")]
		[Address(RVA = "0x114C0C4", Offset = "0x114C0C4", VA = "0x114C0C4")]
		private void OnHasMatchChanged(bool hasMatchValue)
		{
		}

		[Token(Token = "0x60012D9")]
		[Address(RVA = "0x114C1F8", Offset = "0x114C1F8", VA = "0x114C1F8")]
		private void RoomChanged(PhotonRoom? photonRoom)
		{
		}

		[Token(Token = "0x60012DA")]
		[Address(RVA = "0x114C28C", Offset = "0x114C28C", VA = "0x114C28C")]
		public StopCustomGame()
		{
		}
	}
}
namespace Cortopia.Scripts.UI.CharacterBuilderUI
{
	[Token(Token = "0x20005B8")]
	public class CharacterBuilder : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20005B9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCA750", Offset = "0xBCA750")]
		private sealed class <>c
		{
			[Token(Token = "0x4001165")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001166")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<EntitledPlayerClass, bool> <>9__10_0;

			[Token(Token = "0x4001167")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<EntitledPlayerClass, string> <>9__26_0;

			[Token(Token = "0x4001168")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Func<EntitledPlayerClass, ClassType> <>9__30_0;

			[Token(Token = "0x4001169")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static Func<Cortopia.Scripts.Players.Player, Reactive<QuantumGame>> <>9__37_0;

			[Token(Token = "0x60012F0")]
			[Address(RVA = "0x10242D8", Offset = "0x10242D8", VA = "0x10242D8")]
			public <>c()
			{
			}

			[Token(Token = "0x60012F1")]
			[Address(RVA = "0x10242E0", Offset = "0x10242E0", VA = "0x10242E0")]
			internal bool <.ctor>b__10_0(EntitledPlayerClass x)
			{
				return default(bool);
			}

			[Token(Token = "0x60012F2")]
			[Address(RVA = "0x10242EC", Offset = "0x10242EC", VA = "0x10242EC")]
			internal string <get_SelectClassHealth>b__26_0(EntitledPlayerClass x)
			{
				return null;
			}

			[Token(Token = "0x60012F3")]
			[Address(RVA = "0x10243E4", Offset = "0x10243E4", VA = "0x10243E4")]
			internal ClassType <get_SelectedClassType>b__30_0(EntitledPlayerClass x)
			{
				return default(ClassType);
			}

			[Token(Token = "0x60012F4")]
			[Address(RVA = "0x102440C", Offset = "0x102440C", VA = "0x102440C")]
			internal Reactive<QuantumGame> <Start>b__37_0(Cortopia.Scripts.Players.Player x)
			{
				return default(Reactive<QuantumGame>);
			}
		}

		[Token(Token = "0x20005BA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCA760", Offset = "0xBCA760")]
		private sealed class <>c__DisplayClass41_0
		{
			[Token(Token = "0x400116A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public EntitledPlayerClass entitledPlayerClass;

			[Token(Token = "0x60012F5")]
			[Address(RVA = "0x10244B0", Offset = "0x10244B0", VA = "0x10244B0")]
			public <>c__DisplayClass41_0()
			{
			}

			[Token(Token = "0x60012F6")]
			[Address(RVA = "0x10244B8", Offset = "0x10244B8", VA = "0x10244B8")]
			internal bool <ConfigureMenu>b__0(ClassLoadoutButton x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4001158")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private ClassLoadoutButton[] classButtons;

		[Token(Token = "0x4001159")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly ReactiveSource<LocalizedString> _classDescription;

		[Token(Token = "0x400115A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly ReactiveSource<IList<object>> _classHeightArguments;

		[Token(Token = "0x400115B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly ReactiveSource<LocalizedString> _className;

		[Token(Token = "0x400115C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private readonly ReactiveSource<LocalizedString> _classTitle;

		[Token(Token = "0x400115D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private readonly ReactiveSource<bool> _isLoadingSource;

		[Token(Token = "0x400115E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private readonly ReactiveSource<EntitledPlayerClass> _selectedClass;

		[Token(Token = "0x400115F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private HashSet<PlayerClassConfigurationAsset> _changedClasses;

		[Token(Token = "0x4001160")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int _lastModifiedFrameNumber;

		[Token(Token = "0x4001161")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private ReactiveSubscription _playerClassSubscription;

		[Token(Token = "0x4001162")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD5968", Offset = "0xBD5968")]
		private readonly Reactive<bool> <HasSelectedClass>k__BackingField;

		[Token(Token = "0x4001163")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD5978", Offset = "0xBD5978")]
		private readonly Reactive<bool> <IsLoading>k__BackingField;

		[Token(Token = "0x4001164")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD5988", Offset = "0xBD5988")]
		private int <SpellChanges>k__BackingField;

		[Token(Token = "0x17000362")]
		public Reactive<bool> HasSelectedClass
		{
			[Token(Token = "0x60012DC")]
			[Address(RVA = "0x133A01C", Offset = "0x133A01C", VA = "0x133A01C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE0210", Offset = "0xBE0210")]
			get
			{
				return default(Reactive<bool>);
			}
		}

		[Token(Token = "0x17000363")]
		public Reactive<bool> IsLoading
		{
			[Token(Token = "0x60012DD")]
			[Address(RVA = "0x133A024", Offset = "0x133A024", VA = "0x133A024")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE0220", Offset = "0xBE0220")]
			get
			{
				return default(Reactive<bool>);
			}
		}

		[Token(Token = "0x17000364")]
		public Reactive<EntitledPlayerClass> SelectedClass
		{
			[Token(Token = "0x60012DE")]
			[Address(RVA = "0x133A02C", Offset = "0x133A02C", VA = "0x133A02C")]
			get
			{
				return default(Reactive<EntitledPlayerClass>);
			}
		}

		[Token(Token = "0x17000365")]
		public Reactive<LocalizedString> SelectedClassTitle
		{
			[Token(Token = "0x60012DF")]
			[Address(RVA = "0x133A080", Offset = "0x133A080", VA = "0x133A080")]
			get
			{
				return default(Reactive<LocalizedString>);
			}
		}

		[Token(Token = "0x17000366")]
		public Reactive<LocalizedString> SelectedClassName
		{
			[Token(Token = "0x60012E0")]
			[Address(RVA = "0x133A0F0", Offset = "0x133A0F0", VA = "0x133A0F0")]
			get
			{
				return default(Reactive<LocalizedString>);
			}
		}

		[Token(Token = "0x17000367")]
		public Reactive<LocalizedString> SelectedClassDescription
		{
			[Token(Token = "0x60012E1")]
			[Address(RVA = "0x133A160", Offset = "0x133A160", VA = "0x133A160")]
			get
			{
				return default(Reactive<LocalizedString>);
			}
		}

		[Token(Token = "0x17000368")]
		public Reactive<string> SelectClassHealth
		{
			[Token(Token = "0x60012E2")]
			[Address(RVA = "0x133A1D0", Offset = "0x133A1D0", VA = "0x133A1D0")]
			get
			{
				return default(Reactive<string>);
			}
		}

		[Token(Token = "0x17000369")]
		public Reactive<IList<object>> SelectClassHeightArguments
		{
			[Token(Token = "0x60012E3")]
			[Address(RVA = "0x133A31C", Offset = "0x133A31C", VA = "0x133A31C")]
			get
			{
				return default(Reactive<IList<object>>);
			}
		}

		[Token(Token = "0x1700036A")]
		public Reactive<ClassType> SelectedClassType
		{
			[Token(Token = "0x60012E4")]
			[Address(RVA = "0x133A38C", Offset = "0x133A38C", VA = "0x133A38C")]
			get
			{
				return default(Reactive<ClassType>);
			}
		}

		[Token(Token = "0x1700036B")]
		public int ClassesChanged
		{
			[Token(Token = "0x60012E5")]
			[Address(RVA = "0x133A4D8", Offset = "0x133A4D8", VA = "0x133A4D8")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700036C")]
		public int SpellChanges
		{
			[Token(Token = "0x60012E6")]
			[Address(RVA = "0x133A524", Offset = "0x133A524", VA = "0x133A524")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE0230", Offset = "0xBE0230")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60012E7")]
			[Address(RVA = "0x133A52C", Offset = "0x133A52C", VA = "0x133A52C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE0240", Offset = "0xBE0240")]
			private set
			{
			}
		}

		[Token(Token = "0x60012DB")]
		[Address(RVA = "0x1339D1C", Offset = "0x1339D1C", VA = "0x1339D1C")]
		public CharacterBuilder()
		{
		}

		[Token(Token = "0x60012E8")]
		[Address(RVA = "0x133A534", Offset = "0x133A534", VA = "0x133A534")]
		private void Start()
		{
		}

		[Token(Token = "0x60012E9")]
		[Address(RVA = "0x133A8D0", Offset = "0x133A8D0", VA = "0x133A8D0")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60012EA")]
		[Address(RVA = "0x133A8DC", Offset = "0x133A8DC", VA = "0x133A8DC")]
		public void ClearSelectedClass()
		{
		}

		[Token(Token = "0x60012EB")]
		[Address(RVA = "0x133A8E4", Offset = "0x133A8E4", VA = "0x133A8E4")]
		public void SetSelectedClass(EntitledPlayerClass newClass)
		{
		}

		[Token(Token = "0x60012EC")]
		[Address(RVA = "0x133AB78", Offset = "0x133AB78", VA = "0x133AB78")]
		private void ConfigureMenu((IReadOnlyList<EntitledPlayerClass>, QuantumGame) valueTuple)
		{
		}

		[Token(Token = "0x60012ED")]
		[Address(RVA = "0x133B004", Offset = "0x133B004", VA = "0x133B004")]
		private void OnPlayerModifiedLoadout(EventCharacterModified callback)
		{
		}

		[Token(Token = "0x60012EE")]
		[Address(RVA = "0x133B308", Offset = "0x133B308", VA = "0x133B308")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE0250", Offset = "0xBE0250")]
		private bool <OnPlayerModifiedLoadout>b__42_0(EntitledPlayerClass x)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20005BB")]
	public class ClassLoadoutButton : MonoBehaviour
	{
		[Token(Token = "0x400116B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private PlayerClassConfigurationAsset playerClassConfiguration;

		[Token(Token = "0x400116C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private IconType iconType;

		[Token(Token = "0x400116D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject lockedGraphics;

		[Token(Token = "0x400116E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly ReactiveSource<Sprite> _classIcon;

		[Token(Token = "0x400116F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private readonly ReactiveTransaction _dataTransaction;

		[Token(Token = "0x4001170")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private readonly ReactiveSource<bool> _playerIsEntitled;

		[Token(Token = "0x4001171")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private CharacterBuilder _characterBuilder;

		[Token(Token = "0x4001172")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private EntitledPlayerClass _class;

		[Token(Token = "0x4001173")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD59C8", Offset = "0xBD59C8")]
		private readonly Reactive<Sprite> <ClassIcon>k__BackingField;

		[Token(Token = "0x4001174")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD59D8", Offset = "0xBD59D8")]
		private readonly Reactive<bool> <PlayerIsEntitled>k__BackingField;

		[Token(Token = "0x1700036D")]
		public AssetGuid ClassGuid
		{
			[Token(Token = "0x60012F7")]
			[Address(RVA = "0x1161B3C", Offset = "0x1161B3C", VA = "0x1161B3C")]
			get
			{
				return default(AssetGuid);
			}
		}

		[Token(Token = "0x1700036E")]
		public Reactive<Sprite> ClassIcon
		{
			[Token(Token = "0x60012F9")]
			[Address(RVA = "0x1161D70", Offset = "0x1161D70", VA = "0x1161D70")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE0260", Offset = "0xBE0260")]
			get
			{
				return default(Reactive<Sprite>);
			}
		}

		[Token(Token = "0x1700036F")]
		public Reactive<bool> PlayerIsEntitled
		{
			[Token(Token = "0x60012FA")]
			[Address(RVA = "0x1161D78", Offset = "0x1161D78", VA = "0x1161D78")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE0270", Offset = "0xBE0270")]
			get
			{
				return default(Reactive<bool>);
			}
		}

		[Token(Token = "0x60012F8")]
		[Address(RVA = "0x1161BE0", Offset = "0x1161BE0", VA = "0x1161BE0")]
		public ClassLoadoutButton()
		{
		}

		[Token(Token = "0x60012FB")]
		[Address(RVA = "0x1161D80", Offset = "0x1161D80", VA = "0x1161D80")]
		private void Start()
		{
		}

		[Token(Token = "0x60012FC")]
		[Address(RVA = "0x1161DF0", Offset = "0x1161DF0", VA = "0x1161DF0")]
		public void UnlockButton(EntitledPlayerClass playerClass, CharacterBuilder builder)
		{
		}

		[Token(Token = "0x60012FD")]
		[Address(RVA = "0x1162020", Offset = "0x1162020", VA = "0x1162020")]
		public void SelectClass(bool isActive)
		{
		}
	}
	[Token(Token = "0x20005BC")]
	public class ShootingRangeInstructions : MonoBehaviour
	{
		[Token(Token = "0x4001175")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject root;

		[Token(Token = "0x60012FE")]
		[Address(RVA = "0x11F9374", Offset = "0x11F9374", VA = "0x11F9374")]
		private void Update()
		{
		}

		[Token(Token = "0x60012FF")]
		[Address(RVA = "0x11F94F8", Offset = "0x11F94F8", VA = "0x11F94F8")]
		public ShootingRangeInstructions()
		{
		}
	}
}
namespace Cortopia.Scripts.UI.Challenges
{
	[Token(Token = "0x20005BD")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBCA770", Offset = "0xBCA770")]
	public class ChallengeInfo : ScriptableObject
	{
		[Token(Token = "0x4001176")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string challengeID;

		[Token(Token = "0x4001177")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocalizedString title;

		[Token(Token = "0x4001178")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public LocalizedString description;

		[Token(Token = "0x4001179")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public StringDescriptionArgument[] challengeDescriptionArguments;

		[Token(Token = "0x400117A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public LocalizedString rewardTitle;

		[Token(Token = "0x400117B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Sprite icon;

		[Token(Token = "0x400117C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Color iconColor;

		[Token(Token = "0x400117D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public string season;

		[Token(Token = "0x400117E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float order;

		[Token(Token = "0x400117F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBD59F8", Offset = "0xBD59F8")]
		public ChallengeArchetype archetype;

		[Token(Token = "0x4001180")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public List<string> archetypeParameters;

		[Token(Token = "0x4001181")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public string rewardID;

		[Token(Token = "0x4001182")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xBD5A30", Offset = "0xBD5A30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBD5A30", Offset = "0xBD5A30")]
		public int xpRequirement;

		[Token(Token = "0x4001183")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public string requiredChallenge;

		[Token(Token = "0x6001300")]
		[Address(RVA = "0x1335F3C", Offset = "0x1335F3C", VA = "0x1335F3C")]
		public LocalizedString GetFormattedDescription()
		{
			return null;
		}

		[Token(Token = "0x6001301")]
		[Address(RVA = "0x1336234", Offset = "0x1336234", VA = "0x1336234")]
		public ChallengeInfo()
		{
		}
	}
	[Token(Token = "0x20005BE")]
	public class ChallengeItemUI : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20005BF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCA7C0", Offset = "0xBCA7C0")]
		private sealed class <>c
		{
			[Token(Token = "0x4001186")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001187")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<ChallengeClass, LocalizedString> <>9__2_0;

			[Token(Token = "0x4001188")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<ChallengeClass, LocalizedString> <>9__4_0;

			[Token(Token = "0x4001189")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Func<(int, int), bool> <>9__6_0;

			[Token(Token = "0x400118A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static Func<ChallengeClass, LocalizedString> <>9__8_0;

			[Token(Token = "0x400118B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public static Func<ChallengeClass, int> <>9__10_0;

			[Token(Token = "0x400118C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public static Func<ChallengeClass, Reactive<int>> <>9__12_0;

			[Token(Token = "0x400118D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public static Func<ChallengeClass, Sprite> <>9__14_0;

			[Token(Token = "0x400118E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public static Func<ChallengeClass, Color> <>9__16_0;

			[Token(Token = "0x400118F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public static Func<(int, int), float> <>9__18_0;

			[Token(Token = "0x4001190")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public static Func<(int, int), string> <>9__20_0;

			[Token(Token = "0x4001191")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public static Func<ChallengeClass, float> <>9__22_0;

			[Token(Token = "0x4001192")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public static Func<ChallengeClass, bool> <>9__24_0;

			[Token(Token = "0x6001313")]
			[Address(RVA = "0x1023A0C", Offset = "0x1023A0C", VA = "0x1023A0C")]
			public <>c()
			{
			}

			[Token(Token = "0x6001314")]
			[Address(RVA = "0x1023A14", Offset = "0x1023A14", VA = "0x1023A14")]
			internal LocalizedString <get_Title>b__2_0(ChallengeClass x)
			{
				return null;
			}

			[Token(Token = "0x6001315")]
			[Address(RVA = "0x1023A3C", Offset = "0x1023A3C", VA = "0x1023A3C")]
			internal LocalizedString <get_Description>b__4_0(ChallengeClass x)
			{
				return null;
			}

			[Token(Token = "0x6001316")]
			[Address(RVA = "0x1023AB8", Offset = "0x1023AB8", VA = "0x1023AB8")]
			internal bool <get_Completed>b__6_0((int, int) x)
			{
				return default(bool);
			}

			[Token(Token = "0x6001317")]
			[Address(RVA = "0x1023AC8", Offset = "0x1023AC8", VA = "0x1023AC8")]
			internal LocalizedString <get_RewardTitle>b__8_0(ChallengeClass x)
			{
				return null;
			}

			[Token(Token = "0x6001318")]
			[Address(RVA = "0x1023AF0", Offset = "0x1023AF0", VA = "0x1023AF0")]
			internal int <get_GoalProgress>b__10_0(ChallengeClass x)
			{
				return default(int);
			}

			[Token(Token = "0x6001319")]
			[Address(RVA = "0x1023B04", Offset = "0x1023B04", VA = "0x1023B04")]
			internal Reactive<int> <get_Progress>b__12_0(ChallengeClass x)
			{
				return default(Reactive<int>);
			}

			[Token(Token = "0x600131A")]
			[Address(RVA = "0x1023B68", Offset = "0x1023B68", VA = "0x1023B68")]
			internal Sprite <get_Icon>b__14_0(ChallengeClass x)
			{
				return null;
			}

			[Token(Token = "0x600131B")]
			[Address(RVA = "0x1023B90", Offset = "0x1023B90", VA = "0x1023B90")]
			internal Color <get_IconColor>b__16_0(ChallengeClass x)
			{
				return default(Color);
			}

			[Token(Token = "0x600131C")]
			[Address(RVA = "0x1023BB8", Offset = "0x1023BB8", VA = "0x1023BB8")]
			internal float <get_RelativeProgress>b__18_0((int, int) x)
			{
				return default(float);
			}

			[Token(Token = "0x600131D")]
			[Address(RVA = "0x1023BCC", Offset = "0x1023BCC", VA = "0x1023BCC")]
			internal string <get_RelativeProgressMessage>b__20_0((int, int) x)
			{
				return null;
			}

			[Token(Token = "0x600131E")]
			[Address(RVA = "0x1023CAC", Offset = "0x1023CAC", VA = "0x1023CAC")]
			internal float <get_Order>b__22_0(ChallengeClass x)
			{
				return default(float);
			}

			[Token(Token = "0x600131F")]
			[Address(RVA = "0x1023CD4", Offset = "0x1023CD4", VA = "0x1023CD4")]
			internal bool <get_IsTitleReward>b__24_0(ChallengeClass x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4001184")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly ReactiveSource<ChallengeClass> _challenge;

		[Token(Token = "0x4001185")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private ReactiveSubscription _subscription;

		[Token(Token = "0x17000370")]
		public Reactive<LocalizedString> Title
		{
			[Token(Token = "0x6001302")]
			[Address(RVA = "0x1336244", Offset = "0x1336244", VA = "0x1336244")]
			get
			{
				return default(Reactive<LocalizedString>);
			}
		}

		[Token(Token = "0x17000371")]
		public Reactive<LocalizedString> Description
		{
			[Token(Token = "0x6001303")]
			[Address(RVA = "0x1336390", Offset = "0x1336390", VA = "0x1336390")]
			get
			{
				return default(Reactive<LocalizedString>);
			}
		}

		[Token(Token = "0x17000372")]
		public Reactive<bool> Completed
		{
			[Token(Token = "0x6001304")]
			[Address(RVA = "0x13364DC", Offset = "0x13364DC", VA = "0x13364DC")]
			get
			{
				return default(Reactive<bool>);
			}
		}

		[Token(Token = "0x17000373")]
		public Reactive<LocalizedString> RewardTitle
		{
			[Token(Token = "0x6001305")]
			[Address(RVA = "0x1336908", Offset = "0x1336908", VA = "0x1336908")]
			get
			{
				return default(Reactive<LocalizedString>);
			}
		}

		[Token(Token = "0x17000374")]
		public Reactive<int> GoalProgress
		{
			[Token(Token = "0x6001306")]
			[Address(RVA = "0x13367BC", Offset = "0x13367BC", VA = "0x13367BC")]
			get
			{
				return default(Reactive<int>);
			}
		}

		[Token(Token = "0x17000375")]
		public Reactive<int> Progress
		{
			[Token(Token = "0x6001307")]
			[Address(RVA = "0x1336654", Offset = "0x1336654", VA = "0x1336654")]
			get
			{
				return default(Reactive<int>);
			}
		}

		[Token(Token = "0x17000376")]
		public Reactive<Sprite> Icon
		{
			[Token(Token = "0x6001308")]
			[Address(RVA = "0x1336A54", Offset = "0x1336A54", VA = "0x1336A54")]
			get
			{
				return default(Reactive<Sprite>);
			}
		}

		[Token(Token = "0x17000377")]
		public Reactive<Color> IconColor
		{
			[Token(Token = "0x6001309")]
			[Address(RVA = "0x1336BA0", Offset = "0x1336BA0", VA = "0x1336BA0")]
			get
			{
				return default(Reactive<Color>);
			}
		}

		[Token(Token = "0x17000378")]
		public Reactive<float> RelativeProgress
		{
			[Token(Token = "0x600130A")]
			[Address(RVA = "0x1336CEC", Offset = "0x1336CEC", VA = "0x1336CEC")]
			get
			{
				return default(Reactive<float>);
			}
		}

		[Token(Token = "0x17000379")]
		public Reactive<string> RelativeProgressMessage
		{
			[Token(Token = "0x600130B")]
			[Address(RVA = "0x1336E48", Offset = "0x1336E48", VA = "0x1336E48")]
			get
			{
				return default(Reactive<string>);
			}
		}

		[Token(Token = "0x1700037A")]
		public Reactive<float> Order
		{
			[Token(Token = "0x600130C")]
			[Address(RVA = "0x1336FA4", Offset = "0x1336FA4", VA = "0x1336FA4")]
			get
			{
				return default(Reactive<float>);
			}
		}

		[Token(Token = "0x1700037B")]
		public Reactive<bool> IsTitleReward
		{
			[Token(Token = "0x600130D")]
			[Address(RVA = "0x13370F0", Offset = "0x13370F0", VA = "0x13370F0")]
			get
			{
				return default(Reactive<bool>);
			}
		}

		[Token(Token = "0x600130E")]
		[Address(RVA = "0x133723C", Offset = "0x133723C", VA = "0x133723C")]
		public void Setup(ChallengeClass newChallenge)
		{
		}

		[Token(Token = "0x600130F")]
		[Address(RVA = "0x133733C", Offset = "0x133733C", VA = "0x133733C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001310")]
		[Address(RVA = "0x1337348", Offset = "0x1337348", VA = "0x1337348")]
		public ChallengeItemUI()
		{
		}

		[Token(Token = "0x6001311")]
		[Address(RVA = "0x13373D4", Offset = "0x13373D4", VA = "0x13373D4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE0280", Offset = "0xBE0280")]
		private void <Setup>b__26_0(bool x)
		{
		}
	}
	[Token(Token = "0x20005C0")]
	public class ChallengeMenuUI : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20005C1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCA7D0", Offset = "0xBCA7D0")]
		private sealed class <>c
		{
			[Token(Token = "0x4001199")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x400119A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<IUser, Reactive<bool>> <>9__6_0;

			[Token(Token = "0x400119B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<ChallengeClass, Reactive<bool>> <>9__8_1;

			[Token(Token = "0x400119C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Func<bool, bool> <>9__8_5;

			[Token(Token = "0x400119D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static Func<ArraySnapshot<bool>, int> <>9__8_2;

			[Token(Token = "0x400119E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public static Func<ChallengeClass, Reactive<bool>> <>9__8_3;

			[Token(Token = "0x400119F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public static Func<bool, bool> <>9__8_6;

			[Token(Token = "0x40011A0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public static Func<ArraySnapshot<bool>, int> <>9__8_4;

			[Token(Token = "0x6001326")]
			[Address(RVA = "0x1023D50", Offset = "0x1023D50", VA = "0x1023D50")]
			public <>c()
			{
			}

			[Token(Token = "0x6001327")]
			[Address(RVA = "0x1023D58", Offset = "0x1023D58", VA = "0x1023D58")]
			internal Reactive<bool> <Start>b__6_0(IUser x)
			{
				return default(Reactive<bool>);
			}

			[Token(Token = "0x6001328")]
			[Address(RVA = "0x1023E28", Offset = "0x1023E28", VA = "0x1023E28")]
			internal Reactive<bool> <InstantiateChallenges>b__8_1(ChallengeClass challenge)
			{
				return default(Reactive<bool>);
			}

			[Token(Token = "0x6001329")]
			[Address(RVA = "0x1023E44", Offset = "0x1023E44", VA = "0x1023E44")]
			internal int <InstantiateChallenges>b__8_2(ArraySnapshot<bool> snapshot)
			{
				return default(int);
			}

			[Token(Token = "0x600132A")]
			[Address(RVA = "0x1023F9C", Offset = "0x1023F9C", VA = "0x1023F9C")]
			internal bool <InstantiateChallenges>b__8_5(bool x)
			{
				return default(bool);
			}

			[Token(Token = "0x600132B")]
			[Address(RVA = "0x1023FA4", Offset = "0x1023FA4", VA = "0x1023FA4")]
			internal Reactive<bool> <InstantiateChallenges>b__8_3(ChallengeClass challenge)
			{
				return default(Reactive<bool>);
			}

			[Token(Token = "0x600132C")]
			[Address(RVA = "0x1023FC0", Offset = "0x1023FC0", VA = "0x1023FC0")]
			internal int <InstantiateChallenges>b__8_4(ArraySnapshot<bool> snapshot)
			{
				return default(int);
			}

			[Token(Token = "0x600132D")]
			[Address(RVA = "0x1024118", Offset = "0x1024118", VA = "0x1024118")]
			internal bool <InstantiateChallenges>b__8_6(bool x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20005C2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCA7E0", Offset = "0xBCA7E0")]
		private sealed class <>c__DisplayClass8_0
		{
			[Token(Token = "0x40011A1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string season;

			[Token(Token = "0x600132E")]
			[Address(RVA = "0x1024120", Offset = "0x1024120", VA = "0x1024120")]
			public <>c__DisplayClass8_0()
			{
			}

			[Token(Token = "0x600132F")]
			[Address(RVA = "0x1024128", Offset = "0x1024128", VA = "0x1024128")]
			internal bool <InstantiateChallenges>b__0(SeasonDisplayNames x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4001193")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform challengeListParent;

		[Token(Token = "0x4001194")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private ChallengeItemUI challengeItemUIPrefab;

		[Token(Token = "0x4001195")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private CollapsableMenuUI collapsibleMenuPrefab;

		[Token(Token = "0x4001196")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly Dictionary<string, CollapsableMenuUI> _seasons;

		[Token(Token = "0x4001197")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private readonly Dictionary<CollapsableMenuUI, List<ChallengeClass>> _challengeSeasons;

		[Token(Token = "0x4001198")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private readonly List<ReactiveSubscription> _subscriptions;

		[Token(Token = "0x6001320")]
		[Address(RVA = "0x1337408", Offset = "0x1337408", VA = "0x1337408")]
		private void Start()
		{
		}

		[Token(Token = "0x6001321")]
		[Address(RVA = "0x133765C", Offset = "0x133765C", VA = "0x133765C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001322")]
		[Address(RVA = "0x1337784", Offset = "0x1337784", VA = "0x1337784")]
		private void InstantiateChallenges()
		{
		}

		[Token(Token = "0x6001323")]
		[Address(RVA = "0x133830C", Offset = "0x133830C", VA = "0x133830C")]
		public ChallengeMenuUI()
		{
		}

		[Token(Token = "0x6001324")]
		[Address(RVA = "0x1338404", Offset = "0x1338404", VA = "0x1338404")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE0290", Offset = "0xBE0290")]
		private void <Start>b__6_1(bool x)
		{
		}
	}
}
namespace Cortopia.Scripts.Tutorial
{
	[Token(Token = "0x20005C3")]
	public class MiniGameExitMenu : MonoBehaviour
	{
		[Token(Token = "0x40011A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private EntityView tileEntityView;

		[Token(Token = "0x40011A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private int miniGameID;

		[Token(Token = "0x40011A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBD5AE0", Offset = "0xBD5AE0")]
		private GameObject miniGameLabel;

		[Token(Token = "0x40011A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject instructionMenu;

		[Token(Token = "0x40011A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private GameObject waypointVisuals;

		[Token(Token = "0x40011A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBD5B4C", Offset = "0xBD5B4C")]
		private StudioEventEmitter introductionVO;

		[Token(Token = "0x40011A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBD5B98", Offset = "0xBD5B98")]
		[SerializeField]
		private BoundValue<int> miniGameUnlocked;

		[Token(Token = "0x40011A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private BoundValue<int> miniGameCurrent;

		[Token(Token = "0x40011AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool _introductionVOPlayedOnce;

		[Token(Token = "0x6001330")]
		[Address(RVA = "0x10172EC", Offset = "0x10172EC", VA = "0x10172EC")]
		private void Update()
		{
		}

		[Token(Token = "0x6001331")]
		[Address(RVA = "0x1017604", Offset = "0x1017604", VA = "0x1017604")]
		public void QuitToMenu()
		{
		}

		[Token(Token = "0x6001332")]
		[Address(RVA = "0x1017674", Offset = "0x1017674", VA = "0x1017674")]
		public MiniGameExitMenu()
		{
		}
	}
	[Token(Token = "0x20005C4")]
	public class MiniGameMenu : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20005C5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCA7F0", Offset = "0xBCA7F0")]
		private sealed class <>c
		{
			[Token(Token = "0x40011C3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40011C4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<int, bool> <>9__27_0;

			[Token(Token = "0x6001350")]
			[Address(RVA = "0x11DB74C", Offset = "0x11DB74C", VA = "0x11DB74C")]
			public <>c()
			{
			}

			[Token(Token = "0x6001351")]
			[Address(RVA = "0x11DB754", Offset = "0x11DB754", VA = "0x11DB754")]
			internal bool <get_CanRetry>b__27_0(int x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x40011AB")]
		private const string TutorialHFSMCurrentMiniGame = "CurrentMiniGame";

		[Token(Token = "0x40011AC")]
		private const string TutorialHFSMMiniGamesUnlocked = "MinigameUnlocked";

		[Token(Token = "0x40011AD")]
		private const string TutorialHFSMWinCount = "MinigameWinCount";

		[Token(Token = "0x40011AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private EntityView tileEntityView;

		[Token(Token = "0x40011AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBD5C04", Offset = "0xBD5C04")]
		[SerializeField]
		private int miniGameID;

		[Token(Token = "0x40011B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private int minAttemptsBeforeSkip;

		[Token(Token = "0x40011B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBD5C60", Offset = "0xBD5C60")]
		[SerializeField]
		private EntityView tutorialHFSMEntityView;

		[Token(Token = "0x40011B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBD5CAC", Offset = "0xBD5CAC")]
		[SerializeField]
		private StudioEventEmitter introductionVO;

		[Token(Token = "0x40011B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private StudioEventEmitter startVO;

		[Token(Token = "0x40011B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private StudioEventEmitter winVO;

		[Token(Token = "0x40011B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private StudioEventEmitter failVO;

		[Token(Token = "0x40011B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private StudioEventEmitter skipVO;

		[Token(Token = "0x40011B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private StudioEventEmitter[] progressVOSet;

		[Token(Token = "0x40011B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private StudioEventEmitter[] hintVOSet;

		[Token(Token = "0x40011B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBD5D58", Offset = "0xBD5D58")]
		private BoundValue<int> miniGameUnlocked;

		[Token(Token = "0x40011BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private BoundValue<int> miniGameCurrent;

		[Token(Token = "0x40011BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private BoundValue<int> miniGameWins;

		[Token(Token = "0x40011BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private BoundValue<int> miniGameFails;

		[Token(Token = "0x40011BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private BoundValue<int> miniGameProgress;

		[Token(Token = "0x40011BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private BoundValue<int> miniGameHint;

		[Token(Token = "0x40011BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private readonly ReactiveSource<bool> _hasPlayerSource;

		[Token(Token = "0x40011C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private bool _introductionVOPlayedOnce;

		[Token(Token = "0x40011C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private ReactiveSubscription _subscription;

		[Token(Token = "0x40011C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Dictionary<string, object> _telemetryParams;

		[Token(Token = "0x1700037C")]
		public Reactive<bool> HasPlayer
		{
			[Token(Token = "0x6001333")]
			[Address(RVA = "0x101767C", Offset = "0x101767C", VA = "0x101767C")]
			get
			{
				return default(Reactive<bool>);
			}
		}

		[Token(Token = "0x1700037D")]
		public Reactive<bool> CanRetry
		{
			[Token(Token = "0x6001334")]
			[Address(RVA = "0x10176D0", Offset = "0x10176D0", VA = "0x10176D0")]
			get
			{
				return default(Reactive<bool>);
			}
		}

		[Token(Token = "0x1700037E")]
		public Reactive<bool> CanSkip
		{
			[Token(Token = "0x6001335")]
			[Address(RVA = "0x101781C", Offset = "0x101781C", VA = "0x101781C")]
			get
			{
				return default(Reactive<bool>);
			}
		}

		[Token(Token = "0x1700037F")]
		public Reactive<bool> IsCompleted
		{
			[Token(Token = "0x6001336")]
			[Address(RVA = "0x10178FC", Offset = "0x10178FC", VA = "0x10178FC")]
			get
			{
				return default(Reactive<bool>);
			}
		}

		[Token(Token = "0x17000380")]
		public Reactive<bool> IsNextGame
		{
			[Token(Token = "0x6001337")]
			[Address(RVA = "0x10179DC", Offset = "0x10179DC", VA = "0x10179DC")]
			get
			{
				return default(Reactive<bool>);
			}
		}

		[Token(Token = "0x17000381")]
		public Reactive<bool> IsActive
		{
			[Token(Token = "0x6001338")]
			[Address(RVA = "0x1017AF8", Offset = "0x1017AF8", VA = "0x1017AF8")]
			get
			{
				return default(Reactive<bool>);
			}
		}

		[Token(Token = "0x17000382")]
		public Reactive<bool> IsVisible
		{
			[Token(Token = "0x6001339")]
			[Address(RVA = "0x1017BD8", Offset = "0x1017BD8", VA = "0x1017BD8")]
			get
			{
				return default(Reactive<bool>);
			}
		}

		[Token(Token = "0x17000383")]
		public int MiniGameID
		{
			[Token(Token = "0x600133A")]
			[Address(RVA = "0x1017CB8", Offset = "0x1017CB8", VA = "0x1017CB8")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x600133B")]
		[Address(RVA = "0x1017CC0", Offset = "0x1017CC0", VA = "0x1017CC0")]
		private void Awake()
		{
		}

		[Token(Token = "0x600133C")]
		[Address(RVA = "0x1017DA4", Offset = "0x1017DA4", VA = "0x1017DA4")]
		private void Update()
		{
		}

		[Token(Token = "0x600133D")]
		[Address(RVA = "0x101808C", Offset = "0x101808C", VA = "0x101808C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600133E")]
		[Address(RVA = "0x1018358", Offset = "0x1018358", VA = "0x1018358")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600133F")]
		[Address(RVA = "0x1018364", Offset = "0x1018364", VA = "0x1018364")]
		private void OnMiniGameHintChanged(int newHint)
		{
		}

		[Token(Token = "0x6001340")]
		[Address(RVA = "0x1018478", Offset = "0x1018478", VA = "0x1018478")]
		private void OnMiniGameProgressChange(int newProgress)
		{
		}

		[Token(Token = "0x6001341")]
		[Address(RVA = "0x101858C", Offset = "0x101858C", VA = "0x101858C")]
		private void OnCurrentMiniGameChanged(int currentMiniGame)
		{
		}

		[Token(Token = "0x6001342")]
		[Address(RVA = "0x1018750", Offset = "0x1018750", VA = "0x1018750")]
		private void OnMiniGameWin(int winCount)
		{
		}

		[Token(Token = "0x6001343")]
		[Address(RVA = "0x1018804", Offset = "0x1018804", VA = "0x1018804")]
		private void TelemetryEndEvent(bool success)
		{
		}

		[Token(Token = "0x6001344")]
		[Address(RVA = "0x10189F4", Offset = "0x10189F4", VA = "0x10189F4")]
		private void OnMiniGameFailed(int failCount)
		{
		}

		[Token(Token = "0x6001345")]
		[Address(RVA = "0x1018AA8", Offset = "0x1018AA8", VA = "0x1018AA8")]
		public void MiniGameStart()
		{
		}

		[Token(Token = "0x6001346")]
		[Address(RVA = "0x1018D28", Offset = "0x1018D28", VA = "0x1018D28")]
		public void MiniGameSkip()
		{
		}

		[Token(Token = "0x6001347")]
		[Address(RVA = "0x1019074", Offset = "0x1019074", VA = "0x1019074")]
		public void MiniGameForceComplete()
		{
		}

		[Token(Token = "0x6001348")]
		[Address(RVA = "0x1019388", Offset = "0x1019388", VA = "0x1019388")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xBE02A0", Offset = "0xBE02A0")]
		private void MoveToEntity()
		{
		}

		[Token(Token = "0x6001349")]
		[Address(RVA = "0x10193E0", Offset = "0x10193E0", VA = "0x10193E0")]
		public MiniGameMenu()
		{
		}

		[Token(Token = "0x600134A")]
		[Address(RVA = "0x101946C", Offset = "0x101946C", VA = "0x101946C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE02D8", Offset = "0xBE02D8")]
		private bool <get_CanSkip>b__29_0(int x)
		{
			return default(bool);
		}

		[Token(Token = "0x600134B")]
		[Address(RVA = "0x101947C", Offset = "0x101947C", VA = "0x101947C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE02E8", Offset = "0xBE02E8")]
		private bool <get_IsCompleted>b__31_0(int x)
		{
			return default(bool);
		}

		[Token(Token = "0x600134C")]
		[Address(RVA = "0x101948C", Offset = "0x101948C", VA = "0x101948C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE02F8", Offset = "0xBE02F8")]
		private bool <get_IsNextGame>b__33_0((int, int) x)
		{
			return default(bool);
		}

		[Token(Token = "0x600134D")]
		[Address(RVA = "0x10194AC", Offset = "0x10194AC", VA = "0x10194AC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE0308", Offset = "0xBE0308")]
		private bool <get_IsActive>b__35_0(int x)
		{
			return default(bool);
		}

		[Token(Token = "0x600134E")]
		[Address(RVA = "0x10194BC", Offset = "0x10194BC", VA = "0x10194BC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE0318", Offset = "0xBE0318")]
		private bool <get_IsVisible>b__37_0(int x)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20005C6")]
	public class MiniGameTargetDestination : MonoBehaviour
	{
		[Token(Token = "0x40011C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private EntityView destinationTileEntityView;

		[Token(Token = "0x40011C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBD5E04", Offset = "0xBD5E04")]
		[SerializeField]
		private bool disableWaypointWhenAtDestination;

		[Token(Token = "0x40011C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		[SerializeField]
		private bool disableInstructionsWhenNotAtDestination;

		[Token(Token = "0x40011C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBD5E60", Offset = "0xBD5E60")]
		private MiniGameMenu miniGameMenu;

		[Token(Token = "0x40011C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject destinationWaypoint;

		[Token(Token = "0x40011CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private GameObject destinationInstructions;

		[Token(Token = "0x40011CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBD5ECC", Offset = "0xBD5ECC")]
		[SerializeField]
		private BoundValue<int> miniGameCurrent;

		[Token(Token = "0x6001352")]
		[Address(RVA = "0x10194DC", Offset = "0x10194DC", VA = "0x10194DC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001353")]
		[Address(RVA = "0x1019520", Offset = "0x1019520", VA = "0x1019520")]
		private void Update()
		{
		}

		[Token(Token = "0x6001354")]
		[Address(RVA = "0x1019714", Offset = "0x1019714", VA = "0x1019714")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xBE0328", Offset = "0xBE0328")]
		private void MoveToEntity()
		{
		}

		[Token(Token = "0x6001355")]
		[Address(RVA = "0x101976C", Offset = "0x101976C", VA = "0x101976C")]
		public MiniGameTargetDestination()
		{
		}
	}
}
namespace Cortopia.Scripts.Telemetry
{
	[Token(Token = "0x20005C7")]
	public static class GeneralPlayerTelemetry
	{
		[Token(Token = "0x6001356")]
		[Address(RVA = "0xFA733C", Offset = "0xFA733C", VA = "0xFA733C")]
		public static void WriteParameters(Dictionary<string, object> parameters)
		{
		}
	}
	[Token(Token = "0x20005C8")]
	public class MainMenuTelemetry : MonoBehaviour
	{
		[Token(Token = "0x40011CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private CharacterBuilder characterBuilder;

		[Token(Token = "0x40011CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Dictionary<string, object> _parameters;

		[Token(Token = "0x6001357")]
		[Address(RVA = "0xF8BC70", Offset = "0xF8BC70", VA = "0xF8BC70")]
		private void Start()
		{
		}

		[Token(Token = "0x6001358")]
		[Address(RVA = "0xF8BD9C", Offset = "0xF8BD9C", VA = "0xF8BD9C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001359")]
		[Address(RVA = "0xF8BE88", Offset = "0xF8BE88", VA = "0xF8BE88")]
		private void SceneLoaderOnLevelLoadStarted(object sender, [AttributeAttribute(Name = "TupleElementNamesAttribute", RVA = "0xBE4270", Offset = "0xBE4270")] (string, AssetRefGameModeSetup, QuantumGame) valueTuple)
		{
		}

		[Token(Token = "0x600135A")]
		[Address(RVA = "0xF8C5EC", Offset = "0xF8C5EC", VA = "0xF8C5EC")]
		public void StartMatchMaking()
		{
		}

		[Token(Token = "0x600135B")]
		[Address(RVA = "0xF8C760", Offset = "0xF8C760", VA = "0xF8C760")]
		public void StartCustomGame()
		{
		}

		[Token(Token = "0x600135C")]
		[Address(RVA = "0xF8C8D4", Offset = "0xF8C8D4", VA = "0xF8C8D4")]
		public void PlayWithBots()
		{
		}

		[Token(Token = "0x600135D")]
		[Address(RVA = "0xF8CA18", Offset = "0xF8CA18", VA = "0xF8CA18")]
		public void LeaveCustomGame()
		{
		}

		[Token(Token = "0x600135E")]
		[Address(RVA = "0xF8CB5C", Offset = "0xF8CB5C", VA = "0xF8CB5C")]
		public void CancelMatchMaking()
		{
		}

		[Token(Token = "0x600135F")]
		[Address(RVA = "0xF8CCA0", Offset = "0xF8CCA0", VA = "0xF8CCA0")]
		public void CancelMatchMakingAndLeave()
		{
		}

		[Token(Token = "0x6001360")]
		[Address(RVA = "0xF8CDE4", Offset = "0xF8CDE4", VA = "0xF8CDE4")]
		public void ShowCredits()
		{
		}

		[Token(Token = "0x6001361")]
		[Address(RVA = "0xF8CF28", Offset = "0xF8CF28", VA = "0xF8CF28")]
		public void PlayStory()
		{
		}

		[Token(Token = "0x6001362")]
		[Address(RVA = "0xF8D06C", Offset = "0xF8D06C", VA = "0xF8D06C")]
		public void StopStory()
		{
		}

		[Token(Token = "0x6001363")]
		[Address(RVA = "0xF8D1B0", Offset = "0xF8D1B0", VA = "0xF8D1B0")]
		public MainMenuTelemetry()
		{
		}
	}
	[Token(Token = "0x20005C9")]
	public class MatchTelemetry : MonoBehaviour
	{
		[Token(Token = "0x40011CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Dictionary<string, object> _parameters;

		[Token(Token = "0x40011CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<ClassCategory> _teamComposition;

		[Token(Token = "0x6001364")]
		[Address(RVA = "0x1014300", Offset = "0x1014300", VA = "0x1014300")]
		private void Start()
		{
		}

		[Token(Token = "0x6001365")]
		[Address(RVA = "0x10145B0", Offset = "0x10145B0", VA = "0x10145B0")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001366")]
		[Address(RVA = "0x101469C", Offset = "0x101469C", VA = "0x101469C")]
		private void SceneLoaderOnLevelLoadStarted(object sender, [AttributeAttribute(Name = "TupleElementNamesAttribute", RVA = "0xBE4304", Offset = "0xBE4304")] (string, AssetRefGameModeSetup, QuantumGame) e)
		{
		}

		[Token(Token = "0x6001367")]
		[Address(RVA = "0x1015A88", Offset = "0x1015A88", VA = "0x1015A88")]
		private void RoundOver(EventRoundEnd callback)
		{
		}

		[Token(Token = "0x6001368")]
		[Address(RVA = "0x1014C28", Offset = "0x1014C28", VA = "0x1014C28")]
		private bool SetMatchParameters(Frame frame, EntityRef localPlayer, out Quantum.Team playerTeam, out Match match)
		{
			return default(bool);
		}

		[Token(Token = "0x6001369")]
		[Address(RVA = "0x1016240", Offset = "0x1016240", VA = "0x1016240")]
		private void PlayerDied(EventPlayerDied callback)
		{
		}

		[Token(Token = "0x600136A")]
		[Address(RVA = "0x1015ECC", Offset = "0x1015ECC", VA = "0x1015ECC")]
		private void GatherStatistics(Frame frame, EntityRef localPlayer)
		{
		}

		[Token(Token = "0x600136B")]
		[Address(RVA = "0x1016724", Offset = "0x1016724", VA = "0x1016724")]
		public MatchTelemetry()
		{
		}
	}
	[Token(Token = "0x20005CA")]
	public static class PlayerSettingsTelemetry
	{
		[Token(Token = "0x600136C")]
		[Address(RVA = "0x111337C", Offset = "0x111337C", VA = "0x111337C")]
		public static void WriteParameters(Dictionary<string, object> parameters)
		{
		}
	}
	[Token(Token = "0x20005CB")]
	public static class TelemetryInitializer
	{
		[StructLayout(3)]
		[Token(Token = "0x20005CC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCA800", Offset = "0xBCA800")]
		private struct <InitAsync>d__6 : IAsyncStateMachine
		{
			[Token(Token = "0x40011D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40011D4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x40011D5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string userId;

			[Token(Token = "0x40011D6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x40011D7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private TaskAwaiter<List<string>> <>u__2;

			[Token(Token = "0x6001371")]
			[Address(RVA = "0x10655A8", Offset = "0x10655A8", VA = "0x10655A8", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001372")]
			[Address(RVA = "0x1065D50", Offset = "0x1065D50", VA = "0x1065D50", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x40011D0")]
		private const string PiplConsentIdentifier = "pipl";

		[Token(Token = "0x40011D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD5F28", Offset = "0xBD5F28")]
		private static string <Environment>k__BackingField;

		[Token(Token = "0x40011D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static bool HasProvidedPiplConsent;

		[Token(Token = "0x17000384")]
		public static string Environment
		{
			[Token(Token = "0x600136D")]
			[Address(RVA = "0x11548DC", Offset = "0x11548DC", VA = "0x11548DC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE0360", Offset = "0xBE0360")]
			get
			{
				return null;
			}
			[Token(Token = "0x600136E")]
			[Address(RVA = "0x1154940", Offset = "0x1154940", VA = "0x1154940")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE0370", Offset = "0xBE0370")]
			set
			{
			}
		}

		[Token(Token = "0x600136F")]
		[Address(RVA = "0x11549A8", Offset = "0x11549A8", VA = "0x11549A8")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xBE0380", Offset = "0xBE0380")]
		public static Task InitAsync(string userId)
		{
			return null;
		}
	}
	[Token(Token = "0x20005CD")]
	public static class TelemetryParameter
	{
		[Token(Token = "0x40011D8")]
		public const string LevelName = "levelName";

		[Token(Token = "0x40011D9")]
		public const string MMR = "mmr";

		[Token(Token = "0x40011DA")]
		public const string PlayerLevel = "playerLevel";

		[Token(Token = "0x40011DB")]
		public const string LevelProgression = "levelProgression";

		[Token(Token = "0x40011DC")]
		public const string GroupSize = "groupSize";

		[Token(Token = "0x40011DD")]
		public const string GameMode = "gameMode";

		[Token(Token = "0x40011DE")]
		public const string TutorialStepId = "stepId";

		[Token(Token = "0x40011DF")]
		public const string TutorialSuccess = "success";

		[Token(Token = "0x40011E0")]
		public const string Round = "round";

		[Token(Token = "0x40011E1")]
		public const string Score = "score";

		[Token(Token = "0x40011E2")]
		public const string DeathTileIndex = "deathTile";

		[Token(Token = "0x40011E3")]
		public const string KillerTileIndex = "killerTile";

		[Token(Token = "0x40011E4")]
		public const string KillerSpell = "killerSpell";

		[Token(Token = "0x40011E5")]
		public const string KillerClass = "killerClass";

		[Token(Token = "0x40011E6")]
		public const string PlayerClass = "playerClass";

		[Token(Token = "0x40011E7")]
		public const string IsAttacker = "isAttacker";

		[Token(Token = "0x40011E8")]
		public const string BombPlacedSocketIndex = "bombPlacedSocket";

		[Token(Token = "0x40011E9")]
		public const string BombStatus = "bombStatus";

		[Token(Token = "0x40011EA")]
		public const string Ping = "ping";

		[Token(Token = "0x40011EB")]
		public const string PlaySpaceLongAxis = "playSpaceLong";

		[Token(Token = "0x40011EC")]
		public const string PlaySpaceShortAxis = "playSpaceShort";

		[Token(Token = "0x40011ED")]
		public const string RoundResult = "result";

		[Token(Token = "0x40011EE")]
		public const string RoundEndReason = "reason";

		[Token(Token = "0x40011EF")]
		public const string BotCount = "bots";

		[Token(Token = "0x40011F0")]
		public const string TeamHumanCount = "teamHumans";

		[Token(Token = "0x40011F1")]
		public const string OpponentHumanCount = "opponentHumans";

		[Token(Token = "0x40011F2")]
		public const string TeamComposition = "teamComposition";

		[Token(Token = "0x40011F3")]
		public const string IsRanked = "isRanked";

		[Token(Token = "0x40011F4")]
		public const string KdRatio = "kd";

		[Token(Token = "0x40011F5")]
		public const string VoipEnabled = "voip";

		[Token(Token = "0x40011F6")]
		public const string IsMatchRep = "isMatchRep";

		[Token(Token = "0x40011F7")]
		public const string IsTeamRep = "isTeamRep";

		[Token(Token = "0x40011F8")]
		public const string HmdBatteryLevel = "hmdBattery";

		[Token(Token = "0x40011F9")]
		public const string ControllersBatteryLevel = "controllersBattery";

		[Token(Token = "0x40011FA")]
		public const string PlayerConstrained = "constrained";

		[Token(Token = "0x40011FB")]
		public const string Phase = "phase";

		[Token(Token = "0x40011FC")]
		public const string Casts = "casts";

		[Token(Token = "0x40011FD")]
		public const string SpellsTested = "spellsTested";

		[Token(Token = "0x40011FE")]
		public const string SpellChanges = "spellChanges";

		[Token(Token = "0x40011FF")]
		public const string ClassesChanged = "classesChanged";

		[Token(Token = "0x4001200")]
		public const string SettingsHUDScale = "hudScale";

		[Token(Token = "0x4001201")]
		public const string SettingsHUDDistance = "hudDistance";

		[Token(Token = "0x4001202")]
		public const string SettingsHUDHeight = "hudHeight";

		[Token(Token = "0x4001203")]
		public const string SettingsMusicVolume = "musicVol";

		[Token(Token = "0x4001204")]
		public const string SettingsEffectsVolume = "effectsVol";

		[Token(Token = "0x4001205")]
		public const string SettingsVoiceChatVolume = "voipVol";

		[Token(Token = "0x4001206")]
		public const string SettingsShowSubtitles = "showSubtitles";

		[Token(Token = "0x4001207")]
		public const string SettingsLanguage = "language";
	}
}
namespace Cortopia.Scripts.Sprites
{
	[Token(Token = "0x20005CE")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xBCA810", Offset = "0xBCA810")]
	public class SpriteOcclusionCulling : MonoBehaviour
	{
		[Token(Token = "0x4001208")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool allowOcclusionCulling;

		[Token(Token = "0x4001209")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Renderer _maskRenderer;

		[Token(Token = "0x400120A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Renderer _spriteRenderer;

		[Token(Token = "0x6001373")]
		[Address(RVA = "0x11499E8", Offset = "0x11499E8", VA = "0x11499E8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001374")]
		[Address(RVA = "0x1149A68", Offset = "0x1149A68", VA = "0x1149A68")]
		public void SetOcclusionCulling(bool allowOcclusionCullingWhenDynamic)
		{
		}

		[Token(Token = "0x6001375")]
		[Address(RVA = "0x1149B48", Offset = "0x1149B48", VA = "0x1149B48")]
		public SpriteOcclusionCulling()
		{
		}
	}
}
namespace Cortopia.Scripts.Shaders
{
	[Token(Token = "0x20005CF")]
	public class StencilComparisonSetter : MonoBehaviour
	{
		[Token(Token = "0x400120B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly int StencilComparisonProperty;

		[Token(Token = "0x400120C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private CompareFunction compareFunction;

		[Token(Token = "0x400120D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<Material> _mats;

		[Token(Token = "0x6001376")]
		[Address(RVA = "0x114BA44", Offset = "0x114BA44", VA = "0x114BA44")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001377")]
		[Address(RVA = "0x114BD44", Offset = "0x114BD44", VA = "0x114BD44")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001378")]
		[Address(RVA = "0x114BD4C", Offset = "0x114BD4C", VA = "0x114BD4C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001379")]
		[Address(RVA = "0x114BA6C", Offset = "0x114BA6C", VA = "0x114BA6C")]
		private void InitMaterials()
		{
		}

		[Token(Token = "0x600137A")]
		[Address(RVA = "0x114BD50", Offset = "0x114BD50", VA = "0x114BD50")]
		private void DestroyMaterials()
		{
		}

		[Token(Token = "0x600137B")]
		[Address(RVA = "0x114BBD0", Offset = "0x114BBD0", VA = "0x114BBD0")]
		private void SetStencilComparison(CompareFunction newCompare)
		{
		}

		[Token(Token = "0x600137C")]
		[Address(RVA = "0x114BE94", Offset = "0x114BE94", VA = "0x114BE94")]
		public StencilComparisonSetter()
		{
		}
	}
}
namespace Cortopia.Scripts.Players
{
	[Token(Token = "0x20005D0")]
	public class ApplyPlayerScale : MonoBehaviour
	{
		[Token(Token = "0x400120E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private ReactiveSubscription _subscription;

		[Token(Token = "0x600137E")]
		[Address(RVA = "0x1328FD8", Offset = "0x1328FD8", VA = "0x1328FD8")]
		private void Start()
		{
		}

		[Token(Token = "0x600137F")]
		[Address(RVA = "0x13290E8", Offset = "0x13290E8", VA = "0x13290E8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001380")]
		[Address(RVA = "0x13290F4", Offset = "0x13290F4", VA = "0x13290F4")]
		private void Handler(float scale)
		{
		}

		[Token(Token = "0x6001381")]
		[Address(RVA = "0x1329148", Offset = "0x1329148", VA = "0x1329148")]
		public ApplyPlayerScale()
		{
		}
	}
	[Token(Token = "0x20005D1")]
	public class ConstrainPlayerAudioToTile : MonoBehaviour
	{
		[Token(Token = "0x400120F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private StudioEventEmitter constraintSFX;

		[Token(Token = "0x6001382")]
		[Address(RVA = "0x1166408", Offset = "0x1166408", VA = "0x1166408")]
		private void Update()
		{
		}

		[Token(Token = "0x6001383")]
		[Address(RVA = "0x11665E4", Offset = "0x11665E4", VA = "0x11665E4")]
		public ConstrainPlayerAudioToTile()
		{
		}
	}
	[Token(Token = "0x20005D2")]
	public class ConstrainPlayerVisionToTile : MonoBehaviour
	{
		[Token(Token = "0x4001210")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly int Transparency;

		[Token(Token = "0x4001211")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer meshRenderer;

		[Token(Token = "0x4001212")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBD5F78", Offset = "0xBD5F78")]
		[SerializeField]
		private float remeasureDelay;

		[Token(Token = "0x4001213")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private float tileExtent;

		[Token(Token = "0x4001214")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float headExtent;

		[Token(Token = "0x4001215")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private FP messageBlendLevel;

		[Token(Token = "0x4001216")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBD5FF4", Offset = "0xBD5FF4")]
		private LocalizedString remeasureHeightString;

		[Token(Token = "0x4001217")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private LocalizedString outOfBoundsString;

		[Token(Token = "0x4001218")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private LocalizedString tooLowMessage;

		[Token(Token = "0x4001219")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float _messageShown;

		[Token(Token = "0x400121A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float _remeasureTimeout;

		[Token(Token = "0x400121B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Material _instancedMaterial;

		[Token(Token = "0x6001384")]
		[Address(RVA = "0x11665EC", Offset = "0x11665EC", VA = "0x11665EC")]
		private void Start()
		{
		}

		[Token(Token = "0x6001385")]
		[Address(RVA = "0x1166620", Offset = "0x1166620", VA = "0x1166620")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001386")]
		[Address(RVA = "0x1166688", Offset = "0x1166688", VA = "0x1166688")]
		private void Update()
		{
		}

		[Token(Token = "0x6001387")]
		[Address(RVA = "0x11671F8", Offset = "0x11671F8", VA = "0x11671F8")]
		public ConstrainPlayerVisionToTile()
		{
		}
	}
	[Token(Token = "0x20005D3")]
	public class LocalRemotePlayerSwitch : MonoBehaviour
	{
		[Token(Token = "0x400121C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private PlayerQuantumType enabledType;

		[Token(Token = "0x400121D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Player player;

		[Token(Token = "0x400121E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private ReactiveSubscription _reactiveSubscription;

		[Token(Token = "0x6001389")]
		[Address(RVA = "0xF896AC", Offset = "0xF896AC", VA = "0xF896AC")]
		private void Awake()
		{
		}

		[Token(Token = "0x600138A")]
		[Address(RVA = "0xF89A30", Offset = "0xF89A30", VA = "0xF89A30")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600138B")]
		[Address(RVA = "0xF897F4", Offset = "0xF897F4", VA = "0xF897F4")]
		private void OnSetPlayerType(PlayerQuantumType? type)
		{
		}

		[Token(Token = "0x600138C")]
		[Address(RVA = "0xF89A3C", Offset = "0xF89A3C", VA = "0xF89A3C")]
		public LocalRemotePlayerSwitch()
		{
		}
	}
	[Token(Token = "0x20005D4")]
	public enum PlayerQuantumType
	{
		[Token(Token = "0x4001220")]
		Local,
		[Token(Token = "0x4001221")]
		Remote,
		[Token(Token = "0x4001222")]
		Bot
	}
	[Token(Token = "0x20005D5")]
	public class Player : MonoBehaviour
	{
		[Token(Token = "0x4001223")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private EntityView entityView;

		[Token(Token = "0x4001224")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBD6090", Offset = "0xBD6090")]
		[SerializeField]
		private LocalizedString waitingForRoundString;

		[Token(Token = "0x4001225")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Dictionary<BodyPart, EntityView> _bodyPartEntityViews;

		[Token(Token = "0x4001226")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 _oldPosition;

		[Token(Token = "0x4001227")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private ReactiveSource<PlayerRef> _playerRef;

		[Token(Token = "0x4001228")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private ReactiveSource<QuantumGame> _quantumGame;

		[Token(Token = "0x4001229")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD60DC", Offset = "0xBD60DC")]
		private Reactive<PlayerQuantumType?> <PlayerType>k__BackingField;

		[Token(Token = "0x400122A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD60EC", Offset = "0xBD60EC")]
		private HUDController <ActiveHUDController>k__BackingField;

		[Token(Token = "0x17000385")]
		public Reactive<PlayerQuantumType?> PlayerType
		{
			[Token(Token = "0x600138D")]
			[Address(RVA = "0xFDFE8C", Offset = "0xFDFE8C", VA = "0xFDFE8C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE03F0", Offset = "0xBE03F0")]
			get
			{
				return default(Reactive<PlayerQuantumType?>);
			}
			[Token(Token = "0x600138E")]
			[Address(RVA = "0xFDFE94", Offset = "0xFDFE94", VA = "0xFDFE94")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE0400", Offset = "0xBE0400")]
			private set
			{
			}
		}

		[Token(Token = "0x17000386")]
		public Reactive<PlayerRef> PlayerRef
		{
			[Token(Token = "0x600138F")]
			[Address(RVA = "0xFDFE9C", Offset = "0xFDFE9C", VA = "0xFDFE9C")]
			get
			{
				return default(Reactive<PlayerRef>);
			}
		}

		[Token(Token = "0x17000387")]
		public Reactive<QuantumGame> QuantumGame
		{
			[Token(Token = "0x6001390")]
			[Address(RVA = "0xFDFEF0", Offset = "0xFDFEF0", VA = "0xFDFEF0")]
			get
			{
				return default(Reactive<QuantumGame>);
			}
		}

		[Token(Token = "0x17000388")]
		public HUDController ActiveHUDController
		{
			[Token(Token = "0x6001391")]
			[Address(RVA = "0xFDFF44", Offset = "0xFDFF44", VA = "0xFDFF44")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE0410", Offset = "0xBE0410")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001392")]
			[Address(RVA = "0xFDFF4C", Offset = "0xFDFF4C", VA = "0xFDFF4C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE0420", Offset = "0xBE0420")]
			private set
			{
			}
		}

		[Token(Token = "0x17000389")]
		public EntityView EntityView
		{
			[Token(Token = "0x6001393")]
			[Address(RVA = "0xFDFF54", Offset = "0xFDFF54", VA = "0xFDFF54")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001394")]
		[Address(RVA = "0xFDFF5C", Offset = "0xFDFF5C", VA = "0xFDFF5C")]
		public void Awake()
		{
		}

		[Token(Token = "0x6001395")]
		[Address(RVA = "0xFE012C", Offset = "0xFE012C", VA = "0xFE012C")]
		private PlayerQuantumType? DeterminePlayerType(QuantumGame g, PlayerRef r)
		{
			return null;
		}

		[Token(Token = "0x6001396")]
		[Address(RVA = "0xFE0284", Offset = "0xFE0284", VA = "0xFE0284")]
		public Transform GetEntityViewTransform(BodyPart bodyPart)
		{
			return null;
		}

		[Token(Token = "0x6001397")]
		[Address(RVA = "0xFE056C", Offset = "0xFE056C", VA = "0xFE056C")]
		public void DeInitialize(QuantumGame quantumGame)
		{
		}

		[Token(Token = "0x6001398")]
		[Address(RVA = "0xFE095C", Offset = "0xFE095C", VA = "0xFE095C")]
		public void Initialize(QuantumGame quantumGame)
		{
		}

		[Token(Token = "0x6001399")]
		[Address(RVA = "0xFE1030", Offset = "0xFE1030", VA = "0xFE1030")]
		public void SetActivePlayerHUD(HUDController controller)
		{
		}

		[Token(Token = "0x600139A")]
		[Address(RVA = "0xFE1038", Offset = "0xFE1038", VA = "0xFE1038")]
		public Player()
		{
		}
	}
	[Token(Token = "0x20005D6")]
	public class PredictionCulling : MonoBehaviour
	{
		[Token(Token = "0x400122B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private FP minDistance;

		[Token(Token = "0x400122C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private FP maxDistance;

		[Token(Token = "0x400122D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private FP overlap;

		[Token(Token = "0x400122E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private float thresholdFrameRate;

		[Token(Token = "0x400122F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private float verifiedFramesPerMeasure;

		[Token(Token = "0x4001230")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private FP _currentDistance;

		[Token(Token = "0x4001231")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int _lastRenderedFrame;

		[Token(Token = "0x4001232")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float _lastTime;

		[Token(Token = "0x4001233")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int _lastVerifiedFrame;

		[Token(Token = "0x600139B")]
		[Address(RVA = "0x111B154", Offset = "0x111B154", VA = "0x111B154")]
		private void Awake()
		{
		}

		[Token(Token = "0x600139C")]
		[Address(RVA = "0x111B190", Offset = "0x111B190", VA = "0x111B190")]
		private void Update()
		{
		}

		[Token(Token = "0x600139D")]
		[Address(RVA = "0x111B3E8", Offset = "0x111B3E8", VA = "0x111B3E8")]
		public PredictionCulling()
		{
		}
	}
	[Token(Token = "0x20005D7")]
	public class RemotePlayerVisibilityController : MonoBehaviour
	{
		[Token(Token = "0x4001234")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Player player;

		[Token(Token = "0x4001235")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private bool visibleDuringPreRound;

		[Token(Token = "0x4001236")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		[SerializeField]
		private bool onlyVisibleDuringMatch;

		[Token(Token = "0x4001237")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly ReactiveSource<bool> _isRemotePlayerVisible;

		[Token(Token = "0x4001238")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool _isLateJoining;

		[Token(Token = "0x1700038A")]
		public Reactive<bool> IsRemotePlayerVisible
		{
			[Token(Token = "0x600139E")]
			[Address(RVA = "0x11F0670", Offset = "0x11F0670", VA = "0x11F0670")]
			get
			{
				return default(Reactive<bool>);
			}
		}

		[Token(Token = "0x600139F")]
		[Address(RVA = "0x11F06C4", Offset = "0x11F06C4", VA = "0x11F06C4")]
		private void Awake()
		{
		}

		[Token(Token = "0x60013A0")]
		[Address(RVA = "0x11F071C", Offset = "0x11F071C", VA = "0x11F071C")]
		private void Start()
		{
		}

		[Token(Token = "0x60013A1")]
		[Address(RVA = "0x11F0800", Offset = "0x11F0800", VA = "0x11F0800")]
		private void Update()
		{
		}

		[Token(Token = "0x60013A2")]
		[Address(RVA = "0x11F0BCC", Offset = "0x11F0BCC", VA = "0x11F0BCC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60013A3")]
		[Address(RVA = "0x11F0D20", Offset = "0x11F0D20", VA = "0x11F0D20")]
		private void OnPlayerResurrected(EventPlayerResurrected callback)
		{
		}

		[Token(Token = "0x60013A4")]
		[Address(RVA = "0x11F0D6C", Offset = "0x11F0D6C", VA = "0x11F0D6C")]
		public RemotePlayerVisibilityController()
		{
		}
	}
	[Token(Token = "0x20005D8")]
	public class SmoothedEntityView : EntityView
	{
		[Token(Token = "0x4001239")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static int SafeTeleportFrames;

		[Token(Token = "0x400123A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBD617C", Offset = "0xBD617C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBD617C", Offset = "0xBD617C")]
		public float interpolatePositionFactor;

		[Token(Token = "0x400123B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBD61D0", Offset = "0xBD61D0")]
		public float interpolateRotationFactor;

		[Token(Token = "0x60013A5")]
		[Address(RVA = "0x11FAD54", Offset = "0x11FAD54", VA = "0x11FAD54", Slot = "6")]
		protected override void ApplyTransform(ref UpdatePostionParameter param)
		{
		}

		[Token(Token = "0x60013A6")]
		[Address(RVA = "0x11FB0D0", Offset = "0x11FB0D0", VA = "0x11FB0D0")]
		public SmoothedEntityView()
		{
		}
	}
	[Token(Token = "0x20005D9")]
	public class SnapToPlayerTransform : MonoBehaviour
	{
		[Token(Token = "0x400123C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Vector3 _cachedPosition;

		[Token(Token = "0x400123D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private Quaternion _cachedRotation;

		[Token(Token = "0x60013A8")]
		[Address(RVA = "0x11FB138", Offset = "0x11FB138", VA = "0x11FB138")]
		private void Update()
		{
		}

		[Token(Token = "0x60013A9")]
		[Address(RVA = "0x11FB360", Offset = "0x11FB360", VA = "0x11FB360")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60013AA")]
		[Address(RVA = "0x11FB13C", Offset = "0x11FB13C", VA = "0x11FB13C")]
		private void SnapToPlayer()
		{
		}

		[Token(Token = "0x60013AB")]
		[Address(RVA = "0x11FB364", Offset = "0x11FB364", VA = "0x11FB364")]
		public SnapToPlayerTransform()
		{
		}
	}
	[Token(Token = "0x20005DA")]
	public class SnappedEntityView : EntityView
	{
		[Token(Token = "0x20005DB")]
		private struct TeleportingState
		{
			[Token(Token = "0x400123F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Vector3 OriginPos;

			[Token(Token = "0x4001240")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public Vector3 DestinationPos;

			[Token(Token = "0x4001241")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Quaternion OriginRot;

			[Token(Token = "0x4001242")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Quaternion DestinationRot;

			[Token(Token = "0x4001243")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public float Duration;

			[Token(Token = "0x4001244")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public float StartTime;
		}

		[Token(Token = "0x400123E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private TeleportingState? _teleporting;

		[Token(Token = "0x60013AC")]
		[Address(RVA = "0x11FBBA4", Offset = "0x11FBBA4", VA = "0x11FBBA4", Slot = "6")]
		protected override void ApplyTransform(ref UpdatePostionParameter param)
		{
		}

		[Token(Token = "0x60013AD")]
		[Address(RVA = "0x11FC1AC", Offset = "0x11FC1AC", VA = "0x11FC1AC")]
		public SnappedEntityView()
		{
		}
	}
	[Token(Token = "0x20005DC")]
	public class TeamColorSwitcher : MonoBehaviour
	{
		[Token(Token = "0x4001245")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBD61E8", Offset = "0xBD61E8")]
		[SerializeField]
		private BoundValue<Player> player;

		[Token(Token = "0x4001246")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBD6234", Offset = "0xBD6234")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xBD6234", Offset = "0xBD6234")]
		private Color friendlyColor;

		[Token(Token = "0x4001247")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xBD62A4", Offset = "0xBD62A4")]
		[SerializeField]
		private Color enemyColor;

		[Token(Token = "0x4001248")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBD62F0", Offset = "0xBD62F0")]
		private List<Renderer> renderers;

		[Token(Token = "0x4001249")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private List<Graphic> graphics;

		[Token(Token = "0x400124A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool _isUpdated;

		[Token(Token = "0x400124B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private ReactiveSubscription _localPlayerSubscription;

		[Token(Token = "0x60013AE")]
		[Address(RVA = "0x1152FB0", Offset = "0x1152FB0", VA = "0x1152FB0")]
		private void Start()
		{
		}

		[Token(Token = "0x60013AF")]
		[Address(RVA = "0x1153094", Offset = "0x1153094", VA = "0x1153094")]
		private void Update()
		{
		}

		[Token(Token = "0x60013B0")]
		[Address(RVA = "0x11532B4", Offset = "0x11532B4", VA = "0x11532B4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60013B1")]
		[Address(RVA = "0x1153748", Offset = "0x1153748", VA = "0x1153748")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60013B2")]
		[Address(RVA = "0x1153754", Offset = "0x1153754", VA = "0x1153754")]
		private void LocalPlayerChanged(Player obj)
		{
		}

		[Token(Token = "0x60013B3")]
		[Address(RVA = "0x11530A4", Offset = "0x11530A4", VA = "0x11530A4")]
		private void SetPlayerColor()
		{
		}

		[Token(Token = "0x60013B4")]
		[Address(RVA = "0x11539A8", Offset = "0x11539A8", VA = "0x11539A8")]
		private void OnTeamChanged(EventTeamChanged eventTeamChanged)
		{
		}

		[Token(Token = "0x60013B5")]
		[Address(RVA = "0x1153468", Offset = "0x1153468", VA = "0x1153468")]
		private void SetColor(Color newColor)
		{
		}

		[Token(Token = "0x60013B6")]
		[Address(RVA = "0x1153758", Offset = "0x1153758", VA = "0x1153758")]
		private void DisableGraphics()
		{
		}

		[Token(Token = "0x60013B7")]
		[Address(RVA = "0x1153AE4", Offset = "0x1153AE4", VA = "0x1153AE4")]
		public TeamColorSwitcher()
		{
		}
	}
}
namespace Cortopia.Scripts.Players.Tracking
{
	[Token(Token = "0x20005DD")]
	public class NoXZRotation : MonoBehaviour
	{
		[Token(Token = "0x60013B8")]
		[Address(RVA = "0x101DE64", Offset = "0x101DE64", VA = "0x101DE64")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60013B9")]
		[Address(RVA = "0x101DEA8", Offset = "0x101DEA8", VA = "0x101DEA8")]
		public NoXZRotation()
		{
		}
	}
}
namespace Cortopia.Scripts.Players.Aiming
{
	[Token(Token = "0x20005DE")]
	public class AimGameplay : MonoBehaviour
	{
		[Token(Token = "0x400124C")]
		private const int ReticleTypeNone = -1;

		[Token(Token = "0x400124D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBD634C", Offset = "0xBD634C")]
		private bool switchReticleOnTeleportGrab;

		[Token(Token = "0x400124E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBD6398", Offset = "0xBD6398")]
		[SerializeField]
		private Player player;

		[Token(Token = "0x400124F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private BodyPart bodyPart;

		[Token(Token = "0x4001250")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "EnumArrayAttribute", RVA = "0xBD63F4", Offset = "0xBD63F4")]
		[SerializeField]
		private ReticleBase[] reticleSet;

		[Token(Token = "0x4001251")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private readonly ReactiveSource<bool> _isVisible;

		[Token(Token = "0x4001252")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int _currentReticleIndex;

		[Token(Token = "0x1700038B")]
		public Reactive<bool> IsVisible
		{
			[Token(Token = "0x60013BA")]
			[Address(RVA = "0x1323E10", Offset = "0x1323E10", VA = "0x1323E10")]
			get
			{
				return default(Reactive<bool>);
			}
		}

		[Token(Token = "0x1700038C")]
		private Player RealPlayer
		{
			[Token(Token = "0x60013BB")]
			[Address(RVA = "0x1323E80", Offset = "0x1323E80", VA = "0x1323E80")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60013BC")]
		[Address(RVA = "0x1323F6C", Offset = "0x1323F6C", VA = "0x1323F6C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60013BD")]
		[Address(RVA = "0x13240D4", Offset = "0x13240D4", VA = "0x13240D4")]
		private void Update()
		{
		}

		[Token(Token = "0x60013BE")]
		[Address(RVA = "0x1323FF4", Offset = "0x1323FF4", VA = "0x1323FF4")]
		private void ActivateReticle(int index)
		{
		}

		[Token(Token = "0x60013BF")]
		[Address(RVA = "0x1324608", Offset = "0x1324608", VA = "0x1324608")]
		public AimGameplay()
		{
		}
	}
	[Token(Token = "0x20005DF")]
	public class AimOffset : MonoBehaviour
	{
		[Token(Token = "0x20005E0")]
		private enum OffsetTarget
		{
			[Token(Token = "0x400125A")]
			HandToWandSocket,
			[Token(Token = "0x400125B")]
			HandToWandTip,
			[Token(Token = "0x400125C")]
			WandSocketToTip,
			[Token(Token = "0x400125D")]
			BarrelConnectionToHand
		}

		[Token(Token = "0x4001253")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Dictionary<EntityRef, AimOffset> AimOffsets;

		[Token(Token = "0x4001254")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Player player;

		[Token(Token = "0x4001255")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private XRNode hand;

		[Token(Token = "0x4001256")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private OffsetTarget offsetTarget;

		[Token(Token = "0x4001257")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private bool spellCasterAimOffset;

		[Token(Token = "0x4001258")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private EntityRef _spellCaster;

		[Token(Token = "0x1700038D")]
		private Player RealPlayer
		{
			[Token(Token = "0x60013C0")]
			[Address(RVA = "0x1324694", Offset = "0x1324694", VA = "0x1324694")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60013C1")]
		[Address(RVA = "0x1324780", Offset = "0x1324780", VA = "0x1324780")]
		private void Update()
		{
		}

		[Token(Token = "0x60013C2")]
		[Address(RVA = "0x1324AF4", Offset = "0x1324AF4", VA = "0x1324AF4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60013C3")]
		[Address(RVA = "0x1324AF8", Offset = "0x1324AF8", VA = "0x1324AF8")]
		[CanBeNull]
		public static AimOffset GetCasterOffset(EntityRef caster)
		{
			return null;
		}

		[Token(Token = "0x60013C4")]
		[Address(RVA = "0x1324974", Offset = "0x1324974", VA = "0x1324974")]
		private void ApplyOffset(Frame frame, EntityRef playerEntity)
		{
		}

		[Token(Token = "0x60013C5")]
		[Address(RVA = "0x1324CC0", Offset = "0x1324CC0", VA = "0x1324CC0")]
		private Vector3 GetBarrelConnectionToHandOffset(Frame frame, EntityRef playerEntity)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60013C6")]
		[Address(RVA = "0x13248C8", Offset = "0x13248C8", VA = "0x13248C8")]
		private void RemoveSpellCaster()
		{
		}

		[Token(Token = "0x60013C7")]
		[Address(RVA = "0x1324BA4", Offset = "0x1324BA4", VA = "0x1324BA4")]
		private static Vector3 GetWandOriginOffset(Frame frame)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60013C8")]
		[Address(RVA = "0x1324C40", Offset = "0x1324C40", VA = "0x1324C40")]
		private Vector3 GetWandTipOffset(Frame frame, EntityRef playerEntity)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60013C9")]
		[Address(RVA = "0x1324D34", Offset = "0x1324D34", VA = "0x1324D34")]
		private bool TryGetSpellCaster(Frame frame, EntityRef playerEntity, out SpellCaster spellCaster)
		{
			return default(bool);
		}

		[Token(Token = "0x60013CA")]
		[Address(RVA = "0x1324CA8", Offset = "0x1324CA8", VA = "0x1324CA8")]
		private Vector3 GetWandLengthOffset(Frame frame, EntityRef playerEntity)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60013CB")]
		[Address(RVA = "0x1324EBC", Offset = "0x1324EBC", VA = "0x1324EBC")]
		public AimOffset()
		{
		}
	}
	[Token(Token = "0x20005E1")]
	public class AimUI : MonoBehaviour
	{
		[Token(Token = "0x400125E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBD64A4", Offset = "0xBD64A4")]
		[SerializeField]
		private RaycastConfig uiRaycastConfig;

		[Token(Token = "0x400125F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform aimTransform;

		[Token(Token = "0x4001260")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform reticle;

		[Token(Token = "0x4001261")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private LineRenderer lineRenderer;

		[Token(Token = "0x4001262")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private BoundValue<bool> isAimGameplayVisible;

		[Token(Token = "0x4001263")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBD6530", Offset = "0xBD6530")]
		[SerializeField]
		private BodyPart bodyPart;

		[Token(Token = "0x4001264")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		private bool rotateReticleToNormal;

		[Token(Token = "0x4001265")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private float reticleDefaultDistance;

		[Token(Token = "0x4001266")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private int _handIndex;

		[Token(Token = "0x4001267")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Vector3 _reticleStartingLocalScale;

		[Token(Token = "0x60013CD")]
		[Address(RVA = "0x1324F4C", Offset = "0x1324F4C", VA = "0x1324F4C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60013CE")]
		[Address(RVA = "0x13250C4", Offset = "0x13250C4", VA = "0x13250C4")]
		private void Update()
		{
		}

		[Token(Token = "0x60013CF")]
		[Address(RVA = "0x1324FB0", Offset = "0x1324FB0", VA = "0x1324FB0")]
		private static int GetHandIndex(BodyPart bodyPart)
		{
			return default(int);
		}

		[Token(Token = "0x60013D0")]
		[Address(RVA = "0x13250C8", Offset = "0x13250C8", VA = "0x13250C8")]
		private void UIButtonRaycast()
		{
		}

		[Token(Token = "0x60013D1")]
		[Address(RVA = "0x13256C4", Offset = "0x13256C4", VA = "0x13256C4")]
		private void UpdateReticlePosition(RaycastHit uiHit, bool hasUIHit)
		{
		}

		[Token(Token = "0x60013D2")]
		[Address(RVA = "0x1325908", Offset = "0x1325908", VA = "0x1325908")]
		public AimUI()
		{
		}
	}
	[Token(Token = "0x20005E2")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBCA870", Offset = "0xBCA870")]
	public class RaycastConfig : ScriptableObject
	{
		[Token(Token = "0x4001268")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xBD659C", Offset = "0xBD659C")]
		private float raycastLength;

		[Token(Token = "0x4001269")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xBD65E8", Offset = "0xBD65E8")]
		private UnityEngine.LayerMask layerMask;

		[Token(Token = "0x400126A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xBD6634", Offset = "0xBD6634")]
		[SerializeField]
		private EnvironmentTags tag;

		[Token(Token = "0x1700038E")]
		public float Length
		{
			[Token(Token = "0x60013D3")]
			[Address(RVA = "0x1254320", Offset = "0x1254320", VA = "0x1254320")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700038F")]
		public UnityEngine.LayerMask LayerMask
		{
			[Token(Token = "0x60013D4")]
			[Address(RVA = "0x1254328", Offset = "0x1254328", VA = "0x1254328")]
			get
			{
				return default(UnityEngine.LayerMask);
			}
		}

		[Token(Token = "0x17000390")]
		public EnvironmentTags Tag
		{
			[Token(Token = "0x60013D5")]
			[Address(RVA = "0x1254330", Offset = "0x1254330", VA = "0x1254330")]
			get
			{
				return default(EnvironmentTags);
			}
		}

		[Token(Token = "0x60013D6")]
		[Address(RVA = "0x1254338", Offset = "0x1254338", VA = "0x1254338")]
		public RaycastConfig()
		{
		}
	}
	[Token(Token = "0x20005E3")]
	public class ReticleArc : ReticleBase
	{
		[Token(Token = "0x400126B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBD6680", Offset = "0xBD6680")]
		private float reticleDefaultDistance;

		[Token(Token = "0x400126C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBD66CC", Offset = "0xBD66CC")]
		private LineRenderer lineRenderer;

		[Token(Token = "0x400126D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Transform reticle;

		[Token(Token = "0x400126E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Vector3 _startingLocalScale;

		[Token(Token = "0x60013D7")]
		[Address(RVA = "0x11F2458", Offset = "0x11F2458", VA = "0x11F2458")]
		private void Start()
		{
		}

		[Token(Token = "0x60013D8")]
		[Address(RVA = "0x11F249C", Offset = "0x11F249C", VA = "0x11F249C", Slot = "4")]
		protected override void UpdateReticle(Frame frame, CasterLookingForTarget casterLookingForTarget, Transform3D wandTipTransform)
		{
		}

		[Token(Token = "0x60013D9")]
		[Address(RVA = "0x11F2674", Offset = "0x11F2674", VA = "0x11F2674")]
		private void DrawPredictionLine(Frame frame, CasterLookingForTarget casterLookingForTarget, Transform3D handTransform)
		{
		}

		[Token(Token = "0x60013DA")]
		[Address(RVA = "0x11F2918", Offset = "0x11F2918", VA = "0x11F2918")]
		public ReticleArc()
		{
		}
	}
	[Token(Token = "0x20005E4")]
	public abstract class ReticleBase : MonoBehaviour
	{
		[Token(Token = "0x400126F")]
		protected const float ReticleToRaycastFactor = 0.95f;

		[Token(Token = "0x4001270")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly ReactiveSource<bool> _reticleOnCooldown;

		[Token(Token = "0x4001271")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly ReactiveSource<AssetRefSpellSetup> _spellSetup;

		[Token(Token = "0x4001272")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly ReactiveTransaction _transaction;

		[Token(Token = "0x4001273")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private BodyPart _bodyPart;

		[Token(Token = "0x4001274")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Player _player;

		[Token(Token = "0x4001275")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD6728", Offset = "0xBD6728")]
		private readonly Reactive<bool> <ReticleOnCooldown>k__BackingField;

		[Token(Token = "0x4001276")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD6738", Offset = "0xBD6738")]
		private readonly Reactive<AssetRefSpellSetup> <SpellSetup>k__BackingField;

		[Token(Token = "0x17000391")]
		private Player RealPlayer
		{
			[Token(Token = "0x60013DC")]
			[Address(RVA = "0x11F2AAC", Offset = "0x11F2AAC", VA = "0x11F2AAC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000392")]
		[AttributeAttribute(Name = "UsedImplicitlyAttribute", RVA = "0xBE5838", Offset = "0xBE5838")]
		public Reactive<bool> ReticleOnCooldown
		{
			[Token(Token = "0x60013DD")]
			[Address(RVA = "0x11F2B98", Offset = "0x11F2B98", VA = "0x11F2B98")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE0440", Offset = "0xBE0440")]
			get
			{
				return default(Reactive<bool>);
			}
		}

		[Token(Token = "0x17000393")]
		[AttributeAttribute(Name = "UsedImplicitlyAttribute", RVA = "0xBE5848", Offset = "0xBE5848")]
		public Reactive<AssetRefSpellSetup> SpellSetup
		{
			[Token(Token = "0x60013DE")]
			[Address(RVA = "0x11F2BA0", Offset = "0x11F2BA0", VA = "0x11F2BA0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE0450", Offset = "0xBE0450")]
			get
			{
				return default(Reactive<AssetRefSpellSetup>);
			}
		}

		[Token(Token = "0x60013DB")]
		[Address(RVA = "0x11F291C", Offset = "0x11F291C", VA = "0x11F291C")]
		protected ReticleBase()
		{
		}

		[Token(Token = "0x60013DF")]
		[Address(RVA = "0x11F2BA8", Offset = "0x11F2BA8", VA = "0x11F2BA8")]
		private void Update()
		{
		}

		[Token(Token = "0x60013E0")]
		[Address(RVA = "0x11F2DEC", Offset = "0x11F2DEC", VA = "0x11F2DEC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60013E1")]
		protected abstract void UpdateReticle(Frame frame, CasterLookingForTarget casterLookingForTarget, Transform3D wandTipTransform);

		[Token(Token = "0x60013E2")]
		[Address(RVA = "0x11F2F80", Offset = "0x11F2F80", VA = "0x11F2F80")]
		public void Initialize(Player player, BodyPart hand)
		{
		}

		[Token(Token = "0x60013E3")]
		[Address(RVA = "0x11F2F8C", Offset = "0x11F2F8C", VA = "0x11F2F8C")]
		public void SetReticleCooldown(bool onCooldown, AssetRefSpellSetup spellSetup)
		{
		}
	}
	[Token(Token = "0x20005E5")]
	public class ReticleRaycast : ReticleBase
	{
		[Token(Token = "0x4001277")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBD6748", Offset = "0xBD6748")]
		[SerializeField]
		private Transform reticle;

		[Token(Token = "0x4001278")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private LineRenderer lineRenderer;

		[Token(Token = "0x4001279")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Vector3 _startingLocalScale;

		[Token(Token = "0x400127A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private float _startingDistance;

		[Token(Token = "0x400127B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Vector3 _startingLocalPosition;

		[Token(Token = "0x400127C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Transform _reticleTransform;

		[Token(Token = "0x60013E4")]
		[Address(RVA = "0x11F311C", Offset = "0x11F311C", VA = "0x11F311C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60013E5")]
		[Address(RVA = "0x11F31F4", Offset = "0x11F31F4", VA = "0x11F31F4", Slot = "4")]
		protected override void UpdateReticle(Frame frame, CasterLookingForTarget casterLookingForTarget, Transform3D wandTipTransform)
		{
		}

		[Token(Token = "0x60013E6")]
		[Address(RVA = "0x11F343C", Offset = "0x11F343C", VA = "0x11F343C")]
		private void DrawPredictionLine(Vector3 endPoint)
		{
		}

		[Token(Token = "0x60013E7")]
		[Address(RVA = "0x11F34C8", Offset = "0x11F34C8", VA = "0x11F34C8")]
		private void ScaleReticle()
		{
		}

		[Token(Token = "0x60013E8")]
		[Address(RVA = "0x11F32E0", Offset = "0x11F32E0", VA = "0x11F32E0")]
		private float GetQuantumRaycastLength(Frame frame, CasterLookingForTarget casterLookingForTarget)
		{
			return default(float);
		}

		[Token(Token = "0x60013E9")]
		[Address(RVA = "0x11F35D4", Offset = "0x11F35D4", VA = "0x11F35D4")]
		public ReticleRaycast()
		{
		}
	}
	[Token(Token = "0x20005E6")]
	public class ReticleSelf : ReticleBase
	{
		[Token(Token = "0x60013EA")]
		[Address(RVA = "0x11F35D8", Offset = "0x11F35D8", VA = "0x11F35D8", Slot = "4")]
		protected override void UpdateReticle(Frame frame, CasterLookingForTarget casterLookingForTarget, Transform3D wandTipTransform)
		{
		}

		[Token(Token = "0x60013EB")]
		[Address(RVA = "0x11F35DC", Offset = "0x11F35DC", VA = "0x11F35DC")]
		public ReticleSelf()
		{
		}
	}
	[Token(Token = "0x20005E7")]
	public class ReticleTile : ReticleBase
	{
		[StructLayout(3)]
		[Token(Token = "0x20005E8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCA8BC", Offset = "0xBCA8BC")]
		private struct <OnDisable>d__8 : IAsyncStateMachine
		{
			[Token(Token = "0x4001284")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001285")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4001286")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public ReticleTile <>4__this;

			[Token(Token = "0x4001287")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private YieldAwaitable.YieldAwaiter <>u__1;

			[Token(Token = "0x60013F3")]
			[Address(RVA = "0x105E99C", Offset = "0x105E99C", VA = "0x105E99C", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x60013F4")]
			[Address(RVA = "0x105EBC0", Offset = "0x105EBC0", VA = "0x105EBC0", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x400127D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBD67A4", Offset = "0xBD67A4")]
		private Transform reticle;

		[Token(Token = "0x400127E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private LineRenderer lineRenderer;

		[Token(Token = "0x400127F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float _startingDistance;

		[Token(Token = "0x4001280")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private Vector3 _startingLocalPosition;

		[Token(Token = "0x4001281")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Vector3 _startingLocalScale;

		[Token(Token = "0x4001282")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Transform _startingParent;

		[Token(Token = "0x4001283")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Transform _reticleTransform;

		[Token(Token = "0x60013EC")]
		[Address(RVA = "0x11F35E0", Offset = "0x11F35E0", VA = "0x11F35E0")]
		private void Start()
		{
		}

		[Token(Token = "0x60013ED")]
		[Address(RVA = "0x11F36CC", Offset = "0x11F36CC", VA = "0x11F36CC")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xBE0460", Offset = "0xBE0460")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60013EE")]
		[Address(RVA = "0x11F3790", Offset = "0x11F3790", VA = "0x11F3790", Slot = "4")]
		protected override void UpdateReticle(Frame frame, CasterLookingForTarget casterLookingForTarget, Transform3D wandTipTransform)
		{
		}

		[Token(Token = "0x60013EF")]
		[Address(RVA = "0x11F3A30", Offset = "0x11F3A30", VA = "0x11F3A30")]
		private float GetQuantumRaycastLength(Frame frame, CasterLookingForTarget casterLookingForTarget)
		{
			return default(float);
		}

		[Token(Token = "0x60013F0")]
		[Address(RVA = "0x11F3C18", Offset = "0x11F3C18", VA = "0x11F3C18")]
		private void ScaleReticle()
		{
		}

		[Token(Token = "0x60013F1")]
		[Address(RVA = "0x11F3B8C", Offset = "0x11F3B8C", VA = "0x11F3B8C")]
		private void DrawPredictionLine(Vector3 endPoint)
		{
		}

		[Token(Token = "0x60013F2")]
		[Address(RVA = "0x11F3D28", Offset = "0x11F3D28", VA = "0x11F3D28")]
		public ReticleTile()
		{
		}
	}
}
namespace Cortopia.Scripts.Platform.PlayFab
{
	[Token(Token = "0x20005E9")]
	public class ChallengeClass : IEquatable<ChallengeClass>, IComparable<ChallengeClass>
	{
		[Token(Token = "0x4001288")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly ReactiveSource<bool> _active;

		[Token(Token = "0x4001289")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly ReactiveSource<int> _progress;

		[Token(Token = "0x400128A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD6800", Offset = "0xBD6800")]
		private readonly string <ID>k__BackingField;

		[Token(Token = "0x400128B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD6810", Offset = "0xBD6810")]
		private readonly int <Goal>k__BackingField;

		[Token(Token = "0x400128C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD6820", Offset = "0xBD6820")]
		private readonly Unlockable <Reward>k__BackingField;

		[Token(Token = "0x400128D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD6830", Offset = "0xBD6830")]
		private ChallengeInfo <Info>k__BackingField;

		[Token(Token = "0x17000394")]
		public string ID
		{
			[Token(Token = "0x60013F6")]
			[Address(RVA = "0x133590C", Offset = "0x133590C", VA = "0x133590C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE04D0", Offset = "0xBE04D0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000395")]
		public Reactive<int> Progress
		{
			[Token(Token = "0x60013F7")]
			[Address(RVA = "0x1335914", Offset = "0x1335914", VA = "0x1335914")]
			get
			{
				return default(Reactive<int>);
			}
		}

		[Token(Token = "0x17000396")]
		public int Goal
		{
			[Token(Token = "0x60013F8")]
			[Address(RVA = "0x1335968", Offset = "0x1335968", VA = "0x1335968")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE04E0", Offset = "0xBE04E0")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000397")]
		public Unlockable Reward
		{
			[Token(Token = "0x60013F9")]
			[Address(RVA = "0x1335970", Offset = "0x1335970", VA = "0x1335970")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE04F0", Offset = "0xBE04F0")]
			get
			{
				return default(Unlockable);
			}
		}

		[Token(Token = "0x17000398")]
		public ChallengeInfo Info
		{
			[Token(Token = "0x60013FA")]
			[Address(RVA = "0x133597C", Offset = "0x133597C", VA = "0x133597C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE0500", Offset = "0xBE0500")]
			get
			{
				return null;
			}
			[Token(Token = "0x60013FB")]
			[Address(RVA = "0x1335984", Offset = "0x1335984", VA = "0x1335984")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE0510", Offset = "0xBE0510")]
			private set
			{
			}
		}

		[Token(Token = "0x17000399")]
		public bool IsInfoAvailable
		{
			[Token(Token = "0x60013FC")]
			[Address(RVA = "0x133598C", Offset = "0x133598C", VA = "0x133598C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700039A")]
		public Reactive<bool> IsActive
		{
			[Token(Token = "0x60013FD")]
			[Address(RVA = "0x13359F8", Offset = "0x13359F8", VA = "0x13359F8")]
			get
			{
				return default(Reactive<bool>);
			}
		}

		[Token(Token = "0x1700039B")]
		public Reactive<bool> IsCompleted
		{
			[Token(Token = "0x60013FE")]
			[Address(RVA = "0x1335A68", Offset = "0x1335A68", VA = "0x1335A68")]
			get
			{
				return default(Reactive<bool>);
			}
		}

		[Token(Token = "0x60013F5")]
		[Address(RVA = "0x1335808", Offset = "0x1335808", VA = "0x1335808")]
		private ChallengeClass(string id, int progress, int goal, Unlockable reward, bool active)
		{
		}

		[Token(Token = "0x60013FF")]
		[Address(RVA = "0x1335B44", Offset = "0x1335B44", VA = "0x1335B44", Slot = "5")]
		public int CompareTo(ChallengeClass other)
		{
			return default(int);
		}

		[Token(Token = "0x6001400")]
		[Address(RVA = "0x1335CA0", Offset = "0x1335CA0", VA = "0x1335CA0", Slot = "4")]
		public bool Equals(ChallengeClass other)
		{
			return default(bool);
		}

		[Token(Token = "0x6001401")]
		[Address(RVA = "0x1335CBC", Offset = "0x1335CBC", VA = "0x1335CBC")]
		public static ChallengeClass Create(string id, int progress, int goal, Unlockable reward, bool active, Dictionary<string, ChallengeInfo> challengeInfos)
		{
			return null;
		}

		[Token(Token = "0x6001402")]
		[Address(RVA = "0x1335DA8", Offset = "0x1335DA8", VA = "0x1335DA8")]
		public void AddProgress(int value)
		{
		}

		[Token(Token = "0x6001403")]
		[Address(RVA = "0x1335E30", Offset = "0x1335E30", VA = "0x1335E30")]
		public void SetActive(bool value)
		{
		}

		[Token(Token = "0x6001404")]
		[Address(RVA = "0x1335E94", Offset = "0x1335E94", VA = "0x1335E94")]
		public void SyncChallenge(int progress, bool active)
		{
		}

		[Token(Token = "0x6001405")]
		[Address(RVA = "0x1335F24", Offset = "0x1335F24", VA = "0x1335F24")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE0520", Offset = "0xBE0520")]
		private bool <get_IsCompleted>b__23_0(int x)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20005EA")]
	public class EntitledPlayerClass
	{
		[Token(Token = "0x20005EB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCA8CC", Offset = "0xBCA8CC")]
		private sealed class <>c__DisplayClass5_0
		{
			[Token(Token = "0x4001295")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public PlayerClassConfigurationAsset asset;

			[Token(Token = "0x6001412")]
			[Address(RVA = "0x102B2E8", Offset = "0x102B2E8", VA = "0x102B2E8")]
			public <>c__DisplayClass5_0()
			{
			}

			[Token(Token = "0x6001413")]
			[Address(RVA = "0x102B2F0", Offset = "0x102B2F0", VA = "0x102B2F0")]
			internal bool <.ctor>b__0(SpellSetupAsset x)
			{
				return default(bool);
			}
		}

		[Serializable]
		[Token(Token = "0x20005EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCA8DC", Offset = "0xBCA8DC")]
		private sealed class <>c
		{
			[Token(Token = "0x4001296")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001297")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<SpellSetupAsset, AssetRefSpellSetup> <>9__5_1;

			[Token(Token = "0x4001298")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<long, AssetRefSpellSetup> <>9__5_2;

			[Token(Token = "0x4001299")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Func<AssetRefSpellSetup, bool> <>9__15_0;

			[Token(Token = "0x400129A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static Func<AssetRefSpellSetup, long> <>9__17_0;

			[Token(Token = "0x6001415")]
			[Address(RVA = "0x102B1FC", Offset = "0x102B1FC", VA = "0x102B1FC")]
			public <>c()
			{
			}

			[Token(Token = "0x6001416")]
			[Address(RVA = "0x102B204", Offset = "0x102B204", VA = "0x102B204")]
			internal AssetRefSpellSetup <.ctor>b__5_1(SpellSetupAsset x)
			{
				return default(AssetRefSpellSetup);
			}

			[Token(Token = "0x6001417")]
			[Address(RVA = "0x102B234", Offset = "0x102B234", VA = "0x102B234")]
			internal AssetRefSpellSetup <.ctor>b__5_2(long x)
			{
				return default(AssetRefSpellSetup);
			}

			[Token(Token = "0x6001418")]
			[Address(RVA = "0x102B23C", Offset = "0x102B23C", VA = "0x102B23C")]
			internal bool <AddEntitledSpellsToLoadout>b__15_0(AssetRefSpellSetup x)
			{
				return default(bool);
			}

			[Token(Token = "0x6001419")]
			[Address(RVA = "0x102B268", Offset = "0x102B268", VA = "0x102B268")]
			internal long <SavePlayerClassLoadoutToPlayFabAsync>b__17_0(AssetRefSpellSetup x)
			{
				return default(long);
			}
		}

		[Token(Token = "0x20005ED")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCA8EC", Offset = "0xBCA8EC")]
		private sealed class <>c__DisplayClass15_0
		{
			[Token(Token = "0x400129B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public HashSet<AssetRefSpellSetup> existingSpells;

			[Token(Token = "0x600141A")]
			[Address(RVA = "0x102B270", Offset = "0x102B270", VA = "0x102B270")]
			public <>c__DisplayClass15_0()
			{
			}

			[Token(Token = "0x600141B")]
			[Address(RVA = "0x102B278", Offset = "0x102B278", VA = "0x102B278")]
			internal bool <AddEntitledSpellsToLoadout>b__1(AssetRefSpellSetup x)
			{
				return default(bool);
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20005EE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCA8FC", Offset = "0xBCA8FC")]
		private struct <SavePlayerClassLoadoutToPlayFabAsync>d__17 : IAsyncStateMachine
		{
			[Token(Token = "0x400129C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x400129D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x400129E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public EntitledPlayerClass <>4__this;

			[Token(Token = "0x400129F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x600141C")]
			[Address(RVA = "0x102B330", Offset = "0x102B330", VA = "0x102B330", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x600141D")]
			[Address(RVA = "0x102B78C", Offset = "0x102B78C", VA = "0x102B78C", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x400128E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly TimeSpan WaitTimeBetweenDataUpdates;

		[Token(Token = "0x400128F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly string _character;

		[Token(Token = "0x4001290")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly HashSet<AssetRefSpellSetup> _entitledClassSpells;

		[Token(Token = "0x4001291")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool _saveInQueue;

		[Token(Token = "0x4001292")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Task _saveToPlayFabTask;

		[Token(Token = "0x4001293")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD6840", Offset = "0xBD6840")]
		private readonly PlayerClassConfigurationAsset <Asset>k__BackingField;

		[Token(Token = "0x4001294")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD6850", Offset = "0xBD6850")]
		private AssetRefSpellSetup[] <Loadout>k__BackingField;

		[Token(Token = "0x1700039C")]
		public PlayerClassConfigurationAsset Asset
		{
			[Token(Token = "0x6001407")]
			[Address(RVA = "0x1044DA8", Offset = "0x1044DA8", VA = "0x1044DA8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE0530", Offset = "0xBE0530")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700039D")]
		public AssetRefSpellSetup[] Loadout
		{
			[Token(Token = "0x6001408")]
			[Address(RVA = "0x1044DB0", Offset = "0x1044DB0", VA = "0x1044DB0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE0540", Offset = "0xBE0540")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001409")]
			[Address(RVA = "0x1044DB8", Offset = "0x1044DB8", VA = "0x1044DB8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE0550", Offset = "0xBE0550")]
			private set
			{
			}
		}

		[Token(Token = "0x6001406")]
		[Address(RVA = "0x1044368", Offset = "0x1044368", VA = "0x1044368")]
		public EntitledPlayerClass(PlayerClassConfigurationAsset asset, IReadOnlyList<SpellSetupAsset> entitledSpells, Character playerClassCharacter)
		{
		}

		[Token(Token = "0x600140A")]
		[Address(RVA = "0x1044DC0", Offset = "0x1044DC0", VA = "0x1044DC0")]
		public void SetLoadout(IEnumerable<AssetRefSpellSetup> spells)
		{
		}

		[Token(Token = "0x600140B")]
		[Address(RVA = "0x10446D8", Offset = "0x10446D8", VA = "0x10446D8")]
		private void SetCleanClassLoadout(IEnumerable<AssetRefSpellSetup> spells)
		{
		}

		[Token(Token = "0x600140C")]
		[Address(RVA = "0x1044838", Offset = "0x1044838", VA = "0x1044838")]
		private void AddEntitledSpellsToLoadout()
		{
		}

		[Token(Token = "0x600140D")]
		[Address(RVA = "0x1044DE4", Offset = "0x1044DE4", VA = "0x1044DE4")]
		private void SavePlayerClassLoadoutToPlayFab()
		{
		}

		[Token(Token = "0x600140E")]
		[Address(RVA = "0x1044EA8", Offset = "0x1044EA8", VA = "0x1044EA8")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xBE0560", Offset = "0xBE0560")]
		private Task SavePlayerClassLoadoutToPlayFabAsync()
		{
			return null;
		}

		[Token(Token = "0x600140F")]
		[Address(RVA = "0x1044FAC", Offset = "0x1044FAC", VA = "0x1044FAC")]
		public PlayerLoadout GetPlayerLoadout()
		{
			return default(PlayerLoadout);
		}

		[Token(Token = "0x6001411")]
		[Address(RVA = "0x10450C8", Offset = "0x10450C8", VA = "0x10450C8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE05C0", Offset = "0xBE05C0")]
		private bool <SetCleanClassLoadout>b__14_0(AssetRefSpellSetup x)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20005EF")]
	public static class PlayFabCloudFunctions
	{
		[Token(Token = "0x20005F0")]
		private static class Function<TOut>
		{
			[StructLayout(3)]
			[Token(Token = "0x20005F1")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCA90C", Offset = "0xBCA90C")]
			private struct <Execute>d__0<TIn> : IAsyncStateMachine
			{
				[Token(Token = "0x40012A0")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				public int <>1__state;

				[Token(Token = "0x40012A1")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				public AsyncTaskMethodBuilder<TOut> <>t__builder;

				[Token(Token = "0x40012A2")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				public string functionName;

				[Token(Token = "0x40012A3")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				public TIn argument;

				[Token(Token = "0x40012A4")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				private TaskAwaiter<object> <>u__1;

				[Token(Token = "0x600145A")]
				private void MoveNext()
				{
				}

				[Token(Token = "0x600145B")]
				[DebuggerHidden]
				private void SetStateMachine(IAsyncStateMachine stateMachine)
				{
				}
			}

			[StructLayout(3)]
			[Token(Token = "0x20005F2")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCA91C", Offset = "0xBCA91C")]
			private struct <ExecuteNoArg>d__1 : IAsyncStateMachine
			{
				[Token(Token = "0x40012A5")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				public int <>1__state;

				[Token(Token = "0x40012A6")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				public AsyncTaskMethodBuilder<TOut> <>t__builder;

				[Token(Token = "0x40012A7")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				public string functionName;

				[Token(Token = "0x40012A8")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				private TaskAwaiter<object> <>u__1;

				[Token(Token = "0x600145C")]
				private void MoveNext()
				{
				}

				[Token(Token = "0x600145D")]
				[DebuggerHidden]
				private void SetStateMachine(IAsyncStateMachine stateMachine)
				{
				}
			}

			[Token(Token = "0x6001457")]
			[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xBE067C", Offset = "0xBE067C")]
			public static Task<TOut> Execute<TIn>(TIn argument, [CallerMemberName] string functionName = "")
			{
				return null;
			}

			[Token(Token = "0x6001458")]
			[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xBE06DC", Offset = "0xBE06DC")]
			public static Task<TOut> ExecuteNoArg([CallerMemberName] string functionName = "")
			{
				return null;
			}

			[Token(Token = "0x6001459")]
			private static TOut DeserializeReturnValue(object result)
			{
				return (TOut)null;
			}
		}

		[Token(Token = "0x20005F3")]
		private static class Function
		{
			[StructLayout(3)]
			[Token(Token = "0x20005F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCA92C", Offset = "0xBCA92C")]
			private struct <Execute>d__0<TIn> : IAsyncStateMachine
			{
				[Token(Token = "0x40012A9")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				public int <>1__state;

				[Token(Token = "0x40012AA")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				public AsyncTaskMethodBuilder <>t__builder;

				[Token(Token = "0x40012AB")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				public string functionName;

				[Token(Token = "0x40012AC")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				public TIn argument;

				[Token(Token = "0x40012AD")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				private TaskAwaiter<object> <>u__1;

				[Token(Token = "0x6001461")]
				private void MoveNext()
				{
				}

				[Token(Token = "0x6001462")]
				[DebuggerHidden]
				private void SetStateMachine(IAsyncStateMachine stateMachine)
				{
				}
			}

			[StructLayout(3)]
			[Token(Token = "0x20005F5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCA93C", Offset = "0xBCA93C")]
			private struct <ExecuteNoArg>d__1 : IAsyncStateMachine
			{
				[Token(Token = "0x40012AE")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				public int <>1__state;

				[Token(Token = "0x40012AF")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
				public AsyncTaskMethodBuilder <>t__builder;

				[Token(Token = "0x40012B0")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
				public string functionName;

				[Token(Token = "0x40012B1")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
				private TaskAwaiter<object> <>u__1;

				[Token(Token = "0x6001463")]
				[Address(RVA = "0x106907C", Offset = "0x106907C", VA = "0x106907C", Slot = "4")]
				private void MoveNext()
				{
				}

				[Token(Token = "0x6001464")]
				[Address(RVA = "0x1069238", Offset = "0x1069238", VA = "0x1069238", Slot = "5")]
				[DebuggerHidden]
				private void SetStateMachine(IAsyncStateMachine stateMachine)
				{
				}
			}

			[StructLayout(3)]
			[Token(Token = "0x20005F6")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCA94C", Offset = "0xBCA94C")]
			private struct <SafeExecute>d__2 : IAsyncStateMachine
			{
				[Token(Token = "0x40012B2")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				public int <>1__state;

				[Token(Token = "0x40012B3")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
				public AsyncTaskMethodBuilder<object> <>t__builder;

				[Token(Token = "0x40012B4")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
				public string functionName;

				[Token(Token = "0x40012B5")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
				public object argument;

				[Token(Token = "0x40012B6")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
				private ExecuteFunctionResult <result>5__2;

				[Token(Token = "0x40012B7")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
				private int <retryCount>5__3;

				[Token(Token = "0x40012B8")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
				private bool <ok>5__4;

				[Token(Token = "0x40012B9")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
				private TaskAwaiter<ExecuteFunctionResult> <>u__1;

				[Token(Token = "0x6001465")]
				[Address(RVA = "0x1069244", Offset = "0x1069244", VA = "0x1069244", Slot = "4")]
				private void MoveNext()
				{
				}

				[Token(Token = "0x6001466")]
				[Address(RVA = "0x1069768", Offset = "0x1069768", VA = "0x1069768", Slot = "5")]
				[DebuggerHidden]
				private void SetStateMachine(IAsyncStateMachine stateMachine)
				{
				}
			}

			[Token(Token = "0x600145E")]
			[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xBE075C", Offset = "0xBE075C")]
			public static Task Execute<TIn>(TIn argument, [CallerMemberName] string functionName = "")
			{
				return null;
			}

			[Token(Token = "0x600145F")]
			[Address(RVA = "0x11E53AC", Offset = "0x11E53AC", VA = "0x11E53AC")]
			[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xBE07BC", Offset = "0xBE07BC")]
			public static Task ExecuteNoArg([CallerMemberName] string functionName = "")
			{
				return null;
			}

			[Token(Token = "0x6001460")]
			[Address(RVA = "0x11E54B0", Offset = "0x11E54B0", VA = "0x11E54B0")]
			[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xBE081C", Offset = "0xBE081C")]
			public static Task<object> SafeExecute(string functionName, object argument)
			{
				return null;
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20005F7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCA95C", Offset = "0xBCA95C")]
		private struct <WaitForOperationFinished>d__70 : IAsyncStateMachine
		{
			[Token(Token = "0x40012BA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40012BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x40012BC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Task<OperationStartedResult> task;

			[Token(Token = "0x40012BD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private OperationStartedResult <operationStartedResult>5__2;

			[Token(Token = "0x40012BE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int <delay>5__3;

			[Token(Token = "0x40012BF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private TaskAwaiter<OperationStartedResult> <>u__1;

			[Token(Token = "0x40012C0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private TaskAwaiter <>u__2;

			[Token(Token = "0x40012C1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private TaskAwaiter<GetOperationsFinishedResult> <>u__3;

			[Token(Token = "0x6001467")]
			[Address(RVA = "0x11E4E60", Offset = "0x11E4E60", VA = "0x11E4E60", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001468")]
			[Address(RVA = "0x11E53A0", Offset = "0x11E53A0", VA = "0x11E53A0", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x1700039E")]
		[Preserve]
		private static List<Cortopia.CortopiaPlayFabModels.FriendStatus> PreserveListFriendStatus
		{
			[Token(Token = "0x600141E")]
			[Address(RVA = "0xFD3FB8", Offset = "0xFD3FB8", VA = "0xFD3FB8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700039F")]
		[Preserve]
		private static List<GroupMember> PreserveListGroupMember
		{
			[Token(Token = "0x600141F")]
			[Address(RVA = "0xFD3FC0", Offset = "0xFD3FC0", VA = "0xFD3FC0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003A0")]
		[Preserve]
		private static List<UserStatus> PreserveListUserStatus
		{
			[Token(Token = "0x6001420")]
			[Address(RVA = "0xFD3FC8", Offset = "0xFD3FC8", VA = "0xFD3FC8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003A1")]
		[Preserve]
		private static List<string> PreserveListString
		{
			[Token(Token = "0x6001421")]
			[Address(RVA = "0xFD3FD0", Offset = "0xFD3FD0", VA = "0xFD3FD0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003A2")]
		[Preserve]
		private static List<long> PreserveListLong
		{
			[Token(Token = "0x6001422")]
			[Address(RVA = "0xFD3FD8", Offset = "0xFD3FD8", VA = "0xFD3FD8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003A3")]
		[Preserve]
		private static List<PlayerClass> PreserveListPlayerClass
		{
			[Token(Token = "0x6001423")]
			[Address(RVA = "0xFD3FE0", Offset = "0xFD3FE0", VA = "0xFD3FE0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003A4")]
		[Preserve]
		private static List<Character> PreserveListCharacter
		{
			[Token(Token = "0x6001424")]
			[Address(RVA = "0xFD3FE8", Offset = "0xFD3FE8", VA = "0xFD3FE8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003A5")]
		[Preserve]
		private static List<ChallengeData> PreserveListChallengeData
		{
			[Token(Token = "0x6001425")]
			[Address(RVA = "0xFD3FF0", Offset = "0xFD3FF0", VA = "0xFD3FF0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003A6")]
		[Preserve]
		private static List<ChallengeUpdate> PreserveListChallengeUpdate
		{
			[Token(Token = "0x6001426")]
			[Address(RVA = "0xFD3FF8", Offset = "0xFD3FF8", VA = "0xFD3FF8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003A7")]
		[Preserve]
		private static List<Unlockable> PreserveListUnlockable
		{
			[Token(Token = "0x6001427")]
			[Address(RVA = "0xFD4000", Offset = "0xFD4000", VA = "0xFD4000")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003A8")]
		[Preserve]
		private static List<PlayerMatchStats> PreserveListPlayerStats
		{
			[Token(Token = "0x6001428")]
			[Address(RVA = "0xFD4008", Offset = "0xFD4008", VA = "0xFD4008")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003A9")]
		[Preserve]
		private static List<LeaderboardPlayerStats> PreserveListLeaderboardPlayerStats
		{
			[Token(Token = "0x6001429")]
			[Address(RVA = "0xFD4010", Offset = "0xFD4010", VA = "0xFD4010")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003AA")]
		[Preserve]
		private static List<PlayerInfo> PreserveListPlayerInfo
		{
			[Token(Token = "0x600142A")]
			[Address(RVA = "0xFD4018", Offset = "0xFD4018", VA = "0xFD4018")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003AB")]
		[Preserve]
		private static StringEnumConverter PreserveStringEnumConverterDefaultConstructor
		{
			[Token(Token = "0x600142B")]
			[Address(RVA = "0xFD4020", Offset = "0xFD4020", VA = "0xFD4020")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600142C")]
		[Address(RVA = "0xFD4078", Offset = "0xFD4078", VA = "0xFD4078")]
		public static Task<OperationStartedResult> CancelJoinFriendV2(UserArgument arg)
		{
			return null;
		}

		[Token(Token = "0x600142D")]
		[Address(RVA = "0xFD40DC", Offset = "0xFD40DC", VA = "0xFD40DC")]
		public static Task<OperationStartedResult> CreateCustomGameV2(CreateCustomGameArgument arg)
		{
			return null;
		}

		[Token(Token = "0x600142E")]
		[Address(RVA = "0xFD4140", Offset = "0xFD4140", VA = "0xFD4140")]
		public static Task<GetFriendsStatusResult> GetFriendsStatus(FriendsPageArgument arg)
		{
			return null;
		}

		[Token(Token = "0x600142F")]
		[Address(RVA = "0xFD41B4", Offset = "0xFD41B4", VA = "0xFD41B4")]
		public static Task<GetChallengeResult> GetChallenges()
		{
			return null;
		}

		[Token(Token = "0x6001430")]
		[Address(RVA = "0xFD4210", Offset = "0xFD4210", VA = "0xFD4210")]
		public static Task<GetMatchUsersStatusResult> GetMatchUsersStatus()
		{
			return null;
		}

		[Token(Token = "0x6001431")]
		[Address(RVA = "0xFD426C", Offset = "0xFD426C", VA = "0xFD426C")]
		public static Task<GetLeaderboardPlayersResult> GetLeaderboardPlayersV2()
		{
			return null;
		}

		[Token(Token = "0x6001432")]
		[Address(RVA = "0xFD42C8", Offset = "0xFD42C8", VA = "0xFD42C8")]
		public static Task<GetOwnGroupStatusResult> GetOwnGroupStatus()
		{
			return null;
		}

		[Token(Token = "0x6001433")]
		[Address(RVA = "0xFD4324", Offset = "0xFD4324", VA = "0xFD4324")]
		public static Task<GetInventoryResult> GetInventory()
		{
			return null;
		}

		[Token(Token = "0x6001434")]
		[Address(RVA = "0xFD4380", Offset = "0xFD4380", VA = "0xFD4380")]
		public static Task<GetSteamPlatformFriendsResult> GetSteamPlatformFriends()
		{
			return null;
		}

		[Token(Token = "0x6001435")]
		[Address(RVA = "0xFD43DC", Offset = "0xFD43DC", VA = "0xFD43DC")]
		public static Task<GetPlayersInfoResult> GetPlayersInfo(UsersArgument arg)
		{
			return null;
		}

		[Token(Token = "0x6001436")]
		[Address(RVA = "0xFD4440", Offset = "0xFD4440", VA = "0xFD4440")]
		public static Task SaveCharacter(Character arg)
		{
			return null;
		}

		[Token(Token = "0x6001437")]
		[Address(RVA = "0xFD44B4", Offset = "0xFD44B4", VA = "0xFD44B4")]
		public static Task SetRegionLatencies(Dictionary<string, int> arg)
		{
			return null;
		}

		[Token(Token = "0x6001438")]
		[Address(RVA = "0xFD4518", Offset = "0xFD4518", VA = "0xFD4518")]
		public static Task<StartMatchMakingResult> StartMatchMakingV2(StartMatchMakingRequest arg)
		{
			return null;
		}

		[Token(Token = "0x6001439")]
		[Address(RVA = "0xFD457C", Offset = "0xFD457C", VA = "0xFD457C")]
		public static Task<OperationStartedResult> CancelMatchMakingV2()
		{
			return null;
		}

		[Token(Token = "0x600143A")]
		[Address(RVA = "0xFD45D8", Offset = "0xFD45D8", VA = "0xFD45D8")]
		public static Task<OperationStartedResult> LeaveMatchV2()
		{
			return null;
		}

		[Token(Token = "0x600143B")]
		[Address(RVA = "0xFD4634", Offset = "0xFD4634", VA = "0xFD4634")]
		public static Task<OperationStartedResult> InviteFriendV2(UserArgument arg)
		{
			return null;
		}

		[Token(Token = "0x600143C")]
		[Address(RVA = "0xFD4698", Offset = "0xFD4698", VA = "0xFD4698")]
		public static Task<OperationStartedResult> JoinFriendV2(UserArgument arg)
		{
			return null;
		}

		[Token(Token = "0x600143D")]
		[Address(RVA = "0xFD46FC", Offset = "0xFD46FC", VA = "0xFD46FC")]
		public static Task<SendFriendRequestResult> SendFriendRequest(UserArgument arg)
		{
			return null;
		}

		[Token(Token = "0x600143E")]
		[Address(RVA = "0xFD4760", Offset = "0xFD4760", VA = "0xFD4760")]
		public static Task<SendFriendRequestResult> SendFriendRequestUsingCode(int arg)
		{
			return null;
		}

		[Token(Token = "0x600143F")]
		[Address(RVA = "0xFD47C4", Offset = "0xFD47C4", VA = "0xFD47C4")]
		public static Task<FriendCodeResult> CreateFriendCode()
		{
			return null;
		}

		[Token(Token = "0x6001440")]
		[Address(RVA = "0xFD4820", Offset = "0xFD4820", VA = "0xFD4820")]
		public static Task<FriendCodeResult> GetExistingFriendCode()
		{
			return null;
		}

		[Token(Token = "0x6001441")]
		[Address(RVA = "0xFD487C", Offset = "0xFD487C", VA = "0xFD487C")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xBE05E0", Offset = "0xBE05E0")]
		public static Task<int> GetFriendCode()
		{
			return null;
		}

		[Token(Token = "0x6001442")]
		[Address(RVA = "0xFD48D8", Offset = "0xFD48D8", VA = "0xFD48D8")]
		public static Task AcceptFriendRequest(UserArgument arg)
		{
			return null;
		}

		[Token(Token = "0x6001443")]
		[Address(RVA = "0xFD493C", Offset = "0xFD493C", VA = "0xFD493C")]
		public static Task RemoveFriend(UserArgument arg)
		{
			return null;
		}

		[Token(Token = "0x6001444")]
		[Address(RVA = "0xFD49A0", Offset = "0xFD49A0", VA = "0xFD49A0")]
		public static Task SetFriendIsFavorite(UserWithBoolArgument arg)
		{
			return null;
		}

		[Token(Token = "0x6001445")]
		[Address(RVA = "0xFD4A14", Offset = "0xFD4A14", VA = "0xFD4A14")]
		public static Task SetUserIsBlocked(UserWithBoolArgument arg)
		{
			return null;
		}

		[Token(Token = "0x6001446")]
		[Address(RVA = "0xFD4A88", Offset = "0xFD4A88", VA = "0xFD4A88")]
		public static Task<bool> GetUserIsBlocked(UserArgument arg)
		{
			return null;
		}

		[Token(Token = "0x6001447")]
		[Address(RVA = "0xFD4AEC", Offset = "0xFD4AEC", VA = "0xFD4AEC")]
		public static Task<RecordPlayerMatchStatsResult> RecordPlayerMatchStats(MatchStats arg)
		{
			return null;
		}

		[Token(Token = "0x6001448")]
		[Address(RVA = "0xFD4B50", Offset = "0xFD4B50", VA = "0xFD4B50")]
		public static Task<Cortopia.CortopiaPlayFabModels.PlayerStats> GetPlayerStats(UserArgument arg)
		{
			return null;
		}

		[Token(Token = "0x6001449")]
		[Address(RVA = "0xFD4BB4", Offset = "0xFD4BB4", VA = "0xFD4BB4")]
		public static Task SetPlayerIsOnline(SetPlayerIsOnlineArgument arg)
		{
			return null;
		}

		[Token(Token = "0x600144A")]
		[Address(RVA = "0xFD4C28", Offset = "0xFD4C28", VA = "0xFD4C28")]
		public static Task SetPlayerMMR(int arg)
		{
			return null;
		}

		[Token(Token = "0x600144B")]
		[Address(RVA = "0xFD4C8C", Offset = "0xFD4C8C", VA = "0xFD4C8C")]
		public static Task SetPlayerXP(int arg)
		{
			return null;
		}

		[Token(Token = "0x600144C")]
		[Address(RVA = "0xFD4CF0", Offset = "0xFD4CF0", VA = "0xFD4CF0")]
		public static Task SetPlayerBorder(string arg)
		{
			return null;
		}

		[Token(Token = "0x600144D")]
		[Address(RVA = "0xFD4D54", Offset = "0xFD4D54", VA = "0xFD4D54")]
		public static Task SetPlayerTitle(SetPlayerTitleRequest arg)
		{
			return null;
		}

		[Token(Token = "0x600144E")]
		[Address(RVA = "0xFD1370", Offset = "0xFD1370", VA = "0xFD1370")]
		public static Task<OperationStartedResult> LeaveGroupV2()
		{
			return null;
		}

		[Token(Token = "0x600144F")]
		[Address(RVA = "0xFD4DB8", Offset = "0xFD4DB8", VA = "0xFD4DB8")]
		public static Task<OperationStartedResult> SetCustomGameIsPlayingV2(SetCustomGameIsPlayingArgument arg)
		{
			return null;
		}

		[Token(Token = "0x6001450")]
		[Address(RVA = "0xFD4E2C", Offset = "0xFD4E2C", VA = "0xFD4E2C")]
		public static Task<OperationStartedResult> UpdateCustomGameV2(UpdateCustomGameArgument arg)
		{
			return null;
		}

		[Token(Token = "0x6001451")]
		[Address(RVA = "0xFD14B8", Offset = "0xFD14B8", VA = "0xFD14B8")]
		public static Task<OperationStartedResult> RejectMemberV2(UserArgument arg)
		{
			return null;
		}

		[Token(Token = "0x6001452")]
		[Address(RVA = "0xFD4E90", Offset = "0xFD4E90", VA = "0xFD4E90")]
		public static Task<GetMatchResult> GetMatch(GetMatchRequest arg)
		{
			return null;
		}

		[Token(Token = "0x6001453")]
		[Address(RVA = "0xFD4EF4", Offset = "0xFD4EF4", VA = "0xFD4EF4")]
		public static Task<SpeculativeProgressionChange> EndOfRound(EndOfRoundArgument arg)
		{
			return null;
		}

		[Token(Token = "0x6001454")]
		[Address(RVA = "0xFD4F58", Offset = "0xFD4F58", VA = "0xFD4F58")]
		public static Task StartRematch(StartRematchArgument arg)
		{
			return null;
		}

		[Token(Token = "0x6001455")]
		[Address(RVA = "0xFD4FBC", Offset = "0xFD4FBC", VA = "0xFD4FBC")]
		public static Task<GetOperationsFinishedResult> GetOperationsFinished(GetOperationsFinishedRequest arg)
		{
			return null;
		}

		[Token(Token = "0x6001456")]
		[Address(RVA = "0xFD5020", Offset = "0xFD5020", VA = "0xFD5020")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xBE061C", Offset = "0xBE061C")]
		public static Task WaitForOperationFinished(Task<OperationStartedResult> task)
		{
			return null;
		}
	}
	[Token(Token = "0x20005F8")]
	public class PlayFabErrorException : Exception
	{
		[Token(Token = "0x40012C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD6860", Offset = "0xBD6860")]
		private readonly PlayFabError <Error>k__BackingField;

		[Token(Token = "0x170003AC")]
		public PlayFabError Error
		{
			[Token(Token = "0x600146A")]
			[Address(RVA = "0xFD5240", Offset = "0xFD5240", VA = "0xFD5240")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE08BC", Offset = "0xBE08BC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001469")]
		[Address(RVA = "0xFD5130", Offset = "0xFD5130", VA = "0xFD5130")]
		public PlayFabErrorException(PlayFabError error)
		{
		}
	}
	[Token(Token = "0x20005F9")]
	public class PlayFabFriendsListener : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20005FA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCA96C", Offset = "0xBCA96C")]
		private sealed class <>c
		{
			[Token(Token = "0x40012CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40012CE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<IUser, Reactive<bool>> <>9__14_0;

			[Token(Token = "0x600147A")]
			[Address(RVA = "0x11E564C", Offset = "0x11E564C", VA = "0x11E564C")]
			public <>c()
			{
			}

			[Token(Token = "0x600147B")]
			[Address(RVA = "0x11E5654", Offset = "0x11E5654", VA = "0x11E5654")]
			internal Reactive<bool> <Awake>b__14_0(IUser x)
			{
				return default(Reactive<bool>);
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20005FB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCA97C", Offset = "0xBCA97C")]
		private struct <UpdatePlayFab>d__19 : IAsyncStateMachine
		{
			[Token(Token = "0x40012CF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40012D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x40012D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PlayFabFriendsListener <>4__this;

			[Token(Token = "0x40012D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private TaskAwaiter<GetFriendsStatusResult> <>u__1;

			[Token(Token = "0x600147C")]
			[Address(RVA = "0x11E5724", Offset = "0x11E5724", VA = "0x11E5724", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x600147D")]
			[Address(RVA = "0x11E59AC", Offset = "0x11E59AC", VA = "0x11E59AC", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x40012C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly TimeSpan RePollDelay;

		[Token(Token = "0x40012C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly GetFriendsStatusResult NoFriends;

		[Token(Token = "0x40012C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private PlayFabStatusListener playFabStatusListener;

		[Token(Token = "0x40012C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly ReactiveSource<GetFriendsStatusResult> _friendsStatus;

		[Token(Token = "0x40012C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Task _delayTask;

		[Token(Token = "0x40012C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool _isLoggedIn;

		[Token(Token = "0x40012C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private ReactiveSubscription _isLoggedInSubscription;

		[Token(Token = "0x40012CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private FriendsPageArgument? _page;

		[Token(Token = "0x40012CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool _silenceUpdate;

		[Token(Token = "0x40012CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Task _updatePlayFabTask;

		[Token(Token = "0x170003AD")]
		public Reactive<GetFriendsStatusResult> FriendsStatus
		{
			[Token(Token = "0x600146B")]
			[Address(RVA = "0xFD5248", Offset = "0xFD5248", VA = "0xFD5248")]
			get
			{
				return default(Reactive<GetFriendsStatusResult>);
			}
		}

		[Token(Token = "0x170003AE")]
		public bool UseFriends
		{
			[Token(Token = "0x600146C")]
			[Address(RVA = "0xFD529C", Offset = "0xFD529C", VA = "0xFD529C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600146D")]
		[Address(RVA = "0xFD52DC", Offset = "0xFD52DC", VA = "0xFD52DC")]
		private void Awake()
		{
		}

		[Token(Token = "0x600146E")]
		[Address(RVA = "0xFD550C", Offset = "0xFD550C", VA = "0xFD550C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600146F")]
		[Address(RVA = "0xFD5634", Offset = "0xFD5634", VA = "0xFD5634")]
		private void Update()
		{
		}

		[Token(Token = "0x6001470")]
		[Address(RVA = "0xFD5854", Offset = "0xFD5854", VA = "0xFD5854")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001471")]
		[Address(RVA = "0xFD5860", Offset = "0xFD5860", VA = "0xFD5860")]
		public void SetPage(FriendsPageArgument? page)
		{
		}

		[Token(Token = "0x6001472")]
		[Address(RVA = "0xFD5750", Offset = "0xFD5750", VA = "0xFD5750")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xBE08CC", Offset = "0xBE08CC")]
		private Task UpdatePlayFab()
		{
			return null;
		}

		[Token(Token = "0x6001473")]
		[Address(RVA = "0xFD597C", Offset = "0xFD597C", VA = "0xFD597C")]
		private void IsLoggedInChanged(bool loggedIn)
		{
		}

		[Token(Token = "0x6001474")]
		[Address(RVA = "0xFD5A54", Offset = "0xFD5A54", VA = "0xFD5A54")]
		public void RePollImmediatelyWhenComplete(Task task, bool invalidateCurrentUpdate = false)
		{
		}

		[Token(Token = "0x6001475")]
		[Address(RVA = "0xFD5C7C", Offset = "0xFD5C7C", VA = "0xFD5C7C")]
		public void RePollImmediatelyWhenOperationComplete(Task<OperationStartedResult> task, bool invalidateCurrentUpdate = false)
		{
		}

		[Token(Token = "0x6001476")]
		[Address(RVA = "0xFD5E24", Offset = "0xFD5E24", VA = "0xFD5E24")]
		public void MarkInvitationsAsSeen()
		{
		}

		[Token(Token = "0x6001477")]
		[Address(RVA = "0xFD60A8", Offset = "0xFD60A8", VA = "0xFD60A8")]
		public PlayFabFriendsListener()
		{
		}
	}
	[Token(Token = "0x20005FC")]
	internal class PlayFabFunctionExecutionException : Exception
	{
		[Token(Token = "0x40012D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD6880", Offset = "0xBD6880")]
		private readonly FunctionExecutionError <Error>k__BackingField;

		[Token(Token = "0x170003AF")]
		public FunctionExecutionError Error
		{
			[Token(Token = "0x600147F")]
			[Address(RVA = "0xFD6360", Offset = "0xFD6360", VA = "0xFD6360")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE093C", Offset = "0xBE093C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600147E")]
		[Address(RVA = "0xFD62D8", Offset = "0xFD62D8", VA = "0xFD62D8")]
		public PlayFabFunctionExecutionException(FunctionExecutionError error)
		{
		}
	}
	[Token(Token = "0x20005FD")]
	public class PlayFabListenerSingleton : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20005FE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCA98C", Offset = "0xBCA98C")]
		private sealed class <>c
		{
			[Token(Token = "0x40012E3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40012E4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<IUser, Reactive<bool>> <>9__21_0;

			[Token(Token = "0x40012E5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Predicate<Task> <>9__30_0;

			[Token(Token = "0x40012E6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Func<KeyValuePair<string, bool>, bool> <>9__32_0;

			[Token(Token = "0x6001494")]
			[Address(RVA = "0x11E5A18", Offset = "0x11E5A18", VA = "0x11E5A18")]
			public <>c()
			{
			}

			[Token(Token = "0x6001495")]
			[Address(RVA = "0x11E5A20", Offset = "0x11E5A20", VA = "0x11E5A20")]
			internal Reactive<bool> <Awake>b__21_0(IUser x)
			{
				return default(Reactive<bool>);
			}

			[Token(Token = "0x6001496")]
			[Address(RVA = "0x11E5AF0", Offset = "0x11E5AF0", VA = "0x11E5AF0")]
			internal bool <RePollImmediatelyWhenCompleteAsync>b__30_0(Task x)
			{
				return default(bool);
			}

			[Token(Token = "0x6001497")]
			[Address(RVA = "0x11E5B0C", Offset = "0x11E5B0C", VA = "0x11E5B0C")]
			internal bool <CheckOperationsFinished>b__32_0(KeyValuePair<string, bool> kvp)
			{
				return default(bool);
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20005FF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCA99C", Offset = "0xBCA99C")]
		private struct <UpdatePlayFab>d__26 : IAsyncStateMachine
		{
			[Token(Token = "0x40012E7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40012E8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x40012E9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PlayFabListenerSingleton <>4__this;

			[Token(Token = "0x40012EA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private TaskAwaiter<GetOwnGroupStatusResult> <>u__1;

			[Token(Token = "0x6001498")]
			[Address(RVA = "0x11E6878", Offset = "0x11E6878", VA = "0x11E6878", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001499")]
			[Address(RVA = "0x11E7444", Offset = "0x11E7444", VA = "0x11E7444", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000600")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCA9AC", Offset = "0xBCA9AC")]
		private struct <RePollImmediatelyWhenCompleteAsync>d__30 : IAsyncStateMachine
		{
			[Token(Token = "0x40012EB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40012EC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x40012ED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PlayFabListenerSingleton <>4__this;

			[Token(Token = "0x40012EE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x600149A")]
			[Address(RVA = "0x11E6468", Offset = "0x11E6468", VA = "0x11E6468", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x600149B")]
			[Address(RVA = "0x11E686C", Offset = "0x11E686C", VA = "0x11E686C", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000601")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCA9BC", Offset = "0xBCA9BC")]
		private struct <WaitForOperationTask>d__31 : IAsyncStateMachine
		{
			[Token(Token = "0x40012EF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40012F0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x40012F1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Task<OperationStartedResult> task;

			[Token(Token = "0x40012F2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public PlayFabListenerSingleton <>4__this;

			[Token(Token = "0x40012F3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private TaskAwaiter<OperationStartedResult> <>u__1;

			[Token(Token = "0x40012F4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private TaskAwaiter <>u__2;

			[Token(Token = "0x600149C")]
			[Address(RVA = "0x11E7450", Offset = "0x11E7450", VA = "0x11E7450", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x600149D")]
			[Address(RVA = "0x11E77EC", Offset = "0x11E77EC", VA = "0x11E77EC", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000602")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCA9CC", Offset = "0xBCA9CC")]
		private struct <CheckOperationsFinished>d__32 : IAsyncStateMachine
		{
			[Token(Token = "0x40012F5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40012F6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x40012F7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PlayFabListenerSingleton <>4__this;

			[Token(Token = "0x40012F8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <delay>5__2;

			[Token(Token = "0x40012F9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x40012FA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private TaskAwaiter<GetOperationsFinishedResult> <>u__2;

			[Token(Token = "0x600149E")]
			[Address(RVA = "0x11E5B50", Offset = "0x11E5B50", VA = "0x11E5B50", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x600149F")]
			[Address(RVA = "0x11E645C", Offset = "0x11E645C", VA = "0x11E645C", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x40012D4")]
		private const int RePollDelayMs = 6000;

		[Token(Token = "0x40012D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static PlayFabListenerSingleton _instance;

		[Token(Token = "0x40012D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly ReactiveSource<GetOwnGroupStatusResult?> OwnGroupStatusSource;

		[Token(Token = "0x40012D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static readonly ReactiveSource<bool> HasNewInvitationsSource;

		[Token(Token = "0x40012D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly List<string> _newPendingInvitations;

		[Token(Token = "0x40012D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly List<string> _oldPendingInvitations;

		[Token(Token = "0x40012DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly HashSet<string> _operationIds;

		[Token(Token = "0x40012DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly List<object> _subscribers;

		[Token(Token = "0x40012DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private readonly List<Task> _waitForRePollTasks;

		[Token(Token = "0x40012DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Task _delayTask;

		[Token(Token = "0x40012DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool _hasConnectionProblems;

		[Token(Token = "0x40012DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		private bool _isLoggedIn;

		[Token(Token = "0x40012E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private ReactiveSubscription _isLoggedInSubscription;

		[Token(Token = "0x40012E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Task _operationsFinishedTask;

		[Token(Token = "0x40012E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Task _updatePlayFabTask;

		[Token(Token = "0x170003B0")]
		public static PlayFabListenerSingleton Instance
		{
			[Token(Token = "0x6001480")]
			[Address(RVA = "0xFD5E88", Offset = "0xFD5E88", VA = "0xFD5E88")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003B1")]
		public static Reactive<GetOwnGroupStatusResult?> OwnGroupStatus
		{
			[Token(Token = "0x6001481")]
			[Address(RVA = "0xFD63F8", Offset = "0xFD63F8", VA = "0xFD63F8")]
			get
			{
				return default(Reactive<GetOwnGroupStatusResult?>);
			}
		}

		[Token(Token = "0x170003B2")]
		public static Reactive<bool> HasNewInvitations
		{
			[Token(Token = "0x6001482")]
			[Address(RVA = "0xFD647C", Offset = "0xFD647C", VA = "0xFD647C")]
			get
			{
				return default(Reactive<bool>);
			}
		}

		[Token(Token = "0x6001483")]
		[Address(RVA = "0xFD6500", Offset = "0xFD6500", VA = "0xFD6500")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001484")]
		[Address(RVA = "0xFD68BC", Offset = "0xFD68BC", VA = "0xFD68BC")]
		private void Update()
		{
		}

		[Token(Token = "0x6001485")]
		[Address(RVA = "0xFD6A4C", Offset = "0xFD6A4C", VA = "0xFD6A4C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001486")]
		[Address(RVA = "0xFD6368", Offset = "0xFD6368", VA = "0xFD6368")]
		private static PlayFabListenerSingleton Instantiate()
		{
			return null;
		}

		[Token(Token = "0x6001487")]
		[Address(RVA = "0xFD6A58", Offset = "0xFD6A58", VA = "0xFD6A58")]
		private void IsLoggedInChanged(bool loggedIn)
		{
		}

		[Token(Token = "0x6001488")]
		[Address(RVA = "0xFD6B30", Offset = "0xFD6B30", VA = "0xFD6B30")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xBE094C", Offset = "0xBE094C")]
		private Task UpdatePlayFab()
		{
			return null;
		}

		[Token(Token = "0x6001489")]
		[Address(RVA = "0xFD5F7C", Offset = "0xFD5F7C", VA = "0xFD5F7C")]
		public void MarkInvitationsAsSeen()
		{
		}

		[Token(Token = "0x600148A")]
		[Address(RVA = "0xFD6C34", Offset = "0xFD6C34", VA = "0xFD6C34")]
		public Task RePollImmediatelyWhenComplete(Task task, bool invalidateCurrentUpdate = false)
		{
			return null;
		}

		[Token(Token = "0x600148B")]
		[Address(RVA = "0xFD6D78", Offset = "0xFD6D78", VA = "0xFD6D78")]
		public Task RePollImmediatelyWhenOperationComplete(Task<OperationStartedResult> task, bool invalidateCurrentUpdate = false)
		{
			return null;
		}

		[Token(Token = "0x600148C")]
		[Address(RVA = "0xFD6948", Offset = "0xFD6948", VA = "0xFD6948")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xBE09AC", Offset = "0xBE09AC")]
		private Task RePollImmediatelyWhenCompleteAsync()
		{
			return null;
		}

		[Token(Token = "0x600148D")]
		[Address(RVA = "0xFD6EC4", Offset = "0xFD6EC4", VA = "0xFD6EC4")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xBE0A0C", Offset = "0xBE0A0C")]
		private Task WaitForOperationTask(Task<OperationStartedResult> task)
		{
			return null;
		}

		[Token(Token = "0x600148E")]
		[Address(RVA = "0xFD6FD4", Offset = "0xFD6FD4", VA = "0xFD6FD4")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xBE0A6C", Offset = "0xBE0A6C")]
		private Task CheckOperationsFinished()
		{
			return null;
		}

		[Token(Token = "0x600148F")]
		[Address(RVA = "0xFD70D8", Offset = "0xFD70D8", VA = "0xFD70D8")]
		public void Subscribe(object subscriber)
		{
		}

		[Token(Token = "0x6001490")]
		[Address(RVA = "0xFD71BC", Offset = "0xFD71BC", VA = "0xFD71BC")]
		public void UnSubscribe(object subscriber)
		{
		}

		[Token(Token = "0x6001491")]
		[Address(RVA = "0xFD725C", Offset = "0xFD725C", VA = "0xFD725C")]
		public PlayFabListenerSingleton()
		{
		}
	}
	[Token(Token = "0x2000603")]
	public class PlayFabMatchMaking : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000604")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCA9DC", Offset = "0xBCA9DC")]
		private sealed class <>c
		{
			[Token(Token = "0x4001310")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001311")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<GetMatchResult, bool> <>9__28_0;

			[Token(Token = "0x4001312")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<GetMatchResult, PhotonRoom?> <>9__30_0;

			[Token(Token = "0x4001313")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Func<(GetMatchResult, bool), GetMatchResult> <>9__34_0;

			[Token(Token = "0x4001314")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static Func<(GetMatchResult, bool, bool), bool> <>9__48_0;

			[Token(Token = "0x4001315")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public static Func<(bool, GetMatchResult), bool> <>9__50_0;

			[Token(Token = "0x4001316")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public static Func<(bool, bool), bool> <>9__52_0;

			[Token(Token = "0x60014C0")]
			[Address(RVA = "0x11E7858", Offset = "0x11E7858", VA = "0x11E7858")]
			public <>c()
			{
			}

			[Token(Token = "0x60014C1")]
			[Address(RVA = "0x11E7860", Offset = "0x11E7860", VA = "0x11E7860")]
			internal bool <get_HasMatch>b__28_0(GetMatchResult x)
			{
				return default(bool);
			}

			[Token(Token = "0x60014C2")]
			[Address(RVA = "0x11E786C", Offset = "0x11E786C", VA = "0x11E786C")]
			internal PhotonRoom? <get_MatchedRoom>b__30_0(GetMatchResult x)
			{
				return null;
			}

			[Token(Token = "0x60014C3")]
			[Address(RVA = "0x11E78EC", Offset = "0x11E78EC", VA = "0x11E78EC")]
			internal GetMatchResult <get_MatchedMatch>b__34_0((GetMatchResult, bool) x)
			{
				return null;
			}

			[Token(Token = "0x60014C4")]
			[Address(RVA = "0x11E78F8", Offset = "0x11E78F8", VA = "0x11E78F8")]
			internal bool <get_IsNotInRankedMatch>b__48_0((GetMatchResult, bool, bool) t)
			{
				return default(bool);
			}

			[Token(Token = "0x60014C5")]
			[Address(RVA = "0x11E7914", Offset = "0x11E7914", VA = "0x11E7914")]
			internal bool <get_IsMatchmakingOrLoading>b__50_0((bool, GetMatchResult) x)
			{
				return default(bool);
			}

			[Token(Token = "0x60014C6")]
			[Address(RVA = "0x11E792C", Offset = "0x11E792C", VA = "0x11E792C")]
			internal bool <OnEnable>b__52_0((bool, bool) x)
			{
				return default(bool);
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000605")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCA9EC", Offset = "0xBCA9EC")]
		private struct <TryStartMatchMakingAsync>d__58 : IAsyncStateMachine
		{
			[Token(Token = "0x4001317")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001318")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder<OperationStartedResult> <>t__builder;

			[Token(Token = "0x4001319")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool failedToJoinMatch;

			[Token(Token = "0x400131A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public PlayFabMatchMaking <>4__this;

			[Token(Token = "0x400131B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private OperationStartedResult <operationStartedResult>5__2;

			[Token(Token = "0x400131C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x400131D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private TaskAwaiter<StartMatchMakingResult> <>u__2;

			[Token(Token = "0x60014C7")]
			[Address(RVA = "0x11E7944", Offset = "0x11E7944", VA = "0x11E7944", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x60014C8")]
			[Address(RVA = "0x11E7EA0", Offset = "0x11E7EA0", VA = "0x11E7EA0", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x40012FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private PlayFabStatusListener playFabStatusListener;

		[Token(Token = "0x40012FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly ReactiveSource<bool> _failedReconnect;

		[Token(Token = "0x40012FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly ReactiveSource<bool> _failedToJoinLastMatch;

		[Token(Token = "0x40012FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly List<string> _failedToJoinMatchIds;

		[Token(Token = "0x40012FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private readonly ReactiveSource<bool> _hasCheckedMatch;

		[Token(Token = "0x4001300")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private readonly ReactiveSource<bool> _hasCompletedStartup;

		[Token(Token = "0x4001301")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private readonly ReactiveSource<bool> _isMatchMaking;

		[Token(Token = "0x4001302")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private readonly ReactiveSource<bool> _isReadyToJoin;

		[Token(Token = "0x4001303")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private readonly ReactiveSource<GetMatchResult> _match;

		[Token(Token = "0x4001304")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private readonly ReactiveSource<int> _matchMakingSeconds;

		[Token(Token = "0x4001305")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private readonly ReactiveSource<bool> _requireExistingRoom;

		[Token(Token = "0x4001306")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private readonly ReactiveTransaction _transaction;

		[Token(Token = "0x4001307")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private readonly ReactiveSource<bool> _waitForOpponent;

		[Token(Token = "0x4001308")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private CancellationTokenSource _cancellation;

		[Token(Token = "0x4001309")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private string _groupId;

		[Token(Token = "0x400130A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private bool _isLeaderOfGroup;

		[Token(Token = "0x400130B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private ReactiveSubscription _isPlayingSubscription;

		[Token(Token = "0x400130C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private bool _mayMatchMake;

		[Token(Token = "0x400130D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private ReactiveSubscription _reactiveSubscription;

		[Token(Token = "0x400130E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private bool _suppressUpdate;

		[Token(Token = "0x400130F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private ReactiveSubscription _titleDataSubscription;

		[Token(Token = "0x170003B3")]
		public Reactive<bool> HasCompletedStartup
		{
			[Token(Token = "0x60014A0")]
			[Address(RVA = "0xFD74F8", Offset = "0xFD74F8", VA = "0xFD74F8")]
			get
			{
				return default(Reactive<bool>);
			}
		}

		[Token(Token = "0x170003B4")]
		public Reactive<bool> IsMatchMaking
		{
			[Token(Token = "0x60014A1")]
			[Address(RVA = "0xFD754C", Offset = "0xFD754C", VA = "0xFD754C")]
			get
			{
				return default(Reactive<bool>);
			}
		}

		[Token(Token = "0x170003B5")]
		public Reactive<bool> IsReadyToJoin
		{
			[Token(Token = "0x60014A2")]
			[Address(RVA = "0xFD75A0", Offset = "0xFD75A0", VA = "0xFD75A0")]
			get
			{
				return default(Reactive<bool>);
			}
		}

		[Token(Token = "0x170003B6")]
		public Reactive<bool> HasMatch
		{
			[Token(Token = "0x60014A3")]
			[Address(RVA = "0xFD75F4", Offset = "0xFD75F4", VA = "0xFD75F4")]
			get
			{
				return default(Reactive<bool>);
			}
		}

		[Token(Token = "0x170003B7")]
		public Reactive<PhotonRoom?> MatchedRoom
		{
			[Token(Token = "0x60014A4")]
			[Address(RVA = "0xFD7740", Offset = "0xFD7740", VA = "0xFD7740")]
			get
			{
				return default(Reactive<PhotonRoom?>);
			}
		}

		[Token(Token = "0x170003B8")]
		public Reactive<GetMatchResult> PendingMatch
		{
			[Token(Token = "0x60014A5")]
			[Address(RVA = "0xFD788C", Offset = "0xFD788C", VA = "0xFD788C")]
			get
			{
				return default(Reactive<GetMatchResult>);
			}
		}

		[Token(Token = "0x170003B9")]
		public Reactive<GetMatchResult> MatchedMatch
		{
			[Token(Token = "0x60014A6")]
			[Address(RVA = "0xFD78E0", Offset = "0xFD78E0", VA = "0xFD78E0")]
			get
			{
				return default(Reactive<GetMatchResult>);
			}
		}

		[Token(Token = "0x170003BA")]
		public Reactive<int> MatchMakingSeconds
		{
			[Token(Token = "0x60014A7")]
			[Address(RVA = "0xFD7A7C", Offset = "0xFD7A7C", VA = "0xFD7A7C")]
			get
			{
				return default(Reactive<int>);
			}
		}

		[Token(Token = "0x170003BB")]
		public Reactive<int> LoadMatchSeconds
		{
			[Token(Token = "0x60014A8")]
			[Address(RVA = "0xFD7AD0", Offset = "0xFD7AD0", VA = "0xFD7AD0")]
			get
			{
				return default(Reactive<int>);
			}
		}

		[Token(Token = "0x170003BC")]
		public Reactive<bool> FailedReconnect
		{
			[Token(Token = "0x60014A9")]
			[Address(RVA = "0xFD7B18", Offset = "0xFD7B18", VA = "0xFD7B18")]
			get
			{
				return default(Reactive<bool>);
			}
		}

		[Token(Token = "0x170003BD")]
		public Reactive<bool> RequireExistingRoom
		{
			[Token(Token = "0x60014AA")]
			[Address(RVA = "0xFD7B6C", Offset = "0xFD7B6C", VA = "0xFD7B6C")]
			get
			{
				return default(Reactive<bool>);
			}
		}

		[Token(Token = "0x170003BE")]
		public Reactive<bool> WaitForOpponent
		{
			[Token(Token = "0x60014AB")]
			[Address(RVA = "0xFD7BC0", Offset = "0xFD7BC0", VA = "0xFD7BC0")]
			get
			{
				return default(Reactive<bool>);
			}
		}

		[Token(Token = "0x170003BF")]
		public Reactive<bool> FailedToJoinLastMatch
		{
			[Token(Token = "0x60014AC")]
			[Address(RVA = "0xFD7C14", Offset = "0xFD7C14", VA = "0xFD7C14")]
			get
			{
				return default(Reactive<bool>);
			}
		}

		[Token(Token = "0x170003C0")]
		public Reactive<bool> IsNotInRankedMatch
		{
			[Token(Token = "0x60014AD")]
			[Address(RVA = "0xFD7C68", Offset = "0xFD7C68", VA = "0xFD7C68")]
			get
			{
				return default(Reactive<bool>);
			}
		}

		[Token(Token = "0x170003C1")]
		public Reactive<bool> IsMatchmakingOrLoading
		{
			[Token(Token = "0x60014AE")]
			[Address(RVA = "0xFD7E20", Offset = "0xFD7E20", VA = "0xFD7E20")]
			get
			{
				return default(Reactive<bool>);
			}
		}

		[Token(Token = "0x60014AF")]
		[Address(RVA = "0xFD7FBC", Offset = "0xFD7FBC", VA = "0xFD7FBC")]
		private void Start()
		{
		}

		[Token(Token = "0x60014B0")]
		[Address(RVA = "0xFD80C4", Offset = "0xFD80C4", VA = "0xFD80C4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60014B1")]
		[Address(RVA = "0xFD849C", Offset = "0xFD849C", VA = "0xFD849C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60014B2")]
		[Address(RVA = "0xFD86EC", Offset = "0xFD86EC", VA = "0xFD86EC")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60014B3")]
		[Address(RVA = "0xFD86F8", Offset = "0xFD86F8", VA = "0xFD86F8")]
		public void DropFailedReconnectMessage()
		{
		}

		[Token(Token = "0x60014B4")]
		[Address(RVA = "0xFD8750", Offset = "0xFD8750", VA = "0xFD8750")]
		private void SetMatch(MatchInfo matchInfo)
		{
		}

		[Token(Token = "0x60014B5")]
		[Address(RVA = "0xFD8AC8", Offset = "0xFD8AC8", VA = "0xFD8AC8")]
		private void GroupUpdated(GetOwnGroupStatusResult? getOwnGroupStatusResult)
		{
		}

		[Token(Token = "0x60014B6")]
		[Address(RVA = "0xFD9100", Offset = "0xFD9100", VA = "0xFD9100")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xBE0B0C", Offset = "0xBE0B0C")]
		private Task<OperationStartedResult> TryStartMatchMakingAsync(bool failedToJoinMatch = false)
		{
			return null;
		}

		[Token(Token = "0x60014B7")]
		[Address(RVA = "0xFD9244", Offset = "0xFD9244", VA = "0xFD9244")]
		private void CancelMatchLoad()
		{
		}

		[Token(Token = "0x60014B8")]
		[Address(RVA = "0xFD93F4", Offset = "0xFD93F4", VA = "0xFD93F4")]
		public void JoinRoomFailed()
		{
		}

		[Token(Token = "0x60014B9")]
		[Address(RVA = "0xFD9744", Offset = "0xFD9744", VA = "0xFD9744")]
		public void StartMatchMaking()
		{
		}

		[Token(Token = "0x60014BA")]
		[Address(RVA = "0xFD97F0", Offset = "0xFD97F0", VA = "0xFD97F0")]
		public void PlayWithBots()
		{
		}

		[Token(Token = "0x60014BB")]
		[Address(RVA = "0xFD8EF0", Offset = "0xFD8EF0", VA = "0xFD8EF0")]
		public void CancelMatchMaking()
		{
		}

		[Token(Token = "0x60014BC")]
		[Address(RVA = "0xFD98BC", Offset = "0xFD98BC", VA = "0xFD98BC")]
		public PlayFabMatchMaking()
		{
		}

		[Token(Token = "0x60014BD")]
		[Address(RVA = "0xFD9B34", Offset = "0xFD9B34", VA = "0xFD9B34")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE0B6C", Offset = "0xBE0B6C")]
		private void <Start>b__51_0(int x)
		{
		}

		[Token(Token = "0x60014BE")]
		[Address(RVA = "0xFD9B98", Offset = "0xFD9B98", VA = "0xFD9B98")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE0B7C", Offset = "0xBE0B7C")]
		private void <OnEnable>b__52_1(bool x)
		{
		}
	}
	[Token(Token = "0x2000606")]
	public class PlayFabMatchMakingListener : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000607")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCA9FC", Offset = "0xBCA9FC")]
		private sealed class <>c
		{
			[Token(Token = "0x4001323")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001324")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<GetMatchResult, bool> <>9__8_0;

			[Token(Token = "0x60014D0")]
			[Address(RVA = "0x11E7F5C", Offset = "0x11E7F5C", VA = "0x11E7F5C")]
			public <>c()
			{
			}

			[Token(Token = "0x60014D1")]
			[Address(RVA = "0x11E7F64", Offset = "0x11E7F64", VA = "0x11E7F64")]
			internal bool <get_HasMatch>b__8_0(GetMatchResult x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x400131E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private PlayFabStatusListener playFabStatusListener;

		[Token(Token = "0x400131F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly ReactiveSource<bool> _isMatchMaking;

		[Token(Token = "0x4001320")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly ReactiveSource<GetMatchResult> _match;

		[Token(Token = "0x4001321")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly ReactiveTransaction _transaction;

		[Token(Token = "0x4001322")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private ReactiveSubscription _reactiveSubscription;

		[Token(Token = "0x170003C2")]
		public Reactive<bool> IsMatchMaking
		{
			[Token(Token = "0x60014C9")]
			[Address(RVA = "0xFD9C10", Offset = "0xFD9C10", VA = "0xFD9C10")]
			get
			{
				return default(Reactive<bool>);
			}
		}

		[Token(Token = "0x170003C3")]
		public Reactive<bool> HasMatch
		{
			[Token(Token = "0x60014CA")]
			[Address(RVA = "0xFD9C64", Offset = "0xFD9C64", VA = "0xFD9C64")]
			get
			{
				return default(Reactive<bool>);
			}
		}

		[Token(Token = "0x60014CB")]
		[Address(RVA = "0xFD9DB0", Offset = "0xFD9DB0", VA = "0xFD9DB0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60014CC")]
		[Address(RVA = "0xFD9EA0", Offset = "0xFD9EA0", VA = "0xFD9EA0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60014CD")]
		[Address(RVA = "0xFD9EAC", Offset = "0xFD9EAC", VA = "0xFD9EAC")]
		private void UpdateGroup(GetOwnGroupStatusResult? getOwnGroupStatusResult)
		{
		}

		[Token(Token = "0x60014CE")]
		[Address(RVA = "0xFDA314", Offset = "0xFDA314", VA = "0xFDA314")]
		public PlayFabMatchMakingListener()
		{
		}
	}
	[Token(Token = "0x2000608")]
	public class PlayFabMatchUsersListener : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000609")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCAA0C", Offset = "0xBCAA0C")]
		private sealed class <>c
		{
			[Token(Token = "0x400132D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x400132E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<IUser, Reactive<bool>> <>9__10_0;

			[Token(Token = "0x60014DD")]
			[Address(RVA = "0x11E7FD0", Offset = "0x11E7FD0", VA = "0x11E7FD0")]
			public <>c()
			{
			}

			[Token(Token = "0x60014DE")]
			[Address(RVA = "0x11E7FD8", Offset = "0x11E7FD8", VA = "0x11E7FD8")]
			internal Reactive<bool> <Awake>b__10_0(IUser x)
			{
				return default(Reactive<bool>);
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x200060A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCAA1C", Offset = "0xBCAA1C")]
		private struct <UpdatePlayFab>d__14 : IAsyncStateMachine
		{
			[Token(Token = "0x400132F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001330")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x4001331")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PlayFabMatchUsersListener <>4__this;

			[Token(Token = "0x4001332")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private TaskAwaiter<GetMatchUsersStatusResult> <>u__1;

			[Token(Token = "0x60014DF")]
			[Address(RVA = "0x11E80A8", Offset = "0x11E80A8", VA = "0x11E80A8", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x60014E0")]
			[Address(RVA = "0x11E82D8", Offset = "0x11E82D8", VA = "0x11E82D8", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4001325")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly TimeSpan RePollDelay;

		[Token(Token = "0x4001326")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly GetMatchUsersStatusResult NoUsers;

		[Token(Token = "0x4001327")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private PlayFabStatusListener playFabStatusListener;

		[Token(Token = "0x4001328")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly ReactiveSource<GetMatchUsersStatusResult> _usersStatus;

		[Token(Token = "0x4001329")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private ReactiveSubscription _isLoggedInSubscription;

		[Token(Token = "0x400132A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool _isLoggedIn;

		[Token(Token = "0x400132B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Task _delayTask;

		[Token(Token = "0x400132C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Task _updatePlayFabTask;

		[Token(Token = "0x170003C4")]
		public Reactive<GetMatchUsersStatusResult> UsersStatus
		{
			[Token(Token = "0x60014D2")]
			[Address(RVA = "0xFDA414", Offset = "0xFDA414", VA = "0xFDA414")]
			get
			{
				return default(Reactive<GetMatchUsersStatusResult>);
			}
		}

		[Token(Token = "0x60014D3")]
		[Address(RVA = "0xFDA468", Offset = "0xFDA468", VA = "0xFDA468")]
		private void Awake()
		{
		}

		[Token(Token = "0x60014D4")]
		[Address(RVA = "0xFDA698", Offset = "0xFDA698", VA = "0xFDA698")]
		private void Update()
		{
		}

		[Token(Token = "0x60014D5")]
		[Address(RVA = "0xFDA884", Offset = "0xFDA884", VA = "0xFDA884")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60014D6")]
		[Address(RVA = "0xFDA890", Offset = "0xFDA890", VA = "0xFDA890")]
		private void IsLoggedInChanged(bool loggedIn)
		{
		}

		[Token(Token = "0x60014D7")]
		[Address(RVA = "0xFDA780", Offset = "0xFDA780", VA = "0xFDA780")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xBE0B9C", Offset = "0xBE0B9C")]
		private Task UpdatePlayFab()
		{
			return null;
		}

		[Token(Token = "0x60014D8")]
		[Address(RVA = "0xFDA964", Offset = "0xFDA964", VA = "0xFDA964")]
		public void RePollImmediatelyWhenComplete(Task task)
		{
		}

		[Token(Token = "0x60014D9")]
		[Address(RVA = "0xFDAAF4", Offset = "0xFDAAF4", VA = "0xFDAAF4")]
		public void RePollImmediatelyWhenOperationComplete(Task<OperationStartedResult> task)
		{
		}

		[Token(Token = "0x60014DA")]
		[Address(RVA = "0xFDAC90", Offset = "0xFDAC90", VA = "0xFDAC90")]
		public PlayFabMatchUsersListener()
		{
		}
	}
	[Token(Token = "0x200060B")]
	public class PlayFabRoundResultRecorder
	{
		[StructLayout(3)]
		[Token(Token = "0x200060C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCAA2C", Offset = "0xBCAA2C")]
		private struct <ClearProgressionChangeAsync>d__6 : IAsyncStateMachine
		{
			[Token(Token = "0x4001335")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001336")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder<SpeculativeProgressionChange> <>t__builder;

			[Token(Token = "0x4001337")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PlayFabRoundResultRecorder <>4__this;

			[Token(Token = "0x4001338")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x60014EA")]
			[Address(RVA = "0x11E82E4", Offset = "0x11E82E4", VA = "0x11E82E4", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x60014EB")]
			[Address(RVA = "0x11E8494", Offset = "0x11E8494", VA = "0x11E8494", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x200060D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCAA3C", Offset = "0xBCAA3C")]
		private struct <RecordEndOfRoundAsync>d__10 : IAsyncStateMachine
		{
			[Token(Token = "0x4001339")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x400133A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder<SpeculativeProgressionChange> <>t__builder;

			[Token(Token = "0x400133B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PlayFabRoundResultRecorder <>4__this;

			[Token(Token = "0x400133C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public EndOfRoundArgument endOfRoundArgument;

			[Token(Token = "0x400133D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x400133E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private TaskAwaiter<SpeculativeProgressionChange> <>u__2;

			[Token(Token = "0x60014EC")]
			[Address(RVA = "0x11E84F0", Offset = "0x11E84F0", VA = "0x11E84F0", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x60014ED")]
			[Address(RVA = "0x11E87F0", Offset = "0x11E87F0", VA = "0x11E87F0", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4001333")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IDisposable _subscription;

		[Token(Token = "0x4001334")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD68C0", Offset = "0xBD68C0")]
		private Task<SpeculativeProgressionChange> <ProgressionChange>k__BackingField;

		[Token(Token = "0x170003C5")]
		public Task<SpeculativeProgressionChange> ProgressionChange
		{
			[Token(Token = "0x60014E1")]
			[Address(RVA = "0xFDAED4", Offset = "0xFDAED4", VA = "0xFDAED4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE0C0C", Offset = "0xBE0C0C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60014E2")]
			[Address(RVA = "0xFDAEDC", Offset = "0xFDAEDC", VA = "0xFDAEDC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE0C1C", Offset = "0xBE0C1C")]
			private set
			{
			}
		}

		[Token(Token = "0x60014E3")]
		[Address(RVA = "0xFDAEE4", Offset = "0xFDAEE4", VA = "0xFDAEE4")]
		public void ClearProgressionChange()
		{
		}

		[Token(Token = "0x60014E4")]
		[Address(RVA = "0xFDAF08", Offset = "0xFDAF08", VA = "0xFDAF08")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xBE0C2C", Offset = "0xBE0C2C")]
		private Task<SpeculativeProgressionChange> ClearProgressionChangeAsync()
		{
			return null;
		}

		[Token(Token = "0x60014E5")]
		[Address(RVA = "0xFDB028", Offset = "0xFDB028", VA = "0xFDB028")]
		public void Start()
		{
		}

		[Token(Token = "0x60014E6")]
		[Address(RVA = "0xFDB1D4", Offset = "0xFDB1D4", VA = "0xFDB1D4")]
		public void Stop()
		{
		}

		[Token(Token = "0x60014E7")]
		[Address(RVA = "0xFDB288", Offset = "0xFDB288", VA = "0xFDB288")]
		private void OnRoundEnd(EventRoundEnd callback)
		{
		}

		[Token(Token = "0x60014E8")]
		[Address(RVA = "0xFDB628", Offset = "0xFDB628", VA = "0xFDB628")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xBE0C8C", Offset = "0xBE0C8C")]
		private Task<SpeculativeProgressionChange> RecordEndOfRoundAsync(EndOfRoundArgument endOfRoundArgument)
		{
			return null;
		}

		[Token(Token = "0x60014E9")]
		[Address(RVA = "0xFDB754", Offset = "0xFDB754", VA = "0xFDB754")]
		public PlayFabRoundResultRecorder()
		{
		}
	}
	[Token(Token = "0x200060E")]
	public class PlayFabStartRematch : MonoBehaviour
	{
		[Token(Token = "0x200060F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCAA4C", Offset = "0xBCAA4C")]
		private sealed class <>c__DisplayClass2_0
		{
			[Token(Token = "0x400133F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TupleElementNamesAttribute", RVA = "0xBD68D0", Offset = "0xBD68D0")]
			public (string, AssetRefGameModeSetup, QuantumGame) e;

			[Token(Token = "0x60014F2")]
			[Address(RVA = "0x11E884C", Offset = "0x11E884C", VA = "0x11E884C")]
			public <>c__DisplayClass2_0()
			{
			}

			[Token(Token = "0x60014F3")]
			[Address(RVA = "0x11E8854", Offset = "0x11E8854", VA = "0x11E8854")]
			internal bool <SceneLoaderOnLevelLoadStarted>b__0(AssetRefMap x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60014EE")]
		[Address(RVA = "0xFDB75C", Offset = "0xFDB75C", VA = "0xFDB75C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60014EF")]
		[Address(RVA = "0xFDB848", Offset = "0xFDB848", VA = "0xFDB848")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60014F0")]
		[Address(RVA = "0xFDB934", Offset = "0xFDB934", VA = "0xFDB934")]
		private void SceneLoaderOnLevelLoadStarted(object sender, [AttributeAttribute(Name = "TupleElementNamesAttribute", RVA = "0xBE43D8", Offset = "0xBE43D8")] (string, AssetRefGameModeSetup, QuantumGame) e)
		{
		}

		[Token(Token = "0x60014F1")]
		[Address(RVA = "0xFDBBC0", Offset = "0xFDBBC0", VA = "0xFDBBC0")]
		public PlayFabStartRematch()
		{
		}
	}
	[Token(Token = "0x2000610")]
	public class PlayFabStatusListener : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000611")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCAA5C", Offset = "0xBCAA5C")]
		private sealed class <>c
		{
			[Token(Token = "0x400134B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x400134C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<GetOwnGroupStatusResult?, bool> <>9__9_0;

			[Token(Token = "0x400134D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<bool, bool> <>9__9_1;

			[Token(Token = "0x400134E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Func<GetOwnGroupStatusResult?, bool> <>9__9_2;

			[Token(Token = "0x400134F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static Func<GetOwnGroupStatusResult?, bool> <>9__9_3;

			[Token(Token = "0x4001350")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public static Func<GroupMember, bool> <>9__9_7;

			[Token(Token = "0x4001351")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public static Func<GetOwnGroupStatusResult?, bool> <>9__9_4;

			[Token(Token = "0x4001352")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public static Func<GetOwnGroupStatusResult?, PhotonRoom?> <>9__9_5;

			[Token(Token = "0x4001353")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public static Func<GetOwnGroupStatusResult?, PhotonRoom?> <>9__9_6;

			[Token(Token = "0x4001354")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public static Func<(bool, bool), bool> <>9__21_0;

			[Token(Token = "0x4001355")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public static Func<(bool, bool), bool> <>9__23_0;

			[Token(Token = "0x4001356")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public static Func<GetOwnGroupStatusResult?, bool> <>9__25_0;

			[Token(Token = "0x4001357")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public static Func<GetOwnGroupStatusResult?, bool> <>9__31_0;

			[Token(Token = "0x4001358")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public static Func<GetOwnGroupStatusResult?, int> <>9__35_0;

			[Token(Token = "0x4001359")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			public static Func<GetOwnGroupStatusResult?, int> <>9__37_0;

			[Token(Token = "0x400135A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			public static Func<RegionLatencies, bool> <>9__43_0;

			[Token(Token = "0x600150C")]
			[Address(RVA = "0x11E892C", Offset = "0x11E892C", VA = "0x11E892C")]
			public <>c()
			{
			}

			[Token(Token = "0x600150D")]
			[Address(RVA = "0x11E8934", Offset = "0x11E8934", VA = "0x11E8934")]
			internal bool <.ctor>b__9_0(GetOwnGroupStatusResult? x)
			{
				return default(bool);
			}

			[Token(Token = "0x600150E")]
			[Address(RVA = "0x11E8A34", Offset = "0x11E8A34", VA = "0x11E8A34")]
			internal bool <.ctor>b__9_1(bool x)
			{
				return default(bool);
			}

			[Token(Token = "0x600150F")]
			[Address(RVA = "0x11E8A40", Offset = "0x11E8A40", VA = "0x11E8A40")]
			internal bool <.ctor>b__9_2(GetOwnGroupStatusResult? x)
			{
				return default(bool);
			}

			[Token(Token = "0x6001510")]
			[Address(RVA = "0x11E8B14", Offset = "0x11E8B14", VA = "0x11E8B14")]
			internal bool <.ctor>b__9_3(GetOwnGroupStatusResult? x)
			{
				return default(bool);
			}

			[Token(Token = "0x6001511")]
			[Address(RVA = "0x11E8C1C", Offset = "0x11E8C1C", VA = "0x11E8C1C")]
			internal bool <.ctor>b__9_4(GetOwnGroupStatusResult? x)
			{
				return default(bool);
			}

			[Token(Token = "0x6001512")]
			[Address(RVA = "0x11E8E10", Offset = "0x11E8E10", VA = "0x11E8E10")]
			internal bool <.ctor>b__9_7(GroupMember p)
			{
				return default(bool);
			}

			[Token(Token = "0x6001513")]
			[Address(RVA = "0x11E8E20", Offset = "0x11E8E20", VA = "0x11E8E20")]
			internal PhotonRoom? <.ctor>b__9_5(GetOwnGroupStatusResult? x)
			{
				return null;
			}

			[Token(Token = "0x6001514")]
			[Address(RVA = "0x11E9000", Offset = "0x11E9000", VA = "0x11E9000")]
			internal PhotonRoom? <.ctor>b__9_6(GetOwnGroupStatusResult? x)
			{
				return null;
			}

			[Token(Token = "0x6001515")]
			[Address(RVA = "0x11E91DC", Offset = "0x11E91DC", VA = "0x11E91DC")]
			internal bool <get_MayCreateCustomGame>b__21_0((bool, bool) x)
			{
				return default(bool);
			}

			[Token(Token = "0x6001516")]
			[Address(RVA = "0x11E91F4", Offset = "0x11E91F4", VA = "0x11E91F4")]
			internal bool <get_MayMatchMake>b__23_0((bool, bool) x)
			{
				return default(bool);
			}

			[Token(Token = "0x6001517")]
			[Address(RVA = "0x11E920C", Offset = "0x11E920C", VA = "0x11E920C")]
			internal bool <get_IsAlone>b__25_0(GetOwnGroupStatusResult? x)
			{
				return default(bool);
			}

			[Token(Token = "0x6001518")]
			[Address(RVA = "0x11E92C0", Offset = "0x11E92C0", VA = "0x11E92C0")]
			internal bool <get_HasValidUpdate>b__31_0(GetOwnGroupStatusResult? x)
			{
				return default(bool);
			}

			[Token(Token = "0x6001519")]
			[Address(RVA = "0x11E9300", Offset = "0x11E9300", VA = "0x11E9300")]
			internal int <get_GroupPlayerCount>b__35_0(GetOwnGroupStatusResult? x)
			{
				return default(int);
			}

			[Token(Token = "0x600151A")]
			[Address(RVA = "0x11E9410", Offset = "0x11E9410", VA = "0x11E9410")]
			internal int <get_PlayerLevel>b__37_0(GetOwnGroupStatusResult? x)
			{
				return default(int);
			}

			[Token(Token = "0x600151B")]
			[Address(RVA = "0x11E9488", Offset = "0x11E9488", VA = "0x11E9488")]
			internal bool <CreateCustomGameAsync>b__43_0(RegionLatencies x)
			{
				return default(bool);
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000612")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCAA6C", Offset = "0xBCAA6C")]
		private struct <CreateCustomGameAsync>d__43 : IAsyncStateMachine
		{
			[Token(Token = "0x400135B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x400135C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder<OperationStartedResult> <>t__builder;

			[Token(Token = "0x400135D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private TaskAwaiter<RegionLatencies> <>u__1;

			[Token(Token = "0x400135E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private TaskAwaiter<OperationStartedResult> <>u__2;

			[Token(Token = "0x600151C")]
			[Address(RVA = "0x11E9494", Offset = "0x11E9494", VA = "0x11E9494", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x600151D")]
			[Address(RVA = "0x11E9908", Offset = "0x11E9908", VA = "0x11E9908", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4001340")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly SpeculativeReactive<PhotonRoom?> _customGameRoom;

		[Token(Token = "0x4001341")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly SpeculativeReactive<bool> _isLeader;

		[Token(Token = "0x4001342")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly SpeculativeReactive<bool> _isLeaderOrAlone;

		[Token(Token = "0x4001343")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly SpeculativeReactive<bool> _isPartyReady;

		[Token(Token = "0x4001344")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private readonly SpeculativeReactive<bool> _showCustomGame;

		[Token(Token = "0x4001345")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private readonly ReactiveTransaction _transaction;

		[Token(Token = "0x4001346")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool _isLoggedIn;

		[Token(Token = "0x4001347")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private ReactiveSubscription _isLoggedInSubscription;

		[Token(Token = "0x4001348")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool _silenceUpdate;

		[Token(Token = "0x4001349")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD6964", Offset = "0xBD6964")]
		private readonly Reactive<PhotonRoom?> <PartyRoom>k__BackingField;

		[Token(Token = "0x400134A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD6974", Offset = "0xBD6974")]
		private readonly Reactive<bool> <ShowMainMenu>k__BackingField;

		[Token(Token = "0x170003C6")]
		public Reactive<PhotonRoom?> PartyRoom
		{
			[Token(Token = "0x60014F5")]
			[Address(RVA = "0xFDC33C", Offset = "0xFDC33C", VA = "0xFDC33C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE0D0C", Offset = "0xBE0D0C")]
			get
			{
				return default(Reactive<PhotonRoom?>);
			}
		}

		[Token(Token = "0x170003C7")]
		public Reactive<PhotonRoom?> CustomGameRoom
		{
			[Token(Token = "0x60014F6")]
			[Address(RVA = "0xFDC344", Offset = "0xFDC344", VA = "0xFDC344")]
			get
			{
				return default(Reactive<PhotonRoom?>);
			}
		}

		[Token(Token = "0x170003C8")]
		public Reactive<bool> ShowCustomGame
		{
			[Token(Token = "0x60014F7")]
			[Address(RVA = "0xFDC2E8", Offset = "0xFDC2E8", VA = "0xFDC2E8")]
			get
			{
				return default(Reactive<bool>);
			}
		}

		[Token(Token = "0x170003C9")]
		public Reactive<bool> ShowMainMenu
		{
			[Token(Token = "0x60014F8")]
			[Address(RVA = "0xFDC398", Offset = "0xFDC398", VA = "0xFDC398")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE0D1C", Offset = "0xBE0D1C")]
			get
			{
				return default(Reactive<bool>);
			}
		}

		[Token(Token = "0x170003CA")]
		public Reactive<bool> MayCreateCustomGame
		{
			[Token(Token = "0x60014F9")]
			[Address(RVA = "0xFDC3A0", Offset = "0xFDC3A0", VA = "0xFDC3A0")]
			get
			{
				return default(Reactive<bool>);
			}
		}

		[Token(Token = "0x170003CB")]
		public Reactive<bool> MayMatchMake
		{
			[Token(Token = "0x60014FA")]
			[Address(RVA = "0xFDC528", Offset = "0xFDC528", VA = "0xFDC528")]
			get
			{
				return default(Reactive<bool>);
			}
		}

		[Token(Token = "0x170003CC")]
		public Reactive<bool> IsAlone
		{
			[Token(Token = "0x60014FB")]
			[Address(RVA = "0xFDC6B0", Offset = "0xFDC6B0", VA = "0xFDC6B0")]
			get
			{
				return default(Reactive<bool>);
			}
		}

		[Token(Token = "0x170003CD")]
		public Reactive<bool> IsLeader
		{
			[Token(Token = "0x60014FC")]
			[Address(RVA = "0xFDC7D4", Offset = "0xFDC7D4", VA = "0xFDC7D4")]
			get
			{
				return default(Reactive<bool>);
			}
		}

		[Token(Token = "0x170003CE")]
		public Reactive<GetOwnGroupStatusResult?> OwnGroupStatus
		{
			[Token(Token = "0x60014FD")]
			[Address(RVA = "0xFD0908", Offset = "0xFD0908", VA = "0xFD0908")]
			get
			{
				return default(Reactive<GetOwnGroupStatusResult?>);
			}
		}

		[Token(Token = "0x170003CF")]
		public Reactive<bool> HasValidUpdate
		{
			[Token(Token = "0x60014FE")]
			[Address(RVA = "0xFDC828", Offset = "0xFDC828", VA = "0xFDC828")]
			get
			{
				return default(Reactive<bool>);
			}
		}

		[Token(Token = "0x170003D0")]
		public Reactive<bool> HasNewInvitations
		{
			[Token(Token = "0x60014FF")]
			[Address(RVA = "0xFDC978", Offset = "0xFDC978", VA = "0xFDC978")]
			get
			{
				return default(Reactive<bool>);
			}
		}

		[Token(Token = "0x170003D1")]
		public Reactive<int> GroupPlayerCount
		{
			[Token(Token = "0x6001500")]
			[Address(RVA = "0xFDC9D0", Offset = "0xFDC9D0", VA = "0xFDC9D0")]
			get
			{
				return default(Reactive<int>);
			}
		}

		[Token(Token = "0x170003D2")]
		public Reactive<int> PlayerLevel
		{
			[Token(Token = "0x6001501")]
			[Address(RVA = "0xFDCB10", Offset = "0xFDCB10", VA = "0xFDCB10")]
			get
			{
				return default(Reactive<int>);
			}
		}

		[Token(Token = "0x60014F4")]
		[Address(RVA = "0xFDBBC8", Offset = "0xFDBBC8", VA = "0xFDBBC8")]
		public PlayFabStatusListener()
		{
		}

		[Token(Token = "0x6001502")]
		[Address(RVA = "0xFDCC50", Offset = "0xFDCC50", VA = "0xFDCC50")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001503")]
		[Address(RVA = "0xFDCCBC", Offset = "0xFDCCBC", VA = "0xFDCCBC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001504")]
		[Address(RVA = "0xFD5C00", Offset = "0xFD5C00", VA = "0xFD5C00")]
		public Task RePollImmediatelyWhenComplete(Task task, bool invalidateCurrentUpdate = false)
		{
			return null;
		}

		[Token(Token = "0x6001505")]
		[Address(RVA = "0xFD13CC", Offset = "0xFD13CC", VA = "0xFD13CC")]
		public Task RePollImmediatelyWhenOperationComplete(Task<OperationStartedResult> task, bool invalidateCurrentUpdate = false)
		{
			return null;
		}

		[Token(Token = "0x6001506")]
		[Address(RVA = "0xFDCD28", Offset = "0xFDCD28", VA = "0xFDCD28")]
		public void StartCustomGame()
		{
		}

		[Token(Token = "0x6001507")]
		[Address(RVA = "0xFDCEDC", Offset = "0xFDCEDC", VA = "0xFDCEDC")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xBE0D2C", Offset = "0xBE0D2C")]
		private static Task<OperationStartedResult> CreateCustomGameAsync()
		{
			return null;
		}

		[Token(Token = "0x6001508")]
		[Address(RVA = "0xFDD000", Offset = "0xFDD000", VA = "0xFDD000")]
		public void LeaveCustomGame()
		{
		}

		[Token(Token = "0x6001509")]
		[Address(RVA = "0xFDD25C", Offset = "0xFDD25C", VA = "0xFDD25C")]
		public void LeaveParty()
		{
		}

		[Token(Token = "0x600150A")]
		[Address(RVA = "0xFDD278", Offset = "0xFDD278", VA = "0xFDD278")]
		public void MarkInvitationsAsSeen()
		{
		}
	}
	[Token(Token = "0x2000613")]
	public static class PlayFabTask
	{
		[Token(Token = "0x400135F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Task LastTask;
	}
	[Token(Token = "0x2000614")]
	public static class PlayFabTask<TRes>
	{
		[Token(Token = "0x2000615")]
		public delegate void Request<in TReq>(TReq request, Action<TRes> resultCallback, Action<PlayFabError> errorCallback, [System.Runtime.InteropServices.Optional] object customData, [System.Runtime.InteropServices.Optional] Dictionary<string, string> extraHeaders);

		[StructLayout(3)]
		[Token(Token = "0x2000616")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCAA7C", Offset = "0xBCAA7C")]
		private struct <CreateInternal>d__2<TReq> : IAsyncStateMachine
		{
			[Token(Token = "0x4001360")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001361")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public AsyncTaskMethodBuilder<TRes> <>t__builder;

			[Token(Token = "0x4001362")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Request<TReq> request;

			[Token(Token = "0x4001363")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public TReq requestData;

			[Token(Token = "0x4001364")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public object customData;

			[Token(Token = "0x4001365")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Dictionary<string, string> extraHeaders;

			[Token(Token = "0x4001366")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <delayMilliseconds>5__2;

			[Token(Token = "0x4001367")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x4001368")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private TaskAwaiter<TRes> <>u__2;

			[Token(Token = "0x6001526")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001527")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x2000617")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCAA8C", Offset = "0xBCAA8C")]
		private sealed class <>c__DisplayClass3_0<TReq>
		{
			[Token(Token = "0x4001369")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public TaskCompletionSource<TRes> taskCompletionSource;

			[Token(Token = "0x6001528")]
			public <>c__DisplayClass3_0()
			{
			}

			[Token(Token = "0x6001529")]
			internal void <RequestResponseAsync>b__0(TRes res)
			{
			}

			[Token(Token = "0x600152A")]
			internal void <RequestResponseAsync>b__1(PlayFabError error)
			{
			}
		}

		[Token(Token = "0x600151F")]
		public static Task<TRes> Create<TReq>(Request<TReq> request, TReq requestData, [System.Runtime.InteropServices.Optional] object customData, [System.Runtime.InteropServices.Optional] Dictionary<string, string> extraHeaders)
		{
			return null;
		}

		[Token(Token = "0x6001520")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xBE0D9C", Offset = "0xBE0D9C")]
		private static Task<TRes> CreateInternal<TReq>(Request<TReq> request, TReq requestData, object customData, Dictionary<string, string> extraHeaders)
		{
			return null;
		}

		[Token(Token = "0x6001521")]
		private static Task<TRes> RequestResponseAsync<TReq>(Request<TReq> request, TReq requestData, object customData, Dictionary<string, string> extraHeaders)
		{
			return null;
		}
	}
	[Token(Token = "0x2000618")]
	public class PlayFabUser
	{
		[Token(Token = "0x2000619")]
		public static class Constants
		{
			[Token(Token = "0x4001376")]
			public const string SpellClass = "Spell";

			[Token(Token = "0x4001377")]
			public const string PlayerClassClass = "PlayerClass";
		}

		[Serializable]
		[Token(Token = "0x200061A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCAA9C", Offset = "0xBCAA9C")]
		private sealed class <>c
		{
			[StructLayout(3)]
			[Token(Token = "0x200061B")]
			private struct <<GetSortedSpellsAsync>b__42_3>d : IAsyncStateMachine
			{
				[Token(Token = "0x400138C")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				public int <>1__state;

				[Token(Token = "0x400138D")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
				[AttributeAttribute(Name = "TupleElementNamesAttribute", RVA = "0xBD6C04", Offset = "0xBD6C04")]
				public AsyncTaskMethodBuilder<(string, SpellSetupAsset)> <>t__builder;

				[Token(Token = "0x400138E")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
				public SpellSetupAsset spell;

				[Token(Token = "0x400138F")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
				private TaskAwaiter<string> <>u__1;

				[Token(Token = "0x600155A")]
				[Address(RVA = "0x2EDD600", Offset = "0x2EDD600", VA = "0x2EDD600", Slot = "4")]
				private void MoveNext()
				{
				}

				[Token(Token = "0x600155B")]
				[Address(RVA = "0x2EDD860", Offset = "0x2EDD860", VA = "0x2EDD860", Slot = "5")]
				[DebuggerHidden]
				private void SetStateMachine(IAsyncStateMachine stateMachine)
				{
				}
			}

			[Token(Token = "0x4001378")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001379")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<(GetInventoryResult, IReadOnlyDictionary<AssetGuid, AssetBase>), List<SpellSetupAsset>> <>9__5_0;

			[Token(Token = "0x400137A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<List<SpellSetupAsset>, Reactive<IReadOnlyList<SpellSetupAsset>>> <>9__5_1;

			[Token(Token = "0x400137B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Func<PlayerClass, (PlayerClassConfigurationAsset, Character)> <>9__5_8;

			[Token(Token = "0x400137C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static Func<(GetInventoryResult, List<SpellSetupAsset>, IReadOnlyDictionary<AssetGuid, AssetBase>), EntitledPlayerClass[]> <>9__5_2;

			[Token(Token = "0x400137D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public static Func<EntitledPlayerClass[], IReadOnlyList<EntitledPlayerClass>> <>9__5_3;

			[Token(Token = "0x400137E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public static Func<GetInventoryResult, IReadOnlyList<string>> <>9__5_4;

			[Token(Token = "0x400137F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public static Func<GetInventoryResult, IReadOnlyList<string>> <>9__5_5;

			[Token(Token = "0x4001380")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public static Action<IReadOnlyList<SpellSetupAsset>> <>9__5_6;

			[Token(Token = "0x4001381")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public static Action<IReadOnlyList<EntitledPlayerClass>> <>9__5_7;

			[Token(Token = "0x4001382")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public static Func<ChallengeInfo, string> <>9__38_1;

			[Token(Token = "0x4001383")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public static Func<ChallengeClass, string> <>9__38_0;

			[Token(Token = "0x4001384")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public static Func<EntitledPlayerClass, ClassType> <>9__41_0;

			[Token(Token = "0x4001385")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public static Func<EntitledPlayerClass, int> <>9__41_1;

			[Token(Token = "0x4001386")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			[AttributeAttribute(Name = "TupleElementNamesAttribute", RVA = "0xBD69F4", Offset = "0xBD69F4")]
			public static Func<SpellSetupAsset, Task<(string, SpellSetupAsset)>> <>9__42_3;

			[Token(Token = "0x4001387")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			[AttributeAttribute(Name = "TupleElementNamesAttribute", RVA = "0xBD6A78", Offset = "0xBD6A78")]
			public static Func<(string, SpellSetupAsset), int> <>9__42_0;

			[Token(Token = "0x4001388")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			[AttributeAttribute(Name = "TupleElementNamesAttribute", RVA = "0xBD6AFC", Offset = "0xBD6AFC")]
			public static Func<(string, SpellSetupAsset), string> <>9__42_1;

			[Token(Token = "0x4001389")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			[AttributeAttribute(Name = "TupleElementNamesAttribute", RVA = "0xBD6B80", Offset = "0xBD6B80")]
			public static Func<(string, SpellSetupAsset), SpellSetupAsset> <>9__42_2;

			[Token(Token = "0x400138A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			public static Func<IReadOnlyList<EntitledPlayerClass>, bool> <>9__48_1;

			[Token(Token = "0x400138B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
			public static Func<EntitledPlayerClass, PlayerLoadout> <>9__48_0;

			[Token(Token = "0x6001546")]
			[Address(RVA = "0x11E99C4", Offset = "0x11E99C4", VA = "0x11E99C4")]
			public <>c()
			{
			}

			[Token(Token = "0x6001547")]
			[Address(RVA = "0x11E99CC", Offset = "0x11E99CC", VA = "0x11E99CC")]
			internal List<SpellSetupAsset> <.ctor>b__5_0((GetInventoryResult, IReadOnlyDictionary<AssetGuid, AssetBase>) tuple)
			{
				return null;
			}

			[Token(Token = "0x6001548")]
			[Address(RVA = "0x11E9BDC", Offset = "0x11E9BDC", VA = "0x11E9BDC")]
			internal Reactive<IReadOnlyList<SpellSetupAsset>> <.ctor>b__5_1(List<SpellSetupAsset> spells)
			{
				return default(Reactive<IReadOnlyList<SpellSetupAsset>>);
			}

			[Token(Token = "0x6001549")]
			[Address(RVA = "0x11E9CD8", Offset = "0x11E9CD8", VA = "0x11E9CD8")]
			internal EntitledPlayerClass[] <.ctor>b__5_2((GetInventoryResult, List<SpellSetupAsset>, IReadOnlyDictionary<AssetGuid, AssetBase>) tuple)
			{
				return null;
			}

			[Token(Token = "0x600154A")]
			[Address(RVA = "0x11EA14C", Offset = "0x11EA14C", VA = "0x11EA14C")]
			internal (PlayerClassConfigurationAsset, Character) <.ctor>b__5_8(PlayerClass playerClass)
			{
				return default((PlayerClassConfigurationAsset, Character));
			}

			[Token(Token = "0x600154B")]
			[Address(RVA = "0x11EA1F4", Offset = "0x11EA1F4", VA = "0x11EA1F4")]
			internal IReadOnlyList<EntitledPlayerClass> <.ctor>b__5_3(EntitledPlayerClass[] x)
			{
				return null;
			}

			[Token(Token = "0x600154C")]
			[Address(RVA = "0x11EA1FC", Offset = "0x11EA1FC", VA = "0x11EA1FC")]
			internal IReadOnlyList<string> <.ctor>b__5_4(GetInventoryResult x)
			{
				return null;
			}

			[Token(Token = "0x600154D")]
			[Address(RVA = "0x11EA204", Offset = "0x11EA204", VA = "0x11EA204")]
			internal IReadOnlyList<string> <.ctor>b__5_5(GetInventoryResult x)
			{
				return null;
			}

			[Token(Token = "0x600154E")]
			[Address(RVA = "0x11EA20C", Offset = "0x11EA20C", VA = "0x11EA20C")]
			internal void <.ctor>b__5_6(IReadOnlyList<SpellSetupAsset> set)
			{
			}

			[Token(Token = "0x600154F")]
			[Address(RVA = "0x11EA210", Offset = "0x11EA210", VA = "0x11EA210")]
			internal void <.ctor>b__5_7(IReadOnlyList<EntitledPlayerClass> set)
			{
			}

			[Token(Token = "0x6001550")]
			[Address(RVA = "0x11EA214", Offset = "0x11EA214", VA = "0x11EA214")]
			internal string <CreateChallengeListAsync>b__38_1(ChallengeInfo x)
			{
				return null;
			}

			[Token(Token = "0x6001551")]
			[Address(RVA = "0x11EA22C", Offset = "0x11EA22C", VA = "0x11EA22C")]
			internal string <CreateChallengeListAsync>b__38_0(ChallengeClass x)
			{
				return null;
			}

			[Token(Token = "0x6001552")]
			[Address(RVA = "0x11EA244", Offset = "0x11EA244", VA = "0x11EA244")]
			internal ClassType <GetSortedClassesAsync>b__41_0(EntitledPlayerClass x)
			{
				return default(ClassType);
			}

			[Token(Token = "0x6001553")]
			[Address(RVA = "0x11EA268", Offset = "0x11EA268", VA = "0x11EA268")]
			internal int <GetSortedClassesAsync>b__41_1(EntitledPlayerClass x)
			{
				return default(int);
			}

			[Token(Token = "0x6001554")]
			[Address(RVA = "0x11EA28C", Offset = "0x11EA28C", VA = "0x11EA28C")]
			[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xBE113C", Offset = "0xBE113C")]
			internal Task<(string, SpellSetupAsset)> <GetSortedSpellsAsync>b__42_3(SpellSetupAsset spell)
			{
				return null;
			}

			[Token(Token = "0x6001555")]
			[Address(RVA = "0x11EA3AC", Offset = "0x11EA3AC", VA = "0x11EA3AC")]
			internal int <GetSortedSpellsAsync>b__42_0([AttributeAttribute(Name = "TupleElementNamesAttribute", RVA = "0xBE446C", Offset = "0xBE446C")] (string, SpellSetupAsset) x)
			{
				return default(int);
			}

			[Token(Token = "0x6001556")]
			[Address(RVA = "0x11EA3C4", Offset = "0x11EA3C4", VA = "0x11EA3C4")]
			internal string <GetSortedSpellsAsync>b__42_1([AttributeAttribute(Name = "TupleElementNamesAttribute", RVA = "0xBE44F0", Offset = "0xBE44F0")] (string, SpellSetupAsset) x)
			{
				return null;
			}

			[Token(Token = "0x6001557")]
			[Address(RVA = "0x11EA3CC", Offset = "0x11EA3CC", VA = "0x11EA3CC")]
			internal SpellSetupAsset <GetSortedSpellsAsync>b__42_2([AttributeAttribute(Name = "TupleElementNamesAttribute", RVA = "0xBE4574", Offset = "0xBE4574")] (string, SpellSetupAsset) x)
			{
				return null;
			}

			[Token(Token = "0x6001558")]
			[Address(RVA = "0x11EA3D4", Offset = "0x11EA3D4", VA = "0x11EA3D4")]
			internal bool <GetPlayerLoadouts>b__48_1(IReadOnlyList<EntitledPlayerClass> x)
			{
				return default(bool);
			}

			[Token(Token = "0x6001559")]
			[Address(RVA = "0x11EA488", Offset = "0x11EA488", VA = "0x11EA488")]
			internal PlayerLoadout <GetPlayerLoadouts>b__48_0(EntitledPlayerClass x)
			{
				return default(PlayerLoadout);
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x200061C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCAAAC", Offset = "0xBCAAAC")]
		private struct <CreateChallengeListAsync>d__38 : IAsyncStateMachine
		{
			[Token(Token = "0x4001390")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001391")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder<Dictionary<string, ChallengeClass>> <>t__builder;

			[Token(Token = "0x4001392")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private GetChallengeResult <challengePackage>5__2;

			[Token(Token = "0x4001393")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private List<ChallengeClass> <challengeList>5__3;

			[Token(Token = "0x4001394")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private TaskAwaiter<GetChallengeResult> <>u__1;

			[Token(Token = "0x4001395")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private TaskAwaiter<IList<ChallengeInfo>> <>u__2;

			[Token(Token = "0x600155C")]
			[Address(RVA = "0x11EA4E0", Offset = "0x11EA4E0", VA = "0x11EA4E0", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x600155D")]
			[Address(RVA = "0x11EABAC", Offset = "0x11EABAC", VA = "0x11EABAC", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x200061D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCAABC", Offset = "0xBCAABC")]
		private struct <SyncChallenges>d__39 : IAsyncStateMachine
		{
			[Token(Token = "0x4001396")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001397")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4001398")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public PlayFabUser <>4__this;

			[Token(Token = "0x4001399")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private TaskAwaiter<GetChallengeResult> <>u__1;

			[Token(Token = "0x600155E")]
			[Address(RVA = "0x11EBE08", Offset = "0x11EBE08", VA = "0x11EBE08", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x600155F")]
			[Address(RVA = "0x11EC09C", Offset = "0x11EC09C", VA = "0x11EC09C", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x200061E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCAACC", Offset = "0xBCAACC")]
		private struct <GetSortedSpellsAsync>d__42 : IAsyncStateMachine
		{
			[Token(Token = "0x400139A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x400139B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder<IReadOnlyList<SpellSetupAsset>> <>t__builder;

			[Token(Token = "0x400139C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public List<SpellSetupAsset> spells;

			[Token(Token = "0x400139D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "TupleElementNamesAttribute", RVA = "0xBD6C88", Offset = "0xBD6C88")]
			private TaskAwaiter<(string, SpellSetupAsset)[]> <>u__1;

			[Token(Token = "0x6001560")]
			[Address(RVA = "0x11EB044", Offset = "0x11EB044", VA = "0x11EB044", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001561")]
			[Address(RVA = "0x11EB620", Offset = "0x11EB620", VA = "0x11EB620", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x200061F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCAADC", Offset = "0xBCAADC")]
		private struct <Login>d__44 : IAsyncStateMachine
		{
			[Token(Token = "0x400139E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x400139F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x40013A0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public LoginResult loginResult;

			[Token(Token = "0x40013A1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public PlayFabUser <>4__this;

			[Token(Token = "0x40013A2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public string photonCustomAuthenticationToken;

			[Token(Token = "0x40013A3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private TaskAwaiter<Dictionary<string, ChallengeClass>> <>u__1;

			[Token(Token = "0x40013A4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private TaskAwaiter <>u__2;

			[Token(Token = "0x6001562")]
			[Address(RVA = "0x11EB67C", Offset = "0x11EB67C", VA = "0x11EB67C", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001563")]
			[Address(RVA = "0x11EBB84", Offset = "0x11EBB84", VA = "0x11EBB84", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000620")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCAAEC", Offset = "0xBCAAEC")]
		private struct <RefreshPlayerStats>d__45 : IAsyncStateMachine
		{
			[Token(Token = "0x40013A5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40013A6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x40013A7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PlayFabUser <>4__this;

			[Token(Token = "0x40013A8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private TaskAwaiter<Cortopia.CortopiaPlayFabModels.PlayerStats> <>u__1;

			[Token(Token = "0x6001564")]
			[Address(RVA = "0x11EBB90", Offset = "0x11EBB90", VA = "0x11EBB90", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001565")]
			[Address(RVA = "0x11EBDFC", Offset = "0x11EBDFC", VA = "0x11EBDFC", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000621")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCAAFC", Offset = "0xBCAAFC")]
		private struct <UpdatePlayerEntitlements>d__47 : IAsyncStateMachine
		{
			[Token(Token = "0x40013A9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40013AA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x40013AB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PlayFabUser <>4__this;

			[Token(Token = "0x40013AC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Task<IReadOnlyDictionary<AssetGuid, AssetBase>> <preload>5__2;

			[Token(Token = "0x40013AD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private GetInventoryResult <result>5__3;

			[Token(Token = "0x40013AE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private TaskAwaiter<GetInventoryResult> <>u__1;

			[Token(Token = "0x40013AF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private TaskAwaiter<IReadOnlyDictionary<AssetGuid, AssetBase>> <>u__2;

			[Token(Token = "0x6001566")]
			[Address(RVA = "0x11EC0A8", Offset = "0x11EC0A8", VA = "0x11EC0A8", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001567")]
			[Address(RVA = "0x11EC564", Offset = "0x11EC564", VA = "0x11EC564", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000622")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCAB0C", Offset = "0xBCAB0C")]
		private struct <GetPlayerLoadouts>d__48 : IAsyncStateMachine
		{
			[Token(Token = "0x40013B0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40013B1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder<List<PlayerLoadout>> <>t__builder;

			[Token(Token = "0x40013B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PlayFabUser <>4__this;

			[Token(Token = "0x40013B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private TaskAwaiter<IReadOnlyList<EntitledPlayerClass>> <>u__1;

			[Token(Token = "0x6001568")]
			[Address(RVA = "0x11EAC08", Offset = "0x11EAC08", VA = "0x11EAC08", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001569")]
			[Address(RVA = "0x11EAFE8", Offset = "0x11EAFE8", VA = "0x11EAFE8", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x400136A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static AsyncOperationHandle<IList<ChallengeInfo>> _challengeInfoHandle;

		[Token(Token = "0x400136B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly ReactiveSource<GetInventoryResult> _inventorySource;

		[Token(Token = "0x400136C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly ReactiveSource<bool> _isLoggedIn;

		[Token(Token = "0x400136D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly ReactiveSource<string> _loggedInTicketSource;

		[Token(Token = "0x400136E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly ReactiveSource<Cortopia.CortopiaPlayFabModels.PlayerStats> _playerStatsSource;

		[Token(Token = "0x400136F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD6984", Offset = "0xBD6984")]
		private readonly PlayFabRoundResultRecorder <PlayFabRoundResultRecorder>k__BackingField;

		[Token(Token = "0x4001370")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD6994", Offset = "0xBD6994")]
		private readonly Reactive<IReadOnlyList<EntitledPlayerClass>> <EntitledPlayerClasses>k__BackingField;

		[Token(Token = "0x4001371")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD69A4", Offset = "0xBD69A4")]
		private readonly Reactive<IReadOnlyList<SpellSetupAsset>> <EntitledSpells>k__BackingField;

		[Token(Token = "0x4001372")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD69B4", Offset = "0xBD69B4")]
		private readonly Reactive<IReadOnlyList<string>> <EntitledBorders>k__BackingField;

		[Token(Token = "0x4001373")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD69C4", Offset = "0xBD69C4")]
		private readonly Reactive<IReadOnlyList<string>> <EntitledTitles>k__BackingField;

		[Token(Token = "0x4001374")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD69D4", Offset = "0xBD69D4")]
		private Dictionary<string, ChallengeClass> <ChallengeClasses>k__BackingField;

		[Token(Token = "0x4001375")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD69E4", Offset = "0xBD69E4")]
		private string <PhotonCustomAuthenticationToken>k__BackingField;

		[Token(Token = "0x170003D3")]
		private PlayFabRoundResultRecorder PlayFabRoundResultRecorder
		{
			[Token(Token = "0x600152C")]
			[Address(RVA = "0xFDDD18", Offset = "0xFDDD18", VA = "0xFDDD18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE0E0C", Offset = "0xBE0E0C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003D4")]
		public Reactive<Cortopia.CortopiaPlayFabModels.PlayerStats> PlayerStats
		{
			[Token(Token = "0x600152D")]
			[Address(RVA = "0xFDDD20", Offset = "0xFDDD20", VA = "0xFDDD20")]
			get
			{
				return default(Reactive<Cortopia.CortopiaPlayFabModels.PlayerStats>);
			}
		}

		[Token(Token = "0x170003D5")]
		public Reactive<string> LoggedInTicket
		{
			[Token(Token = "0x600152E")]
			[Address(RVA = "0xFD3800", Offset = "0xFD3800", VA = "0xFD3800")]
			get
			{
				return default(Reactive<string>);
			}
		}

		[Token(Token = "0x170003D6")]
		public Reactive<IReadOnlyList<EntitledPlayerClass>> EntitledPlayerClasses
		{
			[Token(Token = "0x600152F")]
			[Address(RVA = "0xFDDD74", Offset = "0xFDDD74", VA = "0xFDDD74")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE0E1C", Offset = "0xBE0E1C")]
			get
			{
				return default(Reactive<IReadOnlyList<EntitledPlayerClass>>);
			}
		}

		[Token(Token = "0x170003D7")]
		public Reactive<IReadOnlyList<SpellSetupAsset>> EntitledSpells
		{
			[Token(Token = "0x6001530")]
			[Address(RVA = "0xFDDD7C", Offset = "0xFDDD7C", VA = "0xFDDD7C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE0E2C", Offset = "0xBE0E2C")]
			get
			{
				return default(Reactive<IReadOnlyList<SpellSetupAsset>>);
			}
		}

		[Token(Token = "0x170003D8")]
		public Reactive<IReadOnlyList<string>> EntitledBorders
		{
			[Token(Token = "0x6001531")]
			[Address(RVA = "0xFDDD84", Offset = "0xFDDD84", VA = "0xFDDD84")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE0E3C", Offset = "0xBE0E3C")]
			get
			{
				return default(Reactive<IReadOnlyList<string>>);
			}
		}

		[Token(Token = "0x170003D9")]
		public Reactive<IReadOnlyList<string>> EntitledTitles
		{
			[Token(Token = "0x6001532")]
			[Address(RVA = "0xFDDD8C", Offset = "0xFDDD8C", VA = "0xFDDD8C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE0E4C", Offset = "0xBE0E4C")]
			get
			{
				return default(Reactive<IReadOnlyList<string>>);
			}
		}

		[Token(Token = "0x170003DA")]
		public Dictionary<string, ChallengeClass> ChallengeClasses
		{
			[Token(Token = "0x6001533")]
			[Address(RVA = "0xFDDD94", Offset = "0xFDDD94", VA = "0xFDDD94")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE0E5C", Offset = "0xBE0E5C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001534")]
			[Address(RVA = "0xFDDD9C", Offset = "0xFDDD9C", VA = "0xFDDD9C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE0E6C", Offset = "0xBE0E6C")]
			private set
			{
			}
		}

		[Token(Token = "0x170003DB")]
		public Reactive<bool> IsLoggedIn
		{
			[Token(Token = "0x6001535")]
			[Address(RVA = "0xFDDDA4", Offset = "0xFDDDA4", VA = "0xFDDDA4")]
			get
			{
				return default(Reactive<bool>);
			}
		}

		[Token(Token = "0x170003DC")]
		public string PhotonCustomAuthenticationToken
		{
			[Token(Token = "0x6001536")]
			[Address(RVA = "0xFDDDF8", Offset = "0xFDDDF8", VA = "0xFDDDF8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE0E7C", Offset = "0xBE0E7C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001537")]
			[Address(RVA = "0xFDDE00", Offset = "0xFDDE00", VA = "0xFDDE00")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE0E8C", Offset = "0xBE0E8C")]
			private set
			{
			}
		}

		[Token(Token = "0x170003DD")]
		public Task<SpeculativeProgressionChange> ProgressionChange
		{
			[Token(Token = "0x6001538")]
			[Address(RVA = "0xFDDE08", Offset = "0xFDDE08", VA = "0xFDDE08")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600152B")]
		[Address(RVA = "0xFDD35C", Offset = "0xFDD35C", VA = "0xFDD35C")]
		public PlayFabUser()
		{
		}

		[Token(Token = "0x6001539")]
		[Address(RVA = "0xFDDE24", Offset = "0xFDDE24", VA = "0xFDDE24")]
		public void UpdateChallenges(ChallengeUpdate[] updatedChallenges)
		{
		}

		[Token(Token = "0x600153A")]
		[Address(RVA = "0xFDDF1C", Offset = "0xFDDF1C", VA = "0xFDDF1C")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xBE0E9C", Offset = "0xBE0E9C")]
		private static Task<Dictionary<string, ChallengeClass>> CreateChallengeListAsync()
		{
			return null;
		}

		[Token(Token = "0x600153B")]
		[Address(RVA = "0xFDE034", Offset = "0xFDE034", VA = "0xFDE034")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xBE0EFC", Offset = "0xBE0EFC")]
		public void SyncChallenges()
		{
		}

		[Token(Token = "0x600153C")]
		[Address(RVA = "0xFDE0F8", Offset = "0xFDE0F8", VA = "0xFDE0F8")]
		public void ClearProgressionChange()
		{
		}

		[Token(Token = "0x600153D")]
		[Address(RVA = "0xFDE128", Offset = "0xFDE128", VA = "0xFDE128")]
		private static EntitledPlayerClass[] GetSortedClassesAsync(List<EntitledPlayerClass> playerClasses)
		{
			return null;
		}

		[Token(Token = "0x600153E")]
		[Address(RVA = "0xFDE338", Offset = "0xFDE338", VA = "0xFDE338")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xBE0F5C", Offset = "0xBE0F5C")]
		private static Task<IReadOnlyList<SpellSetupAsset>> GetSortedSpellsAsync(List<SpellSetupAsset> spells)
		{
			return null;
		}

		[Token(Token = "0x600153F")]
		[Address(RVA = "0xFDE458", Offset = "0xFDE458", VA = "0xFDE458")]
		public void RefreshCredentials(LoginResult loginResult, string photonCustomAuthenticationToken)
		{
		}

		[Token(Token = "0x6001540")]
		[Address(RVA = "0xFDE558", Offset = "0xFDE558", VA = "0xFDE558")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xBE0FBC", Offset = "0xBE0FBC")]
		public Task Login(LoginResult loginResult, string photonCustomAuthenticationToken)
		{
			return null;
		}

		[Token(Token = "0x6001541")]
		[Address(RVA = "0xFDE67C", Offset = "0xFDE67C", VA = "0xFDE67C")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xBE101C", Offset = "0xBE101C")]
		public Task RefreshPlayerStats()
		{
			return null;
		}

		[Token(Token = "0x6001542")]
		[Address(RVA = "0xFDE780", Offset = "0xFDE780", VA = "0xFDE780")]
		public void Logout()
		{
		}

		[Token(Token = "0x6001543")]
		[Address(RVA = "0xFDE920", Offset = "0xFDE920", VA = "0xFDE920")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xBE107C", Offset = "0xBE107C")]
		public Task UpdatePlayerEntitlements()
		{
			return null;
		}

		[Token(Token = "0x6001544")]
		[Address(RVA = "0xFDEA30", Offset = "0xFDEA30", VA = "0xFDEA30")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xBE10DC", Offset = "0xBE10DC")]
		public Task<List<PlayerLoadout>> GetPlayerLoadouts()
		{
			return null;
		}
	}
}
namespace Cortopia.Scripts.Platform.Oculus
{
	[Token(Token = "0x2000623")]
	public class OculusException : Exception
	{
		[Token(Token = "0x40013B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD6D0C", Offset = "0xBD6D0C")]
		private readonly global::Oculus.Platform.Models.Error <Error>k__BackingField;

		[Token(Token = "0x40013B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD6D1C", Offset = "0xBD6D1C")]
		private readonly string <RequestName>k__BackingField;

		[Token(Token = "0x170003DE")]
		public global::Oculus.Platform.Models.Error Error
		{
			[Token(Token = "0x600156B")]
			[Address(RVA = "0x101E614", Offset = "0x101E614", VA = "0x101E614")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE121C", Offset = "0xBE121C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003DF")]
		public string RequestName
		{
			[Token(Token = "0x600156C")]
			[Address(RVA = "0x101E61C", Offset = "0x101E61C", VA = "0x101E61C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE122C", Offset = "0xBE122C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600156A")]
		[Address(RVA = "0x101E408", Offset = "0x101E408", VA = "0x101E408")]
		public OculusException(global::Oculus.Platform.Models.Error error, string requestName)
		{
		}
	}
	[Token(Token = "0x2000624")]
	public static class OculusPlatformExtension
	{
		[Token(Token = "0x2000625")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCAB2C", Offset = "0xBCAB2C")]
		private sealed class <>c__DisplayClass0_0<T>
		{
			[Token(Token = "0x40013B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public TaskCompletionSource<T> taskCompletionSource;

			[Token(Token = "0x40013B7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string errorRequestName;

			[Token(Token = "0x600156F")]
			public <>c__DisplayClass0_0()
			{
			}

			[Token(Token = "0x6001570")]
			internal void <ToTask>b__0(Message<T> message)
			{
			}
		}

		[Token(Token = "0x2000626")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCAB3C", Offset = "0xBCAB3C")]
		private sealed class <>c__DisplayClass1_0
		{
			[Token(Token = "0x40013B8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public TaskCompletionSource<bool> taskCompletionSource;

			[Token(Token = "0x40013B9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string errorRequestName;

			[Token(Token = "0x6001571")]
			[Address(RVA = "0x11DD5C4", Offset = "0x11DD5C4", VA = "0x11DD5C4")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x6001572")]
			[Address(RVA = "0x11DD5CC", Offset = "0x11DD5CC", VA = "0x11DD5CC")]
			internal void <ToTask>b__0(global::Oculus.Platform.Message message)
			{
			}
		}

		[Token(Token = "0x600156D")]
		public static Task<T> ToTask<T>(this Request<T> request, string errorRequestName)
		{
			return null;
		}

		[Token(Token = "0x600156E")]
		[Address(RVA = "0x101E624", Offset = "0x101E624", VA = "0x101E624")]
		public static Task ToTask(this global::Oculus.Platform.Request request, string errorRequestName)
		{
			return null;
		}
	}
}
namespace Cortopia.Scripts.Platform.DebugPlatform
{
	[Token(Token = "0x2000627")]
	public class DebugPermissions : IPermissions
	{
		[Token(Token = "0x170003E0")]
		public bool AllowedToUseMic
		{
			[Token(Token = "0x6001573")]
			[Address(RVA = "0x103A268", Offset = "0x103A268", VA = "0x103A268", Slot = "4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001574")]
		[Address(RVA = "0x103A270", Offset = "0x103A270", VA = "0x103A270", Slot = "5")]
		public bool TryGetPermissionToUseMic()
		{
			return default(bool);
		}

		[Token(Token = "0x6001575")]
		[Address(RVA = "0x103A278", Offset = "0x103A278", VA = "0x103A278")]
		public DebugPermissions()
		{
		}
	}
	[Token(Token = "0x2000628")]
	public class DebugUser : IUser
	{
		[StructLayout(3)]
		[Token(Token = "0x2000629")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCAB4C", Offset = "0xBCAB4C")]
		private struct <LogInToPlayFabAsync>d__19 : IAsyncStateMachine
		{
			[Token(Token = "0x40013C0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40013C1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x40013C2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public DebugUser <>4__this;

			[Token(Token = "0x40013C3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private string <user>5__2;

			[Token(Token = "0x40013C4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private LoginResult <loginResult>5__3;

			[Token(Token = "0x40013C5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private Task <initAnalyticsTask>5__4;

			[Token(Token = "0x40013C6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private TaskAwaiter<IReadOnlyDictionary<AssetGuid, AssetBase>> <>u__1;

			[Token(Token = "0x40013C7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private TaskAwaiter<LoginResult> <>u__2;

			[Token(Token = "0x40013C8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private TaskAwaiter<GetAccountInfoResult> <>u__3;

			[Token(Token = "0x40013C9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private TaskAwaiter<GetPhotonAuthenticationTokenResult> <>u__4;

			[Token(Token = "0x40013CA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private TaskAwaiter <>u__5;

			[Token(Token = "0x6001584")]
			[Address(RVA = "0x1028A84", Offset = "0x1028A84", VA = "0x1028A84", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001585")]
			[Address(RVA = "0x10296BC", Offset = "0x10296BC", VA = "0x10296BC", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200062A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCAB5C", Offset = "0xBCAB5C")]
		private sealed class <>c
		{
			[Token(Token = "0x40013CB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40013CC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<string, bool> <>9__20_0;

			[Token(Token = "0x6001587")]
			[Address(RVA = "0x10285C4", Offset = "0x10285C4", VA = "0x10285C4")]
			public <>c()
			{
			}

			[Token(Token = "0x6001588")]
			[Address(RVA = "0x10285CC", Offset = "0x10285CC", VA = "0x10285CC")]
			internal bool <GetUserID>b__20_0(string x)
			{
				return default(bool);
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x200062B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCAB6C", Offset = "0xBCAB6C")]
		private struct <SetTutorialCompleted>d__21 : IAsyncStateMachine
		{
			[Token(Token = "0x40013CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40013CE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x40013CF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public DebugUser <>4__this;

			[Token(Token = "0x40013D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private TaskAwaiter<UpdateUserDataResult> <>u__1;

			[Token(Token = "0x6001589")]
			[Address(RVA = "0x1029C00", Offset = "0x1029C00", VA = "0x1029C00", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x600158A")]
			[Address(RVA = "0x1029FB8", Offset = "0x1029FB8", VA = "0x1029FB8", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x200062C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCAB7C", Offset = "0xBCAB7C")]
		private struct <GetHasCompletedTutorial>d__22 : IAsyncStateMachine
		{
			[Token(Token = "0x40013D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40013D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x40013D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string playFabId;

			[Token(Token = "0x40013D4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public DebugUser <>4__this;

			[Token(Token = "0x40013D5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private TaskAwaiter<GetUserDataResult> <>u__1;

			[Token(Token = "0x600158B")]
			[Address(RVA = "0x1028628", Offset = "0x1028628", VA = "0x1028628", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x600158C")]
			[Address(RVA = "0x1028A78", Offset = "0x1028A78", VA = "0x1028A78", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x200062D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCAB8C", Offset = "0xBCAB8C")]
		private struct <RefreshCredentials>d__24 : IAsyncStateMachine
		{
			[Token(Token = "0x40013D6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40013D7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x40013D8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public DebugUser <>4__this;

			[Token(Token = "0x40013D9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private LoginResult <loginResult>5__2;

			[Token(Token = "0x40013DA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private TaskAwaiter<LoginResult> <>u__1;

			[Token(Token = "0x40013DB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private TaskAwaiter<GetPhotonAuthenticationTokenResult> <>u__2;

			[Token(Token = "0x600158D")]
			[Address(RVA = "0x10296C8", Offset = "0x10296C8", VA = "0x10296C8", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x600158E")]
			[Address(RVA = "0x1029BF4", Offset = "0x1029BF4", VA = "0x1029BF4", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x40013BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly ReactiveSource<bool?> _hasCompletedTutorial;

		[Token(Token = "0x40013BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly PlayFabUser _playFabUser;

		[Token(Token = "0x40013BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD6D2C", Offset = "0xBD6D2C")]
		private string <DisplayName>k__BackingField;

		[Token(Token = "0x40013BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD6D3C", Offset = "0xBD6D3C")]
		private readonly Reactive<bool> <IsLoggedInToPlayFab>k__BackingField;

		[Token(Token = "0x40013BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD6D4C", Offset = "0xBD6D4C")]
		private string <ImageUrl>k__BackingField;

		[Token(Token = "0x40013BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD6D5C", Offset = "0xBD6D5C")]
		private readonly string[] <PlatformFriends>k__BackingField;

		[Token(Token = "0x170003E1")]
		public string DisplayName
		{
			[Token(Token = "0x6001577")]
			[Address(RVA = "0x103CD90", Offset = "0x103CD90", VA = "0x103CD90", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE125C", Offset = "0xBE125C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001578")]
			[Address(RVA = "0x103CD98", Offset = "0x103CD98", VA = "0x103CD98")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE126C", Offset = "0xBE126C")]
			private set
			{
			}
		}

		[Token(Token = "0x170003E2")]
		public Reactive<bool> IsLoggedInToPlayFab
		{
			[Token(Token = "0x6001579")]
			[Address(RVA = "0x103CDA0", Offset = "0x103CDA0", VA = "0x103CDA0", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE127C", Offset = "0xBE127C")]
			get
			{
				return default(Reactive<bool>);
			}
		}

		[Token(Token = "0x170003E3")]
		public Reactive<bool?> HasCompletedTutorial
		{
			[Token(Token = "0x600157A")]
			[Address(RVA = "0x103CDA8", Offset = "0x103CDA8", VA = "0x103CDA8", Slot = "6")]
			get
			{
				return default(Reactive<bool?>);
			}
		}

		[Token(Token = "0x170003E4")]
		public string ImageUrl
		{
			[Token(Token = "0x600157B")]
			[Address(RVA = "0x103CDFC", Offset = "0x103CDFC", VA = "0x103CDFC", Slot = "7")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE128C", Offset = "0xBE128C")]
			get
			{
				return null;
			}
			[Token(Token = "0x600157C")]
			[Address(RVA = "0x103CE04", Offset = "0x103CE04", VA = "0x103CE04")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE129C", Offset = "0xBE129C")]
			private set
			{
			}
		}

		[Token(Token = "0x170003E5")]
		public string[] PlatformFriends
		{
			[Token(Token = "0x600157D")]
			[Address(RVA = "0x103CE0C", Offset = "0x103CE0C", VA = "0x103CE0C", Slot = "8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE12AC", Offset = "0xBE12AC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001576")]
		[Address(RVA = "0x103CBEC", Offset = "0x103CBEC", VA = "0x103CBEC")]
		public DebugUser(PlayFabUser playFabUser)
		{
		}

		[Token(Token = "0x600157E")]
		[Address(RVA = "0x103CE14", Offset = "0x103CE14", VA = "0x103CE14", Slot = "9")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xBE12BC", Offset = "0xBE12BC")]
		public Task LogInToPlayFabAsync()
		{
			return null;
		}

		[Token(Token = "0x600157F")]
		[Address(RVA = "0x103CF28", Offset = "0x103CF28", VA = "0x103CF28")]
		private static string GetUserID()
		{
			return null;
		}

		[Token(Token = "0x6001580")]
		[Address(RVA = "0x103D0A4", Offset = "0x103D0A4", VA = "0x103D0A4", Slot = "10")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xBE131C", Offset = "0xBE131C")]
		public void SetTutorialCompleted()
		{
		}

		[Token(Token = "0x6001581")]
		[Address(RVA = "0x103D168", Offset = "0x103D168", VA = "0x103D168")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xBE137C", Offset = "0xBE137C")]
		private void GetHasCompletedTutorial(string playFabId)
		{
		}

		[Token(Token = "0x6001582")]
		[Address(RVA = "0x103D230", Offset = "0x103D230", VA = "0x103D230", Slot = "11")]
		public void UpdatePlatformFriends()
		{
		}

		[Token(Token = "0x6001583")]
		[Address(RVA = "0x103D234", Offset = "0x103D234", VA = "0x103D234", Slot = "12")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xBE13DC", Offset = "0xBE13DC")]
		public Task RefreshCredentials()
		{
			return null;
		}
	}
	[Token(Token = "0x200062E")]
	public class DebugUserProvider : IUserProvider
	{
		[Token(Token = "0x600158F")]
		[Address(RVA = "0x103D338", Offset = "0x103D338", VA = "0x103D338", Slot = "4")]
		public Task<IUser> GetUserAsync(PlayFabUser playFabUser)
		{
			return null;
		}

		[Token(Token = "0x6001590")]
		[Address(RVA = "0x103D3D8", Offset = "0x103D3D8", VA = "0x103D3D8")]
		public DebugUserProvider()
		{
		}
	}
}
namespace Cortopia.Scripts.Platform.Android
{
	[Token(Token = "0x200062F")]
	public class AndroidPermissions : IPermissions
	{
		[Token(Token = "0x40013DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private bool _micAllowed;

		[Token(Token = "0x40013DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		private bool _micAsked;

		[Token(Token = "0x170003E6")]
		public bool AllowedToUseMic
		{
			[Token(Token = "0x6001591")]
			[Address(RVA = "0x13285E4", Offset = "0x13285E4", VA = "0x13285E4", Slot = "4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001592")]
		[Address(RVA = "0x1328664", Offset = "0x1328664", VA = "0x1328664", Slot = "5")]
		public bool TryGetPermissionToUseMic()
		{
			return default(bool);
		}

		[Token(Token = "0x6001593")]
		[Address(RVA = "0x132879C", Offset = "0x132879C", VA = "0x132879C")]
		private void OnPermissionGranted(string obj)
		{
		}

		[Token(Token = "0x6001594")]
		[Address(RVA = "0x13287A8", Offset = "0x13287A8", VA = "0x13287A8")]
		public AndroidPermissions()
		{
		}
	}
}
namespace Cortopia.Scripts.Pings
{
	[Token(Token = "0x2000630")]
	public class BombPing : MonoBehaviour
	{
		[Token(Token = "0x40013DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBD6D6C", Offset = "0xBD6D6C")]
		private EntityView bombEntityView;

		[Token(Token = "0x40013DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBD6DB8", Offset = "0xBD6DB8")]
		private float armedBlinkFrequency;

		[Token(Token = "0x40013E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBD6E04", Offset = "0xBD6E04")]
		private GameObject rootObject;

		[Token(Token = "0x40013E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject distanceText;

		[Token(Token = "0x40013E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private SpriteRenderer bombStationary;

		[Token(Token = "0x40013E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private SpriteRenderer bombStationaryFill;

		[Token(Token = "0x40013E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private SpriteRenderer bombPickedUp;

		[Token(Token = "0x40013E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private SpriteRenderer bombIcon;

		[Token(Token = "0x40013E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBD6EA0", Offset = "0xBD6EA0")]
		[SerializeField]
		private Material spriteDefault;

		[Token(Token = "0x40013E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Material spriteDefaultNoZ;

		[Token(Token = "0x40013E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private int _bombTimerFill;

		[Token(Token = "0x40013E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private bool? _visibleThroughWalls;

		[Token(Token = "0x40013EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float _currentBlinkTime;

		[Token(Token = "0x40013EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Dictionary<Material, Material> _materialMappings;

		[Token(Token = "0x6001595")]
		[Address(RVA = "0x13311B8", Offset = "0x13311B8", VA = "0x13311B8")]
		private void Update()
		{
		}

		[Token(Token = "0x6001596")]
		[Address(RVA = "0x1331850", Offset = "0x1331850", VA = "0x1331850")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001597")]
		[Address(RVA = "0x1331634", Offset = "0x1331634", VA = "0x1331634")]
		private void ConfigurePingVisuals(Frame frame, EntityRef localPlayerEntity, Bomb bomb)
		{
		}

		[Token(Token = "0x6001598")]
		[Address(RVA = "0x13317A0", Offset = "0x13317A0", VA = "0x13317A0")]
		private void SetBombFillAmount(Bomb bomb)
		{
		}

		[Token(Token = "0x6001599")]
		[Address(RVA = "0x13319A4", Offset = "0x13319A4", VA = "0x13319A4")]
		private void SetIsPickedUpGraphic(bool isPickedUp)
		{
		}

		[Token(Token = "0x600159A")]
		[Address(RVA = "0x1331478", Offset = "0x1331478", VA = "0x1331478")]
		private void SetMaterials(bool visibleThroughWalls)
		{
		}

		[Token(Token = "0x600159B")]
		[Address(RVA = "0x1331A2C", Offset = "0x1331A2C", VA = "0x1331A2C")]
		private Material GetMaterialInstance(Material mat)
		{
			return null;
		}

		[Token(Token = "0x600159C")]
		[Address(RVA = "0x1331B48", Offset = "0x1331B48", VA = "0x1331B48")]
		public BombPing()
		{
		}
	}
	[Token(Token = "0x2000631")]
	public class BombSitePing : MonoBehaviour
	{
		[Token(Token = "0x40013EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBD6EFC", Offset = "0xBD6EFC")]
		private EntityView bombSocketEntityView;

		[Token(Token = "0x40013ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject rootObject;

		[Token(Token = "0x40013EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private SpriteRenderer pingBackground;

		[Token(Token = "0x40013EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private AnimationCurve pingAnimation;

		[Token(Token = "0x40013F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float _elapsedTime;

		[Token(Token = "0x40013F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Vector3 _pingStartingScale;

		[Token(Token = "0x600159D")]
		[Address(RVA = "0x13320AC", Offset = "0x13320AC", VA = "0x13320AC")]
		private void Awake()
		{
		}

		[Token(Token = "0x600159E")]
		[Address(RVA = "0x1332100", Offset = "0x1332100", VA = "0x1332100")]
		private void Update()
		{
		}

		[Token(Token = "0x600159F")]
		[Address(RVA = "0x1332414", Offset = "0x1332414", VA = "0x1332414")]
		private bool PollPingStatus(out bool isPreview)
		{
			return default(bool);
		}

		[Token(Token = "0x60015A0")]
		[Address(RVA = "0x13326CC", Offset = "0x13326CC", VA = "0x13326CC")]
		public BombSitePing()
		{
		}
	}
	[Token(Token = "0x2000632")]
	public class DummyPingOffset2 : MonoBehaviour
	{
		[Token(Token = "0x40013F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private EntityView pingEntity;

		[Token(Token = "0x40013F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Vector3 dummyOffset;

		[Token(Token = "0x40013F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Vector3 _startingOffset;

		[Token(Token = "0x40013F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool _hasAppliedOffset;

		[Token(Token = "0x60015A1")]
		[Address(RVA = "0x1041520", Offset = "0x1041520", VA = "0x1041520")]
		private void Awake()
		{
		}

		[Token(Token = "0x60015A2")]
		[Address(RVA = "0x104155C", Offset = "0x104155C", VA = "0x104155C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60015A3")]
		[Address(RVA = "0x104170C", Offset = "0x104170C", VA = "0x104170C")]
		private void Update()
		{
		}

		[Token(Token = "0x60015A4")]
		[Address(RVA = "0x1041564", Offset = "0x1041564", VA = "0x1041564")]
		private void SetOffset()
		{
		}

		[Token(Token = "0x60015A5")]
		[Address(RVA = "0x104171C", Offset = "0x104171C", VA = "0x104171C")]
		public DummyPingOffset2()
		{
		}
	}
	[Token(Token = "0x2000633")]
	public class LocationPing : MonoBehaviour
	{
		[Token(Token = "0x40013F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBD6F98", Offset = "0xBD6F98")]
		private EntityView entityView;

		[Token(Token = "0x40013F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform rootTransform;

		[Token(Token = "0x40013F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform dangerVisuals;

		[Token(Token = "0x40013F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Transform goingVisuals;

		[Token(Token = "0x40013FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private GameObject enemyVisuals;

		[Token(Token = "0x40013FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private GameObject enemyBombVisuals;

		[Token(Token = "0x40013FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private GameObject bombVisuals;

		[Token(Token = "0x40013FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private SpriteRenderer enemyIcon;

		[Token(Token = "0x40013FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBD7054", Offset = "0xBD7054")]
		[SerializeField]
		private float scaleReferenceDistance;

		[Token(Token = "0x40013FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[SerializeField]
		private float previewFlashSpeed;

		[Token(Token = "0x4001400")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private float previewFlashScale;

		[Token(Token = "0x4001401")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private bool _configured;

		[Token(Token = "0x4001402")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
		private bool _disabled;

		[Token(Token = "0x4001403")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Vector3 _startingScale;

		[Token(Token = "0x60015A6")]
		[Address(RVA = "0xF8ACA4", Offset = "0xF8ACA4", VA = "0xF8ACA4")]
		private void Awake()
		{
		}

		[Token(Token = "0x60015A7")]
		[Address(RVA = "0xF8ACDC", Offset = "0xF8ACDC", VA = "0xF8ACDC")]
		private void Update()
		{
		}

		[Token(Token = "0x60015A8")]
		[Address(RVA = "0xF8B2F0", Offset = "0xF8B2F0", VA = "0xF8B2F0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60015A9")]
		[Address(RVA = "0xF8B0A0", Offset = "0xF8B0A0", VA = "0xF8B0A0")]
		private void Configure(Frame frame)
		{
		}

		[Token(Token = "0x60015AA")]
		[Address(RVA = "0xF8B324", Offset = "0xF8B324", VA = "0xF8B324")]
		private static bool TryGetClassIcon(Frame frame, EntityRef playerEntity, IconType iconType, out Sprite classIcon)
		{
			return default(bool);
		}

		[Token(Token = "0x60015AB")]
		[Address(RVA = "0xF8B534", Offset = "0xF8B534", VA = "0xF8B534")]
		public LocationPing()
		{
		}
	}
	[Token(Token = "0x2000634")]
	public class SelfPing : MonoBehaviour
	{
		[Token(Token = "0x4001404")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBD70C0", Offset = "0xBD70C0")]
		[SerializeField]
		private EntityView entityView;

		[Token(Token = "0x4001405")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject rootObject;

		[Token(Token = "0x4001406")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private SpriteRenderer playerIcon;

		[Token(Token = "0x4001407")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool _configured;

		[Token(Token = "0x4001408")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		private bool _disabled;

		[Token(Token = "0x4001409")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private AssetGuid _selectedClass;

		[Token(Token = "0x60015AC")]
		[Address(RVA = "0x11F71AC", Offset = "0x11F71AC", VA = "0x11F71AC")]
		private void Update()
		{
		}

		[Token(Token = "0x60015AD")]
		[Address(RVA = "0x11F767C", Offset = "0x11F767C", VA = "0x11F767C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60015AE")]
		[Address(RVA = "0x11F73EC", Offset = "0x11F73EC", VA = "0x11F73EC")]
		private void Configure(Frame frame)
		{
		}

		[Token(Token = "0x60015AF")]
		[Address(RVA = "0x11F7524", Offset = "0x11F7524", VA = "0x11F7524")]
		private bool TryGetClassIcon(Frame frame, EntityRef playerEntity, IconType iconType)
		{
			return default(bool);
		}

		[Token(Token = "0x60015B0")]
		[Address(RVA = "0x11F7694", Offset = "0x11F7694", VA = "0x11F7694")]
		public SelfPing()
		{
		}
	}
	[Token(Token = "0x2000635")]
	public class SpellPing : MonoBehaviour
	{
		[Token(Token = "0x400140A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private EntityView entityView;

		[Token(Token = "0x400140B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject rootObject;

		[Token(Token = "0x400140C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private StudioEventEmitter pingSFX;

		[Token(Token = "0x400140D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Vector2 spawnDelayRange;

		[Token(Token = "0x400140E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool _activeOnce;

		[Token(Token = "0x400140F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float _elapsedTime;

		[Token(Token = "0x4001410")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float _spawnDelay;

		[Token(Token = "0x60015B1")]
		[Address(RVA = "0x114729C", Offset = "0x114729C", VA = "0x114729C")]
		private void Update()
		{
		}

		[Token(Token = "0x60015B2")]
		[Address(RVA = "0x1147508", Offset = "0x1147508", VA = "0x1147508")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60015B3")]
		[Address(RVA = "0x1147560", Offset = "0x1147560", VA = "0x1147560")]
		public SpellPing()
		{
		}
	}
}
namespace Cortopia.Scripts.Network
{
	[Token(Token = "0x2000636")]
	public struct Latency
	{
		[Token(Token = "0x4001411")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string region;

		[Token(Token = "0x4001412")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int latency;
	}
	[Token(Token = "0x2000637")]
	public struct MatchMakeAttributes
	{
		[Token(Token = "0x4001413")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Latency[] Latencies;

		[Token(Token = "0x4001414")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string AppVersion;
	}
	[Token(Token = "0x2000638")]
	public class MatchStatisticsData
	{
		[Token(Token = "0x2000639")]
		private class PlayerClassStatistics
		{
			[Token(Token = "0x4001425")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public PlayerStatisticsData Data;

			[Token(Token = "0x4001426")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			public Dictionary<AssetRefSpellSetup, SpellStatistics> Spells;

			[Token(Token = "0x60015C4")]
			[Address(RVA = "0x11DB6E4", Offset = "0x11DB6E4", VA = "0x11DB6E4")]
			public PlayerClassStatistics()
			{
			}
		}

		[Token(Token = "0x200063A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCAB9C", Offset = "0xBCAB9C")]
		private sealed class <>c__DisplayClass31_0
		{
			[Token(Token = "0x4001427")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Quantum.Team team;

			[Token(Token = "0x4001428")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public bool initialized;

			[Token(Token = "0x60015C5")]
			[Address(RVA = "0x11DB634", Offset = "0x11DB634", VA = "0x11DB634")]
			public <>c__DisplayClass31_0()
			{
			}

			[Token(Token = "0x60015C6")]
			[Address(RVA = "0x11DB63C", Offset = "0x11DB63C", VA = "0x11DB63C")]
			internal bool <AggregateClasses>b__0(PlayerClassStatistics x)
			{
				return default(bool);
			}

			[Token(Token = "0x60015C7")]
			[Address(RVA = "0x11DB660", Offset = "0x11DB660", VA = "0x11DB660")]
			internal PlayerStatisticsData <AggregateClasses>b__2(PlayerStatisticsData a, PlayerStatisticsData b)
			{
				return default(PlayerStatisticsData);
			}
		}

		[Serializable]
		[Token(Token = "0x200063B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCABAC", Offset = "0xBCABAC")]
		private sealed class <>c
		{
			[Token(Token = "0x4001429")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x400142A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<PlayerClassStatistics, PlayerStatisticsData> <>9__31_1;

			[Token(Token = "0x400142B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<KeyValuePair<AssetRefPlayerClassConfiguration, PlayerClassStatistics>, bool> <>9__32_1;

			[Token(Token = "0x400142C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Func<KeyValuePair<int, Dictionary<AssetRefPlayerClassConfiguration, PlayerClassStatistics>>, bool> <>9__32_0;

			[Token(Token = "0x400142D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static Func<KeyValuePair<AssetRefSpellSetup, SpellStatistics>, SpellStats> <>9__32_6;

			[Token(Token = "0x400142E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public static Func<KeyValuePair<AssetRefPlayerClassConfiguration, PlayerClassStatistics>, PlayerClassMatchStats> <>9__32_5;

			[Token(Token = "0x400142F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public static Func<PlayerMatchStats?, bool> <>9__32_3;

			[Token(Token = "0x4001430")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public static Func<PlayerMatchStats?, PlayerMatchStats> <>9__32_4;

			[Token(Token = "0x60015C9")]
			[Address(RVA = "0x11DB058", Offset = "0x11DB058", VA = "0x11DB058")]
			public <>c()
			{
			}

			[Token(Token = "0x60015CA")]
			[Address(RVA = "0x11DB060", Offset = "0x11DB060", VA = "0x11DB060")]
			internal PlayerStatisticsData <AggregateClasses>b__31_1(PlayerClassStatistics x)
			{
				return default(PlayerStatisticsData);
			}

			[Token(Token = "0x60015CB")]
			[Address(RVA = "0x11DB080", Offset = "0x11DB080", VA = "0x11DB080")]
			internal bool <GetMatchStats>b__32_0(KeyValuePair<int, Dictionary<AssetRefPlayerClassConfiguration, PlayerClassStatistics>> x)
			{
				return default(bool);
			}

			[Token(Token = "0x60015CC")]
			[Address(RVA = "0x11DB1A4", Offset = "0x11DB1A4", VA = "0x11DB1A4")]
			internal bool <GetMatchStats>b__32_1(KeyValuePair<AssetRefPlayerClassConfiguration, PlayerClassStatistics> y)
			{
				return default(bool);
			}

			[Token(Token = "0x60015CD")]
			[Address(RVA = "0x11DB23C", Offset = "0x11DB23C", VA = "0x11DB23C")]
			internal PlayerClassMatchStats <GetMatchStats>b__32_5(KeyValuePair<AssetRefPlayerClassConfiguration, PlayerClassStatistics> playerClass)
			{
				return default(PlayerClassMatchStats);
			}

			[Token(Token = "0x60015CE")]
			[Address(RVA = "0x11DB48C", Offset = "0x11DB48C", VA = "0x11DB48C")]
			internal SpellStats <GetMatchStats>b__32_6(KeyValuePair<AssetRefSpellSetup, SpellStatistics> spell)
			{
				return default(SpellStats);
			}

			[Token(Token = "0x60015CF")]
			[Address(RVA = "0x11DB580", Offset = "0x11DB580", VA = "0x11DB580")]
			internal bool <GetMatchStats>b__32_3(PlayerMatchStats? x)
			{
				return default(bool);
			}

			[Token(Token = "0x60015D0")]
			[Address(RVA = "0x11DB5C0", Offset = "0x11DB5C0", VA = "0x11DB5C0")]
			internal PlayerMatchStats <GetMatchStats>b__32_4(PlayerMatchStats? x)
			{
				return default(PlayerMatchStats);
			}
		}

		[Token(Token = "0x4001415")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly Dictionary<EntityRef, IPlayerName> _botNames;

		[Token(Token = "0x4001416")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TupleElementNamesAttribute", RVA = "0xBD716C", Offset = "0xBD716C")]
		private readonly Dictionary<(Quantum.Team, int), EntityRef> _botPerTeamAndIndex;

		[Token(Token = "0x4001417")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly Dictionary<EntityRef, BasicPlayerStatisticsData> _botsStatistics;

		[Token(Token = "0x4001418")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly Dictionary<int, HumanPlayerRefID> _playerIDs;

		[Token(Token = "0x4001419")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly Dictionary<int, IPlayerName> _playerNames;

		[Token(Token = "0x400141A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TupleElementNamesAttribute", RVA = "0xBD71F0", Offset = "0xBD71F0")]
		private readonly Dictionary<(Quantum.Team, int), PlayerRef> _playerPerTeamAndIndex;

		[Token(Token = "0x400141B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private readonly Dictionary<int, string> _playerPlayFabEntityIds;

		[Token(Token = "0x400141C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private readonly Dictionary<int, Dictionary<AssetRefPlayerClassConfiguration, PlayerClassStatistics>> _playersStatistics;

		[Token(Token = "0x400141D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private readonly Dictionary<int, Quantum.Team> _playerTeams;

		[Token(Token = "0x400141E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private readonly int _teamAScore;

		[Token(Token = "0x400141F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private readonly int _teamBScore;

		[Token(Token = "0x4001420")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD7274", Offset = "0xBD7274")]
		private readonly Quantum.Team <MyTeam>k__BackingField;

		[Token(Token = "0x4001421")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD7284", Offset = "0xBD7284")]
		private readonly bool <RankedGame>k__BackingField;

		[Token(Token = "0x4001422")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD7294", Offset = "0xBD7294")]
		private readonly Quantum.Team <VictoriousTeam>k__BackingField;

		[Token(Token = "0x4001423")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD72A4", Offset = "0xBD72A4")]
		private readonly RoundResult[] <RoundResults>k__BackingField;

		[Token(Token = "0x4001424")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD72B4", Offset = "0xBD72B4")]
		private readonly int <MaxRound>k__BackingField;

		[Token(Token = "0x170003E7")]
		public Quantum.Team MyTeam
		{
			[Token(Token = "0x60015B5")]
			[Address(RVA = "0x101317C", Offset = "0x101317C", VA = "0x101317C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE147C", Offset = "0xBE147C")]
			get
			{
				return default(Quantum.Team);
			}
		}

		[Token(Token = "0x170003E8")]
		public bool RankedGame
		{
			[Token(Token = "0x60015B6")]
			[Address(RVA = "0x1013184", Offset = "0x1013184", VA = "0x1013184")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE148C", Offset = "0xBE148C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170003E9")]
		public Quantum.Team VictoriousTeam
		{
			[Token(Token = "0x60015B7")]
			[Address(RVA = "0x101318C", Offset = "0x101318C", VA = "0x101318C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE149C", Offset = "0xBE149C")]
			get
			{
				return default(Quantum.Team);
			}
		}

		[Token(Token = "0x170003EA")]
		public RoundResult[] RoundResults
		{
			[Token(Token = "0x60015B8")]
			[Address(RVA = "0x1013194", Offset = "0x1013194", VA = "0x1013194")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE14AC", Offset = "0xBE14AC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003EB")]
		public int MaxRound
		{
			[Token(Token = "0x60015B9")]
			[Address(RVA = "0x101319C", Offset = "0x101319C", VA = "0x101319C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE14BC", Offset = "0xBE14BC")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x60015B4")]
		[Address(RVA = "0x1011818", Offset = "0x1011818", VA = "0x1011818")]
		public MatchStatisticsData(Frame f, MatchStatistics statistics)
		{
		}

		[Token(Token = "0x60015BA")]
		[Address(RVA = "0x10131A4", Offset = "0x10131A4", VA = "0x10131A4")]
		public IPlayerName GetPlayerName(bool myTeam, int idx)
		{
			return null;
		}

		[Token(Token = "0x60015BB")]
		[Address(RVA = "0x1013350", Offset = "0x1013350", VA = "0x1013350")]
		public BasicPlayerStatisticsData? GetPlayerStatisticsData(int uniqueID, Quantum.Team team)
		{
			return null;
		}

		[Token(Token = "0x60015BC")]
		[Address(RVA = "0x1013728", Offset = "0x1013728", VA = "0x1013728")]
		public BasicPlayerStatisticsData? GetPlayerStatisticsData(bool myTeam, int teamPlayerIndex)
		{
			return null;
		}

		[Token(Token = "0x60015BD")]
		[Address(RVA = "0x1013994", Offset = "0x1013994", VA = "0x1013994")]
		public string GetPlayerPlayFabId(bool myTeam, int teamPlayerIndex)
		{
			return null;
		}

		[Token(Token = "0x60015BE")]
		[Address(RVA = "0x1013450", Offset = "0x1013450", VA = "0x1013450")]
		private static PlayerStatisticsData AggregateClasses(Quantum.Team team, Dictionary<AssetRefPlayerClassConfiguration, PlayerClassStatistics> playerClassStatisticsMap)
		{
			return default(PlayerStatisticsData);
		}

		[Token(Token = "0x60015BF")]
		[Address(RVA = "0x1013A9C", Offset = "0x1013A9C", VA = "0x1013A9C")]
		public MatchStats GetMatchStats(string roomName)
		{
			return null;
		}

		[Token(Token = "0x60015C0")]
		[Address(RVA = "0x1013E6C", Offset = "0x1013E6C", VA = "0x1013E6C")]
		public int GetPlayerUniqueID(bool isOpponent, int teamPlayerIndex)
		{
			return default(int);
		}

		[Token(Token = "0x60015C1")]
		[Address(RVA = "0x1013F44", Offset = "0x1013F44", VA = "0x1013F44")]
		public Quantum.Team GetPlayerTeam(int uuid)
		{
			return default(Quantum.Team);
		}

		[Token(Token = "0x60015C2")]
		[Address(RVA = "0x1013FC0", Offset = "0x1013FC0", VA = "0x1013FC0")]
		public bool IsPlayerWasInMatch(int uuid)
		{
			return default(bool);
		}

		[Token(Token = "0x60015C3")]
		[Address(RVA = "0x1014034", Offset = "0x1014034", VA = "0x1014034")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE14CC", Offset = "0xBE14CC")]
		private PlayerMatchStats? <GetMatchStats>b__32_2(KeyValuePair<int, Dictionary<AssetRefPlayerClassConfiguration, PlayerClassStatistics>> player)
		{
			return null;
		}
	}
	[Token(Token = "0x200063C")]
	public class NetworkClient : MonoBehaviour, IConnectionCallbacks, IMatchmakingCallbacks
	{
		[Serializable]
		[Token(Token = "0x200063D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCABBC", Offset = "0xBCABBC")]
		private sealed class <>c
		{
			[Token(Token = "0x400144A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x400144B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<QuantumRunner, bool> <>9__42_0;

			[Token(Token = "0x400144C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<QuantumRunner, bool> <>9__51_0;

			[Token(Token = "0x60015FE")]
			[Address(RVA = "0x11DBD30", Offset = "0x11DBD30", VA = "0x11DBD30")]
			public <>c()
			{
			}

			[Token(Token = "0x60015FF")]
			[Address(RVA = "0x11DBD38", Offset = "0x11DBD38", VA = "0x11DBD38")]
			internal bool <OnApplicationPause>b__42_0(QuantumRunner x)
			{
				return default(bool);
			}

			[Token(Token = "0x6001600")]
			[Address(RVA = "0x11DBD5C", Offset = "0x11DBD5C", VA = "0x11DBD5C")]
			internal bool <Stop>b__51_0(QuantumRunner x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x200063E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCABCC", Offset = "0xBCABCC")]
		private sealed class <ComeBackFromBlack>d__43 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400144D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400144E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400144F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public NetworkClient <>4__this;

			[Token(Token = "0x170003F2")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001604")]
				[Address(RVA = "0x11DC124", Offset = "0x11DC124", VA = "0x11DC124", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003F3")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001606")]
				[Address(RVA = "0x11DC16C", Offset = "0x11DC16C", VA = "0x11DC16C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001601")]
			[Address(RVA = "0x11DBF78", Offset = "0x11DBF78", VA = "0x11DBF78")]
			[DebuggerHidden]
			public <ComeBackFromBlack>d__43(int <>1__state)
			{
			}

			[Token(Token = "0x6001602")]
			[Address(RVA = "0x11DBFA4", Offset = "0x11DBFA4", VA = "0x11DBFA4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001603")]
			[Address(RVA = "0x11DBFA8", Offset = "0x11DBFA8", VA = "0x11DBFA8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001605")]
			[Address(RVA = "0x11DC12C", Offset = "0x11DC12C", VA = "0x11DC12C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200063F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCABDC", Offset = "0xBCABDC")]
		private sealed class <>c__DisplayClass45_0
		{
			[Token(Token = "0x4001450")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public NetworkClient <>4__this;

			[Token(Token = "0x4001451")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public CancellationToken cancellationToken;

			[Token(Token = "0x6001607")]
			[Address(RVA = "0x11DBD80", Offset = "0x11DBD80", VA = "0x11DBD80")]
			public <>c__DisplayClass45_0()
			{
			}

			[Token(Token = "0x6001608")]
			[Address(RVA = "0x11DBD88", Offset = "0x11DBD88", VA = "0x11DBD88")]
			internal void <RunInBackground>b__0()
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000640")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCABEC", Offset = "0xBCABEC")]
		private struct <RecordToPlayFab>d__54 : IAsyncStateMachine
		{
			[Token(Token = "0x4001452")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001453")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x4001454")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public NetworkClient <>4__this;

			[Token(Token = "0x4001455")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public MatchStatisticsData data;

			[Token(Token = "0x4001456")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x4001457")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private TaskAwaiter<RecordPlayerMatchStatsResult> <>u__2;

			[Token(Token = "0x6001609")]
			[Address(RVA = "0x11DC174", Offset = "0x11DC174", VA = "0x11DC174", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x600160A")]
			[Address(RVA = "0x11DC500", Offset = "0x11DC500", VA = "0x11DC500", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000641")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCABFC", Offset = "0xBCABFC")]
		private struct <StartQuantumAsync>d__68 : IAsyncStateMachine
		{
			[Token(Token = "0x4001458")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001459")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x400145A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public NetworkClient <>4__this;

			[Token(Token = "0x400145B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private TaskAwaiter<QuantumRunner> <>u__1;

			[Token(Token = "0x600160B")]
			[Address(RVA = "0x11DC50C", Offset = "0x11DC50C", VA = "0x11DC50C", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x600160C")]
			[Address(RVA = "0x11DC840", Offset = "0x11DC840", VA = "0x11DC840", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4001431")]
		private const float BlackSecondsPerMinute = 6f;

		[Token(Token = "0x4001432")]
		private const float MaxBlackSeconds = 5f;

		[Token(Token = "0x4001433")]
		private const int SecondsToKeepAlive = 60;

		[Token(Token = "0x4001434")]
		private const int FrameRate = 36;

		[Token(Token = "0x4001435")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly object _backgroundLock;

		[Token(Token = "0x4001436")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool _allowCreateRoom;

		[Token(Token = "0x4001437")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private System.Threading.Thread _backgroundThread;

		[Token(Token = "0x4001438")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private CancellationTokenSource _backgroundThreadCancellation;

		[Token(Token = "0x4001439")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private QuantumLoadBalancingClient _client;

		[Token(Token = "0x400143A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private string _clientId;

		[Token(Token = "0x400143B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private RuntimeConfig _config;

		[Token(Token = "0x400143C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool _hasConnectionProblems;

		[Token(Token = "0x400143D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		private bool _isPaused;

		[Token(Token = "0x400143E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x52")]
		private bool _isSubscribed;

		[Token(Token = "0x400143F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Task _lastRecordToPlayfab;

		[Token(Token = "0x4001440")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool _needLock;

		[Token(Token = "0x4001441")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Action _onFailToJoinRoom;

		[Token(Token = "0x4001442")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float _pauseTime;

		[Token(Token = "0x4001443")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private bool _rejoining;

		[Token(Token = "0x4001444")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private object _voipConnection;

		[Token(Token = "0x4001445")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD72C4", Offset = "0xBD72C4")]
		private bool <IsConnected>k__BackingField;

		[Token(Token = "0x4001446")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD72D4", Offset = "0xBD72D4")]
		private readonly VoipNetworkClient <Voip>k__BackingField;

		[Token(Token = "0x4001447")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD72E4", Offset = "0xBD72E4")]
		private string <RoomName>k__BackingField;

		[Token(Token = "0x4001448")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD72F4", Offset = "0xBD72F4")]
		private string <Region>k__BackingField;

		[Token(Token = "0x4001449")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD7304", Offset = "0xBD7304")]
		private MatchStatisticsData <LastMatchStatisticsData>k__BackingField;

		[Token(Token = "0x170003EC")]
		public bool IsConnected
		{
			[Token(Token = "0x60015D1")]
			[Address(RVA = "0x101AE90", Offset = "0x101AE90", VA = "0x101AE90")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE14DC", Offset = "0xBE14DC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60015D2")]
			[Address(RVA = "0x101AE98", Offset = "0x101AE98", VA = "0x101AE98")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE14EC", Offset = "0xBE14EC")]
			private set
			{
			}
		}

		[Token(Token = "0x170003ED")]
		public VoipNetworkClient Voip
		{
			[Token(Token = "0x60015D3")]
			[Address(RVA = "0x101AEA4", Offset = "0x101AEA4", VA = "0x101AEA4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE14FC", Offset = "0xBE14FC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003EE")]
		public string RoomName
		{
			[Token(Token = "0x60015D4")]
			[Address(RVA = "0x101AEAC", Offset = "0x101AEAC", VA = "0x101AEAC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE150C", Offset = "0xBE150C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60015D5")]
			[Address(RVA = "0x101AEB4", Offset = "0x101AEB4", VA = "0x101AEB4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE151C", Offset = "0xBE151C")]
			private set
			{
			}
		}

		[Token(Token = "0x170003EF")]
		public string Region
		{
			[Token(Token = "0x60015D6")]
			[Address(RVA = "0x101AEBC", Offset = "0x101AEBC", VA = "0x101AEBC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE152C", Offset = "0xBE152C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60015D7")]
			[Address(RVA = "0x101AEC4", Offset = "0x101AEC4", VA = "0x101AEC4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE153C", Offset = "0xBE153C")]
			private set
			{
			}
		}

		[Token(Token = "0x170003F0")]
		[CanBeNull]
		public MatchStatisticsData LastMatchStatisticsData
		{
			[Token(Token = "0x60015D8")]
			[Address(RVA = "0x101AECC", Offset = "0x101AECC", VA = "0x101AECC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE154C", Offset = "0xBE154C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60015D9")]
			[Address(RVA = "0x101AED4", Offset = "0x101AED4", VA = "0x101AED4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE155C", Offset = "0xBE155C")]
			private set
			{
			}
		}

		[Token(Token = "0x170003F1")]
		public bool IsRankedGame
		{
			[Token(Token = "0x60015DA")]
			[Address(RVA = "0x1015E50", Offset = "0x1015E50", VA = "0x1015E50")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60015DB")]
		[Address(RVA = "0x101AEDC", Offset = "0x101AEDC", VA = "0x101AEDC")]
		public void Update()
		{
		}

		[Token(Token = "0x60015DC")]
		[Address(RVA = "0x101B030", Offset = "0x101B030", VA = "0x101B030")]
		private void OnApplicationPause(bool pauseStatus)
		{
		}

		[Token(Token = "0x60015DD")]
		[Address(RVA = "0x101AFC4", Offset = "0x101AFC4", VA = "0x101AFC4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xBE156C", Offset = "0xBE156C")]
		private IEnumerator ComeBackFromBlack()
		{
			return null;
		}

		[Token(Token = "0x60015DE")]
		[Address(RVA = "0x101AF7C", Offset = "0x101AF7C", VA = "0x101AF7C")]
		private void ShutdownBackgroundServer()
		{
		}

		[Token(Token = "0x60015DF")]
		[Address(RVA = "0x101B2C0", Offset = "0x101B2C0", VA = "0x101B2C0")]
		private void RunInBackground()
		{
		}

		[Token(Token = "0x60015E0")]
		[Address(RVA = "0x101B558", Offset = "0x101B558", VA = "0x101B558")]
		public void UpdateLastMatchStatisticsData(bool record)
		{
		}

		[Token(Token = "0x60015E1")]
		[Address(RVA = "0x100E7A0", Offset = "0x100E7A0", VA = "0x100E7A0")]
		public void DropPostMatchStatistics()
		{
		}

		[Token(Token = "0x60015E2")]
		[Address(RVA = "0x101B838", Offset = "0x101B838", VA = "0x101B838")]
		public void StartInRoom(RuntimeConfig config, string playerId, string region, string room, bool allowCreateRoom = true, [System.Runtime.InteropServices.Optional] Action onFailToJoinRoom)
		{
		}

		[Token(Token = "0x60015E3")]
		[Address(RVA = "0x101BFF4", Offset = "0x101BFF4", VA = "0x101BFF4")]
		private void Unsubscribe()
		{
		}

		[Token(Token = "0x60015E4")]
		[Address(RVA = "0x101BF34", Offset = "0x101BF34", VA = "0x101BF34")]
		private void Subscribe()
		{
		}

		[Token(Token = "0x60015E5")]
		[Address(RVA = "0x101BBE4", Offset = "0x101BBE4", VA = "0x101BBE4")]
		public void Stop()
		{
		}

		[Token(Token = "0x60015E6")]
		[Address(RVA = "0x101B598", Offset = "0x101B598", VA = "0x101B598")]
		private static MatchStatisticsData TryGetLastMatchStatistics()
		{
			return null;
		}

		[Token(Token = "0x60015E7")]
		[Address(RVA = "0x101C034", Offset = "0x101C034", VA = "0x101C034")]
		public void RecordMatchStatisticsToPlayFab()
		{
		}

		[Token(Token = "0x60015E8")]
		[Address(RVA = "0x101B728", Offset = "0x101B728", VA = "0x101B728")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xBE15CC", Offset = "0xBE15CC")]
		private Task RecordToPlayFab(MatchStatisticsData data)
		{
			return null;
		}

		[Token(Token = "0x60015E9")]
		[Address(RVA = "0x101C068", Offset = "0x101C068", VA = "0x101C068", Slot = "4")]
		public void OnConnected()
		{
		}

		[Token(Token = "0x60015EA")]
		[Address(RVA = "0x101C0E8", Offset = "0x101C0E8", VA = "0x101C0E8")]
		private void NoConnectionProblems()
		{
		}

		[Token(Token = "0x60015EB")]
		[Address(RVA = "0x101C178", Offset = "0x101C178", VA = "0x101C178")]
		private void HasConnectionProblems()
		{
		}

		[Token(Token = "0x60015EC")]
		[Address(RVA = "0x101C20C", Offset = "0x101C20C", VA = "0x101C20C", Slot = "5")]
		public void OnConnectedToMaster()
		{
		}

		[Token(Token = "0x60015ED")]
		[Address(RVA = "0x101C294", Offset = "0x101C294", VA = "0x101C294")]
		private void JoinRoom()
		{
		}

		[Token(Token = "0x60015EE")]
		[Address(RVA = "0x101C590", Offset = "0x101C590", VA = "0x101C590", Slot = "6")]
		public void OnDisconnected(DisconnectCause cause)
		{
		}

		[Token(Token = "0x60015EF")]
		[Address(RVA = "0x101C67C", Offset = "0x101C67C", VA = "0x101C67C", Slot = "7")]
		public void OnRegionListReceived(RegionHandler regionHandler)
		{
		}

		[Token(Token = "0x60015F0")]
		[Address(RVA = "0x101C680", Offset = "0x101C680", VA = "0x101C680", Slot = "8")]
		public void OnCustomAuthenticationResponse(Dictionary<string, object> data)
		{
		}

		[Token(Token = "0x60015F1")]
		[Address(RVA = "0x101C684", Offset = "0x101C684", VA = "0x101C684", Slot = "9")]
		public void OnCustomAuthenticationFailed(string debugMessage)
		{
		}

		[Token(Token = "0x60015F2")]
		[Address(RVA = "0x101C704", Offset = "0x101C704", VA = "0x101C704", Slot = "10")]
		public void OnFriendListUpdate(List<Photon.Realtime.FriendInfo> friendList)
		{
		}

		[Token(Token = "0x60015F3")]
		[Address(RVA = "0x101C708", Offset = "0x101C708", VA = "0x101C708", Slot = "11")]
		public void OnCreatedRoom()
		{
		}

		[Token(Token = "0x60015F4")]
		[Address(RVA = "0x101C77C", Offset = "0x101C77C", VA = "0x101C77C", Slot = "12")]
		public void OnCreateRoomFailed(short returnCode, string message)
		{
		}

		[Token(Token = "0x60015F5")]
		[Address(RVA = "0x101C7FC", Offset = "0x101C7FC", VA = "0x101C7FC", Slot = "13")]
		public void OnJoinedRoom()
		{
		}

		[Token(Token = "0x60015F6")]
		[Address(RVA = "0x101C98C", Offset = "0x101C98C", VA = "0x101C98C")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xBE162C", Offset = "0xBE162C")]
		private void StartQuantumAsync()
		{
		}

		[Token(Token = "0x60015F7")]
		[Address(RVA = "0x101CA50", Offset = "0x101CA50", VA = "0x101CA50", Slot = "14")]
		public void OnJoinRoomFailed(short returnCode, string message)
		{
		}

		[Token(Token = "0x60015F8")]
		[Address(RVA = "0x101C4F8", Offset = "0x101C4F8", VA = "0x101C4F8")]
		private void FailJoin()
		{
		}

		[Token(Token = "0x60015F9")]
		[Address(RVA = "0x101CC20", Offset = "0x101CC20", VA = "0x101CC20", Slot = "15")]
		public void OnJoinRandomFailed(short returnCode, string message)
		{
		}

		[Token(Token = "0x60015FA")]
		[Address(RVA = "0x101B404", Offset = "0x101B404", VA = "0x101B404", Slot = "16")]
		public void OnLeftRoom()
		{
		}

		[Token(Token = "0x60015FB")]
		[Address(RVA = "0x101BF78", Offset = "0x101BF78", VA = "0x101BF78")]
		private void Fail()
		{
		}

		[Token(Token = "0x60015FC")]
		[Address(RVA = "0x101CCA0", Offset = "0x101CCA0", VA = "0x101CCA0")]
		public NetworkClient()
		{
		}
	}
	[Token(Token = "0x2000642")]
	public class PhotonConnectionCallbackHandler : IConnectionCallbacks
	{
		[Token(Token = "0x400145C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool HasReceivedRegions;

		[Token(Token = "0x400145D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public bool IsConnected;

		[Token(Token = "0x400145E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public RegionHandler RegionHandler;

		[Token(Token = "0x600160D")]
		[Address(RVA = "0xFD1F70", Offset = "0xFD1F70", VA = "0xFD1F70", Slot = "4")]
		public void OnConnected()
		{
		}

		[Token(Token = "0x600160E")]
		[Address(RVA = "0xFD1F7C", Offset = "0xFD1F7C", VA = "0xFD1F7C", Slot = "5")]
		public void OnConnectedToMaster()
		{
		}

		[Token(Token = "0x600160F")]
		[Address(RVA = "0xFD1F80", Offset = "0xFD1F80", VA = "0xFD1F80", Slot = "6")]
		public void OnDisconnected(DisconnectCause cause)
		{
		}

		[Token(Token = "0x6001610")]
		[Address(RVA = "0xFD1F88", Offset = "0xFD1F88", VA = "0xFD1F88", Slot = "7")]
		public void OnRegionListReceived(RegionHandler regionHandler)
		{
		}

		[Token(Token = "0x6001611")]
		[Address(RVA = "0xFD1F98", Offset = "0xFD1F98", VA = "0xFD1F98", Slot = "8")]
		public void OnCustomAuthenticationResponse(Dictionary<string, object> data)
		{
		}

		[Token(Token = "0x6001612")]
		[Address(RVA = "0xFD1F9C", Offset = "0xFD1F9C", VA = "0xFD1F9C", Slot = "9")]
		public void OnCustomAuthenticationFailed(string debugMessage)
		{
		}

		[Token(Token = "0x6001613")]
		[Address(RVA = "0xFD1FA0", Offset = "0xFD1FA0", VA = "0xFD1FA0")]
		public PhotonConnectionCallbackHandler()
		{
		}
	}
	[Token(Token = "0x2000643")]
	public class QuantumRoomJoiner : QuantumCallbacks
	{
		[Serializable]
		[Token(Token = "0x2000644")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCAC0C", Offset = "0xBCAC0C")]
		private sealed class <>c
		{
			[Token(Token = "0x400146C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x400146D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<EntitledPlayerClass, PlayerLoadout> <>9__16_0;

			[Token(Token = "0x600161E")]
			[Address(RVA = "0x105BE40", Offset = "0x105BE40", VA = "0x105BE40")]
			public <>c()
			{
			}

			[Token(Token = "0x600161F")]
			[Address(RVA = "0x105BE48", Offset = "0x105BE48", VA = "0x105BE48")]
			internal PlayerLoadout <SceneLoaderOnLevelLoadStarted>b__16_0(EntitledPlayerClass x)
			{
				return default(PlayerLoadout);
			}
		}

		[Token(Token = "0x2000645")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCAC1C", Offset = "0xBCAC1C")]
		private sealed class <>c__DisplayClass19_0
		{
			[Token(Token = "0x400146E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public QuantumRoomJoiner <>4__this;

			[Token(Token = "0x400146F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public QuantumGame game;

			[Token(Token = "0x6001620")]
			[Address(RVA = "0x105BEA0", Offset = "0x105BEA0", VA = "0x105BEA0")]
			public <>c__DisplayClass19_0()
			{
			}

			[Token(Token = "0x6001621")]
			[Address(RVA = "0x105BEA8", Offset = "0x105BEA8", VA = "0x105BEA8")]
			internal void <OnJoined>b__0(CallbackGameDestroyed c)
			{
			}

			[Token(Token = "0x6001622")]
			[Address(RVA = "0x105BF34", Offset = "0x105BF34", VA = "0x105BF34")]
			internal bool <OnJoined>b__1(IDeterministicGame g)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x400145F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private BoundValue<PhotonRoom?> customGameRoom;

		[Token(Token = "0x4001460")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private BoundValue<GetMatchResult> matchedMatch;

		[Token(Token = "0x4001461")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private RuntimeConfig config;

		[Token(Token = "0x4001462")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private bool startWhileLocalGameIsRunning;

		[Token(Token = "0x4001463")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private BoundValue<bool> requireExistingRoom;

		[Token(Token = "0x4001464")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private UnityEvent onNoRoom;

		[Token(Token = "0x4001465")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private AssetRefGameModeSetup _gameModeSetup;

		[Token(Token = "0x4001466")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private QuantumGame _game;

		[Token(Token = "0x4001467")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private PhotonRoom? _photonRoom;

		[Token(Token = "0x4001468")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private GetMatchResult _rankedMatch;

		[Token(Token = "0x4001469")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private ReactiveSubscription _reactiveSubscription;

		[Token(Token = "0x400146A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private bool _running;

		[Token(Token = "0x400146B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x81")]
		private bool _starting;

		[Token(Token = "0x6001614")]
		[Address(RVA = "0x124C058", Offset = "0x124C058", VA = "0x124C058")]
		private void Update()
		{
		}

		[Token(Token = "0x6001615")]
		[Address(RVA = "0x124C46C", Offset = "0x124C46C", VA = "0x124C46C", Slot = "4")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6001616")]
		[Address(RVA = "0x124C68C", Offset = "0x124C68C", VA = "0x124C68C", Slot = "5")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x6001617")]
		[Address(RVA = "0x124C7C8", Offset = "0x124C7C8", VA = "0x124C7C8")]
		private void SceneLoaderOnLevelLoadStarted(object sender, [AttributeAttribute(Name = "TupleElementNamesAttribute", RVA = "0xBE45F8", Offset = "0xBE45F8")] (string, AssetRefGameModeSetup, QuantumGame) valueTuple)
		{
		}

		[Token(Token = "0x6001618")]
		[Address(RVA = "0x124C9F8", Offset = "0x124C9F8", VA = "0x124C9F8")]
		private void RoomChanged([AttributeAttribute(Name = "TupleElementNamesAttribute", RVA = "0xBE468C", Offset = "0xBE468C")] (GetMatchResult, PhotonRoom?, IReadOnlyList<EntitledPlayerClass>) args)
		{
		}

		[Token(Token = "0x6001619")]
		[Address(RVA = "0x124CD20", Offset = "0x124CD20", VA = "0x124CD20", Slot = "7")]
		public override void OnGameResync(QuantumGame game)
		{
		}

		[Token(Token = "0x600161A")]
		[Address(RVA = "0x124CD24", Offset = "0x124CD24", VA = "0x124CD24")]
		private void OnJoined(QuantumGame game)
		{
		}

		[Token(Token = "0x600161B")]
		[Address(RVA = "0x124D510", Offset = "0x124D510", VA = "0x124D510", Slot = "6")]
		public override void OnGameStart(QuantumGame game)
		{
		}

		[Token(Token = "0x600161C")]
		[Address(RVA = "0x124D514", Offset = "0x124D514", VA = "0x124D514")]
		public QuantumRoomJoiner()
		{
		}
	}
	[Token(Token = "0x2000646")]
	public class RegionLatencies
	{
		[Token(Token = "0x2000647")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCAC2C", Offset = "0xBCAC2C")]
		private sealed class <>c__DisplayClass7_0
		{
			[Token(Token = "0x4001476")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public TaskCompletionSource<RegionHandler> task;

			[Token(Token = "0x6001629")]
			[Address(RVA = "0x105D5DC", Offset = "0x105D5DC", VA = "0x105D5DC")]
			public <>c__DisplayClass7_0()
			{
			}

			[Token(Token = "0x600162A")]
			[Address(RVA = "0x105D5E4", Offset = "0x105D5E4", VA = "0x105D5E4")]
			internal void <MeasureAsync>b__0(RegionHandler x)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000648")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCAC3C", Offset = "0xBCAC3C")]
		private struct <MeasureAsync>d__7 : IAsyncStateMachine
		{
			[Token(Token = "0x4001477")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001478")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder<RegionLatencies> <>t__builder;

			[Token(Token = "0x4001479")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private <>c__DisplayClass7_0 <>8__1;

			[Token(Token = "0x400147A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private QuantumLoadBalancingClient <client>5__2;

			[Token(Token = "0x400147B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private PhotonConnectionCallbackHandler <connectionHandler>5__3;

			[Token(Token = "0x400147C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private CancellationTokenSource <cancellationToken>5__4;

			[Token(Token = "0x400147D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private Task <timeout>5__5;

			[Token(Token = "0x400147E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private RegionHandler <regionHandler>5__6;

			[Token(Token = "0x400147F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private TaskAwaiter<IReadOnlyDictionary<AssetGuid, AssetBase>> <>u__1;

			[Token(Token = "0x4001480")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private TaskAwaiter <>u__2;

			[Token(Token = "0x4001481")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private TaskAwaiter<RegionHandler> <>u__3;

			[Token(Token = "0x600162B")]
			[Address(RVA = "0x105D648", Offset = "0x105D648", VA = "0x105D648", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x600162C")]
			[Address(RVA = "0x105E5A4", Offset = "0x105E5A4", VA = "0x105E5A4", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4001470")]
		private const PhotonRegion DefaultRegion = PhotonRegion.eu;

		[Token(Token = "0x4001471")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly TimeSpan MeasureTimeout;

		[Token(Token = "0x4001472")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static string _regionSummaryCache;

		[Token(Token = "0x4001473")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static readonly Dictionary<string, Photon.Realtime.Region> Regions;

		[Token(Token = "0x4001474")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static readonly Dictionary<string, int> Latencies;

		[Token(Token = "0x4001475")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly PhotonRegion BestRegion;

		[Token(Token = "0x6001623")]
		[Address(RVA = "0x11EFA8C", Offset = "0x11EFA8C", VA = "0x11EFA8C")]
		private RegionLatencies(PhotonRegion bestRegion)
		{
		}

		[Token(Token = "0x6001624")]
		[Address(RVA = "0x11EFAB8", Offset = "0x11EFAB8", VA = "0x11EFAB8")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xBE16FC", Offset = "0xBE16FC")]
		public static Task<RegionLatencies> MeasureAsync()
		{
			return null;
		}

		[Token(Token = "0x6001625")]
		[Address(RVA = "0x11EFBD4", Offset = "0x11EFBD4", VA = "0x11EFBD4")]
		public static RegionLatencies GetDefault()
		{
			return null;
		}

		[Token(Token = "0x6001626")]
		[Address(RVA = "0x11EFC34", Offset = "0x11EFC34", VA = "0x11EFC34")]
		public Dictionary<string, int> GetLatencies()
		{
			return null;
		}

		[Token(Token = "0x6001627")]
		[Address(RVA = "0x11EFC98", Offset = "0x11EFC98", VA = "0x11EFC98")]
		public Dictionary<string, Photon.Realtime.Region> GetRegions()
		{
			return null;
		}
	}
}
namespace Cortopia.Scripts.Localization
{
	[Token(Token = "0x2000649")]
	public class LocalizationFontTable : MonoBehaviour
	{
		[Token(Token = "0x4001482")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private List<Material> oldTmpMaterials;

		[Token(Token = "0x4001483")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private List<Material> newTmpMaterials;

		[Token(Token = "0x600162D")]
		[Address(RVA = "0xF8A074", Offset = "0xF8A074", VA = "0xF8A074")]
		public bool GetNewMaterial(in Material oldMaterial, out Material newMaterial)
		{
			return default(bool);
		}

		[Token(Token = "0x600162E")]
		[Address(RVA = "0xF8A130", Offset = "0xF8A130", VA = "0xF8A130")]
		public bool GetOldMaterial(in Material newMaterial, out Material oldMaterial)
		{
			return default(bool);
		}

		[Token(Token = "0x600162F")]
		[Address(RVA = "0xF8A1EC", Offset = "0xF8A1EC", VA = "0xF8A1EC")]
		public LocalizationFontTable()
		{
		}
	}
}
namespace Cortopia.Scripts.InputSystem
{
	[Token(Token = "0x200064A")]
	public static class BodyPartExtensions
	{
		[Token(Token = "0x6001630")]
		[Address(RVA = "0x1330D9C", Offset = "0x1330D9C", VA = "0x1330D9C")]
		public static XRNode AsXRNode(this BodyPart bodyPart)
		{
			return default(XRNode);
		}

		[Token(Token = "0x6001631")]
		[Address(RVA = "0x1330E3C", Offset = "0x1330E3C", VA = "0x1330E3C")]
		public static bool IsXRNode(this BodyPart bodyPart)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200064B")]
	public class DamageHaptics : MonoBehaviour, IHaptics
	{
		[Token(Token = "0x4001484")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private HapticsClip damageHapticsClip;

		[Token(Token = "0x4001485")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private HapticsClip dieHapticsClip;

		[Token(Token = "0x4001486")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool _lastPlayedWasDeath;

		[Token(Token = "0x4001487")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD73B4", Offset = "0xBD73B4")]
		private float <LeftAmplitudeScale>k__BackingField;

		[Token(Token = "0x4001488")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD73C4", Offset = "0xBD73C4")]
		private float <RightAmplitudeScale>k__BackingField;

		[Token(Token = "0x4001489")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD73D4", Offset = "0xBD73D4")]
		private HapticsClip <HapticsClip>k__BackingField;

		[Token(Token = "0x170003F4")]
		public float LeftAmplitudeScale
		{
			[Token(Token = "0x6001634")]
			[Address(RVA = "0x116E818", Offset = "0x116E818", VA = "0x116E818", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE178C", Offset = "0xBE178C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001635")]
			[Address(RVA = "0x116E820", Offset = "0x116E820", VA = "0x116E820")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE179C", Offset = "0xBE179C")]
			private set
			{
			}
		}

		[Token(Token = "0x170003F5")]
		public float RightAmplitudeScale
		{
			[Token(Token = "0x6001636")]
			[Address(RVA = "0x116E828", Offset = "0x116E828", VA = "0x116E828", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE17AC", Offset = "0xBE17AC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001637")]
			[Address(RVA = "0x116E830", Offset = "0x116E830", VA = "0x116E830")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE17BC", Offset = "0xBE17BC")]
			private set
			{
			}
		}

		[Token(Token = "0x170003F6")]
		public HapticsClip HapticsClip
		{
			[Token(Token = "0x6001638")]
			[Address(RVA = "0x116E838", Offset = "0x116E838", VA = "0x116E838", Slot = "6")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE17CC", Offset = "0xBE17CC")]
			get
			{
				return default(HapticsClip);
			}
			[Token(Token = "0x6001639")]
			[Address(RVA = "0x116E844", Offset = "0x116E844", VA = "0x116E844")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE17DC", Offset = "0xBE17DC")]
			private set
			{
			}
		}

		[Token(Token = "0x6001632")]
		[Address(RVA = "0x116E628", Offset = "0x116E628", VA = "0x116E628")]
		private void Start()
		{
		}

		[Token(Token = "0x6001633")]
		[Address(RVA = "0x116E798", Offset = "0x116E798", VA = "0x116E798")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600163A")]
		[Address(RVA = "0x116E84C", Offset = "0x116E84C", VA = "0x116E84C")]
		private void OnPlayerDiedEvent(EventPlayerDied callback)
		{
		}

		[Token(Token = "0x600163B")]
		[Address(RVA = "0x116E96C", Offset = "0x116E96C", VA = "0x116E96C")]
		private void OnDamageTakenEvent(EventHitBy callback)
		{
		}

		[Token(Token = "0x600163C")]
		[Address(RVA = "0x116EBDC", Offset = "0x116EBDC", VA = "0x116EBDC")]
		public DamageHaptics()
		{
		}
	}
	[Token(Token = "0x200064C")]
	public class GlobalHapticsManager : MonoBehaviour
	{
		[Token(Token = "0x400148A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GlobalUIHaptics UI;

		[Token(Token = "0x600163D")]
		[Address(RVA = "0xFA83D4", Offset = "0xFA83D4", VA = "0xFA83D4")]
		public GlobalHapticsManager()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200064D")]
	public class GlobalUIHaptics
	{
		[Token(Token = "0x400148B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private Haptics onHighlightHaptics;

		[Token(Token = "0x400148C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Haptics onPressHaptics;

		[Token(Token = "0x600163E")]
		[Address(RVA = "0xFA854C", Offset = "0xFA854C", VA = "0xFA854C")]
		public void PlayHighlightHaptics()
		{
		}

		[Token(Token = "0x600163F")]
		[Address(RVA = "0xFA85DC", Offset = "0xFA85DC", VA = "0xFA85DC")]
		public void PlayPressHaptics()
		{
		}

		[Token(Token = "0x6001640")]
		[Address(RVA = "0xFA85F4", Offset = "0xFA85F4", VA = "0xFA85F4")]
		public GlobalUIHaptics()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200064E")]
	public struct HapticImpulse
	{
		[Token(Token = "0x400148D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private float amplitude;

		[Token(Token = "0x400148E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		[SerializeField]
		private float duration;

		[Token(Token = "0x170003F7")]
		public float Amplitude
		{
			[Token(Token = "0x6001641")]
			[Address(RVA = "0xFAFF2C", Offset = "0xFAFF2C", VA = "0xFAFF2C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170003F8")]
		public float Duration
		{
			[Token(Token = "0x6001642")]
			[Address(RVA = "0xFAFF34", Offset = "0xFAFF34", VA = "0xFAFF34")]
			get
			{
				return default(float);
			}
		}
	}
	[Token(Token = "0x200064F")]
	public enum HapticTargetHand
	{
		[Token(Token = "0x4001490")]
		Left,
		[Token(Token = "0x4001491")]
		Right,
		[Token(Token = "0x4001492")]
		Both,
		[Token(Token = "0x4001493")]
		UI,
		[Token(Token = "0x4001494")]
		SpellCaster
	}
	[Token(Token = "0x2000650")]
	public class Haptics : MonoBehaviour, IHaptics
	{
		[Token(Token = "0x4001495")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private HapticTargetHand targetHand;

		[Token(Token = "0x4001496")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private BoundValue<BodyPart> activeSpellCasterHand;

		[Token(Token = "0x4001497")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private HapticsClip hapticsClip;

		[Token(Token = "0x4001498")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private bool playOnEnable;

		[Token(Token = "0x170003F9")]
		public bool IsPlaying
		{
			[Token(Token = "0x6001643")]
			[Address(RVA = "0xFAFF3C", Offset = "0xFAFF3C", VA = "0xFAFF3C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170003FA")]
		public float LeftAmplitudeScale
		{
			[Token(Token = "0x6001646")]
			[Address(RVA = "0xFB004C", Offset = "0xFB004C", VA = "0xFB004C", Slot = "4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170003FB")]
		public float RightAmplitudeScale
		{
			[Token(Token = "0x6001647")]
			[Address(RVA = "0xFB02E8", Offset = "0xFB02E8", VA = "0xFB02E8", Slot = "5")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170003FC")]
		private HapticsClip Cortopia.Scripts.InputSystem.IHaptics.HapticsClip
		{
			[Token(Token = "0x6001648")]
			[Address(RVA = "0xFB0310", Offset = "0xFB0310", VA = "0xFB0310", Slot = "6")]
			get
			{
				return default(HapticsClip);
			}
		}

		[Token(Token = "0x6001644")]
		[Address(RVA = "0xFAFFB4", Offset = "0xFAFFB4", VA = "0xFAFFB4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001645")]
		[Address(RVA = "0xFAFFC4", Offset = "0xFAFFC4", VA = "0xFAFFC4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001649")]
		[Address(RVA = "0xFB0074", Offset = "0xFB0074", VA = "0xFB0074")]
		private bool IsTarget(int handIndex)
		{
			return default(bool);
		}

		[Token(Token = "0x600164A")]
		[Address(RVA = "0xFA8564", Offset = "0xFA8564", VA = "0xFA8564")]
		public void Play()
		{
		}

		[Token(Token = "0x600164B")]
		[Address(RVA = "0xFAFFD4", Offset = "0xFAFFD4", VA = "0xFAFFD4")]
		public void Stop()
		{
		}

		[Token(Token = "0x600164C")]
		[Address(RVA = "0xFB031C", Offset = "0xFB031C", VA = "0xFB031C")]
		public Haptics()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000651")]
	public struct HapticsClip
	{
		[Token(Token = "0x4001499")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private List<HapticImpulse> impulses;

		[Token(Token = "0x400149A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[SerializeField]
		private int intervals;

		[Token(Token = "0x400149B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[SerializeField]
		private int repeatFromImpulseIndex;

		[Token(Token = "0x170003FD")]
		public IReadOnlyList<HapticImpulse> Impulses
		{
			[Token(Token = "0x600164D")]
			[Address(RVA = "0xFB0334", Offset = "0xFB0334", VA = "0xFB0334")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003FE")]
		public int Intervals
		{
			[Token(Token = "0x600164E")]
			[Address(RVA = "0xFB033C", Offset = "0xFB033C", VA = "0xFB033C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170003FF")]
		public int RepeatFromImpulseIndex
		{
			[Token(Token = "0x600164F")]
			[Address(RVA = "0xFB0344", Offset = "0xFB0344", VA = "0xFB0344")]
			get
			{
				return default(int);
			}
		}
	}
	[Token(Token = "0x2000652")]
	public interface IHaptics
	{
		[Token(Token = "0x17000400")]
		float LeftAmplitudeScale
		{
			[Token(Token = "0x6001650")]
			get;
		}

		[Token(Token = "0x17000401")]
		float RightAmplitudeScale
		{
			[Token(Token = "0x6001651")]
			get;
		}

		[Token(Token = "0x17000402")]
		HapticsClip HapticsClip
		{
			[Token(Token = "0x6001652")]
			get;
		}
	}
	[Token(Token = "0x2000653")]
	public interface IPlaySpace
	{
		[Token(Token = "0x17000403")]
		Reactive<Vector2> Extent
		{
			[Token(Token = "0x6001653")]
			get;
		}

		[Token(Token = "0x17000404")]
		bool NeedsRealign
		{
			[Token(Token = "0x6001654")]
			get;
		}

		[Token(Token = "0x6001655")]
		void Update();

		[Token(Token = "0x6001656")]
		void Reset();

		[Token(Token = "0x6001657")]
		TrackedTransform? GetTrackedTransform(BodyPart bodyPart, bool afterTimedTransforms = false);

		[Token(Token = "0x6001658")]
		void RotateAroundHead(float degrees, float rotSpeed, bool snapToAxis);

		[Token(Token = "0x6001659")]
		void Realign(float metersPerSec);
	}
	[Token(Token = "0x2000654")]
	public class PlayerInputManager : MonoBehaviour
	{
		[Token(Token = "0x2000655")]
		private enum TrackingState
		{
			[Token(Token = "0x40014BB")]
			Definitely,
			[Token(Token = "0x40014BC")]
			Maybe,
			[Token(Token = "0x40014BD")]
			No
		}

		[Token(Token = "0x2000656")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCAC5C", Offset = "0xBCAC5C")]
		private sealed class <MeasureRealPlayerHeightCoroutine>d__63 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40014BE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40014BF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40014C0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PlayerInputManager <>4__this;

			[Token(Token = "0x40014C1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float? <measurement>5__2;

			[Token(Token = "0x1700040E")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600168A")]
				[Address(RVA = "0x11ED8F4", Offset = "0x11ED8F4", VA = "0x11ED8F4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700040F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600168C")]
				[Address(RVA = "0x11ED93C", Offset = "0x11ED93C", VA = "0x11ED93C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001687")]
			[Address(RVA = "0x11ED498", Offset = "0x11ED498", VA = "0x11ED498")]
			[DebuggerHidden]
			public <MeasureRealPlayerHeightCoroutine>d__63(int <>1__state)
			{
			}

			[Token(Token = "0x6001688")]
			[Address(RVA = "0x11ED4C4", Offset = "0x11ED4C4", VA = "0x11ED4C4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001689")]
			[Address(RVA = "0x11ED4C8", Offset = "0x11ED4C8", VA = "0x11ED4C8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600168B")]
			[Address(RVA = "0x11ED8FC", Offset = "0x11ED8FC", VA = "0x11ED8FC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000657")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCAC6C", Offset = "0xBCAC6C")]
		private sealed class <InterpolatePlayerScale>d__65 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40014C2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40014C3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40014C4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PlayerInputManager <>4__this;

			[Token(Token = "0x17000410")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001690")]
				[Address(RVA = "0x11ED448", Offset = "0x11ED448", VA = "0x11ED448", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000411")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001692")]
				[Address(RVA = "0x11ED490", Offset = "0x11ED490", VA = "0x11ED490", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600168D")]
			[Address(RVA = "0x11ED2F4", Offset = "0x11ED2F4", VA = "0x11ED2F4")]
			[DebuggerHidden]
			public <InterpolatePlayerScale>d__65(int <>1__state)
			{
			}

			[Token(Token = "0x600168E")]
			[Address(RVA = "0x11ED320", Offset = "0x11ED320", VA = "0x11ED320", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600168F")]
			[Address(RVA = "0x11ED324", Offset = "0x11ED324", VA = "0x11ED324", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001691")]
			[Address(RVA = "0x11ED450", Offset = "0x11ED450", VA = "0x11ED450", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000658")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCAC7C", Offset = "0xBCAC7C")]
		private sealed class <>c__DisplayClass68_0
		{
			[Token(Token = "0x40014C5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GameObject uiObject;

			[Token(Token = "0x6001693")]
			[Address(RVA = "0x11EC870", Offset = "0x11EC870", VA = "0x11EC870")]
			public <>c__DisplayClass68_0()
			{
			}

			[Token(Token = "0x6001694")]
			[Address(RVA = "0x11EC878", Offset = "0x11EC878", VA = "0x11EC878")]
			internal bool <AddExclusiveUIObject>b__0([AttributeAttribute(Name = "TupleElementNamesAttribute", RVA = "0xBE4858", Offset = "0xBE4858")] (int, GameObject) item)
			{
				return default(bool);
			}
		}

		[Serializable]
		[Token(Token = "0x2000659")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCAC8C", Offset = "0xBCAC8C")]
		private sealed class <>c
		{
			[Token(Token = "0x40014C6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40014C7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "TupleElementNamesAttribute", RVA = "0xBD7578", Offset = "0xBD7578")]
			public static Comparison<(int, GameObject)> <>9__68_1;

			[Token(Token = "0x6001696")]
			[Address(RVA = "0x11EC83C", Offset = "0x11EC83C", VA = "0x11EC83C")]
			public <>c()
			{
			}

			[Token(Token = "0x6001697")]
			[Address(RVA = "0x11EC844", Offset = "0x11EC844", VA = "0x11EC844")]
			internal int <AddExclusiveUIObject>b__68_1([AttributeAttribute(Name = "TupleElementNamesAttribute", RVA = "0xBE48DC", Offset = "0xBE48DC")] (int, GameObject) a, [AttributeAttribute(Name = "TupleElementNamesAttribute", RVA = "0xBE4960", Offset = "0xBE4960")] (int, GameObject) b)
			{
				return default(int);
			}
		}

		[Token(Token = "0x200065A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCAC9C", Offset = "0xBCAC9C")]
		private sealed class <>c__DisplayClass69_0
		{
			[Token(Token = "0x40014C8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GameObject uiObject;

			[Token(Token = "0x6001698")]
			[Address(RVA = "0x11EC92C", Offset = "0x11EC92C", VA = "0x11EC92C")]
			public <>c__DisplayClass69_0()
			{
			}

			[Token(Token = "0x6001699")]
			[Address(RVA = "0x11EC934", Offset = "0x11EC934", VA = "0x11EC934")]
			internal bool <RemoveExclusiveUIObject>b__0([AttributeAttribute(Name = "TupleElementNamesAttribute", RVA = "0xBE49E4", Offset = "0xBE49E4")] (int, GameObject) item)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x200065B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCACAC", Offset = "0xBCACAC")]
		private sealed class <HapticsCoroutine>d__75 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40014C9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40014CA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40014CB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public IHaptics haptics;

			[Token(Token = "0x40014CC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public PlayerInputManager <>4__this;

			[Token(Token = "0x40014CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public bool useLeft;

			[Token(Token = "0x40014CE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
			public bool useRight;

			[Token(Token = "0x40014CF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private int <i>5__2;

			[Token(Token = "0x40014D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private int <iteration>5__3;

			[Token(Token = "0x40014D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private HapticImpulse <hapticsImpulse>5__4;

			[Token(Token = "0x40014D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			private float <totalDuration>5__5;

			[Token(Token = "0x17000412")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600169D")]
				[Address(RVA = "0x11ED2A4", Offset = "0x11ED2A4", VA = "0x11ED2A4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000413")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600169F")]
				[Address(RVA = "0x11ED2EC", Offset = "0x11ED2EC", VA = "0x11ED2EC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600169A")]
			[Address(RVA = "0x11EC9E8", Offset = "0x11EC9E8", VA = "0x11EC9E8")]
			[DebuggerHidden]
			public <HapticsCoroutine>d__75(int <>1__state)
			{
			}

			[Token(Token = "0x600169B")]
			[Address(RVA = "0x11ECA14", Offset = "0x11ECA14", VA = "0x11ECA14", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600169C")]
			[Address(RVA = "0x11ECA18", Offset = "0x11ECA18", VA = "0x11ECA18", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600169E")]
			[Address(RVA = "0x11ED2AC", Offset = "0x11ED2AC", VA = "0x11ED2AC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400149C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float playerScaleInterpolationTime;

		[Token(Token = "0x400149D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float defaultHeight;

		[Token(Token = "0x400149E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly ReactiveSource<TMP_InputField> _currentInputField;

		[Token(Token = "0x400149F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TupleElementNamesAttribute", RVA = "0xBD74B4", Offset = "0xBD74B4")]
		private readonly List<(int, GameObject)> _exclusiveUIAccess;

		[Token(Token = "0x40014A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly ReactiveSource<bool> _isInterpolatingPlayerScale;

		[Token(Token = "0x40014A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private readonly List<GameObject> _muteGameplayTrigger;

		[Token(Token = "0x40014A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private readonly List<GameObject> _nonExclusiveUIObjects;

		[Token(Token = "0x40014A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private readonly ReactiveSource<float> _playerScale;

		[Token(Token = "0x40014A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private readonly ReactiveSource<float> _realPlayerHeight;

		[Token(Token = "0x40014A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool _enableNonExclusiveUI;

		[Token(Token = "0x40014A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
		private bool _headTracked;

		[Token(Token = "0x40014A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5A")]
		private bool _isLoading;

		[Token(Token = "0x40014A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5B")]
		private bool _leftHandTracked;

		[Token(Token = "0x40014A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private IEnumerator _leftHapticsCoroutine;

		[Token(Token = "0x40014AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private IHaptics _leftPlayingHaptics;

		[Token(Token = "0x40014AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Coroutine _measureHeightCoroutine;

		[Token(Token = "0x40014AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Coroutine _playerScaleCoroutine;

		[Token(Token = "0x40014AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Input _quantumFrameInput;

		[Token(Token = "0x40014AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		private bool _rightHandTracked;

		[Token(Token = "0x40014AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		private IEnumerator _rightHapticsCoroutine;

		[Token(Token = "0x40014B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		private IHaptics _rightPlayingHaptics;

		[Token(Token = "0x40014B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		private float _startScale;

		[Token(Token = "0x40014B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
		private float _startTime;

		[Token(Token = "0x40014B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		private float _targetHeight;

		[Token(Token = "0x40014B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
		private int _uiDisableLayer;

		[Token(Token = "0x40014B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		private int _uiEnableLayer;

		[Token(Token = "0x40014B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD7538", Offset = "0xBD7538")]
		private IGeneralInputMap <GeneralInputMap>k__BackingField;

		[Token(Token = "0x40014B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD7548", Offset = "0xBD7548")]
		private IGameplayInputMap <GamePlayInputMap>k__BackingField;

		[Token(Token = "0x40014B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD7558", Offset = "0xBD7558")]
		private IUIInputMap <UIInputMap>k__BackingField;

		[Token(Token = "0x40014B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD7568", Offset = "0xBD7568")]
		private IPlaySpace <PlaySpace>k__BackingField;

		[Token(Token = "0x17000405")]
		public IGeneralInputMap GeneralInputMap
		{
			[Token(Token = "0x600165A")]
			[Address(RVA = "0xFE381C", Offset = "0xFE381C", VA = "0xFE381C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE17EC", Offset = "0xBE17EC")]
			get
			{
				return null;
			}
			[Token(Token = "0x600165B")]
			[Address(RVA = "0xFE3824", Offset = "0xFE3824", VA = "0xFE3824")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE17FC", Offset = "0xBE17FC")]
			private set
			{
			}
		}

		[Token(Token = "0x17000406")]
		public IGameplayInputMap GamePlayInputMap
		{
			[Token(Token = "0x600165C")]
			[Address(RVA = "0xFE382C", Offset = "0xFE382C", VA = "0xFE382C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE180C", Offset = "0xBE180C")]
			get
			{
				return null;
			}
			[Token(Token = "0x600165D")]
			[Address(RVA = "0xFE3834", Offset = "0xFE3834", VA = "0xFE3834")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE181C", Offset = "0xBE181C")]
			private set
			{
			}
		}

		[Token(Token = "0x17000407")]
		public IUIInputMap UIInputMap
		{
			[Token(Token = "0x600165E")]
			[Address(RVA = "0xFE383C", Offset = "0xFE383C", VA = "0xFE383C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE182C", Offset = "0xBE182C")]
			get
			{
				return null;
			}
			[Token(Token = "0x600165F")]
			[Address(RVA = "0xFE3844", Offset = "0xFE3844", VA = "0xFE3844")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE183C", Offset = "0xBE183C")]
			private set
			{
			}
		}

		[Token(Token = "0x17000408")]
		public IPlaySpace PlaySpace
		{
			[Token(Token = "0x6001660")]
			[Address(RVA = "0xFE384C", Offset = "0xFE384C", VA = "0xFE384C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE184C", Offset = "0xBE184C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001661")]
			[Address(RVA = "0xFE3854", Offset = "0xFE3854", VA = "0xFE3854")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE185C", Offset = "0xBE185C")]
			private set
			{
			}
		}

		[Token(Token = "0x17000409")]
		public Reactive<float> PlayerScale
		{
			[Token(Token = "0x6001662")]
			[Address(RVA = "0xFDFCF8", Offset = "0xFDFCF8", VA = "0xFDFCF8")]
			get
			{
				return default(Reactive<float>);
			}
		}

		[Token(Token = "0x1700040A")]
		public Reactive<bool> IsInterpolatingPlayerScale
		{
			[Token(Token = "0x6001663")]
			[Address(RVA = "0xFE385C", Offset = "0xFE385C", VA = "0xFE385C")]
			get
			{
				return default(Reactive<bool>);
			}
		}

		[Token(Token = "0x1700040B")]
		public Reactive<TMP_InputField> CurrentInputField
		{
			[Token(Token = "0x6001664")]
			[Address(RVA = "0xFE38B0", Offset = "0xFE38B0", VA = "0xFE38B0")]
			get
			{
				return default(Reactive<TMP_InputField>);
			}
		}

		[Token(Token = "0x1700040C")]
		public bool EnableNonExclusiveUI
		{
			[Token(Token = "0x6001665")]
			[Address(RVA = "0xFE3904", Offset = "0xFE3904", VA = "0xFE3904")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001666")]
			[Address(RVA = "0xFE390C", Offset = "0xFE390C", VA = "0xFE390C")]
			set
			{
			}
		}

		[Token(Token = "0x1700040D")]
		public Reactive<float> RealPlayerHeight
		{
			[Token(Token = "0x6001667")]
			[Address(RVA = "0xFE3A4C", Offset = "0xFE3A4C", VA = "0xFE3A4C")]
			get
			{
				return default(Reactive<float>);
			}
		}

		[Token(Token = "0x6001668")]
		[Address(RVA = "0xFE3AA0", Offset = "0xFE3AA0", VA = "0xFE3AA0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001669")]
		[Address(RVA = "0xFE3B20", Offset = "0xFE3B20", VA = "0xFE3B20")]
		private void Start()
		{
		}

		[Token(Token = "0x600166A")]
		[Address(RVA = "0xFE3DEC", Offset = "0xFE3DEC", VA = "0xFE3DEC")]
		private void Update()
		{
		}

		[Token(Token = "0x600166B")]
		[Address(RVA = "0xFE400C", Offset = "0xFE400C", VA = "0xFE400C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600166C")]
		[Address(RVA = "0xFE419C", Offset = "0xFE419C", VA = "0xFE419C")]
		private void OnApplicationPause(bool pauseStatus)
		{
		}

		[Token(Token = "0x600166D")]
		[Address(RVA = "0xFE4268", Offset = "0xFE4268", VA = "0xFE4268")]
		private void SceneLoaderOnLevelLoadStarted(object sender, [AttributeAttribute(Name = "TupleElementNamesAttribute", RVA = "0xBE4740", Offset = "0xBE4740")] (string, AssetRefGameModeSetup, QuantumGame) valueTuple)
		{
		}

		[Token(Token = "0x600166E")]
		[Address(RVA = "0xFE42DC", Offset = "0xFE42DC", VA = "0xFE42DC")]
		private void SceneLoaderOnLevelLoadFinished(object sender, [AttributeAttribute(Name = "TupleElementNamesAttribute", RVA = "0xBE47D4", Offset = "0xBE47D4")] (Scene, QuantumGame) e)
		{
		}

		[Token(Token = "0x600166F")]
		[Address(RVA = "0xFE4400", Offset = "0xFE4400", VA = "0xFE4400")]
		public void SetTargetPlayerHeight(float height)
		{
		}

		[Token(Token = "0x6001670")]
		[Address(RVA = "0xFE44F8", Offset = "0xFE44F8", VA = "0xFE44F8")]
		public void ResetTargetPlayerHeight()
		{
		}

		[Token(Token = "0x6001671")]
		[Address(RVA = "0xFE4504", Offset = "0xFE4504", VA = "0xFE4504")]
		public void MeasureRealPlayerHeight()
		{
		}

		[Token(Token = "0x6001672")]
		[Address(RVA = "0xFE4550", Offset = "0xFE4550", VA = "0xFE4550")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xBE186C", Offset = "0xBE186C")]
		private IEnumerator MeasureRealPlayerHeightCoroutine()
		{
			return null;
		}

		[Token(Token = "0x6001673")]
		[Address(RVA = "0xFE4408", Offset = "0xFE4408", VA = "0xFE4408")]
		private void UpdatePlayerScale()
		{
		}

		[Token(Token = "0x6001674")]
		[Address(RVA = "0xFE45BC", Offset = "0xFE45BC", VA = "0xFE45BC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xBE18CC", Offset = "0xBE18CC")]
		private IEnumerator InterpolatePlayerScale()
		{
			return null;
		}

		[Token(Token = "0x6001675")]
		[Address(RVA = "0xFE434C", Offset = "0xFE434C", VA = "0xFE434C")]
		private void ApplyPlayerScale()
		{
		}

		[Token(Token = "0x6001676")]
		[Address(RVA = "0xFE4628", Offset = "0xFE4628", VA = "0xFE4628")]
		private static void ChangeLayer(GameObject go, int layerNumber)
		{
		}

		[Token(Token = "0x6001677")]
		[Address(RVA = "0xFE4700", Offset = "0xFE4700", VA = "0xFE4700")]
		public void AddExclusiveUIObject(GameObject uiObject, int priority = 0)
		{
		}

		[Token(Token = "0x6001678")]
		[Address(RVA = "0xFE4BF8", Offset = "0xFE4BF8", VA = "0xFE4BF8")]
		public void RemoveExclusiveUIObject(GameObject uiObject)
		{
		}

		[Token(Token = "0x6001679")]
		[Address(RVA = "0xFE4F2C", Offset = "0xFE4F2C", VA = "0xFE4F2C")]
		public void AddNonExclusiveUIObject(GameObject uiObject, bool muteGamePlayTrigger)
		{
		}

		[Token(Token = "0x600167A")]
		[Address(RVA = "0xFE5020", Offset = "0xFE5020", VA = "0xFE5020")]
		public void RemoveNonExclusiveUIObject(GameObject uiObject)
		{
		}

		[Token(Token = "0x600167B")]
		[Address(RVA = "0xFE5170", Offset = "0xFE5170", VA = "0xFE5170")]
		public bool IsPlayingHaptics(IHaptics haptics)
		{
			return default(bool);
		}

		[Token(Token = "0x600167C")]
		[Address(RVA = "0xFE5194", Offset = "0xFE5194", VA = "0xFE5194")]
		public void Initialize(BuildSettings.Platform platform)
		{
		}

		[Token(Token = "0x600167D")]
		[Address(RVA = "0xFE5578", Offset = "0xFE5578", VA = "0xFE5578")]
		public void PlayHaptics(IHaptics haptics)
		{
		}

		[Token(Token = "0x600167E")]
		[Address(RVA = "0xFE5764", Offset = "0xFE5764", VA = "0xFE5764")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xBE192C", Offset = "0xBE192C")]
		private IEnumerator HapticsCoroutine(IHaptics haptics, bool useLeft, bool useRight)
		{
			return null;
		}

		[Token(Token = "0x600167F")]
		[Address(RVA = "0xFE57FC", Offset = "0xFE57FC", VA = "0xFE57FC")]
		public void StopHaptics(IHaptics haptics)
		{
		}

		[Token(Token = "0x6001680")]
		[Address(RVA = "0xFE3D54", Offset = "0xFE3D54", VA = "0xFE3D54")]
		public void ResetInput()
		{
		}

		[Token(Token = "0x6001681")]
		[Address(RVA = "0xFE586C", Offset = "0xFE586C", VA = "0xFE586C")]
		public void SetInputField(TMP_InputField inputField)
		{
		}

		[Token(Token = "0x6001682")]
		[Address(RVA = "0xFE58D0", Offset = "0xFE58D0", VA = "0xFE58D0")]
		private void PollInput(CallbackPollInput callback)
		{
		}

		[Token(Token = "0x6001683")]
		[Address(RVA = "0xFE62BC", Offset = "0xFE62BC", VA = "0xFE62BC")]
		private static bool UpdateTrackingState(ref bool wasTracked, TrackingState trackingState)
		{
			return default(bool);
		}

		[Token(Token = "0x6001684")]
		[Address(RVA = "0xFE60EC", Offset = "0xFE60EC", VA = "0xFE60EC")]
		private TrackingState SetInputTransform(BodyPart bodyPart, ref CompressedTransform trans)
		{
			return default(TrackingState);
		}

		[Token(Token = "0x6001685")]
		[Address(RVA = "0xFE6304", Offset = "0xFE6304", VA = "0xFE6304")]
		public PlayerInputManager()
		{
		}

		[Token(Token = "0x6001686")]
		[Address(RVA = "0xFE650C", Offset = "0xFE650C", VA = "0xFE650C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE198C", Offset = "0xBE198C")]
		private void <Start>b__54_0(CallbackPollInput callback)
		{
		}
	}
	[Token(Token = "0x200065C")]
	public class ReactiveApplicationFocus : MonoBehaviour
	{
		[Token(Token = "0x40014D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool focusAlwaysEnabledInEditor;

		[Token(Token = "0x40014D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly ReactiveSource<bool> _hasFocus;

		[Token(Token = "0x40014D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool _focusAlwaysEnabled;

		[Token(Token = "0x17000414")]
		public Reactive<bool> HasFocus
		{
			[Token(Token = "0x60016A0")]
			[Address(RVA = "0x1254374", Offset = "0x1254374", VA = "0x1254374")]
			get
			{
				return default(Reactive<bool>);
			}
		}

		[Token(Token = "0x60016A1")]
		[Address(RVA = "0x12543C8", Offset = "0x12543C8", VA = "0x12543C8")]
		private void Start()
		{
		}

		[Token(Token = "0x60016A2")]
		[Address(RVA = "0x12544A0", Offset = "0x12544A0", VA = "0x12544A0")]
		private void OnApplicationFocus(bool hasFocus)
		{
		}

		[Token(Token = "0x60016A3")]
		[Address(RVA = "0x1254504", Offset = "0x1254504", VA = "0x1254504")]
		public ReactiveApplicationFocus()
		{
		}
	}
	[Token(Token = "0x200065D")]
	public class SmoothSnapTurningSettingUI : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200065E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCACBC", Offset = "0xBCACBC")]
		private sealed class <>c
		{
			[Token(Token = "0x40014DC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40014DD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<bool> <>9__11_0;

			[Token(Token = "0x40014DE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<SnapTurningSetting, bool> <>9__11_2;

			[Token(Token = "0x40014DF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Func<Reactive<bool>> <>9__11_1;

			[Token(Token = "0x40014E0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static Func<string> <>9__13_0;

			[Token(Token = "0x40014E1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public static Func<float, string> <>9__13_2;

			[Token(Token = "0x40014E2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public static Func<Reactive<string>> <>9__13_1;

			[Token(Token = "0x60016B0")]
			[Address(RVA = "0x105EC74", Offset = "0x105EC74", VA = "0x105EC74")]
			public <>c()
			{
			}

			[Token(Token = "0x60016B1")]
			[Address(RVA = "0x105EC7C", Offset = "0x105EC7C", VA = "0x105EC7C")]
			internal bool <get_SnapTurnActive>b__11_0()
			{
				return default(bool);
			}

			[Token(Token = "0x60016B2")]
			[Address(RVA = "0x105ED24", Offset = "0x105ED24", VA = "0x105ED24")]
			internal Reactive<bool> <get_SnapTurnActive>b__11_1()
			{
				return default(Reactive<bool>);
			}

			[Token(Token = "0x60016B3")]
			[Address(RVA = "0x105EE90", Offset = "0x105EE90", VA = "0x105EE90")]
			internal bool <get_SnapTurnActive>b__11_2(SnapTurningSetting x)
			{
				return default(bool);
			}

			[Token(Token = "0x60016B4")]
			[Address(RVA = "0x105EE9C", Offset = "0x105EE9C", VA = "0x105EE9C")]
			internal string <get_SnapTurningAnglesText>b__13_0()
			{
				return null;
			}

			[Token(Token = "0x60016B5")]
			[Address(RVA = "0x105EF90", Offset = "0x105EF90", VA = "0x105EF90")]
			internal Reactive<string> <get_SnapTurningAnglesText>b__13_1()
			{
				return default(Reactive<string>);
			}

			[Token(Token = "0x60016B6")]
			[Address(RVA = "0x105F0FC", Offset = "0x105F0FC", VA = "0x105F0FC")]
			internal string <get_SnapTurningAnglesText>b__13_2(float x)
			{
				return null;
			}
		}

		[Token(Token = "0x40014D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float snapTurningAnglesMin;

		[Token(Token = "0x40014D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float snapTurningAnglesMax;

		[Token(Token = "0x40014D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool _angleChanging;

		[Token(Token = "0x40014D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private ReactiveSubscription _reactiveSubscription;

		[Token(Token = "0x40014DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD762C", Offset = "0xBD762C")]
		private readonly ReactiveSource<int> <SelectedUISetting>k__BackingField;

		[Token(Token = "0x40014DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD763C", Offset = "0xBD763C")]
		private readonly ReactiveSource<float> <SnapTurningAnglesUI>k__BackingField;

		[Token(Token = "0x17000415")]
		public ReactiveSource<int> SelectedUISetting
		{
			[Token(Token = "0x60016A4")]
			[Address(RVA = "0x11FA16C", Offset = "0x11FA16C", VA = "0x11FA16C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE1A8C", Offset = "0xBE1A8C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000416")]
		public ReactiveSource<float> SnapTurningAnglesUI
		{
			[Token(Token = "0x60016A5")]
			[Address(RVA = "0x11FA174", Offset = "0x11FA174", VA = "0x11FA174")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE1A9C", Offset = "0xBE1A9C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000417")]
		public Reactive<bool> SnapTurnActive
		{
			[Token(Token = "0x60016A6")]
			[Address(RVA = "0x11FA17C", Offset = "0x11FA17C", VA = "0x11FA17C")]
			get
			{
				return default(Reactive<bool>);
			}
		}

		[Token(Token = "0x17000418")]
		public Reactive<string> SnapTurningAnglesText
		{
			[Token(Token = "0x60016A7")]
			[Address(RVA = "0x11FA33C", Offset = "0x11FA33C", VA = "0x11FA33C")]
			get
			{
				return default(Reactive<string>);
			}
		}

		[Token(Token = "0x60016A8")]
		[Address(RVA = "0x11FA4FC", Offset = "0x11FA4FC", VA = "0x11FA4FC")]
		private void Start()
		{
		}

		[Token(Token = "0x60016A9")]
		[Address(RVA = "0x11FA82C", Offset = "0x11FA82C", VA = "0x11FA82C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60016AA")]
		[Address(RVA = "0x11FA838", Offset = "0x11FA838", VA = "0x11FA838")]
		private void SnapTurningAngleUIChanged(float normalizedValue)
		{
		}

		[Token(Token = "0x60016AB")]
		[Address(RVA = "0x11FA964", Offset = "0x11FA964", VA = "0x11FA964")]
		private void AngleSettingChanged(float angle)
		{
		}

		[Token(Token = "0x60016AC")]
		[Address(RVA = "0x11FA9EC", Offset = "0x11FA9EC", VA = "0x11FA9EC")]
		private void SelectedUISettingChanged(int radioButton)
		{
		}

		[Token(Token = "0x60016AD")]
		[Address(RVA = "0x11FAB58", Offset = "0x11FAB58", VA = "0x11FAB58")]
		private void SettingChanged(SnapTurningSetting setting)
		{
		}

		[Token(Token = "0x60016AE")]
		[Address(RVA = "0x11FAC78", Offset = "0x11FAC78", VA = "0x11FAC78")]
		public SmoothSnapTurningSettingUI()
		{
		}
	}
	[Token(Token = "0x200065F")]
	public class SnapTurning : MonoBehaviour
	{
		[Token(Token = "0x40014E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float rotationDegreesPerSec;

		[Token(Token = "0x40014E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float realignmentSpeed;

		[Token(Token = "0x40014E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool _joystick0Triggered;

		[Token(Token = "0x40014E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		private bool _joystick1Triggered;

		[Token(Token = "0x40014E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private ReactiveSubscription _reactiveSubscription;

		[Token(Token = "0x40014E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool _smooth;

		[Token(Token = "0x60016B7")]
		[Address(RVA = "0x11FB36C", Offset = "0x11FB36C", VA = "0x11FB36C")]
		private void Start()
		{
		}

		[Token(Token = "0x60016B8")]
		[Address(RVA = "0x11FB47C", Offset = "0x11FB47C", VA = "0x11FB47C")]
		private void Update()
		{
		}

		[Token(Token = "0x60016B9")]
		[Address(RVA = "0x11FB940", Offset = "0x11FB940", VA = "0x11FB940")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60016BA")]
		[Address(RVA = "0x11FB94C", Offset = "0x11FB94C", VA = "0x11FB94C")]
		private void SettingChanged(SnapTurningSetting setting)
		{
		}

		[Token(Token = "0x60016BB")]
		[Address(RVA = "0x11FB8FC", Offset = "0x11FB8FC", VA = "0x11FB8FC")]
		private void CheckRealign(JoystickDirection joystick0, JoystickDirection joystick1)
		{
		}

		[Token(Token = "0x60016BC")]
		[Address(RVA = "0x11FB998", Offset = "0x11FB998", VA = "0x11FB998")]
		private void RealignPlaySpace()
		{
		}

		[Token(Token = "0x60016BD")]
		[Address(RVA = "0x11FB69C", Offset = "0x11FB69C", VA = "0x11FB69C")]
		private void CheckSnapTurn(JoystickDirection joystick0, JoystickDirection joystick1)
		{
		}

		[Token(Token = "0x60016BE")]
		[Address(RVA = "0x11FBB90", Offset = "0x11FBB90", VA = "0x11FBB90")]
		public SnapTurning()
		{
		}
	}
	[Token(Token = "0x2000660")]
	public class SyncedTrackedPoseDriver : MonoBehaviour
	{
		[Token(Token = "0x2000661")]
		public enum TimedInterpolationMode
		{
			[Token(Token = "0x40014F6")]
			TimeInterpolated,
			[Token(Token = "0x40014F7")]
			AfterInterpolation,
			[Token(Token = "0x40014F8")]
			AfterInterpolationOnlyIfRealigned
		}

		[Token(Token = "0x40014E9")]
		private const float ConstrainLerpTime = 0.2f;

		[Token(Token = "0x40014EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly FP ConstrainDistance;

		[Token(Token = "0x40014EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly FP ConstrainDistanceWhenGrabbing;

		[Token(Token = "0x40014EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private BodyPart bodyPart;

		[Token(Token = "0x40014ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Cortopia.Scripts.Players.Player player;

		[Token(Token = "0x40014EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private bool forceRemote;

		[Token(Token = "0x40014EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		public TimedInterpolationMode timedInterpolationMode;

		[Token(Token = "0x40014F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private TrackedPoseDriver.UpdateType updateType;

		[Token(Token = "0x40014F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float _accumulatedTimeConstrained;

		[Token(Token = "0x40014F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float _lastConstrainChangeTime;

		[Token(Token = "0x40014F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Transform _remoteBodyPartTransform;

		[Token(Token = "0x40014F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool _wasConstrained;

		[Token(Token = "0x17000419")]
		private bool IsLocal
		{
			[Token(Token = "0x60016BF")]
			[Address(RVA = "0x1150BDC", Offset = "0x1150BDC", VA = "0x1150BDC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60016C0")]
		[Address(RVA = "0x1150CE0", Offset = "0x1150CE0", VA = "0x1150CE0")]
		private void Update()
		{
		}

		[Token(Token = "0x60016C1")]
		[Address(RVA = "0x11517DC", Offset = "0x11517DC", VA = "0x11517DC")]
		protected void OnEnable()
		{
		}

		[Token(Token = "0x60016C2")]
		[Address(RVA = "0x11518B0", Offset = "0x11518B0", VA = "0x11518B0")]
		protected void OnDisable()
		{
		}

		[Token(Token = "0x60016C3")]
		[Address(RVA = "0x1151428", Offset = "0x1151428", VA = "0x1151428")]
		private void ApplyTransform([AttributeAttribute(Name = "TupleElementNamesAttribute", RVA = "0xBE4A68", Offset = "0xBE4A68")] (Vector3, Quaternion)? input)
		{
		}

		[Token(Token = "0x60016C4")]
		[Address(RVA = "0x1151930", Offset = "0x1151930", VA = "0x1151930")]
		private void OnBeforeRender()
		{
		}

		[Token(Token = "0x60016C5")]
		[Address(RVA = "0x1151AF0", Offset = "0x1151AF0", VA = "0x1151AF0")]
		private static bool IsPhysical(BodyPart part)
		{
			return default(bool);
		}

		[Token(Token = "0x60016C6")]
		[Address(RVA = "0x1150ED8", Offset = "0x1150ED8", VA = "0x1150ED8")]
		private float TimeConstrained()
		{
			return default(float);
		}

		[Token(Token = "0x60016C7")]
		[Address(RVA = "0x1151B00", Offset = "0x1151B00", VA = "0x1151B00")]
		private bool IsConstrainedThisFrame(Frame frame)
		{
			return default(bool);
		}

		[Token(Token = "0x60016C8")]
		[Address(RVA = "0x11514F4", Offset = "0x11514F4", VA = "0x11514F4")]
		private (Vector3, Quaternion)? GetRemoteInput()
		{
			return null;
		}

		[Token(Token = "0x60016C9")]
		[Address(RVA = "0x1151FD8", Offset = "0x1151FD8", VA = "0x1151FD8")]
		private static Vector3 GetLocalPosition(Transform playerTrans, Transform bodyPartTrans)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60016CA")]
		[Address(RVA = "0x1152088", Offset = "0x1152088", VA = "0x1152088")]
		private static Quaternion GetLocalRotation(Transform playerTrans, Transform bodyPartTrans)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x60016CB")]
		[Address(RVA = "0x115110C", Offset = "0x115110C", VA = "0x115110C")]
		private (Vector3, Quaternion)? GetLocalInput()
		{
			return null;
		}

		[Token(Token = "0x60016CC")]
		[Address(RVA = "0x1152110", Offset = "0x1152110", VA = "0x1152110")]
		public SyncedTrackedPoseDriver()
		{
		}
	}
	[Token(Token = "0x2000662")]
	public class TeleportHapticsController : MonoBehaviour
	{
		[Token(Token = "0x40014F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBD76BC", Offset = "0xBD76BC")]
		[SerializeField]
		private BoundValue<TeleportState> teleportState;

		[Token(Token = "0x40014FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[PrefabExclusive]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBD7708", Offset = "0xBD7708")]
		[SerializeField]
		private Haptics teleportChargingHaptics;

		[Token(Token = "0x40014FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[PrefabExclusive]
		[SerializeField]
		private Haptics teleportingHaptics;

		[Token(Token = "0x40014FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private ReactiveSubscription _teleportStateSubscription;

		[Token(Token = "0x60016CE")]
		[Address(RVA = "0x1154BCC", Offset = "0x1154BCC", VA = "0x1154BCC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60016CF")]
		[Address(RVA = "0x1154CB8", Offset = "0x1154CB8", VA = "0x1154CB8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60016D0")]
		[Address(RVA = "0x1154CC4", Offset = "0x1154CC4", VA = "0x1154CC4")]
		private void OnPortalStateChanged(TeleportState newTeleportState)
		{
		}

		[Token(Token = "0x60016D1")]
		[Address(RVA = "0x1154D90", Offset = "0x1154D90", VA = "0x1154D90")]
		public TeleportHapticsController()
		{
		}
	}
	[Token(Token = "0x2000663")]
	public readonly struct TrackedTransform
	{
		[Token(Token = "0x40014FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD779C", Offset = "0xBD779C")]
		private readonly Vector3 <Position>k__BackingField;

		[Token(Token = "0x40014FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD77AC", Offset = "0xBD77AC")]
		private readonly Quaternion <Rotation>k__BackingField;

		[Token(Token = "0x40014FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD77BC", Offset = "0xBD77BC")]
		private readonly bool <Confirmed>k__BackingField;

		[Token(Token = "0x1700041A")]
		public Vector3 Position
		{
			[Token(Token = "0x60016D3")]
			[Address(RVA = "0x1159124", Offset = "0x1159124", VA = "0x1159124")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE1AAC", Offset = "0xBE1AAC")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x1700041B")]
		public Quaternion Rotation
		{
			[Token(Token = "0x60016D4")]
			[Address(RVA = "0x1159130", Offset = "0x1159130", VA = "0x1159130")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE1ABC", Offset = "0xBE1ABC")]
			get
			{
				return default(Quaternion);
			}
		}

		[Token(Token = "0x1700041C")]
		public bool Confirmed
		{
			[Token(Token = "0x60016D5")]
			[Address(RVA = "0x115913C", Offset = "0x115913C", VA = "0x115913C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE1ACC", Offset = "0xBE1ACC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60016D2")]
		[Address(RVA = "0x1159108", Offset = "0x1159108", VA = "0x1159108")]
		public TrackedTransform(Vector3 position, Quaternion rotation, bool confirmed)
		{
		}
	}
}
namespace Cortopia.Scripts.InputSystem.PlaySpace
{
	[Token(Token = "0x2000664")]
	public class OculusPlaySpace : XrPlaySpaceBase
	{
		[Token(Token = "0x60016D6")]
		[Address(RVA = "0x101E744", Offset = "0x101E744", VA = "0x101E744", Slot = "14")]
		public override TrackedTransform? GetTrackedTransform(BodyPart bodyPart, bool afterTimedTransforms = false)
		{
			return null;
		}

		[Token(Token = "0x60016D7")]
		[Address(RVA = "0x101E818", Offset = "0x101E818", VA = "0x101E818", Slot = "16")]
		protected override bool SetTrackingOriginMode()
		{
			return default(bool);
		}

		[Token(Token = "0x60016D8")]
		[Address(RVA = "0x101E8B0", Offset = "0x101E8B0", VA = "0x101E8B0", Slot = "15")]
		protected override Vector3 GetDimensions()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60016D9")]
		[Address(RVA = "0x101E918", Offset = "0x101E918", VA = "0x101E918")]
		public OculusPlaySpace()
		{
		}
	}
	[Token(Token = "0x2000665")]
	public class PicoXRPlaySpace : XrPlaySpaceBase
	{
		[Token(Token = "0x4001500")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private XRInputSubsystem _xrInputSubsystem;

		[Token(Token = "0x60016DA")]
		[Address(RVA = "0xFD333C", Offset = "0xFD333C", VA = "0xFD333C")]
		public PicoXRPlaySpace()
		{
		}

		[Token(Token = "0x60016DB")]
		[Address(RVA = "0xFD3430", Offset = "0xFD3430", VA = "0xFD3430", Slot = "15")]
		protected override Vector3 GetDimensions()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60016DC")]
		[Address(RVA = "0xFD343C", Offset = "0xFD343C", VA = "0xFD343C", Slot = "16")]
		protected override bool SetTrackingOriginMode()
		{
			return default(bool);
		}

		[Token(Token = "0x60016DD")]
		[Address(RVA = "0xFD3570", Offset = "0xFD3570", VA = "0xFD3570", Slot = "13")]
		public override void Reset()
		{
		}
	}
	[Token(Token = "0x2000666")]
	public class PlaySpaceVisualization : MonoBehaviour
	{
		[Token(Token = "0x4001501")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform line;

		[Token(Token = "0x4001502")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private ReactiveSubscription? _reactiveSubscription;

		[Token(Token = "0x60016DE")]
		[Address(RVA = "0xFDFAEC", Offset = "0xFDFAEC", VA = "0xFDFAEC")]
		private void Update()
		{
		}

		[Token(Token = "0x60016DF")]
		[Address(RVA = "0xFDFD4C", Offset = "0xFDFD4C", VA = "0xFDFD4C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60016E0")]
		[Address(RVA = "0xFDFDC4", Offset = "0xFDFDC4", VA = "0xFDFDC4")]
		private void Handler((float, Vector2) scaleAndExtent)
		{
		}

		[Token(Token = "0x60016E1")]
		[Address(RVA = "0xFDFE84", Offset = "0xFDFE84", VA = "0xFDFE84")]
		public PlaySpaceVisualization()
		{
		}
	}
	[Token(Token = "0x2000667")]
	public abstract class XrPlaySpaceBase : IPlaySpace
	{
		[Token(Token = "0x4001503")]
		private const float Eps = 0.01f;

		[Token(Token = "0x4001504")]
		private const float MinExtent = 0.4f;

		[Token(Token = "0x4001505")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly ReactiveSource<Vector2> _extent;

		[Token(Token = "0x4001506")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly FloorOffset _floorOffset;

		[Token(Token = "0x4001507")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool _flipDimensions;

		[Token(Token = "0x4001508")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		private bool _initDirection;

		[Token(Token = "0x4001509")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float _lastX;

		[Token(Token = "0x400150A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float _lastZ;

		[Token(Token = "0x400150B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Vector3 _rawTrackingOffsetStart;

		[Token(Token = "0x400150C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Quaternion _rawTrackingRotationStart;

		[Token(Token = "0x400150D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vector3 _rotationPoint;

		[Token(Token = "0x400150E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float _rotationToAddFromStart;

		[Token(Token = "0x400150F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool _snappedToAxis;

		[Token(Token = "0x4001510")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float _timedTransformDuration;

		[Token(Token = "0x4001511")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float _timedTransformStart;

		[Token(Token = "0x4001512")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD77DC", Offset = "0xBD77DC")]
		private bool <NeedsRealign>k__BackingField;

		[Token(Token = "0x1700041D")]
		protected virtual Vector3 ControllerPositionOffset
		{
			[Token(Token = "0x60016E2")]
			[Address(RVA = "0x113EA90", Offset = "0x113EA90", VA = "0x113EA90", Slot = "11")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x1700041E")]
		protected virtual Quaternion ControllerRotationOffset
		{
			[Token(Token = "0x60016E3")]
			[Address(RVA = "0x113EA98", Offset = "0x113EA98", VA = "0x113EA98", Slot = "12")]
			get
			{
				return default(Quaternion);
			}
		}

		[Token(Token = "0x1700041F")]
		public Reactive<Vector2> Extent
		{
			[Token(Token = "0x60016E4")]
			[Address(RVA = "0x113EAA0", Offset = "0x113EAA0", VA = "0x113EAA0", Slot = "4")]
			get
			{
				return default(Reactive<Vector2>);
			}
		}

		[Token(Token = "0x17000420")]
		public bool NeedsRealign
		{
			[Token(Token = "0x60016E5")]
			[Address(RVA = "0x113EAF4", Offset = "0x113EAF4", VA = "0x113EAF4", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE1ADC", Offset = "0xBE1ADC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60016E6")]
			[Address(RVA = "0x113EAFC", Offset = "0x113EAFC", VA = "0x113EAFC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE1AEC", Offset = "0xBE1AEC")]
			private set
			{
			}
		}

		[Token(Token = "0x60016E7")]
		[Address(RVA = "0x113EB08", Offset = "0x113EB08", VA = "0x113EB08", Slot = "13")]
		public virtual void Reset()
		{
		}

		[Token(Token = "0x60016E8")]
		[Address(RVA = "0x113EB7C", Offset = "0x113EB7C", VA = "0x113EB7C", Slot = "6")]
		public void Update()
		{
		}

		[Token(Token = "0x60016E9")]
		[Address(RVA = "0x113EE90", Offset = "0x113EE90", VA = "0x113EE90", Slot = "14")]
		public virtual TrackedTransform? GetTrackedTransform(BodyPart bodyPart, bool afterTimedTransforms = false)
		{
			return null;
		}

		[Token(Token = "0x60016EA")]
		[Address(RVA = "0x113F630", Offset = "0x113F630", VA = "0x113F630", Slot = "9")]
		public void RotateAroundHead(float degrees, float rotSpeed, bool snapToAxis)
		{
		}

		[Token(Token = "0x60016EB")]
		[Address(RVA = "0x113F930", Offset = "0x113F930", VA = "0x113F930", Slot = "10")]
		public void Realign(float metersPerSec)
		{
		}

		[Token(Token = "0x60016EC")]
		[Address(RVA = "0x113F394", Offset = "0x113F394", VA = "0x113F394")]
		private (Quaternion, Vector3, float) GetTimedTransform()
		{
			return default((Quaternion, Vector3, float));
		}

		[Token(Token = "0x60016ED")]
		[Address(RVA = "0x113F1E4", Offset = "0x113F1E4", VA = "0x113F1E4")]
		private (Quaternion, Vector3) GetAfterTimedTransform()
		{
			return default((Quaternion, Vector3));
		}

		[Token(Token = "0x60016EE")]
		protected abstract Vector3 GetDimensions();

		[Token(Token = "0x60016EF")]
		protected abstract bool SetTrackingOriginMode();

		[Token(Token = "0x60016F0")]
		[Address(RVA = "0x113ED54", Offset = "0x113ED54", VA = "0x113ED54")]
		private bool HandleInitRotation()
		{
			return default(bool);
		}

		[Token(Token = "0x60016F1")]
		[Address(RVA = "0x113FA30", Offset = "0x113FA30", VA = "0x113FA30")]
		protected XrPlaySpaceBase()
		{
		}
	}
}
namespace Cortopia.Scripts.InputSystem.InputMaps
{
	[Token(Token = "0x2000668")]
	public interface IInputMap
	{
		[Token(Token = "0x17000421")]
		bool IsActive
		{
			[Token(Token = "0x60016F2")]
			get;
		}

		[Token(Token = "0x1400000A")]
		event EventHandler<bool> IsActiveChanged;

		[Token(Token = "0x60016F3")]
		void Activate();

		[Token(Token = "0x60016F4")]
		void Deactivate();

		[Token(Token = "0x60016F5")]
		void PollInput();

		[Token(Token = "0x60016F6")]
		void PlayHaptics(float duration, float leftAmplitude, float rightAmplitude);
	}
	[Token(Token = "0x2000669")]
	public interface IGameplayInputMap : IInputMap
	{
		[Token(Token = "0x60016F9")]
		AxisButtonState GetTriggerInput(int handIndex);

		[Token(Token = "0x60016FA")]
		AxisButtonState GetGrabInput(int handIndex);

		[Token(Token = "0x60016FB")]
		ButtonState GetPrimaryButtonInput(int handIndex);

		[Token(Token = "0x60016FC")]
		ButtonState GetSecondaryButtonInput(int handIndex);

		[Token(Token = "0x60016FD")]
		JoyStickState GetJoystickAxisInput(int handIndex);

		[Token(Token = "0x60016FE")]
		ButtonState GetJoystickTouchInput(int handIndex);

		[Token(Token = "0x60016FF")]
		ButtonState GetPrimaryTouchInput(int handIndex);

		[Token(Token = "0x6001700")]
		ButtonState GetSecondaryTouchInput(int handIndex);

		[Token(Token = "0x6001701")]
		void ResetTrigger();
	}
	[Token(Token = "0x200066A")]
	public interface IUIInputMap : IInputMap
	{
		[Token(Token = "0x17000422")]
		IButton CurrentHighlightedButton
		{
			[Token(Token = "0x6001702")]
			get;
		}

		[Token(Token = "0x17000423")]
		Collider CurrentHighlightedButtonCollider
		{
			[Token(Token = "0x6001703")]
			get;
		}

		[Token(Token = "0x17000424")]
		Transform CurrentAimTransform
		{
			[Token(Token = "0x6001704")]
			get;
		}

		[Token(Token = "0x17000425")]
		int CurrentActiveHandIndex
		{
			[Token(Token = "0x6001705")]
			get;
		}

		[Token(Token = "0x6001706")]
		ButtonState GetSelectButtonInput(int handIndex);

		[Token(Token = "0x6001707")]
		ButtonState GetBackButtonInput(int handIndex);

		[Token(Token = "0x6001708")]
		void SetActiveHand(int handIndex);

		[Token(Token = "0x6001709")]
		void SetCurrentHighlightedButton(IButton newButton, Collider buttonCollider, Transform aimingTransform);
	}
	[Token(Token = "0x200066B")]
	public interface IGeneralInputMap : IInputMap
	{
		[Token(Token = "0x17000426")]
		bool ToggleMenu
		{
			[Token(Token = "0x600170A")]
			get;
		}

		[Token(Token = "0x600170B")]
		bool ForceToggleMenu();
	}
	[Token(Token = "0x200066C")]
	public interface IDynamicGameplayInputMap : IGameplayInputMap, IInputMap
	{
		[Token(Token = "0x600170C")]
		string GetTriggerName(int handIndex);

		[Token(Token = "0x600170D")]
		string GetGrabName(int handIndex);

		[Token(Token = "0x600170E")]
		string GetPrimaryButtonName(int handIndex);

		[Token(Token = "0x600170F")]
		string GetSecondaryButtonName(int handIndex);
	}
	[Token(Token = "0x200066D")]
	public interface IDynamicUIInputMap : IUIInputMap, IInputMap
	{
		[Token(Token = "0x6001710")]
		string GetSelectButtonName(int handIndex);

		[Token(Token = "0x6001711")]
		string GetBackButtonName(int handIndex);
	}
	[Token(Token = "0x200066E")]
	public interface IDynamicGeneralInputMap : IGeneralInputMap, IInputMap
	{
		[Token(Token = "0x6001712")]
		string GetToggleMenuName(int handIndex);
	}
	[Token(Token = "0x200066F")]
	public enum InputMap
	{
		[Token(Token = "0x4001514")]
		Gameplay,
		[Token(Token = "0x4001515")]
		UI
	}
	[Token(Token = "0x2000670")]
	public abstract class InputMapGameplayBase : IGameplayInputMap, IInputMap
	{
		[Token(Token = "0x4001516")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD77EC", Offset = "0xBD77EC")]
		private readonly AxisButtonState[] <Trigger>k__BackingField;

		[Token(Token = "0x4001517")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD77FC", Offset = "0xBD77FC")]
		private readonly AxisButtonState[] <Grab>k__BackingField;

		[Token(Token = "0x4001518")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD780C", Offset = "0xBD780C")]
		private readonly ButtonState[] <PrimaryButton>k__BackingField;

		[Token(Token = "0x4001519")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD781C", Offset = "0xBD781C")]
		private readonly ButtonState[] <SecondaryButton>k__BackingField;

		[Token(Token = "0x400151A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD782C", Offset = "0xBD782C")]
		private readonly ButtonState[] <PrimaryTouch>k__BackingField;

		[Token(Token = "0x400151B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD783C", Offset = "0xBD783C")]
		private readonly ButtonState[] <SecondaryTouch>k__BackingField;

		[Token(Token = "0x400151C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD784C", Offset = "0xBD784C")]
		private readonly JoyStickState[] <JoyStickAxis>k__BackingField;

		[Token(Token = "0x400151D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD785C", Offset = "0xBD785C")]
		private readonly ButtonState[] <JoyStickTouch>k__BackingField;

		[Token(Token = "0x400151F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD787C", Offset = "0xBD787C")]
		private bool <IsActive>k__BackingField;

		[Token(Token = "0x17000427")]
		protected AxisButtonState[] Trigger
		{
			[Token(Token = "0x6001714")]
			[Address(RVA = "0xF80A94", Offset = "0xF80A94", VA = "0xF80A94")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE1B1C", Offset = "0xBE1B1C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000428")]
		protected AxisButtonState[] Grab
		{
			[Token(Token = "0x6001715")]
			[Address(RVA = "0xF80A9C", Offset = "0xF80A9C", VA = "0xF80A9C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE1B2C", Offset = "0xBE1B2C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000429")]
		protected ButtonState[] PrimaryButton
		{
			[Token(Token = "0x6001716")]
			[Address(RVA = "0xF80AA4", Offset = "0xF80AA4", VA = "0xF80AA4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE1B3C", Offset = "0xBE1B3C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700042A")]
		protected ButtonState[] SecondaryButton
		{
			[Token(Token = "0x6001717")]
			[Address(RVA = "0xF80AAC", Offset = "0xF80AAC", VA = "0xF80AAC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE1B4C", Offset = "0xBE1B4C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700042B")]
		protected ButtonState[] PrimaryTouch
		{
			[Token(Token = "0x6001718")]
			[Address(RVA = "0xF80AB4", Offset = "0xF80AB4", VA = "0xF80AB4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE1B5C", Offset = "0xBE1B5C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700042C")]
		protected ButtonState[] SecondaryTouch
		{
			[Token(Token = "0x6001719")]
			[Address(RVA = "0xF80ABC", Offset = "0xF80ABC", VA = "0xF80ABC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE1B6C", Offset = "0xBE1B6C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700042D")]
		protected JoyStickState[] JoyStickAxis
		{
			[Token(Token = "0x600171A")]
			[Address(RVA = "0xF80AC4", Offset = "0xF80AC4", VA = "0xF80AC4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE1B7C", Offset = "0xBE1B7C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700042E")]
		protected ButtonState[] JoyStickTouch
		{
			[Token(Token = "0x600171B")]
			[Address(RVA = "0xF80ACC", Offset = "0xF80ACC", VA = "0xF80ACC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE1B8C", Offset = "0xBE1B8C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700042F")]
		public bool IsActive
		{
			[Token(Token = "0x6001727")]
			[Address(RVA = "0xF80DF8", Offset = "0xF80DF8", VA = "0xF80DF8", Slot = "13")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE1BBC", Offset = "0xBE1BBC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001728")]
			[Address(RVA = "0xF80E00", Offset = "0xF80E00", VA = "0xF80E00")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE1BCC", Offset = "0xBE1BCC")]
			private set
			{
			}
		}

		[Token(Token = "0x1400000B")]
		public event EventHandler<bool> IsActiveChanged
		{
			[Token(Token = "0x600171D")]
			[Address(RVA = "0xF80AD4", Offset = "0xF80AD4", VA = "0xF80AD4", Slot = "18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE1B9C", Offset = "0xBE1B9C")]
			add
			{
			}
			[Token(Token = "0x600171E")]
			[Address(RVA = "0xF80B74", Offset = "0xF80B74", VA = "0xF80B74", Slot = "19")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE1BAC", Offset = "0xBE1BAC")]
			remove
			{
			}
		}

		[Token(Token = "0x6001713")]
		[Address(RVA = "0xF80834", Offset = "0xF80834", VA = "0xF80834")]
		protected InputMapGameplayBase()
		{
		}

		[Token(Token = "0x600171C")]
		public abstract void PlayHaptics(float duration, float leftAmplitude, float rightAmplitude);

		[Token(Token = "0x600171F")]
		[Address(RVA = "0xF80C14", Offset = "0xF80C14", VA = "0xF80C14", Slot = "5")]
		public AxisButtonState GetGrabInput(int handIndex)
		{
			return default(AxisButtonState);
		}

		[Token(Token = "0x6001720")]
		[Address(RVA = "0xF80C50", Offset = "0xF80C50", VA = "0xF80C50", Slot = "4")]
		public AxisButtonState GetTriggerInput(int handIndex)
		{
			return default(AxisButtonState);
		}

		[Token(Token = "0x6001721")]
		[Address(RVA = "0xF80C8C", Offset = "0xF80C8C", VA = "0xF80C8C", Slot = "6")]
		public ButtonState GetPrimaryButtonInput(int handIndex)
		{
			return default(ButtonState);
		}

		[Token(Token = "0x6001722")]
		[Address(RVA = "0xF80CC8", Offset = "0xF80CC8", VA = "0xF80CC8", Slot = "7")]
		public ButtonState GetSecondaryButtonInput(int handIndex)
		{
			return default(ButtonState);
		}

		[Token(Token = "0x6001723")]
		[Address(RVA = "0xF80D04", Offset = "0xF80D04", VA = "0xF80D04", Slot = "8")]
		public JoyStickState GetJoystickAxisInput(int handIndex)
		{
			return default(JoyStickState);
		}

		[Token(Token = "0x6001724")]
		[Address(RVA = "0xF80D44", Offset = "0xF80D44", VA = "0xF80D44", Slot = "9")]
		public ButtonState GetJoystickTouchInput(int handIndex)
		{
			return default(ButtonState);
		}

		[Token(Token = "0x6001725")]
		[Address(RVA = "0xF80D80", Offset = "0xF80D80", VA = "0xF80D80", Slot = "10")]
		public ButtonState GetPrimaryTouchInput(int handIndex)
		{
			return default(ButtonState);
		}

		[Token(Token = "0x6001726")]
		[Address(RVA = "0xF80DBC", Offset = "0xF80DBC", VA = "0xF80DBC", Slot = "11")]
		public ButtonState GetSecondaryTouchInput(int handIndex)
		{
			return default(ButtonState);
		}

		[Token(Token = "0x6001729")]
		[Address(RVA = "0xF80E0C", Offset = "0xF80E0C", VA = "0xF80E0C", Slot = "14")]
		public void Activate()
		{
		}

		[Token(Token = "0x600172A")]
		[Address(RVA = "0xF80E9C", Offset = "0xF80E9C", VA = "0xF80E9C", Slot = "15")]
		public void Deactivate()
		{
		}

		[Token(Token = "0x600172B")]
		[Address(RVA = "0xF80F28", Offset = "0xF80F28", VA = "0xF80F28", Slot = "16")]
		public void PollInput()
		{
		}

		[Token(Token = "0x600172C")]
		[Address(RVA = "0xF80F44", Offset = "0xF80F44", VA = "0xF80F44", Slot = "12")]
		public void ResetTrigger()
		{
		}

		[Token(Token = "0x600172D")]
		protected abstract void PollPlatformInput();

		[Token(Token = "0x600172E")]
		protected abstract void OnActivated();

		[Token(Token = "0x600172F")]
		protected abstract void OnDeactivated();

		[Token(Token = "0x6001730")]
		[Address(RVA = "0xF80930", Offset = "0xF80930", VA = "0xF80930")]
		private void ResetInput()
		{
		}
	}
	[Token(Token = "0x2000671")]
	public abstract class InputMapGeneralBase : IGeneralInputMap, IInputMap
	{
		[Token(Token = "0x4001520")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private bool _forceToggle;

		[Token(Token = "0x4001521")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		protected ButtonState OpenMenu;

		[Token(Token = "0x4001523")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD789C", Offset = "0xBD789C")]
		private bool <IsActive>k__BackingField;

		[Token(Token = "0x17000430")]
		public bool ToggleMenu
		{
			[Token(Token = "0x6001731")]
			[Address(RVA = "0xF80FAC", Offset = "0xF80FAC", VA = "0xF80FAC", Slot = "4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000431")]
		public bool IsActive
		{
			[Token(Token = "0x6001736")]
			[Address(RVA = "0xF81148", Offset = "0xF81148", VA = "0xF81148", Slot = "6")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE1BFC", Offset = "0xBE1BFC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001737")]
			[Address(RVA = "0xF81150", Offset = "0xF81150", VA = "0xF81150")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE1C0C", Offset = "0xBE1C0C")]
			private set
			{
			}
		}

		[Token(Token = "0x1400000C")]
		public event EventHandler<bool> IsActiveChanged
		{
			[Token(Token = "0x6001733")]
			[Address(RVA = "0xF80FC0", Offset = "0xF80FC0", VA = "0xF80FC0", Slot = "11")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE1BDC", Offset = "0xBE1BDC")]
			add
			{
			}
			[Token(Token = "0x6001734")]
			[Address(RVA = "0xF81060", Offset = "0xF81060", VA = "0xF81060", Slot = "12")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE1BEC", Offset = "0xBE1BEC")]
			remove
			{
			}
		}

		[Token(Token = "0x6001732")]
		[Address(RVA = "0xF80FBC", Offset = "0xF80FBC", VA = "0xF80FBC", Slot = "10")]
		public void PlayHaptics(float duration, float leftAmplitude, float rightAmplitude)
		{
		}

		[Token(Token = "0x6001735")]
		[Address(RVA = "0xF81100", Offset = "0xF81100", VA = "0xF81100", Slot = "9")]
		public void PollInput()
		{
		}

		[Token(Token = "0x6001738")]
		[Address(RVA = "0xF8115C", Offset = "0xF8115C", VA = "0xF8115C", Slot = "7")]
		public void Activate()
		{
		}

		[Token(Token = "0x6001739")]
		[Address(RVA = "0xF811E4", Offset = "0xF811E4", VA = "0xF811E4", Slot = "8")]
		public void Deactivate()
		{
		}

		[Token(Token = "0x600173A")]
		[Address(RVA = "0xF81268", Offset = "0xF81268", VA = "0xF81268", Slot = "5")]
		public bool ForceToggleMenu()
		{
			return default(bool);
		}

		[Token(Token = "0x600173B")]
		protected abstract void PollPlatformInput();

		[Token(Token = "0x600173C")]
		protected abstract void OnActivated();

		[Token(Token = "0x600173D")]
		protected abstract void OnDeactivated();

		[Token(Token = "0x600173E")]
		[Address(RVA = "0xF8127C", Offset = "0xF8127C", VA = "0xF8127C")]
		protected InputMapGeneralBase()
		{
		}
	}
	[Token(Token = "0x2000672")]
	public abstract class InputMapUIBase : IUIInputMap, IInputMap
	{
		[Token(Token = "0x4001524")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD78AC", Offset = "0xBD78AC")]
		private readonly ButtonState[] <Select>k__BackingField;

		[Token(Token = "0x4001525")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD78BC", Offset = "0xBD78BC")]
		private readonly ButtonState[] <Back>k__BackingField;

		[Token(Token = "0x4001526")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD78CC", Offset = "0xBD78CC")]
		private int <CurrentActiveHandIndex>k__BackingField;

		[Token(Token = "0x4001527")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD78DC", Offset = "0xBD78DC")]
		private IButton <CurrentHighlightedButton>k__BackingField;

		[Token(Token = "0x4001528")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD78EC", Offset = "0xBD78EC")]
		private Transform <CurrentAimTransform>k__BackingField;

		[Token(Token = "0x4001529")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD78FC", Offset = "0xBD78FC")]
		private Collider <CurrentHighlightedButtonCollider>k__BackingField;

		[Token(Token = "0x400152A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD790C", Offset = "0xBD790C")]
		private bool <CanInteract>k__BackingField;

		[Token(Token = "0x400152C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD792C", Offset = "0xBD792C")]
		private bool <IsActive>k__BackingField;

		[Token(Token = "0x17000432")]
		protected ButtonState[] Select
		{
			[Token(Token = "0x6001740")]
			[Address(RVA = "0xF813AC", Offset = "0xF813AC", VA = "0xF813AC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE1C1C", Offset = "0xBE1C1C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000433")]
		protected ButtonState[] Back
		{
			[Token(Token = "0x6001741")]
			[Address(RVA = "0xF813B4", Offset = "0xF813B4", VA = "0xF813B4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE1C2C", Offset = "0xBE1C2C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000434")]
		public int CurrentActiveHandIndex
		{
			[Token(Token = "0x6001742")]
			[Address(RVA = "0xF813BC", Offset = "0xF813BC", VA = "0xF813BC", Slot = "7")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE1C3C", Offset = "0xBE1C3C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001743")]
			[Address(RVA = "0xF813C4", Offset = "0xF813C4", VA = "0xF813C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE1C4C", Offset = "0xBE1C4C")]
			private set
			{
			}
		}

		[Token(Token = "0x17000435")]
		public IButton CurrentHighlightedButton
		{
			[Token(Token = "0x6001744")]
			[Address(RVA = "0xF813CC", Offset = "0xF813CC", VA = "0xF813CC", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE1C5C", Offset = "0xBE1C5C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001745")]
			[Address(RVA = "0xF813D4", Offset = "0xF813D4", VA = "0xF813D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE1C6C", Offset = "0xBE1C6C")]
			private set
			{
			}
		}

		[Token(Token = "0x17000436")]
		public Transform CurrentAimTransform
		{
			[Token(Token = "0x6001746")]
			[Address(RVA = "0xF813DC", Offset = "0xF813DC", VA = "0xF813DC", Slot = "6")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE1C7C", Offset = "0xBE1C7C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001747")]
			[Address(RVA = "0xF813E4", Offset = "0xF813E4", VA = "0xF813E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE1C8C", Offset = "0xBE1C8C")]
			private set
			{
			}
		}

		[Token(Token = "0x17000437")]
		public Collider CurrentHighlightedButtonCollider
		{
			[Token(Token = "0x6001748")]
			[Address(RVA = "0xF813EC", Offset = "0xF813EC", VA = "0xF813EC", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE1C9C", Offset = "0xBE1C9C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001749")]
			[Address(RVA = "0xF813F4", Offset = "0xF813F4", VA = "0xF813F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE1CAC", Offset = "0xBE1CAC")]
			private set
			{
			}
		}

		[Token(Token = "0x17000438")]
		public bool CanInteract
		{
			[Token(Token = "0x600174A")]
			[Address(RVA = "0xF813FC", Offset = "0xF813FC", VA = "0xF813FC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE1CBC", Offset = "0xBE1CBC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600174B")]
			[Address(RVA = "0xF81404", Offset = "0xF81404", VA = "0xF81404")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE1CCC", Offset = "0xBE1CCC")]
			private set
			{
			}
		}

		[Token(Token = "0x17000439")]
		public bool IsActive
		{
			[Token(Token = "0x6001751")]
			[Address(RVA = "0xF815C8", Offset = "0xF815C8", VA = "0xF815C8", Slot = "12")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE1CFC", Offset = "0xBE1CFC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001752")]
			[Address(RVA = "0xF815D0", Offset = "0xF815D0", VA = "0xF815D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE1D0C", Offset = "0xBE1D0C")]
			private set
			{
			}
		}

		[Token(Token = "0x1400000D")]
		public event EventHandler<bool> IsActiveChanged
		{
			[Token(Token = "0x600174D")]
			[Address(RVA = "0xF81410", Offset = "0xF81410", VA = "0xF81410", Slot = "17")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE1CDC", Offset = "0xBE1CDC")]
			add
			{
			}
			[Token(Token = "0x600174E")]
			[Address(RVA = "0xF814B0", Offset = "0xF814B0", VA = "0xF814B0", Slot = "18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE1CEC", Offset = "0xBE1CEC")]
			remove
			{
			}
		}

		[Token(Token = "0x600173F")]
		[Address(RVA = "0xF81284", Offset = "0xF81284", VA = "0xF81284")]
		protected InputMapUIBase()
		{
		}

		[Token(Token = "0x600174C")]
		public abstract void PlayHaptics(float duration, float leftAmplitude, float rightAmplitude);

		[Token(Token = "0x600174F")]
		[Address(RVA = "0xF81550", Offset = "0xF81550", VA = "0xF81550", Slot = "8")]
		public ButtonState GetSelectButtonInput(int handIndex)
		{
			return default(ButtonState);
		}

		[Token(Token = "0x6001750")]
		[Address(RVA = "0xF8158C", Offset = "0xF8158C", VA = "0xF8158C", Slot = "9")]
		public ButtonState GetBackButtonInput(int handIndex)
		{
			return default(ButtonState);
		}

		[Token(Token = "0x6001753")]
		[Address(RVA = "0xF815DC", Offset = "0xF815DC", VA = "0xF815DC", Slot = "13")]
		public void Activate()
		{
		}

		[Token(Token = "0x6001754")]
		[Address(RVA = "0xF8166C", Offset = "0xF8166C", VA = "0xF8166C", Slot = "14")]
		public void Deactivate()
		{
		}

		[Token(Token = "0x6001755")]
		[Address(RVA = "0xF816F8", Offset = "0xF816F8", VA = "0xF816F8")]
		protected void SetCanInteract(bool value)
		{
		}

		[Token(Token = "0x6001756")]
		[Address(RVA = "0xF818B4", Offset = "0xF818B4", VA = "0xF818B4", Slot = "15")]
		public void PollInput()
		{
		}

		[Token(Token = "0x6001757")]
		[Address(RVA = "0xF81BC8", Offset = "0xF81BC8", VA = "0xF81BC8", Slot = "10")]
		public void SetActiveHand(int handIndex)
		{
		}

		[Token(Token = "0x6001758")]
		[Address(RVA = "0xF81C08", Offset = "0xF81C08", VA = "0xF81C08", Slot = "11")]
		public void SetCurrentHighlightedButton(IButton newButton, Collider buttonCollider, Transform highlightingTransform)
		{
		}

		[Token(Token = "0x6001759")]
		[Address(RVA = "0xF81300", Offset = "0xF81300", VA = "0xF81300")]
		private void ResetInput()
		{
		}

		[Token(Token = "0x600175A")]
		protected abstract void PollPlatformInput();

		[Token(Token = "0x600175B")]
		protected abstract void OnActivated();

		[Token(Token = "0x600175C")]
		protected abstract void OnDeactivated();
	}
}
namespace Cortopia.Scripts.InputSystem.InputMaps.XR
{
	[Token(Token = "0x2000673")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0xBCACDC", Offset = "0xBCACDC")]
	public class XRInputDevices
	{
		[Token(Token = "0x400152D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private InputDevice[] _devices;

		[Token(Token = "0x1700043A")]
		public InputDevice Item
		{
			[Token(Token = "0x600175D")]
			[Address(RVA = "0x113DEF8", Offset = "0x113DEF8", VA = "0x113DEF8")]
			get
			{
				return default(InputDevice);
			}
		}

		[Token(Token = "0x600175E")]
		[Address(RVA = "0x113DF38", Offset = "0x113DF38", VA = "0x113DF38")]
		public void PlayHaptics(float duration, float leftAmplitude, float rightAmplitude)
		{
		}

		[Token(Token = "0x600175F")]
		[Address(RVA = "0x113E000", Offset = "0x113E000", VA = "0x113E000")]
		public void Init()
		{
		}

		[Token(Token = "0x6001760")]
		[Address(RVA = "0x113E0F0", Offset = "0x113E0F0", VA = "0x113E0F0")]
		public XRInputDevices()
		{
		}
	}
	[Token(Token = "0x2000674")]
	public class XRInputMapGameplay : InputMapGameplayBase
	{
		[Token(Token = "0x400152E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private readonly XRInputDevices _devices;

		[Token(Token = "0x6001761")]
		[Address(RVA = "0x113E0F8", Offset = "0x113E0F8", VA = "0x113E0F8", Slot = "22")]
		protected override void OnActivated()
		{
		}

		[Token(Token = "0x6001762")]
		[Address(RVA = "0x113E0FC", Offset = "0x113E0FC", VA = "0x113E0FC", Slot = "23")]
		protected override void OnDeactivated()
		{
		}

		[Token(Token = "0x6001763")]
		[Address(RVA = "0x113E100", Offset = "0x113E100", VA = "0x113E100", Slot = "20")]
		public override void PlayHaptics(float duration, float leftAmplitude, float rightAmplitude)
		{
		}

		[Token(Token = "0x6001764")]
		[Address(RVA = "0x113E118", Offset = "0x113E118", VA = "0x113E118", Slot = "21")]
		protected override void PollPlatformInput()
		{
		}

		[Token(Token = "0x6001765")]
		[Address(RVA = "0x113E560", Offset = "0x113E560", VA = "0x113E560")]
		public XRInputMapGameplay()
		{
		}
	}
	[Token(Token = "0x2000675")]
	public class XRInputMapGeneral : InputMapGeneralBase
	{
		[Token(Token = "0x6001766")]
		[Address(RVA = "0x113E5C4", Offset = "0x113E5C4", VA = "0x113E5C4", Slot = "14")]
		protected override void OnActivated()
		{
		}

		[Token(Token = "0x6001767")]
		[Address(RVA = "0x113E5C8", Offset = "0x113E5C8", VA = "0x113E5C8", Slot = "15")]
		protected override void OnDeactivated()
		{
		}

		[Token(Token = "0x6001768")]
		[Address(RVA = "0x113E5CC", Offset = "0x113E5CC", VA = "0x113E5CC", Slot = "13")]
		protected override void PollPlatformInput()
		{
		}

		[Token(Token = "0x6001769")]
		[Address(RVA = "0x113E674", Offset = "0x113E674", VA = "0x113E674")]
		public XRInputMapGeneral()
		{
		}
	}
	[Token(Token = "0x2000676")]
	public class XRInputMapUI : InputMapUIBase
	{
		[Token(Token = "0x400152F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private readonly XRInputDevices _devices;

		[Token(Token = "0x600176A")]
		[Address(RVA = "0x113E67C", Offset = "0x113E67C", VA = "0x113E67C", Slot = "21")]
		protected override void OnActivated()
		{
		}

		[Token(Token = "0x600176B")]
		[Address(RVA = "0x113E680", Offset = "0x113E680", VA = "0x113E680", Slot = "22")]
		protected override void OnDeactivated()
		{
		}

		[Token(Token = "0x600176C")]
		[Address(RVA = "0x113E684", Offset = "0x113E684", VA = "0x113E684", Slot = "19")]
		public override void PlayHaptics(float duration, float leftAmplitude, float rightAmplitude)
		{
		}

		[Token(Token = "0x600176D")]
		[Address(RVA = "0x113E69C", Offset = "0x113E69C", VA = "0x113E69C", Slot = "20")]
		protected override void PollPlatformInput()
		{
		}

		[Token(Token = "0x600176E")]
		[Address(RVA = "0x113EA2C", Offset = "0x113EA2C", VA = "0x113EA2C")]
		public XRInputMapUI()
		{
		}
	}
}
namespace Cortopia.Scripts.InputSystem.InputMaps.PicoXR
{
	[Token(Token = "0x2000677")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0xBCAD14", Offset = "0xBCAD14")]
	public class PicoXRInputDevices
	{
		[Token(Token = "0x4001530")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private InputDevice[] _devices;

		[Token(Token = "0x1700043B")]
		public InputDevice Item
		{
			[Token(Token = "0x600176F")]
			[Address(RVA = "0xFD27A8", Offset = "0xFD27A8", VA = "0xFD27A8")]
			get
			{
				return default(InputDevice);
			}
		}

		[Token(Token = "0x6001770")]
		[Address(RVA = "0xFD27E8", Offset = "0xFD27E8", VA = "0xFD27E8")]
		public void PlayHaptics(float duration, float leftAmplitude, float rightAmplitude)
		{
		}

		[Token(Token = "0x6001771")]
		[Address(RVA = "0xFD28AC", Offset = "0xFD28AC", VA = "0xFD28AC")]
		public void Init()
		{
		}

		[Token(Token = "0x6001772")]
		[Address(RVA = "0xFD299C", Offset = "0xFD299C", VA = "0xFD299C")]
		public PicoXRInputDevices()
		{
		}
	}
	[Token(Token = "0x2000678")]
	public class PicoXRInputMapGameplay : InputMapGameplayBase
	{
		[Token(Token = "0x4001531")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private readonly PicoXRInputDevices _devices;

		[Token(Token = "0x6001773")]
		[Address(RVA = "0xFD29A4", Offset = "0xFD29A4", VA = "0xFD29A4", Slot = "22")]
		protected override void OnActivated()
		{
		}

		[Token(Token = "0x6001774")]
		[Address(RVA = "0xFD29A8", Offset = "0xFD29A8", VA = "0xFD29A8", Slot = "23")]
		protected override void OnDeactivated()
		{
		}

		[Token(Token = "0x6001775")]
		[Address(RVA = "0xFD29AC", Offset = "0xFD29AC", VA = "0xFD29AC", Slot = "20")]
		public override void PlayHaptics(float duration, float leftAmplitude, float rightAmplitude)
		{
		}

		[Token(Token = "0x6001776")]
		[Address(RVA = "0xFD29C4", Offset = "0xFD29C4", VA = "0xFD29C4", Slot = "21")]
		protected override void PollPlatformInput()
		{
		}

		[Token(Token = "0x6001777")]
		[Address(RVA = "0xFD2E0C", Offset = "0xFD2E0C", VA = "0xFD2E0C")]
		public PicoXRInputMapGameplay()
		{
		}
	}
	[Token(Token = "0x2000679")]
	public class PicoXRInputMapGeneral : InputMapGeneralBase
	{
		[Token(Token = "0x6001778")]
		[Address(RVA = "0xFD2E70", Offset = "0xFD2E70", VA = "0xFD2E70", Slot = "14")]
		protected override void OnActivated()
		{
		}

		[Token(Token = "0x6001779")]
		[Address(RVA = "0xFD2E74", Offset = "0xFD2E74", VA = "0xFD2E74", Slot = "15")]
		protected override void OnDeactivated()
		{
		}

		[Token(Token = "0x600177A")]
		[Address(RVA = "0xFD2E78", Offset = "0xFD2E78", VA = "0xFD2E78", Slot = "13")]
		protected override void PollPlatformInput()
		{
		}

		[Token(Token = "0x600177B")]
		[Address(RVA = "0xFD2F20", Offset = "0xFD2F20", VA = "0xFD2F20")]
		public PicoXRInputMapGeneral()
		{
		}
	}
	[Token(Token = "0x200067A")]
	public class PicoXRInputMapUI : InputMapUIBase
	{
		[Token(Token = "0x4001532")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private readonly PicoXRInputDevices _devices;

		[Token(Token = "0x600177C")]
		[Address(RVA = "0xFD2F28", Offset = "0xFD2F28", VA = "0xFD2F28", Slot = "21")]
		protected override void OnActivated()
		{
		}

		[Token(Token = "0x600177D")]
		[Address(RVA = "0xFD2F2C", Offset = "0xFD2F2C", VA = "0xFD2F2C", Slot = "22")]
		protected override void OnDeactivated()
		{
		}

		[Token(Token = "0x600177E")]
		[Address(RVA = "0xFD2F30", Offset = "0xFD2F30", VA = "0xFD2F30", Slot = "19")]
		public override void PlayHaptics(float duration, float leftAmplitude, float rightAmplitude)
		{
		}

		[Token(Token = "0x600177F")]
		[Address(RVA = "0xFD2F48", Offset = "0xFD2F48", VA = "0xFD2F48", Slot = "20")]
		protected override void PollPlatformInput()
		{
		}

		[Token(Token = "0x6001780")]
		[Address(RVA = "0xFD32D8", Offset = "0xFD32D8", VA = "0xFD32D8")]
		public PicoXRInputMapUI()
		{
		}
	}
}
namespace Cortopia.Scripts.Haptics
{
	[Token(Token = "0x200067B")]
	public class BHapticsClipPlayer : MonoBehaviour
	{
		[Token(Token = "0x4001533")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private string clipID;

		[Token(Token = "0x4001534")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private BodyPart targetHand;

		[Token(Token = "0x4001535")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private BoundValue<BodyPart> activeSpellCasterHand;

		[Token(Token = "0x4001536")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool _isPlaying;

		[Token(Token = "0x6001781")]
		[Address(RVA = "0x132AFBC", Offset = "0x132AFBC", VA = "0x132AFBC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001782")]
		[Address(RVA = "0x132B294", Offset = "0x132B294", VA = "0x132B294")]
		private void Update()
		{
		}

		[Token(Token = "0x6001783")]
		[Address(RVA = "0x132B438", Offset = "0x132B438", VA = "0x132B438")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001784")]
		[Address(RVA = "0x132B5E4", Offset = "0x132B5E4", VA = "0x132B5E4")]
		public BHapticsClipPlayer()
		{
		}
	}
	[Token(Token = "0x200067C")]
	public class HapticsHandler : MonoBehaviour
	{
		[Token(Token = "0x6001785")]
		[Address(RVA = "0xFB034C", Offset = "0xFB034C", VA = "0xFB034C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001786")]
		[Address(RVA = "0xFB06EC", Offset = "0xFB06EC", VA = "0xFB06EC")]
		private void OnGrab(EventGrabbing callback)
		{
		}

		[Token(Token = "0x6001787")]
		[Address(RVA = "0xFB0904", Offset = "0xFB0904", VA = "0xFB0904")]
		private void OnTeleport(EventStartTeleporting callback)
		{
		}

		[Token(Token = "0x6001788")]
		[Address(RVA = "0xFB0A40", Offset = "0xFB0A40", VA = "0xFB0A40")]
		private void OnPlayerDied(EventPlayerDied callback)
		{
		}

		[Token(Token = "0x6001789")]
		[Address(RVA = "0xFB0B7C", Offset = "0xFB0B7C", VA = "0xFB0B7C")]
		private void OnSpellCast(EventSpellCast callback)
		{
		}

		[Token(Token = "0x600178A")]
		[Address(RVA = "0xFB0DC4", Offset = "0xFB0DC4", VA = "0xFB0DC4")]
		private void OnHitBy(EventHitBy callback)
		{
		}

		[Token(Token = "0x600178B")]
		[Address(RVA = "0xFB11A8", Offset = "0xFB11A8", VA = "0xFB11A8")]
		private void OnHealedBy(EventHealedBy callback)
		{
		}

		[Token(Token = "0x600178C")]
		[Address(RVA = "0xFB12AC", Offset = "0xFB12AC", VA = "0xFB12AC")]
		public HapticsHandler()
		{
		}
	}
}
namespace Cortopia.Scripts.Global
{
	[Token(Token = "0x200067D")]
	public class CosmeticsHolder
	{
		[Serializable]
		[Token(Token = "0x200067E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCAD4C", Offset = "0xBCAD4C")]
		private sealed class <>c
		{
			[Token(Token = "0x400153C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x400153D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<TitleDefinition, string> <>9__15_0;

			[Token(Token = "0x400153E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<BorderDefinition, string> <>9__15_1;

			[Token(Token = "0x6001798")]
			[Address(RVA = "0x10259C0", Offset = "0x10259C0", VA = "0x10259C0")]
			public <>c()
			{
			}

			[Token(Token = "0x6001799")]
			[Address(RVA = "0x10259C8", Offset = "0x10259C8", VA = "0x10259C8")]
			internal string <SetUp>b__15_0(TitleDefinition x)
			{
				return null;
			}

			[Token(Token = "0x600179A")]
			[Address(RVA = "0x10259E0", Offset = "0x10259E0", VA = "0x10259E0")]
			internal string <SetUp>b__15_1(BorderDefinition x)
			{
				return null;
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x200067F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCAD5C", Offset = "0xBCAD5C")]
		private struct <SetUp>d__15 : IAsyncStateMachine
		{
			[Token(Token = "0x400153F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001540")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x4001541")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CosmeticsHolder <>4__this;

			[Token(Token = "0x4001542")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private TaskAwaiter<IList<TitleDefinition>> <>u__1;

			[Token(Token = "0x4001543")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private TaskAwaiter<IList<BorderDefinition>> <>u__2;

			[Token(Token = "0x600179B")]
			[Address(RVA = "0x10259F8", Offset = "0x10259F8", VA = "0x10259F8", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x600179C")]
			[Address(RVA = "0x1025FAC", Offset = "0x1025FAC", VA = "0x1025FAC", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4001537")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private AsyncOperationHandle<IList<BorderDefinition>> _borderInfoHandle;

		[Token(Token = "0x4001538")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private AsyncOperationHandle<IList<TitleDefinition>> _titleInfoHandle;

		[Token(Token = "0x4001539")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD796C", Offset = "0xBD796C")]
		private Task <SetupTask>k__BackingField;

		[Token(Token = "0x400153A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD797C", Offset = "0xBD797C")]
		private Dictionary<string, TitleDefinition> <Titles>k__BackingField;

		[Token(Token = "0x400153B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD798C", Offset = "0xBD798C")]
		private Dictionary<string, BorderDefinition> <Borders>k__BackingField;

		[Token(Token = "0x1700043C")]
		public Task SetupTask
		{
			[Token(Token = "0x600178D")]
			[Address(RVA = "0x1168278", Offset = "0x1168278", VA = "0x1168278")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE1D1C", Offset = "0xBE1D1C")]
			get
			{
				return null;
			}
			[Token(Token = "0x600178E")]
			[Address(RVA = "0x1168280", Offset = "0x1168280", VA = "0x1168280")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE1D2C", Offset = "0xBE1D2C")]
			private set
			{
			}
		}

		[Token(Token = "0x1700043D")]
		public Dictionary<string, TitleDefinition> Titles
		{
			[Token(Token = "0x600178F")]
			[Address(RVA = "0x1168288", Offset = "0x1168288", VA = "0x1168288")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE1D3C", Offset = "0xBE1D3C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001790")]
			[Address(RVA = "0x1168290", Offset = "0x1168290", VA = "0x1168290")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE1D4C", Offset = "0xBE1D4C")]
			set
			{
			}
		}

		[Token(Token = "0x1700043E")]
		public Dictionary<string, BorderDefinition> Borders
		{
			[Token(Token = "0x6001791")]
			[Address(RVA = "0x1168298", Offset = "0x1168298", VA = "0x1168298")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE1D5C", Offset = "0xBE1D5C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001792")]
			[Address(RVA = "0x11682A0", Offset = "0x11682A0", VA = "0x11682A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE1D6C", Offset = "0xBE1D6C")]
			set
			{
			}
		}

		[Token(Token = "0x6001793")]
		[Address(RVA = "0x11682A8", Offset = "0x11682A8", VA = "0x11682A8")]
		public void StartSetUp()
		{
		}

		[Token(Token = "0x6001794")]
		[Address(RVA = "0x11682CC", Offset = "0x11682CC", VA = "0x11682CC")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xBE1D7C", Offset = "0xBE1D7C")]
		private Task SetUp()
		{
			return null;
		}

		[Token(Token = "0x6001795")]
		[Address(RVA = "0x11683E8", Offset = "0x11683E8", VA = "0x11683E8")]
		public void Clear()
		{
		}

		[Token(Token = "0x6001796")]
		[Address(RVA = "0x116852C", Offset = "0x116852C", VA = "0x116852C")]
		public CosmeticsHolder()
		{
		}
	}
	[Token(Token = "0x2000680")]
	public class FloorOffset
	{
		[StructLayout(3)]
		[Token(Token = "0x2000681")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCAD6C", Offset = "0xBCAD6C")]
		private struct <InitializeCameraAsync>d__12 : IAsyncStateMachine
		{
			[Token(Token = "0x4001549")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x400154A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x400154B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FloorOffset <>4__this;

			[Token(Token = "0x400154C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private YieldAwaitable.YieldAwaiter <>u__1;

			[Token(Token = "0x60017A5")]
			[Address(RVA = "0x102BC08", Offset = "0x102BC08", VA = "0x102BC08", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x60017A6")]
			[Address(RVA = "0x102BEB8", Offset = "0x102BEB8", VA = "0x102BEB8", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4001544")]
		private const float DefaultCameraYOffset = 1.36144f;

		[Token(Token = "0x4001545")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private bool _cameraInitialized;

		[Token(Token = "0x4001546")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		private bool _cameraInitializing;

		[Token(Token = "0x4001547")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private ReactiveSource<float> _heightOffset;

		[Token(Token = "0x4001548")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD799C", Offset = "0xBD799C")]
		private Task <AsyncInit>k__BackingField;

		[Token(Token = "0x1700043F")]
		public Task AsyncInit
		{
			[Token(Token = "0x600179E")]
			[Address(RVA = "0xF9E1E0", Offset = "0xF9E1E0", VA = "0xF9E1E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE1DEC", Offset = "0xBE1DEC")]
			get
			{
				return null;
			}
			[Token(Token = "0x600179F")]
			[Address(RVA = "0xF9E1E8", Offset = "0xF9E1E8", VA = "0xF9E1E8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE1DFC", Offset = "0xBE1DFC")]
			private set
			{
			}
		}

		[Token(Token = "0x17000440")]
		public Reactive<float> HeightOffset
		{
			[Token(Token = "0x60017A0")]
			[Address(RVA = "0xF9E1F0", Offset = "0xF9E1F0", VA = "0xF9E1F0")]
			get
			{
				return default(Reactive<float>);
			}
		}

		[Token(Token = "0x600179D")]
		[Address(RVA = "0xF9E10C", Offset = "0xF9E10C", VA = "0xF9E10C")]
		public FloorOffset()
		{
		}

		[Token(Token = "0x60017A1")]
		[Address(RVA = "0xF9E1A0", Offset = "0xF9E1A0", VA = "0xF9E1A0")]
		private void TryInitializeCamera()
		{
		}

		[Token(Token = "0x60017A2")]
		[Address(RVA = "0xF9E3EC", Offset = "0xF9E3EC", VA = "0xF9E3EC")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xBE1E0C", Offset = "0xBE1E0C")]
		private Task InitializeCameraAsync()
		{
			return null;
		}

		[Token(Token = "0x60017A3")]
		[Address(RVA = "0xF9E244", Offset = "0xF9E244", VA = "0xF9E244")]
		private bool SetupSubSystemFloor()
		{
			return default(bool);
		}

		[Token(Token = "0x60017A4")]
		[Address(RVA = "0xF9E4F0", Offset = "0xF9E4F0", VA = "0xF9E4F0")]
		private bool SetupSubSystemFloor(XRInputSubsystem subsystem)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000682")]
	public class FogSampler : MonoBehaviour
	{
		[Token(Token = "0x400154D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly int GlobalSceneCubeMap;

		[Token(Token = "0x400154E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static readonly int GlobalSceneCubeMapRotation;

		[Token(Token = "0x400154F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly int GlobalSceneFogValue;

		[Token(Token = "0x4001550")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Texture sceneCubeMap;

		[Token(Token = "0x4001551")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float sceneSkyRotation;

		[Token(Token = "0x4001552")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private float sceneFogValue;

		[Token(Token = "0x60017A7")]
		[Address(RVA = "0xF9E5EC", Offset = "0xF9E5EC", VA = "0xF9E5EC")]
		private void Awake()
		{
		}

		[Token(Token = "0x60017A8")]
		[Address(RVA = "0xF9E690", Offset = "0xF9E690", VA = "0xF9E690")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x60017A9")]
		[Address(RVA = "0xF9E5F0", Offset = "0xF9E5F0", VA = "0xF9E5F0")]
		private void UpdateFogSample()
		{
		}

		[Token(Token = "0x60017AA")]
		[Address(RVA = "0xF9E694", Offset = "0xF9E694", VA = "0xF9E694")]
		public FogSampler()
		{
		}
	}
	[Token(Token = "0x2000683")]
	public abstract class FramesBase
	{
		[Token(Token = "0x17000441")]
		protected abstract QuantumRunner Runner
		{
			[Token(Token = "0x60017AC")]
			get;
		}

		[Token(Token = "0x17000442")]
		[CanBeNull]
		public QuantumGame Game
		{
			[Token(Token = "0x60017AD")]
			[Address(RVA = "0xF9EC6C", Offset = "0xF9EC6C", VA = "0xF9EC6C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60017AE")]
		[Address(RVA = "0xF9FEC8", Offset = "0xF9FEC8", VA = "0xF9FEC8")]
		[AttributeAttribute(Name = "ContractAnnotationAttribute", RVA = "0xBE1E7C", Offset = "0xBE1E7C")]
		[MustUseReturnValue]
		public bool TryGetPredicted(out Frame frame, out QuantumGame game)
		{
			return default(bool);
		}

		[Token(Token = "0x60017AF")]
		[Address(RVA = "0xF9FF18", Offset = "0xF9FF18", VA = "0xF9FF18")]
		[AttributeAttribute(Name = "ContractAnnotationAttribute", RVA = "0xBE1EC8", Offset = "0xBE1EC8")]
		[MustUseReturnValue]
		public bool TryGetVerified(out Frame frame, out QuantumGame game)
		{
			return default(bool);
		}

		[Token(Token = "0x60017B0")]
		[Address(RVA = "0xF9FF68", Offset = "0xF9FF68", VA = "0xF9FF68")]
		[AttributeAttribute(Name = "ContractAnnotationAttribute", RVA = "0xBE1F14", Offset = "0xBE1F14")]
		[MustUseReturnValue]
		public bool TryGetPredictedPrevious(out Frame frame, out QuantumGame game)
		{
			return default(bool);
		}

		[Token(Token = "0x60017B1")]
		[Address(RVA = "0xF9FFB8", Offset = "0xF9FFB8", VA = "0xF9FFB8")]
		[MustUseReturnValue]
		[AttributeAttribute(Name = "ContractAnnotationAttribute", RVA = "0xBE1F60", Offset = "0xBE1F60")]
		public bool TryGetPreviousUpdatePredicted(out Frame frame, out QuantumGame game)
		{
			return default(bool);
		}

		[Token(Token = "0x60017B2")]
		[Address(RVA = "0xF9DC40", Offset = "0xF9DC40", VA = "0xF9DC40")]
		[AttributeAttribute(Name = "ContractAnnotationAttribute", RVA = "0xBE1FAC", Offset = "0xBE1FAC")]
		[MustUseReturnValue]
		public bool TryGetPredicted(out Frame frame)
		{
			return default(bool);
		}

		[Token(Token = "0x60017B3")]
		[Address(RVA = "0xFA0008", Offset = "0xFA0008", VA = "0xFA0008")]
		[AttributeAttribute(Name = "ContractAnnotationAttribute", RVA = "0xBE1FF8", Offset = "0xBE1FF8")]
		[MustUseReturnValue]
		public bool TryGetVerified(out Frame frame)
		{
			return default(bool);
		}

		[Token(Token = "0x60017B4")]
		[Address(RVA = "0xFA0050", Offset = "0xFA0050", VA = "0xFA0050")]
		[AttributeAttribute(Name = "ContractAnnotationAttribute", RVA = "0xBE2044", Offset = "0xBE2044")]
		[MustUseReturnValue]
		public bool TryGetPredictedPrevious(out Frame frame)
		{
			return default(bool);
		}

		[Token(Token = "0x60017B5")]
		[Address(RVA = "0xFA0098", Offset = "0xFA0098", VA = "0xFA0098")]
		[MustUseReturnValue]
		[AttributeAttribute(Name = "ContractAnnotationAttribute", RVA = "0xBE2090", Offset = "0xBE2090")]
		public bool TryGetPreviousUpdatePredicted(out Frame frame)
		{
			return default(bool);
		}

		[Token(Token = "0x60017B6")]
		[Address(RVA = "0xF9FEC0", Offset = "0xF9FEC0", VA = "0xF9FEC0")]
		protected FramesBase()
		{
		}
	}
	[Token(Token = "0x2000684")]
	public class Frames : FramesBase
	{
		[Token(Token = "0x2000685")]
		private class OnlineFrames : FramesBase
		{
			[Token(Token = "0x17000446")]
			protected override QuantumRunner Runner
			{
				[Token(Token = "0x60017BB")]
				[Address(RVA = "0x102D844", Offset = "0x102D844", VA = "0x102D844", Slot = "4")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60017BC")]
			[Address(RVA = "0x102DBA8", Offset = "0x102DBA8", VA = "0x102DBA8")]
			public OnlineFrames()
			{
			}
		}

		[Token(Token = "0x2000686")]
		private class LocalFrames : FramesBase
		{
			[Token(Token = "0x17000447")]
			protected override QuantumRunner Runner
			{
				[Token(Token = "0x60017BD")]
				[Address(RVA = "0x102D4D8", Offset = "0x102D4D8", VA = "0x102D4D8", Slot = "4")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60017BE")]
			[Address(RVA = "0x102D83C", Offset = "0x102D83C", VA = "0x102D83C")]
			public LocalFrames()
			{
			}
		}

		[Token(Token = "0x4001553")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD79DC", Offset = "0xBD79DC")]
		private readonly FramesBase <Online>k__BackingField;

		[Token(Token = "0x4001554")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD79EC", Offset = "0xBD79EC")]
		private readonly FramesBase <Local>k__BackingField;

		[Token(Token = "0x17000443")]
		protected override QuantumRunner Runner
		{
			[Token(Token = "0x60017B7")]
			[Address(RVA = "0xF9FDC4", Offset = "0xF9FDC4", VA = "0xF9FDC4", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000444")]
		[NotNull]
		public FramesBase Online
		{
			[Token(Token = "0x60017B8")]
			[Address(RVA = "0xF9FE20", Offset = "0xF9FE20", VA = "0xF9FE20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE20DC", Offset = "0xBE20DC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000445")]
		[NotNull]
		public FramesBase Local
		{
			[Token(Token = "0x60017B9")]
			[Address(RVA = "0xF9FE28", Offset = "0xF9FE28", VA = "0xF9FE28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE20EC", Offset = "0xBE20EC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60017BA")]
		[Address(RVA = "0xF9FE30", Offset = "0xF9FE30", VA = "0xF9FE30")]
		public Frames()
		{
		}
	}
	[Token(Token = "0x2000687")]
	public class Game
	{
		[Serializable]
		[Token(Token = "0x2000688")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCAD7C", Offset = "0xBCAD7C")]
		private sealed class <>c
		{
			[Token(Token = "0x4001588")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001589")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<IUser, Reactive<bool>> <>9__23_1;

			[Token(Token = "0x400158A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<Cortopia.Scripts.Players.Player, EntityRef> <>9__23_3;

			[Token(Token = "0x400158B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Func<Cortopia.Scripts.Players.Player, Reactive<(PlayerRef, QuantumGame)>> <>9__23_4;

			[Token(Token = "0x400158C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static Func<Cortopia.Scripts.Players.Player, Reactive<QuantumGame>> <>9__23_5;

			[Token(Token = "0x400158D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public static Func<bool, bool> <>9__119_0;

			[Token(Token = "0x400158E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public static Func<EntitledPlayerClass, PlayerLoadout> <>9__151_0;

			[Token(Token = "0x400158F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public static Func<Task<GetTitleDataResult>> <>9__154_0;

			[Token(Token = "0x6001814")]
			[Address(RVA = "0x102DC10", Offset = "0x102DC10", VA = "0x102DC10")]
			public <>c()
			{
			}

			[Token(Token = "0x6001815")]
			[Address(RVA = "0x102DC18", Offset = "0x102DC18", VA = "0x102DC18")]
			internal Reactive<bool> <.ctor>b__23_1(IUser x)
			{
				return default(Reactive<bool>);
			}

			[Token(Token = "0x6001816")]
			[Address(RVA = "0x102DCE8", Offset = "0x102DCE8", VA = "0x102DCE8")]
			internal EntityRef <.ctor>b__23_3(Cortopia.Scripts.Players.Player x)
			{
				return default(EntityRef);
			}

			[Token(Token = "0x6001817")]
			[Address(RVA = "0x102DD78", Offset = "0x102DD78", VA = "0x102DD78")]
			internal Reactive<(PlayerRef, QuantumGame)> <.ctor>b__23_4(Cortopia.Scripts.Players.Player x)
			{
				return default(Reactive<(PlayerRef, QuantumGame)>);
			}

			[Token(Token = "0x6001818")]
			[Address(RVA = "0x102DE90", Offset = "0x102DE90", VA = "0x102DE90")]
			internal Reactive<QuantumGame> <.ctor>b__23_5(Cortopia.Scripts.Players.Player x)
			{
				return default(Reactive<QuantumGame>);
			}

			[Token(Token = "0x6001819")]
			[Address(RVA = "0x102DF38", Offset = "0x102DF38", VA = "0x102DF38")]
			internal bool <get_HasInternet>b__119_0(bool x)
			{
				return default(bool);
			}

			[Token(Token = "0x600181A")]
			[Address(RVA = "0x102DF44", Offset = "0x102DF44", VA = "0x102DF44")]
			internal PlayerLoadout <UpdatePlayerLoadoutIfNeeded>b__151_0(EntitledPlayerClass x)
			{
				return default(PlayerLoadout);
			}

			[Token(Token = "0x600181B")]
			[Address(RVA = "0x102DF9C", Offset = "0x102DF9C", VA = "0x102DF9C")]
			internal Task<GetTitleDataResult> <GetPlayFabTitleData>b__154_0()
			{
				return null;
			}

			[Token(Token = "0x600181C")]
			[Address(RVA = "0x102E140", Offset = "0x102E140", VA = "0x102E140")]
			internal Game <.cctor>b__172_0()
			{
				return null;
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000689")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCAD8C", Offset = "0xBCAD8C")]
		private struct <GetUserAsync>d__141 : IAsyncStateMachine
		{
			[Token(Token = "0x4001590")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001591")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder<IUser> <>t__builder;

			[Token(Token = "0x4001592")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Game <>4__this;

			[Token(Token = "0x4001593")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private TaskAwaiter<bool> <>u__1;

			[Token(Token = "0x4001594")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private TaskAwaiter<IUser> <>u__2;

			[Token(Token = "0x600181D")]
			[Address(RVA = "0x102F3CC", Offset = "0x102F3CC", VA = "0x102F3CC", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x600181E")]
			[Address(RVA = "0x102F7AC", Offset = "0x102F7AC", VA = "0x102F7AC", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x200068A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCAD9C", Offset = "0xBCAD9C")]
		private struct <SetupVrFocusListeners>d__143 : IAsyncStateMachine
		{
			[Token(Token = "0x4001595")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001596")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4001597")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Game <>4__this;

			[Token(Token = "0x4001598")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private TaskAwaiter<IReadOnlyDictionary<AssetGuid, AssetBase>> <>u__1;

			[Token(Token = "0x600181F")]
			[Address(RVA = "0x102FFD8", Offset = "0x102FFD8", VA = "0x102FFD8", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001820")]
			[Address(RVA = "0x1030224", Offset = "0x1030224", VA = "0x1030224", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x200068B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCADAC", Offset = "0xBCADAC")]
		private struct <SetIsOnline>d__147 : IAsyncStateMachine
		{
			[Token(Token = "0x4001599")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x400159A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x400159B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Game <>4__this;

			[Token(Token = "0x400159C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public bool isOnline;

			[Token(Token = "0x400159D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private CancellationToken <token>5__2;

			[Token(Token = "0x400159E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x6001821")]
			[Address(RVA = "0x102FA50", Offset = "0x102FA50", VA = "0x102FA50", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001822")]
			[Address(RVA = "0x102FFCC", Offset = "0x102FFCC", VA = "0x102FFCC", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x200068C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCADBC", Offset = "0xBCADBC")]
		private sealed class <>c__DisplayClass148_0
		{
			[Token(Token = "0x400159F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RegionLatencies latencies;

			[Token(Token = "0x6001823")]
			[Address(RVA = "0x102E198", Offset = "0x102E198", VA = "0x102E198")]
			public <>c__DisplayClass148_0()
			{
			}

			[Token(Token = "0x6001824")]
			[Address(RVA = "0x102E1A0", Offset = "0x102E1A0", VA = "0x102E1A0")]
			internal Task <OnRegionLatenciesChanged>b__0()
			{
				return null;
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x200068D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCADCC", Offset = "0xBCADCC")]
		private struct <OnRegionLatenciesChanged>d__148 : IAsyncStateMachine
		{
			[Token(Token = "0x40015A0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40015A1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x40015A2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public RegionLatencies latencies;

			[Token(Token = "0x40015A3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Game <>4__this;

			[Token(Token = "0x40015A4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x6001825")]
			[Address(RVA = "0x102F808", Offset = "0x102F808", VA = "0x102F808", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001826")]
			[Address(RVA = "0x102FA44", Offset = "0x102FA44", VA = "0x102FA44", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x200068E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCADDC", Offset = "0xBCADDC")]
		private struct <UpdatePlayerLoadoutIfNeeded>d__151 : IAsyncStateMachine
		{
			[Token(Token = "0x40015A5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40015A6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x40015A7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Game <>4__this;

			[Token(Token = "0x40015A8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public QuantumGame game;

			[Token(Token = "0x40015A9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x6001827")]
			[Address(RVA = "0x10304A8", Offset = "0x10304A8", VA = "0x10304A8", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001828")]
			[Address(RVA = "0x1030900", Offset = "0x1030900", VA = "0x1030900", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x200068F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCADEC", Offset = "0xBCADEC")]
		private struct <GetPlayFabTitleData>d__154 : IAsyncStateMachine
		{
			[Token(Token = "0x40015AA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40015AB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x40015AC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Game <>4__this;

			[Token(Token = "0x40015AD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private TaskAwaiter<GetTitleDataResult> <>u__1;

			[Token(Token = "0x6001829")]
			[Address(RVA = "0x102EF70", Offset = "0x102EF70", VA = "0x102EF70", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x600182A")]
			[Address(RVA = "0x102F3C0", Offset = "0x102F3C0", VA = "0x102F3C0", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000690")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCADFC", Offset = "0xBCADFC")]
		private struct <GetAllSpellAssets>d__155 : IAsyncStateMachine
		{
			[Token(Token = "0x40015AE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40015AF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x40015B0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Game <>4__this;

			[Token(Token = "0x40015B1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private ReactiveSource<SpellSetupAsset[]> <>7__wrap1;

			[Token(Token = "0x40015B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private TaskAwaiter<SpellSetupAsset[]> <>u__1;

			[Token(Token = "0x600182B")]
			[Address(RVA = "0x102EC7C", Offset = "0x102EC7C", VA = "0x102EC7C", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x600182C")]
			[Address(RVA = "0x102EF64", Offset = "0x102EF64", VA = "0x102EF64", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000691")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCAE0C", Offset = "0xBCAE0C")]
		private struct <GetAllPlayerClassAssets>d__156 : IAsyncStateMachine
		{
			[Token(Token = "0x40015B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40015B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x40015B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Game <>4__this;

			[Token(Token = "0x40015B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private ReactiveSource<PlayerClassConfigurationAsset[]> <>7__wrap1;

			[Token(Token = "0x40015B7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private TaskAwaiter<PlayerClassConfigurationAsset[]> <>u__1;

			[Token(Token = "0x600182D")]
			[Address(RVA = "0x102E988", Offset = "0x102E988", VA = "0x102E988", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x600182E")]
			[Address(RVA = "0x102EC70", Offset = "0x102EC70", VA = "0x102EC70", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000692")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCAE1C", Offset = "0xBCAE1C")]
		private struct <StartQuantumAsync>d__157 : IAsyncStateMachine
		{
			[Token(Token = "0x40015B8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40015B9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder<QuantumRunner> <>t__builder;

			[Token(Token = "0x40015BA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Game <>4__this;

			[Token(Token = "0x40015BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string clientId;

			[Token(Token = "0x40015BC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public QuantumRunner.StartParameters parameters;

			[Token(Token = "0x40015BD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x600182F")]
			[Address(RVA = "0x1030230", Offset = "0x1030230", VA = "0x1030230", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001830")]
			[Address(RVA = "0x103044C", Offset = "0x103044C", VA = "0x103044C", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000693")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCAE2C", Offset = "0xBCAE2C")]
		private struct <CreateEntityViewUpdaterAsync>d__158 : IAsyncStateMachine
		{
			[Token(Token = "0x40015BE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40015BF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x40015C0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Game <>4__this;

			[Token(Token = "0x40015C1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Task<GameObject> <evuTask>5__2;

			[Token(Token = "0x40015C2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private TaskAwaiter<IReadOnlyDictionary<AssetGuid, AssetBase>> <>u__1;

			[Token(Token = "0x40015C3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private TaskAwaiter<GameObject> <>u__2;

			[Token(Token = "0x6001831")]
			[Address(RVA = "0x102E420", Offset = "0x102E420", VA = "0x102E420", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001832")]
			[Address(RVA = "0x102E97C", Offset = "0x102E97C", VA = "0x102E97C", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000694")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCAE3C", Offset = "0xBCAE3C")]
		private struct <CompleteBeforeMainMenuSwitch>d__168 : IAsyncStateMachine
		{
			[Token(Token = "0x40015C4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40015C5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x40015C6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Game <>4__this;

			[Token(Token = "0x40015C7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x6001833")]
			[Address(RVA = "0x102E214", Offset = "0x102E214", VA = "0x102E214", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001834")]
			[Address(RVA = "0x102E414", Offset = "0x102E414", VA = "0x102E414", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4001555")]
		public const string MainMenuName = "MainMenu";

		[Token(Token = "0x4001556")]
		public const string TutorialName = "Tutorial";

		[Token(Token = "0x4001557")]
		public const string InitSceneName = "InitScene";

		[Token(Token = "0x4001558")]
		public const string TrailerCameraName = "TrailerCamera";

		[Token(Token = "0x4001559")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Lazy<Game> _lazyInstance;

		[Token(Token = "0x400155A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly TimeSpan KeepAliveDelay;

		[Token(Token = "0x400155B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly ReactiveSource<PlayerClassConfigurationAsset[]> _allPlayerClasses;

		[Token(Token = "0x400155C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly ReactiveSource<SpellSetupAsset[]> _allSpells;

		[Token(Token = "0x400155D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly ReactiveSource<bool> _hasGameStarted;

		[Token(Token = "0x400155E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly ReactiveSource<bool> _isPlaying;

		[Token(Token = "0x400155F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly ReactiveSource<Cortopia.Scripts.Players.Player> _localPlayer;

		[Token(Token = "0x4001560")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private readonly ReactiveSource<int> _matchMakingSeconds;

		[Token(Token = "0x4001561")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private readonly Lazy<Task> _preloadEvu;

		[Token(Token = "0x4001562")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private readonly ReactiveSource<QuitReason?> _quitToMenuReason;

		[Token(Token = "0x4001563")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private readonly ReactiveSource<int[]> _rankLevels;

		[Token(Token = "0x4001564")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private readonly TaskCompletionSource<bool> _readyToConnect;

		[Token(Token = "0x4001565")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private readonly ReactiveSource<bool> _showLocalPlayerHUD;

		[Token(Token = "0x4001566")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private readonly GameObject _xrCameraRig;

		[Token(Token = "0x4001567")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private ReactiveSubscription _isPlayingSubscription;

		[Token(Token = "0x4001568")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private CancellationTokenSource _keepAliveCancellationToken;

		[Token(Token = "0x4001569")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Camera _portalCamera;

		[Token(Token = "0x400156A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private QuitReason _queuedQuitReason;

		[Token(Token = "0x400156B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public int ForceMainMenuOpenAtIndex;

		[Token(Token = "0x400156C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD79FC", Offset = "0xBD79FC")]
		private ConnectionProblemNotification <ConnectionTracker>k__BackingField;

		[Token(Token = "0x400156D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD7A0C", Offset = "0xBD7A0C")]
		private readonly PlayersInfoCache <PlayersInfoCache>k__BackingField;

		[Token(Token = "0x400156E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD7A1C", Offset = "0xBD7A1C")]
		private readonly ReactiveSource<IInspectablePlayer> <InspectedPlayer>k__BackingField;

		[Token(Token = "0x400156F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD7A2C", Offset = "0xBD7A2C")]
		private readonly ReactiveSource<Vector3> <InspectedPlayerPosition>k__BackingField;

		[Token(Token = "0x4001570")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD7A3C", Offset = "0xBD7A3C")]
		private readonly PlayFabUser <PlayFabUser>k__BackingField;

		[Token(Token = "0x4001571")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD7A4C", Offset = "0xBD7A4C")]
		private readonly Reactive<IUser> <User>k__BackingField;

		[Token(Token = "0x4001572")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD7A5C", Offset = "0xBD7A5C")]
		private PlayerHUDMode <HUDModeForSettings>k__BackingField;

		[Token(Token = "0x4001573")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD7A6C", Offset = "0xBD7A6C")]
		private readonly PlayerInputManager <Input>k__BackingField;

		[Token(Token = "0x4001574")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD7A7C", Offset = "0xBD7A7C")]
		private readonly MusicManager <MusicManager>k__BackingField;

		[Token(Token = "0x4001575")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD7A8C", Offset = "0xBD7A8C")]
		private readonly GlobalSFXManager <GlobalSFX>k__BackingField;

		[Token(Token = "0x4001576")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD7A9C", Offset = "0xBD7A9C")]
		private readonly GlobalHapticsManager <GlobalHaptics>k__BackingField;

		[Token(Token = "0x4001577")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD7AAC", Offset = "0xBD7AAC")]
		private readonly MessageManager <MessageManager>k__BackingField;

		[Token(Token = "0x4001578")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD7ABC", Offset = "0xBD7ABC")]
		private readonly SchematicManager <SchematicManager>k__BackingField;

		[Token(Token = "0x4001579")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD7ACC", Offset = "0xBD7ACC")]
		private DebugCamera <DebugCamera>k__BackingField;

		[Token(Token = "0x400157A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD7ADC", Offset = "0xBD7ADC")]
		private readonly BuildSettings <Settings>k__BackingField;

		[Token(Token = "0x400157B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD7AEC", Offset = "0xBD7AEC")]
		private readonly VisualGameConstants <VisualGameConstants>k__BackingField;

		[Token(Token = "0x400157C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD7AFC", Offset = "0xBD7AFC")]
		private PooledEntityViewUpdater <EntityViewUpdater>k__BackingField;

		[Token(Token = "0x400157D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD7B0C", Offset = "0xBD7B0C")]
		private readonly NetworkClient <NetworkClient>k__BackingField;

		[Token(Token = "0x400157E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD7B1C", Offset = "0xBD7B1C")]
		private readonly PlayerSettings <PlayerSettings>k__BackingField;

		[Token(Token = "0x400157F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD7B2C", Offset = "0xBD7B2C")]
		private readonly GameObject <TrailerCameraRig>k__BackingField;

		[Token(Token = "0x4001580")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD7B3C", Offset = "0xBD7B3C")]
		private readonly CosmeticsHolder <CosmeticsHolder>k__BackingField;

		[Token(Token = "0x4001581")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD7B4C", Offset = "0xBD7B4C")]
		private readonly ExclusiveStudioEventController <ExclusiveStudioEventController>k__BackingField;

		[Token(Token = "0x4001582")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD7B5C", Offset = "0xBD7B5C")]
		private readonly Reactive<EntityRef> <LocalPlayerEntity>k__BackingField;

		[Token(Token = "0x4001583")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD7B6C", Offset = "0xBD7B6C")]
		private readonly Reactive<RegionLatencies> <RegionLatencies>k__BackingField;

		[Token(Token = "0x4001584")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD7B7C", Offset = "0xBD7B7C")]
		private readonly PlayerCamera <PlayerCamera>k__BackingField;

		[Token(Token = "0x4001585")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD7B8C", Offset = "0xBD7B8C")]
		private readonly Frames <Frames>k__BackingField;

		[Token(Token = "0x4001586")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD7B9C", Offset = "0xBD7B9C")]
		private readonly IPermissions <Permissions>k__BackingField;

		[Token(Token = "0x4001587")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD7BAC", Offset = "0xBD7BAC")]
		private readonly SpellFXCullingManager <SpellFXCullingManager>k__BackingField;

		[Token(Token = "0x17000448")]
		public ConnectionProblemNotification ConnectionTracker
		{
			[Token(Token = "0x60017C0")]
			[Address(RVA = "0xFA1D90", Offset = "0xFA1D90", VA = "0xFA1D90")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE20FC", Offset = "0xBE20FC")]
			get
			{
				return null;
			}
			[Token(Token = "0x60017C1")]
			[Address(RVA = "0xFA1D98", Offset = "0xFA1D98", VA = "0xFA1D98")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE210C", Offset = "0xBE210C")]
			set
			{
			}
		}

		[Token(Token = "0x17000449")]
		public PlayersInfoCache PlayersInfoCache
		{
			[Token(Token = "0x60017C2")]
			[Address(RVA = "0xFA1DA0", Offset = "0xFA1DA0", VA = "0xFA1DA0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE211C", Offset = "0xBE211C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700044A")]
		public ReactiveSource<IInspectablePlayer> InspectedPlayer
		{
			[Token(Token = "0x60017C3")]
			[Address(RVA = "0xFA1DA8", Offset = "0xFA1DA8", VA = "0xFA1DA8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE212C", Offset = "0xBE212C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700044B")]
		public ReactiveSource<Vector3> InspectedPlayerPosition
		{
			[Token(Token = "0x60017C4")]
			[Address(RVA = "0xFA1DB0", Offset = "0xFA1DB0", VA = "0xFA1DB0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE213C", Offset = "0xBE213C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700044C")]
		public PlayFabUser PlayFabUser
		{
			[Token(Token = "0x60017C5")]
			[Address(RVA = "0xFA1DB8", Offset = "0xFA1DB8", VA = "0xFA1DB8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE214C", Offset = "0xBE214C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700044D")]
		public Reactive<IUser> User
		{
			[Token(Token = "0x60017C6")]
			[Address(RVA = "0xFA1DC0", Offset = "0xFA1DC0", VA = "0xFA1DC0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE215C", Offset = "0xBE215C")]
			get
			{
				return default(Reactive<IUser>);
			}
		}

		[Token(Token = "0x1700044E")]
		public PlayerHUDMode HUDModeForSettings
		{
			[Token(Token = "0x60017C7")]
			[Address(RVA = "0xFA1DC8", Offset = "0xFA1DC8", VA = "0xFA1DC8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE216C", Offset = "0xBE216C")]
			get
			{
				return default(PlayerHUDMode);
			}
			[Token(Token = "0x60017C8")]
			[Address(RVA = "0xFA1DD0", Offset = "0xFA1DD0", VA = "0xFA1DD0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE217C", Offset = "0xBE217C")]
			private set
			{
			}
		}

		[Token(Token = "0x1700044F")]
		public PlayerInputManager Input
		{
			[Token(Token = "0x60017C9")]
			[Address(RVA = "0xFA1DD8", Offset = "0xFA1DD8", VA = "0xFA1DD8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE218C", Offset = "0xBE218C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000450")]
		public MusicManager MusicManager
		{
			[Token(Token = "0x60017CA")]
			[Address(RVA = "0xFA1DE0", Offset = "0xFA1DE0", VA = "0xFA1DE0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE219C", Offset = "0xBE219C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000451")]
		public GlobalSFXManager GlobalSFX
		{
			[Token(Token = "0x60017CB")]
			[Address(RVA = "0xFA1DE8", Offset = "0xFA1DE8", VA = "0xFA1DE8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE21AC", Offset = "0xBE21AC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000452")]
		public GlobalHapticsManager GlobalHaptics
		{
			[Token(Token = "0x60017CC")]
			[Address(RVA = "0xFA1DF0", Offset = "0xFA1DF0", VA = "0xFA1DF0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE21BC", Offset = "0xBE21BC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000453")]
		public MessageManager MessageManager
		{
			[Token(Token = "0x60017CD")]
			[Address(RVA = "0xFA1DF8", Offset = "0xFA1DF8", VA = "0xFA1DF8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE21CC", Offset = "0xBE21CC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000454")]
		public SchematicManager SchematicManager
		{
			[Token(Token = "0x60017CE")]
			[Address(RVA = "0xFA1E00", Offset = "0xFA1E00", VA = "0xFA1E00")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE21DC", Offset = "0xBE21DC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000455")]
		public DebugCamera DebugCamera
		{
			[Token(Token = "0x60017CF")]
			[Address(RVA = "0xFA1E08", Offset = "0xFA1E08", VA = "0xFA1E08")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE21EC", Offset = "0xBE21EC")]
			get
			{
				return null;
			}
			[Token(Token = "0x60017D0")]
			[Address(RVA = "0xFA1E10", Offset = "0xFA1E10", VA = "0xFA1E10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE21FC", Offset = "0xBE21FC")]
			private set
			{
			}
		}

		[Token(Token = "0x17000456")]
		public BuildSettings Settings
		{
			[Token(Token = "0x60017D1")]
			[Address(RVA = "0xFA1E18", Offset = "0xFA1E18", VA = "0xFA1E18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE220C", Offset = "0xBE220C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000457")]
		public VisualGameConstants VisualGameConstants
		{
			[Token(Token = "0x60017D2")]
			[Address(RVA = "0xFA1E20", Offset = "0xFA1E20", VA = "0xFA1E20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE221C", Offset = "0xBE221C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000458")]
		public SyncedSceneLoader SceneLoader
		{
			[Token(Token = "0x60017D3")]
			[Address(RVA = "0xF9EC10", Offset = "0xF9EC10", VA = "0xF9EC10")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000459")]
		public PooledEntityViewUpdater EntityViewUpdater
		{
			[Token(Token = "0x60017D4")]
			[Address(RVA = "0xFA1E28", Offset = "0xFA1E28", VA = "0xFA1E28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE222C", Offset = "0xBE222C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60017D5")]
			[Address(RVA = "0xFA1E30", Offset = "0xFA1E30", VA = "0xFA1E30")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE223C", Offset = "0xBE223C")]
			set
			{
			}
		}

		[Token(Token = "0x1700045A")]
		public NetworkClient NetworkClient
		{
			[Token(Token = "0x60017D6")]
			[Address(RVA = "0xFA1E38", Offset = "0xFA1E38", VA = "0xFA1E38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE224C", Offset = "0xBE224C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700045B")]
		public PlayerSettings PlayerSettings
		{
			[Token(Token = "0x60017D7")]
			[Address(RVA = "0xFA1E40", Offset = "0xFA1E40", VA = "0xFA1E40")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE225C", Offset = "0xBE225C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700045C")]
		public GameObject TrailerCameraRig
		{
			[Token(Token = "0x60017D8")]
			[Address(RVA = "0xFA1E48", Offset = "0xFA1E48", VA = "0xFA1E48")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE226C", Offset = "0xBE226C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700045D")]
		public CosmeticsHolder CosmeticsHolder
		{
			[Token(Token = "0x60017D9")]
			[Address(RVA = "0xFA1E50", Offset = "0xFA1E50", VA = "0xFA1E50")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE227C", Offset = "0xBE227C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700045E")]
		public ExclusiveStudioEventController ExclusiveStudioEventController
		{
			[Token(Token = "0x60017DA")]
			[Address(RVA = "0xFA1E58", Offset = "0xFA1E58", VA = "0xFA1E58")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE228C", Offset = "0xBE228C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700045F")]
		public Reactive<EntityRef> LocalPlayerEntity
		{
			[Token(Token = "0x60017DB")]
			[Address(RVA = "0xFA1E60", Offset = "0xFA1E60", VA = "0xFA1E60")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE229C", Offset = "0xBE229C")]
			get
			{
				return default(Reactive<EntityRef>);
			}
		}

		[Token(Token = "0x17000460")]
		public Reactive<Cortopia.Scripts.Players.Player> LocalPlayer
		{
			[Token(Token = "0x60017DC")]
			[Address(RVA = "0xF9D274", Offset = "0xF9D274", VA = "0xF9D274")]
			get
			{
				return default(Reactive<Cortopia.Scripts.Players.Player>);
			}
		}

		[Token(Token = "0x17000461")]
		public Reactive<QuitReason?> QuitToMenuReason
		{
			[Token(Token = "0x60017DD")]
			[Address(RVA = "0xFA1E68", Offset = "0xFA1E68", VA = "0xFA1E68")]
			get
			{
				return default(Reactive<QuitReason?>);
			}
		}

		[Token(Token = "0x17000462")]
		public Reactive<int[]> RankLevels
		{
			[Token(Token = "0x60017DE")]
			[Address(RVA = "0xFA1EBC", Offset = "0xFA1EBC", VA = "0xFA1EBC")]
			get
			{
				return default(Reactive<int[]>);
			}
		}

		[Token(Token = "0x17000463")]
		public Reactive<int> MatchMakingSeconds
		{
			[Token(Token = "0x60017DF")]
			[Address(RVA = "0xFA1F10", Offset = "0xFA1F10", VA = "0xFA1F10")]
			get
			{
				return default(Reactive<int>);
			}
		}

		[Token(Token = "0x17000464")]
		public Reactive<SpellSetupAsset[]> AllSpells
		{
			[Token(Token = "0x60017E0")]
			[Address(RVA = "0xFA1F64", Offset = "0xFA1F64", VA = "0xFA1F64")]
			get
			{
				return default(Reactive<SpellSetupAsset[]>);
			}
		}

		[Token(Token = "0x17000465")]
		public Reactive<PlayerClassConfigurationAsset[]> AllPlayerClasses
		{
			[Token(Token = "0x60017E1")]
			[Address(RVA = "0xFA1FB8", Offset = "0xFA1FB8", VA = "0xFA1FB8")]
			get
			{
				return default(Reactive<PlayerClassConfigurationAsset[]>);
			}
		}

		[Token(Token = "0x17000466")]
		public Reactive<bool> ShowLocalPlayerHUD
		{
			[Token(Token = "0x60017E2")]
			[Address(RVA = "0xFA200C", Offset = "0xFA200C", VA = "0xFA200C")]
			get
			{
				return default(Reactive<bool>);
			}
		}

		[Token(Token = "0x17000467")]
		public Reactive<RegionLatencies> RegionLatencies
		{
			[Token(Token = "0x60017E3")]
			[Address(RVA = "0xFA2060", Offset = "0xFA2060", VA = "0xFA2060")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE22AC", Offset = "0xBE22AC")]
			get
			{
				return default(Reactive<RegionLatencies>);
			}
		}

		[Token(Token = "0x17000468")]
		public Reactive<bool> IsPlaying
		{
			[Token(Token = "0x60017E4")]
			[Address(RVA = "0xFA2068", Offset = "0xFA2068", VA = "0xFA2068")]
			get
			{
				return default(Reactive<bool>);
			}
		}

		[Token(Token = "0x17000469")]
		public Reactive<bool> HasInternet
		{
			[Token(Token = "0x60017E5")]
			[Address(RVA = "0xFA20BC", Offset = "0xFA20BC", VA = "0xFA20BC")]
			get
			{
				return default(Reactive<bool>);
			}
		}

		[Token(Token = "0x1700046A")]
		public Reactive<bool> HasGameStarted
		{
			[Token(Token = "0x60017E6")]
			[Address(RVA = "0xFA21E4", Offset = "0xFA21E4", VA = "0xFA21E4")]
			get
			{
				return default(Reactive<bool>);
			}
		}

		[Token(Token = "0x1700046B")]
		public PlayerCamera PlayerCamera
		{
			[Token(Token = "0x60017E7")]
			[Address(RVA = "0xFA2238", Offset = "0xFA2238", VA = "0xFA2238")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE22BC", Offset = "0xBE22BC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700046C")]
		[NotNull]
		public static Game Instance
		{
			[Token(Token = "0x60017E8")]
			[Address(RVA = "0xF9D1F0", Offset = "0xF9D1F0", VA = "0xF9D1F0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700046D")]
		public static bool HasInstance
		{
			[Token(Token = "0x60017E9")]
			[Address(RVA = "0xFA2240", Offset = "0xFA2240", VA = "0xFA2240")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700046E")]
		[NotNull]
		public Frames Frames
		{
			[Token(Token = "0x60017EA")]
			[Address(RVA = "0xFA22C4", Offset = "0xFA22C4", VA = "0xFA22C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE22CC", Offset = "0xBE22CC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700046F")]
		public IPermissions Permissions
		{
			[Token(Token = "0x60017EB")]
			[Address(RVA = "0xFA22CC", Offset = "0xFA22CC", VA = "0xFA22CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE22DC", Offset = "0xBE22DC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000470")]
		public SpellFXCullingManager SpellFXCullingManager
		{
			[Token(Token = "0x60017EC")]
			[Address(RVA = "0xFA22D4", Offset = "0xFA22D4", VA = "0xFA22D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE22EC", Offset = "0xBE22EC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000471")]
		public Task PreloadedEntityViewUpdaterAsync
		{
			[Token(Token = "0x60017ED")]
			[Address(RVA = "0xFA22DC", Offset = "0xFA22DC", VA = "0xFA22DC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60017BF")]
		[Address(RVA = "0xFA02E8", Offset = "0xFA02E8", VA = "0xFA02E8")]
		private Game()
		{
		}

		[Token(Token = "0x60017EE")]
		[Address(RVA = "0xFA1D38", Offset = "0xFA1D38", VA = "0xFA1D38")]
		public void StartOnlineConnection()
		{
		}

		[Token(Token = "0x60017EF")]
		[Address(RVA = "0xFA1B34", Offset = "0xFA1B34", VA = "0xFA1B34")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xBE22FC", Offset = "0xBE22FC")]
		private Task<IUser> GetUserAsync()
		{
			return null;
		}

		[Token(Token = "0x60017F0")]
		[Address(RVA = "0xFA1A64", Offset = "0xFA1A64", VA = "0xFA1A64")]
		private void PrePlayfabPlatformSpecificInit()
		{
		}

		[Token(Token = "0x60017F1")]
		[Address(RVA = "0xFA1C74", Offset = "0xFA1C74", VA = "0xFA1C74")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xBE235C", Offset = "0xBE235C")]
		private void SetupVrFocusListeners()
		{
		}

		[Token(Token = "0x60017F2")]
		[Address(RVA = "0xFA2330", Offset = "0xFA2330", VA = "0xFA2330")]
		private void IsLoggedInChanged(bool isLoggedIn)
		{
		}

		[Token(Token = "0x60017F3")]
		[Address(RVA = "0xFA27BC", Offset = "0xFA27BC", VA = "0xFA27BC")]
		private void OnApplicationQuitting()
		{
		}

		[Token(Token = "0x60017F4")]
		[Address(RVA = "0xFA2898", Offset = "0xFA2898", VA = "0xFA2898")]
		private void OnVRFocusChanged(bool isFocused)
		{
		}

		[Token(Token = "0x60017F5")]
		[Address(RVA = "0xFA27C4", Offset = "0xFA27C4", VA = "0xFA27C4")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xBE23BC", Offset = "0xBE23BC")]
		private void SetIsOnline(bool isOnline)
		{
		}

		[Token(Token = "0x60017F6")]
		[Address(RVA = "0xFA2AD8", Offset = "0xFA2AD8", VA = "0xFA2AD8")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xBE241C", Offset = "0xBE241C")]
		private void OnRegionLatenciesChanged(RegionLatencies latencies)
		{
		}

		[Token(Token = "0x60017F7")]
		[Address(RVA = "0xFA2BA0", Offset = "0xFA2BA0", VA = "0xFA2BA0")]
		private void OnLevelLoadAfterTutorial(object sender, [AttributeAttribute(Name = "TupleElementNamesAttribute", RVA = "0xBE4AEC", Offset = "0xBE4AEC")] (Scene, QuantumGame) valueTuple)
		{
		}

		[Token(Token = "0x60017F8")]
		[Address(RVA = "0xFA2E08", Offset = "0xFA2E08", VA = "0xFA2E08")]
		private void OnLevelLoadFinished(object sender, [AttributeAttribute(Name = "TupleElementNamesAttribute", RVA = "0xBE4B70", Offset = "0xBE4B70")] (Scene, QuantumGame) valueTuple)
		{
		}

		[Token(Token = "0x60017F9")]
		[Address(RVA = "0xFA30F8", Offset = "0xFA30F8", VA = "0xFA30F8")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xBE247C", Offset = "0xBE247C")]
		public Task UpdatePlayerLoadoutIfNeeded(QuantumGame game)
		{
			return null;
		}

		[Token(Token = "0x60017FA")]
		[Address(RVA = "0xFA3218", Offset = "0xFA3218", VA = "0xFA3218")]
		private void OnLevelLoadSwitching(object sender, [AttributeAttribute(Name = "TupleElementNamesAttribute", RVA = "0xBE4BF4", Offset = "0xBE4BF4")] (Scene, QuantumGame) e)
		{
		}

		[Token(Token = "0x60017FB")]
		[Address(RVA = "0xFA3310", Offset = "0xFA3310", VA = "0xFA3310")]
		public void SetIsPlaying(bool value)
		{
		}

		[Token(Token = "0x60017FC")]
		[Address(RVA = "0xFA2570", Offset = "0xFA2570", VA = "0xFA2570")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xBE24DC", Offset = "0xBE24DC")]
		private void GetPlayFabTitleData()
		{
		}

		[Token(Token = "0x60017FD")]
		[Address(RVA = "0xFA2634", Offset = "0xFA2634", VA = "0xFA2634")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xBE253C", Offset = "0xBE253C")]
		private void GetAllSpellAssets()
		{
		}

		[Token(Token = "0x60017FE")]
		[Address(RVA = "0xFA26F8", Offset = "0xFA26F8", VA = "0xFA26F8")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xBE259C", Offset = "0xBE259C")]
		private void GetAllPlayerClassAssets()
		{
		}

		[Token(Token = "0x60017FF")]
		[Address(RVA = "0xFA3374", Offset = "0xFA3374", VA = "0xFA3374")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xBE25FC", Offset = "0xBE25FC")]
		public Task<QuantumRunner> StartQuantumAsync(string clientId, QuantumRunner.StartParameters parameters)
		{
			return null;
		}

		[Token(Token = "0x6001800")]
		[Address(RVA = "0xFA34C4", Offset = "0xFA34C4", VA = "0xFA34C4")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xBE265C", Offset = "0xBE265C")]
		private Task CreateEntityViewUpdaterAsync()
		{
			return null;
		}

		[Token(Token = "0x6001801")]
		[Address(RVA = "0xFA35C8", Offset = "0xFA35C8", VA = "0xFA35C8")]
		private void OnSceneLoaderOnLevelLoadSwitching(object sender, [AttributeAttribute(Name = "TupleElementNamesAttribute", RVA = "0xBE4C78", Offset = "0xBE4C78")] (Scene, QuantumGame) tuple)
		{
		}

		[Token(Token = "0x6001802")]
		[Address(RVA = "0xFA3688", Offset = "0xFA3688", VA = "0xFA3688")]
		private static IUserProvider GetUserProvider(BuildSettings.Platform platform)
		{
			return null;
		}

		[Token(Token = "0x6001803")]
		[Address(RVA = "0xFA37C8", Offset = "0xFA37C8", VA = "0xFA37C8")]
		private void OnPlayerLoadoutChanged(EventPlayerLoadoutChanged callback)
		{
		}

		[Token(Token = "0x6001804")]
		[Address(RVA = "0xFA38C0", Offset = "0xFA38C0", VA = "0xFA38C0")]
		private void UpdatePlayerHeight(QuantumGame quantumGame, EntityRef player)
		{
		}

		[Token(Token = "0x6001805")]
		[Address(RVA = "0xFA39B8", Offset = "0xFA39B8", VA = "0xFA39B8")]
		private void SendPlaySpaceToQuantum([AttributeAttribute(Name = "TupleElementNamesAttribute", RVA = "0xBE4CFC", Offset = "0xBE4CFC")] (Vector2, float, (PlayerRef, QuantumGame)) tuple)
		{
		}

		[Token(Token = "0x6001806")]
		[Address(RVA = "0xFA3A7C", Offset = "0xFA3A7C", VA = "0xFA3A7C")]
		public void SetLocalPlayer(Cortopia.Scripts.Players.Player player)
		{
		}

		[Token(Token = "0x6001807")]
		[Address(RVA = "0xFA3C44", Offset = "0xFA3C44", VA = "0xFA3C44")]
		public void ShowHUDForLocalPlayer(bool show, PlayerHUDMode mode = PlayerHUDMode.None)
		{
		}

		[Token(Token = "0x6001808")]
		[Address(RVA = "0xFA3CB4", Offset = "0xFA3CB4", VA = "0xFA3CB4")]
		public void ResetQuitToMenuReason()
		{
		}

		[Token(Token = "0x6001809")]
		[Address(RVA = "0xFA3D0C", Offset = "0xFA3D0C", VA = "0xFA3D0C")]
		public void QuitToMenu(QuitReason reason)
		{
		}

		[Token(Token = "0x600180A")]
		[Address(RVA = "0xFA3F10", Offset = "0xFA3F10", VA = "0xFA3F10")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xBE26BC", Offset = "0xBE26BC")]
		private Task CompleteBeforeMainMenuSwitch()
		{
			return null;
		}

		[Token(Token = "0x600180B")]
		[Address(RVA = "0xFA4014", Offset = "0xFA4014", VA = "0xFA4014")]
		private void OnQuitToMenuSwitching(object sender, [AttributeAttribute(Name = "TupleElementNamesAttribute", RVA = "0xBE4DB0", Offset = "0xBE4DB0")] (Scene, QuantumGame) valueTuple)
		{
		}

		[Token(Token = "0x600180C")]
		[Address(RVA = "0xFA41EC", Offset = "0xFA41EC", VA = "0xFA41EC")]
		public void ScaleDownResolution()
		{
		}

		[Token(Token = "0x600180D")]
		[Address(RVA = "0xFA433C", Offset = "0xFA433C", VA = "0xFA433C")]
		public void ScaleUpResolution()
		{
		}

		[Token(Token = "0x600180F")]
		[Address(RVA = "0xFA460C", Offset = "0xFA460C", VA = "0xFA460C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE271C", Offset = "0xBE271C")]
		private void <.ctor>b__23_0(IUser user)
		{
		}

		[Token(Token = "0x6001810")]
		[Address(RVA = "0xFA476C", Offset = "0xFA476C", VA = "0xFA476C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE272C", Offset = "0xBE272C")]
		private Reactive<RegionLatencies> <.ctor>b__23_2(bool x)
		{
			return default(Reactive<RegionLatencies>);
		}

		[Token(Token = "0x6001811")]
		[Address(RVA = "0xFA4874", Offset = "0xFA4874", VA = "0xFA4874")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE273C", Offset = "0xBE273C")]
		private void <.ctor>b__23_6((QuantumGame, Cortopia.Scripts.Players.Player) valueTuple)
		{
		}

		[Token(Token = "0x6001812")]
		[Address(RVA = "0xFA4924", Offset = "0xFA4924", VA = "0xFA4924")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE274C", Offset = "0xBE274C")]
		private void <IsLoggedInChanged>b__144_0(bool _)
		{
		}
	}
	[Token(Token = "0x2000695")]
	public interface IPermissions
	{
		[Token(Token = "0x17000472")]
		bool AllowedToUseMic
		{
			[Token(Token = "0x6001835")]
			get;
		}

		[Token(Token = "0x6001836")]
		bool TryGetPermissionToUseMic();
	}
	[Token(Token = "0x2000696")]
	public class InitGame : MonoBehaviour
	{
		[Token(Token = "0x6001837")]
		[Address(RVA = "0xF805F4", Offset = "0xF805F4", VA = "0xF805F4")]
		private void Start()
		{
		}

		[Token(Token = "0x6001838")]
		[Address(RVA = "0xF80678", Offset = "0xF80678", VA = "0xF80678")]
		public InitGame()
		{
		}
	}
	[Token(Token = "0x2000697")]
	[AttributeAttribute(Name = "DefaultExecutionOrder", RVA = "0xBCAE4C", Offset = "0xBCAE4C")]
	public class LegalCheck : MonoBehaviour
	{
		[Token(Token = "0x40015C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject[] activateAfterLegal;

		[Token(Token = "0x40015C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject[] chinaLegalCheckObjects;

		[Token(Token = "0x6001839")]
		[Address(RVA = "0xF84970", Offset = "0xF84970", VA = "0xF84970")]
		private void Awake()
		{
		}

		[Token(Token = "0x600183A")]
		[Address(RVA = "0xF84974", Offset = "0xF84974", VA = "0xF84974")]
		public void AcceptLegal()
		{
		}

		[Token(Token = "0x600183B")]
		[Address(RVA = "0xF84A8C", Offset = "0xF84A8C", VA = "0xF84A8C")]
		public void AcceptPipl()
		{
		}

		[Token(Token = "0x600183C")]
		[Address(RVA = "0xF84AFC", Offset = "0xF84AFC", VA = "0xF84AFC")]
		public void DeclineLegal()
		{
		}

		[Token(Token = "0x600183D")]
		[Address(RVA = "0xF84B04", Offset = "0xF84B04", VA = "0xF84B04")]
		public LegalCheck()
		{
		}
	}
	[Token(Token = "0x2000698")]
	public class ManualEntityDisposer : MonoBehaviour
	{
		[Token(Token = "0x40015CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private EntityView entityView;

		[Token(Token = "0x600183E")]
		[Address(RVA = "0xF8D1B8", Offset = "0xF8D1B8", VA = "0xF8D1B8")]
		public void ReturnToPool()
		{
		}

		[Token(Token = "0x600183F")]
		[Address(RVA = "0xF8D234", Offset = "0xF8D234", VA = "0xF8D234")]
		public ManualEntityDisposer()
		{
		}
	}
	[Token(Token = "0x2000699")]
	public class MessageManager
	{
		[Token(Token = "0x40015CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly Queue<MessageData> _messageQueue;

		[Token(Token = "0x6001840")]
		[Address(RVA = "0x1017090", Offset = "0x1017090", VA = "0x1017090")]
		public void QueueMessage(MessageData data, bool clearPreviousMessages = false)
		{
		}

		[Token(Token = "0x6001841")]
		[Address(RVA = "0x101714C", Offset = "0x101714C", VA = "0x101714C")]
		public bool GetNextMessage(out MessageData data)
		{
			return default(bool);
		}

		[Token(Token = "0x6001842")]
		[Address(RVA = "0x101720C", Offset = "0x101720C", VA = "0x101720C")]
		public MessageManager()
		{
		}
	}
	[Token(Token = "0x200069A")]
	public class PlayerCamera : MonoBehaviour
	{
		[Token(Token = "0x40015CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Camera mainCamera;

		[Token(Token = "0x40015CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private VRFader fader;

		[Token(Token = "0x17000473")]
		public Camera MainCamera
		{
			[Token(Token = "0x6001843")]
			[Address(RVA = "0xFE150C", Offset = "0xFE150C", VA = "0xFE150C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000474")]
		public VRFader Fader
		{
			[Token(Token = "0x6001844")]
			[Address(RVA = "0xFE1514", Offset = "0xFE1514", VA = "0xFE1514")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001845")]
		[Address(RVA = "0xFE151C", Offset = "0xFE151C", VA = "0xFE151C")]
		public void Initialize(SyncedSceneLoader sceneLoader)
		{
		}

		[Token(Token = "0x6001846")]
		[Address(RVA = "0xFE1538", Offset = "0xFE1538", VA = "0xFE1538")]
		public PlayerCamera()
		{
		}
	}
	[Token(Token = "0x200069B")]
	public class PlayerSettings
	{
		[Token(Token = "0x40015CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly ReactiveSource<float> _effectsVolume;

		[Token(Token = "0x40015CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly ReactiveSource<float> _musicVolume;

		[Token(Token = "0x40015D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly ReactiveSource<float> _normalizedHUDDistance;

		[Token(Token = "0x40015D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly ReactiveSource<float> _normalizedHUDHeight;

		[Token(Token = "0x40015D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly ReactiveSource<float> _normalizedHUDScale;

		[Token(Token = "0x40015D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private readonly ReactiveSource<SnapTurningSetting> _snapTurning;

		[Token(Token = "0x40015D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private readonly ReactiveSource<float> _snapTurningAngle;

		[Token(Token = "0x40015D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private readonly ReactiveSource<float> _voiceChatVolume;

		[Token(Token = "0x40015D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD7C0C", Offset = "0xBD7C0C")]
		private readonly ReactiveSource<bool> <ShowSubtitles>k__BackingField;

		[Token(Token = "0x40015D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD7C1C", Offset = "0xBD7C1C")]
		private readonly ReactiveSource<bool> <ShowControlsInGame>k__BackingField;

		[Token(Token = "0x17000475")]
		public Reactive<float> NormalizedHUDScale
		{
			[Token(Token = "0x6001847")]
			[Address(RVA = "0x1112548", Offset = "0x1112548", VA = "0x1112548")]
			get
			{
				return default(Reactive<float>);
			}
		}

		[Token(Token = "0x17000476")]
		public Reactive<float> NormalizedHUDDistance
		{
			[Token(Token = "0x6001848")]
			[Address(RVA = "0x111259C", Offset = "0x111259C", VA = "0x111259C")]
			get
			{
				return default(Reactive<float>);
			}
		}

		[Token(Token = "0x17000477")]
		public Reactive<float> NormalizedHUDHeight
		{
			[Token(Token = "0x6001849")]
			[Address(RVA = "0x11125F0", Offset = "0x11125F0", VA = "0x11125F0")]
			get
			{
				return default(Reactive<float>);
			}
		}

		[Token(Token = "0x17000478")]
		public Reactive<float> MusicVolume
		{
			[Token(Token = "0x600184A")]
			[Address(RVA = "0x1112644", Offset = "0x1112644", VA = "0x1112644")]
			get
			{
				return default(Reactive<float>);
			}
		}

		[Token(Token = "0x17000479")]
		public Reactive<float> EffectsVolume
		{
			[Token(Token = "0x600184B")]
			[Address(RVA = "0x1112698", Offset = "0x1112698", VA = "0x1112698")]
			get
			{
				return default(Reactive<float>);
			}
		}

		[Token(Token = "0x1700047A")]
		public Reactive<float> VoiceChatVolume
		{
			[Token(Token = "0x600184C")]
			[Address(RVA = "0x11126EC", Offset = "0x11126EC", VA = "0x11126EC")]
			get
			{
				return default(Reactive<float>);
			}
		}

		[Token(Token = "0x1700047B")]
		public Reactive<SnapTurningSetting> SnapTurning
		{
			[Token(Token = "0x600184D")]
			[Address(RVA = "0x1112740", Offset = "0x1112740", VA = "0x1112740")]
			get
			{
				return default(Reactive<SnapTurningSetting>);
			}
		}

		[Token(Token = "0x1700047C")]
		public Reactive<float> SnapTurningAngle
		{
			[Token(Token = "0x600184E")]
			[Address(RVA = "0x1112794", Offset = "0x1112794", VA = "0x1112794")]
			get
			{
				return default(Reactive<float>);
			}
		}

		[Token(Token = "0x1700047D")]
		public ReactiveSource<bool> ShowSubtitles
		{
			[Token(Token = "0x600184F")]
			[Address(RVA = "0x11127E8", Offset = "0x11127E8", VA = "0x11127E8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE280C", Offset = "0xBE280C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700047E")]
		public ReactiveSource<bool> ShowControlsInGame
		{
			[Token(Token = "0x6001850")]
			[Address(RVA = "0x11127F0", Offset = "0x11127F0", VA = "0x11127F0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE281C", Offset = "0xBE281C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001851")]
		[Address(RVA = "0x11127F8", Offset = "0x11127F8", VA = "0x11127F8")]
		public void LoadPlayerPreferences()
		{
		}

		[Token(Token = "0x6001852")]
		[Address(RVA = "0x1112C20", Offset = "0x1112C20", VA = "0x1112C20")]
		public void SetSnapTurning(SnapTurningSetting value)
		{
		}

		[Token(Token = "0x6001853")]
		[Address(RVA = "0x1112CB0", Offset = "0x1112CB0", VA = "0x1112CB0")]
		public void SetSnapTurningAngle(float value)
		{
		}

		[Token(Token = "0x6001854")]
		[Address(RVA = "0x1112D40", Offset = "0x1112D40", VA = "0x1112D40")]
		public void SetHUDDistance(float normalizedValue)
		{
		}

		[Token(Token = "0x6001855")]
		[Address(RVA = "0x1112DD0", Offset = "0x1112DD0", VA = "0x1112DD0")]
		public void SetHUDHeight(float normalizedValue)
		{
		}

		[Token(Token = "0x6001856")]
		[Address(RVA = "0x1112E60", Offset = "0x1112E60", VA = "0x1112E60")]
		public void SetHUDScale(float normalizedValue)
		{
		}

		[Token(Token = "0x6001857")]
		[Address(RVA = "0x1112EF0", Offset = "0x1112EF0", VA = "0x1112EF0")]
		public void SetMusicVolume(float value)
		{
		}

		[Token(Token = "0x6001858")]
		[Address(RVA = "0x1112F80", Offset = "0x1112F80", VA = "0x1112F80")]
		public void SetEffectsVolume(float value)
		{
		}

		[Token(Token = "0x6001859")]
		[Address(RVA = "0x1113010", Offset = "0x1113010", VA = "0x1113010")]
		public void SetVoiceChatVolume(float value)
		{
		}

		[Token(Token = "0x600185A")]
		[Address(RVA = "0x11130A0", Offset = "0x11130A0", VA = "0x11130A0")]
		public void SaveShowSubtitles()
		{
		}

		[Token(Token = "0x600185B")]
		[Address(RVA = "0x1112B5C", Offset = "0x1112B5C", VA = "0x1112B5C")]
		public void SaveShowControlsInGame()
		{
		}

		[Token(Token = "0x600185C")]
		[Address(RVA = "0x1113164", Offset = "0x1113164", VA = "0x1113164")]
		public PlayerSettings()
		{
		}
	}
	[Token(Token = "0x200069C")]
	public class PooledEntityViewUpdater : EntityViewUpdater
	{
		[Serializable]
		[Token(Token = "0x200069D")]
		private struct PreCreatedAsset
		{
			[Token(Token = "0x40015DC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int preCreateCount;

			[Token(Token = "0x40015DD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public EntityViewAsset asset;
		}

		[Serializable]
		[Token(Token = "0x200069E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCAE60", Offset = "0xBCAE60")]
		private sealed class <>c
		{
			[Token(Token = "0x40015DE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40015DF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<EntityViewAsset, AssetGuid> <>9__5_0;

			[Token(Token = "0x6001866")]
			[Address(RVA = "0x1053F58", Offset = "0x1053F58", VA = "0x1053F58")]
			public <>c()
			{
			}

			[Token(Token = "0x6001867")]
			[Address(RVA = "0x1053F60", Offset = "0x1053F60", VA = "0x1053F60")]
			internal AssetGuid <Init>b__5_0(EntityViewAsset x)
			{
				return default(AssetGuid);
			}
		}

		[Token(Token = "0x40015D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private List<PreCreatedAsset> preCreatedAssets;

		[Token(Token = "0x40015D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private List<EntityViewAsset> neverPool;

		[Token(Token = "0x40015DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private HashSet<AssetGuid> _neverPoolGuids;

		[Token(Token = "0x40015DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Dictionary<AssetGuid, Stack<EntityView>> _pools;

		[Token(Token = "0x600185D")]
		[Address(RVA = "0x1117760", Offset = "0x1117760", VA = "0x1117760")]
		private void Start()
		{
		}

		[Token(Token = "0x600185E")]
		[Address(RVA = "0x1117764", Offset = "0x1117764", VA = "0x1117764")]
		private void Init()
		{
		}

		[Token(Token = "0x600185F")]
		[Address(RVA = "0x1117920", Offset = "0x1117920", VA = "0x1117920")]
		public void PreCreate()
		{
		}

		[Token(Token = "0x6001860")]
		[Address(RVA = "0x1117E34", Offset = "0x1117E34", VA = "0x1117E34")]
		public void ReturnToPool(EntityView instance)
		{
		}

		[Token(Token = "0x6001861")]
		[Address(RVA = "0x1117E5C", Offset = "0x1117E5C", VA = "0x1117E5C", Slot = "5")]
		protected override EntityView CreateEntityViewInstance(EntityViewAsset asset, [System.Runtime.InteropServices.Optional] Vector3? position, [System.Runtime.InteropServices.Optional] Quaternion? rotation)
		{
			return null;
		}

		[Token(Token = "0x6001862")]
		[Address(RVA = "0x111808C", Offset = "0x111808C", VA = "0x111808C", Slot = "6")]
		protected override void DestroyEntityViewInstance(EntityView instance)
		{
		}

		[Token(Token = "0x6001863")]
		[Address(RVA = "0x11182AC", Offset = "0x11182AC", VA = "0x11182AC")]
		public void DisconnectCurrentGame()
		{
		}

		[Token(Token = "0x6001864")]
		[Address(RVA = "0x1118458", Offset = "0x1118458", VA = "0x1118458")]
		public PooledEntityViewUpdater()
		{
		}
	}
	[Token(Token = "0x200069F")]
	public static class QuantumAssets
	{
		[Token(Token = "0x20006A0")]
		private class PreloadedLoader : IResourceLoader
		{
			[Token(Token = "0x40015E3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private readonly IReadOnlyDictionary<AssetGuid, AssetBase> _dictionary;

			[Token(Token = "0x1400000E")]
			public event ResourceLoaded LoadCompleted
			{
				[Token(Token = "0x6001878")]
				[Address(RVA = "0x1055DF8", Offset = "0x1055DF8", VA = "0x1055DF8", Slot = "4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE2A2C", Offset = "0xBE2A2C")]
				add
				{
				}
				[Token(Token = "0x6001879")]
				[Address(RVA = "0x1055E98", Offset = "0x1055E98", VA = "0x1055E98", Slot = "5")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE2A3C", Offset = "0xBE2A3C")]
				remove
				{
				}
			}

			[Token(Token = "0x1400000F")]
			public event ResourceLoadFailed LoadFailed
			{
				[Token(Token = "0x600187A")]
				[Address(RVA = "0x1055F38", Offset = "0x1055F38", VA = "0x1055F38", Slot = "6")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE2A4C", Offset = "0xBE2A4C")]
				add
				{
				}
				[Token(Token = "0x600187B")]
				[Address(RVA = "0x1055FD8", Offset = "0x1055FD8", VA = "0x1055FD8", Slot = "7")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE2A5C", Offset = "0xBE2A5C")]
				remove
				{
				}
			}

			[Token(Token = "0x6001874")]
			[Address(RVA = "0x1055BE0", Offset = "0x1055BE0", VA = "0x1055BE0")]
			public PreloadedLoader(IReadOnlyDictionary<AssetGuid, AssetBase> dictionary)
			{
			}

			[Token(Token = "0x6001875")]
			[Address(RVA = "0x1055C0C", Offset = "0x1055C0C", VA = "0x1055C0C", Slot = "8")]
			public void LoadResourceAsync(AssetResource resource)
			{
			}

			[Token(Token = "0x6001876")]
			[Address(RVA = "0x1055C10", Offset = "0x1055C10", VA = "0x1055C10", Slot = "9")]
			public void LoadResource(AssetResource resource)
			{
			}

			[Token(Token = "0x6001877")]
			[Address(RVA = "0x1055DF4", Offset = "0x1055DF4", VA = "0x1055DF4", Slot = "10")]
			public void DisposeResource(AssetResource resource)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20006A1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCAE70", Offset = "0xBCAE70")]
		private struct <StartPreloadAsync>d__9 : IAsyncStateMachine
		{
			[Token(Token = "0x40015E6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40015E7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder<IReadOnlyDictionary<AssetGuid, AssetBase>> <>t__builder;

			[Token(Token = "0x40015E8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Task waitFor;

			[Token(Token = "0x40015E9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public IConnectionProblemNotification connectionTracker;

			[Token(Token = "0x40015EA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x40015EB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private TaskAwaiter<IReadOnlyDictionary<AssetGuid, AssetBase>> <>u__2;

			[Token(Token = "0x600187C")]
			[Address(RVA = "0x1055888", Offset = "0x1055888", VA = "0x1055888", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x600187D")]
			[Address(RVA = "0x1055B84", Offset = "0x1055B84", VA = "0x1055B84", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20006A2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCAE80", Offset = "0xBCAE80")]
		private sealed class <>c
		{
			[Token(Token = "0x40015EC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40015ED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<List<AssetBase>, IEnumerable<AssetBase>> <>9__10_0;

			[Token(Token = "0x40015EE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<AssetBase, AssetGuid> <>9__10_1;

			[Token(Token = "0x40015EF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Func<AssetBase, AssetBase> <>9__10_2;

			[Token(Token = "0x600187F")]
			[Address(RVA = "0x1054C0C", Offset = "0x1054C0C", VA = "0x1054C0C")]
			public <>c()
			{
			}

			[Token(Token = "0x6001880")]
			[Address(RVA = "0x1054C14", Offset = "0x1054C14", VA = "0x1054C14")]
			internal IEnumerable<AssetBase> <LoadAsync>b__10_0(List<AssetBase> x)
			{
				return null;
			}

			[Token(Token = "0x6001881")]
			[Address(RVA = "0x1054C1C", Offset = "0x1054C1C", VA = "0x1054C1C")]
			internal AssetGuid <LoadAsync>b__10_1(AssetBase x)
			{
				return default(AssetGuid);
			}

			[Token(Token = "0x6001882")]
			[Address(RVA = "0x1054C4C", Offset = "0x1054C4C", VA = "0x1054C4C")]
			internal AssetBase <LoadAsync>b__10_2(AssetBase x)
			{
				return null;
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20006A3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCAE90", Offset = "0xBCAE90")]
		private struct <LoadAsync>d__10 : IAsyncStateMachine
		{
			[Token(Token = "0x40015F0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40015F1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder<IReadOnlyDictionary<AssetGuid, AssetBase>> <>t__builder;

			[Token(Token = "0x40015F2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private Task<BuildVersion> <buildVersionTask>5__2;

			[Token(Token = "0x40015F3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Dictionary<AssetGuid, AssetBase> <assetBases>5__3;

			[Token(Token = "0x40015F4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private TaskAwaiter<List<AssetBase>[]> <>u__1;

			[Token(Token = "0x40015F5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private TaskAwaiter<BuildVersion> <>u__2;

			[Token(Token = "0x6001883")]
			[Address(RVA = "0x1054D20", Offset = "0x1054D20", VA = "0x1054D20", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001884")]
			[Address(RVA = "0x10554A0", Offset = "0x10554A0", VA = "0x10554A0", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x20006A4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCAEA0", Offset = "0xBCAEA0")]
		private sealed class <>c__DisplayClass11_0
		{
			[Token(Token = "0x40015F6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public IReadOnlyDictionary<AssetGuid, AssetBase> assetBases;

			[Token(Token = "0x6001885")]
			[Address(RVA = "0x1054C54", Offset = "0x1054C54", VA = "0x1054C54")]
			public <>c__DisplayClass11_0()
			{
			}

			[Token(Token = "0x6001886")]
			[Address(RVA = "0x1054C5C", Offset = "0x1054C5C", VA = "0x1054C5C")]
			internal bool <PreInitResourceManager>b__0(AssetResource x)
			{
				return default(bool);
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20006A5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCAEB0", Offset = "0xBCAEB0")]
		private struct <LoadLane>d__12 : IAsyncStateMachine
		{
			[Token(Token = "0x40015F7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40015F8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder<List<AssetBase>> <>t__builder;

			[Token(Token = "0x40015F9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int laneIndex;

			[Token(Token = "0x40015FA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public QTuple<AssetRef, string>[] assets;

			[Token(Token = "0x40015FB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private List<AssetBase> <loadedData>5__2;

			[Token(Token = "0x40015FC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private int <i>5__3;

			[Token(Token = "0x40015FD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private List<AssetBase> <>7__wrap3;

			[Token(Token = "0x40015FE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private TaskAwaiter<AssetBase> <>u__1;

			[Token(Token = "0x6001887")]
			[Address(RVA = "0x10554FC", Offset = "0x10554FC", VA = "0x10554FC", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001888")]
			[Address(RVA = "0x105582C", Offset = "0x105582C", VA = "0x105582C", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20006A6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCAEC0", Offset = "0xBCAEC0")]
		private struct <FindAssetAsync>d__13<T> : IAsyncStateMachine where T : AssetBase
		{
			[Token(Token = "0x40015FF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001600")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public AsyncTaskMethodBuilder<T> <>t__builder;

			[Token(Token = "0x4001601")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public AssetGuid guid;

			[Token(Token = "0x4001602")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private TaskAwaiter<IReadOnlyDictionary<AssetGuid, AssetBase>> <>u__1;

			[Token(Token = "0x6001889")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x600188A")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20006A7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCAED0", Offset = "0xBCAED0")]
		private sealed class <>c__16<T> where T : AssetBase
		{
			[Token(Token = "0x4001603")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c__16<T> <>9;

			[Token(Token = "0x4001604")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static Func<KeyValuePair<AssetGuid, AssetBase>, AssetBase> <>9__16_0;

			[Token(Token = "0x600188C")]
			public <>c__16()
			{
			}

			[Token(Token = "0x600188D")]
			internal AssetBase <FindAllAssetsAsync>b__16_0(KeyValuePair<AssetGuid, AssetBase> x)
			{
				return null;
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20006A8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCAEE0", Offset = "0xBCAEE0")]
		private struct <FindAllAssetsAsync>d__16<T> : IAsyncStateMachine where T : AssetBase
		{
			[Token(Token = "0x4001605")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001606")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public AsyncTaskMethodBuilder<T[]> <>t__builder;

			[Token(Token = "0x4001607")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private TaskAwaiter<IReadOnlyDictionary<AssetGuid, AssetBase>> <>u__1;

			[Token(Token = "0x600188E")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x600188F")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x40015E0")]
		private const int PreloadLaneCount = 100;

		[Token(Token = "0x40015E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static string _buildVersion;

		[Token(Token = "0x40015E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD7C4C", Offset = "0xBD7C4C")]
		private static Task<IReadOnlyDictionary<AssetGuid, AssetBase>> <Preload>k__BackingField;

		[Token(Token = "0x1700047F")]
		public static Task<IReadOnlyDictionary<AssetGuid, AssetBase>> Preload
		{
			[Token(Token = "0x6001868")]
			[Address(RVA = "0x111E1C4", Offset = "0x111E1C4", VA = "0x111E1C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE282C", Offset = "0xBE282C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001869")]
			[Address(RVA = "0x111E210", Offset = "0x111E210", VA = "0x111E210")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE283C", Offset = "0xBE283C")]
			private set
			{
			}
		}

		[Token(Token = "0x17000480")]
		public static string CombinedAppVersion
		{
			[Token(Token = "0x600186A")]
			[Address(RVA = "0x111E260", Offset = "0x111E260", VA = "0x111E260")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600186B")]
		[Address(RVA = "0x111E368", Offset = "0x111E368", VA = "0x111E368")]
		public static void StartPreload(IConnectionProblemNotification connectionTracker, Task waitFor)
		{
		}

		[Token(Token = "0x600186C")]
		[Address(RVA = "0x111E3BC", Offset = "0x111E3BC", VA = "0x111E3BC")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xBE284C", Offset = "0xBE284C")]
		private static Task<IReadOnlyDictionary<AssetGuid, AssetBase>> StartPreloadAsync(IConnectionProblemNotification connectionTracker, Task waitFor)
		{
			return null;
		}

		[Token(Token = "0x600186D")]
		[Address(RVA = "0x111E4E8", Offset = "0x111E4E8", VA = "0x111E4E8")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xBE28AC", Offset = "0xBE28AC")]
		private static Task<IReadOnlyDictionary<AssetGuid, AssetBase>> LoadAsync()
		{
			return null;
		}

		[Token(Token = "0x600186E")]
		[Address(RVA = "0x111E600", Offset = "0x111E600", VA = "0x111E600")]
		public static void PreInitResourceManager()
		{
		}

		[Token(Token = "0x600186F")]
		[Address(RVA = "0x111EB10", Offset = "0x111EB10", VA = "0x111EB10")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xBE290C", Offset = "0xBE290C")]
		private static Task<List<AssetBase>> LoadLane(int laneIndex, QTuple<AssetRef, string>[] assets)
		{
			return null;
		}

		[Token(Token = "0x6001870")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xBE296C", Offset = "0xBE296C")]
		public static Task<T> FindAssetAsync<T>(AssetGuid guid) where T : AssetBase
		{
			return null;
		}

		[Token(Token = "0x6001871")]
		public static T FindAsset<T>(AssetGuid guid) where T : AssetBase
		{
			return null;
		}

		[Token(Token = "0x6001872")]
		private static T FindAssetWhenPreloaded<T>(IReadOnlyDictionary<AssetGuid, AssetBase> assetBases, AssetGuid guid) where T : AssetBase
		{
			return null;
		}

		[Token(Token = "0x6001873")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xBE29CC", Offset = "0xBE29CC")]
		public static Task<T[]> FindAllAssetsAsync<T>() where T : AssetBase
		{
			return null;
		}
	}
	[Token(Token = "0x20006A9")]
	public enum QuitReason
	{
		[Token(Token = "0x4001609")]
		UserQuit,
		[Token(Token = "0x400160A")]
		Disconnected,
		[Token(Token = "0x400160B")]
		PartyChange,
		[Token(Token = "0x400160C")]
		Kicked
	}
	[Token(Token = "0x20006AA")]
	public enum SnapTurningSetting
	{
		[Token(Token = "0x400160E")]
		Off,
		[Token(Token = "0x400160F")]
		OnOneFrame,
		[Token(Token = "0x4001610")]
		OnSmooth
	}
}
namespace Cortopia.Scripts.Gameplay
{
	[Token(Token = "0x20006AB")]
	public class LoadoutBoxController : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20006AC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCAEF0", Offset = "0xBCAEF0")]
		private sealed class <>c
		{
			[Token(Token = "0x4001618")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001619")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Cortopia.Scripts.Players.Player, Reactive<QuantumGame>> <>9__9_0;

			[Token(Token = "0x400161A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<SpellSetupAsset, AssetRefSpellSetup> <>9__14_0;

			[Token(Token = "0x400161B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Func<SpellSetupAsset, AssetRefSpellSetup> <>9__14_2;

			[Token(Token = "0x600189C")]
			[Address(RVA = "0x1035204", Offset = "0x1035204", VA = "0x1035204")]
			public <>c()
			{
			}

			[Token(Token = "0x600189D")]
			[Address(RVA = "0x103520C", Offset = "0x103520C", VA = "0x103520C")]
			internal Reactive<QuantumGame> <OnEnable>b__9_0(Cortopia.Scripts.Players.Player x)
			{
				return default(Reactive<QuantumGame>);
			}

			[Token(Token = "0x600189E")]
			[Address(RVA = "0x10352B0", Offset = "0x10352B0", VA = "0x10352B0")]
			internal AssetRefSpellSetup <OpenPageQuantumCommand>b__14_0(SpellSetupAsset x)
			{
				return default(AssetRefSpellSetup);
			}

			[Token(Token = "0x600189F")]
			[Address(RVA = "0x10352CC", Offset = "0x10352CC", VA = "0x10352CC")]
			internal AssetRefSpellSetup <OpenPageQuantumCommand>b__14_2(SpellSetupAsset x)
			{
				return default(AssetRefSpellSetup);
			}
		}

		[Token(Token = "0x20006AD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCAF00", Offset = "0xBCAF00")]
		private sealed class <>c__DisplayClass14_0
		{
			[Token(Token = "0x400161C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public PlayerClassConfiguration playerClass;

			[Token(Token = "0x60018A0")]
			[Address(RVA = "0x10352E8", Offset = "0x10352E8", VA = "0x10352E8")]
			public <>c__DisplayClass14_0()
			{
			}

			[Token(Token = "0x60018A1")]
			[Address(RVA = "0x10352F0", Offset = "0x10352F0", VA = "0x10352F0")]
			internal bool <OpenPageQuantumCommand>b__1(SpellSetupAsset x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4001611")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly int AnimIsActive;

		[Token(Token = "0x4001612")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private BoundValue<EntitledPlayerClass> selectedClass;

		[Token(Token = "0x4001613")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Animator animator;

		[Token(Token = "0x4001614")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private StudioEventEmitter openSFX;

		[Token(Token = "0x4001615")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private StudioEventEmitter closeSFX;

		[Token(Token = "0x4001616")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private readonly ReactiveSource<bool> _boxIsOpen;

		[Token(Token = "0x4001617")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private ReactiveSubscription _subscription;

		[Token(Token = "0x17000481")]
		public Reactive<bool> BoxIsOpen
		{
			[Token(Token = "0x6001890")]
			[Address(RVA = "0xF86A98", Offset = "0xF86A98", VA = "0xF86A98")]
			get
			{
				return default(Reactive<bool>);
			}
		}

		[Token(Token = "0x6001891")]
		[Address(RVA = "0xF86AEC", Offset = "0xF86AEC", VA = "0xF86AEC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001892")]
		[Address(RVA = "0xF86E44", Offset = "0xF86E44", VA = "0xF86E44")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001893")]
		[Address(RVA = "0xF86E50", Offset = "0xF86E50", VA = "0xF86E50")]
		public void BoxedOpened()
		{
		}

		[Token(Token = "0x6001894")]
		[Address(RVA = "0xF86EA8", Offset = "0xF86EA8", VA = "0xF86EA8")]
		private void OnSelectedClassChanged((EntitledPlayerClass, QuantumGame, bool) valueTuple)
		{
		}

		[Token(Token = "0x6001895")]
		[Address(RVA = "0xF86F44", Offset = "0xF86F44", VA = "0xF86F44")]
		private void PlayBoxSFX(bool classIsNull, bool boxIsOpen)
		{
		}

		[Token(Token = "0x6001896")]
		[Address(RVA = "0xF87020", Offset = "0xF87020", VA = "0xF87020")]
		private void OpenPageQuantumCommand(EntitledPlayerClass newSelectedClass, QuantumGame game)
		{
		}

		[Token(Token = "0x6001897")]
		[Address(RVA = "0xF86F80", Offset = "0xF86F80", VA = "0xF86F80")]
		private void ClosePageQuantumCommand(QuantumGame game)
		{
		}

		[Token(Token = "0x6001898")]
		[Address(RVA = "0xF8752C", Offset = "0xF8752C", VA = "0xF8752C")]
		public LoadoutBoxController()
		{
		}

		[Token(Token = "0x600189A")]
		[Address(RVA = "0xF87628", Offset = "0xF87628", VA = "0xF87628")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE2ABC", Offset = "0xBE2ABC")]
		private void <OnEnable>b__9_1(EntitledPlayerClass x)
		{
		}
	}
	[Token(Token = "0x20006AE")]
	public class LoadoutSlotVial : MonoBehaviour
	{
		[Token(Token = "0x400161D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly int AnimChangeMaterial;

		[Token(Token = "0x400161E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBD7CBC", Offset = "0xBD7CBC")]
		private EntityView relicEntityView;

		[Token(Token = "0x400161F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Renderer vialRenderer;

		[Token(Token = "0x4001620")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject root;

		[Token(Token = "0x4001621")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Animator animator;

		[Token(Token = "0x4001622")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBD7D38", Offset = "0xBD7D38")]
		[SerializeField]
		private BoundValue<bool> isVisible;

		[Token(Token = "0x4001623")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBD7D84", Offset = "0xBD7D84")]
		private Material arcaneVial;

		[Token(Token = "0x4001624")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Material fireVial;

		[Token(Token = "0x4001625")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Material iceVial;

		[Token(Token = "0x4001626")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Material lightningVial;

		[Token(Token = "0x4001627")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Material natureVial;

		[Token(Token = "0x4001628")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private Material defaultVial;

		[Token(Token = "0x4001629")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBD7E20", Offset = "0xBD7E20")]
		private SpellFXControl arcaneEffect;

		[Token(Token = "0x400162A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private SpellFXControl electricEffect;

		[Token(Token = "0x400162B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private SpellFXControl fireEffect;

		[Token(Token = "0x400162C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private SpellFXControl iceEffect;

		[Token(Token = "0x400162D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private SpellFXControl natureEffect;

		[Token(Token = "0x400162E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private SpellElement _cachedElement;

		[Token(Token = "0x400162F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private AssetRefSpellSetup _currentSpell;

		[Token(Token = "0x4001630")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private SpellElement _displayedElement;

		[Token(Token = "0x60018A2")]
		[Address(RVA = "0xF87F68", Offset = "0xF87F68", VA = "0xF87F68")]
		private void Start()
		{
		}

		[Token(Token = "0x60018A3")]
		[Address(RVA = "0xF88034", Offset = "0xF88034", VA = "0xF88034")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60018A4")]
		[Address(RVA = "0xF883F4", Offset = "0xF883F4", VA = "0xF883F4")]
		private void Update()
		{
		}

		[Token(Token = "0x60018A5")]
		[Address(RVA = "0xF8806C", Offset = "0xF8806C", VA = "0xF8806C")]
		private bool HasCurrentElement()
		{
			return default(bool);
		}

		[Token(Token = "0x60018A6")]
		[Address(RVA = "0xF88280", Offset = "0xF88280", VA = "0xF88280")]
		private void SetVialMaterial()
		{
		}

		[Token(Token = "0x60018A7")]
		[Address(RVA = "0xF8850C", Offset = "0xF8850C", VA = "0xF8850C")]
		private void SetVFX(SpellElement element)
		{
		}

		[Token(Token = "0x60018A8")]
		[Address(RVA = "0xF8857C", Offset = "0xF8857C", VA = "0xF8857C")]
		private void ToggleSpellFXElement(SpellFXControl fxControl, bool isActive)
		{
		}

		[Token(Token = "0x60018A9")]
		[Address(RVA = "0xF88614", Offset = "0xF88614", VA = "0xF88614")]
		public LoadoutSlotVial()
		{
		}
	}
	[Token(Token = "0x20006AF")]
	public class TutorialCompletedChecker : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20006B0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCAF10", Offset = "0xBCAF10")]
		private sealed class <>c
		{
			[Token(Token = "0x4001631")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001632")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<bool> <>9__1_0;

			[Token(Token = "0x4001633")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<bool?, bool> <>9__1_3;

			[Token(Token = "0x4001634")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Func<IUser, Reactive<bool>> <>9__1_2;

			[Token(Token = "0x4001635")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static Func<Reactive<bool>> <>9__1_1;

			[Token(Token = "0x60018AE")]
			[Address(RVA = "0x10675C8", Offset = "0x10675C8", VA = "0x10675C8")]
			public <>c()
			{
			}

			[Token(Token = "0x60018AF")]
			[Address(RVA = "0x10675D0", Offset = "0x10675D0", VA = "0x10675D0")]
			internal bool <get_HasCompletedTutorial>b__1_0()
			{
				return default(bool);
			}

			[Token(Token = "0x60018B0")]
			[Address(RVA = "0x1067740", Offset = "0x1067740", VA = "0x1067740")]
			internal Reactive<bool> <get_HasCompletedTutorial>b__1_1()
			{
				return default(Reactive<bool>);
			}

			[Token(Token = "0x60018B1")]
			[Address(RVA = "0x10678B4", Offset = "0x10678B4", VA = "0x10678B4")]
			internal Reactive<bool> <get_HasCompletedTutorial>b__1_2(IUser x)
			{
				return default(Reactive<bool>);
			}

			[Token(Token = "0x60018B2")]
			[Address(RVA = "0x1067A80", Offset = "0x1067A80", VA = "0x1067A80")]
			internal bool <get_HasCompletedTutorial>b__1_3(bool? y)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000482")]
		public Reactive<bool> HasCompletedTutorial
		{
			[Token(Token = "0x60018AB")]
			[Address(RVA = "0x115A04C", Offset = "0x115A04C", VA = "0x115A04C")]
			get
			{
				return default(Reactive<bool>);
			}
		}

		[Token(Token = "0x60018AC")]
		[Address(RVA = "0x115A20C", Offset = "0x115A20C", VA = "0x115A20C")]
		public TutorialCompletedChecker()
		{
		}
	}
	[Token(Token = "0x20006B1")]
	public class WandStatusEffect : MonoBehaviour
	{
		[Token(Token = "0x4001636")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Cortopia.Scripts.Players.Player player;

		[Token(Token = "0x4001637")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Side hand;

		[Token(Token = "0x4001638")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "EnumArrayAttribute", RVA = "0xBD7ECC", Offset = "0xBD7ECC")]
		[SerializeField]
		private SpellFXControl[] effects;

		[Token(Token = "0x4001639")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool[] _effectsAvailable;

		[Token(Token = "0x60018B3")]
		[Address(RVA = "0x113BE10", Offset = "0x113BE10", VA = "0x113BE10")]
		private void Awake()
		{
		}

		[Token(Token = "0x60018B4")]
		[Address(RVA = "0x113BE70", Offset = "0x113BE70", VA = "0x113BE70")]
		private void Update()
		{
		}

		[Token(Token = "0x60018B5")]
		[Address(RVA = "0x113C44C", Offset = "0x113C44C", VA = "0x113C44C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60018B6")]
		[Address(RVA = "0x113C32C", Offset = "0x113C32C", VA = "0x113C32C")]
		private void StopAllEffects(bool forceStop)
		{
		}

		[Token(Token = "0x60018B7")]
		[Address(RVA = "0x113C534", Offset = "0x113C534", VA = "0x113C534")]
		public WandStatusEffect()
		{
		}
	}
}
namespace Cortopia.Scripts.Gameplay.Wands
{
	[Token(Token = "0x20006B2")]
	public class ElementIdlesController : MonoBehaviour
	{
		[Token(Token = "0x400163A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Cortopia.Scripts.CustomAttributes.ReadOnly]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBD7F3C", Offset = "0xBD7F3C")]
		[SerializeField]
		private Cortopia.Scripts.Players.Player player;

		[Token(Token = "0x400163B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private WandSlotType slotType;

		[Token(Token = "0x400163C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBD7FA8", Offset = "0xBD7FA8")]
		private SpellFXControl arcaneEffect;

		[Token(Token = "0x400163D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private SpellFXControl electricEffect;

		[Token(Token = "0x400163E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private SpellFXControl fireEffect;

		[Token(Token = "0x400163F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private SpellFXControl iceEffect;

		[Token(Token = "0x4001640")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private SpellFXControl natureEffect;

		[Token(Token = "0x4001641")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private BodyPart _bodyPart;

		[Token(Token = "0x4001642")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private SpellElement _cachedElement;

		[Token(Token = "0x4001643")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private AssetRefSpellSetup _cachedSpellSetup;

		[Token(Token = "0x4001644")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private SpellFXControl _cachedSpellFXControl;

		[Token(Token = "0x4001645")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private SpellElement _currentElement;

		[Token(Token = "0x17000483")]
		private Cortopia.Scripts.Players.Player RealPlayer
		{
			[Token(Token = "0x60018B8")]
			[Address(RVA = "0x1042848", Offset = "0x1042848", VA = "0x1042848")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60018B9")]
		[Address(RVA = "0x1042934", Offset = "0x1042934", VA = "0x1042934")]
		public bool MagicUpdate()
		{
			return default(bool);
		}

		[Token(Token = "0x60018BA")]
		[Address(RVA = "0x1042E78", Offset = "0x1042E78", VA = "0x1042E78")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60018BB")]
		[Address(RVA = "0x1042D38", Offset = "0x1042D38", VA = "0x1042D38")]
		private void ConfigureElementController(Frame frame, Spell vialSpell)
		{
		}

		[Token(Token = "0x60018BC")]
		[Address(RVA = "0x1042FD4", Offset = "0x1042FD4", VA = "0x1042FD4")]
		public void Initialize(Cortopia.Scripts.Players.Player newPlayer, BodyPart newBodyPart)
		{
		}

		[Token(Token = "0x60018BD")]
		[Address(RVA = "0x1042CA8", Offset = "0x1042CA8", VA = "0x1042CA8")]
		private void ResetController()
		{
		}

		[Token(Token = "0x60018BE")]
		[Address(RVA = "0x1042F04", Offset = "0x1042F04", VA = "0x1042F04")]
		private SpellFXControl GetVFXObject(SpellElement element)
		{
			return null;
		}

		[Token(Token = "0x60018BF")]
		[Address(RVA = "0x1042FE0", Offset = "0x1042FE0", VA = "0x1042FE0")]
		public ElementIdlesController()
		{
		}
	}
	[Token(Token = "0x20006B3")]
	public class VialColorController : MonoBehaviour
	{
		[Token(Token = "0x4001646")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBD8034", Offset = "0xBD8034")]
		[SerializeField]
		private Cortopia.Scripts.Players.Player player;

		[Token(Token = "0x4001647")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private WandSlotType slotType;

		[Token(Token = "0x4001648")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBD8090", Offset = "0xBD8090")]
		private Material arcaneVial;

		[Token(Token = "0x4001649")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Material fireVial;

		[Token(Token = "0x400164A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Material iceVial;

		[Token(Token = "0x400164B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Material lightningVial;

		[Token(Token = "0x400164C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Material natureVial;

		[Token(Token = "0x400164D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Material defaultVial;

		[Token(Token = "0x400164E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Renderer vialRenderer;

		[Token(Token = "0x400164F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private BodyPart _bodyPart;

		[Token(Token = "0x4001650")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private AssetRefSpellSetup _currentSpell;

		[Token(Token = "0x4001651")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private EntityRef _handEntity;

		[Token(Token = "0x17000484")]
		private Cortopia.Scripts.Players.Player RealPlayer
		{
			[Token(Token = "0x60018C0")]
			[Address(RVA = "0x1134348", Offset = "0x1134348", VA = "0x1134348")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60018C1")]
		[Address(RVA = "0x1134434", Offset = "0x1134434", VA = "0x1134434")]
		public bool MaterialUpdate()
		{
			return default(bool);
		}

		[Token(Token = "0x60018C2")]
		[Address(RVA = "0x1134874", Offset = "0x1134874", VA = "0x1134874")]
		public void Initialize(Cortopia.Scripts.Players.Player newPlayer, BodyPart newBodyPart)
		{
		}

		[Token(Token = "0x60018C3")]
		[Address(RVA = "0x1134704", Offset = "0x1134704", VA = "0x1134704")]
		private void SetVialMaterial(SpellElement element)
		{
		}

		[Token(Token = "0x60018C4")]
		[Address(RVA = "0x1134884", Offset = "0x1134884", VA = "0x1134884")]
		public VialColorController()
		{
		}
	}
	[Token(Token = "0x20006B4")]
	public class Wand : MonoBehaviour
	{
		[Token(Token = "0x20006B5")]
		private class InstantiatedWandPart
		{
			[Token(Token = "0x400165B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public AsyncOperationHandle<GameObject> LoadedHandle;

			[Token(Token = "0x400165C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public AssetGuid QuantumAssetGuid;

			[Token(Token = "0x400165D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public WandPartVisual WandPartVisual;

			[Token(Token = "0x60018D6")]
			[Address(RVA = "0x1068B9C", Offset = "0x1068B9C", VA = "0x1068B9C")]
			public void Release()
			{
			}

			[Token(Token = "0x60018D7")]
			[Address(RVA = "0x1068CCC", Offset = "0x1068CCC", VA = "0x1068CCC")]
			public InstantiatedWandPart()
			{
			}
		}

		[Token(Token = "0x20006B6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCAF20", Offset = "0xBCAF20")]
		private sealed class <>c__DisplayClass23_0
		{
			[Token(Token = "0x400165E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Wand <>4__this;

			[Token(Token = "0x400165F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Transform parent;

			[Token(Token = "0x4001660")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public InstantiatedWandPart instantiatedWandPart;

			[Token(Token = "0x4001661")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public AssetGuid guid;

			[Token(Token = "0x60018D8")]
			[Address(RVA = "0x1068740", Offset = "0x1068740", VA = "0x1068740")]
			public <>c__DisplayClass23_0()
			{
			}

			[Token(Token = "0x60018D9")]
			[Address(RVA = "0x1068748", Offset = "0x1068748", VA = "0x1068748")]
			internal void <AsyncInstantiate>b__0(AsyncOperationHandle<GameObject> handle)
			{
			}
		}

		[Token(Token = "0x4001652")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Cortopia.Scripts.Players.Player player;

		[Token(Token = "0x4001653")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private XRNode hand;

		[Token(Token = "0x4001654")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		[Quantum.Inspector.EnumFlags]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBD815C", Offset = "0xBD815C")]
		private WandSettings settings;

		[Token(Token = "0x4001655")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private InstantiatedWandPart _barrelPart;

		[Token(Token = "0x4001656")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private InstantiatedWandPart _chamberPart;

		[Token(Token = "0x4001657")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private AssetGuid _currentClassAssetGuid;

		[Token(Token = "0x4001658")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private InstantiatedWandPart _handlePart;

		[Token(Token = "0x4001659")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private GameObject _instantiatedWandParent;

		[Token(Token = "0x400165A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool _subscribed;

		[Token(Token = "0x17000485")]
		private Cortopia.Scripts.Players.Player RealPlayer
		{
			[Token(Token = "0x60018C5")]
			[Address(RVA = "0x1139258", Offset = "0x1139258", VA = "0x1139258")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60018C6")]
		[Address(RVA = "0x1139398", Offset = "0x1139398", VA = "0x1139398")]
		private void Awake()
		{
		}

		[Token(Token = "0x60018C7")]
		[Address(RVA = "0x113942C", Offset = "0x113942C", VA = "0x113942C")]
		private void Start()
		{
		}

		[Token(Token = "0x60018C8")]
		[Address(RVA = "0x1139510", Offset = "0x1139510", VA = "0x1139510")]
		private void Update()
		{
		}

		[Token(Token = "0x60018C9")]
		[Address(RVA = "0x113987C", Offset = "0x113987C", VA = "0x113987C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60018CA")]
		[Address(RVA = "0x1139884", Offset = "0x1139884", VA = "0x1139884")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60018CB")]
		[Address(RVA = "0x1139888", Offset = "0x1139888", VA = "0x1139888")]
		public void SetNewPlayer(Cortopia.Scripts.Players.Player newPlayer)
		{
		}

		[Token(Token = "0x60018CC")]
		[Address(RVA = "0x11396B0", Offset = "0x11396B0", VA = "0x11396B0")]
		private void UnSpawnWand()
		{
		}

		[Token(Token = "0x60018CD")]
		[Address(RVA = "0x1139718", Offset = "0x1139718", VA = "0x1139718")]
		private void Subscribe(Frame frame, Cortopia.Scripts.Players.Player realPlayer)
		{
		}

		[Token(Token = "0x60018CE")]
		[Address(RVA = "0x11396A8", Offset = "0x11396A8", VA = "0x11396A8")]
		private void UnSubscribe()
		{
		}

		[Token(Token = "0x60018CF")]
		[Address(RVA = "0x1139C9C", Offset = "0x1139C9C", VA = "0x1139C9C")]
		public void Initialize(Cortopia.Scripts.Players.Player newPlayer, XRNode newHand)
		{
		}

		[Token(Token = "0x60018D0")]
		[Address(RVA = "0x1139730", Offset = "0x1139730", VA = "0x1139730")]
		private void UpdateWandVisibility(Frame frame, EntityRef playerEntity)
		{
		}

		[Token(Token = "0x60018D1")]
		[Address(RVA = "0x1139924", Offset = "0x1139924", VA = "0x1139924")]
		private void SpawnWand(Frame verifiedFrame, Cortopia.Scripts.Players.Player realPlayer)
		{
		}

		[Token(Token = "0x60018D2")]
		[Address(RVA = "0x1139D2C", Offset = "0x1139D2C", VA = "0x1139D2C")]
		private void AsyncInstantiate(AssetGuid guid, AssetReference meshAddress, InstantiatedWandPart instantiatedWandPart)
		{
		}

		[Token(Token = "0x60018D3")]
		[Address(RVA = "0x1139FD0", Offset = "0x1139FD0", VA = "0x1139FD0")]
		private void BuildWand()
		{
		}

		[Token(Token = "0x60018D4")]
		[Address(RVA = "0x113A0DC", Offset = "0x113A0DC", VA = "0x113A0DC")]
		public Wand()
		{
		}

		[Token(Token = "0x60018D5")]
		[Address(RVA = "0x113A118", Offset = "0x113A118", VA = "0x113A118")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE2ACC", Offset = "0xBE2ACC")]
		private void <Start>b__12_0(EventPlayerLoadoutChanged callback)
		{
		}
	}
	[Token(Token = "0x20006B7")]
	public class WandPartVisual : MonoBehaviour
	{
		[Token(Token = "0x4001662")]
		private const string IsGhostKeyword = "_ISGHOST_ON";

		[Token(Token = "0x4001663")]
		private const string IsObstructedKeyword = "_ISOBSTRUCTED_ON";

		[Token(Token = "0x4001664")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[Cortopia.Scripts.CustomAttributes.ReadOnly]
		private Cortopia.Scripts.Players.Player player;

		[Token(Token = "0x4001665")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform baseSocket;

		[Token(Token = "0x4001666")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform tipSocket;

		[Token(Token = "0x4001667")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Animator animator;

		[Token(Token = "0x4001668")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private SpellWandUI[] spellWandUis;

		[Token(Token = "0x4001669")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private ElementIdlesController[] vialMagicControllers;

		[Token(Token = "0x400166A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private VialColorController[] vials;

		[Token(Token = "0x400166B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Renderer[] lods;

		[Token(Token = "0x400166C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		[Cortopia.Scripts.CustomAttributes.ReadOnly]
		private float length;

		[Token(Token = "0x400166D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private int? _currentSpellIndex;

		[Token(Token = "0x400166E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private EntityRef _handEntity;

		[Token(Token = "0x400166F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool? _isCharging;

		[Token(Token = "0x4001670")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x72")]
		private bool _updateGamePlayState;

		[Token(Token = "0x4001671")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x73")]
		private bool _vialsMagicVisible;

		[Token(Token = "0x4001672")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private bool _vialsVisible;

		[Token(Token = "0x4001673")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x75")]
		private bool? _wandWasColliding;

		[Token(Token = "0x4001674")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD8298", Offset = "0xBD8298")]
		private XRNode <Hand>k__BackingField;

		[Token(Token = "0x17000486")]
		public Transform BaseSocket
		{
			[Token(Token = "0x60018DA")]
			[Address(RVA = "0x113A398", Offset = "0x113A398", VA = "0x113A398")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000487")]
		public Transform TipSocket
		{
			[Token(Token = "0x60018DB")]
			[Address(RVA = "0x113A3A0", Offset = "0x113A3A0", VA = "0x113A3A0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000488")]
		public Cortopia.Scripts.Players.Player RealPlayer
		{
			[Token(Token = "0x60018DC")]
			[Address(RVA = "0x113A3A8", Offset = "0x113A3A8", VA = "0x113A3A8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000489")]
		public XRNode Hand
		{
			[Token(Token = "0x60018DD")]
			[Address(RVA = "0x113A494", Offset = "0x113A494", VA = "0x113A494")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE2ADC", Offset = "0xBE2ADC")]
			get
			{
				return default(XRNode);
			}
			[Token(Token = "0x60018DE")]
			[Address(RVA = "0x113A49C", Offset = "0x113A49C", VA = "0x113A49C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE2AEC", Offset = "0xBE2AEC")]
			private set
			{
			}
		}

		[Token(Token = "0x60018DF")]
		[Address(RVA = "0x113A4A4", Offset = "0x113A4A4", VA = "0x113A4A4")]
		private void Start()
		{
		}

		[Token(Token = "0x60018E0")]
		[Address(RVA = "0x113A588", Offset = "0x113A588", VA = "0x113A588")]
		private void Update()
		{
		}

		[Token(Token = "0x60018E1")]
		[Address(RVA = "0x113AC78", Offset = "0x113AC78", VA = "0x113AC78")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x60018E2")]
		[Address(RVA = "0x113AD58", Offset = "0x113AD58", VA = "0x113AD58")]
		private void OnSpellCast(EventSpellCast callback)
		{
		}

		[Token(Token = "0x60018E3")]
		[Address(RVA = "0x113AEA8", Offset = "0x113AEA8", VA = "0x113AEA8")]
		private bool EventForMyPlayer(EntityRef spellCaster, Frame frame)
		{
			return default(bool);
		}

		[Token(Token = "0x60018E4")]
		[Address(RVA = "0x113AFF0", Offset = "0x113AFF0", VA = "0x113AFF0")]
		public void Initialize(Cortopia.Scripts.Players.Player newPlayer, XRNode hand, WandSettings settings)
		{
		}

		[Token(Token = "0x60018E5")]
		[Address(RVA = "0x113B4E4", Offset = "0x113B4E4", VA = "0x113B4E4")]
		public WandPartVisual()
		{
		}
	}
}
namespace Cortopia.Scripts.Gameplay.Tiles
{
	[Token(Token = "0x20006B8")]
	public class LanternEffectController : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20006B9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCAF30", Offset = "0xBCAF30")]
		private sealed class <>c
		{
			[Token(Token = "0x400167B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x400167C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<TileState, bool> <>9__15_0;

			[Token(Token = "0x60018EF")]
			[Address(RVA = "0x10346DC", Offset = "0x10346DC", VA = "0x10346DC")]
			public <>c()
			{
			}

			[Token(Token = "0x60018F0")]
			[Address(RVA = "0x10346E4", Offset = "0x10346E4", VA = "0x10346E4")]
			internal bool <get_HasPlayer>b__15_0(TileState x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4001675")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBD82A8", Offset = "0xBD82A8")]
		[SerializeField]
		private EntityView tileEntityView;

		[Token(Token = "0x4001676")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly ReactiveSource<TeleportState> _teleportingStateSource;

		[Token(Token = "0x4001677")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly ReactiveSource<TileState> _tileStateSource;

		[Token(Token = "0x4001678")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly ReactiveTransaction _tileUpdateTransaction;

		[Token(Token = "0x4001679")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private EntityRef _lastOccupyingTile;

		[Token(Token = "0x400167A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD82F4", Offset = "0xBD82F4")]
		private readonly Reactive<Vector3> <LanternPosition>k__BackingField;

		[Token(Token = "0x1700048A")]
		public EntityView TileEntityView
		{
			[Token(Token = "0x60018E6")]
			[Address(RVA = "0xF83538", Offset = "0xF83538", VA = "0xF83538")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700048B")]
		[AttributeAttribute(Name = "UsedImplicitlyAttribute", RVA = "0xBE5998", Offset = "0xBE5998")]
		public Reactive<TileState> CurrentTileState
		{
			[Token(Token = "0x60018E7")]
			[Address(RVA = "0xF83540", Offset = "0xF83540", VA = "0xF83540")]
			get
			{
				return default(Reactive<TileState>);
			}
		}

		[Token(Token = "0x1700048C")]
		[AttributeAttribute(Name = "UsedImplicitlyAttribute", RVA = "0xBE59A8", Offset = "0xBE59A8")]
		public Reactive<TeleportState> TeleportingState
		{
			[Token(Token = "0x60018E8")]
			[Address(RVA = "0xF83594", Offset = "0xF83594", VA = "0xF83594")]
			get
			{
				return default(Reactive<TeleportState>);
			}
		}

		[Token(Token = "0x1700048D")]
		[AttributeAttribute(Name = "UsedImplicitlyAttribute", RVA = "0xBE59B8", Offset = "0xBE59B8")]
		public Reactive<Vector3> LanternPosition
		{
			[Token(Token = "0x60018E9")]
			[Address(RVA = "0xF835E8", Offset = "0xF835E8", VA = "0xF835E8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE2AFC", Offset = "0xBE2AFC")]
			get
			{
				return default(Reactive<Vector3>);
			}
		}

		[Token(Token = "0x1700048E")]
		[AttributeAttribute(Name = "UsedImplicitlyAttribute", RVA = "0xBE59C8", Offset = "0xBE59C8")]
		public Reactive<bool> HasPlayer
		{
			[Token(Token = "0x60018EA")]
			[Address(RVA = "0xF835F0", Offset = "0xF835F0", VA = "0xF835F0")]
			get
			{
				return default(Reactive<bool>);
			}
		}

		[Token(Token = "0x60018EB")]
		[Address(RVA = "0xF8373C", Offset = "0xF8373C", VA = "0xF8373C")]
		private void Update()
		{
		}

		[Token(Token = "0x60018EC")]
		[Address(RVA = "0xF83C44", Offset = "0xF83C44", VA = "0xF83C44")]
		private TeleportState GetTeleportingState(Frame frame, EntityRef playerEntity)
		{
			return default(TeleportState);
		}

		[Token(Token = "0x60018ED")]
		[Address(RVA = "0xF83D58", Offset = "0xF83D58", VA = "0xF83D58")]
		public LanternEffectController()
		{
		}
	}
	[Token(Token = "0x20006BA")]
	public class LanternVisualEffects : MonoBehaviour
	{
		[Token(Token = "0x400167D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly int IsActive;

		[Token(Token = "0x400167E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static readonly int IsTeleportActive;

		[Token(Token = "0x400167F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBD8304", Offset = "0xBD8304")]
		[SerializeField]
		private BoundValue<TeleportState> teleportState;

		[Token(Token = "0x4001680")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private BoundValue<TileState> tileState;

		[Token(Token = "0x4001681")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBD8360", Offset = "0xBD8360")]
		[SerializeField]
		[PrefabExclusive]
		private Animator lanternAnimator;

		[Token(Token = "0x4001682")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		[PrefabExclusive]
		private Animator lanternVFXAnimator;

		[Token(Token = "0x4001683")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		[PrefabExclusive]
		private Animator lanternFlareVFXAnimator;

		[Token(Token = "0x4001684")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private ReactiveSubscription _teleportStateSubscription;

		[Token(Token = "0x60018F1")]
		[Address(RVA = "0xF83E58", Offset = "0xF83E58", VA = "0xF83E58")]
		private void Start()
		{
		}

		[Token(Token = "0x60018F2")]
		[Address(RVA = "0xF83F94", Offset = "0xF83F94", VA = "0xF83F94")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60018F3")]
		[Address(RVA = "0xF83FA0", Offset = "0xF83FA0", VA = "0xF83FA0")]
		private void UpdateLanternVisuals((TeleportState, TileState) valueTuple)
		{
		}

		[Token(Token = "0x60018F4")]
		[Address(RVA = "0xF840D4", Offset = "0xF840D4", VA = "0xF840D4")]
		public LanternVisualEffects()
		{
		}
	}
	[Token(Token = "0x20006BB")]
	public class LocalTileTeleportEvents : MonoBehaviour
	{
		[Token(Token = "0x4001685")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private EntityView tileEntityView;

		[Token(Token = "0x4001686")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private EntityRefEvent onPlayerStartArriving;

		[Token(Token = "0x60018F6")]
		[Address(RVA = "0xF89E4C", Offset = "0xF89E4C", VA = "0xF89E4C")]
		private void Start()
		{
		}

		[Token(Token = "0x60018F7")]
		[Address(RVA = "0xF89F30", Offset = "0xF89F30", VA = "0xF89F30")]
		private void OnStartTeleporting(EventStartTeleporting callback)
		{
		}

		[Token(Token = "0x60018F8")]
		[Address(RVA = "0xF8A06C", Offset = "0xF8A06C", VA = "0xF8A06C")]
		public LocalTileTeleportEvents()
		{
		}
	}
	[Token(Token = "0x20006BC")]
	public class TeleportHookBeam : MonoBehaviour
	{
		[Token(Token = "0x4001687")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBD844C", Offset = "0xBD844C")]
		[SerializeField]
		private EntityView playerEntityView;

		[Token(Token = "0x4001688")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBD8498", Offset = "0xBD8498")]
		private float beamDelay;

		[Token(Token = "0x4001689")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private BodyPart bodyPart;

		[Token(Token = "0x400168A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		[PrefabExclusive]
		private GameObject castEffect;

		[Token(Token = "0x400168B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		[PrefabExclusive]
		private GameObject animatedRootObject;

		[Token(Token = "0x400168C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		[PrefabExclusive]
		private LineRenderer hookBeamVFX;

		[Token(Token = "0x400168D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[PrefabExclusive]
		[SerializeField]
		private AnimationCurve beamAcceleration;

		[Token(Token = "0x400168E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		[PrefabExclusive]
		private AnimationCurve hookAcceleration;

		[Token(Token = "0x400168F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		[PrefabExclusive]
		private float beamStepLength;

		[Token(Token = "0x4001690")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBD8644", Offset = "0xBD8644")]
		[PrefabExclusive]
		[SerializeField]
		private StudioEventEmitter hookLoop;

		[Token(Token = "0x4001691")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[PrefabExclusive]
		[SerializeField]
		private StudioEventEmitter hookConnect;

		[Token(Token = "0x4001692")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private int _activeState;

		[Token(Token = "0x4001693")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private bool _hasConnectedToLantern;

		[Token(Token = "0x60018F9")]
		[Address(RVA = "0x1154D98", Offset = "0x1154D98", VA = "0x1154D98")]
		private void Awake()
		{
		}

		[Token(Token = "0x60018FA")]
		[Address(RVA = "0x1154E08", Offset = "0x1154E08", VA = "0x1154E08")]
		private void Update()
		{
		}

		[Token(Token = "0x60018FB")]
		[Address(RVA = "0x1155208", Offset = "0x1155208", VA = "0x1155208")]
		private void UpdateLerp(Teleport teleport, Vector3 handPosition, Vector3 targetLampPosition)
		{
		}

		[Token(Token = "0x60018FC")]
		[Address(RVA = "0x1155424", Offset = "0x1155424", VA = "0x1155424")]
		public TeleportHookBeam()
		{
		}
	}
	[Token(Token = "0x20006BD")]
	public class TeleportPreviewEffect : MonoBehaviour
	{
		[Token(Token = "0x4001694")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private EntityView playerEntity;

		[Token(Token = "0x4001695")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private BodyPart bodyPart;

		[Token(Token = "0x4001696")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject effectObject;

		[Token(Token = "0x60018FD")]
		[Address(RVA = "0x115542C", Offset = "0x115542C", VA = "0x115542C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60018FE")]
		[Address(RVA = "0x11554D8", Offset = "0x11554D8", VA = "0x11554D8")]
		private void Update()
		{
		}

		[Token(Token = "0x60018FF")]
		[Address(RVA = "0x1155430", Offset = "0x1155430", VA = "0x1155430")]
		private void ResetEffect()
		{
		}

		[Token(Token = "0x6001900")]
		[Address(RVA = "0x11558DC", Offset = "0x11558DC", VA = "0x11558DC")]
		public TeleportPreviewEffect()
		{
		}
	}
	[Token(Token = "0x20006BE")]
	public class Tile : MonoBehaviour
	{
		[Token(Token = "0x4001697")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBD8708", Offset = "0xBD8708")]
		[SerializeField]
		private EntityPrototype tilePrototype;

		[Token(Token = "0x4001698")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private int maxCapacity;

		[Token(Token = "0x4001699")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private int size;

		[Token(Token = "0x400169A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform lantern;

		[Token(Token = "0x400169B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject hidingSpots;

		[Token(Token = "0x400169C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Team allowedTeams;

		[Token(Token = "0x400169D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private Role allowedRoles;

		[Token(Token = "0x400169E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private bool isSpawnTile;

		[Token(Token = "0x400169F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBD87C4", Offset = "0xBD87C4")]
		private Color colliderColor;

		[Token(Token = "0x1700048F")]
		public bool IsSpawnTile
		{
			[Token(Token = "0x6001901")]
			[Address(RVA = "0x1156A10", Offset = "0x1156A10", VA = "0x1156A10")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000490")]
		public Role AllowedRoles
		{
			[Token(Token = "0x6001902")]
			[Address(RVA = "0x1156A18", Offset = "0x1156A18", VA = "0x1156A18")]
			get
			{
				return default(Role);
			}
		}

		[Token(Token = "0x17000491")]
		public int Size
		{
			[Token(Token = "0x6001903")]
			[Address(RVA = "0x1156A20", Offset = "0x1156A20", VA = "0x1156A20")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000492")]
		public EntityPrototype Prototype
		{
			[Token(Token = "0x6001904")]
			[Address(RVA = "0x1156A28", Offset = "0x1156A28", VA = "0x1156A28")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000493")]
		public Transform Lantern
		{
			[Token(Token = "0x6001905")]
			[Address(RVA = "0x1156A30", Offset = "0x1156A30", VA = "0x1156A30")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000494")]
		public GameObject HidingSpots
		{
			[Token(Token = "0x6001906")]
			[Address(RVA = "0x1156A38", Offset = "0x1156A38", VA = "0x1156A38")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001907")]
		[Address(RVA = "0x1156A40", Offset = "0x1156A40", VA = "0x1156A40")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6001908")]
		[Address(RVA = "0x1156B18", Offset = "0x1156B18", VA = "0x1156B18")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6001909")]
		[Address(RVA = "0x1156F0C", Offset = "0x1156F0C", VA = "0x1156F0C")]
		public void UpdateEntityColliderPosition()
		{
		}

		[Token(Token = "0x600190A")]
		[Address(RVA = "0x1157020", Offset = "0x1157020", VA = "0x1157020")]
		public Tile()
		{
		}
	}
	[Token(Token = "0x20006BF")]
	public static class PrototypeValidation
	{
		[Token(Token = "0x600190B")]
		public static void SetQuantumFlagComponent<T>(EntityPrototype prototype, bool shouldExist) where T : Component
		{
		}

		[Token(Token = "0x600190C")]
		public static T TryGetQuantumComponent<T>(EntityPrototype prototype) where T : Component
		{
			return null;
		}
	}
	[Token(Token = "0x20006C0")]
	[Flags]
	public enum Role
	{
		[Token(Token = "0x40016A1")]
		Undefined = 0,
		[Token(Token = "0x40016A2")]
		NoRole = 1,
		[Token(Token = "0x40016A3")]
		Attacker = 2,
		[Token(Token = "0x40016A4")]
		Defender = 4,
		[Token(Token = "0x40016A5")]
		GameplayTeams = 6
	}
	[Token(Token = "0x20006C1")]
	[Flags]
	public enum Team
	{
		[Token(Token = "0x40016A7")]
		Undefined = 0,
		[Token(Token = "0x40016A8")]
		Unassigned = 1,
		[Token(Token = "0x40016A9")]
		TeamA = 2,
		[Token(Token = "0x40016AA")]
		TeamB = 4,
		[Token(Token = "0x40016AB")]
		GameplayTeams = 6
	}
}
namespace Cortopia.Scripts.Gameplay.Spells
{
	[Token(Token = "0x20006C2")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xBCAF60", Offset = "0xBCAF60")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xBCAF60", Offset = "0xBCAF60")]
	public class CollisionSFX : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20006C3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCAFF4", Offset = "0xBCAFF4")]
		private sealed class <>c
		{
			[Token(Token = "0x40016AF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40016B0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<ParamRef, bool> <>9__3_0;

			[Token(Token = "0x6001913")]
			[Address(RVA = "0x102588C", Offset = "0x102588C", VA = "0x102588C")]
			public <>c()
			{
			}

			[Token(Token = "0x6001914")]
			[Address(RVA = "0x1025894", Offset = "0x1025894", VA = "0x1025894")]
			internal bool <Awake>b__3_0(ParamRef x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x40016AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private StudioEventEmitter sound;

		[Token(Token = "0x40016AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private EntityView _entityView;

		[Token(Token = "0x40016AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool _hasIntensity;

		[Token(Token = "0x600190D")]
		[Address(RVA = "0x11645B8", Offset = "0x11645B8", VA = "0x11645B8")]
		private void Awake()
		{
		}

		[Token(Token = "0x600190E")]
		[Address(RVA = "0x11646F4", Offset = "0x11646F4", VA = "0x11646F4")]
		private void Start()
		{
		}

		[Token(Token = "0x600190F")]
		[Address(RVA = "0x11647D8", Offset = "0x11647D8", VA = "0x11647D8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001910")]
		[Address(RVA = "0x116486C", Offset = "0x116486C", VA = "0x116486C")]
		private void OnCollision(EventCollision callback)
		{
		}

		[Token(Token = "0x6001911")]
		[Address(RVA = "0x116493C", Offset = "0x116493C", VA = "0x116493C")]
		public CollisionSFX()
		{
		}
	}
	[Token(Token = "0x20006C4")]
	public class HighlightTargetedObject : MonoBehaviour
	{
		[Token(Token = "0x40016B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private EntityView entityView;

		[Token(Token = "0x40016B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Material targetAcquireMaterial;

		[Token(Token = "0x40016B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Material targetNotAcquireMaterial;

		[Token(Token = "0x40016B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private bool onlyVisualForCasterPlayer;

		[Token(Token = "0x40016B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private GameObject visual;

		[Token(Token = "0x40016B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private MeshRenderer meshRenderer;

		[Token(Token = "0x40016B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool _targetsWasAcquired;

		[Token(Token = "0x6001915")]
		[Address(RVA = "0xFB32D4", Offset = "0xFB32D4", VA = "0xFB32D4")]
		private void Start()
		{
		}

		[Token(Token = "0x6001916")]
		[Address(RVA = "0xFB32E0", Offset = "0xFB32E0", VA = "0xFB32E0")]
		private void Update()
		{
		}

		[Token(Token = "0x6001917")]
		[Address(RVA = "0xFB3528", Offset = "0xFB3528", VA = "0xFB3528")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001918")]
		[Address(RVA = "0xFB3534", Offset = "0xFB3534", VA = "0xFB3534")]
		public HighlightTargetedObject()
		{
		}
	}
	[Token(Token = "0x20006C5")]
	public interface ISpellCulling
	{
		[Token(Token = "0x17000495")]
		float CullableLayers
		{
			[Token(Token = "0x6001919")]
			get;
		}

		[Token(Token = "0x17000496")]
		float NonCullableLayers
		{
			[Token(Token = "0x600191A")]
			get;
		}

		[Token(Token = "0x17000497")]
		float Diameter
		{
			[Token(Token = "0x600191B")]
			get;
		}

		[Token(Token = "0x17000498")]
		Vector3 Position
		{
			[Token(Token = "0x600191C")]
			get;
		}

		[Token(Token = "0x600191D")]
		void Cull();
	}
	[Token(Token = "0x20006C6")]
	public class PlayerActiveArmorPoller : MonoBehaviour
	{
		[Token(Token = "0x40016B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private BoundValue<Cortopia.Scripts.Players.Player> player;

		[Token(Token = "0x40016B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly ReactiveSource<SpellElement> _spellElementSource;

		[Token(Token = "0x40016BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private EntityRef _cachedBiggestArmor;

		[Token(Token = "0x40016BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD8890", Offset = "0xBD8890")]
		private readonly Reactive<SpellElement> <ActiveSpellElement>k__BackingField;

		[Token(Token = "0x17000499")]
		public Reactive<SpellElement> ActiveSpellElement
		{
			[Token(Token = "0x600191F")]
			[Address(RVA = "0xFE1114", Offset = "0xFE1114", VA = "0xFE1114")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE2B0C", Offset = "0xBE2B0C")]
			get
			{
				return default(Reactive<SpellElement>);
			}
		}

		[Token(Token = "0x600191E")]
		[Address(RVA = "0xFE1040", Offset = "0xFE1040", VA = "0xFE1040")]
		private PlayerActiveArmorPoller()
		{
		}

		[Token(Token = "0x6001920")]
		[Address(RVA = "0xFE111C", Offset = "0xFE111C", VA = "0xFE111C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001921")]
		[Address(RVA = "0xFE1210", Offset = "0xFE1210", VA = "0xFE1210")]
		private void PollForNewArmorSpellEffects(Frame frame, EntityRef playerEntity)
		{
		}

		[Token(Token = "0x6001922")]
		[Address(RVA = "0xFE1404", Offset = "0xFE1404", VA = "0xFE1404")]
		private static SpellElement GetSpellEffectElement(Frame frame, EntityRef spellEffectEntity)
		{
			return default(SpellElement);
		}
	}
	[Token(Token = "0x20006C7")]
	public class RayVisualisation : MonoBehaviour
	{
		[Token(Token = "0x40016BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private EntityView _entityView;

		[Token(Token = "0x40016BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private LineRenderer lineRenderer;

		[Token(Token = "0x40016BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		public FP rayLength;

		[Token(Token = "0x6001923")]
		[Address(RVA = "0x1253FB4", Offset = "0x1253FB4", VA = "0x1253FB4")]
		private void Start()
		{
		}

		[Token(Token = "0x6001924")]
		[Address(RVA = "0x1254008", Offset = "0x1254008", VA = "0x1254008")]
		private void Update()
		{
		}

		[Token(Token = "0x6001925")]
		[Address(RVA = "0x1254318", Offset = "0x1254318", VA = "0x1254318")]
		public RayVisualisation()
		{
		}
	}
	[Token(Token = "0x20006C8")]
	public class SpellCasterVisuals : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20006C9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCB004", Offset = "0xBCB004")]
		private sealed class <>c
		{
			[Token(Token = "0x40016CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40016CE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Cortopia.Scripts.Players.Player, Reactive<PlayerQuantumType?>> <>9__16_0;

			[Token(Token = "0x40016CF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<SpellSetupAsset, AssetGuid> <>9__22_0;

			[Token(Token = "0x600193E")]
			[Address(RVA = "0x10605E8", Offset = "0x10605E8", VA = "0x10605E8")]
			public <>c()
			{
			}

			[Token(Token = "0x600193F")]
			[Address(RVA = "0x10605F0", Offset = "0x10605F0", VA = "0x10605F0")]
			internal Reactive<PlayerQuantumType?> <Start>b__16_0(Cortopia.Scripts.Players.Player x)
			{
				return default(Reactive<PlayerQuantumType?>);
			}

			[Token(Token = "0x6001940")]
			[Address(RVA = "0x1060690", Offset = "0x1060690", VA = "0x1060690")]
			internal AssetGuid <InstantiateAllSpells>b__22_0(SpellSetupAsset x)
			{
				return default(AssetGuid);
			}
		}

		[Token(Token = "0x40016BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly List<AssetGuid> NoGuids;

		[Token(Token = "0x40016C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly List<AssetGuid> ToRemove;

		[Token(Token = "0x40016C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Cortopia.Scripts.Players.Player player;

		[Token(Token = "0x40016C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform leftHandParent;

		[Token(Token = "0x40016C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform rightHandParent;

		[Token(Token = "0x40016C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private SpellDescription _currentLeftPrimary;

		[Token(Token = "0x40016C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private SpellDescription _currentLeftSecondary;

		[Token(Token = "0x40016C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private SpellDescription _currentRightPrimary;

		[Token(Token = "0x40016C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private SpellDescription _currentRightSecondary;

		[Token(Token = "0x40016C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Dictionary<AssetGuid, SpellDescription> _instantiatedSpellDescriptions;

		[Token(Token = "0x40016C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool _isLocalPlayer;

		[Token(Token = "0x40016CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
		private bool _needsInstantiate;

		[Token(Token = "0x40016CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private ReactiveSubscription _reactiveSubscription;

		[Token(Token = "0x40016CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool _subscribed;

		[Token(Token = "0x1700049A")]
		private Cortopia.Scripts.Players.Player RealPlayer
		{
			[Token(Token = "0x6001926")]
			[Address(RVA = "0x1201FBC", Offset = "0x1201FBC", VA = "0x1201FBC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001927")]
		[Address(RVA = "0x12020A8", Offset = "0x12020A8", VA = "0x12020A8")]
		private void Start()
		{
		}

		[Token(Token = "0x6001928")]
		[Address(RVA = "0x12024E4", Offset = "0x12024E4", VA = "0x12024E4")]
		private void Update()
		{
		}

		[Token(Token = "0x6001929")]
		[Address(RVA = "0x1203558", Offset = "0x1203558", VA = "0x1203558")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600192A")]
		[Address(RVA = "0x1203568", Offset = "0x1203568", VA = "0x1203568")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600192B")]
		[Address(RVA = "0x120288C", Offset = "0x120288C", VA = "0x120288C")]
		private void RemoveAllEffectsFromAllHands()
		{
		}

		[Token(Token = "0x600192C")]
		[Address(RVA = "0x1203A54", Offset = "0x1203A54", VA = "0x1203A54")]
		private void InstantiateSpell(AssetGuid spellAssetID)
		{
		}

		[Token(Token = "0x600192D")]
		[Address(RVA = "0x1202974", Offset = "0x1202974", VA = "0x1202974")]
		private void InstantiateAllSpells()
		{
		}

		[Token(Token = "0x600192E")]
		[Address(RVA = "0x1202C24", Offset = "0x1202C24", VA = "0x1202C24")]
		private void InstantiateLoadoutSpells(Frame frame)
		{
		}

		[Token(Token = "0x600192F")]
		[Address(RVA = "0x12035E8", Offset = "0x12035E8", VA = "0x12035E8")]
		private void ClearUnusedSpellEffects(ICollection<AssetGuid> newSpellAssetIDs)
		{
		}

		[Token(Token = "0x6001930")]
		[Address(RVA = "0x1202FB4", Offset = "0x1202FB4", VA = "0x1202FB4")]
		private void UpdateSpellEffect(Frame frame, EntityRef spellEntity, EntityRef handEntity, BodyPart hand, ref SpellDescription currentSpellDescription)
		{
		}

		[Token(Token = "0x6001931")]
		[Address(RVA = "0x12041D4", Offset = "0x12041D4", VA = "0x12041D4")]
		private void PlayerChanged(PlayerQuantumType? type)
		{
		}

		[Token(Token = "0x6001932")]
		[Address(RVA = "0x1203560", Offset = "0x1203560", VA = "0x1203560")]
		private void Unsubscribe()
		{
		}

		[Token(Token = "0x6001933")]
		[Address(RVA = "0x12042A8", Offset = "0x12042A8", VA = "0x12042A8")]
		private void OnSpellCast(EventSpellCast eventSpellCast)
		{
		}

		[Token(Token = "0x6001934")]
		[Address(RVA = "0x12044EC", Offset = "0x12044EC", VA = "0x12044EC")]
		private void OnSpellFailed(EventSpellFailed eventSpellFailed)
		{
		}

		[Token(Token = "0x6001935")]
		[Address(RVA = "0x12045EC", Offset = "0x12045EC", VA = "0x12045EC")]
		private void OnPlayerLoadoutChanged(EventPlayerLoadoutChanged callback)
		{
		}

		[Token(Token = "0x6001936")]
		[Address(RVA = "0x12028E4", Offset = "0x12028E4", VA = "0x12028E4")]
		private static bool IsInTestRange(Frame frame, QuantumGame game)
		{
			return default(bool);
		}

		[Token(Token = "0x6001937")]
		[Address(RVA = "0x12043A0", Offset = "0x12043A0", VA = "0x12043A0")]
		private bool TryGetSpellSetup(EntityRef spellCaster, EntityRef spell, out SpellSetupAsset spellSetup)
		{
			return default(bool);
		}

		[Token(Token = "0x6001938")]
		[Address(RVA = "0x1204718", Offset = "0x1204718", VA = "0x1204718")]
		private bool IsEventValid(Frame f, EntityRef spellCasterEntity)
		{
			return default(bool);
		}

		[Token(Token = "0x6001939")]
		[Address(RVA = "0x1203F9C", Offset = "0x1203F9C", VA = "0x1203F9C")]
		private static bool TryGetTilePosition(Frame frame, CasterLookingForTarget casterLookingForTarget, out Vector3 tilePosition)
		{
			return default(bool);
		}

		[Token(Token = "0x600193A")]
		[Address(RVA = "0x12040AC", Offset = "0x12040AC", VA = "0x12040AC")]
		private static bool TryGetPointPosition(CasterLookingForTarget casterLookingForTarget, out Vector3 position, out Quaternion rotation)
		{
			return default(bool);
		}

		[Token(Token = "0x600193B")]
		[Address(RVA = "0x120480C", Offset = "0x120480C", VA = "0x120480C")]
		public SpellCasterVisuals()
		{
		}
	}
	[Token(Token = "0x20006CA")]
	public class SpellDescription
	{
		[Token(Token = "0x20006CB")]
		public class AsyncEffect
		{
			[StructLayout(3)]
			[Token(Token = "0x20006CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCB014", Offset = "0xBCB014")]
			private struct <SetupHandFXAsync>d__3 : IAsyncStateMachine
			{
				[Token(Token = "0x40016D6")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				public int <>1__state;

				[Token(Token = "0x40016D7")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
				public AsyncTaskMethodBuilder<SpellFXControl> <>t__builder;

				[Token(Token = "0x40016D8")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
				public Task<SpellFXControl> prevTask;

				[Token(Token = "0x40016D9")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
				public Transform parent;

				[Token(Token = "0x40016DA")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
				public bool isLocalPlayer;

				[Token(Token = "0x40016DB")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
				public BodyPart hand;

				[Token(Token = "0x40016DC")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
				public SpellSetupAsset spellSetup;

				[Token(Token = "0x40016DD")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
				public EntityRef spellEntity;

				[Token(Token = "0x40016DE")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
				private TaskAwaiter<SpellFXControl> <>u__1;

				[Token(Token = "0x600194E")]
				[Address(RVA = "0x2EDE280", Offset = "0x2EDE280", VA = "0x2EDE280", Slot = "4")]
				private void MoveNext()
				{
				}

				[Token(Token = "0x600194F")]
				[Address(RVA = "0x2EDE540", Offset = "0x2EDE540", VA = "0x2EDE540", Slot = "5")]
				[DebuggerHidden]
				private void SetStateMachine(IAsyncStateMachine stateMachine)
				{
				}
			}

			[StructLayout(3)]
			[Token(Token = "0x20006CD")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCB024", Offset = "0xBCB024")]
			private struct <InstantiateEffectAsync>d__5 : IAsyncStateMachine
			{
				[Token(Token = "0x40016DF")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				public int <>1__state;

				[Token(Token = "0x40016E0")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
				public AsyncTaskMethodBuilder<SpellFXControl> <>t__builder;

				[Token(Token = "0x40016E1")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
				public AsyncOperationHandle<GameObject> asyncOperationHandle;

				[Token(Token = "0x40016E2")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
				public Vector3 effectPosition;

				[Token(Token = "0x40016E3")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
				public Quaternion effectRotation;

				[Token(Token = "0x40016E4")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
				public Transform casterTransform;

				[Token(Token = "0x40016E5")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
				private TaskAwaiter<GameObject> <>u__1;

				[Token(Token = "0x6001950")]
				[Address(RVA = "0x2EDDF3C", Offset = "0x2EDDF3C", VA = "0x2EDDF3C", Slot = "4")]
				private void MoveNext()
				{
				}

				[Token(Token = "0x6001951")]
				[Address(RVA = "0x2EDE224", Offset = "0x2EDE224", VA = "0x2EDE224", Slot = "5")]
				[DebuggerHidden]
				private void SetStateMachine(IAsyncStateMachine stateMachine)
				{
				}
			}

			[StructLayout(3)]
			[Token(Token = "0x20006CE")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCB034", Offset = "0xBCB034")]
			private struct <DisposeAsync>d__10 : IAsyncStateMachine
			{
				[Token(Token = "0x40016E6")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				public int <>1__state;

				[Token(Token = "0x40016E7")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
				public AsyncTaskMethodBuilder <>t__builder;

				[Token(Token = "0x40016E8")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
				public AsyncEffect <>4__this;

				[Token(Token = "0x40016E9")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
				private TaskAwaiter<SpellFXControl> <>u__1;

				[Token(Token = "0x6001952")]
				[Address(RVA = "0x2EDDC98", Offset = "0x2EDDC98", VA = "0x2EDDC98", Slot = "4")]
				private void MoveNext()
				{
				}

				[Token(Token = "0x6001953")]
				[Address(RVA = "0x2EDDF30", Offset = "0x2EDDF30", VA = "0x2EDDF30", Slot = "5")]
				[DebuggerHidden]
				private void SetStateMachine(IAsyncStateMachine stateMachine)
				{
				}
			}

			[Token(Token = "0x40016D4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private Task<SpellFXControl> _instanceHandle;

			[Token(Token = "0x40016D5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private AsyncOperationHandle<GameObject> _loadingHandle;

			[Token(Token = "0x6001945")]
			[Address(RVA = "0x10606C0", Offset = "0x10606C0", VA = "0x10606C0")]
			public AsyncEffect(AssetReference effectAsset, Vector3 effectPosition, Quaternion effectRotation, Transform casterTransform)
			{
			}

			[Token(Token = "0x6001946")]
			[Address(RVA = "0x1060974", Offset = "0x1060974", VA = "0x1060974")]
			[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xBE2B1C", Offset = "0xBE2B1C")]
			private static Task<SpellFXControl> SetupHandFXAsync(Task<SpellFXControl> prevTask, Transform parent, BodyPart hand, bool isLocalPlayer, SpellSetupAsset spellSetup, EntityRef spellEntity)
			{
				return null;
			}

			[Token(Token = "0x6001947")]
			[Address(RVA = "0x1060AD4", Offset = "0x1060AD4", VA = "0x1060AD4")]
			public void SetupHandFX(Transform parent, BodyPart hand, bool isLocalPlayer, SpellSetupAsset spellSetup, EntityRef spellEntity)
			{
			}

			[Token(Token = "0x6001948")]
			[Address(RVA = "0x10607E0", Offset = "0x10607E0", VA = "0x10607E0")]
			[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xBE2B7C", Offset = "0xBE2B7C")]
			private static Task<SpellFXControl> InstantiateEffectAsync(AsyncOperationHandle<GameObject> asyncOperationHandle, Vector3 effectPosition, Quaternion effectRotation, Transform casterTransform)
			{
				return null;
			}

			[Token(Token = "0x6001949")]
			[Address(RVA = "0x1060B94", Offset = "0x1060B94", VA = "0x1060B94")]
			public void TryPlayFX(bool allowRestart)
			{
			}

			[Token(Token = "0x600194A")]
			[Address(RVA = "0x1060C28", Offset = "0x1060C28", VA = "0x1060C28")]
			public Transform TryGetTransform()
			{
				return null;
			}

			[Token(Token = "0x600194B")]
			[Address(RVA = "0x1060CAC", Offset = "0x1060CAC", VA = "0x1060CAC")]
			public void TryForceStopFX()
			{
			}

			[Token(Token = "0x600194C")]
			[Address(RVA = "0x1060D2C", Offset = "0x1060D2C", VA = "0x1060D2C")]
			public void TryStopFX()
			{
			}

			[Token(Token = "0x600194D")]
			[Address(RVA = "0x1060DAC", Offset = "0x1060DAC", VA = "0x1060DAC")]
			[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xBE2BDC", Offset = "0xBE2BDC")]
			public Task DisposeAsync()
			{
				return null;
			}
		}

		[Token(Token = "0x40016D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AsyncEffect CastEffect;

		[Token(Token = "0x40016D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AsyncEffect ChargeEffect;

		[Token(Token = "0x40016D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AsyncEffect FailEffect;

		[Token(Token = "0x40016D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AsyncEffect PreviewEffect;

		[Token(Token = "0x6001941")]
		[Address(RVA = "0x1203C00", Offset = "0x1203C00", VA = "0x1203C00")]
		public SpellDescription(SpellSetupAsset spellSetup, Vector3 effectPosition, Quaternion effectRotation, Transform casterTransform, bool isLocalPlayer)
		{
		}

		[Token(Token = "0x6001942")]
		[Address(RVA = "0x1203EB8", Offset = "0x1203EB8", VA = "0x1203EB8")]
		public void Setup(Transform parent, BodyPart hand, bool isLocal, SpellSetupAsset spellSetup, EntityRef spellEntity)
		{
		}

		[Token(Token = "0x6001943")]
		[Address(RVA = "0x1203E4C", Offset = "0x1203E4C", VA = "0x1203E4C")]
		public void Dispose()
		{
		}

		[Token(Token = "0x6001944")]
		[Address(RVA = "0x12039F0", Offset = "0x12039F0", VA = "0x12039F0")]
		public void Clear()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20006CF")]
	public struct SpellDescriptionArguments
	{
		[Token(Token = "0x40016EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string elementName;

		[Token(Token = "0x40016EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string elementValue;

		[Token(Token = "0x40016EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Color elementColor;
	}
	[Token(Token = "0x20006D0")]
	[DisallowMultipleComponent]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xBCB044", Offset = "0xBCB044")]
	public class SpellFXAnimatorListener : MonoBehaviour
	{
		[Token(Token = "0x40016ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly int IsActiveAnimatorHash;

		[Token(Token = "0x40016EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Animator[] _animators;

		[Token(Token = "0x40016EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private ReactiveSubscription _isFXPlayingSubscription;

		[Token(Token = "0x40016F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private SpellFXControl _spellFXControl;

		[Token(Token = "0x6001954")]
		[Address(RVA = "0x1205884", Offset = "0x1205884", VA = "0x1205884")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001955")]
		[Address(RVA = "0x120599C", Offset = "0x120599C", VA = "0x120599C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001956")]
		[Address(RVA = "0x12059A8", Offset = "0x12059A8", VA = "0x12059A8")]
		private void OnIsPlayingChanged(bool isPlaying)
		{
		}

		[Token(Token = "0x6001957")]
		[Address(RVA = "0x1205A84", Offset = "0x1205A84", VA = "0x1205A84")]
		public SpellFXAnimatorListener()
		{
		}
	}
	[Token(Token = "0x20006D1")]
	[DisallowMultipleComponent]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xBCB0B4", Offset = "0xBCB0B4")]
	public class SpellFXAudioEmitterListener : MonoBehaviour
	{
		[Token(Token = "0x40016F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private StudioEventEmitter audioEmitter;

		[Token(Token = "0x40016F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private ReactiveSubscription _isFXPlayingSubscription;

		[Token(Token = "0x40016F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private SpellFXControl _spellFXControl;

		[Token(Token = "0x6001959")]
		[Address(RVA = "0x1205AF8", Offset = "0x1205AF8", VA = "0x1205AF8")]
		private void Awake()
		{
		}

		[Token(Token = "0x600195A")]
		[Address(RVA = "0x1205BE8", Offset = "0x1205BE8", VA = "0x1205BE8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600195B")]
		[Address(RVA = "0x1205BF4", Offset = "0x1205BF4", VA = "0x1205BF4")]
		private void OnIsPlayingChanged(bool isPlaying)
		{
		}

		[Token(Token = "0x600195C")]
		[Address(RVA = "0x1205C64", Offset = "0x1205C64", VA = "0x1205C64")]
		public SpellFXAudioEmitterListener()
		{
		}
	}
	[Token(Token = "0x20006D2")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xBCB124", Offset = "0xBCB124")]
	public class SpellFXChargeListener : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20006D3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCB184", Offset = "0xBCB184")]
		private sealed class <>c
		{
			[Token(Token = "0x40016FA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40016FB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<ParamRef, bool> <>9__7_0;

			[Token(Token = "0x6001964")]
			[Address(RVA = "0x1060F10", Offset = "0x1060F10", VA = "0x1060F10")]
			public <>c()
			{
			}

			[Token(Token = "0x6001965")]
			[Address(RVA = "0x1060F18", Offset = "0x1060F18", VA = "0x1060F18")]
			internal bool <OnEnable>b__7_0(ParamRef x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x40016F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private StudioEventEmitter chargeSound;

		[Token(Token = "0x40016F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private StudioEventEmitter abortSound;

		[Token(Token = "0x40016F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private ReactiveSubscription _abortSubscription;

		[Token(Token = "0x40016F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private SpellFXControl _fxControl;

		[Token(Token = "0x40016F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool _hasIntensity;

		[Token(Token = "0x40016F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private ReactiveSubscription _playingSubscription;

		[Token(Token = "0x600195D")]
		[Address(RVA = "0x1205C6C", Offset = "0x1205C6C", VA = "0x1205C6C")]
		private void Update()
		{
		}

		[Token(Token = "0x600195E")]
		[Address(RVA = "0x1205E90", Offset = "0x1205E90", VA = "0x1205E90")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600195F")]
		[Address(RVA = "0x12061D0", Offset = "0x12061D0", VA = "0x12061D0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001960")]
		[Address(RVA = "0x1206200", Offset = "0x1206200", VA = "0x1206200")]
		public SpellFXChargeListener()
		{
		}

		[Token(Token = "0x6001961")]
		[Address(RVA = "0x1206208", Offset = "0x1206208", VA = "0x1206208")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE2C6C", Offset = "0xBE2C6C")]
		private void <OnEnable>b__7_1(bool b)
		{
		}

		[Token(Token = "0x6001962")]
		[Address(RVA = "0x1206230", Offset = "0x1206230", VA = "0x1206230")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE2C7C", Offset = "0xBE2C7C")]
		private void <OnEnable>b__7_2(bool b)
		{
		}
	}
	[Token(Token = "0x20006D4")]
	[DisallowMultipleComponent]
	public class SpellFXControl : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20006D5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCB1A4", Offset = "0xBCB1A4")]
		private sealed class <>c
		{
			[Token(Token = "0x400170E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x400170F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<BodyPart, bool> <>9__30_0;

			[Token(Token = "0x6001976")]
			[Address(RVA = "0x1060FD0", Offset = "0x1060FD0", VA = "0x1060FD0")]
			public <>c()
			{
			}

			[Token(Token = "0x6001977")]
			[Address(RVA = "0x1060FD8", Offset = "0x1060FD8", VA = "0x1060FD8")]
			internal bool <get_IsLocalPlayerHandFX>b__30_0(BodyPart x)
			{
				return default(bool);
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20006D6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCB1B4", Offset = "0xBCB1B4")]
		private struct <PlaySpellFX>d__35 : IAsyncStateMachine
		{
			[Token(Token = "0x4001710")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001711")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4001712")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool allowRestart;

			[Token(Token = "0x4001713")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public SpellFXControl <>4__this;

			[Token(Token = "0x4001714")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private TaskAwaiter<bool> <>u__1;

			[Token(Token = "0x6001978")]
			[Address(RVA = "0x1060FE4", Offset = "0x1060FE4", VA = "0x1060FE4", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001979")]
			[Address(RVA = "0x10616A0", Offset = "0x10616A0", VA = "0x10616A0", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20006D7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCB1C4", Offset = "0xBCB1C4")]
		private struct <SetResultDelayed>d__37 : IAsyncStateMachine
		{
			[Token(Token = "0x4001715")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001716")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4001717")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float time;

			[Token(Token = "0x4001718")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public TaskCompletionSource<bool> taskCompletionSource;

			[Token(Token = "0x4001719")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x600197A")]
			[Address(RVA = "0x10616AC", Offset = "0x10616AC", VA = "0x10616AC", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x600197B")]
			[Address(RVA = "0x106190C", Offset = "0x106190C", VA = "0x106190C", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x40016FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBD8920", Offset = "0xBD8920")]
		[SerializeField]
		private bool playEffectInWorldSpace;

		[Token(Token = "0x40016FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[SerializeField]
		private bool isOneShot;

		[Token(Token = "0x40016FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float decayTime;

		[Token(Token = "0x40016FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBD898C", Offset = "0xBD898C")]
		[SerializeField]
		private UnityEvent onSpellFXFinished;

		[Token(Token = "0x4001700")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly ReactiveSource<BodyPart> _activeHand;

		[Token(Token = "0x4001701")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly ReactiveSource<bool> _isAborted;

		[Token(Token = "0x4001702")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private readonly ReactiveSource<bool> _isPlaying;

		[Token(Token = "0x4001703")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private readonly ReactiveTransaction _reactiveTransaction;

		[Token(Token = "0x4001704")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private readonly ReactiveSource<EntityRef> _spellEntity;

		[Token(Token = "0x4001705")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private readonly ReactiveSource<SpellSetupAsset> _spellSetup;

		[Token(Token = "0x4001706")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private TaskCompletionSource<bool> _decayTask;

		[Token(Token = "0x4001707")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool _decayTaskAboutToStop;

		[Token(Token = "0x4001708")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Transform _parent;

		[Token(Token = "0x4001709")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD89D8", Offset = "0xBD89D8")]
		private readonly Reactive<bool> <IsPlaying>k__BackingField;

		[Token(Token = "0x400170A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD89E8", Offset = "0xBD89E8")]
		private readonly Reactive<bool> <IsAborted>k__BackingField;

		[Token(Token = "0x400170B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD89F8", Offset = "0xBD89F8")]
		private readonly Reactive<BodyPart> <ActiveHand>k__BackingField;

		[Token(Token = "0x400170C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD8A08", Offset = "0xBD8A08")]
		private readonly Reactive<EntityRef> <SpellEntity>k__BackingField;

		[Token(Token = "0x400170D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD8A18", Offset = "0xBD8A18")]
		private readonly Reactive<SpellSetupAsset> <SpellSetup>k__BackingField;

		[Token(Token = "0x1700049B")]
		public Reactive<bool> IsPlaying
		{
			[Token(Token = "0x6001967")]
			[Address(RVA = "0x1143914", Offset = "0x1143914", VA = "0x1143914")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE2C8C", Offset = "0xBE2C8C")]
			get
			{
				return default(Reactive<bool>);
			}
		}

		[Token(Token = "0x1700049C")]
		public Reactive<bool> IsAborted
		{
			[Token(Token = "0x6001968")]
			[Address(RVA = "0x114391C", Offset = "0x114391C", VA = "0x114391C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE2C9C", Offset = "0xBE2C9C")]
			get
			{
				return default(Reactive<bool>);
			}
		}

		[Token(Token = "0x1700049D")]
		public Reactive<BodyPart> ActiveHand
		{
			[Token(Token = "0x6001969")]
			[Address(RVA = "0x1143924", Offset = "0x1143924", VA = "0x1143924")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE2CAC", Offset = "0xBE2CAC")]
			get
			{
				return default(Reactive<BodyPart>);
			}
		}

		[Token(Token = "0x1700049E")]
		public Reactive<EntityRef> SpellEntity
		{
			[Token(Token = "0x600196A")]
			[Address(RVA = "0x114392C", Offset = "0x114392C", VA = "0x114392C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE2CBC", Offset = "0xBE2CBC")]
			get
			{
				return default(Reactive<EntityRef>);
			}
		}

		[Token(Token = "0x1700049F")]
		public Reactive<SpellSetupAsset> SpellSetup
		{
			[Token(Token = "0x600196B")]
			[Address(RVA = "0x1143934", Offset = "0x1143934", VA = "0x1143934")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE2CCC", Offset = "0xBE2CCC")]
			get
			{
				return default(Reactive<SpellSetupAsset>);
			}
		}

		[Token(Token = "0x170004A0")]
		public Reactive<bool> IsLocalPlayerHandFX
		{
			[Token(Token = "0x600196C")]
			[Address(RVA = "0x114393C", Offset = "0x114393C", VA = "0x114393C")]
			get
			{
				return default(Reactive<bool>);
			}
		}

		[Token(Token = "0x170004A1")]
		private bool IsDecaying
		{
			[Token(Token = "0x600196D")]
			[Address(RVA = "0x1143A58", Offset = "0x1143A58", VA = "0x1143A58")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001966")]
		[Address(RVA = "0x1143610", Offset = "0x1143610", VA = "0x1143610")]
		public SpellFXControl()
		{
		}

		[Token(Token = "0x600196E")]
		[Address(RVA = "0x1143ABC", Offset = "0x1143ABC", VA = "0x1143ABC")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600196F")]
		[Address(RVA = "0x1143B28", Offset = "0x1143B28", VA = "0x1143B28")]
		public void PlaySpellFX()
		{
		}

		[Token(Token = "0x6001970")]
		[Address(RVA = "0x1143B30", Offset = "0x1143B30", VA = "0x1143B30")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xBE2CDC", Offset = "0xBE2CDC")]
		public void PlaySpellFX(bool allowRestart)
		{
		}

		[Token(Token = "0x6001971")]
		[Address(RVA = "0x1143C00", Offset = "0x1143C00", VA = "0x1143C00")]
		public void StopSpellFX()
		{
		}

		[Token(Token = "0x6001972")]
		[Address(RVA = "0x1143DDC", Offset = "0x1143DDC", VA = "0x1143DDC")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xBE2D3C", Offset = "0xBE2D3C")]
		private static void SetResultDelayed(TaskCompletionSource<bool> taskCompletionSource, float time)
		{
		}

		[Token(Token = "0x6001973")]
		[Address(RVA = "0x1143EB0", Offset = "0x1143EB0", VA = "0x1143EB0")]
		public void ForceStopFX()
		{
		}

		[Token(Token = "0x6001974")]
		[Address(RVA = "0x1144060", Offset = "0x1144060", VA = "0x1144060")]
		public void SetupLocalPlayerHandFX(BodyPart hand, SpellSetupAsset spellSetup, EntityRef spellEntity)
		{
		}
	}
	[Token(Token = "0x20006D8")]
	public class SpellFXCullingManager : MonoBehaviour, IComparer<(ISpellCulling, float, float)>
	{
		[Token(Token = "0x20006D9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCB1D4", Offset = "0xBCB1D4")]
		private sealed class <MeasureAndCull>d__26 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001730")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001731")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001732")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SpellFXCullingManager <>4__this;

			[Token(Token = "0x4001733")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <prevFrames>5__2;

			[Token(Token = "0x170004A2")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001987")]
				[Address(RVA = "0x1061D10", Offset = "0x1061D10", VA = "0x1061D10", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004A3")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001989")]
				[Address(RVA = "0x1061D58", Offset = "0x1061D58", VA = "0x1061D58", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001984")]
			[Address(RVA = "0x1061918", Offset = "0x1061918", VA = "0x1061918")]
			[DebuggerHidden]
			public <MeasureAndCull>d__26(int <>1__state)
			{
			}

			[Token(Token = "0x6001985")]
			[Address(RVA = "0x1061944", Offset = "0x1061944", VA = "0x1061944", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001986")]
			[Address(RVA = "0x1061948", Offset = "0x1061948", VA = "0x1061948", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001988")]
			[Address(RVA = "0x1061D18", Offset = "0x1061D18", VA = "0x1061D18", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400171A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float marginBehind;

		[Token(Token = "0x400171B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float targetFrameRate;

		[Token(Token = "0x400171C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private int frameSampleCount;

		[Token(Token = "0x400171D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private float initialBackOff;

		[Token(Token = "0x400171E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float backOffRate;

		[Token(Token = "0x400171F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private float regain;

		[Token(Token = "0x4001720")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private float minRegain;

		[Token(Token = "0x4001721")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private float maxAreaToKeep;

		[Token(Token = "0x4001722")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private float minAreaPerLayer;

		[Token(Token = "0x4001723")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private float maxAreaPerLayer;

		[Token(Token = "0x4001724")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private int scaleDownBadFrameSamplesNeeded;

		[Token(Token = "0x4001725")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		private float scaleUpGoodFrameSamplesNeeded;

		[Token(Token = "0x4001726")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private TMP_Text debugText;

		[Token(Token = "0x4001727")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TupleElementNamesAttribute", RVA = "0xBD8AF8", Offset = "0xBD8AF8")]
		private readonly List<(ISpellCulling, float, float)> _cullableSpellsInFront;

		[Token(Token = "0x4001728")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private readonly List<ISpellCulling> _trackedSpells;

		[Token(Token = "0x4001729")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private int _goodOrBadFrameSamplesCount;

		[Token(Token = "0x400172A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private bool _isGood;

		[Token(Token = "0x400172B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float _lastKnownGood;

		[Token(Token = "0x400172C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private float _renderedArea;

		[Token(Token = "0x400172D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private int _renderedAreaCount;

		[Token(Token = "0x400172E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private float _surfaceToKeep;

		[Token(Token = "0x400172F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private WaitForSeconds _waitForSeconds;

		[Token(Token = "0x600197C")]
		[Address(RVA = "0x1144228", Offset = "0x1144228", VA = "0x1144228")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x600197D")]
		[Address(RVA = "0x1144B74", Offset = "0x1144B74", VA = "0x1144B74")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600197E")]
		[Address(RVA = "0x1144C6C", Offset = "0x1144C6C", VA = "0x1144C6C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600197F")]
		[Address(RVA = "0x1144C74", Offset = "0x1144C74", VA = "0x1144C74", Slot = "4")]
		public int Compare([AttributeAttribute(Name = "TupleElementNamesAttribute", RVA = "0xBE4E34", Offset = "0xBE4E34")] (ISpellCulling, float, float) x, [AttributeAttribute(Name = "TupleElementNamesAttribute", RVA = "0xBE4EC8", Offset = "0xBE4EC8")] (ISpellCulling, float, float) y)
		{
			return default(int);
		}

		[Token(Token = "0x6001980")]
		[Address(RVA = "0x1144C00", Offset = "0x1144C00", VA = "0x1144C00")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xBE2DBC", Offset = "0xBE2DBC")]
		private IEnumerator MeasureAndCull()
		{
			return null;
		}

		[Token(Token = "0x6001981")]
		[Address(RVA = "0x1144CA4", Offset = "0x1144CA4", VA = "0x1144CA4")]
		public void TrackSpell(ISpellCulling spell)
		{
		}

		[Token(Token = "0x6001982")]
		[Address(RVA = "0x1144D08", Offset = "0x1144D08", VA = "0x1144D08")]
		public void UnTrackSpell(ISpellCulling spell)
		{
		}

		[Token(Token = "0x6001983")]
		[Address(RVA = "0x1144D6C", Offset = "0x1144D6C", VA = "0x1144D6C")]
		public SpellFXCullingManager()
		{
		}
	}
	[Token(Token = "0x20006DA")]
	[DisallowMultipleComponent]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xBCB1E4", Offset = "0xBCB1E4")]
	public class SpellFXParticleListener : MonoBehaviour
	{
		[Token(Token = "0x4001734")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private ReactiveSubscription _isFXPlayingSubscription;

		[Token(Token = "0x4001735")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<ParticleSystem> _particleSystems;

		[Token(Token = "0x4001736")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private SpellFXControl _spellFXControl;

		[Token(Token = "0x600198A")]
		[Address(RVA = "0x1144E60", Offset = "0x1144E60", VA = "0x1144E60")]
		private void Awake()
		{
		}

		[Token(Token = "0x600198B")]
		[Address(RVA = "0x1144FB4", Offset = "0x1144FB4", VA = "0x1144FB4")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600198C")]
		[Address(RVA = "0x1144FC0", Offset = "0x1144FC0", VA = "0x1144FC0")]
		private void OnIsPlayingChanged(bool isPlaying)
		{
		}

		[Token(Token = "0x600198D")]
		[Address(RVA = "0x114510C", Offset = "0x114510C", VA = "0x114510C")]
		public SpellFXParticleListener()
		{
		}
	}
	[Token(Token = "0x20006DB")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xBCB254", Offset = "0xBCB254")]
	public class SpellSubCulling : MonoBehaviour, ISpellCulling
	{
		[Token(Token = "0x4001737")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float diameter;

		[Token(Token = "0x4001738")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject important;

		[Token(Token = "0x4001739")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float importantLayers;

		[Token(Token = "0x400173A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject nonImportant;

		[Token(Token = "0x400173B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private float nonImportantLayers;

		[Token(Token = "0x400173C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private bool cullAlsoImportantOnRemote;

		[Token(Token = "0x400173D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
		[SerializeField]
		private bool cullNonImportantOnLocal;

		[Token(Token = "0x400173E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private EntityView _entityView;

		[Token(Token = "0x400173F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool _isLocal;

		[Token(Token = "0x4001740")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private SpellFXControl _spellFXControl;

		[Token(Token = "0x4001741")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD8BFC", Offset = "0xBD8BFC")]
		private float <CullableLayers>k__BackingField;

		[Token(Token = "0x170004A4")]
		public float CullableLayers
		{
			[Token(Token = "0x6001991")]
			[Address(RVA = "0x1148860", Offset = "0x1148860", VA = "0x1148860", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE2E6C", Offset = "0xBE2E6C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001992")]
			[Address(RVA = "0x1148868", Offset = "0x1148868", VA = "0x1148868")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE2E7C", Offset = "0xBE2E7C")]
			private set
			{
			}
		}

		[Token(Token = "0x170004A5")]
		public float NonCullableLayers
		{
			[Token(Token = "0x6001993")]
			[Address(RVA = "0x1148870", Offset = "0x1148870", VA = "0x1148870", Slot = "5")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170004A6")]
		public float Diameter
		{
			[Token(Token = "0x6001994")]
			[Address(RVA = "0x11488A8", Offset = "0x11488A8", VA = "0x11488A8", Slot = "6")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170004A7")]
		public Vector3 Position
		{
			[Token(Token = "0x6001995")]
			[Address(RVA = "0x11488B0", Offset = "0x11488B0", VA = "0x11488B0", Slot = "7")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x600198E")]
		[Address(RVA = "0x1148450", Offset = "0x1148450", VA = "0x1148450")]
		private void Start()
		{
		}

		[Token(Token = "0x600198F")]
		[Address(RVA = "0x1148740", Offset = "0x1148740", VA = "0x1148740")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001990")]
		[Address(RVA = "0x11487E8", Offset = "0x11487E8", VA = "0x11487E8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001996")]
		[Address(RVA = "0x11488D4", Offset = "0x11488D4", VA = "0x11488D4", Slot = "8")]
		public void Cull()
		{
		}

		[Token(Token = "0x6001997")]
		[Address(RVA = "0x11489B8", Offset = "0x11489B8", VA = "0x11489B8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xBE2E8C", Offset = "0xBE2E8C")]
		private void Setup()
		{
		}

		[Token(Token = "0x6001998")]
		[Address(RVA = "0x11484CC", Offset = "0x11484CC", VA = "0x11484CC")]
		private void UpdateIsLocal()
		{
		}

		[Token(Token = "0x6001999")]
		[Address(RVA = "0x1148BB0", Offset = "0x1148BB0", VA = "0x1148BB0")]
		public SpellSubCulling()
		{
		}
	}
	[Token(Token = "0x20006DC")]
	public class SplineTrajectoryVisualisation : MonoBehaviour
	{
		[Token(Token = "0x4001742")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private int maxSteps;

		[Token(Token = "0x4001743")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private FP velocity;

		[Token(Token = "0x4001744")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private FP stepsPerSec;

		[Token(Token = "0x4001745")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private LineRenderer lineRenderer;

		[Token(Token = "0x4001746")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private FP continueScale;

		[Token(Token = "0x4001747")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private EntityRef _currentSpellCaster;

		[Token(Token = "0x4001748")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private EntityView _entityView;

		[Token(Token = "0x4001749")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Vector3[] _positions;

		[Token(Token = "0x400174A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Transform _wandTransform;

		[Token(Token = "0x600199A")]
		[Address(RVA = "0x1149048", Offset = "0x1149048", VA = "0x1149048")]
		private void Start()
		{
		}

		[Token(Token = "0x600199B")]
		[Address(RVA = "0x11490A8", Offset = "0x11490A8", VA = "0x11490A8")]
		private void Update()
		{
		}

		[Token(Token = "0x600199C")]
		[Address(RVA = "0x11497D0", Offset = "0x11497D0", VA = "0x11497D0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600199D")]
		[Address(RVA = "0x1149814", Offset = "0x1149814", VA = "0x1149814")]
		public SplineTrajectoryVisualisation()
		{
		}
	}
	[Token(Token = "0x20006DD")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xBCB2B4", Offset = "0xBCB2B4")]
	public class VelocitySFXControl : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20006DE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCB314", Offset = "0xBCB314")]
		private sealed class <>c
		{
			[Token(Token = "0x4001751")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001752")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<ParamRef, bool> <>9__6_0;

			[Token(Token = "0x60019A3")]
			[Address(RVA = "0x10684FC", Offset = "0x10684FC", VA = "0x10684FC")]
			public <>c()
			{
			}

			[Token(Token = "0x60019A4")]
			[Address(RVA = "0x1068504", Offset = "0x1068504", VA = "0x1068504")]
			internal bool <Start>b__6_0(ParamRef x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x400174B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBD8C5C", Offset = "0xBD8C5C")]
		private float maxSpeed;

		[Token(Token = "0x400174C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBD8CA8", Offset = "0xBD8CA8")]
		private float sampleTime;

		[Token(Token = "0x400174D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool _hasVelocity;

		[Token(Token = "0x400174E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private Vector3 _lastPos;

		[Token(Token = "0x400174F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float _lastTime;

		[Token(Token = "0x4001750")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private StudioEventEmitter _sound;

		[Token(Token = "0x600199E")]
		[Address(RVA = "0x1134094", Offset = "0x1134094", VA = "0x1134094")]
		private void Start()
		{
		}

		[Token(Token = "0x600199F")]
		[Address(RVA = "0x11341F4", Offset = "0x11341F4", VA = "0x11341F4")]
		private void Update()
		{
		}

		[Token(Token = "0x60019A0")]
		[Address(RVA = "0x113432C", Offset = "0x113432C", VA = "0x113432C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60019A1")]
		[Address(RVA = "0x1134334", Offset = "0x1134334", VA = "0x1134334")]
		public VelocitySFXControl()
		{
		}
	}
}
namespace Cortopia.Scripts.Gameplay.Objective
{
	[Token(Token = "0x20006DF")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xBCB324", Offset = "0xBCB324")]
	public class BombActive : MonoBehaviour
	{
		[Token(Token = "0x4001753")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject wandSlot;

		[Token(Token = "0x4001754")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private EntityView _entityView;

		[Token(Token = "0x60019A5")]
		[Address(RVA = "0x1330ED0", Offset = "0x1330ED0", VA = "0x1330ED0")]
		private void Start()
		{
		}

		[Token(Token = "0x60019A6")]
		[Address(RVA = "0x1330F24", Offset = "0x1330F24", VA = "0x1330F24")]
		private void Update()
		{
		}

		[Token(Token = "0x60019A7")]
		[Address(RVA = "0x13310D4", Offset = "0x13310D4", VA = "0x13310D4")]
		private bool TryGetActiveBomb(Frame f, out Bomb bomb)
		{
			return default(bool);
		}

		[Token(Token = "0x60019A8")]
		[Address(RVA = "0x13311B0", Offset = "0x13311B0", VA = "0x13311B0")]
		public BombActive()
		{
		}
	}
	[Token(Token = "0x20006E0")]
	public class BombSFX : MonoBehaviour
	{
		[Token(Token = "0x4001755")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private EntityView entityView;

		[Token(Token = "0x4001756")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBD8D14", Offset = "0xBD8D14")]
		[SerializeField]
		private StudioEventEmitter placedSFX;

		[Token(Token = "0x4001757")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private StudioEventEmitter armingSFX;

		[Token(Token = "0x4001758")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private StudioEventEmitter disarmingSFX;

		[Token(Token = "0x4001759")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private StudioEventEmitter activatedSFX;

		[Token(Token = "0x400175A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private StudioEventEmitter globalCountdownSFX;

		[Token(Token = "0x400175B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private StudioEventEmitter deactivatedSFX;

		[Token(Token = "0x400175C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private StudioEventEmitter globalDeactivatedSFX;

		[Token(Token = "0x400175D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private StudioEventEmitter explodeSFX;

		[Token(Token = "0x400175E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool _bombWasArmed;

		[Token(Token = "0x400175F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private int _currentBombIntensity;

		[Token(Token = "0x60019A9")]
		[Address(RVA = "0x1331B50", Offset = "0x1331B50", VA = "0x1331B50")]
		private void Update()
		{
		}

		[Token(Token = "0x60019AA")]
		[Address(RVA = "0x1331F10", Offset = "0x1331F10", VA = "0x1331F10")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60019AB")]
		[Address(RVA = "0x133202C", Offset = "0x133202C", VA = "0x133202C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60019AC")]
		[Address(RVA = "0x1331E08", Offset = "0x1331E08", VA = "0x1331E08")]
		private static void ToggleEmitter(StudioEventEmitter emitter, bool active)
		{
		}

		[Token(Token = "0x60019AD")]
		[Address(RVA = "0x13320A4", Offset = "0x13320A4", VA = "0x13320A4")]
		public BombSFX()
		{
		}
	}
	[Token(Token = "0x20006E1")]
	public class BombVisuals : MonoBehaviour
	{
		[Token(Token = "0x4001760")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly int MatPropertyArcStart;

		[Token(Token = "0x4001761")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static readonly int AnimIsArmed;

		[Token(Token = "0x4001762")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly int AnimIsPlaced;

		[Token(Token = "0x4001763")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private static readonly int AnimIsInteracting;

		[Token(Token = "0x4001764")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static readonly int AnimVFXIsActive;

		[Token(Token = "0x4001765")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private static readonly int AnimVFXChargeAmount;

		[Token(Token = "0x4001766")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static readonly int AnimVFXHasExplosion;

		[Token(Token = "0x4001767")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private EntityView entityView;

		[Token(Token = "0x4001768")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBD8DE0", Offset = "0xBD8DE0")]
		[SerializeField]
		private Animator animator;

		[Token(Token = "0x4001769")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Renderer chargingPlaneRenderer;

		[Token(Token = "0x400176A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Animator vfxAnimator;

		[Token(Token = "0x400176B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Material _chargingMaterial;

		[Token(Token = "0x400176C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool _bombExploded;

		[Token(Token = "0x60019AE")]
		[Address(RVA = "0x133270C", Offset = "0x133270C", VA = "0x133270C")]
		private void Start()
		{
		}

		[Token(Token = "0x60019AF")]
		[Address(RVA = "0x13327A4", Offset = "0x13327A4", VA = "0x13327A4")]
		private void Update()
		{
		}

		[Token(Token = "0x60019B0")]
		[Address(RVA = "0x1332AE8", Offset = "0x1332AE8", VA = "0x1332AE8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60019B1")]
		[Address(RVA = "0x1332AF0", Offset = "0x1332AF0", VA = "0x1332AF0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60019B2")]
		[Address(RVA = "0x1332C18", Offset = "0x1332C18", VA = "0x1332C18")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60019B3")]
		[Address(RVA = "0x1332C80", Offset = "0x1332C80", VA = "0x1332C80")]
		public BombVisuals()
		{
		}
	}
	[Token(Token = "0x20006E2")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xBCB384", Offset = "0xBCB384")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xBCB384", Offset = "0xBCB384")]
	public class GrabForceField : MonoBehaviour
	{
		[Token(Token = "0x400176D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private LineRenderer beam;

		[Token(Token = "0x400176E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float beamStepLength;

		[Token(Token = "0x400176F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private float beamStiffness;

		[Token(Token = "0x4001770")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private EntityView _view;

		[Token(Token = "0x60019B5")]
		[Address(RVA = "0xFA8754", Offset = "0xFA8754", VA = "0xFA8754")]
		private void Start()
		{
		}

		[Token(Token = "0x60019B6")]
		[Address(RVA = "0xFA87A8", Offset = "0xFA87A8", VA = "0xFA87A8")]
		private void Update()
		{
		}

		[Token(Token = "0x60019B7")]
		[Address(RVA = "0xFA8B5C", Offset = "0xFA8B5C", VA = "0xFA8B5C")]
		public GrabForceField()
		{
		}
	}
	[Token(Token = "0x20006E3")]
	public class HideWhenBombPlaced : MonoBehaviour
	{
		[Token(Token = "0x4001771")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject gameObjectToHide;

		[Token(Token = "0x60019B8")]
		[Address(RVA = "0xFB2F50", Offset = "0xFB2F50", VA = "0xFB2F50")]
		private void Update()
		{
		}

		[Token(Token = "0x60019B9")]
		[Address(RVA = "0xFB30B4", Offset = "0xFB30B4", VA = "0xFB30B4")]
		public HideWhenBombPlaced()
		{
		}
	}
	[Token(Token = "0x20006E4")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xBCB418", Offset = "0xBCB418")]
	public class ThroughPortalWhenGrabbed : MonoBehaviour
	{
		[Token(Token = "0x4001772")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int _throughPortalLayer;

		[Token(Token = "0x4001773")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private List<Renderer> renderers;

		[Token(Token = "0x4001774")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool _throughPortal;

		[Token(Token = "0x4001775")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private EntityView _view;

		[Token(Token = "0x60019BA")]
		[Address(RVA = "0x1156504", Offset = "0x1156504", VA = "0x1156504")]
		private void Start()
		{
		}

		[Token(Token = "0x60019BB")]
		[Address(RVA = "0x115657C", Offset = "0x115657C", VA = "0x115657C")]
		private void Update()
		{
		}

		[Token(Token = "0x60019BC")]
		[Address(RVA = "0x1156784", Offset = "0x1156784", VA = "0x1156784")]
		private void SetThroughPortal(bool throughPortal)
		{
		}

		[Token(Token = "0x60019BD")]
		[Address(RVA = "0x1156A08", Offset = "0x1156A08", VA = "0x1156A08")]
		public ThroughPortalWhenGrabbed()
		{
		}
	}
}
namespace Cortopia.Scripts.Gameplay.Grabbables
{
	[Token(Token = "0x20006E5")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xBCB478", Offset = "0xBCB478")]
	public class GrabbableEntityReactive : MonoBehaviour
	{
		[Token(Token = "0x4001776")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private EntityView _grabbableEntityView;

		[Token(Token = "0x4001777")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly ReactiveSource<bool> _isGrabbed;

		[Token(Token = "0x4001778")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly ReactiveSource<bool> _isHighlighted;

		[Token(Token = "0x4001779")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly ReactiveTransaction _grabbableTransaction;

		[Token(Token = "0x400177A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD8E9C", Offset = "0xBD8E9C")]
		private readonly Reactive<bool> <IsHighlighted>k__BackingField;

		[Token(Token = "0x400177B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD8EAC", Offset = "0xBD8EAC")]
		private readonly Reactive<bool> <IsGrabbed>k__BackingField;

		[Token(Token = "0x170004A8")]
		public Reactive<bool> IsHighlighted
		{
			[Token(Token = "0x60019BF")]
			[Address(RVA = "0xFA8D44", Offset = "0xFA8D44", VA = "0xFA8D44")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE2EC4", Offset = "0xBE2EC4")]
			get
			{
				return default(Reactive<bool>);
			}
		}

		[Token(Token = "0x170004A9")]
		public Reactive<bool> IsGrabbed
		{
			[Token(Token = "0x60019C0")]
			[Address(RVA = "0xFA8D4C", Offset = "0xFA8D4C", VA = "0xFA8D4C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE2ED4", Offset = "0xBE2ED4")]
			get
			{
				return default(Reactive<bool>);
			}
		}

		[Token(Token = "0x60019BE")]
		[Address(RVA = "0xFA8BFC", Offset = "0xFA8BFC", VA = "0xFA8BFC")]
		public GrabbableEntityReactive()
		{
		}

		[Token(Token = "0x60019C1")]
		[Address(RVA = "0xFA8D54", Offset = "0xFA8D54", VA = "0xFA8D54")]
		private void Start()
		{
		}

		[Token(Token = "0x60019C2")]
		[Address(RVA = "0xFA8DA8", Offset = "0xFA8DA8", VA = "0xFA8DA8")]
		private void Update()
		{
		}

		[Token(Token = "0x60019C3")]
		[Address(RVA = "0xFA91C0", Offset = "0xFA91C0", VA = "0xFA91C0")]
		private bool IsGrabbingThis(Frame frame, Grabber grabber)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20006E6")]
	public class GrabbableRelicGhostWand : MonoBehaviour
	{
		[Token(Token = "0x400177C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly ReactiveSource<bool> _rightHandWand;

		[Token(Token = "0x400177D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly ReactiveSource<bool> _isGhostWand;

		[Token(Token = "0x400177E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private EntityView _entityView;

		[Token(Token = "0x170004AA")]
		public Reactive<bool> IsGhostWand
		{
			[Token(Token = "0x60019C4")]
			[Address(RVA = "0xFA9288", Offset = "0xFA9288", VA = "0xFA9288")]
			get
			{
				return default(Reactive<bool>);
			}
		}

		[Token(Token = "0x170004AB")]
		public Reactive<bool> Hand
		{
			[Token(Token = "0x60019C5")]
			[Address(RVA = "0xFA92F8", Offset = "0xFA92F8", VA = "0xFA92F8")]
			get
			{
				return default(Reactive<bool>);
			}
		}

		[Token(Token = "0x60019C6")]
		[Address(RVA = "0xFA9368", Offset = "0xFA9368", VA = "0xFA9368")]
		private void Start()
		{
		}

		[Token(Token = "0x60019C7")]
		[Address(RVA = "0xFA93BC", Offset = "0xFA93BC", VA = "0xFA93BC")]
		private void Update()
		{
		}

		[Token(Token = "0x60019C8")]
		[Address(RVA = "0xFA9788", Offset = "0xFA9788", VA = "0xFA9788")]
		public GrabbableRelicGhostWand()
		{
		}
	}
	[Token(Token = "0x20006E7")]
	public class GrabbableReparentSocket : MonoBehaviour
	{
		[StructLayout(3)]
		[Token(Token = "0x20006E8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCB4D8", Offset = "0xBCB4D8")]
		private struct <ReparentAndLerpAsync>d__11 : IAsyncStateMachine
		{
			[Token(Token = "0x4001785")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001786")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4001787")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Transform reparentable;

			[Token(Token = "0x4001788")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Transform newParent;

			[Token(Token = "0x4001789")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public float travelTime;

			[Token(Token = "0x400178A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private Vector3 <startPos>5__2;

			[Token(Token = "0x400178B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private Quaternion <startRot>5__3;

			[Token(Token = "0x400178C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private float <startTime>5__4;

			[Token(Token = "0x400178D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			private YieldAwaitable.YieldAwaiter <>u__1;

			[Token(Token = "0x60019D0")]
			[Address(RVA = "0x1031EBC", Offset = "0x1031EBC", VA = "0x1031EBC", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x60019D1")]
			[Address(RVA = "0x1032560", Offset = "0x1032560", VA = "0x1032560", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x400177F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Cortopia.Scripts.Players.Player player;

		[Token(Token = "0x4001780")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Side hand;

		[Token(Token = "0x4001781")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private EntityRef _cachedHand;

		[Token(Token = "0x4001782")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private EntityRef _cachedPlayer;

		[Token(Token = "0x4001783")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private ReparentableGrabbable _reparented;

		[Token(Token = "0x4001784")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private EntityRef _reparentedConstraint;

		[Token(Token = "0x170004AC")]
		private Cortopia.Scripts.Players.Player RealPlayer
		{
			[Token(Token = "0x60019C9")]
			[Address(RVA = "0xFA983C", Offset = "0xFA983C", VA = "0xFA983C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60019CA")]
		[Address(RVA = "0xFA9920", Offset = "0xFA9920", VA = "0xFA9920")]
		private void Update()
		{
		}

		[Token(Token = "0x60019CB")]
		[Address(RVA = "0xFA9EA8", Offset = "0xFA9EA8", VA = "0xFA9EA8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60019CC")]
		[Address(RVA = "0xFA9C78", Offset = "0xFA9C78", VA = "0xFA9C78")]
		private void TryStopReparenting()
		{
		}

		[Token(Token = "0x60019CD")]
		[Address(RVA = "0xFA9DCC", Offset = "0xFA9DCC", VA = "0xFA9DCC")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xBE2EE4", Offset = "0xBE2EE4")]
		private static void ReparentAndLerpAsync(Transform reparentable, Transform newParent, float travelTime)
		{
		}

		[Token(Token = "0x60019CE")]
		[Address(RVA = "0xF9E064", Offset = "0xF9E064", VA = "0xF9E064")]
		public void Initialize(Cortopia.Scripts.Players.Player newPlayer, XRNode newHand)
		{
		}

		[Token(Token = "0x60019CF")]
		[Address(RVA = "0xFAA020", Offset = "0xFAA020", VA = "0xFAA020")]
		public GrabbableReparentSocket()
		{
		}
	}
	[Token(Token = "0x20006E9")]
	public class ReparentableGrabbable : MonoBehaviour
	{
		[Token(Token = "0x400178E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform reparentable;

		[Token(Token = "0x400178F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float travelTime;

		[Token(Token = "0x4001790")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private UnityEvent<GameObject> onCloned;

		[Token(Token = "0x170004AD")]
		public Transform Reparentable
		{
			[Token(Token = "0x60019D2")]
			[Address(RVA = "0x11F1ED8", Offset = "0x11F1ED8", VA = "0x11F1ED8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004AE")]
		public float TravelTime
		{
			[Token(Token = "0x60019D3")]
			[Address(RVA = "0x11F1EE0", Offset = "0x11F1EE0", VA = "0x11F1EE0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x60019D4")]
		[Address(RVA = "0x11F1EE8", Offset = "0x11F1EE8", VA = "0x11F1EE8")]
		public void ReturnClone()
		{
		}

		[Token(Token = "0x60019D5")]
		[Address(RVA = "0x11F204C", Offset = "0x11F204C", VA = "0x11F204C")]
		public ReparentableGrabbable()
		{
		}
	}
}
namespace Cortopia.Scripts.Gameplay.Characters
{
	[Token(Token = "0x20006EA")]
	public class BotDescription : MonoBehaviour
	{
		[Token(Token = "0x20006EB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCB4E8", Offset = "0xBCB4E8")]
		private sealed class <>c__DisplayClass2_0
		{
			[Token(Token = "0x4001793")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public LocalizedString formattedBotName;

			[Token(Token = "0x60019D8")]
			[Address(RVA = "0x114234C", Offset = "0x114234C", VA = "0x114234C")]
			public <>c__DisplayClass2_0()
			{
			}

			[Token(Token = "0x60019D9")]
			[Address(RVA = "0x1142354", Offset = "0x1142354", VA = "0x1142354")]
			internal void <GetBotName>b__0(string value)
			{
			}
		}

		[Token(Token = "0x4001791")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private LocalizedString botName;

		[Token(Token = "0x4001792")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private List<LocalizedString> botDifficultyFormat;

		[Token(Token = "0x60019D6")]
		[Address(RVA = "0x1333148", Offset = "0x1333148", VA = "0x1333148")]
		public LocalizedString GetBotName(Frame f, EntityRef bot)
		{
			return null;
		}

		[Token(Token = "0x60019D7")]
		[Address(RVA = "0x1333490", Offset = "0x1333490", VA = "0x1333490")]
		public BotDescription()
		{
		}
	}
	[Token(Token = "0x20006EC")]
	public class CharacterAnimatorController : MonoBehaviour
	{
		[Token(Token = "0x4001794")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly int AnimHit;

		[Token(Token = "0x4001795")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static readonly int AnimHitDirectionX;

		[Token(Token = "0x4001796")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly int AnimHitDirectionY;

		[Token(Token = "0x4001797")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private static readonly int AnimIsDead;

		[Token(Token = "0x4001798")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static readonly int AnimHasLeftWand;

		[Token(Token = "0x4001799")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private static readonly int AnimHasRightWand;

		[Token(Token = "0x400179A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private BoundValue<bool> isDead;

		[Token(Token = "0x400179B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private BoundValue<bool> hasLeftWand;

		[Token(Token = "0x400179C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private BoundValue<bool> hasRightWand;

		[Token(Token = "0x400179D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private BoundValue<Vector3> newHitDirection;

		[Token(Token = "0x400179E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private CharacterLoader _characterLoader;

		[Token(Token = "0x400179F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private ReactiveSubscription _characterSubscription;

		[Token(Token = "0x40017A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool _subscribed;

		[Token(Token = "0x60019DA")]
		[Address(RVA = "0x133900C", Offset = "0x133900C", VA = "0x133900C")]
		private void Start()
		{
		}

		[Token(Token = "0x60019DB")]
		[Address(RVA = "0x1339360", Offset = "0x1339360", VA = "0x1339360")]
		private void Update()
		{
		}

		[Token(Token = "0x60019DC")]
		[Address(RVA = "0x13396F8", Offset = "0x13396F8", VA = "0x13396F8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60019DD")]
		[Address(RVA = "0x1339704", Offset = "0x1339704", VA = "0x1339704")]
		private static void OnNewHitDirection((Vector3, ThirdPersonCharacter) valueTuple)
		{
		}

		[Token(Token = "0x60019DE")]
		[Address(RVA = "0x133986C", Offset = "0x133986C", VA = "0x133986C")]
		private static void OnHasLeftWandChanged((bool, ThirdPersonCharacter) valueTuple)
		{
		}

		[Token(Token = "0x60019DF")]
		[Address(RVA = "0x133998C", Offset = "0x133998C", VA = "0x133998C")]
		private static void OnHasRightWandChanged((bool, ThirdPersonCharacter) valueTuple)
		{
		}

		[Token(Token = "0x60019E0")]
		[Address(RVA = "0x1339AAC", Offset = "0x1339AAC", VA = "0x1339AAC")]
		private static void OnIsDeadChanged((bool, ThirdPersonCharacter) valueTuple)
		{
		}

		[Token(Token = "0x60019E1")]
		[Address(RVA = "0x1339BCC", Offset = "0x1339BCC", VA = "0x1339BCC")]
		public CharacterAnimatorController()
		{
		}
	}
	[Token(Token = "0x20006ED")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xBCB4F8", Offset = "0xBCB4F8")]
	public class CharacterBuilderController : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20006EE")]
		private class SelectionReaction
		{
			[Token(Token = "0x40017A5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public PlayerClassConfigurationAsset classAsset;

			[Token(Token = "0x40017A6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public RuntimeAnimatorController animatorController;

			[Token(Token = "0x40017A7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public StudioEventEmitter selectionVO;

			[Token(Token = "0x60019E7")]
			[Address(RVA = "0x1024520", Offset = "0x1024520", VA = "0x1024520")]
			public SelectionReaction()
			{
			}
		}

		[Token(Token = "0x40017A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private SelectionReaction[] classData;

		[Token(Token = "0x40017A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private ReactiveSubscription _characterModelSubscription;

		[Token(Token = "0x40017A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private StudioEventEmitter _currentPlayingVO;

		[Token(Token = "0x40017A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private SelectionReaction _selectedClassData;

		[Token(Token = "0x60019E3")]
		[Address(RVA = "0x133B3B8", Offset = "0x133B3B8", VA = "0x133B3B8")]
		private void Start()
		{
		}

		[Token(Token = "0x60019E4")]
		[Address(RVA = "0x133B4C8", Offset = "0x133B4C8", VA = "0x133B4C8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60019E5")]
		[Address(RVA = "0x133B4D4", Offset = "0x133B4D4", VA = "0x133B4D4")]
		private void OnCharacterChange((ThirdPersonCharacter, AssetGuid) valueTuple)
		{
		}

		[Token(Token = "0x60019E6")]
		[Address(RVA = "0x133B6D8", Offset = "0x133B6D8", VA = "0x133B6D8")]
		public CharacterBuilderController()
		{
		}
	}
	[Token(Token = "0x20006EF")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xBCB558", Offset = "0xBCB558")]
	public class CharacterCullingController : MonoBehaviour
	{
		[Token(Token = "0x40017A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private CharacterLoader _characterLoader;

		[Token(Token = "0x40017A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private ReactiveSubscription _characterModelSubscription;

		[Token(Token = "0x60019E8")]
		[Address(RVA = "0x133BA2C", Offset = "0x133BA2C", VA = "0x133BA2C")]
		private void Start()
		{
		}

		[Token(Token = "0x60019E9")]
		[Address(RVA = "0x133BB1C", Offset = "0x133BB1C", VA = "0x133BB1C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60019EA")]
		[Address(RVA = "0x133BB28", Offset = "0x133BB28", VA = "0x133BB28")]
		private void OnCharacterChange(ThirdPersonCharacter thirdPersonCharacter)
		{
		}

		[Token(Token = "0x60019EB")]
		[Address(RVA = "0x133BCF0", Offset = "0x133BCF0", VA = "0x133BCF0")]
		public CharacterCullingController()
		{
		}
	}
	[Token(Token = "0x20006F0")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xBCB5B8", Offset = "0xBCB5B8")]
	public class CharacterDissolveController : MonoBehaviour
	{
		[Token(Token = "0x40017AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBD8F7C", Offset = "0xBD8F7C")]
		[SerializeField]
		private BoundValue<bool> isDead;

		[Token(Token = "0x40017AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBD8FC8", Offset = "0xBD8FC8")]
		[SerializeField]
		private Vector2 dissolveRange;

		[Token(Token = "0x40017AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform headTransform;

		[Token(Token = "0x40017AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBD9024", Offset = "0xBD9024")]
		private float dissolveTime;

		[Token(Token = "0x40017AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private AnimationCurve lerpVelocity;

		[Token(Token = "0x40017AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private readonly ReactiveSource<bool> _isDeadDissolved;

		[Token(Token = "0x40017B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private CharacterLoader _characterLoader;

		[Token(Token = "0x40017B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private ReactiveSubscription _characterSubscription;

		[Token(Token = "0x40017B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float _deadAmount;

		[Token(Token = "0x40017B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private bool _isDead;

		[Token(Token = "0x40017B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5D")]
		private bool _isLocalPlayer;

		[Token(Token = "0x40017B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5E")]
		private bool _isTooClose;

		[Token(Token = "0x40017B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private ThirdPersonCharacter _thirdPersonCharacter;

		[Token(Token = "0x40017B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool _wasDissolving;

		[Token(Token = "0x40017B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD9080", Offset = "0xBD9080")]
		private readonly Reactive<bool> <IsDeadDissolved>k__BackingField;

		[Token(Token = "0x170004AF")]
		public Reactive<bool> IsDeadDissolved
		{
			[Token(Token = "0x60019ED")]
			[Address(RVA = "0x133BDCC", Offset = "0x133BDCC", VA = "0x133BDCC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE2F54", Offset = "0xBE2F54")]
			get
			{
				return default(Reactive<bool>);
			}
		}

		[Token(Token = "0x60019EC")]
		[Address(RVA = "0x133BCF8", Offset = "0x133BCF8", VA = "0x133BCF8")]
		private CharacterDissolveController()
		{
		}

		[Token(Token = "0x60019EE")]
		[Address(RVA = "0x133BDD4", Offset = "0x133BDD4", VA = "0x133BDD4")]
		private void Start()
		{
		}

		[Token(Token = "0x60019EF")]
		[Address(RVA = "0x133C040", Offset = "0x133C040", VA = "0x133C040")]
		private void Update()
		{
		}

		[Token(Token = "0x60019F0")]
		[Address(RVA = "0x133C3C4", Offset = "0x133C3C4", VA = "0x133C3C4")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60019F1")]
		[Address(RVA = "0x133C3D0", Offset = "0x133C3D0", VA = "0x133C3D0")]
		private void OnThirdPersonCharacterChanged(ThirdPersonCharacter thirdPersonCharacter)
		{
		}

		[Token(Token = "0x60019F2")]
		[Address(RVA = "0x133C46C", Offset = "0x133C46C", VA = "0x133C46C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE2F64", Offset = "0xBE2F64")]
		private void <Start>b__18_0(bool isDeadValue)
		{
		}

		[Token(Token = "0x60019F3")]
		[Address(RVA = "0x133C478", Offset = "0x133C478", VA = "0x133C478")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE2F74", Offset = "0xBE2F74")]
		private void <Start>b__18_1(PlayerQuantumType? type)
		{
		}
	}
	[Token(Token = "0x20006F1")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xBCB618", Offset = "0xBCB618")]
	public class CharacterGameState : MonoBehaviour
	{
		[Token(Token = "0x40017B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly ReactiveSource<bool> _hasLeftWandSource;

		[Token(Token = "0x40017BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly ReactiveSource<bool> _hasRightWandSource;

		[Token(Token = "0x40017BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly ReactiveSource<bool> _isDeadSource;

		[Token(Token = "0x40017BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly ReactiveSource<Vector3> _newHitDirectionSource;

		[Token(Token = "0x40017BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private CharacterLoader _characterLoader;

		[Token(Token = "0x40017BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool _subscribed;

		[Token(Token = "0x40017BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD9090", Offset = "0xBD9090")]
		private readonly Reactive<bool> <IsDead>k__BackingField;

		[Token(Token = "0x40017C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD90A0", Offset = "0xBD90A0")]
		private readonly Reactive<bool> <HasLeftWand>k__BackingField;

		[Token(Token = "0x40017C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD90B0", Offset = "0xBD90B0")]
		private readonly Reactive<bool> <HasRightWand>k__BackingField;

		[Token(Token = "0x40017C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD90C0", Offset = "0xBD90C0")]
		private readonly Reactive<Vector3> <NewHitDirection>k__BackingField;

		[Token(Token = "0x170004B0")]
		public Reactive<bool> IsDead
		{
			[Token(Token = "0x60019F5")]
			[Address(RVA = "0x133C6C0", Offset = "0x133C6C0", VA = "0x133C6C0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE2F84", Offset = "0xBE2F84")]
			get
			{
				return default(Reactive<bool>);
			}
		}

		[Token(Token = "0x170004B1")]
		public Reactive<bool> HasLeftWand
		{
			[Token(Token = "0x60019F6")]
			[Address(RVA = "0x133C6C8", Offset = "0x133C6C8", VA = "0x133C6C8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE2F94", Offset = "0xBE2F94")]
			get
			{
				return default(Reactive<bool>);
			}
		}

		[Token(Token = "0x170004B2")]
		public Reactive<bool> HasRightWand
		{
			[Token(Token = "0x60019F7")]
			[Address(RVA = "0x133C6D0", Offset = "0x133C6D0", VA = "0x133C6D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE2FA4", Offset = "0xBE2FA4")]
			get
			{
				return default(Reactive<bool>);
			}
		}

		[Token(Token = "0x170004B3")]
		public Reactive<Vector3> NewHitDirection
		{
			[Token(Token = "0x60019F8")]
			[Address(RVA = "0x133C6D8", Offset = "0x133C6D8", VA = "0x133C6D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE2FB4", Offset = "0xBE2FB4")]
			get
			{
				return default(Reactive<Vector3>);
			}
		}

		[Token(Token = "0x60019F4")]
		[Address(RVA = "0x133C4E4", Offset = "0x133C4E4", VA = "0x133C4E4")]
		private CharacterGameState()
		{
		}

		[Token(Token = "0x60019F9")]
		[Address(RVA = "0x133C6E0", Offset = "0x133C6E0", VA = "0x133C6E0")]
		private void Awake()
		{
		}

		[Token(Token = "0x60019FA")]
		[Address(RVA = "0x133C734", Offset = "0x133C734", VA = "0x133C734")]
		private void Start()
		{
		}

		[Token(Token = "0x60019FB")]
		[Address(RVA = "0x133C818", Offset = "0x133C818", VA = "0x133C818")]
		private void Update()
		{
		}

		[Token(Token = "0x60019FC")]
		[Address(RVA = "0x133CB08", Offset = "0x133CB08", VA = "0x133CB08")]
		private void OnDamageTakenEvent(EventHitBy callback)
		{
		}
	}
	[Token(Token = "0x20006F2")]
	public class CharacterHandRig : MonoBehaviour
	{
		[Token(Token = "0x20006F3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCB678", Offset = "0xBCB678")]
		private sealed class <>c__DisplayClass22_0
		{
			[Token(Token = "0x40017CF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public CharacterHandRig <>4__this;

			[Token(Token = "0x40017D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public AssetGuid guid;

			[Token(Token = "0x40017D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Cortopia.Scripts.Players.Player realPlayer;

			[Token(Token = "0x6001A0B")]
			[Address(RVA = "0x102458C", Offset = "0x102458C", VA = "0x102458C")]
			public <>c__DisplayClass22_0()
			{
			}

			[Token(Token = "0x6001A0C")]
			[Address(RVA = "0x1024594", Offset = "0x1024594", VA = "0x1024594")]
			internal void <SpawnSelectedHand>b__0(AsyncOperationHandle<GameObject> handle)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20006F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCB688", Offset = "0xBCB688")]
		private struct <ReparentVisualEffectAsync>d__23 : IAsyncStateMachine
		{
			[Token(Token = "0x40017D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40017D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x40017D4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CharacterHandRig <>4__this;

			[Token(Token = "0x40017D5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Transform socketTransform;

			[Token(Token = "0x40017D6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private YieldAwaitable.YieldAwaiter <>u__1;

			[Token(Token = "0x40017D7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private TaskAwaiter <>u__2;

			[Token(Token = "0x6001A0D")]
			[Address(RVA = "0x10249F0", Offset = "0x10249F0", VA = "0x10249F0", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001A0E")]
			[Address(RVA = "0x1024D8C", Offset = "0x1024D8C", VA = "0x1024D8C", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20006F5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCB698", Offset = "0xBCB698")]
		private struct <ResetVisualEffectParentAndUnloadAsync>d__24 : IAsyncStateMachine
		{
			[Token(Token = "0x40017D8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40017D9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x40017DA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CharacterHandRig <>4__this;

			[Token(Token = "0x40017DB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public AsyncOperationHandle<GameObject> toUnload;

			[Token(Token = "0x40017DC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private YieldAwaitable.YieldAwaiter <>u__1;

			[Token(Token = "0x40017DD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private TaskAwaiter <>u__2;

			[Token(Token = "0x6001A0F")]
			[Address(RVA = "0x1024D98", Offset = "0x1024D98", VA = "0x1024D98", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001A10")]
			[Address(RVA = "0x10250E8", Offset = "0x10250E8", VA = "0x10250E8", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x40017C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBD90D0", Offset = "0xBD90D0")]
		private Cortopia.Scripts.Players.Player player;

		[Token(Token = "0x40017C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private XRNode hand;

		[Token(Token = "0x40017C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject deadPlayerHandRig;

		[Token(Token = "0x40017C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject visualEffects;

		[Token(Token = "0x40017C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private bool showDefaultHands;

		[Token(Token = "0x40017C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private AssetGuid _currentClassAssetGuid;

		[Token(Token = "0x40017C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private GameObject _handCharacter;

		[Token(Token = "0x40017CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private AsyncOperationHandle<GameObject> _loadedHandle;

		[Token(Token = "0x40017CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool _quantumInitialized;

		[Token(Token = "0x40017CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Task _reparentTask;

		[Token(Token = "0x40017CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private bool _subscribed;

		[Token(Token = "0x40017CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Transform _visualEffectsDefaultParent;

		[Token(Token = "0x170004B4")]
		private Cortopia.Scripts.Players.Player RealPlayer
		{
			[Token(Token = "0x60019FD")]
			[Address(RVA = "0x115C310", Offset = "0x115C310", VA = "0x115C310")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60019FE")]
		[Address(RVA = "0x115C3FC", Offset = "0x115C3FC", VA = "0x115C3FC")]
		private void Start()
		{
		}

		[Token(Token = "0x60019FF")]
		[Address(RVA = "0x115C4E0", Offset = "0x115C4E0", VA = "0x115C4E0")]
		private void Update()
		{
		}

		[Token(Token = "0x6001A00")]
		[Address(RVA = "0x115C87C", Offset = "0x115C87C", VA = "0x115C87C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001A01")]
		[Address(RVA = "0x115C8C4", Offset = "0x115C8C4", VA = "0x115C8C4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001A02")]
		[Address(RVA = "0x115C998", Offset = "0x115C998", VA = "0x115C998")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001A03")]
		[Address(RVA = "0x115C864", Offset = "0x115C864", VA = "0x115C864")]
		private void Subscribe(Frame frame, Cortopia.Scripts.Players.Player realPlayer)
		{
		}

		[Token(Token = "0x6001A04")]
		[Address(RVA = "0x115C76C", Offset = "0x115C76C", VA = "0x115C76C")]
		private void UnSubscribe()
		{
		}

		[Token(Token = "0x6001A05")]
		[Address(RVA = "0x115C774", Offset = "0x115C774", VA = "0x115C774")]
		private void UnSpawnHand()
		{
		}

		[Token(Token = "0x6001A06")]
		[Address(RVA = "0x115C99C", Offset = "0x115C99C", VA = "0x115C99C")]
		private void SpawnSelectedHand(Frame verifiedFrame, Cortopia.Scripts.Players.Player realPlayer)
		{
		}

		[Token(Token = "0x6001A07")]
		[Address(RVA = "0x115CDF8", Offset = "0x115CDF8", VA = "0x115CDF8")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xBE2FC4", Offset = "0xBE2FC4")]
		private Task ReparentVisualEffectAsync(Transform socketTransform)
		{
			return null;
		}

		[Token(Token = "0x6001A08")]
		[Address(RVA = "0x115CCCC", Offset = "0x115CCCC", VA = "0x115CCCC")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xBE3024", Offset = "0xBE3024")]
		private Task ResetVisualEffectParentAndUnloadAsync(AsyncOperationHandle<GameObject> toUnload)
		{
			return null;
		}

		[Token(Token = "0x6001A09")]
		[Address(RVA = "0x115CF08", Offset = "0x115CF08", VA = "0x115CF08")]
		public CharacterHandRig()
		{
		}

		[Token(Token = "0x6001A0A")]
		[Address(RVA = "0x115CF80", Offset = "0x115CF80", VA = "0x115CF80")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE3084", Offset = "0xBE3084")]
		private void <Start>b__14_0(EventPlayerLoadoutChanged callback)
		{
		}
	}
	[Token(Token = "0x20006F6")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xBCB6A8", Offset = "0xBCB6A8")]
	public class CharacterHittingController : MonoBehaviour
	{
		[Token(Token = "0x40017DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private CharacterLoader _characterLoader;

		[Token(Token = "0x40017DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private ReactiveSubscription _characterModelSubscription;

		[Token(Token = "0x6001A11")]
		[Address(RVA = "0x115D08C", Offset = "0x115D08C", VA = "0x115D08C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001A12")]
		[Address(RVA = "0x115D17C", Offset = "0x115D17C", VA = "0x115D17C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001A13")]
		[Address(RVA = "0x115D188", Offset = "0x115D188", VA = "0x115D188")]
		private void OnCharacterChange(ThirdPersonCharacter thirdPersonCharacter)
		{
		}

		[Token(Token = "0x6001A14")]
		[Address(RVA = "0x115D36C", Offset = "0x115D36C", VA = "0x115D36C")]
		public CharacterHittingController()
		{
		}
	}
	[Token(Token = "0x20006F7")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xBCB708", Offset = "0xBCB708")]
	public class CharacterLODController : MonoBehaviour
	{
		[Token(Token = "0x40017E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool forceSetLOD;

		[Token(Token = "0x40017E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private int lodLevel;

		[Token(Token = "0x40017E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private ReactiveSubscription _characterModelSubscription;

		[Token(Token = "0x6001A15")]
		[Address(RVA = "0x115D374", Offset = "0x115D374", VA = "0x115D374")]
		private void Start()
		{
		}

		[Token(Token = "0x6001A16")]
		[Address(RVA = "0x115D460", Offset = "0x115D460", VA = "0x115D460")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001A17")]
		[Address(RVA = "0x115D46C", Offset = "0x115D46C", VA = "0x115D46C")]
		private void OnCharacterChange(ThirdPersonCharacter thirdPersonCharacter)
		{
		}

		[Token(Token = "0x6001A18")]
		[Address(RVA = "0x115D52C", Offset = "0x115D52C", VA = "0x115D52C")]
		public CharacterLODController()
		{
		}
	}
	[Token(Token = "0x20006F8")]
	public class CharacterLoader : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20006F9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCB768", Offset = "0xBCB768")]
		private sealed class <>c
		{
			[Token(Token = "0x40017F0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40017F1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<ThirdPersonCharacter, bool> <>9__21_0;

			[Token(Token = "0x6001A2A")]
			[Address(RVA = "0x1025154", Offset = "0x1025154", VA = "0x1025154")]
			public <>c()
			{
			}

			[Token(Token = "0x6001A2B")]
			[Address(RVA = "0x102515C", Offset = "0x102515C", VA = "0x102515C")]
			internal bool <get_IsCharacterActive>b__21_0(ThirdPersonCharacter x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20006FA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCB778", Offset = "0xBCB778")]
		private sealed class <>c__DisplayClass31_0
		{
			[Token(Token = "0x40017F2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public CharacterLoader <>4__this;

			[Token(Token = "0x40017F3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public AssetGuid classAssetGuid;

			[Token(Token = "0x6001A2C")]
			[Address(RVA = "0x10251C0", Offset = "0x10251C0", VA = "0x10251C0")]
			public <>c__DisplayClass31_0()
			{
			}

			[Token(Token = "0x6001A2D")]
			[Address(RVA = "0x10251C8", Offset = "0x10251C8", VA = "0x10251C8")]
			internal void <LoadNewCharacterAsync>b__0(AsyncOperationHandle<GameObject> handle)
			{
			}
		}

		[Token(Token = "0x40017E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Cortopia.Scripts.Players.Player player;

		[Token(Token = "0x40017E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private bool shouldCacheCharacters;

		[Token(Token = "0x40017E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		[SerializeField]
		private bool unloadWhenDisabled;

		[Token(Token = "0x40017E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly ReactiveSource<AssetGuid> _currentLoadedClassAssetGuid;

		[Token(Token = "0x40017E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly ReactiveSource<ThirdPersonCharacter> _currentThirdPersonCharacter;

		[Token(Token = "0x40017E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private readonly ReactiveTransaction _transaction;

		[Token(Token = "0x40017E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool _cachingEnabled;

		[Token(Token = "0x40017EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private AsyncOperationHandle<GameObject> _currentLoadedHandle;

		[Token(Token = "0x40017EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private AssetGuid _currentLoadingClassAssetGuid;

		[Token(Token = "0x40017EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "TupleElementNamesAttribute", RVA = "0xBD91AC", Offset = "0xBD91AC")]
		private Dictionary<AssetGuid, (ThirdPersonCharacter, AsyncOperationHandle<GameObject>)> _instantiatedCharacters;

		[Token(Token = "0x40017ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private bool _subscribed;

		[Token(Token = "0x40017EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD9230", Offset = "0xBD9230")]
		private readonly Reactive<ThirdPersonCharacter> <CurrentThirdPersonCharacter>k__BackingField;

		[Token(Token = "0x40017EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD9240", Offset = "0xBD9240")]
		private readonly Reactive<AssetGuid> <CurrentClassAssetGuid>k__BackingField;

		[Token(Token = "0x170004B5")]
		public Cortopia.Scripts.Players.Player RealPlayer
		{
			[Token(Token = "0x6001A1A")]
			[Address(RVA = "0x115D280", Offset = "0x115D280", VA = "0x115D280")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004B6")]
		public Reactive<ThirdPersonCharacter> CurrentThirdPersonCharacter
		{
			[Token(Token = "0x6001A1B")]
			[Address(RVA = "0x115D69C", Offset = "0x115D69C", VA = "0x115D69C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE30B4", Offset = "0xBE30B4")]
			get
			{
				return default(Reactive<ThirdPersonCharacter>);
			}
		}

		[Token(Token = "0x170004B7")]
		public Reactive<AssetGuid> CurrentClassAssetGuid
		{
			[Token(Token = "0x6001A1C")]
			[Address(RVA = "0x115D6A4", Offset = "0x115D6A4", VA = "0x115D6A4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE30C4", Offset = "0xBE30C4")]
			get
			{
				return default(Reactive<AssetGuid>);
			}
		}

		[Token(Token = "0x170004B8")]
		public Reactive<bool> IsCharacterActive
		{
			[Token(Token = "0x6001A1D")]
			[Address(RVA = "0x115D6AC", Offset = "0x115D6AC", VA = "0x115D6AC")]
			get
			{
				return default(Reactive<bool>);
			}
		}

		[Token(Token = "0x6001A19")]
		[Address(RVA = "0x115D534", Offset = "0x115D534", VA = "0x115D534")]
		private CharacterLoader()
		{
		}

		[Token(Token = "0x6001A1E")]
		[Address(RVA = "0x115D7E4", Offset = "0x115D7E4", VA = "0x115D7E4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001A1F")]
		[Address(RVA = "0x115D854", Offset = "0x115D854", VA = "0x115D854")]
		private void Start()
		{
		}

		[Token(Token = "0x6001A20")]
		[Address(RVA = "0x115D938", Offset = "0x115D938", VA = "0x115D938")]
		private void Update()
		{
		}

		[Token(Token = "0x6001A21")]
		[Address(RVA = "0x115E02C", Offset = "0x115E02C", VA = "0x115E02C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001A22")]
		[Address(RVA = "0x115E014", Offset = "0x115E014", VA = "0x115E014")]
		private void Subscribe(Frame frame, Cortopia.Scripts.Players.Player realPlayer)
		{
		}

		[Token(Token = "0x6001A23")]
		[Address(RVA = "0x115DAB8", Offset = "0x115DAB8", VA = "0x115DAB8")]
		private void UnSubscribe()
		{
		}

		[Token(Token = "0x6001A24")]
		[Address(RVA = "0x115DAC0", Offset = "0x115DAC0", VA = "0x115DAC0")]
		private void UnSpawnCharacter()
		{
		}

		[Token(Token = "0x6001A25")]
		[Address(RVA = "0x115E060", Offset = "0x115E060", VA = "0x115E060")]
		private void SpawnSelectedCharacter(Frame verifiedFrame, Cortopia.Scripts.Players.Player realPlayer)
		{
		}

		[Token(Token = "0x6001A26")]
		[Address(RVA = "0x115E4A4", Offset = "0x115E4A4", VA = "0x115E4A4")]
		private void SetThirdPersonCharacterActive(ThirdPersonCharacter thirdPersonCharacter, AsyncOperationHandle<GameObject> asyncOperationHandle)
		{
		}

		[Token(Token = "0x6001A27")]
		[Address(RVA = "0x115E638", Offset = "0x115E638", VA = "0x115E638")]
		private void LoadNewCharacterAsync(Frame frame, AssetGuid classAssetGuid, int variant)
		{
		}

		[Token(Token = "0x6001A28")]
		[Address(RVA = "0x115E8EC", Offset = "0x115E8EC", VA = "0x115E8EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE30D4", Offset = "0xBE30D4")]
		private void <Start>b__23_0(EventPlayerLoadoutChanged callback)
		{
		}
	}
	[Token(Token = "0x20006FB")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xBCB788", Offset = "0xBCB788")]
	public class CharacterOutlineController : MonoBehaviour
	{
		[Token(Token = "0x40017F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private CharacterLoader _characterLoader;

		[Token(Token = "0x40017F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private ReactiveSubscription _characterModelSubscription;

		[Token(Token = "0x40017F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Cortopia.Scripts.Players.Player _player;

		[Token(Token = "0x40017F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private ThirdPersonCharacter _thirdPersonCharacter;

		[Token(Token = "0x6001A2E")]
		[Address(RVA = "0x115E9F8", Offset = "0x115E9F8", VA = "0x115E9F8")]
		private void Start()
		{
		}

		[Token(Token = "0x6001A2F")]
		[Address(RVA = "0x115EAE8", Offset = "0x115EAE8", VA = "0x115EAE8")]
		private void Update()
		{
		}

		[Token(Token = "0x6001A30")]
		[Address(RVA = "0x115ED1C", Offset = "0x115ED1C", VA = "0x115ED1C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001A31")]
		[Address(RVA = "0x115ED28", Offset = "0x115ED28", VA = "0x115ED28")]
		private void OnCharacterChange(ThirdPersonCharacter thirdPersonCharacter)
		{
		}

		[Token(Token = "0x6001A32")]
		[Address(RVA = "0x115ED30", Offset = "0x115ED30", VA = "0x115ED30")]
		public CharacterOutlineController()
		{
		}
	}
	[Token(Token = "0x20006FC")]
	public class CharacterPortalTileAligner : MonoBehaviour
	{
		[Token(Token = "0x40017F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private BoundValue<EntityView> tileEntityView;

		[Token(Token = "0x40017F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool _offsetInitialized;

		[Token(Token = "0x170004B9")]
		private Cortopia.Scripts.Players.Player Player
		{
			[Token(Token = "0x6001A33")]
			[Address(RVA = "0x115ED38", Offset = "0x115ED38", VA = "0x115ED38")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001A34")]
		[Address(RVA = "0x115EDD0", Offset = "0x115EDD0", VA = "0x115EDD0")]
		private void Update()
		{
		}

		[Token(Token = "0x6001A35")]
		[Address(RVA = "0x115F0E0", Offset = "0x115F0E0", VA = "0x115F0E0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001A36")]
		[Address(RVA = "0x115F0E8", Offset = "0x115F0E8", VA = "0x115F0E8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001A37")]
		[Address(RVA = "0x115F16C", Offset = "0x115F16C", VA = "0x115F16C")]
		public CharacterPortalTileAligner()
		{
		}
	}
	[Token(Token = "0x20006FD")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xBCB7E8", Offset = "0xBCB7E8")]
	public class CharacterPropAttacher : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20006FE")]
		private class CharacterProps
		{
			[Token(Token = "0x40017FD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public PlayerClassConfigurationAsset classAsset;

			[Token(Token = "0x40017FE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public GameObject leftHandProp;

			[Token(Token = "0x40017FF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GameObject rightHandProp;

			[Token(Token = "0x6001A3C")]
			[Address(RVA = "0x10255DC", Offset = "0x10255DC", VA = "0x10255DC")]
			public CharacterProps()
			{
			}
		}

		[Token(Token = "0x40017FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private CharacterProps[] propData;

		[Token(Token = "0x40017FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private CharacterLoader _characterLoader;

		[Token(Token = "0x40017FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private ReactiveSubscription _characterModelSubscription;

		[Token(Token = "0x6001A38")]
		[Address(RVA = "0x115F174", Offset = "0x115F174", VA = "0x115F174")]
		private void Start()
		{
		}

		[Token(Token = "0x6001A39")]
		[Address(RVA = "0x115F288", Offset = "0x115F288", VA = "0x115F288")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001A3A")]
		[Address(RVA = "0x115F294", Offset = "0x115F294", VA = "0x115F294")]
		private void OnCharacterChange((ThirdPersonCharacter, AssetGuid) valueTuple)
		{
		}

		[Token(Token = "0x6001A3B")]
		[Address(RVA = "0x115F5A4", Offset = "0x115F5A4", VA = "0x115F5A4")]
		public CharacterPropAttacher()
		{
		}
	}
	[Token(Token = "0x20006FF")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xBCB848", Offset = "0xBCB848")]
	public class CharacterSelectorController : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000700")]
		private class SelectionReaction
		{
			[Token(Token = "0x4001807")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public PlayerClassConfigurationAsset classAsset;

			[Token(Token = "0x4001808")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public RuntimeAnimatorController animatorController;

			[Token(Token = "0x4001809")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public StudioEventEmitter selectionVO;

			[Token(Token = "0x6001A44")]
			[Address(RVA = "0x10255E4", Offset = "0x10255E4", VA = "0x10255E4")]
			public SelectionReaction()
			{
			}
		}

		[Token(Token = "0x4001800")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly int IsSelected;

		[Token(Token = "0x4001801")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private SelectionReaction[] classData;

		[Token(Token = "0x4001802")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private CharacterLoader _characterLoader;

		[Token(Token = "0x4001803")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private ReactiveSubscription _characterModelSubscription;

		[Token(Token = "0x4001804")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private AssetGuid _queuedAnimationClass;

		[Token(Token = "0x4001805")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private SelectionReaction _selectedClassData;

		[Token(Token = "0x4001806")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private ThirdPersonCharacter _thirdPersonCharacter;

		[Token(Token = "0x6001A3D")]
		[Address(RVA = "0x115F5AC", Offset = "0x115F5AC", VA = "0x115F5AC")]
		private void Start()
		{
		}

		[Token(Token = "0x6001A3E")]
		[Address(RVA = "0x115F6C0", Offset = "0x115F6C0", VA = "0x115F6C0")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001A3F")]
		[Address(RVA = "0x115F6CC", Offset = "0x115F6CC", VA = "0x115F6CC")]
		private void OnCharacterChange((ThirdPersonCharacter, AssetGuid) valueTuple)
		{
		}

		[Token(Token = "0x6001A40")]
		[Address(RVA = "0x115F874", Offset = "0x115F874", VA = "0x115F874")]
		public void ActivateSelection(AssetGuid lockedInClass)
		{
		}

		[Token(Token = "0x6001A41")]
		[Address(RVA = "0x115F9C8", Offset = "0x115F9C8", VA = "0x115F9C8")]
		public void DeactivateSelection()
		{
		}

		[Token(Token = "0x6001A42")]
		[Address(RVA = "0x115FA74", Offset = "0x115FA74", VA = "0x115FA74")]
		public CharacterSelectorController()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000701")]
	public struct CharacterSkin
	{
		[Token(Token = "0x400180A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public AssetReference firstPersonLeftHandMesh;

		[Token(Token = "0x400180B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AssetReference firstPersonRightHandMesh;

		[Token(Token = "0x400180C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AssetReference thirdPersonMesh;
	}
	[Token(Token = "0x2000702")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xBCB8A8", Offset = "0xBCB8A8")]
	public class CharacterStencilSetter : MonoBehaviour
	{
		[Token(Token = "0x400180D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private int stencilRenderQueue;

		[Token(Token = "0x400180E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private ReactiveSubscription _characterModelSubscription;

		[Token(Token = "0x400180F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private ThirdPersonCharacter _thirdPersonCharacter;

		[Token(Token = "0x6001A45")]
		[Address(RVA = "0x115FAE8", Offset = "0x115FAE8", VA = "0x115FAE8")]
		private void Start()
		{
		}

		[Token(Token = "0x6001A46")]
		[Address(RVA = "0x115FBF8", Offset = "0x115FBF8", VA = "0x115FBF8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001A47")]
		[Address(RVA = "0x115FC04", Offset = "0x115FC04", VA = "0x115FC04")]
		private void OnCharacterChange((ThirdPersonCharacter, AssetGuid) valueTuple)
		{
		}

		[Token(Token = "0x6001A48")]
		[Address(RVA = "0x115FCEC", Offset = "0x115FCEC", VA = "0x115FCEC")]
		public CharacterStencilSetter()
		{
		}
	}
	[Token(Token = "0x2000703")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xBCB908", Offset = "0xBCB908")]
	public class CharacterVRIKController : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000704")]
		private class VRIKClassData
		{
			[Token(Token = "0x400181F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public PlayerClassConfigurationAsset classAsset;

			[Token(Token = "0x4001820")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public RuntimeAnimatorController animatorController;

			[Token(Token = "0x6001A54")]
			[Address(RVA = "0x10255EC", Offset = "0x10255EC", VA = "0x10255EC")]
			public VRIKClassData()
			{
			}
		}

		[Token(Token = "0x4001810")]
		private const float DeathBlendTime = 0.5f;

		[Token(Token = "0x4001811")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private BoundValue<bool> isDead;

		[Token(Token = "0x4001812")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform headVRIKHandle;

		[Token(Token = "0x4001813")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform leftHandVRIKHandle;

		[Token(Token = "0x4001814")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Transform rightHandVRIKHandle;

		[Token(Token = "0x4001815")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private VRIKClassData[] classData;

		[Token(Token = "0x4001816")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private VRIKClassData _activeClassData;

		[Token(Token = "0x4001817")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private CharacterLoader _characterLoader;

		[Token(Token = "0x4001818")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private ReactiveSubscription _characterSubscription;

		[Token(Token = "0x4001819")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private ThirdPersonCharacter _currentThirdPersonCharacter;

		[Token(Token = "0x400181A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float _elapsedTime;

		[Token(Token = "0x400181B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private Vector3 _lastPosition;

		[Token(Token = "0x400181C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Quaternion _lastRotation;

		[Token(Token = "0x400181D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private float _startingSolverWeight;

		[Token(Token = "0x400181E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private float _targetSolverWeight;

		[Token(Token = "0x6001A49")]
		[Address(RVA = "0x115FD24", Offset = "0x115FD24", VA = "0x115FD24")]
		private void Start()
		{
		}

		[Token(Token = "0x6001A4A")]
		[Address(RVA = "0x115FF28", Offset = "0x115FF28", VA = "0x115FF28")]
		private void Update()
		{
		}

		[Token(Token = "0x6001A4B")]
		[Address(RVA = "0x1160060", Offset = "0x1160060", VA = "0x1160060")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001A4C")]
		[Address(RVA = "0x116021C", Offset = "0x116021C", VA = "0x116021C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001A4D")]
		[Address(RVA = "0x1160228", Offset = "0x1160228", VA = "0x1160228")]
		private void OnCharacterDeadChanged([AttributeAttribute(Name = "TupleElementNamesAttribute", RVA = "0xBE4F5C", Offset = "0xBE4F5C")] ((ThirdPersonCharacter, AssetGuid), bool) valueTuple)
		{
		}

		[Token(Token = "0x6001A4E")]
		[Address(RVA = "0x116030C", Offset = "0x116030C", VA = "0x116030C")]
		private void OnCharacterChange((ThirdPersonCharacter, AssetGuid) valueTuple)
		{
		}

		[Token(Token = "0x6001A4F")]
		[Address(RVA = "0x115FF2C", Offset = "0x115FF2C", VA = "0x115FF2C")]
		private void VRIKAnimatorBlendUpdate()
		{
		}

		[Token(Token = "0x6001A50")]
		[Address(RVA = "0x11602F8", Offset = "0x11602F8", VA = "0x11602F8")]
		private void ResetVRIKAnimatorBlend()
		{
		}

		[Token(Token = "0x6001A51")]
		[Address(RVA = "0x1160560", Offset = "0x1160560", VA = "0x1160560")]
		public void ResetVrikSolver()
		{
		}

		[Token(Token = "0x6001A52")]
		[Address(RVA = "0x11600E0", Offset = "0x11600E0", VA = "0x11600E0")]
		private void ApplyVrikPlatformMovement()
		{
		}

		[Token(Token = "0x6001A53")]
		[Address(RVA = "0x116062C", Offset = "0x116062C", VA = "0x116062C")]
		public CharacterVRIKController()
		{
		}
	}
	[Token(Token = "0x2000705")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xBCB968", Offset = "0xBCB968")]
	public class CharacterVisibilityToggle : MonoBehaviour
	{
		[Token(Token = "0x4001821")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private BoundValue<bool> isDeadDissolved;

		[Token(Token = "0x4001822")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private ReactiveSubscription _visibilitySubscription;

		[Token(Token = "0x6001A55")]
		[Address(RVA = "0x1160660", Offset = "0x1160660", VA = "0x1160660")]
		private void Start()
		{
		}

		[Token(Token = "0x6001A56")]
		[Address(RVA = "0x116079C", Offset = "0x116079C", VA = "0x116079C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001A57")]
		[Address(RVA = "0x11607A8", Offset = "0x11607A8", VA = "0x11607A8")]
		private void OnCharacterVisibilityChanged([AttributeAttribute(Name = "TupleElementNamesAttribute", RVA = "0xBE4FF8", Offset = "0xBE4FF8")] (ThirdPersonCharacter, bool) tuple)
		{
		}

		[Token(Token = "0x6001A58")]
		[Address(RVA = "0x1160850", Offset = "0x1160850", VA = "0x1160850")]
		public CharacterVisibilityToggle()
		{
		}
	}
	[Token(Token = "0x2000706")]
	public class ClassIconSets : MonoBehaviour
	{
		[Token(Token = "0x4001823")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Sprite classIcon;

		[Token(Token = "0x4001824")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Sprite classIconCircle;

		[Token(Token = "0x4001825")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Sprite classIconDiamond;

		[Token(Token = "0x6001A59")]
		[Address(RVA = "0x11614E0", Offset = "0x11614E0", VA = "0x11614E0")]
		public Sprite ClassIcon(IconType type)
		{
			return null;
		}

		[Token(Token = "0x6001A5A")]
		[Address(RVA = "0x116158C", Offset = "0x116158C", VA = "0x116158C")]
		public ClassIconSets()
		{
		}
	}
	[Token(Token = "0x2000707")]
	public class DeadCharacter : MonoBehaviour
	{
		[Token(Token = "0x4001826")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly int IsActiveAnimParam;

		[Token(Token = "0x4001827")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private EntityView playerEntityView;

		[Token(Token = "0x4001828")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Animator deadPlayerAnimator;

		[Token(Token = "0x6001A5B")]
		[Address(RVA = "0x116ECEC", Offset = "0x116ECEC", VA = "0x116ECEC")]
		private void Update()
		{
		}

		[Token(Token = "0x6001A5C")]
		[Address(RVA = "0x116F060", Offset = "0x116F060", VA = "0x116F060")]
		public DeadCharacter()
		{
		}
	}
	[Token(Token = "0x2000708")]
	public class FirstPersonCharacter : MonoBehaviour
	{
		[Token(Token = "0x4001829")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Cortopia.Scripts.CustomAttributes.ReadOnly]
		[SerializeField]
		private Cortopia.Scripts.Players.Player player;

		[Token(Token = "0x400182A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Animator animator;

		[Token(Token = "0x400182B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Wand wand;

		[Token(Token = "0x400182C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GrabbableReparentSocket grabSocket;

		[Token(Token = "0x400182D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int _currentSpellIndex;

		[Token(Token = "0x400182E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float _grabAxis;

		[Token(Token = "0x400182F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private XRNode _hand;

		[Token(Token = "0x4001830")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private bool _hasFiredTeleport;

		[Token(Token = "0x4001831")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
		private bool _hasSpellCard;

		[Token(Token = "0x4001832")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x46")]
		private bool _hasSpellCaster;

		[Token(Token = "0x4001833")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float _triggerAxis;

		[Token(Token = "0x4001834")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Transform _visualEffectsOriginalParent;

		[Token(Token = "0x170004BA")]
		private Cortopia.Scripts.Players.Player RealPlayer
		{
			[Token(Token = "0x6001A5E")]
			[Address(RVA = "0xF9D10C", Offset = "0xF9D10C", VA = "0xF9D10C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004BB")]
		private bool IsLocal
		{
			[Token(Token = "0x6001A5F")]
			[Address(RVA = "0xF9D2C8", Offset = "0xF9D2C8", VA = "0xF9D2C8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001A60")]
		[Address(RVA = "0xF9D3BC", Offset = "0xF9D3BC", VA = "0xF9D3BC")]
		private void Update()
		{
		}

		[Token(Token = "0x6001A61")]
		[Address(RVA = "0xF9DC88", Offset = "0xF9DC88", VA = "0xF9DC88")]
		private void Start()
		{
		}

		[Token(Token = "0x6001A62")]
		[Address(RVA = "0xF9DD6C", Offset = "0xF9DD6C", VA = "0xF9DD6C")]
		private void OnSpellCast(EventSpellCast callback)
		{
		}

		[Token(Token = "0x6001A63")]
		[Address(RVA = "0xF9DE54", Offset = "0xF9DE54", VA = "0xF9DE54")]
		private bool EventForMyPlayer(EntityRef spellCaster, Frame frame)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A64")]
		[Address(RVA = "0xF9DF9C", Offset = "0xF9DF9C", VA = "0xF9DF9C")]
		public void Initialize(Cortopia.Scripts.Players.Player newPlayer, XRNode hand, out Transform handSocket)
		{
		}

		[Token(Token = "0x6001A65")]
		[Address(RVA = "0xF9E094", Offset = "0xF9E094", VA = "0xF9E094")]
		public FirstPersonCharacter()
		{
		}
	}
	[Token(Token = "0x2000709")]
	public class QuantumHitReactionVRIK : OffsetModifierVRIK
	{
		[Serializable]
		[Token(Token = "0x200070A")]
		public abstract class Offset
		{
			[Token(Token = "0x4001839")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBD9418", Offset = "0xBD9418")]
			public string name;

			[Token(Token = "0x400183A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[SerializeField]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBD9450", Offset = "0xBD9450")]
			private float crossFadeTime;

			[Token(Token = "0x400183B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD949C", Offset = "0xBD949C")]
			private float <CrossFader>k__BackingField;

			[Token(Token = "0x400183C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD94AC", Offset = "0xBD94AC")]
			private float <Timer>k__BackingField;

			[Token(Token = "0x400183D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD94BC", Offset = "0xBD94BC")]
			private Vector3 <Force>k__BackingField;

			[Token(Token = "0x400183E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBD94CC", Offset = "0xBD94CC")]
			private Vector3 <Point>k__BackingField;

			[Token(Token = "0x400183F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float _length;

			[Token(Token = "0x4001840")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private float _crossFadeSpeed;

			[Token(Token = "0x4001841")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			private float _lastTime;

			[Token(Token = "0x170004BD")]
			protected float CrossFader
			{
				[Token(Token = "0x6001A6C")]
				[Address(RVA = "0x105AA74", Offset = "0x105AA74", VA = "0x105AA74")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE30E4", Offset = "0xBE30E4")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x6001A6D")]
				[Address(RVA = "0x105AA7C", Offset = "0x105AA7C", VA = "0x105AA7C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE30F4", Offset = "0xBE30F4")]
				private set
				{
				}
			}

			[Token(Token = "0x170004BE")]
			protected float Timer
			{
				[Token(Token = "0x6001A6E")]
				[Address(RVA = "0x105AA84", Offset = "0x105AA84", VA = "0x105AA84")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE3104", Offset = "0xBE3104")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x6001A6F")]
				[Address(RVA = "0x105AA8C", Offset = "0x105AA8C", VA = "0x105AA8C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE3114", Offset = "0xBE3114")]
				private set
				{
				}
			}

			[Token(Token = "0x170004BF")]
			protected Vector3 Force
			{
				[Token(Token = "0x6001A70")]
				[Address(RVA = "0x105AA94", Offset = "0x105AA94", VA = "0x105AA94")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE3124", Offset = "0xBE3124")]
				get
				{
					return default(Vector3);
				}
				[Token(Token = "0x6001A71")]
				[Address(RVA = "0x105AAA0", Offset = "0x105AAA0", VA = "0x105AAA0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE3134", Offset = "0xBE3134")]
				private set
				{
				}
			}

			[Token(Token = "0x170004C0")]
			protected Vector3 Point
			{
				[Token(Token = "0x6001A72")]
				[Address(RVA = "0x105AAAC", Offset = "0x105AAAC", VA = "0x105AAAC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE3144", Offset = "0xBE3144")]
				get
				{
					return default(Vector3);
				}
				[Token(Token = "0x6001A73")]
				[Address(RVA = "0x105AAB8", Offset = "0x105AAB8", VA = "0x105AAB8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE3154", Offset = "0xBE3154")]
				private set
				{
				}
			}

			[Token(Token = "0x6001A74")]
			[Address(RVA = "0x105AAC4", Offset = "0x105AAC4", VA = "0x105AAC4")]
			public void Hit(Vector3 force, AnimationCurve[] curves, Vector3 point)
			{
			}

			[Token(Token = "0x6001A75")]
			[Address(RVA = "0x105AC0C", Offset = "0x105AC0C", VA = "0x105AC0C")]
			public void Apply(VRIK ik, AnimationCurve[] curves, float weight)
			{
			}

			[Token(Token = "0x6001A76")]
			protected abstract float GetLength(AnimationCurve[] curves);

			[Token(Token = "0x6001A77")]
			protected abstract void CrossFadeStart();

			[Token(Token = "0x6001A78")]
			protected abstract void OnApply(VRIK ik, AnimationCurve[] curves, float weight);

			[Token(Token = "0x6001A79")]
			[Address(RVA = "0x105ACF4", Offset = "0x105ACF4", VA = "0x105ACF4")]
			protected Offset()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200070B")]
		public class PositionOffset : Offset
		{
			[Serializable]
			[Token(Token = "0x200070C")]
			public class PositionOffsetLink
			{
				[Token(Token = "0x4001845")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBD9584", Offset = "0xBD9584")]
				public IKSolverVR.PositionOffset positionOffset;

				[Token(Token = "0x4001846")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
				[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBD95BC", Offset = "0xBD95BC")]
				public float weight;

				[Token(Token = "0x4001847")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				private Vector3 _lastValue;

				[Token(Token = "0x4001848")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
				private Vector3 _current;

				[Token(Token = "0x6001A7E")]
				[Address(RVA = "0x2EDDA74", Offset = "0x2EDDA74", VA = "0x2EDDA74")]
				public void Apply(VRIK ik, Vector3 offset, float crossFader)
				{
				}

				[Token(Token = "0x6001A7F")]
				[Address(RVA = "0x2EDDB04", Offset = "0x2EDDB04", VA = "0x2EDDB04")]
				public void CrossFadeStart()
				{
				}

				[Token(Token = "0x6001A80")]
				[Address(RVA = "0x2EDDB18", Offset = "0x2EDDB18", VA = "0x2EDDB18")]
				public PositionOffsetLink()
				{
				}
			}

			[Token(Token = "0x4001842")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBD94DC", Offset = "0xBD94DC")]
			public int forceDirCurveIndex;

			[Token(Token = "0x4001843")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBD9514", Offset = "0xBD9514")]
			public int upDirCurveIndex;

			[Token(Token = "0x4001844")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBD954C", Offset = "0xBD954C")]
			public PositionOffsetLink[] offsetLinks;

			[Token(Token = "0x6001A7A")]
			[Address(RVA = "0x105AD08", Offset = "0x105AD08", VA = "0x105AD08", Slot = "4")]
			protected override float GetLength(AnimationCurve[] curves)
			{
				return default(float);
			}

			[Token(Token = "0x6001A7B")]
			[Address(RVA = "0x105AEB8", Offset = "0x105AEB8", VA = "0x105AEB8", Slot = "5")]
			protected override void CrossFadeStart()
			{
			}

			[Token(Token = "0x6001A7C")]
			[Address(RVA = "0x105AF24", Offset = "0x105AF24", VA = "0x105AF24", Slot = "6")]
			protected override void OnApply(VRIK ik, AnimationCurve[] curves, float weight)
			{
			}

			[Token(Token = "0x6001A7D")]
			[Address(RVA = "0x105B0C4", Offset = "0x105B0C4", VA = "0x105B0C4")]
			public PositionOffset()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200070D")]
		public class RotationOffset : Offset
		{
			[Serializable]
			[Token(Token = "0x200070E")]
			public class RotationOffsetLink
			{
				[Token(Token = "0x400184D")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBD96D4", Offset = "0xBD96D4")]
				public IKSolverVR.RotationOffset rotationOffset;

				[Token(Token = "0x400184E")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
				[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBD970C", Offset = "0xBD970C")]
				[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBD970C", Offset = "0xBD970C")]
				public float weight;

				[Token(Token = "0x400184F")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				private Quaternion _lastValue;

				[Token(Token = "0x4001850")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
				private Quaternion _current;

				[Token(Token = "0x6001A85")]
				[Address(RVA = "0x2EDDB20", Offset = "0x2EDDB20", VA = "0x2EDDB20")]
				public void Apply(VRIK ik, Quaternion offset, float crossFader)
				{
				}

				[Token(Token = "0x6001A86")]
				[Address(RVA = "0x2EDDBFC", Offset = "0x2EDDBFC", VA = "0x2EDDBFC")]
				public void CrossFadeStart()
				{
				}

				[Token(Token = "0x6001A87")]
				[Address(RVA = "0x2EDDC08", Offset = "0x2EDDC08", VA = "0x2EDDC08")]
				public RotationOffsetLink()
				{
				}
			}

			[Token(Token = "0x4001849")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBD95F4", Offset = "0xBD95F4")]
			public Vector3 centerOfMass;

			[Token(Token = "0x400184A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xBD962C", Offset = "0xBD962C")]
			public GameObject hitGameObject;

			[Token(Token = "0x400184B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBD9664", Offset = "0xBD9664")]
			public int curveIndex;

			[Token(Token = "0x400184C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBD969C", Offset = "0xBD969C")]
			public RotationOffsetLink[] offsetLinks;

			[Token(Token = "0x6001A81")]
			[Address(RVA = "0x105B0E0", Offset = "0x105B0E0", VA = "0x105B0E0", Slot = "4")]
			protected override float GetLength(AnimationCurve[] curves)
			{
				return default(float);
			}

			[Token(Token = "0x6001A82")]
			[Address(RVA = "0x105B1C4", Offset = "0x105B1C4", VA = "0x105B1C4", Slot = "5")]
			protected override void CrossFadeStart()
			{
			}

			[Token(Token = "0x6001A83")]
			[Address(RVA = "0x105B230", Offset = "0x105B230", VA = "0x105B230", Slot = "6")]
			protected override void OnApply(VRIK ik, AnimationCurve[] curves, float weight)
			{
			}

			[Token(Token = "0x6001A84")]
			[Address(RVA = "0x105B3E4", Offset = "0x105B3E4", VA = "0x105B3E4")]
			public RotationOffset()
			{
			}
		}

		[Token(Token = "0x4001835")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Cortopia.Scripts.Players.Player _player;

		[Token(Token = "0x4001836")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public AnimationCurve[] offsetCurves;

		[Token(Token = "0x4001837")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBD93A8", Offset = "0xBD93A8")]
		public PositionOffset[] positionOffsets;

		[Token(Token = "0x4001838")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xBD93E0", Offset = "0xBD93E0")]
		public RotationOffset[] rotationOffsets;

		[Token(Token = "0x170004BC")]
		private Cortopia.Scripts.Players.Player RealPlayer
		{
			[Token(Token = "0x6001A66")]
			[Address(RVA = "0x1126AA8", Offset = "0x1126AA8", VA = "0x1126AA8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001A67")]
		[Address(RVA = "0x1126B98", Offset = "0x1126B98", VA = "0x1126B98")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001A68")]
		[Address(RVA = "0x1126C7C", Offset = "0x1126C7C", VA = "0x1126C7C")]
		public void SetPlayer(Cortopia.Scripts.Players.Player player)
		{
		}

		[Token(Token = "0x6001A69")]
		[Address(RVA = "0x1126C84", Offset = "0x1126C84", VA = "0x1126C84")]
		private void OnHitBy(EventHitBy callback)
		{
		}

		[Token(Token = "0x6001A6A")]
		[Address(RVA = "0x1126F50", Offset = "0x1126F50", VA = "0x1126F50", Slot = "4")]
		protected override void OnModifyOffset()
		{
		}

		[Token(Token = "0x6001A6B")]
		[Address(RVA = "0x1127024", Offset = "0x1127024", VA = "0x1127024")]
		public QuantumHitReactionVRIK()
		{
		}
	}
	[Token(Token = "0x200070F")]
	public class RemoteVRIKHandOffsetController : MonoBehaviour
	{
		[Token(Token = "0x4001851")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private BoundValue<Cortopia.Scripts.Players.Player> player;

		[Token(Token = "0x4001852")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Side hand;

		[Token(Token = "0x4001853")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private float lerpTime;

		[Token(Token = "0x4001854")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AnimationCurve lerpCurve;

		[Token(Token = "0x4001855")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool _cachedHasWand;

		[Token(Token = "0x4001856")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float _elapsedTime;

		[Token(Token = "0x4001857")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool _hasFinalPosition;

		[Token(Token = "0x6001A88")]
		[Address(RVA = "0x11F1AC0", Offset = "0x11F1AC0", VA = "0x11F1AC0")]
		private void Update()
		{
		}

		[Token(Token = "0x6001A89")]
		[Address(RVA = "0x11F1ED0", Offset = "0x11F1ED0", VA = "0x11F1ED0")]
		public RemoteVRIKHandOffsetController()
		{
		}
	}
	[Token(Token = "0x2000710")]
	public class SaveSpellPickingToLoadout : MonoBehaviour
	{
		[Token(Token = "0x2000711")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCB9C8", Offset = "0xBCB9C8")]
		private sealed class <>c__DisplayClass1_0
		{
			[Token(Token = "0x4001858")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public PlayerSelectedClass selectedClass;

			[Token(Token = "0x6001A8D")]
			[Address(RVA = "0x105EBCC", Offset = "0x105EBCC", VA = "0x105EBCC")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x6001A8E")]
			[Address(RVA = "0x105EBD4", Offset = "0x105EBD4", VA = "0x105EBD4")]
			internal bool <OnSpellPickerClosed>b__0(EntitledPlayerClass x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001A8A")]
		[Address(RVA = "0x11F52FC", Offset = "0x11F52FC", VA = "0x11F52FC")]
		private void Start()
		{
		}

		[Token(Token = "0x6001A8B")]
		[Address(RVA = "0x11F53E0", Offset = "0x11F53E0", VA = "0x11F53E0")]
		private static void OnSpellPickerClosed(EventSpellPickerClosed callback)
		{
		}

		[Token(Token = "0x6001A8C")]
		[Address(RVA = "0x11F5798", Offset = "0x11F5798", VA = "0x11F5798")]
		public SaveSpellPickingToLoadout()
		{
		}
	}
	[Token(Token = "0x2000712")]
	public class ShootingRangeDummy : MonoBehaviour
	{
		[Token(Token = "0x4001859")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly int AnimIsActive;

		[Token(Token = "0x400185A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static readonly int AnimHitHorizontal;

		[Token(Token = "0x400185B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly int AnimHitVertical;

		[Token(Token = "0x400185C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private static readonly int AnimHit;

		[Token(Token = "0x400185D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private EntityView dummyEntityView;

		[Token(Token = "0x400185E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Animator dummyAnimator;

		[Token(Token = "0x400185F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private EventKey _lastEventKey;

		[Token(Token = "0x6001A8F")]
		[Address(RVA = "0x11F8DF0", Offset = "0x11F8DF0", VA = "0x11F8DF0")]
		private void Start()
		{
		}

		[Token(Token = "0x6001A90")]
		[Address(RVA = "0x11F8F8C", Offset = "0x11F8F8C", VA = "0x11F8F8C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001A91")]
		[Address(RVA = "0x11F900C", Offset = "0x11F900C", VA = "0x11F900C")]
		private void OnDamageTakenEvent(EventHitBy eventDamage)
		{
		}

		[Token(Token = "0x6001A92")]
		[Address(RVA = "0x11F91A0", Offset = "0x11F91A0", VA = "0x11F91A0")]
		private void OnEventCancelled(CallbackEventCanceled callback)
		{
		}

		[Token(Token = "0x6001A93")]
		[Address(RVA = "0x11F927C", Offset = "0x11F927C", VA = "0x11F927C")]
		public ShootingRangeDummy()
		{
		}
	}
	[Token(Token = "0x2000713")]
	public class ThirdPersonCharacter : MonoBehaviour
	{
		[Token(Token = "0x4001860")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly int Alpha;

		[Token(Token = "0x4001861")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static readonly int StencilComparisonProperty;

		[Token(Token = "0x4001862")]
		private const float VisibilityTolerance = 0.01f;

		[Token(Token = "0x4001863")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBD97C0", Offset = "0xBD97C0")]
		private VRIK vrik;

		[Token(Token = "0x4001864")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Animator animator;

		[Token(Token = "0x4001865")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private OutlineHandler outlineHandler;

		[Token(Token = "0x4001866")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBD982C", Offset = "0xBD982C")]
		private Transform leftHandSocket;

		[Token(Token = "0x4001867")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Transform rightHandSocket;

		[Token(Token = "0x4001868")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBD9888", Offset = "0xBD9888")]
		private LODGroup lodGroup;

		[Token(Token = "0x4001869")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private SkinnedMeshRenderer[] lodRenderers;

		[Token(Token = "0x400186A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Material[] _charMats;

		[Token(Token = "0x400186B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Transform _leftSocketProp;

		[Token(Token = "0x400186C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Transform _rightSocketProp;

		[Token(Token = "0x170004C1")]
		public VRIK VRIK
		{
			[Token(Token = "0x6001A95")]
			[Address(RVA = "0x1155B5C", Offset = "0x1155B5C", VA = "0x1155B5C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004C2")]
		public Animator Animator
		{
			[Token(Token = "0x6001A96")]
			[Address(RVA = "0x1155B64", Offset = "0x1155B64", VA = "0x1155B64")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004C3")]
		public OutlineType CurrentOutlineType
		{
			[Token(Token = "0x6001A97")]
			[Address(RVA = "0x1155B6C", Offset = "0x1155B6C", VA = "0x1155B6C")]
			get
			{
				return default(OutlineType);
			}
		}

		[Token(Token = "0x6001A98")]
		[Address(RVA = "0x1155BF4", Offset = "0x1155BF4", VA = "0x1155BF4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001A99")]
		[Address(RVA = "0x1155BF8", Offset = "0x1155BF8", VA = "0x1155BF8")]
		private void InitMaterials()
		{
		}

		[Token(Token = "0x6001A9A")]
		[Address(RVA = "0x1155CFC", Offset = "0x1155CFC", VA = "0x1155CFC")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001A9B")]
		[Address(RVA = "0x1155DC0", Offset = "0x1155DC0", VA = "0x1155DC0")]
		public void ActivateLODSystem()
		{
		}

		[Token(Token = "0x6001A9C")]
		[Address(RVA = "0x1155E54", Offset = "0x1155E54", VA = "0x1155E54")]
		public void ForceSetLODLevel(int forcedLODLevel)
		{
		}

		[Token(Token = "0x6001A9D")]
		[Address(RVA = "0x1155EF8", Offset = "0x1155EF8", VA = "0x1155EF8")]
		public void SetRuntimeAnimator(RuntimeAnimatorController runtimeAnimatorController)
		{
		}

		[Token(Token = "0x6001A9E")]
		[Address(RVA = "0x1155F40", Offset = "0x1155F40", VA = "0x1155F40")]
		public void ToggleCulling(bool cullingEnabled)
		{
		}

		[Token(Token = "0x6001A9F")]
		[Address(RVA = "0x1155FDC", Offset = "0x1155FDC", VA = "0x1155FDC")]
		public void SetOutlineType(OutlineType type)
		{
		}

		[Token(Token = "0x6001AA0")]
		[Address(RVA = "0x1155FF8", Offset = "0x1155FF8", VA = "0x1155FF8")]
		public void SetCharacterDissolve(float normalizedAlpha)
		{
		}

		[Token(Token = "0x6001AA1")]
		[Address(RVA = "0x11561DC", Offset = "0x11561DC", VA = "0x11561DC")]
		public void SetStencilComparison(CompareFunction compareFunction, int renderQueue)
		{
		}

		[Token(Token = "0x6001AA2")]
		[Address(RVA = "0x11562DC", Offset = "0x11562DC", VA = "0x11562DC")]
		public void AttachToSocket(BodyPart bodyPart, Transform objectToAttach)
		{
		}

		[Token(Token = "0x6001AA3")]
		[Address(RVA = "0x1156464", Offset = "0x1156464", VA = "0x1156464")]
		public ThirdPersonCharacter()
		{
		}
	}
}
namespace Cortopia.Scripts.Enums
{
	[Token(Token = "0x2000714")]
	public enum ClassType
	{
		[Token(Token = "0x400186E")]
		Damage,
		[Token(Token = "0x400186F")]
		Control,
		[Token(Token = "0x4001870")]
		Support
	}
	[Token(Token = "0x2000715")]
	public enum ElementColorVariant
	{
		[Token(Token = "0x4001872")]
		Primary,
		[Token(Token = "0x4001873")]
		Secondary,
		[Token(Token = "0x4001874")]
		Tertiary,
		[Token(Token = "0x4001875")]
		Inactive
	}
	[Token(Token = "0x2000716")]
	[Flags]
	public enum FriendStatus
	{
		[Token(Token = "0x4001877")]
		Friend = 1,
		[Token(Token = "0x4001878")]
		Online = 2,
		[Token(Token = "0x4001879")]
		Favorite = 4,
		[Token(Token = "0x400187A")]
		InParty = 8
	}
	[Token(Token = "0x2000717")]
	[Flags]
	public enum HandButton
	{
		[Token(Token = "0x400187C")]
		PrimaryButton = 1,
		[Token(Token = "0x400187D")]
		SecondaryButton = 2,
		[Token(Token = "0x400187E")]
		MenuButton = 4,
		[Token(Token = "0x400187F")]
		TriggerButton = 8,
		[Token(Token = "0x4001880")]
		GrabButton = 0x10,
		[Token(Token = "0x4001881")]
		None = 0,
		[Token(Token = "0x4001882")]
		All = -1
	}
	[Token(Token = "0x2000718")]
	public enum IconType
	{
		[Token(Token = "0x4001884")]
		Normal,
		[Token(Token = "0x4001885")]
		Circle,
		[Token(Token = "0x4001886")]
		Diamond
	}
	[Token(Token = "0x2000719")]
	public enum MessageType
	{
		[Token(Token = "0x4001888")]
		String,
		[Token(Token = "0x4001889")]
		RoundOver,
		[Token(Token = "0x400188A")]
		TeamSwitch,
		[Token(Token = "0x400188B")]
		MatchOver
	}
	[Token(Token = "0x200071A")]
	public enum OutlineType
	{
		[Token(Token = "0x400188D")]
		None,
		[Token(Token = "0x400188E")]
		Friendly,
		[Token(Token = "0x400188F")]
		Hostile
	}
	[Token(Token = "0x200071B")]
	public enum PlayerRank
	{
		[Token(Token = "0x4001891")]
		Bronze,
		[Token(Token = "0x4001892")]
		Silver,
		[Token(Token = "0x4001893")]
		Gold,
		[Token(Token = "0x4001894")]
		Platinum,
		[Token(Token = "0x4001895")]
		Diamond,
		[Token(Token = "0x4001896")]
		GrandMaster
	}
	[Token(Token = "0x200071C")]
	public enum ProgressionUpdateState
	{
		[Token(Token = "0x4001898")]
		UpdateLevel,
		[Token(Token = "0x4001899")]
		UpdateChallenges,
		[Token(Token = "0x400189A")]
		UpdateRewards,
		[Token(Token = "0x400189B")]
		Stopped
	}
	[Token(Token = "0x200071D")]
	public enum SpellCategory
	{
		[Token(Token = "0x400189D")]
		Offensive,
		[Token(Token = "0x400189E")]
		Defensive,
		[Token(Token = "0x400189F")]
		Support
	}
	[Token(Token = "0x200071E")]
	public enum SpellElement
	{
		[Token(Token = "0x40018A1")]
		None,
		[Token(Token = "0x40018A2")]
		Fire,
		[Token(Token = "0x40018A3")]
		Ice,
		[Token(Token = "0x40018A4")]
		Lightning,
		[Token(Token = "0x40018A5")]
		Nature,
		[Token(Token = "0x40018A6")]
		Arcane
	}
	[Token(Token = "0x200071F")]
	public enum SubtitleType
	{
		[Token(Token = "0x40018A8")]
		None,
		[Token(Token = "0x40018A9")]
		Normal,
		[Token(Token = "0x40018AA")]
		Important
	}
	[Token(Token = "0x2000720")]
	public enum TeleportState
	{
		[Token(Token = "0x40018AC")]
		InActive,
		[Token(Token = "0x40018AD")]
		Searching,
		[Token(Token = "0x40018AE")]
		Charging,
		[Token(Token = "0x40018AF")]
		Teleporting
	}
	[Token(Token = "0x2000721")]
	public enum TileState
	{
		[Token(Token = "0x40018B1")]
		InActive,
		[Token(Token = "0x40018B2")]
		Valid,
		[Token(Token = "0x40018B3")]
		InValid,
		[Token(Token = "0x40018B4")]
		PlayerOccupied
	}
	[Token(Token = "0x2000722")]
	public enum TraitType
	{
		[Token(Token = "0x40018B6")]
		None,
		[Token(Token = "0x40018B7")]
		Healing,
		[Token(Token = "0x40018B8")]
		CooldownReduction,
		[Token(Token = "0x40018B9")]
		Armor
	}
	[Token(Token = "0x2000723")]
	public enum UpdateMode
	{
		[Token(Token = "0x40018BB")]
		Update,
		[Token(Token = "0x40018BC")]
		LateUpdate,
		[Token(Token = "0x40018BD")]
		BeforeRender
	}
	[Token(Token = "0x2000724")]
	[Flags]
	public enum WandSettings
	{
		[Token(Token = "0x40018BF")]
		IsGhostWand = 1,
		[Token(Token = "0x40018C0")]
		ShowUI = 2,
		[Token(Token = "0x40018C1")]
		UpdateGameState = 4,
		[Token(Token = "0x40018C2")]
		ShowVialMagicVFX = 8,
		[Token(Token = "0x40018C3")]
		DoNotUseLocalIfPlayerNull = 0x10,
		[Token(Token = "0x40018C4")]
		ShowVial = 0x20,
		[Token(Token = "0x40018C5")]
		UpdateVisibility = 0x40
	}
	[Token(Token = "0x2000725")]
	public enum WandSlotType
	{
		[Token(Token = "0x40018C7")]
		PrimarySpell,
		[Token(Token = "0x40018C8")]
		SecondarySpell
	}
	[Token(Token = "0x2000726")]
	public enum WinState
	{
		[Token(Token = "0x40018CA")]
		Draw,
		[Token(Token = "0x40018CB")]
		Win,
		[Token(Token = "0x40018CC")]
		Lose
	}
}
namespace Cortopia.Scripts.DebugTools
{
	[Token(Token = "0x2000727")]
	public class DebugCamera : MonoBehaviour
	{
		[Token(Token = "0x40018CD")]
		private const string MouseAxisX = "Mouse X";

		[Token(Token = "0x40018CE")]
		private const string MouseAxisY = "Mouse Y";

		[Token(Token = "0x40018CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform centerEye;

		[Token(Token = "0x40018D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform leftHand;

		[Token(Token = "0x40018D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform rightHand;

		[Token(Token = "0x40018D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float _mouseX;

		[Token(Token = "0x40018D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float _mouseY;

		[Token(Token = "0x6001AA5")]
		[Address(RVA = "0x116F0D4", Offset = "0x116F0D4", VA = "0x116F0D4")]
		private void Update()
		{
		}

		[Token(Token = "0x6001AA6")]
		[Address(RVA = "0x116F3F0", Offset = "0x116F3F0", VA = "0x116F3F0")]
		public Transform GetTransform(BodyPart bodyPart)
		{
			return null;
		}

		[Token(Token = "0x6001AA7")]
		[Address(RVA = "0x116F0F8", Offset = "0x116F0F8", VA = "0x116F0F8")]
		private void MoveCamera()
		{
		}

		[Token(Token = "0x6001AA8")]
		[Address(RVA = "0x116F2DC", Offset = "0x116F2DC", VA = "0x116F2DC")]
		private void RotateCamera()
		{
		}

		[Token(Token = "0x6001AA9")]
		[Address(RVA = "0x116F434", Offset = "0x116F434", VA = "0x116F434")]
		public DebugCamera()
		{
		}
	}
	[Token(Token = "0x2000728")]
	public class DebugEventsLog : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000729")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCBA08", Offset = "0xBCBA08")]
		private sealed class <>c
		{
			[Token(Token = "0x40018D8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40018D9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<string, string, string> <>9__7_0;

			[Token(Token = "0x6001AB5")]
			[Address(RVA = "0x1027F84", Offset = "0x1027F84", VA = "0x1027F84")]
			public <>c()
			{
			}

			[Token(Token = "0x6001AB6")]
			[Address(RVA = "0x1027F8C", Offset = "0x1027F8C", VA = "0x1027F8C")]
			internal string <UpdateLog>b__7_0(string current, string m)
			{
				return null;
			}
		}

		[Token(Token = "0x40018D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TextMeshProUGUI logTextField;

		[Token(Token = "0x40018D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Transform _headSync;

		[Token(Token = "0x40018D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 _currentPosition;

		[Token(Token = "0x40018D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private List<string> _messages;

		[Token(Token = "0x6001AAA")]
		[Address(RVA = "0x1172688", Offset = "0x1172688", VA = "0x1172688")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001AAB")]
		[Address(RVA = "0x11726F8", Offset = "0x11726F8", VA = "0x11726F8")]
		private void Update()
		{
		}

		[Token(Token = "0x6001AAC")]
		[Address(RVA = "0x11728CC", Offset = "0x11728CC", VA = "0x11728CC")]
		private void Start()
		{
		}

		[Token(Token = "0x6001AAD")]
		[Address(RVA = "0x1172BE0", Offset = "0x1172BE0", VA = "0x1172BE0")]
		private void UpdateLog(string message)
		{
		}

		[Token(Token = "0x6001AAE")]
		[Address(RVA = "0x1172DEC", Offset = "0x1172DEC", VA = "0x1172DEC")]
		private void OnHealedBy(EventHealedBy callback)
		{
		}

		[Token(Token = "0x6001AAF")]
		[Address(RVA = "0x1172EB0", Offset = "0x1172EB0", VA = "0x1172EB0")]
		private void OnHitBy(EventHitBy callback)
		{
		}

		[Token(Token = "0x6001AB0")]
		[Address(RVA = "0x1172F74", Offset = "0x1172F74", VA = "0x1172F74")]
		private void OnAssistant(EventAssistantEvent callback)
		{
		}

		[Token(Token = "0x6001AB1")]
		[Address(RVA = "0x1173038", Offset = "0x1173038", VA = "0x1173038")]
		private void OnKillEvent(EventPlayerDied callback)
		{
		}

		[Token(Token = "0x6001AB2")]
		[Address(RVA = "0x11730FC", Offset = "0x11730FC", VA = "0x11730FC")]
		private void OnChangeHealth(EventChangeHealth callback)
		{
		}

		[Token(Token = "0x6001AB3")]
		[Address(RVA = "0x11731D0", Offset = "0x11731D0", VA = "0x11731D0")]
		public DebugEventsLog()
		{
		}
	}
	[Token(Token = "0x200072A")]
	public class DebugFPSCounter : MonoBehaviour
	{
		[Token(Token = "0x200072B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCBA18", Offset = "0xBCBA18")]
		private sealed class <FPSCounter>d__7 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40018DE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40018DF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40018E0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public DebugFPSCounter <>4__this;

			[Token(Token = "0x40018E1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <prevFrames>5__2;

			[Token(Token = "0x170004C4")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001ABF")]
				[Address(RVA = "0x1028150", Offset = "0x1028150", VA = "0x1028150", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004C5")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001AC1")]
				[Address(RVA = "0x1028198", Offset = "0x1028198", VA = "0x1028198", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001ABC")]
			[Address(RVA = "0x1027FEC", Offset = "0x1027FEC", VA = "0x1027FEC")]
			[DebuggerHidden]
			public <FPSCounter>d__7(int <>1__state)
			{
			}

			[Token(Token = "0x6001ABD")]
			[Address(RVA = "0x1028018", Offset = "0x1028018", VA = "0x1028018", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001ABE")]
			[Address(RVA = "0x102801C", Offset = "0x102801C", VA = "0x102801C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001AC0")]
			[Address(RVA = "0x1028158", Offset = "0x1028158", VA = "0x1028158", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40018DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TMP_Text textField;

		[Token(Token = "0x40018DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float sampleTime;

		[Token(Token = "0x40018DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private bool _isActive;

		[Token(Token = "0x40018DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private WaitForSeconds _waitForSeconds;

		[Token(Token = "0x6001AB7")]
		[Address(RVA = "0x1039AE0", Offset = "0x1039AE0", VA = "0x1039AE0")]
		private void Start()
		{
		}

		[Token(Token = "0x6001AB8")]
		[Address(RVA = "0x1039B78", Offset = "0x1039B78", VA = "0x1039B78")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001AB9")]
		[Address(RVA = "0x1039C6C", Offset = "0x1039C6C", VA = "0x1039C6C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001ABA")]
		[Address(RVA = "0x1039C00", Offset = "0x1039C00", VA = "0x1039C00")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xBE3164", Offset = "0xBE3164")]
		private IEnumerator FPSCounter()
		{
			return null;
		}

		[Token(Token = "0x6001ABB")]
		[Address(RVA = "0x1039C78", Offset = "0x1039C78", VA = "0x1039C78")]
		public DebugFPSCounter()
		{
		}
	}
	[Token(Token = "0x200072C")]
	public class DebugPlayerStats : MonoBehaviour
	{
		[Token(Token = "0x200072D")]
		private enum UserType
		{
			[Token(Token = "0x40018EF")]
			None,
			[Token(Token = "0x40018F0")]
			Bot,
			[Token(Token = "0x40018F1")]
			Self,
			[Token(Token = "0x40018F2")]
			Other
		}

		[Token(Token = "0x200072E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCBA28", Offset = "0xBCBA28")]
		private sealed class <>c__DisplayClass20_0
		{
			[Token(Token = "0x40018F3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string entityId;

			[Token(Token = "0x6001ACC")]
			[Address(RVA = "0x10281A0", Offset = "0x10281A0", VA = "0x10281A0")]
			public <>c__DisplayClass20_0()
			{
			}

			[Token(Token = "0x6001ACD")]
			[Address(RVA = "0x10281A8", Offset = "0x10281A8", VA = "0x10281A8")]
			internal bool <UserStatusChanged>b__0(UserStatus x)
			{
				return default(bool);
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x200072F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCBA38", Offset = "0xBCBA38")]
		private struct <SetAvatarImage>d__22 : IAsyncStateMachine
		{
			[Token(Token = "0x40018F4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40018F5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x40018F6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string url;

			[Token(Token = "0x40018F7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public DebugPlayerStats <>4__this;

			[Token(Token = "0x40018F8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private TaskAwaiter<OrientedTexture2D> <>u__1;

			[Token(Token = "0x6001ACE")]
			[Address(RVA = "0x10281BC", Offset = "0x10281BC", VA = "0x10281BC", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001ACF")]
			[Address(RVA = "0x10284D4", Offset = "0x10284D4", VA = "0x10284D4", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x40018E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private BoundValue<EntityRef> playerEntity;

		[Token(Token = "0x40018E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private PlayFabMatchUsersListener playFabMatchUsersListener;

		[Token(Token = "0x40018E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private RawImage avatarImage;

		[Token(Token = "0x40018E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Texture2D defaultAvatar;

		[Token(Token = "0x40018E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Texture2D botAvatar;

		[Token(Token = "0x40018E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private DisplayPlayerName playerName;

		[Token(Token = "0x40018E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private ReactiveSource<string> _currentHealth;

		[Token(Token = "0x40018E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private ReactiveSource<string> _maxHealth;

		[Token(Token = "0x40018EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private readonly ReactiveSource<string> _entityId;

		[Token(Token = "0x40018EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private readonly ReactiveSource<UserType> _userType;

		[Token(Token = "0x40018EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private ReactiveSubscription _userStatusSubscription;

		[Token(Token = "0x40018ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private ReactiveSubscription _userTypeSubscription;

		[Token(Token = "0x170004C6")]
		public Reactive<string> CurrentHealth
		{
			[Token(Token = "0x6001AC2")]
			[Address(RVA = "0x103A280", Offset = "0x103A280", VA = "0x103A280")]
			get
			{
				return default(Reactive<string>);
			}
		}

		[Token(Token = "0x170004C7")]
		public Reactive<string> MaxHealth
		{
			[Token(Token = "0x6001AC3")]
			[Address(RVA = "0x103A2F0", Offset = "0x103A2F0", VA = "0x103A2F0")]
			get
			{
				return default(Reactive<string>);
			}
		}

		[Token(Token = "0x6001AC4")]
		[Address(RVA = "0x103A360", Offset = "0x103A360", VA = "0x103A360")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001AC5")]
		[Address(RVA = "0x103A570", Offset = "0x103A570", VA = "0x103A570")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001AC6")]
		[Address(RVA = "0x103A5A0", Offset = "0x103A5A0", VA = "0x103A5A0")]
		private void Update()
		{
		}

		[Token(Token = "0x6001AC7")]
		[Address(RVA = "0x103A9B0", Offset = "0x103A9B0", VA = "0x103A9B0")]
		private void UserStatusChanged(string entityId, GetMatchUsersStatusResult result)
		{
		}

		[Token(Token = "0x6001AC8")]
		[Address(RVA = "0x103AC60", Offset = "0x103AC60", VA = "0x103AC60")]
		private void UserTypeChanged(UserType usertype)
		{
		}

		[Token(Token = "0x6001AC9")]
		[Address(RVA = "0x103AB98", Offset = "0x103AB98", VA = "0x103AB98")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xBE3214", Offset = "0xBE3214")]
		private void SetAvatarImage(string url)
		{
		}

		[Token(Token = "0x6001ACA")]
		[Address(RVA = "0x103AE18", Offset = "0x103AE18", VA = "0x103AE18")]
		public DebugPlayerStats()
		{
		}

		[Token(Token = "0x6001ACB")]
		[Address(RVA = "0x103AF5C", Offset = "0x103AF5C", VA = "0x103AF5C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE3274", Offset = "0xBE3274")]
		private void <OnEnable>b__17_0((string, GetMatchUsersStatusResult) x)
		{
		}
	}
	[Token(Token = "0x2000730")]
	public class DebugQuantumCollision : MonoBehaviour
	{
		[Token(Token = "0x2000731")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCBA48", Offset = "0xBCBA48")]
		private sealed class <>c__DisplayClass5_0
		{
			[Token(Token = "0x40018FD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public HashSet<EntityRef> processedObjects;

			[Token(Token = "0x40018FE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Func<KeyValuePair<EntityRef, GameObject>, bool> <>9__0;

			[Token(Token = "0x6001AD8")]
			[Address(RVA = "0x10284E0", Offset = "0x10284E0", VA = "0x10284E0")]
			public <>c__DisplayClass5_0()
			{
			}

			[Token(Token = "0x6001AD9")]
			[Address(RVA = "0x10284E8", Offset = "0x10284E8", VA = "0x10284E8")]
			internal bool <Update>b__0(KeyValuePair<EntityRef, GameObject> item)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x40018F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Material interactsWithPlayersAndSpells;

		[Token(Token = "0x40018FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Material interactsWithSpells;

		[Token(Token = "0x40018FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private HashSet<MeshRenderer> _disabledRenderers;

		[Token(Token = "0x40018FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Dictionary<EntityRef, GameObject> _displayCollisions;

		[Token(Token = "0x6001AD0")]
		[Address(RVA = "0x103AF98", Offset = "0x103AF98", VA = "0x103AF98")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001AD1")]
		[Address(RVA = "0x103B760", Offset = "0x103B760", VA = "0x103B760")]
		public void Update()
		{
		}

		[Token(Token = "0x6001AD2")]
		[Address(RVA = "0x103C674", Offset = "0x103C674", VA = "0x103C674")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001AD3")]
		[Address(RVA = "0x103B678", Offset = "0x103B678", VA = "0x103B678")]
		private Material GetMaterial(int layer)
		{
			return null;
		}

		[Token(Token = "0x6001AD4")]
		[Address(RVA = "0x103C41C", Offset = "0x103C41C", VA = "0x103C41C")]
		private bool UpdateShapeTransform(Frame frame, Transform child, ref Shape3D shape)
		{
			return default(bool);
		}

		[Token(Token = "0x6001AD5")]
		[Address(RVA = "0x103BFD4", Offset = "0x103BFD4", VA = "0x103BFD4")]
		private static GameObject CreateShape(ref Shape3D shape, Material material, in Frame frame)
		{
			return null;
		}

		[Token(Token = "0x6001AD6")]
		[Address(RVA = "0x103B6F0", Offset = "0x103B6F0", VA = "0x103B6F0")]
		private static void SetMaterial(GameObject collisionObject, Material material)
		{
		}

		[Token(Token = "0x6001AD7")]
		[Address(RVA = "0x103C78C", Offset = "0x103C78C", VA = "0x103C78C")]
		public DebugQuantumCollision()
		{
		}
	}
	[Token(Token = "0x2000732")]
	public class DebugSpellTimes : MonoBehaviour
	{
		[Token(Token = "0x40018FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TMP_Text textField;

		[Token(Token = "0x4001900")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Cortopia.Scripts.Players.Player player;

		[Token(Token = "0x4001901")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Side hand;

		[Token(Token = "0x4001902")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private bool _isActive;

		[Token(Token = "0x4001903")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private WaitForSeconds _waitForSeconds;

		[Token(Token = "0x6001ADA")]
		[Address(RVA = "0x103C898", Offset = "0x103C898", VA = "0x103C898")]
		private void Update()
		{
		}

		[Token(Token = "0x6001ADB")]
		[Address(RVA = "0x103CBE4", Offset = "0x103CBE4", VA = "0x103CBE4")]
		public DebugSpellTimes()
		{
		}
	}
	[Token(Token = "0x2000733")]
	public class DebugVFXTester : MonoBehaviour
	{
		[Token(Token = "0x2000734")]
		private enum SpellState
		{
			[Token(Token = "0x4001917")]
			Charging,
			[Token(Token = "0x4001918")]
			Casting,
			[Token(Token = "0x4001919")]
			Impact
		}

		[Token(Token = "0x4001904")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBD99F4", Offset = "0xBD99F4")]
		[SerializeField]
		private Transform spellFXChargeSocket;

		[Token(Token = "0x4001905")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform spellFXCastingSocket;

		[Token(Token = "0x4001906")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform spellFXProjectileSocket;

		[Token(Token = "0x4001907")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Transform spellFXImpactSocket;

		[Token(Token = "0x4001908")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBD9A70", Offset = "0xBD9A70")]
		[SerializeField]
		private float chargeTime;

		[Token(Token = "0x4001909")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private float projectileLifeTime;

		[Token(Token = "0x400190A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private float impactLifeTime;

		[Token(Token = "0x400190B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		private float projectileSpeed;

		[Token(Token = "0x400190C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private FPAnimationCurve projectileAcceleration;

		[Token(Token = "0x400190D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBD9AFC", Offset = "0xBD9AFC")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xBD9AFC", Offset = "0xBD9AFC")]
		private float timeScale;

		[Token(Token = "0x400190E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private SpellFXControl _castingParticleControl;

		[Token(Token = "0x400190F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private SpellFXControl _chargingParticleControl;

		[Token(Token = "0x4001910")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private SpellState _currentState;

		[Token(Token = "0x4001911")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private float _elapsedChargeTime;

		[Token(Token = "0x4001912")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private float _elapsedImpactTime;

		[Token(Token = "0x4001913")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private float _elapsedProjectileTime;

		[Token(Token = "0x4001914")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private SpellFXControl _impactParticleControl;

		[Token(Token = "0x4001915")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private SpellFXControl _projectileParticleControl;

		[Token(Token = "0x6001ADC")]
		[Address(RVA = "0x103D424", Offset = "0x103D424", VA = "0x103D424")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001ADD")]
		[Address(RVA = "0x103D4D8", Offset = "0x103D4D8", VA = "0x103D4D8")]
		private void Update()
		{
		}

		[Token(Token = "0x6001ADE")]
		[Address(RVA = "0x103D7C0", Offset = "0x103D7C0", VA = "0x103D7C0")]
		private void SetState(SpellState newState)
		{
		}

		[Token(Token = "0x6001ADF")]
		[Address(RVA = "0x103D8BC", Offset = "0x103D8BC", VA = "0x103D8BC")]
		private void EnterState(SpellState state)
		{
		}

		[Token(Token = "0x6001AE0")]
		[Address(RVA = "0x103D7F8", Offset = "0x103D7F8", VA = "0x103D7F8")]
		private void ExitState(SpellState state)
		{
		}

		[Token(Token = "0x6001AE1")]
		[Address(RVA = "0x103D584", Offset = "0x103D584", VA = "0x103D584")]
		private void UpdateState(SpellState state)
		{
		}

		[Token(Token = "0x6001AE2")]
		[Address(RVA = "0x103DA38", Offset = "0x103DA38", VA = "0x103DA38")]
		public DebugVFXTester()
		{
		}
	}
}
namespace Cortopia.Scripts.CustomAttributes
{
	[Token(Token = "0x2000735")]
	public class EnumArrayAttribute : UnityEngine.PropertyAttribute
	{
		[Token(Token = "0x400191A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string[] Names;

		[Token(Token = "0x6001AE3")]
		[Address(RVA = "0x1050894", Offset = "0x1050894", VA = "0x1050894")]
		public EnumArrayAttribute(Type enumType)
		{
		}
	}
	[Token(Token = "0x2000736")]
	public class LayerAttribute : UnityEngine.PropertyAttribute
	{
		[Token(Token = "0x6001AE4")]
		[Address(RVA = "0xF84174", Offset = "0xF84174", VA = "0xF84174")]
		public LayerAttribute()
		{
		}
	}
	[Token(Token = "0x2000737")]
	public class PrefabExclusiveAttribute : UnityEngine.PropertyAttribute
	{
		[Token(Token = "0x6001AE5")]
		[Address(RVA = "0x111B404", Offset = "0x111B404", VA = "0x111B404")]
		public PrefabExclusiveAttribute()
		{
		}
	}
	[Token(Token = "0x2000738")]
	public class ReadOnlyAttribute : UnityEngine.PropertyAttribute
	{
		[Token(Token = "0x6001AE6")]
		[Address(RVA = "0x125A5E0", Offset = "0x125A5E0", VA = "0x125A5E0")]
		public ReadOnlyAttribute()
		{
		}
	}
}
namespace Cortopia.Scripts.Core
{
	[Token(Token = "0x2000739")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBCBA58", Offset = "0xBCBA58")]
	public class BuildSettings : ScriptableObject
	{
		[Token(Token = "0x200073A")]
		public enum Platform
		{
			[Token(Token = "0x400192A")]
			Unknown,
			[Token(Token = "0x400192B")]
			Multiple,
			[Token(Token = "0x400192C")]
			DebugDesktop,
			[Token(Token = "0x400192D")]
			DebugAndroid,
			[Token(Token = "0x400192E")]
			OculusDesktop,
			[Token(Token = "0x400192F")]
			OculusQuest,
			[Token(Token = "0x4001930")]
			SteamVR,
			[Token(Token = "0x4001931")]
			PicoXR
		}

		[Token(Token = "0x400191B")]
		public const string Name = "JawsBuildSettings";

		[Token(Token = "0x400191C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public XRGeneralSettings xrGeneralSettings;

		[Token(Token = "0x400191D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool isLoggingEnabled;

		[Token(Token = "0x400191E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string analyticsEnvironment;

		[Token(Token = "0x400191F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool showDebugTileInfo;

		[Token(Token = "0x4001920")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		public bool showDebugFPSCounter;

		[Token(Token = "0x4001921")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
		public bool simulateBadNetwork;

		[Token(Token = "0x4001922")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x33")]
		public bool instantiateTrailerCamera;

		[Token(Token = "0x4001923")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public bool instantiateTrailerWandCamera;

		[Token(Token = "0x4001924")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private readonly Lazy<Platform> _lazyBuildPlatform;

		[Token(Token = "0x4001925")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float minRealPlayerHeight;

		[Token(Token = "0x4001926")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float maxRealPlayerHeight;

		[Token(Token = "0x4001927")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float realPlayerHeightMeasureTime;

		[Token(Token = "0x4001928")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float realPlayerHeadRadius;

		[Token(Token = "0x170004C8")]
		public Platform BuildPlatform
		{
			[Token(Token = "0x6001AE8")]
			[Address(RVA = "0x1334398", Offset = "0x1334398", VA = "0x1334398")]
			get
			{
				return default(Platform);
			}
		}

		[Token(Token = "0x6001AE7")]
		[Address(RVA = "0x13342AC", Offset = "0x13342AC", VA = "0x13342AC")]
		public BuildSettings()
		{
		}

		[Token(Token = "0x6001AE9")]
		[Address(RVA = "0x13343EC", Offset = "0x13343EC", VA = "0x13343EC")]
		private Platform GetPlatform()
		{
			return default(Platform);
		}

		[Token(Token = "0x6001AEA")]
		[Address(RVA = "0x1334414", Offset = "0x1334414", VA = "0x1334414")]
		public static Platform GetPlatform(IReadOnlyList<XRLoader> providersLoaders)
		{
			return default(Platform);
		}
	}
	[Token(Token = "0x200073B")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBCBAAC", Offset = "0xBCBAAC")]
	public class BuildVersion : ScriptableObject
	{
		[Token(Token = "0x4001932")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string scmVersion;

		[Token(Token = "0x6001AEB")]
		[Address(RVA = "0x1334724", Offset = "0x1334724", VA = "0x1334724")]
		public BuildVersion()
		{
		}
	}
	[Token(Token = "0x200073C")]
	public static class CortopiaPrefs
	{
		[Token(Token = "0x4001933")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool _isDirty;

		[Token(Token = "0x4001934")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static int _changeCount;

		[Token(Token = "0x170004C9")]
		private static bool IsDirty
		{
			[Token(Token = "0x6001AEC")]
			[Address(RVA = "0x1168030", Offset = "0x1168030", VA = "0x1168030")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001AED")]
			[Address(RVA = "0x116807C", Offset = "0x116807C", VA = "0x116807C")]
			set
			{
			}
		}

		[Token(Token = "0x6001AEE")]
		[Address(RVA = "0x11680F0", Offset = "0x11680F0", VA = "0x11680F0")]
		public static bool GetBool(string key, bool defaultValue)
		{
			return default(bool);
		}

		[Token(Token = "0x6001AEF")]
		[Address(RVA = "0x1168114", Offset = "0x1168114", VA = "0x1168114")]
		public static bool GetBool(string key)
		{
			return default(bool);
		}

		[Token(Token = "0x6001AF0")]
		[Address(RVA = "0x1168134", Offset = "0x1168134", VA = "0x1168134")]
		public static int GetInt(string key, int defaultValue)
		{
			return default(int);
		}

		[Token(Token = "0x6001AF1")]
		[Address(RVA = "0x116813C", Offset = "0x116813C", VA = "0x116813C")]
		public static int GetInt(string key)
		{
			return default(int);
		}

		[Token(Token = "0x6001AF2")]
		[Address(RVA = "0x1168144", Offset = "0x1168144", VA = "0x1168144")]
		public static float GetFloat(string key, float defaultValue)
		{
			return default(float);
		}

		[Token(Token = "0x6001AF3")]
		[Address(RVA = "0x116814C", Offset = "0x116814C", VA = "0x116814C")]
		public static float GetFloat(string key)
		{
			return default(float);
		}

		[Token(Token = "0x6001AF4")]
		[Address(RVA = "0x1168154", Offset = "0x1168154", VA = "0x1168154")]
		public static string GetString(string key, string defaultValue)
		{
			return null;
		}

		[Token(Token = "0x6001AF5")]
		[Address(RVA = "0x116815C", Offset = "0x116815C", VA = "0x116815C")]
		public static string GetString(string key)
		{
			return null;
		}

		[Token(Token = "0x6001AF6")]
		public static TEnum GetEnum<TEnum>(string key, TEnum defaultValue)
		{
			return (TEnum)null;
		}

		[Token(Token = "0x6001AF7")]
		public static TEnum GetEnum<TEnum>(string key)
		{
			return (TEnum)null;
		}

		[Token(Token = "0x6001AF8")]
		[Address(RVA = "0x1168164", Offset = "0x1168164", VA = "0x1168164")]
		public static void SetBool(string key, bool value)
		{
		}

		[Token(Token = "0x6001AF9")]
		[Address(RVA = "0x1168184", Offset = "0x1168184", VA = "0x1168184")]
		public static void SetInt(string key, int value)
		{
		}

		[Token(Token = "0x6001AFA")]
		[Address(RVA = "0x11681A0", Offset = "0x11681A0", VA = "0x11681A0")]
		public static void SetFloat(string key, float value)
		{
		}

		[Token(Token = "0x6001AFB")]
		[Address(RVA = "0x11681BC", Offset = "0x11681BC", VA = "0x11681BC")]
		public static void SetString(string key, string value)
		{
		}

		[Token(Token = "0x6001AFC")]
		public static void SetEnum<TEnum>(string key, TEnum value)
		{
		}

		[Token(Token = "0x6001AFD")]
		[Address(RVA = "0x11681D8", Offset = "0x11681D8", VA = "0x11681D8")]
		public static bool HasKey(string key)
		{
			return default(bool);
		}

		[Token(Token = "0x6001AFE")]
		[Address(RVA = "0x11681E0", Offset = "0x11681E0", VA = "0x11681E0")]
		public static void DeleteKey(string key)
		{
		}

		[Token(Token = "0x6001AFF")]
		[Address(RVA = "0x11681E8", Offset = "0x11681E8", VA = "0x11681E8")]
		public static void Save()
		{
		}
	}
	[Token(Token = "0x200073D")]
	public class ForcedSceneLoader : MonoBehaviour
	{
		[Token(Token = "0x200073E")]
		private enum RunnerAffinity
		{
			[Token(Token = "0x400193B")]
			Any,
			[Token(Token = "0x400193C")]
			Online,
			[Token(Token = "0x400193D")]
			Local,
			[Token(Token = "0x400193E")]
			RestartRunner
		}

		[Token(Token = "0x4001935")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private BoundValue<AssetRefMap> sceneToLoad;

		[Token(Token = "0x4001936")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private RunnerAffinity runnerAffinity;

		[Token(Token = "0x4001937")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private bool validateTeams;

		[Token(Token = "0x4001938")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private BoundValue<int> minRequiredPlayers;

		[Token(Token = "0x4001939")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool _shouldLoad;

		[Token(Token = "0x6001B00")]
		[Address(RVA = "0xF9E84C", Offset = "0xF9E84C", VA = "0xF9E84C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001B01")]
		[Address(RVA = "0xF9ED04", Offset = "0xF9ED04", VA = "0xF9ED04")]
		public void ForceLoadScene()
		{
		}

		[Token(Token = "0x6001B02")]
		[Address(RVA = "0xF9ED10", Offset = "0xF9ED10", VA = "0xF9ED10")]
		public ForcedSceneLoader()
		{
		}
	}
	[Token(Token = "0x200073F")]
	public enum GameEvent
	{
		[Token(Token = "0x4001940")]
		None,
		[Token(Token = "0x4001941")]
		ObjectStart,
		[Token(Token = "0x4001942")]
		ObjectDestroy,
		[Token(Token = "0x4001943")]
		ObjectEnable,
		[Token(Token = "0x4001944")]
		ObjectDisable
	}
	[Token(Token = "0x2000740")]
	public class GameInitializer : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000741")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCBB00", Offset = "0xBCBB00")]
		private sealed class <>c
		{
			[Token(Token = "0x400194B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x400194C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<bool> <>9__7_0;

			[Token(Token = "0x400194D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<Reactive<bool>> <>9__7_1;

			[Token(Token = "0x400194E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Func<(bool, bool, bool), bool> <>9__11_0;

			[Token(Token = "0x400194F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static Func<(bool, bool, bool), bool> <>9__13_0;

			[Token(Token = "0x4001950")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public static Func<bool> <>9__15_0;

			[Token(Token = "0x4001951")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public static Func<(bool, IReadOnlyList<EntitledPlayerClass>), bool> <>9__15_2;

			[Token(Token = "0x4001952")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public static Func<Reactive<bool>> <>9__15_1;

			[Token(Token = "0x4001953")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public static Func<IUser, Reactive<bool>> <>9__21_0;

			[Token(Token = "0x4001954")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public static Func<bool, bool> <>9__21_1;

			[Token(Token = "0x4001955")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public static Func<Task<GetMatchResult>> <>9__21_2;

			[Token(Token = "0x6001B13")]
			[Address(RVA = "0x1030BF8", Offset = "0x1030BF8", VA = "0x1030BF8")]
			public <>c()
			{
			}

			[Token(Token = "0x6001B14")]
			[Address(RVA = "0x1030C00", Offset = "0x1030C00", VA = "0x1030C00")]
			internal bool <get_HasConnectionProblems>b__7_0()
			{
				return default(bool);
			}

			[Token(Token = "0x6001B15")]
			[Address(RVA = "0x1030CA0", Offset = "0x1030CA0", VA = "0x1030CA0")]
			internal Reactive<bool> <get_HasConnectionProblems>b__7_1()
			{
				return default(Reactive<bool>);
			}

			[Token(Token = "0x6001B16")]
			[Address(RVA = "0x1030D14", Offset = "0x1030D14", VA = "0x1030D14")]
			internal bool <get_IsLoading>b__11_0((bool, bool, bool) tuple)
			{
				return default(bool);
			}

			[Token(Token = "0x6001B17")]
			[Address(RVA = "0x1030D3C", Offset = "0x1030D3C", VA = "0x1030D3C")]
			internal bool <get_IsFinishedLoading>b__13_0((bool, bool, bool) tuple)
			{
				return default(bool);
			}

			[Token(Token = "0x6001B18")]
			[Address(RVA = "0x1030D64", Offset = "0x1030D64", VA = "0x1030D64")]
			internal bool <get_QuantumAndEvuPreloaded>b__15_0()
			{
				return default(bool);
			}

			[Token(Token = "0x6001B19")]
			[Address(RVA = "0x1030EC8", Offset = "0x1030EC8", VA = "0x1030EC8")]
			internal Reactive<bool> <get_QuantumAndEvuPreloaded>b__15_1()
			{
				return default(Reactive<bool>);
			}

			[Token(Token = "0x6001B1A")]
			[Address(RVA = "0x1031070", Offset = "0x1031070", VA = "0x1031070")]
			internal bool <get_QuantumAndEvuPreloaded>b__15_2((bool, IReadOnlyList<EntitledPlayerClass>) tuple)
			{
				return default(bool);
			}

			[Token(Token = "0x6001B1B")]
			[Address(RVA = "0x1031140", Offset = "0x1031140", VA = "0x1031140")]
			internal Reactive<bool> <CheckExistingMatch>b__21_0(IUser x)
			{
				return default(Reactive<bool>);
			}

			[Token(Token = "0x6001B1C")]
			[Address(RVA = "0x1031210", Offset = "0x1031210", VA = "0x1031210")]
			internal bool <CheckExistingMatch>b__21_1(bool x)
			{
				return default(bool);
			}

			[Token(Token = "0x6001B1D")]
			[Address(RVA = "0x1031218", Offset = "0x1031218", VA = "0x1031218")]
			internal Task<GetMatchResult> <CheckExistingMatch>b__21_2()
			{
				return null;
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000742")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCBB10", Offset = "0xBCBB10")]
		private struct <CheckExistingMatch>d__21 : IAsyncStateMachine
		{
			[Token(Token = "0x4001956")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001957")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4001958")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public GameInitializer <>4__this;

			[Token(Token = "0x4001959")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private TaskAwaiter<bool> <>u__1;

			[Token(Token = "0x400195A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private TaskAwaiter<GetMatchResult> <>u__2;

			[Token(Token = "0x6001B1E")]
			[Address(RVA = "0x1031290", Offset = "0x1031290", VA = "0x1031290", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001B1F")]
			[Address(RVA = "0x1031B00", Offset = "0x1031B00", VA = "0x1031B00", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000743")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCBB20", Offset = "0xBCBB20")]
		private struct <OnQuantumRoomMissing>d__22 : IAsyncStateMachine
		{
			[Token(Token = "0x400195B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x400195C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x400195D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public GameInitializer <>4__this;

			[Token(Token = "0x400195E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x6001B20")]
			[Address(RVA = "0x1031B0C", Offset = "0x1031B0C", VA = "0x1031B0C", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001B21")]
			[Address(RVA = "0x1031E1C", Offset = "0x1031E1C", VA = "0x1031E1C", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4001945")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private PlayableDirector director;

		[Token(Token = "0x4001946")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly ReactiveSource<bool> _hasIntroCompleted;

		[Token(Token = "0x4001947")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly ReactiveSource<bool> _isLoadingPlayFabOrRejoin;

		[Token(Token = "0x4001948")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly ReactiveSource<GetMatchResult> _match;

		[Token(Token = "0x4001949")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private readonly ReactiveTransaction _transaction;

		[Token(Token = "0x400194A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private ReactiveSubscription _reactiveSubscription;

		[Token(Token = "0x170004CA")]
		public Reactive<bool> HasConnectionProblems
		{
			[Token(Token = "0x6001B03")]
			[Address(RVA = "0xFA4BDC", Offset = "0xFA4BDC", VA = "0xFA4BDC")]
			get
			{
				return default(Reactive<bool>);
			}
		}

		[Token(Token = "0x170004CB")]
		public Reactive<bool> HasIntroCompleted
		{
			[Token(Token = "0x6001B04")]
			[Address(RVA = "0xFA4D9C", Offset = "0xFA4D9C", VA = "0xFA4D9C")]
			get
			{
				return default(Reactive<bool>);
			}
		}

		[Token(Token = "0x170004CC")]
		public Reactive<bool> IsLoading
		{
			[Token(Token = "0x6001B05")]
			[Address(RVA = "0xFA4DF0", Offset = "0xFA4DF0", VA = "0xFA4DF0")]
			get
			{
				return default(Reactive<bool>);
			}
		}

		[Token(Token = "0x170004CD")]
		public Reactive<bool> IsFinishedLoading
		{
			[Token(Token = "0x6001B06")]
			[Address(RVA = "0xFA5134", Offset = "0xFA5134", VA = "0xFA5134")]
			get
			{
				return default(Reactive<bool>);
			}
		}

		[Token(Token = "0x170004CE")]
		private static Reactive<bool> QuantumAndEvuPreloaded
		{
			[Token(Token = "0x6001B07")]
			[Address(RVA = "0xFA4F74", Offset = "0xFA4F74", VA = "0xFA4F74")]
			get
			{
				return default(Reactive<bool>);
			}
		}

		[Token(Token = "0x170004CF")]
		public Reactive<GetMatchResult> MatchedMatch
		{
			[Token(Token = "0x6001B08")]
			[Address(RVA = "0xFA52B8", Offset = "0xFA52B8", VA = "0xFA52B8")]
			get
			{
				return default(Reactive<GetMatchResult>);
			}
		}

		[Token(Token = "0x6001B09")]
		[Address(RVA = "0xFA530C", Offset = "0xFA530C", VA = "0xFA530C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001B0A")]
		[Address(RVA = "0xFA54E4", Offset = "0xFA54E4", VA = "0xFA54E4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001B0B")]
		[Address(RVA = "0xFA54F0", Offset = "0xFA54F0", VA = "0xFA54F0")]
		private void OnPlayerCreated(Cortopia.Scripts.Players.Player obj)
		{
		}

		[Token(Token = "0x6001B0C")]
		[Address(RVA = "0xFA5584", Offset = "0xFA5584", VA = "0xFA5584")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xBE3294", Offset = "0xBE3294")]
		private void CheckExistingMatch()
		{
		}

		[Token(Token = "0x6001B0D")]
		[Address(RVA = "0xFA5648", Offset = "0xFA5648", VA = "0xFA5648")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xBE32F4", Offset = "0xBE32F4")]
		public void OnQuantumRoomMissing()
		{
		}

		[Token(Token = "0x6001B0E")]
		[Address(RVA = "0xFA570C", Offset = "0xFA570C", VA = "0xFA570C")]
		public void LoadMainMenu()
		{
		}

		[Token(Token = "0x6001B0F")]
		[Address(RVA = "0xFA579C", Offset = "0xFA579C", VA = "0xFA579C")]
		private void SceneLoaderOnLevelLoadSwitching(object sender, [AttributeAttribute(Name = "TupleElementNamesAttribute", RVA = "0xBE508C", Offset = "0xBE508C")] (Scene, QuantumGame) e)
		{
		}

		[Token(Token = "0x6001B10")]
		[Address(RVA = "0xFA5888", Offset = "0xFA5888", VA = "0xFA5888")]
		public void IntroCompleted()
		{
		}

		[Token(Token = "0x6001B11")]
		[Address(RVA = "0xFA5A14", Offset = "0xFA5A14", VA = "0xFA5A14")]
		public GameInitializer()
		{
		}
	}
	[Token(Token = "0x2000744")]
	public class LocalQuantumRunner : QuantumCallbacks
	{
		[StructLayout(3)]
		[Token(Token = "0x2000745")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCBB30", Offset = "0xBCBB30")]
		private struct <StartAsync>d__11 : IAsyncStateMachine
		{
			[Token(Token = "0x4001968")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001969")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x400196A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public LocalQuantumRunner <>4__this;

			[Token(Token = "0x400196B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private TaskAwaiter<List<PlayerLoadout>> <>u__1;

			[Token(Token = "0x400196C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private TaskAwaiter<QuantumRunner> <>u__2;

			[Token(Token = "0x6001B2A")]
			[Address(RVA = "0x1035444", Offset = "0x1035444", VA = "0x1035444", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001B2B")]
			[Address(RVA = "0x103585C", Offset = "0x103585C", VA = "0x103585C", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000746")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCBB40", Offset = "0xBCBB40")]
		private sealed class <>c
		{
			[Token(Token = "0x400196D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x400196E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<QuantumRunner, bool> <>9__12_0;

			[Token(Token = "0x6001B2D")]
			[Address(RVA = "0x103540C", Offset = "0x103540C", VA = "0x103540C")]
			public <>c()
			{
			}

			[Token(Token = "0x6001B2E")]
			[Address(RVA = "0x1035414", Offset = "0x1035414", VA = "0x1035414")]
			internal bool <StartLocalQuantum>b__12_0(QuantumRunner x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x400195F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool executeOnStart;

		[Token(Token = "0x4001960")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[SerializeField]
		private bool startEvenIfOnline;

		[Token(Token = "0x4001961")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		[SerializeField]
		private bool createSpells;

		[Token(Token = "0x4001962")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private RuntimeConfig config;

		[Token(Token = "0x4001963")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AssetRefGameModeSetup defaultGameMode;

		[Token(Token = "0x4001964")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private UnityEvent onStarted;

		[Token(Token = "0x4001965")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private List<PlayerLoadout> _playerClasses;

		[Token(Token = "0x4001966")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool _start;

		[Token(Token = "0x4001967")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		private bool _starting;

		[Token(Token = "0x6001B22")]
		[Address(RVA = "0xF88E08", Offset = "0xF88E08", VA = "0xF88E08")]
		private void Start()
		{
		}

		[Token(Token = "0x6001B23")]
		[Address(RVA = "0xF89084", Offset = "0xF89084", VA = "0xF89084")]
		private void Update()
		{
		}

		[Token(Token = "0x6001B24")]
		[Address(RVA = "0xF891D8", Offset = "0xF891D8", VA = "0xF891D8")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xBE3374", Offset = "0xBE3374")]
		private void StartAsync()
		{
		}

		[Token(Token = "0x6001B25")]
		[Address(RVA = "0xF88E18", Offset = "0xF88E18", VA = "0xF88E18")]
		public void StartLocalQuantum()
		{
		}

		[Token(Token = "0x6001B26")]
		[Address(RVA = "0xF8929C", Offset = "0xF8929C", VA = "0xF8929C", Slot = "7")]
		public override void OnGameResync(QuantumGame game)
		{
		}

		[Token(Token = "0x6001B27")]
		[Address(RVA = "0xF892A0", Offset = "0xF892A0", VA = "0xF892A0")]
		private void OnJoined(QuantumGame game)
		{
		}

		[Token(Token = "0x6001B28")]
		[Address(RVA = "0xF89634", Offset = "0xF89634", VA = "0xF89634", Slot = "6")]
		public override void OnGameStart(QuantumGame game)
		{
		}

		[Token(Token = "0x6001B29")]
		[Address(RVA = "0xF89638", Offset = "0xF89638", VA = "0xF89638")]
		public LocalQuantumRunner()
		{
		}
	}
	[Token(Token = "0x2000747")]
	public sealed class SyncedSceneLoader
	{
		[StructLayout(3)]
		[Token(Token = "0x2000748")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCBB50", Offset = "0xBCBB50")]
		private struct <InitAsync>d__29 : IAsyncStateMachine
		{
			[Token(Token = "0x400197B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x400197C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x400197D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SyncedSceneLoader <>4__this;

			[Token(Token = "0x400197E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string scene;

			[Token(Token = "0x400197F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private TaskAwaiter<SceneInstance> <>u__1;

			[Token(Token = "0x6001B43")]
			[Address(RVA = "0x1062CE4", Offset = "0x1062CE4", VA = "0x1062CE4", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001B44")]
			[Address(RVA = "0x1063008", Offset = "0x1063008", VA = "0x1063008", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000749")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCBB60", Offset = "0xBCBB60")]
		private struct <LoadSceneAsync>d__30 : IAsyncStateMachine
		{
			[Token(Token = "0x4001980")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001981")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x4001982")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SyncedSceneLoader <>4__this;

			[Token(Token = "0x4001983")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public AssetRefGameModeSetup gameModeSetup;

			[Token(Token = "0x4001984")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public QuantumGame quantumGame;

			[Token(Token = "0x4001985")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public string scene;

			[Token(Token = "0x4001986")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public Task completeBeforeLevelSwitch;

			[Token(Token = "0x4001987")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public EntityRef playerSyncEntity;

			[Token(Token = "0x4001988")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public Task allSyncedTask;

			[Token(Token = "0x4001989")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private Scene <currentScene>5__2;

			[Token(Token = "0x400198A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private SceneInstance <toActivate>5__3;

			[Token(Token = "0x400198B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x400198C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			private TaskAwaiter<SceneInstance> <>u__2;

			[Token(Token = "0x400198D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			private TaskAwaiter<Locale> <>u__3;

			[Token(Token = "0x6001B45")]
			[Address(RVA = "0x1063014", Offset = "0x1063014", VA = "0x1063014", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001B46")]
			[Address(RVA = "0x1064510", Offset = "0x1064510", VA = "0x1064510", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200074A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCBB70", Offset = "0xBCBB70")]
		private sealed class <>c
		{
			[Token(Token = "0x400198E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x400198F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<QuantumRunner, bool> <>9__31_0;

			[Token(Token = "0x6001B48")]
			[Address(RVA = "0x1062C60", Offset = "0x1062C60", VA = "0x1062C60")]
			public <>c()
			{
			}

			[Token(Token = "0x6001B49")]
			[Address(RVA = "0x1062C68", Offset = "0x1062C68", VA = "0x1062C68")]
			internal bool <StopLocalRunner>b__31_0(QuantumRunner x)
			{
				return default(bool);
			}

			[Token(Token = "0x6001B4A")]
			[Address(RVA = "0x1062C8C", Offset = "0x1062C8C", VA = "0x1062C8C")]
			internal SyncedSceneLoader <.cctor>b__33_0()
			{
				return null;
			}
		}

		[Token(Token = "0x400196F")]
		public const float SceneFadeTime = 0.5f;

		[Token(Token = "0x4001970")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Lazy<SyncedSceneLoader> LazyInstance;

		[Token(Token = "0x4001971")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly Dictionary<string, object> _levelTelemetry;

		[Token(Token = "0x4001972")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private TaskCompletionSource<bool> _allSynced;

		[Token(Token = "0x4001973")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private SceneInstance? _currentScene;

		[Token(Token = "0x4001974")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private QuantumGame _loadingQuantumGame;

		[Token(Token = "0x4001975")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private string _loadingScene;

		[Token(Token = "0x4001976")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Task _loadTask;

		[Token(Token = "0x4001977")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private EntityRef _waitingSyncEntity;

		[Token(Token = "0x170004D0")]
		[NotNull]
		public static SyncedSceneLoader Instance
		{
			[Token(Token = "0x6001B30")]
			[Address(RVA = "0x114FAD8", Offset = "0x114FAD8", VA = "0x114FAD8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004D1")]
		public Scene CurrentScene
		{
			[Token(Token = "0x6001B31")]
			[Address(RVA = "0x114FB5C", Offset = "0x114FB5C", VA = "0x114FB5C")]
			get
			{
				return default(Scene);
			}
		}

		[Token(Token = "0x14000010")]
		[AttributeAttribute(Name = "TupleElementNamesAttribute", RVA = "0xBE54CC", Offset = "0xBE54CC")]
		public event EventHandler<(string, AssetRefGameModeSetup, QuantumGame)> LevelLoadStarted
		{
			[Token(Token = "0x6001B32")]
			[Address(RVA = "0x114FBEC", Offset = "0x114FBEC", VA = "0x114FBEC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE33E4", Offset = "0xBE33E4")]
			[param: AttributeAttribute(Name = "TupleElementNamesAttribute", RVA = "0xBE5110", Offset = "0xBE5110")]
			add
			{
			}
			[Token(Token = "0x6001B33")]
			[Address(RVA = "0x114FC8C", Offset = "0x114FC8C", VA = "0x114FC8C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE33F4", Offset = "0xBE33F4")]
			[param: AttributeAttribute(Name = "TupleElementNamesAttribute", RVA = "0xBE51A4", Offset = "0xBE51A4")]
			remove
			{
			}
		}

		[Token(Token = "0x14000011")]
		[AttributeAttribute(Name = "TupleElementNamesAttribute", RVA = "0xBE5560", Offset = "0xBE5560")]
		public event EventHandler<(Scene, QuantumGame)> LevelLoadSwitching
		{
			[Token(Token = "0x6001B34")]
			[Address(RVA = "0x114FD2C", Offset = "0x114FD2C", VA = "0x114FD2C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE3404", Offset = "0xBE3404")]
			[param: AttributeAttribute(Name = "TupleElementNamesAttribute", RVA = "0xBE5238", Offset = "0xBE5238")]
			add
			{
			}
			[Token(Token = "0x6001B35")]
			[Address(RVA = "0x114FDCC", Offset = "0x114FDCC", VA = "0x114FDCC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE3414", Offset = "0xBE3414")]
			[param: AttributeAttribute(Name = "TupleElementNamesAttribute", RVA = "0xBE52BC", Offset = "0xBE52BC")]
			remove
			{
			}
		}

		[Token(Token = "0x14000012")]
		[AttributeAttribute(Name = "TupleElementNamesAttribute", RVA = "0xBE55E4", Offset = "0xBE55E4")]
		public event EventHandler<(Scene, QuantumGame)> LevelLoadFinished
		{
			[Token(Token = "0x6001B36")]
			[Address(RVA = "0x114FE6C", Offset = "0x114FE6C", VA = "0x114FE6C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE3424", Offset = "0xBE3424")]
			[param: AttributeAttribute(Name = "TupleElementNamesAttribute", RVA = "0xBE5340", Offset = "0xBE5340")]
			add
			{
			}
			[Token(Token = "0x6001B37")]
			[Address(RVA = "0x114FF0C", Offset = "0x114FF0C", VA = "0x114FF0C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE3434", Offset = "0xBE3434")]
			[param: AttributeAttribute(Name = "TupleElementNamesAttribute", RVA = "0xBE53C4", Offset = "0xBE53C4")]
			remove
			{
			}
		}

		[Token(Token = "0x6001B2F")]
		[Address(RVA = "0x114F8A4", Offset = "0x114F8A4", VA = "0x114F8A4")]
		public SyncedSceneLoader()
		{
		}

		[Token(Token = "0x6001B38")]
		[Address(RVA = "0x114FFAC", Offset = "0x114FFAC", VA = "0x114FFAC")]
		public void LoadSceneUnSynced(string scene, [System.Runtime.InteropServices.Optional] QuantumGame quantumGame, [System.Runtime.InteropServices.Optional] Func<Task> completeBeforeLevelSwitch)
		{
		}

		[Token(Token = "0x6001B39")]
		[Address(RVA = "0x115021C", Offset = "0x115021C", VA = "0x115021C")]
		public void Init(string firstScene)
		{
		}

		[Token(Token = "0x6001B3A")]
		[Address(RVA = "0x11503FC", Offset = "0x11503FC", VA = "0x11503FC")]
		private void OnEventAllPlayersSynced(EventAllPlayersSynced e)
		{
		}

		[Token(Token = "0x6001B3B")]
		[Address(RVA = "0x1150520", Offset = "0x1150520", VA = "0x1150520")]
		private void OnEventRequestLevelLoad(EventRequestLevelLoad e)
		{
		}

		[Token(Token = "0x6001B3C")]
		[Address(RVA = "0x11500C8", Offset = "0x11500C8", VA = "0x11500C8")]
		private void StartNewLoad(string scene, AssetRefGameModeSetup gameModeSetup, EntityRef playerSyncEntity, QuantumGame game, Task completeBeforeLevelSwitch)
		{
		}

		[Token(Token = "0x6001B3D")]
		[Address(RVA = "0x1150854", Offset = "0x1150854", VA = "0x1150854")]
		private static string GetAddress(string scene)
		{
			return null;
		}

		[Token(Token = "0x6001B3E")]
		[Address(RVA = "0x11502DC", Offset = "0x11502DC", VA = "0x11502DC")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xBE3444", Offset = "0xBE3444")]
		private Task InitAsync(string scene)
		{
			return null;
		}

		[Token(Token = "0x6001B3F")]
		[Address(RVA = "0x11506F8", Offset = "0x11506F8", VA = "0x11506F8")]
		[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0xBE34A4", Offset = "0xBE34A4")]
		private Task LoadSceneAsync(string scene, AssetRefGameModeSetup gameModeSetup, EntityRef playerSyncEntity, QuantumGame quantumGame, Task completeBeforeLevelSwitch, Task allSyncedTask)
		{
			return null;
		}

		[Token(Token = "0x6001B40")]
		[Address(RVA = "0x11508A4", Offset = "0x11508A4", VA = "0x11508A4")]
		private static void StopLocalRunner()
		{
		}

		[Token(Token = "0x6001B41")]
		[Address(RVA = "0x11504C8", Offset = "0x11504C8", VA = "0x11504C8")]
		public void LoadCurrentScene(QuantumGame game)
		{
		}
	}
	[Token(Token = "0x200074B")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xBCBB80", Offset = "0xBCBB80")]
	public class VisualGameConstants : ScriptableObject
	{
		[Token(Token = "0x4001990")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SpellElementConfig spellElementConfig;

		[Token(Token = "0x4001991")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		public PortraitFrameConfig portraitFrameConfig;

		[Token(Token = "0x4001992")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		public LocalizedString noTitleNameText;

		[Token(Token = "0x4001993")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		public string noTitleSeasonId;

		[Token(Token = "0x4001994")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		public string defaultBorderSeasonId;

		[Token(Token = "0x4001995")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		public Texture2D defaultAvatar;

		[Token(Token = "0x4001996")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		public List<SeasonDisplayNames> seasonDisplayNames;

		[Token(Token = "0x4001997")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		public LocalizedString noTitleString;

		[Token(Token = "0x4001998")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		public HapticsConfig hapticsConfig;

		[Token(Token = "0x6001B4B")]
		[Address(RVA = "0x1134BC4", Offset = "0x1134BC4", VA = "0x1134BC4")]
		public VisualGameConstants()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200074C")]
	public struct SpellElementConfig
	{
		[Token(Token = "0x4001999")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public SpellElementColors none;

		[Token(Token = "0x400199A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public SpellElementColors fire;

		[Token(Token = "0x400199B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public SpellElementColors ice;

		[Token(Token = "0x400199C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public SpellElementColors lightning;

		[Token(Token = "0x400199D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public SpellElementColors nature;

		[Token(Token = "0x400199E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		public SpellElementColors arcane;

		[Token(Token = "0x6001B4C")]
		[Address(RVA = "0x1204C60", Offset = "0x1204C60", VA = "0x1204C60")]
		public SpellElementColors GetColorSettings(SpellElement spellElement)
		{
			return default(SpellElementColors);
		}
	}
	[Serializable]
	[Token(Token = "0x200074D")]
	public struct SpellElementColors
	{
		[Token(Token = "0x400199F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Color primary;

		[Token(Token = "0x40019A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Color secondary;

		[Token(Token = "0x40019A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Color tertiary;

		[Token(Token = "0x40019A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Color inactive;

		[Token(Token = "0x6001B4D")]
		[Address(RVA = "0x1205420", Offset = "0x1205420", VA = "0x1205420")]
		public Color GetVariant(ElementColorVariant variant)
		{
			return default(Color);
		}
	}
	[Serializable]
	[Token(Token = "0x200074E")]
	public struct PortraitFrameConfig
	{
		[Token(Token = "0x40019A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public List<Color> colors;

		[Token(Token = "0x40019A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public List<Sprite> frames;

		[Token(Token = "0x40019A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<Sprite> stars;

		[Token(Token = "0x40019A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Sprite maxLevelFrame;
	}
	[Serializable]
	[Token(Token = "0x200074F")]
	public struct SeasonDisplayNames
	{
		[Token(Token = "0x40019A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string id;

		[Token(Token = "0x40019A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public LocalizedString displayName;
	}
	[Serializable]
	[Token(Token = "0x2000750")]
	public struct HapticsConfig
	{
		[Token(Token = "0x40019A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string playerDiedHapticsID;

		[Token(Token = "0x40019AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string playerTeleportedHapticsID;

		[Token(Token = "0x40019AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string playerRightGrabHapticsID;

		[Token(Token = "0x40019AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string playerLeftGrabHapticsID;
	}
}
namespace Cortopia.Scripts.BotSDK
{
	[Token(Token = "0x2000751")]
	public class AnimationControlBotSDK : MonoBehaviour
	{
		[Token(Token = "0x40019AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private EntityView _entityView;

		[Token(Token = "0x40019AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private List<GameObject> animationStates;

		[Token(Token = "0x6001B4E")]
		[Address(RVA = "0x13287B8", Offset = "0x13287B8", VA = "0x13287B8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001B4F")]
		[Address(RVA = "0x13288D4", Offset = "0x13288D4", VA = "0x13288D4")]
		private void Start()
		{
		}

		[Token(Token = "0x6001B50")]
		[Address(RVA = "0x1328B68", Offset = "0x1328B68", VA = "0x1328B68")]
		private void OnAnimationStateUpdate(EventAnimationStateUpdate callback)
		{
		}

		[Token(Token = "0x6001B51")]
		[Address(RVA = "0x13289E4", Offset = "0x13289E4", VA = "0x13289E4")]
		private void UpdateAnimationState()
		{
		}

		[Token(Token = "0x6001B52")]
		[Address(RVA = "0x1328BB8", Offset = "0x1328BB8", VA = "0x1328BB8")]
		public AnimationControlBotSDK()
		{
		}
	}
}
namespace Cortopia.Scripts.Audio
{
	[Token(Token = "0x2000752")]
	public class AnimationEventEmitter : MonoBehaviour
	{
		[Token(Token = "0x40019AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private StudioEventEmitter emitter;

		[Token(Token = "0x6001B53")]
		[Address(RVA = "0x1328BC0", Offset = "0x1328BC0", VA = "0x1328BC0")]
		public void AudioStart()
		{
		}

		[Token(Token = "0x6001B54")]
		[Address(RVA = "0x1328BDC", Offset = "0x1328BDC", VA = "0x1328BDC")]
		public AnimationEventEmitter()
		{
		}
	}
	[Token(Token = "0x2000753")]
	public class CharacterGameplayVOController : MonoBehaviour
	{
		[Token(Token = "0x2000754")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCBBD4", Offset = "0xBCBBD4")]
		private sealed class <>c__DisplayClass10_0
		{
			[Token(Token = "0x40019B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public PlayerClassConfiguration classAsset;

			[Token(Token = "0x6001B5F")]
			[Address(RVA = "0x1024528", Offset = "0x1024528", VA = "0x1024528")]
			public <>c__DisplayClass10_0()
			{
			}

			[Token(Token = "0x6001B60")]
			[Address(RVA = "0x1024530", Offset = "0x1024530", VA = "0x1024530")]
			internal bool <TryGetCharacterVO>b__0(CharacterVO x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x40019B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private EntityView playerEntityView;

		[Token(Token = "0x40019B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBD9E0C", Offset = "0xBD9E0C")]
		[SerializeField]
		private CharacterVO[] characterVOs;

		[Token(Token = "0x40019B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private StudioEventEmitter _lastPlayedVO;

		[Token(Token = "0x40019B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private CharacterVO _lastStartedChangedHealthCharacterVO;

		[Token(Token = "0x40019B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private EventKey _lastStartedChangedHealthEvent;

		[Token(Token = "0x6001B55")]
		[Address(RVA = "0x115B568", Offset = "0x115B568", VA = "0x115B568")]
		private void Start()
		{
		}

		[Token(Token = "0x6001B56")]
		[Address(RVA = "0x115B81C", Offset = "0x115B81C", VA = "0x115B81C")]
		private void OnEventCancelled(CallbackEventCanceled callback)
		{
		}

		[Token(Token = "0x6001B57")]
		[Address(RVA = "0x115B8C4", Offset = "0x115B8C4", VA = "0x115B8C4")]
		private void OnDamageTakenEvent(EventHitBy eventDamage)
		{
		}

		[Token(Token = "0x6001B58")]
		[Address(RVA = "0x115BC08", Offset = "0x115BC08", VA = "0x115BC08")]
		private void OnPingSent(EventPingCreated callback)
		{
		}

		[Token(Token = "0x6001B59")]
		[Address(RVA = "0x115C048", Offset = "0x115C048", VA = "0x115C048")]
		private void OnPlayerDied(EventPlayerDied callback)
		{
		}

		[Token(Token = "0x6001B5A")]
		[Address(RVA = "0x115BA3C", Offset = "0x115BA3C", VA = "0x115BA3C")]
		private bool TryGetCharacterVO(Frame frame, EntityRef playerEntity, out CharacterVO characterVO)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B5B")]
		[Address(RVA = "0x115C248", Offset = "0x115C248", VA = "0x115C248")]
		private bool IsLocalPlayer()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B5C")]
		[Address(RVA = "0x115BDEC", Offset = "0x115BDEC", VA = "0x115BDEC")]
		private bool OnLocalPlayerTeam(Frame frame)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B5D")]
		[Address(RVA = "0x115BF48", Offset = "0x115BF48", VA = "0x115BF48")]
		private void PlayExclusively(StudioEventEmitter emitter, bool withSubtitles)
		{
		}

		[Token(Token = "0x6001B5E")]
		[Address(RVA = "0x115C308", Offset = "0x115C308", VA = "0x115C308")]
		public CharacterGameplayVOController()
		{
		}
	}
	[Token(Token = "0x2000755")]
	public class CharacterVO : MonoBehaviour
	{
		[Token(Token = "0x40019B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private PlayerClassConfigurationAsset classAsset;

		[Token(Token = "0x40019B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private StudioEventEmitter killVO;

		[Token(Token = "0x40019B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private StudioEventEmitter hitVO;

		[Token(Token = "0x40019B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private StudioEventEmitter deathVO;

		[Token(Token = "0x40019BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "EnumArrayAttribute", RVA = "0xBD9E98", Offset = "0xBD9E98")]
		[SerializeField]
		private StudioEventEmitter[] pingVOs;

		[Token(Token = "0x170004D2")]
		public PlayerClassConfigurationAsset ClassAsset
		{
			[Token(Token = "0x6001B61")]
			[Address(RVA = "0x115FCFC", Offset = "0x115FCFC", VA = "0x115FCFC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004D3")]
		public StudioEventEmitter KillVO
		{
			[Token(Token = "0x6001B62")]
			[Address(RVA = "0x115FD04", Offset = "0x115FD04", VA = "0x115FD04")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004D4")]
		public StudioEventEmitter HitVO
		{
			[Token(Token = "0x6001B63")]
			[Address(RVA = "0x115FD0C", Offset = "0x115FD0C", VA = "0x115FD0C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004D5")]
		public StudioEventEmitter DeathVO
		{
			[Token(Token = "0x6001B64")]
			[Address(RVA = "0x115FD14", Offset = "0x115FD14", VA = "0x115FD14")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001B65")]
		[Address(RVA = "0x115BF0C", Offset = "0x115BF0C", VA = "0x115BF0C")]
		public StudioEventEmitter PingVO(PingType type)
		{
			return null;
		}

		[Token(Token = "0x6001B66")]
		[Address(RVA = "0x115FD1C", Offset = "0x115FD1C", VA = "0x115FD1C")]
		public CharacterVO()
		{
		}
	}
	[Token(Token = "0x2000756")]
	public class CombatEventSFX : MonoBehaviour
	{
		[Token(Token = "0x40019BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBD9F08", Offset = "0xBD9F08")]
		private StudioEventEmitter damageTakenSFXEmitter;

		[Token(Token = "0x40019BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private StudioEventEmitter damageGivenSFXEmitter;

		[Token(Token = "0x40019BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private StudioEventEmitter healingReceivedSFXEmitter;

		[Token(Token = "0x40019BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private StudioEventEmitter lowHealthSFXEmitter;

		[Token(Token = "0x40019BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBD9F84", Offset = "0xBD9F84")]
		[SerializeField]
		private float lowHealthStartLimit;

		[Token(Token = "0x40019C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private bool _lastDamageEventWasSender;

		[Token(Token = "0x40019C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private EventKey _lastDamageTakenEvent;

		[Token(Token = "0x40019C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private EventKey _lastHealedByEvent;

		[Token(Token = "0x6001B67")]
		[Address(RVA = "0x1164944", Offset = "0x1164944", VA = "0x1164944")]
		private void Start()
		{
		}

		[Token(Token = "0x6001B68")]
		[Address(RVA = "0x1164B6C", Offset = "0x1164B6C", VA = "0x1164B6C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001B69")]
		[Address(RVA = "0x1164DAC", Offset = "0x1164DAC", VA = "0x1164DAC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001B6A")]
		[Address(RVA = "0x1164DF8", Offset = "0x1164DF8", VA = "0x1164DF8")]
		private void OnHealedByEvent(EventHealedBy healedBy)
		{
		}

		[Token(Token = "0x6001B6B")]
		[Address(RVA = "0x1164F28", Offset = "0x1164F28", VA = "0x1164F28")]
		private void OnDamageTakenEvent(EventHitBy eventDamage)
		{
		}

		[Token(Token = "0x6001B6C")]
		[Address(RVA = "0x11650D0", Offset = "0x11650D0", VA = "0x11650D0")]
		private void OnEventCancelled(CallbackEventCanceled callback)
		{
		}

		[Token(Token = "0x6001B6D")]
		[Address(RVA = "0x11651C0", Offset = "0x11651C0", VA = "0x11651C0")]
		public CombatEventSFX()
		{
		}
	}
	[Token(Token = "0x2000757")]
	public class CustomFmodEmitter : MonoBehaviour
	{
		[Token(Token = "0x40019C3")]
		private const string SnapshotString = "snapshot";

		[Token(Token = "0x40019C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[EventRef]
		public string fmodEvent;

		[Token(Token = "0x40019C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameEvent playEvent;

		[Token(Token = "0x40019C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public GameEvent stopEvent;

		[Token(Token = "0x40019C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool preload;

		[Token(Token = "0x40019C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		public bool allowFadeout;

		[Token(Token = "0x40019C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
		public bool triggerOnce;

		[Token(Token = "0x40019CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public ParamRef[] fmodEventParams;

		[Token(Token = "0x40019CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool overrideAttenuation;

		[Token(Token = "0x40019CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float overrideMinDistance;

		[Token(Token = "0x40019CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float overrideMaxDistance;

		[Token(Token = "0x40019CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private EventDescription _eventDescription;

		[Token(Token = "0x40019CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool _hasTriggered;

		[Token(Token = "0x40019D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private EventInstance _instance;

		[Token(Token = "0x40019D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool _isOneShot;

		[Token(Token = "0x40019D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		private bool _isQuitting;

		[Token(Token = "0x40019D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Rigidbody _rigidbody;

		[Token(Token = "0x40019D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Rigidbody2D _rigidbody2D;

		[Token(Token = "0x40019D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Transform _transform;

		[Token(Token = "0x170004D6")]
		public EventDescription EventDescription
		{
			[Token(Token = "0x6001B6E")]
			[Address(RVA = "0x11689F8", Offset = "0x11689F8", VA = "0x11689F8")]
			get
			{
				return default(EventDescription);
			}
		}

		[Token(Token = "0x170004D7")]
		public EventInstance EventInstance
		{
			[Token(Token = "0x6001B6F")]
			[Address(RVA = "0x1168A00", Offset = "0x1168A00", VA = "0x1168A00")]
			get
			{
				return default(EventInstance);
			}
		}

		[Token(Token = "0x6001B70")]
		[Address(RVA = "0x1168A08", Offset = "0x1168A08", VA = "0x1168A08")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001B71")]
		[Address(RVA = "0x1168AA4", Offset = "0x1168AA4", VA = "0x1168AA4")]
		private void Start()
		{
		}

		[Token(Token = "0x6001B72")]
		[Address(RVA = "0x1168CFC", Offset = "0x1168CFC", VA = "0x1168CFC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001B73")]
		[Address(RVA = "0x1168D04", Offset = "0x1168D04", VA = "0x1168D04")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001B74")]
		[Address(RVA = "0x1168D0C", Offset = "0x1168D0C", VA = "0x1168D0C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001B75")]
		[Address(RVA = "0x1168DF8", Offset = "0x1168DF8", VA = "0x1168DF8")]
		private void OnApplicationQuit()
		{
		}

		[Token(Token = "0x6001B76")]
		[Address(RVA = "0x1168E04", Offset = "0x1168E04", VA = "0x1168E04")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6001B77")]
		[Address(RVA = "0x1168B88", Offset = "0x1168B88", VA = "0x1168B88")]
		private void EventDescriptionLookUp()
		{
		}

		[Token(Token = "0x6001B78")]
		[Address(RVA = "0x1168CAC", Offset = "0x1168CAC", VA = "0x1168CAC")]
		private void HandleGameEvent(GameEvent gameEvent)
		{
		}

		[Token(Token = "0x6001B79")]
		[Address(RVA = "0x11692B4", Offset = "0x11692B4", VA = "0x11692B4")]
		public void SetNewEvent(string newFmodEvent)
		{
		}

		[Token(Token = "0x6001B7A")]
		[Address(RVA = "0x1168F04", Offset = "0x1168F04", VA = "0x1168F04")]
		public void Play()
		{
		}

		[Token(Token = "0x6001B7B")]
		[Address(RVA = "0x1169250", Offset = "0x1169250", VA = "0x1169250")]
		public void Stop()
		{
		}

		[Token(Token = "0x6001B7C")]
		[Address(RVA = "0x11692F4", Offset = "0x11692F4", VA = "0x11692F4")]
		public void SetParameter(string paramName, float value, bool ignoreseekspeed = false)
		{
		}

		[Token(Token = "0x6001B7D")]
		[Address(RVA = "0x1169364", Offset = "0x1169364", VA = "0x1169364")]
		public void SetParameter(PARAMETER_ID id, float value, bool ignoreseekspeed = false)
		{
		}

		[Token(Token = "0x6001B7E")]
		[Address(RVA = "0x1168EB0", Offset = "0x1168EB0", VA = "0x1168EB0")]
		public bool IsPlaying()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B7F")]
		[Address(RVA = "0x11693D4", Offset = "0x11693D4", VA = "0x11693D4")]
		public CustomFmodEmitter()
		{
		}
	}
	[Token(Token = "0x2000758")]
	public class EmitterHandler : MonoBehaviour
	{
		[Token(Token = "0x40019D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private CustomFmodEmitter reverbZoneEmitter;

		[Token(Token = "0x40019D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Cortopia.Scripts.CustomAttributes.ReadOnly]
		[SerializeField]
		private List<CustomFmodEmitter> emitters;

		[Token(Token = "0x40019D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<CustomFmodEmitter> _emittersToStart;

		[Token(Token = "0x40019D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<CustomFmodEmitter> _emittersToStop;

		[Token(Token = "0x40019DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private EventInstance _snapShotInstance;

		[Token(Token = "0x6001B80")]
		[Address(RVA = "0x1042FF0", Offset = "0x1042FF0", VA = "0x1042FF0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001B81")]
		[Address(RVA = "0x1043080", Offset = "0x1043080", VA = "0x1043080")]
		public void StartSFXEmitters(EntityRef originTileRef)
		{
		}

		[Token(Token = "0x6001B82")]
		[Address(RVA = "0x1043A48", Offset = "0x1043A48", VA = "0x1043A48")]
		public void StopEmitters()
		{
		}

		[Token(Token = "0x6001B83")]
		[Address(RVA = "0x104363C", Offset = "0x104363C", VA = "0x104363C")]
		private static void CopyEmittersToTargetList(ICollection<CustomFmodEmitter> target, IEnumerable<CustomFmodEmitter> source)
		{
		}

		[Token(Token = "0x6001B84")]
		[Address(RVA = "0x1043B60", Offset = "0x1043B60", VA = "0x1043B60")]
		public void SetEmitters(IEnumerable<CustomFmodEmitter> newEmitters)
		{
		}

		[Token(Token = "0x6001B85")]
		[Address(RVA = "0x1043BE0", Offset = "0x1043BE0", VA = "0x1043BE0")]
		public void SetReverbZone(CustomFmodEmitter newReverbZoneEmitter)
		{
		}

		[Token(Token = "0x6001B86")]
		[Address(RVA = "0x1043BE8", Offset = "0x1043BE8", VA = "0x1043BE8")]
		public EmitterHandler()
		{
		}
	}
	[Token(Token = "0x2000759")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xBCBBE4", Offset = "0xBCBBE4")]
	public class EmitterToggle : MonoBehaviour
	{
		[Token(Token = "0x40019DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool playExclusively;

		[Token(Token = "0x40019DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[SerializeField]
		private bool playWithSubtitles;

		[Token(Token = "0x40019DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private UnityEvent onPlay;

		[Token(Token = "0x40019DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private UnityEvent onStop;

		[Token(Token = "0x40019DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private StudioEventEmitter _emitter;

		[Token(Token = "0x6001B87")]
		[Address(RVA = "0x1043BF0", Offset = "0x1043BF0", VA = "0x1043BF0")]
		private void Start()
		{
		}

		[Token(Token = "0x6001B88")]
		[Address(RVA = "0x1043C44", Offset = "0x1043C44", VA = "0x1043C44")]
		public void ToggleEmitter()
		{
		}

		[Token(Token = "0x6001B89")]
		[Address(RVA = "0x1043EA8", Offset = "0x1043EA8", VA = "0x1043EA8")]
		public EmitterToggle()
		{
		}
	}
	[Token(Token = "0x200075A")]
	public class EmitterTrigger : MonoBehaviour
	{
		[Token(Token = "0x40019E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public CustomFmodEmitter reverbZoneEvent;

		[Token(Token = "0x40019E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<CustomFmodEmitter> emitters;

		[Token(Token = "0x40019E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Color debugColor;

		[Token(Token = "0x6001B8A")]
		[Address(RVA = "0x1043EB0", Offset = "0x1043EB0", VA = "0x1043EB0")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6001B8B")]
		[Address(RVA = "0x1043FF8", Offset = "0x1043FF8", VA = "0x1043FF8")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x6001B8C")]
		[Address(RVA = "0x1044164", Offset = "0x1044164", VA = "0x1044164")]
		public EmitterTrigger()
		{
		}
	}
	[Token(Token = "0x200075B")]
	public class ExclusiveStudioEventController
	{
		[Token(Token = "0x40019E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private StudioEventEmitter _lastPlayedEvent;

		[Token(Token = "0x40019E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool _stopOnSceneChange;

		[Token(Token = "0x6001B8D")]
		[Address(RVA = "0x10509D8", Offset = "0x10509D8", VA = "0x10509D8")]
		public void Initialize(SyncedSceneLoader sceneLoader)
		{
		}

		[Token(Token = "0x6001B8E")]
		[Address(RVA = "0x1050A80", Offset = "0x1050A80", VA = "0x1050A80")]
		private void SceneLoaderOnLevelLoadSwitching(object sender, [AttributeAttribute(Name = "TupleElementNamesAttribute", RVA = "0xBE5448", Offset = "0xBE5448")] (Scene, QuantumGame) e)
		{
		}

		[Token(Token = "0x6001B8F")]
		[Address(RVA = "0x1043D44", Offset = "0x1043D44", VA = "0x1043D44")]
		public void PlayEvent(StudioEventEmitter emitter, bool withSubtitles, bool stopOnSceneChange)
		{
		}

		[Token(Token = "0x6001B90")]
		[Address(RVA = "0x1050ABC", Offset = "0x1050ABC", VA = "0x1050ABC")]
		public ExclusiveStudioEventController()
		{
		}
	}
	[Token(Token = "0x200075C")]
	public class ExclusiveStudioEventTrigger : MonoBehaviour
	{
		[Token(Token = "0x40019E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private StudioEventEmitter studioEvent;

		[Token(Token = "0x40019E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private bool playWithSubtitles;

		[Token(Token = "0x40019E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		[SerializeField]
		private bool stopOnSceneChange;

		[Token(Token = "0x6001B91")]
		[Address(RVA = "0x1050AC4", Offset = "0x1050AC4", VA = "0x1050AC4")]
		public void PlayEvent()
		{
		}

		[Token(Token = "0x6001B92")]
		[Address(RVA = "0x1050B44", Offset = "0x1050B44", VA = "0x1050B44")]
		public ExclusiveStudioEventTrigger()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200075D")]
	public class FMODEventWithSubtitlesPlayable : PlayableAsset, ITimelineClipAsset
	{
		[Token(Token = "0x40019E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public FMODEventWithSubtitlesPlayableBehavior template;

		[Token(Token = "0x40019E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDA098", Offset = "0xBDA098")]
		private GameObject <TrackTargetObject>k__BackingField;

		[Token(Token = "0x40019EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float eventLength;

		[Token(Token = "0x40019EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private FMODEventWithSubtitlesPlayableBehavior behavior;

		[Token(Token = "0x40019EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[EventRef]
		[SerializeField]
		public string eventName;

		[Token(Token = "0x40019ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		public STOP_MODE stopType;

		[Token(Token = "0x40019EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		public ParamRef[] parameters;

		[NonSerialized]
		[Token(Token = "0x40019EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public bool cachedParameters;

		[Token(Token = "0x40019F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDA100", Offset = "0xBDA100")]
		private TimelineClip <OwningClip>k__BackingField;

		[Token(Token = "0x170004D8")]
		public GameObject TrackTargetObject
		{
			[Token(Token = "0x6001B93")]
			[Address(RVA = "0x1050EAC", Offset = "0x1050EAC", VA = "0x1050EAC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE3524", Offset = "0xBE3524")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001B94")]
			[Address(RVA = "0x1050EB4", Offset = "0x1050EB4", VA = "0x1050EB4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE3534", Offset = "0xBE3534")]
			set
			{
			}
		}

		[Token(Token = "0x170004D9")]
		public override double duration
		{
			[Token(Token = "0x6001B95")]
			[Address(RVA = "0x1050EBC", Offset = "0x1050EBC", VA = "0x1050EBC", Slot = "7")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x170004DA")]
		public ClipCaps clipCaps
		{
			[Token(Token = "0x6001B96")]
			[Address(RVA = "0x1050ED8", Offset = "0x1050ED8", VA = "0x1050ED8", Slot = "9")]
			get
			{
				return default(ClipCaps);
			}
		}

		[Token(Token = "0x170004DB")]
		public TimelineClip OwningClip
		{
			[Token(Token = "0x6001B97")]
			[Address(RVA = "0x1050EE0", Offset = "0x1050EE0", VA = "0x1050EE0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE3544", Offset = "0xBE3544")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001B98")]
			[Address(RVA = "0x1050EE8", Offset = "0x1050EE8", VA = "0x1050EE8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE3554", Offset = "0xBE3554")]
			set
			{
			}
		}

		[Token(Token = "0x6001B99")]
		[Address(RVA = "0x1050EF0", Offset = "0x1050EF0", VA = "0x1050EF0", Slot = "6")]
		public override Playable CreatePlayable(PlayableGraph graph, GameObject owner)
		{
			return default(Playable);
		}

		[Token(Token = "0x6001B9A")]
		[Address(RVA = "0x1051138", Offset = "0x1051138", VA = "0x1051138")]
		public FMODEventWithSubtitlesPlayable()
		{
		}
	}
	[Token(Token = "0x200075E")]
	public enum STOP_MODE
	{
		[Token(Token = "0x40019F2")]
		AllowFadeout,
		[Token(Token = "0x40019F3")]
		Immediate,
		[Token(Token = "0x40019F4")]
		None
	}
	[Token(Token = "0x200075F")]
	public class FMODEventWithSubtitlesPlayableBehavior : PlayableBehaviour
	{
		[Token(Token = "0x40019F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string eventName;

		[Token(Token = "0x40019F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public STOP_MODE stopType;

		[Token(Token = "0x40019F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ParamRef[] parameters;

		[Token(Token = "0x40019F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject TrackTargetObject;

		[Token(Token = "0x40019F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public TimelineClip OwningClip;

		[Token(Token = "0x40019FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool isPlayheadInside;

		[Token(Token = "0x40019FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private EventInstance eventInstance;

		[Token(Token = "0x6001B9B")]
		[Address(RVA = "0x1051218", Offset = "0x1051218", VA = "0x1051218")]
		protected void PlayEvent()
		{
		}

		[Token(Token = "0x6001B9C")]
		[Address(RVA = "0x10514B4", Offset = "0x10514B4", VA = "0x10514B4")]
		public void OnEnter()
		{
		}

		[Token(Token = "0x6001B9D")]
		[Address(RVA = "0x10514E8", Offset = "0x10514E8", VA = "0x10514E8")]
		public void OnExit()
		{
		}

		[Token(Token = "0x6001B9E")]
		[Address(RVA = "0x1050E28", Offset = "0x1050E28", VA = "0x1050E28")]
		public void UpdateBehaviour(float time)
		{
		}

		[Token(Token = "0x6001B9F")]
		[Address(RVA = "0x1051550", Offset = "0x1051550", VA = "0x1051550", Slot = "14")]
		public override void OnGraphStop(Playable playable)
		{
		}

		[Token(Token = "0x6001BA0")]
		[Address(RVA = "0x10511BC", Offset = "0x10511BC", VA = "0x10511BC")]
		public FMODEventWithSubtitlesPlayableBehavior()
		{
		}
	}
	[Token(Token = "0x2000760")]
	[AttributeAttribute(Name = "TrackBindingTypeAttribute", RVA = "0xBCBC44", Offset = "0xBCBC44")]
	[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0xBCBC44", Offset = "0xBCBC44")]
	[AttributeAttribute(Name = "TrackColorAttribute", RVA = "0xBCBC44", Offset = "0xBCBC44")]
	public class FMODEventWithSubtitlesTrack : TrackAsset
	{
		[Token(Token = "0x6001BA1")]
		[Address(RVA = "0x1051604", Offset = "0x1051604", VA = "0x1051604", Slot = "23")]
		public override Playable CreateTrackMixer(PlayableGraph graph, GameObject go, int inputCount)
		{
			return default(Playable);
		}

		[Token(Token = "0x6001BA2")]
		[Address(RVA = "0x1051A84", Offset = "0x1051A84", VA = "0x1051A84")]
		public FMODEventWithSubtitlesTrack()
		{
		}
	}
	[Token(Token = "0x2000761")]
	public class FMODEventWithSubtitlesMixerBehaviour : PlayableBehaviour
	{
		[Token(Token = "0x6001BA3")]
		[Address(RVA = "0x1050C70", Offset = "0x1050C70", VA = "0x1050C70", Slot = "20")]
		public override void ProcessFrame(Playable playable, FrameData info, object playerData)
		{
		}

		[Token(Token = "0x6001BA4")]
		[Address(RVA = "0x1050EA4", Offset = "0x1050EA4", VA = "0x1050EA4")]
		public FMODEventWithSubtitlesMixerBehaviour()
		{
		}
	}
	[Token(Token = "0x2000762")]
	public struct FMODParameters
	{
		[Token(Token = "0x40019FC")]
		public const string MusicScene = "Scene Change";

		[Token(Token = "0x40019FD")]
		public const string Intensity = "Intensity";

		[Token(Token = "0x40019FE")]
		public const string Velocity = "Velocity";
	}
	[Token(Token = "0x2000763")]
	public static class FMODSubtitleExtensions
	{
		[Token(Token = "0x6001BA5")]
		[Address(RVA = "0x1043E54", Offset = "0x1043E54", VA = "0x1043E54")]
		public static void PlayWithSubtitles(this StudioEventEmitter emitter)
		{
		}
	}
	[Token(Token = "0x2000764")]
	public class GlobalSFXManager : MonoBehaviour
	{
		[Token(Token = "0x40019FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private VCA? _vca;

		[Token(Token = "0x4001A00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float _volume;

		[Token(Token = "0x4001A01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GlobalUISFX UI;

		[Token(Token = "0x6001BA6")]
		[Address(RVA = "0xFA83DC", Offset = "0xFA83DC", VA = "0xFA83DC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001BA7")]
		[Address(RVA = "0xFA84C8", Offset = "0xFA84C8", VA = "0xFA84C8")]
		public void SetVolume(float volume)
		{
		}

		[Token(Token = "0x6001BA8")]
		[Address(RVA = "0xFA8544", Offset = "0xFA8544", VA = "0xFA8544")]
		public GlobalSFXManager()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000765")]
	public class GlobalUISFX
	{
		[Token(Token = "0x4001A02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private StudioEventEmitter onHighlightEmitter;

		[Token(Token = "0x4001A03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private StudioEventEmitter onPressEmitter;

		[Token(Token = "0x4001A04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private StudioEventEmitter onHandSwitch;

		[Token(Token = "0x6001BA9")]
		[Address(RVA = "0xFA85FC", Offset = "0xFA85FC", VA = "0xFA85FC")]
		public void PlayHighlightSFX()
		{
		}

		[Token(Token = "0x6001BAA")]
		[Address(RVA = "0xFA8618", Offset = "0xFA8618", VA = "0xFA8618")]
		public void PlayPressSFX()
		{
		}

		[Token(Token = "0x6001BAB")]
		[Address(RVA = "0xFA8634", Offset = "0xFA8634", VA = "0xFA8634")]
		public void PlayHandSwitchSFX()
		{
		}

		[Token(Token = "0x6001BAC")]
		[Address(RVA = "0xFA8650", Offset = "0xFA8650", VA = "0xFA8650")]
		public GlobalUISFX()
		{
		}
	}
	[Token(Token = "0x2000766")]
	public class MusicManager : MonoBehaviour
	{
		[Token(Token = "0x4001A05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private StudioEventEmitter initMusicEmitter;

		[Token(Token = "0x4001A06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private StudioEventEmitter mainMenuMusicEmitter;

		[Token(Token = "0x4001A07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private StudioEventEmitter postMatchMusicEmitter;

		[Token(Token = "0x4001A08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private StudioEventEmitter tutorialMusicEmitter;

		[Token(Token = "0x4001A09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private VCA? _vca;

		[Token(Token = "0x4001A0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float _volume;

		[Token(Token = "0x4001A0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private StudioEventEmitter _lastPlayedEmitter;

		[Token(Token = "0x6001BAD")]
		[Address(RVA = "0x101A378", Offset = "0x101A378", VA = "0x101A378")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001BAE")]
		[Address(RVA = "0x101A464", Offset = "0x101A464", VA = "0x101A464")]
		public void SetVolume(float volume)
		{
		}

		[Token(Token = "0x6001BAF")]
		[Address(RVA = "0x101A4E0", Offset = "0x101A4E0", VA = "0x101A4E0")]
		public void Play(MusicTrack track)
		{
		}

		[Token(Token = "0x6001BB0")]
		[Address(RVA = "0x101A64C", Offset = "0x101A64C", VA = "0x101A64C")]
		public void StopMusic()
		{
		}

		[Token(Token = "0x6001BB1")]
		[Address(RVA = "0x101A698", Offset = "0x101A698", VA = "0x101A698")]
		public MusicManager()
		{
		}
	}
	[Token(Token = "0x2000767")]
	public enum MusicTrack
	{
		[Token(Token = "0x4001A0D")]
		None,
		[Token(Token = "0x4001A0E")]
		Init,
		[Token(Token = "0x4001A0F")]
		Menu,
		[Token(Token = "0x4001A10")]
		PostMatch,
		[Token(Token = "0x4001A11")]
		Tutorial
	}
	[Token(Token = "0x2000768")]
	public class MusicTrigger : MonoBehaviour
	{
		[Token(Token = "0x4001A12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MusicTrack track;

		[Token(Token = "0x6001BB2")]
		[Address(RVA = "0x101A6A0", Offset = "0x101A6A0", VA = "0x101A6A0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001BB3")]
		[Address(RVA = "0x101A718", Offset = "0x101A718", VA = "0x101A718")]
		public MusicTrigger()
		{
		}
	}
	[Token(Token = "0x2000769")]
	public class PortalSFX : MonoBehaviour
	{
		[Token(Token = "0x4001A13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private BoundValue<TeleportState> teleportState;

		[Token(Token = "0x4001A14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[PrefabExclusive]
		private GameObject chargingPortalSFX;

		[Token(Token = "0x4001A15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[PrefabExclusive]
		[SerializeField]
		private GameObject portalCastEmitter;

		[Token(Token = "0x4001A16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private ReactiveSubscription _teleportStateSubscription;

		[Token(Token = "0x6001BB4")]
		[Address(RVA = "0x1118460", Offset = "0x1118460", VA = "0x1118460")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001BB5")]
		[Address(RVA = "0x111854C", Offset = "0x111854C", VA = "0x111854C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001BB6")]
		[Address(RVA = "0x1118558", Offset = "0x1118558", VA = "0x1118558")]
		private void OnPortalStateChanged(TeleportState newTeleportState)
		{
		}

		[Token(Token = "0x6001BB7")]
		[Address(RVA = "0x11185A8", Offset = "0x11185A8", VA = "0x11185A8")]
		public PortalSFX()
		{
		}
	}
	[Token(Token = "0x200076A")]
	public class PostMatchSFX : MonoBehaviour
	{
		[Token(Token = "0x4001A17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float voteTimeEndingThreshold;

		[Token(Token = "0x4001A18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private StudioEventEmitter voteTimerEndingSFX;

		[Token(Token = "0x6001BB8")]
		[Address(RVA = "0x111AC40", Offset = "0x111AC40", VA = "0x111AC40")]
		private void Update()
		{
		}

		[Token(Token = "0x6001BB9")]
		[Address(RVA = "0x111AD70", Offset = "0x111AD70", VA = "0x111AD70")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001BBA")]
		[Address(RVA = "0x111ADBC", Offset = "0x111ADBC", VA = "0x111ADBC")]
		public PostMatchSFX()
		{
		}
	}
	[Token(Token = "0x200076B")]
	public class SabotageSFX : MonoBehaviour
	{
		[Token(Token = "0x4001A19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDA230", Offset = "0xBDA230")]
		private float remainingTimeStartThreshold;

		[Token(Token = "0x4001A1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDA27C", Offset = "0xBDA27C")]
		[SerializeField]
		private StudioEventEmitter attackerCharacterSelectStinger;

		[Token(Token = "0x4001A1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private StudioEventEmitter defenderCharacterSelectStinger;

		[Token(Token = "0x4001A1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private StudioEventEmitter matchStartStinger;

		[Token(Token = "0x4001A1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private StudioEventEmitter preRoundStinger;

		[Token(Token = "0x4001A1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private StudioEventEmitter last30SecondsStinger;

		[Token(Token = "0x4001A1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private StudioEventEmitter bombArmedStinger;

		[Token(Token = "0x4001A20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private StudioEventEmitter winRoundStinger;

		[Token(Token = "0x4001A21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private StudioEventEmitter loseRoundStinger;

		[Token(Token = "0x4001A22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private StudioEventEmitter drawRoundStinger;

		[Token(Token = "0x4001A23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool _hasStartedLast30SecondsStinger;

		[Token(Token = "0x4001A24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private StudioEventEmitter _lastEmitterPlayed;

		[Token(Token = "0x6001BBB")]
		[Address(RVA = "0x11F46A8", Offset = "0x11F46A8", VA = "0x11F46A8")]
		private void Update()
		{
		}

		[Token(Token = "0x6001BBC")]
		[Address(RVA = "0x11F4820", Offset = "0x11F4820", VA = "0x11F4820")]
		private void Start()
		{
		}

		[Token(Token = "0x6001BBD")]
		[Address(RVA = "0x11F4990", Offset = "0x11F4990", VA = "0x11F4990")]
		private void OnRoundEnd(EventRoundEnd callback)
		{
		}

		[Token(Token = "0x6001BBE")]
		[Address(RVA = "0x11F4BA4", Offset = "0x11F4BA4", VA = "0x11F4BA4")]
		private void OnRoundPhaseChange(EventPhaseChanged callback)
		{
		}

		[Token(Token = "0x6001BBF")]
		[Address(RVA = "0x11F4AC0", Offset = "0x11F4AC0", VA = "0x11F4AC0")]
		private void PlayEmitter(StudioEventEmitter emitter)
		{
		}

		[Token(Token = "0x6001BC0")]
		[Address(RVA = "0x11F4DA4", Offset = "0x11F4DA4", VA = "0x11F4DA4")]
		public SabotageSFX()
		{
		}
	}
	[Token(Token = "0x200076C")]
	public class SpellCardSFX : MonoBehaviour
	{
		[Token(Token = "0x4001A25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private BoundValue<bool> isGrabbed;

		[Token(Token = "0x4001A26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private StudioEventEmitter spawnSFX;

		[Token(Token = "0x4001A27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private StudioEventEmitter grabSFX;

		[Token(Token = "0x4001A28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private StudioEventEmitter releaseSFX;

		[Token(Token = "0x4001A29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private ReactiveSubscription _subscription;

		[Token(Token = "0x4001A2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private EntityRef _cachedRelicSlot;

		[Token(Token = "0x6001BC1")]
		[Address(RVA = "0x1200CE8", Offset = "0x1200CE8", VA = "0x1200CE8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001BC2")]
		[Address(RVA = "0x1200DE4", Offset = "0x1200DE4", VA = "0x1200DE4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001BC3")]
		[Address(RVA = "0x1200DF0", Offset = "0x1200DF0", VA = "0x1200DF0")]
		private void OnIsGrabbed(bool newIsGrabbed)
		{
		}

		[Token(Token = "0x6001BC4")]
		[Address(RVA = "0x1200E1C", Offset = "0x1200E1C", VA = "0x1200E1C")]
		public SpellCardSFX()
		{
		}
	}
	[Token(Token = "0x200076D")]
	public class TeamDeathMatchSFX : MonoBehaviour
	{
		[Token(Token = "0x4001A2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDA388", Offset = "0xBDA388")]
		private float remainingTimeStartThreshold;

		[Token(Token = "0x4001A2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private int remainingScoreStartThreshold;

		[Token(Token = "0x4001A2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDA3E4", Offset = "0xBDA3E4")]
		[SerializeField]
		private StudioEventEmitter endOfRoundMusic;

		[Token(Token = "0x4001A2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private StudioEventEmitter matchStartStinger;

		[Token(Token = "0x4001A2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private StudioEventEmitter winRoundStinger;

		[Token(Token = "0x4001A30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private StudioEventEmitter loseRoundStinger;

		[Token(Token = "0x4001A31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private StudioEventEmitter drawRoundStinger;

		[Token(Token = "0x4001A32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool _hasStartedEndOfRoundMusic;

		[Token(Token = "0x4001A33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private StudioEventEmitter _lastEmitterPlayed;

		[Token(Token = "0x6001BC5")]
		[Address(RVA = "0x1153BA4", Offset = "0x1153BA4", VA = "0x1153BA4")]
		private void Start()
		{
		}

		[Token(Token = "0x6001BC6")]
		[Address(RVA = "0x1153D14", Offset = "0x1153D14", VA = "0x1153D14")]
		private void Update()
		{
		}

		[Token(Token = "0x6001BC7")]
		[Address(RVA = "0x1154084", Offset = "0x1154084", VA = "0x1154084")]
		private void OnRoundEnd(EventRoundEnd callback)
		{
		}

		[Token(Token = "0x6001BC8")]
		[Address(RVA = "0x11541B4", Offset = "0x11541B4", VA = "0x11541B4")]
		private void OnRoundPhaseChange(EventPhaseChanged callback)
		{
		}

		[Token(Token = "0x6001BC9")]
		[Address(RVA = "0x1153FA0", Offset = "0x1153FA0", VA = "0x1153FA0")]
		private void PlayEmitter(StudioEventEmitter emitter)
		{
		}

		[Token(Token = "0x6001BCA")]
		[Address(RVA = "0x11542A4", Offset = "0x11542A4", VA = "0x11542A4")]
		public TeamDeathMatchSFX()
		{
		}
	}
	[Token(Token = "0x200076E")]
	public class TeleportSFX : MonoBehaviour
	{
		[Token(Token = "0x4001A34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private EntityView playerEntityView;

		[Token(Token = "0x4001A35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private StudioEventEmitter teleportedSFXEmitter;

		[Token(Token = "0x4001A36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool _teleportSFXPlayed;

		[Token(Token = "0x6001BCB")]
		[Address(RVA = "0x11558E4", Offset = "0x11558E4", VA = "0x11558E4")]
		private void Update()
		{
		}

		[Token(Token = "0x6001BCC")]
		[Address(RVA = "0x1155A50", Offset = "0x1155A50", VA = "0x1155A50")]
		public TeleportSFX()
		{
		}
	}
	[Token(Token = "0x200076F")]
	public class WandSFX : MonoBehaviour
	{
		[Token(Token = "0x4001A37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private WandPartVisual chamberPart;

		[Token(Token = "0x4001A38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private StudioEventEmitter spawnSFX;

		[Token(Token = "0x4001A39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private StudioEventEmitter switchSpellSFX;

		[Token(Token = "0x4001A3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private StudioEventEmitter castSFX;

		[Token(Token = "0x4001A3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private StudioEventEmitter primaryCooldownReadySFX;

		[Token(Token = "0x4001A3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private StudioEventEmitter secondaryCooldownReadySFX;

		[Token(Token = "0x4001A3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int _currentSpellIndex;

		[Token(Token = "0x4001A3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private bool _hasPrimaryCooldown;

		[Token(Token = "0x4001A3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
		private bool _hasSecondaryCooldown;

		[Token(Token = "0x4001A40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4E")]
		private bool _hasSpellCaster;

		[Token(Token = "0x170004DC")]
		private Cortopia.Scripts.Players.Player RealPlayer
		{
			[Token(Token = "0x6001BCD")]
			[Address(RVA = "0x113B4EC", Offset = "0x113B4EC", VA = "0x113B4EC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004DD")]
		private bool IsLocal
		{
			[Token(Token = "0x6001BCE")]
			[Address(RVA = "0x113B578", Offset = "0x113B578", VA = "0x113B578")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170004DE")]
		private bool IsLeftHand
		{
			[Token(Token = "0x6001BCF")]
			[Address(RVA = "0x113B674", Offset = "0x113B674", VA = "0x113B674")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170004DF")]
		private bool ShouldUpdate
		{
			[Token(Token = "0x6001BD0")]
			[Address(RVA = "0x113B704", Offset = "0x113B704", VA = "0x113B704")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001BD1")]
		[Address(RVA = "0x113B794", Offset = "0x113B794", VA = "0x113B794")]
		private void Start()
		{
		}

		[Token(Token = "0x6001BD2")]
		[Address(RVA = "0x113B878", Offset = "0x113B878", VA = "0x113B878")]
		private void Update()
		{
		}

		[Token(Token = "0x6001BD3")]
		[Address(RVA = "0x113BB5C", Offset = "0x113BB5C", VA = "0x113BB5C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001BD4")]
		[Address(RVA = "0x113BB68", Offset = "0x113BB68", VA = "0x113BB68")]
		private void OnSpellCast(EventSpellCast callback)
		{
		}

		[Token(Token = "0x6001BD5")]
		[Address(RVA = "0x113BBD4", Offset = "0x113BBD4", VA = "0x113BBD4")]
		private bool EventForMyPlayer(EntityRef spellCaster, Frame frame)
		{
			return default(bool);
		}

		[Token(Token = "0x6001BD6")]
		[Address(RVA = "0x113BD20", Offset = "0x113BD20", VA = "0x113BD20")]
		public WandSFX()
		{
		}
	}
}
namespace Cortopia.Scripts.Animation
{
	[Token(Token = "0x2000770")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xBCBD10", Offset = "0xBCBD10")]
	public class AnimatorEnabler : MonoBehaviour
	{
		[Token(Token = "0x4001A41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[Cortopia.Scripts.CustomAttributes.ReadOnly]
		private Animator animator;

		[Token(Token = "0x6001BD7")]
		[Address(RVA = "0x1328F18", Offset = "0x1328F18", VA = "0x1328F18")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6001BD8")]
		[Address(RVA = "0x1328FB0", Offset = "0x1328FB0", VA = "0x1328FB0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001BD9")]
		[Address(RVA = "0x1328FD0", Offset = "0x1328FD0", VA = "0x1328FD0")]
		public AnimatorEnabler()
		{
		}
	}
	[Token(Token = "0x2000771")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xBCBD70", Offset = "0xBCBD70")]
	public class CanvasGroupAlphaAnim : MonoBehaviour
	{
		[Token(Token = "0x4001A42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float animTime;

		[Token(Token = "0x4001A43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AnimationCurve animCurve;

		[Token(Token = "0x4001A44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private CanvasGroup _canvas;

		[Token(Token = "0x4001A45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float _elapsedTime;

		[Token(Token = "0x4001A46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private bool _targetReached;

		[Token(Token = "0x6001BDA")]
		[Address(RVA = "0x1335494", Offset = "0x1335494", VA = "0x1335494")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001BDB")]
		[Address(RVA = "0x13354E8", Offset = "0x13354E8", VA = "0x13354E8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001BDC")]
		[Address(RVA = "0x1335534", Offset = "0x1335534", VA = "0x1335534")]
		private void Update()
		{
		}

		[Token(Token = "0x6001BDD")]
		[Address(RVA = "0x13355FC", Offset = "0x13355FC", VA = "0x13355FC")]
		public CanvasGroupAlphaAnim()
		{
		}
	}
	[Token(Token = "0x2000772")]
	public struct HandParameters
	{
		[Token(Token = "0x4001A47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly int SpellSlotIndex;

		[Token(Token = "0x4001A48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public static readonly int HasWand;

		[Token(Token = "0x4001A49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static readonly int Grab;

		[Token(Token = "0x4001A4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public static readonly int Trigger;

		[Token(Token = "0x4001A4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static readonly int Thumb;

		[Token(Token = "0x4001A4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public static readonly int IsCharging;

		[Token(Token = "0x4001A4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static readonly int FireSpell;

		[Token(Token = "0x4001A4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public static readonly int HasCard;
	}
	[Token(Token = "0x2000773")]
	public class HitReactorScaleAnimation : MonoBehaviour
	{
		[Token(Token = "0x4001A4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private BoundValue<Cortopia.Scripts.Players.Player> player;

		[Token(Token = "0x4001A50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float animationTime;

		[Token(Token = "0x4001A51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AnimationCurve scaleCurve;

		[Token(Token = "0x4001A52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float _elapsedTime;

		[Token(Token = "0x4001A53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private EventKey _lastEvent;

		[Token(Token = "0x4001A54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Vector3 _startingScale;

		[Token(Token = "0x6001BDF")]
		[Address(RVA = "0xFB3894", Offset = "0xFB3894", VA = "0xFB3894")]
		private void Start()
		{
		}

		[Token(Token = "0x6001BE0")]
		[Address(RVA = "0xFB3AE0", Offset = "0xFB3AE0", VA = "0xFB3AE0")]
		private void Update()
		{
		}

		[Token(Token = "0x6001BE1")]
		[Address(RVA = "0xFB3B88", Offset = "0xFB3B88", VA = "0xFB3B88")]
		private void OnEventCancelled(CallbackEventCanceled callback)
		{
		}

		[Token(Token = "0x6001BE2")]
		[Address(RVA = "0xFB3C40", Offset = "0xFB3C40", VA = "0xFB3C40")]
		private void OnEventHealed(EventHealedBy callback)
		{
		}

		[Token(Token = "0x6001BE3")]
		[Address(RVA = "0xFB3CF4", Offset = "0xFB3CF4", VA = "0xFB3CF4")]
		private void OnEventHit(EventHitBy callback)
		{
		}

		[Token(Token = "0x6001BE4")]
		[Address(RVA = "0xFB3DA8", Offset = "0xFB3DA8", VA = "0xFB3DA8")]
		public HitReactorScaleAnimation()
		{
		}
	}
	[Token(Token = "0x2000774")]
	public class InvertRotation : MonoBehaviour
	{
		[Token(Token = "0x4001A55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform rotationSource;

		[Token(Token = "0x4001A56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Vector3 offsetLocalRotation;

		[Token(Token = "0x4001A57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private bool shouldUpdate;

		[Token(Token = "0x4001A58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
		[SerializeField]
		private bool useWorldSpace;

		[Token(Token = "0x4001A59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E")]
		[SerializeField]
		private bool invertX;

		[Token(Token = "0x4001A5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2F")]
		[SerializeField]
		private bool invertY;

		[Token(Token = "0x4001A5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private bool invertZ;

		[Token(Token = "0x4001A5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Transform _myTransform;

		[Token(Token = "0x6001BE5")]
		[Address(RVA = "0xF820D8", Offset = "0xF820D8", VA = "0xF820D8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001BE6")]
		[Address(RVA = "0xF82100", Offset = "0xF82100", VA = "0xF82100")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001BE7")]
		[Address(RVA = "0xF821A0", Offset = "0xF821A0", VA = "0xF821A0")]
		private void Update()
		{
		}

		[Token(Token = "0x6001BE8")]
		[Address(RVA = "0xF821B0", Offset = "0xF821B0", VA = "0xF821B0")]
		public void SetOffset(Vector3 newLocalRotationOffset)
		{
		}

		[Token(Token = "0x6001BE9")]
		[Address(RVA = "0xF82104", Offset = "0xF82104", VA = "0xF82104")]
		private void SetRotation()
		{
		}

		[Token(Token = "0x6001BEA")]
		[Address(RVA = "0xF821C4", Offset = "0xF821C4", VA = "0xF821C4")]
		public InvertRotation()
		{
		}
	}
	[Token(Token = "0x2000775")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xBCBDD0", Offset = "0xBCBDD0")]
	public class LineRendererAttach : MonoBehaviour
	{
		[Token(Token = "0x4001A5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform attachmentPoint;

		[Token(Token = "0x4001A5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private LineRenderer _lineRenderer;

		[Token(Token = "0x6001BEB")]
		[Address(RVA = "0xF861BC", Offset = "0xF861BC", VA = "0xF861BC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001BEC")]
		[Address(RVA = "0xF86210", Offset = "0xF86210", VA = "0xF86210")]
		private void Update()
		{
		}

		[Token(Token = "0x6001BED")]
		[Address(RVA = "0xF86214", Offset = "0xF86214", VA = "0xF86214")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xBE3574", Offset = "0xBE3574")]
		private void UpdatePosition()
		{
		}

		[Token(Token = "0x6001BEE")]
		[Address(RVA = "0xF863BC", Offset = "0xF863BC", VA = "0xF863BC")]
		public LineRendererAttach()
		{
		}
	}
	[Token(Token = "0x2000776")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xBCBE30", Offset = "0xBCBE30")]
	public class LineWidthNormalizedFloatReactor : MonoBehaviour
	{
		[Token(Token = "0x4001A5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private BoundValue<float> normalizedTime;

		[Token(Token = "0x4001A60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float minWidth;

		[Token(Token = "0x4001A61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private float maxWidth;

		[Token(Token = "0x4001A62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AnimationCurve interpolation;

		[Token(Token = "0x4001A63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private ReactiveSubscription _subscription;

		[Token(Token = "0x4001A64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private LineRenderer _lineRenderer;

		[Token(Token = "0x6001BEF")]
		[Address(RVA = "0xF868A8", Offset = "0xF868A8", VA = "0xF868A8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001BF0")]
		[Address(RVA = "0xF868FC", Offset = "0xF868FC", VA = "0xF868FC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001BF1")]
		[Address(RVA = "0xF869E8", Offset = "0xF869E8", VA = "0xF869E8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001BF2")]
		[Address(RVA = "0xF869F4", Offset = "0xF869F4", VA = "0xF869F4")]
		private void OnNormalizedTimeChanged(float value)
		{
		}

		[Token(Token = "0x6001BF3")]
		[Address(RVA = "0xF86A58", Offset = "0xF86A58", VA = "0xF86A58")]
		public LineWidthNormalizedFloatReactor()
		{
		}
	}
	[Token(Token = "0x2000777")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xBCBE90", Offset = "0xBCBE90")]
	public class LocalPositionAnim : MonoBehaviour
	{
		[Token(Token = "0x4001A65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float animTime;

		[Token(Token = "0x4001A66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private Vector3 localPositionTarget;

		[Token(Token = "0x4001A67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AnimationCurve animCurve;

		[Token(Token = "0x4001A68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Transform _transform;

		[Token(Token = "0x4001A69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 _startingLocalPosition;

		[Token(Token = "0x4001A6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float _elapsedTime;

		[Token(Token = "0x4001A6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool _targetReached;

		[Token(Token = "0x6001BF4")]
		[Address(RVA = "0xF88CA8", Offset = "0xF88CA8", VA = "0xF88CA8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001BF5")]
		[Address(RVA = "0xF88CE8", Offset = "0xF88CE8", VA = "0xF88CE8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001BF6")]
		[Address(RVA = "0xF88D18", Offset = "0xF88D18", VA = "0xF88D18")]
		private void Update()
		{
		}

		[Token(Token = "0x6001BF7")]
		[Address(RVA = "0xF88E00", Offset = "0xF88E00", VA = "0xF88E00")]
		public LocalPositionAnim()
		{
		}
	}
	[Token(Token = "0x2000778")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xBCBEF0", Offset = "0xBCBEF0")]
	public class LocalScaleAnim : MonoBehaviour
	{
		[Token(Token = "0x4001A6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float animTime;

		[Token(Token = "0x4001A6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AnimationCurve animCurve;

		[Token(Token = "0x4001A6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Transform _transform;

		[Token(Token = "0x4001A6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 _startingScale;

		[Token(Token = "0x4001A70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float _elapsedTime;

		[Token(Token = "0x4001A71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool _targetReached;

		[Token(Token = "0x6001BF8")]
		[Address(RVA = "0xF89A44", Offset = "0xF89A44", VA = "0xF89A44")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001BF9")]
		[Address(RVA = "0xF89A84", Offset = "0xF89A84", VA = "0xF89A84")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001BFA")]
		[Address(RVA = "0xF89AF8", Offset = "0xF89AF8", VA = "0xF89AF8")]
		private void Update()
		{
		}

		[Token(Token = "0x6001BFB")]
		[Address(RVA = "0xF89BEC", Offset = "0xF89BEC", VA = "0xF89BEC")]
		public LocalScaleAnim()
		{
		}
	}
	[Token(Token = "0x2000779")]
	public class LookAtCamera : MonoBehaviour
	{
		[Token(Token = "0x4001A72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool useCameraUp;

		[Token(Token = "0x4001A73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[SerializeField]
		private bool useZeroX;

		[Token(Token = "0x4001A74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Transform _cameraTransform;

		[Token(Token = "0x6001BFC")]
		[Address(RVA = "0xF8B548", Offset = "0xF8B548", VA = "0xF8B548")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001BFD")]
		[Address(RVA = "0xF8B6B4", Offset = "0xF8B6B4", VA = "0xF8B6B4")]
		private void Update()
		{
		}

		[Token(Token = "0x6001BFE")]
		[Address(RVA = "0xF8B54C", Offset = "0xF8B54C", VA = "0xF8B54C")]
		private void RotateTowardsCamera()
		{
		}

		[Token(Token = "0x6001BFF")]
		[Address(RVA = "0xF8B6B8", Offset = "0xF8B6B8", VA = "0xF8B6B8")]
		public LookAtCamera()
		{
		}
	}
	[Token(Token = "0x200077A")]
	public class Rotator : MonoBehaviour
	{
		[Token(Token = "0x4001A75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float xAnglePerSecond;

		[Token(Token = "0x4001A76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float yAnglePerSecond;

		[Token(Token = "0x4001A77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float zAnglePerSecond;

		[Token(Token = "0x4001A78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Transform _myTransform;

		[Token(Token = "0x6001C00")]
		[Address(RVA = "0x11F3DC4", Offset = "0x11F3DC4", VA = "0x11F3DC4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001C01")]
		[Address(RVA = "0x11F3DEC", Offset = "0x11F3DEC", VA = "0x11F3DEC")]
		private void Update()
		{
		}

		[Token(Token = "0x6001C02")]
		[Address(RVA = "0x11F3E70", Offset = "0x11F3E70", VA = "0x11F3E70")]
		public Rotator()
		{
		}
	}
	[Token(Token = "0x200077B")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xBCBF50", Offset = "0xBCBF50")]
	public class ScaleNormalizedFloatReactor : MonoBehaviour
	{
		[Token(Token = "0x4001A79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private BoundValue<float> normalizedTime;

		[Token(Token = "0x4001A7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Vector3 minScale;

		[Token(Token = "0x4001A7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private Vector3 maxScale;

		[Token(Token = "0x4001A7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private AnimationCurve interpolation;

		[Token(Token = "0x4001A7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private ReactiveSubscription _subscription;

		[Token(Token = "0x4001A7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Transform _transform;

		[Token(Token = "0x6001C03")]
		[Address(RVA = "0x11F57A0", Offset = "0x11F57A0", VA = "0x11F57A0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001C04")]
		[Address(RVA = "0x11F57F4", Offset = "0x11F57F4", VA = "0x11F57F4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001C05")]
		[Address(RVA = "0x11F58E0", Offset = "0x11F58E0", VA = "0x11F58E0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001C06")]
		[Address(RVA = "0x11F58EC", Offset = "0x11F58EC", VA = "0x11F58EC")]
		private void OnNormalizedTimeChanged(float value)
		{
		}

		[Token(Token = "0x6001C07")]
		[Address(RVA = "0x11F597C", Offset = "0x11F597C", VA = "0x11F597C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xBE35AC", Offset = "0xBE35AC")]
		private void SetStartScale()
		{
		}

		[Token(Token = "0x6001C08")]
		[Address(RVA = "0x11F59B8", Offset = "0x11F59B8", VA = "0x11F59B8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xBE35E4", Offset = "0xBE35E4")]
		private void SetEndScale()
		{
		}

		[Token(Token = "0x6001C09")]
		[Address(RVA = "0x11F59F4", Offset = "0x11F59F4", VA = "0x11F59F4")]
		public ScaleNormalizedFloatReactor()
		{
		}
	}
	[Token(Token = "0x200077C")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xBCBFB0", Offset = "0xBCBFB0")]
	public class ScaleReactor : MonoBehaviour
	{
		[Token(Token = "0x4001A7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private BoundValue<bool> isActivated;

		[Token(Token = "0x4001A80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Vector3 activatedScale;

		[Token(Token = "0x4001A81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private float lerpSpeed;

		[Token(Token = "0x4001A82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private AnimationCurve lerpVelocity;

		[Token(Token = "0x4001A83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float _lerpInterpolation;

		[Token(Token = "0x4001A84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Transform _transform;

		[Token(Token = "0x4001A85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vector3 _startingLocalScale;

		[Token(Token = "0x6001C0A")]
		[Address(RVA = "0x11F5A34", Offset = "0x11F5A34", VA = "0x11F5A34")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001C0B")]
		[Address(RVA = "0x11F5AA0", Offset = "0x11F5AA0", VA = "0x11F5AA0")]
		private void Update()
		{
		}

		[Token(Token = "0x6001C0C")]
		[Address(RVA = "0x11F5BF0", Offset = "0x11F5BF0", VA = "0x11F5BF0")]
		public ScaleReactor()
		{
		}
	}
	[Token(Token = "0x200077D")]
	public class ScaleToCamera : MonoBehaviour
	{
		[Token(Token = "0x4001A86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float referenceDistance;

		[Token(Token = "0x4001A87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float minScale;

		[Token(Token = "0x4001A88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Transform _cameraTransform;

		[Token(Token = "0x4001A89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 _startingScale;

		[Token(Token = "0x6001C0D")]
		[Address(RVA = "0x11F5C30", Offset = "0x11F5C30", VA = "0x11F5C30")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001C0E")]
		[Address(RVA = "0x11F5C6C", Offset = "0x11F5C6C", VA = "0x11F5C6C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001C0F")]
		[Address(RVA = "0x11F5E48", Offset = "0x11F5E48", VA = "0x11F5E48")]
		private void Update()
		{
		}

		[Token(Token = "0x6001C10")]
		[Address(RVA = "0x11F5C70", Offset = "0x11F5C70", VA = "0x11F5C70")]
		private void SetScale()
		{
		}

		[Token(Token = "0x6001C11")]
		[Address(RVA = "0x11F5E4C", Offset = "0x11F5E4C", VA = "0x11F5E4C")]
		public ScaleToCamera()
		{
		}
	}
	[Token(Token = "0x200077E")]
	public class ScriptedProjectileVisuals : MonoBehaviour
	{
		[Token(Token = "0x4001A8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private SpellFXControl projectile;

		[Token(Token = "0x4001A8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private SpellFXControl impact;

		[Token(Token = "0x4001A8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float speed;

		[Token(Token = "0x4001A8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private float distance;

		[Token(Token = "0x6001C12")]
		[Address(RVA = "0x11F6C5C", Offset = "0x11F6C5C", VA = "0x11F6C5C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001C13")]
		[Address(RVA = "0x11F6E64", Offset = "0x11F6E64", VA = "0x11F6E64")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001C14")]
		[Address(RVA = "0x11F6ECC", Offset = "0x11F6ECC", VA = "0x11F6ECC")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6001C15")]
		[Address(RVA = "0x11F6F58", Offset = "0x11F6F58", VA = "0x11F6F58")]
		public ScriptedProjectileVisuals()
		{
		}
	}
	[Token(Token = "0x200077F")]
	public class Sway : MonoBehaviour
	{
		[Token(Token = "0x4001A8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDA7B8", Offset = "0xBDA7B8")]
		[SerializeField]
		private AnimationCurve xMovement;

		[Token(Token = "0x4001A8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AnimationCurve yMovement;

		[Token(Token = "0x4001A90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AnimationCurve zMovement;

		[Token(Token = "0x4001A91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDA824", Offset = "0xBDA824")]
		[SerializeField]
		private AnimationCurve xRotation;

		[Token(Token = "0x4001A92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private AnimationCurve yRotation;

		[Token(Token = "0x4001A93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private AnimationCurve zRotation;

		[Token(Token = "0x4001A94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDA890", Offset = "0xBDA890")]
		private float loopTime;

		[Token(Token = "0x4001A95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float _elapsedTime;

		[Token(Token = "0x4001A96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Transform _myTransform;

		[Token(Token = "0x4001A97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Quaternion _staringLocalRotation;

		[Token(Token = "0x4001A98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Vector3 _startingLocalPosition;

		[Token(Token = "0x6001C16")]
		[Address(RVA = "0x114F4D4", Offset = "0x114F4D4", VA = "0x114F4D4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001C17")]
		[Address(RVA = "0x114F52C", Offset = "0x114F52C", VA = "0x114F52C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001C18")]
		[Address(RVA = "0x114F69C", Offset = "0x114F69C", VA = "0x114F69C")]
		public Sway()
		{
		}
	}
	[Token(Token = "0x2000780")]
	public class TurretVisualsAim : MonoBehaviour
	{
		[Token(Token = "0x4001A99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private EntityView turretBaseEntityView;

		[Token(Token = "0x4001A9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform yawTransform;

		[Token(Token = "0x4001A9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform pitchTransform;

		[Token(Token = "0x4001A9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private EntityView _turretHeadEntityView;

		[Token(Token = "0x6001C19")]
		[Address(RVA = "0x1159D34", Offset = "0x1159D34", VA = "0x1159D34")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001C1A")]
		[Address(RVA = "0x1159D3C", Offset = "0x1159D3C", VA = "0x1159D3C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001C1B")]
		[Address(RVA = "0x1159DCC", Offset = "0x1159DCC", VA = "0x1159DCC")]
		private bool GetTurretHead()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C1C")]
		[Address(RVA = "0x115A044", Offset = "0x115A044", VA = "0x115A044")]
		public TurretVisualsAim()
		{
		}
	}
}
namespace Cortopia.Scripts.Animation.UIAnimation
{
	[Token(Token = "0x2000781")]
	public class ButtonColorReactor : MonoBehaviour
	{
		[Token(Token = "0x4001A9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private BoundValue<bool> isHighlighted;

		[Token(Token = "0x4001A9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private BoundValue<bool> isInteractable;

		[Token(Token = "0x4001A9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Graphic graphic;

		[Token(Token = "0x4001AA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Color highlighted;

		[Token(Token = "0x4001AA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Color interactable;

		[Token(Token = "0x4001AA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Color notInteractable;

		[Token(Token = "0x4001AA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private ReactiveSubscription _buttonStateSubscription;

		[Token(Token = "0x6001C1D")]
		[Address(RVA = "0x133472C", Offset = "0x133472C", VA = "0x133472C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001C1E")]
		[Address(RVA = "0x1334854", Offset = "0x1334854", VA = "0x1334854")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001C1F")]
		[Address(RVA = "0x1334860", Offset = "0x1334860", VA = "0x1334860")]
		private void OnStateChange((bool, bool) stateTuple)
		{
		}

		[Token(Token = "0x6001C20")]
		[Address(RVA = "0x13349AC", Offset = "0x13349AC", VA = "0x13349AC")]
		public ButtonColorReactor()
		{
		}
	}
	[Token(Token = "0x2000782")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xBCC010", Offset = "0xBCC010")]
	public class ButtonScaleReactor : MonoBehaviour
	{
		[Token(Token = "0x4001AA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private BoundValue<bool> isHighlighted;

		[Token(Token = "0x4001AA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Vector3 highlightScale;

		[Token(Token = "0x4001AA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private float lerpSpeed;

		[Token(Token = "0x4001AA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private AnimationCurve lerpVelocity;

		[Token(Token = "0x4001AA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float _lerpInterpolation;

		[Token(Token = "0x4001AA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private RectTransform _rectTransform;

		[Token(Token = "0x4001AAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vector3 _startingLocalScale;

		[Token(Token = "0x6001C21")]
		[Address(RVA = "0x13349B4", Offset = "0x13349B4", VA = "0x13349B4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001C22")]
		[Address(RVA = "0x1334A20", Offset = "0x1334A20", VA = "0x1334A20")]
		private void Update()
		{
		}

		[Token(Token = "0x6001C23")]
		[Address(RVA = "0x1334B70", Offset = "0x1334B70", VA = "0x1334B70")]
		public ButtonScaleReactor()
		{
		}
	}
	[Token(Token = "0x2000783")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xBCC070", Offset = "0xBCC070")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xBCC070", Offset = "0xBCC070")]
	public class CanvasAlphaBoolAnimReactor : MonoBehaviour
	{
		[Token(Token = "0x4001AAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private BoundValue<bool> boolValue;

		[Token(Token = "0x4001AAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float trueAlpha;

		[Token(Token = "0x4001AAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private float falseAlpha;

		[Token(Token = "0x4001AAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float animationTime;

		[Token(Token = "0x4001AAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private AnimationCurve lerpVelocity;

		[Token(Token = "0x4001AB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[Cortopia.Scripts.CustomAttributes.ReadOnly]
		[SerializeField]
		private CanvasGroup canvasGroup;

		[Token(Token = "0x4001AB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		[Cortopia.Scripts.CustomAttributes.ReadOnly]
		private Canvas canvas;

		[Token(Token = "0x4001AB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float _elapsedTime;

		[Token(Token = "0x4001AB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private bool _hasFinalizedFade;

		[Token(Token = "0x4001AB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private ReactiveSubscription _subscription;

		[Token(Token = "0x6001C24")]
		[Address(RVA = "0x13350EC", Offset = "0x13350EC", VA = "0x13350EC")]
		private void Update()
		{
		}

		[Token(Token = "0x6001C25")]
		[Address(RVA = "0x1335264", Offset = "0x1335264", VA = "0x1335264")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001C26")]
		[Address(RVA = "0x1335350", Offset = "0x1335350", VA = "0x1335350")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001C27")]
		[Address(RVA = "0x133535C", Offset = "0x133535C", VA = "0x133535C")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6001C28")]
		[Address(RVA = "0x1335448", Offset = "0x1335448", VA = "0x1335448")]
		private void OnValueChanged(bool newValue)
		{
		}

		[Token(Token = "0x6001C29")]
		[Address(RVA = "0x1335454", Offset = "0x1335454", VA = "0x1335454")]
		public CanvasAlphaBoolAnimReactor()
		{
		}
	}
	[Token(Token = "0x2000784")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xBCC104", Offset = "0xBCC104")]
	public class GraphicBoolColorAnimReactor : MonoBehaviour
	{
		[Token(Token = "0x4001AB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private BoundValue<bool> boolValue;

		[Token(Token = "0x4001AB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Color trueColor;

		[Token(Token = "0x4001AB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Color falseColor;

		[Token(Token = "0x4001AB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private float lerpSpeed;

		[Token(Token = "0x4001AB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private AnimationCurve lerpVelocity;

		[Token(Token = "0x4001ABA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Cortopia.Scripts.CustomAttributes.ReadOnly]
		[SerializeField]
		private Graphic graphic;

		[Token(Token = "0x4001ABB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float _lerpInterpolation;

		[Token(Token = "0x4001ABC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private ReactiveSubscription _subscription;

		[Token(Token = "0x6001C2A")]
		[Address(RVA = "0xFAA278", Offset = "0xFAA278", VA = "0xFAA278")]
		private void Update()
		{
		}

		[Token(Token = "0x6001C2B")]
		[Address(RVA = "0xFAA3B4", Offset = "0xFAA3B4", VA = "0xFAA3B4")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6001C2C")]
		[Address(RVA = "0xFAA448", Offset = "0xFAA448", VA = "0xFAA448")]
		public GraphicBoolColorAnimReactor()
		{
		}
	}
	[Token(Token = "0x2000785")]
	public class GraphicColorToggle : GraphicToggle
	{
		[Token(Token = "0x4001ABD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Graphic imageTarget;

		[Token(Token = "0x4001ABE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Color trueSprite;

		[Token(Token = "0x4001ABF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Color falseSprite;

		[Token(Token = "0x6001C2D")]
		[Address(RVA = "0xFAA86C", Offset = "0xFAA86C", VA = "0xFAA86C", Slot = "4")]
		public override void SetState(bool isOn)
		{
		}

		[Token(Token = "0x6001C2E")]
		[Address(RVA = "0xFAA950", Offset = "0xFAA950", VA = "0xFAA950")]
		public GraphicColorToggle()
		{
		}
	}
	[Token(Token = "0x2000786")]
	public abstract class GraphicToggle : MonoBehaviour
	{
		[Token(Token = "0x6001C2F")]
		public abstract void SetState(bool isOn);

		[Token(Token = "0x6001C30")]
		[Address(RVA = "0xFAA958", Offset = "0xFAA958", VA = "0xFAA958")]
		protected GraphicToggle()
		{
		}
	}
	[Token(Token = "0x2000787")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xBCC164", Offset = "0xBCC164")]
	public class HighlightPositionLerp : MonoBehaviour
	{
		[Token(Token = "0x4001AC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private BoundValue<bool> isHighlighted;

		[Token(Token = "0x4001AC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Vector3 highlightOffsetLocalPosition;

		[Token(Token = "0x4001AC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private float lerpSpeed;

		[Token(Token = "0x4001AC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private AnimationCurve lerpVelocity;

		[Token(Token = "0x4001AC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 _endLocalPosition;

		[Token(Token = "0x4001AC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float _lerpInterpolation;

		[Token(Token = "0x4001AC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private RectTransform _rectTransform;

		[Token(Token = "0x4001AC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Vector3 _startingLocalPosition;

		[Token(Token = "0x6001C31")]
		[Address(RVA = "0xFB30BC", Offset = "0xFB30BC", VA = "0xFB30BC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001C32")]
		[Address(RVA = "0xFB3144", Offset = "0xFB3144", VA = "0xFB3144")]
		private void Update()
		{
		}

		[Token(Token = "0x6001C33")]
		[Address(RVA = "0xFB3294", Offset = "0xFB3294", VA = "0xFB3294")]
		public HighlightPositionLerp()
		{
		}
	}
	[Token(Token = "0x2000788")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xBCC1C4", Offset = "0xBCC1C4")]
	public class SimpleRectAnimation : MonoBehaviour
	{
		[Token(Token = "0x4001AC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Vector3 targetPosition;

		[Token(Token = "0x4001AC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private Vector3 targetRotation;

		[Token(Token = "0x4001ACA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Vector3 targetScale;

		[Token(Token = "0x4001ACB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private float animationTime;

		[Token(Token = "0x4001ACC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private AnimationCurve velocityCurve;

		[Token(Token = "0x4001ACD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float _elapsedTime;

		[Token(Token = "0x4001ACE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private RectTransform _rectTransform;

		[Token(Token = "0x4001ACF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Vector3 _startingLocalPosition;

		[Token(Token = "0x4001AD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private Vector3 _startingLocalRotation;

		[Token(Token = "0x4001AD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Vector3 _startingLocalScale;

		[Token(Token = "0x6001C34")]
		[Address(RVA = "0x11F9630", Offset = "0x11F9630", VA = "0x11F9630")]
		private void Update()
		{
		}

		[Token(Token = "0x6001C35")]
		[Address(RVA = "0x11F97C8", Offset = "0x11F97C8", VA = "0x11F97C8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001C36")]
		[Address(RVA = "0x11F98D4", Offset = "0x11F98D4", VA = "0x11F98D4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001C37")]
		[Address(RVA = "0x11F9944", Offset = "0x11F9944", VA = "0x11F9944")]
		public SimpleRectAnimation()
		{
		}
	}
	[Token(Token = "0x2000789")]
	public class SpriteToggle : MonoBehaviour
	{
		[Token(Token = "0x4001AD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private BoundValue<bool> isToggleActive;

		[Token(Token = "0x4001AD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Image imageTarget;

		[Token(Token = "0x4001AD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Sprite trueSprite;

		[Token(Token = "0x4001AD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Sprite falseSprite;

		[Token(Token = "0x4001AD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private ReactiveSubscription _subscription;

		[Token(Token = "0x6001C38")]
		[Address(RVA = "0x114A21C", Offset = "0x114A21C", VA = "0x114A21C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001C39")]
		[Address(RVA = "0x114A308", Offset = "0x114A308", VA = "0x114A308")]
		private void OnValueChanged(bool isActive)
		{
		}

		[Token(Token = "0x6001C3A")]
		[Address(RVA = "0x114A3C8", Offset = "0x114A3C8", VA = "0x114A3C8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001C3B")]
		[Address(RVA = "0x114A3D4", Offset = "0x114A3D4", VA = "0x114A3D4")]
		public SpriteToggle()
		{
		}
	}
	[Token(Token = "0x200078A")]
	public class ToggleColorReactor : MonoBehaviour
	{
		[Token(Token = "0x4001AD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private BoundValue<bool> isOn;

		[Token(Token = "0x4001AD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private BoundValue<bool> isHighlighted;

		[Token(Token = "0x4001AD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private BoundValue<bool> isInteractable;

		[Token(Token = "0x4001ADA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Graphic graphic;

		[Token(Token = "0x4001ADB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Color toggleOn;

		[Token(Token = "0x4001ADC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Color highlighted;

		[Token(Token = "0x4001ADD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Color interactable;

		[Token(Token = "0x4001ADE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private Color notInteractable;

		[Token(Token = "0x4001ADF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private ReactiveSubscription _buttonStateSubscription;

		[Token(Token = "0x6001C3C")]
		[Address(RVA = "0x1158E34", Offset = "0x1158E34", VA = "0x1158E34")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001C3D")]
		[Address(RVA = "0x1158F80", Offset = "0x1158F80", VA = "0x1158F80")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001C3E")]
		[Address(RVA = "0x1158F8C", Offset = "0x1158F8C", VA = "0x1158F8C")]
		private void OnStateChange((bool, bool, bool) stateTuple)
		{
		}

		[Token(Token = "0x6001C3F")]
		[Address(RVA = "0x11590F8", Offset = "0x11590F8", VA = "0x11590F8")]
		public ToggleColorReactor()
		{
		}
	}
	[Token(Token = "0x200078B")]
	public class TransformRotationSlerp : MonoBehaviour
	{
		[Token(Token = "0x4001AE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Vector3 startingRotation;

		[Token(Token = "0x4001AE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private bool playOnce;

		[Token(Token = "0x4001AE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float animationTime;

		[Token(Token = "0x4001AE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private AnimationCurve velocityCurve;

		[Token(Token = "0x4001AE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool _animationStarted;

		[Token(Token = "0x4001AE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float _elapsedTime;

		[Token(Token = "0x4001AE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool _isAnimating;

		[Token(Token = "0x4001AE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Quaternion _startingRotation;

		[Token(Token = "0x4001AE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private ReactiveSubscription _subscription;

		[Token(Token = "0x4001AE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Quaternion _targetRotation;

		[Token(Token = "0x6001C40")]
		[Address(RVA = "0x1159AC0", Offset = "0x1159AC0", VA = "0x1159AC0")]
		private void Start()
		{
		}

		[Token(Token = "0x6001C41")]
		[Address(RVA = "0x1159B20", Offset = "0x1159B20", VA = "0x1159B20")]
		private void Update()
		{
		}

		[Token(Token = "0x6001C42")]
		[Address(RVA = "0x1159C04", Offset = "0x1159C04", VA = "0x1159C04")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001C43")]
		[Address(RVA = "0x1159C24", Offset = "0x1159C24", VA = "0x1159C24")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001C44")]
		[Address(RVA = "0x1159C38", Offset = "0x1159C38", VA = "0x1159C38")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xBE361C", Offset = "0xBE361C")]
		private void CopyTargetRotation()
		{
		}

		[Token(Token = "0x6001C45")]
		[Address(RVA = "0x1159C94", Offset = "0x1159C94", VA = "0x1159C94")]
		public TransformRotationSlerp()
		{
		}
	}
}
namespace Cortopia.Scripts.Animation.Timeline
{
	[Token(Token = "0x200078C")]
	public class MultiPlayableDirectorStopper : MonoBehaviour
	{
		[Token(Token = "0x4001AEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private PlayableDirector[] playableDirectors;

		[Token(Token = "0x6001C46")]
		[Address(RVA = "0x1019A98", Offset = "0x1019A98", VA = "0x1019A98")]
		public void StopAllDirectors(bool stopSelf)
		{
		}

		[Token(Token = "0x6001C47")]
		[Address(RVA = "0x1019BD4", Offset = "0x1019BD4", VA = "0x1019BD4")]
		public MultiPlayableDirectorStopper()
		{
		}
	}
	[Token(Token = "0x200078D")]
	public class StoryTellingDirector : MonoBehaviour
	{
		[Token(Token = "0x4001AEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private PlayableDirector[] bookPlayables;

		[Token(Token = "0x4001AEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly ReactiveSource<bool> _timelineIsPlaying;

		[Token(Token = "0x4001AED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBDACD4", Offset = "0xBDACD4")]
		private readonly Reactive<bool> <TimelineIsPlaying>k__BackingField;

		[Token(Token = "0x170004E0")]
		public Reactive<bool> TimelineIsPlaying
		{
			[Token(Token = "0x6001C49")]
			[Address(RVA = "0x114C34C", Offset = "0x114C34C", VA = "0x114C34C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBE3654", Offset = "0xBE3654")]
			get
			{
				return default(Reactive<bool>);
			}
		}

		[Token(Token = "0x6001C48")]
		[Address(RVA = "0x114C294", Offset = "0x114C294", VA = "0x114C294")]
		private StoryTellingDirector()
		{
		}

		[Token(Token = "0x6001C4A")]
		[Address(RVA = "0x114C354", Offset = "0x114C354", VA = "0x114C354")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001C4B")]
		[Address(RVA = "0x114C450", Offset = "0x114C450", VA = "0x114C450")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001C4C")]
		[Address(RVA = "0x114C57C", Offset = "0x114C57C", VA = "0x114C57C")]
		public void PlayBook(int chapter)
		{
		}

		[Token(Token = "0x6001C4D")]
		[Address(RVA = "0x114C634", Offset = "0x114C634", VA = "0x114C634")]
		private void PlayableOnStopped(PlayableDirector obj)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200078E")]
	public class TimeMachineBehaviour : PlayableBehaviour
	{
		[Token(Token = "0x200078F")]
		public enum TimeMachineAction
		{
			[Token(Token = "0x4001AF2")]
			Marker,
			[Token(Token = "0x4001AF3")]
			JumpToMarker
		}

		[Token(Token = "0x2000790")]
		public enum TimeMachineCondition
		{
			[Token(Token = "0x4001AF5")]
			Always,
			[Token(Token = "0x4001AF6")]
			ScriptableBool
		}

		[Token(Token = "0x4001AEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public TimeMachineAction action;

		[Token(Token = "0x4001AEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string markerToJumpTo;

		[Token(Token = "0x4001AF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string markerLabel;

		[Token(Token = "0x6001C4E")]
		[Address(RVA = "0x11574D0", Offset = "0x11574D0", VA = "0x11574D0")]
		public TimeMachineBehaviour()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000791")]
	public class TimeMachineClip : PlayableAsset, ITimelineClipAsset
	{
		[Token(Token = "0x4001AF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TimeMachineBehaviour.TimeMachineAction action;

		[Token(Token = "0x4001AF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string markerLabel;

		[Token(Token = "0x4001AF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string markerToJumpTo;

		[Token(Token = "0x4001AFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool scriptableBoolCondition;

		[Token(Token = "0x4001AFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private TimeMachineBehaviour _template;

		[Token(Token = "0x170004E1")]
		public ClipCaps clipCaps
		{
			[Token(Token = "0x6001C4F")]
			[Address(RVA = "0x11574D8", Offset = "0x11574D8", VA = "0x11574D8", Slot = "9")]
			get
			{
				return default(ClipCaps);
			}
		}

		[Token(Token = "0x6001C50")]
		[Address(RVA = "0x11574E0", Offset = "0x11574E0", VA = "0x11574E0", Slot = "6")]
		public override Playable CreatePlayable(PlayableGraph graph, GameObject owner)
		{
			return default(Playable);
		}

		[Token(Token = "0x6001C51")]
		[Address(RVA = "0x11575F0", Offset = "0x11575F0", VA = "0x11575F0")]
		public TimeMachineClip()
		{
		}
	}
	[Token(Token = "0x2000792")]
	public class TimeMachineMixerBehaviour : PlayableBehaviour
	{
		[Token(Token = "0x4001AFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Dictionary<string, double> MarkerClips;

		[Token(Token = "0x6001C52")]
		[Address(RVA = "0x115768C", Offset = "0x115768C", VA = "0x115768C", Slot = "20")]
		public override void ProcessFrame(Playable playable, FrameData info, object playerData)
		{
		}

		[Token(Token = "0x6001C53")]
		[Address(RVA = "0x11578F4", Offset = "0x11578F4", VA = "0x11578F4")]
		public TimeMachineMixerBehaviour()
		{
		}
	}
	[Token(Token = "0x2000793")]
	[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0xBCC224", Offset = "0xBCC224")]
	[AttributeAttribute(Name = "TrackColorAttribute", RVA = "0xBCC224", Offset = "0xBCC224")]
	public class TimeMachineTrack : TrackAsset
	{
		[Token(Token = "0x6001C54")]
		[Address(RVA = "0x11578FC", Offset = "0x11578FC", VA = "0x11578FC", Slot = "23")]
		public override Playable CreateTrackMixer(PlayableGraph graph, GameObject go, int inputCount)
		{
			return default(Playable);
		}

		[Token(Token = "0x6001C55")]
		[Address(RVA = "0x1157DC0", Offset = "0x1157DC0", VA = "0x1157DC0")]
		public TimeMachineTrack()
		{
		}
	}
}
namespace Cortopia.Scripts.Animation.SMBs
{
	[Token(Token = "0x2000794")]
	public class SMBAnimatorDeActivator : StateMachineBehaviour
	{
		[Token(Token = "0x4001AFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float updateExecutionTime;

		[Token(Token = "0x4001AFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private SMBState executionState;

		[Token(Token = "0x6001C56")]
		[Address(RVA = "0x11F42E4", Offset = "0x11F42E4", VA = "0x11F42E4", Slot = "4")]
		public override void OnStateEnter(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
		{
		}

		[Token(Token = "0x6001C57")]
		[Address(RVA = "0x11F4310", Offset = "0x11F4310", VA = "0x11F4310", Slot = "6")]
		public override void OnStateExit(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
		{
		}

		[Token(Token = "0x6001C58")]
		[Address(RVA = "0x11F4340", Offset = "0x11F4340", VA = "0x11F4340", Slot = "5")]
		public override void OnStateUpdate(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
		{
		}

		[Token(Token = "0x6001C59")]
		[Address(RVA = "0x11F43A4", Offset = "0x11F43A4", VA = "0x11F43A4")]
		public SMBAnimatorDeActivator()
		{
		}
	}
	[Token(Token = "0x2000795")]
	public class SMBParameterController : StateMachineBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000796")]
		public struct IntParameter
		{
			[Token(Token = "0x4001B05")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string parameterID;

			[Token(Token = "0x4001B06")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int newValue;
		}

		[Token(Token = "0x4001AFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private string[] boolsToEnable;

		[Token(Token = "0x4001B00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private string[] boolsToDisable;

		[Token(Token = "0x4001B01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private string[] triggersToSet;

		[Token(Token = "0x4001B02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private string[] triggersToReset;

		[Token(Token = "0x4001B03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private IntParameter[] intsToSet;

		[Token(Token = "0x4001B04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private SMBState executionState;

		[Token(Token = "0x6001C5A")]
		[Address(RVA = "0x11F43AC", Offset = "0x11F43AC", VA = "0x11F43AC", Slot = "4")]
		public override void OnStateEnter(Animator animator, AnimatorStateInfo animatorStateInfo, int layerIndex)
		{
		}

		[Token(Token = "0x6001C5B")]
		[Address(RVA = "0x11F4588", Offset = "0x11F4588", VA = "0x11F4588", Slot = "6")]
		public override void OnStateExit(Animator animator, AnimatorStateInfo animatorStateInfo, int layerIndex)
		{
		}

		[Token(Token = "0x6001C5C")]
		[Address(RVA = "0x11F459C", Offset = "0x11F459C", VA = "0x11F459C", Slot = "5")]
		public override void OnStateUpdate(Animator animator, AnimatorStateInfo animatorStateInfo, int layerIndex)
		{
		}

		[Token(Token = "0x6001C5D")]
		[Address(RVA = "0x11F43BC", Offset = "0x11F43BC", VA = "0x11F43BC")]
		private void SetParameters(Animator animator)
		{
		}

		[Token(Token = "0x6001C5E")]
		[Address(RVA = "0x11F45B0", Offset = "0x11F45B0", VA = "0x11F45B0")]
		public SMBParameterController()
		{
		}
	}
	[Token(Token = "0x2000797")]
	public class SMBRandomOffset : StateMachineBehaviour
	{
		[Token(Token = "0x4001B07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private string offsetParameterName;

		[Token(Token = "0x4001B08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Vector2 randomNormalizedRange;

		[Token(Token = "0x6001C5F")]
		[Address(RVA = "0x11F4660", Offset = "0x11F4660", VA = "0x11F4660", Slot = "4")]
		public override void OnStateEnter(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
		{
		}

		[Token(Token = "0x6001C60")]
		[Address(RVA = "0x11F46A0", Offset = "0x11F46A0", VA = "0x11F46A0")]
		public SMBRandomOffset()
		{
		}
	}
	[Token(Token = "0x2000798")]
	public enum SMBState
	{
		[Token(Token = "0x4001B0A")]
		OnEnter,
		[Token(Token = "0x4001B0B")]
		OnUpdate,
		[Token(Token = "0x4001B0C")]
		OnExit
	}
}
namespace Cortopia.Scripts.Animation.Constraints
{
	[Token(Token = "0x2000799")]
	public class LerpConstraint : MonoBehaviour
	{
		[Token(Token = "0x4001B0D")]
		private const float LerpBufferAngle = 45f;

		[Token(Token = "0x4001B0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDAD84", Offset = "0xBDAD84")]
		private Transform parentJoint;

		[Token(Token = "0x4001B0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform childJoint;

		[Token(Token = "0x4001B10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDADE0", Offset = "0xBDADE0")]
		private bool constrainPosition;

		[Token(Token = "0x4001B11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		[SerializeField]
		private bool keepPositionOffset;

		[Token(Token = "0x4001B12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
		[SerializeField]
		private bool lerpPosition;

		[Token(Token = "0x4001B13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private float positionLerpStrength;

		[Token(Token = "0x4001B14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDAE5C", Offset = "0xBDAE5C")]
		private bool constrainRotation;

		[Token(Token = "0x4001B15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		[SerializeField]
		private bool keepRotationOffset;

		[Token(Token = "0x4001B16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
		[SerializeField]
		private bool lerpRotation;

		[Token(Token = "0x4001B17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private float rotationLerpStrength;

		[Token(Token = "0x4001B18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDAED8", Offset = "0xBDAED8")]
		private bool activateConstraintOnStart;

		[Token(Token = "0x4001B19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private UpdateMode updateMode;

		[Token(Token = "0x4001B1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Vector3 _childPositionOffset;

		[Token(Token = "0x4001B1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Quaternion _childRotationOffset;

		[Token(Token = "0x4001B1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float _deltaAngle;

		[Token(Token = "0x4001B1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float _deltaDistance;

		[Token(Token = "0x4001B1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private bool _isConstrainActive;

		[Token(Token = "0x4001B1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Matrix4x4 _parentMatrix;

		[Token(Token = "0x4001B20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Quaternion _parentRotationOffset;

		[Token(Token = "0x4001B21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private Vector3 _targetPosition;

		[Token(Token = "0x4001B22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private Quaternion _targetRotation;

		[Token(Token = "0x6001C61")]
		[Address(RVA = "0xF84B0C", Offset = "0xF84B0C", VA = "0xF84B0C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001C62")]
		[Address(RVA = "0xF84C50", Offset = "0xF84C50", VA = "0xF84C50")]
		private void Update()
		{
		}

		[Token(Token = "0x6001C63")]
		[Address(RVA = "0xF84CAC", Offset = "0xF84CAC", VA = "0xF84CAC")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001C64")]
		[Address(RVA = "0xF84CC8", Offset = "0xF84CC8", VA = "0xF84CC8")]
		private void OnPreRender()
		{
		}

		[Token(Token = "0x6001C65")]
		[Address(RVA = "0xF84CE4", Offset = "0xF84CE4", VA = "0xF84CE4")]
		public void ActivateConstraint(Transform newParentJoint)
		{
		}

		[Token(Token = "0x6001C66")]
		[Address(RVA = "0xF84CEC", Offset = "0xF84CEC", VA = "0xF84CEC")]
		public void ActivateConstraint(Transform newChildJoint, Transform newParentJoint)
		{
		}

		[Token(Token = "0x6001C67")]
		[Address(RVA = "0xF84B1C", Offset = "0xF84B1C", VA = "0xF84B1C")]
		public void ActivateConstraint()
		{
		}

		[Token(Token = "0x6001C68")]
		[Address(RVA = "0xF84D04", Offset = "0xF84D04", VA = "0xF84D04")]
		public void DeactivateConstraint()
		{
		}

		[Token(Token = "0x6001C69")]
		[Address(RVA = "0xF84C68", Offset = "0xF84C68", VA = "0xF84C68")]
		private void SolveConstraint()
		{
		}

		[Token(Token = "0x6001C6A")]
		[Address(RVA = "0xF84D0C", Offset = "0xF84D0C", VA = "0xF84D0C")]
		private void SolvePosition()
		{
		}

		[Token(Token = "0x6001C6B")]
		[Address(RVA = "0xF84F3C", Offset = "0xF84F3C", VA = "0xF84F3C")]
		private void SolveRotation()
		{
		}

		[Token(Token = "0x6001C6C")]
		[Address(RVA = "0xF84CF4", Offset = "0xF84CF4", VA = "0xF84CF4")]
		private static Vector3 DivideVectors(Vector3 num, Vector3 den)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001C6D")]
		[Address(RVA = "0xF850E4", Offset = "0xF850E4", VA = "0xF850E4")]
		public LerpConstraint()
		{
		}
	}
}
namespace Bhaptics.SDK2
{
	[Token(Token = "0x200079A")]
	public class PlayParamSample : MonoBehaviour
	{
		[Token(Token = "0x200079B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xBCC2A4", Offset = "0xBCC2A4")]
		private sealed class <OnClickPlayCor>d__54 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001B40")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001B41")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001B42")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PlayParamSample <>4__this;

			[Token(Token = "0x170004E7")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001C89")]
				[Address(RVA = "0x11EC744", Offset = "0x11EC744", VA = "0x11EC744", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004E8")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001C8B")]
				[Address(RVA = "0x11EC78C", Offset = "0x11EC78C", VA = "0x11EC78C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001C86")]
			[Address(RVA = "0x11EC570", Offset = "0x11EC570", VA = "0x11EC570")]
			[DebuggerHidden]
			public <OnClickPlayCor>d__54(int <>1__state)
			{
			}

			[Token(Token = "0x6001C87")]
			[Address(RVA = "0x11EC59C", Offset = "0x11EC59C", VA = "0x11EC59C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001C88")]
			[Address(RVA = "0x11EC5A0", Offset = "0x11EC5A0", VA = "0x11EC5A0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001C8A")]
			[Address(RVA = "0x11EC74C", Offset = "0x11EC74C", VA = "0x11EC74C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001B23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly string SampleAppID;

		[Token(Token = "0x4001B24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly string SampleApiKey;

		[Token(Token = "0x4001B25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDAF34", Offset = "0xBDAF34")]
		[SerializeField]
		private Canvas initCanvas;

		[Token(Token = "0x4001B26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Canvas mainCanvas;

		[Token(Token = "0x4001B27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDAF90", Offset = "0xBDAF90")]
		private Dropdown eventsDropdown;

		[Token(Token = "0x4001B28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDAFDC", Offset = "0xBDAFDC")]
		[SerializeField]
		private Slider sliderIntensity;

		[Token(Token = "0x4001B29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Slider sliderDuration;

		[Token(Token = "0x4001B2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Slider sliderAngleX;

		[Token(Token = "0x4001B2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Slider sliderOffsetY;

		[Token(Token = "0x4001B2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDB058", Offset = "0xBDB058")]
		[SerializeField]
		private Text intensityValueText;

		[Token(Token = "0x4001B2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private Text durationValueText;

		[Token(Token = "0x4001B2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Text angleXValueText;

		[Token(Token = "0x4001B2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private Text offsetYValueText;

		[Token(Token = "0x4001B30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private Text playButtonText;

		[Token(Token = "0x4001B31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDB0E4", Offset = "0xBDB0E4")]
		private UnityEngine.UI.Button intensityResetButton;

		[Token(Token = "0x4001B32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private UnityEngine.UI.Button durationResetButton;

		[Token(Token = "0x4001B33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private UnityEngine.UI.Button angleXResetButton;

		[Token(Token = "0x4001B34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private UnityEngine.UI.Button offsetYResetButton;

		[Token(Token = "0x4001B35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDB160", Offset = "0xBDB160")]
		[SerializeField]
		private BhapticsSettings sampleSettings;

		[Token(Token = "0x4001B36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private int requestId;

		[Token(Token = "0x4001B37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private string eventName;

		[Token(Token = "0x4001B38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private MappingMetaData[] events;

		[Token(Token = "0x4001B39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private Coroutine onClickPlayCoroutine;

		[Token(Token = "0x4001B3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private BhapticsSettings currentSettings;

		[Token(Token = "0x4001B3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private float intensity;

		[Token(Token = "0x4001B3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		private float duration;

		[Token(Token = "0x4001B3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private float angleX;

		[Token(Token = "0x4001B3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private float offsetY;

		[Token(Token = "0x4001B3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private int selectedIndex;

		[Token(Token = "0x170004E2")]
		public float Intensity
		{
			[Token(Token = "0x6001C6E")]
			[Address(RVA = "0xFDEB50", Offset = "0xFDEB50", VA = "0xFDEB50")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001C6F")]
			[Address(RVA = "0xFDEB58", Offset = "0xFDEB58", VA = "0xFDEB58")]
			set
			{
			}
		}

		[Token(Token = "0x170004E3")]
		public float Duration
		{
			[Token(Token = "0x6001C70")]
			[Address(RVA = "0xFDECAC", Offset = "0xFDECAC", VA = "0xFDECAC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001C71")]
			[Address(RVA = "0xFDECB4", Offset = "0xFDECB4", VA = "0xFDECB4")]
			set
			{
			}
		}

		[Token(Token = "0x170004E4")]
		public float AngleX
		{
			[Token(Token = "0x6001C72")]
			[Address(RVA = "0xFDEE08", Offset = "0xFDEE08", VA = "0xFDEE08")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001C73")]
			[Address(RVA = "0xFDEE10", Offset = "0xFDEE10", VA = "0xFDEE10")]
			set
			{
			}
		}

		[Token(Token = "0x170004E5")]
		public float OffsetY
		{
			[Token(Token = "0x6001C74")]
			[Address(RVA = "0xFDEF64", Offset = "0xFDEF64", VA = "0xFDEF64")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001C75")]
			[Address(RVA = "0xFDEF6C", Offset = "0xFDEF6C", VA = "0xFDEF6C")]
			set
			{
			}
		}

		[Token(Token = "0x170004E6")]
		public int SelectedIndex
		{
			[Token(Token = "0x6001C76")]
			[Address(RVA = "0xFDF0C0", Offset = "0xFDF0C0", VA = "0xFDF0C0")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001C77")]
			[Address(RVA = "0xFDF0C8", Offset = "0xFDF0C8", VA = "0xFDF0C8")]
			set
			{
			}
		}

		[Token(Token = "0x6001C78")]
		[Address(RVA = "0xFDF0D0", Offset = "0xFDF0D0", VA = "0xFDF0D0")]
		private void Start()
		{
		}

		[Token(Token = "0x6001C79")]
		[Address(RVA = "0xFDF1B0", Offset = "0xFDF1B0", VA = "0xFDF1B0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001C7A")]
		[Address(RVA = "0xFDF1D8", Offset = "0xFDF1D8", VA = "0xFDF1D8")]
		public void OnClickPlay()
		{
		}

		[Token(Token = "0x6001C7B")]
		[Address(RVA = "0xFDF44C", Offset = "0xFDF44C", VA = "0xFDF44C")]
		public void SetOffsetY(string offsetYStr)
		{
		}

		[Token(Token = "0x6001C7C")]
		[Address(RVA = "0xFDF490", Offset = "0xFDF490", VA = "0xFDF490")]
		public void OpenDeveloperPortal()
		{
		}

		[Token(Token = "0x6001C7D")]
		[Address(RVA = "0xFDF4D8", Offset = "0xFDF4D8", VA = "0xFDF4D8")]
		public void OpenGuideLink()
		{
		}

		[Token(Token = "0x6001C7E")]
		[Address(RVA = "0xFDF520", Offset = "0xFDF520", VA = "0xFDF520")]
		public void UseSampleSettings()
		{
		}

		[Token(Token = "0x6001C7F")]
		[Address(RVA = "0xFDF5B4", Offset = "0xFDF5B4", VA = "0xFDF5B4")]
		private void PlayHaptic(string eventName, float intensity, float duration, float angleX, float offsetY)
		{
		}

		[Token(Token = "0x6001C80")]
		[Address(RVA = "0xFDF2DC", Offset = "0xFDF2DC", VA = "0xFDF2DC")]
		private void StopHaptic()
		{
		}

		[Token(Token = "0x6001C81")]
		[Address(RVA = "0xFDF718", Offset = "0xFDF718", VA = "0xFDF718")]
		private void ResetValues()
		{
		}

		[Token(Token = "0x6001C82")]
		[Address(RVA = "0xFDF270", Offset = "0xFDF270", VA = "0xFDF270")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xBE3664", Offset = "0xBE3664")]
		private IEnumerator OnClickPlayCor()
		{
			return null;
		}

		[Token(Token = "0x6001C83")]
		[Address(RVA = "0xFDF7DC", Offset = "0xFDF7DC", VA = "0xFDF7DC")]
		private void SetupApplicationData()
		{
		}

		[Token(Token = "0x6001C84")]
		[Address(RVA = "0xFDF0FC", Offset = "0xFDF0FC", VA = "0xFDF0FC")]
		private void CheckApplicationSetting()
		{
		}

		[Token(Token = "0x6001C85")]
		[Address(RVA = "0xFDFA44", Offset = "0xFDFA44", VA = "0xFDFA44")]
		public PlayParamSample()
		{
		}
	}
	[Token(Token = "0x200079C")]
	public class AndroidHaptic
	{
		[Token(Token = "0x4001B43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected static AndroidJavaObject androidJavaObject;

		[Token(Token = "0x4001B44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly object[] PlayParams;

		[Token(Token = "0x4001B45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static readonly object[] PlayParamParams;

		[Token(Token = "0x4001B46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static readonly object[] EmptyParams;

		[Token(Token = "0x4001B47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static readonly object[] IsPlayingParams;

		[Token(Token = "0x4001B48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static readonly object[] StopByRequestIdParams;

		[Token(Token = "0x4001B49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static readonly object[] StopByEventIdParams;

		[Token(Token = "0x4001B4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static readonly object[] PingParams;

		[Token(Token = "0x4001B4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private List<HapticDevice> deviceList;

		[Token(Token = "0x4001B4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected IntPtr AndroidJavaObjectPtr;

		[Token(Token = "0x4001B4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected IntPtr InitializePtr;

		[Token(Token = "0x4001B4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected IntPtr PlayPtr;

		[Token(Token = "0x4001B4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected IntPtr PlayPosPtr;

		[Token(Token = "0x4001B50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected IntPtr PlayParamPtr;

		[Token(Token = "0x4001B51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected IntPtr PlayPosParamPtr;

		[Token(Token = "0x4001B52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected IntPtr StopIntPtr;

		[Token(Token = "0x4001B53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected IntPtr StopByEventIdPtr;

		[Token(Token = "0x4001B54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected IntPtr StopAllPtr;

		[Token(Token = "0x4001B55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		protected IntPtr SubmitRegisteredPtr;

		[Token(Token = "0x4001B56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		protected IntPtr SubmitRegisteredWithTimePtr;

		[Token(Token = "0x4001B57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		protected IntPtr RegisterPtr;

		[Token(Token = "0x4001B58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		protected IntPtr RegisterReflectedPtr;

		[Token(Token = "0x4001B59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		protected IntPtr PingPtr;

		[Token(Token = "0x4001B5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		protected IntPtr PingAllPtr;

		[Token(Token = "0x4001B5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		protected IntPtr IsRegisteredPtr;

		[Token(Token = "0x4001B5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		protected IntPtr IsPlayingPtr;

		[Token(Token = "0x4001B5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		protected IntPtr IsPlayingAnythingPtr;

		[Token(Token = "0x4001B5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		protected IntPtr IsPlayingByEventIdPtr;

		[Token(Token = "0x4001B5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		protected IntPtr IsPlayingByRequestIdPtr;

		[Token(Token = "0x4001B60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		protected IntPtr ToggleStreamPtr;

		[Token(Token = "0x4001B61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		protected IntPtr IsStreamingEnablePtr;

		[Token(Token = "0x4001B62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		protected IntPtr GetStreamingHostsPtr;

		[Token(Token = "0x4001B63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		protected IntPtr ShowBluetoothPtr;

		[Token(Token = "0x4001B64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		protected IntPtr RefreshPairingInfoPtr;

		[Token(Token = "0x6001C8C")]
		[Address(RVA = "0x1325918", Offset = "0x1325918", VA = "0x1325918")]
		public AndroidHaptic()
		{
		}

		[Token(Token = "0x6001C8D")]
		[Address(RVA = "0x132665C", Offset = "0x132665C", VA = "0x132665C")]
		public bool CheckBhapticsAvailable()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C8E")]
		[Address(RVA = "0x1326384", Offset = "0x1326384", VA = "0x1326384")]
		public List<HapticDevice> GetDevices()
		{
			return null;
		}

		[Token(Token = "0x6001C8F")]
		[Address(RVA = "0x13268E4", Offset = "0x13268E4", VA = "0x13268E4")]
		public void Initialize(string workspaceId, string sdkKey, string json)
		{
		}

		[Token(Token = "0x6001C90")]
		[Address(RVA = "0x1326B40", Offset = "0x1326B40", VA = "0x1326B40")]
		public bool IsConnect()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C91")]
		[Address(RVA = "0x1326B48", Offset = "0x1326B48", VA = "0x1326B48")]
		public bool IsPlaying()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C92")]
		[Address(RVA = "0x1326C98", Offset = "0x1326C98", VA = "0x1326C98")]
		public bool IsPlayingByEventId(string eventId)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C93")]
		[Address(RVA = "0x1326D9C", Offset = "0x1326D9C", VA = "0x1326D9C")]
		public bool IsPlayingByRequestId(int requestId)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C94")]
		[Address(RVA = "0x1326ECC", Offset = "0x1326ECC", VA = "0x1326ECC")]
		public int Play(string eventId)
		{
			return default(int);
		}

		[Token(Token = "0x6001C95")]
		[Address(RVA = "0x132706C", Offset = "0x132706C", VA = "0x132706C")]
		public int PlayParam(string eventId, float intensity, float duration, float angleX, float offsetY)
		{
			return default(int);
		}

		[Token(Token = "0x6001C96")]
		[Address(RVA = "0x132733C", Offset = "0x132733C", VA = "0x132733C")]
		public int PlayMotors(int position, int[] motors, int durationMillis)
		{
			return default(int);
		}

		[Token(Token = "0x6001C97")]
		[Address(RVA = "0x1327524", Offset = "0x1327524", VA = "0x1327524")]
		public bool StopByRequestId(int key)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C98")]
		[Address(RVA = "0x1327654", Offset = "0x1327654", VA = "0x1327654")]
		public bool StopByEventId(string eventId)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C99")]
		[Address(RVA = "0x1327890", Offset = "0x1327890", VA = "0x1327890")]
		public bool Stop()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C9A")]
		[Address(RVA = "0x1327A78", Offset = "0x1327A78", VA = "0x1327A78")]
		public void Dispose()
		{
		}

		[Token(Token = "0x6001C9B")]
		[Address(RVA = "0x1327BD8", Offset = "0x1327BD8", VA = "0x1327BD8")]
		public void TogglePosition(string address)
		{
		}

		[Token(Token = "0x6001C9C")]
		[Address(RVA = "0x1327D30", Offset = "0x1327D30", VA = "0x1327D30")]
		public void PingAll()
		{
		}

		[Token(Token = "0x6001C9D")]
		[Address(RVA = "0x1327DE0", Offset = "0x1327DE0", VA = "0x1327DE0")]
		public void Ping(string address)
		{
		}

		[Token(Token = "0x6001C9E")]
		[Address(RVA = "0x1326AA8", Offset = "0x1326AA8", VA = "0x1326AA8")]
		private void CallNativeVoidMethod(IntPtr methodPtr, object[] param)
		{
		}

		[Token(Token = "0x6001C9F")]
		[Address(RVA = "0x1326BFC", Offset = "0x1326BFC", VA = "0x1326BFC")]
		private bool CallNativeBoolMethod(IntPtr methodPtr, object[] param)
		{
			return default(bool);
		}

		[Token(Token = "0x6001CA0")]
		[Address(RVA = "0x1326FD0", Offset = "0x1326FD0", VA = "0x1326FD0")]
		private int CallNativeIntMethod(IntPtr methodPtr, object[] param)
		{
			return default(int);
		}
	}
	[Token(Token = "0x200079D")]
	internal class AndroidUtils
	{
		[Token(Token = "0x6001CA2")]
		[Address(RVA = "0x1327EE0", Offset = "0x1327EE0", VA = "0x1327EE0")]
		public static void CallNativeVoidMethod(IntPtr androidObjPtr, IntPtr methodPtr, object[] param)
		{
		}

		[Token(Token = "0x6001CA3")]
		[Address(RVA = "0x13280E0", Offset = "0x13280E0", VA = "0x13280E0")]
		public static bool CallNativeBoolMethod(IntPtr androidObjPtr, IntPtr methodPtr, object[] param)
		{
			return default(bool);
		}

		[Token(Token = "0x6001CA4")]
		[Address(RVA = "0x13282E0", Offset = "0x13282E0", VA = "0x13282E0")]
		public static int CallNativeIntMethod(IntPtr androidObjPtr, IntPtr methodPtr, object[] param)
		{
			return default(int);
		}

		[Token(Token = "0x6001CA5")]
		[Address(RVA = "0x13287B0", Offset = "0x13287B0", VA = "0x13287B0")]
		public AndroidUtils()
		{
		}
	}
	[Token(Token = "0x200079E")]
	public class BhapticsLibrary
	{
		[Token(Token = "0x4001B65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly object Lock;

		[Token(Token = "0x4001B66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly List<HapticDevice> EmptyDevices;

		[Token(Token = "0x4001B67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static AndroidHaptic android;

		[Token(Token = "0x4001B68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static bool _initialized;

		[Token(Token = "0x4001B69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private static bool isAvailable;

		[Token(Token = "0x4001B6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		private static bool isAvailableChecked;

		[Token(Token = "0x6001CA6")]
		[Address(RVA = "0x132B0B0", Offset = "0x132B0B0", VA = "0x132B0B0")]
		public static bool IsBhapticsAvailable()
		{
			return default(bool);
		}

		[Token(Token = "0x6001CA7")]
		[Address(RVA = "0x132D3FC", Offset = "0x132D3FC", VA = "0x132D3FC")]
		public static bool IsBhapticsAvailableForce()
		{
			return default(bool);
		}

		[Token(Token = "0x6001CA8")]
		[Address(RVA = "0x132D748", Offset = "0x132D748", VA = "0x132D748")]
		public static bool Initialize(string appId, string apiKey, string json)
		{
			return default(bool);
		}

		[Token(Token = "0x6001CA9")]
		[Address(RVA = "0x132DB1C", Offset = "0x132DB1C", VA = "0x132DB1C")]
		public static void Destroy()
		{
		}

		[Token(Token = "0x6001CAA")]
		[Address(RVA = "0x132DCF0", Offset = "0x132DCF0", VA = "0x132DCF0")]
		public static bool IsConnect(PositionType type)
		{
			return default(bool);
		}

		[Token(Token = "0x6001CAB")]
		[Address(RVA = "0x132B160", Offset = "0x132B160", VA = "0x132B160")]
		public static int Play(string eventId)
		{
			return default(int);
		}

		[Token(Token = "0x6001CAC")]
		[Address(RVA = "0x132DFBC", Offset = "0x132DFBC", VA = "0x132DFBC")]
		public static int PlayParam(string eventId, float intensity, float duration, float angleX, float offsetY)
		{
			return default(int);
		}

		[Token(Token = "0x6001CAD")]
		[Address(RVA = "0x132E144", Offset = "0x132E144", VA = "0x132E144")]
		public static int PlayMotors(int position, int[] motors, int durationMillis)
		{
			return default(int);
		}

		[Token(Token = "0x6001CAE")]
		[Address(RVA = "0x132B4EC", Offset = "0x132B4EC", VA = "0x132B4EC")]
		public static bool StopByEventId(string eventId)
		{
			return default(bool);
		}

		[Token(Token = "0x6001CAF")]
		[Address(RVA = "0x132E26C", Offset = "0x132E26C", VA = "0x132E26C")]
		public static bool StopInt(int requestId)
		{
			return default(bool);
		}

		[Token(Token = "0x6001CB0")]
		[Address(RVA = "0x132E364", Offset = "0x132E364", VA = "0x132E364")]
		public static bool StopAll()
		{
			return default(bool);
		}

		[Token(Token = "0x6001CB1")]
		[Address(RVA = "0x132B34C", Offset = "0x132B34C", VA = "0x132B34C")]
		public static bool IsPlaying()
		{
			return default(bool);
		}

		[Token(Token = "0x6001CB2")]
		[Address(RVA = "0x132E450", Offset = "0x132E450", VA = "0x132E450")]
		public static bool IsPlayingByEventId(string eventId)
		{
			return default(bool);
		}

		[Token(Token = "0x6001CB3")]
		[Address(RVA = "0x132E548", Offset = "0x132E548", VA = "0x132E548")]
		public static bool IsPlayingByRequestId(int requestId)
		{
			return default(bool);
		}

		[Token(Token = "0x6001CB4")]
		[Address(RVA = "0x132E640", Offset = "0x132E640", VA = "0x132E640")]
		public static List<HapticDevice> GetDevices()
		{
			return null;
		}

		[Token(Token = "0x6001CB5")]
		[Address(RVA = "0x132DDA0", Offset = "0x132DDA0", VA = "0x132DDA0")]
		public static List<HapticDevice> GetConnectedDevices(PositionType pos)
		{
			return null;
		}

		[Token(Token = "0x6001CB6")]
		[Address(RVA = "0x132E774", Offset = "0x132E774", VA = "0x132E774")]
		public static List<HapticDevice> GetPairedDevices(PositionType pos)
		{
			return null;
		}

		[Token(Token = "0x6001CB7")]
		[Address(RVA = "0x132E988", Offset = "0x132E988", VA = "0x132E988")]
		public static void Ping(PositionType pos)
		{
		}

		[Token(Token = "0x6001CB8")]
		[Address(RVA = "0x132C9AC", Offset = "0x132C9AC", VA = "0x132C9AC")]
		public static void Ping(HapticDevice targetDevice)
		{
		}

		[Token(Token = "0x6001CB9")]
		[Address(RVA = "0x132EB08", Offset = "0x132EB08", VA = "0x132EB08")]
		public static void PingAll()
		{
		}

		[Token(Token = "0x6001CBA")]
		[Address(RVA = "0x132CB7C", Offset = "0x132CB7C", VA = "0x132CB7C")]
		public static void TogglePosition(HapticDevice targetDevice)
		{
		}

		[Token(Token = "0x6001CBB")]
		[Address(RVA = "0x132EBF0", Offset = "0x132EBF0", VA = "0x132EBF0")]
		public static void OnApplicationFocus()
		{
		}

		[Token(Token = "0x6001CBC")]
		[Address(RVA = "0x132EC48", Offset = "0x132EC48", VA = "0x132EC48")]
		public static void OnApplicationPause()
		{
		}

		[Token(Token = "0x6001CBD")]
		[Address(RVA = "0x132ECA0", Offset = "0x132ECA0", VA = "0x132ECA0")]
		public BhapticsLibrary()
		{
		}
	}
	[Token(Token = "0x200079F")]
	public class bhaptics_library
	{
		[Token(Token = "0x4001B6B")]
		private const string ModuleName = "bhaptics_library";

		[PreserveSig]
		[Token(Token = "0x6001CBF")]
		[Address(RVA = "0x113FB18", Offset = "0x113FB18", VA = "0x113FB18")]
		public static extern bool registryAndInit(string sdkAPIKey, string workspaceId, string initData);

		[PreserveSig]
		[Token(Token = "0x6001CC0")]
		[Address(RVA = "0x113FBF8", Offset = "0x113FBF8", VA = "0x113FBF8")]
		public static extern bool registryAndInitHost(string sdkAPIKey, string workspaceId, string initData, string url);

		[PreserveSig]
		[Token(Token = "0x6001CC1")]
		[Address(RVA = "0x113FCFC", Offset = "0x113FCFC", VA = "0x113FCFC")]
		public static extern bool wsIsConnected();

		[PreserveSig]
		[Token(Token = "0x6001CC2")]
		[Address(RVA = "0x113FD78", Offset = "0x113FD78", VA = "0x113FD78")]
		public static extern void wsClose();

		[PreserveSig]
		[Token(Token = "0x6001CC3")]
		[Address(RVA = "0x113FDE8", Offset = "0x113FDE8", VA = "0x113FDE8")]
		public static extern bool reInitMessage(string sdkAPIKey, string workspaceId, string initData);

		[PreserveSig]
		[Token(Token = "0x6001CC4")]
		[Address(RVA = "0x113FEC8", Offset = "0x113FEC8", VA = "0x113FEC8")]
		public static extern int play(string key);

		[PreserveSig]
		[Token(Token = "0x6001CC5")]
		[Address(RVA = "0x113FF60", Offset = "0x113FF60", VA = "0x113FF60")]
		public static extern int playPosParam(string key, int position, float intensity, float duration, float angleX, float offsetY);

		[PreserveSig]
		[Token(Token = "0x6001CC6")]
		[Address(RVA = "0x1140038", Offset = "0x1140038", VA = "0x1140038")]
		public static extern bool stop(int key);

		[PreserveSig]
		[Token(Token = "0x6001CC7")]
		[Address(RVA = "0x11400BC", Offset = "0x11400BC", VA = "0x11400BC")]
		public static extern bool stopByEventId(string eventId);

		[PreserveSig]
		[Token(Token = "0x6001CC8")]
		[Address(RVA = "0x1140158", Offset = "0x1140158", VA = "0x1140158")]
		public static extern bool stopAll();

		[PreserveSig]
		[Token(Token = "0x6001CC9")]
		[Address(RVA = "0x11401D4", Offset = "0x11401D4", VA = "0x11401D4")]
		public static extern bool isPlaying();

		[PreserveSig]
		[Token(Token = "0x6001CCA")]
		[Address(RVA = "0x1140250", Offset = "0x1140250", VA = "0x1140250")]
		public static extern bool isPlayingByRequestId(int key);

		[PreserveSig]
		[Token(Token = "0x6001CCB")]
		[Address(RVA = "0x11402D8", Offset = "0x11402D8", VA = "0x11402D8")]
		public static extern bool isPlayingByEventId(string eventId);

		[PreserveSig]
		[Token(Token = "0x6001CCC")]
		[Address(RVA = "0x1140374", Offset = "0x1140374", VA = "0x1140374")]
		public static extern bool isbHapticsConnected(int position);

		[PreserveSig]
		[Token(Token = "0x6001CCD")]
		[Address(RVA = "0x11403FC", Offset = "0x11403FC", VA = "0x11403FC")]
		public static extern bool ping(string address);

		[PreserveSig]
		[Token(Token = "0x6001CCE")]
		[Address(RVA = "0x1140498", Offset = "0x1140498", VA = "0x1140498")]
		public static extern bool pingAll();

		[PreserveSig]
		[Token(Token = "0x6001CCF")]
		[Address(RVA = "0x1140514", Offset = "0x1140514", VA = "0x1140514")]
		public static extern bool swapPosition(string address);

		[PreserveSig]
		[Token(Token = "0x6001CD0")]
		[Address(RVA = "0x11405B0", Offset = "0x11405B0", VA = "0x11405B0")]
		public static extern IntPtr getDeviceInfoJson();

		[PreserveSig]
		[Token(Token = "0x6001CD1")]
		[Address(RVA = "0x1140624", Offset = "0x1140624", VA = "0x1140624")]
		public static extern bool isPlayerInstalled();

		[PreserveSig]
		[Token(Token = "0x6001CD2")]
		[Address(RVA = "0x11406A0", Offset = "0x11406A0", VA = "0x11406A0")]
		public static extern bool isPlayerRunning();

		[PreserveSig]
		[Token(Token = "0x6001CD3")]
		[Address(RVA = "0x114071C", Offset = "0x114071C", VA = "0x114071C")]
		public static extern bool launchPlayer(bool b);

		[PreserveSig]
		[Token(Token = "0x6001CD4")]
		[Address(RVA = "0x11407A4", Offset = "0x11407A4", VA = "0x11407A4")]
		public static extern IntPtr bHapticsGetHapticMessage(string apiKey, string appId, int lastVersion, out int status);

		[PreserveSig]
		[Token(Token = "0x6001CD5")]
		[Address(RVA = "0x114087C", Offset = "0x114087C", VA = "0x114087C")]
		public static extern IntPtr bHapticsGetHapticMappings(string apiKey, string appId, int lastVersion, out int status);

		[PreserveSig]
		[Token(Token = "0x6001CD6")]
		[Address(RVA = "0x1140954", Offset = "0x1140954", VA = "0x1140954")]
		public static extern int playDot(int position, int durationMillis, int[] motors, int size);

		[Token(Token = "0x6001CD7")]
		[Address(RVA = "0x1140A04", Offset = "0x1140A04", VA = "0x1140A04")]
		public static List<HapticDevice> GetDevices()
		{
			return null;
		}

		[Token(Token = "0x6001CD8")]
		[Address(RVA = "0x1140CF4", Offset = "0x1140CF4", VA = "0x1140CF4")]
		public static List<MappingMetaData> EditorGetEventList(string appId, string apiKey, int lastVersion, out int status)
		{
			return null;
		}

		[Token(Token = "0x6001CD9")]
		[Address(RVA = "0x1140EA0", Offset = "0x1140EA0", VA = "0x1140EA0")]
		public static string EditorGetSettings(string appId, string apiKey, int lastVersion, out int status2)
		{
			return null;
		}

		[Token(Token = "0x6001CDA")]
		[Address(RVA = "0x1140BAC", Offset = "0x1140BAC", VA = "0x1140BAC")]
		private static string PtrToStringUtf8(IntPtr ptr)
		{
			return null;
		}

		[Token(Token = "0x6001CDB")]
		[Address(RVA = "0x1140F30", Offset = "0x1140F30", VA = "0x1140F30")]
		public bhaptics_library()
		{
		}
	}
	[Token(Token = "0x20007A0")]
	public class BhapticsEvent
	{
		[Token(Token = "0x4001B6C")]
		public const string TELEPORTATION_CHARGE_RIGHT = "teleportation_charge_right";

		[Token(Token = "0x4001B6D")]
		public const string LOW_ON_HEALTH = "low_on_health";

		[Token(Token = "0x4001B6E")]
		public const string DYING = "dying";

		[Token(Token = "0x4001B6F")]
		public const string TELEPORT = "teleport";

		[Token(Token = "0x4001B70")]
		public const string CHARGE_SPELL_LOOP_RIGHT = "charge_spell_loop_right";

		[Token(Token = "0x4001B71")]
		public const string CAST_PROJECTILE_HEAVY_RIGHT = "cast_projectile_heavy_right";

		[Token(Token = "0x4001B72")]
		public const string CAST_HEALING_LEFT = "cast_healing_left";

		[Token(Token = "0x4001B73")]
		public const string CHARGE_SPELL_HEAVY_LEFT = "charge_spell_heavy_left";

		[Token(Token = "0x4001B74")]
		public const string IMPACT_LIGHT = "impact_light";

		[Token(Token = "0x4001B75")]
		public const string CHARGE_PROJECTILE_LIGHT_RIGHT = "charge_projectile_light_right";

		[Token(Token = "0x4001B76")]
		public const string CONTINUOUS_HEALING = "continuous_healing";

		[Token(Token = "0x4001B77")]
		public const string TELEPORTATION_CHARGE_LEFT = "teleportation_charge_left";

		[Token(Token = "0x4001B78")]
		public const string CHARGE_SPELL_LOOP_LEFT = "charge_spell_loop_left";

		[Token(Token = "0x4001B79")]
		public const string CAST_HEALING_RIGHT = "cast_healing_right";

		[Token(Token = "0x4001B7A")]
		public const string HIT_LIGHTNING = "hit_lightning";

		[Token(Token = "0x4001B7B")]
		public const string HEALING_IMPACT_ONESHOT = "healing_impact_oneshot";

		[Token(Token = "0x4001B7C")]
		public const string CAST_PROJECTILE_LIGHT_RIGHT = "cast_projectile_light_right";

		[Token(Token = "0x4001B7D")]
		public const string GRAB_RIGHT = "grab_right";

		[Token(Token = "0x4001B7E")]
		public const string CHARGE_HEALING_RIGHT = "charge_healing_right";

		[Token(Token = "0x4001B7F")]
		public const string CAST_PROJECTILE_LIGHT_LEFT = "cast_projectile_light_left";

		[Token(Token = "0x4001B80")]
		public const string GRAB_LEFT = "grab_left";

		[Token(Token = "0x4001B81")]
		public const string IMPACT_MEDIUM = "impact_medium";

		[Token(Token = "0x4001B82")]
		public const string CHARGE_PROJECTILE_LIGHT_LEFT = "charge_projectile_light_left";

		[Token(Token = "0x4001B83")]
		public const string CAST_FAIL_LEFT = "cast_fail_left";

		[Token(Token = "0x4001B84")]
		public const string CAST_FAIL_RIGHT = "cast_fail_right";

		[Token(Token = "0x4001B85")]
		public const string CAST_SPAWNABLE_RIGHT = "cast_spawnable_right";

		[Token(Token = "0x4001B86")]
		public const string CHARGE_HEALING_LEFT = "charge_healing_left";

		[Token(Token = "0x4001B87")]
		public const string CAST_SPAWNABLE_LEFT = "cast_spawnable_left";

		[Token(Token = "0x4001B88")]
		public const string CHARGE_SPELL_HEAVY_RIGHT = "charge_spell_heavy_right";

		[Token(Token = "0x4001B89")]
		public const string IMPACT_HEAVY = "impact_heavy";

		[Token(Token = "0x4001B8A")]
		public const string CAST_PROJECTILE_HEAVY_LEFT = "cast_projectile_heavy_left";

		[Token(Token = "0x6001CDC")]
		[Address(RVA = "0x132CE64", Offset = "0x132CE64", VA = "0x132CE64")]
		public BhapticsEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20007A1")]
	internal class Device
	{
		[Token(Token = "0x4001B8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool paired;

		[Token(Token = "0x4001B8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string deviceName;

		[Token(Token = "0x4001B8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int position;

		[Token(Token = "0x4001B8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool connected;

		[Token(Token = "0x4001B8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string address;

		[Token(Token = "0x4001B90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int battery;

		[Token(Token = "0x4001B91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public bool audioJackIn;

		[Token(Token = "0x6001CDD")]
		[Address(RVA = "0x103E7A0", Offset = "0x103E7A0", VA = "0x103E7A0")]
		public Device()
		{
		}
	}
	[Token(Token = "0x20007A2")]
	public enum PositionType
	{
		[Token(Token = "0x4001B93")]
		Vest,
		[Token(Token = "0x4001B94")]
		ForearmL,
		[Token(Token = "0x4001B95")]
		ForearmR,
		[Token(Token = "0x4001B96")]
		Head,
		[Token(Token = "0x4001B97")]
		HandL,
		[Token(Token = "0x4001B98")]
		HandR,
		[Token(Token = "0x4001B99")]
		FootL,
		[Token(Token = "0x4001B9A")]
		FootR,
		[Token(Token = "0x4001B9B")]
		GloveL,
		[Token(Token = "0x4001B9C")]
		GloveR
	}
	[Serializable]
	[Token(Token = "0x20007A3")]
	public class MappingMetaData
	{
		[Token(Token = "0x4001B9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int durationMillis;

		[Token(Token = "0x4001B9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string key;

		[Token(Token = "0x4001B9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string description;

		[Token(Token = "0x4001BA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool isAudio;

		[Token(Token = "0x4001BA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public long updateTime;

		[Token(Token = "0x4001BA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string[] positions;

		[Token(Token = "0x6001CDE")]
		[Address(RVA = "0x100C310", Offset = "0x100C310", VA = "0x100C310")]
		public MappingMetaData()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20007A4")]
	internal class MappingMessage
	{
		[Token(Token = "0x4001BA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool status;

		[Token(Token = "0x4001BA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<MappingMetaData> message;

		[Token(Token = "0x6001CDF")]
		[Address(RVA = "0x100C2BC", Offset = "0x100C2BC", VA = "0x100C2BC")]
		public static MappingMessage CreateFromJSON(string jsonString)
		{
			return null;
		}

		[Token(Token = "0x6001CE0")]
		[Address(RVA = "0x100C308", Offset = "0x100C308", VA = "0x100C308")]
		public MappingMessage()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20007A5")]
	public class DeployMessage
	{
		[Token(Token = "0x4001BA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x4001BA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int version;

		[Token(Token = "0x6001CE1")]
		[Address(RVA = "0x103E434", Offset = "0x103E434", VA = "0x103E434")]
		public DeployMessage()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20007A6")]
	public class DeployHttpMessage
	{
		[Token(Token = "0x4001BA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool status;

		[Token(Token = "0x4001BA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public DeployMessage message;

		[Token(Token = "0x6001CE2")]
		[Address(RVA = "0x103E3E0", Offset = "0x103E3E0", VA = "0x103E3E0")]
		public static DeployHttpMessage CreateFromJSON(string jsonString)
		{
			return null;
		}

		[Token(Token = "0x6001CE3")]
		[Address(RVA = "0x103E42C", Offset = "0x103E42C", VA = "0x103E42C")]
		public DeployHttpMessage()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20007A7")]
	public class HapticDevice
	{
		[Token(Token = "0x4001BA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool IsPaired;

		[Token(Token = "0x4001BAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public bool IsConnected;

		[Token(Token = "0x4001BAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string DeviceName;

		[Token(Token = "0x4001BAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PositionType Position;

		[Token(Token = "0x4001BAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string Address;

		[Token(Token = "0x4001BAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public PositionType[] Candidates;

		[Token(Token = "0x4001BAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool IsAudioJack;

		[Token(Token = "0x4001BB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public int Battery;

		[Token(Token = "0x6001CE4")]
		[Address(RVA = "0xFAFF24", Offset = "0xFAFF24", VA = "0xFAFF24")]
		public HapticDevice()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20007A8")]
	internal class DeviceListMessage
	{
		[Token(Token = "0x4001BB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Device[] devices;

		[Token(Token = "0x6001CE5")]
		[Address(RVA = "0x103E7A8", Offset = "0x103E7A8", VA = "0x103E7A8")]
		public DeviceListMessage()
		{
		}
	}
	[Token(Token = "0x20007A9")]
	public class BhapticsHelpers
	{
		[Token(Token = "0x6001CE6")]
		[Address(RVA = "0x132CE6C", Offset = "0x132CE6C", VA = "0x132CE6C")]
		public static float Angle(Vector3 fwd, Vector3 targetDir)
		{
			return default(float);
		}

		[Token(Token = "0x6001CE7")]
		[Address(RVA = "0x132CF30", Offset = "0x132CF30", VA = "0x132CF30")]
		private static int AngleDir(Vector3 fwd, Vector3 targetDir, Vector3 up)
		{
			return default(int);
		}

		[Token(Token = "0x6001CE8")]
		[Address(RVA = "0x132CF88", Offset = "0x132CF88", VA = "0x132CF88")]
		public static string ErrorCodeToMessage(int code)
		{
			return null;
		}

		[Token(Token = "0x6001CE9")]
		[Address(RVA = "0x13267D4", Offset = "0x13267D4", VA = "0x13267D4")]
		public static List<HapticDevice> ConvertToBhapticsDevices(string[] deviceJson)
		{
			return null;
		}

		[Token(Token = "0x6001CEA")]
		[Address(RVA = "0x132D160", Offset = "0x132D160", VA = "0x132D160")]
		internal static List<HapticDevice> Convert(Device[] deviceJson)
		{
			return null;
		}

		[Token(Token = "0x6001CEB")]
		[Address(RVA = "0x132D0A0", Offset = "0x132D0A0", VA = "0x132D0A0")]
		private static HapticDevice Convert(Device d)
		{
			return null;
		}

		[Token(Token = "0x6001CEC")]
		[Address(RVA = "0x132D264", Offset = "0x132D264", VA = "0x132D264")]
		private static PositionType[] ToCandidates(int type)
		{
			return null;
		}

		[Token(Token = "0x6001CED")]
		[Address(RVA = "0x132D254", Offset = "0x132D254", VA = "0x132D254")]
		private static PositionType ToDeviceType(int type)
		{
			return default(PositionType);
		}

		[Token(Token = "0x6001CEE")]
		[Address(RVA = "0x132D3F4", Offset = "0x132D3F4", VA = "0x132D3F4")]
		public BhapticsHelpers()
		{
		}
	}
	[Token(Token = "0x20007AA")]
	public class BhapticsSDK2 : MonoBehaviour
	{
		[Token(Token = "0x4001BB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static BhapticsSDK2 instance;

		[Token(Token = "0x4001BB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private BhapticsSettings bhapticsSettings;

		[Token(Token = "0x6001CEF")]
		[Address(RVA = "0x132ED84", Offset = "0x132ED84", VA = "0x132ED84")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001CF0")]
		[Address(RVA = "0x132F330", Offset = "0x132F330", VA = "0x132F330")]
		private void OnApplicationFocus(bool pauseStatus)
		{
		}

		[Token(Token = "0x6001CF1")]
		[Address(RVA = "0x132F3AC", Offset = "0x132F3AC", VA = "0x132F3AC")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001CF2")]
		[Address(RVA = "0x132F45C", Offset = "0x132F45C", VA = "0x132F45C")]
		public BhapticsSDK2()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20007AB")]
	public class BhapticsConfig
	{
		[Token(Token = "0x4001BB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string appId;

		[Token(Token = "0x4001BB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string apiKey;

		[Token(Token = "0x6001CF3")]
		[Address(RVA = "0x132BFA8", Offset = "0x132BFA8", VA = "0x132BFA8")]
		public BhapticsConfig()
		{
		}
	}
	[Token(Token = "0x20007AC")]
	public class BhapticsSettings : ScriptableObject
	{
		[Token(Token = "0x4001BB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static BhapticsSettings instance;

		[Token(Token = "0x4001BB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private string appName;

		[Token(Token = "0x4001BB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private string appId;

		[Token(Token = "0x4001BB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private string apiKey;

		[Token(Token = "0x4001BBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private int lastDeployVersion;

		[Token(Token = "0x4001BBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private MappingMetaData[] eventData;

		[Token(Token = "0x4001BBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		[@HideInInspector]
		private string defaultDeploy;

		[Token(Token = "0x170004E9")]
		public static BhapticsSettings Instance
		{
			[Token(Token = "0x6001CF4")]
			[Address(RVA = "0x132F2E0", Offset = "0x132F2E0", VA = "0x132F2E0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004EA")]
		public string AppName
		{
			[Token(Token = "0x6001CF5")]
			[Address(RVA = "0x132F680", Offset = "0x132F680", VA = "0x132F680")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001CF6")]
			[Address(RVA = "0x132F688", Offset = "0x132F688", VA = "0x132F688")]
			set
			{
			}
		}

		[Token(Token = "0x170004EB")]
		public string AppId
		{
			[Token(Token = "0x6001CF7")]
			[Address(RVA = "0x132F690", Offset = "0x132F690", VA = "0x132F690")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001CF8")]
			[Address(RVA = "0x132F698", Offset = "0x132F698", VA = "0x132F698")]
			set
			{
			}
		}

		[Token(Token = "0x170004EC")]
		public string ApiKey
		{
			[Token(Token = "0x6001CF9")]
			[Address(RVA = "0x132F6A0", Offset = "0x132F6A0", VA = "0x132F6A0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001CFA")]
			[Address(RVA = "0x132F6A8", Offset = "0x132F6A8", VA = "0x132F6A8")]
			set
			{
			}
		}

		[Token(Token = "0x170004ED")]
		public MappingMetaData[] EventData
		{
			[Token(Token = "0x6001CFB")]
			[Address(RVA = "0x132F6B0", Offset = "0x132F6B0", VA = "0x132F6B0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001CFC")]
			[Address(RVA = "0x132F6B8", Offset = "0x132F6B8", VA = "0x132F6B8")]
			set
			{
			}
		}

		[Token(Token = "0x170004EE")]
		public int LastDeployVersion
		{
			[Token(Token = "0x6001CFD")]
			[Address(RVA = "0x132F6C0", Offset = "0x132F6C0", VA = "0x132F6C0")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001CFE")]
			[Address(RVA = "0x132F6C8", Offset = "0x132F6C8", VA = "0x132F6C8")]
			set
			{
			}
		}

		[Token(Token = "0x170004EF")]
		public string DefaultDeploy
		{
			[Token(Token = "0x6001CFF")]
			[Address(RVA = "0x132F6D0", Offset = "0x132F6D0", VA = "0x132F6D0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001D00")]
			[Address(RVA = "0x132F6D8", Offset = "0x132F6D8", VA = "0x132F6D8")]
			set
			{
			}
		}

		[Token(Token = "0x6001D01")]
		[Address(RVA = "0x132F6E0", Offset = "0x132F6E0", VA = "0x132F6E0")]
		public static void VerifyScriptableObject()
		{
		}

		[Token(Token = "0x6001D02")]
		[Address(RVA = "0x132F6E4", Offset = "0x132F6E4", VA = "0x132F6E4")]
		public static void ResetInstance()
		{
		}

		[Token(Token = "0x6001D03")]
		[Address(RVA = "0x132F464", Offset = "0x132F464", VA = "0x132F464")]
		private static void LoadInstance()
		{
		}

		[Token(Token = "0x6001D04")]
		[Address(RVA = "0x132F8C4", Offset = "0x132F8C4", VA = "0x132F8C4")]
		public BhapticsSettings()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20007AD")]
	public class PositonIconSetting
	{
		[Token(Token = "0x4001BBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Sprite connect;

		[Token(Token = "0x4001BBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Sprite disconnect;

		[Token(Token = "0x6001D05")]
		[Address(RVA = "0x11197E8", Offset = "0x11197E8", VA = "0x11197E8")]
		public PositonIconSetting()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20007AE")]
	public class IconSetting
	{
		[Token(Token = "0x4001BBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDB234", Offset = "0xBDB234")]
		public PositonIconSetting Vest;

		[Token(Token = "0x4001BC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PositonIconSetting Head;

		[Token(Token = "0x4001BC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PositonIconSetting Arm;

		[Token(Token = "0x4001BC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public PositonIconSetting Foot;

		[Token(Token = "0x4001BC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public PositonIconSetting Hand;

		[Token(Token = "0x4001BC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public PositonIconSetting GloveL;

		[Token(Token = "0x4001BC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public PositonIconSetting GloveR;

		[Token(Token = "0x6001D06")]
		[Address(RVA = "0xFB3F1C", Offset = "0xFB3F1C", VA = "0xFB3F1C")]
		public IconSetting()
		{
		}
	}
	[Token(Token = "0x20007AF")]
	public class BhapticsDeviceUI : MonoBehaviour
	{
		[Token(Token = "0x4001BC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static string SelectHexColor;

		[Token(Token = "0x4001BC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static string SelectHoverHexColor;

		[Token(Token = "0x4001BC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static string DisableHexColor;

		[Token(Token = "0x4001BC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static string DisableHoverHexColor;

		[Token(Token = "0x4001BCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDB26C", Offset = "0xBDB26C")]
		[SerializeField]
		private Image icon;

		[Token(Token = "0x4001BCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private IconSetting widgetSetting;

		[Token(Token = "0x4001BCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Sprite TactsuitWiredIcon;

		[Token(Token = "0x4001BCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Image batteryLowImage;

		[Token(Token = "0x4001BCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDB2E8", Offset = "0xBDB2E8")]
		[SerializeField]
		private GameObject ConnectMenu;

		[Token(Token = "0x4001BCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private UnityEngine.UI.Button pingButton;

		[Token(Token = "0x4001BD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private UnityEngine.UI.Button lButton;

		[Token(Token = "0x4001BD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private UnityEngine.UI.Button rButton;

		[Token(Token = "0x4001BD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject wiredNotification;

		[Token(Token = "0x4001BD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDB374", Offset = "0xBDB374")]
		[SerializeField]
		private GameObject DisconnectMenu;

		[Token(Token = "0x4001BD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private HapticDevice device;

		[Token(Token = "0x6001D07")]
		[Address(RVA = "0x132BFFC", Offset = "0x132BFFC", VA = "0x132BFFC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001D08")]
		[Address(RVA = "0x132C1FC", Offset = "0x132C1FC", VA = "0x132C1FC")]
		public void RefreshDevice(HapticDevice d)
		{
		}

		[Token(Token = "0x6001D09")]
		[Address(RVA = "0x132C3C4", Offset = "0x132C3C4", VA = "0x132C3C4")]
		private void RenderConnectMenu()
		{
		}

		[Token(Token = "0x6001D0A")]
		[Address(RVA = "0x132C458", Offset = "0x132C458", VA = "0x132C458")]
		private void RenderDisconnectMenu()
		{
		}

		[Token(Token = "0x6001D0B")]
		[Address(RVA = "0x132C4D4", Offset = "0x132C4D4", VA = "0x132C4D4")]
		private void UpdateButtons()
		{
		}

		[Token(Token = "0x6001D0C")]
		[Address(RVA = "0x132C298", Offset = "0x132C298", VA = "0x132C298")]
		private void UpdateIcon(HapticDevice d)
		{
		}

		[Token(Token = "0x6001D0D")]
		[Address(RVA = "0x132C914", Offset = "0x132C914", VA = "0x132C914")]
		private Sprite GetSprite(PositonIconSetting icon, bool connected)
		{
			return null;
		}

		[Token(Token = "0x6001D0E")]
		[Address(RVA = "0x132C938", Offset = "0x132C938", VA = "0x132C938")]
		private void Ping()
		{
		}

		[Token(Token = "0x6001D0F")]
		[Address(RVA = "0x132CAA8", Offset = "0x132CAA8", VA = "0x132CAA8")]
		private void ToLeft()
		{
		}

		[Token(Token = "0x6001D10")]
		[Address(RVA = "0x132CC74", Offset = "0x132CC74", VA = "0x132CC74")]
		private void ToRight()
		{
		}

		[Token(Token = "0x6001D11")]
		[Address(RVA = "0x132CD48", Offset = "0x132CD48", VA = "0x132CD48")]
		private Color ToColor(string hex)
		{
			return default(Color);
		}

		[Token(Token = "0x6001D12")]
		[Address(RVA = "0x132C7AC", Offset = "0x132C7AC", VA = "0x132C7AC")]
		private void ChangeButtonColor(UnityEngine.UI.Button targetButton, bool isSelect)
		{
		}

		[Token(Token = "0x6001D13")]
		[Address(RVA = "0x132C764", Offset = "0x132C764", VA = "0x132C764")]
		private static bool IsLeft(PositionType pos)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D14")]
		[Address(RVA = "0x132C788", Offset = "0x132C788", VA = "0x132C788")]
		private static bool IsRight(PositionType pos)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D15")]
		[Address(RVA = "0x132CD94", Offset = "0x132CD94", VA = "0x132CD94")]
		public BhapticsDeviceUI()
		{
		}
	}
	[Token(Token = "0x20007B0")]
	public class BhapticsUI : MonoBehaviour
	{
		[Token(Token = "0x4001BD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float intervalRefreshTime;

		[Token(Token = "0x4001BD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private RectTransform mainPanel;

		[Token(Token = "0x4001BD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDB3E0", Offset = "0xBDB3E0")]
		[SerializeField]
		private Transform devicesContainer;

		[Token(Token = "0x4001BD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Transform deviceListPageUi;

		[Token(Token = "0x4001BD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private UnityEngine.UI.Button deviceListNextPageButton;

		[Token(Token = "0x4001BDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private UnityEngine.UI.Button deviceListBackPageButton;

		[Token(Token = "0x4001BDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Text deviceListPageText;

		[Token(Token = "0x4001BDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private BhapticsDeviceUI devicePrefab;

		[Token(Token = "0x4001BDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xBDB47C", Offset = "0xBDB47C")]
		private GameObject noPairedDeviceUi;

		[Token(Token = "0x4001BDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private UnityEngine.UI.Button helpButton;

		[Token(Token = "0x4001BDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private UnityEngine.UI.Button bHapticsLinkButton;

		[Token(Token = "0x4001BE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private GameObject helpUi;

		[Token(Token = "0x4001BE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private GameObject helpDescriptionPC;

		[Token(Token = "0x4001BE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private GameObject helpDescriptionQuest;

		[Token(Token = "0x4001BE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private UnityEngine.UI.Button helpCloseButton;

		[Token(Token = "0x4001BE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private List<BhapticsDeviceUI> controllers;

		[Token(Token = "0x4001BE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private BoxCollider mainPanelCollider;

		[Token(Token = "0x4001BE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Vector2 defaultMainPanelSize;

		[Token(Token = "0x4001BE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Vector2 defaultDeviceContainerSize;

		[Token(Token = "0x4001BE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private int deviceListSize;

		[Token(Token = "0x4001BE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		private int deviceListPageIndex;

		[Token(Token = "0x4001BEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private int expandHeight;

		[Token(Token = "0x4001BEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private int expandDeviceCount;

		[Token(Token = "0x4001BEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private int pageActivateDeviceCount;

		[Token(Token = "0x4001BED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private int pageExpandHeight;

		[Token(Token = "0x4001BEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private int maxPageIndex;

		[Token(Token = "0x6001D17")]
		[Address(RVA = "0x132F928", Offset = "0x132F928", VA = "0x132F928")]
		private void Start()
		{
		}

		[Token(Token = "0x6001D18")]
		[Address(RVA = "0x132FDD4", Offset = "0x132FDD4", VA = "0x132FDD4")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001D19")]
		[Address(RVA = "0x132FE24", Offset = "0x132FE24", VA = "0x132FE24")]
		private void Refresh()
		{
		}

		[Token(Token = "0x6001D1A")]
		[Address(RVA = "0x1330514", Offset = "0x1330514", VA = "0x1330514")]
		private void OnHelp()
		{
		}

		[Token(Token = "0x6001D1B")]
		[Address(RVA = "0x133051C", Offset = "0x133051C", VA = "0x133051C")]
		private void CloseHelpNotification()
		{
		}

		[Token(Token = "0x6001D1C")]
		[Address(RVA = "0x1330524", Offset = "0x1330524", VA = "0x1330524")]
		private void OpenLink()
		{
		}

		[Token(Token = "0x6001D1D")]
		[Address(RVA = "0x133056C", Offset = "0x133056C", VA = "0x133056C")]
		private void NextPage()
		{
		}

		[Token(Token = "0x6001D1E")]
		[Address(RVA = "0x13305A4", Offset = "0x13305A4", VA = "0x13305A4")]
		private void BackPage()
		{
		}

		[Token(Token = "0x6001D1F")]
		[Address(RVA = "0x1330484", Offset = "0x1330484", VA = "0x1330484")]
		private void SetActiveHelpGameObject(bool value)
		{
		}

		[Token(Token = "0x6001D20")]
		[Address(RVA = "0x13305DC", Offset = "0x13305DC", VA = "0x13305DC")]
		public BhapticsUI()
		{
		}
	}
}
