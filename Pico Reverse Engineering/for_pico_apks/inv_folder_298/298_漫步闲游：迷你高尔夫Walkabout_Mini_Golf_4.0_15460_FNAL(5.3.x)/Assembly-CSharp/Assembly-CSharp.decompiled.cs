using System;
using System.Collections;
using System.Collections.Generic;
using System.Diagnostics;
using System.Globalization;
using System.IO;
using System.Reflection;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Runtime.Serialization;
using System.Security.Cryptography;
using System.Text;
using System.Text.RegularExpressions;
using System.Threading;
using System.Threading.Tasks;
using DG.Tweening;
using ExitGames.Client.Photon;
using FarBridge;
using FarBridge.Astronomer;
using FarBridge.Weywot;
using FarBridge.Worlds;
using I2.Loc;
using IUnifiedContainerBase;
using Il2CppDummyDll;
using Koenigz.PerfectCulling;
using LIV.SDK.Unity;
using Mighty;
using Mighty.Interactable;
using Mighty.LODs;
using Mighty.Tools;
using Mighty.UIView;
using Photon.Pun;
using Photon.Realtime;
using Photon.Voice.PUN;
using Photon.Voice.Unity;
using Photon.Voice.Unity.UtilityScripts;
using Pico.Platform;
using Pico.Platform.Models;
using PlayFab;
using PlayFab.ClientModels;
using PlayFab.DataModels;
using TMPro;
using Unity.Burst;
using Unity.Burst.CompilerServices;
using Unity.Collections;
using Unity.Jobs;
using Unity.Mathematics;
using Unity.XR.PXR;
using UnityEngine;
using UnityEngine.EventSystems;
using UnityEngine.Events;
using UnityEngine.InputSystem;
using UnityEngine.LowLevel;
using UnityEngine.Networking;
using UnityEngine.Rendering;
using UnityEngine.Rendering.Universal;
using UnityEngine.SceneManagement;
using UnityEngine.Serialization;
using UnityEngine.UI;
using UnityEngine.Video;
using UnityEngine.XR;
using UnityEngine.XR.ARFoundation;
using Valve.VR.InteractionSystem;

[assembly: AssemblyVersion("0.0.0.0")]
[Token(Token = "0x2000002")]
public class DoorsAnimManager : MonoBehaviour
{
	[Token(Token = "0x2000003")]
	[CompilerGenerated]
	private sealed class <DoorTest>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000003")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000004")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000005")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DoorsAnimManager <>4__this;

		[Token(Token = "0x17000001")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000009")]
			[Address(RVA = "0xE026D4", Offset = "0xE026D4", VA = "0xE026D4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000002")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600000B")]
			[Address(RVA = "0xE0271C", Offset = "0xE0271C", VA = "0xE0271C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000006")]
		[Address(RVA = "0xE025A4", Offset = "0xE025A4", VA = "0xE025A4")]
		[DebuggerHidden]
		public <DoorTest>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x6000007")]
		[Address(RVA = "0xE02630", Offset = "0xE02630", VA = "0xE02630", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000008")]
		[Address(RVA = "0xE02634", Offset = "0xE02634", VA = "0xE02634", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600000A")]
		[Address(RVA = "0xE026DC", Offset = "0xE026DC", VA = "0xE026DC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000001")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Animator animator;

	[Token(Token = "0x4000002")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool alwaysOpenInPracticeMode;

	[Token(Token = "0x6000001")]
	[Address(RVA = "0xE02458", Offset = "0xE02458", VA = "0xE02458")]
	private void Start()
	{
	}

	[Token(Token = "0x6000002")]
	[Address(RVA = "0xE0253C", Offset = "0xE0253C", VA = "0xE0253C")]
	[IteratorStateMachine(typeof(<DoorTest>d__3))]
	private IEnumerator DoorTest()
	{
		return null;
	}

	[Token(Token = "0x6000003")]
	[Address(RVA = "0xE024E8", Offset = "0xE024E8", VA = "0xE024E8")]
	public void OpenDoor()
	{
	}

	[Token(Token = "0x6000004")]
	[Address(RVA = "0xE025CC", Offset = "0xE025CC", VA = "0xE025CC")]
	public void CloseDoor()
	{
	}

	[Token(Token = "0x6000005")]
	[Address(RVA = "0xE02620", Offset = "0xE02620", VA = "0xE02620")]
	public DoorsAnimManager()
	{
	}
}
[Token(Token = "0x2000004")]
public class BezierFollow : MonoBehaviour
{
	[Token(Token = "0x2000005")]
	[CompilerGenerated]
	private sealed class <GoByTheRoute>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400000C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400000D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400000E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BezierFollow <>4__this;

		[Token(Token = "0x400000F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int routeNumber;

		[Token(Token = "0x4000010")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Vector3 <p0>5__2;

		[Token(Token = "0x4000011")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 <p1>5__3;

		[Token(Token = "0x4000012")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Vector3 <p2>5__4;

		[Token(Token = "0x4000013")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Vector3 <p3>5__5;

		[Token(Token = "0x17000003")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000013")]
			[Address(RVA = "0xE02B1C", Offset = "0xE02B1C", VA = "0xE02B1C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000004")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000015")]
			[Address(RVA = "0xE02B64", Offset = "0xE02B64", VA = "0xE02B64", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000010")]
		[Address(RVA = "0xE027E8", Offset = "0xE027E8", VA = "0xE027E8")]
		[DebuggerHidden]
		public <GoByTheRoute>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x6000011")]
		[Address(RVA = "0xE02818", Offset = "0xE02818", VA = "0xE02818", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000012")]
		[Address(RVA = "0xE0281C", Offset = "0xE0281C", VA = "0xE0281C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000014")]
		[Address(RVA = "0xE02B24", Offset = "0xE02B24", VA = "0xE02B24", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000006")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform[] routes;

	[Token(Token = "0x4000007")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int routeToGo;

	[Token(Token = "0x4000008")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float tParam;

	[Token(Token = "0x4000009")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 owlPosition;

	[Token(Token = "0x400000A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float speedModifier;

	[Token(Token = "0x400000B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool coroutineAllowed;

	[Token(Token = "0x600000C")]
	[Address(RVA = "0xE02724", Offset = "0xE02724", VA = "0xE02724")]
	private void Start()
	{
	}

	[Token(Token = "0x600000D")]
	[Address(RVA = "0xE0273C", Offset = "0xE0273C", VA = "0xE0273C")]
	private void Update()
	{
	}

	[Token(Token = "0x600000E")]
	[Address(RVA = "0xE02770", Offset = "0xE02770", VA = "0xE02770")]
	[IteratorStateMachine(typeof(<GoByTheRoute>d__8))]
	private IEnumerator GoByTheRoute(int routeNumber)
	{
		return null;
	}

	[Token(Token = "0x600000F")]
	[Address(RVA = "0xE02810", Offset = "0xE02810", VA = "0xE02810")]
	public BezierFollow()
	{
	}
}
[Token(Token = "0x2000006")]
public class RoutePath : MonoBehaviour
{
	[Token(Token = "0x4000014")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform[] controlPoints;

	[Token(Token = "0x4000015")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector3 gizmosPosition;

	[Token(Token = "0x6000016")]
	[Address(RVA = "0xE02B6C", Offset = "0xE02B6C", VA = "0xE02B6C")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000017")]
	[Address(RVA = "0xE02F58", Offset = "0xE02F58", VA = "0xE02F58")]
	public RoutePath()
	{
	}
}
[Token(Token = "0x2000007")]
public class Lighting : MonoBehaviour
{
	[Token(Token = "0x6000018")]
	[Address(RVA = "0xE02F60", Offset = "0xE02F60", VA = "0xE02F60")]
	public void Init()
	{
	}

	[Token(Token = "0x6000019")]
	[Address(RVA = "0xE0300C", Offset = "0xE0300C", VA = "0xE0300C")]
	public Lighting()
	{
	}
}
[Token(Token = "0x2000008")]
public class LanguageSelectionButton : MonoBehaviour
{
	[Token(Token = "0x4000016")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string TargetLanguage;

	[Token(Token = "0x4000017")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshProUGUI LanguageText;

	[Token(Token = "0x4000018")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Image SelectedBG;

	[Token(Token = "0x4000019")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Color SelectedColor;

	[Token(Token = "0x400001A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Color DefaultColor;

	[Token(Token = "0x600001A")]
	[Address(RVA = "0xE03014", Offset = "0xE03014", VA = "0xE03014")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x600001B")]
	[Address(RVA = "0xE031B4", Offset = "0xE031B4", VA = "0xE031B4")]
	public LanguageSelectionButton()
	{
	}
}
[Token(Token = "0x2000009")]
public class PlayerPrefsSnapshot
{
	[Token(Token = "0x400001B")]
	private const int LATEST_DATA_MODEL = 1;

	[Token(Token = "0x400001C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int DataModel;

	[Token(Token = "0x400001D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Dictionary<string, int> IntData;

	[Token(Token = "0x400001E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Dictionary<string, float> FloatData;

	[Token(Token = "0x400001F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Dictionary<string, string> StringData;

	[Token(Token = "0x4000020")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Dictionary<string, Type> _legacyKeyTypes;

	[Token(Token = "0x4000021")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly List<string> _legacySceneNames;

	[Token(Token = "0x4000022")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private readonly Dictionary<string, string> _scenesToCoursesMap;

	[Token(Token = "0x4000023")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private readonly Dictionary<string, int[]> _coursesToClueIDsMap;

	[Token(Token = "0x600001C")]
	[Address(RVA = "0xE031BC", Offset = "0xE031BC", VA = "0xE031BC")]
	public static PlayerPrefsSnapshot Create()
	{
		return null;
	}

	[Token(Token = "0x600001D")]
	[Address(RVA = "0xE04484", Offset = "0xE04484", VA = "0xE04484")]
	private void InitializeKeyMap()
	{
	}

	[Token(Token = "0x600001E")]
	[Address(RVA = "0xE05654", Offset = "0xE05654", VA = "0xE05654")]
	private static string SimplifyKey(string key)
	{
		return null;
	}

	[Token(Token = "0x600001F")]
	[Address(RVA = "0xE056D8", Offset = "0xE056D8", VA = "0xE056D8")]
	public ProfileData BuildProfile(string profileId)
	{
		return null;
	}

	[Token(Token = "0x6000020")]
	[Address(RVA = "0xE07A28", Offset = "0xE07A28", VA = "0xE07A28")]
	public bool IsValidDataModel()
	{
		return default(bool);
	}

	[Token(Token = "0x6000021")]
	[Address(RVA = "0xE035C4", Offset = "0xE035C4", VA = "0xE035C4")]
	public PlayerPrefsSnapshot()
	{
	}
}
[Token(Token = "0x200000A")]
public class PlayerProfileButton : MonoBehaviour
{
	[Token(Token = "0x4000024")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject DeleteProfileButton;

	[Token(Token = "0x4000025")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject RenameProfileButton;

	[Token(Token = "0x4000026")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject AddProfileCollider;

	[Token(Token = "0x4000027")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject SwapProfileCollider;

	[Token(Token = "0x4000028")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Image SelectedBG;

	[Token(Token = "0x4000029")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TextMeshProUGUI ProfileName;

	[Token(Token = "0x400002A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Color NormalColor;

	[Token(Token = "0x400002B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Color SelectedColor;

	[Token(Token = "0x400002C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Color FadedColor;

	[Token(Token = "0x6000022")]
	[Address(RVA = "0xE07A38", Offset = "0xE07A38", VA = "0xE07A38")]
	public void DisplayProfile([Optional] ProfileData profile)
	{
	}

	[Token(Token = "0x6000023")]
	[Address(RVA = "0xE07D00", Offset = "0xE07D00", VA = "0xE07D00")]
	public PlayerProfileButton()
	{
	}
}
[Token(Token = "0x200000B")]
public class PlayerProfileController : MonoBehaviour, IProfileActivatedHandler, IProfileHandler, IProfilesChangedHandler
{
	[Token(Token = "0x400002D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PlayerProfileButton[] PlayerProfileButtons;

	[Token(Token = "0x400002E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TMP_Text PlayFabText;

	[Token(Token = "0x400002F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Header("Scene References")]
	public GameObject PlayerNameEntry;

	[Token(Token = "0x4000030")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private IList<ProfileData> _profiles;

	[Token(Token = "0x6000024")]
	[Address(RVA = "0xE07D08", Offset = "0xE07D08", VA = "0xE07D08")]
	private void Start()
	{
	}

	[Token(Token = "0x6000025")]
	[Address(RVA = "0xE081E0", Offset = "0xE081E0", VA = "0xE081E0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000026")]
	[Address(RVA = "0xE0863C", Offset = "0xE0863C", VA = "0xE0863C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000027")]
	[Address(RVA = "0xE08AAC", Offset = "0xE08AAC", VA = "0xE08AAC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000028")]
	[Address(RVA = "0xE08BB4", Offset = "0xE08BB4", VA = "0xE08BB4", Slot = "4")]
	public void OnProfileActivated(ProfileData profile)
	{
	}

	[Token(Token = "0x6000029")]
	[Address(RVA = "0xE08BB8", Offset = "0xE08BB8", VA = "0xE08BB8", Slot = "5")]
	public void OnProfilesChanged(ProfileData[] profiles)
	{
	}

	[Token(Token = "0x600002A")]
	[Address(RVA = "0xE080E4", Offset = "0xE080E4", VA = "0xE080E4")]
	private void RefreshPlayFabText()
	{
	}

	[Token(Token = "0x600002B")]
	[Address(RVA = "0xE08BBC", Offset = "0xE08BBC", VA = "0xE08BBC")]
	public void RefreshProfileText()
	{
	}

	[Token(Token = "0x600002C")]
	[Address(RVA = "0xE07F0C", Offset = "0xE07F0C", VA = "0xE07F0C")]
	private void RefreshUI()
	{
	}

	[Token(Token = "0x600002D")]
	[Address(RVA = "0xE08C48", Offset = "0xE08C48", VA = "0xE08C48")]
	public void SwapProfiles(int profileNumber)
	{
	}

	[Token(Token = "0x600002E")]
	[Address(RVA = "0xE090B8", Offset = "0xE090B8", VA = "0xE090B8")]
	public void ChangeProfileName(string newName)
	{
	}

	[Token(Token = "0x600002F")]
	[Address(RVA = "0xE0914C", Offset = "0xE0914C", VA = "0xE0914C")]
	public void AddProfile()
	{
	}

	[Token(Token = "0x6000030")]
	[Address(RVA = "0xE093E0", Offset = "0xE093E0", VA = "0xE093E0")]
	public void OpenNameEntryField()
	{
	}

	[Token(Token = "0x6000031")]
	[Address(RVA = "0xE09450", Offset = "0xE09450", VA = "0xE09450")]
	public void CreateProfileWithName(string playerName)
	{
	}

	[Token(Token = "0x6000032")]
	[Address(RVA = "0xE098E0", Offset = "0xE098E0", VA = "0xE098E0")]
	public void DeleteProfile()
	{
	}

	[Token(Token = "0x6000033")]
	[Address(RVA = "0xE09B00", Offset = "0xE09B00", VA = "0xE09B00")]
	public PlayerProfileController()
	{
	}
}
[Serializable]
[Token(Token = "0x200000D")]
public class ProfileData
{
	[Token(Token = "0x4000033")]
	public const string DEFAULT_PROFILE_ID = "Default";

	[Token(Token = "0x4000034")]
	public const string EMPTY_PROFILE_ID = "Empty";

	[Token(Token = "0x4000035")]
	public const int MAX_BALL_COUNT = 1000;

	[Token(Token = "0x4000036")]
	public const int MAX_PUTTER_COUNT = 100;

	[Token(Token = "0x4000037")]
	public const int STARTING_BALL_COUNT = 8;

	[Token(Token = "0x4000038")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[IgnoreDataMember]
	public bool IsTarget;

	[Token(Token = "0x4000039")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string Id;

	[Token(Token = "0x400003A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SavableString Name;

	[Token(Token = "0x400003B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SavableDateTime CreatedTime;

	[Token(Token = "0x400003C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public SavableDateTime LastModifiedTime;

	[Token(Token = "0x400003D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public SavableBool IsCreated;

	[Token(Token = "0x400003E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public SavableBool IsDeleted;

	[Token(Token = "0x400003F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public SavableInt ActiveBall;

	[Token(Token = "0x4000040")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public SavableInt ActivePutter;

	[Token(Token = "0x4000041")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public SavableString ActiveAvatar;

	[Token(Token = "0x4000042")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public SavableString SavedAvatars;

	[Token(Token = "0x4000043")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public SavableBool LockBallPosition;

	[Token(Token = "0x4000044")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public SavableFloat AutoAlignDistanceToBall;

	[Token(Token = "0x4000045")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public SavableBool BallLocatorActive;

	[Token(Token = "0x4000046")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public SavableBool GripToPutt;

	[Token(Token = "0x4000047")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public SavableBool CustomGrip;

	[Token(Token = "0x4000048")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public SavableBool StrokeLimit;

	[Token(Token = "0x4000049")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public SavableBool InvertHands;

	[Token(Token = "0x400004A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public SavableString Language;

	[Token(Token = "0x400004B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public SavableBool MicrophoneEnabled;

	[Token(Token = "0x400004C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public SavableString MultiplayerRoom;

	[Token(Token = "0x400004D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public SavableFloat PutterAngle;

	[Token(Token = "0x400004E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public SavableVector3 PutterPosOffset;

	[Token(Token = "0x400004F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public SavableVector3 PutterRotOffset;

	[Token(Token = "0x4000050")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public SavableBool PutterOffsetInitialized;

	[Token(Token = "0x4000051")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public SavableFloat PutterStrength;

	[Token(Token = "0x4000052")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public SavableBool ShowBallTrail;

	[Token(Token = "0x4000053")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public SavableBool ShowNametags;

	[Token(Token = "0x4000054")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public SavableBool ShowTurnNotifications;

	[Token(Token = "0x4000055")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public SavableBool ShowOpponentScoreNotifications;

	[Token(Token = "0x4000056")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public SavableBool SmoothLocomotion;

	[Token(Token = "0x4000057")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public SavableBool SmoothRotation;

	[Token(Token = "0x4000058")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public SavableFloat RotationSpeed;

	[Token(Token = "0x4000059")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public SavableFloat WalkingSpeed;

	[Token(Token = "0x400005A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public SavableFloat MusicVolumeMultiplier;

	[Token(Token = "0x400005B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public SavableFloat SoundEffectsVolumeMultiplier;

	[Token(Token = "0x400005C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public SavableFloat VoiceChatVolumeMultiplier;

	[Token(Token = "0x400005D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public SavableBool MatchDetailsActive;

	[Token(Token = "0x400005E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public SavableFloat DefaultMaxPlayer;

	[Token(Token = "0x400005F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public SavableString PutterHand;

	[Token(Token = "0x4000060")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public SavableInt FlyingModeCount;

	[Token(Token = "0x4000061")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public SavableBool PracticeTutorialComplete;

	[Token(Token = "0x4000062")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public SavableBool TutorialActive;

	[Token(Token = "0x4000063")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public SavableInt GripToPuttCount;

	[Token(Token = "0x4000064")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public SavableInt TossBallCount;

	[Token(Token = "0x4000065")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public SavableInt InstantReplayCount;

	[Token(Token = "0x4000066")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public SavableInt TotalBallsUnlocked;

	[Token(Token = "0x4000067")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	[NonReorderable]
	public SavableInt[] BallsFound;

	[Token(Token = "0x4000068")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	[NonReorderable]
	public SavableVector3[] BallPositions;

	[Token(Token = "0x4000069")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	[NonReorderable]
	public SavableBool[] PuttersUnlocked;

	[Token(Token = "0x400006A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public Dictionary<string, CourseData> CourseData;

	[Token(Token = "0x17000005")]
	[IgnoreDataMember]
	public bool IsDefault
	{
		[Token(Token = "0x6000037")]
		[Address(RVA = "0xE09F58", Offset = "0xE09F58", VA = "0xE09F58")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000006")]
	[IgnoreDataMember]
	public bool IsEmpty
	{
		[Token(Token = "0x6000038")]
		[Address(RVA = "0xE09FA4", Offset = "0xE09FA4", VA = "0xE09FA4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000007")]
	[IgnoreDataMember]
	public bool IsSource
	{
		[Token(Token = "0x6000039")]
		[Address(RVA = "0xE09FF0", Offset = "0xE09FF0", VA = "0xE09FF0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x600003A")]
	[Address(RVA = "0xE0A000", Offset = "0xE0A000", VA = "0xE0A000")]
	public ProfileData()
	{
	}

	[Token(Token = "0x600003B")]
	[Address(RVA = "0xE06DA4", Offset = "0xE06DA4", VA = "0xE06DA4")]
	public ProfileData(string id)
	{
	}

	[Token(Token = "0x600003C")]
	[Address(RVA = "0xE0A9B8", Offset = "0xE0A9B8", VA = "0xE0A9B8")]
	public ProfileData(ProfileData source)
	{
	}

	[Token(Token = "0x600003D")]
	[Address(RVA = "0xE07940", Offset = "0xE07940", VA = "0xE07940")]
	public CourseData GetCourseData(string courseName)
	{
		return null;
	}

	[Token(Token = "0x600003E")]
	[Address(RVA = "0xE0B59C", Offset = "0xE0B59C", VA = "0xE0B59C")]
	public CourseData GetCourseData(Course course)
	{
		return null;
	}

	[Token(Token = "0x600003F")]
	[Address(RVA = "0xE0B5BC", Offset = "0xE0B5BC", VA = "0xE0B5BC")]
	public CourseData GetCourseData(CourseInfoAsset courseInfo)
	{
		return null;
	}

	[Token(Token = "0x6000040")]
	[Address(RVA = "0xE0A9EC", Offset = "0xE0A9EC", VA = "0xE0A9EC")]
	public void ResolveData(ProfileData source)
	{
	}
}
[Serializable]
[Token(Token = "0x200000E")]
public class CourseData
{
	[Token(Token = "0x400006B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string Name;

	[Token(Token = "0x400006C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SavableIntArray CluesFoundIDs;

	[Token(Token = "0x400006D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SavableBool FoxhuntCompleted;

	[Token(Token = "0x400006E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SavableInt LostBallsFound;

	[Token(Token = "0x400006F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public SavableInt RecordFront;

	[Token(Token = "0x4000070")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public SavableInt RecordBack;

	[Token(Token = "0x4000071")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public SavableInt Record18;

	[Token(Token = "0x4000072")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public SavableInt MutliplayerGameKey;

	[Token(Token = "0x4000073")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[NonReorderable]
	public SavableInt[] RecordPerHole;

	[Token(Token = "0x4000074")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public SavableBool IsUnlocked;

	[Token(Token = "0x4000075")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public SavableBool IsPurchased;

	[Token(Token = "0x4000076")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public SavableIntArray SavedStrokesPerHole;

	[Token(Token = "0x4000077")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public SavableInt SavedStrokesCurrent;

	[Token(Token = "0x4000078")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public SavableVector3 SavedBallPosition;

	[Token(Token = "0x4000079")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public SavableVector3 SavedBallGravity;

	[Token(Token = "0x17000008")]
	[DataMember]
	public int TotalCluesFound
	{
		[Token(Token = "0x6000041")]
		[Address(RVA = "0xE0B808", Offset = "0xE0B808", VA = "0xE0B808")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6000042")]
	[Address(RVA = "0xE0B264", Offset = "0xE0B264", VA = "0xE0B264")]
	public CourseData(string name)
	{
	}

	[Token(Token = "0x6000043")]
	[Address(RVA = "0xE0B60C", Offset = "0xE0B60C", VA = "0xE0B60C")]
	public void ResolveData(CourseData source)
	{
	}
}
[Token(Token = "0x2000010")]
public static class SavableManager
{
	[Token(Token = "0x2000011")]
	private enum ThreadedJobPriority
	{
		[Token(Token = "0x4000091")]
		Low,
		[Token(Token = "0x4000092")]
		High
	}

	[Token(Token = "0x2000012")]
	public abstract class ThreadedJob
	{
		[Token(Token = "0x2000013")]
		[CompilerGenerated]
		private sealed class <WaitFor>d__18 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000097")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000098")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000099")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ThreadedJob <>4__this;

			[Token(Token = "0x17000012")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000093")]
				[Address(RVA = "0xE11030", Offset = "0xE11030", VA = "0xE11030", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000013")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000095")]
				[Address(RVA = "0xE11078", Offset = "0xE11078", VA = "0xE11078", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000090")]
			[Address(RVA = "0xE10F00", Offset = "0xE10F00", VA = "0xE10F00")]
			[DebuggerHidden]
			public <WaitFor>d__18(int <>1__state)
			{
			}

			[Token(Token = "0x6000091")]
			[Address(RVA = "0xE10F9C", Offset = "0xE10F9C", VA = "0xE10F9C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000092")]
			[Address(RVA = "0xE10FA0", Offset = "0xE10FA0", VA = "0xE10FA0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000094")]
			[Address(RVA = "0xE11038", Offset = "0xE11038", VA = "0xE11038", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000093")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected Thread _thread;

		[Token(Token = "0x4000096")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action<bool> OnComplete;

		[Token(Token = "0x1700000F")]
		public bool IsDone
		{
			[Token(Token = "0x6000082")]
			[Address(RVA = "0xE10D14", Offset = "0xE10D14", VA = "0xE10D14")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000083")]
			[Address(RVA = "0xE10D1C", Offset = "0xE10D1C", VA = "0xE10D1C")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000010")]
		public string Error
		{
			[Token(Token = "0x6000084")]
			[Address(RVA = "0xE10D28", Offset = "0xE10D28", VA = "0xE10D28")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6000085")]
			[Address(RVA = "0xE10D30", Offset = "0xE10D30", VA = "0xE10D30")]
			[CompilerGenerated]
			protected set
			{
			}
		}

		[Token(Token = "0x17000011")]
		public bool IsError
		{
			[Token(Token = "0x6000086")]
			[Address(RVA = "0xE10D38", Offset = "0xE10D38", VA = "0xE10D38")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000087")]
		[Address(RVA = "0xE10D58", Offset = "0xE10D58", VA = "0xE10D58", Slot = "4")]
		public virtual void Start()
		{
		}

		[Token(Token = "0x6000088")]
		[Address(RVA = "0xE10E34", Offset = "0xE10E34", VA = "0xE10E34", Slot = "5")]
		public virtual void Abort()
		{
		}

		[Token(Token = "0x6000089")]
		protected abstract void ThreadedWork();

		[Token(Token = "0x600008A")]
		[Address(RVA = "0xE10E64", Offset = "0xE10E64", VA = "0xE10E64", Slot = "7")]
		protected virtual void OnFinished()
		{
		}

		[Token(Token = "0x600008B")]
		[Address(RVA = "0xE10E68", Offset = "0xE10E68", VA = "0xE10E68", Slot = "8")]
		protected virtual void OnAbort()
		{
		}

		[Token(Token = "0x600008C")]
		[Address(RVA = "0xE10E6C", Offset = "0xE10E6C", VA = "0xE10E6C", Slot = "9")]
		public virtual bool Update()
		{
			return default(bool);
		}

		[Token(Token = "0x600008D")]
		[Address(RVA = "0xE10E98", Offset = "0xE10E98", VA = "0xE10E98")]
		[IteratorStateMachine(typeof(<WaitFor>d__18))]
		public IEnumerator WaitFor()
		{
			return null;
		}

		[Token(Token = "0x600008E")]
		[Address(RVA = "0xE10F28", Offset = "0xE10F28", VA = "0xE10F28")]
		private void Run()
		{
		}

		[Token(Token = "0x600008F")]
		[Address(RVA = "0xE10F4C", Offset = "0xE10F4C", VA = "0xE10F4C")]
		protected ThreadedJob()
		{
		}
	}

	[Token(Token = "0x2000014")]
	public class SaveProfilesJob : ThreadedJob
	{
		[Token(Token = "0x400009A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<ProfileData> _profiles;

		[Token(Token = "0x400009B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string _dataPath;

		[Token(Token = "0x6000096")]
		[Address(RVA = "0xE10988", Offset = "0xE10988", VA = "0xE10988")]
		public SaveProfilesJob(IEnumerable<ProfileData> profiles)
		{
		}

		[Token(Token = "0x6000097")]
		[Address(RVA = "0xE11080", Offset = "0xE11080", VA = "0xE11080", Slot = "6")]
		protected override void ThreadedWork()
		{
		}
	}

	[Token(Token = "0x2000015")]
	public class LoadAllProfilesJob : ThreadedJob
	{
		[Token(Token = "0x400009C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private string _dataPath;

		[Token(Token = "0x400009D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private List<ProfileData> _jobProfiles;

		[Token(Token = "0x400009E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Action<string, List<ProfileData>> _onFinishedAction;

		[Token(Token = "0x6000098")]
		[Address(RVA = "0xE0FF58", Offset = "0xE0FF58", VA = "0xE0FF58")]
		public LoadAllProfilesJob(string dataPath, Action<string, List<ProfileData>> onFinished)
		{
		}

		[Token(Token = "0x6000099")]
		[Address(RVA = "0xE112E0", Offset = "0xE112E0", VA = "0xE112E0", Slot = "7")]
		protected override void OnFinished()
		{
		}

		[Token(Token = "0x600009A")]
		[Address(RVA = "0xE114E0", Offset = "0xE114E0", VA = "0xE114E0", Slot = "6")]
		protected override void ThreadedWork()
		{
		}
	}

	[Token(Token = "0x2000017")]
	public class InitialSyncWithDiskJob : ThreadedJob
	{
		[Token(Token = "0x40000A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<ProfileData> _jobProfiles;

		[Token(Token = "0x40000A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string _dataPath;

		[Token(Token = "0x60000A0")]
		[Address(RVA = "0xE0FBD8", Offset = "0xE0FBD8", VA = "0xE0FBD8")]
		public InitialSyncWithDiskJob(string dataPath, List<ProfileData> loadedProfiles, Action<bool> Callback)
		{
		}

		[Token(Token = "0x60000A1")]
		[Address(RVA = "0xE11C7C", Offset = "0xE11C7C", VA = "0xE11C7C", Slot = "7")]
		protected override void OnFinished()
		{
		}

		[Token(Token = "0x60000A2")]
		[Address(RVA = "0xE11D40", Offset = "0xE11D40", VA = "0xE11D40", Slot = "6")]
		protected override void ThreadedWork()
		{
		}
	}

	[Token(Token = "0x2000019")]
	public class SyncWithDiskJob : ThreadedJob
	{
		[Token(Token = "0x40000A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<ProfileData> _jobProfiles;

		[Token(Token = "0x40000A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string _dataPath;

		[Token(Token = "0x60000A7")]
		[Address(RVA = "0xE0FEC4", Offset = "0xE0FEC4", VA = "0xE0FEC4")]
		public SyncWithDiskJob(string dataPath, List<ProfileData> loadedProfiles)
		{
		}

		[Token(Token = "0x60000A8")]
		[Address(RVA = "0xE1283C", Offset = "0xE1283C", VA = "0xE1283C", Slot = "7")]
		protected override void OnFinished()
		{
		}

		[Token(Token = "0x60000A9")]
		[Address(RVA = "0xE12900", Offset = "0xE12900", VA = "0xE12900", Slot = "6")]
		protected override void ThreadedWork()
		{
		}
	}

	[Token(Token = "0x200001B")]
	public class HandleDownloadJob : ThreadedJob
	{
		[Token(Token = "0x40000AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private string _dataPath;

		[Token(Token = "0x40000AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private IDictionary<string, byte[]> _files;

		[Token(Token = "0x40000AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Dictionary<string, object> _filesToUpload;

		[Token(Token = "0x40000B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<string> _filesToDelete;

		[Token(Token = "0x40000B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private List<ProfileData> _jobProfiles;

		[Token(Token = "0x60000AE")]
		[Address(RVA = "0xE12F20", Offset = "0xE12F20", VA = "0xE12F20")]
		public HandleDownloadJob(string dataPath, List<ProfileData> localProfiles, IDictionary<string, byte[]> files)
		{
		}

		[Token(Token = "0x60000AF")]
		[Address(RVA = "0xE13048", Offset = "0xE13048", VA = "0xE13048", Slot = "6")]
		protected override void ThreadedWork()
		{
		}

		[Token(Token = "0x60000B0")]
		[Address(RVA = "0xE147E0", Offset = "0xE147E0", VA = "0xE147E0", Slot = "7")]
		protected override void OnFinished()
		{
		}

		[Token(Token = "0x60000B1")]
		[Address(RVA = "0xE14A8C", Offset = "0xE14A8C", VA = "0xE14A8C", Slot = "8")]
		protected override void OnAbort()
		{
		}
	}

	[Token(Token = "0x200001F")]
	public class CleanupDeletedFilesJob : ThreadedJob
	{
		[Token(Token = "0x40000C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private string _dataPath;

		[Token(Token = "0x60000CC")]
		[Address(RVA = "0xE14CE8", Offset = "0xE14CE8", VA = "0xE14CE8")]
		public CleanupDeletedFilesJob(string dataPath)
		{
		}

		[Token(Token = "0x60000CD")]
		[Address(RVA = "0xE155D0", Offset = "0xE155D0", VA = "0xE155D0", Slot = "6")]
		protected override void ThreadedWork()
		{
		}
	}

	[Token(Token = "0x2000025")]
	[CompilerGenerated]
	private sealed class <Sync>d__84 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40000DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40000DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x17000014")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60000E9")]
			[Address(RVA = "0xE164A4", Offset = "0xE164A4", VA = "0xE164A4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000015")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60000EB")]
			[Address(RVA = "0xE164EC", Offset = "0xE164EC", VA = "0xE164EC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60000E6")]
		[Address(RVA = "0xE10BA4", Offset = "0xE10BA4", VA = "0xE10BA4")]
		[DebuggerHidden]
		public <Sync>d__84(int <>1__state)
		{
		}

		[Token(Token = "0x60000E7")]
		[Address(RVA = "0xE162F8", Offset = "0xE162F8", VA = "0xE162F8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60000E8")]
		[Address(RVA = "0xE162FC", Offset = "0xE162FC", VA = "0xE162FC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60000EA")]
		[Address(RVA = "0xE164AC", Offset = "0xE164AC", VA = "0xE164AC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400007C")]
	public const int MAX_PROFILES = 6;

	[Token(Token = "0x400007D")]
	public const int MAX_UPLOADED_FILES = 10;

	[Token(Token = "0x400007E")]
	private const string SNAPSHOT_FILENAME = "Snapshot";

	[Token(Token = "0x400007F")]
	private const string PROFILE_PREFIX = "Profile_";

	[Token(Token = "0x4000080")]
	private const string DELETED_PROFILES_FILENAME = "DeletedProfiles";

	[Token(Token = "0x4000081")]
	private const int MAX_SYNC_QUEUE_COUNT = 2;

	[Token(Token = "0x4000082")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool IsIniitlized;

	[Token(Token = "0x4000083")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static ProfileData _profile;

	[Token(Token = "0x4000085")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static string _profileRootPath;

	[Token(Token = "0x4000086")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static string _lastDataPath;

	[Token(Token = "0x4000087")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static Queue<ThreadedJob> _threadedSyncQueue;

	[Token(Token = "0x4000088")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static ThreadedJob _currentThreadedJob;

	[Token(Token = "0x4000089")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private static SavableController _controller;

	[Token(Token = "0x400008A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static bool _initialized;

	[Token(Token = "0x400008B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	private static bool _cloudSyncInProgress;

	[Token(Token = "0x17000009")]
	public static ProfileData Profile
	{
		[Token(Token = "0x6000047")]
		[Address(RVA = "0xE030FC", Offset = "0xE030FC", VA = "0xE030FC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700000A")]
	private static List<ProfileData> _loadedProfiles
	{
		[Token(Token = "0x6000048")]
		[Address(RVA = "0xE0C600", Offset = "0xE0C600", VA = "0xE0C600")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000049")]
		[Address(RVA = "0xE0C658", Offset = "0xE0C658", VA = "0xE0C658")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x1700000B")]
	private static string _lastDataPathKey
	{
		[Token(Token = "0x600004A")]
		[Address(RVA = "0xE0C6B4", Offset = "0xE0C6B4", VA = "0xE0C6B4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700000C")]
	public static bool ExclusiveSyncInProgress
	{
		[Token(Token = "0x600004E")]
		[Address(RVA = "0xE08DE4", Offset = "0xE08DE4", VA = "0xE08DE4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700000D")]
	public static bool CloudSyncInProgress
	{
		[Token(Token = "0x600004F")]
		[Address(RVA = "0xE0CBA8", Offset = "0xE0CBA8", VA = "0xE0CBA8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700000E")]
	private static bool _threadedSyncInProgress
	{
		[Token(Token = "0x6000050")]
		[Address(RVA = "0xE0CB48", Offset = "0xE0CB48", VA = "0xE0CB48")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x14000001")]
	private static event Action<ProfileData> _profileActivatedEvent
	{
		[Token(Token = "0x6000051")]
		[Address(RVA = "0xE0CC00", Offset = "0xE0CC00", VA = "0xE0CC00")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000052")]
		[Address(RVA = "0xE0CCF4", Offset = "0xE0CCF4", VA = "0xE0CCF4")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000002")]
	private static event Action<ProfileData> _profileDeactivatedEvent
	{
		[Token(Token = "0x6000053")]
		[Address(RVA = "0xE0CDE8", Offset = "0xE0CDE8", VA = "0xE0CDE8")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000054")]
		[Address(RVA = "0xE0CEDC", Offset = "0xE0CEDC", VA = "0xE0CEDC")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000003")]
	private static event Action<ProfileData[]> _profilesChangedEvent
	{
		[Token(Token = "0x6000055")]
		[Address(RVA = "0xE0CFD0", Offset = "0xE0CFD0", VA = "0xE0CFD0")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000056")]
		[Address(RVA = "0xE0D0C4", Offset = "0xE0D0C4", VA = "0xE0D0C4")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000004")]
	private static event Action<bool> _profilesSyncingEvent
	{
		[Token(Token = "0x6000057")]
		[Address(RVA = "0xE0D1B8", Offset = "0xE0D1B8", VA = "0xE0D1B8")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000058")]
		[Address(RVA = "0xE0D2AC", Offset = "0xE0D2AC", VA = "0xE0D2AC")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x600004B")]
	[Address(RVA = "0xE0C714", Offset = "0xE0C714", VA = "0xE0C714")]
	public static string GetProfileFilename(ProfileData profile)
	{
		return null;
	}

	[Token(Token = "0x600004C")]
	[Address(RVA = "0xE0C768", Offset = "0xE0C768", VA = "0xE0C768")]
	public static string ProfileRootPath()
	{
		return null;
	}

	[Token(Token = "0x600004D")]
	[Address(RVA = "0xE0C868", Offset = "0xE0C868", VA = "0xE0C868")]
	public static string ProfileDataPath()
	{
		return null;
	}

	[Token(Token = "0x6000059")]
	[Address(RVA = "0xE0D3A0", Offset = "0xE0D3A0", VA = "0xE0D3A0")]
	[RuntimeInitializeOnLoadMethod(RuntimeInitializeLoadType.BeforeSceneLoad)]
	private static void Init()
	{
	}

	[Token(Token = "0x600005A")]
	[Address(RVA = "0xE08E30", Offset = "0xE08E30", VA = "0xE08E30")]
	public static void ActivateProfile(ProfileData profile)
	{
	}

	[Token(Token = "0x600005B")]
	[Address(RVA = "0xE092A4", Offset = "0xE092A4", VA = "0xE092A4")]
	public static bool CanUserCreateProfile()
	{
		return default(bool);
	}

	[Token(Token = "0x600005C")]
	[Address(RVA = "0xE0D5C0", Offset = "0xE0D5C0", VA = "0xE0D5C0")]
	public static bool CanUserActivateProfile(ProfileData profile)
	{
		return default(bool);
	}

	[Token(Token = "0x600005D")]
	[Address(RVA = "0xE09A88", Offset = "0xE09A88", VA = "0xE09A88")]
	public static bool CanUserDeleteProfile(ProfileData profile)
	{
		return default(bool);
	}

	[Token(Token = "0x600005E")]
	[Address(RVA = "0xE0959C", Offset = "0xE0959C", VA = "0xE0959C")]
	public static ProfileData CreateProfile(string username)
	{
		return null;
	}

	[Token(Token = "0x600005F")]
	[Address(RVA = "0xE09BC4", Offset = "0xE09BC4", VA = "0xE09BC4")]
	public static void DeleteProfile(ProfileData profile)
	{
	}

	[Token(Token = "0x6000060")]
	[Address(RVA = "0xE08BC0", Offset = "0xE08BC0", VA = "0xE08BC0")]
	public static IList<ProfileData> GetProfiles()
	{
		return null;
	}

	[Token(Token = "0x6000061")]
	[Address(RVA = "0xE0DE94", Offset = "0xE0DE94", VA = "0xE0DE94")]
	public static ProfileData GetDefaultProfile()
	{
		return null;
	}

	[Token(Token = "0x6000062")]
	[Address(RVA = "0xE0828C", Offset = "0xE0828C", VA = "0xE0828C")]
	public static void AddProfileListener(IProfileHandler listener)
	{
	}

	[Token(Token = "0x6000063")]
	[Address(RVA = "0xE086FC", Offset = "0xE086FC", VA = "0xE086FC")]
	public static void RemoveProfileListener(IProfileHandler listener)
	{
	}

	[Token(Token = "0x6000064")]
	[Address(RVA = "0xE0DFEC", Offset = "0xE0DFEC", VA = "0xE0DFEC")]
	public static void RebuildDefaultProfileFromLegacy()
	{
	}

	[Token(Token = "0x6000065")]
	[Address(RVA = "0xE0E62C", Offset = "0xE0E62C", VA = "0xE0E62C")]
	public static void CreateProfileFromLegacy()
	{
	}

	[Token(Token = "0x6000066")]
	[Address(RVA = "0xE0E750", Offset = "0xE0E750", VA = "0xE0E750")]
	public static ProfileData GetPreferredProfile()
	{
		return null;
	}

	[Token(Token = "0x6000067")]
	[Address(RVA = "0xE0904C", Offset = "0xE0904C", VA = "0xE0904C")]
	public static void SetPreferredProfile(ProfileData profile)
	{
	}

	[Token(Token = "0x6000068")]
	[Address(RVA = "0xE0E8D8", Offset = "0xE0E8D8", VA = "0xE0E8D8")]
	private static string GetPreferredProfileKey()
	{
		return null;
	}

	[Token(Token = "0x6000069")]
	[Address(RVA = "0xE0E30C", Offset = "0xE0E30C", VA = "0xE0E30C")]
	private static ProfileData CreateProfile(PlayerPrefsSnapshot snapshot, bool isDefault)
	{
		return null;
	}

	[Token(Token = "0x600006A")]
	[Address(RVA = "0xE07644", Offset = "0xE07644", VA = "0xE07644")]
	public static string SanitizeString(string raw)
	{
		return null;
	}

	[Token(Token = "0x600006B")]
	[Address(RVA = "0xE0DB54", Offset = "0xE0DB54", VA = "0xE0DB54")]
	private static void InvokeProfilesChanged()
	{
	}

	[Token(Token = "0x600006C")]
	[Address(RVA = "0xE0EA3C", Offset = "0xE0EA3C", VA = "0xE0EA3C")]
	private static List<ProfileData> GetSortedProfileList(IEnumerable<ProfileData> profiles)
	{
		return null;
	}

	[Token(Token = "0x600006D")]
	[Address(RVA = "0xE0D780", Offset = "0xE0D780", VA = "0xE0D780")]
	private static void ReloadProfiles(IEnumerable<ProfileData> profiles)
	{
	}

	[Token(Token = "0x600006E")]
	[Address(RVA = "0xE0BA14", Offset = "0xE0BA14", VA = "0xE0BA14")]
	public static void SyncDisk()
	{
	}

	[Token(Token = "0x600006F")]
	[Address(RVA = "0xE0FA44", Offset = "0xE0FA44", VA = "0xE0FA44")]
	public static void InitialSyncDisckAsync()
	{
	}

	[Token(Token = "0x6000070")]
	[Address(RVA = "0xE0FDF8", Offset = "0xE0FDF8", VA = "0xE0FDF8")]
	public static void SyncDiskAsync()
	{
	}

	[Token(Token = "0x6000071")]
	[Address(RVA = "0xE0DC54", Offset = "0xE0DC54", VA = "0xE0DC54")]
	public static void SyncCloudAsync()
	{
	}

	[Token(Token = "0x6000072")]
	[Address(RVA = "0xE0FF84", Offset = "0xE0FF84", VA = "0xE0FF84")]
	private static void BeginPlayFabDownload(string dataPath, List<ProfileData> localProfiles)
	{
	}

	[Token(Token = "0x6000073")]
	[Address(RVA = "0xE100D4", Offset = "0xE100D4", VA = "0xE100D4")]
	public static void Quicksave()
	{
	}

	[Token(Token = "0x6000074")]
	[Address(RVA = "0xE102FC", Offset = "0xE102FC", VA = "0xE102FC")]
	public static void QuickSaveAsync()
	{
	}

	[Token(Token = "0x6000075")]
	[Address(RVA = "0xE103BC", Offset = "0xE103BC", VA = "0xE103BC")]
	public static void AbortSyncs()
	{
	}

	[Token(Token = "0x6000076")]
	[Address(RVA = "0xE1049C", Offset = "0xE1049C", VA = "0xE1049C")]
	private static void SaveProfile(string dataPath, ProfileData profile)
	{
	}

	[Token(Token = "0x6000077")]
	[Address(RVA = "0xE1019C", Offset = "0xE1019C", VA = "0xE1019C")]
	private static void SaveProfiles(string dataPath, params ProfileData[] profiles)
	{
	}

	[Token(Token = "0x6000078")]
	[Address(RVA = "0xE0D52C", Offset = "0xE0D52C", VA = "0xE0D52C")]
	private static void SaveProfilesAsync(string dataPath, ThreadedJobPriority priority, params ProfileData[] profiles)
	{
	}

	[Token(Token = "0x6000079")]
	[Address(RVA = "0xE0F448", Offset = "0xE0F448", VA = "0xE0F448")]
	private static IEnumerable<ProfileData> LoadAllProfiles(string dataPath)
	{
		return null;
	}

	[Token(Token = "0x600007A")]
	[Address(RVA = "0xE0EC0C", Offset = "0xE0EC0C", VA = "0xE0EC0C")]
	private static List<ProfileData> ResolveProfiles(IEnumerable<ProfileData> targetProfiles, IEnumerable<ProfileData> sourceProfiles)
	{
		return null;
	}

	[Token(Token = "0x600007B")]
	[Address(RVA = "0xE10A48", Offset = "0xE10A48", VA = "0xE10A48")]
	private static void DeleteFile(string fileName)
	{
	}

	[Token(Token = "0x600007C")]
	public static T LoadFile<T>(string path)
	{
		return (T)null;
	}

	[Token(Token = "0x600007D")]
	[Address(RVA = "0xE1058C", Offset = "0xE1058C", VA = "0xE1058C")]
	private static void SaveFile(string dataPath, string fileName, object data)
	{
	}

	[Token(Token = "0x600007E")]
	[Address(RVA = "0xE0E0F8", Offset = "0xE0E0F8", VA = "0xE0E0F8")]
	private static PlayerPrefsSnapshot GetPlayerPrefsSnapshot()
	{
		return null;
	}

	[Token(Token = "0x600007F")]
	[Address(RVA = "0xE0FC78", Offset = "0xE0FC78", VA = "0xE0FC78")]
	private static bool TryQueueThreadedJob(ThreadedJob job, ThreadedJobPriority priority = ThreadedJobPriority.Low)
	{
		return default(bool);
	}

	[Token(Token = "0x6000080")]
	[Address(RVA = "0xE0E6F0", Offset = "0xE0E6F0", VA = "0xE0E6F0")]
	[IteratorStateMachine(typeof(<Sync>d__84))]
	private static IEnumerator Sync()
	{
		return null;
	}
}
[Token(Token = "0x2000026")]
public interface IProfileHandler
{
}
[Token(Token = "0x2000027")]
public interface IProfileActivatedHandler : IProfileHandler
{
	[Token(Token = "0x60000EC")]
	void OnProfileActivated(ProfileData profile);
}
[Token(Token = "0x2000028")]
public interface IProfileDeactivatedHandler : IProfileHandler
{
	[Token(Token = "0x60000ED")]
	void OnProfileDeactivate(ProfileData profile);
}
[Token(Token = "0x2000029")]
public interface IProfilesChangedHandler : IProfileHandler
{
	[Token(Token = "0x60000EE")]
	void OnProfilesChanged(ProfileData[] profiles);
}
[Token(Token = "0x200002A")]
public interface IProfilesSyncHandler : IProfileHandler
{
	[Token(Token = "0x60000EF")]
	void OnProfileSyncing(bool syncInProgress);
}
[Token(Token = "0x200002B")]
public class SystemClockIsFutureException : Exception
{
	[Token(Token = "0x40000DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool hasFired;

	[Token(Token = "0x60000F0")]
	[Address(RVA = "0xE164F4", Offset = "0xE164F4", VA = "0xE164F4")]
	public SystemClockIsFutureException()
	{
	}

	[Token(Token = "0x60000F1")]
	[Address(RVA = "0xE1654C", Offset = "0xE1654C", VA = "0xE1654C")]
	public SystemClockIsFutureException(string message)
	{
	}
}
[Token(Token = "0x200002C")]
public class TargetTimestampIsFutureException : Exception
{
	[Token(Token = "0x40000DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool hasFired;

	[Token(Token = "0x60000F2")]
	[Address(RVA = "0xE165B4", Offset = "0xE165B4", VA = "0xE165B4")]
	public TargetTimestampIsFutureException()
	{
	}

	[Token(Token = "0x60000F3")]
	[Address(RVA = "0xE1660C", Offset = "0xE1660C", VA = "0xE1660C")]
	public TargetTimestampIsFutureException(string message)
	{
	}
}
[Token(Token = "0x200002D")]
public class SourceTimestampIsFutureException : Exception
{
	[Token(Token = "0x40000DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool hasFired;

	[Token(Token = "0x60000F4")]
	[Address(RVA = "0xE16674", Offset = "0xE16674", VA = "0xE16674")]
	public SourceTimestampIsFutureException()
	{
	}

	[Token(Token = "0x60000F5")]
	[Address(RVA = "0xE166CC", Offset = "0xE166CC", VA = "0xE166CC")]
	public SourceTimestampIsFutureException(string message)
	{
	}
}
[Token(Token = "0x200002E")]
public class SystemClockIsPastException : Exception
{
	[Token(Token = "0x40000DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool hasFired;

	[Token(Token = "0x60000F6")]
	[Address(RVA = "0xE16734", Offset = "0xE16734", VA = "0xE16734")]
	public SystemClockIsPastException()
	{
	}

	[Token(Token = "0x60000F7")]
	[Address(RVA = "0xE1678C", Offset = "0xE1678C", VA = "0xE1678C")]
	public SystemClockIsPastException(string message)
	{
	}
}
[Token(Token = "0x200002F")]
public enum SavableMergeMode
{
	[Token(Token = "0x40000E1")]
	DoNotMerge = -1,
	[Token(Token = "0x40000E2")]
	AcceptNewer,
	[Token(Token = "0x40000E3")]
	AcceptLesser,
	[Token(Token = "0x40000E4")]
	AcceptGreater,
	[Token(Token = "0x40000E5")]
	AcceptSource
}
[Token(Token = "0x2000030")]
public abstract class SavableData
{
	[Token(Token = "0x40000E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	[HideInInspector]
	private bool _hasValue;

	[Token(Token = "0x40000E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[HideInInspector]
	private DateTimeData _lastModified;

	[Token(Token = "0x17000016")]
	public bool HasValue
	{
		[Token(Token = "0x60000F8")]
		[Address(RVA = "0xE167F4", Offset = "0xE167F4", VA = "0xE167F4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60000F9")]
		[Address(RVA = "0xE167FC", Offset = "0xE167FC", VA = "0xE167FC")]
		protected set
		{
		}
	}

	[Token(Token = "0x17000017")]
	public DateTime LastModified
	{
		[Token(Token = "0x60000FA")]
		[Address(RVA = "0xE16808", Offset = "0xE16808", VA = "0xE16808")]
		get
		{
			return default(DateTime);
		}
		[Token(Token = "0x60000FB")]
		[Address(RVA = "0xE16810", Offset = "0xE16810", VA = "0xE16810")]
		protected set
		{
		}
	}

	[Token(Token = "0x60000FC")]
	public abstract void Clear();

	[Token(Token = "0x60000FD")]
	public abstract void SetToDefault();

	[Token(Token = "0x60000FE")]
	[Address(RVA = "0xE168CC", Offset = "0xE168CC", VA = "0xE168CC")]
	public void MarkDirty(bool updateTimestamp)
	{
	}

	[Token(Token = "0x60000FF")]
	[Address(RVA = "0xE16954", Offset = "0xE16954", VA = "0xE16954")]
	protected SavableData()
	{
	}
}
[Token(Token = "0x2000031")]
public abstract class Savable<T> : SavableData, ISerializable
{
	[Token(Token = "0x40000E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[SerializeField]
	protected T _value;

	[Token(Token = "0x40000E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private T _defaultValue;

	[Token(Token = "0x40000EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	protected readonly SavableMergeMode _mergeMode;

	[Token(Token = "0x17000018")]
	public virtual T DefaultValue
	{
		[Token(Token = "0x6000100")]
		get
		{
			return (T)null;
		}
		[Token(Token = "0x6000101")]
		set
		{
		}
	}

	[Token(Token = "0x6000102")]
	public Savable([Optional] T defaultValue, SavableMergeMode mergeMode = SavableMergeMode.AcceptNewer)
	{
	}

	[Token(Token = "0x6000103")]
	public Savable(SerializationInfo info, StreamingContext context)
	{
	}

	[Token(Token = "0x6000104")]
	private void System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo info, StreamingContext context)
	{
	}

	[Token(Token = "0x6000105")]
	public virtual T GetValue()
	{
		return (T)null;
	}

	[Token(Token = "0x6000106")]
	public virtual void SetValue(T value, bool updateTimestamp = true)
	{
	}

	[Token(Token = "0x6000107")]
	public virtual void SetValue(Savable<T> source)
	{
	}

	[Token(Token = "0x6000108")]
	public override void Clear()
	{
	}

	[Token(Token = "0x6000109")]
	public override void SetToDefault()
	{
	}

	[Token(Token = "0x600010A")]
	public void ResolveData(Savable<T> source)
	{
	}

	[Token(Token = "0x600010B")]
	private string GetPlayfabID()
	{
		return null;
	}

	[Token(Token = "0x600010C")]
	protected virtual void MergeData(Savable<T> source)
	{
	}
}
[Serializable]
[Token(Token = "0x2000032")]
public class SavableBool : Savable<bool>
{
	[Token(Token = "0x600010D")]
	[Address(RVA = "0xE0A810", Offset = "0xE0A810", VA = "0xE0A810")]
	public SavableBool(bool defaultValue = false, SavableMergeMode mergeMode = SavableMergeMode.AcceptNewer)
	{
	}

	[Token(Token = "0x600010E")]
	[Address(RVA = "0xE1695C", Offset = "0xE1695C", VA = "0xE1695C")]
	public SavableBool(SerializationInfo info, StreamingContext context)
	{
	}

	[Token(Token = "0x600010F")]
	[Address(RVA = "0xE169CC", Offset = "0xE169CC", VA = "0xE169CC", Slot = "12")]
	protected override void MergeData(Savable<bool> source)
	{
	}

	[Token(Token = "0x6000110")]
	[Address(RVA = "0xE07724", Offset = "0xE07724", VA = "0xE07724")]
	public void SetValue(string value, bool updateTimestamp = true)
	{
	}

	[Token(Token = "0x6000111")]
	[Address(RVA = "0xE07A10", Offset = "0xE07A10", VA = "0xE07A10")]
	public void SetValue(int value, bool updateTimestamp = true)
	{
	}
}
[Serializable]
[Token(Token = "0x2000033")]
public class SavableFloat : Savable<float>
{
	[Token(Token = "0x6000112")]
	[Address(RVA = "0xE0A8D0", Offset = "0xE0A8D0", VA = "0xE0A8D0")]
	public SavableFloat(float defaultValue = 0f, SavableMergeMode mergeMode = SavableMergeMode.AcceptNewer)
	{
	}

	[Token(Token = "0x6000113")]
	[Address(RVA = "0xE16A88", Offset = "0xE16A88", VA = "0xE16A88")]
	public SavableFloat(SerializationInfo info, StreamingContext context)
	{
	}

	[Token(Token = "0x6000114")]
	[Address(RVA = "0xE16AF8", Offset = "0xE16AF8", VA = "0xE16AF8", Slot = "12")]
	protected override void MergeData(Savable<float> source)
	{
	}
}
[Serializable]
[Token(Token = "0x2000034")]
public class SavableInt : Savable<int>
{
	[Token(Token = "0x6000115")]
	[Address(RVA = "0xE0A870", Offset = "0xE0A870", VA = "0xE0A870")]
	public SavableInt(int defaultValue = 0, SavableMergeMode mergeMode = SavableMergeMode.AcceptNewer)
	{
	}

	[Token(Token = "0x6000116")]
	[Address(RVA = "0xE16BD0", Offset = "0xE16BD0", VA = "0xE16BD0")]
	public SavableInt(SerializationInfo info, StreamingContext context)
	{
	}

	[Token(Token = "0x6000117")]
	[Address(RVA = "0xE16C40", Offset = "0xE16C40", VA = "0xE16C40", Slot = "12")]
	protected override void MergeData(Savable<int> source)
	{
	}
}
[Serializable]
[Token(Token = "0x2000035")]
public class SavableString : Savable<string>
{
	[Token(Token = "0x6000118")]
	[Address(RVA = "0xE0A750", Offset = "0xE0A750", VA = "0xE0A750")]
	public SavableString([Optional] string defaultValue, SavableMergeMode mergeMode = SavableMergeMode.AcceptNewer)
	{
	}

	[Token(Token = "0x6000119")]
	[Address(RVA = "0xE16D0C", Offset = "0xE16D0C", VA = "0xE16D0C")]
	public SavableString(SerializationInfo info, StreamingContext context)
	{
	}
}
[Serializable]
[Token(Token = "0x2000036")]
public class SavableVector3 : Savable<Vector3Data>
{
	[Token(Token = "0x600011A")]
	[Address(RVA = "0xE0A938", Offset = "0xE0A938", VA = "0xE0A938")]
	public SavableVector3([Optional] Vector3Data defaultValue, SavableMergeMode mergeMode = SavableMergeMode.AcceptNewer)
	{
	}

	[Token(Token = "0x600011B")]
	[Address(RVA = "0xE16D7C", Offset = "0xE16D7C", VA = "0xE16D7C")]
	public SavableVector3(SerializationInfo info, StreamingContext context)
	{
	}

	[Token(Token = "0x600011C")]
	[Address(RVA = "0xE16DEC", Offset = "0xE16DEC", VA = "0xE16DEC")]
	public void SetValue(float x, float y, float z, bool updateTimestamp = true)
	{
	}

	[Token(Token = "0x600011D")]
	[Address(RVA = "0xE16DFC", Offset = "0xE16DFC", VA = "0xE16DFC")]
	public void SetValue(Vector3 vector3, bool updateTimestamp = true)
	{
	}
}
[Serializable]
[Token(Token = "0x2000037")]
public class SavableDateTime : Savable<DateTimeData>
{
	[Token(Token = "0x600011E")]
	[Address(RVA = "0xE0A7B0", Offset = "0xE0A7B0", VA = "0xE0A7B0")]
	public SavableDateTime([Optional] DateTimeData defaultValue, SavableMergeMode mergeMode = SavableMergeMode.AcceptNewer)
	{
	}

	[Token(Token = "0x600011F")]
	[Address(RVA = "0xE16E18", Offset = "0xE16E18", VA = "0xE16E18")]
	public SavableDateTime(SerializationInfo info, StreamingContext context)
	{
	}

	[Token(Token = "0x6000120")]
	[Address(RVA = "0xE0B5D4", Offset = "0xE0B5D4", VA = "0xE0B5D4")]
	public void SetValue(DateTime t)
	{
	}

	[Token(Token = "0x6000121")]
	[Address(RVA = "0xE16E88", Offset = "0xE16E88", VA = "0xE16E88", Slot = "12")]
	protected override void MergeData(Savable<DateTimeData> source)
	{
	}
}
[Serializable]
[Token(Token = "0x2000038")]
public struct DateTimeData : ISerializable
{
	[Token(Token = "0x40000EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[IgnoreDataMember]
	public string StringValue;

	[Token(Token = "0x17000019")]
	public DateTime Value
	{
		[Token(Token = "0x6000122")]
		[Address(RVA = "0xE15384", Offset = "0xE15384", VA = "0xE15384")]
		get
		{
			return default(DateTime);
		}
	}

	[Token(Token = "0x6000123")]
	[Address(RVA = "0xE1683C", Offset = "0xE1683C", VA = "0xE1683C")]
	public DateTimeData(DateTime t)
	{
	}

	[Token(Token = "0x6000124")]
	[Address(RVA = "0xE16FF8", Offset = "0xE16FF8", VA = "0xE16FF8")]
	public DateTimeData(SerializationInfo info, StreamingContext context)
	{
	}

	[Token(Token = "0x6000125")]
	[Address(RVA = "0xE1714C", Offset = "0xE1714C", VA = "0xE1714C", Slot = "4")]
	private void System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo info, StreamingContext context)
	{
	}
}
[Serializable]
[Token(Token = "0x2000039")]
public struct Vector3Data : ISerializable
{
	[Token(Token = "0x40000EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float x;

	[Token(Token = "0x40000ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float y;

	[Token(Token = "0x40000EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float z;

	[Token(Token = "0x1700001A")]
	[IgnoreDataMember]
	public Vector3 Vector3
	{
		[Token(Token = "0x6000126")]
		[Address(RVA = "0xE171B0", Offset = "0xE171B0", VA = "0xE171B0")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x6000127")]
	[Address(RVA = "0xE07934", Offset = "0xE07934", VA = "0xE07934")]
	public Vector3Data(float x, float y, float z)
	{
	}

	[Token(Token = "0x6000128")]
	[Address(RVA = "0xE16E0C", Offset = "0xE16E0C", VA = "0xE16E0C")]
	public Vector3Data(Vector3 vector3)
	{
	}

	[Token(Token = "0x6000129")]
	[Address(RVA = "0xE171BC", Offset = "0xE171BC", VA = "0xE171BC")]
	public Vector3Data(SerializationInfo info, StreamingContext context)
	{
	}

	[Token(Token = "0x600012A")]
	[Address(RVA = "0xE17364", Offset = "0xE17364", VA = "0xE17364", Slot = "4")]
	private void System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo info, StreamingContext context)
	{
	}
}
[Serializable]
[Token(Token = "0x200003A")]
public class SavableArray<T> : Savable<T[]>
{
	[Token(Token = "0x1700001B")]
	public override T[] DefaultValue
	{
		[Token(Token = "0x600012D")]
		get
		{
			return null;
		}
		[Token(Token = "0x600012E")]
		set
		{
		}
	}

	[Token(Token = "0x600012B")]
	public SavableArray([Optional] T[] defaultValue, SavableMergeMode mergeMode = SavableMergeMode.AcceptNewer)
	{
	}

	[Token(Token = "0x600012C")]
	public SavableArray(SerializationInfo info, StreamingContext context)
	{
	}

	[Token(Token = "0x600012F")]
	public override T[] GetValue()
	{
		return null;
	}

	[Token(Token = "0x6000130")]
	public T GetValue(int index)
	{
		return (T)null;
	}

	[Token(Token = "0x6000131")]
	public void SetValue(T value, int index, bool updateTimestamp = true)
	{
	}
}
[Serializable]
[Token(Token = "0x200003B")]
public class SavableIntArray : SavableArray<int>
{
	[Token(Token = "0x6000132")]
	[Address(RVA = "0xE0B93C", Offset = "0xE0B93C", VA = "0xE0B93C")]
	public SavableIntArray([Optional] int[] defaultValue, SavableMergeMode mergeMode = SavableMergeMode.AcceptNewer)
	{
	}

	[Token(Token = "0x6000133")]
	[Address(RVA = "0xE17418", Offset = "0xE17418", VA = "0xE17418")]
	public SavableIntArray(SerializationInfo info, StreamingContext context)
	{
	}
}
[Token(Token = "0x200003C")]
public class DebugText : MonoBehaviour
{
	[Token(Token = "0x40000EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private TextMesh _textMesh;

	[Token(Token = "0x40000F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float _startLifetime;

	[Token(Token = "0x40000F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private float _startSpeed;

	[Token(Token = "0x40000F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float _deceleration;

	[Token(Token = "0x40000F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Gradient _gradient;

	[Token(Token = "0x40000F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float _lifetime;

	[Token(Token = "0x40000F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float _speed;

	[Token(Token = "0x1700001C")]
	public TextMesh TextMesh
	{
		[Token(Token = "0x6000134")]
		[Address(RVA = "0xE17488", Offset = "0xE17488", VA = "0xE17488")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700001D")]
	public float StartLifetime
	{
		[Token(Token = "0x6000135")]
		[Address(RVA = "0xE17518", Offset = "0xE17518", VA = "0xE17518")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000136")]
		[Address(RVA = "0xE17520", Offset = "0xE17520", VA = "0xE17520")]
		set
		{
		}
	}

	[Token(Token = "0x1700001E")]
	public float StartSpeed
	{
		[Token(Token = "0x6000137")]
		[Address(RVA = "0xE1752C", Offset = "0xE1752C", VA = "0xE1752C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000138")]
		[Address(RVA = "0xE17534", Offset = "0xE17534", VA = "0xE17534")]
		set
		{
		}
	}

	[Token(Token = "0x1700001F")]
	public float Deceleration
	{
		[Token(Token = "0x6000139")]
		[Address(RVA = "0xE17540", Offset = "0xE17540", VA = "0xE17540")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600013A")]
		[Address(RVA = "0xE17548", Offset = "0xE17548", VA = "0xE17548")]
		set
		{
		}
	}

	[Token(Token = "0x600013B")]
	[Address(RVA = "0xE17550", Offset = "0xE17550", VA = "0xE17550")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600013C")]
	[Address(RVA = "0xE1755C", Offset = "0xE1755C", VA = "0xE1755C")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600013D")]
	[Address(RVA = "0xE17770", Offset = "0xE17770", VA = "0xE17770")]
	public DebugText()
	{
	}
}
[Token(Token = "0x200003D")]
public static class ScreenCursorManager
{
	[Token(Token = "0x200003E")]
	public delegate void ModeChangeHandler(ScreenCursorMode mode);

	[Token(Token = "0x40000F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static List<IScreenCursorView> _views;

	[Token(Token = "0x40000F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static ScreenCursorMode _mode;

	[Token(Token = "0x17000020")]
	public static ScreenCursorMode Mode
	{
		[Token(Token = "0x6000140")]
		[Address(RVA = "0xE17938", Offset = "0xE17938", VA = "0xE17938")]
		get
		{
			return default(ScreenCursorMode);
		}
		[Token(Token = "0x6000141")]
		[Address(RVA = "0xE17990", Offset = "0xE17990", VA = "0xE17990")]
		private set
		{
		}
	}

	[Token(Token = "0x14000005")]
	public static event ModeChangeHandler ModeChangedEvent
	{
		[Token(Token = "0x600013E")]
		[Address(RVA = "0xE17788", Offset = "0xE17788", VA = "0xE17788")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x600013F")]
		[Address(RVA = "0xE17860", Offset = "0xE17860", VA = "0xE17860")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6000142")]
	[Address(RVA = "0xE17A50", Offset = "0xE17A50", VA = "0xE17A50")]
	public static void RegisterView(IScreenCursorView view)
	{
	}

	[Token(Token = "0x6000143")]
	[Address(RVA = "0xE17B60", Offset = "0xE17B60", VA = "0xE17B60")]
	public static void DeregisterView(IScreenCursorView view)
	{
	}
}
[Token(Token = "0x200003F")]
public interface IScreenCursorView
{
}
[Token(Token = "0x2000040")]
public enum ScreenCursorMode
{
	[Token(Token = "0x40000FA")]
	Disabled,
	[Token(Token = "0x40000FB")]
	Menu
}
[Token(Token = "0x2000041")]
public class SpatialInputCursor : SpatialInputRenderer
{
	[Token(Token = "0x40000FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Header("Cursor")]
	[SerializeField]
	private Image _cursorImage;

	[Token(Token = "0x40000FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Color _validColor;

	[Token(Token = "0x40000FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Color _invalidColor;

	[Token(Token = "0x40000FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private bool _usePerceptualScale;

	[Token(Token = "0x4000100")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[SerializeField]
	private float _perceptualScale;

	[Token(Token = "0x6000149")]
	[Address(RVA = "0xE17E18", Offset = "0xE17E18", VA = "0xE17E18", Slot = "10")]
	protected override void OnUpdate(bool isActive, bool hasRaycastPoint, bool inputIsValid, Vector3 originPosition, Vector3 hitPosition, Vector3 hitNormal)
	{
	}

	[Token(Token = "0x600014A")]
	[Address(RVA = "0xE18154", Offset = "0xE18154", VA = "0xE18154")]
	public SpatialInputCursor()
	{
	}
}
[Token(Token = "0x2000042")]
public class SystemCheckUIElement : MonoBehaviour
{
	[Token(Token = "0x4000101")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PlayerNodeType Target;

	[Token(Token = "0x4000102")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Node _node;

	[Token(Token = "0x4000103")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	[Header("Graphics")]
	private Text _primaryText;

	[Token(Token = "0x4000104")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Text _secondaryText;

	[Token(Token = "0x4000105")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Image _backgroundImage;

	[Token(Token = "0x4000106")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Color _goodColor;

	[Token(Token = "0x4000107")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Color _badColor;

	[Token(Token = "0x600014B")]
	[Address(RVA = "0xE18178", Offset = "0xE18178", VA = "0xE18178")]
	public void DrawStatus(string priamryText, string secondaryText, bool isValid)
	{
	}

	[Token(Token = "0x600014C")]
	[Address(RVA = "0xE18220", Offset = "0xE18220", VA = "0xE18220")]
	private void Start()
	{
	}

	[Token(Token = "0x600014D")]
	[Address(RVA = "0xE18224", Offset = "0xE18224", VA = "0xE18224")]
	private void Update()
	{
	}

	[Token(Token = "0x600014E")]
	[Address(RVA = "0xE183F4", Offset = "0xE183F4", VA = "0xE183F4")]
	public SystemCheckUIElement()
	{
	}
}
[Token(Token = "0x2000043")]
public enum PlayerNodeType
{
	[Token(Token = "0x4000109")]
	Head,
	[Token(Token = "0x400010A")]
	LeftHand,
	[Token(Token = "0x400010B")]
	RightHand
}
[Token(Token = "0x2000044")]
public class ActivatorVFX : BaseVFX
{
	[Token(Token = "0x600014F")]
	[Address(RVA = "0xE183FC", Offset = "0xE183FC", VA = "0xE183FC", Slot = "4")]
	public override void Reset()
	{
	}

	[Token(Token = "0x6000150")]
	[Address(RVA = "0xE18420", Offset = "0xE18420", VA = "0xE18420", Slot = "5")]
	public override void Stop()
	{
	}

	[Token(Token = "0x6000151")]
	[Address(RVA = "0xE18444", Offset = "0xE18444", VA = "0xE18444")]
	public ActivatorVFX()
	{
	}
}
[Token(Token = "0x2000045")]
public class AnimatedMaterialVFX : BaseVFX
{
	[Token(Token = "0x400010C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MaterialPropertyAnimation AnimatedMaterial;

	[Token(Token = "0x6000152")]
	[Address(RVA = "0xE18454", Offset = "0xE18454", VA = "0xE18454", Slot = "4")]
	public override void Reset()
	{
	}

	[Token(Token = "0x6000153")]
	[Address(RVA = "0xE18474", Offset = "0xE18474", VA = "0xE18474")]
	public AnimatedMaterialVFX()
	{
	}
}
[Token(Token = "0x2000046")]
public abstract class BaseVFX : MonoBehaviour
{
	[Token(Token = "0x6000154")]
	public abstract void Reset();

	[Token(Token = "0x6000155")]
	[Address(RVA = "0xE1847C", Offset = "0xE1847C", VA = "0xE1847C", Slot = "5")]
	public virtual void Stop()
	{
	}

	[Token(Token = "0x6000156")]
	[Address(RVA = "0xE1844C", Offset = "0xE1844C", VA = "0xE1844C")]
	protected BaseVFX()
	{
	}
}
[Token(Token = "0x2000047")]
[RequireComponent(typeof(Renderer))]
public class MaterialPropertyAnimation : BaseVFX
{
	[Token(Token = "0x400010F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private List<AnimatedFloatProperty> _animatedFloatProperties;

	[Token(Token = "0x4000110")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private List<AnimatedColorProperty> _animatedColorProperties;

	[Token(Token = "0x4000111")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private float _maxLifetime;

	[Token(Token = "0x4000112")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[SerializeField]
	private bool _loop;

	[Token(Token = "0x4000113")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
	[SerializeField]
	private bool _playOnAwake;

	[Token(Token = "0x4000114")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float _lifetime;

	[Token(Token = "0x4000115")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private bool _isPlaying;

	[Token(Token = "0x17000021")]
	public Renderer Renderer
	{
		[Token(Token = "0x6000157")]
		[Address(RVA = "0xE18480", Offset = "0xE18480", VA = "0xE18480")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000158")]
		[Address(RVA = "0xE18488", Offset = "0xE18488", VA = "0xE18488")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000022")]
	public IEnumerable<AnimatedMaterialProperty> AnimatedMaterialProperties
	{
		[Token(Token = "0x6000159")]
		[Address(RVA = "0xE18490", Offset = "0xE18490", VA = "0xE18490")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x600015A")]
		[Address(RVA = "0xE18498", Offset = "0xE18498", VA = "0xE18498")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x600015B")]
	[Address(RVA = "0xE184A0", Offset = "0xE184A0", VA = "0xE184A0", Slot = "4")]
	public override void Reset()
	{
	}

	[Token(Token = "0x600015C")]
	[Address(RVA = "0xE187B8", Offset = "0xE187B8", VA = "0xE187B8")]
	private void Awake()
	{
	}

	[Token(Token = "0x600015D")]
	[Address(RVA = "0xE18B38", Offset = "0xE18B38", VA = "0xE18B38")]
	private void Start()
	{
	}

	[Token(Token = "0x600015E")]
	[Address(RVA = "0xE18B3C", Offset = "0xE18B3C", VA = "0xE18B3C")]
	private void Update()
	{
	}

	[Token(Token = "0x600015F")]
	[Address(RVA = "0xE184AC", Offset = "0xE184AC", VA = "0xE184AC")]
	private void Animate(float t)
	{
	}

	[Token(Token = "0x6000160")]
	[Address(RVA = "0xE18BA4", Offset = "0xE18BA4", VA = "0xE18BA4")]
	public void Play()
	{
	}

	[Token(Token = "0x6000161")]
	[Address(RVA = "0xE18BB0", Offset = "0xE18BB0", VA = "0xE18BB0")]
	public MaterialPropertyAnimation()
	{
	}
}
[Token(Token = "0x2000048")]
public abstract class AnimatedMaterialProperty
{
	[Token(Token = "0x4000116")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	private string _name;

	[Token(Token = "0x4000117")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	protected AnimationCurve _animationCurve;

	[Token(Token = "0x4000118")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	protected bool _timeControlled;

	[Token(Token = "0x4000119")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected Renderer _renderer;

	[Token(Token = "0x17000023")]
	public string Name
	{
		[Token(Token = "0x6000162")]
		[Address(RVA = "0xE18BC0", Offset = "0xE18BC0", VA = "0xE18BC0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000163")]
	public abstract void Init(Renderer renderer);

	[Token(Token = "0x6000164")]
	public abstract bool GetControlType();

	[Token(Token = "0x6000165")]
	public abstract void SetMaterialProperty(float percent);

	[Token(Token = "0x6000166")]
	[Address(RVA = "0xE18BC8", Offset = "0xE18BC8", VA = "0xE18BC8")]
	protected AnimatedMaterialProperty()
	{
	}
}
[Serializable]
[Token(Token = "0x2000049")]
public class AnimatedFloatProperty : AnimatedMaterialProperty
{
	[Token(Token = "0x400011A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float _initialValue;

	[Token(Token = "0x6000167")]
	[Address(RVA = "0xE18BD8", Offset = "0xE18BD8", VA = "0xE18BD8", Slot = "5")]
	public override bool GetControlType()
	{
		return default(bool);
	}

	[Token(Token = "0x6000168")]
	[Address(RVA = "0xE18BE0", Offset = "0xE18BE0", VA = "0xE18BE0", Slot = "4")]
	public override void Init(Renderer renderer)
	{
	}

	[Token(Token = "0x6000169")]
	[Address(RVA = "0xE18C1C", Offset = "0xE18C1C", VA = "0xE18C1C", Slot = "6")]
	public override void SetMaterialProperty(float percent)
	{
	}

	[Token(Token = "0x600016A")]
	[Address(RVA = "0xE18C8C", Offset = "0xE18C8C", VA = "0xE18C8C")]
	public AnimatedFloatProperty()
	{
	}
}
[Serializable]
[Token(Token = "0x200004A")]
public class AnimatedColorProperty : AnimatedMaterialProperty
{
	[Token(Token = "0x400011B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[GradientUsage(true)]
	[SerializeField]
	protected Gradient _gradient;

	[Token(Token = "0x600016B")]
	[Address(RVA = "0xE18C9C", Offset = "0xE18C9C", VA = "0xE18C9C", Slot = "5")]
	public override bool GetControlType()
	{
		return default(bool);
	}

	[Token(Token = "0x600016C")]
	[Address(RVA = "0xE18CA4", Offset = "0xE18CA4", VA = "0xE18CA4", Slot = "4")]
	public override void Init(Renderer renderer)
	{
	}

	[Token(Token = "0x600016D")]
	[Address(RVA = "0xE18CAC", Offset = "0xE18CAC", VA = "0xE18CAC", Slot = "6")]
	public override void SetMaterialProperty(float percent)
	{
	}

	[Token(Token = "0x600016E")]
	[Address(RVA = "0xE18D2C", Offset = "0xE18D2C", VA = "0xE18D2C")]
	public AnimatedColorProperty()
	{
	}
}
[Token(Token = "0x200004B")]
public class MultiVFX : BaseVFX
{
	[Token(Token = "0x400011C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private BaseVFX[] _vfx;

	[Token(Token = "0x600016F")]
	[Address(RVA = "0xE18D3C", Offset = "0xE18D3C", VA = "0xE18D3C", Slot = "4")]
	public override void Reset()
	{
	}

	[Token(Token = "0x6000170")]
	[Address(RVA = "0xE18DA0", Offset = "0xE18DA0", VA = "0xE18DA0", Slot = "5")]
	public override void Stop()
	{
	}

	[Token(Token = "0x6000171")]
	[Address(RVA = "0xE18E04", Offset = "0xE18E04", VA = "0xE18E04")]
	public MultiVFX()
	{
	}
}
[Token(Token = "0x200004C")]
public class ParticlesVFX : BaseVFX
{
	[Token(Token = "0x400011D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private ParticleSystem[] _particles;

	[Token(Token = "0x6000172")]
	[Address(RVA = "0xE18E0C", Offset = "0xE18E0C", VA = "0xE18E0C", Slot = "4")]
	public override void Reset()
	{
	}

	[Token(Token = "0x6000173")]
	[Address(RVA = "0xE18E6C", Offset = "0xE18E6C", VA = "0xE18E6C", Slot = "5")]
	public override void Stop()
	{
	}

	[Token(Token = "0x6000174")]
	[Address(RVA = "0xE18ECC", Offset = "0xE18ECC", VA = "0xE18ECC")]
	public ParticlesVFX()
	{
	}
}
[Token(Token = "0x200004D")]
public class SimpleVFX : BaseVFX
{
	[Token(Token = "0x400011E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float _maxLifetime;

	[Token(Token = "0x400011F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float _lifeTime;

	[Token(Token = "0x4000120")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float _startLifetime;

	[Token(Token = "0x6000175")]
	[Address(RVA = "0xE18F24", Offset = "0xE18F24", VA = "0xE18F24")]
	private void Start()
	{
	}

	[Token(Token = "0x6000176")]
	[Address(RVA = "0xE18F28", Offset = "0xE18F28", VA = "0xE18F28", Slot = "4")]
	public override void Reset()
	{
	}

	[Token(Token = "0x6000177")]
	[Address(RVA = "0xE18F30", Offset = "0xE18F30", VA = "0xE18F30")]
	private void Update()
	{
	}

	[Token(Token = "0x6000178")]
	[Address(RVA = "0xE18FD4", Offset = "0xE18FD4", VA = "0xE18FD4")]
	public SimpleVFX()
	{
	}
}
[Token(Token = "0x200004E")]
public static class CameraDirector
{
	[Token(Token = "0x4000121")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Camera _mainCamera;

	[Token(Token = "0x17000024")]
	public static Camera MainCamera
	{
		[Token(Token = "0x6000179")]
		[Address(RVA = "0xE18FE4", Offset = "0xE18FE4", VA = "0xE18FE4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x14000006")]
	public static event Action<Camera, Camera> ChangedMainCameraEvent
	{
		[Token(Token = "0x600017A")]
		[Address(RVA = "0xE190E8", Offset = "0xE190E8", VA = "0xE190E8")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x600017B")]
		[Address(RVA = "0xE191B8", Offset = "0xE191B8", VA = "0xE191B8")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x600017C")]
	[Address(RVA = "0xE19288", Offset = "0xE19288", VA = "0xE19288")]
	public static void SetMainCamara(Camera mainCamera)
	{
	}
}
[Token(Token = "0x200004F")]
public class CenterOfMass : MonoBehaviour
{
	[Token(Token = "0x600017D")]
	[Address(RVA = "0xE193D8", Offset = "0xE193D8", VA = "0xE193D8")]
	private void Awake()
	{
	}

	[Token(Token = "0x600017E")]
	[Address(RVA = "0xE193DC", Offset = "0xE193DC", VA = "0xE193DC")]
	private void Reset()
	{
	}

	[Token(Token = "0x600017F")]
	[Address(RVA = "0xE19470", Offset = "0xE19470", VA = "0xE19470")]
	public CenterOfMass()
	{
	}
}
[Token(Token = "0x2000050")]
public static class CommandArgsHelper
{
	[Token(Token = "0x6000180")]
	[Address(RVA = "0xE19478", Offset = "0xE19478", VA = "0xE19478")]
	public static string GetArg(string name)
	{
		return null;
	}

	[Token(Token = "0x6000181")]
	[Address(RVA = "0xE1951C", Offset = "0xE1951C", VA = "0xE1951C")]
	public static string[] GetArgs()
	{
		return null;
	}

	[Token(Token = "0x6000182")]
	[Address(RVA = "0xE19524", Offset = "0xE19524", VA = "0xE19524")]
	public static void LogArgs()
	{
	}

	[Token(Token = "0x6000183")]
	[Address(RVA = "0xE195B0", Offset = "0xE195B0", VA = "0xE195B0")]
	public static bool TryGetArg(string name, ref string value)
	{
		return default(bool);
	}

	[Token(Token = "0x6000184")]
	[Address(RVA = "0xE19670", Offset = "0xE19670", VA = "0xE19670")]
	public static string[] Concat(string[] args0, string[] args1)
	{
		return null;
	}

	[Token(Token = "0x6000185")]
	[Address(RVA = "0xE196E4", Offset = "0xE196E4", VA = "0xE196E4")]
	public static string JoinArgs(string[] args, int from, int to)
	{
		return null;
	}
}
[Token(Token = "0x2000051")]
public class DeveloperNote : MonoBehaviour
{
	[Token(Token = "0x6000186")]
	[Address(RVA = "0xE197E4", Offset = "0xE197E4", VA = "0xE197E4")]
	public DeveloperNote()
	{
	}
}
[Token(Token = "0x2000052")]
public class FaceMainCamera : MonoBehaviour
{
	[Token(Token = "0x2000053")]
	private enum Mode
	{
		[Token(Token = "0x4000129")]
		MatchCamera,
		[Token(Token = "0x400012A")]
		FaceCamera
	}

	[Token(Token = "0x4000123")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Range(0f, 1f)]
	[SerializeField]
	private float _pitchAmount;

	[Token(Token = "0x4000124")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private bool _reverse;

	[Token(Token = "0x4000125")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Mode _mode;

	[Token(Token = "0x4000126")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	[Range(0f, 30f)]
	private float _lerpFactor;

	[Token(Token = "0x4000127")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Vector3 _neckPivotOffset;

	[Token(Token = "0x6000187")]
	[Address(RVA = "0xE197EC", Offset = "0xE197EC", VA = "0xE197EC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000188")]
	[Address(RVA = "0xE19B14", Offset = "0xE19B14", VA = "0xE19B14")]
	public FaceMainCamera()
	{
	}
}
[Token(Token = "0x2000054")]
public class KeyCodeEventBus : MonoBehaviour
{
	[Token(Token = "0x400012B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private KeyCode _key;

	[Token(Token = "0x400012C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private KeyCode _secondaryKey;

	[Token(Token = "0x400012D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private UnityEvent _event;

	[Token(Token = "0x14000007")]
	public event Action Event
	{
		[Token(Token = "0x6000189")]
		[Address(RVA = "0xE19B30", Offset = "0xE19B30", VA = "0xE19B30")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x600018A")]
		[Address(RVA = "0xE19BCC", Offset = "0xE19BCC", VA = "0xE19BCC")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x600018B")]
	[Address(RVA = "0xE19C68", Offset = "0xE19C68", VA = "0xE19C68")]
	private void Update()
	{
	}

	[Token(Token = "0x600018C")]
	[Address(RVA = "0xE19E64", Offset = "0xE19E64", VA = "0xE19E64")]
	private bool GetKeyPressedDown()
	{
		return default(bool);
	}

	[Token(Token = "0x600018D")]
	[Address(RVA = "0xE19F00", Offset = "0xE19F00", VA = "0xE19F00")]
	public KeyCodeEventBus()
	{
	}
}
[Token(Token = "0x2000055")]
public static class LINQExtensions
{
	[Token(Token = "0x2000056")]
	[CompilerGenerated]
	private sealed class <DistinctBy>d__0<TSource, TKey> : IEnumerable<TSource>, IEnumerable, IEnumerator<TSource>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400012F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <>1__state;

		[Token(Token = "0x4000130")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private TSource <>2__current;

		[Token(Token = "0x4000131")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <>l__initialThreadId;

		[Token(Token = "0x4000132")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private IEnumerable<TSource> source;

		[Token(Token = "0x4000133")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IEnumerable<TSource> <>3__source;

		[Token(Token = "0x4000134")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Func<TSource, TKey> keySelector;

		[Token(Token = "0x4000135")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Func<TSource, TKey> <>3__keySelector;

		[Token(Token = "0x4000136")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private HashSet<TKey> <seenKeys>5__2;

		[Token(Token = "0x4000137")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private IEnumerator<TSource> <>7__wrap2;

		[Token(Token = "0x17000025")]
		private TSource System.Collections.Generic.IEnumerator<TSource>.Current
		{
			[Token(Token = "0x6000193")]
			[DebuggerHidden]
			get
			{
				return (TSource)null;
			}
		}

		[Token(Token = "0x17000026")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000195")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600018F")]
		[DebuggerHidden]
		public <DistinctBy>d__0(int <>1__state)
		{
		}

		[Token(Token = "0x6000190")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000191")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000192")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x6000194")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}

		[Token(Token = "0x6000196")]
		[DebuggerHidden]
		private IEnumerator<TSource> System.Collections.Generic.IEnumerable<TSource>.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6000197")]
		[DebuggerHidden]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}
	}

	[Token(Token = "0x600018E")]
	[IteratorStateMachine(typeof(<DistinctBy>d__0<, >))]
	public static IEnumerable<TSource> DistinctBy<TSource, TKey>(this IEnumerable<TSource> source, Func<TSource, TKey> keySelector)
	{
		return null;
	}
}
[Token(Token = "0x2000057")]
public static class Logger
{
	[Token(Token = "0x6000198")]
	[Address(RVA = "0xE19EA8", Offset = "0xE19EA8", VA = "0xE19EA8")]
	public static string Format(object obj, string message, params object[] args)
	{
		return null;
	}

	[Token(Token = "0x6000199")]
	[Address(RVA = "0xE19F78", Offset = "0xE19F78", VA = "0xE19F78")]
	public static string Format(Type type, string message, params object[] args)
	{
		return null;
	}

	[Token(Token = "0x600019A")]
	[Address(RVA = "0xE19F08", Offset = "0xE19F08", VA = "0xE19F08")]
	private static string Format(string type, string message)
	{
		return null;
	}

	[Token(Token = "0x600019B")]
	[Address(RVA = "0xE19FC4", Offset = "0xE19FC4", VA = "0xE19FC4")]
	public static void Log(string message, LogLevel level = LogLevel.Debug)
	{
	}

	[Token(Token = "0x600019C")]
	[Address(RVA = "0xE19FD0", Offset = "0xE19FD0", VA = "0xE19FD0")]
	public static void Log(string message, UnityEngine.Object context, LogLevel level = LogLevel.Debug)
	{
	}
}
[Token(Token = "0x2000058")]
public enum LogLevel
{
	[Token(Token = "0x4000139")]
	Error,
	[Token(Token = "0x400013A")]
	Warning,
	[Token(Token = "0x400013B")]
	Info,
	[Token(Token = "0x400013C")]
	Debug
}
[Token(Token = "0x2000059")]
public class Prohibition
{
	[Token(Token = "0x200005A")]
	public delegate bool Handler();

	[Token(Token = "0x400013D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private List<Handler> _handlers;

	[Token(Token = "0x17000027")]
	public bool IsProhibited
	{
		[Token(Token = "0x600019D")]
		[Address(RVA = "0xE1A0BC", Offset = "0xE1A0BC", VA = "0xE1A0BC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x600019E")]
	[Address(RVA = "0xE1A164", Offset = "0xE1A164", VA = "0xE1A164")]
	public void Add(Handler handler)
	{
	}

	[Token(Token = "0x600019F")]
	[Address(RVA = "0xE1A20C", Offset = "0xE1A20C", VA = "0xE1A20C")]
	public void Remove(Handler handler)
	{
	}

	[Token(Token = "0x60001A0")]
	[Address(RVA = "0xE1A264", Offset = "0xE1A264", VA = "0xE1A264")]
	public static implicit operator bool(Prohibition prohibition)
	{
		return default(bool);
	}

	[Token(Token = "0x60001A1")]
	[Address(RVA = "0xE1A274", Offset = "0xE1A274", VA = "0xE1A274")]
	public Prohibition()
	{
	}
}
[Token(Token = "0x200005B")]
public interface IProhibitor
{
	[Token(Token = "0x60001A6")]
	bool GetIsProhibited();
}
[Token(Token = "0x200005C")]
[ExecuteInEditMode]
public class ShaderLightController : MonoBehaviour
{
	[Token(Token = "0x400013E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Light[] inputLight;

	[Token(Token = "0x400013F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float lightAttnC1;

	[Token(Token = "0x4000140")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float lightAttnC2;

	[Token(Token = "0x60001A7")]
	[Address(RVA = "0xE1A408", Offset = "0xE1A408", VA = "0xE1A408")]
	private void Start()
	{
	}

	[Token(Token = "0x60001A8")]
	[Address(RVA = "0xE1A85C", Offset = "0xE1A85C", VA = "0xE1A85C")]
	private void Update()
	{
	}

	[Token(Token = "0x60001A9")]
	[Address(RVA = "0xE1A498", Offset = "0xE1A498", VA = "0xE1A498")]
	private void AnimateProps()
	{
	}

	[Token(Token = "0x60001AA")]
	[Address(RVA = "0xE1A420", Offset = "0xE1A420", VA = "0xE1A420")]
	private void InitializeProps()
	{
	}

	[Token(Token = "0x60001AB")]
	[Address(RVA = "0xE1A894", Offset = "0xE1A894", VA = "0xE1A894")]
	public ShaderLightController()
	{
	}
}
[Token(Token = "0x200005D")]
public class AudioManager : MonoBehaviourPunCallbacks, IProfileActivatedHandler, IProfileHandler
{
	[Token(Token = "0x200005E")]
	public delegate void VolumeEvent();

	[Token(Token = "0x4000141")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<AudioSource> musicSources;

	[Token(Token = "0x4000142")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<AudioSource> chimeSources;

	[Token(Token = "0x4000143")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<AudioSource> toneSources;

	[Token(Token = "0x4000144")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float musicCrossfadeDuration;

	[Token(Token = "0x4000145")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float ambienceCrossfadeDuration;

	[Token(Token = "0x4000146")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int nextChime;

	[Token(Token = "0x4000147")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private int nextTone;

	[Token(Token = "0x4000148")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private List<AudioSource> ambienceSources;

	[Token(Token = "0x4000149")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float ambienceVolume;

	[Token(Token = "0x400014A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float musicVolume;

	[Token(Token = "0x400014B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float toneVolume;

	[Token(Token = "0x400014C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private List<AudioClip> chimes;

	[Token(Token = "0x400014D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private List<AudioClip> tones;

	[Token(Token = "0x400014E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[HideInInspector]
	public bool isMenu;

	[Token(Token = "0x400014F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private float musicFadeProgress;

	[Token(Token = "0x4000150")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float ambienceFadeProgress;

	[Token(Token = "0x4000151")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Music activeMusic;

	[Token(Token = "0x4000157")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private List<MultiplayerVoice> activeMultiplayerVoices;

	[Token(Token = "0x4000158")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private bool soundOn;

	[Token(Token = "0x17000028")]
	public static AudioManager instance
	{
		[Token(Token = "0x60001AE")]
		[Address(RVA = "0xE1AA64", Offset = "0xE1AA64", VA = "0xE1AA64")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x60001AF")]
		[Address(RVA = "0xE1AAAC", Offset = "0xE1AAAC", VA = "0xE1AAAC")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000029")]
	public float musicMultiplier
	{
		[Token(Token = "0x60001B0")]
		[Address(RVA = "0xE1AAF8", Offset = "0xE1AAF8", VA = "0xE1AAF8")]
		[CompilerGenerated]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60001B1")]
		[Address(RVA = "0xE1AB00", Offset = "0xE1AB00", VA = "0xE1AB00")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x1700002A")]
	public float soundEffectsMultiplier
	{
		[Token(Token = "0x60001B2")]
		[Address(RVA = "0xE1AB08", Offset = "0xE1AB08", VA = "0xE1AB08")]
		[CompilerGenerated]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60001B3")]
		[Address(RVA = "0xE1AB10", Offset = "0xE1AB10", VA = "0xE1AB10")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x1700002B")]
	public float voiceChatMultiplier
	{
		[Token(Token = "0x60001B4")]
		[Address(RVA = "0xE1AB18", Offset = "0xE1AB18", VA = "0xE1AB18")]
		[CompilerGenerated]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60001B5")]
		[Address(RVA = "0xE1AB20", Offset = "0xE1AB20", VA = "0xE1AB20")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x1700002C")]
	private SavableFloat musicMultiplierSavable
	{
		[Token(Token = "0x60001B6")]
		[Address(RVA = "0xE1AB28", Offset = "0xE1AB28", VA = "0xE1AB28")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700002D")]
	private SavableFloat soundEffectsSavable
	{
		[Token(Token = "0x60001B7")]
		[Address(RVA = "0xE1AB84", Offset = "0xE1AB84", VA = "0xE1AB84")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700002E")]
	private SavableFloat voiceChatSavable
	{
		[Token(Token = "0x60001B8")]
		[Address(RVA = "0xE1ABE0", Offset = "0xE1ABE0", VA = "0xE1ABE0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x14000008")]
	public static event VolumeEvent onVolumeChange
	{
		[Token(Token = "0x60001AC")]
		[Address(RVA = "0xE1A8F4", Offset = "0xE1A8F4", VA = "0xE1A8F4")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60001AD")]
		[Address(RVA = "0xE1A9AC", Offset = "0xE1A9AC", VA = "0xE1A9AC")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x60001B9")]
	[Address(RVA = "0xE1AC3C", Offset = "0xE1AC3C", VA = "0xE1AC3C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001BA")]
	[Address(RVA = "0xE1AE18", Offset = "0xE1AE18", VA = "0xE1AE18")]
	private void Start()
	{
	}

	[Token(Token = "0x60001BB")]
	[Address(RVA = "0xE1AFF4", Offset = "0xE1AFF4", VA = "0xE1AFF4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60001BC")]
	[Address(RVA = "0xE1B0B4", Offset = "0xE1B0B4", VA = "0xE1B0B4")]
	private void Init()
	{
	}

	[Token(Token = "0x60001BD")]
	[Address(RVA = "0xE1B248", Offset = "0xE1B248", VA = "0xE1B248")]
	public void UpdateActiveVoices(MultiplayerVoice newVoice)
	{
	}

	[Token(Token = "0x60001BE")]
	[Address(RVA = "0xE1B2F0", Offset = "0xE1B2F0", VA = "0xE1B2F0")]
	public void RemoveActiveVoice(MultiplayerVoice voice)
	{
	}

	[Token(Token = "0x60001BF")]
	[Address(RVA = "0xE1B348", Offset = "0xE1B348", VA = "0xE1B348")]
	public List<MultiplayerVoice> GetActiveVoices()
	{
		return null;
	}

	[Token(Token = "0x60001C0")]
	[Address(RVA = "0xE1B350", Offset = "0xE1B350", VA = "0xE1B350")]
	public MultiplayerVoice GetMultiplayerVoice(int actorNumber)
	{
		return null;
	}

	[Token(Token = "0x60001C1")]
	[Address(RVA = "0xE1B428", Offset = "0xE1B428", VA = "0xE1B428", Slot = "28")]
	public override void OnEnable()
	{
	}

	[Token(Token = "0x60001C2")]
	[Address(RVA = "0xE1B488", Offset = "0xE1B488", VA = "0xE1B488", Slot = "54")]
	public void OnProfileActivated(ProfileData profile)
	{
	}

	[Token(Token = "0x60001C3")]
	[Address(RVA = "0xE1B48C", Offset = "0xE1B48C", VA = "0xE1B48C")]
	public void OnProfileDeactivate(ProfileData profile)
	{
	}

	[Token(Token = "0x60001C4")]
	[Address(RVA = "0xE1B490", Offset = "0xE1B490", VA = "0xE1B490")]
	public void ChangeTrack(Music newMusic)
	{
	}

	[Token(Token = "0x60001C5")]
	[Address(RVA = "0xE1BA8C", Offset = "0xE1BA8C", VA = "0xE1BA8C")]
	private void Update()
	{
	}

	[Token(Token = "0x60001C6")]
	[Address(RVA = "0xE1BF6C", Offset = "0xE1BF6C", VA = "0xE1BF6C")]
	private void ClearChimesAndTones()
	{
	}

	[Token(Token = "0x60001C7")]
	[Address(RVA = "0xE1C128", Offset = "0xE1C128", VA = "0xE1C128")]
	public void PlayNextTone()
	{
	}

	[Token(Token = "0x60001C8")]
	[Address(RVA = "0xE1C2CC", Offset = "0xE1C2CC", VA = "0xE1C2CC")]
	public void PlayNextChime()
	{
	}

	[Token(Token = "0x60001C9")]
	[Address(RVA = "0xE1BAA4", Offset = "0xE1BAA4", VA = "0xE1BAA4")]
	private void CrossFade()
	{
	}

	[Token(Token = "0x60001CA")]
	[Address(RVA = "0xE1AD84", Offset = "0xE1AD84", VA = "0xE1AD84")]
	private AudioSource InitializeAudioSource()
	{
		return null;
	}

	[Token(Token = "0x60001CB")]
	[Address(RVA = "0xE1B114", Offset = "0xE1B114", VA = "0xE1B114")]
	public void UpdateMasterAudioLevels()
	{
	}

	[Token(Token = "0x60001CC")]
	[Address(RVA = "0xE1C474", Offset = "0xE1C474", VA = "0xE1C474", Slot = "41")]
	public override void OnJoinedRoom()
	{
	}

	[Token(Token = "0x60001CD")]
	[Address(RVA = "0xE1C488", Offset = "0xE1C488", VA = "0xE1C488", Slot = "42")]
	public override void OnPlayerEnteredRoom(Photon.Realtime.Player newPlayer)
	{
	}

	[Token(Token = "0x60001CE")]
	[Address(RVA = "0xE1C49C", Offset = "0xE1C49C", VA = "0xE1C49C", Slot = "43")]
	public override void OnPlayerLeftRoom(Photon.Realtime.Player newPlayer)
	{
	}

	[Token(Token = "0x60001CF")]
	[Address(RVA = "0xE1C4B0", Offset = "0xE1C4B0", VA = "0xE1C4B0")]
	private void ToggleSound()
	{
	}

	[Token(Token = "0x60001D0")]
	[Address(RVA = "0xE1C4C8", Offset = "0xE1C4C8", VA = "0xE1C4C8")]
	private void ToggleSound(bool on)
	{
	}

	[Token(Token = "0x60001D1")]
	[Address(RVA = "0xE1C720", Offset = "0xE1C720", VA = "0xE1C720")]
	private void FocusLost()
	{
	}

	[Token(Token = "0x60001D2")]
	[Address(RVA = "0xE1C844", Offset = "0xE1C844", VA = "0xE1C844")]
	private void FocusAcquired()
	{
	}

	[Token(Token = "0x60001D3")]
	[Address(RVA = "0xE1C8E8", Offset = "0xE1C8E8", VA = "0xE1C8E8")]
	public AudioManager()
	{
	}
}
[Token(Token = "0x200005F")]
public class DontDestroyOnSceneChange : MonoBehaviour
{
	[Token(Token = "0x60001D8")]
	[Address(RVA = "0xE1DB48", Offset = "0xE1DB48", VA = "0xE1DB48")]
	private void Start()
	{
	}

	[Token(Token = "0x60001D9")]
	[Address(RVA = "0xE1DBC4", Offset = "0xE1DBC4", VA = "0xE1DBC4")]
	private void Update()
	{
	}

	[Token(Token = "0x60001DA")]
	[Address(RVA = "0xE1DBC8", Offset = "0xE1DBC8", VA = "0xE1DBC8")]
	public DontDestroyOnSceneChange()
	{
	}
}
[Token(Token = "0x2000060")]
public class EnableOnPlay : MonoBehaviour
{
	[Token(Token = "0x2000061")]
	[CompilerGenerated]
	private sealed class <ARVRSwitchRoutine>d__19 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000162")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000163")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000164")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EnableOnPlay <>4__this;

		[Token(Token = "0x4000165")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GameObject[] <>7__wrap1;

		[Token(Token = "0x4000166")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <>7__wrap2;

		[Token(Token = "0x4000167")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private GameObject <v>5__4;

		[Token(Token = "0x1700002F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60001ED")]
			[Address(RVA = "0xE1EC6C", Offset = "0xE1EC6C", VA = "0xE1EC6C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000030")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60001EF")]
			[Address(RVA = "0xE1ECB4", Offset = "0xE1ECB4", VA = "0xE1ECB4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60001EA")]
		[Address(RVA = "0xE1E5F8", Offset = "0xE1E5F8", VA = "0xE1E5F8")]
		[DebuggerHidden]
		public <ARVRSwitchRoutine>d__19(int <>1__state)
		{
		}

		[Token(Token = "0x60001EB")]
		[Address(RVA = "0xE1E908", Offset = "0xE1E908", VA = "0xE1E908", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60001EC")]
		[Address(RVA = "0xE1E90C", Offset = "0xE1E90C", VA = "0xE1E90C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60001EE")]
		[Address(RVA = "0xE1EC74", Offset = "0xE1EC74", VA = "0xE1EC74", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000062")]
	[CompilerGenerated]
	private sealed class <DelayedScreenCapture>d__22 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000168")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000169")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400016A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EnableOnPlay <>4__this;

		[Token(Token = "0x17000031")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60001F3")]
			[Address(RVA = "0xE1EDA8", Offset = "0xE1EDA8", VA = "0xE1EDA8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000032")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60001F5")]
			[Address(RVA = "0xE1EDF0", Offset = "0xE1EDF0", VA = "0xE1EDF0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60001F0")]
		[Address(RVA = "0xE1E858", Offset = "0xE1E858", VA = "0xE1E858")]
		[DebuggerHidden]
		public <DelayedScreenCapture>d__22(int <>1__state)
		{
		}

		[Token(Token = "0x60001F1")]
		[Address(RVA = "0xE1ECBC", Offset = "0xE1ECBC", VA = "0xE1ECBC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60001F2")]
		[Address(RVA = "0xE1ECC0", Offset = "0xE1ECC0", VA = "0xE1ECC0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60001F4")]
		[Address(RVA = "0xE1EDB0", Offset = "0xE1EDB0", VA = "0xE1EDB0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000159")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool screenCaptureMode;

	[Token(Token = "0x400015A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject[] enable;

	[Token(Token = "0x400015B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject[] vrOnly;

	[Token(Token = "0x400015C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject[] arOnly;

	[Token(Token = "0x400015D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject[] disableOnScreenCapture;

	[Token(Token = "0x400015E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject ScreenCaptureCamera;

	[Token(Token = "0x400015F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject[] disableInGodMode;

	[Token(Token = "0x4000160")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject[] enableInGodMode;

	[Token(Token = "0x4000161")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static EnableOnPlay instance;

	[Token(Token = "0x60001DB")]
	[Address(RVA = "0xE1DBD0", Offset = "0xE1DBD0", VA = "0xE1DBD0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60001DC")]
	[Address(RVA = "0xE1DCA4", Offset = "0xE1DCA4", VA = "0xE1DCA4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60001DD")]
	[Address(RVA = "0xE1DD78", Offset = "0xE1DD78", VA = "0xE1DD78")]
	public void OverrideGodMode()
	{
	}

	[Token(Token = "0x60001DE")]
	[Address(RVA = "0xE1DDC8", Offset = "0xE1DDC8", VA = "0xE1DDC8")]
	private bool VROnly(GameObject obj)
	{
		return default(bool);
	}

	[Token(Token = "0x60001DF")]
	[Address(RVA = "0xE1DE94", Offset = "0xE1DE94", VA = "0xE1DE94")]
	private bool AROnly(GameObject obj)
	{
		return default(bool);
	}

	[Token(Token = "0x60001E0")]
	[Address(RVA = "0xE1DF60", Offset = "0xE1DF60", VA = "0xE1DF60")]
	private void GodModeOn()
	{
	}

	[Token(Token = "0x60001E1")]
	[Address(RVA = "0xE1E1E4", Offset = "0xE1E1E4", VA = "0xE1E1E4")]
	private void GodModeOff()
	{
	}

	[Token(Token = "0x60001E2")]
	[Address(RVA = "0xE1E448", Offset = "0xE1E448", VA = "0xE1E448")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001E3")]
	[Address(RVA = "0xE1E58C", Offset = "0xE1E58C", VA = "0xE1E58C")]
	private void Start()
	{
	}

	[Token(Token = "0x60001E4")]
	[Address(RVA = "0xE1E1C4", Offset = "0xE1E1C4", VA = "0xE1E1C4")]
	private void ARVRSwitch()
	{
	}

	[Token(Token = "0x60001E5")]
	[Address(RVA = "0xE1E590", Offset = "0xE1E590", VA = "0xE1E590")]
	[IteratorStateMachine(typeof(<ARVRSwitchRoutine>d__19))]
	public IEnumerator ARVRSwitchRoutine()
	{
		return null;
	}

	[Token(Token = "0x60001E6")]
	[Address(RVA = "0xE1E620", Offset = "0xE1E620", VA = "0xE1E620")]
	public void DisableInGodMode(GameObject obj)
	{
	}

	[Token(Token = "0x60001E7")]
	[Address(RVA = "0xE1E73C", Offset = "0xE1E73C", VA = "0xE1E73C")]
	public void EnableInGodMode(GameObject obj)
	{
	}

	[Token(Token = "0x60001E8")]
	[Address(RVA = "0xE1E524", Offset = "0xE1E524", VA = "0xE1E524")]
	[IteratorStateMachine(typeof(<DelayedScreenCapture>d__22))]
	public IEnumerator DelayedScreenCapture()
	{
		return null;
	}

	[Token(Token = "0x60001E9")]
	[Address(RVA = "0xE1E880", Offset = "0xE1E880", VA = "0xE1E880")]
	public EnableOnPlay()
	{
	}
}
[Token(Token = "0x2000063")]
public class GameManager : MonoBehaviour
{
	[Token(Token = "0x2000064")]
	public enum FadeDirection
	{
		[Token(Token = "0x400017D")]
		Up,
		[Token(Token = "0x400017E")]
		Down
	}

	[Token(Token = "0x2000065")]
	public delegate void ExitSceneEvent();

	[Token(Token = "0x2000066")]
	[CompilerGenerated]
	private sealed class <FogOscillator>d__27 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400017F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000180")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000181")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameManager <>4__this;

		[Token(Token = "0x4000182")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <timer>5__2;

		[Token(Token = "0x17000036")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000210")]
			[Address(RVA = "0xE1FFE8", Offset = "0xE1FFE8", VA = "0xE1FFE8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000037")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000212")]
			[Address(RVA = "0xE20030", Offset = "0xE20030", VA = "0xE20030", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600020D")]
		[Address(RVA = "0xE1F4E0", Offset = "0xE1F4E0", VA = "0xE1F4E0")]
		[DebuggerHidden]
		public <FogOscillator>d__27(int <>1__state)
		{
		}

		[Token(Token = "0x600020E")]
		[Address(RVA = "0xE1FF38", Offset = "0xE1FF38", VA = "0xE1FF38", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600020F")]
		[Address(RVA = "0xE1FF3C", Offset = "0xE1FF3C", VA = "0xE1FF3C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000211")]
		[Address(RVA = "0xE1FFF0", Offset = "0xE1FFF0", VA = "0xE1FFF0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000067")]
	[CompilerGenerated]
	private sealed class <DoMasterLoad_EmptyScene>d__28 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000183")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000184")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000185")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameManager <>4__this;

		[Token(Token = "0x4000186")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int transitionFrames;

		[Token(Token = "0x4000187")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int <i>5__2;

		[Token(Token = "0x17000038")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000216")]
			[Address(RVA = "0xE201EC", Offset = "0xE201EC", VA = "0xE201EC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000039")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000218")]
			[Address(RVA = "0xE20234", Offset = "0xE20234", VA = "0xE20234", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000213")]
		[Address(RVA = "0xE1F580", Offset = "0xE1F580", VA = "0xE1F580")]
		[DebuggerHidden]
		public <DoMasterLoad_EmptyScene>d__28(int <>1__state)
		{
		}

		[Token(Token = "0x6000214")]
		[Address(RVA = "0xE20038", Offset = "0xE20038", VA = "0xE20038", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000215")]
		[Address(RVA = "0xE2003C", Offset = "0xE2003C", VA = "0xE2003C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000217")]
		[Address(RVA = "0xE201F4", Offset = "0xE201F4", VA = "0xE201F4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000068")]
	[CompilerGenerated]
	private sealed class <DoMasterLoad>d__33 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000188")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000189")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400018A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameManager <>4__this;

		[Token(Token = "0x1700003A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600021C")]
			[Address(RVA = "0xE20388", Offset = "0xE20388", VA = "0xE20388", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700003B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600021E")]
			[Address(RVA = "0xE203D0", Offset = "0xE203D0", VA = "0xE203D0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000219")]
		[Address(RVA = "0xE1F6BC", Offset = "0xE1F6BC", VA = "0xE1F6BC")]
		[DebuggerHidden]
		public <DoMasterLoad>d__33(int <>1__state)
		{
		}

		[Token(Token = "0x600021A")]
		[Address(RVA = "0xE2023C", Offset = "0xE2023C", VA = "0xE2023C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600021B")]
		[Address(RVA = "0xE20240", Offset = "0xE20240", VA = "0xE20240", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600021D")]
		[Address(RVA = "0xE20390", Offset = "0xE20390", VA = "0xE20390", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000069")]
	[CompilerGenerated]
	private sealed class <LoadingSequence>d__36 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400018B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400018C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400018D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameManager <>4__this;

		[Token(Token = "0x400018E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Color color;

		[Token(Token = "0x400018F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool bypassPhoton;

		[Token(Token = "0x4000190")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float <startTime>5__2;

		[Token(Token = "0x1700003C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000222")]
			[Address(RVA = "0xE20948", Offset = "0xE20948", VA = "0xE20948", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700003D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000224")]
			[Address(RVA = "0xE20990", Offset = "0xE20990", VA = "0xE20990", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600021F")]
		[Address(RVA = "0xE1FB94", Offset = "0xE1FB94", VA = "0xE1FB94")]
		[DebuggerHidden]
		public <LoadingSequence>d__36(int <>1__state)
		{
		}

		[Token(Token = "0x6000220")]
		[Address(RVA = "0xE203D8", Offset = "0xE203D8", VA = "0xE203D8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000221")]
		[Address(RVA = "0xE203DC", Offset = "0xE203DC", VA = "0xE203DC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000223")]
		[Address(RVA = "0xE20950", Offset = "0xE20950", VA = "0xE20950", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200006A")]
	[CompilerGenerated]
	private sealed class <LoadAsyncScene>d__37 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000191")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000192")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000193")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string sceneName;

		[Token(Token = "0x4000194")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private AsyncOperation <asyncLoad>5__2;

		[Token(Token = "0x1700003E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000228")]
			[Address(RVA = "0xE20AD0", Offset = "0xE20AD0", VA = "0xE20AD0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700003F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600022A")]
			[Address(RVA = "0xE20B18", Offset = "0xE20B18", VA = "0xE20B18", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000225")]
		[Address(RVA = "0xE1FC24", Offset = "0xE1FC24", VA = "0xE1FC24")]
		[DebuggerHidden]
		public <LoadAsyncScene>d__37(int <>1__state)
		{
		}

		[Token(Token = "0x6000226")]
		[Address(RVA = "0xE20998", Offset = "0xE20998", VA = "0xE20998", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000227")]
		[Address(RVA = "0xE2099C", Offset = "0xE2099C", VA = "0xE2099C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000229")]
		[Address(RVA = "0xE20AD8", Offset = "0xE20AD8", VA = "0xE20AD8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200006B")]
	[CompilerGenerated]
	private sealed class <DoFadeCoro>d__38 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000195")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000196")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000197")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameManager <>4__this;

		[Token(Token = "0x4000198")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public FadeDirection dir;

		[Token(Token = "0x4000199")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Color fadeColor;

		[Token(Token = "0x17000040")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600022E")]
			[Address(RVA = "0xE20B88", Offset = "0xE20B88", VA = "0xE20B88", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000041")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000230")]
			[Address(RVA = "0xE20BD0", Offset = "0xE20BD0", VA = "0xE20BD0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600022B")]
		[Address(RVA = "0xE1FCEC", Offset = "0xE1FCEC", VA = "0xE1FCEC")]
		[DebuggerHidden]
		public <DoFadeCoro>d__38(int <>1__state)
		{
		}

		[Token(Token = "0x600022C")]
		[Address(RVA = "0xE20B20", Offset = "0xE20B20", VA = "0xE20B20", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600022D")]
		[Address(RVA = "0xE20B24", Offset = "0xE20B24", VA = "0xE20B24", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600022F")]
		[Address(RVA = "0xE20B90", Offset = "0xE20B90", VA = "0xE20B90", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200006C")]
	[CompilerGenerated]
	private sealed class <DoFadeCoro>d__39 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400019A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400019B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400019C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameManager <>4__this;

		[Token(Token = "0x400019D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Color fadeColor;

		[Token(Token = "0x400019E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public FadeDirection dir;

		[Token(Token = "0x400019F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float fadeTime;

		[Token(Token = "0x17000042")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000234")]
			[Address(RVA = "0xE20F04", Offset = "0xE20F04", VA = "0xE20F04", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000043")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000236")]
			[Address(RVA = "0xE20F4C", Offset = "0xE20F4C", VA = "0xE20F4C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000231")]
		[Address(RVA = "0xE1FDC4", Offset = "0xE1FDC4", VA = "0xE1FDC4")]
		[DebuggerHidden]
		public <DoFadeCoro>d__39(int <>1__state)
		{
		}

		[Token(Token = "0x6000232")]
		[Address(RVA = "0xE20BD8", Offset = "0xE20BD8", VA = "0xE20BD8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000233")]
		[Address(RVA = "0xE20BDC", Offset = "0xE20BDC", VA = "0xE20BDC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000235")]
		[Address(RVA = "0xE20F0C", Offset = "0xE20F0C", VA = "0xE20F0C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400016C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private string sceneToLoad;

	[Token(Token = "0x400016D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string lastScene;

	[Token(Token = "0x400016E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public float fadeCounter;

	[Token(Token = "0x400016F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public CanvasGroup fadeGroupAR;

	[Token(Token = "0x4000170")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Image fadeImageAR;

	[Token(Token = "0x4000171")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public CanvasGroup fadeGroupVR;

	[Token(Token = "0x4000172")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Image fadeImageVR;

	[Token(Token = "0x4000173")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private CanvasGroup fadeGroup;

	[Token(Token = "0x4000174")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Image fadeImage;

	[Token(Token = "0x4000175")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[HideInInspector]
	public bool loading;

	[Token(Token = "0x4000176")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	[HideInInspector]
	public bool fading;

	[Token(Token = "0x4000177")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public Color loadingColor;

	[Token(Token = "0x4000178")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[HideInInspector]
	public bool utilizingNewMainMenu;

	[Token(Token = "0x400017A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float fogDensity;

	[Token(Token = "0x400017B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Music emptyMusic;

	[Token(Token = "0x17000033")]
	[HideInInspector]
	public static GameManager instance
	{
		[Token(Token = "0x60001F6")]
		[Address(RVA = "0xE1EDF8", Offset = "0xE1EDF8", VA = "0xE1EDF8")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x60001F7")]
		[Address(RVA = "0xE1EE40", Offset = "0xE1EE40", VA = "0xE1EE40")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x17000034")]
	private bool ShouldLoadEmptyScene
	{
		[Token(Token = "0x60001FF")]
		[Address(RVA = "0xE1F5A8", Offset = "0xE1F5A8", VA = "0xE1F5A8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000035")]
	private bool HasEmptyScene
	{
		[Token(Token = "0x6000200")]
		[Address(RVA = "0xE1F604", Offset = "0xE1F604", VA = "0xE1F604")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x14000009")]
	public static event ExitSceneEvent OnSceneExit
	{
		[Token(Token = "0x60001F8")]
		[Address(RVA = "0xE1EE8C", Offset = "0xE1EE8C", VA = "0xE1EE8C")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60001F9")]
		[Address(RVA = "0xE1EF48", Offset = "0xE1EF48", VA = "0xE1EF48")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x60001FA")]
	[Address(RVA = "0xE1F004", Offset = "0xE1F004", VA = "0xE1F004")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001FB")]
	[Address(RVA = "0xE1F0D4", Offset = "0xE1F0D4", VA = "0xE1F0D4")]
	private void Start()
	{
	}

	[Token(Token = "0x60001FC")]
	[Address(RVA = "0xE1F3AC", Offset = "0xE1F3AC", VA = "0xE1F3AC")]
	private void MapFadeGroup()
	{
	}

	[Token(Token = "0x60001FD")]
	[Address(RVA = "0xE1F478", Offset = "0xE1F478", VA = "0xE1F478")]
	[IteratorStateMachine(typeof(<FogOscillator>d__27))]
	private IEnumerator FogOscillator()
	{
		return null;
	}

	[Token(Token = "0x60001FE")]
	[Address(RVA = "0xE1F508", Offset = "0xE1F508", VA = "0xE1F508")]
	[IteratorStateMachine(typeof(<DoMasterLoad_EmptyScene>d__28))]
	private IEnumerator DoMasterLoad_EmptyScene(int transitionFrames = 1)
	{
		return null;
	}

	[Token(Token = "0x6000201")]
	[Address(RVA = "0xE1F654", Offset = "0xE1F654", VA = "0xE1F654")]
	[IteratorStateMachine(typeof(<DoMasterLoad>d__33))]
	private IEnumerator DoMasterLoad()
	{
		return null;
	}

	[Token(Token = "0x6000202")]
	[Address(RVA = "0xE1F6E4", Offset = "0xE1F6E4", VA = "0xE1F6E4")]
	public void LoadScene(string newSceneToLoad, bool bypassPhoton = false)
	{
	}

	[Token(Token = "0x6000203")]
	[Address(RVA = "0xE1F778", Offset = "0xE1F778", VA = "0xE1F778")]
	public void LoadScene(string newSceneToLoad, Color color, bool bypassPhoton = false)
	{
	}

	[Token(Token = "0x6000204")]
	[Address(RVA = "0xE1FAF0", Offset = "0xE1FAF0", VA = "0xE1FAF0")]
	[IteratorStateMachine(typeof(<LoadingSequence>d__36))]
	private IEnumerator LoadingSequence(Color color, bool bypassPhoton = false)
	{
		return null;
	}

	[Token(Token = "0x6000205")]
	[Address(RVA = "0xE1FBBC", Offset = "0xE1FBBC", VA = "0xE1FBBC")]
	[IteratorStateMachine(typeof(<LoadAsyncScene>d__37))]
	private IEnumerator LoadAsyncScene(string sceneName)
	{
		return null;
	}

	[Token(Token = "0x6000206")]
	[Address(RVA = "0xE1FC4C", Offset = "0xE1FC4C", VA = "0xE1FC4C")]
	[IteratorStateMachine(typeof(<DoFadeCoro>d__38))]
	public IEnumerator DoFadeCoro(FadeDirection dir, Color fadeColor)
	{
		return null;
	}

	[Token(Token = "0x6000207")]
	[Address(RVA = "0xE1FD14", Offset = "0xE1FD14", VA = "0xE1FD14")]
	[IteratorStateMachine(typeof(<DoFadeCoro>d__39))]
	public IEnumerator DoFadeCoro(FadeDirection dir, Color fadeColor, float fadeTime)
	{
		return null;
	}

	[Token(Token = "0x6000208")]
	[Address(RVA = "0xE1FDEC", Offset = "0xE1FDEC", VA = "0xE1FDEC")]
	public GameManager()
	{
	}
}
[Token(Token = "0x200006D")]
public class LoadingSpinner : MonoBehaviour
{
	[Token(Token = "0x40001A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float Speed;

	[Token(Token = "0x6000237")]
	[Address(RVA = "0xE20F54", Offset = "0xE20F54", VA = "0xE20F54")]
	private void Update()
	{
	}

	[Token(Token = "0x6000238")]
	[Address(RVA = "0xE20FA0", Offset = "0xE20FA0", VA = "0xE20FA0")]
	public LoadingSpinner()
	{
	}
}
[Token(Token = "0x200006E")]
public class LoadingTextFade : MonoBehaviour
{
	[Token(Token = "0x40001A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public CanvasGroup LoadingText;

	[Token(Token = "0x40001A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float FadeSpeed;

	[Token(Token = "0x40001A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float waitTime;

	[Token(Token = "0x40001A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float waitTimer;

	[Token(Token = "0x6000239")]
	[Address(RVA = "0xE20FA8", Offset = "0xE20FA8", VA = "0xE20FA8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600023A")]
	[Address(RVA = "0xE20FD4", Offset = "0xE20FD4", VA = "0xE20FD4")]
	private void Update()
	{
	}

	[Token(Token = "0x600023B")]
	[Address(RVA = "0xE210AC", Offset = "0xE210AC", VA = "0xE210AC")]
	public LoadingTextFade()
	{
	}
}
[Token(Token = "0x200006F")]
public class MaintainPhysicalSize : MonoBehaviour
{
	[Token(Token = "0x40001A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float scaleMultiplier;

	[Token(Token = "0x40001A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform offsetObject;

	[Token(Token = "0x600023C")]
	[Address(RVA = "0xE210B4", Offset = "0xE210B4", VA = "0xE210B4")]
	private void Update()
	{
	}

	[Token(Token = "0x600023D")]
	[Address(RVA = "0xE211D4", Offset = "0xE211D4", VA = "0xE211D4")]
	public MaintainPhysicalSize()
	{
	}
}
[Token(Token = "0x2000070")]
public class MCUtility : MonoBehaviour
{
	[Token(Token = "0x600023E")]
	[Address(RVA = "0xE211E4", Offset = "0xE211E4", VA = "0xE211E4")]
	public static float ParseFloat(string str)
	{
		return default(float);
	}

	[Token(Token = "0x600023F")]
	[Address(RVA = "0xE21314", Offset = "0xE21314", VA = "0xE21314")]
	public MCUtility()
	{
	}
}
[Token(Token = "0x2000071")]
public class Music : MonoBehaviour
{
	[Token(Token = "0x40001A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioClip music;

	[Token(Token = "0x40001A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public float musicVolume;

	[Token(Token = "0x40001A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float musicFadeDuration;

	[Token(Token = "0x40001AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioClip[] chimes;

	[Token(Token = "0x40001AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioClip[] tones;

	[Token(Token = "0x40001AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float toneVolume;

	[Token(Token = "0x40001AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AudioClip ambience;

	[Token(Token = "0x40001AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[HideInInspector]
	public float ambienceVolume;

	[Token(Token = "0x40001AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float ambienceFadeDuration;

	[Token(Token = "0x40001B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private AudioManager audioManager;

	[Token(Token = "0x40001B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[Tooltip("This syncs music with the currently playing track, to try to create a seamless transition to a different version of the same track.")]
	public bool syncMusic;

	[Token(Token = "0x40001B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	public bool changeMusic;

	[Token(Token = "0x40001B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5A")]
	public bool changeAmbience;

	[Token(Token = "0x40001B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5B")]
	public bool playOnStart;

	[Token(Token = "0x40001B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[Tooltip("Sync the music across the network, to try to get all players to hear the same thing at the same time.")]
	public bool syncWithServer;

	[Token(Token = "0x40001B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float singlePlayerMusicVolume;

	[Token(Token = "0x40001B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float singlePlayerAmbienceVolume;

	[Token(Token = "0x40001B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float multiPlayerMusicVolume;

	[Token(Token = "0x40001B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float multiPlayerAmbienceVolume;

	[Token(Token = "0x6000240")]
	[Address(RVA = "0xE2131C", Offset = "0xE2131C", VA = "0xE2131C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000241")]
	[Address(RVA = "0xE21334", Offset = "0xE21334", VA = "0xE21334")]
	public static AudioManager InitializeAudioManager()
	{
		return null;
	}

	[Token(Token = "0x6000242")]
	[Address(RVA = "0xE20944", Offset = "0xE20944", VA = "0xE20944")]
	public void ActivateTrack()
	{
	}

	[Token(Token = "0x6000243")]
	[Address(RVA = "0xE21510", Offset = "0xE21510", VA = "0xE21510")]
	public void Start()
	{
	}

	[Token(Token = "0x6000244")]
	[Address(RVA = "0xE2144C", Offset = "0xE2144C", VA = "0xE2144C")]
	public void UpdateAudioLevelsMultiplayer()
	{
	}

	[Token(Token = "0x6000245")]
	[Address(RVA = "0xE21520", Offset = "0xE21520", VA = "0xE21520")]
	public Music()
	{
	}
}
[Token(Token = "0x2000072")]
[ExecuteAlways]
public class PlacePrefab : MonoBehaviour
{
	[Token(Token = "0x40001BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject prefab;

	[Token(Token = "0x6000246")]
	[Address(RVA = "0xE21554", Offset = "0xE21554", VA = "0xE21554")]
	private void Update()
	{
	}

	[Token(Token = "0x6000247")]
	[Address(RVA = "0xE21628", Offset = "0xE21628", VA = "0xE21628")]
	public PlacePrefab()
	{
	}
}
[Token(Token = "0x2000073")]
public class ResolutionManager : MonoBehaviour
{
	[Token(Token = "0x6000248")]
	[Address(RVA = "0xE21630", Offset = "0xE21630", VA = "0xE21630")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000249")]
	[Address(RVA = "0xE2163C", Offset = "0xE2163C", VA = "0xE2163C")]
	public ResolutionManager()
	{
	}
}
[Token(Token = "0x2000074")]
public enum SavableType
{
	[Token(Token = "0x40001BC")]
	String,
	[Token(Token = "0x40001BD")]
	Int,
	[Token(Token = "0x40001BE")]
	Float
}
[Token(Token = "0x2000075")]
[Obsolete("Savable 1.0 is deprecated. Use SavableManager.Profile instead. See ProfileData for current savable types.")]
public class Savable
{
	[Token(Token = "0x40001BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private string key;

	[Token(Token = "0x40001C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float floatValue;

	[Token(Token = "0x40001C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private int intValue;

	[Token(Token = "0x40001C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private string stringValue;

	[Token(Token = "0x40001C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private SavableType type;

	[Token(Token = "0x40001C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float floatDefaultValue;

	[Token(Token = "0x40001C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int intDefaultValue;

	[Token(Token = "0x40001C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private string stringDefaultValue;

	[Token(Token = "0x40001C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool appendPlayerName;

	[Token(Token = "0x600024A")]
	[Address(RVA = "0xE21644", Offset = "0xE21644", VA = "0xE21644")]
	public Savable(string newKey, float defaultValue)
	{
	}

	[Token(Token = "0x600024B")]
	[Address(RVA = "0xE217EC", Offset = "0xE217EC", VA = "0xE217EC")]
	public Savable(string newKey, int defaultValue)
	{
	}

	[Token(Token = "0x600024C")]
	[Address(RVA = "0xE2183C", Offset = "0xE2183C", VA = "0xE2183C")]
	public Savable(string newKey, string defaultValue)
	{
	}

	[Token(Token = "0x600024D")]
	[Address(RVA = "0xE21698", Offset = "0xE21698", VA = "0xE21698")]
	private void InitializeKey(string newKey)
	{
	}

	[Token(Token = "0x600024E")]
	[Address(RVA = "0xE21884", Offset = "0xE21884", VA = "0xE21884")]
	public int GetInt()
	{
		return default(int);
	}

	[Token(Token = "0x600024F")]
	[Address(RVA = "0xE2189C", Offset = "0xE2189C", VA = "0xE2189C")]
	public float GetFloat()
	{
		return default(float);
	}

	[Token(Token = "0x6000250")]
	[Address(RVA = "0xE218B4", Offset = "0xE218B4", VA = "0xE218B4")]
	public string GetString()
	{
		return null;
	}

	[Token(Token = "0x6000251")]
	[Address(RVA = "0xE218CC", Offset = "0xE218CC", VA = "0xE218CC")]
	public string GetKey()
	{
		return null;
	}

	[Token(Token = "0x6000252")]
	[Address(RVA = "0xE218D4", Offset = "0xE218D4", VA = "0xE218D4")]
	public void SetFloat(float newFloatValue)
	{
	}

	[Token(Token = "0x6000253")]
	[Address(RVA = "0xE218E8", Offset = "0xE218E8", VA = "0xE218E8")]
	public void SetString(string newStringValue)
	{
	}

	[Token(Token = "0x6000254")]
	[Address(RVA = "0xE218FC", Offset = "0xE218FC", VA = "0xE218FC")]
	public void SetInt(int newIntValue)
	{
	}

	[Token(Token = "0x6000255")]
	[Address(RVA = "0xE21724", Offset = "0xE21724", VA = "0xE21724")]
	public void LoadValue()
	{
	}

	[Token(Token = "0x6000256")]
	[Address(RVA = "0xE21910", Offset = "0xE21910", VA = "0xE21910")]
	public static int GetInt(string key, int defaultValue)
	{
		return default(int);
	}

	[Token(Token = "0x6000257")]
	[Address(RVA = "0xE21988", Offset = "0xE21988", VA = "0xE21988")]
	public static float GetFloat(string key, float defaultValue)
	{
		return default(float);
	}

	[Token(Token = "0x6000258")]
	[Address(RVA = "0xE21A00", Offset = "0xE21A00", VA = "0xE21A00")]
	public static string GetString(string key, string defaultValue)
	{
		return null;
	}

	[Token(Token = "0x6000259")]
	[Address(RVA = "0xE21A78", Offset = "0xE21A78", VA = "0xE21A78")]
	public static void SetInt(string key, int newValue)
	{
	}

	[Token(Token = "0x600025A")]
	[Address(RVA = "0xE21AF4", Offset = "0xE21AF4", VA = "0xE21AF4")]
	public static void SetFloat(string key, float newValue)
	{
	}

	[Token(Token = "0x600025B")]
	[Address(RVA = "0xE21B70", Offset = "0xE21B70", VA = "0xE21B70")]
	public static void SetString(string key, string newValue)
	{
	}
}
[Token(Token = "0x2000076")]
public class SavableStringToggle : MonoBehaviour
{
	[Token(Token = "0x40001C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool SaveReverse;

	[Token(Token = "0x40001C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public CanvasGroup[] leftActive;

	[Token(Token = "0x40001CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public CanvasGroup[] rightActive;

	[Token(Token = "0x40001CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string leftString;

	[Token(Token = "0x40001CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string rightString;

	[Token(Token = "0x40001CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private SavableString _savable;

	[Token(Token = "0x17000044")]
	public bool IsToggled
	{
		[Token(Token = "0x600025D")]
		[Address(RVA = "0xE21C0C", Offset = "0xE21C0C", VA = "0xE21C0C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600025E")]
		[Address(RVA = "0xE21D94", Offset = "0xE21D94", VA = "0xE21D94")]
		set
		{
		}
	}

	[Token(Token = "0x600025C")]
	[Address(RVA = "0xE21BEC", Offset = "0xE21BEC", VA = "0xE21BEC")]
	public void Initialize(SavableString savable)
	{
	}

	[Token(Token = "0x600025F")]
	[Address(RVA = "0xE21C40", Offset = "0xE21C40", VA = "0xE21C40")]
	public void UpdateDisplay(bool toggled)
	{
	}

	[Token(Token = "0x6000260")]
	[Address(RVA = "0xE21DC8", Offset = "0xE21DC8", VA = "0xE21DC8")]
	public void Toggle()
	{
	}

	[Token(Token = "0x6000261")]
	[Address(RVA = "0xE21EF8", Offset = "0xE21EF8", VA = "0xE21EF8")]
	public SavableStringToggle()
	{
	}
}
[Token(Token = "0x2000077")]
public class SavableSwitcher : MonoBehaviour
{
	[Token(Token = "0x40001CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string variableName;

	[Token(Token = "0x40001CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int compareToInt;

	[Token(Token = "0x40001D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject[] enableIfTrue;

	[Token(Token = "0x40001D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject[] enableIfFalse;

	[Token(Token = "0x6000262")]
	[Address(RVA = "0xE21F00", Offset = "0xE21F00", VA = "0xE21F00")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000263")]
	[Address(RVA = "0xE21F04", Offset = "0xE21F04", VA = "0xE21F04")]
	public void ForceUpdate()
	{
	}

	[Token(Token = "0x6000264")]
	[Address(RVA = "0xE220A4", Offset = "0xE220A4", VA = "0xE220A4")]
	public SavableSwitcher()
	{
	}
}
[Token(Token = "0x2000078")]
public class SavableToggle : MonoBehaviour
{
	[Token(Token = "0x40001D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool IsToggled;

	[Token(Token = "0x40001D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool SaveReverse;

	[Token(Token = "0x40001D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[FormerlySerializedAs("leftActive")]
	public CanvasGroup[] activeWhenOff;

	[Token(Token = "0x40001D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[FormerlySerializedAs("rightActive")]
	public CanvasGroup[] activeWhenOn;

	[Token(Token = "0x40001D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Tooltip("Enabled when this toggle is Enabled & vice versa")]
	public SavableToggle[] dependentToggles;

	[Token(Token = "0x40001D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[Tooltip("Enabled when this toggle is Disabled & vice versa")]
	public ButtonEvent[] independentButtonEvents;

	[Token(Token = "0x40001D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Tooltip("Enabled when this toggle is Disabled & vice versa")]
	public Image[] independentImages;

	[Token(Token = "0x40001D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public UnityEvent eventsWhenOn;

	[Token(Token = "0x40001DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private SavableBool _savable;

	[Token(Token = "0x6000265")]
	[Address(RVA = "0xE220AC", Offset = "0xE220AC", VA = "0xE220AC")]
	public void Initialize(SavableBool savable)
	{
	}

	[Token(Token = "0x6000266")]
	[Address(RVA = "0xE220F8", Offset = "0xE220F8", VA = "0xE220F8")]
	public void UpdateDisplay(bool toggled)
	{
	}

	[Token(Token = "0x6000267")]
	[Address(RVA = "0xE22378", Offset = "0xE22378", VA = "0xE22378")]
	public void Toggle()
	{
	}

	[Token(Token = "0x6000268")]
	[Address(RVA = "0xE22448", Offset = "0xE22448", VA = "0xE22448")]
	public SavableToggle()
	{
	}
}
[Token(Token = "0x2000079")]
public class Measure : MonoBehaviour
{
	[Token(Token = "0x6000269")]
	[Address(RVA = "0xE22450", Offset = "0xE22450", VA = "0xE22450")]
	private void Start()
	{
	}

	[Token(Token = "0x600026A")]
	[Address(RVA = "0xE2257C", Offset = "0xE2257C", VA = "0xE2257C")]
	private void Update()
	{
	}

	[Token(Token = "0x600026B")]
	[Address(RVA = "0xE22580", Offset = "0xE22580", VA = "0xE22580")]
	public Measure()
	{
	}
}
[Token(Token = "0x200007A")]
[CreateAssetMenu(fileName = "LightmapBakingData", menuName = "Mighty Tools/LightmapBakingData", order = 1)]
public class LightmapBakingData : ScriptableObject
{
	[Token(Token = "0x200007B")]
	public enum State
	{
		[Token(Token = "0x40001DD")]
		Ready,
		[Token(Token = "0x40001DE")]
		Baking,
		[Token(Token = "0x40001DF")]
		Complete
	}

	[Serializable]
	[Token(Token = "0x200007C")]
	public class SceneData
	{
		[Token(Token = "0x40001E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int id;

		[Token(Token = "0x40001E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string name;

		[Token(Token = "0x40001E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string path;

		[Token(Token = "0x40001E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool selected;

		[Token(Token = "0x40001E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		public bool lightmap;

		[Token(Token = "0x40001E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
		public bool occlusion;

		[Token(Token = "0x40001E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public State state;

		[Token(Token = "0x600027D")]
		[Address(RVA = "0xE229B4", Offset = "0xE229B4", VA = "0xE229B4")]
		public SceneData(string name, string path)
		{
		}

		[Token(Token = "0x600027E")]
		[Address(RVA = "0xE23120", Offset = "0xE23120", VA = "0xE23120")]
		public void Complete()
		{
		}

		[Token(Token = "0x600027F")]
		[Address(RVA = "0xE2312C", Offset = "0xE2312C", VA = "0xE2312C")]
		public void Ready()
		{
		}

		[Token(Token = "0x6000280")]
		[Address(RVA = "0xE23134", Offset = "0xE23134", VA = "0xE23134")]
		public void Baking()
		{
		}
	}

	[Token(Token = "0x40001DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<SceneData> scenes;

	[Token(Token = "0x17000045")]
	public SceneData this[int i]
	{
		[Token(Token = "0x600026F")]
		[Address(RVA = "0xE229E8", Offset = "0xE229E8", VA = "0xE229E8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000046")]
	public int Count
	{
		[Token(Token = "0x6000273")]
		[Address(RVA = "0xE22BE0", Offset = "0xE22BE0", VA = "0xE22BE0")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000047")]
	public int SelectedCount
	{
		[Token(Token = "0x6000274")]
		[Address(RVA = "0xE22C28", Offset = "0xE22C28", VA = "0xE22C28")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000048")]
	public bool Empty
	{
		[Token(Token = "0x6000275")]
		[Address(RVA = "0xE22D84", Offset = "0xE22D84", VA = "0xE22D84")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000049")]
	public bool HasBakes
	{
		[Token(Token = "0x6000276")]
		[Address(RVA = "0xE22DD4", Offset = "0xE22DD4", VA = "0xE22DD4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x600026C")]
	[Address(RVA = "0xE22588", Offset = "0xE22588", VA = "0xE22588")]
	public void Clear()
	{
	}

	[Token(Token = "0x600026D")]
	[Address(RVA = "0xE225F8", Offset = "0xE225F8", VA = "0xE225F8")]
	public void Reset()
	{
	}

	[Token(Token = "0x600026E")]
	[Address(RVA = "0xE228AC", Offset = "0xE228AC", VA = "0xE228AC")]
	public void Add(string name, string path)
	{
	}

	[Token(Token = "0x6000270")]
	[Address(RVA = "0xE22A40", Offset = "0xE22A40", VA = "0xE22A40")]
	public void Remove(int i)
	{
	}

	[Token(Token = "0x6000271")]
	[Address(RVA = "0xE22AC0", Offset = "0xE22AC0", VA = "0xE22AC0")]
	public void Remove(SceneData data)
	{
	}

	[Token(Token = "0x6000272")]
	[Address(RVA = "0xE22B58", Offset = "0xE22B58", VA = "0xE22B58")]
	public void UpdateIds()
	{
	}

	[Token(Token = "0x6000277")]
	[Address(RVA = "0xE22DEC", Offset = "0xE22DEC", VA = "0xE22DEC")]
	public void Select(SceneData scene)
	{
	}

	[Token(Token = "0x6000278")]
	[Address(RVA = "0xE22610", Offset = "0xE22610", VA = "0xE22610")]
	public void Select()
	{
	}

	[Token(Token = "0x6000279")]
	[Address(RVA = "0xE22E10", Offset = "0xE22E10", VA = "0xE22E10")]
	public void Deselect()
	{
	}

	[Token(Token = "0x600027A")]
	[Address(RVA = "0xE22F58", Offset = "0xE22F58", VA = "0xE22F58")]
	public void SetSelectedReady()
	{
	}

	[Token(Token = "0x600027B")]
	[Address(RVA = "0xE22768", Offset = "0xE22768", VA = "0xE22768")]
	public void SetReady()
	{
	}

	[Token(Token = "0x600027C")]
	[Address(RVA = "0xE230A4", Offset = "0xE230A4", VA = "0xE230A4")]
	public LightmapBakingData()
	{
	}
}
[Token(Token = "0x200007D")]
public class MaterialSort : MonoBehaviour
{
	[Token(Token = "0x40001E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("Components")]
	public MaterialSortVolume volume;

	[Token(Token = "0x40001E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MaterialSortMaterials materials;

	[Token(Token = "0x40001E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public MaterialSortRenders renders;

	[Token(Token = "0x40001EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public MaterialSortSampler sampler;

	[Token(Token = "0x40001EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[Header("Settings")]
	public float[] distances;

	[Token(Token = "0x40001EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public MaterialSortSampler.Method sampleMethod;

	[Token(Token = "0x40001ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public bool _preview;

	[Token(Token = "0x40001EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[HideInInspector]
	private Vector3 position;

	[Token(Token = "0x40001EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private bool initialized;

	[Token(Token = "0x1700004A")]
	public bool preview
	{
		[Token(Token = "0x6000286")]
		[Address(RVA = "0xE236D4", Offset = "0xE236D4", VA = "0xE236D4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000287")]
		[Address(RVA = "0xE236DC", Offset = "0xE236DC", VA = "0xE236DC")]
		set
		{
		}
	}

	[Token(Token = "0x6000281")]
	[Address(RVA = "0xE23140", Offset = "0xE23140", VA = "0xE23140")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000282")]
	[Address(RVA = "0xE231E8", Offset = "0xE231E8", VA = "0xE231E8")]
	public void Init()
	{
	}

	[Token(Token = "0x6000283")]
	[Address(RVA = "0xE23310", Offset = "0xE23310", VA = "0xE23310")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x6000284")]
	[Address(RVA = "0xE234A4", Offset = "0xE234A4", VA = "0xE234A4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000285")]
	[Address(RVA = "0xE234A8", Offset = "0xE234A8", VA = "0xE234A8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000288")]
	[Address(RVA = "0xE236F8", Offset = "0xE236F8", VA = "0xE236F8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000289")]
	[Address(RVA = "0xE23340", Offset = "0xE23340", VA = "0xE23340")]
	public void Sort()
	{
	}

	[Token(Token = "0x600028A")]
	[Address(RVA = "0xE231C4", Offset = "0xE231C4", VA = "0xE231C4")]
	public void Deactivate()
	{
	}

	[Token(Token = "0x600028B")]
	[Address(RVA = "0xE23BB8", Offset = "0xE23BB8", VA = "0xE23BB8")]
	public MaterialSort()
	{
	}
}
[Token(Token = "0x200007E")]
public class MaterialSortCell : MonoBehaviour
{
	[Token(Token = "0x40001F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int id;

	[Token(Token = "0x40001F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private bool _active;

	[Token(Token = "0x40001F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	private bool _visualize;

	[Token(Token = "0x40001F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MeshRenderer render;

	[Token(Token = "0x1700004B")]
	public bool visualize
	{
		[Token(Token = "0x600028D")]
		[Address(RVA = "0xE23C1C", Offset = "0xE23C1C", VA = "0xE23C1C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600028E")]
		[Address(RVA = "0xE23C24", Offset = "0xE23C24", VA = "0xE23C24")]
		set
		{
		}
	}

	[Token(Token = "0x1700004C")]
	public bool active
	{
		[Token(Token = "0x600028F")]
		[Address(RVA = "0xE23C90", Offset = "0xE23C90", VA = "0xE23C90")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000290")]
		[Address(RVA = "0xE23C98", Offset = "0xE23C98", VA = "0xE23C98")]
		set
		{
		}
	}

	[Token(Token = "0x1700004D")]
	public Vector3 position
	{
		[Token(Token = "0x6000291")]
		[Address(RVA = "0xE2389C", Offset = "0xE2389C", VA = "0xE2389C")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x6000292")]
		[Address(RVA = "0xE23CB0", Offset = "0xE23CB0", VA = "0xE23CB0")]
		set
		{
		}
	}

	[Token(Token = "0x1700004E")]
	public Quaternion rotation
	{
		[Token(Token = "0x6000293")]
		[Address(RVA = "0xE23CF8", Offset = "0xE23CF8", VA = "0xE23CF8")]
		get
		{
			return default(Quaternion);
		}
		[Token(Token = "0x6000294")]
		[Address(RVA = "0xE23D18", Offset = "0xE23D18", VA = "0xE23D18")]
		set
		{
		}
	}

	[Token(Token = "0x600028C")]
	[Address(RVA = "0xE23C18", Offset = "0xE23C18", VA = "0xE23C18")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000295")]
	[Address(RVA = "0xE23D68", Offset = "0xE23D68", VA = "0xE23D68")]
	public MaterialSortCell()
	{
	}
}
[Token(Token = "0x200007F")]
[PreferBinarySerialization]
[CreateAssetMenu(fileName = "Data", menuName = "Mighty Tools/ScriptableObjectData", order = 1)]
public class MaterialSortData : ScriptableObject
{
	[Token(Token = "0x40001F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string scene;

	[Token(Token = "0x40001F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public byte[] bytes;

	[Token(Token = "0x40001F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int size;

	[Token(Token = "0x6000296")]
	[Address(RVA = "0xE23D70", Offset = "0xE23D70", VA = "0xE23D70")]
	public MaterialSortData()
	{
	}
}
[Token(Token = "0x2000080")]
public class MaterialSortMaterials : MonoBehaviour
{
	[Token(Token = "0x40001F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<Material> preview;

	[Token(Token = "0x40001F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<MaterialGroup> groups;

	[Token(Token = "0x6000297")]
	[Address(RVA = "0xE23250", Offset = "0xE23250", VA = "0xE23250")]
	public void Init()
	{
	}

	[Token(Token = "0x6000298")]
	[Address(RVA = "0xE24010", Offset = "0xE24010", VA = "0xE24010")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000299")]
	[Address(RVA = "0xE24160", Offset = "0xE24160", VA = "0xE24160")]
	public Material GetMaterial(int group, byte depth, bool usePreview = false)
	{
		return null;
	}

	[Token(Token = "0x600029A")]
	[Address(RVA = "0xE24358", Offset = "0xE24358", VA = "0xE24358")]
	public MaterialGroup GetMaterialGroup(int index)
	{
		return null;
	}

	[Token(Token = "0x600029B")]
	[Address(RVA = "0xE23EC4", Offset = "0xE23EC4", VA = "0xE23EC4")]
	public void CreateRuntimeMaterials()
	{
	}

	[Token(Token = "0x600029C")]
	[Address(RVA = "0xE24014", Offset = "0xE24014", VA = "0xE24014")]
	public void DestroyRuntimeMaterials()
	{
	}

	[Token(Token = "0x600029D")]
	[Address(RVA = "0xE24430", Offset = "0xE24430", VA = "0xE24430")]
	public List<MaterialData> GetMaterials()
	{
		return null;
	}

	[Token(Token = "0x600029E")]
	[Address(RVA = "0xE245E4", Offset = "0xE245E4", VA = "0xE245E4")]
	public void SetMaterials(List<MaterialData> list)
	{
	}

	[Token(Token = "0x600029F")]
	[Address(RVA = "0xE24660", Offset = "0xE24660", VA = "0xE24660")]
	private void CreateGroups(List<MaterialData> list)
	{
	}

	[Token(Token = "0x60002A0")]
	[Address(RVA = "0xE249CC", Offset = "0xE249CC", VA = "0xE249CC")]
	private void SortGroups()
	{
	}

	[Token(Token = "0x60002A1")]
	[Address(RVA = "0xE24B18", Offset = "0xE24B18", VA = "0xE24B18")]
	public Dictionary<Material, MaterialGroup> GetGroupsIndexedByMaterial()
	{
		return null;
	}

	[Token(Token = "0x60002A2")]
	[Address(RVA = "0xE24238", Offset = "0xE24238", VA = "0xE24238")]
	public bool Valid(int index, byte depth)
	{
		return default(bool);
	}

	[Token(Token = "0x60002A3")]
	[Address(RVA = "0xE243D0", Offset = "0xE243D0", VA = "0xE243D0")]
	public bool ValidGroup(int index)
	{
		return default(bool);
	}

	[Token(Token = "0x60002A4")]
	[Address(RVA = "0xE23D78", Offset = "0xE23D78", VA = "0xE23D78")]
	public void Validate()
	{
	}

	[Token(Token = "0x60002A5")]
	[Address(RVA = "0xE24D1C", Offset = "0xE24D1C", VA = "0xE24D1C")]
	public MaterialSortMaterials()
	{
	}
}
[Token(Token = "0x2000081")]
public class MaterialSortRenders : MonoBehaviour
{
	[Token(Token = "0x40001F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MaterialSortMaterials materials;

	[Token(Token = "0x40001FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<RendererData> targets;

	[Token(Token = "0x40001FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Dictionary<Renderer, RendererData> index;

	[Token(Token = "0x40001FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool useLOD;

	[Token(Token = "0x1700004F")]
	public bool Empty
	{
		[Token(Token = "0x60002B5")]
		[Address(RVA = "0xE23174", Offset = "0xE23174", VA = "0xE23174")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60002A6")]
	[Address(RVA = "0xE23268", Offset = "0xE23268", VA = "0xE23268")]
	public void Init()
	{
	}

	[Token(Token = "0x60002A7")]
	[Address(RVA = "0xE24DDC", Offset = "0xE24DDC", VA = "0xE24DDC")]
	public void Index()
	{
	}

	[Token(Token = "0x60002A8")]
	[Address(RVA = "0xE2519C", Offset = "0xE2519C", VA = "0xE2519C")]
	public bool IsTargeted(MeshRenderer render)
	{
		return default(bool);
	}

	[Token(Token = "0x60002A9")]
	[Address(RVA = "0xE25248", Offset = "0xE25248", VA = "0xE25248")]
	public RendererData GetTarget(MeshRenderer render)
	{
		return null;
	}

	[Token(Token = "0x60002AA")]
	[Address(RVA = "0xE234C0", Offset = "0xE234C0", VA = "0xE234C0")]
	public void Restore()
	{
	}

	[Token(Token = "0x60002AB")]
	[Address(RVA = "0xE2394C", Offset = "0xE2394C", VA = "0xE2394C")]
	public void Apply(byte[] sample, bool preview = false)
	{
	}

	[Token(Token = "0x60002AC")]
	[Address(RVA = "0xE252C0", Offset = "0xE252C0", VA = "0xE252C0")]
	public bool ValidSample(byte[] sample)
	{
		return default(bool);
	}

	[Token(Token = "0x60002AD")]
	[Address(RVA = "0xE24ED8", Offset = "0xE24ED8", VA = "0xE24ED8")]
	public void Validate()
	{
	}

	[Token(Token = "0x60002AE")]
	[Address(RVA = "0xE2531C", Offset = "0xE2531C", VA = "0xE2531C")]
	public bool Collect()
	{
		return default(bool);
	}

	[Token(Token = "0x60002AF")]
	[Address(RVA = "0xE2637C", Offset = "0xE2637C", VA = "0xE2637C")]
	public bool HasLOD(Renderer r)
	{
		return default(bool);
	}

	[Token(Token = "0x60002B0")]
	[Address(RVA = "0xE2672C", Offset = "0xE2672C", VA = "0xE2672C")]
	public LODGroup GetLODGroup(Renderer r)
	{
		return null;
	}

	[Token(Token = "0x60002B1")]
	[Address(RVA = "0xE264EC", Offset = "0xE264EC", VA = "0xE264EC")]
	public List<Renderer> GetLODRenderers(Renderer target)
	{
		return null;
	}

	[Token(Token = "0x60002B2")]
	[Address(RVA = "0xE262E8", Offset = "0xE262E8", VA = "0xE262E8")]
	private bool ChangeCheck(RendererData data)
	{
		return default(bool);
	}

	[Token(Token = "0x60002B3")]
	[Address(RVA = "0xE267FC", Offset = "0xE267FC", VA = "0xE267FC")]
	private bool ValidIndex(int index)
	{
		return default(bool);
	}

	[Token(Token = "0x60002B4")]
	private List<T> GetComponentsInScene<T>()
	{
		return null;
	}

	[Token(Token = "0x60002B6")]
	[Address(RVA = "0xE2685C", Offset = "0xE2685C", VA = "0xE2685C")]
	public MaterialSortRenders()
	{
	}
}
[Token(Token = "0x2000082")]
public class MaterialSortSampler : MonoBehaviour
{
	[Token(Token = "0x2000083")]
	public enum Method
	{
		[Token(Token = "0x4000202")]
		Spheres,
		[Token(Token = "0x4000203")]
		SpheresRaycast,
		[Token(Token = "0x4000204")]
		Raycast
	}

	[Token(Token = "0x40001FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MaterialSortRenders renders;

	[Token(Token = "0x40001FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MeshFilter meshFilter;

	[Token(Token = "0x40001FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private byte[] sample;

	[Token(Token = "0x4000200")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3[] vertices;

	[Token(Token = "0x17000050")]
	public Vector3 position
	{
		[Token(Token = "0x60002BF")]
		[Address(RVA = "0xE271F4", Offset = "0xE271F4", VA = "0xE271F4")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x60002C0")]
		[Address(RVA = "0xE238BC", Offset = "0xE238BC", VA = "0xE238BC")]
		set
		{
		}
	}

	[Token(Token = "0x17000051")]
	public Quaternion rotation
	{
		[Token(Token = "0x60002C1")]
		[Address(RVA = "0xE27214", Offset = "0xE27214", VA = "0xE27214")]
		get
		{
			return default(Quaternion);
		}
		[Token(Token = "0x60002C2")]
		[Address(RVA = "0xE27234", Offset = "0xE27234", VA = "0xE27234")]
		set
		{
		}
	}

	[Token(Token = "0x60002B7")]
	[Address(RVA = "0xE23280", Offset = "0xE23280", VA = "0xE23280")]
	public void Init()
	{
	}

	[Token(Token = "0x60002B8")]
	[Address(RVA = "0xE23904", Offset = "0xE23904", VA = "0xE23904")]
	public byte[] Sample(float[] distances, Method method = Method.Spheres)
	{
		return null;
	}

	[Token(Token = "0x60002B9")]
	[Address(RVA = "0xE26C48", Offset = "0xE26C48", VA = "0xE26C48")]
	public void SetDepth(byte[] _sample, byte depth)
	{
	}

	[Token(Token = "0x60002BA")]
	[Address(RVA = "0xE268E0", Offset = "0xE268E0", VA = "0xE268E0")]
	public void Spheres(float[] distances)
	{
	}

	[Token(Token = "0x60002BB")]
	[Address(RVA = "0xE26AA4", Offset = "0xE26AA4", VA = "0xE26AA4")]
	public void SpheresRaycast(float[] distances)
	{
	}

	[Token(Token = "0x60002BC")]
	[Address(RVA = "0xE26BDC", Offset = "0xE26BDC", VA = "0xE26BDC")]
	public void Raycast(float[] distances)
	{
	}

	[Token(Token = "0x60002BD")]
	[Address(RVA = "0xE26C90", Offset = "0xE26C90", VA = "0xE26C90")]
	private void ThreadedRayCast(float distance, byte depthToAssign, float startAt = 0f, bool preview = false)
	{
	}

	[Token(Token = "0x60002BE")]
	[Address(RVA = "0xE27174", Offset = "0xE27174", VA = "0xE27174")]
	private float FindStart(float near, float step = 1f, float max = 10f)
	{
		return default(float);
	}

	[Token(Token = "0x60002C3")]
	[Address(RVA = "0xE27284", Offset = "0xE27284", VA = "0xE27284")]
	public MaterialSortSampler()
	{
	}
}
[Token(Token = "0x2000084")]
[ExecuteInEditMode]
public class MaterialSortVolume : MonoBehaviour
{
	[Token(Token = "0x4000205")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MaterialSortCell cell;

	[Token(Token = "0x4000206")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform bounds;

	[Token(Token = "0x4000207")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool debugCell;

	[Token(Token = "0x4000208")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[Header("Settings")]
	public Vector3 size;

	[Token(Token = "0x4000209")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Vector3 cellSize;

	[Token(Token = "0x400020B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[HideInInspector]
	public Vector3 _point;

	[Token(Token = "0x17000052")]
	public Vector3 cells
	{
		[Token(Token = "0x60002C4")]
		[Address(RVA = "0xE2728C", Offset = "0xE2728C", VA = "0xE2728C")]
		[CompilerGenerated]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x60002C5")]
		[Address(RVA = "0xE27298", Offset = "0xE27298", VA = "0xE27298")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000053")]
	public int cellsXY
	{
		[Token(Token = "0x60002C6")]
		[Address(RVA = "0xE272A4", Offset = "0xE272A4", VA = "0xE272A4")]
		[CompilerGenerated]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60002C7")]
		[Address(RVA = "0xE272AC", Offset = "0xE272AC", VA = "0xE272AC")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000054")]
	public Vector3 extents
	{
		[Token(Token = "0x60002C8")]
		[Address(RVA = "0xE272B4", Offset = "0xE272B4", VA = "0xE272B4")]
		[CompilerGenerated]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x60002C9")]
		[Address(RVA = "0xE272C0", Offset = "0xE272C0", VA = "0xE272C0")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000055")]
	public Vector3 point
	{
		[Token(Token = "0x60002CB")]
		[Address(RVA = "0xE275D0", Offset = "0xE275D0", VA = "0xE275D0")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x60002CC")]
		[Address(RVA = "0xE23854", Offset = "0xE23854", VA = "0xE23854")]
		set
		{
		}
	}

	[Token(Token = "0x60002CA")]
	[Address(RVA = "0xE272CC", Offset = "0xE272CC", VA = "0xE272CC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60002CD")]
	[Address(RVA = "0xE27668", Offset = "0xE27668", VA = "0xE27668")]
	public bool ContainsPoint(Vector3 p)
	{
		return default(bool);
	}

	[Token(Token = "0x60002CE")]
	[Address(RVA = "0xE27708", Offset = "0xE27708", VA = "0xE27708")]
	public int GlobalPositionToCellId(Vector3 p)
	{
		return default(int);
	}

	[Token(Token = "0x60002CF")]
	[Address(RVA = "0xE27758", Offset = "0xE27758", VA = "0xE27758")]
	public Vector3 GlobalPositionToCellCoordinates(Vector3 p)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60002D0")]
	[Address(RVA = "0xE2783C", Offset = "0xE2783C", VA = "0xE2783C")]
	public Vector3 LocalPositionToCellCoordinates(Vector3 p)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60002D1")]
	[Address(RVA = "0xE275DC", Offset = "0xE275DC", VA = "0xE275DC")]
	public void SetCellByGlobalPosition(Vector3 p)
	{
	}

	[Token(Token = "0x60002D2")]
	[Address(RVA = "0xE277AC", Offset = "0xE277AC", VA = "0xE277AC")]
	public Vector3 ClampCellCoordinates(Vector3 c)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60002D3")]
	[Address(RVA = "0xE27A30", Offset = "0xE27A30", VA = "0xE27A30")]
	public void SetCellById(int cellID)
	{
	}

	[Token(Token = "0x60002D4")]
	[Address(RVA = "0xE27C04", Offset = "0xE27C04", VA = "0xE27C04")]
	public Vector3 CellIdToLocalPosition(int id)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60002D5")]
	[Address(RVA = "0xE279A4", Offset = "0xE279A4", VA = "0xE279A4")]
	public Vector3 CellCoordinatesToLocalPosition(Vector3 c)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60002D6")]
	[Address(RVA = "0xE27C1C", Offset = "0xE27C1C", VA = "0xE27C1C")]
	public Vector3 CellIdToGlobalPosition(int cellID)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60002D7")]
	[Address(RVA = "0xE27AAC", Offset = "0xE27AAC", VA = "0xE27AAC")]
	public Vector3 CellIdToCoordinates(int cellID)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60002D8")]
	[Address(RVA = "0xE272D0", Offset = "0xE272D0", VA = "0xE272D0")]
	public void Calculate()
	{
	}

	[Token(Token = "0x60002D9")]
	[Address(RVA = "0xE27C70", Offset = "0xE27C70", VA = "0xE27C70")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x60002DA")]
	[Address(RVA = "0xE27D1C", Offset = "0xE27D1C", VA = "0xE27D1C")]
	public MaterialSortVolume()
	{
	}
}
[Token(Token = "0x2000085")]
public class MaterialSortMenu : MonoBehaviour
{
	[Token(Token = "0x60002DB")]
	[Address(RVA = "0xE27D38", Offset = "0xE27D38", VA = "0xE27D38")]
	private void Start()
	{
	}

	[Token(Token = "0x60002DC")]
	[Address(RVA = "0xE27D3C", Offset = "0xE27D3C", VA = "0xE27D3C")]
	private void Update()
	{
	}

	[Token(Token = "0x60002DD")]
	[Address(RVA = "0xE27D40", Offset = "0xE27D40", VA = "0xE27D40")]
	public void ToggleOn(bool value)
	{
	}

	[Token(Token = "0x60002DE")]
	[Address(RVA = "0xE27DE4", Offset = "0xE27DE4", VA = "0xE27DE4")]
	public MaterialSortMenu()
	{
	}
}
[Token(Token = "0x2000086")]
public class LODDebug : MonoBehaviour
{
	[Token(Token = "0x400020E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool visible;

	[Token(Token = "0x60002DF")]
	[Address(RVA = "0xE27DEC", Offset = "0xE27DEC", VA = "0xE27DEC")]
	public void OnBecameInvisible()
	{
	}

	[Token(Token = "0x60002E0")]
	[Address(RVA = "0xE27E88", Offset = "0xE27E88", VA = "0xE27E88")]
	public void OnBecameVisible()
	{
	}

	[Token(Token = "0x60002E1")]
	[Address(RVA = "0xE27F28", Offset = "0xE27F28", VA = "0xE27F28")]
	public LODDebug()
	{
	}
}
[Token(Token = "0x2000087")]
public class MultiplayerAvatarSim : MonoBehaviour
{
	[Token(Token = "0x2000088")]
	[CompilerGenerated]
	private sealed class <Start>d__17 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400021B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400021C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400021D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MultiplayerAvatarSim <>4__this;

		[Token(Token = "0x17000056")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60002F0")]
			[Address(RVA = "0xE28B64", Offset = "0xE28B64", VA = "0xE28B64", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000057")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60002F2")]
			[Address(RVA = "0xE28BAC", Offset = "0xE28BAC", VA = "0xE28BAC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60002ED")]
		[Address(RVA = "0xE283A0", Offset = "0xE283A0", VA = "0xE283A0")]
		[DebuggerHidden]
		public <Start>d__17(int <>1__state)
		{
		}

		[Token(Token = "0x60002EE")]
		[Address(RVA = "0xE28794", Offset = "0xE28794", VA = "0xE28794", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60002EF")]
		[Address(RVA = "0xE28798", Offset = "0xE28798", VA = "0xE28798", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60002F1")]
		[Address(RVA = "0xE28B6C", Offset = "0xE28B6C", VA = "0xE28B6C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000211")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("Times")]
	public float startTime;

	[Token(Token = "0x4000212")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float duration;

	[Token(Token = "0x4000213")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool deactivateOnExit;

	[Token(Token = "0x4000214")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[Header("Animation")]
	[Range(0.01f, 1f)]
	public float speed;

	[Token(Token = "0x4000215")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector3 axis;

	[Token(Token = "0x4000216")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool animate;

	[Token(Token = "0x4000217")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[Header("Components")]
	public Transform headTransform;

	[Token(Token = "0x4000218")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject headGeo;

	[Token(Token = "0x4000219")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector3 startPosition;

	[Token(Token = "0x400021A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float time;

	[Token(Token = "0x1400000A")]
	public static event Action<MultiplayerAvatarSim> OnAvatarCreate
	{
		[Token(Token = "0x60002E2")]
		[Address(RVA = "0xE27F30", Offset = "0xE27F30", VA = "0xE27F30")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60002E3")]
		[Address(RVA = "0xE28020", Offset = "0xE28020", VA = "0xE28020")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x1400000B")]
	public static event Action<MultiplayerAvatarSim> OnAvatarDestroy
	{
		[Token(Token = "0x60002E4")]
		[Address(RVA = "0xE28110", Offset = "0xE28110", VA = "0xE28110")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60002E5")]
		[Address(RVA = "0xE28204", Offset = "0xE28204", VA = "0xE28204")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x60002E6")]
	[Address(RVA = "0xE282F8", Offset = "0xE282F8", VA = "0xE282F8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60002E7")]
	[Address(RVA = "0xE28338", Offset = "0xE28338", VA = "0xE28338")]
	[IteratorStateMachine(typeof(<Start>d__17))]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x60002E8")]
	[Address(RVA = "0xE283C8", Offset = "0xE283C8", VA = "0xE283C8")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60002E9")]
	[Address(RVA = "0xE28458", Offset = "0xE28458", VA = "0xE28458")]
	private void SetupAvatar()
	{
	}

	[Token(Token = "0x60002EA")]
	[Address(RVA = "0xE285E0", Offset = "0xE285E0", VA = "0xE285E0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60002EB")]
	[Address(RVA = "0xE28654", Offset = "0xE28654", VA = "0xE28654")]
	public MultiplayerAvatarSim()
	{
	}
}
[Token(Token = "0x200008A")]
public class MultiplayerCapture : MonoBehaviour
{
	[Token(Token = "0x200008B")]
	public class Frame
	{
		[Token(Token = "0x400023A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 ballPosition;

		[Token(Token = "0x400023B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Quaternion ballRotation;

		[Token(Token = "0x400023C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Vector3 headPosition;

		[Token(Token = "0x400023D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Quaternion headRotation;

		[Token(Token = "0x400023E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Vector3 headLocalScale;

		[Token(Token = "0x400023F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public Vector3 putterHeadPosition;

		[Token(Token = "0x4000240")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Quaternion putterHeadRotation;

		[Token(Token = "0x4000241")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Vector3 putterHeadLocalScale;

		[Token(Token = "0x4000242")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public Vector3 putterShaftPosition;

		[Token(Token = "0x4000243")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Quaternion putterShaftRotation;

		[Token(Token = "0x4000244")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public Vector3 putterShaftLocalScale;

		[Token(Token = "0x4000245")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		public float putterShaftLocalScaleY;

		[Token(Token = "0x4000246")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public Vector3 handPosition;

		[Token(Token = "0x4000247")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		public Quaternion handRotation;

		[Token(Token = "0x4000248")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		public Vector3 handLocalScale;

		[Token(Token = "0x6000315")]
		[Address(RVA = "0xE2A8D8", Offset = "0xE2A8D8", VA = "0xE2A8D8")]
		public Frame()
		{
		}
	}

	[Token(Token = "0x200008C")]
	public enum State
	{
		[Token(Token = "0x400024A")]
		Idle,
		[Token(Token = "0x400024B")]
		Ready,
		[Token(Token = "0x400024C")]
		Capturing,
		[Token(Token = "0x400024D")]
		Complete
	}

	[Token(Token = "0x4000221")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Tooltip("Optionally assign an avatar Preset from MightyTools/MultiplayerCapture for custom avatar")]
	[Header("Settings")]
	public Preset preset;

	[Token(Token = "0x4000222")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int playerProfile;

	[Token(Token = "0x4000223")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool showBall;

	[Token(Token = "0x4000224")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[Header("Components")]
	public GameObject ballGeo;

	[Token(Token = "0x4000225")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject headGeo;

	[Token(Token = "0x4000226")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject putterHeadGeo;

	[Token(Token = "0x4000227")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject putterShaftGeo;

	[Token(Token = "0x4000228")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject handGeo;

	[Token(Token = "0x4000229")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject avatarGeo;

	[Token(Token = "0x400022A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Transform ballTransform;

	[Token(Token = "0x400022B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Transform headTransform;

	[Token(Token = "0x400022C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Transform putterHeadTransform;

	[Token(Token = "0x400022D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Transform putterShaftTransform;

	[Token(Token = "0x400022E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Transform handTransform;

	[Token(Token = "0x400022F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Transform nametag;

	[Token(Token = "0x4000230")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Transform handleBone;

	[Token(Token = "0x4000231")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private float shaftScale;

	[Token(Token = "0x4000232")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Mighty.Avatar avatar;

	[Token(Token = "0x4000233")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Transform putterHeadActual;

	[Token(Token = "0x4000234")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Transform putterShaftActual;

	[Token(Token = "0x4000235")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private Transform ballActual;

	[Token(Token = "0x4000236")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private Transform handActual;

	[Token(Token = "0x4000237")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private Transform headActual;

	[Token(Token = "0x17000058")]
	public State state
	{
		[Token(Token = "0x60002FB")]
		[Address(RVA = "0xE28EE8", Offset = "0xE28EE8", VA = "0xE28EE8")]
		[CompilerGenerated]
		get
		{
			return default(State);
		}
		[Token(Token = "0x60002FC")]
		[Address(RVA = "0xE28EF0", Offset = "0xE28EF0", VA = "0xE28EF0")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000059")]
	public Frame[] frames
	{
		[Token(Token = "0x60002FD")]
		[Address(RVA = "0xE28EF8", Offset = "0xE28EF8", VA = "0xE28EF8")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x60002FE")]
		[Address(RVA = "0xE28F00", Offset = "0xE28F00", VA = "0xE28F00")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x1700005A")]
	private ProfileData Profile
	{
		[Token(Token = "0x600030C")]
		[Address(RVA = "0xE2A760", Offset = "0xE2A760", VA = "0xE2A760")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700005B")]
	public string profileName
	{
		[Token(Token = "0x600030D")]
		[Address(RVA = "0xE2A8E0", Offset = "0xE2A8E0", VA = "0xE2A8E0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700005C")]
	private float clubToHandDistance
	{
		[Token(Token = "0x600030E")]
		[Address(RVA = "0xE2A688", Offset = "0xE2A688", VA = "0xE2A688")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700005D")]
	private int endFrame
	{
		[Token(Token = "0x600030F")]
		[Address(RVA = "0xE2A66C", Offset = "0xE2A66C", VA = "0xE2A66C")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700005E")]
	public bool isCapturing
	{
		[Token(Token = "0x6000310")]
		[Address(RVA = "0xE29FA4", Offset = "0xE29FA4", VA = "0xE29FA4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700005F")]
	public bool isComplete
	{
		[Token(Token = "0x6000311")]
		[Address(RVA = "0xE29F68", Offset = "0xE29F68", VA = "0xE29F68")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000060")]
	public bool isReady
	{
		[Token(Token = "0x6000312")]
		[Address(RVA = "0xE29F58", Offset = "0xE29F58", VA = "0xE29F58")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000061")]
	public bool isIdle
	{
		[Token(Token = "0x6000313")]
		[Address(RVA = "0xE28F60", Offset = "0xE28F60", VA = "0xE28F60")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1400000C")]
	public event Action<MultiplayerCapture> OnStart
	{
		[Token(Token = "0x60002F7")]
		[Address(RVA = "0xE28C28", Offset = "0xE28C28", VA = "0xE28C28")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60002F8")]
		[Address(RVA = "0xE28CD8", Offset = "0xE28CD8", VA = "0xE28CD8")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x1400000D")]
	public event Action<MultiplayerCapture> OnComplete
	{
		[Token(Token = "0x60002F9")]
		[Address(RVA = "0xE28D88", Offset = "0xE28D88", VA = "0xE28D88")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60002FA")]
		[Address(RVA = "0xE28E38", Offset = "0xE28E38", VA = "0xE28E38")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x60002FF")]
	[Address(RVA = "0xE28F08", Offset = "0xE28F08", VA = "0xE28F08")]
	public void InitCapture(int captureFrames)
	{
	}

	[Token(Token = "0x6000300")]
	[Address(RVA = "0xE29F04", Offset = "0xE29F04", VA = "0xE29F04")]
	public void StartCapture()
	{
	}

	[Token(Token = "0x6000301")]
	[Address(RVA = "0xE29F78", Offset = "0xE29F78", VA = "0xE29F78")]
	public void StopCapture()
	{
	}

	[Token(Token = "0x6000302")]
	[Address(RVA = "0xE29FB4", Offset = "0xE29FB4", VA = "0xE29FB4")]
	public void ClearCapture()
	{
	}

	[Token(Token = "0x6000303")]
	[Address(RVA = "0xE29FDC", Offset = "0xE29FDC", VA = "0xE29FDC")]
	public void UpdateCapture(int frame)
	{
	}

	[Token(Token = "0x6000304")]
	[Address(RVA = "0xE2A630", Offset = "0xE2A630", VA = "0xE2A630")]
	private void CompleteCapture()
	{
	}

	[Token(Token = "0x6000305")]
	[Address(RVA = "0xE29FFC", Offset = "0xE29FFC", VA = "0xE29FFC")]
	private void Capture(int i)
	{
	}

	[Token(Token = "0x6000306")]
	[Address(RVA = "0xE2A1CC", Offset = "0xE2A1CC", VA = "0xE2A1CC")]
	private void Cue(int i)
	{
	}

	[Token(Token = "0x6000307")]
	[Address(RVA = "0xE28F70", Offset = "0xE28F70", VA = "0xE28F70")]
	private void GetPlayer()
	{
	}

	[Token(Token = "0x6000308")]
	[Address(RVA = "0xE290C4", Offset = "0xE290C4", VA = "0xE290C4")]
	private void SetupAvatar()
	{
	}

	[Token(Token = "0x6000309")]
	[Address(RVA = "0xE29A00", Offset = "0xE29A00", VA = "0xE29A00")]
	private void SetupBall()
	{
	}

	[Token(Token = "0x600030A")]
	[Address(RVA = "0xE29D30", Offset = "0xE29D30", VA = "0xE29D30")]
	private void SetupFrames(int count)
	{
	}

	[Token(Token = "0x600030B")]
	[Address(RVA = "0xE29E18", Offset = "0xE29E18", VA = "0xE29E18")]
	private void SetVisible(bool state)
	{
	}

	[Token(Token = "0x6000314")]
	[Address(RVA = "0xE2AA04", Offset = "0xE2AA04", VA = "0xE2AA04")]
	public MultiplayerCapture()
	{
	}
}
[Token(Token = "0x200008E")]
public class MultiplayerCaptures : MonoBehaviour
{
	[Token(Token = "0x200008F")]
	public enum State
	{
		[Token(Token = "0x4000259")]
		Idle,
		[Token(Token = "0x400025A")]
		Ready,
		[Token(Token = "0x400025B")]
		Capturing
	}

	[Token(Token = "0x2000090")]
	[CompilerGenerated]
	private sealed class <Start>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400025C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400025D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x17000069")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000332")]
			[Address(RVA = "0xE2B1B0", Offset = "0xE2B1B0", VA = "0xE2B1B0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700006A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000334")]
			[Address(RVA = "0xE2B1F8", Offset = "0xE2B1F8", VA = "0xE2B1F8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600032F")]
		[Address(RVA = "0xE2AC50", Offset = "0xE2AC50", VA = "0xE2AC50")]
		[DebuggerHidden]
		public <Start>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x6000330")]
		[Address(RVA = "0xE2B128", Offset = "0xE2B128", VA = "0xE2B128", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000331")]
		[Address(RVA = "0xE2B12C", Offset = "0xE2B12C", VA = "0xE2B12C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000333")]
		[Address(RVA = "0xE2B1B8", Offset = "0xE2B1B8", VA = "0xE2B1B8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000251")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int captureSeconds;

	[Token(Token = "0x4000252")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private int captureFrames;

	[Token(Token = "0x4000254")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int frame;

	[Token(Token = "0x4000255")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool paused;

	[Token(Token = "0x4000256")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[HideInInspector]
	[SerializeField]
	private int counter;

	[Token(Token = "0x4000257")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private MultiplayerCapture[] _captures;

	[Token(Token = "0x17000062")]
	public State state
	{
		[Token(Token = "0x600031A")]
		[Address(RVA = "0xE2ABE0", Offset = "0xE2ABE0", VA = "0xE2ABE0")]
		[CompilerGenerated]
		get
		{
			return default(State);
		}
		[Token(Token = "0x600031B")]
		[Address(RVA = "0xE2ABE8", Offset = "0xE2ABE8", VA = "0xE2ABE8")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000063")]
	public MultiplayerCapture[] captures
	{
		[Token(Token = "0x6000327")]
		[Address(RVA = "0xE2AE24", Offset = "0xE2AE24", VA = "0xE2AE24")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000064")]
	public bool isCapturing
	{
		[Token(Token = "0x6000329")]
		[Address(RVA = "0xE2B0F0", Offset = "0xE2B0F0", VA = "0xE2B0F0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000065")]
	public bool isReady
	{
		[Token(Token = "0x600032A")]
		[Address(RVA = "0xE2B100", Offset = "0xE2B100", VA = "0xE2B100")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000066")]
	public bool isIdle
	{
		[Token(Token = "0x600032B")]
		[Address(RVA = "0xE2AD70", Offset = "0xE2AD70", VA = "0xE2AD70")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000067")]
	private int endFrame
	{
		[Token(Token = "0x600032C")]
		[Address(RVA = "0xE2B0E4", Offset = "0xE2B0E4", VA = "0xE2B0E4")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000068")]
	public bool isPaused
	{
		[Token(Token = "0x600032D")]
		[Address(RVA = "0xE2B110", Offset = "0xE2B110", VA = "0xE2B110")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x600031C")]
	[Address(RVA = "0xE2ABF0", Offset = "0xE2ABF0", VA = "0xE2ABF0")]
	[IteratorStateMachine(typeof(<Start>d__11))]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x600031D")]
	[Address(RVA = "0xE2AC78", Offset = "0xE2AC78", VA = "0xE2AC78")]
	public void InitCaptures()
	{
	}

	[Token(Token = "0x600031E")]
	[Address(RVA = "0xE2AE7C", Offset = "0xE2AE7C", VA = "0xE2AE7C")]
	public void StartCapture(MultiplayerCapture capture)
	{
	}

	[Token(Token = "0x600031F")]
	[Address(RVA = "0xE2AF4C", Offset = "0xE2AF4C", VA = "0xE2AF4C")]
	public void ClearCapture(MultiplayerCapture capture)
	{
	}

	[Token(Token = "0x6000320")]
	[Address(RVA = "0xE2AEB4", Offset = "0xE2AEB4", VA = "0xE2AEB4")]
	public void StopCaptures()
	{
	}

	[Token(Token = "0x6000321")]
	[Address(RVA = "0xE2AF90", Offset = "0xE2AF90", VA = "0xE2AF90")]
	public void ClearCaptures()
	{
	}

	[Token(Token = "0x6000322")]
	[Address(RVA = "0xE2B020", Offset = "0xE2B020", VA = "0xE2B020")]
	public void Pause()
	{
	}

	[Token(Token = "0x6000323")]
	[Address(RVA = "0xE2AF44", Offset = "0xE2AF44", VA = "0xE2AF44")]
	public void Resume()
	{
	}

	[Token(Token = "0x6000324")]
	[Address(RVA = "0xE2AF88", Offset = "0xE2AF88", VA = "0xE2AF88")]
	public void Rewind()
	{
	}

	[Token(Token = "0x6000325")]
	[Address(RVA = "0xE2B02C", Offset = "0xE2B02C", VA = "0xE2B02C")]
	private void UpdateCaptures()
	{
	}

	[Token(Token = "0x6000326")]
	[Address(RVA = "0xE2B0A0", Offset = "0xE2B0A0", VA = "0xE2B0A0")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000328")]
	[Address(RVA = "0xE2AD80", Offset = "0xE2AD80", VA = "0xE2AD80")]
	private void LockFramerate()
	{
	}

	[Token(Token = "0x600032E")]
	[Address(RVA = "0xE2B118", Offset = "0xE2B118", VA = "0xE2B118")]
	public MultiplayerCaptures()
	{
	}
}
[Token(Token = "0x2000091")]
public class MightyToolsMenu : MonoBehaviour
{
	[Token(Token = "0x400025E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject menu;

	[Token(Token = "0x6000335")]
	[Address(RVA = "0xE2B200", Offset = "0xE2B200", VA = "0xE2B200")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000336")]
	[Address(RVA = "0xE2B22C", Offset = "0xE2B22C", VA = "0xE2B22C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000337")]
	[Address(RVA = "0xE2B318", Offset = "0xE2B318", VA = "0xE2B318")]
	public void ToggleMenu()
	{
	}

	[Token(Token = "0x6000338")]
	[Address(RVA = "0xE2B3B0", Offset = "0xE2B3B0", VA = "0xE2B3B0")]
	public void Place()
	{
	}

	[Token(Token = "0x6000339")]
	[Address(RVA = "0xE2B57C", Offset = "0xE2B57C", VA = "0xE2B57C")]
	public MightyToolsMenu()
	{
	}
}
[Token(Token = "0x2000092")]
public class ToggleButton : MonoBehaviour
{
	[Token(Token = "0x400025F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool IsToggled;

	[Token(Token = "0x4000260")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public CanvasGroup[] leftActive;

	[Token(Token = "0x4000261")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public CanvasGroup[] rightActive;

	[Token(Token = "0x600033A")]
	[Address(RVA = "0xE2B584", Offset = "0xE2B584", VA = "0xE2B584")]
	public void Initialize(bool value)
	{
	}

	[Token(Token = "0x600033B")]
	[Address(RVA = "0xE2B590", Offset = "0xE2B590", VA = "0xE2B590")]
	public void UpdateDisplay(bool toggled)
	{
	}

	[Token(Token = "0x600033C")]
	[Address(RVA = "0xE2B6E4", Offset = "0xE2B6E4", VA = "0xE2B6E4")]
	public void Toggle()
	{
	}

	[Token(Token = "0x600033D")]
	[Address(RVA = "0xE2B6FC", Offset = "0xE2B6FC", VA = "0xE2B6FC")]
	public ToggleButton()
	{
	}
}
[Token(Token = "0x2000093")]
[RequireComponent(typeof(PhotonView))]
[RequireComponent(typeof(Renderer))]
public class ChangeColor : MonoBehaviour
{
	[Token(Token = "0x4000262")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private PhotonView photonView;

	[Token(Token = "0x600033E")]
	[Address(RVA = "0xE2B704", Offset = "0xE2B704", VA = "0xE2B704")]
	private void Start()
	{
	}

	[Token(Token = "0x600033F")]
	[Address(RVA = "0xE2B84C", Offset = "0xE2B84C", VA = "0xE2B84C")]
	[PunRPC]
	private void ChangeColour(Vector3 randomColor)
	{
	}

	[Token(Token = "0x6000340")]
	[Address(RVA = "0xE2B8F4", Offset = "0xE2B8F4", VA = "0xE2B8F4")]
	public ChangeColor()
	{
	}
}
[Token(Token = "0x2000094")]
[RequireComponent(typeof(PhotonView))]
public class ChangeName : MonoBehaviour
{
	[Token(Token = "0x6000341")]
	[Address(RVA = "0xE2B8FC", Offset = "0xE2B8FC", VA = "0xE2B8FC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000342")]
	[Address(RVA = "0xE2B9B8", Offset = "0xE2B9B8", VA = "0xE2B9B8")]
	public ChangeName()
	{
	}
}
[Token(Token = "0x2000095")]
[RequireComponent(typeof(PhotonVoiceView))]
public class PointersController : MonoBehaviour
{
	[Token(Token = "0x4000263")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject pointerDown;

	[Token(Token = "0x4000264")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject pointerUp;

	[Token(Token = "0x4000265")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private PhotonVoiceView photonVoiceView;

	[Token(Token = "0x6000343")]
	[Address(RVA = "0xE2B9C0", Offset = "0xE2B9C0", VA = "0xE2B9C0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000344")]
	[Address(RVA = "0xE2BACC", Offset = "0xE2BACC", VA = "0xE2BACC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000345")]
	[Address(RVA = "0xE2BA24", Offset = "0xE2BA24", VA = "0xE2BA24")]
	private void SetActiveSafe(GameObject go, bool active)
	{
	}

	[Token(Token = "0x6000346")]
	[Address(RVA = "0xE2BB24", Offset = "0xE2BB24", VA = "0xE2BB24")]
	public PointersController()
	{
	}
}
[Token(Token = "0x2000096")]
[RequireComponent(typeof(Collider))]
[RequireComponent(typeof(Rigidbody))]
public class ProximityVoiceTrigger : VoiceComponent
{
	[Token(Token = "0x4000266")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<byte> groupsToAdd;

	[Token(Token = "0x4000267")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<byte> groupsToRemove;

	[Token(Token = "0x4000268")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private byte[] subscribedGroups;

	[Token(Token = "0x4000269")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private PhotonVoiceView photonVoiceView;

	[Token(Token = "0x400026A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private PhotonView photonView;

	[Token(Token = "0x1700006B")]
	public byte TargetInterestGroup
	{
		[Token(Token = "0x6000347")]
		[Address(RVA = "0xE2BB2C", Offset = "0xE2BB2C", VA = "0xE2BB2C")]
		get
		{
			return default(byte);
		}
	}

	[Token(Token = "0x6000348")]
	[Address(RVA = "0xE2BBAC", Offset = "0xE2BBAC", VA = "0xE2BBAC", Slot = "9")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000349")]
	[Address(RVA = "0xE2BDD4", Offset = "0xE2BDD4", VA = "0xE2BDD4")]
	private void ToggleTransmission()
	{
	}

	[Token(Token = "0x600034A")]
	[Address(RVA = "0xE2C0BC", Offset = "0xE2C0BC", VA = "0xE2C0BC")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600034B")]
	[Address(RVA = "0xE2C318", Offset = "0xE2C318", VA = "0xE2C318")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x600034C")]
	[Address(RVA = "0xE2C5B4", Offset = "0xE2C5B4", VA = "0xE2C5B4")]
	private void Update()
	{
	}

	[Token(Token = "0x600034D")]
	[Address(RVA = "0xE2BC60", Offset = "0xE2BC60", VA = "0xE2BC60")]
	private bool IsLocalCheck()
	{
		return default(bool);
	}

	[Token(Token = "0x600034E")]
	[Address(RVA = "0xE2CC00", Offset = "0xE2CC00", VA = "0xE2CC00")]
	public ProximityVoiceTrigger()
	{
	}
}
[Serializable]
[Token(Token = "0x2000097")]
public class MouseLookHelper
{
	[Token(Token = "0x400026B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float XSensitivity;

	[Token(Token = "0x400026C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float YSensitivity;

	[Token(Token = "0x400026D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool clampVerticalRotation;

	[Token(Token = "0x400026E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float MinimumX;

	[Token(Token = "0x400026F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float MaximumX;

	[Token(Token = "0x4000270")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool smooth;

	[Token(Token = "0x4000271")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float smoothTime;

	[Token(Token = "0x4000272")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Quaternion m_CharacterTargetRot;

	[Token(Token = "0x4000273")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Quaternion m_CameraTargetRot;

	[Token(Token = "0x600034F")]
	[Address(RVA = "0xE2CCA0", Offset = "0xE2CCA0", VA = "0xE2CCA0")]
	public void Init(Transform character, Transform camera)
	{
	}

	[Token(Token = "0x6000350")]
	[Address(RVA = "0xE2CCF0", Offset = "0xE2CCF0", VA = "0xE2CCF0")]
	public void LookRotation(Transform character, Transform camera)
	{
	}

	[Token(Token = "0x6000351")]
	[Address(RVA = "0xE2D030", Offset = "0xE2D030", VA = "0xE2D030")]
	private Quaternion ClampRotationAroundXAxis(Quaternion q)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000352")]
	[Address(RVA = "0xE2D094", Offset = "0xE2D094", VA = "0xE2D094")]
	public MouseLookHelper()
	{
	}
}
[Token(Token = "0x2000098")]
public static class PlayerPrefsUtility
{
	[Token(Token = "0x4000274")]
	public const string KEY_PREFIX = "ENC-";

	[Token(Token = "0x4000275")]
	public const string VALUE_FLOAT_PREFIX = "0";

	[Token(Token = "0x4000276")]
	public const string VALUE_INT_PREFIX = "1";

	[Token(Token = "0x4000277")]
	public const string VALUE_STRING_PREFIX = "2";

	[Token(Token = "0x6000353")]
	[Address(RVA = "0xE2D0C0", Offset = "0xE2D0C0", VA = "0xE2D0C0")]
	public static bool IsEncryptedKey(string key)
	{
		return default(bool);
	}

	[Token(Token = "0x6000354")]
	[Address(RVA = "0xE2D114", Offset = "0xE2D114", VA = "0xE2D114")]
	public static string DecryptKey(string encryptedKey)
	{
		return null;
	}

	[Token(Token = "0x6000355")]
	[Address(RVA = "0xE2D208", Offset = "0xE2D208", VA = "0xE2D208")]
	public static void SetEncryptedFloat(string key, float value)
	{
	}

	[Token(Token = "0x6000356")]
	[Address(RVA = "0xE2D2E4", Offset = "0xE2D2E4", VA = "0xE2D2E4")]
	public static void SetEncryptedInt(string key, int value)
	{
	}

	[Token(Token = "0x6000357")]
	[Address(RVA = "0xE2D3C0", Offset = "0xE2D3C0", VA = "0xE2D3C0")]
	public static void SetEncryptedString(string key, string value)
	{
	}

	[Token(Token = "0x6000358")]
	[Address(RVA = "0xE2D49C", Offset = "0xE2D49C", VA = "0xE2D49C")]
	public static object GetEncryptedValue(string encryptedKey, string encryptedValue)
	{
		return null;
	}

	[Token(Token = "0x6000359")]
	[Address(RVA = "0xE2D70C", Offset = "0xE2D70C", VA = "0xE2D70C")]
	public static float GetEncryptedFloat(string key, float defaultValue = 0f)
	{
		return default(float);
	}

	[Token(Token = "0x600035A")]
	[Address(RVA = "0xE2D804", Offset = "0xE2D804", VA = "0xE2D804")]
	public static int GetEncryptedInt(string key, int defaultValue = 0)
	{
		return default(int);
	}

	[Token(Token = "0x600035B")]
	[Address(RVA = "0xE2D8FC", Offset = "0xE2D8FC", VA = "0xE2D8FC")]
	public static string GetEncryptedString(string key, string defaultValue = "")
	{
		return null;
	}

	[Token(Token = "0x600035C")]
	[Address(RVA = "0xE2D9F4", Offset = "0xE2D9F4", VA = "0xE2D9F4")]
	public static void SetBool(string key, bool value)
	{
	}

	[Token(Token = "0x600035D")]
	[Address(RVA = "0xE2DA00", Offset = "0xE2DA00", VA = "0xE2DA00")]
	public static bool GetBool(string key, bool defaultValue = false)
	{
		return default(bool);
	}

	[Token(Token = "0x600035E")]
	[Address(RVA = "0xE2DA44", Offset = "0xE2DA44", VA = "0xE2DA44")]
	public static void SetEnum(string key, Enum value)
	{
	}

	[Token(Token = "0x600035F")]
	public static T GetEnum<T>(string key, [Optional] T defaultValue) where T : struct
	{
		return (T)null;
	}

	[Token(Token = "0x6000360")]
	[Address(RVA = "0xE2DA7C", Offset = "0xE2DA7C", VA = "0xE2DA7C")]
	public static object GetEnum(string key, Type enumType, object defaultValue)
	{
		return null;
	}

	[Token(Token = "0x6000361")]
	[Address(RVA = "0xE2DB18", Offset = "0xE2DB18", VA = "0xE2DB18")]
	public static void SetDateTime(string key, DateTime value)
	{
	}

	[Token(Token = "0x6000362")]
	[Address(RVA = "0xE2DBB4", Offset = "0xE2DBB4", VA = "0xE2DBB4")]
	public static DateTime GetDateTime(string key, [Optional] DateTime defaultValue)
	{
		return default(DateTime);
	}

	[Token(Token = "0x6000363")]
	[Address(RVA = "0xE2DC78", Offset = "0xE2DC78", VA = "0xE2DC78")]
	public static void SetTimeSpan(string key, TimeSpan value)
	{
	}

	[Token(Token = "0x6000364")]
	[Address(RVA = "0xE2DCB0", Offset = "0xE2DCB0", VA = "0xE2DCB0")]
	public static TimeSpan GetTimeSpan(string key, [Optional] TimeSpan defaultValue)
	{
		return default(TimeSpan);
	}
}
[Token(Token = "0x2000099")]
public abstract class Achievement : MonoBehaviour
{
	[Token(Token = "0x6000365")]
	public abstract void CollectAchievement();

	[Token(Token = "0x6000366")]
	[Address(RVA = "0xE2DD38", Offset = "0xE2DD38", VA = "0xE2DD38")]
	protected Achievement()
	{
	}
}
[Token(Token = "0x200009A")]
public class AchievementTester : MonoBehaviour
{
	[Token(Token = "0x4000278")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Achievement achievement;

	[Token(Token = "0x4000279")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool activate;

	[Token(Token = "0x6000367")]
	[Address(RVA = "0xE2DD40", Offset = "0xE2DD40", VA = "0xE2DD40")]
	private void Start()
	{
	}

	[Token(Token = "0x6000368")]
	[Address(RVA = "0xE2DD44", Offset = "0xE2DD44", VA = "0xE2DD44")]
	private void Update()
	{
	}

	[Token(Token = "0x6000369")]
	[Address(RVA = "0xE2DD78", Offset = "0xE2DD78", VA = "0xE2DD78")]
	public AchievementTester()
	{
	}
}
[Token(Token = "0x200009B")]
public class AnimationDrivenAlpha : MonoBehaviour
{
	[Token(Token = "0x400027A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LinkedAnimationProperty linkedAnimationProperty;

	[Token(Token = "0x400027B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Renderer rend;

	[Token(Token = "0x400027C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Color defaultColor;

	[Token(Token = "0x600036A")]
	[Address(RVA = "0xE2DD80", Offset = "0xE2DD80", VA = "0xE2DD80")]
	private void Start()
	{
	}

	[Token(Token = "0x600036B")]
	[Address(RVA = "0xE2DE18", Offset = "0xE2DE18", VA = "0xE2DE18")]
	private void Update()
	{
	}

	[Token(Token = "0x600036C")]
	[Address(RVA = "0xE2DF0C", Offset = "0xE2DF0C", VA = "0xE2DF0C")]
	public AnimationDrivenAlpha()
	{
	}
}
[Token(Token = "0x200009C")]
public enum LinkedAnimationProperty
{
	[Token(Token = "0x400027E")]
	float1,
	[Token(Token = "0x400027F")]
	float2,
	[Token(Token = "0x4000280")]
	float3
}
[Token(Token = "0x200009D")]
public class AnimationDrivenMaster : MonoBehaviour
{
	[Token(Token = "0x4000281")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static AnimationDrivenMaster instance;

	[Token(Token = "0x4000282")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float float1;

	[Token(Token = "0x4000283")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float float2;

	[Token(Token = "0x4000284")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float float3;

	[Token(Token = "0x600036D")]
	[Address(RVA = "0xE2DF14", Offset = "0xE2DF14", VA = "0xE2DF14")]
	private void Awake()
	{
	}

	[Token(Token = "0x600036E")]
	[Address(RVA = "0xE2DF60", Offset = "0xE2DF60", VA = "0xE2DF60")]
	public void UpdateValue(LinkedAnimationProperty animProp, float floatValue)
	{
	}

	[Token(Token = "0x600036F")]
	[Address(RVA = "0xE2DEDC", Offset = "0xE2DEDC", VA = "0xE2DEDC")]
	public float GetValue(LinkedAnimationProperty animProp)
	{
		return default(float);
	}

	[Token(Token = "0x6000370")]
	[Address(RVA = "0xE2DF88", Offset = "0xE2DF88", VA = "0xE2DF88")]
	public AnimationDrivenMaster()
	{
	}
}
[Token(Token = "0x200009E")]
public class AnimationDriver : MonoBehaviour
{
	[Token(Token = "0x4000285")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LinkedAnimationProperty linkedAnimationProperty;

	[Token(Token = "0x4000286")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float floatAnim;

	[Token(Token = "0x6000371")]
	[Address(RVA = "0xE2DF90", Offset = "0xE2DF90", VA = "0xE2DF90")]
	private void Update()
	{
	}

	[Token(Token = "0x6000372")]
	[Address(RVA = "0xE2E00C", Offset = "0xE2E00C", VA = "0xE2E00C")]
	public AnimationDriver()
	{
	}
}
[Token(Token = "0x200009F")]
public class AnimationRandomClipPlayer : MonoBehaviour
{
	[Token(Token = "0x20000A0")]
	[CompilerGenerated]
	private sealed class <ChooseAfterWait>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400028D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400028E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400028F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float dur;

		[Token(Token = "0x4000290")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AnimationRandomClipPlayer <>4__this;

		[Token(Token = "0x1700006C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600037B")]
			[Address(RVA = "0xE2E488", Offset = "0xE2E488", VA = "0xE2E488", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700006D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600037D")]
			[Address(RVA = "0xE2E4D0", Offset = "0xE2E4D0", VA = "0xE2E4D0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000378")]
		[Address(RVA = "0xE2E31C", Offset = "0xE2E31C", VA = "0xE2E31C")]
		[DebuggerHidden]
		public <ChooseAfterWait>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x6000379")]
		[Address(RVA = "0xE2E3CC", Offset = "0xE2E3CC", VA = "0xE2E3CC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600037A")]
		[Address(RVA = "0xE2E3D0", Offset = "0xE2E3D0", VA = "0xE2E3D0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600037C")]
		[Address(RVA = "0xE2E490", Offset = "0xE2E490", VA = "0xE2E490", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000287")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Animator anim;

	[Token(Token = "0x4000288")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private string currentAnimState;

	[Token(Token = "0x4000289")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float crossFadeLength;

	[Token(Token = "0x400028A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool allowRepeat;

	[Token(Token = "0x400028B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<AnimationClip> clips;

	[Token(Token = "0x400028C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int clipNum;

	[Token(Token = "0x6000373")]
	[Address(RVA = "0xE2E014", Offset = "0xE2E014", VA = "0xE2E014")]
	private void Start()
	{
	}

	[Token(Token = "0x6000374")]
	[Address(RVA = "0xE2E13C", Offset = "0xE2E13C", VA = "0xE2E13C")]
	private void ChooseClip(int which = -1)
	{
	}

	[Token(Token = "0x6000375")]
	[Address(RVA = "0xE2E2A4", Offset = "0xE2E2A4", VA = "0xE2E2A4")]
	[IteratorStateMachine(typeof(<ChooseAfterWait>d__8))]
	private IEnumerator ChooseAfterWait(float dur)
	{
		return null;
	}

	[Token(Token = "0x6000376")]
	[Address(RVA = "0xE2E258", Offset = "0xE2E258", VA = "0xE2E258")]
	private void ChangeAnimationState(string newState)
	{
	}

	[Token(Token = "0x6000377")]
	[Address(RVA = "0xE2E344", Offset = "0xE2E344", VA = "0xE2E344")]
	public AnimationRandomClipPlayer()
	{
	}
}
[Token(Token = "0x20000A1")]
public class ARDisable : MonoBehaviour
{
	[Token(Token = "0x600037E")]
	[Address(RVA = "0xE2E4D8", Offset = "0xE2E4D8", VA = "0xE2E4D8")]
	private void Start()
	{
	}

	[Token(Token = "0x600037F")]
	[Address(RVA = "0xE2E558", Offset = "0xE2E558", VA = "0xE2E558")]
	public ARDisable()
	{
	}
}
[Token(Token = "0x20000A2")]
public class AREnable : MonoBehaviour
{
	[Token(Token = "0x6000380")]
	[Address(RVA = "0xE2E560", Offset = "0xE2E560", VA = "0xE2E560")]
	private void Start()
	{
	}

	[Token(Token = "0x6000381")]
	[Address(RVA = "0xE2E5E0", Offset = "0xE2E5E0", VA = "0xE2E5E0")]
	public AREnable()
	{
	}
}
[Token(Token = "0x20000A3")]
public class AROverlayController : MonoBehaviour
{
	[Token(Token = "0x4000291")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject ARExtras;

	[Token(Token = "0x4000292")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject PutterAR;

	[Token(Token = "0x4000293")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject WarpCanvas;

	[Token(Token = "0x4000294")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject PeekButton;

	[Token(Token = "0x4000295")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject ScorecardHUD;

	[Token(Token = "0x4000296")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool usePeekButton;

	[Token(Token = "0x4000297")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static AROverlayController instance;

	[Token(Token = "0x1700006E")]
	public bool warpAvailable
	{
		[Token(Token = "0x600038E")]
		[Address(RVA = "0xE2F08C", Offset = "0xE2F08C", VA = "0xE2F08C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700006F")]
	public bool lineUpPutt
	{
		[Token(Token = "0x600038F")]
		[Address(RVA = "0xE2F134", Offset = "0xE2F134", VA = "0xE2F134")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000070")]
	public bool isMainMenu
	{
		[Token(Token = "0x6000390")]
		[Address(RVA = "0xE2E738", Offset = "0xE2E738", VA = "0xE2E738")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000071")]
	public bool practiceMode
	{
		[Token(Token = "0x6000391")]
		[Address(RVA = "0xE2E7DC", Offset = "0xE2E7DC", VA = "0xE2E7DC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000072")]
	public bool onDrivingRange
	{
		[Token(Token = "0x6000392")]
		[Address(RVA = "0xE2F1DC", Offset = "0xE2F1DC", VA = "0xE2F1DC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000382")]
	[Address(RVA = "0xE2E5E8", Offset = "0xE2E5E8", VA = "0xE2E5E8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000383")]
	[Address(RVA = "0xE2E648", Offset = "0xE2E648", VA = "0xE2E648")]
	private void Start()
	{
	}

	[Token(Token = "0x6000384")]
	[Address(RVA = "0xE2E878", Offset = "0xE2E878", VA = "0xE2E878")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000385")]
	[Address(RVA = "0xE2EABC", Offset = "0xE2EABC", VA = "0xE2EABC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000386")]
	[Address(RVA = "0xE2ED00", Offset = "0xE2ED00", VA = "0xE2ED00")]
	private void OnMainMenuInRange()
	{
	}

	[Token(Token = "0x6000387")]
	[Address(RVA = "0xE2ED5C", Offset = "0xE2ED5C", VA = "0xE2ED5C")]
	private void OnMainMenuOutOfRange()
	{
	}

	[Token(Token = "0x6000388")]
	[Address(RVA = "0xE2EDB8", Offset = "0xE2EDB8", VA = "0xE2EDB8")]
	private void GodModeOn()
	{
	}

	[Token(Token = "0x6000389")]
	[Address(RVA = "0xE2E82C", Offset = "0xE2E82C", VA = "0xE2E82C")]
	private void GodModeOff()
	{
	}

	[Token(Token = "0x600038A")]
	[Address(RVA = "0xE2EE04", Offset = "0xE2EE04", VA = "0xE2EE04")]
	private void OnPuttCompleted()
	{
	}

	[Token(Token = "0x600038B")]
	[Address(RVA = "0xE2EE08", Offset = "0xE2EE08", VA = "0xE2EE08")]
	public void OnWarpButtonClick()
	{
	}

	[Token(Token = "0x600038C")]
	[Address(RVA = "0xE2EEAC", Offset = "0xE2EEAC", VA = "0xE2EEAC")]
	public void OnScorecardButtonClick()
	{
	}

	[Token(Token = "0x600038D")]
	[Address(RVA = "0xE2EF68", Offset = "0xE2EF68", VA = "0xE2EF68")]
	public void OnUndoButtonClick()
	{
	}

	[Token(Token = "0x6000393")]
	[Address(RVA = "0xE2F1E4", Offset = "0xE2F1E4", VA = "0xE2F1E4")]
	public AROverlayController()
	{
	}
}
[Token(Token = "0x20000A4")]
public class ARPeekButton : MonoBehaviour
{
	[Token(Token = "0x20000A5")]
	[CompilerGenerated]
	private sealed class <AnimatedFOV>d__15 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400029F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40002A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40002A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ARPeekButton <>4__this;

		[Token(Token = "0x40002A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float duration;

		[Token(Token = "0x40002A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float endFOV;

		[Token(Token = "0x40002A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <startFOV>5__2;

		[Token(Token = "0x40002A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <t>5__3;

		[Token(Token = "0x17000077")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60003AA")]
			[Address(RVA = "0xE2FB00", Offset = "0xE2FB00", VA = "0xE2FB00", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000078")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60003AC")]
			[Address(RVA = "0xE2FB48", Offset = "0xE2FB48", VA = "0xE2FB48", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60003A7")]
		[Address(RVA = "0xE2F90C", Offset = "0xE2F90C", VA = "0xE2F90C")]
		[DebuggerHidden]
		public <AnimatedFOV>d__15(int <>1__state)
		{
		}

		[Token(Token = "0x60003A8")]
		[Address(RVA = "0xE2F9E8", Offset = "0xE2F9E8", VA = "0xE2F9E8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60003A9")]
		[Address(RVA = "0xE2F9EC", Offset = "0xE2F9EC", VA = "0xE2F9EC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60003AB")]
		[Address(RVA = "0xE2FB08", Offset = "0xE2FB08", VA = "0xE2FB08", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000298")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Image activeIcon;

	[Token(Token = "0x4000299")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Image defaultIcon;

	[Token(Token = "0x400029A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public CanvasGroup canvas;

	[Token(Token = "0x400029B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private RectTransform rt;

	[Token(Token = "0x400029C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[Range(0f, 5f)]
	public float fovMultiplier;

	[Token(Token = "0x400029D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float defaultFOV;

	[Token(Token = "0x400029E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool _active;

	[Token(Token = "0x17000073")]
	public bool active
	{
		[Token(Token = "0x600039F")]
		[Address(RVA = "0xE2F964", Offset = "0xE2F964", VA = "0xE2F964")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60003A0")]
		[Address(RVA = "0xE2F5A0", Offset = "0xE2F5A0", VA = "0xE2F5A0")]
		set
		{
		}
	}

	[Token(Token = "0x17000074")]
	public float currentFOV
	{
		[Token(Token = "0x60003A2")]
		[Address(RVA = "0xE2F96C", Offset = "0xE2F96C", VA = "0xE2F96C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60003A3")]
		[Address(RVA = "0xE2F870", Offset = "0xE2F870", VA = "0xE2F870")]
		set
		{
		}
	}

	[Token(Token = "0x17000075")]
	public float aspectMultiplier
	{
		[Token(Token = "0x60003A4")]
		[Address(RVA = "0xE2F7B0", Offset = "0xE2F7B0", VA = "0xE2F7B0")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000076")]
	private Camera cam
	{
		[Token(Token = "0x60003A5")]
		[Address(RVA = "0xE2F988", Offset = "0xE2F988", VA = "0xE2F988")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000394")]
	[Address(RVA = "0xE2F1F4", Offset = "0xE2F1F4", VA = "0xE2F1F4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000395")]
	[Address(RVA = "0xE2F244", Offset = "0xE2F244", VA = "0xE2F244")]
	private void Start()
	{
	}

	[Token(Token = "0x6000396")]
	[Address(RVA = "0xE2F2C8", Offset = "0xE2F2C8", VA = "0xE2F2C8")]
	private void Init()
	{
	}

	[Token(Token = "0x6000397")]
	[Address(RVA = "0xE2F38C", Offset = "0xE2F38C", VA = "0xE2F38C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000398")]
	[Address(RVA = "0xE2F498", Offset = "0xE2F498", VA = "0xE2F498")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000399")]
	[Address(RVA = "0xE2F5D8", Offset = "0xE2F5D8", VA = "0xE2F5D8")]
	private void Update()
	{
	}

	[Token(Token = "0x600039A")]
	[Address(RVA = "0xE2F32C", Offset = "0xE2F32C", VA = "0xE2F32C")]
	private void UpdateUI()
	{
	}

	[Token(Token = "0x600039B")]
	[Address(RVA = "0xE2F708", Offset = "0xE2F708", VA = "0xE2F708")]
	private void UpdateFOV(bool animated = true)
	{
	}

	[Token(Token = "0x600039C")]
	[Address(RVA = "0xE2F7F4", Offset = "0xE2F7F4", VA = "0xE2F7F4")]
	[IteratorStateMachine(typeof(<AnimatedFOV>d__15))]
	private IEnumerator AnimatedFOV(float endFOV, float duration = 0.5f)
	{
		return null;
	}

	[Token(Token = "0x600039D")]
	[Address(RVA = "0xE2F934", Offset = "0xE2F934", VA = "0xE2F934")]
	public void OnClick()
	{
	}

	[Token(Token = "0x600039E")]
	[Address(RVA = "0xE2F944", Offset = "0xE2F944", VA = "0xE2F944")]
	private void OnTrackingLost()
	{
	}

	[Token(Token = "0x60003A1")]
	[Address(RVA = "0xE2F6E8", Offset = "0xE2F6E8", VA = "0xE2F6E8")]
	private void Deactivate()
	{
	}

	[Token(Token = "0x60003A6")]
	[Address(RVA = "0xE2F9D4", Offset = "0xE2F9D4", VA = "0xE2F9D4")]
	public ARPeekButton()
	{
	}
}
[Token(Token = "0x20000A6")]
public class ArrowToBall : BallDecoration
{
	[Token(Token = "0x40002A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private CanvasGroup canvas;

	[Token(Token = "0x40002A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float fadeTime;

	[Token(Token = "0x40002A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public RectTransform arrow;

	[Token(Token = "0x40002A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Image arrowFill;

	[Token(Token = "0x60003AD")]
	[Address(RVA = "0xE2FB50", Offset = "0xE2FB50", VA = "0xE2FB50")]
	private void Start()
	{
	}

	[Token(Token = "0x60003AE")]
	[Address(RVA = "0xE2FBBC", Offset = "0xE2FBBC", VA = "0xE2FBBC")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60003AF")]
	[Address(RVA = "0xE30668", Offset = "0xE30668", VA = "0xE30668")]
	public ArrowToBall()
	{
	}
}
[Token(Token = "0x20000A7")]
public class AttachToVRNode : MonoBehaviour
{
	[Token(Token = "0x20000A8")]
	public enum AttachTo
	{
		[Token(Token = "0x40002BF")]
		activeHand,
		[Token(Token = "0x40002C0")]
		head,
		[Token(Token = "0x40002C1")]
		activeHandCustom,
		[Token(Token = "0x40002C2")]
		leftHandAim,
		[Token(Token = "0x40002C3")]
		rightHandAim
	}

	[Token(Token = "0x40002AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AttachTo attachTo;

	[Token(Token = "0x40002AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float attachStrength;

	[Token(Token = "0x40002AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3 offsetVR;

	[Token(Token = "0x40002AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Vector3 offsetAR;

	[Token(Token = "0x40002AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Transform targetTransform;

	[Token(Token = "0x40002AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool alignToHorizon;

	[Token(Token = "0x40002B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Transform trackingParent;

	[Token(Token = "0x40002B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Transform cachedLocalTransform;

	[Token(Token = "0x40002B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Transform targetOffset;

	[Token(Token = "0x40002B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Vector3 cachedTrackingParentLastFrame;

	[Token(Token = "0x40002B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Vector3 startingScale;

	[Token(Token = "0x40002B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private bool teleported;

	[Token(Token = "0x40002B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
	private bool onWarp;

	[Token(Token = "0x40002B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7A")]
	public bool godModeTracking;

	[Token(Token = "0x40002B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7B")]
	public bool scaling;

	[Token(Token = "0x40002B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public bool rotation;

	[Token(Token = "0x40002BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7D")]
	public bool keepAboveGround;

	[Token(Token = "0x40002BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7E")]
	private bool turnedOn;

	[Token(Token = "0x40002BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7F")]
	public bool flipXLeft;

	[Token(Token = "0x40002BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public bool snapOnActivate;

	[Token(Token = "0x60003B0")]
	[Address(RVA = "0xE30678", Offset = "0xE30678", VA = "0xE30678")]
	private void Start()
	{
	}

	[Token(Token = "0x60003B1")]
	[Address(RVA = "0xE308F0", Offset = "0xE308F0", VA = "0xE308F0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60003B2")]
	[Address(RVA = "0xE309D0", Offset = "0xE309D0", VA = "0xE309D0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60003B3")]
	[Address(RVA = "0xE30AA4", Offset = "0xE30AA4", VA = "0xE30AA4")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60003B4")]
	[Address(RVA = "0xE313F0", Offset = "0xE313F0", VA = "0xE313F0")]
	public void OnWarpComplete()
	{
	}

	[Token(Token = "0x60003B5")]
	[Address(RVA = "0xE313FC", Offset = "0xE313FC", VA = "0xE313FC")]
	public void ManualTeleportEvent()
	{
	}

	[Token(Token = "0x60003B6")]
	[Address(RVA = "0xE31408", Offset = "0xE31408", VA = "0xE31408")]
	public AttachToVRNode()
	{
	}
}
[Token(Token = "0x20000A9")]
public class AudioFadeOnSceneChange : MonoBehaviourPunCallbacks
{
	[Token(Token = "0x20000AA")]
	[CompilerGenerated]
	private sealed class <DoFadeIn>d__19 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40002D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40002D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40002D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioFadeOnSceneChange <>4__this;

		[Token(Token = "0x17000079")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60003C8")]
			[Address(RVA = "0xE31CC4", Offset = "0xE31CC4", VA = "0xE31CC4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700007A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60003CA")]
			[Address(RVA = "0xE31D0C", Offset = "0xE31D0C", VA = "0xE31D0C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60003C5")]
		[Address(RVA = "0xE31AD0", Offset = "0xE31AD0", VA = "0xE31AD0")]
		[DebuggerHidden]
		public <DoFadeIn>d__19(int <>1__state)
		{
		}

		[Token(Token = "0x60003C6")]
		[Address(RVA = "0xE31B54", Offset = "0xE31B54", VA = "0xE31B54", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60003C7")]
		[Address(RVA = "0xE31B58", Offset = "0xE31B58", VA = "0xE31B58", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60003C9")]
		[Address(RVA = "0xE31CCC", Offset = "0xE31CCC", VA = "0xE31CCC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000AB")]
	[CompilerGenerated]
	private sealed class <DoFadeOut>d__20 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40002D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40002D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40002D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioFadeOnSceneChange <>4__this;

		[Token(Token = "0x1700007B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60003CE")]
			[Address(RVA = "0xE31E38", Offset = "0xE31E38", VA = "0xE31E38", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700007C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60003D0")]
			[Address(RVA = "0xE31E80", Offset = "0xE31E80", VA = "0xE31E80", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60003CB")]
		[Address(RVA = "0xE31AF8", Offset = "0xE31AF8", VA = "0xE31AF8")]
		[DebuggerHidden]
		public <DoFadeOut>d__20(int <>1__state)
		{
		}

		[Token(Token = "0x60003CC")]
		[Address(RVA = "0xE31D14", Offset = "0xE31D14", VA = "0xE31D14", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60003CD")]
		[Address(RVA = "0xE31D18", Offset = "0xE31D18", VA = "0xE31D18", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60003CF")]
		[Address(RVA = "0xE31E40", Offset = "0xE31E40", VA = "0xE31E40", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40002C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float targetVolume;

	[Token(Token = "0x40002C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float defaultVolume;

	[Token(Token = "0x40002C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private AudioSource audioSource;

	[Token(Token = "0x40002C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float fadeTime;

	[Token(Token = "0x40002C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float multiplayerVolumeMultiplier;

	[Token(Token = "0x40002C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float volumeMultiplier;

	[Token(Token = "0x40002CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[HideInInspector]
	public float volume;

	[Token(Token = "0x40002CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Coroutine fadingCoroutine;

	[Token(Token = "0x40002CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool IsFading;

	[Token(Token = "0x40002CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	[HideInInspector]
	public bool setVolume;

	[Token(Token = "0x40002CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[HideInInspector]
	public MusicTrigger connectedMusicTrigger;

	[Token(Token = "0x40002CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[Tooltip("Instead of disabling the audio source with triggers, this is necessary when syncing animation")]
	public bool useMute;

	[Token(Token = "0x60003B7")]
	[Address(RVA = "0xE314A0", Offset = "0xE314A0", VA = "0xE314A0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60003B8")]
	[Address(RVA = "0xE31588", Offset = "0xE31588", VA = "0xE31588")]
	private void Start()
	{
	}

	[Token(Token = "0x60003B9")]
	[Address(RVA = "0xE317E8", Offset = "0xE317E8", VA = "0xE317E8", Slot = "28")]
	public override void OnEnable()
	{
	}

	[Token(Token = "0x60003BA")]
	[Address(RVA = "0xE318BC", Offset = "0xE318BC", VA = "0xE318BC", Slot = "29")]
	public override void OnDisable()
	{
	}

	[Token(Token = "0x60003BB")]
	[Address(RVA = "0xE31990", Offset = "0xE31990", VA = "0xE31990")]
	public void FadeOut()
	{
	}

	[Token(Token = "0x60003BC")]
	[Address(RVA = "0xE3178C", Offset = "0xE3178C", VA = "0xE3178C")]
	public void FadeIn()
	{
	}

	[Token(Token = "0x60003BD")]
	[Address(RVA = "0xE319EC", Offset = "0xE319EC", VA = "0xE319EC")]
	public void StopCurrentFade()
	{
	}

	[Token(Token = "0x60003BE")]
	[Address(RVA = "0xE31A68", Offset = "0xE31A68", VA = "0xE31A68")]
	[IteratorStateMachine(typeof(<DoFadeIn>d__19))]
	private IEnumerator DoFadeIn()
	{
		return null;
	}

	[Token(Token = "0x60003BF")]
	[Address(RVA = "0xE31A00", Offset = "0xE31A00", VA = "0xE31A00")]
	[IteratorStateMachine(typeof(<DoFadeOut>d__20))]
	private IEnumerator DoFadeOut()
	{
		return null;
	}

	[Token(Token = "0x60003C0")]
	[Address(RVA = "0xE31624", Offset = "0xE31624", VA = "0xE31624")]
	private void UpdateMasterLevels()
	{
	}

	[Token(Token = "0x60003C1")]
	[Address(RVA = "0xE31B20", Offset = "0xE31B20", VA = "0xE31B20", Slot = "41")]
	public override void OnJoinedRoom()
	{
	}

	[Token(Token = "0x60003C2")]
	[Address(RVA = "0xE31B24", Offset = "0xE31B24", VA = "0xE31B24", Slot = "42")]
	public override void OnPlayerEnteredRoom(Photon.Realtime.Player newPlayer)
	{
	}

	[Token(Token = "0x60003C3")]
	[Address(RVA = "0xE31B28", Offset = "0xE31B28", VA = "0xE31B28", Slot = "43")]
	public override void OnPlayerLeftRoom(Photon.Realtime.Player newPlayer)
	{
	}

	[Token(Token = "0x60003C4")]
	[Address(RVA = "0xE31B2C", Offset = "0xE31B2C", VA = "0xE31B2C")]
	public AudioFadeOnSceneChange()
	{
	}
}
[Token(Token = "0x20000AC")]
public class AudioHit : MonoBehaviour
{
	[Token(Token = "0x40002D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioSource audioSource;

	[Token(Token = "0x60003D1")]
	[Address(RVA = "0xE31E88", Offset = "0xE31E88", VA = "0xE31E88")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x60003D2")]
	[Address(RVA = "0xE31FCC", Offset = "0xE31FCC", VA = "0xE31FCC")]
	public AudioHit()
	{
	}
}
[Token(Token = "0x20000AD")]
[ExecuteInEditMode]
public class AvatarFlashlightsController : MonoBehaviour
{
	[Token(Token = "0x40002D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float flashlightRange;

	[Token(Token = "0x40002D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[Range(0f, 1f)]
	public float flashlightConeAngle;

	[Token(Token = "0x40002D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float flashlightIntensity;

	[Token(Token = "0x40002DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Color flashlightColor;

	[Token(Token = "0x40002DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform[] flashlightTransforms;

	[Token(Token = "0x60003D3")]
	[Address(RVA = "0xEEA534", Offset = "0xEEA534", VA = "0xEEA534")]
	private void Start()
	{
	}

	[Token(Token = "0x60003D4")]
	[Address(RVA = "0xEEA538", Offset = "0xEEA538", VA = "0xEEA538")]
	private void Update()
	{
	}

	[Token(Token = "0x60003D5")]
	[Address(RVA = "0xEEA78C", Offset = "0xEEA78C", VA = "0xEEA78C")]
	public AvatarFlashlightsController()
	{
	}
}
[Token(Token = "0x20000AE")]
public class Ball : MonoBehaviour
{
	[Token(Token = "0x20000AF")]
	[CompilerGenerated]
	private sealed class <RespawningSafety>d__229 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000332")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000333")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000334")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Ball <>4__this;

		[Token(Token = "0x1700009D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600044D")]
			[Address(RVA = "0xEF07C4", Offset = "0xEF07C4", VA = "0xEF07C4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700009E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600044F")]
			[Address(RVA = "0xEF080C", Offset = "0xEF080C", VA = "0xEF080C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600044A")]
		[Address(RVA = "0xEF0334", Offset = "0xEF0334", VA = "0xEF0334")]
		[DebuggerHidden]
		public <RespawningSafety>d__229(int <>1__state)
		{
		}

		[Token(Token = "0x600044B")]
		[Address(RVA = "0xEF070C", Offset = "0xEF070C", VA = "0xEF070C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600044C")]
		[Address(RVA = "0xEF0710", Offset = "0xEF0710", VA = "0xEF0710", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600044E")]
		[Address(RVA = "0xEF07CC", Offset = "0xEF07CC", VA = "0xEF07CC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000B0")]
	[CompilerGenerated]
	private sealed class <BallSplash>d__230 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000335")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000336")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000337")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Ball <>4__this;

		[Token(Token = "0x4000338")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GameObject <prefab>5__2;

		[Token(Token = "0x1700009F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000453")]
			[Address(RVA = "0xEF0A68", Offset = "0xEF0A68", VA = "0xEF0A68", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000A0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000455")]
			[Address(RVA = "0xEF0AB0", Offset = "0xEF0AB0", VA = "0xEF0AB0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000450")]
		[Address(RVA = "0xEF035C", Offset = "0xEF035C", VA = "0xEF035C")]
		[DebuggerHidden]
		public <BallSplash>d__230(int <>1__state)
		{
		}

		[Token(Token = "0x6000451")]
		[Address(RVA = "0xEF0814", Offset = "0xEF0814", VA = "0xEF0814", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000452")]
		[Address(RVA = "0xEF0818", Offset = "0xEF0818", VA = "0xEF0818", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000454")]
		[Address(RVA = "0xEF0A70", Offset = "0xEF0A70", VA = "0xEF0A70", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40002DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GolfItemLibrary golfItemLibrary;

	[Token(Token = "0x40002DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioClip putterHit;

	[Token(Token = "0x40002DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioClip waterHit;

	[Token(Token = "0x40002DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Material rollingMaterial;

	[Token(Token = "0x40002E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Material hitMaterial;

	[Token(Token = "0x40002E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	public float radius;

	[Token(Token = "0x40002E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float rollingTimer;

	[Token(Token = "0x40002E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private AudioSource rollingSound;

	[Token(Token = "0x40002E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private AudioSource hitSound;

	[Token(Token = "0x40002E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private string rollingSurfaceTag;

	[Token(Token = "0x40002E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Material defaultMaterial;

	[Token(Token = "0x40002E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public bool debugRolling;

	[Token(Token = "0x40002E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float volumeMultiplier;

	[Token(Token = "0x40002E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float surfaceDrag;

	[Token(Token = "0x40002EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private float ballLiveTimer;

	[Token(Token = "0x40002EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float ballReleaseTimer;

	[Token(Token = "0x40002EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public bool debugCollisions;

	[Token(Token = "0x40002F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Transform velocityDebugger;

	[Token(Token = "0x40002F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private int respawnCounter;

	[Token(Token = "0x40002F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private float puttTimer;

	[Token(Token = "0x40002F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private int waterTriggers;

	[Token(Token = "0x40002F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public string splashPrefab;

	[Token(Token = "0x40002F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public GameObject currentBallFx;

	[Token(Token = "0x40002F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private bool splashing;

	[Token(Token = "0x40002F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Transform rollingRef;

	[Token(Token = "0x40002F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private bool killBall;

	[Token(Token = "0x40002F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB9")]
	private bool isFrozen;

	[Token(Token = "0x40002FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private float frozenTimer;

	[Token(Token = "0x40002FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private bool wasFrozen;

	[Token(Token = "0x40002FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public GameObject iceCubeDisplayGeo;

	[Token(Token = "0x4000301")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private PhysicMaterial iceCubePhysicMaterial;

	[Token(Token = "0x4000308")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private BallPickup ballPickup;

	[Token(Token = "0x400030F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x125")]
	public bool hideForRange;

	[Token(Token = "0x4000315")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
	private Quaternion respawnRotation;

	[Token(Token = "0x4000317")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public Vector3 respawnGravity;

	[Token(Token = "0x400031D")]
	public const float distanceForBallMarkerPlacement = 0.021f;

	[Token(Token = "0x400031E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
	[Space(10f)]
	[Header("Resting plane check settings")]
	public float checkRestingPlaneDistance;

	[Token(Token = "0x400031F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public LayerMask restingPlaneLayerMask;

	[Token(Token = "0x4000320")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
	[HideInInspector]
	public bool respawning;

	[Token(Token = "0x4000321")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private Vector3 cachedPosition;

	[Token(Token = "0x4000322")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
	private Quaternion cachedRotation;

	[Token(Token = "0x4000323")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
	private float pushedByMovingObjectTimer;

	[Token(Token = "0x4000324")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	private float lastPushTimer;

	[Token(Token = "0x4000325")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A4")]
	private float undoTimer;

	[Token(Token = "0x4000326")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	private Hole respawnHole;

	[Token(Token = "0x4000328")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B1")]
	[HideInInspector]
	public bool doNotEndPutt;

	[Token(Token = "0x4000329")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B4")]
	public LayerMask layersToCheck;

	[Token(Token = "0x400032A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	private string[] ballRestTags;

	[Token(Token = "0x400032B")]
	private const float BALLYKILLPLANE = -32f;

	[Token(Token = "0x400032C")]
	private const float BALLSPEEDBOUNCETHRESHOLD = 0.3f;

	[Token(Token = "0x400032D")]
	private const float BALLFASTBOUNCETHRESHOLD = 0.2f;

	[Token(Token = "0x400032E")]
	private const float BALLSLOWBOUNCETHRESHOLD = 0.01f;

	[Token(Token = "0x400032F")]
	private const float BALLINCUPBOUNCETHRESHOLD = 0.3f;

	[Token(Token = "0x4000330")]
	private const float ISMOVINGHORIZONTALVELOCITYCUTOFF = 0.002f;

	[Token(Token = "0x4000331")]
	private const float ROLLINGSOUNDTIMEOUTTIME = 0.2f;

	[Token(Token = "0x1700007D")]
	public static Ball instance
	{
		[Token(Token = "0x60003DC")]
		[Address(RVA = "0xEEAD20", Offset = "0xEEAD20", VA = "0xEEAD20")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x60003DD")]
		[Address(RVA = "0xEEAD78", Offset = "0xEEAD78", VA = "0xEEAD78")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x1700007E")]
	public Rigidbody rb
	{
		[Token(Token = "0x60003DE")]
		[Address(RVA = "0xEEADD4", Offset = "0xEEADD4", VA = "0xEEADD4")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x60003DF")]
		[Address(RVA = "0xEEADDC", Offset = "0xEEADDC", VA = "0xEEADDC")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x1700007F")]
	public Collider ballCollider
	{
		[Token(Token = "0x60003E0")]
		[Address(RVA = "0xEEADE4", Offset = "0xEEADE4", VA = "0xEEADE4")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x60003E1")]
		[Address(RVA = "0xEEADEC", Offset = "0xEEADEC", VA = "0xEEADEC")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000080")]
	public BoxCollider iceCubeCollider
	{
		[Token(Token = "0x60003E2")]
		[Address(RVA = "0xEEADF4", Offset = "0xEEADF4", VA = "0xEEADF4")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x60003E3")]
		[Address(RVA = "0xEEADFC", Offset = "0xEEADFC", VA = "0xEEADFC")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000081")]
	public Renderer rend
	{
		[Token(Token = "0x60003E4")]
		[Address(RVA = "0xEEAE04", Offset = "0xEEAE04", VA = "0xEEAE04")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x60003E5")]
		[Address(RVA = "0xEEAE0C", Offset = "0xEEAE0C", VA = "0xEEAE0C")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000082")]
	public GameObject marker
	{
		[Token(Token = "0x60003E6")]
		[Address(RVA = "0xEEAE14", Offset = "0xEEAE14", VA = "0xEEAE14")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x60003E7")]
		[Address(RVA = "0xEEAE1C", Offset = "0xEEAE1C", VA = "0xEEAE1C")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000083")]
	public InPlaySurface inPlaySurface
	{
		[Token(Token = "0x60003E8")]
		[Address(RVA = "0xEEAE24", Offset = "0xEEAE24", VA = "0xEEAE24")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x60003E9")]
		[Address(RVA = "0xEEAE2C", Offset = "0xEEAE2C", VA = "0xEEAE2C")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000084")]
	public bool inheritMovingObjectVelocity
	{
		[Token(Token = "0x60003EA")]
		[Address(RVA = "0xEEAE34", Offset = "0xEEAE34", VA = "0xEEAE34")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60003EB")]
		[Address(RVA = "0xEEAE3C", Offset = "0xEEAE3C", VA = "0xEEAE3C")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x17000085")]
	public bool fakeMovingObjectRolling
	{
		[Token(Token = "0x60003EC")]
		[Address(RVA = "0xEEAE48", Offset = "0xEEAE48", VA = "0xEEAE48")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60003ED")]
		[Address(RVA = "0xEEAE50", Offset = "0xEEAE50", VA = "0xEEAE50")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x17000086")]
	public bool raytraceOffGround
	{
		[Token(Token = "0x60003EE")]
		[Address(RVA = "0xEEAE5C", Offset = "0xEEAE5C", VA = "0xEEAE5C")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60003EF")]
		[Address(RVA = "0xEEAE64", Offset = "0xEEAE64", VA = "0xEEAE64")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x17000087")]
	public bool myTurn
	{
		[Token(Token = "0x60003F0")]
		[Address(RVA = "0xEEAE70", Offset = "0xEEAE70", VA = "0xEEAE70")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60003F1")]
		[Address(RVA = "0xEEAE78", Offset = "0xEEAE78", VA = "0xEEAE78")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x17000088")]
	public bool readyToHit
	{
		[Token(Token = "0x60003F2")]
		[Address(RVA = "0xEEAE84", Offset = "0xEEAE84", VA = "0xEEAE84")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60003F3")]
		[Address(RVA = "0xEEAE8C", Offset = "0xEEAE8C", VA = "0xEEAE8C")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x17000089")]
	public bool strokeReset
	{
		[Token(Token = "0x60003F4")]
		[Address(RVA = "0xEEAE98", Offset = "0xEEAE98", VA = "0xEEAE98")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60003F5")]
		[Address(RVA = "0xEEAEA0", Offset = "0xEEAEA0", VA = "0xEEAEA0")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x1700008A")]
	public int ballCollisionLayers
	{
		[Token(Token = "0x60003F6")]
		[Address(RVA = "0xEEAEAC", Offset = "0xEEAEAC", VA = "0xEEAEAC")]
		[CompilerGenerated]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60003F7")]
		[Address(RVA = "0xEEAEB4", Offset = "0xEEAEB4", VA = "0xEEAEB4")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x1700008B")]
	public int chosenBallInt
	{
		[Token(Token = "0x60003F8")]
		[Address(RVA = "0xEEAEBC", Offset = "0xEEAEBC", VA = "0xEEAEBC")]
		[CompilerGenerated]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60003F9")]
		[Address(RVA = "0xEEAEC4", Offset = "0xEEAEC4", VA = "0xEEAEC4")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x1700008C")]
	public bool inHand
	{
		[Token(Token = "0x60003FA")]
		[Address(RVA = "0xEEAECC", Offset = "0xEEAECC", VA = "0xEEAECC")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60003FB")]
		[Address(RVA = "0xEEAED4", Offset = "0xEEAED4", VA = "0xEEAED4")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x1700008D")]
	public bool inHole
	{
		[Token(Token = "0x60003FC")]
		[Address(RVA = "0xEEAEE0", Offset = "0xEEAEE0", VA = "0xEEAEE0")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60003FD")]
		[Address(RVA = "0xEEAEE8", Offset = "0xEEAEE8", VA = "0xEEAEE8")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x1700008E")]
	public float inHoleTimer
	{
		[Token(Token = "0x60003FE")]
		[Address(RVA = "0xEEAEF4", Offset = "0xEEAEF4", VA = "0xEEAEF4")]
		[CompilerGenerated]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60003FF")]
		[Address(RVA = "0xEEAEFC", Offset = "0xEEAEFC", VA = "0xEEAEFC")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x1700008F")]
	public bool isMoving
	{
		[Token(Token = "0x6000400")]
		[Address(RVA = "0xEEAF04", Offset = "0xEEAF04", VA = "0xEEAF04")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000401")]
		[Address(RVA = "0xEEAF0C", Offset = "0xEEAF0C", VA = "0xEEAF0C")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000090")]
	public bool inPipe
	{
		[Token(Token = "0x6000402")]
		[Address(RVA = "0xEEAF18", Offset = "0xEEAF18", VA = "0xEEAF18")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000403")]
		[Address(RVA = "0xEEAF20", Offset = "0xEEAF20", VA = "0xEEAF20")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x17000091")]
	public Vector3 respawnPosition
	{
		[Token(Token = "0x6000404")]
		[Address(RVA = "0xEEAF2C", Offset = "0xEEAF2C", VA = "0xEEAF2C")]
		[CompilerGenerated]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x6000405")]
		[Address(RVA = "0xEEAF3C", Offset = "0xEEAF3C", VA = "0xEEAF3C")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x17000092")]
	public Vector3 respawnVelocity
	{
		[Token(Token = "0x6000406")]
		[Address(RVA = "0xEEAF4C", Offset = "0xEEAF4C", VA = "0xEEAF4C")]
		[CompilerGenerated]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x6000407")]
		[Address(RVA = "0xEEAF5C", Offset = "0xEEAF5C", VA = "0xEEAF5C")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000093")]
	public float horizontalVelocity
	{
		[Token(Token = "0x6000408")]
		[Address(RVA = "0xEEAF6C", Offset = "0xEEAF6C", VA = "0xEEAF6C")]
		[CompilerGenerated]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000409")]
		[Address(RVA = "0xEEAF74", Offset = "0xEEAF74", VA = "0xEEAF74")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000094")]
	public bool raycastBallInPlay
	{
		[Token(Token = "0x600040A")]
		[Address(RVA = "0xEEAF7C", Offset = "0xEEAF7C", VA = "0xEEAF7C")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600040B")]
		[Address(RVA = "0xEEAF84", Offset = "0xEEAF84", VA = "0xEEAF84")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000095")]
	public bool raycastBallRolling
	{
		[Token(Token = "0x600040C")]
		[Address(RVA = "0xEEAF90", Offset = "0xEEAF90", VA = "0xEEAF90")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600040D")]
		[Address(RVA = "0xEEAF98", Offset = "0xEEAF98", VA = "0xEEAF98")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000096")]
	public float warpTimer
	{
		[Token(Token = "0x600040E")]
		[Address(RVA = "0xEEAFA4", Offset = "0xEEAFA4", VA = "0xEEAFA4")]
		[CompilerGenerated]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600040F")]
		[Address(RVA = "0xEEAFAC", Offset = "0xEEAFAC", VA = "0xEEAFAC")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000097")]
	public bool isActive
	{
		[Token(Token = "0x6000410")]
		[Address(RVA = "0xEEAFB4", Offset = "0xEEAFB4", VA = "0xEEAFB4")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000411")]
		[Address(RVA = "0xEEAFBC", Offset = "0xEEAFBC", VA = "0xEEAFBC")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000098")]
	public bool HandBehindHead
	{
		[Token(Token = "0x6000412")]
		[Address(RVA = "0xEEAFC8", Offset = "0xEEAFC8", VA = "0xEEAFC8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000099")]
	public Transform head
	{
		[Token(Token = "0x6000413")]
		[Address(RVA = "0xEEB150", Offset = "0xEEB150", VA = "0xEEB150")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700009A")]
	public Transform activeHand
	{
		[Token(Token = "0x6000414")]
		[Address(RVA = "0xEEB030", Offset = "0xEEB030", VA = "0xEEB030")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700009B")]
	public bool releaseTimer
	{
		[Token(Token = "0x6000415")]
		[Address(RVA = "0xEEB1A4", Offset = "0xEEB1A4", VA = "0xEEB1A4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700009C")]
	public bool throwing
	{
		[Token(Token = "0x6000416")]
		[Address(RVA = "0xEEB1B4", Offset = "0xEEB1B4", VA = "0xEEB1B4")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000417")]
		[Address(RVA = "0xEEB1BC", Offset = "0xEEB1BC", VA = "0xEEB1BC")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x1400000E")]
	public static event Action onUndoStroke
	{
		[Token(Token = "0x60003D6")]
		[Address(RVA = "0xEEA800", Offset = "0xEEA800", VA = "0xEEA800")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60003D7")]
		[Address(RVA = "0xEEA8D8", Offset = "0xEEA8D8", VA = "0xEEA8D8")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x1400000F")]
	public static event Action OnBallPickedUp
	{
		[Token(Token = "0x60003D8")]
		[Address(RVA = "0xEEA9B0", Offset = "0xEEA9B0", VA = "0xEEA9B0")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60003D9")]
		[Address(RVA = "0xEEAA8C", Offset = "0xEEAA8C", VA = "0xEEAA8C")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000010")]
	public static event Action OnBallPickupReleased
	{
		[Token(Token = "0x60003DA")]
		[Address(RVA = "0xEEAB68", Offset = "0xEEAB68", VA = "0xEEAB68")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60003DB")]
		[Address(RVA = "0xEEAC44", Offset = "0xEEAC44", VA = "0xEEAC44")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6000418")]
	[Address(RVA = "0xEEB1C8", Offset = "0xEEB1C8", VA = "0xEEB1C8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000419")]
	[Address(RVA = "0xEEB3DC", Offset = "0xEEB3DC", VA = "0xEEB3DC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600041A")]
	[Address(RVA = "0xEEB6A0", Offset = "0xEEB6A0", VA = "0xEEB6A0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600041B")]
	[Address(RVA = "0xEEB8A8", Offset = "0xEEB8A8", VA = "0xEEB8A8")]
	private void Start()
	{
	}

	[Token(Token = "0x600041C")]
	[Address(RVA = "0xEEC008", Offset = "0xEEC008", VA = "0xEEC008")]
	private void Update()
	{
	}

	[Token(Token = "0x600041D")]
	[Address(RVA = "0xEEC584", Offset = "0xEEC584", VA = "0xEEC584")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x600041E")]
	[Address(RVA = "0xEECD68", Offset = "0xEECD68", VA = "0xEECD68")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600041F")]
	[Address(RVA = "0xEECE88", Offset = "0xEECE88", VA = "0xEECE88")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000420")]
	[Address(RVA = "0xEECF30", Offset = "0xEECF30", VA = "0xEECF30")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000421")]
	[Address(RVA = "0xEEBEB0", Offset = "0xEEBEB0", VA = "0xEEBEB0")]
	private void CreateBallPickup()
	{
	}

	[Token(Token = "0x6000422")]
	[Address(RVA = "0xEEB9E4", Offset = "0xEEB9E4", VA = "0xEEB9E4")]
	private void UpdateCollisionLayers()
	{
	}

	[Token(Token = "0x6000423")]
	[Address(RVA = "0xEEC174", Offset = "0xEEC174", VA = "0xEEC174")]
	private void MyTurnUpdate()
	{
	}

	[Token(Token = "0x6000424")]
	[Address(RVA = "0xEEC4D4", Offset = "0xEEC4D4", VA = "0xEEC4D4")]
	private void SpectatorTurnUpdate()
	{
	}

	[Token(Token = "0x6000425")]
	[Address(RVA = "0xEED9A0", Offset = "0xEED9A0", VA = "0xEED9A0")]
	private void KillPlaneCheck()
	{
	}

	[Token(Token = "0x6000426")]
	[Address(RVA = "0xEEDA54", Offset = "0xEEDA54", VA = "0xEEDA54")]
	private void TimeoutCheck()
	{
	}

	[Token(Token = "0x6000427")]
	[Address(RVA = "0xEEE1FC", Offset = "0xEEE1FC", VA = "0xEEE1FC")]
	private void BallInPlayCheck()
	{
	}

	[Token(Token = "0x6000428")]
	[Address(RVA = "0xEEDAFC", Offset = "0xEEDAFC", VA = "0xEEDAFC")]
	private void UpdateHorizontalVelocity()
	{
	}

	[Token(Token = "0x6000429")]
	[Address(RVA = "0xEEDD50", Offset = "0xEEDD50", VA = "0xEEDD50")]
	private void UpdateDrag()
	{
	}

	[Token(Token = "0x600042A")]
	[Address(RVA = "0xEEDDAC", Offset = "0xEEDDAC", VA = "0xEEDDAC")]
	private void UpdateBounceThreshold()
	{
	}

	[Token(Token = "0x600042B")]
	[Address(RVA = "0xEEE0F8", Offset = "0xEEE0F8", VA = "0xEEE0F8")]
	private void UpdateRollSurfaceSound()
	{
	}

	[Token(Token = "0x600042C")]
	[Address(RVA = "0xEEE7C4", Offset = "0xEEE7C4", VA = "0xEEE7C4")]
	private void ProcessInHole()
	{
	}

	[Token(Token = "0x600042D")]
	[Address(RVA = "0xEED0B0", Offset = "0xEED0B0", VA = "0xEED0B0")]
	private void ProcessRolling(Vector3 normal, Surface surface)
	{
	}

	[Token(Token = "0x600042E")]
	[Address(RVA = "0xEEECB0", Offset = "0xEEECB0", VA = "0xEEECB0")]
	private void ProcessIceCubePhysics()
	{
	}

	[Token(Token = "0x600042F")]
	[Address(RVA = "0xEEC618", Offset = "0xEEC618", VA = "0xEEC618")]
	private void InheritMovingObjectVelocity()
	{
	}

	[Token(Token = "0x6000430")]
	[Address(RVA = "0xEECB14", Offset = "0xEECB14", VA = "0xEECB14")]
	private void BallRaytraceOffOfFloor()
	{
	}

	[Token(Token = "0x6000431")]
	[Address(RVA = "0xEEC034", Offset = "0xEEC034", VA = "0xEEC034")]
	private void CheckForUndo()
	{
	}

	[Token(Token = "0x6000432")]
	[Address(RVA = "0xEEF6FC", Offset = "0xEEF6FC", VA = "0xEEF6FC")]
	public void UndoStroke()
	{
	}

	[Token(Token = "0x6000433")]
	[Address(RVA = "0xEEF7CC", Offset = "0xEEF7CC", VA = "0xEEF7CC")]
	public void UndoStroke(bool allowed)
	{
	}

	[Token(Token = "0x6000434")]
	[Address(RVA = "0xEEF980", Offset = "0xEEF980", VA = "0xEEF980")]
	public void OnBallPickup()
	{
	}

	[Token(Token = "0x6000435")]
	[Address(RVA = "0xEEFC7C", Offset = "0xEEFC7C", VA = "0xEEFC7C")]
	public void OnBallPickupRelease()
	{
	}

	[Token(Token = "0x6000436")]
	[Address(RVA = "0xEEFE00", Offset = "0xEEFE00", VA = "0xEEFE00")]
	private void ThrowEndCheck()
	{
	}

	[Token(Token = "0x6000437")]
	[Address(RVA = "0xEEE830", Offset = "0xEEE830", VA = "0xEEE830")]
	private void SetBallActiveState(bool activate)
	{
	}

	[Token(Token = "0x6000438")]
	[Address(RVA = "0xEEFE8C", Offset = "0xEEFE8C", VA = "0xEEFE8C")]
	private void GetSurfaceRestingNormalCallback(Vector3 newDirection, float closestDistance)
	{
	}

	[Token(Token = "0x6000439")]
	[Address(RVA = "0xEEFFA4", Offset = "0xEEFFA4", VA = "0xEEFFA4")]
	public void KillBall()
	{
	}

	[Token(Token = "0x600043A")]
	[Address(RVA = "0xEF005C", Offset = "0xEF005C", VA = "0xEF005C")]
	public void ResetPutterAndBallValues()
	{
	}

	[Token(Token = "0x600043B")]
	[Address(RVA = "0xEEFA54", Offset = "0xEEFA54", VA = "0xEEFA54")]
	private void OnPuttOrPickupBall()
	{
	}

	[Token(Token = "0x600043C")]
	[Address(RVA = "0xEF0060", Offset = "0xEF0060", VA = "0xEF0060")]
	public void FreezeBall(bool freeze)
	{
	}

	[Token(Token = "0x600043D")]
	[Address(RVA = "0xEF00B8", Offset = "0xEF00B8", VA = "0xEF00B8")]
	public void EnableColliders()
	{
	}

	[Token(Token = "0x600043E")]
	[Address(RVA = "0xEF019C", Offset = "0xEF019C", VA = "0xEF019C")]
	public void DisableColliders()
	{
	}

	[Token(Token = "0x600043F")]
	[Address(RVA = "0xEF01D4", Offset = "0xEF01D4", VA = "0xEF01D4")]
	public void SetBallKeepAlive(float time)
	{
	}

	[Token(Token = "0x6000440")]
	[Address(RVA = "0xEEF4E8", Offset = "0xEEF4E8", VA = "0xEEF4E8")]
	public void ResetWarpTimer()
	{
	}

	[Token(Token = "0x6000441")]
	[Address(RVA = "0xEEBA68", Offset = "0xEEBA68", VA = "0xEEBA68")]
	private void ChooseBall()
	{
	}

	[Token(Token = "0x6000442")]
	[Address(RVA = "0xEF01DC", Offset = "0xEF01DC", VA = "0xEF01DC")]
	private void TurnOffLightProbes(Transform target)
	{
	}

	[Token(Token = "0x6000443")]
	[Address(RVA = "0xEF02B0", Offset = "0xEF02B0", VA = "0xEF02B0")]
	public void RespawnBall(Vector3 newRespawnPosition, Vector3 newRespawnGravity)
	{
	}

	[Token(Token = "0x6000444")]
	[Address(RVA = "0xEEEF24", Offset = "0xEEEF24", VA = "0xEEEF24")]
	public void RespawnBall()
	{
	}

	[Token(Token = "0x6000445")]
	[Address(RVA = "0xEF02CC", Offset = "0xEF02CC", VA = "0xEF02CC")]
	[IteratorStateMachine(typeof(<RespawningSafety>d__229))]
	private IEnumerator RespawningSafety()
	{
		return null;
	}

	[Token(Token = "0x6000446")]
	[Address(RVA = "0xEECE20", Offset = "0xEECE20", VA = "0xEECE20")]
	[IteratorStateMachine(typeof(<BallSplash>d__230))]
	private IEnumerator BallSplash()
	{
		return null;
	}

	[Token(Token = "0x6000447")]
	[Address(RVA = "0xEEF4F0", Offset = "0xEEF4F0", VA = "0xEEF4F0")]
	private void PlayHitSound(Surface surface, float volume)
	{
	}

	[Token(Token = "0x6000448")]
	[Address(RVA = "0xEF0384", Offset = "0xEF0384", VA = "0xEF0384")]
	public Ball()
	{
	}
}
[Token(Token = "0x20000B2")]
public class BallAddStrokes : CompoundTrigger
{
	[Token(Token = "0x20000B3")]
	[CompilerGenerated]
	private sealed class <ReactivateTrigger>d__17 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000345")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000346")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000347")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BallAddStrokes <>4__this;

		[Token(Token = "0x170000A1")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000466")]
			[Address(RVA = "0xEF15A4", Offset = "0xEF15A4", VA = "0xEF15A4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000A2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000468")]
			[Address(RVA = "0xEF15EC", Offset = "0xEF15EC", VA = "0xEF15EC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000463")]
		[Address(RVA = "0xEF1424", Offset = "0xEF1424", VA = "0xEF1424")]
		[DebuggerHidden]
		public <ReactivateTrigger>d__17(int <>1__state)
		{
		}

		[Token(Token = "0x6000464")]
		[Address(RVA = "0xEF14E8", Offset = "0xEF14E8", VA = "0xEF14E8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000465")]
		[Address(RVA = "0xEF14EC", Offset = "0xEF14EC", VA = "0xEF14EC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000467")]
		[Address(RVA = "0xEF15AC", Offset = "0xEF15AC", VA = "0xEF15AC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000B4")]
	[CompilerGenerated]
	private sealed class <DestroyPhotonPrefab>d__18 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000348")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000349")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400034A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BallAddStrokes <>4__this;

		[Token(Token = "0x400034B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject prefab;

		[Token(Token = "0x170000A3")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600046C")]
			[Address(RVA = "0xEF16D4", Offset = "0xEF16D4", VA = "0xEF16D4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000A4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600046E")]
			[Address(RVA = "0xEF171C", Offset = "0xEF171C", VA = "0xEF171C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000469")]
		[Address(RVA = "0xEF144C", Offset = "0xEF144C", VA = "0xEF144C")]
		[DebuggerHidden]
		public <DestroyPhotonPrefab>d__18(int <>1__state)
		{
		}

		[Token(Token = "0x600046A")]
		[Address(RVA = "0xEF15F4", Offset = "0xEF15F4", VA = "0xEF15F4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600046B")]
		[Address(RVA = "0xEF15F8", Offset = "0xEF15F8", VA = "0xEF15F8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600046D")]
		[Address(RVA = "0xEF16DC", Offset = "0xEF16DC", VA = "0xEF16DC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400033A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int strokesToAdd;

	[Token(Token = "0x400033B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Hole hole;

	[Token(Token = "0x400033C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool triggered;

	[Token(Token = "0x400033D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	public bool resetOnPuttComplete;

	[Token(Token = "0x400033E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject[] activeUntilTriggeredObjects;

	[Token(Token = "0x400033F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public string photonInstantiatePrefab;

	[Token(Token = "0x4000340")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float photonDestroyTimer;

	[Token(Token = "0x4000341")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public int minStrokes;

	[Token(Token = "0x4000342")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float triggerReactivationDelay;

	[Token(Token = "0x4000343")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public bool limitOneTriggerPerTurn;

	[Token(Token = "0x4000344")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool triggeredGlobal;

	[Token(Token = "0x600045A")]
	[Address(RVA = "0xEF0B2C", Offset = "0xEF0B2C", VA = "0xEF0B2C")]
	private new void OnEnable()
	{
	}

	[Token(Token = "0x600045B")]
	[Address(RVA = "0xEF0D44", Offset = "0xEF0D44", VA = "0xEF0D44")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600045C")]
	[Address(RVA = "0xEF0DE8", Offset = "0xEF0DE8", VA = "0xEF0DE8")]
	private void Start()
	{
	}

	[Token(Token = "0x600045D")]
	[Address(RVA = "0xEF0F24", Offset = "0xEF0F24", VA = "0xEF0F24", Slot = "4")]
	protected override void OnCompoundTriggerEnter()
	{
	}

	[Token(Token = "0x600045E")]
	[Address(RVA = "0xEF1360", Offset = "0xEF1360", VA = "0xEF1360")]
	private void OnPuttComplete()
	{
	}

	[Token(Token = "0x600045F")]
	[Address(RVA = "0xEF13BC", Offset = "0xEF13BC", VA = "0xEF13BC")]
	private void Reset()
	{
	}

	[Token(Token = "0x6000460")]
	[Address(RVA = "0xEF1284", Offset = "0xEF1284", VA = "0xEF1284")]
	[IteratorStateMachine(typeof(<ReactivateTrigger>d__17))]
	private IEnumerator ReactivateTrigger()
	{
		return null;
	}

	[Token(Token = "0x6000461")]
	[Address(RVA = "0xEF12EC", Offset = "0xEF12EC", VA = "0xEF12EC")]
	[IteratorStateMachine(typeof(<DestroyPhotonPrefab>d__18))]
	private IEnumerator DestroyPhotonPrefab(GameObject prefab)
	{
		return null;
	}

	[Token(Token = "0x6000462")]
	[Address(RVA = "0xEF1474", Offset = "0xEF1474", VA = "0xEF1474")]
	public BallAddStrokes()
	{
	}
}
[Token(Token = "0x20000B5")]
public class BallBouncinessTrigger : CompoundTrigger
{
	[Token(Token = "0x400034C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float defaultValue;

	[Token(Token = "0x400034D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float defaultValueIceCube;

	[Token(Token = "0x400034E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float bounciness;

	[Token(Token = "0x600046F")]
	[Address(RVA = "0xEF1724", Offset = "0xEF1724", VA = "0xEF1724")]
	private void Start()
	{
	}

	[Token(Token = "0x6000470")]
	[Address(RVA = "0xEF183C", Offset = "0xEF183C", VA = "0xEF183C", Slot = "4")]
	protected override void OnCompoundTriggerEnter()
	{
	}

	[Token(Token = "0x6000471")]
	[Address(RVA = "0xEF1948", Offset = "0xEF1948", VA = "0xEF1948", Slot = "5")]
	protected override void OnCompoundTriggerExit()
	{
	}

	[Token(Token = "0x6000472")]
	[Address(RVA = "0xEF1A54", Offset = "0xEF1A54", VA = "0xEF1A54")]
	public BallBouncinessTrigger()
	{
	}
}
[Token(Token = "0x20000B6")]
public class BallCatcher : CompoundTrigger
{
	[Token(Token = "0x400034F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AudioSource audioSource;

	[Token(Token = "0x6000473")]
	[Address(RVA = "0xEF1A68", Offset = "0xEF1A68", VA = "0xEF1A68")]
	private void Start()
	{
	}

	[Token(Token = "0x6000474")]
	[Address(RVA = "0xEF1A6C", Offset = "0xEF1A6C", VA = "0xEF1A6C", Slot = "4")]
	protected override void OnCompoundTriggerEnter()
	{
	}

	[Token(Token = "0x6000475")]
	[Address(RVA = "0xEF1B58", Offset = "0xEF1B58", VA = "0xEF1B58", Slot = "5")]
	protected override void OnCompoundTriggerExit()
	{
	}

	[Token(Token = "0x6000476")]
	[Address(RVA = "0xEF1BDC", Offset = "0xEF1BDC", VA = "0xEF1BDC")]
	public BallCatcher()
	{
	}
}
[Token(Token = "0x20000B7")]
public class BallConstantForce : CompoundTrigger
{
	[Token(Token = "0x4000350")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public Vector3 force;

	[Token(Token = "0x4000351")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform attractionPoint;

	[Token(Token = "0x4000352")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool invertToRepulsion;

	[Token(Token = "0x4000353")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float falloffStart;

	[Token(Token = "0x4000354")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float falloffEnd;

	[Token(Token = "0x6000477")]
	[Address(RVA = "0xEF1BE4", Offset = "0xEF1BE4", VA = "0xEF1BE4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000478")]
	[Address(RVA = "0xEF1BE8", Offset = "0xEF1BE8", VA = "0xEF1BE8")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000479")]
	[Address(RVA = "0xEF20A8", Offset = "0xEF20A8", VA = "0xEF20A8")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x600047A")]
	[Address(RVA = "0xEF218C", Offset = "0xEF218C", VA = "0xEF218C")]
	public BallConstantForce()
	{
	}
}
[Token(Token = "0x20000B8")]
public class BallDecoration : MonoBehaviour
{
	[Token(Token = "0x4000355")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public bool activeBall;

	[Token(Token = "0x600047B")]
	[Address(RVA = "0xEF21FC", Offset = "0xEF21FC", VA = "0xEF21FC")]
	protected Vector3 GetActiveBallPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x600047C")]
	[Address(RVA = "0xEF2500", Offset = "0xEF2500", VA = "0xEF2500")]
	public BallDecoration()
	{
	}
}
[Token(Token = "0x20000B9")]
public class BallInPipe : CompoundTrigger
{
	[Token(Token = "0x20000BA")]
	[CompilerGenerated]
	private sealed class <TeleportBall>d__15 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000361")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000362")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000363")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BallInPipe <>4__this;

		[Token(Token = "0x4000364")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 <cachedVelocity>5__2;

		[Token(Token = "0x4000365")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <i>5__3;

		[Token(Token = "0x170000A5")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600048B")]
			[Address(RVA = "0xEF3278", Offset = "0xEF3278", VA = "0xEF3278", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000A6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600048D")]
			[Address(RVA = "0xEF32C0", Offset = "0xEF32C0", VA = "0xEF32C0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000488")]
		[Address(RVA = "0xEF28F4", Offset = "0xEF28F4", VA = "0xEF28F4")]
		[DebuggerHidden]
		public <TeleportBall>d__15(int <>1__state)
		{
		}

		[Token(Token = "0x6000489")]
		[Address(RVA = "0xEF2C78", Offset = "0xEF2C78", VA = "0xEF2C78", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600048A")]
		[Address(RVA = "0xEF2C7C", Offset = "0xEF2C7C", VA = "0xEF2C7C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600048C")]
		[Address(RVA = "0xEF3280", Offset = "0xEF3280", VA = "0xEF3280", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000356")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform destination;

	[Token(Token = "0x4000357")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float delay;

	[Token(Token = "0x4000358")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private bool teleporting;

	[Token(Token = "0x4000359")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Tooltip("speedBoost is applied in the +Z axis of the destination transform")]
	public float speedBoost;

	[Token(Token = "0x400035A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[Tooltip("Helps generate variety in the exit velocities.")]
	public float randomDirection;

	[Token(Token = "0x400035B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[Tooltip("This zeroes out the velocity at the time of the warp. True along with randomDirection = 0 should yield near-identical results every time.")]
	public bool removeIncomingVelocity;

	[Token(Token = "0x400035C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Coroutine coroutine;

	[Token(Token = "0x400035D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[Tooltip("This will teleport the ball as soon as it touches the trigger.")]
	public bool warpInstantly;

	[Token(Token = "0x400035E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public AudioClip rollingSound;

	[Token(Token = "0x400035F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float volumeMultiplier;

	[Token(Token = "0x4000360")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private AudioSource rollingAudioSource;

	[Token(Token = "0x600047D")]
	[Address(RVA = "0xEF2510", Offset = "0xEF2510", VA = "0xEF2510")]
	private new void OnEnable()
	{
	}

	[Token(Token = "0x600047E")]
	[Address(RVA = "0xEF25B8", Offset = "0xEF25B8", VA = "0xEF25B8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600047F")]
	[Address(RVA = "0xEF2658", Offset = "0xEF2658", VA = "0xEF2658")]
	private void Start()
	{
	}

	[Token(Token = "0x6000480")]
	[Address(RVA = "0xEF27CC", Offset = "0xEF27CC", VA = "0xEF27CC", Slot = "4")]
	protected override void OnCompoundTriggerEnter()
	{
	}

	[Token(Token = "0x6000481")]
	[Address(RVA = "0xEF288C", Offset = "0xEF288C", VA = "0xEF288C")]
	[IteratorStateMachine(typeof(<TeleportBall>d__15))]
	private IEnumerator TeleportBall()
	{
		return null;
	}

	[Token(Token = "0x6000482")]
	[Address(RVA = "0xEF291C", Offset = "0xEF291C", VA = "0xEF291C")]
	private void OnStrokeUndo()
	{
	}

	[Token(Token = "0x6000483")]
	[Address(RVA = "0xEF2670", Offset = "0xEF2670", VA = "0xEF2670")]
	private void InitializeAudio()
	{
	}

	[Token(Token = "0x6000484")]
	[Address(RVA = "0xEF2A7C", Offset = "0xEF2A7C", VA = "0xEF2A7C")]
	private void PlayAudio()
	{
	}

	[Token(Token = "0x6000485")]
	[Address(RVA = "0xEF29DC", Offset = "0xEF29DC", VA = "0xEF29DC")]
	private void StopAudio()
	{
	}

	[Token(Token = "0x6000486")]
	[Address(RVA = "0xEF2B1C", Offset = "0xEF2B1C", VA = "0xEF2B1C")]
	private void MoveAudio(float lerpValue)
	{
	}

	[Token(Token = "0x6000487")]
	[Address(RVA = "0xEF2C5C", Offset = "0xEF2C5C", VA = "0xEF2C5C")]
	public BallInPipe()
	{
	}
}
[Token(Token = "0x20000BB")]
public class BallKiller : CompoundTrigger
{
	[Token(Token = "0x600048E")]
	[Address(RVA = "0xEF32C8", Offset = "0xEF32C8", VA = "0xEF32C8")]
	private void Start()
	{
	}

	[Token(Token = "0x600048F")]
	[Address(RVA = "0xEF32CC", Offset = "0xEF32CC", VA = "0xEF32CC", Slot = "4")]
	protected override void OnCompoundTriggerEnter()
	{
	}

	[Token(Token = "0x6000490")]
	[Address(RVA = "0xEF335C", Offset = "0xEF335C", VA = "0xEF335C")]
	public BallKiller()
	{
	}
}
[Token(Token = "0x20000BC")]
public class BallLibrary : MonoBehaviour
{
	[Token(Token = "0x20000BD")]
	[CompilerGenerated]
	private sealed class <Start>d__1 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000367")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000368")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000369")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BallLibrary <>4__this;

		[Token(Token = "0x400036A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <childCount>5__2;

		[Token(Token = "0x400036B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int <i>5__3;

		[Token(Token = "0x170000A7")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000497")]
			[Address(RVA = "0xEF361C", Offset = "0xEF361C", VA = "0xEF361C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000A8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000499")]
			[Address(RVA = "0xEF3664", Offset = "0xEF3664", VA = "0xEF3664", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000494")]
		[Address(RVA = "0xEF33CC", Offset = "0xEF33CC", VA = "0xEF33CC")]
		[DebuggerHidden]
		public <Start>d__1(int <>1__state)
		{
		}

		[Token(Token = "0x6000495")]
		[Address(RVA = "0xEF3454", Offset = "0xEF3454", VA = "0xEF3454", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000496")]
		[Address(RVA = "0xEF3458", Offset = "0xEF3458", VA = "0xEF3458", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000498")]
		[Address(RVA = "0xEF3624", Offset = "0xEF3624", VA = "0xEF3624", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000366")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ObjectLibrary<GameObject> library;

	[Token(Token = "0x6000491")]
	[Address(RVA = "0xEF3364", Offset = "0xEF3364", VA = "0xEF3364")]
	[IteratorStateMachine(typeof(<Start>d__1))]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000492")]
	[Address(RVA = "0xEF33F4", Offset = "0xEF33F4", VA = "0xEF33F4")]
	public GameObject GetBall(string ballID)
	{
		return null;
	}

	[Token(Token = "0x6000493")]
	[Address(RVA = "0xEF344C", Offset = "0xEF344C", VA = "0xEF344C")]
	public BallLibrary()
	{
	}
}
[Token(Token = "0x20000BE")]
public class BallLocator : BallDecoration
{
	[Token(Token = "0x400036C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform root;

	[Token(Token = "0x400036D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform arRing;

	[Token(Token = "0x400036E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Space(10f)]
	[Header("Direction Update Settings")]
	public float checkRestingPlaneDistance;

	[Token(Token = "0x400036F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public LayerMask layerMask;

	[Token(Token = "0x4000370")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float sizeMultiplier;

	[Token(Token = "0x4000371")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Vector3 previousPosition;

	[Token(Token = "0x4000372")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static BallLocator instance;

	[Token(Token = "0x4000373")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool showBallLocator;

	[Token(Token = "0x4000374")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Vector3 direction;

	[Token(Token = "0x4000375")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Coroutine directionCheckCoroutine;

	[Token(Token = "0x4000376")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool checkingRestingPlane;

	[Token(Token = "0x600049A")]
	[Address(RVA = "0xEF366C", Offset = "0xEF366C", VA = "0xEF366C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600049B")]
	[Address(RVA = "0xEF36B8", Offset = "0xEF36B8", VA = "0xEF36B8")]
	private void Start()
	{
	}

	[Token(Token = "0x600049C")]
	[Address(RVA = "0xEF380C", Offset = "0xEF380C", VA = "0xEF380C")]
	private void Update()
	{
	}

	[Token(Token = "0x600049D")]
	[Address(RVA = "0xEF3E88", Offset = "0xEF3E88", VA = "0xEF3E88")]
	private void UpdateFacingDirection(Vector3 target)
	{
	}

	[Token(Token = "0x600049E")]
	[Address(RVA = "0xEF31FC", Offset = "0xEF31FC", VA = "0xEF31FC")]
	public void UpdateBallLocator()
	{
	}

	[Token(Token = "0x600049F")]
	[Address(RVA = "0xEF31F4", Offset = "0xEF31F4", VA = "0xEF31F4")]
	public void HideBallLocator()
	{
	}

	[Token(Token = "0x60004A0")]
	[Address(RVA = "0xEF41D8", Offset = "0xEF41D8", VA = "0xEF41D8")]
	public BallLocator()
	{
	}
}
[Token(Token = "0x20000BF")]
public class BallMakeActive : MonoBehaviour, IInteractable
{
	[Token(Token = "0x4000377")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Rigidbody Rigidbody;

	[Token(Token = "0x4000378")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform ballMesh;

	[Token(Token = "0x4000379")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float updateInterval;

	[Token(Token = "0x400037B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public int thisBall;

	[Token(Token = "0x400037C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int currentUpdateTick;

	[Token(Token = "0x400037D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool selected;

	[Token(Token = "0x400037E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Collider coll;

	[Token(Token = "0x400037F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector3 selectedPosition;

	[Token(Token = "0x170000A9")]
	public float maxInteractionDistance
	{
		[Token(Token = "0x60004A2")]
		[Address(RVA = "0xEF4268", Offset = "0xEF4268", VA = "0xEF4268", Slot = "4")]
		[CompilerGenerated]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60004A3")]
		[Address(RVA = "0xEF4270", Offset = "0xEF4270", VA = "0xEF4270", Slot = "5")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x60004A4")]
	[Address(RVA = "0xEF4278", Offset = "0xEF4278", VA = "0xEF4278")]
	public void Awake()
	{
	}

	[Token(Token = "0x60004A5")]
	[Address(RVA = "0xEF434C", Offset = "0xEF434C", VA = "0xEF434C")]
	public void Init()
	{
	}

	[Token(Token = "0x60004A6")]
	[Address(RVA = "0xEF4418", Offset = "0xEF4418", VA = "0xEF4418")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60004A7")]
	[Address(RVA = "0xEF44E4", Offset = "0xEF44E4", VA = "0xEF44E4", Slot = "7")]
	public void OnClick()
	{
	}

	[Token(Token = "0x60004A8")]
	[Address(RVA = "0xEF47DC", Offset = "0xEF47DC", VA = "0xEF47DC", Slot = "6")]
	public void OnHoover()
	{
	}

	[Token(Token = "0x60004A9")]
	[Address(RVA = "0xEF47E0", Offset = "0xEF47E0", VA = "0xEF47E0", Slot = "8")]
	public void OnRelease()
	{
	}

	[Token(Token = "0x60004AA")]
	[Address(RVA = "0xEF47E4", Offset = "0xEF47E4", VA = "0xEF47E4")]
	public void SelectionChangeEvent()
	{
	}

	[Token(Token = "0x60004AB")]
	[Address(RVA = "0xEF494C", Offset = "0xEF494C", VA = "0xEF494C")]
	public void Update()
	{
	}

	[Token(Token = "0x60004AC")]
	[Address(RVA = "0xEF4E3C", Offset = "0xEF4E3C", VA = "0xEF4E3C")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x60004AD")]
	[Address(RVA = "0xEF4FD8", Offset = "0xEF4FD8", VA = "0xEF4FD8")]
	public void SavePosition()
	{
	}

	[Token(Token = "0x60004AE")]
	[Address(RVA = "0xEF50BC", Offset = "0xEF50BC", VA = "0xEF50BC")]
	public Vector3 GetPosition(Vector3 defaultPosition)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60004AF")]
	[Address(RVA = "0xEF4664", Offset = "0xEF4664", VA = "0xEF4664")]
	public void BallChangeAnalyticsEvent()
	{
	}

	[Token(Token = "0x60004B0")]
	[Address(RVA = "0xEF51B8", Offset = "0xEF51B8", VA = "0xEF51B8")]
	public BallMakeActive()
	{
	}
}
[Token(Token = "0x20000C0")]
public class BallMovingObjectHelper : CompoundTrigger
{
	[Token(Token = "0x4000380")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
	[Tooltip("Do an extra raytrace process to keep the ball from falling through a moving platform. This is expensive, ONLY use it when the ball is riding on a top of a moving object.")]
	public bool raytraceOffGround;

	[Token(Token = "0x4000381")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x33")]
	public bool fakeMovingObjectRolling;

	[Token(Token = "0x60004B1")]
	[Address(RVA = "0xEF5228", Offset = "0xEF5228", VA = "0xEF5228")]
	private void Start()
	{
	}

	[Token(Token = "0x60004B2")]
	[Address(RVA = "0xEF5340", Offset = "0xEF5340", VA = "0xEF5340", Slot = "4")]
	protected override void OnCompoundTriggerEnter()
	{
	}

	[Token(Token = "0x60004B3")]
	[Address(RVA = "0xEF5460", Offset = "0xEF5460", VA = "0xEF5460", Slot = "5")]
	protected override void OnCompoundTriggerExit()
	{
	}

	[Token(Token = "0x60004B4")]
	[Address(RVA = "0xEF5570", Offset = "0xEF5570", VA = "0xEF5570")]
	public BallMovingObjectHelper()
	{
	}
}
[Token(Token = "0x20000C1")]
public class BallPickup : MonoBehaviour, IInteractable
{
	[Token(Token = "0x20000C2")]
	[CompilerGenerated]
	private sealed class <PickupBallAnimation>d__50 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000390")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000391")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000392")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BallPickup <>4__this;

		[Token(Token = "0x4000393")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float duration;

		[Token(Token = "0x4000394")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Vector3 <pickup>5__2;

		[Token(Token = "0x4000395")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float <time>5__3;

		[Token(Token = "0x170000B6")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60004E6")]
			[Address(RVA = "0xEF6C7C", Offset = "0xEF6C7C", VA = "0xEF6C7C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B7")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60004E8")]
			[Address(RVA = "0xEF6CC4", Offset = "0xEF6CC4", VA = "0xEF6CC4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60004E3")]
		[Address(RVA = "0xEF64FC", Offset = "0xEF64FC", VA = "0xEF64FC")]
		[DebuggerHidden]
		public <PickupBallAnimation>d__50(int <>1__state)
		{
		}

		[Token(Token = "0x60004E4")]
		[Address(RVA = "0xEF6A54", Offset = "0xEF6A54", VA = "0xEF6A54", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60004E5")]
		[Address(RVA = "0xEF6A58", Offset = "0xEF6A58", VA = "0xEF6A58", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60004E7")]
		[Address(RVA = "0xEF6C84", Offset = "0xEF6C84", VA = "0xEF6C84", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000C3")]
	[CompilerGenerated]
	private sealed class <Reload>d__52 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000396")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000397")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000398")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BallPickup <>4__this;

		[Token(Token = "0x170000B8")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60004EC")]
			[Address(RVA = "0xEF6D80", Offset = "0xEF6D80", VA = "0xEF6D80", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B9")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60004EE")]
			[Address(RVA = "0xEF6DC8", Offset = "0xEF6DC8", VA = "0xEF6DC8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60004E9")]
		[Address(RVA = "0xEF6630", Offset = "0xEF6630", VA = "0xEF6630")]
		[DebuggerHidden]
		public <Reload>d__52(int <>1__state)
		{
		}

		[Token(Token = "0x60004EA")]
		[Address(RVA = "0xEF6CCC", Offset = "0xEF6CCC", VA = "0xEF6CCC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60004EB")]
		[Address(RVA = "0xEF6CD0", Offset = "0xEF6CD0", VA = "0xEF6CD0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60004ED")]
		[Address(RVA = "0xEF6D88", Offset = "0xEF6D88", VA = "0xEF6D88", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000388")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector3[] ballVelocityCache;

	[Token(Token = "0x4000389")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int ballVelocityCacheCounter;

	[Token(Token = "0x400038A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private Vector3 previousBallPosition;

	[Token(Token = "0x400038C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public AnimationCurve EaseInOut;

	[Token(Token = "0x400038D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float boost;

	[Token(Token = "0x400038E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public int velocitySamples;

	[Token(Token = "0x170000AA")]
	public Ball ball
	{
		[Token(Token = "0x60004B9")]
		[Address(RVA = "0xEF56B8", Offset = "0xEF56B8", VA = "0xEF56B8")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x60004BA")]
		[Address(RVA = "0xEF56C0", Offset = "0xEF56C0", VA = "0xEF56C0")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x170000AB")]
	public BallPose ballPose
	{
		[Token(Token = "0x60004BB")]
		[Address(RVA = "0xEF56C8", Offset = "0xEF56C8", VA = "0xEF56C8")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x60004BC")]
		[Address(RVA = "0xEF56D0", Offset = "0xEF56D0", VA = "0xEF56D0")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x170000AC")]
	public SphereCollider pickupCollider
	{
		[Token(Token = "0x60004BD")]
		[Address(RVA = "0xEF56D8", Offset = "0xEF56D8", VA = "0xEF56D8")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x60004BE")]
		[Address(RVA = "0xEF56E0", Offset = "0xEF56E0", VA = "0xEF56E0")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x170000AD")]
	public Transform grip
	{
		[Token(Token = "0x60004BF")]
		[Address(RVA = "0xEF56E8", Offset = "0xEF56E8", VA = "0xEF56E8")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x60004C0")]
		[Address(RVA = "0xEF56F0", Offset = "0xEF56F0", VA = "0xEF56F0")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x170000AE")]
	public float maxInteractionDistance
	{
		[Token(Token = "0x60004C1")]
		[Address(RVA = "0xEF56F8", Offset = "0xEF56F8", VA = "0xEF56F8", Slot = "4")]
		[CompilerGenerated]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60004C2")]
		[Address(RVA = "0xEF5700", Offset = "0xEF5700", VA = "0xEF5700", Slot = "5")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x170000AF")]
	public bool isOn
	{
		[Token(Token = "0x60004C3")]
		[Address(RVA = "0xEF5708", Offset = "0xEF5708", VA = "0xEF5708")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60004C4")]
		[Address(RVA = "0xEF5710", Offset = "0xEF5710", VA = "0xEF5710")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x170000B0")]
	public bool HandBehindHead
	{
		[Token(Token = "0x60004D8")]
		[Address(RVA = "0xEF5FCC", Offset = "0xEF5FCC", VA = "0xEF5FCC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000B1")]
	public Transform activeHand
	{
		[Token(Token = "0x60004D9")]
		[Address(RVA = "0xEF6364", Offset = "0xEF6364", VA = "0xEF6364")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000B2")]
	public Transform head
	{
		[Token(Token = "0x60004DA")]
		[Address(RVA = "0xEF6814", Offset = "0xEF6814", VA = "0xEF6814")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000B3")]
	private bool isVR
	{
		[Token(Token = "0x60004DB")]
		[Address(RVA = "0xEF5990", Offset = "0xEF5990", VA = "0xEF5990")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000B4")]
	public bool ThumbStickDown
	{
		[Token(Token = "0x60004DC")]
		[Address(RVA = "0xEF6034", Offset = "0xEF6034", VA = "0xEF6034")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000B5")]
	public bool ThumbStickUp
	{
		[Token(Token = "0x60004DD")]
		[Address(RVA = "0xEF5F38", Offset = "0xEF5F38", VA = "0xEF5F38")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x14000011")]
	public event Action OnPickupBall
	{
		[Token(Token = "0x60004B5")]
		[Address(RVA = "0xEED814", Offset = "0xEED814", VA = "0xEED814")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60004B6")]
		[Address(RVA = "0xEF5580", Offset = "0xEF5580", VA = "0xEF5580")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000012")]
	public event Action OnReleaseBall
	{
		[Token(Token = "0x60004B7")]
		[Address(RVA = "0xEED8B0", Offset = "0xEED8B0", VA = "0xEED8B0")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60004B8")]
		[Address(RVA = "0xEF561C", Offset = "0xEF561C", VA = "0xEF561C")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x60004C5")]
	[Address(RVA = "0xEED770", Offset = "0xEED770", VA = "0xEED770")]
	public void SetBall(Ball _ball)
	{
	}

	[Token(Token = "0x60004C6")]
	[Address(RVA = "0xEF571C", Offset = "0xEF571C", VA = "0xEF571C")]
	private void Settings()
	{
	}

	[Token(Token = "0x60004C7")]
	[Address(RVA = "0xEF5864", Offset = "0xEF5864", VA = "0xEF5864")]
	private void CreateCollider()
	{
	}

	[Token(Token = "0x60004C8")]
	[Address(RVA = "0xEF57D8", Offset = "0xEF57D8", VA = "0xEF57D8")]
	private void CreateGrip()
	{
	}

	[Token(Token = "0x60004C9")]
	[Address(RVA = "0xEED94C", Offset = "0xEED94C", VA = "0xEED94C")]
	public void TurnOn()
	{
	}

	[Token(Token = "0x60004CA")]
	[Address(RVA = "0xEF5ADC", Offset = "0xEF5ADC", VA = "0xEF5ADC")]
	public void TurnOff()
	{
	}

	[Token(Token = "0x60004CB")]
	[Address(RVA = "0xEEF5A8", Offset = "0xEEF5A8", VA = "0xEEF5A8")]
	public void Cancel()
	{
	}

	[Token(Token = "0x60004CC")]
	[Address(RVA = "0xEF5B74", Offset = "0xEF5B74", VA = "0xEF5B74")]
	private void Update()
	{
	}

	[Token(Token = "0x60004CD")]
	[Address(RVA = "0xEF5A90", Offset = "0xEF5A90", VA = "0xEF5A90")]
	private void TrackBall()
	{
	}

	[Token(Token = "0x60004CE")]
	[Address(RVA = "0xEF6098", Offset = "0xEF6098", VA = "0xEF6098")]
	private void OnAutoPickup()
	{
	}

	[Token(Token = "0x60004CF")]
	[Address(RVA = "0xEF6260", Offset = "0xEF6260", VA = "0xEF6260", Slot = "6")]
	public void OnHoover()
	{
	}

	[Token(Token = "0x60004D0")]
	[Address(RVA = "0xEF6264", Offset = "0xEF6264", VA = "0xEF6264", Slot = "7")]
	public void OnClick()
	{
	}

	[Token(Token = "0x60004D1")]
	[Address(RVA = "0xEF5F9C", Offset = "0xEF5F9C", VA = "0xEF5F9C", Slot = "8")]
	public void OnRelease()
	{
	}

	[Token(Token = "0x60004D2")]
	[Address(RVA = "0xEF60CC", Offset = "0xEF60CC", VA = "0xEF60CC")]
	private void PickupBall(bool animate = true)
	{
	}

	[Token(Token = "0x60004D3")]
	[Address(RVA = "0xEF6484", Offset = "0xEF6484", VA = "0xEF6484")]
	[IteratorStateMachine(typeof(<PickupBallAnimation>d__50))]
	private IEnumerator PickupBallAnimation(float duration = 0.3f)
	{
		return null;
	}

	[Token(Token = "0x60004D4")]
	[Address(RVA = "0xEF6298", Offset = "0xEF6298", VA = "0xEF6298")]
	private void ReleaseBall()
	{
	}

	[Token(Token = "0x60004D5")]
	[Address(RVA = "0xEF65C8", Offset = "0xEF65C8", VA = "0xEF65C8")]
	[IteratorStateMachine(typeof(<Reload>d__52))]
	private IEnumerator Reload()
	{
		return null;
	}

	[Token(Token = "0x60004D6")]
	[Address(RVA = "0xEF6524", Offset = "0xEF6524", VA = "0xEF6524")]
	private void ThrowBall()
	{
	}

	[Token(Token = "0x60004D7")]
	[Address(RVA = "0xEF6730", Offset = "0xEF6730", VA = "0xEF6730")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60004DE")]
	[Address(RVA = "0xEF5A8C", Offset = "0xEF5A8C", VA = "0xEF5A8C")]
	private void SetParent(Transform child, Transform parent)
	{
	}

	[Token(Token = "0x60004DF")]
	[Address(RVA = "0xEF5D0C", Offset = "0xEF5D0C", VA = "0xEF5D0C")]
	private void CacheVelocity()
	{
	}

	[Token(Token = "0x60004E0")]
	[Address(RVA = "0xEF58E8", Offset = "0xEF58E8", VA = "0xEF58E8")]
	private void ClearVelocityCache()
	{
	}

	[Token(Token = "0x60004E1")]
	[Address(RVA = "0xEF667C", Offset = "0xEF667C", VA = "0xEF667C")]
	private Vector3 GetAverageVelocity()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60004E2")]
	[Address(RVA = "0xEF6868", Offset = "0xEF6868", VA = "0xEF6868")]
	public BallPickup()
	{
	}
}
[Token(Token = "0x20000C5")]
public class BallPose
{
	[Token(Token = "0x400039C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Vector3 p;

	[Token(Token = "0x400039D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Quaternion r;

	[Token(Token = "0x400039E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform target;

	[Token(Token = "0x400039F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform parent;

	[Token(Token = "0x60004F3")]
	[Address(RVA = "0xEF5A60", Offset = "0xEF5A60", VA = "0xEF5A60")]
	public BallPose(Transform _target)
	{
	}

	[Token(Token = "0x60004F4")]
	[Address(RVA = "0xEF630C", Offset = "0xEF630C", VA = "0xEF630C")]
	public void Record()
	{
	}

	[Token(Token = "0x60004F5")]
	[Address(RVA = "0xEF5B20", Offset = "0xEF5B20", VA = "0xEF5B20")]
	public void Restore()
	{
	}

	[Token(Token = "0x60004F6")]
	[Address(RVA = "0xEF6658", Offset = "0xEF6658", VA = "0xEF6658")]
	public void RestoreParent()
	{
	}
}
[Token(Token = "0x20000C6")]
public class BallSelection : MonoBehaviour, IProfileActivatedHandler, IProfileHandler, IProfileDeactivatedHandler, IProfilesChangedHandler
{
	[Token(Token = "0x20000C7")]
	public delegate void BallSelected();

	[Token(Token = "0x20000C8")]
	[CompilerGenerated]
	private sealed class <Start>d__17 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40003AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40003AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40003AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BallSelection <>4__this;

		[Token(Token = "0x170000BA")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600050E")]
			[Address(RVA = "0xEF8020", Offset = "0xEF8020", VA = "0xEF8020", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000BB")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000510")]
			[Address(RVA = "0xEF8068", Offset = "0xEF8068", VA = "0xEF8068", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600050B")]
		[Address(RVA = "0xEF6EF8", Offset = "0xEF6EF8", VA = "0xEF6EF8")]
		[DebuggerHidden]
		public <Start>d__17(int <>1__state)
		{
		}

		[Token(Token = "0x600050C")]
		[Address(RVA = "0xEF7FC4", Offset = "0xEF7FC4", VA = "0xEF7FC4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600050D")]
		[Address(RVA = "0xEF7FC8", Offset = "0xEF7FC8", VA = "0xEF7FC8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600050F")]
		[Address(RVA = "0xEF8028", Offset = "0xEF8028", VA = "0xEF8028", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40003A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int activeBall;

	[Token(Token = "0x40003A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static BallSelection instance;

	[Token(Token = "0x40003A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int ballsInRow;

	[Token(Token = "0x40003A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject menuBall;

	[Token(Token = "0x40003A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform pipeSpawnPosition;

	[Token(Token = "0x40003A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<GameObject> spawnInPipeList;

	[Token(Token = "0x40003A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private bool resetOnLoad;

	[Token(Token = "0x40003A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float coolDown;

	[Token(Token = "0x40003A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float pipeSpawnDelay;

	[Token(Token = "0x40003AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private List<BallMakeActive> makeBallActiveList;

	[Token(Token = "0x40003AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int currentTotalBallsDisplayed;

	[Token(Token = "0x40003AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private bool initialLoad;

	[Token(Token = "0x14000013")]
	public static event BallSelected OnBallSelected
	{
		[Token(Token = "0x60004F7")]
		[Address(RVA = "0xEEB5E4", Offset = "0xEEB5E4", VA = "0xEEB5E4")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60004F8")]
		[Address(RVA = "0xEEB7EC", Offset = "0xEEB7EC", VA = "0xEEB7EC")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x60004F9")]
	[Address(RVA = "0xEF6E44", Offset = "0xEF6E44", VA = "0xEF6E44")]
	private void Awake()
	{
	}

	[Token(Token = "0x60004FA")]
	[Address(RVA = "0xEF6E90", Offset = "0xEF6E90", VA = "0xEF6E90")]
	[IteratorStateMachine(typeof(<Start>d__17))]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x60004FB")]
	[Address(RVA = "0xEF6F20", Offset = "0xEF6F20", VA = "0xEF6F20")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60004FC")]
	[Address(RVA = "0xEF6F78", Offset = "0xEF6F78", VA = "0xEF6F78")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60004FD")]
	[Address(RVA = "0xEF6FD0", Offset = "0xEF6FD0", VA = "0xEF6FD0")]
	private void Update()
	{
	}

	[Token(Token = "0x60004FE")]
	[Address(RVA = "0xEF70B8", Offset = "0xEF70B8", VA = "0xEF70B8", Slot = "4")]
	public void OnProfileActivated(ProfileData profile)
	{
	}

	[Token(Token = "0x60004FF")]
	[Address(RVA = "0xEF7190", Offset = "0xEF7190", VA = "0xEF7190", Slot = "5")]
	public void OnProfileDeactivate(ProfileData profile)
	{
	}

	[Token(Token = "0x6000500")]
	[Address(RVA = "0xEF72D8", Offset = "0xEF72D8", VA = "0xEF72D8", Slot = "6")]
	public void OnProfilesChanged(ProfileData[] profiles)
	{
	}

	[Token(Token = "0x6000501")]
	[Address(RVA = "0xEF7464", Offset = "0xEF7464", VA = "0xEF7464")]
	private void Cleanup()
	{
	}

	[Token(Token = "0x6000502")]
	[Address(RVA = "0xEF7658", Offset = "0xEF7658", VA = "0xEF7658")]
	private void Generate()
	{
	}

	[Token(Token = "0x6000503")]
	[Address(RVA = "0xEF4554", Offset = "0xEF4554", VA = "0xEF4554")]
	public void MakeActive(int newBall)
	{
	}

	[Token(Token = "0x6000504")]
	[Address(RVA = "0xEF4CA8", Offset = "0xEF4CA8", VA = "0xEF4CA8")]
	public void SpawnInPipe(GameObject ball)
	{
	}

	[Token(Token = "0x6000505")]
	[Address(RVA = "0xEF7E9C", Offset = "0xEF7E9C", VA = "0xEF7E9C")]
	public BallSelection()
	{
	}
}
[Token(Token = "0x20000C9")]
public class BallShadow : BallDecoration
{
	[Token(Token = "0x40003B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SpriteRenderer ballShadow;

	[Token(Token = "0x6000511")]
	[Address(RVA = "0xEF8070", Offset = "0xEF8070", VA = "0xEF8070")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000512")]
	[Address(RVA = "0xEF845C", Offset = "0xEF845C", VA = "0xEF845C")]
	public BallShadow()
	{
	}
}
[Token(Token = "0x20000CA")]
public class BallSwitch : CompoundTrigger, ISwitchable
{
	[Token(Token = "0x40003B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public SwitchableContainer[] switchOn;

	[Token(Token = "0x40003B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool startOn;

	[Token(Token = "0x40003B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	public bool toggleable;

	[Token(Token = "0x40003B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float toggleDelay;

	[Token(Token = "0x40003B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float toggleTimer;

	[Token(Token = "0x40003B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[FormerlySerializedAs("switchOffDelay")]
	public float switchDelay;

	[Token(Token = "0x40003B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float switchTimer;

	[Token(Token = "0x40003B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private bool switchedOn;

	[Token(Token = "0x40003B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Hole hole;

	[Token(Token = "0x40003BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public AudioClip switchOnSound;

	[Token(Token = "0x40003BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public AudioClip switchOffSound;

	[Token(Token = "0x6000513")]
	[Address(RVA = "0xEF846C", Offset = "0xEF846C", VA = "0xEF846C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000514")]
	[Address(RVA = "0xEF8528", Offset = "0xEF8528", VA = "0xEF8528")]
	private void SetupAudio()
	{
	}

	[Token(Token = "0x6000515")]
	[Address(RVA = "0xEF8738", Offset = "0xEF8738", VA = "0xEF8738")]
	private void Update()
	{
	}

	[Token(Token = "0x6000516")]
	[Address(RVA = "0xEF87AC", Offset = "0xEF87AC", VA = "0xEF87AC", Slot = "4")]
	protected override void OnCompoundTriggerEnter()
	{
	}

	[Token(Token = "0x6000517")]
	[Address(RVA = "0xEF88AC", Offset = "0xEF88AC", VA = "0xEF88AC", Slot = "5")]
	protected override void OnCompoundTriggerExit()
	{
	}

	[Token(Token = "0x6000518")]
	[Address(RVA = "0xEF88B0", Offset = "0xEF88B0", VA = "0xEF88B0")]
	private void SwitchStartFast()
	{
	}

	[Token(Token = "0x6000519")]
	[Address(RVA = "0xEF8510", Offset = "0xEF8510", VA = "0xEF8510")]
	private void SwitchStart()
	{
	}

	[Token(Token = "0x600051A")]
	[Address(RVA = "0xEF88C8", Offset = "0xEF88C8", VA = "0xEF88C8", Slot = "6")]
	public void Reset(bool fastSwitch = false)
	{
	}

	[Token(Token = "0x600051B")]
	[Address(RVA = "0xEF88E0", Offset = "0xEF88E0", VA = "0xEF88E0", Slot = "7")]
	public void Toggle(bool fastSwitch = false)
	{
	}

	[Token(Token = "0x600051C")]
	[Address(RVA = "0xEF8898", Offset = "0xEF8898", VA = "0xEF8898", Slot = "8")]
	public void Switch(bool newActiveState, bool fastSwitch = false)
	{
	}

	[Token(Token = "0x600051D")]
	[Address(RVA = "0xEF88F8", Offset = "0xEF88F8", VA = "0xEF88F8", Slot = "9")]
	[ContextMenu("Switch On")]
	public void SwitchOn(bool fastSwitch = false)
	{
	}

	[Token(Token = "0x600051E")]
	[Address(RVA = "0xEF8AF0", Offset = "0xEF8AF0", VA = "0xEF8AF0", Slot = "10")]
	[ContextMenu("Switch Off")]
	public void SwitchOff(bool fastSwitch = false)
	{
	}

	[Token(Token = "0x600051F")]
	[Address(RVA = "0xEF8CE4", Offset = "0xEF8CE4", VA = "0xEF8CE4", Slot = "11")]
	public bool GetSwitchState()
	{
		return default(bool);
	}

	[Token(Token = "0x6000520")]
	[Address(RVA = "0xEF8CEC", Offset = "0xEF8CEC", VA = "0xEF8CEC", Slot = "12")]
	public Hole GetHole()
	{
		return null;
	}

	[Token(Token = "0x6000521")]
	[Address(RVA = "0xEF8CF4", Offset = "0xEF8CF4", VA = "0xEF8CF4")]
	public BallSwitch()
	{
	}
}
[Token(Token = "0x20000CB")]
public class BallTrail : BallDecoration
{
	[Token(Token = "0x40003BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private TrailRenderer trail;

	[Token(Token = "0x40003BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 previousPosition;

	[Token(Token = "0x40003BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float previousHorizontalVelocity;

	[Token(Token = "0x40003BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static BallTrail instance;

	[Token(Token = "0x40003C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool showTrail;

	[Token(Token = "0x40003C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	public bool isActiveBallTrail;

	[Token(Token = "0x40003C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Vector3 ballPosition;

	[Token(Token = "0x40003C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool clearFlag;

	[Token(Token = "0x40003C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private int stopCount;

	[Token(Token = "0x6000522")]
	[Address(RVA = "0xEF8D0C", Offset = "0xEF8D0C", VA = "0xEF8D0C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000523")]
	[Address(RVA = "0xEF8D60", Offset = "0xEF8D60", VA = "0xEF8D60")]
	private void Start()
	{
	}

	[Token(Token = "0x6000524")]
	[Address(RVA = "0xEF8E50", Offset = "0xEF8E50", VA = "0xEF8E50")]
	private void Update()
	{
	}

	[Token(Token = "0x6000525")]
	[Address(RVA = "0xEF8DD4", Offset = "0xEF8DD4", VA = "0xEF8DD4")]
	public void UpdateBallTrail()
	{
	}

	[Token(Token = "0x6000526")]
	[Address(RVA = "0xEF9104", Offset = "0xEF9104", VA = "0xEF9104")]
	public BallTrail()
	{
	}
}
[Token(Token = "0x20000CC")]
public class BallTriggerEnable : MonoBehaviour
{
	[Token(Token = "0x20000CD")]
	[CompilerGenerated]
	private sealed class <EnableTrigger>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40003C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40003C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40003CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BallTriggerEnable <>4__this;

		[Token(Token = "0x170000BC")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600052D")]
			[Address(RVA = "0xEF944C", Offset = "0xEF944C", VA = "0xEF944C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000BD")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600052F")]
			[Address(RVA = "0xEF9494", Offset = "0xEF9494", VA = "0xEF9494", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600052A")]
		[Address(RVA = "0xEF92B4", Offset = "0xEF92B4", VA = "0xEF92B4")]
		[DebuggerHidden]
		public <EnableTrigger>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x600052B")]
		[Address(RVA = "0xEF92EC", Offset = "0xEF92EC", VA = "0xEF92EC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600052C")]
		[Address(RVA = "0xEF92F0", Offset = "0xEF92F0", VA = "0xEF92F0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600052E")]
		[Address(RVA = "0xEF9454", Offset = "0xEF9454", VA = "0xEF9454", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40003C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float enableDuration;

	[Token(Token = "0x40003C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject[] enableOnTrigger;

	[Token(Token = "0x40003C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool triggered;

	[Token(Token = "0x6000527")]
	[Address(RVA = "0xEF9120", Offset = "0xEF9120", VA = "0xEF9120")]
	private void OnTriggerEnter(Collider coll)
	{
	}

	[Token(Token = "0x6000528")]
	[Address(RVA = "0xEF924C", Offset = "0xEF924C", VA = "0xEF924C")]
	[IteratorStateMachine(typeof(<EnableTrigger>d__4))]
	private IEnumerator EnableTrigger()
	{
		return null;
	}

	[Token(Token = "0x6000529")]
	[Address(RVA = "0xEF92DC", Offset = "0xEF92DC", VA = "0xEF92DC")]
	public BallTriggerEnable()
	{
	}
}
[Token(Token = "0x20000CE")]
public class Boost : MonoBehaviour
{
	[Token(Token = "0x40003CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private CanvasGroup canvas;

	[Token(Token = "0x40003CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject buttonArm;

	[Token(Token = "0x40003CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject button2x;

	[Token(Token = "0x6000530")]
	[Address(RVA = "0xEF949C", Offset = "0xEF949C", VA = "0xEF949C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000531")]
	[Address(RVA = "0xEF9540", Offset = "0xEF9540", VA = "0xEF9540")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000532")]
	[Address(RVA = "0xEF95E4", Offset = "0xEF95E4", VA = "0xEF95E4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000533")]
	[Address(RVA = "0xEF9644", Offset = "0xEF9644", VA = "0xEF9644")]
	private void Update()
	{
	}

	[Token(Token = "0x6000534")]
	[Address(RVA = "0xEF97C0", Offset = "0xEF97C0", VA = "0xEF97C0")]
	public void ResetBoost()
	{
	}

	[Token(Token = "0x6000535")]
	[Address(RVA = "0xEF9800", Offset = "0xEF9800", VA = "0xEF9800")]
	public void SetBoost(float newBoost)
	{
	}

	[Token(Token = "0x6000536")]
	[Address(RVA = "0xEF9870", Offset = "0xEF9870", VA = "0xEF9870")]
	public Boost()
	{
	}
}
[Token(Token = "0x20000CF")]
public class BootPlayerTimer : MonoBehaviour
{
	[Token(Token = "0x20000D0")]
	[CompilerGenerated]
	private sealed class <DoPlayerTimer>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40003D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40003D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40003D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BootPlayerTimer <>4__this;

		[Token(Token = "0x40003D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Photon.Realtime.Player timedPlayer;

		[Token(Token = "0x40003D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public PhotonView referencePhotonView;

		[Token(Token = "0x40003D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float <timer>5__2;

		[Token(Token = "0x170000BE")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000544")]
			[Address(RVA = "0xEF9E54", Offset = "0xEF9E54", VA = "0xEF9E54", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000BF")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000546")]
			[Address(RVA = "0xEF9E9C", Offset = "0xEF9E9C", VA = "0xEF9E9C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000541")]
		[Address(RVA = "0xEF9A88", Offset = "0xEF9A88", VA = "0xEF9A88")]
		[DebuggerHidden]
		public <DoPlayerTimer>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x6000542")]
		[Address(RVA = "0xEF9D20", Offset = "0xEF9D20", VA = "0xEF9D20", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000543")]
		[Address(RVA = "0xEF9D24", Offset = "0xEF9D24", VA = "0xEF9D24", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000545")]
		[Address(RVA = "0xEF9E5C", Offset = "0xEF9E5C", VA = "0xEF9E5C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000D1")]
	[CompilerGenerated]
	private sealed class <MyTurnTimer>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40003DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40003DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40003DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BootPlayerTimer <>4__this;

		[Token(Token = "0x40003DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <timer>5__2;

		[Token(Token = "0x170000C0")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600054A")]
			[Address(RVA = "0xEF9FD4", Offset = "0xEF9FD4", VA = "0xEF9FD4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C1")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600054C")]
			[Address(RVA = "0xEFA01C", Offset = "0xEFA01C", VA = "0xEFA01C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000547")]
		[Address(RVA = "0xEF9B18", Offset = "0xEF9B18", VA = "0xEF9B18")]
		[DebuggerHidden]
		public <MyTurnTimer>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x6000548")]
		[Address(RVA = "0xEF9EA4", Offset = "0xEF9EA4", VA = "0xEF9EA4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000549")]
		[Address(RVA = "0xEF9EA8", Offset = "0xEF9EA8", VA = "0xEF9EA8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600054B")]
		[Address(RVA = "0xEF9FDC", Offset = "0xEF9FDC", VA = "0xEF9FDC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40003CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static BootPlayerTimer instance;

	[Token(Token = "0x40003CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Photon.Realtime.Player playerToBoot;

	[Token(Token = "0x40003D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private PhotonView photonView;

	[Token(Token = "0x40003D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool abortOtherPlayerTimer;

	[Token(Token = "0x40003D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	private bool userCancelled;

	[Token(Token = "0x40003D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
	private bool abortMyTurnTimer;

	[Token(Token = "0x6000537")]
	[Address(RVA = "0xEF9878", Offset = "0xEF9878", VA = "0xEF9878")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000538")]
	[Address(RVA = "0xEF98C4", Offset = "0xEF98C4", VA = "0xEF98C4")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x6000539")]
	[Address(RVA = "0xEF9968", Offset = "0xEF9968", VA = "0xEF9968")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x600053A")]
	[Address(RVA = "0xEF9A0C", Offset = "0xEF9A0C", VA = "0xEF9A0C")]
	[IteratorStateMachine(typeof(<DoPlayerTimer>d__9))]
	public IEnumerator DoPlayerTimer(Photon.Realtime.Player timedPlayer, PhotonView referencePhotonView)
	{
		return null;
	}

	[Token(Token = "0x600053B")]
	[Address(RVA = "0xEF9AB0", Offset = "0xEF9AB0", VA = "0xEF9AB0")]
	[IteratorStateMachine(typeof(<MyTurnTimer>d__10))]
	public IEnumerator MyTurnTimer()
	{
		return null;
	}

	[Token(Token = "0x600053C")]
	[Address(RVA = "0xEF9B40", Offset = "0xEF9B40", VA = "0xEF9B40")]
	public void CancelBootPlayer()
	{
	}

	[Token(Token = "0x600053D")]
	[Address(RVA = "0xEF9B80", Offset = "0xEF9B80", VA = "0xEF9B80")]
	public void BootPlayer()
	{
	}

	[Token(Token = "0x600053E")]
	[Address(RVA = "0xEF9C8C", Offset = "0xEF9C8C", VA = "0xEF9C8C")]
	public void PuttHappened()
	{
	}

	[Token(Token = "0x600053F")]
	[Address(RVA = "0xEF9D04", Offset = "0xEF9D04", VA = "0xEF9D04")]
	public void OnMyPutt()
	{
	}

	[Token(Token = "0x6000540")]
	[Address(RVA = "0xEF9D10", Offset = "0xEF9D10", VA = "0xEF9D10")]
	public BootPlayerTimer()
	{
	}
}
[Token(Token = "0x20000D2")]
public class CameraConstraint : MonoBehaviour
{
	[Token(Token = "0x40003DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool arOnly;

	[Token(Token = "0x40003DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float fieldOfView;

	[Token(Token = "0x40003E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Camera mainCamera;

	[Token(Token = "0x600054D")]
	[Address(RVA = "0xEFA024", Offset = "0xEFA024", VA = "0xEFA024")]
	private void Start()
	{
	}

	[Token(Token = "0x600054E")]
	[Address(RVA = "0xEFA0C0", Offset = "0xEFA0C0", VA = "0xEFA0C0")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600054F")]
	[Address(RVA = "0xEFA1F4", Offset = "0xEFA1F4", VA = "0xEFA1F4")]
	public CameraConstraint()
	{
	}
}
[Token(Token = "0x20000D3")]
public class CanvasOffWhenTrackingLost : MonoBehaviour
{
	[Token(Token = "0x40003E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Canvas canvas;

	[Token(Token = "0x6000550")]
	[Address(RVA = "0xEFA20C", Offset = "0xEFA20C", VA = "0xEFA20C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000551")]
	[Address(RVA = "0xEFA360", Offset = "0xEFA360", VA = "0xEFA360")]
	private void TrackingFound()
	{
	}

	[Token(Token = "0x6000552")]
	[Address(RVA = "0xEFA380", Offset = "0xEFA380", VA = "0xEFA380")]
	private void TrackingLost()
	{
	}

	[Token(Token = "0x6000553")]
	[Address(RVA = "0xEFA3A0", Offset = "0xEFA3A0", VA = "0xEFA3A0")]
	public CanvasOffWhenTrackingLost()
	{
	}
}
[Token(Token = "0x20000D4")]
[ExecuteInEditMode]
public class CausticsController : MonoBehaviour
{
	[Token(Token = "0x40003E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int causticsArrayFrameCount;

	[Token(Token = "0x40003E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float causticsArraySpeed;

	[Token(Token = "0x40003E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector2 causticsPan;

	[Token(Token = "0x40003E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float causticsScale;

	[Token(Token = "0x40003E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float causticsBias;

	[Token(Token = "0x40003E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float causticsPow;

	[Token(Token = "0x40003E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float causticsMaskIntensity;

	[Token(Token = "0x40003E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Texture2D causticsProceduralNoiseTexture;

	[Token(Token = "0x40003EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[ColorUsage(true, true)]
	public Color causticsColor;

	[Token(Token = "0x40003EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float causticsFadeLength;

	[Token(Token = "0x40003EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float causticsFadeOffset;

	[Token(Token = "0x40003ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[Tooltip("Only affects materials with 'Enable 2 Tone' set to True")]
	[ColorUsage(true, true)]
	[Header("Two Tone Tint")]
	public Color causticsColor2;

	[Token(Token = "0x40003EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[Tooltip("Only affects materials with 'Enable 2 Tone' set to True")]
	public float twoToneMidpoint;

	[Token(Token = "0x40003EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[Tooltip("Only affects materials with 'Enable Projection Rotation' set to True")]
	[Header("Projection Angle")]
	public Vector3 rotationVector;

	[Token(Token = "0x40003F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[Tooltip("Only affects materials with 'Enable Projection Rotation' set to True")]
	public float rotationAngle;

	[Token(Token = "0x40003F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static CausticsController instance;

	[Token(Token = "0x6000554")]
	[Address(RVA = "0xEFA3A8", Offset = "0xEFA3A8", VA = "0xEFA3A8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000555")]
	[Address(RVA = "0xEFA3F4", Offset = "0xEFA3F4", VA = "0xEFA3F4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000556")]
	[Address(RVA = "0xEFA678", Offset = "0xEFA678", VA = "0xEFA678")]
	private void Update()
	{
	}

	[Token(Token = "0x6000557")]
	[Address(RVA = "0xEFA3F8", Offset = "0xEFA3F8", VA = "0xEFA3F8")]
	public void UpdateProps()
	{
	}

	[Token(Token = "0x6000558")]
	[Address(RVA = "0xEFA6AC", Offset = "0xEFA6AC", VA = "0xEFA6AC")]
	public CausticsController()
	{
	}
}
[Token(Token = "0x20000D5")]
public class ChangeParentAtRuntime : MonoBehaviour
{
	[Token(Token = "0x40003F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("Do not use this to attach to a moving object. For that use MovingObject.ConstrainedChildren")]
	public Transform newParent;

	[Token(Token = "0x6000559")]
	[Address(RVA = "0xEFA708", Offset = "0xEFA708", VA = "0xEFA708")]
	private void Start()
	{
	}

	[Token(Token = "0x600055A")]
	[Address(RVA = "0xEFA730", Offset = "0xEFA730", VA = "0xEFA730")]
	public ChangeParentAtRuntime()
	{
	}
}
[Token(Token = "0x20000D6")]
public class CloudSyncIndicator : MonoBehaviour
{
	[Token(Token = "0x40003F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject ProfileIcon;

	[Token(Token = "0x40003F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject SyncIndicator;

	[Token(Token = "0x40003F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ButtonEvent Button;

	[Token(Token = "0x600055B")]
	[Address(RVA = "0xEFA738", Offset = "0xEFA738", VA = "0xEFA738")]
	private void Update()
	{
	}

	[Token(Token = "0x600055C")]
	[Address(RVA = "0xEFA888", Offset = "0xEFA888", VA = "0xEFA888")]
	public CloudSyncIndicator()
	{
	}
}
[Token(Token = "0x20000D7")]
public class CompoundTrigger : MonoBehaviour
{
	[Token(Token = "0x40003F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private CompoundTrigger masterTrigger;

	[Token(Token = "0x40003F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	protected int collisions;

	[Token(Token = "0x40003F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	protected bool compoundTriggered;

	[Token(Token = "0x40003F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Collider compareCollider;

	[Token(Token = "0x40003FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool compoundTriggerStay;

	[Token(Token = "0x40003FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public bool debugTrigger;

	[Token(Token = "0x600055D")]
	[Address(RVA = "0xEFA890", Offset = "0xEFA890", VA = "0xEFA890", Slot = "4")]
	protected virtual void OnCompoundTriggerEnter()
	{
	}

	[Token(Token = "0x600055E")]
	[Address(RVA = "0xEFA894", Offset = "0xEFA894", VA = "0xEFA894", Slot = "5")]
	protected virtual void OnCompoundTriggerExit()
	{
	}

	[Token(Token = "0x600055F")]
	[Address(RVA = "0xEF0BD8", Offset = "0xEF0BD8", VA = "0xEF0BD8")]
	protected void OnEnable()
	{
	}

	[Token(Token = "0x6000560")]
	[Address(RVA = "0xEFA898", Offset = "0xEFA898", VA = "0xEFA898")]
	private void SetCompareCollider(Collider coll)
	{
	}

	[Token(Token = "0x6000561")]
	[Address(RVA = "0xEFA92C", Offset = "0xEFA92C", VA = "0xEFA92C")]
	private void IncreaseCollisionCount()
	{
	}

	[Token(Token = "0x6000562")]
	[Address(RVA = "0xEFAAA0", Offset = "0xEFAAA0", VA = "0xEFAAA0")]
	private void DecreaseCollisionCount()
	{
	}

	[Token(Token = "0x6000563")]
	[Address(RVA = "0xEFAB44", Offset = "0xEFAB44", VA = "0xEFAB44")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000564")]
	[Address(RVA = "0xEFAC9C", Offset = "0xEFAC9C", VA = "0xEFAC9C")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000565")]
	[Address(RVA = "0xEFADF0", Offset = "0xEFADF0", VA = "0xEFADF0")]
	public void ForceTriggerCheck()
	{
	}

	[Token(Token = "0x6000566")]
	[Address(RVA = "0xEFA9CC", Offset = "0xEFA9CC", VA = "0xEFA9CC")]
	private void DebugTrigger()
	{
	}

	[Token(Token = "0x6000567")]
	[Address(RVA = "0xEF0DEC", Offset = "0xEF0DEC", VA = "0xEF0DEC")]
	protected void SetBallAsCompareCollider()
	{
	}

	[Token(Token = "0x6000568")]
	[Address(RVA = "0xEFAF78", Offset = "0xEFAF78", VA = "0xEFAF78")]
	protected void SetPlayerAsCompareCollider()
	{
	}

	[Token(Token = "0x6000569")]
	[Address(RVA = "0xEFB04C", Offset = "0xEFB04C", VA = "0xEFB04C")]
	public bool IsCollisionTriggered()
	{
		return default(bool);
	}

	[Token(Token = "0x600056A")]
	[Address(RVA = "0xEF14E0", Offset = "0xEF14E0", VA = "0xEF14E0")]
	public CompoundTrigger()
	{
	}
}
[Token(Token = "0x20000D8")]
[ExecuteInEditMode]
public class ConstrainGlobalShaderPropertyToTransform : MonoBehaviour
{
	[Token(Token = "0x20000D9")]
	public enum AttributeEnum
	{
		[Token(Token = "0x4000403")]
		PosX,
		[Token(Token = "0x4000404")]
		PosY,
		[Token(Token = "0x4000405")]
		PosZ,
		[Token(Token = "0x4000406")]
		RoX,
		[Token(Token = "0x4000407")]
		RoY,
		[Token(Token = "0x4000408")]
		RoZ,
		[Token(Token = "0x4000409")]
		SclX,
		[Token(Token = "0x400040A")]
		SclY,
		[Token(Token = "0x400040B")]
		SclZ,
		[Token(Token = "0x400040C")]
		Position,
		[Token(Token = "0x400040D")]
		Rotation,
		[Token(Token = "0x400040E")]
		Scale
	}

	[Token(Token = "0x40003FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Tooltip("Transform that is providing values.")]
	public Transform sourceTransform;

	[Token(Token = "0x40003FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Tooltip("Global Shader Property name as a String.")]
	public string globalShaderPropertyName;

	[Token(Token = "0x40003FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Tooltip("The float or vector transform attribute that will be delivered to the Shader Property.")]
	public AttributeEnum constrainedAttribute;

	[Token(Token = "0x40003FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[Tooltip("Multiply the attribute value.  Example: If the source attribute is a rotation in degrees, and the targer property is in radians, it should be multiplied by 0.01745.")]
	public float attributeMultiplier;

	[Token(Token = "0x4000400")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Tooltip("Offset the source value, after its multiplier has been applied.")]
	public float attributeOffset;

	[Token(Token = "0x4000401")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[Tooltip("Offset used if the source value is a vector.")]
	public Vector3 attributeVectorOffset;

	[Token(Token = "0x600056B")]
	[Address(RVA = "0xEFB05C", Offset = "0xEFB05C", VA = "0xEFB05C")]
	private void Update()
	{
	}

	[Token(Token = "0x600056C")]
	[Address(RVA = "0xEFB2AC", Offset = "0xEFB2AC", VA = "0xEFB2AC")]
	public ConstrainGlobalShaderPropertyToTransform()
	{
	}
}
[Token(Token = "0x20000DA")]
public class ConstrainRelativeTransform : MonoBehaviour
{
	[Token(Token = "0x20000DB")]
	public enum SwizzlePositionEnum
	{
		[Token(Token = "0x4000419")]
		XYZ,
		[Token(Token = "0x400041A")]
		XZY,
		[Token(Token = "0x400041B")]
		ZYX,
		[Token(Token = "0x400041C")]
		ZXY,
		[Token(Token = "0x400041D")]
		YXZ,
		[Token(Token = "0x400041E")]
		YZX
	}

	[Token(Token = "0x400040F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform sourceTransform;

	[Token(Token = "0x4000410")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool relativeToStartTransform;

	[Token(Token = "0x4000411")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool position;

	[Token(Token = "0x4000412")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
	public bool rotation;

	[Token(Token = "0x4000413")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x23")]
	public bool scale;

	[Token(Token = "0x4000414")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public SwizzlePositionEnum swizzlePosition;

	[Token(Token = "0x4000415")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 startPosition;

	[Token(Token = "0x4000416")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Vector3 startRotation;

	[Token(Token = "0x4000417")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3 startScale;

	[Token(Token = "0x600056D")]
	[Address(RVA = "0xEFB2C8", Offset = "0xEFB2C8", VA = "0xEFB2C8")]
	private void Start()
	{
	}

	[Token(Token = "0x600056E")]
	[Address(RVA = "0xEFB338", Offset = "0xEFB338", VA = "0xEFB338")]
	private void Update()
	{
	}

	[Token(Token = "0x600056F")]
	[Address(RVA = "0xEFB6F4", Offset = "0xEFB6F4", VA = "0xEFB6F4")]
	public ConstrainRelativeTransform()
	{
	}
}
[Token(Token = "0x20000DC")]
public class ConstrainToBall : MonoBehaviour
{
	[Token(Token = "0x400041F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool constrainPosition;

	[Token(Token = "0x4000420")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool constrainRotation;

	[Token(Token = "0x6000570")]
	[Address(RVA = "0xEFB70C", Offset = "0xEFB70C", VA = "0xEFB70C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000571")]
	[Address(RVA = "0xEFB710", Offset = "0xEFB710", VA = "0xEFB710")]
	private void Update()
	{
	}

	[Token(Token = "0x6000572")]
	[Address(RVA = "0xEFB884", Offset = "0xEFB884", VA = "0xEFB884")]
	public ConstrainToBall()
	{
	}
}
[Token(Token = "0x20000DD")]
public class ConstrainToObject : MonoBehaviour
{
	[Token(Token = "0x4000421")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform target;

	[Token(Token = "0x4000422")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool position;

	[Token(Token = "0x4000423")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool rotation;

	[Token(Token = "0x4000424")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
	public bool scale;

	[Token(Token = "0x4000425")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float scaleMultiplier;

	[Token(Token = "0x4000426")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool scaleAbsoluteValue;

	[Token(Token = "0x6000573")]
	[Address(RVA = "0xEFB894", Offset = "0xEFB894", VA = "0xEFB894")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000574")]
	[Address(RVA = "0xEFB9A8", Offset = "0xEFB9A8", VA = "0xEFB9A8")]
	public ConstrainToObject()
	{
	}
}
[Token(Token = "0x20000DE")]
public class ConstrainToXRRig : MonoBehaviour
{
	[Token(Token = "0x6000575")]
	[Address(RVA = "0xEFB9C8", Offset = "0xEFB9C8", VA = "0xEFB9C8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000576")]
	[Address(RVA = "0xEFBA44", Offset = "0xEFBA44", VA = "0xEFBA44")]
	public ConstrainToXRRig()
	{
	}
}
[Token(Token = "0x20000DF")]
public enum GameMode
{
	[Token(Token = "0x4000428")]
	full18,
	[Token(Token = "0x4000429")]
	front9,
	[Token(Token = "0x400042A")]
	back9,
	[Token(Token = "0x400042B")]
	practice
}
[Token(Token = "0x20000E0")]
public class Course : MonoBehaviourPunCallbacks
{
	[Token(Token = "0x20000E1")]
	[CompilerGenerated]
	private sealed class <Start>d__51 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400044E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400044F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000450")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Course <>4__this;

		[Token(Token = "0x170000C7")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60005B0")]
			[Address(RVA = "0xF0196C", Offset = "0xF0196C", VA = "0xF0196C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60005B2")]
			[Address(RVA = "0xF019B4", Offset = "0xF019B4", VA = "0xF019B4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60005AD")]
		[Address(RVA = "0xF01560", Offset = "0xF01560", VA = "0xF01560")]
		[DebuggerHidden]
		public <Start>d__51(int <>1__state)
		{
		}

		[Token(Token = "0x60005AE")]
		[Address(RVA = "0xF01588", Offset = "0xF01588", VA = "0xF01588", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60005AF")]
		[Address(RVA = "0xF0158C", Offset = "0xF0158C", VA = "0xF0158C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60005B1")]
		[Address(RVA = "0xF01974", Offset = "0xF01974", VA = "0xF01974", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000E2")]
	[CompilerGenerated]
	private sealed class <LateStart>d__52 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000451")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000452")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x170000C9")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60005B6")]
			[Address(RVA = "0xF01AB0", Offset = "0xF01AB0", VA = "0xF01AB0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000CA")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60005B8")]
			[Address(RVA = "0xF01AF8", Offset = "0xF01AF8", VA = "0xF01AF8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60005B3")]
		[Address(RVA = "0xF019BC", Offset = "0xF019BC", VA = "0xF019BC")]
		[DebuggerHidden]
		public <LateStart>d__52(int <>1__state)
		{
		}

		[Token(Token = "0x60005B4")]
		[Address(RVA = "0xF019E4", Offset = "0xF019E4", VA = "0xF019E4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60005B5")]
		[Address(RVA = "0xF019E8", Offset = "0xF019E8", VA = "0xF019E8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60005B7")]
		[Address(RVA = "0xF01AB8", Offset = "0xF01AB8", VA = "0xF01AB8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000E4")]
	[CompilerGenerated]
	private sealed class <RetryJoinRoom>d__59 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000455")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000456")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000457")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Course <>4__this;

		[Token(Token = "0x170000CB")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60005BF")]
			[Address(RVA = "0xF01CFC", Offset = "0xF01CFC", VA = "0xF01CFC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000CC")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60005C1")]
			[Address(RVA = "0xF01D44", Offset = "0xF01D44", VA = "0xF01D44", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60005BC")]
		[Address(RVA = "0xF01B84", Offset = "0xF01B84", VA = "0xF01B84")]
		[DebuggerHidden]
		public <RetryJoinRoom>d__59(int <>1__state)
		{
		}

		[Token(Token = "0x60005BD")]
		[Address(RVA = "0xF01BAC", Offset = "0xF01BAC", VA = "0xF01BAC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60005BE")]
		[Address(RVA = "0xF01BB0", Offset = "0xF01BB0", VA = "0xF01BB0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60005C0")]
		[Address(RVA = "0xF01D04", Offset = "0xF01D04", VA = "0xF01D04", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000E5")]
	[CompilerGenerated]
	private sealed class <PromptToReconnect>d__61 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000458")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000459")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400045A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Course <>4__this;

		[Token(Token = "0x170000CD")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60005C5")]
			[Address(RVA = "0xF02228", Offset = "0xF02228", VA = "0xF02228", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000CE")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60005C7")]
			[Address(RVA = "0xF02270", Offset = "0xF02270", VA = "0xF02270", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60005C2")]
		[Address(RVA = "0xF01D4C", Offset = "0xF01D4C", VA = "0xF01D4C")]
		[DebuggerHidden]
		public <PromptToReconnect>d__61(int <>1__state)
		{
		}

		[Token(Token = "0x60005C3")]
		[Address(RVA = "0xF01D74", Offset = "0xF01D74", VA = "0xF01D74", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60005C4")]
		[Address(RVA = "0xF01D78", Offset = "0xF01D78", VA = "0xF01D78", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60005C6")]
		[Address(RVA = "0xF02230", Offset = "0xF02230", VA = "0xF02230", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000E6")]
	[CompilerGenerated]
	private sealed class <DelayedCreateRoom>d__63 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400045B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400045C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400045D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Course <>4__this;

		[Token(Token = "0x170000CF")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60005CB")]
			[Address(RVA = "0xF02354", Offset = "0xF02354", VA = "0xF02354", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000D0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60005CD")]
			[Address(RVA = "0xF0239C", Offset = "0xF0239C", VA = "0xF0239C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60005C8")]
		[Address(RVA = "0xF02278", Offset = "0xF02278", VA = "0xF02278")]
		[DebuggerHidden]
		public <DelayedCreateRoom>d__63(int <>1__state)
		{
		}

		[Token(Token = "0x60005C9")]
		[Address(RVA = "0xF022A0", Offset = "0xF022A0", VA = "0xF022A0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60005CA")]
		[Address(RVA = "0xF022A4", Offset = "0xF022A4", VA = "0xF022A4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60005CC")]
		[Address(RVA = "0xF0235C", Offset = "0xF0235C", VA = "0xF0235C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000E7")]
	[CompilerGenerated]
	private sealed class <CreateMultiplayerAvatar>d__67 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400045E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400045F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000460")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Course <>4__this;

		[Token(Token = "0x170000D1")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60005D1")]
			[Address(RVA = "0xF0260C", Offset = "0xF0260C", VA = "0xF0260C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000D2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60005D3")]
			[Address(RVA = "0xF02654", Offset = "0xF02654", VA = "0xF02654", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60005CE")]
		[Address(RVA = "0xF023A4", Offset = "0xF023A4", VA = "0xF023A4")]
		[DebuggerHidden]
		public <CreateMultiplayerAvatar>d__67(int <>1__state)
		{
		}

		[Token(Token = "0x60005CF")]
		[Address(RVA = "0xF023CC", Offset = "0xF023CC", VA = "0xF023CC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60005D0")]
		[Address(RVA = "0xF023D0", Offset = "0xF023D0", VA = "0xF023D0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60005D2")]
		[Address(RVA = "0xF02614", Offset = "0xF02614", VA = "0xF02614", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000E8")]
	[CompilerGenerated]
	private sealed class <LatecomerJoinedRoomCoro>d__70 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000461")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000462")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000463")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Course <>4__this;

		[Token(Token = "0x4000464")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Photon.Realtime.Player otherPlayer;

		[Token(Token = "0x4000465")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <delayCounter>5__2;

		[Token(Token = "0x170000D3")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60005D7")]
			[Address(RVA = "0xF038D8", Offset = "0xF038D8", VA = "0xF038D8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000D4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60005D9")]
			[Address(RVA = "0xF03920", Offset = "0xF03920", VA = "0xF03920", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60005D4")]
		[Address(RVA = "0xF0265C", Offset = "0xF0265C", VA = "0xF0265C")]
		[DebuggerHidden]
		public <LatecomerJoinedRoomCoro>d__70(int <>1__state)
		{
		}

		[Token(Token = "0x60005D5")]
		[Address(RVA = "0xF02684", Offset = "0xF02684", VA = "0xF02684", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60005D6")]
		[Address(RVA = "0xF02688", Offset = "0xF02688", VA = "0xF02688", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60005D8")]
		[Address(RVA = "0xF038E0", Offset = "0xF038E0", VA = "0xF038E0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000E9")]
	[CompilerGenerated]
	private sealed class <RebuildScoreCoro>d__86 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000466")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000467")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000468")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Course <>4__this;

		[Token(Token = "0x170000D5")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60005DD")]
			[Address(RVA = "0xF03A5C", Offset = "0xF03A5C", VA = "0xF03A5C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000D6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60005DF")]
			[Address(RVA = "0xF03AA4", Offset = "0xF03AA4", VA = "0xF03AA4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60005DA")]
		[Address(RVA = "0xF03928", Offset = "0xF03928", VA = "0xF03928")]
		[DebuggerHidden]
		public <RebuildScoreCoro>d__86(int <>1__state)
		{
		}

		[Token(Token = "0x60005DB")]
		[Address(RVA = "0xF03950", Offset = "0xF03950", VA = "0xF03950", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60005DC")]
		[Address(RVA = "0xF03954", Offset = "0xF03954", VA = "0xF03954", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60005DE")]
		[Address(RVA = "0xF03A64", Offset = "0xF03A64", VA = "0xF03A64", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400042C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public CourseInfoAsset info;

	[Token(Token = "0x400042D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Course instance;

	[Token(Token = "0x400042E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Hole hole1;

	[Token(Token = "0x400042F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int editorStartHoleNumber;

	[Token(Token = "0x4000430")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool editorForcePracticeMode;

	[Token(Token = "0x4000431")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
	public bool dynamicGravityCourse;

	[Token(Token = "0x4000432")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static GameMode gameMode;

	[Token(Token = "0x4000433")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string holeCompleteAnimationPrefix;

	[Token(Token = "0x4000434")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private string multiplayerRoom;

	[Token(Token = "0x4000435")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[HideInInspector]
	public int completedHolesPar;

	[Token(Token = "0x4000436")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[HideInInspector]
	public int completedHolesStrokes;

	[Token(Token = "0x4000437")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[HideInInspector]
	public string roundMessage;

	[Token(Token = "0x4000438")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform godModePosition;

	[Token(Token = "0x4000439")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Transform godModeScorecard;

	[Token(Token = "0x400043A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Transform godModeInstructions;

	[Token(Token = "0x400043B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject playerPrefab;

	[Token(Token = "0x400043C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public WalkaboutLODTrigger[] walkaboutLODTriggers;

	[Token(Token = "0x400043D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public AudioClip leftRoomAudio;

	[Token(Token = "0x400043E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public AudioClip joinedRoomAudio;

	[Token(Token = "0x400043F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[HideInInspector]
	public bool intentToQuit;

	[Token(Token = "0x4000440")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[HideInInspector]
	public Photon.Realtime.Player latecomer;

	[Token(Token = "0x4000441")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[HideInInspector]
	public Photon.Realtime.Player playerWhoQuit;

	[Token(Token = "0x4000442")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private bool rejoinProblem;

	[Token(Token = "0x4000443")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA9")]
	private bool quickMatchEnded;

	[Token(Token = "0x4000444")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAA")]
	private bool everyoneLeftWhileIWasDisconnected;

	[Token(Token = "0x4000445")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAB")]
	private bool roomIsFull;

	[Token(Token = "0x4000446")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private bool isCreatingMultiplayerAvatar;

	[Token(Token = "0x4000447")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private float defaultTimeStep;

	[Token(Token = "0x4000448")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	public bool quest2Force72Hz;

	[Token(Token = "0x400044D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD1")]
	public bool isMainMenu;

	[Token(Token = "0x170000C2")]
	private CourseData _saveData
	{
		[Token(Token = "0x6000577")]
		[Address(RVA = "0xEFBA4C", Offset = "0xEFBA4C", VA = "0xEFBA4C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000C3")]
	public Hole startHole
	{
		[Token(Token = "0x6000578")]
		[Address(RVA = "0xEFBAB4", Offset = "0xEFBAB4", VA = "0xEFBAB4")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000579")]
		[Address(RVA = "0xEFBABC", Offset = "0xEFBABC", VA = "0xEFBABC")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x170000C4")]
	public Hole endHole
	{
		[Token(Token = "0x600057A")]
		[Address(RVA = "0xEFBAC4", Offset = "0xEFBAC4", VA = "0xEFBAC4")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x600057B")]
		[Address(RVA = "0xEFBACC", Offset = "0xEFBACC", VA = "0xEFBACC")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x170000C5")]
	public string gameModeString
	{
		[Token(Token = "0x600057C")]
		[Address(RVA = "0xEFBAD4", Offset = "0xEFBAD4", VA = "0xEFBAD4")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x600057D")]
		[Address(RVA = "0xEFBADC", Offset = "0xEFBADC", VA = "0xEFBADC")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x170000C6")]
	public bool courseComplete
	{
		[Token(Token = "0x600057E")]
		[Address(RVA = "0xEFBAE4", Offset = "0xEFBAE4", VA = "0xEFBAE4")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600057F")]
		[Address(RVA = "0xEFBAEC", Offset = "0xEFBAEC", VA = "0xEFBAEC")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x6000580")]
	[Address(RVA = "0xEFBAF8", Offset = "0xEFBAF8", VA = "0xEFBAF8", Slot = "28")]
	public override void OnEnable()
	{
	}

	[Token(Token = "0x6000581")]
	[Address(RVA = "0xEFBC04", Offset = "0xEFBC04", VA = "0xEFBC04", Slot = "29")]
	public override void OnDisable()
	{
	}

	[Token(Token = "0x6000582")]
	[Address(RVA = "0xEFBD10", Offset = "0xEFBD10", VA = "0xEFBD10")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000583")]
	[Address(RVA = "0xEFC070", Offset = "0xEFC070", VA = "0xEFC070")]
	[IteratorStateMachine(typeof(<Start>d__51))]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000584")]
	[Address(RVA = "0xEFC0D8", Offset = "0xEFC0D8", VA = "0xEFC0D8")]
	[IteratorStateMachine(typeof(<LateStart>d__52))]
	private IEnumerator LateStart()
	{
		return null;
	}

	[Token(Token = "0x6000585")]
	[Address(RVA = "0xEFC138", Offset = "0xEFC138", VA = "0xEFC138")]
	public void OculusInvite()
	{
	}

	[Token(Token = "0x6000586")]
	[Address(RVA = "0xEFC13C", Offset = "0xEFC13C", VA = "0xEFC13C")]
	[ContextMenu("Calculate Pars")]
	public void CalculatePars()
	{
	}

	[Token(Token = "0x6000587")]
	[Address(RVA = "0xEFC48C", Offset = "0xEFC48C", VA = "0xEFC48C")]
	[ContextMenu("Calculate Lost Balls")]
	public void CalculateLostBalls()
	{
	}

	[Token(Token = "0x6000588")]
	[Address(RVA = "0xEFC710", Offset = "0xEFC710", VA = "0xEFC710")]
	public void CalculateFoxhuntClues()
	{
	}

	[Token(Token = "0x6000589")]
	[Address(RVA = "0xEFC8A0", Offset = "0xEFC8A0", VA = "0xEFC8A0")]
	private void Update()
	{
	}

	[Token(Token = "0x600058A")]
	[Address(RVA = "0xEFCA0C", Offset = "0xEFCA0C", VA = "0xEFCA0C", Slot = "34")]
	public override void OnJoinRoomFailed(short returnCode, string message)
	{
	}

	[Token(Token = "0x600058B")]
	[Address(RVA = "0xEFCB70", Offset = "0xEFCB70", VA = "0xEFCB70")]
	[IteratorStateMachine(typeof(<RetryJoinRoom>d__59))]
	private IEnumerator RetryJoinRoom()
	{
		return null;
	}

	[Token(Token = "0x600058C")]
	[Address(RVA = "0xEFCBD8", Offset = "0xEFCBD8", VA = "0xEFCBD8", Slot = "38")]
	public override void OnDisconnected(DisconnectCause cause)
	{
	}

	[Token(Token = "0x600058D")]
	[Address(RVA = "0xEFCD08", Offset = "0xEFCD08", VA = "0xEFCD08")]
	[IteratorStateMachine(typeof(<PromptToReconnect>d__61))]
	private IEnumerator PromptToReconnect(DisconnectCause cause)
	{
		return null;
	}

	[Token(Token = "0x600058E")]
	[Address(RVA = "0xEFCD70", Offset = "0xEFCD70", VA = "0xEFCD70", Slot = "45")]
	public override void OnConnectedToMaster()
	{
	}

	[Token(Token = "0x600058F")]
	[Address(RVA = "0xEFCEF0", Offset = "0xEFCEF0", VA = "0xEFCEF0")]
	[IteratorStateMachine(typeof(<DelayedCreateRoom>d__63))]
	private IEnumerator DelayedCreateRoom()
	{
		return null;
	}

	[Token(Token = "0x6000590")]
	[Address(RVA = "0xEFCF58", Offset = "0xEFCF58", VA = "0xEFCF58")]
	public void Reconnect()
	{
	}

	[Token(Token = "0x6000591")]
	[Address(RVA = "0xEFD070", Offset = "0xEFD070", VA = "0xEFD070", Slot = "31")]
	public override void OnLeftRoom()
	{
	}

	[Token(Token = "0x6000592")]
	[Address(RVA = "0xEFD0D8", Offset = "0xEFD0D8", VA = "0xEFD0D8", Slot = "41")]
	public override void OnJoinedRoom()
	{
	}

	[Token(Token = "0x6000593")]
	[Address(RVA = "0xEFC008", Offset = "0xEFC008", VA = "0xEFC008")]
	[IteratorStateMachine(typeof(<CreateMultiplayerAvatar>d__67))]
	private IEnumerator CreateMultiplayerAvatar()
	{
		return null;
	}

	[Token(Token = "0x6000594")]
	[Address(RVA = "0xEFD26C", Offset = "0xEFD26C", VA = "0xEFD26C", Slot = "43")]
	public override void OnPlayerLeftRoom(Photon.Realtime.Player otherPlayer)
	{
	}

	[Token(Token = "0x6000595")]
	[Address(RVA = "0xEFD784", Offset = "0xEFD784", VA = "0xEFD784", Slot = "42")]
	public override void OnPlayerEnteredRoom(Photon.Realtime.Player otherPlayer)
	{
	}

	[Token(Token = "0x6000596")]
	[Address(RVA = "0xEFD964", Offset = "0xEFD964", VA = "0xEFD964")]
	[IteratorStateMachine(typeof(<LatecomerJoinedRoomCoro>d__70))]
	private IEnumerator LatecomerJoinedRoomCoro(Photon.Realtime.Player otherPlayer)
	{
		return null;
	}

	[Token(Token = "0x6000597")]
	[Address(RVA = "0xEFD9D8", Offset = "0xEFD9D8", VA = "0xEFD9D8")]
	private void BootLatecomer()
	{
	}

	[Token(Token = "0x6000598")]
	[Address(RVA = "0xEFDBC8", Offset = "0xEFDBC8", VA = "0xEFDBC8")]
	private void LatecomerMayObserve()
	{
	}

	[Token(Token = "0x6000599")]
	[Address(RVA = "0xEFDDC0", Offset = "0xEFDDC0", VA = "0xEFDDC0")]
	private void LatecomerMayJoinCurrent()
	{
	}

	[Token(Token = "0x600059A")]
	[Address(RVA = "0xEFDFB8", Offset = "0xEFDFB8", VA = "0xEFDFB8")]
	private void LatecomerMayCatchUp()
	{
	}

	[Token(Token = "0x600059B")]
	[Address(RVA = "0xEFE1B0", Offset = "0xEFE1B0", VA = "0xEFE1B0")]
	public void StartRound()
	{
	}

	[Token(Token = "0x600059C")]
	[Address(RVA = "0xEFC334", Offset = "0xEFC334", VA = "0xEFC334")]
	private void InitializeHoleNumbers(int startInt, int endInt)
	{
	}

	[Token(Token = "0x600059D")]
	[Address(RVA = "0xEFE874", Offset = "0xEFE874", VA = "0xEFE874")]
	[ContextMenu("Skip to next hole")]
	public void SkipToNextHole()
	{
	}

	[Token(Token = "0x600059E")]
	[Address(RVA = "0xEFEC8C", Offset = "0xEFEC8C", VA = "0xEFEC8C")]
	public Hole GetHole(int holeInt)
	{
		return null;
	}

	[Token(Token = "0x600059F")]
	[Address(RVA = "0xEFED24", Offset = "0xEFED24", VA = "0xEFED24")]
	public void UpdateRoundMessage()
	{
	}

	[Token(Token = "0x60005A0")]
	[Address(RVA = "0xEFEDD8", Offset = "0xEFEDD8", VA = "0xEFEDD8")]
	public void RestartCurrentHole()
	{
	}

	[Token(Token = "0x60005A1")]
	[Address(RVA = "0xEFEDDC", Offset = "0xEFEDDC", VA = "0xEFEDDC")]
	public void CompleteFront9()
	{
	}

	[Token(Token = "0x60005A2")]
	[Address(RVA = "0xEFEFB4", Offset = "0xEFEFB4", VA = "0xEFEFB4")]
	public void CourseComplete()
	{
	}

	[Token(Token = "0x60005A3")]
	[Address(RVA = "0xEFE39C", Offset = "0xEFE39C", VA = "0xEFE39C")]
	private void CheckForSavedGame()
	{
	}

	[Token(Token = "0x60005A4")]
	[Address(RVA = "0xEFF6E8", Offset = "0xEFF6E8", VA = "0xEFF6E8")]
	private void ClearSavedGame()
	{
	}

	[Token(Token = "0x60005A5")]
	[Address(RVA = "0xEFF850", Offset = "0xEFF850", VA = "0xEFF850")]
	private void LoadSavedGame()
	{
	}

	[Token(Token = "0x60005A6")]
	[Address(RVA = "0xEFFBDC", Offset = "0xEFFBDC", VA = "0xEFFBDC")]
	[IteratorStateMachine(typeof(<RebuildScoreCoro>d__86))]
	private IEnumerator RebuildScoreCoro()
	{
		return null;
	}

	[Token(Token = "0x60005A7")]
	[Address(RVA = "0xEFFC44", Offset = "0xEFFC44", VA = "0xEFFC44")]
	private void OnPutt()
	{
	}

	[Token(Token = "0x60005A8")]
	[Address(RVA = "0xEFFD08", Offset = "0xEFFD08", VA = "0xEFFD08")]
	private void OnPuttCompleted()
	{
	}

	[Token(Token = "0x60005A9")]
	[Address(RVA = "0xF004BC", Offset = "0xF004BC", VA = "0xF004BC")]
	public void FoundBall()
	{
	}

	[Token(Token = "0x60005AA")]
	[Address(RVA = "0xEFC944", Offset = "0xEFC944", VA = "0xEFC944")]
	[ContextMenu("Instant Replay")]
	public void ToggleInstantReplay()
	{
	}

	[Token(Token = "0x60005AB")]
	[Address(RVA = "0xEFEA8C", Offset = "0xEFEA8C", VA = "0xEFEA8C")]
	public void RebuildScore()
	{
	}

	[Token(Token = "0x60005AC")]
	[Address(RVA = "0xF00500", Offset = "0xF00500", VA = "0xF00500")]
	public Course()
	{
	}
}
[Token(Token = "0x20000EA")]
[CreateAssetMenu(fileName = "new CourseCatalog", menuName = "Weywot/Course Catalog")]
public class CourseCatalogAsset : ScriptableObject
{
	[Token(Token = "0x4000469")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<CourseInfoAsset> Courses;

	[Token(Token = "0x60005E0")]
	[Address(RVA = "0xF03AAC", Offset = "0xF03AAC", VA = "0xF03AAC")]
	public CourseCatalogAsset()
	{
	}
}
[Token(Token = "0x20000EB")]
public class CourseCatalogController : MonoBehaviourPunCallbacks, IProfileActivatedHandler, IProfileHandler, IProfilesChangedHandler
{
	[Token(Token = "0x20000EC")]
	[CompilerGenerated]
	private sealed class <UpdateCatalogRoutine>d__16 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000470")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000471")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000472")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CourseCatalogController <>4__this;

		[Token(Token = "0x4000473")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool <firstLoad>5__2;

		[Token(Token = "0x4000474")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<CourseInfoAsset>.Enumerator <>7__wrap2;

		[Token(Token = "0x4000475")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private CourseInfoAsset <courseInfo>5__4;

		[Token(Token = "0x170000D7")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60005F6")]
			[Address(RVA = "0xF05474", Offset = "0xF05474", VA = "0xF05474", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000D8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60005F8")]
			[Address(RVA = "0xF054BC", Offset = "0xF054BC", VA = "0xF054BC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60005F2")]
		[Address(RVA = "0xF048B8", Offset = "0xF048B8", VA = "0xF048B8")]
		[DebuggerHidden]
		public <UpdateCatalogRoutine>d__16(int <>1__state)
		{
		}

		[Token(Token = "0x60005F3")]
		[Address(RVA = "0xF05048", Offset = "0xF05048", VA = "0xF05048", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60005F4")]
		[Address(RVA = "0xF05074", Offset = "0xF05074", VA = "0xF05074", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60005F5")]
		[Address(RVA = "0xF05424", Offset = "0xF05424", VA = "0xF05424")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x60005F7")]
		[Address(RVA = "0xF0547C", Offset = "0xF0547C", VA = "0xF0547C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400046A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public CourseCatalogAsset Catalog;

	[Token(Token = "0x400046C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Space(10f)]
	[Header("Animation Settings")]
	public float scaleTarget;

	[Token(Token = "0x400046D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float scaleDuration;

	[Token(Token = "0x400046E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Ease ease;

	[Token(Token = "0x400046F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private bool initialLoad;

	[Token(Token = "0x14000014")]
	public static event Action CatalogUpdatedEvent
	{
		[Token(Token = "0x60005E1")]
		[Address(RVA = "0xF03AB4", Offset = "0xF03AB4", VA = "0xF03AB4")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60005E2")]
		[Address(RVA = "0xF03B6C", Offset = "0xF03B6C", VA = "0xF03B6C")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x60005E3")]
	[Address(RVA = "0xF03C24", Offset = "0xF03C24", VA = "0xF03C24")]
	private void Awake()
	{
	}

	[Token(Token = "0x60005E4")]
	[Address(RVA = "0xF03CA4", Offset = "0xF03CA4", VA = "0xF03CA4", Slot = "28")]
	public override void OnEnable()
	{
	}

	[Token(Token = "0x60005E5")]
	[Address(RVA = "0xF03EDC", Offset = "0xF03EDC", VA = "0xF03EDC", Slot = "29")]
	public override void OnDisable()
	{
	}

	[Token(Token = "0x60005E6")]
	[Address(RVA = "0xF04110", Offset = "0xF04110", VA = "0xF04110")]
	public void OnPlayerPropertiesUpdated(ExitGames.Client.Photon.Hashtable hash)
	{
	}

	[Token(Token = "0x60005E7")]
	[Address(RVA = "0xF0434C", Offset = "0xF0434C", VA = "0xF0434C", Slot = "54")]
	public void OnProfileActivated(ProfileData profile)
	{
	}

	[Token(Token = "0x60005E8")]
	[Address(RVA = "0xF04350", Offset = "0xF04350", VA = "0xF04350", Slot = "55")]
	public void OnProfilesChanged(ProfileData[] profiles)
	{
	}

	[Token(Token = "0x60005E9")]
	[Address(RVA = "0xF04354", Offset = "0xF04354", VA = "0xF04354")]
	public void AnimateCourseMenu()
	{
	}

	[Token(Token = "0x60005EA")]
	[Address(RVA = "0xF04194", Offset = "0xF04194", VA = "0xF04194")]
	public void UpdateCatalog()
	{
	}

	[Token(Token = "0x60005EB")]
	[Address(RVA = "0xF04358", Offset = "0xF04358", VA = "0xF04358")]
	[IteratorStateMachine(typeof(<UpdateCatalogRoutine>d__16))]
	private IEnumerator UpdateCatalogRoutine()
	{
		return null;
	}

	[Token(Token = "0x60005EC")]
	[Address(RVA = "0xF048E0", Offset = "0xF048E0", VA = "0xF048E0")]
	private void OnValidatedPurchases()
	{
	}

	[Token(Token = "0x60005ED")]
	[Address(RVA = "0xF04E00", Offset = "0xF04E00", VA = "0xF04E00")]
	private void OnPurchaseFlowEnded()
	{
	}

	[Token(Token = "0x60005EE")]
	[Address(RVA = "0xF04E70", Offset = "0xF04E70", VA = "0xF04E70")]
	private void OnOverlayActivated(bool activated)
	{
	}

	[Token(Token = "0x60005EF")]
	[Address(RVA = "0xF04EF8", Offset = "0xF04EF8", VA = "0xF04EF8")]
	private int CountOfPreviousDLCsPurchased()
	{
		return default(int);
	}

	[Token(Token = "0x60005F0")]
	[Address(RVA = "0xF04C30", Offset = "0xF04C30", VA = "0xF04C30")]
	private void PurchasedDLCAnalyticsEvent(CourseInfoAsset coursePurchased)
	{
	}

	[Token(Token = "0x60005F1")]
	[Address(RVA = "0xF0502C", Offset = "0xF0502C", VA = "0xF0502C")]
	public CourseCatalogController()
	{
	}
}
[Token(Token = "0x20000ED")]
public enum CompleteCourseMode
{
	[Token(Token = "0x4000477")]
	completeCourse,
	[Token(Token = "0x4000478")]
	belowParOr10Balls
}
[Token(Token = "0x20000EE")]
[CreateAssetMenu(fileName = "new CourseInfo", menuName = "Weywot/Course Info")]
public class CourseInfoAsset : ScriptableObject
{
	[Token(Token = "0x4000479")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Common.Course Course;

	[Token(Token = "0x400047A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string CourseName;

	[Token(Token = "0x400047B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string SceneName;

	[Token(Token = "0x400047C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Sprite Image;

	[Token(Token = "0x400047D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string CourseDescriptionKey;

	[Token(Token = "0x400047E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public CourseInfoAsset CourseToBeatFirst;

	[Token(Token = "0x400047F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public CompleteCourseMode CompleteCourseMode;

	[Token(Token = "0x4000480")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public Difficulty Difficulty;

	[Token(Token = "0x4000481")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public int FrontPar;

	[Token(Token = "0x4000482")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public int BackPar;

	[Token(Token = "0x4000483")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public int TotalClues;

	[Token(Token = "0x4000484")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public int[] LostBallIds;

	[Token(Token = "0x4000485")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public AudioClip courseUnlockAudio;

	[Token(Token = "0x4000486")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool editorOnly;

	[Token(Token = "0x4000487")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public ProductDefinition Product;

	[Token(Token = "0x4000488")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public CourseMenu courseMenu;

	[Token(Token = "0x4000489")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public List<string> filterTags;

	[Token(Token = "0x400048A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int playerRanking;

	[Token(Token = "0x400048B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private string _lockMessage;

	[Token(Token = "0x400048C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private bool _availableOnline;

	[Token(Token = "0x170000D9")]
	public int TotalLostBalls
	{
		[Token(Token = "0x60005F9")]
		[Address(RVA = "0xF054C4", Offset = "0xF054C4", VA = "0xF054C4")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170000DA")]
	public bool IsLoaded
	{
		[Token(Token = "0x60005FA")]
		[Address(RVA = "0xF054E0", Offset = "0xF054E0", VA = "0xF054E0")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60005FB")]
		[Address(RVA = "0xF054E8", Offset = "0xF054E8", VA = "0xF054E8")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x170000DB")]
	public int TotalPar
	{
		[Token(Token = "0x60005FC")]
		[Address(RVA = "0xF054F4", Offset = "0xF054F4", VA = "0xF054F4")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170000DC")]
	public int SavedRecord
	{
		[Token(Token = "0x60005FD")]
		[Address(RVA = "0xF05500", Offset = "0xF05500", VA = "0xF05500")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170000DD")]
	public int SavedRecordFront
	{
		[Token(Token = "0x60005FE")]
		[Address(RVA = "0xF05628", Offset = "0xF05628", VA = "0xF05628")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170000DE")]
	public int SavedRecordBack
	{
		[Token(Token = "0x60005FF")]
		[Address(RVA = "0xF0567C", Offset = "0xF0567C", VA = "0xF0567C")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170000DF")]
	public int Score
	{
		[Token(Token = "0x6000600")]
		[Address(RVA = "0xF056D0", Offset = "0xF056D0", VA = "0xF056D0")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170000E0")]
	public CourseData SaveData
	{
		[Token(Token = "0x6000601")]
		[Address(RVA = "0xF055C0", Offset = "0xF055C0", VA = "0xF055C0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000602")]
	[Address(RVA = "0xF05704", Offset = "0xF05704", VA = "0xF05704")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000603")]
	[Address(RVA = "0xF0570C", Offset = "0xF0570C", VA = "0xF0570C")]
	public bool IsPurchased()
	{
		return default(bool);
	}

	[Token(Token = "0x6000604")]
	[Address(RVA = "0xF04BD0", Offset = "0xF04BD0", VA = "0xF04BD0")]
	public bool IsPurchasable()
	{
		return default(bool);
	}

	[Token(Token = "0x6000605")]
	[Address(RVA = "0xF0579C", Offset = "0xF0579C", VA = "0xF0579C")]
	public bool IsUnlocked()
	{
		return default(bool);
	}

	[Token(Token = "0x6000606")]
	[Address(RVA = "0xF057C4", Offset = "0xF057C4", VA = "0xF057C4")]
	public bool IsAvailable()
	{
		return default(bool);
	}

	[Token(Token = "0x6000607")]
	[Address(RVA = "0xF05868", Offset = "0xF05868", VA = "0xF05868")]
	public void Purchase()
	{
	}

	[Token(Token = "0x6000608")]
	[Address(RVA = "0xF043C0", Offset = "0xF043C0", VA = "0xF043C0")]
	public void UpdateLocks()
	{
	}

	[Token(Token = "0x6000609")]
	[Address(RVA = "0xF0589C", Offset = "0xF0589C", VA = "0xF0589C")]
	public string GetStatsMessageWithNewLines()
	{
		return null;
	}

	[Token(Token = "0x600060A")]
	[Address(RVA = "0xF05F74", Offset = "0xF05F74", VA = "0xF05F74")]
	public string GetStatsMessage()
	{
		return null;
	}

	[Token(Token = "0x600060B")]
	[Address(RVA = "0xF059B8", Offset = "0xF059B8", VA = "0xF059B8")]
	public string GetParMessage()
	{
		return null;
	}

	[Token(Token = "0x600060C")]
	[Address(RVA = "0xF05A8C", Offset = "0xF05A8C", VA = "0xF05A8C")]
	public string GetRecordMessage(CourseData saveData)
	{
		return null;
	}

	[Token(Token = "0x600060D")]
	[Address(RVA = "0xF05C98", Offset = "0xF05C98", VA = "0xF05C98")]
	public string GetFoundMessage(CourseData saveData)
	{
		return null;
	}

	[Token(Token = "0x600060E")]
	[Address(RVA = "0xF06080", Offset = "0xF06080", VA = "0xF06080")]
	public string GetLockMessage()
	{
		return null;
	}

	[Token(Token = "0x600060F")]
	[Address(RVA = "0xF06088", Offset = "0xF06088", VA = "0xF06088")]
	public CourseInfoAsset()
	{
	}
}
[Token(Token = "0x20000EF")]
public class CourseMenu : MonoBehaviour
{
	[Token(Token = "0x400048E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("Info")]
	public CourseInfoAsset CourseInfo;

	[Token(Token = "0x400048F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Header("UI")]
	public TextMeshProUGUI courseText;

	[Token(Token = "0x4000490")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TextMeshProUGUI statsText;

	[Token(Token = "0x4000491")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Image image;

	[Token(Token = "0x4000492")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int hoverCount;

	[Token(Token = "0x4000493")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Animator animator;

	[Token(Token = "0x4000494")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool inBack;

	[Token(Token = "0x4000495")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject playRoundButton;

	[Token(Token = "0x4000496")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject front9Button;

	[Token(Token = "0x4000497")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject back9Button;

	[Token(Token = "0x4000498")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject practiceButton;

	[Token(Token = "0x4000499")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject lockedIndicator;

	[Token(Token = "0x400049A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject lockIcon;

	[Token(Token = "0x400049B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject buyIcon;

	[Token(Token = "0x400049C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public TextMeshProUGUI lockText;

	[Token(Token = "0x400049D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public GameObject lockMessageButton;

	[Token(Token = "0x400049E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public GameObject unlockIndicator;

	[Token(Token = "0x400049F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static CourseMenu clicked;

	[Token(Token = "0x40004A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Vector3 defaultScale;

	[Token(Token = "0x40004A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private Vector3 defaultPosition;

	[Token(Token = "0x40004A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private float arCourseHighlightProgress;

	[Token(Token = "0x40004A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public GameObject exitCourseHighlightButton;

	[Token(Token = "0x40004A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public bool hideNameUnhighlighted;

	[Token(Token = "0x40004A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private CanvasGroup courseTextCanvasGroup;

	[Token(Token = "0x40004A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static CourseMenu highlightedCourse;

	[Token(Token = "0x40004A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public GameObject guestPass;

	[Token(Token = "0x40004A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public Transform scalerRef;

	[Token(Token = "0x40004A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public GameObject storeButton;

	[Token(Token = "0x40004AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private bool alreadyInFront;

	[Token(Token = "0x40004AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF1")]
	private bool alreadyInBack;

	[Token(Token = "0x6000610")]
	[Address(RVA = "0xF060E8", Offset = "0xF060E8", VA = "0xF060E8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000611")]
	[Address(RVA = "0xF06260", Offset = "0xF06260", VA = "0xF06260")]
	private void Start()
	{
	}

	[Token(Token = "0x6000612")]
	[Address(RVA = "0xF0639C", Offset = "0xF0639C", VA = "0xF0639C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000613")]
	[Address(RVA = "0xF064DC", Offset = "0xF064DC", VA = "0xF064DC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000614")]
	[Address(RVA = "0xF067D0", Offset = "0xF067D0", VA = "0xF067D0")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000615")]
	[Address(RVA = "0xF05400", Offset = "0xF05400", VA = "0xF05400")]
	public void RefreshStats()
	{
	}

	[Token(Token = "0x6000616")]
	[Address(RVA = "0xF067D4", Offset = "0xF067D4", VA = "0xF067D4")]
	private void RefreshCourseSelectionUI()
	{
	}

	[Token(Token = "0x6000617")]
	[Address(RVA = "0xF06B94", Offset = "0xF06B94", VA = "0xF06B94")]
	private void DisplayLocked()
	{
	}

	[Token(Token = "0x6000618")]
	[Address(RVA = "0xF069C4", Offset = "0xF069C4", VA = "0xF069C4")]
	private void DisplayUnlocked()
	{
	}

	[Token(Token = "0x6000619")]
	[Address(RVA = "0xF06E34", Offset = "0xF06E34", VA = "0xF06E34")]
	public void Purchase()
	{
	}

	[Token(Token = "0x600061A")]
	[Address(RVA = "0xF06E4C", Offset = "0xF06E4C", VA = "0xF06E4C")]
	public void UnclickAR()
	{
	}

	[Token(Token = "0x600061B")]
	[Address(RVA = "0xF06E94", Offset = "0xF06E94", VA = "0xF06E94")]
	public void Play18()
	{
	}

	[Token(Token = "0x600061C")]
	[Address(RVA = "0xF06F6C", Offset = "0xF06F6C", VA = "0xF06F6C")]
	public void PlayFront9()
	{
	}

	[Token(Token = "0x600061D")]
	[Address(RVA = "0xF07048", Offset = "0xF07048", VA = "0xF07048")]
	public void PlayBack9()
	{
	}

	[Token(Token = "0x600061E")]
	[Address(RVA = "0xF07124", Offset = "0xF07124", VA = "0xF07124")]
	public void PlayPractice()
	{
	}

	[Token(Token = "0x600061F")]
	[Address(RVA = "0xF07200", Offset = "0xF07200", VA = "0xF07200")]
	public void AddHover()
	{
	}

	[Token(Token = "0x6000620")]
	[Address(RVA = "0xF07290", Offset = "0xF07290", VA = "0xF07290")]
	public void RemoveHover()
	{
	}

	[Token(Token = "0x6000621")]
	[Address(RVA = "0xF07334", Offset = "0xF07334", VA = "0xF07334")]
	public void ClickAR()
	{
	}

	[Token(Token = "0x6000622")]
	[Address(RVA = "0xF073C4", Offset = "0xF073C4", VA = "0xF073C4")]
	public CourseMenu()
	{
	}
}
[Token(Token = "0x20000F0")]
public class PigeonAnimationController : MonoBehaviour
{
	[Token(Token = "0x20000F1")]
	private enum Pigeons
	{
		[Token(Token = "0x40004B2")]
		Pigeons01,
		[Token(Token = "0x40004B3")]
		Pigeons02,
		[Token(Token = "0x40004B4")]
		Pigeons03,
		[Token(Token = "0x40004B5")]
		Pigeons04
	}

	[Token(Token = "0x40004AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Animator pigeon;

	[Token(Token = "0x40004AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private AudioSource sound;

	[Token(Token = "0x40004AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Pigeons AttachedPigeon;

	[Token(Token = "0x40004AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private bool isRat;

	[Token(Token = "0x40004B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private string s;

	[Token(Token = "0x6000623")]
	[Address(RVA = "0xF073CC", Offset = "0xF073CC", VA = "0xF073CC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000624")]
	[Address(RVA = "0xF07504", Offset = "0xF07504", VA = "0xF07504")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000625")]
	[Address(RVA = "0xF07638", Offset = "0xF07638", VA = "0xF07638")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000626")]
	[Address(RVA = "0xF075B4", Offset = "0xF075B4", VA = "0xF075B4")]
	private void PlayFlightSound()
	{
	}

	[Token(Token = "0x6000627")]
	[Address(RVA = "0xF076E0", Offset = "0xF076E0", VA = "0xF076E0")]
	public PigeonAnimationController()
	{
	}
}
[Token(Token = "0x20000F2")]
public class LabyrinthDrillLightShader : MonoBehaviour
{
	[Token(Token = "0x6000628")]
	[Address(RVA = "0xF076E8", Offset = "0xF076E8", VA = "0xF076E8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000629")]
	[Address(RVA = "0xF076EC", Offset = "0xF076EC", VA = "0xF076EC")]
	private void Update()
	{
	}

	[Token(Token = "0x600062A")]
	[Address(RVA = "0xF0775C", Offset = "0xF0775C", VA = "0xF0775C")]
	public LabyrinthDrillLightShader()
	{
	}
}
[Token(Token = "0x20000F3")]
public class MiniSubAnimation : MovingObject
{
	[Token(Token = "0x40004B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private AnimationClip clip;

	[Token(Token = "0x40004B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public Animation anim;

	[Token(Token = "0x40004B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public UnityEvent OnINtervalAction;

	[Token(Token = "0x40004B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public float audioTriggerTime;

	[Token(Token = "0x40004BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public UnityEvent audioEvent;

	[Token(Token = "0x40004BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private bool audioTriggered;

	[Token(Token = "0x40004BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private AnimationState state;

	[Token(Token = "0x40004BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private bool initialized;

	[Token(Token = "0x40004BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x159")]
	private bool onceLooped;

	[Token(Token = "0x40004BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
	private float currentTime;

	[Token(Token = "0x600062B")]
	[Address(RVA = "0xF07764", Offset = "0xF07764", VA = "0xF07764")]
	private void Start()
	{
	}

	[Token(Token = "0x600062C")]
	[Address(RVA = "0xF077F0", Offset = "0xF077F0", VA = "0xF077F0", Slot = "11")]
	protected override void MoveObject()
	{
	}

	[Token(Token = "0x600062D")]
	[Address(RVA = "0xF07920", Offset = "0xF07920", VA = "0xF07920", Slot = "12")]
	protected override void OnReset()
	{
	}

	[Token(Token = "0x600062E")]
	[Address(RVA = "0xF077A8", Offset = "0xF077A8", VA = "0xF077A8")]
	private AnimationState GetState(string name)
	{
		return null;
	}

	[Token(Token = "0x600062F")]
	[Address(RVA = "0xF07928", Offset = "0xF07928", VA = "0xF07928")]
	public MiniSubAnimation()
	{
	}
}
[Token(Token = "0x20000F4")]
public class CraigMainMenuARDebugHack : MonoBehaviour
{
	[Token(Token = "0x40004C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject mainMenu;

	[Token(Token = "0x40004C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject ARCameraConstraint;

	[Token(Token = "0x6000630")]
	[Address(RVA = "0xF07930", Offset = "0xF07930", VA = "0xF07930")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000631")]
	[Address(RVA = "0xF079BC", Offset = "0xF079BC", VA = "0xF079BC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000632")]
	[Address(RVA = "0xF079C0", Offset = "0xF079C0", VA = "0xF079C0")]
	public CraigMainMenuARDebugHack()
	{
	}
}
[Token(Token = "0x20000F5")]
public class CullingSwitcher : MonoBehaviour
{
	[Token(Token = "0x40004C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool useBuiltInCulling;

	[Token(Token = "0x40004C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject[] objects;

	[Token(Token = "0x6000633")]
	[Address(RVA = "0xF079C8", Offset = "0xF079C8", VA = "0xF079C8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000634")]
	[Address(RVA = "0xF07AA8", Offset = "0xF07AA8", VA = "0xF07AA8")]
	public CullingSwitcher()
	{
	}
}
[Token(Token = "0x20000F6")]
public class Cup : CompoundTrigger
{
	[Token(Token = "0x40004C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int cupCounter;

	[Token(Token = "0x40004C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Hole hole;

	[Token(Token = "0x6000635")]
	[Address(RVA = "0xF07AB8", Offset = "0xF07AB8", VA = "0xF07AB8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000636")]
	[Address(RVA = "0xF07BCC", Offset = "0xF07BCC", VA = "0xF07BCC", Slot = "4")]
	protected override void OnCompoundTriggerEnter()
	{
	}

	[Token(Token = "0x6000637")]
	[Address(RVA = "0xF07C98", Offset = "0xF07C98", VA = "0xF07C98", Slot = "5")]
	protected override void OnCompoundTriggerExit()
	{
	}

	[Token(Token = "0x6000638")]
	[Address(RVA = "0xF07DFC", Offset = "0xF07DFC", VA = "0xF07DFC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000639")]
	[Address(RVA = "0xF07F3C", Offset = "0xF07F3C", VA = "0xF07F3C")]
	public Cup()
	{
	}
}
[Token(Token = "0x20000F7")]
public class DeactivateOnHand : MonoBehaviour
{
	[Token(Token = "0x40004C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool useHandsInverted;

	[Token(Token = "0x40004C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject[] leftHandActiveList;

	[Token(Token = "0x40004C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject[] rightHandActiveList;

	[Token(Token = "0x600063A")]
	[Address(RVA = "0xF07F44", Offset = "0xF07F44", VA = "0xF07F44")]
	private void Start()
	{
	}

	[Token(Token = "0x600063B")]
	[Address(RVA = "0xF080B4", Offset = "0xF080B4", VA = "0xF080B4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600063C")]
	[Address(RVA = "0xF07FF0", Offset = "0xF07FF0", VA = "0xF07FF0")]
	private void ChangeHand()
	{
	}

	[Token(Token = "0x600063D")]
	[Address(RVA = "0xF08158", Offset = "0xF08158", VA = "0xF08158")]
	private void SetActive(GameObject[] list, bool active)
	{
	}

	[Token(Token = "0x600063E")]
	[Address(RVA = "0xF081C0", Offset = "0xF081C0", VA = "0xF081C0")]
	public DeactivateOnHand()
	{
	}
}
[Token(Token = "0x20000F8")]
public class DeactivateOnTrigger : CompoundTrigger
{
	[Token(Token = "0x20000F9")]
	[CompilerGenerated]
	private sealed class <UpdateActiveStates>d__16 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40004D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40004D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40004D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DeactivateOnTrigger <>4__this;

		[Token(Token = "0x40004D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int index;

		[Token(Token = "0x40004D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<GameObject>.Enumerator <>7__wrap1;

		[Token(Token = "0x170000E1")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600064F")]
			[Address(RVA = "0xF09148", Offset = "0xF09148", VA = "0xF09148", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000E2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000651")]
			[Address(RVA = "0xF09190", Offset = "0xF09190", VA = "0xF09190", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000648")]
		[Address(RVA = "0xF08A54", Offset = "0xF08A54", VA = "0xF08A54")]
		[DebuggerHidden]
		public <UpdateActiveStates>d__16(int <>1__state)
		{
		}

		[Token(Token = "0x6000649")]
		[Address(RVA = "0xF08AB8", Offset = "0xF08AB8", VA = "0xF08AB8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600064A")]
		[Address(RVA = "0xF08AF4", Offset = "0xF08AF4", VA = "0xF08AF4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600064B")]
		[Address(RVA = "0xF09008", Offset = "0xF09008", VA = "0xF09008")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x600064C")]
		[Address(RVA = "0xF09058", Offset = "0xF09058", VA = "0xF09058")]
		private void <>m__Finally2()
		{
		}

		[Token(Token = "0x600064D")]
		[Address(RVA = "0xF090A8", Offset = "0xF090A8", VA = "0xF090A8")]
		private void <>m__Finally3()
		{
		}

		[Token(Token = "0x600064E")]
		[Address(RVA = "0xF090F8", Offset = "0xF090F8", VA = "0xF090F8")]
		private void <>m__Finally4()
		{
		}

		[Token(Token = "0x6000650")]
		[Address(RVA = "0xF09150", Offset = "0xF09150", VA = "0xF09150", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000FA")]
	[CompilerGenerated]
	private sealed class <UpdateVisibility>d__17 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40004D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40004D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40004DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DeactivateOnTrigger <>4__this;

		[Token(Token = "0x40004DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int index;

		[Token(Token = "0x40004DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<GameObject>.Enumerator <>7__wrap1;

		[Token(Token = "0x170000E3")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000659")]
			[Address(RVA = "0xF09C1C", Offset = "0xF09C1C", VA = "0xF09C1C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000E4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600065B")]
			[Address(RVA = "0xF09C64", Offset = "0xF09C64", VA = "0xF09C64", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000652")]
		[Address(RVA = "0xF08A7C", Offset = "0xF08A7C", VA = "0xF08A7C")]
		[DebuggerHidden]
		public <UpdateVisibility>d__17(int <>1__state)
		{
		}

		[Token(Token = "0x6000653")]
		[Address(RVA = "0xF09198", Offset = "0xF09198", VA = "0xF09198", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000654")]
		[Address(RVA = "0xF091D4", Offset = "0xF091D4", VA = "0xF091D4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000655")]
		[Address(RVA = "0xF09ADC", Offset = "0xF09ADC", VA = "0xF09ADC")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x6000656")]
		[Address(RVA = "0xF09B2C", Offset = "0xF09B2C", VA = "0xF09B2C")]
		private void <>m__Finally2()
		{
		}

		[Token(Token = "0x6000657")]
		[Address(RVA = "0xF09B7C", Offset = "0xF09B7C", VA = "0xF09B7C")]
		private void <>m__Finally3()
		{
		}

		[Token(Token = "0x6000658")]
		[Address(RVA = "0xF09BCC", Offset = "0xF09BCC", VA = "0xF09BCC")]
		private void <>m__Finally4()
		{
		}

		[Token(Token = "0x600065A")]
		[Address(RVA = "0xF09C24", Offset = "0xF09C24", VA = "0xF09C24", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40004C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[Header("Index 0 List - VR || Index 1 List - AR || Index 2 List - Both")]
	public List<ListWrapper<GameObject>> activateInside;

	[Token(Token = "0x40004CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public List<ListWrapper<GameObject>> activateOutside;

	[Token(Token = "0x40004CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Header("Index 0 List - VR || Index 1 List - AR || Index 2 List - Both")]
	public List<ListWrapper<GameObject>> showInside;

	[Token(Token = "0x40004CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public List<ListWrapper<GameObject>> showOutside;

	[Token(Token = "0x40004CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[Space(20f)]
	[Tooltip("Fires when entering or leaving trigger area. True -> inside trigger | False -> outside trigger")]
	public UnityEvent<bool> OnActivate;

	[Token(Token = "0x40004CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[Space(20f)]
	public bool delayedActivate;

	[Token(Token = "0x40004CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	public bool ignoreStartCollisions;

	[Token(Token = "0x40004D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x62")]
	private bool isInsideTrigger;

	[Token(Token = "0x40004D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Dictionary<int, Vector3> OriginalPositionsDict;

	[Token(Token = "0x40004D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float mainCamFarClippingDistance;

	[Token(Token = "0x600063F")]
	[Address(RVA = "0xF081D0", Offset = "0xF081D0", VA = "0xF081D0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000640")]
	[Address(RVA = "0xF083C4", Offset = "0xF083C4", VA = "0xF083C4")]
	private void InitializeOriginalPositionsDict()
	{
	}

	[Token(Token = "0x6000641")]
	[Address(RVA = "0xF08724", Offset = "0xF08724", VA = "0xF08724", Slot = "4")]
	protected override void OnCompoundTriggerEnter()
	{
	}

	[Token(Token = "0x6000642")]
	[Address(RVA = "0xF08794", Offset = "0xF08794", VA = "0xF08794", Slot = "5")]
	protected override void OnCompoundTriggerExit()
	{
	}

	[Token(Token = "0x6000643")]
	[Address(RVA = "0xF08730", Offset = "0xF08730", VA = "0xF08730")]
	private void CheckAndUpdateTrigger()
	{
	}

	[Token(Token = "0x6000644")]
	[Address(RVA = "0xF0879C", Offset = "0xF0879C", VA = "0xF0879C")]
	private void UpdateStatus()
	{
	}

	[Token(Token = "0x6000645")]
	[Address(RVA = "0xF08964", Offset = "0xF08964", VA = "0xF08964")]
	[IteratorStateMachine(typeof(<UpdateActiveStates>d__16))]
	private IEnumerator UpdateActiveStates(int index)
	{
		return null;
	}

	[Token(Token = "0x6000646")]
	[Address(RVA = "0xF089DC", Offset = "0xF089DC", VA = "0xF089DC")]
	[IteratorStateMachine(typeof(<UpdateVisibility>d__17))]
	private IEnumerator UpdateVisibility(int index)
	{
		return null;
	}

	[Token(Token = "0x6000647")]
	[Address(RVA = "0xF08AA4", Offset = "0xF08AA4", VA = "0xF08AA4")]
	public DeactivateOnTrigger()
	{
	}
}
[Token(Token = "0x20000FB")]
public class DialogueBox : MonoBehaviour
{
	[Token(Token = "0x20000FC")]
	public delegate void MyDelegate();

	[Token(Token = "0x20000FD")]
	[CompilerGenerated]
	private sealed class <DelayedShowDialogue>d__45 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000501")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000502")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000503")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DialogueBox <>4__this;

		[Token(Token = "0x4000504")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string newDialogueText;

		[Token(Token = "0x4000505")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string newOption4Text;

		[Token(Token = "0x4000506")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string newOption3Text;

		[Token(Token = "0x4000507")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string newOption2Text;

		[Token(Token = "0x4000508")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string newOption1Text;

		[Token(Token = "0x4000509")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public MyDelegate newOption4Function;

		[Token(Token = "0x400050A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public MyDelegate newOption3Function;

		[Token(Token = "0x400050B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public MyDelegate newOption2Function;

		[Token(Token = "0x400050C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public MyDelegate newOption1Function;

		[Token(Token = "0x170000E5")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000675")]
			[Address(RVA = "0xF0A544", Offset = "0xF0A544", VA = "0xF0A544", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000E6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000677")]
			[Address(RVA = "0xF0A58C", Offset = "0xF0A58C", VA = "0xF0A58C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000672")]
		[Address(RVA = "0xF0A310", Offset = "0xF0A310", VA = "0xF0A310")]
		[DebuggerHidden]
		public <DelayedShowDialogue>d__45(int <>1__state)
		{
		}

		[Token(Token = "0x6000673")]
		[Address(RVA = "0xF0A4CC", Offset = "0xF0A4CC", VA = "0xF0A4CC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000674")]
		[Address(RVA = "0xF0A4D0", Offset = "0xF0A4D0", VA = "0xF0A4D0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000676")]
		[Address(RVA = "0xF0A54C", Offset = "0xF0A54C", VA = "0xF0A54C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40004DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject master;

	[Token(Token = "0x40004DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool parentToXRRig;

	[Token(Token = "0x40004DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TextMeshProUGUI dialogueTextAR;

	[Token(Token = "0x40004E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TextMeshProUGUI option1TextAR;

	[Token(Token = "0x40004E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TextMeshProUGUI option2TextAR;

	[Token(Token = "0x40004E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TextMeshProUGUI option3TextAR;

	[Token(Token = "0x40004E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TextMeshProUGUI option4TextAR;

	[Token(Token = "0x40004E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject dialogueBoxAR;

	[Token(Token = "0x40004E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject option2ButtonAR;

	[Token(Token = "0x40004E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject option3ButtonAR;

	[Token(Token = "0x40004E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject option4ButtonAR;

	[Token(Token = "0x40004E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public TextMeshProUGUI dialogueTextVR;

	[Token(Token = "0x40004E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public TextMeshProUGUI option1TextVR;

	[Token(Token = "0x40004EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public TextMeshProUGUI option2TextVR;

	[Token(Token = "0x40004EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public TextMeshProUGUI option3TextVR;

	[Token(Token = "0x40004EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public TextMeshProUGUI option4TextVR;

	[Token(Token = "0x40004ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public GameObject dialogueBoxVR;

	[Token(Token = "0x40004EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public GameObject option2ButtonVR;

	[Token(Token = "0x40004EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public GameObject option3ButtonVR;

	[Token(Token = "0x40004F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public GameObject option4ButtonVR;

	[Token(Token = "0x40004F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private TextMeshProUGUI dialogueText;

	[Token(Token = "0x40004F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private TextMeshProUGUI option1Text;

	[Token(Token = "0x40004F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private TextMeshProUGUI option2Text;

	[Token(Token = "0x40004F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private TextMeshProUGUI option3Text;

	[Token(Token = "0x40004F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private TextMeshProUGUI option4Text;

	[Token(Token = "0x40004F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private GameObject option2Button;

	[Token(Token = "0x40004F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private GameObject option3Button;

	[Token(Token = "0x40004F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private GameObject option4Button;

	[Token(Token = "0x40004F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public MyDelegate option1FunctionToCall;

	[Token(Token = "0x40004FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public MyDelegate option2FunctionToCall;

	[Token(Token = "0x40004FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public MyDelegate option3FunctionToCall;

	[Token(Token = "0x40004FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public MyDelegate option4FunctionToCall;

	[Token(Token = "0x40004FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[HideInInspector]
	public static DialogueBox instance;

	[Token(Token = "0x40004FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private Animator animator;

	[Token(Token = "0x40004FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private float progress;

	[Token(Token = "0x4000500")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	public bool waitingForDialogue;

	[Token(Token = "0x600065C")]
	[Address(RVA = "0xF09C6C", Offset = "0xF09C6C", VA = "0xF09C6C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600065D")]
	[Address(RVA = "0xF09EDC", Offset = "0xF09EDC", VA = "0xF09EDC")]
	private void OnGodModeExit()
	{
	}

	[Token(Token = "0x600065E")]
	[Address(RVA = "0xF09F4C", Offset = "0xF09F4C", VA = "0xF09F4C")]
	private void OnGodMode()
	{
	}

	[Token(Token = "0x600065F")]
	[Address(RVA = "0xF09FE8", Offset = "0xF09FE8", VA = "0xF09FE8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000660")]
	[Address(RVA = "0xF0A104", Offset = "0xF0A104", VA = "0xF0A104")]
	private void Update()
	{
	}

	[Token(Token = "0x6000661")]
	[Address(RVA = "0xF0A1E4", Offset = "0xF0A1E4", VA = "0xF0A1E4")]
	public void ShowDialogue(string newDialogueText, string newOption1Text, MyDelegate newOption1Function)
	{
	}

	[Token(Token = "0x6000662")]
	[Address(RVA = "0xF02190", Offset = "0xF02190", VA = "0xF02190")]
	public void ShowDialogue(string newDialogueText, string newOption4Text, string newOption1Text, MyDelegate newOption4Function, MyDelegate newOption1Function)
	{
	}

	[Token(Token = "0x6000663")]
	[Address(RVA = "0xF0382C", Offset = "0xF0382C", VA = "0xF0382C")]
	public void ShowDialogue(string newDialogueText, string newOption4Text, string newOption2Text, string newOption1Text, MyDelegate newOption4Function, MyDelegate newOption2Function, MyDelegate newOption1Function)
	{
	}

	[Token(Token = "0x6000664")]
	[Address(RVA = "0xF0A258", Offset = "0xF0A258", VA = "0xF0A258")]
	[IteratorStateMachine(typeof(<DelayedShowDialogue>d__45))]
	private IEnumerator DelayedShowDialogue(string newDialogueText, string newOption4Text, string newOption3Text, string newOption2Text, string newOption1Text, MyDelegate newOption4Function, MyDelegate newOption3Function, MyDelegate newOption2Function, MyDelegate newOption1Function)
	{
		return null;
	}

	[Token(Token = "0x6000665")]
	[Address(RVA = "0xF031E8", Offset = "0xF031E8", VA = "0xF031E8")]
	public void ShowDialogue(string newDialogueText, string newOption4Text, string newOption3Text, string newOption2Text, string newOption1Text, MyDelegate newOption4Function, MyDelegate newOption3Function, MyDelegate newOption2Function, MyDelegate newOption1Function)
	{
	}

	[Token(Token = "0x6000666")]
	[Address(RVA = "0xF0A338", Offset = "0xF0A338", VA = "0xF0A338")]
	private void DummyOption1Function()
	{
	}

	[Token(Token = "0x6000667")]
	[Address(RVA = "0xF0A33C", Offset = "0xF0A33C", VA = "0xF0A33C")]
	public void CancelDialogue()
	{
	}

	[Token(Token = "0x6000668")]
	[Address(RVA = "0xF0A3DC", Offset = "0xF0A3DC", VA = "0xF0A3DC")]
	public void ChooseOption1()
	{
	}

	[Token(Token = "0x6000669")]
	[Address(RVA = "0xF0A41C", Offset = "0xF0A41C", VA = "0xF0A41C")]
	public void ChooseOption2()
	{
	}

	[Token(Token = "0x600066A")]
	[Address(RVA = "0xF0A450", Offset = "0xF0A450", VA = "0xF0A450")]
	public void ChooseOption3()
	{
	}

	[Token(Token = "0x600066B")]
	[Address(RVA = "0xF0A3A8", Offset = "0xF0A3A8", VA = "0xF0A3A8")]
	public void ChooseOption4()
	{
	}

	[Token(Token = "0x600066C")]
	[Address(RVA = "0xF0A40C", Offset = "0xF0A40C", VA = "0xF0A40C")]
	private void ClearFunctions()
	{
	}

	[Token(Token = "0x600066D")]
	[Address(RVA = "0xF0A484", Offset = "0xF0A484", VA = "0xF0A484")]
	public DialogueBox()
	{
	}
}
[Token(Token = "0x20000FE")]
[ExecuteInEditMode]
public class DisableAllLights : MonoBehaviour
{
	[Token(Token = "0x400050D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Light[] lights;

	[Token(Token = "0x400050E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool disableAllLights;

	[Token(Token = "0x6000678")]
	[Address(RVA = "0xF0A594", Offset = "0xF0A594", VA = "0xF0A594")]
	private void DisableLights()
	{
	}

	[Token(Token = "0x6000679")]
	[Address(RVA = "0xF0A6C8", Offset = "0xF0A6C8", VA = "0xF0A6C8")]
	private void Update()
	{
	}

	[Token(Token = "0x600067A")]
	[Address(RVA = "0xF0A6E8", Offset = "0xF0A6E8", VA = "0xF0A6E8")]
	public DisableAllLights()
	{
	}
}
[Token(Token = "0x20000FF")]
public class DisableIfHandNotActive : MonoBehaviour
{
	[Token(Token = "0x2000100")]
	[CompilerGenerated]
	private sealed class <LateStart>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000512")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000513")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000514")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DisableIfHandNotActive <>4__this;

		[Token(Token = "0x170000E7")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000685")]
			[Address(RVA = "0xF0AE04", Offset = "0xF0AE04", VA = "0xF0AE04", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000E8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000687")]
			[Address(RVA = "0xF0AE4C", Offset = "0xF0AE4C", VA = "0xF0AE4C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000682")]
		[Address(RVA = "0xF0AC38", Offset = "0xF0AC38", VA = "0xF0AC38")]
		[DebuggerHidden]
		public <LateStart>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6000683")]
		[Address(RVA = "0xF0ADB0", Offset = "0xF0ADB0", VA = "0xF0ADB0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000684")]
		[Address(RVA = "0xF0ADB4", Offset = "0xF0ADB4", VA = "0xF0ADB4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000686")]
		[Address(RVA = "0xF0AE0C", Offset = "0xF0AE0C", VA = "0xF0AE0C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400050F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string activeHand;

	[Token(Token = "0x4000510")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject enableObject;

	[Token(Token = "0x4000511")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool disableInGodMode;

	[Token(Token = "0x600067B")]
	[Address(RVA = "0xF0A6F0", Offset = "0xF0A6F0", VA = "0xF0A6F0")]
	private void Start()
	{
	}

	[Token(Token = "0x600067C")]
	[Address(RVA = "0xF0A778", Offset = "0xF0A778", VA = "0xF0A778")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600067D")]
	[Address(RVA = "0xF0A9D8", Offset = "0xF0A9D8", VA = "0xF0A9D8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600067E")]
	[Address(RVA = "0xF0A710", Offset = "0xF0A710", VA = "0xF0A710")]
	[IteratorStateMachine(typeof(<LateStart>d__6))]
	private IEnumerator LateStart()
	{
		return null;
	}

	[Token(Token = "0x600067F")]
	[Address(RVA = "0xF0AC60", Offset = "0xF0AC60", VA = "0xF0AC60")]
	private void ChangeHand()
	{
	}

	[Token(Token = "0x6000680")]
	[Address(RVA = "0xF0AD28", Offset = "0xF0AD28", VA = "0xF0AD28")]
	private void OnGodMode()
	{
	}

	[Token(Token = "0x6000681")]
	[Address(RVA = "0xF0AD58", Offset = "0xF0AD58", VA = "0xF0AD58")]
	public DisableIfHandNotActive()
	{
	}
}
[Token(Token = "0x2000101")]
public class DisableInGodMode : MonoBehaviour
{
	[Token(Token = "0x4000515")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool activeInGodMode;

	[Token(Token = "0x6000688")]
	[Address(RVA = "0xF0AE54", Offset = "0xF0AE54", VA = "0xF0AE54")]
	private void Start()
	{
	}

	[Token(Token = "0x6000689")]
	[Address(RVA = "0xF0AED4", Offset = "0xF0AED4", VA = "0xF0AED4")]
	public DisableInGodMode()
	{
	}
}
[Token(Token = "0x2000102")]
public class DisableOnFocusLost : MonoBehaviour
{
	[Token(Token = "0x4000516")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Renderer rend;

	[Token(Token = "0x600068A")]
	[Address(RVA = "0xF0AEDC", Offset = "0xF0AEDC", VA = "0xF0AEDC")]
	private void Awake()
	{
	}

	[Token(Token = "0x600068B")]
	[Address(RVA = "0xF0AF3C", Offset = "0xF0AF3C", VA = "0xF0AF3C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600068C")]
	[Address(RVA = "0xF0AFFC", Offset = "0xF0AFFC", VA = "0xF0AFFC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600068D")]
	[Address(RVA = "0xF0B0BC", Offset = "0xF0B0BC", VA = "0xF0B0BC")]
	private void OnFocusLost()
	{
	}

	[Token(Token = "0x600068E")]
	[Address(RVA = "0xF0B0DC", Offset = "0xF0B0DC", VA = "0xF0B0DC")]
	private void OnFocusAcquired()
	{
	}

	[Token(Token = "0x600068F")]
	[Address(RVA = "0xF0B0FC", Offset = "0xF0B0FC", VA = "0xF0B0FC")]
	public DisableOnFocusLost()
	{
	}
}
[Token(Token = "0x2000103")]
public class DisableOnPlay : MonoBehaviour
{
	[Token(Token = "0x6000690")]
	[Address(RVA = "0xF0B104", Offset = "0xF0B104", VA = "0xF0B104")]
	private void Start()
	{
	}

	[Token(Token = "0x6000691")]
	[Address(RVA = "0xF0B128", Offset = "0xF0B128", VA = "0xF0B128")]
	public DisableOnPlay()
	{
	}
}
[Token(Token = "0x2000104")]
public class DisablePlatform : MCPlatformSpecific
{
	[Token(Token = "0x4000517")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x23")]
	[Header("Object will stay active for checked platforms")]
	public bool dummyPropertyToShowHeader;

	[Token(Token = "0x6000692")]
	[Address(RVA = "0xF0B130", Offset = "0xF0B130", VA = "0xF0B130")]
	private new void Start()
	{
	}

	[Token(Token = "0x6000693")]
	[Address(RVA = "0xF0B174", Offset = "0xF0B174", VA = "0xF0B174")]
	public bool IsPlatformActive()
	{
		return default(bool);
	}

	[Token(Token = "0x6000694")]
	[Address(RVA = "0xF0B17C", Offset = "0xF0B17C", VA = "0xF0B17C")]
	public DisablePlatform()
	{
	}
}
[Token(Token = "0x2000105")]
public class DisplayDetectedHeight : MonoBehaviour
{
	[Token(Token = "0x4000518")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Text text;

	[Token(Token = "0x6000695")]
	[Address(RVA = "0xF0B184", Offset = "0xF0B184", VA = "0xF0B184")]
	private void Start()
	{
	}

	[Token(Token = "0x6000696")]
	[Address(RVA = "0xF0B1E4", Offset = "0xF0B1E4", VA = "0xF0B1E4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000697")]
	[Address(RVA = "0xF0B2E0", Offset = "0xF0B2E0", VA = "0xF0B2E0")]
	public DisplayDetectedHeight()
	{
	}
}
[Token(Token = "0x2000106")]
public class DisplayFrameRate : MonoBehaviour
{
	[Token(Token = "0x4000519")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Text text;

	[Token(Token = "0x400051A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float counter;

	[Token(Token = "0x400051B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int frames;

	[Token(Token = "0x6000698")]
	[Address(RVA = "0xF0B2E8", Offset = "0xF0B2E8", VA = "0xF0B2E8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000699")]
	[Address(RVA = "0xF0B348", Offset = "0xF0B348", VA = "0xF0B348")]
	private void Update()
	{
	}

	[Token(Token = "0x600069A")]
	[Address(RVA = "0xF0B408", Offset = "0xF0B408", VA = "0xF0B408")]
	public DisplayFrameRate()
	{
	}
}
[Token(Token = "0x2000107")]
public class DisplayTrackingState : MonoBehaviour
{
	[Token(Token = "0x400051C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Text text;

	[Token(Token = "0x600069B")]
	[Address(RVA = "0xF0B410", Offset = "0xF0B410", VA = "0xF0B410")]
	private void Start()
	{
	}

	[Token(Token = "0x600069C")]
	[Address(RVA = "0xF0B470", Offset = "0xF0B470", VA = "0xF0B470")]
	private void Update()
	{
	}

	[Token(Token = "0x600069D")]
	[Address(RVA = "0xF0B66C", Offset = "0xF0B66C", VA = "0xF0B66C")]
	public DisplayTrackingState()
	{
	}
}
[Token(Token = "0x2000108")]
public class DisplayYOffset : MonoBehaviour
{
	[Token(Token = "0x400051D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Text text;

	[Token(Token = "0x600069E")]
	[Address(RVA = "0xF0B674", Offset = "0xF0B674", VA = "0xF0B674")]
	private void Start()
	{
	}

	[Token(Token = "0x600069F")]
	[Address(RVA = "0xF0B6D4", Offset = "0xF0B6D4", VA = "0xF0B6D4")]
	private void Update()
	{
	}

	[Token(Token = "0x60006A0")]
	[Address(RVA = "0xF0B7BC", Offset = "0xF0B7BC", VA = "0xF0B7BC")]
	public DisplayYOffset()
	{
	}
}
[Token(Token = "0x2000109")]
public class DoNotEndPuttTrigger : CompoundTrigger
{
	[Token(Token = "0x60006A1")]
	[Address(RVA = "0xF0B7C4", Offset = "0xF0B7C4", VA = "0xF0B7C4")]
	private void Start()
	{
	}

	[Token(Token = "0x60006A2")]
	[Address(RVA = "0xF0B7CC", Offset = "0xF0B7CC", VA = "0xF0B7CC", Slot = "4")]
	protected override void OnCompoundTriggerEnter()
	{
	}

	[Token(Token = "0x60006A3")]
	[Address(RVA = "0xF0B864", Offset = "0xF0B864", VA = "0xF0B864", Slot = "5")]
	protected override void OnCompoundTriggerExit()
	{
	}

	[Token(Token = "0x60006A4")]
	[Address(RVA = "0xF0B8F8", Offset = "0xF0B8F8", VA = "0xF0B8F8")]
	public DoNotEndPuttTrigger()
	{
	}
}
[Token(Token = "0x200010A")]
public class DoNotWarp : CompoundTrigger
{
	[Token(Token = "0x60006A5")]
	[Address(RVA = "0xF0B900", Offset = "0xF0B900", VA = "0xF0B900")]
	private void Start()
	{
	}

	[Token(Token = "0x60006A6")]
	[Address(RVA = "0xF0B908", Offset = "0xF0B908", VA = "0xF0B908", Slot = "4")]
	protected override void OnCompoundTriggerEnter()
	{
	}

	[Token(Token = "0x60006A7")]
	[Address(RVA = "0xF0B960", Offset = "0xF0B960", VA = "0xF0B960", Slot = "5")]
	protected override void OnCompoundTriggerExit()
	{
	}

	[Token(Token = "0x60006A8")]
	[Address(RVA = "0xF0B9B4", Offset = "0xF0B9B4", VA = "0xF0B9B4")]
	public DoNotWarp()
	{
	}
}
[Token(Token = "0x200010B")]
public class FadeOnCourseHighlighted : MonoBehaviour
{
	[Token(Token = "0x400051E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private CanvasGroup canvasGroup;

	[Token(Token = "0x400051F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float deadTimer;

	[Token(Token = "0x60006A9")]
	[Address(RVA = "0xF0B9BC", Offset = "0xF0B9BC", VA = "0xF0B9BC")]
	private void Start()
	{
	}

	[Token(Token = "0x60006AA")]
	[Address(RVA = "0xF0BA1C", Offset = "0xF0BA1C", VA = "0xF0BA1C")]
	private void Update()
	{
	}

	[Token(Token = "0x60006AB")]
	[Address(RVA = "0xF0BB58", Offset = "0xF0BB58", VA = "0xF0BB58")]
	public FadeOnCourseHighlighted()
	{
	}
}
[Token(Token = "0x200010C")]
public class FFRSettings : MonoBehaviour
{
	[Token(Token = "0x200010D")]
	private enum FFRLevel
	{
		[Token(Token = "0x4000529")]
		Off,
		[Token(Token = "0x400052A")]
		Low,
		[Token(Token = "0x400052B")]
		Medium,
		[Token(Token = "0x400052C")]
		High,
		[Token(Token = "0x400052D")]
		TopHigh
	}

	[Token(Token = "0x4000520")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("Quest 1 FFR Settings")]
	[SerializeField]
	private FFRLevel quest1Level;

	[Token(Token = "0x4000521")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private bool quest1Dynamic;

	[Token(Token = "0x4000522")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Tooltip("FFR Max level to us in god mode. (or fixed if not dynamic)")]
	[SerializeField]
	private FFRLevel quest1GodModeLevel;

	[Token(Token = "0x4000523")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[Header("Quest 2 FFR Settings")]
	[SerializeField]
	private FFRLevel quest2Level;

	[Token(Token = "0x4000524")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private bool quest2Dynamic;

	[Token(Token = "0x4000525")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	[Tooltip("FFR Max level to us in god mode. (or fixed if not dynamic)")]
	private FFRLevel quest2GodModeLevel;

	[Token(Token = "0x4000526")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool mainMenu;

	[Token(Token = "0x4000527")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	private bool godMode;

	[Token(Token = "0x60006AC")]
	[Address(RVA = "0xF0BB60", Offset = "0xF0BB60", VA = "0xF0BB60")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60006AD")]
	[Address(RVA = "0xF0BC48", Offset = "0xF0BC48", VA = "0xF0BC48")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60006AE")]
	[Address(RVA = "0xF0BD30", Offset = "0xF0BD30", VA = "0xF0BD30")]
	public void ToggleFFR(bool toggle)
	{
	}

	[Token(Token = "0x60006AF")]
	[Address(RVA = "0xF0BD68", Offset = "0xF0BD68", VA = "0xF0BD68")]
	private void GodModeOn()
	{
	}

	[Token(Token = "0x60006B0")]
	[Address(RVA = "0xF0BD74", Offset = "0xF0BD74", VA = "0xF0BD74")]
	private void GodModeOff()
	{
	}

	[Token(Token = "0x60006B1")]
	[Address(RVA = "0xF0BD7C", Offset = "0xF0BD7C", VA = "0xF0BD7C")]
	private void Start()
	{
	}

	[Token(Token = "0x60006B2")]
	[Address(RVA = "0xF0BD64", Offset = "0xF0BD64", VA = "0xF0BD64")]
	private void ClearFFR()
	{
	}

	[Token(Token = "0x60006B3")]
	[Address(RVA = "0xF0BD60", Offset = "0xF0BD60", VA = "0xF0BD60")]
	private void SetFFR()
	{
	}

	[Token(Token = "0x60006B4")]
	[Address(RVA = "0xF0BD80", Offset = "0xF0BD80", VA = "0xF0BD80")]
	public FFRSettings()
	{
	}
}
[Token(Token = "0x200010E")]
public class Flag : MonoBehaviour
{
	[Token(Token = "0x400052E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Hole hole;

	[Token(Token = "0x400052F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Renderer rend;

	[Token(Token = "0x4000530")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Material mat;

	[Token(Token = "0x4000531")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Color onColor;

	[Token(Token = "0x4000532")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Color offColor;

	[Token(Token = "0x60006B5")]
	[Address(RVA = "0xF0BD88", Offset = "0xF0BD88", VA = "0xF0BD88")]
	private void Start()
	{
	}

	[Token(Token = "0x60006B6")]
	[Address(RVA = "0xF0BE3C", Offset = "0xF0BE3C", VA = "0xF0BE3C")]
	private void Update()
	{
	}

	[Token(Token = "0x60006B7")]
	[Address(RVA = "0xF0C380", Offset = "0xF0C380", VA = "0xF0C380")]
	public Flag()
	{
	}
}
[Token(Token = "0x200010F")]
[ExecuteInEditMode]
public class FogController : MonoBehaviour
{
	[Token(Token = "0x2000110")]
	[CompilerGenerated]
	private sealed class <ExitGodModeDelayed>d__79 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000579")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400057A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400057B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FogController <>4__this;

		[Token(Token = "0x170000E9")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60006CA")]
			[Address(RVA = "0xF0D574", Offset = "0xF0D574", VA = "0xF0D574", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000EA")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60006CC")]
			[Address(RVA = "0xF0D5BC", Offset = "0xF0D5BC", VA = "0xF0D5BC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60006C7")]
		[Address(RVA = "0xF0D21C", Offset = "0xF0D21C", VA = "0xF0D21C")]
		[DebuggerHidden]
		public <ExitGodModeDelayed>d__79(int <>1__state)
		{
		}

		[Token(Token = "0x60006C8")]
		[Address(RVA = "0xF0D4B8", Offset = "0xF0D4B8", VA = "0xF0D4B8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60006C9")]
		[Address(RVA = "0xF0D4BC", Offset = "0xF0D4BC", VA = "0xF0D4BC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60006CB")]
		[Address(RVA = "0xF0D57C", Offset = "0xF0D57C", VA = "0xF0D57C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000111")]
	[CompilerGenerated]
	private sealed class <DoFogFade>d__83 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400057C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400057D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400057E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float fadeTime;

		[Token(Token = "0x400057F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float newEnvironmentExposure;

		[Token(Token = "0x4000580")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public FogController <>4__this;

		[Token(Token = "0x4000581")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float newHeightFogOpacity;

		[Token(Token = "0x4000582")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float newDistanceFogDensity;

		[Token(Token = "0x4000583")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float newHeightFogStart;

		[Token(Token = "0x4000584")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float newHeightFogEnd;

		[Token(Token = "0x4000585")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float newViewerFogDispersalDistance;

		[Token(Token = "0x4000586")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float <startingEnvironmentExposure>5__2;

		[Token(Token = "0x4000587")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float <startingHeightFogOpacity>5__3;

		[Token(Token = "0x4000588")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float <startingDistanceFogDensity>5__4;

		[Token(Token = "0x4000589")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float <startingHeightFogStart>5__5;

		[Token(Token = "0x400058A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float <startingHeightFogEnd>5__6;

		[Token(Token = "0x400058B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float <startingViewerFogDispersalDistance>5__7;

		[Token(Token = "0x400058C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float <timer>5__8;

		[Token(Token = "0x170000EB")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60006D0")]
			[Address(RVA = "0xF0DA30", Offset = "0xF0DA30", VA = "0xF0DA30", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000EC")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60006D2")]
			[Address(RVA = "0xF0DA78", Offset = "0xF0DA78", VA = "0xF0DA78", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60006CD")]
		[Address(RVA = "0xF0D380", Offset = "0xF0D380", VA = "0xF0D380")]
		[DebuggerHidden]
		public <DoFogFade>d__83(int <>1__state)
		{
		}

		[Token(Token = "0x60006CE")]
		[Address(RVA = "0xF0D5C4", Offset = "0xF0D5C4", VA = "0xF0D5C4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60006CF")]
		[Address(RVA = "0xF0D5C8", Offset = "0xF0D5C8", VA = "0xF0D5C8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60006D1")]
		[Address(RVA = "0xF0DA38", Offset = "0xF0DA38", VA = "0xF0DA38", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000533")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Cubemap environmentCubemap;

	[Token(Token = "0x4000534")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Tooltip("Optional 2nd cubemap for camera fog.  Must be enabled on materials.")]
	public Cubemap cameraFogCubemap;

	[Token(Token = "0x4000535")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float rotateCubemap;

	[Token(Token = "0x4000536")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float environmentExposure;

	[Token(Token = "0x4000537")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[ColorUsage(true, true)]
	public Color fogTint;

	[Token(Token = "0x4000538")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[ColorUsage(true, true)]
	public Color cameraFogTint;

	[Token(Token = "0x4000539")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[ColorUsage(true, true)]
	public Color heightZoneCustomColor;

	[Token(Token = "0x400053A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float distanceFogDensity;

	[Token(Token = "0x400053B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float godModeFogDensityMultiplier;

	[Token(Token = "0x400053C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float godModeFogDispersalMultiplier;

	[Token(Token = "0x400053D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float fogDensityMultiplier;

	[Token(Token = "0x400053E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float fogDispersalMultiplier;

	[Token(Token = "0x400053F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public bool affectFogZone;

	[Token(Token = "0x4000540")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[Header("Height Fog")]
	public float heightFogOpacity;

	[Token(Token = "0x4000541")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public float heightFogStart;

	[Token(Token = "0x4000542")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float heightFogEnd;

	[Token(Token = "0x4000543")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public float heightFogXtilt;

	[Token(Token = "0x4000544")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public float heightFogZtilt;

	[Token(Token = "0x4000545")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public Vector2 heightFogRaisePointCenter;

	[Token(Token = "0x4000546")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public float heightFogRaisePointHeight;

	[Token(Token = "0x4000547")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public float heightFogRaisePointDistance;

	[Token(Token = "0x4000548")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	[Tooltip("The end distance for the fade.  Values less than 0 will break the system.  Meant for HeightFog but can be used with CubemapFog if enabled on the material.")]
	public float viewerFogDispersalDistance;

	[Token(Token = "0x4000549")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[Tooltip("The start distance for the fade.  Values between 0 and -1 will increase the minimum amount of fog from 0 to 1.  Values less than -1 will break the system.  Meant for HeightFog but can be used with CubemapFog if enabled on the material.")]
	public float viewerFogDispersalMinDist;

	[Token(Token = "0x400054A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	[Header("Additional Fog Zone")]
	public bool useHeightZone;

	[Token(Token = "0x400054B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Vector3 heightZoneCenter;

	[Token(Token = "0x400054C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	public float heightZoneOpacity;

	[Token(Token = "0x400054D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public float heightZoneRadiusMax;

	[Token(Token = "0x400054E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	public float heightZoneRadiusMin;

	[Token(Token = "0x400054F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public float heightZoneStart;

	[Token(Token = "0x4000550")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	public float heightZoneEnd;

	[Token(Token = "0x4000551")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public Vector2 heightZoneScaleXZ;

	[Token(Token = "0x4000552")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public Vector3 heightZoneTiltSkew;

	[Token(Token = "0x4000553")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	public float viewerZoneDispersalDistance;

	[Token(Token = "0x4000554")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public float viewerZoneDispersalMinDist;

	[Token(Token = "0x4000555")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	[Header("Blur")]
	public float foggedMipMapLevel;

	[Token(Token = "0x4000556")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public float mipMapMinLevel;

	[Token(Token = "0x4000557")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	[Header("Rim Light")]
	public Vector3 rimVector;

	[Token(Token = "0x4000558")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public float rimFresnelScale;

	[Token(Token = "0x4000559")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	public float rimFresnelPower;

	[Token(Token = "0x400055A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public Color rimTint;

	[Token(Token = "0x400055B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public Color rimDynamicObjectTint;

	[Token(Token = "0x400055C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	[Header("Sky Distortion")]
	public bool useSkyDistortion;

	[Token(Token = "0x400055D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public Cubemap skyDistortionUVCubemap;

	[Token(Token = "0x400055E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public float skyDistortionIntensity;

	[Token(Token = "0x400055F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	public float skyDistortionSpeed1;

	[Token(Token = "0x4000560")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public float skyDistortionSpeed2;

	[Token(Token = "0x4000561")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
	public Vector3 skyDistortionRotationVector1;

	[Token(Token = "0x4000562")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public Vector3 skyDistortionRotationVector2;

	[Token(Token = "0x4000563")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
	[Header("Flames")]
	public float globalFlameBrightness;

	[Token(Token = "0x4000564")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	[Header("Lightning")]
	public bool lightningEnabled;

	[Token(Token = "0x4000565")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x159")]
	public bool updateFromScript;

	[Token(Token = "0x4000566")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public Texture2D lightningDriverTexture;

	[Token(Token = "0x4000567")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	[Range(0f, 1f)]
	public float lightningValue;

	[Token(Token = "0x4000568")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
	public Vector2 lightningTextureMinMax;

	[Token(Token = "0x4000569")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
	public Vector2 lightningTextureAnimVector;

	[Token(Token = "0x400056A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
	public Color lightningColor;

	[Token(Token = "0x400056B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
	[Range(0f, 1f)]
	public float lightningNormalThreshold;

	[Token(Token = "0x400056C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public float lightningExposureIntensity;

	[Token(Token = "0x400056D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x194")]
	public int lightningLightIntensity;

	[Token(Token = "0x400056E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public float lightningFresnelScale;

	[Token(Token = "0x400056F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
	public float lightningFresnelPower;

	[Token(Token = "0x4000570")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public float lightningSpeed;

	[Token(Token = "0x4000571")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A4")]
	[Range(-1f, 1f)]
	public float lightningBias;

	[Token(Token = "0x4000572")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	[Range(0f, 1f)]
	public float lightningDiminishFog;

	[Token(Token = "0x4000573")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1AC")]
	public float rainReflectionIntensity;

	[Token(Token = "0x4000574")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	private Coroutine fogFadeCoroutine;

	[Token(Token = "0x4000575")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	private bool exitingGodMode;

	[Token(Token = "0x4000576")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	private FogTrigger[] allFogTriggers;

	[Token(Token = "0x4000577")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	private bool warping;

	[Token(Token = "0x4000578")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static FogController instance;

	[Token(Token = "0x60006B8")]
	[Address(RVA = "0xF0C388", Offset = "0xF0C388", VA = "0xF0C388")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60006B9")]
	[Address(RVA = "0xF0C45C", Offset = "0xF0C45C", VA = "0xF0C45C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60006BA")]
	[Address(RVA = "0xF0C530", Offset = "0xF0C530", VA = "0xF0C530")]
	private void Awake()
	{
	}

	[Token(Token = "0x60006BB")]
	[Address(RVA = "0xF0C57C", Offset = "0xF0C57C", VA = "0xF0C57C")]
	private void Start()
	{
	}

	[Token(Token = "0x60006BC")]
	[Address(RVA = "0xF0CFEC", Offset = "0xF0CFEC", VA = "0xF0CFEC")]
	private void Update()
	{
	}

	[Token(Token = "0x60006BD")]
	[Address(RVA = "0xF0D030", Offset = "0xF0D030", VA = "0xF0D030")]
	public void LightningUpdate()
	{
	}

	[Token(Token = "0x60006BE")]
	[Address(RVA = "0xF0C5F4", Offset = "0xF0C5F4", VA = "0xF0C5F4")]
	public void UpdateProps()
	{
	}

	[Token(Token = "0x60006BF")]
	[Address(RVA = "0xF0D094", Offset = "0xF0D094", VA = "0xF0D094")]
	private void OnGodMode()
	{
	}

	[Token(Token = "0x60006C0")]
	[Address(RVA = "0xF0D17C", Offset = "0xF0D17C", VA = "0xF0D17C")]
	private void OffGodMode()
	{
	}

	[Token(Token = "0x60006C1")]
	[Address(RVA = "0xF0D1B4", Offset = "0xF0D1B4", VA = "0xF0D1B4")]
	[IteratorStateMachine(typeof(<ExitGodModeDelayed>d__79))]
	private IEnumerator ExitGodModeDelayed()
	{
		return null;
	}

	[Token(Token = "0x60006C2")]
	[Address(RVA = "0xF0D244", Offset = "0xF0D244", VA = "0xF0D244")]
	public void FogTrigger(FogTrigger newFogTrigger)
	{
	}

	[Token(Token = "0x60006C3")]
	[Address(RVA = "0xF0D26C", Offset = "0xF0D26C", VA = "0xF0D26C")]
	public void FogTriggerExit(FogTrigger oldFogTrigger)
	{
	}

	[Token(Token = "0x60006C4")]
	[Address(RVA = "0xF0D0A8", Offset = "0xF0D0A8", VA = "0xF0D0A8")]
	private void FadeFog([Optional] FogTrigger newFogTrigger, float fadeTime = 3f)
	{
	}

	[Token(Token = "0x60006C5")]
	[Address(RVA = "0xF0D2CC", Offset = "0xF0D2CC", VA = "0xF0D2CC")]
	[IteratorStateMachine(typeof(<DoFogFade>d__83))]
	private IEnumerator DoFogFade(float newEnvironmentExposure, float newHeightFogOpacity, float newDistanceFogDensity, float newHeightFogStart, float newHeightFogEnd, float newViewerFogDispersalDistance, float fadeTime)
	{
		return null;
	}

	[Token(Token = "0x60006C6")]
	[Address(RVA = "0xF0D3A8", Offset = "0xF0D3A8", VA = "0xF0D3A8")]
	public FogController()
	{
	}
}
[Token(Token = "0x2000112")]
public class FogTrigger : CompoundTrigger
{
	[Token(Token = "0x400058D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[Tooltip("< -900 will ignore this value and use the default on the scene's fog controller.")]
	public float environmentExposure;

	[Token(Token = "0x400058E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[Tooltip("< -900 will ignore this value and use the default on the scene's fog controller.")]
	public float heightFogOpacity;

	[Token(Token = "0x400058F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[Tooltip("< -900 will ignore this value and use the default on the scene's fog controller.")]
	public float distanceFogDensity;

	[Token(Token = "0x4000590")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Tooltip("< -900 will ignore this value and use the default on the scene's fog controller.")]
	public float heightFogStart;

	[Token(Token = "0x4000591")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[Tooltip("< -900 will ignore this value and use the default on the scene's fog controller.")]
	public float heightFogEnd;

	[Token(Token = "0x4000592")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Tooltip("< -900 will ignore this value and use the default on the scene's fog controller.")]
	public float viewerFogDispersalDistance;

	[Token(Token = "0x4000593")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[Tooltip("< -900 will ignore this value and use the default on the scene's fog controller.")]
	public float fadeInTime;

	[Token(Token = "0x4000594")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[Tooltip("< -900 will ignore this value and use the default on the scene's fog controller.")]
	public float fadeOutTime;

	[Token(Token = "0x60006D3")]
	[Address(RVA = "0xF0DA80", Offset = "0xF0DA80", VA = "0xF0DA80")]
	private void Start()
	{
	}

	[Token(Token = "0x60006D4")]
	[Address(RVA = "0xF0DA88", Offset = "0xF0DA88", VA = "0xF0DA88", Slot = "4")]
	protected override void OnCompoundTriggerEnter()
	{
	}

	[Token(Token = "0x60006D5")]
	[Address(RVA = "0xF0DAE0", Offset = "0xF0DAE0", VA = "0xF0DAE0", Slot = "5")]
	protected override void OnCompoundTriggerExit()
	{
	}

	[Token(Token = "0x60006D6")]
	[Address(RVA = "0xF0DB38", Offset = "0xF0DB38", VA = "0xF0DB38")]
	public FogTrigger()
	{
	}
}
[Token(Token = "0x2000113")]
public class Foxhunt : MonoBehaviour
{
	[Token(Token = "0x4000595")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public FoxhuntClue firstClue;

	[Token(Token = "0x4000596")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Foxhunt instance;

	[Token(Token = "0x4000597")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject master;

	[Token(Token = "0x4000598")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject canvasAR;

	[Token(Token = "0x4000599")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject canvasVR;

	[Token(Token = "0x400059A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool dialogueActive;

	[Token(Token = "0x400059B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float progress;

	[Token(Token = "0x400059C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Animator animator;

	[Token(Token = "0x400059D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject previousButtonAR;

	[Token(Token = "0x400059E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject previousButtonVR;

	[Token(Token = "0x400059F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private GameObject previousButton;

	[Token(Token = "0x40005A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject nextButtonAR;

	[Token(Token = "0x40005A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject nextButtonVR;

	[Token(Token = "0x40005A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private GameObject nextButton;

	[Token(Token = "0x40005A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public AudioClip foundClueAudio;

	[Token(Token = "0x40005A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Achievement achievementReward;

	[Token(Token = "0x40005A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public TextMeshProUGUI clueTextAR;

	[Token(Token = "0x40005AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public TextMeshProUGUI clueTextVR;

	[Token(Token = "0x40005AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private TextMeshProUGUI clueText;

	[Token(Token = "0x40005AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Image clueImageAR;

	[Token(Token = "0x40005AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Image clueImageVR;

	[Token(Token = "0x40005AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private Image clueImage;

	[Token(Token = "0x40005AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private AudioSource audioSource;

	[Token(Token = "0x40005B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public bool resetFoxhuntInEditor;

	[Token(Token = "0x170000ED")]
	public FoxhuntClue currentClue
	{
		[Token(Token = "0x60006D7")]
		[Address(RVA = "0xF0DB5C", Offset = "0xF0DB5C", VA = "0xF0DB5C")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x60006D8")]
		[Address(RVA = "0xF0DB64", Offset = "0xF0DB64", VA = "0xF0DB64")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x170000EE")]
	public FoxhuntClue displayedClue
	{
		[Token(Token = "0x60006D9")]
		[Address(RVA = "0xF0DB6C", Offset = "0xF0DB6C", VA = "0xF0DB6C")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x60006DA")]
		[Address(RVA = "0xF0DB74", Offset = "0xF0DB74", VA = "0xF0DB74")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x170000EF")]
	public bool showingClue
	{
		[Token(Token = "0x60006DB")]
		[Address(RVA = "0xF0DB7C", Offset = "0xF0DB7C", VA = "0xF0DB7C")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60006DC")]
		[Address(RVA = "0xF0DB84", Offset = "0xF0DB84", VA = "0xF0DB84")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x170000F0")]
	public int totalClues
	{
		[Token(Token = "0x60006DD")]
		[Address(RVA = "0xF0DB90", Offset = "0xF0DB90", VA = "0xF0DB90")]
		[CompilerGenerated]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60006DE")]
		[Address(RVA = "0xF0DB98", Offset = "0xF0DB98", VA = "0xF0DB98")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x170000F1")]
	private CourseData courseData
	{
		[Token(Token = "0x60006DF")]
		[Address(RVA = "0xF0DBA0", Offset = "0xF0DBA0", VA = "0xF0DBA0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60006E0")]
	[Address(RVA = "0xF0DC28", Offset = "0xF0DC28", VA = "0xF0DC28")]
	private void Awake()
	{
	}

	[Token(Token = "0x60006E1")]
	[Address(RVA = "0xF0DC74", Offset = "0xF0DC74", VA = "0xF0DC74")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x60006E2")]
	[Address(RVA = "0xF0DCF4", Offset = "0xF0DCF4", VA = "0xF0DCF4")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x60006E3")]
	[Address(RVA = "0xF0DD74", Offset = "0xF0DD74", VA = "0xF0DD74")]
	private void Start()
	{
	}

	[Token(Token = "0x60006E4")]
	[Address(RVA = "0xF0E7A4", Offset = "0xF0E7A4", VA = "0xF0E7A4")]
	private void Update()
	{
	}

	[Token(Token = "0x60006E5")]
	[Address(RVA = "0xF0E904", Offset = "0xF0E904", VA = "0xF0E904")]
	[ContextMenu("Calculate IDs")]
	public void CalculateIDs()
	{
	}

	[Token(Token = "0x60006E6")]
	[Address(RVA = "0xF0ECD0", Offset = "0xF0ECD0", VA = "0xF0ECD0")]
	public void ShowNextClue()
	{
	}

	[Token(Token = "0x60006E7")]
	[Address(RVA = "0xF0ED5C", Offset = "0xF0ED5C", VA = "0xF0ED5C")]
	private FoxhuntClue GetNextFoundClue(FoxhuntClue clue)
	{
		return null;
	}

	[Token(Token = "0x60006E8")]
	[Address(RVA = "0xF0F050", Offset = "0xF0F050", VA = "0xF0F050")]
	public void ShowPreviousClue()
	{
	}

	[Token(Token = "0x60006E9")]
	[Address(RVA = "0xF0F070", Offset = "0xF0F070", VA = "0xF0F070")]
	public void ShowCurrentClue()
	{
	}

	[Token(Token = "0x60006EA")]
	[Address(RVA = "0xF0EE54", Offset = "0xF0EE54", VA = "0xF0EE54")]
	private void ShowClue()
	{
	}

	[Token(Token = "0x60006EB")]
	[Address(RVA = "0xF0F0D4", Offset = "0xF0F0D4", VA = "0xF0F0D4")]
	public void TurnOff()
	{
	}

	[Token(Token = "0x60006EC")]
	[Address(RVA = "0xF0E3BC", Offset = "0xF0E3BC", VA = "0xF0E3BC")]
	public void SetCurrentFoxHunt(FoxhuntClue foxhuntClue)
	{
	}

	[Token(Token = "0x60006ED")]
	[Address(RVA = "0xF0F0E4", Offset = "0xF0F0E4", VA = "0xF0F0E4")]
	public void CompleteFoxhunt()
	{
	}

	[Token(Token = "0x60006EE")]
	[Address(RVA = "0xF0F1FC", Offset = "0xF0F1FC", VA = "0xF0F1FC")]
	public void PlayFoundSound()
	{
	}

	[Token(Token = "0x60006EF")]
	[Address(RVA = "0xF0F220", Offset = "0xF0F220", VA = "0xF0F220")]
	public Foxhunt()
	{
	}
}
[Token(Token = "0x2000114")]
public class FoxhuntClue : MonoBehaviour, IInteractable
{
	[Token(Token = "0x2000115")]
	[CompilerGenerated]
	private sealed class <FoundFoxhuntAnimation>d__52 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40005C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40005C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40005C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FoxhuntClue <>4__this;

		[Token(Token = "0x40005CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 <startingScale>5__2;

		[Token(Token = "0x40005CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <scaleMultiplier>5__3;

		[Token(Token = "0x170000F9")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600070F")]
			[Address(RVA = "0xF10A68", Offset = "0xF10A68", VA = "0xF10A68", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000FA")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000711")]
			[Address(RVA = "0xF10AB0", Offset = "0xF10AB0", VA = "0xF10AB0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600070C")]
		[Address(RVA = "0xF10610", Offset = "0xF10610", VA = "0xF10610")]
		[DebuggerHidden]
		public <FoundFoxhuntAnimation>d__52(int <>1__state)
		{
		}

		[Token(Token = "0x600070D")]
		[Address(RVA = "0xF10654", Offset = "0xF10654", VA = "0xF10654", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600070E")]
		[Address(RVA = "0xF10658", Offset = "0xF10658", VA = "0xF10658", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000710")]
		[Address(RVA = "0xF10A70", Offset = "0xF10A70", VA = "0xF10A70", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40005B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioClip foundClueAudio;

	[Token(Token = "0x40005B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[FormerlySerializedAs("nextClue")]
	public FoxhuntClue nextClue_OLD;

	[Token(Token = "0x40005B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public FoxhuntClue[] nextClues;

	[Token(Token = "0x40005B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string translationCategory;

	[Token(Token = "0x40005B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string clueText;

	[Token(Token = "0x40005B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private string defaultText;

	[Token(Token = "0x40005B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Sprite clueImage;

	[Token(Token = "0x40005B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject geo;

	[Token(Token = "0x40005B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private GameObject foundGeo;

	[Token(Token = "0x40005BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public FoxhuntClue[] subclues;

	[Token(Token = "0x40005BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Material foundClueMaterial;

	[Token(Token = "0x40005BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject ghostGeo;

	[Token(Token = "0x40005BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public bool showGhostGeo;

	[Token(Token = "0x40005BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public UnityEvent onFoundEvent;

	[Token(Token = "0x40005C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int clueCounter;

	[Token(Token = "0x40005C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private bool initialized;

	[Token(Token = "0x170000F2")]
	public float maxInteractionDistance
	{
		[Token(Token = "0x60006F0")]
		[Address(RVA = "0xF0F228", Offset = "0xF0F228", VA = "0xF0F228", Slot = "4")]
		[CompilerGenerated]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60006F1")]
		[Address(RVA = "0xF0F230", Offset = "0xF0F230", VA = "0xF0F230", Slot = "5")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x170000F3")]
	private CourseData courseData
	{
		[Token(Token = "0x60006F2")]
		[Address(RVA = "0xF0F238", Offset = "0xF0F238", VA = "0xF0F238")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000F4")]
	public int clueID
	{
		[Token(Token = "0x60006F3")]
		[Address(RVA = "0xF0F2C0", Offset = "0xF0F2C0", VA = "0xF0F2C0")]
		[CompilerGenerated]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60006F4")]
		[Address(RVA = "0xF0F2C8", Offset = "0xF0F2C8", VA = "0xF0F2C8")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x170000F5")]
	public int clueDepth
	{
		[Token(Token = "0x60006F5")]
		[Address(RVA = "0xF0F2D0", Offset = "0xF0F2D0", VA = "0xF0F2D0")]
		[CompilerGenerated]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60006F6")]
		[Address(RVA = "0xF0F2D8", Offset = "0xF0F2D8", VA = "0xF0F2D8")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x170000F6")]
	public bool foundClue
	{
		[Token(Token = "0x60006F7")]
		[Address(RVA = "0xF0F2E0", Offset = "0xF0F2E0", VA = "0xF0F2E0")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60006F8")]
		[Address(RVA = "0xF0F2E8", Offset = "0xF0F2E8", VA = "0xF0F2E8")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x170000F7")]
	public bool isSubclue
	{
		[Token(Token = "0x60006F9")]
		[Address(RVA = "0xF0F2F4", Offset = "0xF0F2F4", VA = "0xF0F2F4")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60006FA")]
		[Address(RVA = "0xF0F2FC", Offset = "0xF0F2FC", VA = "0xF0F2FC")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x170000F8")]
	public FoxhuntClue previousClue
	{
		[Token(Token = "0x60006FB")]
		[Address(RVA = "0xF0F308", Offset = "0xF0F308", VA = "0xF0F308")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x60006FC")]
		[Address(RVA = "0xF0F310", Offset = "0xF0F310", VA = "0xF0F310")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x60006FD")]
	[Address(RVA = "0xF0E46C", Offset = "0xF0E46C", VA = "0xF0E46C")]
	public void InitializeFirstClue()
	{
	}

	[Token(Token = "0x60006FE")]
	[Address(RVA = "0xF0F748", Offset = "0xF0F748", VA = "0xF0F748")]
	public void InitializeSubclue(int newClueID, FoxhuntClue newPreviousClue, int depth)
	{
	}

	[Token(Token = "0x60006FF")]
	[Address(RVA = "0xF0EA54", Offset = "0xF0EA54", VA = "0xF0EA54")]
	public void CalculateID(int newClueID, ref string cumulativeIDs, int depth)
	{
	}

	[Token(Token = "0x6000700")]
	[Address(RVA = "0xF0F318", Offset = "0xF0F318", VA = "0xF0F318")]
	private bool Initialize(int newClueID, FoxhuntClue newPreviousClue, int depth)
	{
		return default(bool);
	}

	[Token(Token = "0x6000701")]
	[Address(RVA = "0xF0FAC4", Offset = "0xF0FAC4", VA = "0xF0FAC4")]
	public void Reset()
	{
	}

	[Token(Token = "0x6000702")]
	[Address(RVA = "0xF0FC40", Offset = "0xF0FC40", VA = "0xF0FC40")]
	public void FoundClue()
	{
	}

	[Token(Token = "0x6000703")]
	[Address(RVA = "0xF104C8", Offset = "0xF104C8", VA = "0xF104C8")]
	private void SetupLOD(GameObject go)
	{
	}

	[Token(Token = "0x6000704")]
	[Address(RVA = "0xF0F754", Offset = "0xF0F754", VA = "0xF0F754")]
	private void GhostClue()
	{
	}

	[Token(Token = "0x6000705")]
	[Address(RVA = "0xF10440", Offset = "0xF10440", VA = "0xF10440")]
	public void FoundSubclue()
	{
	}

	[Token(Token = "0x6000706")]
	[Address(RVA = "0xF0E4C8", Offset = "0xF0E4C8", VA = "0xF0E4C8")]
	public void UpdateMessage()
	{
	}

	[Token(Token = "0x6000707")]
	[Address(RVA = "0xF103D8", Offset = "0xF103D8", VA = "0xF103D8")]
	[IteratorStateMachine(typeof(<FoundFoxhuntAnimation>d__52))]
	private IEnumerator FoundFoxhuntAnimation()
	{
		return null;
	}

	[Token(Token = "0x6000708")]
	[Address(RVA = "0xF10638", Offset = "0xF10638", VA = "0xF10638", Slot = "6")]
	public void OnHoover()
	{
	}

	[Token(Token = "0x6000709")]
	[Address(RVA = "0xF1063C", Offset = "0xF1063C", VA = "0xF1063C", Slot = "7")]
	public void OnClick()
	{
	}

	[Token(Token = "0x600070A")]
	[Address(RVA = "0xF10640", Offset = "0xF10640", VA = "0xF10640", Slot = "8")]
	public void OnRelease()
	{
	}

	[Token(Token = "0x600070B")]
	[Address(RVA = "0xF10644", Offset = "0xF10644", VA = "0xF10644")]
	public FoxhuntClue()
	{
	}
}
[Token(Token = "0x2000116")]
public class FoxhuntWristwatch : MonoBehaviour
{
	[Token(Token = "0x40005CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public CanvasGroup canvasGroup;

	[Token(Token = "0x40005CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshProUGUI clueText;

	[Token(Token = "0x40005CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Image clueImage;

	[Token(Token = "0x6000712")]
	[Address(RVA = "0xF10AB8", Offset = "0xF10AB8", VA = "0xF10AB8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000713")]
	[Address(RVA = "0xF10BC0", Offset = "0xF10BC0", VA = "0xF10BC0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000714")]
	[Address(RVA = "0xF10E50", Offset = "0xF10E50", VA = "0xF10E50")]
	private void FoxHuntInitialized()
	{
	}

	[Token(Token = "0x6000715")]
	[Address(RVA = "0xF111B0", Offset = "0xF111B0", VA = "0xF111B0")]
	private void CurrentFoxHuntClueUpdated(FoxhuntClue clue)
	{
	}

	[Token(Token = "0x6000716")]
	[Address(RVA = "0xF11018", Offset = "0xF11018", VA = "0xF11018")]
	private void UpdateCurrentClueText()
	{
	}

	[Token(Token = "0x6000717")]
	[Address(RVA = "0xF111B4", Offset = "0xF111B4", VA = "0xF111B4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000718")]
	[Address(RVA = "0xF11384", Offset = "0xF11384", VA = "0xF11384")]
	public FoxhuntWristwatch()
	{
	}
}
[Token(Token = "0x2000117")]
public class FramerateManager : MonoBehaviour
{
	[Token(Token = "0x2000118")]
	[CompilerGenerated]
	private sealed class <UpdateRefreshRate>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40005D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40005D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40005D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FramerateManager <>4__this;

		[Token(Token = "0x170000FB")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000724")]
			[Address(RVA = "0xF11C90", Offset = "0xF11C90", VA = "0xF11C90", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000FC")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000726")]
			[Address(RVA = "0xF11CD8", Offset = "0xF11CD8", VA = "0xF11CD8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000721")]
		[Address(RVA = "0xF118DC", Offset = "0xF118DC", VA = "0xF118DC")]
		[DebuggerHidden]
		public <UpdateRefreshRate>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x6000722")]
		[Address(RVA = "0xF11918", Offset = "0xF11918", VA = "0xF11918", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000723")]
		[Address(RVA = "0xF1191C", Offset = "0xF1191C", VA = "0xF1191C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000725")]
		[Address(RVA = "0xF11C98", Offset = "0xF11C98", VA = "0xF11C98", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40005CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static FramerateManager instance;

	[Token(Token = "0x40005D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public float instantReplayCaptureEveryNFrames;

	[Token(Token = "0x40005D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[HideInInspector]
	public float refreshRate;

	[Token(Token = "0x40005D2")]
	private const float defaultPhysicsFramerateMultiplier = 10f;

	[Token(Token = "0x40005D3")]
	private const float physicsFramerateMultiplierQuest1 = 5f;

	[Token(Token = "0x40005D4")]
	private const float menuPhysicsFramerateMultiplier = 2f;

	[Token(Token = "0x6000719")]
	[Address(RVA = "0xF1138C", Offset = "0xF1138C", VA = "0xF1138C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600071A")]
	[Address(RVA = "0xF1152C", Offset = "0xF1152C", VA = "0xF1152C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600071B")]
	[Address(RVA = "0xF116CC", Offset = "0xF116CC", VA = "0xF116CC")]
	private void Awake()
	{
	}

	[Token(Token = "0x600071C")]
	[Address(RVA = "0xF11718", Offset = "0xF11718", VA = "0xF11718")]
	private void Start()
	{
	}

	[Token(Token = "0x600071D")]
	[Address(RVA = "0xF1171C", Offset = "0xF1171C", VA = "0xF1171C")]
	private void UpdateFramerate()
	{
	}

	[Token(Token = "0x600071E")]
	[Address(RVA = "0xF11874", Offset = "0xF11874", VA = "0xF11874")]
	[IteratorStateMachine(typeof(<UpdateRefreshRate>d__11))]
	private IEnumerator UpdateRefreshRate()
	{
		return null;
	}

	[Token(Token = "0x600071F")]
	[Address(RVA = "0xF11858", Offset = "0xF11858", VA = "0xF11858")]
	private void UpdatePhysicsTimestep(float newPhysicsFramerateMultiplier)
	{
	}

	[Token(Token = "0x6000720")]
	[Address(RVA = "0xF11904", Offset = "0xF11904", VA = "0xF11904")]
	public FramerateManager()
	{
	}
}
[Token(Token = "0x2000119")]
public class FreezeRay : MonoBehaviour, ISwitchable
{
	[Token(Token = "0x40005D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float maxDistance;

	[Token(Token = "0x40005D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool active;

	[Token(Token = "0x40005DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	[Tooltip("To use this as a heat ray (unfreeze), set this to false.")]
	public bool freezeBall;

	[Token(Token = "0x40005DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject[] activeWhenOn;

	[Token(Token = "0x40005DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject[] activeWhenOff;

	[Token(Token = "0x6000727")]
	[Address(RVA = "0xF11CE0", Offset = "0xF11CE0", VA = "0xF11CE0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000728")]
	[Address(RVA = "0xF11CE4", Offset = "0xF11CE4", VA = "0xF11CE4")]
	private void BallInRange()
	{
	}

	[Token(Token = "0x6000729")]
	[Address(RVA = "0xF11FD0", Offset = "0xF11FD0", VA = "0xF11FD0", Slot = "4")]
	public void Reset(bool fastSwitch = false)
	{
	}

	[Token(Token = "0x600072A")]
	[Address(RVA = "0xF11FDC", Offset = "0xF11FDC", VA = "0xF11FDC", Slot = "5")]
	public void Toggle(bool fastSwitch = false)
	{
	}

	[Token(Token = "0x600072B")]
	[Address(RVA = "0xF11FF0", Offset = "0xF11FF0", VA = "0xF11FF0", Slot = "6")]
	public void Switch(bool newActiveState, bool fastSwitch = false)
	{
	}

	[Token(Token = "0x600072C")]
	[Address(RVA = "0xF120BC", Offset = "0xF120BC", VA = "0xF120BC", Slot = "7")]
	[ContextMenu("Switch On")]
	public void SwitchOn(bool fastSwitch = false)
	{
	}

	[Token(Token = "0x600072D")]
	[Address(RVA = "0xF120C8", Offset = "0xF120C8", VA = "0xF120C8", Slot = "8")]
	[ContextMenu("Switch Off")]
	public void SwitchOff(bool fastSwitch = false)
	{
	}

	[Token(Token = "0x600072E")]
	[Address(RVA = "0xF120D4", Offset = "0xF120D4", VA = "0xF120D4", Slot = "9")]
	public bool GetSwitchState()
	{
		return default(bool);
	}

	[Token(Token = "0x600072F")]
	[Address(RVA = "0xF120DC", Offset = "0xF120DC", VA = "0xF120DC", Slot = "10")]
	public Hole GetHole()
	{
		return null;
	}

	[Token(Token = "0x6000730")]
	[Address(RVA = "0xF120E4", Offset = "0xF120E4", VA = "0xF120E4")]
	public FreezeRay()
	{
	}
}
[Token(Token = "0x200011A")]
public class GolfItemLibrary : MonoBehaviour
{
	[Token(Token = "0x40005DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform ballParent;

	[Token(Token = "0x40005DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform clubsParent;

	[Token(Token = "0x40005DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private ObjectLibrary<Transform> library;

	[Token(Token = "0x6000731")]
	[Address(RVA = "0xF120FC", Offset = "0xF120FC", VA = "0xF120FC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000732")]
	[Address(RVA = "0xF12184", Offset = "0xF12184", VA = "0xF12184")]
	private void LoadChildObjects(Transform currentParent)
	{
	}

	[Token(Token = "0x6000733")]
	[Address(RVA = "0xF12250", Offset = "0xF12250", VA = "0xF12250")]
	public Transform GetItem(string itemID)
	{
		return null;
	}

	[Token(Token = "0x6000734")]
	[Address(RVA = "0xF122A8", Offset = "0xF122A8", VA = "0xF122A8")]
	public GolfItemLibrary()
	{
	}
}
[Token(Token = "0x200011B")]
public class GravityTrigger : CompoundTrigger
{
	[Token(Token = "0x40005E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float transitionTime;

	[Token(Token = "0x40005E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static GravityTrigger activeTrigger;

	[Token(Token = "0x40005E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float transitionCounter;

	[Token(Token = "0x40005E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Vector3 previousGravity;

	[Token(Token = "0x6000735")]
	[Address(RVA = "0xF122B0", Offset = "0xF122B0", VA = "0xF122B0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000736")]
	[Address(RVA = "0xF122B8", Offset = "0xF122B8", VA = "0xF122B8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000737")]
	[Address(RVA = "0xF1240C", Offset = "0xF1240C", VA = "0xF1240C", Slot = "4")]
	protected override void OnCompoundTriggerEnter()
	{
	}

	[Token(Token = "0x6000738")]
	[Address(RVA = "0xF125B0", Offset = "0xF125B0", VA = "0xF125B0")]
	public GravityTrigger()
	{
	}
}
[Token(Token = "0x200011C")]
public class Hole : MonoBehaviour
{
	[Token(Token = "0x200011D")]
	[CompilerGenerated]
	private sealed class <DoLoadNextHole>d__67 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40005FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40005FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40005FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Hole <>4__this;

		[Token(Token = "0x17000107")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000761")]
			[Address(RVA = "0xF13C40", Offset = "0xF13C40", VA = "0xF13C40", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000108")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000763")]
			[Address(RVA = "0xF13C88", Offset = "0xF13C88", VA = "0xF13C88", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600075E")]
		[Address(RVA = "0xF13674", Offset = "0xF13674", VA = "0xF13674")]
		[DebuggerHidden]
		public <DoLoadNextHole>d__67(int <>1__state)
		{
		}

		[Token(Token = "0x600075F")]
		[Address(RVA = "0xF139D4", Offset = "0xF139D4", VA = "0xF139D4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000760")]
		[Address(RVA = "0xF139D8", Offset = "0xF139D8", VA = "0xF139D8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000762")]
		[Address(RVA = "0xF13C48", Offset = "0xF13C48", VA = "0xF13C48", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200011E")]
	[CompilerGenerated]
	private sealed class <PlayHoleCompleteAnimation>d__68 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000600")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000601")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000602")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Hole <>4__this;

		[Token(Token = "0x4000603")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GameObject <prefab>5__2;

		[Token(Token = "0x17000109")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000767")]
			[Address(RVA = "0xF14C58", Offset = "0xF14C58", VA = "0xF14C58", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700010A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000769")]
			[Address(RVA = "0xF14CA0", Offset = "0xF14CA0", VA = "0xF14CA0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000764")]
		[Address(RVA = "0xF1369C", Offset = "0xF1369C", VA = "0xF1369C")]
		[DebuggerHidden]
		public <PlayHoleCompleteAnimation>d__68(int <>1__state)
		{
		}

		[Token(Token = "0x6000765")]
		[Address(RVA = "0xF13C90", Offset = "0xF13C90", VA = "0xF13C90", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000766")]
		[Address(RVA = "0xF13C94", Offset = "0xF13C94", VA = "0xF13C94", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000768")]
		[Address(RVA = "0xF14C60", Offset = "0xF14C60", VA = "0xF14C60", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40005E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject startingPosition;

	[Token(Token = "0x40005E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Hole nextHole;

	[Token(Token = "0x40005E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int par;

	[Token(Token = "0x40005E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Collider[] inPlaySurfaces;

	[Token(Token = "0x40005E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public bool holeComplete;

	[Token(Token = "0x40005E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform playerStartPosition;

	[Token(Token = "0x40005EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float respawnDelay;

	[Token(Token = "0x40005EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private WaitForSeconds waitForSecondsRespawnDelay;

	[Token(Token = "0x40005EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform cupPosition;

	[Token(Token = "0x40005ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public HoleSelector holeSelector;

	[Token(Token = "0x40005EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public UnityEvent OnHoleCompleteEvt;

	[Token(Token = "0x40005FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Vector3 startingGravity;

	[Token(Token = "0x40005FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	public bool autoAdjustHolePosition;

	[Token(Token = "0x170000FD")]
	public static Hole activeHole
	{
		[Token(Token = "0x600073D")]
		[Address(RVA = "0xF12868", Offset = "0xF12868", VA = "0xF12868")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x600073E")]
		[Address(RVA = "0xF128B0", Offset = "0xF128B0", VA = "0xF128B0")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x170000FE")]
	public bool strokeLimitReached
	{
		[Token(Token = "0x600073F")]
		[Address(RVA = "0xF128FC", Offset = "0xF128FC", VA = "0xF128FC")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000740")]
		[Address(RVA = "0xF12904", Offset = "0xF12904", VA = "0xF12904")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x170000FF")]
	public int maxStrokes
	{
		[Token(Token = "0x6000741")]
		[Address(RVA = "0xF12910", Offset = "0xF12910", VA = "0xF12910")]
		[CompilerGenerated]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000742")]
		[Address(RVA = "0xF12918", Offset = "0xF12918", VA = "0xF12918")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000100")]
	public int lostBalls
	{
		[Token(Token = "0x6000743")]
		[Address(RVA = "0xF12920", Offset = "0xF12920", VA = "0xF12920")]
		[CompilerGenerated]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000744")]
		[Address(RVA = "0xF12928", Offset = "0xF12928", VA = "0xF12928")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x17000101")]
	public int foundBalls
	{
		[Token(Token = "0x6000745")]
		[Address(RVA = "0xF12930", Offset = "0xF12930", VA = "0xF12930")]
		[CompilerGenerated]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000746")]
		[Address(RVA = "0xF12938", Offset = "0xF12938", VA = "0xF12938")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x17000102")]
	public Hole previousHole
	{
		[Token(Token = "0x6000747")]
		[Address(RVA = "0xF12940", Offset = "0xF12940", VA = "0xF12940")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000748")]
		[Address(RVA = "0xF12948", Offset = "0xF12948", VA = "0xF12948")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000103")]
	public int strokes
	{
		[Token(Token = "0x6000749")]
		[Address(RVA = "0xF12950", Offset = "0xF12950", VA = "0xF12950")]
		[CompilerGenerated]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600074A")]
		[Address(RVA = "0xF12958", Offset = "0xF12958", VA = "0xF12958")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x17000104")]
	public int record
	{
		[Token(Token = "0x600074B")]
		[Address(RVA = "0xF12960", Offset = "0xF12960", VA = "0xF12960")]
		[CompilerGenerated]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600074C")]
		[Address(RVA = "0xF12968", Offset = "0xF12968", VA = "0xF12968")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000105")]
	public int holeNumber
	{
		[Token(Token = "0x600074D")]
		[Address(RVA = "0xF12970", Offset = "0xF12970", VA = "0xF12970")]
		[CompilerGenerated]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600074E")]
		[Address(RVA = "0xF12978", Offset = "0xF12978", VA = "0xF12978")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x17000106")]
	public HoleComplete holeCompleteTrigger
	{
		[Token(Token = "0x600074F")]
		[Address(RVA = "0xF12980", Offset = "0xF12980", VA = "0xF12980")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000750")]
		[Address(RVA = "0xF12988", Offset = "0xF12988", VA = "0xF12988")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x14000015")]
	public static event Action onHoleComplete
	{
		[Token(Token = "0x6000739")]
		[Address(RVA = "0xF125C0", Offset = "0xF125C0", VA = "0xF125C0")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x600073A")]
		[Address(RVA = "0xF12678", Offset = "0xF12678", VA = "0xF12678")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000016")]
	public event Action OnHoleStart
	{
		[Token(Token = "0x600073B")]
		[Address(RVA = "0xF12730", Offset = "0xF12730", VA = "0xF12730")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x600073C")]
		[Address(RVA = "0xF127CC", Offset = "0xF127CC", VA = "0xF127CC")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6000751")]
	[Address(RVA = "0xF12990", Offset = "0xF12990", VA = "0xF12990")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000752")]
	[Address(RVA = "0xF12A34", Offset = "0xF12A34", VA = "0xF12A34")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000753")]
	[Address(RVA = "0xF12AD8", Offset = "0xF12AD8", VA = "0xF12AD8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000754")]
	[Address(RVA = "0xF12B48", Offset = "0xF12B48", VA = "0xF12B48")]
	private void Start()
	{
	}

	[Token(Token = "0x6000755")]
	[Address(RVA = "0xF12DFC", Offset = "0xF12DFC", VA = "0xF12DFC")]
	public void StartHole()
	{
	}

	[Token(Token = "0x6000756")]
	[Address(RVA = "0xF12FD4", Offset = "0xF12FD4", VA = "0xF12FD4")]
	public void CompleteHole()
	{
	}

	[Token(Token = "0x6000757")]
	[Address(RVA = "0xF13458", Offset = "0xF13458", VA = "0xF13458")]
	public void CheckStrokeLimit()
	{
	}

	[Token(Token = "0x6000758")]
	[Address(RVA = "0xF13438", Offset = "0xF13438", VA = "0xF13438")]
	public void LoadNextHole()
	{
	}

	[Token(Token = "0x6000759")]
	[Address(RVA = "0xF1360C", Offset = "0xF1360C", VA = "0xF1360C")]
	[IteratorStateMachine(typeof(<DoLoadNextHole>d__67))]
	private IEnumerator DoLoadNextHole()
	{
		return null;
	}

	[Token(Token = "0x600075A")]
	[Address(RVA = "0xF133D0", Offset = "0xF133D0", VA = "0xF133D0")]
	[IteratorStateMachine(typeof(<PlayHoleCompleteAnimation>d__68))]
	private IEnumerator PlayHoleCompleteAnimation()
	{
		return null;
	}

	[Token(Token = "0x600075B")]
	[Address(RVA = "0xF136C4", Offset = "0xF136C4", VA = "0xF136C4")]
	private void OnPuttCompleted()
	{
	}

	[Token(Token = "0x600075C")]
	[Address(RVA = "0xF13768", Offset = "0xF13768", VA = "0xF13768")]
	public static void SetActiveHole(Hole newHole)
	{
	}

	[Token(Token = "0x600075D")]
	[Address(RVA = "0xF138A4", Offset = "0xF138A4", VA = "0xF138A4")]
	public Hole()
	{
	}
}
[Token(Token = "0x2000120")]
public class HoleComplete : CompoundTrigger
{
	[Token(Token = "0x2000121")]
	[CompilerGenerated]
	private sealed class <UndoingCoro>d__17 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000612")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000613")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000614")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HoleComplete <>4__this;

		[Token(Token = "0x1700010C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600077C")]
			[Address(RVA = "0xF16634", Offset = "0xF16634", VA = "0xF16634", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700010D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600077E")]
			[Address(RVA = "0xF1667C", Offset = "0xF1667C", VA = "0xF1667C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000779")]
		[Address(RVA = "0xF162C0", Offset = "0xF162C0", VA = "0xF162C0")]
		[DebuggerHidden]
		public <UndoingCoro>d__17(int <>1__state)
		{
		}

		[Token(Token = "0x600077A")]
		[Address(RVA = "0xF16578", Offset = "0xF16578", VA = "0xF16578", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600077B")]
		[Address(RVA = "0xF1657C", Offset = "0xF1657C", VA = "0xF1657C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600077D")]
		[Address(RVA = "0xF1663C", Offset = "0xF1663C", VA = "0xF1663C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000122")]
	[CompilerGenerated]
	private sealed class <TrapperKeeper>d__18 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000615")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000616")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000617")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HoleComplete <>4__this;

		[Token(Token = "0x1700010E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000782")]
			[Address(RVA = "0xF1676C", Offset = "0xF1676C", VA = "0xF1676C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700010F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000784")]
			[Address(RVA = "0xF167B4", Offset = "0xF167B4", VA = "0xF167B4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600077F")]
		[Address(RVA = "0xF162E8", Offset = "0xF162E8", VA = "0xF162E8")]
		[DebuggerHidden]
		public <TrapperKeeper>d__18(int <>1__state)
		{
		}

		[Token(Token = "0x6000780")]
		[Address(RVA = "0xF16684", Offset = "0xF16684", VA = "0xF16684", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000781")]
		[Address(RVA = "0xF16688", Offset = "0xF16688", VA = "0xF16688", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000783")]
		[Address(RVA = "0xF16774", Offset = "0xF16774", VA = "0xF16774", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000123")]
	[CompilerGenerated]
	private sealed class <PopOut>d__19 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000618")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000619")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400061A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HoleComplete <>4__this;

		[Token(Token = "0x17000110")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000788")]
			[Address(RVA = "0xF169B4", Offset = "0xF169B4", VA = "0xF169B4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000111")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600078A")]
			[Address(RVA = "0xF169FC", Offset = "0xF169FC", VA = "0xF169FC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000785")]
		[Address(RVA = "0xF16310", Offset = "0xF16310", VA = "0xF16310")]
		[DebuggerHidden]
		public <PopOut>d__19(int <>1__state)
		{
		}

		[Token(Token = "0x6000786")]
		[Address(RVA = "0xF167BC", Offset = "0xF167BC", VA = "0xF167BC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000787")]
		[Address(RVA = "0xF167C0", Offset = "0xF167C0", VA = "0xF167C0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000789")]
		[Address(RVA = "0xF169BC", Offset = "0xF169BC", VA = "0xF169BC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000606")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private AudioSource audioSource;

	[Token(Token = "0x4000607")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AudioClip cupSound;

	[Token(Token = "0x4000608")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Hole hole;

	[Token(Token = "0x4000609")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject trapperKeeper;

	[Token(Token = "0x400060A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool alreadyTriggered;

	[Token(Token = "0x400060B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	public bool popOut;

	[Token(Token = "0x400060C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public Vector3 popOutVelocity;

	[Token(Token = "0x400060D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public AudioClip popSound;

	[Token(Token = "0x400060E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject disableOnPopOut;

	[Token(Token = "0x400060F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Collider[] disableOnPopOutColliders;

	[Token(Token = "0x4000610")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private bool undoing;

	[Token(Token = "0x4000611")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Coroutine popOutCoroutine;

	[Token(Token = "0x1700010B")]
	public bool ballInHand
	{
		[Token(Token = "0x6000777")]
		[Address(RVA = "0xF16430", Offset = "0xF16430", VA = "0xF16430")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x600076D")]
	[Address(RVA = "0xF15D18", Offset = "0xF15D18", VA = "0xF15D18")]
	private new void OnEnable()
	{
	}

	[Token(Token = "0x600076E")]
	[Address(RVA = "0xF15DC8", Offset = "0xF15DC8", VA = "0xF15DC8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600076F")]
	[Address(RVA = "0xF15E6C", Offset = "0xF15E6C", VA = "0xF15E6C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000770")]
	[Address(RVA = "0xF15F1C", Offset = "0xF15F1C", VA = "0xF15F1C", Slot = "4")]
	protected override void OnCompoundTriggerEnter()
	{
	}

	[Token(Token = "0x6000771")]
	[Address(RVA = "0xF16234", Offset = "0xF16234", VA = "0xF16234")]
	private void OnUndoStroke()
	{
	}

	[Token(Token = "0x6000772")]
	[Address(RVA = "0xF16258", Offset = "0xF16258", VA = "0xF16258")]
	[IteratorStateMachine(typeof(<UndoingCoro>d__17))]
	private IEnumerator UndoingCoro()
	{
		return null;
	}

	[Token(Token = "0x6000773")]
	[Address(RVA = "0xF16164", Offset = "0xF16164", VA = "0xF16164")]
	[IteratorStateMachine(typeof(<TrapperKeeper>d__18))]
	private IEnumerator TrapperKeeper()
	{
		return null;
	}

	[Token(Token = "0x6000774")]
	[Address(RVA = "0xF161CC", Offset = "0xF161CC", VA = "0xF161CC")]
	[IteratorStateMachine(typeof(<PopOut>d__19))]
	private IEnumerator PopOut()
	{
		return null;
	}

	[Token(Token = "0x6000775")]
	[Address(RVA = "0xF16338", Offset = "0xF16338", VA = "0xF16338")]
	public void SetDisableOnPopoutEnabled(bool active)
	{
	}

	[Token(Token = "0x6000776")]
	[Address(RVA = "0xF16414", Offset = "0xF16414", VA = "0xF16414", Slot = "5")]
	protected override void OnCompoundTriggerExit()
	{
	}

	[Token(Token = "0x6000778")]
	[Address(RVA = "0xF16558", Offset = "0xF16558", VA = "0xF16558")]
	public HoleComplete()
	{
	}
}
[Token(Token = "0x2000124")]
public class HoleMessageAnimation : MonoBehaviour
{
	[Token(Token = "0x2000125")]
	[CompilerGenerated]
	private sealed class <Animate>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400061C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400061D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400061E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HoleMessageAnimation <>4__this;

		[Token(Token = "0x400061F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 <endPosition>5__2;

		[Token(Token = "0x4000620")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Vector3 <startPosition>5__3;

		[Token(Token = "0x4000621")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float <timer>5__4;

		[Token(Token = "0x17000112")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000791")]
			[Address(RVA = "0xF16EE4", Offset = "0xF16EE4", VA = "0xF16EE4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000113")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000793")]
			[Address(RVA = "0xF16F2C", Offset = "0xF16F2C", VA = "0xF16F2C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600078E")]
		[Address(RVA = "0xF16AF0", Offset = "0xF16AF0", VA = "0xF16AF0")]
		[DebuggerHidden]
		public <Animate>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x600078F")]
		[Address(RVA = "0xF16B20", Offset = "0xF16B20", VA = "0xF16B20", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000790")]
		[Address(RVA = "0xF16B24", Offset = "0xF16B24", VA = "0xF16B24", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000792")]
		[Address(RVA = "0xF16EEC", Offset = "0xF16EEC", VA = "0xF16EEC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400061B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private CanvasGroup canvas;

	[Token(Token = "0x600078B")]
	[Address(RVA = "0xF16A04", Offset = "0xF16A04", VA = "0xF16A04")]
	private void Start()
	{
	}

	[Token(Token = "0x600078C")]
	[Address(RVA = "0xF16A88", Offset = "0xF16A88", VA = "0xF16A88")]
	[IteratorStateMachine(typeof(<Animate>d__2))]
	private IEnumerator Animate()
	{
		return null;
	}

	[Token(Token = "0x600078D")]
	[Address(RVA = "0xF16B18", Offset = "0xF16B18", VA = "0xF16B18")]
	public HoleMessageAnimation()
	{
	}
}
[Token(Token = "0x2000126")]
public class HoleSelector : MonoBehaviour
{
	[Token(Token = "0x4000622")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Hole hole;

	[Token(Token = "0x4000623")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshPro holeText;

	[Token(Token = "0x4000624")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TextMeshPro statsText;

	[Token(Token = "0x4000625")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform line;

	[Token(Token = "0x4000626")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform masterPosition;

	[Token(Token = "0x4000627")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float sizeMultiplier;

	[Token(Token = "0x4000628")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public SpriteRenderer lineSprite;

	[Token(Token = "0x4000629")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public SpriteRenderer ringSprite;

	[Token(Token = "0x400062A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public SpriteRenderer fillSprite;

	[Token(Token = "0x400062B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private int hoverCounter;

	[Token(Token = "0x400062C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Animator animator;

	[Token(Token = "0x400062D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Vector3 defaultScale;

	[Token(Token = "0x400062E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private Vector3 cachedMasterPosition;

	[Token(Token = "0x400062F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool isVR;

	[Token(Token = "0x4000630")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private float previousProgress;

	[Token(Token = "0x6000794")]
	[Address(RVA = "0xF16F34", Offset = "0xF16F34", VA = "0xF16F34")]
	private void Start()
	{
	}

	[Token(Token = "0x6000795")]
	[Address(RVA = "0xF1704C", Offset = "0xF1704C", VA = "0xF1704C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000796")]
	[Address(RVA = "0xF17120", Offset = "0xF17120", VA = "0xF17120")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000797")]
	[Address(RVA = "0xF171F4", Offset = "0xF171F4", VA = "0xF171F4")]
	public void OnGodMode()
	{
	}

	[Token(Token = "0x6000798")]
	[Address(RVA = "0xF17304", Offset = "0xF17304", VA = "0xF17304")]
	public void OnGodModeExit()
	{
	}

	[Token(Token = "0x6000799")]
	[Address(RVA = "0xF17354", Offset = "0xF17354", VA = "0xF17354")]
	public void Update()
	{
	}

	[Token(Token = "0x600079A")]
	[Address(RVA = "0xF17CB4", Offset = "0xF17CB4", VA = "0xF17CB4")]
	public void UpdateStats()
	{
	}

	[Token(Token = "0x600079B")]
	[Address(RVA = "0xF1815C", Offset = "0xF1815C", VA = "0xF1815C")]
	public void PracticeThisHole()
	{
	}

	[Token(Token = "0x600079C")]
	[Address(RVA = "0xF183F0", Offset = "0xF183F0", VA = "0xF183F0")]
	public void AddHover()
	{
	}

	[Token(Token = "0x600079D")]
	[Address(RVA = "0xF18460", Offset = "0xF18460", VA = "0xF18460")]
	public void RemoveHover()
	{
	}

	[Token(Token = "0x600079E")]
	[Address(RVA = "0xF18468", Offset = "0xF18468", VA = "0xF18468")]
	public HoleSelector()
	{
	}
}
[Token(Token = "0x2000127")]
public class InPlaySurface : MonoBehaviour
{
	[Token(Token = "0x4000631")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float keepAliveTime;

	[Token(Token = "0x4000632")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Hole hole;

	[Token(Token = "0x4000633")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform spectatorTarget;

	[Token(Token = "0x4000634")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool warpToBall;

	[Token(Token = "0x4000635")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float minKeepAliveSpeed;

	[Token(Token = "0x4000636")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public RangeTee tee;

	[Token(Token = "0x600079F")]
	[Address(RVA = "0xF18484", Offset = "0xF18484", VA = "0xF18484")]
	private void Start()
	{
	}

	[Token(Token = "0x60007A0")]
	[Address(RVA = "0xF185DC", Offset = "0xF185DC", VA = "0xF185DC")]
	public InPlaySurface()
	{
	}
}
[Serializable]
[Token(Token = "0x2000128")]
public abstract class IUnifiedContainer<TResult> : global::IUnifiedContainerBase.IUnifiedContainerBase where TResult : class
{
	[Token(Token = "0x4000637")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private TResult _result;

	[Token(Token = "0x17000114")]
	public TResult Result
	{
		[Token(Token = "0x60007A1")]
		get
		{
			return null;
		}
		[Token(Token = "0x60007A2")]
		set
		{
		}
	}

	[Token(Token = "0x17000115")]
	public UnityEngine.Object Object
	{
		[Token(Token = "0x60007A3")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60007A4")]
	protected IUnifiedContainer()
	{
	}
}
[Token(Token = "0x2000129")]
public class IUnifiedContainers<TContainer, TInterface> : IList<TInterface>, ICollection<TInterface>, IEnumerable<TInterface>, IEnumerable where TContainer : IUnifiedContainer<TInterface>, new() where TInterface : class
{
	[Token(Token = "0x4000638")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private readonly Func<IList<TContainer>> _getList;

	[Token(Token = "0x17000116")]
	public int Count
	{
		[Token(Token = "0x60007A6")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000117")]
	public bool IsReadOnly
	{
		[Token(Token = "0x60007A7")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000118")]
	public TInterface this[int index]
	{
		[Token(Token = "0x60007B2")]
		get
		{
			return null;
		}
		[Token(Token = "0x60007B3")]
		set
		{
		}
	}

	[Token(Token = "0x60007A5")]
	public IUnifiedContainers(Func<IList<TContainer>> getList)
	{
	}

	[Token(Token = "0x60007A8")]
	public IEnumerator<TInterface> GetEnumerator()
	{
		return null;
	}

	[Token(Token = "0x60007A9")]
	private IEnumerator System.Collections.IEnumerable.GetEnumerator()
	{
		return null;
	}

	[Token(Token = "0x60007AA")]
	public void Add(TInterface item)
	{
	}

	[Token(Token = "0x60007AB")]
	public void Clear()
	{
	}

	[Token(Token = "0x60007AC")]
	public bool Contains(TInterface item)
	{
		return default(bool);
	}

	[Token(Token = "0x60007AD")]
	public void CopyTo(TInterface[] array, int arrayIndex)
	{
	}

	[Token(Token = "0x60007AE")]
	public bool Remove(TInterface item)
	{
		return default(bool);
	}

	[Token(Token = "0x60007AF")]
	public int IndexOf(TInterface item)
	{
		return default(int);
	}

	[Token(Token = "0x60007B0")]
	public void Insert(int index, TInterface item)
	{
	}

	[Token(Token = "0x60007B1")]
	public void RemoveAt(int index)
	{
	}

	[Token(Token = "0x60007B4")]
	private static int IndexOf(IList<TContainer> list, TInterface item)
	{
		return default(int);
	}
}
[Token(Token = "0x200012C")]
public class JoinPrivateRoom : MonoBehaviour, IProfileActivatedHandler, IProfileHandler
{
	[Token(Token = "0x400063D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMeshProUGUI roomNameText;

	[Token(Token = "0x400063E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public VRKeyboard vrKeyboard;

	[Token(Token = "0x400063F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TMP_InputField roomNameInput;

	[Token(Token = "0x4000640")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ToggleGroup maxPlayerToggle;

	[Token(Token = "0x4000641")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Toggle defualtMaxPlayerSelection;

	[Token(Token = "0x4000642")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject maxPlayerSelectionGroup;

	[Token(Token = "0x4000643")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public UIValueRange maxPlayerRange;

	[Token(Token = "0x4000644")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private string roomToJoin;

	[Token(Token = "0x4000645")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private MultiplayerLauncher multiplayerLauncher;

	[Token(Token = "0x60007BB")]
	[Address(RVA = "0xF185FC", Offset = "0xF185FC", VA = "0xF185FC")]
	private void Start()
	{
	}

	[Token(Token = "0x60007BC")]
	[Address(RVA = "0xF186A8", Offset = "0xF186A8", VA = "0xF186A8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60007BD")]
	[Address(RVA = "0xF1888C", Offset = "0xF1888C", VA = "0xF1888C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60007BE")]
	[Address(RVA = "0xF188E4", Offset = "0xF188E4", VA = "0xF188E4")]
	private void Update()
	{
	}

	[Token(Token = "0x60007BF")]
	[Address(RVA = "0xF188F8", Offset = "0xF188F8", VA = "0xF188F8")]
	public void JoinRoom()
	{
	}

	[Token(Token = "0x60007C0")]
	[Address(RVA = "0xF18ABC", Offset = "0xF18ABC", VA = "0xF18ABC")]
	public void ToggleMaxPlayerSelection()
	{
	}

	[Token(Token = "0x60007C1")]
	[Address(RVA = "0xF18AF0", Offset = "0xF18AF0", VA = "0xF18AF0")]
	public void OnClose()
	{
	}

	[Token(Token = "0x60007C2")]
	[Address(RVA = "0xF18B0C", Offset = "0xF18B0C", VA = "0xF18B0C")]
	public void UpdateTextAR()
	{
	}

	[Token(Token = "0x60007C3")]
	[Address(RVA = "0xF18714", Offset = "0xF18714", VA = "0xF18714", Slot = "4")]
	public void OnProfileActivated(ProfileData profile)
	{
	}

	[Token(Token = "0x60007C4")]
	[Address(RVA = "0xF18CA8", Offset = "0xF18CA8", VA = "0xF18CA8")]
	public JoinPrivateRoom()
	{
	}
}
[Token(Token = "0x200012D")]
public class KeepAliveTrigger : CompoundTrigger
{
	[Token(Token = "0x4000646")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float keepAliveTime;

	[Token(Token = "0x4000647")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool trigger;

	[Token(Token = "0x4000648")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float minKeepAliveSpeed;

	[Token(Token = "0x60007C5")]
	[Address(RVA = "0xF18CF8", Offset = "0xF18CF8", VA = "0xF18CF8")]
	private void Start()
	{
	}

	[Token(Token = "0x60007C6")]
	[Address(RVA = "0xF18D00", Offset = "0xF18D00", VA = "0xF18D00")]
	private void Update()
	{
	}

	[Token(Token = "0x60007C7")]
	[Address(RVA = "0xF18E80", Offset = "0xF18E80", VA = "0xF18E80", Slot = "4")]
	protected override void OnCompoundTriggerEnter()
	{
	}

	[Token(Token = "0x60007C8")]
	[Address(RVA = "0xF18E8C", Offset = "0xF18E8C", VA = "0xF18E8C", Slot = "5")]
	protected override void OnCompoundTriggerExit()
	{
	}

	[Token(Token = "0x60007C9")]
	[Address(RVA = "0xF18E94", Offset = "0xF18E94", VA = "0xF18E94")]
	public KeepAliveTrigger()
	{
	}
}
[Token(Token = "0x200012E")]
public class LabyrinthBallShatterController : MonoBehaviourPunCallbacks
{
	[Token(Token = "0x4000649")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UnityEvent onTriggerEvent;

	[Token(Token = "0x400064A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static LabyrinthBallShatterController instance;

	[Token(Token = "0x60007CA")]
	[Address(RVA = "0xF18EB0", Offset = "0xF18EB0", VA = "0xF18EB0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60007CB")]
	[Address(RVA = "0xF18EFC", Offset = "0xF18EFC", VA = "0xF18EFC")]
	public void DoShatter()
	{
	}

	[Token(Token = "0x60007CC")]
	[Address(RVA = "0xF18FC4", Offset = "0xF18FC4", VA = "0xF18FC4")]
	[PunRPC]
	public void LabyrinthBallShatter()
	{
	}

	[Token(Token = "0x60007CD")]
	[Address(RVA = "0xF18FD8", Offset = "0xF18FD8", VA = "0xF18FD8")]
	public LabyrinthBallShatterController()
	{
	}
}
[Token(Token = "0x200012F")]
public class LabyrinthBallShatterTrigger : CompoundTrigger
{
	[Token(Token = "0x60007CE")]
	[Address(RVA = "0xF18FE0", Offset = "0xF18FE0", VA = "0xF18FE0")]
	private void Start()
	{
	}

	[Token(Token = "0x60007CF")]
	[Address(RVA = "0xF18FE8", Offset = "0xF18FE8", VA = "0xF18FE8", Slot = "4")]
	protected override void OnCompoundTriggerEnter()
	{
	}

	[Token(Token = "0x60007D0")]
	[Address(RVA = "0xF19038", Offset = "0xF19038", VA = "0xF19038")]
	public LabyrinthBallShatterTrigger()
	{
	}
}
[Token(Token = "0x2000130")]
public class LanguageSelect : MonoBehaviour, IProfileActivatedHandler, IProfileHandler
{
	[Token(Token = "0x400064B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LanguageSelectionButton[] LanguageButtons;

	[Token(Token = "0x60007D1")]
	[Address(RVA = "0xF19040", Offset = "0xF19040", VA = "0xF19040")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60007D2")]
	[Address(RVA = "0xF19098", Offset = "0xF19098", VA = "0xF19098")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60007D3")]
	[Address(RVA = "0xF190F0", Offset = "0xF190F0", VA = "0xF190F0", Slot = "4")]
	public void OnProfileActivated(ProfileData profile)
	{
	}

	[Token(Token = "0x60007D4")]
	[Address(RVA = "0xF19118", Offset = "0xF19118", VA = "0xF19118")]
	public static void SetLanguage(string newLanguage)
	{
	}

	[Token(Token = "0x60007D5")]
	[Address(RVA = "0xF1931C", Offset = "0xF1931C", VA = "0xF1931C")]
	public void TogglePanel(GameObject panel)
	{
	}

	[Token(Token = "0x60007D6")]
	[Address(RVA = "0xF19350", Offset = "0xF19350", VA = "0xF19350")]
	public LanguageSelect()
	{
	}
}
[Token(Token = "0x2000131")]
[ExecuteInEditMode]
public class Laser : CompoundTrigger, ISwitchable
{
	[Token(Token = "0x400064C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float maxDistance;

	[Token(Token = "0x400064D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private LineRenderer line;

	[Token(Token = "0x400064E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool active;

	[Token(Token = "0x400064F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AudioSource laserHum;

	[Token(Token = "0x4000650")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform laserSparks;

	[Token(Token = "0x4000651")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public AudioSource laserDeath;

	[Token(Token = "0x4000652")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Collider laserBallTrigger;

	[Token(Token = "0x4000653")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float flickerAmount;

	[Token(Token = "0x4000654")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float defaultWidth;

	[Token(Token = "0x4000655")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Gradient fullGradient;

	[Token(Token = "0x4000656")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Gradient dimmedGradient;

	[Token(Token = "0x4000657")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private bool ballInRange;

	[Token(Token = "0x4000658")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public LayerMask layers;

	[Token(Token = "0x4000659")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[Tooltip("When the ball is in range, switch to Fixed update for accuracy casting shadows.")]
	public bool useFixedUpdate;

	[Token(Token = "0x60007D7")]
	[Address(RVA = "0xF19358", Offset = "0xF19358", VA = "0xF19358")]
	private void Start()
	{
	}

	[Token(Token = "0x60007D8")]
	[Address(RVA = "0xF196CC", Offset = "0xF196CC", VA = "0xF196CC")]
	private void AlignCollider(Vector3 endPos)
	{
	}

	[Token(Token = "0x60007D9")]
	[Address(RVA = "0xF1988C", Offset = "0xF1988C", VA = "0xF1988C")]
	private void Update()
	{
	}

	[Token(Token = "0x60007DA")]
	[Address(RVA = "0xF19F14", Offset = "0xF19F14", VA = "0xF19F14")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60007DB")]
	[Address(RVA = "0xF19A84", Offset = "0xF19A84", VA = "0xF19A84")]
	private void RaytraceLaser()
	{
	}

	[Token(Token = "0x60007DC")]
	[Address(RVA = "0xF19F2C", Offset = "0xF19F2C", VA = "0xF19F2C", Slot = "6")]
	public void Reset(bool fastSwitch = false)
	{
	}

	[Token(Token = "0x60007DD")]
	[Address(RVA = "0xF19F38", Offset = "0xF19F38", VA = "0xF19F38", Slot = "7")]
	public void Toggle(bool fastSwitch = false)
	{
	}

	[Token(Token = "0x60007DE")]
	[Address(RVA = "0xF19F4C", Offset = "0xF19F4C", VA = "0xF19F4C", Slot = "8")]
	public void Switch(bool newActiveState, bool fastSwitch = false)
	{
	}

	[Token(Token = "0x60007DF")]
	[Address(RVA = "0xF19F94", Offset = "0xF19F94", VA = "0xF19F94", Slot = "9")]
	[ContextMenu("Switch On")]
	public void SwitchOn(bool fastSwitch = false)
	{
	}

	[Token(Token = "0x60007E0")]
	[Address(RVA = "0xF19FA0", Offset = "0xF19FA0", VA = "0xF19FA0", Slot = "10")]
	[ContextMenu("Switch Off")]
	public void SwitchOff(bool fastSwitch = false)
	{
	}

	[Token(Token = "0x60007E1")]
	[Address(RVA = "0xF19FAC", Offset = "0xF19FAC", VA = "0xF19FAC")]
	public void DeathByLaser()
	{
	}

	[Token(Token = "0x60007E2")]
	[Address(RVA = "0xF1A0D4", Offset = "0xF1A0D4", VA = "0xF1A0D4", Slot = "11")]
	public bool GetSwitchState()
	{
		return default(bool);
	}

	[Token(Token = "0x60007E3")]
	[Address(RVA = "0xF1A0DC", Offset = "0xF1A0DC", VA = "0xF1A0DC", Slot = "12")]
	public Hole GetHole()
	{
		return null;
	}

	[Token(Token = "0x60007E4")]
	[Address(RVA = "0xF1A0E4", Offset = "0xF1A0E4", VA = "0xF1A0E4", Slot = "4")]
	protected override void OnCompoundTriggerEnter()
	{
	}

	[Token(Token = "0x60007E5")]
	[Address(RVA = "0xF1A0E8", Offset = "0xF1A0E8", VA = "0xF1A0E8")]
	public Laser()
	{
	}
}
[Token(Token = "0x2000132")]
[ExecuteInEditMode]
public class LightController : MonoBehaviour
{
	[Token(Token = "0x400065A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Tooltip("Opacity layer for the light")]
	[Range(0f, 1f)]
	public float lightMix;

	[Token(Token = "0x400065B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[ColorUsage(true, true)]
	[Tooltip("Tint the lit area.")]
	public Color lightColor;

	[Token(Token = "0x400065C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[ColorUsage(true, true)]
	[Tooltip("Tint outside of lit area.")]
	public Color shadowTint;

	[Token(Token = "0x400065D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[Tooltip("Attenuation Radius.  Only used for 'Simple Squared' light model.")]
	public float lightRadius;

	[Token(Token = "0x400065E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Tooltip("Light Intensity")]
	public float lightIntensity;

	[Token(Token = "0x400065F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[Tooltip("Attenuation Constant 1.  Hotspot attenuation.  Only used for '2 Constants' light model.")]
	public float lightAttnC1;

	[Token(Token = "0x4000660")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Tooltip("Attenuation Constant 2.  Broader attenuation.  Only used for '2 Constants' light model.")]
	public float lightAttnC2;

	[Token(Token = "0x4000661")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[Header("God Mode")]
	public float godModeLightRadiusMultiplier;

	[Token(Token = "0x4000662")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float godModeLightIntensityMultiplier;

	[Token(Token = "0x4000663")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float godModeLightAttenionC1Multiplier;

	[Token(Token = "0x4000664")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float godModeLightAttenionC2Multiplier;

	[Token(Token = "0x4000665")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float lightRadiusMultiplier;

	[Token(Token = "0x4000666")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float lightIntensityMultiplier;

	[Token(Token = "0x4000667")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float lightAttenionC1Multiplier;

	[Token(Token = "0x4000668")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float lightAttenionC2Multiplier;

	[Token(Token = "0x4000669")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static LightController instance;

	[Token(Token = "0x60007E6")]
	[Address(RVA = "0xF1A10C", Offset = "0xF1A10C", VA = "0xF1A10C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60007E7")]
	[Address(RVA = "0xF1A1E0", Offset = "0xF1A1E0", VA = "0xF1A1E0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60007E8")]
	[Address(RVA = "0xF1A2B4", Offset = "0xF1A2B4", VA = "0xF1A2B4")]
	private void Awake()
	{
	}

	[Token(Token = "0x60007E9")]
	[Address(RVA = "0xF1A300", Offset = "0xF1A300", VA = "0xF1A300")]
	private void Start()
	{
	}

	[Token(Token = "0x60007EA")]
	[Address(RVA = "0xF1A448", Offset = "0xF1A448", VA = "0xF1A448")]
	private void Update()
	{
	}

	[Token(Token = "0x60007EB")]
	[Address(RVA = "0xF1A304", Offset = "0xF1A304", VA = "0xF1A304")]
	public void UpdateProps()
	{
	}

	[Token(Token = "0x60007EC")]
	[Address(RVA = "0xF1A47C", Offset = "0xF1A47C", VA = "0xF1A47C")]
	private void OnGodMode()
	{
	}

	[Token(Token = "0x60007ED")]
	[Address(RVA = "0xF1A570", Offset = "0xF1A570", VA = "0xF1A570")]
	private void OffGodMode()
	{
	}

	[Token(Token = "0x60007EE")]
	[Address(RVA = "0xF1A488", Offset = "0xF1A488", VA = "0xF1A488")]
	private void SetGodModeValues()
	{
	}

	[Token(Token = "0x60007EF")]
	[Address(RVA = "0xF1A57C", Offset = "0xF1A57C", VA = "0xF1A57C")]
	public LightController()
	{
	}
}
[Token(Token = "0x2000133")]
public class LightDimmer : MonoBehaviour
{
	[Token(Token = "0x400066A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float defaultIntensity;

	[Token(Token = "0x400066B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[HideInInspector]
	public float targetIntensity;

	[Token(Token = "0x400066C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public bool triggered;

	[Token(Token = "0x400066D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Light light;

	[Token(Token = "0x60007F0")]
	[Address(RVA = "0xF1A5B4", Offset = "0xF1A5B4", VA = "0xF1A5B4")]
	private void Start()
	{
	}

	[Token(Token = "0x60007F1")]
	[Address(RVA = "0xF1A624", Offset = "0xF1A624", VA = "0xF1A624")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60007F2")]
	[Address(RVA = "0xF1A6AC", Offset = "0xF1A6AC", VA = "0xF1A6AC")]
	public LightDimmer()
	{
	}
}
[Token(Token = "0x2000134")]
public class Lightray_Generator : MonoBehaviour
{
	[Token(Token = "0x400066E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Tooltip("Transform parent to hold all lightray groups")]
	public Transform lightrayGroupParent;

	[Token(Token = "0x400066F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Tooltip("Insert the parent to the Particle System. It will be cloned.")]
	public GameObject lightrayGroup;

	[Token(Token = "0x4000670")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Tooltip("Inser the base particle system.")]
	public ParticleSystem lightrayParticleSystem;

	[Token(Token = "0x4000671")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Tooltip("Width of each emitter's square shape.")]
	public float emitterWidth;

	[Token(Token = "0x4000672")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[Tooltip("Number of emitters in the X axis.  The Z axis will have the same number.")]
	public int numX;

	[Token(Token = "0x4000673")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[Tooltip("Emission Rate spread out amongst all the emitters.")]
	public float totalEmissionRate;

	[Token(Token = "0x4000674")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float psEmissionRate;

	[Token(Token = "0x4000675")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Tooltip("Sets the vector at which the Raycasts are casting.  Not derived from the particle system because of a workaround being used for its culling Bounds.")]
	public Vector3 lightrayVector;

	[Token(Token = "0x4000676")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[Tooltip("Length of the collision testing Raycast.  Higher values are more expensive.")]
	public float raycastLength;

	[Token(Token = "0x4000677")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3[] lightrayGroupLocalPos;

	[Token(Token = "0x4000678")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private GameObject[] lightrayGroupObjects;

	[Token(Token = "0x4000679")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private int counter;

	[Token(Token = "0x400067A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public bool debugVisualizer;

	[Token(Token = "0x60007F3")]
	[Address(RVA = "0xF1A6B4", Offset = "0xF1A6B4", VA = "0xF1A6B4")]
	private void Start()
	{
	}

	[Token(Token = "0x60007F4")]
	[Address(RVA = "0xF1AA30", Offset = "0xF1AA30", VA = "0xF1AA30")]
	private void Update()
	{
	}

	[Token(Token = "0x60007F5")]
	[Address(RVA = "0xF1AC40", Offset = "0xF1AC40", VA = "0xF1AC40")]
	public Lightray_Generator()
	{
	}
}
[Token(Token = "0x2000135")]
public class LightZone : CompoundTrigger
{
	[Token(Token = "0x400067B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
	public bool fadeLight;

	[Token(Token = "0x400067C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Light lightObj;

	[Token(Token = "0x400067D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private LightDimmer lightDimmer;

	[Token(Token = "0x400067E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float newIntensity;

	[Token(Token = "0x400067F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public bool fadeReflectionProbe;

	[Token(Token = "0x4000680")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ReflectionProbe reflectionProbe;

	[Token(Token = "0x4000681")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float defaultReflIntensity;

	[Token(Token = "0x4000682")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float newReflIntensity;

	[Token(Token = "0x4000683")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public bool fadeEnvironmentLighting;

	[Token(Token = "0x4000684")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private Color defaultEnvLightingSkyColor;

	[Token(Token = "0x4000685")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private Color defaultEnvLightingEquatorColor;

	[Token(Token = "0x4000686")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private Color defaultEnvLightingGroundColor;

	[Token(Token = "0x4000687")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private float defaultEnvLightIntensity;

	[Token(Token = "0x4000688")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public float newEnvIntensity;

	[Token(Token = "0x4000689")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static LightZone master;

	[Token(Token = "0x400068A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	protected float targetIntensity;

	[Token(Token = "0x400068B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	protected float targetReflIntensity;

	[Token(Token = "0x400068C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	protected float targetEnvIntensity;

	[Token(Token = "0x17000119")]
	private bool isMaster
	{
		[Token(Token = "0x60007F6")]
		[Address(RVA = "0xF1AC68", Offset = "0xF1AC68", VA = "0xF1AC68")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60007F7")]
	[Address(RVA = "0xF1ACEC", Offset = "0xF1ACEC", VA = "0xF1ACEC")]
	private void Start()
	{
	}

	[Token(Token = "0x60007F8")]
	[Address(RVA = "0xF1AF18", Offset = "0xF1AF18", VA = "0xF1AF18")]
	private void Update()
	{
	}

	[Token(Token = "0x60007F9")]
	[Address(RVA = "0xF1AFC8", Offset = "0xF1AFC8", VA = "0xF1AFC8")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60007FA")]
	[Address(RVA = "0xF1B30C", Offset = "0xF1B30C", VA = "0xF1B30C")]
	public LightZone()
	{
	}
}
[Token(Token = "0x2000136")]
public class LightZone2 : CompoundTrigger
{
	[Token(Token = "0x400068D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
	[Header("Light Zone ON/OFF")]
	public bool fadeLight;

	[Token(Token = "0x400068E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float fadeTime;

	[Token(Token = "0x400068F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[Header("Target Lights")]
	[Header("If using 2 lights, be sure all Light Zones have the same 2 targets!")]
	[Tooltip("Target scene light you want to change")]
	public Light targetLightObject01;

	[Token(Token = "0x4000690")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Tooltip("Target scene light you want to change")]
	public Light targetLightObject02;

	[Token(Token = "0x4000691")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Tooltip("The light to reference to effect target, if null will take default target light settings")]
	[Header("Reference Lights")]
	public Light referenceLightObject01;

	[Token(Token = "0x4000692")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[Tooltip("The light to reference to effect target, if null will take default target light settings")]
	public Light referenceLightObject02;

	[Token(Token = "0x4000693")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	[HideInInspector]
	private Color newColor01;

	[Token(Token = "0x4000694")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float newIntensity01;

	[Token(Token = "0x4000695")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Quaternion newRotation01;

	[Token(Token = "0x4000696")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private Color newColor02;

	[Token(Token = "0x4000697")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private float newIntensity02;

	[Token(Token = "0x4000698")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Quaternion newRotation02;

	[Token(Token = "0x4000699")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[Header("Reflection Probe")]
	public bool fadeReflectionProbe;

	[Token(Token = "0x400069A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public ReflectionProbe reflectionProbe;

	[Token(Token = "0x400069B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private float defaultReflIntensity;

	[Token(Token = "0x400069C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	public float newReflIntensity;

	[Token(Token = "0x400069D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[Header("Environment Light")]
	public bool fadeEnvironmentLighting;

	[Token(Token = "0x400069E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private Color defaultEnvLightingSkyColor;

	[Token(Token = "0x400069F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private Color defaultEnvLightingEquatorColor;

	[Token(Token = "0x40006A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	private Color defaultEnvLightingGroundColor;

	[Token(Token = "0x40006A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	private float defaultEnvLightIntensity;

	[Token(Token = "0x40006A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public float newEnvIntensity;

	[Token(Token = "0x40006A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static LightZone2 master;

	[Token(Token = "0x40006A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	protected float targetIntensity;

	[Token(Token = "0x40006A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	protected float targetReflIntensity;

	[Token(Token = "0x40006A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	protected float targetEnvIntensity;

	[Token(Token = "0x1700011A")]
	private bool isMaster
	{
		[Token(Token = "0x60007FB")]
		[Address(RVA = "0xF1B32C", Offset = "0xF1B32C", VA = "0xF1B32C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60007FC")]
	[Address(RVA = "0xF1B3B0", Offset = "0xF1B3B0", VA = "0xF1B3B0")]
	private void Start()
	{
	}

	[Token(Token = "0x60007FD")]
	[Address(RVA = "0xF1B70C", Offset = "0xF1B70C", VA = "0xF1B70C")]
	private void Update()
	{
	}

	[Token(Token = "0x60007FE")]
	[Address(RVA = "0xF1B79C", Offset = "0xF1B79C", VA = "0xF1B79C")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60007FF")]
	[Address(RVA = "0xF1BAE0", Offset = "0xF1BAE0", VA = "0xF1BAE0", Slot = "4")]
	protected override void OnCompoundTriggerEnter()
	{
	}

	[Token(Token = "0x6000800")]
	[Address(RVA = "0xF1BCB0", Offset = "0xF1BCB0", VA = "0xF1BCB0", Slot = "5")]
	protected override void OnCompoundTriggerExit()
	{
	}

	[Token(Token = "0x6000801")]
	[Address(RVA = "0xF1BE38", Offset = "0xF1BE38", VA = "0xF1BE38")]
	public LightZone2()
	{
	}
}
[Token(Token = "0x2000137")]
public class LightZoneTarget : MonoBehaviour
{
	[Token(Token = "0x2000138")]
	[CompilerGenerated]
	private sealed class <LinearLerp>d__15 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40006B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40006B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40006B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LightZoneTarget <>4__this;

		[Token(Token = "0x40006B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float fadeTime;

		[Token(Token = "0x40006B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Color color;

		[Token(Token = "0x40006B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float intensity;

		[Token(Token = "0x40006B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Quaternion rotation;

		[Token(Token = "0x40006B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Color <startColor>5__2;

		[Token(Token = "0x40006BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float <startIntensity>5__3;

		[Token(Token = "0x40006BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private Quaternion <startTransform>5__4;

		[Token(Token = "0x40006BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private float <timer>5__5;

		[Token(Token = "0x1700011B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600080B")]
			[Address(RVA = "0xF1C384", Offset = "0xF1C384", VA = "0xF1C384", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700011C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600080D")]
			[Address(RVA = "0xF1C3CC", Offset = "0xF1C3CC", VA = "0xF1C3CC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000808")]
		[Address(RVA = "0xF1C080", Offset = "0xF1C080", VA = "0xF1C080")]
		[DebuggerHidden]
		public <LinearLerp>d__15(int <>1__state)
		{
		}

		[Token(Token = "0x6000809")]
		[Address(RVA = "0xF1C0B8", Offset = "0xF1C0B8", VA = "0xF1C0B8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600080A")]
		[Address(RVA = "0xF1C0BC", Offset = "0xF1C0BC", VA = "0xF1C0BC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600080C")]
		[Address(RVA = "0xF1C38C", Offset = "0xF1C38C", VA = "0xF1C38C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40006A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float defaultIntensity;

	[Token(Token = "0x40006A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[HideInInspector]
	public float targetIntensity;

	[Token(Token = "0x40006A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public float startIntensity;

	[Token(Token = "0x40006AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[HideInInspector]
	public Color defaultColor;

	[Token(Token = "0x40006AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[HideInInspector]
	public Color startColor;

	[Token(Token = "0x40006AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[HideInInspector]
	public Transform startRotation;

	[Token(Token = "0x40006AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[HideInInspector]
	public Quaternion defaultRotation;

	[Token(Token = "0x40006AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Coroutine lerpCoroutine;

	[Token(Token = "0x40006AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Light targetLight;

	[Token(Token = "0x40006B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private LightZone2[] allLightZones;

	[Token(Token = "0x40006B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float defaultFadeOutTime;

	[Token(Token = "0x6000802")]
	[Address(RVA = "0xF1BE5C", Offset = "0xF1BE5C", VA = "0xF1BE5C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000803")]
	[Address(RVA = "0xF1BEBC", Offset = "0xF1BEBC", VA = "0xF1BEBC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000804")]
	[Address(RVA = "0xF1BD9C", Offset = "0xF1BD9C", VA = "0xF1BD9C")]
	public void LightZoneExit()
	{
	}

	[Token(Token = "0x6000805")]
	[Address(RVA = "0xF1BC10", Offset = "0xF1BC10", VA = "0xF1BC10")]
	public void UpdateTargetLight(Color newColor, float newIntensity, Quaternion newRotation, float fadeTime)
	{
	}

	[Token(Token = "0x6000806")]
	[Address(RVA = "0xF1BFB4", Offset = "0xF1BFB4", VA = "0xF1BFB4")]
	[IteratorStateMachine(typeof(<LinearLerp>d__15))]
	private IEnumerator LinearLerp(Color color, float intensity, Quaternion rotation, float fadeTime)
	{
		return null;
	}

	[Token(Token = "0x6000807")]
	[Address(RVA = "0xF1C0A8", Offset = "0xF1C0A8", VA = "0xF1C0A8")]
	public LightZoneTarget()
	{
	}
}
[Token(Token = "0x2000139")]
public class LinkVisibility : MonoBehaviour
{
	[Token(Token = "0x40006BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject targetToMatch;

	[Token(Token = "0x40006BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject objectToAffect;

	[Token(Token = "0x600080E")]
	[Address(RVA = "0xF1C3D4", Offset = "0xF1C3D4", VA = "0xF1C3D4")]
	private void Update()
	{
	}

	[Token(Token = "0x600080F")]
	[Address(RVA = "0xF1C40C", Offset = "0xF1C40C", VA = "0xF1C40C")]
	public LinkVisibility()
	{
	}
}
[Token(Token = "0x200013A")]
public class LostBall : MonoBehaviour, IInteractable
{
	[Token(Token = "0x200013B")]
	[CompilerGenerated]
	private sealed class <FoundBallAnimation>d__18 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40006C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40006CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40006CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LostBall <>4__this;

		[Token(Token = "0x40006CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <timer>5__2;

		[Token(Token = "0x40006CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Vector3 <startingScale>5__3;

		[Token(Token = "0x1700011E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600081F")]
			[Address(RVA = "0xF1DA78", Offset = "0xF1DA78", VA = "0xF1DA78", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700011F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000821")]
			[Address(RVA = "0xF1DAC0", Offset = "0xF1DAC0", VA = "0xF1DAC0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600081C")]
		[Address(RVA = "0xF1D67C", Offset = "0xF1D67C", VA = "0xF1D67C")]
		[DebuggerHidden]
		public <FoundBallAnimation>d__18(int <>1__state)
		{
		}

		[Token(Token = "0x600081D")]
		[Address(RVA = "0xF1D6C0", Offset = "0xF1D6C0", VA = "0xF1D6C0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600081E")]
		[Address(RVA = "0xF1D6C4", Offset = "0xF1D6C4", VA = "0xF1D6C4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000820")]
		[Address(RVA = "0xF1DA80", Offset = "0xF1DA80", VA = "0xF1DA80", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40006BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int holeNumber;

	[Token(Token = "0x40006C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int ballID;

	[Token(Token = "0x40006C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject displayGeo;

	[Token(Token = "0x40006C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioClip foundBallAudio;

	[Token(Token = "0x40006C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool ballFound;

	[Token(Token = "0x40006C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Hole hole;

	[Token(Token = "0x40006C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Transform ballGeo;

	[Token(Token = "0x40006C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private MeshRenderer rend;

	[Token(Token = "0x40006C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Material foundBallMaterial;

	[Token(Token = "0x1700011D")]
	public float maxInteractionDistance
	{
		[Token(Token = "0x6000810")]
		[Address(RVA = "0xF1C414", Offset = "0xF1C414", VA = "0xF1C414", Slot = "4")]
		[CompilerGenerated]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000811")]
		[Address(RVA = "0xF1C41C", Offset = "0xF1C41C", VA = "0xF1C41C", Slot = "5")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x6000812")]
	[Address(RVA = "0xF1C424", Offset = "0xF1C424", VA = "0xF1C424")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000813")]
	[Address(RVA = "0xF1C52C", Offset = "0xF1C52C", VA = "0xF1C52C")]
	private void Init()
	{
	}

	[Token(Token = "0x6000814")]
	[Address(RVA = "0xF1CA84", Offset = "0xF1CA84", VA = "0xF1CA84")]
	private void GhostBall()
	{
	}

	[Token(Token = "0x6000815")]
	[Address(RVA = "0xF1CCC8", Offset = "0xF1CCC8", VA = "0xF1CCC8")]
	private void SetupLOD(GameObject go)
	{
	}

	[Token(Token = "0x6000816")]
	[Address(RVA = "0xF1CD90", Offset = "0xF1CD90", VA = "0xF1CD90")]
	[ContextMenu("FoundBall()")]
	public void FoundBall()
	{
	}

	[Token(Token = "0x6000817")]
	[Address(RVA = "0xF1D614", Offset = "0xF1D614", VA = "0xF1D614")]
	[IteratorStateMachine(typeof(<FoundBallAnimation>d__18))]
	private IEnumerator FoundBallAnimation()
	{
		return null;
	}

	[Token(Token = "0x6000818")]
	[Address(RVA = "0xF1D6A4", Offset = "0xF1D6A4", VA = "0xF1D6A4", Slot = "6")]
	public void OnHoover()
	{
	}

	[Token(Token = "0x6000819")]
	[Address(RVA = "0xF1D6A8", Offset = "0xF1D6A8", VA = "0xF1D6A8", Slot = "7")]
	public void OnClick()
	{
	}

	[Token(Token = "0x600081A")]
	[Address(RVA = "0xF1D6AC", Offset = "0xF1D6AC", VA = "0xF1D6AC", Slot = "8")]
	public void OnRelease()
	{
	}

	[Token(Token = "0x600081B")]
	[Address(RVA = "0xF1D6B0", Offset = "0xF1D6B0", VA = "0xF1D6B0")]
	public LostBall()
	{
	}
}
[Token(Token = "0x200013C")]
public class LucasP4vTest : MonoBehaviour
{
	[Token(Token = "0x6000822")]
	[Address(RVA = "0xF1DAC8", Offset = "0xF1DAC8", VA = "0xF1DAC8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000823")]
	[Address(RVA = "0xF1DACC", Offset = "0xF1DACC", VA = "0xF1DACC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000824")]
	[Address(RVA = "0xF1DAD0", Offset = "0xF1DAD0", VA = "0xF1DAD0")]
	public LucasP4vTest()
	{
	}
}
[Token(Token = "0x200013D")]
public class MainMenu : MonoBehaviour
{
	[Token(Token = "0x200013E")]
	[CompilerGenerated]
	private sealed class <ShowMenuRoutine>d__24 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40006DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40006DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40006E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MainMenu <>4__this;

		[Token(Token = "0x40006E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool showMenu;

		[Token(Token = "0x40006E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		public bool delayedLoad;

		[Token(Token = "0x40006E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int <i>5__2;

		[Token(Token = "0x17000122")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000835")]
			[Address(RVA = "0xF1E730", Offset = "0xF1E730", VA = "0xF1E730", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000123")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000837")]
			[Address(RVA = "0xF1E778", Offset = "0xF1E778", VA = "0xF1E778", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000832")]
		[Address(RVA = "0xF1E204", Offset = "0xF1E204", VA = "0xF1E204")]
		[DebuggerHidden]
		public <ShowMenuRoutine>d__24(int <>1__state)
		{
		}

		[Token(Token = "0x6000833")]
		[Address(RVA = "0xF1E3C0", Offset = "0xF1E3C0", VA = "0xF1E3C0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000834")]
		[Address(RVA = "0xF1E3C4", Offset = "0xF1E3C4", VA = "0xF1E3C4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000836")]
		[Address(RVA = "0xF1E738", Offset = "0xF1E738", VA = "0xF1E738", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40006CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[HideInInspector]
	public static MainMenu instance;

	[Token(Token = "0x40006CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float physicsBounceThreshold;

	[Token(Token = "0x40006D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float defaultARSoundFXLevel;

	[Token(Token = "0x40006D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public WorldspaceLayout layout;

	[Token(Token = "0x40006D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject vrMenu;

	[Token(Token = "0x40006D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject arMenu;

	[Token(Token = "0x40006D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject vrMenuRedesign;

	[Token(Token = "0x40006D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool UtilizeNewMainMenu;

	[Token(Token = "0x40006D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public List<ManMenuItemToAnimate> menuItemsToAnimate;

	[Token(Token = "0x40006D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public UnityEvent hideMenuCallbackSinglePlayer;

	[Token(Token = "0x40006D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public UnityEvent hideMenuCallbackMultiplayer;

	[Token(Token = "0x40006D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static bool recenterOnLoad;

	[Token(Token = "0x40006DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool loadingMenu;

	[Token(Token = "0x40006DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	private bool loadingToShow;

	[Token(Token = "0x40006DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x62")]
	private bool menuActive;

	[Token(Token = "0x40006DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Coroutine toggleCoroutine;

	[Token(Token = "0x17000120")]
	public bool redesign
	{
		[Token(Token = "0x6000827")]
		[Address(RVA = "0xF1DFCC", Offset = "0xF1DFCC", VA = "0xF1DFCC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000121")]
	public bool noDLC
	{
		[Token(Token = "0x600082F")]
		[Address(RVA = "0xF1DF80", Offset = "0xF1DF80", VA = "0xF1DF80")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000825")]
	[Address(RVA = "0xF1DAD8", Offset = "0xF1DAD8", VA = "0xF1DAD8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000826")]
	[Address(RVA = "0xF1DC78", Offset = "0xF1DC78", VA = "0xF1DC78")]
	private void Start()
	{
	}

	[Token(Token = "0x6000828")]
	[Address(RVA = "0xF1E048", Offset = "0xF1E048", VA = "0xF1E048")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000829")]
	[Address(RVA = "0xF1E164", Offset = "0xF1E164", VA = "0xF1E164")]
	private void Update()
	{
	}

	[Token(Token = "0x600082A")]
	[Address(RVA = "0xF1E170", Offset = "0xF1E170", VA = "0xF1E170")]
	public void ToggleMenu(bool showMenu)
	{
	}

	[Token(Token = "0x600082B")]
	[Address(RVA = "0xF1DE6C", Offset = "0xF1DE6C", VA = "0xF1DE6C")]
	public void ToggleMenu(bool showMenu, bool delayedLoad = true)
	{
	}

	[Token(Token = "0x600082C")]
	[Address(RVA = "0xF1E17C", Offset = "0xF1E17C", VA = "0xF1E17C")]
	[IteratorStateMachine(typeof(<ShowMenuRoutine>d__24))]
	private IEnumerator ShowMenuRoutine(bool showMenu, bool delayedLoad = false)
	{
		return null;
	}

	[Token(Token = "0x600082D")]
	[Address(RVA = "0xF1E22C", Offset = "0xF1E22C", VA = "0xF1E22C")]
	public void LoadScene(string sceneToLoad)
	{
	}

	[Token(Token = "0x600082E")]
	[Address(RVA = "0xF1E28C", Offset = "0xF1E28C", VA = "0xF1E28C")]
	public void UpdateMicrophone()
	{
	}

	[Token(Token = "0x6000830")]
	[Address(RVA = "0xF1E2DC", Offset = "0xF1E2DC", VA = "0xF1E2DC")]
	public MainMenu()
	{
	}
}
[Serializable]
[Token(Token = "0x200013F")]
public class ManMenuItemToAnimate
{
	[Token(Token = "0x40006E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public GameObject gameObject;

	[Token(Token = "0x40006E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool singlePlayer;

	[Token(Token = "0x40006E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool multiplayer;

	[Token(Token = "0x6000838")]
	[Address(RVA = "0xF1E780", Offset = "0xF1E780", VA = "0xF1E780")]
	public ManMenuItemToAnimate()
	{
	}
}
[Token(Token = "0x2000140")]
public class MatchLayer : MonoBehaviour
{
	[Token(Token = "0x40006E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject targetToMatch;

	[Token(Token = "0x6000839")]
	[Address(RVA = "0xF1E788", Offset = "0xF1E788", VA = "0xF1E788")]
	private void Start()
	{
	}

	[Token(Token = "0x600083A")]
	[Address(RVA = "0xF1E7CC", Offset = "0xF1E7CC", VA = "0xF1E7CC")]
	public MatchLayer()
	{
	}
}
[Token(Token = "0x2000141")]
public class MaterialSwitcher : MonoBehaviour
{
	[Token(Token = "0x40006E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material[] materialsToSwitchShader;

	[Token(Token = "0x40006E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Shader regularShader;

	[Token(Token = "0x40006EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Shader godModeShader;

	[Token(Token = "0x600083B")]
	[Address(RVA = "0xF1E7D4", Offset = "0xF1E7D4", VA = "0xF1E7D4")]
	private void Start()
	{
	}

	[Token(Token = "0x600083C")]
	[Address(RVA = "0xF1E840", Offset = "0xF1E840", VA = "0xF1E840")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x600083D")]
	[Address(RVA = "0xF1E914", Offset = "0xF1E914", VA = "0xF1E914")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x600083E")]
	[Address(RVA = "0xF1E9F0", Offset = "0xF1E9F0", VA = "0xF1E9F0")]
	private void GodModeOn()
	{
	}

	[Token(Token = "0x600083F")]
	[Address(RVA = "0xF1E7D8", Offset = "0xF1E7D8", VA = "0xF1E7D8")]
	private void GodModeOff()
	{
	}

	[Token(Token = "0x6000840")]
	[Address(RVA = "0xF1EA58", Offset = "0xF1EA58", VA = "0xF1EA58")]
	public MaterialSwitcher()
	{
	}
}
[Token(Token = "0x2000142")]
public class MaterialSwitchOnPlay : MonoBehaviour
{
	[Token(Token = "0x2000143")]
	[CompilerGenerated]
	private sealed class <DelayedSetup>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40006EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40006EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40006F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MaterialSwitchOnPlay <>4__this;

		[Token(Token = "0x40006F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <tryLimit>5__2;

		[Token(Token = "0x17000124")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600084A")]
			[Address(RVA = "0xF1F2C8", Offset = "0xF1F2C8", VA = "0xF1F2C8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000125")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600084C")]
			[Address(RVA = "0xF1F310", Offset = "0xF1F310", VA = "0xF1F310", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000847")]
		[Address(RVA = "0xF1EEDC", Offset = "0xF1EEDC", VA = "0xF1EEDC")]
		[DebuggerHidden]
		public <DelayedSetup>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x6000848")]
		[Address(RVA = "0xF1F18C", Offset = "0xF1F18C", VA = "0xF1F18C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000849")]
		[Address(RVA = "0xF1F190", Offset = "0xF1F190", VA = "0xF1F190", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600084B")]
		[Address(RVA = "0xF1F2D0", Offset = "0xF1F2D0", VA = "0xF1F2D0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40006EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("Material Replacements will Correspond to their Array Index")]
	public Material[] oldMaterials;

	[Token(Token = "0x40006EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material[] newMaterials;

	[Token(Token = "0x40006ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Tooltip("Connect a PlatformFilter component to selectively execute the event only on certain platforms.")]
	public PlatformFilter platformFilter;

	[Token(Token = "0x6000841")]
	[Address(RVA = "0xF1EA60", Offset = "0xF1EA60", VA = "0xF1EA60")]
	private void Start()
	{
	}

	[Token(Token = "0x6000842")]
	[Address(RVA = "0xF1EAFC", Offset = "0xF1EAFC", VA = "0xF1EAFC")]
	[IteratorStateMachine(typeof(<DelayedSetup>d__4))]
	private IEnumerator DelayedSetup()
	{
		return null;
	}

	[Token(Token = "0x6000843")]
	[Address(RVA = "0xF1EB64", Offset = "0xF1EB64", VA = "0xF1EB64")]
	private void Setup()
	{
	}

	[Token(Token = "0x6000844")]
	[Address(RVA = "0xF1EF04", Offset = "0xF1EF04", VA = "0xF1EF04")]
	public Dictionary<Material, Material> GetMap()
	{
		return null;
	}

	[Token(Token = "0x6000845")]
	[Address(RVA = "0xF1F0AC", Offset = "0xF1F0AC", VA = "0xF1F0AC")]
	public static Dictionary<Material, Material> GetMaterialMap()
	{
		return null;
	}

	[Token(Token = "0x6000846")]
	[Address(RVA = "0xF1F184", Offset = "0xF1F184", VA = "0xF1F184")]
	public MaterialSwitchOnPlay()
	{
	}
}
[Token(Token = "0x2000144")]
public class MaterialTrigger : CompoundTrigger
{
	[Token(Token = "0x40006F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Renderer[] renderersToSwap;

	[Token(Token = "0x40006F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Material insideMaterial;

	[Token(Token = "0x40006F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Material defaultMaterial;

	[Token(Token = "0x600084D")]
	[Address(RVA = "0xF1F318", Offset = "0xF1F318", VA = "0xF1F318")]
	private void Awake()
	{
	}

	[Token(Token = "0x600084E")]
	[Address(RVA = "0xF1F358", Offset = "0xF1F358", VA = "0xF1F358")]
	private void Start()
	{
	}

	[Token(Token = "0x600084F")]
	[Address(RVA = "0xF1F360", Offset = "0xF1F360", VA = "0xF1F360", Slot = "4")]
	protected override void OnCompoundTriggerEnter()
	{
	}

	[Token(Token = "0x6000850")]
	[Address(RVA = "0xF1F49C", Offset = "0xF1F49C", VA = "0xF1F49C", Slot = "5")]
	protected override void OnCompoundTriggerExit()
	{
	}

	[Token(Token = "0x6000851")]
	[Address(RVA = "0xF1F5D8", Offset = "0xF1F5D8", VA = "0xF1F5D8")]
	public MaterialTrigger()
	{
	}
}
[Token(Token = "0x2000145")]
public abstract class MCPlatformSpecific : MonoBehaviour
{
	[Token(Token = "0x40006F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("Platform Type")]
	public bool ar;

	[Token(Token = "0x40006F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool vr;

	[Token(Token = "0x40006F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	[Space]
	[Header("Specific Platform")]
	public bool quest;

	[Token(Token = "0x40006F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	public bool rift;

	[Token(Token = "0x40006F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool android;

	[Token(Token = "0x40006FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	public bool ios;

	[Token(Token = "0x40006FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
	public bool openvr;

	[Token(Token = "0x40006FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F")]
	public bool pico;

	[Token(Token = "0x40006FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool quest2MatchQuest;

	[Token(Token = "0x40006FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool psvr2;

	[Token(Token = "0x40006FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
	protected bool platformActive;

	[Token(Token = "0x6000852")]
	[Address(RVA = "0xF1F5E0", Offset = "0xF1F5E0", VA = "0xF1F5E0")]
	protected void Start()
	{
	}

	[Token(Token = "0x6000853")]
	[Address(RVA = "0xF1F904", Offset = "0xF1F904", VA = "0xF1F904")]
	protected MCPlatformSpecific()
	{
	}
}
[Token(Token = "0x2000146")]
public class MenuRotatorNoDLC : MonoBehaviour
{
	[Token(Token = "0x4000700")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform targetTransformIfNoDLC;

	[Token(Token = "0x4000701")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform targetTransformDefault;

	[Token(Token = "0x4000702")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform targetTransformRedesignUI;

	[Token(Token = "0x6000854")]
	[Address(RVA = "0xF1F918", Offset = "0xF1F918", VA = "0xF1F918")]
	private void Start()
	{
	}

	[Token(Token = "0x6000855")]
	[Address(RVA = "0xF1FC04", Offset = "0xF1FC04", VA = "0xF1FC04")]
	public MenuRotatorNoDLC()
	{
	}
}
[Token(Token = "0x2000147")]
public class MenuSound : MonoBehaviour
{
	[Token(Token = "0x4000703")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public List<float> woodHits;

	[Token(Token = "0x4000704")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public List<float> ballHits;

	[Token(Token = "0x4000705")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public List<float> woodRolling;

	[Token(Token = "0x4000706")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioClip woodHit;

	[Token(Token = "0x4000707")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AudioClip woodRoll;

	[Token(Token = "0x4000708")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AudioClip ballHit;

	[Token(Token = "0x4000709")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private AudioSource rollingSound;

	[Token(Token = "0x400070A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private AudioSource woodHitSound;

	[Token(Token = "0x400070B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private AudioSource ballHitSound;

	[Token(Token = "0x400070C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static MenuSound instance;

	[Token(Token = "0x6000856")]
	[Address(RVA = "0xF1FC0C", Offset = "0xF1FC0C", VA = "0xF1FC0C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000857")]
	[Address(RVA = "0xF1FC58", Offset = "0xF1FC58", VA = "0xF1FC58")]
	private void Start()
	{
	}

	[Token(Token = "0x6000858")]
	[Address(RVA = "0xF1FD68", Offset = "0xF1FD68", VA = "0xF1FD68")]
	private void Update()
	{
	}

	[Token(Token = "0x6000859")]
	[Address(RVA = "0xF1FD88", Offset = "0xF1FD88", VA = "0xF1FD88")]
	private void ProcessRollingSound()
	{
	}

	[Token(Token = "0x600085A")]
	[Address(RVA = "0xF1FF40", Offset = "0xF1FF40", VA = "0xF1FF40")]
	private void ProcessWoodHit()
	{
	}

	[Token(Token = "0x600085B")]
	[Address(RVA = "0xF2014C", Offset = "0xF2014C", VA = "0xF2014C")]
	private void ProcessBallHit()
	{
	}

	[Token(Token = "0x600085C")]
	[Address(RVA = "0xF20350", Offset = "0xF20350", VA = "0xF20350")]
	public MenuSound()
	{
	}
}
[Token(Token = "0x2000148")]
public class LMMessage
{
	[Token(Token = "0x400070D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float delay;

	[Token(Token = "0x400070E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string message;

	[Token(Token = "0x400070F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioClip audioClip;

	[Token(Token = "0x4000710")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float duration;

	[Token(Token = "0x4000711")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int priority;

	[Token(Token = "0x600085D")]
	[Address(RVA = "0xF2040C", Offset = "0xF2040C", VA = "0xF2040C")]
	public LMMessage(string newMessage, float newDelay, float newDuration, AudioClip newAudioClip, int newPriority)
	{
	}
}
[Token(Token = "0x2000149")]
public class Messenger : MonoBehaviour
{
	[Token(Token = "0x200014A")]
	[CompilerGenerated]
	private sealed class <ShowMessages>d__14 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400071E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400071F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000720")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Messenger <>4__this;

		[Token(Token = "0x17000126")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600086E")]
			[Address(RVA = "0xF20C4C", Offset = "0xF20C4C", VA = "0xF20C4C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000127")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000870")]
			[Address(RVA = "0xF20C94", Offset = "0xF20C94", VA = "0xF20C94", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600086B")]
		[Address(RVA = "0xF20808", Offset = "0xF20808", VA = "0xF20808")]
		[DebuggerHidden]
		public <ShowMessages>d__14(int <>1__state)
		{
		}

		[Token(Token = "0x600086C")]
		[Address(RVA = "0xF20B08", Offset = "0xF20B08", VA = "0xF20B08", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600086D")]
		[Address(RVA = "0xF20B0C", Offset = "0xF20B0C", VA = "0xF20B0C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600086F")]
		[Address(RVA = "0xF20C54", Offset = "0xF20C54", VA = "0xF20C54", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200014B")]
	[CompilerGenerated]
	private sealed class <ShowNextMessage>d__15 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000721")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000722")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000723")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Messenger <>4__this;

		[Token(Token = "0x4000724")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private LMMessage <message>5__2;

		[Token(Token = "0x4000725")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <progress>5__3;

		[Token(Token = "0x4000726")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <timer>5__4;

		[Token(Token = "0x17000128")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000874")]
			[Address(RVA = "0xF21020", Offset = "0xF21020", VA = "0xF21020", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000129")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000876")]
			[Address(RVA = "0xF21068", Offset = "0xF21068", VA = "0xF21068", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000871")]
		[Address(RVA = "0xF20898", Offset = "0xF20898", VA = "0xF20898")]
		[DebuggerHidden]
		public <ShowNextMessage>d__15(int <>1__state)
		{
		}

		[Token(Token = "0x6000872")]
		[Address(RVA = "0xF20C9C", Offset = "0xF20C9C", VA = "0xF20C9C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000873")]
		[Address(RVA = "0xF20CA0", Offset = "0xF20CA0", VA = "0xF20CA0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000875")]
		[Address(RVA = "0xF21028", Offset = "0xF21028", VA = "0xF21028", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200014C")]
	[CompilerGenerated]
	private sealed class <DelayedDisplayMessageOnOthers>d__18 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000727")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000728")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000729")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float delay;

		[Token(Token = "0x400072A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string message;

		[Token(Token = "0x1700012A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600087A")]
			[Address(RVA = "0xF211E8", Offset = "0xF211E8", VA = "0xF211E8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700012B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600087C")]
			[Address(RVA = "0xF21230", Offset = "0xF21230", VA = "0xF21230", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000877")]
		[Address(RVA = "0xF20958", Offset = "0xF20958", VA = "0xF20958")]
		[DebuggerHidden]
		public <DelayedDisplayMessageOnOthers>d__18(int <>1__state)
		{
		}

		[Token(Token = "0x6000878")]
		[Address(RVA = "0xF21070", Offset = "0xF21070", VA = "0xF21070", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000879")]
		[Address(RVA = "0xF21074", Offset = "0xF21074", VA = "0xF21074", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600087B")]
		[Address(RVA = "0xF211F0", Offset = "0xF211F0", VA = "0xF211F0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000712")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool ShowTurnMessages;

	[Token(Token = "0x4000713")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
	public static bool ShowOpponentScoreMessages;

	[Token(Token = "0x4000714")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject canvasVR;

	[Token(Token = "0x4000715")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshProUGUI messageTextVR;

	[Token(Token = "0x4000716")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject canvasAR;

	[Token(Token = "0x4000717")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TextMeshProUGUI messageTextAR;

	[Token(Token = "0x4000718")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private List<LMMessage> messages;

	[Token(Token = "0x4000719")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Animator animator;

	[Token(Token = "0x400071A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	[HideInInspector]
	public static Messenger instance;

	[Token(Token = "0x400071B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private AudioSource audioSource;

	[Token(Token = "0x400071C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool cancelMessage;

	[Token(Token = "0x400071D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
	private bool debug;

	[Token(Token = "0x600085E")]
	[Address(RVA = "0xF2049C", Offset = "0xF2049C", VA = "0xF2049C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600085F")]
	[Address(RVA = "0xF204F8", Offset = "0xF204F8", VA = "0xF204F8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000860")]
	[Address(RVA = "0xF207A0", Offset = "0xF207A0", VA = "0xF207A0")]
	[IteratorStateMachine(typeof(<ShowMessages>d__14))]
	private IEnumerator ShowMessages()
	{
		return null;
	}

	[Token(Token = "0x6000861")]
	[Address(RVA = "0xF20830", Offset = "0xF20830", VA = "0xF20830")]
	[IteratorStateMachine(typeof(<ShowNextMessage>d__15))]
	private IEnumerator ShowNextMessage()
	{
		return null;
	}

	[Token(Token = "0x6000862")]
	[Address(RVA = "0xF1D2A8", Offset = "0xF1D2A8", VA = "0xF1D2A8")]
	public void DisplayMessage(string newMessage, float newDelay = 0f, float newDuration = 3f, [Optional] AudioClip newAudioClip, int newPriority = 5, bool translated = false)
	{
	}

	[Token(Token = "0x6000863")]
	[Address(RVA = "0xF208C0", Offset = "0xF208C0", VA = "0xF208C0")]
	public void DisplayMessageOnOthers(string message, float delay = 0f)
	{
	}

	[Token(Token = "0x6000864")]
	[Address(RVA = "0xF208E0", Offset = "0xF208E0", VA = "0xF208E0")]
	[IteratorStateMachine(typeof(<DelayedDisplayMessageOnOthers>d__18))]
	private IEnumerator DelayedDisplayMessageOnOthers(string message, float delay)
	{
		return null;
	}

	[Token(Token = "0x6000865")]
	[Address(RVA = "0xF20980", Offset = "0xF20980", VA = "0xF20980")]
	public void CancelMessages()
	{
	}

	[Token(Token = "0x6000866")]
	[Address(RVA = "0xF20650", Offset = "0xF20650", VA = "0xF20650")]
	public void UpdateTurnNotification()
	{
	}

	[Token(Token = "0x6000867")]
	[Address(RVA = "0xF206F8", Offset = "0xF206F8", VA = "0xF206F8")]
	public void UpdateOpponentScoreNotification()
	{
	}

	[Token(Token = "0x6000868")]
	[Address(RVA = "0xF20A3C", Offset = "0xF20A3C", VA = "0xF20A3C")]
	public void Update()
	{
	}

	[Token(Token = "0x6000869")]
	[Address(RVA = "0xF20A40", Offset = "0xF20A40", VA = "0xF20A40")]
	public Messenger()
	{
	}
}
[Token(Token = "0x200014D")]
public class MultiplayerAvatar : MonoBehaviourPunCallbacks, IPunObservable
{
	[Token(Token = "0x200014E")]
	private class DataStream
	{
		[Token(Token = "0x400077B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public double age;

		[Token(Token = "0x400077C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public double timestamp;

		[Token(Token = "0x400077D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 ballPosition;

		[Token(Token = "0x400077E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Vector3 headPosition;

		[Token(Token = "0x400077F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Quaternion headRotation;

		[Token(Token = "0x4000780")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float headLocalScaleX;

		[Token(Token = "0x4000781")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public Vector3 putterHeadPosition;

		[Token(Token = "0x4000782")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Quaternion putterHeadRotation;

		[Token(Token = "0x4000783")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public float putterHeadLocalScaleX;

		[Token(Token = "0x4000784")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public float putterShaftLocalScaleY;

		[Token(Token = "0x4000785")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Vector3 handLocalPosition;

		[Token(Token = "0x4000786")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public float handLocalScaleX;

		[Token(Token = "0x4000787")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public bool ballGeoActive;

		[Token(Token = "0x60008CF")]
		[Address(RVA = "0xF2D1A8", Offset = "0xF2D1A8", VA = "0xF2D1A8")]
		public DataStream()
		{
		}
	}

	[Token(Token = "0x200014F")]
	private struct InstantReplay
	{
		[Token(Token = "0x4000788")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool strokeUndoOccured;

		[Token(Token = "0x4000789")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public double serverTime;

		[Token(Token = "0x400078A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float headLocalScaleX;

		[Token(Token = "0x400078B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float putterHeadLocalScaleX;

		[Token(Token = "0x400078C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float putterShaftLocalScaleY;

		[Token(Token = "0x400078D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float handLocalScaleX;

		[Token(Token = "0x400078E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Quaternion putterHeadRotation;

		[Token(Token = "0x400078F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Quaternion headRotation;

		[Token(Token = "0x4000790")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Quaternion ballRotation;

		[Token(Token = "0x4000791")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Vector3 headPosition;

		[Token(Token = "0x4000792")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public Vector3 ballPosition;

		[Token(Token = "0x4000793")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Vector3 putterHeadPosition;

		[Token(Token = "0x4000794")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public Vector3 handLocalPosition;

		[Token(Token = "0x4000795")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public List<(ISwitchable, bool, bool)> switches;

		[Token(Token = "0x60008D0")]
		[Address(RVA = "0xF2D1B0", Offset = "0xF2D1B0", VA = "0xF2D1B0")]
		public void Clear()
		{
		}
	}

	[Token(Token = "0x2000150")]
	[CompilerGenerated]
	private sealed class <DoStartMatch>d__108 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000796")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000797")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000798")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MultiplayerAvatar <>4__this;

		[Token(Token = "0x17000130")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60008D4")]
			[Address(RVA = "0xF2D3E4", Offset = "0xF2D3E4", VA = "0xF2D3E4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000131")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60008D6")]
			[Address(RVA = "0xF2D42C", Offset = "0xF2D42C", VA = "0xF2D42C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60008D1")]
		[Address(RVA = "0xF2D2A4", Offset = "0xF2D2A4", VA = "0xF2D2A4")]
		[DebuggerHidden]
		public <DoStartMatch>d__108(int <>1__state)
		{
		}

		[Token(Token = "0x60008D2")]
		[Address(RVA = "0xF2D2CC", Offset = "0xF2D2CC", VA = "0xF2D2CC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60008D3")]
		[Address(RVA = "0xF2D2D0", Offset = "0xF2D2D0", VA = "0xF2D2D0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60008D5")]
		[Address(RVA = "0xF2D3EC", Offset = "0xF2D3EC", VA = "0xF2D3EC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000151")]
	[CompilerGenerated]
	private sealed class <CompleteCourse>d__130 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000799")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400079A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x17000132")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60008DA")]
			[Address(RVA = "0xF2D678", Offset = "0xF2D678", VA = "0xF2D678", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000133")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60008DC")]
			[Address(RVA = "0xF2D6C0", Offset = "0xF2D6C0", VA = "0xF2D6C0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60008D7")]
		[Address(RVA = "0xF2D434", Offset = "0xF2D434", VA = "0xF2D434")]
		[DebuggerHidden]
		public <CompleteCourse>d__130(int <>1__state)
		{
		}

		[Token(Token = "0x60008D8")]
		[Address(RVA = "0xF2D45C", Offset = "0xF2D45C", VA = "0xF2D45C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60008D9")]
		[Address(RVA = "0xF2D460", Offset = "0xF2D460", VA = "0xF2D460", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60008DB")]
		[Address(RVA = "0xF2D680", Offset = "0xF2D680", VA = "0xF2D680", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000152")]
	[CompilerGenerated]
	private sealed class <DelayedBoot>d__144 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400079B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400079C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x17000134")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60008E0")]
			[Address(RVA = "0xF2D7E0", Offset = "0xF2D7E0", VA = "0xF2D7E0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000135")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60008E2")]
			[Address(RVA = "0xF2D828", Offset = "0xF2D828", VA = "0xF2D828", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60008DD")]
		[Address(RVA = "0xF2D6C8", Offset = "0xF2D6C8", VA = "0xF2D6C8")]
		[DebuggerHidden]
		public <DelayedBoot>d__144(int <>1__state)
		{
		}

		[Token(Token = "0x60008DE")]
		[Address(RVA = "0xF2D6F0", Offset = "0xF2D6F0", VA = "0xF2D6F0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60008DF")]
		[Address(RVA = "0xF2D6F4", Offset = "0xF2D6F4", VA = "0xF2D6F4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60008E1")]
		[Address(RVA = "0xF2D7E8", Offset = "0xF2D7E8", VA = "0xF2D7E8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000153")]
	[CompilerGenerated]
	private sealed class <DelayedAvatarInitialization>d__149 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400079D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400079E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x17000136")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60008E6")]
			[Address(RVA = "0xF2D8E0", Offset = "0xF2D8E0", VA = "0xF2D8E0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000137")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60008E8")]
			[Address(RVA = "0xF2D928", Offset = "0xF2D928", VA = "0xF2D928", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60008E3")]
		[Address(RVA = "0xF2D830", Offset = "0xF2D830", VA = "0xF2D830")]
		[DebuggerHidden]
		public <DelayedAvatarInitialization>d__149(int <>1__state)
		{
		}

		[Token(Token = "0x60008E4")]
		[Address(RVA = "0xF2D858", Offset = "0xF2D858", VA = "0xF2D858", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60008E5")]
		[Address(RVA = "0xF2D85C", Offset = "0xF2D85C", VA = "0xF2D85C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60008E7")]
		[Address(RVA = "0xF2D8E8", Offset = "0xF2D8E8", VA = "0xF2D8E8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400072B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public GameObject ballGeo;

	[Token(Token = "0x400072C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObject marker;

	[Token(Token = "0x400072D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GameObject headGeo;

	[Token(Token = "0x400072E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Transform headBone;

	[Token(Token = "0x400072F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Transform handleBone;

	[Token(Token = "0x4000730")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject putterMaster;

	[Token(Token = "0x4000731")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject putterShaftGeo;

	[Token(Token = "0x4000732")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject putterClubGeo;

	[Token(Token = "0x4000733")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject putterHandGeo;

	[Token(Token = "0x4000734")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Transform ballTransform;

	[Token(Token = "0x4000735")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Transform headTransform;

	[Token(Token = "0x4000736")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public AudioClip yourTurnSound;

	[Token(Token = "0x4000737")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public TextMeshPro nametag;

	[Token(Token = "0x4000738")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public SpriteRenderer nametagBacking;

	[Token(Token = "0x4000739")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[Space(10f)]
	[Header("Resting plane check settings")]
	public float checkRestingPlaneDistance;

	[Token(Token = "0x400073A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public LayerMask restingPlaneLayerMask;

	[Token(Token = "0x400073B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Transform putterHeadActual;

	[Token(Token = "0x400073C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Transform putterShaftActual;

	[Token(Token = "0x400073D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Transform ballActual;

	[Token(Token = "0x400073E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Transform handActual;

	[Token(Token = "0x400073F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private AttachToVRNode headConstraint;

	[Token(Token = "0x4000740")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private float streamBuffer;

	[Token(Token = "0x4000741")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private float streamBufferMax;

	[Token(Token = "0x4000742")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private int sendRate;

	[Token(Token = "0x4000743")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private int subframeSendRate;

	[Token(Token = "0x4000744")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private float subframePercentage;

	[Token(Token = "0x4000745")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	private float subframeLength;

	[Token(Token = "0x4000746")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private List<DataStream> dataStream;

	[Token(Token = "0x4000747")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static MultiplayerAvatar activeAvatar;

	[Token(Token = "0x4000748")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private Photon.Realtime.Player playerToBoot;

	[Token(Token = "0x4000749")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	[HideInInspector]
	public static MultiplayerAvatar instance;

	[Token(Token = "0x400074A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private Vector3 previousBallPosition;

	[Token(Token = "0x400074B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	private float minVersion;

	[Token(Token = "0x400074C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	[HideInInspector]
	public bool observer;

	[Token(Token = "0x400074D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF9")]
	[HideInInspector]
	public bool guestPass;

	[Token(Token = "0x400074E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	private int cmToCupPrevious;

	[Token(Token = "0x400074F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private bool useDistanceForTurnOrder;

	[Token(Token = "0x4000750")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	[HideInInspector]
	public int myStrokeID;

	[Token(Token = "0x4000751")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	[HideInInspector]
	public Hole myCurrentHole;

	[Token(Token = "0x4000752")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private int notifiedStrokeID;

	[Token(Token = "0x4000753")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	private int strokeCounter;

	[Token(Token = "0x4000754")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	[SerializeField]
	private MultiplayerVoice multiplayerVoice;

	[Token(Token = "0x4000755")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private bool starting;

	[Token(Token = "0x4000756")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	private int dataStreamEmptyCounter;

	[Token(Token = "0x4000757")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private float checkIfMyTurnBackupTimer;

	[Token(Token = "0x4000758")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
	[HideInInspector]
	public bool courseLocked;

	[Token(Token = "0x4000759")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private InstantReplay[] playback;

	[Token(Token = "0x400075A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private List<InstantReplay> record;

	[Token(Token = "0x400075B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private List<(ISwitchable, bool, bool)> lastUpdateSwitches;

	[Token(Token = "0x400075C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private int currentFrame;

	[Token(Token = "0x400075D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
	[HideInInspector]
	public bool instantReplaying;

	[Token(Token = "0x400075E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private int fixedUpdateActiveFrameCount;

	[Token(Token = "0x400075F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
	private bool recording;

	[Token(Token = "0x4000760")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private float postRollTimer;

	[Token(Token = "0x4000761")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	[HideInInspector]
	public double serverTime;

	[Token(Token = "0x4000762")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private int receiveStreamCounter;

	[Token(Token = "0x4000763")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
	private float avatarInactiveTimer;

	[Token(Token = "0x4000764")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private float avatarInactiveCutoff;

	[Token(Token = "0x4000765")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static float anyAvatarActiveTimer;

	[Token(Token = "0x4000766")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
	private float handScaleMultiplier;

	[Token(Token = "0x4000767")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private float headScaleMultiplier;

	[Token(Token = "0x4000768")]
	public const string prop_strokeID = "strokeID";

	[Token(Token = "0x4000769")]
	public const string prop_ballID = "ballID";

	[Token(Token = "0x400076A")]
	public const string prop_putterID = "putterID";

	[Token(Token = "0x400076B")]
	public const string prop_avatarID = "av";

	[Token(Token = "0x400076C")]
	public const string prop_score = "Score";

	[Token(Token = "0x400076D")]
	public const string prop_version = "version";

	[Token(Token = "0x400076E")]
	public const string prop_multiplayerGameKey = "multiplayerGameKey";

	[Token(Token = "0x400076F")]
	public const string prop_gameMode = "gameMode";

	[Token(Token = "0x4000770")]
	public const string prop_currentCourse = "cc";

	[Token(Token = "0x4000771")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
	private bool showNametag;

	[Token(Token = "0x4000772")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x17D")]
	private bool receivingData;

	[Token(Token = "0x4000773")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x17E")]
	private bool checkingRestingPlane;

	[Token(Token = "0x4000774")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x17F")]
	private bool isDestroyed;

	[Token(Token = "0x4000775")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private Mighty.Avatar avatar;

	[Token(Token = "0x4000776")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private float shaftScale;

	[Token(Token = "0x4000777")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
	private bool avatarVisibilityToggle;

	[Token(Token = "0x4000778")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	private InstantReplay newData;

	[Token(Token = "0x4000779")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	private string[] ballRestTags;

	[Token(Token = "0x1700012C")]
	public MultiplayerVoice MultiplayerVoice
	{
		[Token(Token = "0x600087D")]
		[Address(RVA = "0xF21238", Offset = "0xF21238", VA = "0xF21238")]
		get
		{
			return null;
		}
		[Token(Token = "0x600087E")]
		[Address(RVA = "0xF21240", Offset = "0xF21240", VA = "0xF21240")]
		set
		{
		}
	}

	[Token(Token = "0x1700012D")]
	public bool isLocalPlayer
	{
		[Token(Token = "0x600087F")]
		[Address(RVA = "0xF21248", Offset = "0xF21248", VA = "0xF21248")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700012E")]
	public GameObject trackingGeo
	{
		[Token(Token = "0x6000880")]
		[Address(RVA = "0xF21318", Offset = "0xF21318", VA = "0xF21318")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700012F")]
	private float clubToHandDistance
	{
		[Token(Token = "0x6000881")]
		[Address(RVA = "0xF21320", Offset = "0xF21320", VA = "0xF21320")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x14000017")]
	public static event Action<MultiplayerAvatar> OnAvatarCreate
	{
		[Token(Token = "0x6000882")]
		[Address(RVA = "0xF213F8", Offset = "0xF213F8", VA = "0xF213F8")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000883")]
		[Address(RVA = "0xF214EC", Offset = "0xF214EC", VA = "0xF214EC")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6000884")]
	[Address(RVA = "0xF215E0", Offset = "0xF215E0", VA = "0xF215E0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000885")]
	[Address(RVA = "0xF21780", Offset = "0xF21780", VA = "0xF21780")]
	private void Start()
	{
	}

	[Token(Token = "0x6000886")]
	[Address(RVA = "0xF2437C", Offset = "0xF2437C", VA = "0xF2437C", Slot = "28")]
	public override void OnEnable()
	{
	}

	[Token(Token = "0x6000887")]
	[Address(RVA = "0xF2471C", Offset = "0xF2471C", VA = "0xF2471C", Slot = "29")]
	public override void OnDisable()
	{
	}

	[Token(Token = "0x6000888")]
	[Address(RVA = "0xF24ABC", Offset = "0xF24ABC", VA = "0xF24ABC")]
	public void OnDestroy()
	{
	}

	[Token(Token = "0x6000889")]
	[Address(RVA = "0xF24CB0", Offset = "0xF24CB0", VA = "0xF24CB0")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x600088A")]
	[Address(RVA = "0xF25BAC", Offset = "0xF25BAC", VA = "0xF25BAC")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600088B")]
	[Address(RVA = "0xF280D0", Offset = "0xF280D0", VA = "0xF280D0")]
	private void ToggleAvatarVisibility(bool isOn)
	{
	}

	[Token(Token = "0x600088C")]
	[Address(RVA = "0xF280DC", Offset = "0xF280DC", VA = "0xF280DC")]
	private void BallSwitchToggled(ISwitchable currentSwitch, bool isOn, bool startingState)
	{
	}

	[Token(Token = "0x600088D")]
	[Address(RVA = "0xF28248", Offset = "0xF28248", VA = "0xF28248", Slot = "43")]
	public override void OnPlayerLeftRoom(Photon.Realtime.Player otherPlayer)
	{
	}

	[Token(Token = "0x600088E")]
	[Address(RVA = "0xF288E0", Offset = "0xF288E0", VA = "0xF288E0")]
	private void OnValidatePurchases()
	{
	}

	[Token(Token = "0x600088F")]
	[Address(RVA = "0xF21F14", Offset = "0xF21F14", VA = "0xF21F14")]
	private void CheckVersionNumber()
	{
	}

	[Token(Token = "0x6000890")]
	[Address(RVA = "0xF22804", Offset = "0xF22804", VA = "0xF22804")]
	private void CheckIfCourseUnlocked()
	{
	}

	[Token(Token = "0x6000891")]
	[Address(RVA = "0xF28C14", Offset = "0xF28C14", VA = "0xF28C14")]
	private void Purchase()
	{
	}

	[Token(Token = "0x6000892")]
	[Address(RVA = "0xF28C9C", Offset = "0xF28C9C", VA = "0xF28C9C")]
	private void ReturnToMenu()
	{
	}

	[Token(Token = "0x6000893")]
	[Address(RVA = "0xF22EDC", Offset = "0xF22EDC", VA = "0xF22EDC")]
	[IteratorStateMachine(typeof(<DoStartMatch>d__108))]
	private IEnumerator DoStartMatch()
	{
		return null;
	}

	[Token(Token = "0x6000894")]
	[Address(RVA = "0xF26628", Offset = "0xF26628", VA = "0xF26628")]
	private void UpdateBallInHand()
	{
	}

	[Token(Token = "0x6000895")]
	[Address(RVA = "0xF28CF8", Offset = "0xF28CF8", VA = "0xF28CF8")]
	public void OnPuttComplete()
	{
	}

	[Token(Token = "0x6000896")]
	[Address(RVA = "0xF28E28", Offset = "0xF28E28", VA = "0xF28E28")]
	public void UpdateRemoteInfo()
	{
	}

	[Token(Token = "0x6000897")]
	[Address(RVA = "0xF28FC4", Offset = "0xF28FC4", VA = "0xF28FC4")]
	public void OnHoleComplete()
	{
	}

	[Token(Token = "0x6000898")]
	[Address(RVA = "0xF29040", Offset = "0xF29040", VA = "0xF29040")]
	public void ActivateTurn()
	{
	}

	[Token(Token = "0x6000899")]
	[Address(RVA = "0xF2957C", Offset = "0xF2957C", VA = "0xF2957C")]
	[PunRPC]
	public void MasterBootPlayer(Photon.Realtime.Player newPlayerToBoot)
	{
	}

	[Token(Token = "0x600089A")]
	[Address(RVA = "0xF22D64", Offset = "0xF22D64", VA = "0xF22D64")]
	[PunRPC]
	public void NotMyTurn()
	{
	}

	[Token(Token = "0x600089B")]
	[Address(RVA = "0xF25F9C", Offset = "0xF25F9C", VA = "0xF25F9C")]
	private void CacheFrameToSend()
	{
	}

	[Token(Token = "0x600089C")]
	[Address(RVA = "0xF29694", Offset = "0xF29694", VA = "0xF29694", Slot = "54")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x600089D")]
	[Address(RVA = "0xF26828", Offset = "0xF26828", VA = "0xF26828")]
	private void UpdateTransforms()
	{
	}

	[Token(Token = "0x600089E")]
	[Address(RVA = "0xF29F70", Offset = "0xF29F70", VA = "0xF29F70")]
	private void UpdateBallMarkerPosition()
	{
	}

	[Token(Token = "0x600089F")]
	[Address(RVA = "0xF22FC0", Offset = "0xF22FC0", VA = "0xF22FC0")]
	private void SetupBall()
	{
	}

	[Token(Token = "0x60008A0")]
	[Address(RVA = "0xF2A368", Offset = "0xF2A368", VA = "0xF2A368")]
	private void TurnOffLightProbes(GameObject obj)
	{
	}

	[Token(Token = "0x60008A1")]
	[Address(RVA = "0xF2A43C", Offset = "0xF2A43C", VA = "0xF2A43C")]
	private void SetupPutter()
	{
	}

	[Token(Token = "0x60008A2")]
	[Address(RVA = "0xF237AC", Offset = "0xF237AC", VA = "0xF237AC")]
	public void SetupAvatar()
	{
	}

	[Token(Token = "0x60008A3")]
	[Address(RVA = "0xF29E98", Offset = "0xF29E98", VA = "0xF29E98")]
	private void UpdateHandWindingOrder(int winding)
	{
	}

	[Token(Token = "0x60008A4")]
	[Address(RVA = "0xF2AEE0", Offset = "0xF2AEE0", VA = "0xF2AEE0")]
	private int GetPlayerNumber()
	{
		return default(int);
	}

	[Token(Token = "0x60008A5")]
	[Address(RVA = "0xF2AFC0", Offset = "0xF2AFC0", VA = "0xF2AFC0")]
	[PunRPC]
	public void DisplayRemoteMessage(string message)
	{
	}

	[Token(Token = "0x60008A6")]
	[Address(RVA = "0xF2B1C4", Offset = "0xF2B1C4", VA = "0xF2B1C4", Slot = "47")]
	public override void OnPlayerPropertiesUpdate(Photon.Realtime.Player targetPlayer, ExitGames.Client.Photon.Hashtable changedProps)
	{
	}

	[Token(Token = "0x60008A7")]
	[Address(RVA = "0xF26400", Offset = "0xF26400", VA = "0xF26400")]
	private void CheckIfMyTurn()
	{
	}

	[Token(Token = "0x60008A8")]
	[Address(RVA = "0xF2B424", Offset = "0xF2B424", VA = "0xF2B424")]
	private void CheckIfCourseComplete()
	{
	}

	[Token(Token = "0x60008A9")]
	[Address(RVA = "0xF2B640", Offset = "0xF2B640", VA = "0xF2B640")]
	[IteratorStateMachine(typeof(<CompleteCourse>d__130))]
	private IEnumerator CompleteCourse()
	{
		return null;
	}

	[Token(Token = "0x60008AA")]
	[Address(RVA = "0xF2B6A0", Offset = "0xF2B6A0", VA = "0xF2B6A0")]
	public int GetHighestStrokeID()
	{
		return default(int);
	}

	[Token(Token = "0x60008AB")]
	[Address(RVA = "0xF28460", Offset = "0xF28460", VA = "0xF28460")]
	public void WriteStrokeID()
	{
	}

	[Token(Token = "0x60008AC")]
	[Address(RVA = "0xF28968", Offset = "0xF28968", VA = "0xF28968")]
	private void ClaimStrokeID(int strokeToClaim)
	{
	}

	[Token(Token = "0x60008AD")]
	[Address(RVA = "0xF2B7F0", Offset = "0xF2B7F0", VA = "0xF2B7F0")]
	[PunRPC]
	public void Master_BootMe()
	{
	}

	[Token(Token = "0x60008AE")]
	[Address(RVA = "0xF2B8F4", Offset = "0xF2B8F4", VA = "0xF2B8F4")]
	[PunRPC]
	public void Master_ObserverMode()
	{
	}

	[Token(Token = "0x60008AF")]
	[Address(RVA = "0xF2B954", Offset = "0xF2B954", VA = "0xF2B954")]
	[PunRPC]
	public void Master_JoinCurrentHole()
	{
	}

	[Token(Token = "0x60008B0")]
	[Address(RVA = "0xF2BE04", Offset = "0xF2BE04", VA = "0xF2BE04")]
	[PunRPC]
	public void Master_PlayCatchUp()
	{
	}

	[Token(Token = "0x60008B1")]
	[Address(RVA = "0xF22700", Offset = "0xF22700", VA = "0xF22700")]
	public void ObserverMode()
	{
	}

	[Token(Token = "0x60008B2")]
	[Address(RVA = "0xF2B9B4", Offset = "0xF2B9B4", VA = "0xF2B9B4")]
	public void JoinCurrentHole()
	{
	}

	[Token(Token = "0x60008B3")]
	[Address(RVA = "0xF2BF14", Offset = "0xF2BF14", VA = "0xF2BF14")]
	public static void PlayOffline()
	{
	}

	[Token(Token = "0x60008B4")]
	[Address(RVA = "0xF2BE64", Offset = "0xF2BE64", VA = "0xF2BE64")]
	public void PlayCatchUp()
	{
	}

	[Token(Token = "0x60008B5")]
	[Address(RVA = "0xF2BFAC", Offset = "0xF2BFAC", VA = "0xF2BFAC")]
	public void MatchEndedCourseNotUnlocked()
	{
	}

	[Token(Token = "0x60008B6")]
	[Address(RVA = "0xF2B850", Offset = "0xF2B850", VA = "0xF2B850")]
	public void BootMe()
	{
	}

	[Token(Token = "0x60008B7")]
	[Address(RVA = "0xF2C050", Offset = "0xF2C050", VA = "0xF2C050")]
	[IteratorStateMachine(typeof(<DelayedBoot>d__144))]
	private IEnumerator DelayedBoot()
	{
		return null;
	}

	[Token(Token = "0x60008B8")]
	[Address(RVA = "0xF22180", Offset = "0xF22180", VA = "0xF22180")]
	private void InitializeStrokeID()
	{
	}

	[Token(Token = "0x60008B9")]
	[Address(RVA = "0xF22B48", Offset = "0xF22B48", VA = "0xF22B48")]
	public void ResetPlayerCustomProperties()
	{
	}

	[Token(Token = "0x60008BA")]
	[Address(RVA = "0xF2C0B0", Offset = "0xF2C0B0", VA = "0xF2C0B0")]
	public void OnPutterSelected(int previousPutter, int activePutter)
	{
	}

	[Token(Token = "0x60008BB")]
	[Address(RVA = "0xF2C0D0", Offset = "0xF2C0D0", VA = "0xF2C0D0")]
	public void DelyaedInitializeAvatarIDs()
	{
	}

	[Token(Token = "0x60008BC")]
	[Address(RVA = "0xF2C0F0", Offset = "0xF2C0F0", VA = "0xF2C0F0")]
	[IteratorStateMachine(typeof(<DelayedAvatarInitialization>d__149))]
	private IEnumerator DelayedAvatarInitialization()
	{
		return null;
	}

	[Token(Token = "0x60008BD")]
	[Address(RVA = "0xF22288", Offset = "0xF22288", VA = "0xF22288")]
	public static void InitializeAvatarIDs()
	{
	}

	[Token(Token = "0x60008BE")]
	[Address(RVA = "0xF2C150", Offset = "0xF2C150", VA = "0xF2C150")]
	public void LoadScene(string sceneToLoad)
	{
	}

	[Token(Token = "0x60008BF")]
	[Address(RVA = "0xF2C374", Offset = "0xF2C374", VA = "0xF2C374")]
	[PunRPC]
	public void RemoteLoad()
	{
	}

	[Token(Token = "0x60008C0")]
	[Address(RVA = "0xF2C3F0", Offset = "0xF2C3F0", VA = "0xF2C3F0")]
	[PunRPC]
	public void IQuit()
	{
	}

	[Token(Token = "0x60008C1")]
	[Address(RVA = "0xF2C4A8", Offset = "0xF2C4A8", VA = "0xF2C4A8")]
	[ContextMenu("ToggleReplay")]
	public void ToggleInstantReplay()
	{
	}

	[Token(Token = "0x60008C2")]
	[Address(RVA = "0xF2C738", Offset = "0xF2C738", VA = "0xF2C738")]
	private void OnPutt()
	{
	}

	[Token(Token = "0x60008C3")]
	[Address(RVA = "0xF2C73C", Offset = "0xF2C73C", VA = "0xF2C73C")]
	public void ClearPreviousCache()
	{
	}

	[Token(Token = "0x60008C4")]
	[Address(RVA = "0xF2C8C4", Offset = "0xF2C8C4", VA = "0xF2C8C4")]
	private void OnUndoStroke()
	{
	}

	[Token(Token = "0x60008C5")]
	[Address(RVA = "0xF2C568", Offset = "0xF2C568", VA = "0xF2C568")]
	private void Replay(bool startPlayback, bool replayFinished, bool skipEvents = false)
	{
	}

	[Token(Token = "0x60008C6")]
	[Address(RVA = "0xF255E4", Offset = "0xF255E4", VA = "0xF255E4")]
	private void Record()
	{
	}

	[Token(Token = "0x60008C7")]
	[Address(RVA = "0xF24E8C", Offset = "0xF24E8C", VA = "0xF24E8C")]
	private void Playback()
	{
	}

	[Token(Token = "0x60008C8")]
	[Address(RVA = "0xF2C9F4", Offset = "0xF2C9F4", VA = "0xF2C9F4")]
	public static Vector3 GetActiveBallPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60008C9")]
	[Address(RVA = "0xF22F44", Offset = "0xF22F44", VA = "0xF22F44")]
	public void UpdateNametag()
	{
	}

	[Token(Token = "0x60008CA")]
	[Address(RVA = "0xF2CC84", Offset = "0xF2CC84", VA = "0xF2CC84")]
	public MultiplayerAvatar()
	{
	}
}
[Token(Token = "0x2000155")]
public class MultiplayerBallSound : MonoBehaviour
{
	[Token(Token = "0x40007A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private AudioSource specialSound;

	[Token(Token = "0x40007A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private AudioSource hitSound;

	[Token(Token = "0x40007A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioClip puttSound;

	[Token(Token = "0x40007A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioClip inHoleSound;

	[Token(Token = "0x40007A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 previousVelocity;

	[Token(Token = "0x40007A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Vector3 previousPosition;

	[Token(Token = "0x40007A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int ballCollisionLayers;

	[Token(Token = "0x40007A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float volumeMultiplier;

	[Token(Token = "0x40007A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool inHole;

	[Token(Token = "0x40007A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public MultiplayerAvatar multiplayerAvatar;

	[Token(Token = "0x40007AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int lastPlayedStrokeID;

	[Token(Token = "0x40007AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private bool moving;

	[Token(Token = "0x60008EC")]
	[Address(RVA = "0xF2D9A0", Offset = "0xF2D9A0", VA = "0xF2D9A0")]
	private void Start()
	{
	}

	[Token(Token = "0x60008ED")]
	[Address(RVA = "0xF2DABC", Offset = "0xF2DABC", VA = "0xF2DABC")]
	private void Update()
	{
	}

	[Token(Token = "0x60008EE")]
	[Address(RVA = "0xF2E1A8", Offset = "0xF2E1A8", VA = "0xF2E1A8")]
	private void PlayHit(Surface surface, float volume)
	{
	}

	[Token(Token = "0x60008EF")]
	[Address(RVA = "0xF2E23C", Offset = "0xF2E23C", VA = "0xF2E23C")]
	public MultiplayerBallSound()
	{
	}
}
[Token(Token = "0x2000156")]
public enum Difficulty
{
	[Token(Token = "0x40007AD")]
	easy,
	[Token(Token = "0x40007AE")]
	hard,
	[Token(Token = "0x40007AF")]
	any
}
[Token(Token = "0x2000157")]
public class MultiplayerLauncher : MonoBehaviourPunCallbacks, IProfileActivatedHandler, IProfileHandler, IProfilesChangedHandler
{
	[Token(Token = "0x2000158")]
	[CompilerGenerated]
	private sealed class <Start>d__56 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40007DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40007E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40007E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MultiplayerLauncher <>4__this;

		[Token(Token = "0x1700013A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000928")]
			[Address(RVA = "0xF31F8C", Offset = "0xF31F8C", VA = "0xF31F8C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700013B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600092A")]
			[Address(RVA = "0xF31FD4", Offset = "0xF31FD4", VA = "0xF31FD4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000925")]
		[Address(RVA = "0xF2E874", Offset = "0xF2E874", VA = "0xF2E874")]
		[DebuggerHidden]
		public <Start>d__56(int <>1__state)
		{
		}

		[Token(Token = "0x6000926")]
		[Address(RVA = "0xF31D74", Offset = "0xF31D74", VA = "0xF31D74", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000927")]
		[Address(RVA = "0xF31D78", Offset = "0xF31D78", VA = "0xF31D78", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000929")]
		[Address(RVA = "0xF31F94", Offset = "0xF31F94", VA = "0xF31F94", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000159")]
	[CompilerGenerated]
	private sealed class <DoConnect>d__66 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40007E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40007E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40007E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MultiplayerLauncher <>4__this;

		[Token(Token = "0x1700013C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600092E")]
			[Address(RVA = "0xF32140", Offset = "0xF32140", VA = "0xF32140", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700013D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000930")]
			[Address(RVA = "0xF32188", Offset = "0xF32188", VA = "0xF32188", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600092B")]
		[Address(RVA = "0xF2F300", Offset = "0xF2F300", VA = "0xF2F300")]
		[DebuggerHidden]
		public <DoConnect>d__66(int <>1__state)
		{
		}

		[Token(Token = "0x600092C")]
		[Address(RVA = "0xF31FDC", Offset = "0xF31FDC", VA = "0xF31FDC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600092D")]
		[Address(RVA = "0xF31FE0", Offset = "0xF31FE0", VA = "0xF31FE0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600092F")]
		[Address(RVA = "0xF32148", Offset = "0xF32148", VA = "0xF32148", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200015A")]
	[CompilerGenerated]
	private sealed class <DelayedCreateRoom>d__68 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40007E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40007E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x1700013E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000934")]
			[Address(RVA = "0xF32228", Offset = "0xF32228", VA = "0xF32228", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700013F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000936")]
			[Address(RVA = "0xF32270", Offset = "0xF32270", VA = "0xF32270", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000931")]
		[Address(RVA = "0xF2F708", Offset = "0xF2F708", VA = "0xF2F708")]
		[DebuggerHidden]
		public <DelayedCreateRoom>d__68(int <>1__state)
		{
		}

		[Token(Token = "0x6000932")]
		[Address(RVA = "0xF32190", Offset = "0xF32190", VA = "0xF32190", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000933")]
		[Address(RVA = "0xF32194", Offset = "0xF32194", VA = "0xF32194", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000935")]
		[Address(RVA = "0xF32230", Offset = "0xF32230", VA = "0xF32230", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200015B")]
	[CompilerGenerated]
	private sealed class <StartQuickMatch>d__77 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40007E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40007E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40007E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MultiplayerLauncher <>4__this;

		[Token(Token = "0x17000140")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600093A")]
			[Address(RVA = "0xF3235C", Offset = "0xF3235C", VA = "0xF3235C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000141")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600093C")]
			[Address(RVA = "0xF323A4", Offset = "0xF323A4", VA = "0xF323A4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000937")]
		[Address(RVA = "0xF30674", Offset = "0xF30674", VA = "0xF30674")]
		[DebuggerHidden]
		public <StartQuickMatch>d__77(int <>1__state)
		{
		}

		[Token(Token = "0x6000938")]
		[Address(RVA = "0xF32278", Offset = "0xF32278", VA = "0xF32278", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000939")]
		[Address(RVA = "0xF3227C", Offset = "0xF3227C", VA = "0xF3227C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600093B")]
		[Address(RVA = "0xF32364", Offset = "0xF32364", VA = "0xF32364", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40007B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Header("AR")]
	public GameObject singlePlayerMenuAR;

	[Token(Token = "0x40007B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject quickMatchMenuAR;

	[Token(Token = "0x40007B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject privateMatchMenuAR;

	[Token(Token = "0x40007B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject networkErrorMenuAR;

	[Token(Token = "0x40007B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject playerNameMenuAR;

	[Token(Token = "0x40007B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject joinPrivateRoomMenuAR;

	[Token(Token = "0x40007B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject connectingMenuAR;

	[Token(Token = "0x40007B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public TextMeshProUGUI quickMatchMessageAR;

	[Token(Token = "0x40007B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject coursesAR;

	[Token(Token = "0x40007B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[Header("VR")]
	public GameObject singlePlayerMenuVR;

	[Token(Token = "0x40007BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject quickMatchMenuVR;

	[Token(Token = "0x40007BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject privateMatchMenuVR;

	[Token(Token = "0x40007BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject networkErrorMenuVR;

	[Token(Token = "0x40007BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameObject playerNameMenuVR;

	[Token(Token = "0x40007BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public GameObject joinPrivateRoomMenuVR;

	[Token(Token = "0x40007BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public GameObject connectingMenuVR;

	[Token(Token = "0x40007C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public TextMeshProUGUI quickMatchMessageVR;

	[Token(Token = "0x40007C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public GameObject coursesVR;

	[Token(Token = "0x40007C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[Header("General")]
	public GameObject courseInfoParent;

	[Token(Token = "0x40007C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public AudioClip leftRoomAudio;

	[Token(Token = "0x40007C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public AudioClip joinedRoomAudio;

	[Token(Token = "0x40007C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public GameObject playerPrefab;

	[Token(Token = "0x40007C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static MultiplayerLauncher instance;

	[Token(Token = "0x40007C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public CourseCatalogAsset courseCatalog;

	[Token(Token = "0x40007C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public int defaultRoomSize;

	[Token(Token = "0x40007C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static string CURRENT_SCENE_PROPERTY;

	[Token(Token = "0x40007CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private GameObject singlePlayerMenu;

	[Token(Token = "0x40007CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private GameObject quickMatchMenu;

	[Token(Token = "0x40007CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private GameObject privateMatchMenu;

	[Token(Token = "0x40007CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private GameObject networkErrorMenu;

	[Token(Token = "0x40007CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private GameObject joinPrivateRoomMenu;

	[Token(Token = "0x40007CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private GameObject connectingMenu;

	[Token(Token = "0x40007D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private TextMeshProUGUI quickMatchMessage;

	[Token(Token = "0x40007D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private GameObject courses;

	[Token(Token = "0x40007D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private bool quickMatch;

	[Token(Token = "0x40007D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	private float loadSceneDelay;

	[Token(Token = "0x40007D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private float sceneTimer;

	[Token(Token = "0x40007D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
	private bool autoCleanCache;

	[Token(Token = "0x40007D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private int playerTtl;

	[Token(Token = "0x40007D7")]
	private const int MAX_PLAYERS = 8;

	[Token(Token = "0x40007D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	private int currentRoomSize;

	[Token(Token = "0x40007D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private bool VROnlyQuickmatch;

	[Token(Token = "0x40007DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public GameObject[] disableInQuickmatch;

	[Token(Token = "0x40007DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private bool isCreatingMultiplayerAvatar;

	[Token(Token = "0x40007DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
	private Difficulty difficulty;

	[Token(Token = "0x40007DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[HideInInspector]
	public static GameMode gameModeToSet;

	[Token(Token = "0x17000138")]
	public static bool IsConnected
	{
		[Token(Token = "0x60008F2")]
		[Address(RVA = "0xF2E490", Offset = "0xF2E490", VA = "0xF2E490")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000139")]
	public static bool IsQuickMatch
	{
		[Token(Token = "0x60008F3")]
		[Address(RVA = "0xF2E4E0", Offset = "0xF2E4E0", VA = "0xF2E4E0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x14000018")]
	public static event Action<ExitGames.Client.Photon.Hashtable> PlayerPropertiesUpdatedEvent
	{
		[Token(Token = "0x60008F0")]
		[Address(RVA = "0xF2E2A8", Offset = "0xF2E2A8", VA = "0xF2E2A8")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60008F1")]
		[Address(RVA = "0xF2E39C", Offset = "0xF2E39C", VA = "0xF2E39C")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x60008F4")]
	[Address(RVA = "0xF2E638", Offset = "0xF2E638", VA = "0xF2E638")]
	private void Awake()
	{
	}

	[Token(Token = "0x60008F5")]
	[Address(RVA = "0xF2E694", Offset = "0xF2E694", VA = "0xF2E694", Slot = "28")]
	public override void OnEnable()
	{
	}

	[Token(Token = "0x60008F6")]
	[Address(RVA = "0xF2E750", Offset = "0xF2E750", VA = "0xF2E750", Slot = "29")]
	public override void OnDisable()
	{
	}

	[Token(Token = "0x60008F7")]
	[Address(RVA = "0xF2E80C", Offset = "0xF2E80C", VA = "0xF2E80C")]
	[IteratorStateMachine(typeof(<Start>d__56))]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x60008F8")]
	[Address(RVA = "0xF2E89C", Offset = "0xF2E89C", VA = "0xF2E89C")]
	private void Update()
	{
	}

	[Token(Token = "0x60008F9")]
	[Address(RVA = "0xF2E8DC", Offset = "0xF2E8DC", VA = "0xF2E8DC", Slot = "54")]
	public void OnProfileActivated(ProfileData profile)
	{
	}

	[Token(Token = "0x60008FA")]
	[Address(RVA = "0xF2EF2C", Offset = "0xF2EF2C", VA = "0xF2EF2C", Slot = "55")]
	public void OnProfilesChanged(ProfileData[] profiles)
	{
	}

	[Token(Token = "0x60008FB")]
	[Address(RVA = "0xF2EFEC", Offset = "0xF2EFEC", VA = "0xF2EFEC")]
	private void OnValidatePurchases()
	{
	}

	[Token(Token = "0x60008FC")]
	[Address(RVA = "0xF2F08C", Offset = "0xF2F08C", VA = "0xF2F08C")]
	private void ActivateMenu(GameObject menu)
	{
	}

	[Token(Token = "0x60008FD")]
	[Address(RVA = "0xF2F1C4", Offset = "0xF2F1C4", VA = "0xF2F1C4")]
	public void SinglePlayerMode()
	{
	}

	[Token(Token = "0x60008FE")]
	[Address(RVA = "0xF2F214", Offset = "0xF2F214", VA = "0xF2F214")]
	public void QuickMatch()
	{
	}

	[Token(Token = "0x60008FF")]
	[Address(RVA = "0xF2F25C", Offset = "0xF2F25C", VA = "0xF2F25C")]
	public void PrivateMatch()
	{
	}

	[Token(Token = "0x6000900")]
	[Address(RVA = "0xF2F23C", Offset = "0xF2F23C", VA = "0xF2F23C")]
	private void Connect()
	{
	}

	[Token(Token = "0x6000901")]
	[Address(RVA = "0xF2F298", Offset = "0xF2F298", VA = "0xF2F298")]
	[IteratorStateMachine(typeof(<DoConnect>d__66))]
	private IEnumerator DoConnect()
	{
		return null;
	}

	[Token(Token = "0x6000902")]
	[Address(RVA = "0xF2F328", Offset = "0xF2F328", VA = "0xF2F328", Slot = "45")]
	public override void OnConnectedToMaster()
	{
	}

	[Token(Token = "0x6000903")]
	[Address(RVA = "0xF2F6A8", Offset = "0xF2F6A8", VA = "0xF2F6A8")]
	[IteratorStateMachine(typeof(<DelayedCreateRoom>d__68))]
	private IEnumerator DelayedCreateRoom()
	{
		return null;
	}

	[Token(Token = "0x6000904")]
	[Address(RVA = "0xF2F730", Offset = "0xF2F730", VA = "0xF2F730", Slot = "44")]
	public override void OnJoinRandomFailed(short returnCode, string message)
	{
	}

	[Token(Token = "0x6000905")]
	[Address(RVA = "0xF2F9E4", Offset = "0xF2F9E4", VA = "0xF2F9E4", Slot = "38")]
	public override void OnDisconnected(DisconnectCause cause)
	{
	}

	[Token(Token = "0x6000906")]
	[Address(RVA = "0xF2FB58", Offset = "0xF2FB58", VA = "0xF2FB58")]
	public void DismissError()
	{
	}

	[Token(Token = "0x6000907")]
	[Address(RVA = "0xF2FB78", Offset = "0xF2FB78", VA = "0xF2FB78", Slot = "41")]
	public override void OnJoinedRoom()
	{
	}

	[Token(Token = "0x6000908")]
	[Address(RVA = "0xF2FF04", Offset = "0xF2FF04", VA = "0xF2FF04", Slot = "46")]
	public override void OnRoomPropertiesUpdate(ExitGames.Client.Photon.Hashtable propertiesThatChanged)
	{
	}

	[Token(Token = "0x6000909")]
	[Address(RVA = "0xF30054", Offset = "0xF30054", VA = "0xF30054", Slot = "42")]
	public override void OnPlayerEnteredRoom(Photon.Realtime.Player newPlayer)
	{
	}

	[Token(Token = "0x600090A")]
	[Address(RVA = "0xF3018C", Offset = "0xF3018C", VA = "0xF3018C")]
	public void DisplayPlayerEnteredRoomMessage(string newPlayerName)
	{
	}

	[Token(Token = "0x600090B")]
	[Address(RVA = "0xF30384", Offset = "0xF30384", VA = "0xF30384", Slot = "43")]
	public override void OnPlayerLeftRoom(Photon.Realtime.Player otherPlayer)
	{
	}

	[Token(Token = "0x600090C")]
	[Address(RVA = "0xF3031C", Offset = "0xF3031C", VA = "0xF3031C")]
	[IteratorStateMachine(typeof(<StartQuickMatch>d__77))]
	private IEnumerator StartQuickMatch()
	{
		return null;
	}

	[Token(Token = "0x600090D")]
	[Address(RVA = "0xF3069C", Offset = "0xF3069C", VA = "0xF3069C")]
	public void PlayRandom9Any()
	{
	}

	[Token(Token = "0x600090E")]
	[Address(RVA = "0xF30780", Offset = "0xF30780", VA = "0xF30780")]
	public void PlayRandom18Any()
	{
	}

	[Token(Token = "0x600090F")]
	[Address(RVA = "0xF307EC", Offset = "0xF307EC", VA = "0xF307EC")]
	public void PlayRandom9Easy()
	{
	}

	[Token(Token = "0x6000910")]
	[Address(RVA = "0xF307F4", Offset = "0xF307F4", VA = "0xF307F4")]
	public void PlayRandom18Easy()
	{
	}

	[Token(Token = "0x6000911")]
	[Address(RVA = "0xF307FC", Offset = "0xF307FC", VA = "0xF307FC")]
	public void PlayRandom9Hard()
	{
	}

	[Token(Token = "0x6000912")]
	[Address(RVA = "0xF30808", Offset = "0xF30808", VA = "0xF30808")]
	public void PlayRandom18Hard()
	{
	}

	[Token(Token = "0x6000913")]
	[Address(RVA = "0xF306A8", Offset = "0xF306A8", VA = "0xF306A8")]
	public void PlayRandom9()
	{
	}

	[Token(Token = "0x6000914")]
	[Address(RVA = "0xF3078C", Offset = "0xF3078C", VA = "0xF3078C")]
	public void PlayRandom18()
	{
	}

	[Token(Token = "0x6000915")]
	[Address(RVA = "0xF30814", Offset = "0xF30814", VA = "0xF30814")]
	private void StartRandomCourse()
	{
	}

	[Token(Token = "0x6000916")]
	[Address(RVA = "0xF3118C", Offset = "0xF3118C", VA = "0xF3118C")]
	[PunRPC]
	public void StartingQuickMatchMessage()
	{
	}

	[Token(Token = "0x6000917")]
	[Address(RVA = "0xF312A8", Offset = "0xF312A8", VA = "0xF312A8", Slot = "34")]
	public override void OnJoinRoomFailed(short returnCode, string message)
	{
	}

	[Token(Token = "0x6000918")]
	[Address(RVA = "0xF313B4", Offset = "0xF313B4", VA = "0xF313B4")]
	private void UpdateAvailableCoursesReturningInMultiplayerMode()
	{
	}

	[Token(Token = "0x6000919")]
	[Address(RVA = "0xF2E99C", Offset = "0xF2E99C", VA = "0xF2E99C")]
	private void SubmitCourseLocks()
	{
	}

	[Token(Token = "0x600091A")]
	[Address(RVA = "0xF31434", Offset = "0xF31434", VA = "0xF31434")]
	public static (bool, string) GetIsCourseAvailableOnline(CourseInfoAsset courseInfo)
	{
		return default((bool, string));
	}

	[Token(Token = "0x600091B")]
	[Address(RVA = "0xF31864", Offset = "0xF31864", VA = "0xF31864", Slot = "47")]
	public override void OnPlayerPropertiesUpdate(Photon.Realtime.Player targetPlayer, ExitGames.Client.Photon.Hashtable changedProps)
	{
	}

	[Token(Token = "0x600091C")]
	[Address(RVA = "0xF318E0", Offset = "0xF318E0", VA = "0xF318E0")]
	private void SetMaxplayers(int roomSize)
	{
	}

	[Token(Token = "0x600091D")]
	[Address(RVA = "0xF318F8", Offset = "0xF318F8", VA = "0xF318F8")]
	public void JoinPrivateRoom(string roomToJoin, int roomSize)
	{
	}

	[Token(Token = "0x600091E")]
	[Address(RVA = "0xF30C54", Offset = "0xF30C54", VA = "0xF30C54")]
	public void LoadScene(string sceneToLoad)
	{
	}

	[Token(Token = "0x600091F")]
	[Address(RVA = "0xF319D4", Offset = "0xF319D4", VA = "0xF319D4")]
	[PunRPC]
	public void RemoteLoad()
	{
	}

	[Token(Token = "0x6000920")]
	[Address(RVA = "0xF31A50", Offset = "0xF31A50", VA = "0xF31A50")]
	public void ResetMultiplayerGameKey()
	{
	}

	[Token(Token = "0x6000921")]
	[Address(RVA = "0xF31BC4", Offset = "0xF31BC4", VA = "0xF31BC4")]
	public void Quit()
	{
	}

	[Token(Token = "0x6000922")]
	[Address(RVA = "0xF31CB4", Offset = "0xF31CB4", VA = "0xF31CB4")]
	public MultiplayerLauncher()
	{
	}
}
[Token(Token = "0x200015D")]
public class MultiplayerVoice : MonoBehaviourPunCallbacks
{
	[Token(Token = "0x200015E")]
	[CompilerGenerated]
	private sealed class <RestartMic>d__14 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40007F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40007F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40007F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MultiplayerVoice <>4__this;

		[Token(Token = "0x17000143")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000950")]
			[Address(RVA = "0xF32CAC", Offset = "0xF32CAC", VA = "0xF32CAC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000144")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000952")]
			[Address(RVA = "0xF32CF4", Offset = "0xF32CF4", VA = "0xF32CF4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600094D")]
		[Address(RVA = "0xF32AA4", Offset = "0xF32AA4", VA = "0xF32AA4")]
		[DebuggerHidden]
		public <RestartMic>d__14(int <>1__state)
		{
		}

		[Token(Token = "0x600094E")]
		[Address(RVA = "0xF32AD4", Offset = "0xF32AD4", VA = "0xF32AD4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600094F")]
		[Address(RVA = "0xF32AD8", Offset = "0xF32AD8", VA = "0xF32AD8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000951")]
		[Address(RVA = "0xF32CB4", Offset = "0xF32CB4", VA = "0xF32CB4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40007ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Recorder recorder;

	[Token(Token = "0x40007EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Speaker speaker;

	[Token(Token = "0x17000142")]
	[HideInInspector]
	public static MultiplayerVoice instance
	{
		[Token(Token = "0x6000941")]
		[Address(RVA = "0xF32448", Offset = "0xF32448", VA = "0xF32448")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000942")]
		[Address(RVA = "0xF32490", Offset = "0xF32490", VA = "0xF32490")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x6000943")]
	[Address(RVA = "0xF324DC", Offset = "0xF324DC", VA = "0xF324DC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000944")]
	[Address(RVA = "0xF32810", Offset = "0xF32810", VA = "0xF32810")]
	private new void OnEnable()
	{
	}

	[Token(Token = "0x6000945")]
	[Address(RVA = "0xF3289C", Offset = "0xF3289C", VA = "0xF3289C")]
	private new void OnDisable()
	{
	}

	[Token(Token = "0x6000946")]
	[Address(RVA = "0xF32928", Offset = "0xF32928", VA = "0xF32928")]
	public void OnDestroy()
	{
	}

	[Token(Token = "0x6000947")]
	[Address(RVA = "0xF325E4", Offset = "0xF325E4", VA = "0xF325E4")]
	public void UpdateMicrophone()
	{
	}

	[Token(Token = "0x6000948")]
	[Address(RVA = "0xF32984", Offset = "0xF32984", VA = "0xF32984")]
	private void OnApplicationFocus(bool hasFocus)
	{
	}

	[Token(Token = "0x6000949")]
	[Address(RVA = "0xF3271C", Offset = "0xF3271C", VA = "0xF3271C")]
	public void UpdateVolumeLevels()
	{
	}

	[Token(Token = "0x600094A")]
	[Address(RVA = "0xF327E0", Offset = "0xF327E0", VA = "0xF327E0")]
	public void UpdateMicType()
	{
	}

	[Token(Token = "0x600094B")]
	[Address(RVA = "0xF32A3C", Offset = "0xF32A3C", VA = "0xF32A3C")]
	[IteratorStateMachine(typeof(<RestartMic>d__14))]
	private IEnumerator RestartMic()
	{
		return null;
	}

	[Token(Token = "0x600094C")]
	[Address(RVA = "0xF32ACC", Offset = "0xF32ACC", VA = "0xF32ACC")]
	public MultiplayerVoice()
	{
	}
}
[Token(Token = "0x200015F")]
public class Multiswitch : MonoBehaviour, ISwitchable
{
	[Token(Token = "0x2000160")]
	public enum OnCondition
	{
		[Token(Token = "0x40007FC")]
		greaterThanOrEqual,
		[Token(Token = "0x40007FD")]
		lessThan
	}

	[Token(Token = "0x40007F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OnCondition onCondition;

	[Token(Token = "0x40007F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int switchesToActivate;

	[Token(Token = "0x40007F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SwitchableContainer[] switchOn;

	[Token(Token = "0x40007F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Space(10f)]
	public bool activateStartState;

	[Token(Token = "0x40007F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	[Space(10f)]
	public bool debug;

	[Token(Token = "0x40007F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private int switchesActivated;

	[Token(Token = "0x40007F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool switchedOn;

	[Token(Token = "0x40007FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	private bool initialized;

	[Token(Token = "0x6000953")]
	[Address(RVA = "0xF32CFC", Offset = "0xF32CFC", VA = "0xF32CFC")]
	public void Awake()
	{
	}

	[Token(Token = "0x6000954")]
	[Address(RVA = "0xF32EE4", Offset = "0xF32EE4", VA = "0xF32EE4")]
	public void Update()
	{
	}

	[Token(Token = "0x6000955")]
	[Address(RVA = "0xF32EE8", Offset = "0xF32EE8", VA = "0xF32EE8", Slot = "4")]
	public void Reset(bool fastSwitch = false)
	{
	}

	[Token(Token = "0x6000956")]
	[Address(RVA = "0xF32F34", Offset = "0xF32F34", VA = "0xF32F34", Slot = "5")]
	public void Toggle(bool fastSwitch = false)
	{
	}

	[Token(Token = "0x6000957")]
	[Address(RVA = "0xF32EF8", Offset = "0xF32EF8", VA = "0xF32EF8", Slot = "6")]
	public void Switch(bool newActiveState, bool fastSwitch = false)
	{
	}

	[Token(Token = "0x6000958")]
	[Address(RVA = "0xF32F4C", Offset = "0xF32F4C", VA = "0xF32F4C", Slot = "7")]
	public void SwitchOn(bool fastSwitch = false)
	{
	}

	[Token(Token = "0x6000959")]
	[Address(RVA = "0xF32F60", Offset = "0xF32F60", VA = "0xF32F60", Slot = "8")]
	public void SwitchOff(bool fastSwitch = false)
	{
	}

	[Token(Token = "0x600095A")]
	[Address(RVA = "0xF33280", Offset = "0xF33280", VA = "0xF33280", Slot = "9")]
	public bool GetSwitchState()
	{
		return default(bool);
	}

	[Token(Token = "0x600095B")]
	[Address(RVA = "0xF332B4", Offset = "0xF332B4", VA = "0xF332B4", Slot = "10")]
	public Hole GetHole()
	{
		return null;
	}

	[Token(Token = "0x600095C")]
	[Address(RVA = "0xF32F84", Offset = "0xF32F84", VA = "0xF32F84")]
	private void CheckAndUpdateSwitchState(bool fastSwitch = false)
	{
	}

	[Token(Token = "0x600095D")]
	[Address(RVA = "0xF332BC", Offset = "0xF332BC", VA = "0xF332BC")]
	public Multiswitch()
	{
	}
}
[Token(Token = "0x2000161")]
public class MusicTrigger : CompoundTrigger
{
	[Token(Token = "0x40007FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Music insideMusic;

	[Token(Token = "0x40007FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Music outsideMusic;

	[Token(Token = "0x4000800")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AudioFadeOnSceneChange[] enableWhileInside;

	[Token(Token = "0x4000801")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AudioFadeOnSceneChange[] disableWhileInside;

	[Token(Token = "0x600095F")]
	[Address(RVA = "0xF332EC", Offset = "0xF332EC", VA = "0xF332EC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000960")]
	[Address(RVA = "0xF33414", Offset = "0xF33414", VA = "0xF33414")]
	private void Start()
	{
	}

	[Token(Token = "0x6000961")]
	[Address(RVA = "0xF33438", Offset = "0xF33438", VA = "0xF33438", Slot = "4")]
	protected override void OnCompoundTriggerEnter()
	{
	}

	[Token(Token = "0x6000962")]
	[Address(RVA = "0xF335A8", Offset = "0xF335A8", VA = "0xF335A8", Slot = "5")]
	protected override void OnCompoundTriggerExit()
	{
	}

	[Token(Token = "0x6000963")]
	[Address(RVA = "0xF33718", Offset = "0xF33718", VA = "0xF33718")]
	public MusicTrigger()
	{
	}
}
[Token(Token = "0x2000162")]
public class MutePlayer : MonoBehaviour
{
	[Token(Token = "0x4000802")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioSource playerAudioSource;

	[Token(Token = "0x4000803")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string _userId;

	[Token(Token = "0x4000804")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject muted;

	[Token(Token = "0x4000805")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject unmuted;

	[Token(Token = "0x4000806")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Collider collider;

	[Token(Token = "0x4000807")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool _isMuted;

	[Token(Token = "0x17000145")]
	public string muteKey
	{
		[Token(Token = "0x6000964")]
		[Address(RVA = "0xF33720", Offset = "0xF33720", VA = "0xF33720")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000146")]
	public string userId
	{
		[Token(Token = "0x6000965")]
		[Address(RVA = "0xF337A4", Offset = "0xF337A4", VA = "0xF337A4")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000966")]
		[Address(RVA = "0xF337AC", Offset = "0xF337AC", VA = "0xF337AC")]
		set
		{
		}
	}

	[Token(Token = "0x6000967")]
	[Address(RVA = "0xF33A78", Offset = "0xF33A78", VA = "0xF33A78")]
	private void Start()
	{
	}

	[Token(Token = "0x6000968")]
	[Address(RVA = "0xF33AB8", Offset = "0xF33AB8", VA = "0xF33AB8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000969")]
	[Address(RVA = "0xF33B9C", Offset = "0xF33B9C", VA = "0xF33B9C")]
	public void ToggleMute()
	{
	}

	[Token(Token = "0x600096A")]
	[Address(RVA = "0xF33D24", Offset = "0xF33D24", VA = "0xF33D24")]
	public void Clear()
	{
	}

	[Token(Token = "0x600096B")]
	[Address(RVA = "0xF337B0", Offset = "0xF337B0", VA = "0xF337B0")]
	private void SetFromRoomProperties(string userId)
	{
	}

	[Token(Token = "0x600096C")]
	[Address(RVA = "0xF33D9C", Offset = "0xF33D9C", VA = "0xF33D9C")]
	public MutePlayer()
	{
	}
}
[Token(Token = "0x2000163")]
public class NavigationSign : MonoBehaviour
{
	[Token(Token = "0x600096D")]
	[Address(RVA = "0xF33DA4", Offset = "0xF33DA4", VA = "0xF33DA4")]
	public void OnDrivingRangeClicked()
	{
	}

	[Token(Token = "0x600096E")]
	[Address(RVA = "0xF33F90", Offset = "0xF33F90", VA = "0xF33F90")]
	public void OnPracticeGreenClicked()
	{
	}

	[Token(Token = "0x600096F")]
	[Address(RVA = "0xF34134", Offset = "0xF34134", VA = "0xF34134")]
	public NavigationSign()
	{
	}
}
[Token(Token = "0x2000164")]
public class NearestAvatarLight : MonoBehaviour
{
	[Token(Token = "0x4000808")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("Nearest Avatar Light fades on/off based on the position", order = 1)]
	[Space(-10f, order = 2)]
	[Header("of the avatar so you have no more than 2 lights on at a time.", order = 3)]
	[Space(10f, order = 4)]
	private NearestAvatarLight thisLight;

	[Token(Token = "0x4000809")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static NearestAvatarLight closestLight;

	[Token(Token = "0x400080A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static float closestLightDistance;

	[Token(Token = "0x400080B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static NearestAvatarLight fadeDownLight;

	[Token(Token = "0x400080C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static NearestAvatarLight previousClosestLight;

	[Token(Token = "0x400080D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static bool dirty;

	[Token(Token = "0x400080E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Light lightObj;

	[Token(Token = "0x400080F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float distance;

	[Token(Token = "0x4000810")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private int order;

	[Token(Token = "0x4000811")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float fullIntensity;

	[Token(Token = "0x4000812")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Vector3 cachedPosition;

	[Token(Token = "0x4000813")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Transform avatarTransform;

	[Token(Token = "0x4000814")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private static Vector3 avatarPosition;

	[Token(Token = "0x6000970")]
	[Address(RVA = "0xF3413C", Offset = "0xF3413C", VA = "0xF3413C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000971")]
	[Address(RVA = "0xF3425C", Offset = "0xF3425C", VA = "0xF3425C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000972")]
	[Address(RVA = "0xF343DC", Offset = "0xF343DC", VA = "0xF343DC")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000973")]
	[Address(RVA = "0xF34560", Offset = "0xF34560", VA = "0xF34560")]
	private void increaseLight()
	{
	}

	[Token(Token = "0x6000974")]
	[Address(RVA = "0xF34658", Offset = "0xF34658", VA = "0xF34658")]
	private void decreaseLight()
	{
	}

	[Token(Token = "0x6000975")]
	[Address(RVA = "0xF34784", Offset = "0xF34784", VA = "0xF34784")]
	public NearestAvatarLight()
	{
	}
}
[Token(Token = "0x2000165")]
public class NearestBallLight : MonoBehaviour
{
	[Token(Token = "0x4000815")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("of the ball so you have no more than 2 lights on at a time.", order = 3)]
	[Space(-10f, order = 2)]
	[Header("Nearest Ball Light fades on/off based on the position", order = 1)]
	[Space(10f, order = 4)]
	private NearestBallLight thisLight;

	[Token(Token = "0x4000816")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static NearestBallLight closestLight;

	[Token(Token = "0x4000817")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static float closestLightDistance;

	[Token(Token = "0x4000818")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static NearestBallLight fadeDownLight;

	[Token(Token = "0x4000819")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static NearestBallLight previousClosestLight;

	[Token(Token = "0x400081A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static bool dirty;

	[Token(Token = "0x400081B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Light lightObj;

	[Token(Token = "0x400081C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float distance;

	[Token(Token = "0x400081D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private int order;

	[Token(Token = "0x400081E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float fullIntensity;

	[Token(Token = "0x400081F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Vector3 cachedPosition;

	[Token(Token = "0x4000820")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Transform ballTransform;

	[Token(Token = "0x4000821")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private static Vector3 ballPosition;

	[Token(Token = "0x6000977")]
	[Address(RVA = "0xF347D8", Offset = "0xF347D8", VA = "0xF347D8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000978")]
	[Address(RVA = "0xF34924", Offset = "0xF34924", VA = "0xF34924")]
	private void Update()
	{
	}

	[Token(Token = "0x6000979")]
	[Address(RVA = "0xF34AA4", Offset = "0xF34AA4", VA = "0xF34AA4")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600097A")]
	[Address(RVA = "0xF34C28", Offset = "0xF34C28", VA = "0xF34C28")]
	private void increaseLight()
	{
	}

	[Token(Token = "0x600097B")]
	[Address(RVA = "0xF34D20", Offset = "0xF34D20", VA = "0xF34D20")]
	private void decreaseLight()
	{
	}

	[Token(Token = "0x600097C")]
	[Address(RVA = "0xF34E4C", Offset = "0xF34E4C", VA = "0xF34E4C")]
	public NearestBallLight()
	{
	}
}
[Token(Token = "0x2000166")]
public class NearestLight : MonoBehaviour
{
	[Token(Token = "0x2000167")]
	public enum lightTarget
	{
		[Token(Token = "0x4000833")]
		Ball,
		[Token(Token = "0x4000834")]
		Avatar
	}

	[Token(Token = "0x4000822")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private NearestLight thisLight;

	[Token(Token = "0x4000823")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static NearestLight closestLight;

	[Token(Token = "0x4000824")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static float closestLightDistance;

	[Token(Token = "0x4000825")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static NearestLight fadeDownLight;

	[Token(Token = "0x4000826")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static NearestLight previousClosestLight;

	[Token(Token = "0x4000827")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static bool dirty;

	[Token(Token = "0x4000828")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Light lightObj;

	[Token(Token = "0x4000829")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float distance;

	[Token(Token = "0x400082A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private int order;

	[Token(Token = "0x400082B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float fullIntensity;

	[Token(Token = "0x400082C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Vector3 cachedPosition;

	[Token(Token = "0x400082D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Transform ballTransform;

	[Token(Token = "0x400082E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private static Vector3 ballPosition;

	[Token(Token = "0x400082F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Transform avatarTransform;

	[Token(Token = "0x4000830")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static Vector3 avatarPosition;

	[Token(Token = "0x4000831")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[Space(10f, order = 4)]
	[Header("of either the avatar or ball so you have no more than 2 lights on at a time.", order = 3)]
	[Space(-10f, order = 2)]
	[Header("Nearest Ball or Avatar Light fades on/off based on the position", order = 1)]
	[Tooltip("Toggle if this Light uses the nearest Ball position (default) or nearest Avatar position. ")]
	public lightTarget LightTarget;

	[Token(Token = "0x600097E")]
	[Address(RVA = "0xF34EA0", Offset = "0xF34EA0", VA = "0xF34EA0")]
	private void Start()
	{
	}

	[Token(Token = "0x600097F")]
	[Address(RVA = "0xF35030", Offset = "0xF35030", VA = "0xF35030")]
	private void Update()
	{
	}

	[Token(Token = "0x6000980")]
	[Address(RVA = "0xF351E0", Offset = "0xF351E0", VA = "0xF351E0")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000981")]
	[Address(RVA = "0xF353B0", Offset = "0xF353B0", VA = "0xF353B0")]
	private void increaseLight()
	{
	}

	[Token(Token = "0x6000982")]
	[Address(RVA = "0xF354A8", Offset = "0xF354A8", VA = "0xF354A8")]
	private void decreaseLight()
	{
	}

	[Token(Token = "0x6000983")]
	[Address(RVA = "0xF355D4", Offset = "0xF355D4", VA = "0xF355D4")]
	public NearestLight()
	{
	}
}
[Token(Token = "0x2000168")]
[DefaultExecutionOrder(-11)]
public class NetworkTime : MonoBehaviour
{
	[Token(Token = "0x4000835")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static double Time;

	[Token(Token = "0x4000836")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static double fixedTime;

	[Token(Token = "0x4000837")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static float deltaTime;

	[Token(Token = "0x4000838")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public static float deltaFixedTime;

	[Token(Token = "0x4000839")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private double fixedUpdateTime;

	[Token(Token = "0x400083A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private double updateTime;

	[Token(Token = "0x400083B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private double previousTime;

	[Token(Token = "0x400083C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private double previousFixedTime;

	[Token(Token = "0x6000985")]
	[Address(RVA = "0xF35628", Offset = "0xF35628", VA = "0xF35628")]
	private void Update()
	{
	}

	[Token(Token = "0x6000986")]
	[Address(RVA = "0xF35748", Offset = "0xF35748", VA = "0xF35748")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000987")]
	[Address(RVA = "0xF35868", Offset = "0xF35868", VA = "0xF35868")]
	public NetworkTime()
	{
	}
}
[Token(Token = "0x2000169")]
public class ObjectLibrary<T> where T : UnityEngine.Object
{
	[Token(Token = "0x400083D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Dictionary<string, T> library;

	[Token(Token = "0x6000988")]
	public ObjectLibrary()
	{
	}

	[Token(Token = "0x6000989")]
	public void AddObject(string key, T obj)
	{
	}

	[Token(Token = "0x600098A")]
	public T GetObject(string key)
	{
		return null;
	}
}
[Token(Token = "0x200016A")]
public class OculusDestination : MonoBehaviourPunCallbacks
{
	[Token(Token = "0x400083E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string destinationApiName;

	[Token(Token = "0x400083F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static OculusDestination Instance;

	[Token(Token = "0x4000840")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public bool Joinable;

	[Token(Token = "0x4000841")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static string oculusLobbySessionID;

	[Token(Token = "0x4000842")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float loadSceneDelay;

	[Token(Token = "0x4000843")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static bool isInit;

	[Token(Token = "0x4000844")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static string roomToAutoJoin;

	[Token(Token = "0x4000845")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static string destinationToAutoJoin;

	[Token(Token = "0x4000846")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public static bool AutoJoin;

	[Token(Token = "0x4000847")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool PresenceIsSet;

	[Token(Token = "0x600098B")]
	[Address(RVA = "0xF35870", Offset = "0xF35870", VA = "0xF35870")]
	public OculusDestination()
	{
	}
}
[Token(Token = "0x200016B")]
public class OculusDestinationMap : MonoBehaviour
{
	[Token(Token = "0x4000848")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public DestinationMap[] DestinationMap;

	[Token(Token = "0x4000849")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Dictionary<string, CourseInfoAsset> Map;

	[Token(Token = "0x600098C")]
	[Address(RVA = "0xF35878", Offset = "0xF35878", VA = "0xF35878")]
	private void Awake()
	{
	}

	[Token(Token = "0x600098D")]
	[Address(RVA = "0xF35980", Offset = "0xF35980", VA = "0xF35980")]
	public OculusDestinationMap()
	{
	}
}
[Serializable]
[Token(Token = "0x200016C")]
public struct DestinationMap
{
	[Token(Token = "0x400084A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public string Name;

	[Token(Token = "0x400084B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public CourseInfoAsset Course;
}
[Token(Token = "0x200016D")]
public class OculusState : MonoBehaviour
{
	[Token(Token = "0x17000147")]
	public static bool Quest2
	{
		[Token(Token = "0x600098E")]
		[Address(RVA = "0xF35988", Offset = "0xF35988", VA = "0xF35988")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600098F")]
		[Address(RVA = "0xF359D0", Offset = "0xF359D0", VA = "0xF359D0")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x6000990")]
	[Address(RVA = "0xF35A1C", Offset = "0xF35A1C", VA = "0xF35A1C")]
	public OculusState()
	{
	}
}
[Token(Token = "0x200016E")]
public class OrientToCamera : MonoBehaviour
{
	[Token(Token = "0x400084D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Transform playerTransform;

	[Token(Token = "0x400084E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3 upVector;

	[Token(Token = "0x6000991")]
	[Address(RVA = "0xF35A24", Offset = "0xF35A24", VA = "0xF35A24")]
	private void Start()
	{
	}

	[Token(Token = "0x6000992")]
	[Address(RVA = "0xF35A8C", Offset = "0xF35A8C", VA = "0xF35A8C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000993")]
	[Address(RVA = "0xF35ABC", Offset = "0xF35ABC", VA = "0xF35ABC")]
	public OrientToCamera()
	{
	}
}
[Token(Token = "0x200016F")]
public class ParticleDynamicLODMaster : MonoBehaviour
{
	[Token(Token = "0x400084F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Tooltip("Tag Name of ParticleSystems to be calculated.")]
	public string tagName;

	[Token(Token = "0x4000850")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string particleDescription;

	[Token(Token = "0x4000851")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Space(20f)]
	public float quest1EmissionMultiplier;

	[Token(Token = "0x4000852")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float quest2EmissionMultiplier;

	[Token(Token = "0x4000853")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float mobileEmissionMultiplier;

	[Token(Token = "0x4000854")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float pcvrEmissionMultiplier;

	[Token(Token = "0x4000855")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[Tooltip("Number of ParticleSystems calculated each Update.  Use -1 to only multiply emission rate, and disable distance-based adjustments.")]
	[Space(20f)]
	public int batchSize;

	[Token(Token = "0x4000856")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[Tooltip("Min Distance = Default ParticleSystem Values.  Max Distance = Default * Mult Values.")]
	public Vector2 minMaxDist;

	[Token(Token = "0x4000857")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[Tooltip("Minimum Particle Rate.")]
	public float minCount;

	[Token(Token = "0x4000858")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Tooltip("Default Size Multiplied by this value at Max Distance")]
	public float sizeDistMult;

	[Token(Token = "0x4000859")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[Tooltip("Default Lifetime Multiplied by this value at Max Distance")]
	public float lifeDistMult;

	[Token(Token = "0x400085A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[Tooltip("Default Emitter Radius Multiplied by this value at Max Distance")]
	public float radiusDistMult;

	[Token(Token = "0x400085B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[Space(20f)]
	public GameObject[] particleSystemObjs;

	[Token(Token = "0x400085C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private List<ParticleSystem> particleSystems;

	[Token(Token = "0x400085D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private List<float> emissionRates;

	[Token(Token = "0x400085E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private List<ParticleSystem.MinMaxCurve> startSize;

	[Token(Token = "0x400085F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private List<ParticleSystem.MinMaxCurve> lifetime;

	[Token(Token = "0x4000860")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private List<float> shapeRadius;

	[Token(Token = "0x4000861")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Transform playerTransform;

	[Token(Token = "0x4000862")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private int staggerIndex;

	[Token(Token = "0x4000863")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private int maxSystems;

	[Token(Token = "0x4000864")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public float quest1DistanceMultiplier;

	[Token(Token = "0x4000865")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public float quest2DistanceMultiplier;

	[Token(Token = "0x4000866")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public float mobileDistanceMultiplier;

	[Token(Token = "0x4000867")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public float pcvrDistanceMultiplier;

	[Token(Token = "0x4000868")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private float distanceMultiplier;

	[Token(Token = "0x4000869")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private float emisMultiplier;

	[Token(Token = "0x6000994")]
	[Address(RVA = "0xF35B1C", Offset = "0xF35B1C", VA = "0xF35B1C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000995")]
	[Address(RVA = "0xF36200", Offset = "0xF36200", VA = "0xF36200")]
	private void Update()
	{
	}

	[Token(Token = "0x6000996")]
	[Address(RVA = "0xF367E0", Offset = "0xF367E0", VA = "0xF367E0")]
	public ParticleDynamicLODMaster()
	{
	}
}
[Token(Token = "0x2000170")]
public class PauseMenu : MonoBehaviour
{
	[Token(Token = "0x2000171")]
	[CompilerGenerated]
	private sealed class <FadeCanvas>d__63 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000898")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000899")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400089A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PauseMenu <>4__this;

		[Token(Token = "0x400089B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float targetAlpha;

		[Token(Token = "0x400089C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <startAlpha>5__2;

		[Token(Token = "0x400089D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <timer>5__3;

		[Token(Token = "0x17000148")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60009C0")]
			[Address(RVA = "0xF3ADF8", Offset = "0xF3ADF8", VA = "0xF3ADF8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000149")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60009C2")]
			[Address(RVA = "0xF3AE40", Offset = "0xF3AE40", VA = "0xF3AE40", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60009BD")]
		[Address(RVA = "0xF3A738", Offset = "0xF3A738", VA = "0xF3A738")]
		[DebuggerHidden]
		public <FadeCanvas>d__63(int <>1__state)
		{
		}

		[Token(Token = "0x60009BE")]
		[Address(RVA = "0xF3ABFC", Offset = "0xF3ABFC", VA = "0xF3ABFC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60009BF")]
		[Address(RVA = "0xF3AC00", Offset = "0xF3AC00", VA = "0xF3AC00", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60009C1")]
		[Address(RVA = "0xF3AE00", Offset = "0xF3AE00", VA = "0xF3AE00", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400086A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static PauseMenu instance;

	[Token(Token = "0x400086B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject masterObject;

	[Token(Token = "0x400086C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject settingsObject;

	[Token(Token = "0x400086D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject instructions;

	[Token(Token = "0x400086E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Header("Header")]
	public GameObject settingsButton;

	[Token(Token = "0x400086F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TextMeshProUGUI courseNameText;

	[Token(Token = "0x4000870")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TextMeshProUGUI gameModeText;

	[Token(Token = "0x4000871")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Header("Scorecard")]
	public GameObject scorecardObject;

	[Token(Token = "0x4000872")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public TextMeshProUGUI totalParText;

	[Token(Token = "0x4000873")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public TextMeshProUGUI totalStrokesText;

	[Token(Token = "0x4000874")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public TextMeshProUGUI totalToParText;

	[Token(Token = "0x4000875")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject lostBallsText;

	[Token(Token = "0x4000876")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject bottomSpacer;

	[Token(Token = "0x4000877")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject bottomSpacerWinner;

	[Token(Token = "0x4000878")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public TextMeshProUGUI[] playerNameText;

	[Token(Token = "0x4000879")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public MutePlayer[] mutePlayerToggle;

	[Token(Token = "0x400087A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public TextMeshProUGUI[] playerTotalText;

	[Token(Token = "0x400087B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public GameObject[] multiplayerOnly;

	[Token(Token = "0x400087C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public GameObject[] singleplayerOnly;

	[Token(Token = "0x400087D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public GameObject totalLockup;

	[Token(Token = "0x400087E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public GameObject inviteButton;

	[Token(Token = "0x400087F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Image[] winnerIcon;

	[Token(Token = "0x4000880")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[Header("Footer")]
	public SavableToggle TutorialToggle;

	[Token(Token = "0x4000881")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public SavableToggle MicrophoneToggle;

	[Token(Token = "0x4000882")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public GameObject cluesButton;

	[Token(Token = "0x4000883")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public TextMeshProUGUI cluesText;

	[Token(Token = "0x4000884")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public GameObject resumeGame;

	[Token(Token = "0x4000885")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public GameObject restartHoleButton;

	[Token(Token = "0x4000886")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[Header("Main Menu")]
	public GameObject[] DisableInMainMenu;

	[Token(Token = "0x4000887")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public LayoutElement ButtonLayout;

	[Token(Token = "0x4000888")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private bool settingsOpen;

	[Token(Token = "0x4000889")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	[Header("AR")]
	public CanvasGroup putterCanvas;

	[Token(Token = "0x400088A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public CanvasGroup scorecardCanvas;

	[Token(Token = "0x400088B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	[Header("Match Details")]
	public GameObject matchDetailsSection;

	[Token(Token = "0x400088C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public TextMeshProUGUI startTimeField;

	[Token(Token = "0x400088D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public TextMeshProUGUI currentTimeField;

	[Token(Token = "0x400088E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public SavableToggle matchDetailsToggle;

	[Token(Token = "0x400088F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private bool fading;

	[Token(Token = "0x4000890")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
	private float fadeTime;

	[Token(Token = "0x4000891")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private CanvasGroup pauseCanvasGroup;

	[Token(Token = "0x4000892")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private CanvasGroup trackingCanvas;

	[Token(Token = "0x4000893")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private int timeStampFrameInterval;

	[Token(Token = "0x4000894")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
	private int currentFrameInterval;

	[Token(Token = "0x4000895")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public bool paused;

	[Token(Token = "0x4000896")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x159")]
	[HideInInspector]
	public bool CalibrationViewActive;

	[Token(Token = "0x4000897")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15A")]
	[HideInInspector]
	public bool CalibrationInProgress;

	[Token(Token = "0x6000997")]
	[Address(RVA = "0xF36984", Offset = "0xF36984", VA = "0xF36984")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000998")]
	[Address(RVA = "0xF36A68", Offset = "0xF36A68", VA = "0xF36A68")]
	private void Start()
	{
	}

	[Token(Token = "0x6000999")]
	[Address(RVA = "0xF376DC", Offset = "0xF376DC", VA = "0xF376DC")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x600099A")]
	[Address(RVA = "0xF3788C", Offset = "0xF3788C", VA = "0xF3788C")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x600099B")]
	[Address(RVA = "0xF37A3C", Offset = "0xF37A3C", VA = "0xF37A3C")]
	public void Update()
	{
	}

	[Token(Token = "0x600099C")]
	[Address(RVA = "0xF37B40", Offset = "0xF37B40", VA = "0xF37B40")]
	public void ToggleMatchDetailsSection()
	{
	}

	[Token(Token = "0x600099D")]
	[Address(RVA = "0xF37C9C", Offset = "0xF37C9C", VA = "0xF37C9C")]
	public void GodModeOff()
	{
	}

	[Token(Token = "0x600099E")]
	[Address(RVA = "0xF37CE8", Offset = "0xF37CE8", VA = "0xF37CE8")]
	public void TurnOff()
	{
	}

	[Token(Token = "0x600099F")]
	[Address(RVA = "0xF3752C", Offset = "0xF3752C", VA = "0xF3752C")]
	public void TurnOff(bool forcedOff)
	{
	}

	[Token(Token = "0x60009A0")]
	[Address(RVA = "0xF37D68", Offset = "0xF37D68", VA = "0xF37D68")]
	public void TurnOn()
	{
	}

	[Token(Token = "0x60009A1")]
	[Address(RVA = "0xF39C50", Offset = "0xF39C50", VA = "0xF39C50")]
	public void ToggleSettings()
	{
	}

	[Token(Token = "0x60009A2")]
	[Address(RVA = "0xF39D40", Offset = "0xF39D40", VA = "0xF39D40")]
	public void TurnOnSettings()
	{
	}

	[Token(Token = "0x60009A3")]
	[Address(RVA = "0xF39C60", Offset = "0xF39C60", VA = "0xF39C60")]
	public void TurnOffSettings()
	{
	}

	[Token(Token = "0x60009A4")]
	[Address(RVA = "0xF2D548", Offset = "0xF2D548", VA = "0xF2D548")]
	public void CourseComplete()
	{
	}

	[Token(Token = "0x60009A5")]
	[Address(RVA = "0xF39EB4", Offset = "0xF39EB4", VA = "0xF39EB4")]
	public void TogglePause()
	{
	}

	[Token(Token = "0x60009A6")]
	[Address(RVA = "0xF39F00", Offset = "0xF39F00", VA = "0xF39F00")]
	public void GoToMainMenu()
	{
	}

	[Token(Token = "0x60009A7")]
	[Address(RVA = "0xF3A324", Offset = "0xF3A324", VA = "0xF3A324")]
	public void QuitToMainMenu()
	{
	}

	[Token(Token = "0x60009A8")]
	[Address(RVA = "0xF37CF0", Offset = "0xF37CF0", VA = "0xF37CF0")]
	[IteratorStateMachine(typeof(<FadeCanvas>d__63))]
	private IEnumerator FadeCanvas(float targetAlpha)
	{
		return null;
	}

	[Token(Token = "0x60009A9")]
	[Address(RVA = "0xF38324", Offset = "0xF38324", VA = "0xF38324")]
	public void UpdateScorecard()
	{
	}

	[Token(Token = "0x60009AA")]
	[Address(RVA = "0xF3A768", Offset = "0xF3A768", VA = "0xF3A768")]
	public void ShowFoxhunt()
	{
	}

	[Token(Token = "0x60009AB")]
	[Address(RVA = "0xF381F4", Offset = "0xF381F4", VA = "0xF381F4")]
	public void Settings(bool activate)
	{
	}

	[Token(Token = "0x60009AC")]
	[Address(RVA = "0xF39554", Offset = "0xF39554", VA = "0xF39554")]
	private void UpdateClues()
	{
	}

	[Token(Token = "0x60009AD")]
	[Address(RVA = "0xF393B4", Offset = "0xF393B4", VA = "0xF393B4")]
	private void UpdateToggles()
	{
	}

	[Token(Token = "0x60009AE")]
	[Address(RVA = "0xF3A80C", Offset = "0xF3A80C", VA = "0xF3A80C")]
	public void RestartHole()
	{
	}

	[Token(Token = "0x60009AF")]
	[Address(RVA = "0xF3A89C", Offset = "0xF3A89C", VA = "0xF3A89C")]
	public void UpdateMicrophone()
	{
	}

	[Token(Token = "0x60009B0")]
	[Address(RVA = "0xF3A8E8", Offset = "0xF3A8E8", VA = "0xF3A8E8")]
	public void UpdateMasterAudioLevels()
	{
	}

	[Token(Token = "0x60009B1")]
	[Address(RVA = "0xF3A934", Offset = "0xF3A934", VA = "0xF3A934")]
	public void UpdateLockBallPosition()
	{
	}

	[Token(Token = "0x60009B2")]
	[Address(RVA = "0xF3A980", Offset = "0xF3A980", VA = "0xF3A980")]
	public void UpdateRenderScale()
	{
	}

	[Token(Token = "0x60009B3")]
	[Address(RVA = "0xF3A984", Offset = "0xF3A984", VA = "0xF3A984")]
	public void UpdateSmoothLocomotion()
	{
	}

	[Token(Token = "0x60009B4")]
	[Address(RVA = "0xF3A988", Offset = "0xF3A988", VA = "0xF3A988")]
	public void UpdateBallLocator()
	{
	}

	[Token(Token = "0x60009B5")]
	[Address(RVA = "0xF3AA10", Offset = "0xF3AA10", VA = "0xF3AA10")]
	public void UpdateNametags()
	{
	}

	[Token(Token = "0x60009B6")]
	[Address(RVA = "0xF3AAA0", Offset = "0xF3AAA0", VA = "0xF3AAA0")]
	public void UpdateBallTrail()
	{
	}

	[Token(Token = "0x60009B7")]
	[Address(RVA = "0xF3AAFC", Offset = "0xF3AAFC", VA = "0xF3AAFC")]
	public void UpdateTurnNotifications()
	{
	}

	[Token(Token = "0x60009B8")]
	[Address(RVA = "0xF3AB68", Offset = "0xF3AB68", VA = "0xF3AB68")]
	public void UpdateOpponentScoreNotifications()
	{
	}

	[Token(Token = "0x60009B9")]
	[Address(RVA = "0xF3ABD4", Offset = "0xF3ABD4", VA = "0xF3ABD4")]
	public void UpdateCalibrationMode(bool active)
	{
	}

	[Token(Token = "0x60009BA")]
	[Address(RVA = "0xF37020", Offset = "0xF37020", VA = "0xF37020")]
	private void SetGameModeText(string text)
	{
	}

	[Token(Token = "0x60009BB")]
	[Address(RVA = "0xF3971C", Offset = "0xF3971C", VA = "0xF3971C")]
	public void SetWinnerIcon()
	{
	}

	[Token(Token = "0x60009BC")]
	[Address(RVA = "0xF3ABE0", Offset = "0xF3ABE0", VA = "0xF3ABE0")]
	public PauseMenu()
	{
	}
}
[Token(Token = "0x2000173")]
public class PerfectCullingVolumeSwitcher : MonoBehaviour
{
	[Token(Token = "0x400089F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool debug;

	[Token(Token = "0x40008A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private PerfectCullingVolume small;

	[Token(Token = "0x40008A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private PerfectCullingVolume large;

	[Token(Token = "0x40008A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Collider player;

	[Token(Token = "0x40008A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private BoxCollider boxCollider;

	[Token(Token = "0x1700014A")]
	private bool HasPlayer
	{
		[Token(Token = "0x60009CE")]
		[Address(RVA = "0xF3B11C", Offset = "0xF3B11C", VA = "0xF3B11C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700014B")]
	private bool HasBothVolumes
	{
		[Token(Token = "0x60009CF")]
		[Address(RVA = "0xF3B00C", Offset = "0xF3B00C", VA = "0xF3B00C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700014C")]
	private Vector3 PlayerPosition
	{
		[Token(Token = "0x60009D0")]
		[Address(RVA = "0xF3B3E4", Offset = "0xF3B3E4", VA = "0xF3B3E4")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x60009C5")]
	[Address(RVA = "0xF3AE88", Offset = "0xF3AE88", VA = "0xF3AE88")]
	private void Start()
	{
	}

	[Token(Token = "0x60009C6")]
	[Address(RVA = "0xF3AED4", Offset = "0xF3AED4", VA = "0xF3AED4")]
	private void FindVolumes()
	{
	}

	[Token(Token = "0x60009C7")]
	[Address(RVA = "0xF3AF98", Offset = "0xF3AF98", VA = "0xF3AF98")]
	private void FindPlayer()
	{
	}

	[Token(Token = "0x60009C8")]
	[Address(RVA = "0xF3B1D4", Offset = "0xF3B1D4", VA = "0xF3B1D4")]
	private void CreateCollider()
	{
	}

	[Token(Token = "0x60009C9")]
	[Address(RVA = "0xF3B260", Offset = "0xF3B260", VA = "0xF3B260")]
	private void OnStartup()
	{
	}

	[Token(Token = "0x60009CA")]
	[Address(RVA = "0xF3B5C8", Offset = "0xF3B5C8", VA = "0xF3B5C8")]
	private void OnPlayerEnter()
	{
	}

	[Token(Token = "0x60009CB")]
	[Address(RVA = "0xF3B694", Offset = "0xF3B694", VA = "0xF3B694")]
	private void OnPlayerExit()
	{
	}

	[Token(Token = "0x60009CC")]
	[Address(RVA = "0xF3B760", Offset = "0xF3B760", VA = "0xF3B760")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60009CD")]
	[Address(RVA = "0xF3B7E8", Offset = "0xF3B7E8", VA = "0xF3B7E8")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x60009D1")]
	[Address(RVA = "0xF3B3C0", Offset = "0xF3B3C0", VA = "0xF3B3C0")]
	private void Shutdown()
	{
	}

	[Token(Token = "0x60009D2")]
	[Address(RVA = "0xF3B500", Offset = "0xF3B500", VA = "0xF3B500")]
	public bool TriggerContains(Vector3 p)
	{
		return default(bool);
	}

	[Token(Token = "0x60009D3")]
	[Address(RVA = "0xF3B870", Offset = "0xF3B870", VA = "0xF3B870")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x60009D4")]
	[Address(RVA = "0xF3B9C4", Offset = "0xF3B9C4", VA = "0xF3B9C4")]
	public PerfectCullingVolumeSwitcher()
	{
	}
}
[Token(Token = "0x2000174")]
public static class PhotonExtensions
{
	[Token(Token = "0x60009D5")]
	[Address(RVA = "0xF3B9CC", Offset = "0xF3B9CC", VA = "0xF3B9CC")]
	public static bool SetExpectedUsers(this Photon.Realtime.Room room, string[] newExpectedUsers, [Optional] string[] oldExpectedUsers, [Optional] WebFlags webFlags, bool broadcast = true)
	{
		return default(bool);
	}
}
[Token(Token = "0x2000175")]
public class Pin : CompoundTrigger
{
	[Token(Token = "0x40008A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject lineOffset;

	[Token(Token = "0x40008A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Renderer line;

	[Token(Token = "0x40008A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float transparency;

	[Token(Token = "0x40008A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Color color;

	[Token(Token = "0x40008A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static float closestDistance;

	[Token(Token = "0x40008A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	[HideInInspector]
	public static Pin closestPin;

	[Token(Token = "0x40008AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private bool enabledCached;

	[Token(Token = "0x40008AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5D")]
	public bool isHolePin;

	[Token(Token = "0x60009D6")]
	[Address(RVA = "0xF3BBA8", Offset = "0xF3BBA8", VA = "0xF3BBA8")]
	private void Start()
	{
	}

	[Token(Token = "0x60009D7")]
	[Address(RVA = "0xF3BC40", Offset = "0xF3BC40", VA = "0xF3BC40")]
	private void Update()
	{
	}

	[Token(Token = "0x60009D8")]
	[Address(RVA = "0xF3C284", Offset = "0xF3C284", VA = "0xF3C284")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60009D9")]
	[Address(RVA = "0xF3C2E4", Offset = "0xF3C2E4", VA = "0xF3C2E4")]
	public Pin()
	{
	}
}
[Token(Token = "0x2000176")]
public class PlatformFilter : MonoBehaviour
{
	[Token(Token = "0x40008AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool quest1;

	[Token(Token = "0x40008AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool quest2;

	[Token(Token = "0x40008AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool rift;

	[Token(Token = "0x40008AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	public bool android;

	[Token(Token = "0x40008B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool ios;

	[Token(Token = "0x40008B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	public bool openvr;

	[Token(Token = "0x40008B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
	public bool pico;

	[Token(Token = "0x1700014D")]
	public bool platformActive
	{
		[Token(Token = "0x60009DB")]
		[Address(RVA = "0xF3C344", Offset = "0xF3C344", VA = "0xF3C344")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60009DC")]
		[Address(RVA = "0xF3C34C", Offset = "0xF3C34C", VA = "0xF3C34C")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x60009DD")]
	[Address(RVA = "0xF3C358", Offset = "0xF3C358", VA = "0xF3C358")]
	protected void Start()
	{
	}

	[Token(Token = "0x60009DE")]
	[Address(RVA = "0xF3C590", Offset = "0xF3C590", VA = "0xF3C590")]
	public PlatformFilter()
	{
	}
}
[Token(Token = "0x2000177")]
public class PlatformSpecificMaterial : MonoBehaviour
{
	[Token(Token = "0x40008B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material quest1Material;

	[Token(Token = "0x40008B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material quest2Material;

	[Token(Token = "0x40008B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Material iosMaterial;

	[Token(Token = "0x40008B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Material arcoreMaterial;

	[Token(Token = "0x40008B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Material riftMaterial;

	[Token(Token = "0x40008B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Material openVRMaterial;

	[Token(Token = "0x40008BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Material picoMaterial;

	[Token(Token = "0x40008BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool picoMatchQuest2;

	[Token(Token = "0x60009DF")]
	[Address(RVA = "0xF3C598", Offset = "0xF3C598", VA = "0xF3C598")]
	private void Start()
	{
	}

	[Token(Token = "0x60009E0")]
	[Address(RVA = "0xF3C854", Offset = "0xF3C854", VA = "0xF3C854")]
	public PlatformSpecificMaterial()
	{
	}
}
[Token(Token = "0x2000178")]
public class PlatformSpecificSprite : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000179")]
	public struct InstructionProfile
	{
		[Token(Token = "0x40008E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string ProfileName;

		[Token(Token = "0x40008E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Sprite InstructionSprite;

		[Token(Token = "0x60009E7")]
		[Address(RVA = "0xF3D104", Offset = "0xF3D104", VA = "0xF3D104")]
		public InstructionProfile(string profileName)
		{
		}
	}

	[Token(Token = "0x40008BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("Renderers")]
	[SerializeField]
	private SpriteRenderer _spriteRenderer;

	[Token(Token = "0x40008BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Image _image;

	[Token(Token = "0x40008BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Header("Sprites")]
	[SerializeField]
	private Sprite _instructionIndex;

	[Token(Token = "0x40008BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Sprite _instructionIndex_fr;

	[Token(Token = "0x40008C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Sprite _instructionIndex_sc;

	[Token(Token = "0x40008C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Sprite _instructionIndex_es;

	[Token(Token = "0x40008C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private Sprite _instructionIndex_de;

	[Token(Token = "0x40008C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Sprite _instructionIndex_jp;

	[Token(Token = "0x40008C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private Sprite _instructionIndex_kr;

	[Token(Token = "0x40008C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private Sprite _instructionOculus;

	[Token(Token = "0x40008C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private Sprite _instructionOculus_fr;

	[Token(Token = "0x40008C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private Sprite _instructionOculus_sc;

	[Token(Token = "0x40008C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private Sprite _instructionOculus_es;

	[Token(Token = "0x40008C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private Sprite _instructionOculus_de;

	[Token(Token = "0x40008CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private Sprite _instructionOculus_jp;

	[Token(Token = "0x40008CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private Sprite _instructionOculus_kr;

	[Token(Token = "0x40008CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private Sprite _instructionVive;

	[Token(Token = "0x40008CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private Sprite _instructionVive_fr;

	[Token(Token = "0x40008CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	private Sprite _instructionVive_sc;

	[Token(Token = "0x40008CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	private Sprite _instructionVive_es;

	[Token(Token = "0x40008D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[SerializeField]
	private Sprite _instructionVive_de;

	[Token(Token = "0x40008D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[SerializeField]
	private Sprite _instructionVive_jp;

	[Token(Token = "0x40008D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[SerializeField]
	private Sprite _instructionVive_kr;

	[Token(Token = "0x40008D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[SerializeField]
	private Sprite _instructionWMR;

	[Token(Token = "0x40008D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[SerializeField]
	private Sprite _instructionWMR_fr;

	[Token(Token = "0x40008D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[SerializeField]
	private Sprite _instructionWMR_sc;

	[Token(Token = "0x40008D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[SerializeField]
	private Sprite _instructionWMR_es;

	[Token(Token = "0x40008D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[SerializeField]
	private Sprite _instructionWMR_de;

	[Token(Token = "0x40008D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	[SerializeField]
	private Sprite _instructionWMR_jp;

	[Token(Token = "0x40008D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	[SerializeField]
	private Sprite _instructionWMR_kr;

	[Token(Token = "0x40008DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	[SerializeField]
	private Sprite _instructionPico;

	[Token(Token = "0x40008DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	[SerializeField]
	private Sprite _instructionPico_fr;

	[Token(Token = "0x40008DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	[SerializeField]
	private Sprite _instructionPico_sc;

	[Token(Token = "0x40008DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	[SerializeField]
	private Sprite _instructionPico_es;

	[Token(Token = "0x40008DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	[SerializeField]
	private Sprite _instructionPico_de;

	[Token(Token = "0x40008DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	[SerializeField]
	private Sprite _instructionPico_jp;

	[Token(Token = "0x40008E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	[SerializeField]
	private Sprite _instructionPico_kr;

	[Token(Token = "0x40008E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private string _cacheDeviceName;

	[Token(Token = "0x40008E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private bool _languageSet;

	[Token(Token = "0x60009E1")]
	[Address(RVA = "0xF3C864", Offset = "0xF3C864", VA = "0xF3C864")]
	private void Start()
	{
	}

	[Token(Token = "0x60009E2")]
	[Address(RVA = "0xF3C96C", Offset = "0xF3C96C", VA = "0xF3C96C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60009E3")]
	[Address(RVA = "0xF3CA74", Offset = "0xF3CA74", VA = "0xF3CA74")]
	private void Update()
	{
	}

	[Token(Token = "0x60009E4")]
	[Address(RVA = "0xF3CA78", Offset = "0xF3CA78", VA = "0xF3CA78")]
	private void UpdateSprite()
	{
	}

	[Token(Token = "0x60009E5")]
	[Address(RVA = "0xF3D0F4", Offset = "0xF3D0F4", VA = "0xF3D0F4")]
	public void ChangeLanguage()
	{
	}

	[Token(Token = "0x60009E6")]
	[Address(RVA = "0xF3D0FC", Offset = "0xF3D0FC", VA = "0xF3D0FC")]
	public PlatformSpecificSprite()
	{
	}
}
[Token(Token = "0x200017A")]
public class PlayerName : MonoBehaviour
{
	[Token(Token = "0x40008E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMeshProUGUI playerNameText;

	[Token(Token = "0x40008E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TMP_InputField playerNameInput;

	[Token(Token = "0x40008E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string newPlayerName;

	[Token(Token = "0x40008E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TextMeshProUGUI playerNameButton;

	[Token(Token = "0x40008E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public PlayerProfileController playerProfileController;

	[Token(Token = "0x40008EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	public bool NewProfile;

	[Token(Token = "0x60009E8")]
	[Address(RVA = "0xF3D10C", Offset = "0xF3D10C", VA = "0xF3D10C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60009E9")]
	[Address(RVA = "0xF3D238", Offset = "0xF3D238", VA = "0xF3D238")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60009EA")]
	[Address(RVA = "0xF3D248", Offset = "0xF3D248", VA = "0xF3D248")]
	private void Update()
	{
	}

	[Token(Token = "0x60009EB")]
	[Address(RVA = "0xF3D2CC", Offset = "0xF3D2CC", VA = "0xF3D2CC")]
	public void SubmitPlayerName()
	{
	}

	[Token(Token = "0x60009EC")]
	[Address(RVA = "0xF3D240", Offset = "0xF3D240", VA = "0xF3D240")]
	public void CancelEntry()
	{
	}

	[Token(Token = "0x60009ED")]
	[Address(RVA = "0xF3D43C", Offset = "0xF3D43C", VA = "0xF3D43C")]
	public void UpdateTextAR()
	{
	}

	[Token(Token = "0x60009EE")]
	[Address(RVA = "0xF3D484", Offset = "0xF3D484", VA = "0xF3D484")]
	public PlayerName()
	{
	}
}
[Token(Token = "0x200017B")]
public class PlayerNameButton : MonoBehaviour, IProfileActivatedHandler, IProfileHandler, IProfilesChangedHandler
{
	[Token(Token = "0x40008EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMeshProUGUI playerNameButton;

	[Token(Token = "0x40008EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public RawImage playerImage;

	[Token(Token = "0x40008ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Texture2D snapshot;

	[Token(Token = "0x60009EF")]
	[Address(RVA = "0xF3D4D4", Offset = "0xF3D4D4", VA = "0xF3D4D4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60009F0")]
	[Address(RVA = "0xF3D640", Offset = "0xF3D640", VA = "0xF3D640")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60009F1")]
	[Address(RVA = "0xF3D714", Offset = "0xF3D714", VA = "0xF3D714", Slot = "4")]
	public void OnProfileActivated(ProfileData profile)
	{
	}

	[Token(Token = "0x60009F2")]
	[Address(RVA = "0xF3D8F0", Offset = "0xF3D8F0", VA = "0xF3D8F0", Slot = "5")]
	public void OnProfilesChanged(ProfileData[] profiles)
	{
	}

	[Token(Token = "0x60009F3")]
	[Address(RVA = "0xF3D72C", Offset = "0xF3D72C", VA = "0xF3D72C")]
	public void UpdateName()
	{
	}

	[Token(Token = "0x60009F4")]
	[Address(RVA = "0xF3D7BC", Offset = "0xF3D7BC", VA = "0xF3D7BC")]
	public void UpdateImage()
	{
	}

	[Token(Token = "0x60009F5")]
	[Address(RVA = "0xF3D908", Offset = "0xF3D908", VA = "0xF3D908")]
	public void OnAvatarChanged()
	{
	}

	[Token(Token = "0x60009F6")]
	[Address(RVA = "0xF3D90C", Offset = "0xF3D90C", VA = "0xF3D90C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60009F7")]
	[Address(RVA = "0xF3DA88", Offset = "0xF3DA88", VA = "0xF3DA88")]
	public PlayerNameButton()
	{
	}
}
[Token(Token = "0x200017C")]
public class PlayerSwitch : MonoBehaviour, ISwitchable
{
	[Token(Token = "0x40008EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SwitchableContainer[] switchOn;

	[Token(Token = "0x40008EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool startOn;

	[Token(Token = "0x40008F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool toggleable;

	[Token(Token = "0x40008F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float toggleDelay;

	[Token(Token = "0x40008F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float toggleTimer;

	[Token(Token = "0x40008F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float switchDelay;

	[Token(Token = "0x40008F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float switchTimer;

	[Token(Token = "0x40008F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private bool switchedOn;

	[Token(Token = "0x40008F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float previousSwitchTimer;

	[Token(Token = "0x40008F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private bool previousSwitchedOn;

	[Token(Token = "0x40008F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AudioClip switchOnSound;

	[Token(Token = "0x40008F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AudioClip switchOffSound;

	[Token(Token = "0x60009F9")]
	[Address(RVA = "0xF3DAF4", Offset = "0xF3DAF4", VA = "0xF3DAF4")]
	private void Start()
	{
	}

	[Token(Token = "0x60009FA")]
	[Address(RVA = "0xF3DB24", Offset = "0xF3DB24", VA = "0xF3DB24")]
	private void SetupAudio()
	{
	}

	[Token(Token = "0x60009FB")]
	[Address(RVA = "0xF3DD34", Offset = "0xF3DD34", VA = "0xF3DD34")]
	private void Update()
	{
	}

	[Token(Token = "0x60009FC")]
	[Address(RVA = "0xF3DDA8", Offset = "0xF3DDA8", VA = "0xF3DDA8")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60009FD")]
	[Address(RVA = "0xF3DB0C", Offset = "0xF3DB0C", VA = "0xF3DB0C")]
	private void SwitchStart()
	{
	}

	[Token(Token = "0x60009FE")]
	[Address(RVA = "0xF3DDFC", Offset = "0xF3DDFC", VA = "0xF3DDFC", Slot = "4")]
	public void Reset(bool fastSwitch = false)
	{
	}

	[Token(Token = "0x60009FF")]
	[Address(RVA = "0xF3DE14", Offset = "0xF3DE14", VA = "0xF3DE14", Slot = "5")]
	public void Toggle(bool fastSwitch = false)
	{
	}

	[Token(Token = "0x6000A00")]
	[Address(RVA = "0xF3DDE8", Offset = "0xF3DDE8", VA = "0xF3DDE8", Slot = "6")]
	public void Switch(bool newActiveState, bool fastSwitch = false)
	{
	}

	[Token(Token = "0x6000A01")]
	[Address(RVA = "0xF3DE2C", Offset = "0xF3DE2C", VA = "0xF3DE2C", Slot = "7")]
	[ContextMenu("Switch On")]
	public void SwitchOn(bool fastSwitch = false)
	{
	}

	[Token(Token = "0x6000A02")]
	[Address(RVA = "0xF3DF9C", Offset = "0xF3DF9C", VA = "0xF3DF9C", Slot = "8")]
	[ContextMenu("Switch Off")]
	public void SwitchOff(bool fastSwitch = false)
	{
	}

	[Token(Token = "0x6000A03")]
	[Address(RVA = "0xF3E100", Offset = "0xF3E100", VA = "0xF3E100", Slot = "9")]
	public bool GetSwitchState()
	{
		return default(bool);
	}

	[Token(Token = "0x6000A04")]
	[Address(RVA = "0xF3E108", Offset = "0xF3E108", VA = "0xF3E108", Slot = "10")]
	public Hole GetHole()
	{
		return null;
	}

	[Token(Token = "0x6000A05")]
	[Address(RVA = "0xF3E110", Offset = "0xF3E110", VA = "0xF3E110")]
	public PlayerSwitch()
	{
	}
}
[Token(Token = "0x200017D")]
public class PosterSwapper : MonoBehaviour
{
	[Token(Token = "0x40008FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material noDLCMaterial;

	[Token(Token = "0x6000A06")]
	[Address(RVA = "0xF3E134", Offset = "0xF3E134", VA = "0xF3E134")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A07")]
	[Address(RVA = "0xF3E1CC", Offset = "0xF3E1CC", VA = "0xF3E1CC")]
	public PosterSwapper()
	{
	}
}
[Token(Token = "0x200017E")]
public class PrivateRoom : MonoBehaviourPunCallbacks
{
	[Token(Token = "0x200017F")]
	[CompilerGenerated]
	private sealed class <GetAudioSource>d__14 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000902")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000903")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000904")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Photon.Realtime.Player player;

		[Token(Token = "0x4000905")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public PrivateRoom <>4__this;

		[Token(Token = "0x4000906")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int slot;

		[Token(Token = "0x4000907")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private MultiplayerVoice <playerVoice>5__2;

		[Token(Token = "0x1700014E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000A15")]
			[Address(RVA = "0xF3EC38", Offset = "0xF3EC38", VA = "0xF3EC38", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700014F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000A17")]
			[Address(RVA = "0xF3EC80", Offset = "0xF3EC80", VA = "0xF3EC80", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A12")]
		[Address(RVA = "0xF3E9F4", Offset = "0xF3E9F4", VA = "0xF3E9F4")]
		[DebuggerHidden]
		public <GetAudioSource>d__14(int <>1__state)
		{
		}

		[Token(Token = "0x6000A13")]
		[Address(RVA = "0xF3EA4C", Offset = "0xF3EA4C", VA = "0xF3EA4C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000A14")]
		[Address(RVA = "0xF3EA50", Offset = "0xF3EA50", VA = "0xF3EA50", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A16")]
		[Address(RVA = "0xF3EC40", Offset = "0xF3EC40", VA = "0xF3EC40", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000180")]
	[CompilerGenerated]
	private sealed class <WaitForCurrentRoomToExist>d__15 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000908")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000909")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400090A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PrivateRoom <>4__this;

		[Token(Token = "0x17000150")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000A1B")]
			[Address(RVA = "0xF3ED24", Offset = "0xF3ED24", VA = "0xF3ED24", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000151")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000A1D")]
			[Address(RVA = "0xF3ED6C", Offset = "0xF3ED6C", VA = "0xF3ED6C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A18")]
		[Address(RVA = "0xF3EA1C", Offset = "0xF3EA1C", VA = "0xF3EA1C")]
		[DebuggerHidden]
		public <WaitForCurrentRoomToExist>d__15(int <>1__state)
		{
		}

		[Token(Token = "0x6000A19")]
		[Address(RVA = "0xF3EC88", Offset = "0xF3EC88", VA = "0xF3EC88", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000A1A")]
		[Address(RVA = "0xF3EC8C", Offset = "0xF3EC8C", VA = "0xF3EC8C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A1C")]
		[Address(RVA = "0xF3ED2C", Offset = "0xF3ED2C", VA = "0xF3ED2C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40008FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshProUGUI roomNameText;

	[Token(Token = "0x40008FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TextMeshProUGUI roomSizeText;

	[Token(Token = "0x40008FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TextMeshProUGUI[] playersText;

	[Token(Token = "0x40008FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public MutePlayer[] playerMute;

	[Token(Token = "0x40008FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TextMeshProUGUI instructionsText;

	[Token(Token = "0x4000900")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public SavableToggle MicrophoneToggle;

	[Token(Token = "0x4000901")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Dictionary<int, Coroutine> audioSearchCoroutines;

	[Token(Token = "0x6000A08")]
	[Address(RVA = "0xF3E1D4", Offset = "0xF3E1D4", VA = "0xF3E1D4", Slot = "28")]
	public override void OnEnable()
	{
	}

	[Token(Token = "0x6000A09")]
	[Address(RVA = "0xF3E2D0", Offset = "0xF3E2D0", VA = "0xF3E2D0", Slot = "42")]
	public override void OnPlayerEnteredRoom(Photon.Realtime.Player newPlayer)
	{
	}

	[Token(Token = "0x6000A0A")]
	[Address(RVA = "0xF3E838", Offset = "0xF3E838", VA = "0xF3E838", Slot = "43")]
	public override void OnPlayerLeftRoom(Photon.Realtime.Player newPlayer)
	{
	}

	[Token(Token = "0x6000A0B")]
	[Address(RVA = "0xF3E83C", Offset = "0xF3E83C", VA = "0xF3E83C", Slot = "41")]
	public override void OnJoinedRoom()
	{
	}

	[Token(Token = "0x6000A0C")]
	[Address(RVA = "0xF3E840", Offset = "0xF3E840", VA = "0xF3E840", Slot = "47")]
	public override void OnPlayerPropertiesUpdate(Photon.Realtime.Player targetPlayer, ExitGames.Client.Photon.Hashtable changedProps)
	{
	}

	[Token(Token = "0x6000A0D")]
	[Address(RVA = "0xF3E844", Offset = "0xF3E844", VA = "0xF3E844")]
	public void InviteHelp()
	{
	}

	[Token(Token = "0x6000A0E")]
	[Address(RVA = "0xF3E2D4", Offset = "0xF3E2D4", VA = "0xF3E2D4")]
	private void UpdateInfo()
	{
	}

	[Token(Token = "0x6000A0F")]
	[Address(RVA = "0xF3E978", Offset = "0xF3E978", VA = "0xF3E978")]
	[IteratorStateMachine(typeof(<GetAudioSource>d__14))]
	private IEnumerator GetAudioSource(Photon.Realtime.Player player, int slot, string userId)
	{
		return null;
	}

	[Token(Token = "0x6000A10")]
	[Address(RVA = "0xF3E268", Offset = "0xF3E268", VA = "0xF3E268")]
	[IteratorStateMachine(typeof(<WaitForCurrentRoomToExist>d__15))]
	private IEnumerator WaitForCurrentRoomToExist()
	{
		return null;
	}

	[Token(Token = "0x6000A11")]
	[Address(RVA = "0xF3EA44", Offset = "0xF3EA44", VA = "0xF3EA44")]
	public PrivateRoom()
	{
	}
}
[Token(Token = "0x2000181")]
public class ProgressMessages : MonoBehaviour
{
	[Token(Token = "0x400090B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string putterUnlockedMessage;

	[Token(Token = "0x400090C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static string courseRecordMessage;

	[Token(Token = "0x400090D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static string courseUnlocked;

	[Token(Token = "0x6000A1E")]
	[Address(RVA = "0xF3ED74", Offset = "0xF3ED74", VA = "0xF3ED74")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A1F")]
	[Address(RVA = "0xF3EF1C", Offset = "0xF3EF1C", VA = "0xF3EF1C")]
	public ProgressMessages()
	{
	}
}
[Token(Token = "0x2000182")]
public class Putter : MonoBehaviour, IProfileActivatedHandler, IProfileHandler
{
	[Token(Token = "0x2000183")]
	public delegate void PuttEvent();

	[Token(Token = "0x2000184")]
	public delegate void PutterLockEvent();

	[Token(Token = "0x2000185")]
	public delegate void PuttCompletedEvent();

	[Token(Token = "0x400090E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GolfItemLibrary golfItemLibrary;

	[Token(Token = "0x400090F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject putterCollision;

	[Token(Token = "0x4000910")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject putterInteractionCollider;

	[Token(Token = "0x4000911")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Renderer putterGeo;

	[Token(Token = "0x4000912")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Renderer shaftGeo;

	[Token(Token = "0x4000913")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Renderer xRayGeo;

	[Token(Token = "0x4000914")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Transform handGeo;

	[Token(Token = "0x4000915")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Transform handleGeo;

	[Token(Token = "0x4000916")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform putterTransform;

	[Token(Token = "0x4000917")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Transform shaftTransform;

	[Token(Token = "0x4000918")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Transform handTransform;

	[Token(Token = "0x4000919")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private AttachToVRNode handAttachToVRNode;

	[Token(Token = "0x400091A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Material putterOccludedMaterial;

	[Token(Token = "0x400091B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Material clubOpaqueMaterial;

	[Token(Token = "0x400091C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Material clubTransparentMaterial;

	[Token(Token = "0x400091D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Material headMaterial;

	[Token(Token = "0x400091E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[HideInInspector]
	public Vector3 trackingSourceOriginalPos;

	[Token(Token = "0x400091F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	[HideInInspector]
	public Quaternion trackingSourceOriginalRot;

	[Token(Token = "0x4000920")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	[HideInInspector]
	public float putterOnPercentage;

	[Token(Token = "0x4000921")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[HideInInspector]
	public bool putterLock;

	[Token(Token = "0x4000922")]
	private const float putterColliderLocalScaleYLengthMax = 2f;

	[Token(Token = "0x4000923")]
	private const float putterColliderLocalScaleZHeightMax = 4f;

	[Token(Token = "0x4000924")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private float putterAnimationTime;

	[Token(Token = "0x4000925")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private float minimumPuttingDistance;

	[Token(Token = "0x4000926")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	public LayerMask distanceRaycast;

	[Token(Token = "0x4000927")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[HideInInspector]
	public static Putter instance;

	[Token(Token = "0x4000928")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[HideInInspector]
	public float ballSpeedCutoff;

	[Token(Token = "0x4000929")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static int cacheFrames;

	[Token(Token = "0x400092A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private Vector3[] ballPositionChanges;

	[Token(Token = "0x400092B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private double[] frameTimes;

	[Token(Token = "0x400092C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private AudioSource hitSound;

	[Token(Token = "0x400092D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public AudioClip hitAudio;

	[Token(Token = "0x400092E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private float putterMultiplier;

	[Token(Token = "0x400092F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	private float putterSideOffset;

	[Token(Token = "0x4000930")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private float targetBallAngle;

	[Token(Token = "0x4000931")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	[HideInInspector]
	public bool ballInReticle;

	[Token(Token = "0x4000932")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFD")]
	[HideInInspector]
	public bool ballInView;

	[Token(Token = "0x4000933")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFE")]
	[HideInInspector]
	public bool ballInRange;

	[Token(Token = "0x4000934")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	[HideInInspector]
	public string hand;

	[Token(Token = "0x4000938")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private Color putterColor;

	[Token(Token = "0x4000939")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private Transform trackingSource;

	[Token(Token = "0x400093A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private Vector3 trackingSourceLastForward;

	[Token(Token = "0x400093B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
	private float maxPutterLengthVR;

	[Token(Token = "0x400093C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private float minPutterLengthVROutOfRange;

	[Token(Token = "0x400093D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	private float maxPutterLengthAR;

	[Token(Token = "0x400093E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private Transform ballOffset;

	[Token(Token = "0x400093F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public float coolDown;

	[Token(Token = "0x4000940")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public SpriteRenderer putterShadow;

	[Token(Token = "0x4000941")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private float angleToBallCutoff;

	[Token(Token = "0x4000942")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
	private float ballInViewTime;

	[Token(Token = "0x4000943")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private float ballWasInViewTimer;

	[Token(Token = "0x4000944")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
	private float puttFinishedTimer;

	[Token(Token = "0x4000945")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private float puttFinishDelay;

	[Token(Token = "0x4000946")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
	[HideInInspector]
	public bool puttOrThrowStarted;

	[Token(Token = "0x4000947")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	[HideInInspector]
	public float boost;

	[Token(Token = "0x4000948")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
	[HideInInspector]
	public float angleAdjustment;

	[Token(Token = "0x4000949")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private Vector3 positionOffsetVector;

	[Token(Token = "0x400094A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
	private Vector3 rotationOffsetVector;

	[Token(Token = "0x400094B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private bool focus;

	[Token(Token = "0x400094C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
	private float putterLength;

	[Token(Token = "0x400094D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	private float previousPutterLength;

	[Token(Token = "0x400094E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x194")]
	private float putterLengthTimer;

	[Token(Token = "0x400094F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	private float ballStuckTimer;

	[Token(Token = "0x4000950")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
	[HideInInspector]
	public bool gripToPutt;

	[Token(Token = "0x4000951")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19D")]
	[HideInInspector]
	public bool invertHands;

	[Token(Token = "0x4000952")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19E")]
	[HideInInspector]
	public bool customGrip;

	[Token(Token = "0x4000953")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19F")]
	private bool noBallFoundLogged;

	[Token(Token = "0x4000954")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	private bool reportedBallStuck;

	[Token(Token = "0x4000955")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	private GameObject ballRef;

	[Token(Token = "0x4000956")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	public Transform putterLibrary;

	[Token(Token = "0x4000957")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	public bool useSceneMaterialOverrides;

	[Token(Token = "0x4000958")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	private ProfileData profile;

	[Token(Token = "0x4000959")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	private bool pointerModeActive;

	[Token(Token = "0x14000019")]
	public static event PuttEvent onPutt
	{
		[Token(Token = "0x6000A21")]
		[Address(RVA = "0xF3EF94", Offset = "0xF3EF94", VA = "0xF3EF94")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000A22")]
		[Address(RVA = "0xF3F070", Offset = "0xF3F070", VA = "0xF3F070")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x1400001A")]
	public static event PutterLockEvent OnPutterLock
	{
		[Token(Token = "0x6000A23")]
		[Address(RVA = "0xF3F14C", Offset = "0xF3F14C", VA = "0xF3F14C")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000A24")]
		[Address(RVA = "0xF3F228", Offset = "0xF3F228", VA = "0xF3F228")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x1400001B")]
	public static event PuttCompletedEvent onPuttCompleted
	{
		[Token(Token = "0x6000A25")]
		[Address(RVA = "0xF3F304", Offset = "0xF3F304", VA = "0xF3F304")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000A26")]
		[Address(RVA = "0xF3F3E0", Offset = "0xF3F3E0", VA = "0xF3F3E0")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6000A27")]
	[Address(RVA = "0xF3F4BC", Offset = "0xF3F4BC", VA = "0xF3F4BC")]
	private void Init()
	{
	}

	[Token(Token = "0x6000A28")]
	[Address(RVA = "0xF3F630", Offset = "0xF3F630", VA = "0xF3F630")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000A29")]
	[Address(RVA = "0xF3F634", Offset = "0xF3F634", VA = "0xF3F634")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000A2A")]
	[Address(RVA = "0xF3F9A4", Offset = "0xF3F9A4", VA = "0xF3F9A4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000A2B")]
	[Address(RVA = "0xF3FD14", Offset = "0xF3FD14", VA = "0xF3FD14")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000A2C")]
	[Address(RVA = "0xF3FE30", Offset = "0xF3FE30", VA = "0xF3FE30")]
	private void VRPointerToggled(bool isOn)
	{
	}

	[Token(Token = "0x6000A2D")]
	[Address(RVA = "0xF3FE3C", Offset = "0xF3FE3C", VA = "0xF3FE3C", Slot = "4")]
	public void OnProfileActivated(ProfileData activated)
	{
	}

	[Token(Token = "0x6000A2E")]
	[Address(RVA = "0xF410AC", Offset = "0xF410AC", VA = "0xF410AC")]
	public void UpdatePutterStrength()
	{
	}

	[Token(Token = "0x6000A2F")]
	[Address(RVA = "0xF41174", Offset = "0xF41174", VA = "0xF41174")]
	public void UpdatePutterAngle()
	{
	}

	[Token(Token = "0x6000A30")]
	[Address(RVA = "0xF3F618", Offset = "0xF3F618", VA = "0xF3F618")]
	public void LoadCustomGripOffsets()
	{
	}

	[Token(Token = "0x6000A31")]
	[Address(RVA = "0xF413B8", Offset = "0xF413B8", VA = "0xF413B8")]
	private void UpdateCustomGripPosition()
	{
	}

	[Token(Token = "0x6000A32")]
	[Address(RVA = "0xF4122C", Offset = "0xF4122C", VA = "0xF4122C")]
	private void UpdateCustomGripRotation()
	{
	}

	[Token(Token = "0x6000A33")]
	[Address(RVA = "0xF41554", Offset = "0xF41554", VA = "0xF41554")]
	public void UpdateGripToPutt()
	{
	}

	[Token(Token = "0x6000A34")]
	[Address(RVA = "0xF415D0", Offset = "0xF415D0", VA = "0xF415D0")]
	public void UpdateInvertHands()
	{
	}

	[Token(Token = "0x6000A35")]
	[Address(RVA = "0xF40F74", Offset = "0xF40F74", VA = "0xF40F74")]
	public void UpdateCustomGrip()
	{
	}

	[Token(Token = "0x6000A36")]
	[Address(RVA = "0xF416F4", Offset = "0xF416F4", VA = "0xF416F4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A37")]
	[Address(RVA = "0xF41C30", Offset = "0xF41C30", VA = "0xF41C30")]
	private void OnFocusLost()
	{
	}

	[Token(Token = "0x6000A38")]
	[Address(RVA = "0xF41EDC", Offset = "0xF41EDC", VA = "0xF41EDC")]
	private void OnFocusAcquired()
	{
	}

	[Token(Token = "0x6000A39")]
	[Address(RVA = "0xF41F14", Offset = "0xF41F14", VA = "0xF41F14")]
	private void OnPutterCalibrationStarted()
	{
	}

	[Token(Token = "0x6000A3A")]
	[Address(RVA = "0xF41F9C", Offset = "0xF41F9C", VA = "0xF41F9C")]
	private void OnPutterCalibrationStopped()
	{
	}

	[Token(Token = "0x6000A3B")]
	[Address(RVA = "0xF41A4C", Offset = "0xF41A4C", VA = "0xF41A4C")]
	public void UpdateHand()
	{
	}

	[Token(Token = "0x6000A3C")]
	[Address(RVA = "0xF42024", Offset = "0xF42024", VA = "0xF42024")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000A3D")]
	[Address(RVA = "0xF45EA4", Offset = "0xF45EA4", VA = "0xF45EA4")]
	public void ActivatePuttOrThrowState()
	{
	}

	[Token(Token = "0x6000A3E")]
	[Address(RVA = "0xF45FD8", Offset = "0xF45FD8", VA = "0xF45FD8")]
	private void PlaceShadow()
	{
	}

	[Token(Token = "0x6000A3F")]
	[Address(RVA = "0xF45EBC", Offset = "0xF45EBC", VA = "0xF45EBC")]
	private void AddStroke()
	{
	}

	[Token(Token = "0x6000A40")]
	[Address(RVA = "0xF41C6C", Offset = "0xF41C6C", VA = "0xF41C6C")]
	public void SetCoolDown()
	{
	}

	[Token(Token = "0x6000A41")]
	[Address(RVA = "0xF45CBC", Offset = "0xF45CBC", VA = "0xF45CBC")]
	private Vector3 SmoothFrames(Vector3 newVector)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000A42")]
	[Address(RVA = "0xF3FED8", Offset = "0xF3FED8", VA = "0xF3FED8")]
	public void SetupPutter()
	{
	}

	[Token(Token = "0x6000A43")]
	[Address(RVA = "0xF466CC", Offset = "0xF466CC", VA = "0xF466CC")]
	private void OverrideMaterial(Transform transform, Material newMaterial)
	{
	}

	[Token(Token = "0x6000A44")]
	[Address(RVA = "0xF465E8", Offset = "0xF465E8", VA = "0xF465E8")]
	private void OverrideMaterial(GameObject obj, Material newMaterial)
	{
	}

	[Token(Token = "0x6000A45")]
	[Address(RVA = "0xF464C8", Offset = "0xF464C8", VA = "0xF464C8")]
	public void SetHandColor(byte color)
	{
	}

	[Token(Token = "0x6000A46")]
	[Address(RVA = "0xF46434", Offset = "0xF46434", VA = "0xF46434")]
	private void TurnOffLightProbes(Transform transform)
	{
	}

	[Token(Token = "0x6000A47")]
	[Address(RVA = "0xF466F8", Offset = "0xF466F8", VA = "0xF466F8")]
	private void TurnOffLightProbes(GameObject obj)
	{
	}

	[Token(Token = "0x6000A48")]
	[Address(RVA = "0xF463B0", Offset = "0xF463B0", VA = "0xF463B0")]
	private void TurnOffLightProbes(Renderer renderer)
	{
	}

	[Token(Token = "0x6000A49")]
	[Address(RVA = "0xF4678C", Offset = "0xF4678C", VA = "0xF4678C")]
	public void SetupPutter_Legacy()
	{
	}

	[Token(Token = "0x6000A4A")]
	[Address(RVA = "0xF47498", Offset = "0xF47498", VA = "0xF47498")]
	public void ResetCustomGripCalibration()
	{
	}

	[Token(Token = "0x6000A4B")]
	[Address(RVA = "0xF475E4", Offset = "0xF475E4", VA = "0xF475E4")]
	public Putter()
	{
	}
}
[Token(Token = "0x2000186")]
public class PutterAchievement : Achievement
{
	[Token(Token = "0x400095A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int putterID;

	[Token(Token = "0x6000A59")]
	[Address(RVA = "0xF48A74", Offset = "0xF48A74", VA = "0xF48A74", Slot = "4")]
	public override void CollectAchievement()
	{
	}

	[Token(Token = "0x6000A5A")]
	[Address(RVA = "0xF48CDC", Offset = "0xF48CDC", VA = "0xF48CDC")]
	public PutterAchievement()
	{
	}
}
[Token(Token = "0x2000187")]
public class PutterDebugger : MonoBehaviour
{
	[Token(Token = "0x17000152")]
	private bool CanDebug
	{
		[Token(Token = "0x6000A5D")]
		[Address(RVA = "0xF492A0", Offset = "0xF492A0", VA = "0xF492A0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000A5B")]
	[Address(RVA = "0xF48CE4", Offset = "0xF48CE4", VA = "0xF48CE4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A5C")]
	[Address(RVA = "0xF48D64", Offset = "0xF48D64", VA = "0xF48D64")]
	private void DebugState()
	{
	}

	[Token(Token = "0x6000A5E")]
	[Address(RVA = "0xF4948C", Offset = "0xF4948C", VA = "0xF4948C")]
	public PutterDebugger()
	{
	}
}
[Token(Token = "0x2000188")]
public class PutterHandPose : MonoBehaviour
{
	[Token(Token = "0x6000A5F")]
	[Address(RVA = "0xF49494", Offset = "0xF49494", VA = "0xF49494")]
	public PutterHandPose()
	{
	}
}
[Token(Token = "0x2000189")]
public class PutterMakeActive : MonoBehaviour, IInteractable
{
	[Token(Token = "0x400095C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[HideInInspector]
	public int thisPutter;

	[Token(Token = "0x400095D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool selected;

	[Token(Token = "0x400095E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Collider coll;

	[Token(Token = "0x400095F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3 defaultPosition;

	[Token(Token = "0x4000960")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Vector3 selectedPosition;

	[Token(Token = "0x17000153")]
	public float maxInteractionDistance
	{
		[Token(Token = "0x6000A60")]
		[Address(RVA = "0xF4949C", Offset = "0xF4949C", VA = "0xF4949C", Slot = "4")]
		[CompilerGenerated]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000A61")]
		[Address(RVA = "0xF494A4", Offset = "0xF494A4", VA = "0xF494A4", Slot = "5")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x6000A62")]
	[Address(RVA = "0xF494AC", Offset = "0xF494AC", VA = "0xF494AC")]
	public void Awake()
	{
	}

	[Token(Token = "0x6000A63")]
	[Address(RVA = "0xF4953C", Offset = "0xF4953C", VA = "0xF4953C")]
	public void SetDefaultPosition()
	{
	}

	[Token(Token = "0x6000A64")]
	[Address(RVA = "0xF49590", Offset = "0xF49590", VA = "0xF49590")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000A65")]
	[Address(RVA = "0xF496AC", Offset = "0xF496AC", VA = "0xF496AC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000A66")]
	[Address(RVA = "0xF497C8", Offset = "0xF497C8", VA = "0xF497C8", Slot = "6")]
	public void OnHoover()
	{
	}

	[Token(Token = "0x6000A67")]
	[Address(RVA = "0xF497CC", Offset = "0xF497CC", VA = "0xF497CC", Slot = "7")]
	public void OnClick()
	{
	}

	[Token(Token = "0x6000A68")]
	[Address(RVA = "0xF49B64", Offset = "0xF49B64", VA = "0xF49B64", Slot = "8")]
	public void OnRelease()
	{
	}

	[Token(Token = "0x6000A69")]
	[Address(RVA = "0xF49B68", Offset = "0xF49B68", VA = "0xF49B68")]
	public void SelectionChangeEvent(int previousPutter, int activePutter)
	{
	}

	[Token(Token = "0x6000A6A")]
	[Address(RVA = "0xF499EC", Offset = "0xF499EC", VA = "0xF499EC")]
	public void PutterChangeAnalyticsEvent()
	{
	}

	[Token(Token = "0x6000A6B")]
	[Address(RVA = "0xF49C80", Offset = "0xF49C80", VA = "0xF49C80")]
	public PutterMakeActive()
	{
	}
}
[Token(Token = "0x200018A")]
public class PutterSelection : MonoBehaviour, IProfileActivatedHandler, IProfileHandler, IProfilesChangedHandler
{
	[Token(Token = "0x4000961")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int activePutter;

	[Token(Token = "0x4000962")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int startingPutters;

	[Token(Token = "0x4000963")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject menuPutter;

	[Token(Token = "0x4000964")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static PutterSelection instance;

	[Token(Token = "0x4000965")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform ballLibrary;

	[Token(Token = "0x4000966")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform putterLibrary;

	[Token(Token = "0x4000967")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private bool resetOnLoad;

	[Token(Token = "0x4000968")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float coolDown;

	[Token(Token = "0x4000969")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int currentTotalPuttersDisplayed;

	[Token(Token = "0x6000A6C")]
	[Address(RVA = "0xF49C90", Offset = "0xF49C90", VA = "0xF49C90")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000A6D")]
	[Address(RVA = "0xF49CE8", Offset = "0xF49CE8", VA = "0xF49CE8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000A6E")]
	[Address(RVA = "0xF49D40", Offset = "0xF49D40", VA = "0xF49D40")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000A6F")]
	[Address(RVA = "0xF49D8C", Offset = "0xF49D8C", VA = "0xF49D8C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A70")]
	[Address(RVA = "0xF4A28C", Offset = "0xF4A28C", VA = "0xF4A28C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A71")]
	[Address(RVA = "0xF4A2B8", Offset = "0xF4A2B8", VA = "0xF4A2B8", Slot = "4")]
	public void OnProfileActivated(ProfileData profile)
	{
	}

	[Token(Token = "0x6000A72")]
	[Address(RVA = "0xF4A5D8", Offset = "0xF4A5D8", VA = "0xF4A5D8", Slot = "5")]
	public void OnProfilesChanged(ProfileData[] profiles)
	{
	}

	[Token(Token = "0x6000A73")]
	[Address(RVA = "0xF4A2D0", Offset = "0xF4A2D0", VA = "0xF4A2D0")]
	private void Cleanup()
	{
	}

	[Token(Token = "0x6000A74")]
	[Address(RVA = "0xF49D90", Offset = "0xF49D90", VA = "0xF49D90")]
	private void Generate()
	{
	}

	[Token(Token = "0x6000A75")]
	[Address(RVA = "0xF48BC8", Offset = "0xF48BC8", VA = "0xF48BC8")]
	public static void InvokeOnPutterSelection()
	{
	}

	[Token(Token = "0x6000A76")]
	[Address(RVA = "0xF4983C", Offset = "0xF4983C", VA = "0xF4983C")]
	public void MakeActive(int newPutter)
	{
	}

	[Token(Token = "0x6000A77")]
	[Address(RVA = "0xF4A6B8", Offset = "0xF4A6B8", VA = "0xF4A6B8")]
	public PutterSelection()
	{
	}
}
[Token(Token = "0x200018B")]
[ExecuteInEditMode]
public class RandomizeYRotation : MonoBehaviour
{
	[Token(Token = "0x6000A78")]
	[Address(RVA = "0xF4A6C8", Offset = "0xF4A6C8", VA = "0xF4A6C8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A79")]
	[Address(RVA = "0xF4A780", Offset = "0xF4A780", VA = "0xF4A780")]
	public RandomizeYRotation()
	{
	}
}
[Token(Token = "0x200018C")]
public class Range : MonoBehaviour
{
	[Token(Token = "0x200018D")]
	[CompilerGenerated]
	private sealed class <OnReset>d__98 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000983")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000984")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000985")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Range <>4__this;

		[Token(Token = "0x1700016B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000ADE")]
			[Address(RVA = "0xF4EA20", Offset = "0xF4EA20", VA = "0xF4EA20", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700016C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000AE0")]
			[Address(RVA = "0xF4EA68", Offset = "0xF4EA68", VA = "0xF4EA68", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000ADB")]
		[Address(RVA = "0xF4D058", Offset = "0xF4D058", VA = "0xF4D058")]
		[DebuggerHidden]
		public <OnReset>d__98(int <>1__state)
		{
		}

		[Token(Token = "0x6000ADC")]
		[Address(RVA = "0xF4E5B4", Offset = "0xF4E5B4", VA = "0xF4E5B4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000ADD")]
		[Address(RVA = "0xF4E5B8", Offset = "0xF4E5B8", VA = "0xF4E5B8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000ADF")]
		[Address(RVA = "0xF4EA28", Offset = "0xF4EA28", VA = "0xF4EA28", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200018E")]
	[CompilerGenerated]
	private sealed class <_RespawnBall>d__112 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000986")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000987")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000988")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float delay;

		[Token(Token = "0x4000989")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Range <>4__this;

		[Token(Token = "0x1700016D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000AE4")]
			[Address(RVA = "0xF4EBBC", Offset = "0xF4EBBC", VA = "0xF4EBBC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700016E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000AE6")]
			[Address(RVA = "0xF4EC04", Offset = "0xF4EC04", VA = "0xF4EC04", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000AE1")]
		[Address(RVA = "0xF4D4C8", Offset = "0xF4D4C8", VA = "0xF4D4C8")]
		[DebuggerHidden]
		public <_RespawnBall>d__112(int <>1__state)
		{
		}

		[Token(Token = "0x6000AE2")]
		[Address(RVA = "0xF4EA70", Offset = "0xF4EA70", VA = "0xF4EA70", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000AE3")]
		[Address(RVA = "0xF4EA74", Offset = "0xF4EA74", VA = "0xF4EA74", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000AE5")]
		[Address(RVA = "0xF4EBC4", Offset = "0xF4EBC4", VA = "0xF4EBC4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000971")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float autoReset;

	[Token(Token = "0x4000972")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private Vector3 gravity;

	[Token(Token = "0x400097C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Collider player;

	[Token(Token = "0x17000154")]
	public RangeTees tees
	{
		[Token(Token = "0x6000A88")]
		[Address(RVA = "0xF4B0D8", Offset = "0xF4B0D8", VA = "0xF4B0D8")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000A89")]
		[Address(RVA = "0xF4B0E0", Offset = "0xF4B0E0", VA = "0xF4B0E0")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000155")]
	public RangeTargets targets
	{
		[Token(Token = "0x6000A8A")]
		[Address(RVA = "0xF4B0E8", Offset = "0xF4B0E8", VA = "0xF4B0E8")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000A8B")]
		[Address(RVA = "0xF4B0F0", Offset = "0xF4B0F0", VA = "0xF4B0F0")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000156")]
	public RangeMenu[] menus
	{
		[Token(Token = "0x6000A8C")]
		[Address(RVA = "0xF4B0F8", Offset = "0xF4B0F8", VA = "0xF4B0F8")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000A8D")]
		[Address(RVA = "0xF4B100", Offset = "0xF4B100", VA = "0xF4B100")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000157")]
	public RangeAudio audio
	{
		[Token(Token = "0x6000A8E")]
		[Address(RVA = "0xF4B108", Offset = "0xF4B108", VA = "0xF4B108")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000A8F")]
		[Address(RVA = "0xF4B110", Offset = "0xF4B110", VA = "0xF4B110")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000158")]
	public RangeBalls balls
	{
		[Token(Token = "0x6000A90")]
		[Address(RVA = "0xF4B118", Offset = "0xF4B118", VA = "0xF4B118")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000A91")]
		[Address(RVA = "0xF4B120", Offset = "0xF4B120", VA = "0xF4B120")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000159")]
	public RangeClock clock
	{
		[Token(Token = "0x6000A92")]
		[Address(RVA = "0xF4B128", Offset = "0xF4B128", VA = "0xF4B128")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000A93")]
		[Address(RVA = "0xF4B130", Offset = "0xF4B130", VA = "0xF4B130")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x1700015A")]
	public RangeBoard board
	{
		[Token(Token = "0x6000A94")]
		[Address(RVA = "0xF4B138", Offset = "0xF4B138", VA = "0xF4B138")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000A95")]
		[Address(RVA = "0xF4B140", Offset = "0xF4B140", VA = "0xF4B140")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x1700015B")]
	public RangeTee tee
	{
		[Token(Token = "0x6000A96")]
		[Address(RVA = "0xF4B148", Offset = "0xF4B148", VA = "0xF4B148")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000A97")]
		[Address(RVA = "0xF4B150", Offset = "0xF4B150", VA = "0xF4B150")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x1700015C")]
	public RangeMessages messages
	{
		[Token(Token = "0x6000A98")]
		[Address(RVA = "0xF4B158", Offset = "0xF4B158", VA = "0xF4B158")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000A99")]
		[Address(RVA = "0xF4B160", Offset = "0xF4B160", VA = "0xF4B160")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x1700015D")]
	public bool playerInBounds
	{
		[Token(Token = "0x6000A9A")]
		[Address(RVA = "0xF4B168", Offset = "0xF4B168", VA = "0xF4B168")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000A9B")]
		[Address(RVA = "0xF4B170", Offset = "0xF4B170", VA = "0xF4B170")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x1700015E")]
	public RangeMatch match
	{
		[Token(Token = "0x6000A9C")]
		[Address(RVA = "0xF4B17C", Offset = "0xF4B17C", VA = "0xF4B17C")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000A9D")]
		[Address(RVA = "0xF4B184", Offset = "0xF4B184", VA = "0xF4B184")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x1700015F")]
	public RangeBall lastBall
	{
		[Token(Token = "0x6000A9E")]
		[Address(RVA = "0xF4B18C", Offset = "0xF4B18C", VA = "0xF4B18C")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000A9F")]
		[Address(RVA = "0xF4B194", Offset = "0xF4B194", VA = "0xF4B194")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000160")]
	public RangeTarget lastTarget
	{
		[Token(Token = "0x6000AA0")]
		[Address(RVA = "0xF4B19C", Offset = "0xF4B19C", VA = "0xF4B19C")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000AA1")]
		[Address(RVA = "0xF4B1A4", Offset = "0xF4B1A4", VA = "0xF4B1A4")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000161")]
	public Vector3 previousBallPosition
	{
		[Token(Token = "0x6000AA2")]
		[Address(RVA = "0xF4B1AC", Offset = "0xF4B1AC", VA = "0xF4B1AC")]
		[CompilerGenerated]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x6000AA3")]
		[Address(RVA = "0xF4B1B8", Offset = "0xF4B1B8", VA = "0xF4B1B8")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000162")]
	public static Range instance
	{
		[Token(Token = "0x6000AA4")]
		[Address(RVA = "0xF4B1C4", Offset = "0xF4B1C4", VA = "0xF4B1C4")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000AA5")]
		[Address(RVA = "0xF4B20C", Offset = "0xF4B20C", VA = "0xF4B20C")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000163")]
	private Ball ball
	{
		[Token(Token = "0x6000AC4")]
		[Address(RVA = "0xF4CB58", Offset = "0xF4CB58", VA = "0xF4CB58")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000164")]
	private int activeBall
	{
		[Token(Token = "0x6000AC5")]
		[Address(RVA = "0xF4CBE0", Offset = "0xF4CBE0", VA = "0xF4CBE0")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000165")]
	public bool lastBallStillActive
	{
		[Token(Token = "0x6000AC6")]
		[Address(RVA = "0xF4C7C8", Offset = "0xF4C7C8", VA = "0xF4C7C8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000166")]
	public bool lastTargetStillActive
	{
		[Token(Token = "0x6000AC7")]
		[Address(RVA = "0xF4D5D4", Offset = "0xF4D5D4", VA = "0xF4D5D4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000167")]
	public static RangeTee activeTee
	{
		[Token(Token = "0x6000AD6")]
		[Address(RVA = "0xF4DE0C", Offset = "0xF4DE0C", VA = "0xF4DE0C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000168")]
	public static bool isActive
	{
		[Token(Token = "0x6000AD7")]
		[Address(RVA = "0xF4DEDC", Offset = "0xF4DEDC", VA = "0xF4DEDC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000169")]
	public static RangeMenu activeMenu
	{
		[Token(Token = "0x6000AD8")]
		[Address(RVA = "0xF4DFCC", Offset = "0xF4DFCC", VA = "0xF4DFCC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700016A")]
	public static bool menuIsActive
	{
		[Token(Token = "0x6000AD9")]
		[Address(RVA = "0xF49408", Offset = "0xF49408", VA = "0xF49408")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1400001C")]
	public event Action<RangeTarget, RangeBall> TargetHit
	{
		[Token(Token = "0x6000A7A")]
		[Address(RVA = "0xF4A788", Offset = "0xF4A788", VA = "0xF4A788")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000A7B")]
		[Address(RVA = "0xF4A838", Offset = "0xF4A838", VA = "0xF4A838")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x1400001D")]
	public event Action<RangeMatch> OnMatchStart
	{
		[Token(Token = "0x6000A7C")]
		[Address(RVA = "0xF4A8E8", Offset = "0xF4A8E8", VA = "0xF4A8E8")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000A7D")]
		[Address(RVA = "0xF4A998", Offset = "0xF4A998", VA = "0xF4A998")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x1400001E")]
	public event Action<RangeMatch> OnMatchComplete
	{
		[Token(Token = "0x6000A7E")]
		[Address(RVA = "0xF4AA48", Offset = "0xF4AA48", VA = "0xF4AA48")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000A7F")]
		[Address(RVA = "0xF4AAF8", Offset = "0xF4AAF8", VA = "0xF4AAF8")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x1400001F")]
	public event Action OnEnter
	{
		[Token(Token = "0x6000A80")]
		[Address(RVA = "0xF4ABA8", Offset = "0xF4ABA8", VA = "0xF4ABA8")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000A81")]
		[Address(RVA = "0xF4AC44", Offset = "0xF4AC44", VA = "0xF4AC44")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000020")]
	public event Action OnExit
	{
		[Token(Token = "0x6000A82")]
		[Address(RVA = "0xF4ACE0", Offset = "0xF4ACE0", VA = "0xF4ACE0")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000A83")]
		[Address(RVA = "0xF4AD7C", Offset = "0xF4AD7C", VA = "0xF4AD7C")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000021")]
	public event Action<RangeTee> EnterTee
	{
		[Token(Token = "0x6000A84")]
		[Address(RVA = "0xF4AE18", Offset = "0xF4AE18", VA = "0xF4AE18")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000A85")]
		[Address(RVA = "0xF4AEC8", Offset = "0xF4AEC8", VA = "0xF4AEC8")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000022")]
	public event Action<RangeTee> ExitTee
	{
		[Token(Token = "0x6000A86")]
		[Address(RVA = "0xF4AF78", Offset = "0xF4AF78", VA = "0xF4AF78")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000A87")]
		[Address(RVA = "0xF4B028", Offset = "0xF4B028", VA = "0xF4B028")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6000AA6")]
	[Address(RVA = "0xF4B258", Offset = "0xF4B258", VA = "0xF4B258")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000AA7")]
	[Address(RVA = "0xF4B898", Offset = "0xF4B898", VA = "0xF4B898")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000AA8")]
	[Address(RVA = "0xF4BA78", Offset = "0xF4BA78", VA = "0xF4BA78")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000AA9")]
	[Address(RVA = "0xF4BC58", Offset = "0xF4BC58", VA = "0xF4BC58")]
	private void Start()
	{
	}

	[Token(Token = "0x6000AAA")]
	[Address(RVA = "0xF4BC5C", Offset = "0xF4BC5C", VA = "0xF4BC5C")]
	private void OnEnterRange()
	{
	}

	[Token(Token = "0x6000AAB")]
	[Address(RVA = "0xF4BD90", Offset = "0xF4BD90", VA = "0xF4BD90")]
	private void OnExitRange()
	{
	}

	[Token(Token = "0x6000AAC")]
	[Address(RVA = "0xF4C138", Offset = "0xF4C138", VA = "0xF4C138")]
	private void OnEnterTee(RangeTee _tee)
	{
	}

	[Token(Token = "0x6000AAD")]
	[Address(RVA = "0xF4C304", Offset = "0xF4C304", VA = "0xF4C304")]
	private void OnExitTee(RangeTee _tee)
	{
	}

	[Token(Token = "0x6000AAE")]
	[Address(RVA = "0xF4C3D8", Offset = "0xF4C3D8", VA = "0xF4C3D8")]
	private void OnTimedGameClicked()
	{
	}

	[Token(Token = "0x6000AAF")]
	[Address(RVA = "0xF4C4F8", Offset = "0xF4C4F8", VA = "0xF4C4F8")]
	private void OnBallGameClicked()
	{
	}

	[Token(Token = "0x6000AB0")]
	[Address(RVA = "0xF4C5E0", Offset = "0xF4C5E0", VA = "0xF4C5E0")]
	private void OnStopGameClicked()
	{
	}

	[Token(Token = "0x6000AB1")]
	[Address(RVA = "0xF4C680", Offset = "0xF4C680", VA = "0xF4C680")]
	private void OnTargetHit(RangeTarget target, RangeBall ball, int points)
	{
	}

	[Token(Token = "0x6000AB2")]
	[Address(RVA = "0xF4C890", Offset = "0xF4C890", VA = "0xF4C890")]
	private void OnPutt()
	{
	}

	[Token(Token = "0x6000AB3")]
	[Address(RVA = "0xF4CF2C", Offset = "0xF4CF2C", VA = "0xF4CF2C")]
	private void OnClockTick(int time)
	{
	}

	[Token(Token = "0x6000AB4")]
	[Address(RVA = "0xF4CEA4", Offset = "0xF4CEA4", VA = "0xF4CEA4")]
	[IteratorStateMachine(typeof(<OnReset>d__98))]
	private IEnumerator OnReset()
	{
		return null;
	}

	[Token(Token = "0x6000AB5")]
	[Address(RVA = "0xF4D080", Offset = "0xF4D080", VA = "0xF4D080")]
	private void OnGodMode()
	{
	}

	[Token(Token = "0x6000AB6")]
	[Address(RVA = "0xF4D0E8", Offset = "0xF4D0E8", VA = "0xF4D0E8")]
	private void OnGodModeExit()
	{
	}

	[Token(Token = "0x6000AB7")]
	[Address(RVA = "0xF4D150", Offset = "0xF4D150", VA = "0xF4D150")]
	private void OnFocusLost()
	{
	}

	[Token(Token = "0x6000AB8")]
	[Address(RVA = "0xF4D274", Offset = "0xF4D274", VA = "0xF4D274")]
	private void OnFocusAquired()
	{
	}

	[Token(Token = "0x6000AB9")]
	[Address(RVA = "0xF4BD44", Offset = "0xF4BD44", VA = "0xF4BD44")]
	private void ShowTargets()
	{
	}

	[Token(Token = "0x6000ABA")]
	[Address(RVA = "0xF4BF44", Offset = "0xF4BF44", VA = "0xF4BF44")]
	private void HideTargets()
	{
	}

	[Token(Token = "0x6000ABB")]
	[Address(RVA = "0xF4BF2C", Offset = "0xF4BF2C", VA = "0xF4BF2C")]
	private void HideMenus()
	{
	}

	[Token(Token = "0x6000ABC")]
	[Address(RVA = "0xF4BD18", Offset = "0xF4BD18", VA = "0xF4BD18")]
	private void GetBall()
	{
	}

	[Token(Token = "0x6000ABD")]
	[Address(RVA = "0xF4BEF4", Offset = "0xF4BEF4", VA = "0xF4BEF4")]
	private void ReturnBall()
	{
	}

	[Token(Token = "0x6000ABE")]
	[Address(RVA = "0xF4C240", Offset = "0xF4C240", VA = "0xF4C240")]
	private void SpawnBall()
	{
	}

	[Token(Token = "0x6000ABF")]
	[Address(RVA = "0xF4CD4C", Offset = "0xF4CD4C", VA = "0xF4CD4C")]
	private void DisableBall()
	{
	}

	[Token(Token = "0x6000AC0")]
	[Address(RVA = "0xF4BE90", Offset = "0xF4BE90", VA = "0xF4BE90")]
	private void EnableBall()
	{
	}

	[Token(Token = "0x6000AC1")]
	[Address(RVA = "0xF4CF0C", Offset = "0xF4CF0C", VA = "0xF4CF0C")]
	public void RespawnBall(float delay = 1f)
	{
	}

	[Token(Token = "0x6000AC2")]
	[Address(RVA = "0xF4D450", Offset = "0xF4D450", VA = "0xF4D450")]
	[IteratorStateMachine(typeof(<_RespawnBall>d__112))]
	private IEnumerator _RespawnBall(float delay = 1f)
	{
		return null;
	}

	[Token(Token = "0x6000AC3")]
	[Address(RVA = "0xF4D4F0", Offset = "0xF4D4F0", VA = "0xF4D4F0")]
	private void ActivatePutter()
	{
	}

	[Token(Token = "0x6000AC8")]
	[Address(RVA = "0xF4B89C", Offset = "0xF4B89C", VA = "0xF4B89C")]
	private void AddPlayerEvents()
	{
	}

	[Token(Token = "0x6000AC9")]
	[Address(RVA = "0xF4BA7C", Offset = "0xF4BA7C", VA = "0xF4BA7C")]
	private void RemovePlayerEvents()
	{
	}

	[Token(Token = "0x6000ACA")]
	[Address(RVA = "0xF4B3AC", Offset = "0xF4B3AC", VA = "0xF4B3AC")]
	private void GetTees()
	{
	}

	[Token(Token = "0x6000ACB")]
	[Address(RVA = "0xF4B4A8", Offset = "0xF4B4A8", VA = "0xF4B4A8")]
	private void GetTargets()
	{
	}

	[Token(Token = "0x6000ACC")]
	[Address(RVA = "0xF4B560", Offset = "0xF4B560", VA = "0xF4B560")]
	private void GetMenus()
	{
	}

	[Token(Token = "0x6000ACD")]
	[Address(RVA = "0xF4B6F4", Offset = "0xF4B6F4", VA = "0xF4B6F4")]
	private void GetClock()
	{
	}

	[Token(Token = "0x6000ACE")]
	[Address(RVA = "0xF4B7A8", Offset = "0xF4B7A8", VA = "0xF4B7A8")]
	private void GetAudio()
	{
	}

	[Token(Token = "0x6000ACF")]
	[Address(RVA = "0xF4B7F8", Offset = "0xF4B7F8", VA = "0xF4B7F8")]
	private void GetBalls()
	{
	}

	[Token(Token = "0x6000AD0")]
	[Address(RVA = "0xF4B35C", Offset = "0xF4B35C", VA = "0xF4B35C")]
	private void GetBoard()
	{
	}

	[Token(Token = "0x6000AD1")]
	[Address(RVA = "0xF4B2E8", Offset = "0xF4B2E8", VA = "0xF4B2E8")]
	private void GetPlayer()
	{
	}

	[Token(Token = "0x6000AD2")]
	[Address(RVA = "0xF4B848", Offset = "0xF4B848", VA = "0xF4B848")]
	private void GetMessages()
	{
	}

	[Token(Token = "0x6000AD3")]
	[Address(RVA = "0xF4DC14", Offset = "0xF4DC14", VA = "0xF4DC14")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000AD4")]
	[Address(RVA = "0xF4DC9C", Offset = "0xF4DC9C", VA = "0xF4DC9C")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000AD5")]
	[Address(RVA = "0xF4DD24", Offset = "0xF4DD24", VA = "0xF4DD24")]
	public void DebugBall()
	{
	}

	[Token(Token = "0x6000ADA")]
	[Address(RVA = "0xF4E098", Offset = "0xF4E098", VA = "0xF4E098")]
	public Range()
	{
	}
}
[Token(Token = "0x2000190")]
public class RangeAudio : MonoBehaviour
{
	[Token(Token = "0x4000992")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private AudioSource source;

	[Token(Token = "0x4000993")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioClip targetHit;

	[Token(Token = "0x1700016F")]
	public Range range
	{
		[Token(Token = "0x6000AF3")]
		[Address(RVA = "0xF4ED9C", Offset = "0xF4ED9C", VA = "0xF4ED9C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000AF0")]
	[Address(RVA = "0xF4EC94", Offset = "0xF4EC94", VA = "0xF4EC94")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000AF1")]
	[Address(RVA = "0xF4ECE4", Offset = "0xF4ECE4", VA = "0xF4ECE4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000AF2")]
	[Address(RVA = "0xF4EDDC", Offset = "0xF4EDDC", VA = "0xF4EDDC")]
	private void OnTargetHit(RangeTarget target, RangeBall ball)
	{
	}

	[Token(Token = "0x6000AF4")]
	[Address(RVA = "0xF4EE00", Offset = "0xF4EE00", VA = "0xF4EE00")]
	public RangeAudio()
	{
	}
}
[Token(Token = "0x2000191")]
public class RangeBall : MonoBehaviour
{
	[Token(Token = "0x2000192")]
	public delegate void UndoStrokeEvent();

	[Token(Token = "0x2000193")]
	[CompilerGenerated]
	private sealed class <BallSplash>d__48 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40009A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40009AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40009AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RangeBall <>4__this;

		[Token(Token = "0x40009AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GameObject <prefab>5__2;

		[Token(Token = "0x17000175")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000B16")]
			[Address(RVA = "0xF5071C", Offset = "0xF5071C", VA = "0xF5071C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000176")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000B18")]
			[Address(RVA = "0xF50764", Offset = "0xF50764", VA = "0xF50764", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B13")]
		[Address(RVA = "0xF50100", Offset = "0xF50100", VA = "0xF50100")]
		[DebuggerHidden]
		public <BallSplash>d__48(int <>1__state)
		{
		}

		[Token(Token = "0x6000B14")]
		[Address(RVA = "0xF5055C", Offset = "0xF5055C", VA = "0xF5055C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000B15")]
		[Address(RVA = "0xF50560", Offset = "0xF50560", VA = "0xF50560", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B17")]
		[Address(RVA = "0xF50724", Offset = "0xF50724", VA = "0xF50724", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000994")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MeshFilter meshFilter;

	[Token(Token = "0x4000995")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MeshRenderer meshRenderer;

	[Token(Token = "0x4000997")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float timeout;

	[Token(Token = "0x4000998")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool local;

	[Token(Token = "0x4000999")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
	public bool didHitTarget;

	[Token(Token = "0x400099A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private AudioSource hitSound;

	[Token(Token = "0x400099B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private string rollingSurface;

	[Token(Token = "0x400099C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float volumeMultiplier;

	[Token(Token = "0x400099D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Transform ballLibrary;

	[Token(Token = "0x400099F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Vector3 lastGroundNormal;

	[Token(Token = "0x40009A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Transform velocityDebugger;

	[Token(Token = "0x40009A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private int respawnCounter;

	[Token(Token = "0x40009A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private int waterTriggers;

	[Token(Token = "0x40009A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public string splashPrefab;

	[Token(Token = "0x40009A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private bool splashing;

	[Token(Token = "0x17000170")]
	public bool isActive
	{
		[Token(Token = "0x6000AFA")]
		[Address(RVA = "0xF4D5B4", Offset = "0xF4D5B4", VA = "0xF4D5B4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000171")]
	public SphereCollider coll
	{
		[Token(Token = "0x6000AFD")]
		[Address(RVA = "0xF4FC74", Offset = "0xF4FC74", VA = "0xF4FC74")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000AFE")]
		[Address(RVA = "0xF4FC7C", Offset = "0xF4FC7C", VA = "0xF4FC7C")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000172")]
	public Renderer rend
	{
		[Token(Token = "0x6000AFF")]
		[Address(RVA = "0xF4FC84", Offset = "0xF4FC84", VA = "0xF4FC84")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000B00")]
		[Address(RVA = "0xF4FC8C", Offset = "0xF4FC8C", VA = "0xF4FC8C")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000173")]
	public int chosenBallInt
	{
		[Token(Token = "0x6000B01")]
		[Address(RVA = "0xF4FC94", Offset = "0xF4FC94", VA = "0xF4FC94")]
		[CompilerGenerated]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000B02")]
		[Address(RVA = "0xF4FC9C", Offset = "0xF4FC9C", VA = "0xF4FC9C")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000174")]
	public Vector3 velocity
	{
		[Token(Token = "0x6000B03")]
		[Address(RVA = "0xF4FCA4", Offset = "0xF4FCA4", VA = "0xF4FCA4")]
		[CompilerGenerated]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x6000B04")]
		[Address(RVA = "0xF4FCB0", Offset = "0xF4FCB0", VA = "0xF4FCB0")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x14000023")]
	public event Action<RangeBall> OnTimeout
	{
		[Token(Token = "0x6000AF5")]
		[Address(RVA = "0xF4EE08", Offset = "0xF4EE08", VA = "0xF4EE08")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000AF6")]
		[Address(RVA = "0xF4EEB8", Offset = "0xF4EEB8", VA = "0xF4EEB8")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000024")]
	public static event UndoStrokeEvent onUndoStroke
	{
		[Token(Token = "0x6000AFB")]
		[Address(RVA = "0xF4FB04", Offset = "0xF4FB04", VA = "0xF4FB04")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000AFC")]
		[Address(RVA = "0xF4FBBC", Offset = "0xF4FBBC", VA = "0xF4FBBC")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6000AF7")]
	[Address(RVA = "0xF4EF68", Offset = "0xF4EF68", VA = "0xF4EF68")]
	public void Launch(Vector3 _position, Vector3 _velocity, Vector3 _angular, float _timeout = 3f)
	{
	}

	[Token(Token = "0x6000AF8")]
	[Address(RVA = "0xF4F078", Offset = "0xF4F078", VA = "0xF4F078")]
	public void Kill()
	{
	}

	[Token(Token = "0x6000AF9")]
	[Address(RVA = "0xF4F080", Offset = "0xF4F080", VA = "0xF4F080")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B05")]
	[Address(RVA = "0xF4FCBC", Offset = "0xF4FCBC", VA = "0xF4FCBC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000B06")]
	[Address(RVA = "0xF4FD64", Offset = "0xF4FD64", VA = "0xF4FD64")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B07")]
	[Address(RVA = "0xF4FDD0", Offset = "0xF4FDD0", VA = "0xF4FDD0")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000B08")]
	[Address(RVA = "0xF4F2D0", Offset = "0xF4F2D0", VA = "0xF4F2D0")]
	private void RaycastMarch(float time)
	{
	}

	[Token(Token = "0x6000B09")]
	[Address(RVA = "0xF4FFF4", Offset = "0xF4FFF4", VA = "0xF4FFF4")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000B0A")]
	[Address(RVA = "0xF50098", Offset = "0xF50098", VA = "0xF50098")]
	[IteratorStateMachine(typeof(<BallSplash>d__48))]
	private IEnumerator BallSplash()
	{
		return null;
	}

	[Token(Token = "0x6000B0B")]
	[Address(RVA = "0xF50128", Offset = "0xF50128", VA = "0xF50128")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000B0C")]
	[Address(RVA = "0xF501AC", Offset = "0xF501AC", VA = "0xF501AC")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000B0D")]
	[Address(RVA = "0xF4FF60", Offset = "0xF4FF60", VA = "0xF4FF60")]
	private void PlayHit(Surface surface, float volume)
	{
	}

	[Token(Token = "0x6000B0E")]
	[Address(RVA = "0xF502D8", Offset = "0xF502D8", VA = "0xF502D8")]
	public RangeBall()
	{
	}
}
[Token(Token = "0x2000195")]
public class RangeBalls : MonoBehaviourPunCallbacks
{
	[Token(Token = "0x2000196")]
	[CompilerGenerated]
	private sealed class <DelayedLaunchRemote>d__15 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40009B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40009B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40009BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RangeBalls <>4__this;

		[Token(Token = "0x40009BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 position;

		[Token(Token = "0x40009BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Vector3 velocity;

		[Token(Token = "0x40009BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Vector3 angular;

		[Token(Token = "0x40009BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public int ballId;

		[Token(Token = "0x17000179")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000B2F")]
			[Address(RVA = "0xF51864", Offset = "0xF51864", VA = "0xF51864", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700017A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000B31")]
			[Address(RVA = "0xF518AC", Offset = "0xF518AC", VA = "0xF518AC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B2C")]
		[Address(RVA = "0xF50B30", Offset = "0xF50B30", VA = "0xF50B30")]
		[DebuggerHidden]
		public <DelayedLaunchRemote>d__15(int <>1__state)
		{
		}

		[Token(Token = "0x6000B2D")]
		[Address(RVA = "0xF515A0", Offset = "0xF515A0", VA = "0xF515A0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000B2E")]
		[Address(RVA = "0xF515A4", Offset = "0xF515A4", VA = "0xF515A4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B30")]
		[Address(RVA = "0xF5186C", Offset = "0xF5186C", VA = "0xF5186C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40009AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject prefab;

	[Token(Token = "0x40009B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float ballTimeout;

	[Token(Token = "0x40009B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float rpc_Delay;

	[Token(Token = "0x40009B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Queue<RangeBall> inactive;

	[Token(Token = "0x40009B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private List<RangeBall> created;

	[Token(Token = "0x40009B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static RangeBalls instance;

	[Token(Token = "0x40009B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Material _material;

	[Token(Token = "0x40009B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Mesh _mesh;

	[Token(Token = "0x17000177")]
	public Dictionary<int, Mesh> meshes
	{
		[Token(Token = "0x6000B1C")]
		[Address(RVA = "0xF507DC", Offset = "0xF507DC", VA = "0xF507DC")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000B1D")]
		[Address(RVA = "0xF507E4", Offset = "0xF507E4", VA = "0xF507E4")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000178")]
	public bool HasInactive
	{
		[Token(Token = "0x6000B2A")]
		[Address(RVA = "0xF50ED8", Offset = "0xF50ED8", VA = "0xF50ED8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000B1E")]
	[Address(RVA = "0xF507EC", Offset = "0xF507EC", VA = "0xF507EC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000B1F")]
	[Address(RVA = "0xF4CC4C", Offset = "0xF4CC4C", VA = "0xF4CC4C")]
	public RangeBall Launch(Ball ball, int ballId = 0)
	{
		return null;
	}

	[Token(Token = "0x6000B20")]
	[Address(RVA = "0xF508A8", Offset = "0xF508A8", VA = "0xF508A8")]
	public RangeBall Launch(Vector3 position, Vector3 velocity, Vector3 angular, int ballId = 0)
	{
		return null;
	}

	[Token(Token = "0x6000B21")]
	[Address(RVA = "0xF50A60", Offset = "0xF50A60", VA = "0xF50A60")]
	[IteratorStateMachine(typeof(<DelayedLaunchRemote>d__15))]
	private IEnumerator DelayedLaunchRemote(Vector3 position, Vector3 velocity, Vector3 angular, int ballId)
	{
		return null;
	}

	[Token(Token = "0x6000B22")]
	[Address(RVA = "0xF50B58", Offset = "0xF50B58", VA = "0xF50B58")]
	[PunRPC]
	public void LaunchRemote(Vector3 position, Vector3 velocity, Vector3 angular, int ballId)
	{
	}

	[Token(Token = "0x6000B23")]
	[Address(RVA = "0xF50BE4", Offset = "0xF50BE4", VA = "0xF50BE4")]
	public void OnBallTimeout(RangeBall ball)
	{
	}

	[Token(Token = "0x6000B24")]
	[Address(RVA = "0xF50C3C", Offset = "0xF50C3C", VA = "0xF50C3C")]
	private void Clear()
	{
	}

	[Token(Token = "0x6000B25")]
	[Address(RVA = "0xF50998", Offset = "0xF50998", VA = "0xF50998")]
	public RangeBall GetOrCreate(int ballId = 0)
	{
		return null;
	}

	[Token(Token = "0x6000B26")]
	[Address(RVA = "0xF50F28", Offset = "0xF50F28", VA = "0xF50F28")]
	private RangeBall Create()
	{
		return null;
	}

	[Token(Token = "0x6000B27")]
	[Address(RVA = "0xF51094", Offset = "0xF51094", VA = "0xF51094")]
	private Mesh GetMesh(int ballId)
	{
		return null;
	}

	[Token(Token = "0x6000B28")]
	[Address(RVA = "0xF5128C", Offset = "0xF5128C", VA = "0xF5128C")]
	private Mesh GetMeshFromLibrary(int ballId)
	{
		return null;
	}

	[Token(Token = "0x6000B29")]
	[Address(RVA = "0xF511A4", Offset = "0xF511A4", VA = "0xF511A4")]
	private Material GetMaterial()
	{
		return null;
	}

	[Token(Token = "0x6000B2B")]
	[Address(RVA = "0xF51490", Offset = "0xF51490", VA = "0xF51490")]
	public RangeBalls()
	{
	}
}
[Token(Token = "0x2000197")]
public class RangeBoard : MonoBehaviourPunCallbacks
{
	[Token(Token = "0x40009C1")]
	public const string prop_Match = "rb_m";

	[Token(Token = "0x40009C2")]
	public const string prop_Saved = "rb_s";

	[Token(Token = "0x1700017B")]
	public List<RangeMatch> matches
	{
		[Token(Token = "0x6000B34")]
		[Address(RVA = "0xF51A14", Offset = "0xF51A14", VA = "0xF51A14")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000B35")]
		[Address(RVA = "0xF51A1C", Offset = "0xF51A1C", VA = "0xF51A1C")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x1700017C")]
	private string LocalPlayerName
	{
		[Token(Token = "0x6000B4A")]
		[Address(RVA = "0xF525DC", Offset = "0xF525DC", VA = "0xF525DC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700017D")]
	public Range range
	{
		[Token(Token = "0x6000B4B")]
		[Address(RVA = "0xF51B74", Offset = "0xF51B74", VA = "0xF51B74")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700017E")]
	public string room
	{
		[Token(Token = "0x6000B4C")]
		[Address(RVA = "0xF531E4", Offset = "0xF531E4", VA = "0xF531E4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700017F")]
	public bool inRoom
	{
		[Token(Token = "0x6000B4D")]
		[Address(RVA = "0xF53260", Offset = "0xF53260", VA = "0xF53260")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x14000025")]
	public event Action<RangeBoard> Updated
	{
		[Token(Token = "0x6000B32")]
		[Address(RVA = "0xF518B4", Offset = "0xF518B4", VA = "0xF518B4")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000B33")]
		[Address(RVA = "0xF51964", Offset = "0xF51964", VA = "0xF51964")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6000B36")]
	[Address(RVA = "0xF51A24", Offset = "0xF51A24", VA = "0xF51A24")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B37")]
	[Address(RVA = "0xF51C64", Offset = "0xF51C64", VA = "0xF51C64")]
	public void OnMatchUpdated(RangeMatch match)
	{
	}

	[Token(Token = "0x6000B38")]
	[Address(RVA = "0xF51DB4", Offset = "0xF51DB4", VA = "0xF51DB4")]
	public void UpdateMatch(RangeMatch match)
	{
	}

	[Token(Token = "0x6000B39")]
	[Address(RVA = "0xF4BF88", Offset = "0xF4BF88", VA = "0xF4BF88")]
	public void ClearIncomplete(RangeMatch match)
	{
	}

	[Token(Token = "0x6000B3A")]
	[Address(RVA = "0xF52078", Offset = "0xF52078", VA = "0xF52078")]
	public void OnEnterTee(RangeTee tee)
	{
	}

	[Token(Token = "0x6000B3B")]
	[Address(RVA = "0xF520C8", Offset = "0xF520C8", VA = "0xF520C8", Slot = "41")]
	public override void OnJoinedRoom()
	{
	}

	[Token(Token = "0x6000B3C")]
	[Address(RVA = "0xF520CC", Offset = "0xF520CC", VA = "0xF520CC", Slot = "31")]
	public override void OnLeftRoom()
	{
	}

	[Token(Token = "0x6000B3D")]
	[Address(RVA = "0xF520D0", Offset = "0xF520D0", VA = "0xF520D0", Slot = "42")]
	public override void OnPlayerEnteredRoom(Photon.Realtime.Player p)
	{
	}

	[Token(Token = "0x6000B3E")]
	[Address(RVA = "0xF520D4", Offset = "0xF520D4", VA = "0xF520D4", Slot = "43")]
	public override void OnPlayerLeftRoom(Photon.Realtime.Player p)
	{
	}

	[Token(Token = "0x6000B3F")]
	[Address(RVA = "0xF520D8", Offset = "0xF520D8", VA = "0xF520D8", Slot = "47")]
	public override void OnPlayerPropertiesUpdate(Photon.Realtime.Player player, ExitGames.Client.Photon.Hashtable changedProps)
	{
	}

	[Token(Token = "0x6000B40")]
	[Address(RVA = "0xF52184", Offset = "0xF52184", VA = "0xF52184")]
	public void UpdateMatch(Photon.Realtime.Player player)
	{
	}

	[Token(Token = "0x6000B41")]
	[Address(RVA = "0xF5207C", Offset = "0xF5207C", VA = "0xF5207C")]
	public void UpdateMatches()
	{
	}

	[Token(Token = "0x6000B42")]
	[Address(RVA = "0xF523CC", Offset = "0xF523CC", VA = "0xF523CC")]
	public RangeMatch FindMatch(Photon.Realtime.Player player)
	{
		return null;
	}

	[Token(Token = "0x6000B43")]
	[Address(RVA = "0xF52750", Offset = "0xF52750", VA = "0xF52750")]
	private void GetMatches()
	{
	}

	[Token(Token = "0x6000B44")]
	[Address(RVA = "0xF52688", Offset = "0xF52688", VA = "0xF52688")]
	private void SortMatches()
	{
	}

	[Token(Token = "0x6000B45")]
	[Address(RVA = "0xF52AA8", Offset = "0xF52AA8", VA = "0xF52AA8")]
	[ContextMenu("Test Sort")]
	private void TestSort()
	{
	}

	[Token(Token = "0x6000B46")]
	[Address(RVA = "0xF52F40", Offset = "0xF52F40", VA = "0xF52F40")]
	private void DebugMatches(List<RangeMatch> m)
	{
	}

	[Token(Token = "0x6000B47")]
	[Address(RVA = "0xF51D24", Offset = "0xF51D24", VA = "0xF51D24")]
	private bool ShouldUpdate(RangeMatch match)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B48")]
	[Address(RVA = "0xF51EA0", Offset = "0xF51EA0", VA = "0xF51EA0")]
	private bool HasMatchSavedFlag(Photon.Realtime.Player player)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B49")]
	[Address(RVA = "0xF51F74", Offset = "0xF51F74", VA = "0xF51F74")]
	private void SetMatchSavedFlag(Photon.Realtime.Player player, bool value)
	{
	}

	[Token(Token = "0x6000B4E")]
	[Address(RVA = "0xF5332C", Offset = "0xF5332C", VA = "0xF5332C")]
	public RangeBoard()
	{
	}
}
[Token(Token = "0x200019A")]
public class RangeClock : MonoBehaviour
{
	[Token(Token = "0x200019B")]
	[CompilerGenerated]
	private sealed class <_Clock>d__14 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40009C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40009CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40009CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RangeClock <>4__this;

		[Token(Token = "0x17000182")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000B63")]
			[Address(RVA = "0xF538C8", Offset = "0xF538C8", VA = "0xF538C8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000183")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000B65")]
			[Address(RVA = "0xF53910", Offset = "0xF53910", VA = "0xF53910", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B60")]
		[Address(RVA = "0xF536F0", Offset = "0xF536F0", VA = "0xF536F0")]
		[DebuggerHidden]
		public <_Clock>d__14(int <>1__state)
		{
		}

		[Token(Token = "0x6000B61")]
		[Address(RVA = "0xF53800", Offset = "0xF53800", VA = "0xF53800", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000B62")]
		[Address(RVA = "0xF53804", Offset = "0xF53804", VA = "0xF53804", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B64")]
		[Address(RVA = "0xF538D0", Offset = "0xF538D0", VA = "0xF538D0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x17000180")]
	public int time
	{
		[Token(Token = "0x6000B57")]
		[Address(RVA = "0xF53664", Offset = "0xF53664", VA = "0xF53664")]
		[CompilerGenerated]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000B58")]
		[Address(RVA = "0xF5366C", Offset = "0xF5366C", VA = "0xF5366C")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000181")]
	public bool running
	{
		[Token(Token = "0x6000B59")]
		[Address(RVA = "0xF53674", Offset = "0xF53674", VA = "0xF53674")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000B5A")]
		[Address(RVA = "0xF5367C", Offset = "0xF5367C", VA = "0xF5367C")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x14000026")]
	public event Action<int> OnTick
	{
		[Token(Token = "0x6000B55")]
		[Address(RVA = "0xF4DB64", Offset = "0xF4DB64", VA = "0xF4DB64")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000B56")]
		[Address(RVA = "0xF535B4", Offset = "0xF535B4", VA = "0xF535B4")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6000B5B")]
	[Address(RVA = "0xF4CA34", Offset = "0xF4CA34", VA = "0xF4CA34")]
	public void start()
	{
	}

	[Token(Token = "0x6000B5C")]
	[Address(RVA = "0xF4D23C", Offset = "0xF4D23C", VA = "0xF4D23C")]
	public void stop()
	{
	}

	[Token(Token = "0x6000B5D")]
	[Address(RVA = "0xF4C488", Offset = "0xF4C488", VA = "0xF4C488")]
	public void reset()
	{
	}

	[Token(Token = "0x6000B5E")]
	[Address(RVA = "0xF53688", Offset = "0xF53688", VA = "0xF53688")]
	[IteratorStateMachine(typeof(<_Clock>d__14))]
	private IEnumerator _Clock()
	{
		return null;
	}

	[Token(Token = "0x6000B5F")]
	[Address(RVA = "0xF53718", Offset = "0xF53718", VA = "0xF53718")]
	public RangeClock()
	{
	}
}
[Token(Token = "0x200019D")]
public class RangeCountdown : MonoBehaviour
{
	[Token(Token = "0x40009CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMeshProUGUI timeText;

	[Token(Token = "0x40009CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshProUGUI gameOverText;

	[Token(Token = "0x40009D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool showMatchComplete;

	[Token(Token = "0x17000184")]
	public Range range
	{
		[Token(Token = "0x6000B6C")]
		[Address(RVA = "0xF53A88", Offset = "0xF53A88", VA = "0xF53A88")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000B69")]
	[Address(RVA = "0xF53988", Offset = "0xF53988", VA = "0xF53988")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B6A")]
	[Address(RVA = "0xF53AC8", Offset = "0xF53AC8", VA = "0xF53AC8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000B6B")]
	[Address(RVA = "0xF53B38", Offset = "0xF53B38", VA = "0xF53B38")]
	private void UpdateMatch(RangeMatch match)
	{
	}

	[Token(Token = "0x6000B6D")]
	[Address(RVA = "0xF53C5C", Offset = "0xF53C5C", VA = "0xF53C5C")]
	public RangeCountdown()
	{
	}
}
[Serializable]
[Token(Token = "0x200019E")]
public class RangeMatch
{
	[Token(Token = "0x200019F")]
	public enum Mode
	{
		[Token(Token = "0x40009DC")]
		Practice,
		[Token(Token = "0x40009DD")]
		Ball,
		[Token(Token = "0x40009DE")]
		Timed
	}

	[Token(Token = "0x20001A0")]
	public enum State
	{
		[Token(Token = "0x40009E0")]
		Idle,
		[Token(Token = "0x40009E1")]
		Ready,
		[Token(Token = "0x40009E2")]
		Playing,
		[Token(Token = "0x40009E3")]
		Paused,
		[Token(Token = "0x40009E4")]
		Complete
	}

	[Token(Token = "0x40009D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Mode mo;

	[Token(Token = "0x40009D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private State st;

	[Token(Token = "0x40009D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private int ba;

	[Token(Token = "0x40009D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private int sc;

	[Token(Token = "0x40009D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private int ti;

	[Token(Token = "0x40009D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private int co;

	[NonSerialized]
	[Token(Token = "0x40009D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int actor;

	[NonSerialized]
	[Token(Token = "0x40009D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string name;

	[NonSerialized]
	[Token(Token = "0x40009DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool isLocal;

	[Token(Token = "0x17000185")]
	public State state
	{
		[Token(Token = "0x6000B72")]
		[Address(RVA = "0xF53D14", Offset = "0xF53D14", VA = "0xF53D14")]
		get
		{
			return default(State);
		}
		[Token(Token = "0x6000B73")]
		[Address(RVA = "0xF53D1C", Offset = "0xF53D1C", VA = "0xF53D1C")]
		set
		{
		}
	}

	[Token(Token = "0x17000186")]
	public Mode mode
	{
		[Token(Token = "0x6000B74")]
		[Address(RVA = "0xF53D60", Offset = "0xF53D60", VA = "0xF53D60")]
		get
		{
			return default(Mode);
		}
		[Token(Token = "0x6000B75")]
		[Address(RVA = "0xF53D68", Offset = "0xF53D68", VA = "0xF53D68")]
		set
		{
		}
	}

	[Token(Token = "0x17000187")]
	public int balls
	{
		[Token(Token = "0x6000B76")]
		[Address(RVA = "0xF53DAC", Offset = "0xF53DAC", VA = "0xF53DAC")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000B77")]
		[Address(RVA = "0xF4CABC", Offset = "0xF4CABC", VA = "0xF4CABC")]
		set
		{
		}
	}

	[Token(Token = "0x17000188")]
	public int score
	{
		[Token(Token = "0x6000B78")]
		[Address(RVA = "0xF53DB4", Offset = "0xF53DB4", VA = "0xF53DB4")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000B79")]
		[Address(RVA = "0xF4C84C", Offset = "0xF4C84C", VA = "0xF4C84C")]
		set
		{
		}
	}

	[Token(Token = "0x17000189")]
	public int time
	{
		[Token(Token = "0x6000B7A")]
		[Address(RVA = "0xF53DBC", Offset = "0xF53DBC", VA = "0xF53DBC")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000B7B")]
		[Address(RVA = "0xF4CFBC", Offset = "0xF4CFBC", VA = "0xF4CFBC")]
		set
		{
		}
	}

	[Token(Token = "0x1700018A")]
	public int course
	{
		[Token(Token = "0x6000B7C")]
		[Address(RVA = "0xF53DC4", Offset = "0xF53DC4", VA = "0xF53DC4")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000B7D")]
		[Address(RVA = "0xF53DCC", Offset = "0xF53DCC", VA = "0xF53DCC")]
		set
		{
		}
	}

	[Token(Token = "0x1700018B")]
	public string status
	{
		[Token(Token = "0x6000B7E")]
		[Address(RVA = "0xF53E10", Offset = "0xF53E10", VA = "0xF53E10")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700018C")]
	public bool isOver
	{
		[Token(Token = "0x6000B87")]
		[Address(RVA = "0xF4CE38", Offset = "0xF4CE38", VA = "0xF4CE38")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700018D")]
	public bool isTimed
	{
		[Token(Token = "0x6000B88")]
		[Address(RVA = "0xF53C4C", Offset = "0xF53C4C", VA = "0xF53C4C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700018E")]
	public bool isBall
	{
		[Token(Token = "0x6000B89")]
		[Address(RVA = "0xF53F00", Offset = "0xF53F00", VA = "0xF53F00")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700018F")]
	public bool isPractice
	{
		[Token(Token = "0x6000B8A")]
		[Address(RVA = "0xF52068", Offset = "0xF52068", VA = "0xF52068")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000190")]
	public bool isIdle
	{
		[Token(Token = "0x6000B8B")]
		[Address(RVA = "0xF4C230", Offset = "0xF4C230", VA = "0xF4C230")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000191")]
	public bool isPlaying
	{
		[Token(Token = "0x6000B8C")]
		[Address(RVA = "0xF4C7A8", Offset = "0xF4C7A8", VA = "0xF4C7A8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000192")]
	public bool isComplete
	{
		[Token(Token = "0x6000B8D")]
		[Address(RVA = "0xF4C7B8", Offset = "0xF4C7B8", VA = "0xF4C7B8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000193")]
	public bool isReady
	{
		[Token(Token = "0x6000B8E")]
		[Address(RVA = "0xF4CA24", Offset = "0xF4CA24", VA = "0xF4CA24")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000194")]
	public bool isPaused
	{
		[Token(Token = "0x6000B8F")]
		[Address(RVA = "0xF4D330", Offset = "0xF4D330", VA = "0xF4D330")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000195")]
	public bool isActive
	{
		[Token(Token = "0x6000B90")]
		[Address(RVA = "0xF4DFBC", Offset = "0xF4DFBC", VA = "0xF4DFBC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x14000027")]
	public event Action<RangeMatch> Updated
	{
		[Token(Token = "0x6000B6E")]
		[Address(RVA = "0xF51BB4", Offset = "0xF51BB4", VA = "0xF51BB4")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000B6F")]
		[Address(RVA = "0xF53C64", Offset = "0xF53C64", VA = "0xF53C64")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6000B70")]
	[Address(RVA = "0xF4E4C4", Offset = "0xF4E4C4", VA = "0xF4E4C4")]
	public RangeMatch()
	{
	}

	[Token(Token = "0x6000B71")]
	[Address(RVA = "0xF529A8", Offset = "0xF529A8", VA = "0xF529A8")]
	public RangeMatch(string json)
	{
	}

	[Token(Token = "0x6000B7F")]
	[Address(RVA = "0xF4BD5C", Offset = "0xF4BD5C", VA = "0xF4BD5C")]
	public void Practice()
	{
	}

	[Token(Token = "0x6000B80")]
	[Address(RVA = "0xF4C4BC", Offset = "0xF4C4BC", VA = "0xF4C4BC")]
	public void Timed(int seconds = 60)
	{
	}

	[Token(Token = "0x6000B81")]
	[Address(RVA = "0xF4C5A8", Offset = "0xF4C5A8", VA = "0xF4C5A8")]
	public void Ball(int count = 10)
	{
	}

	[Token(Token = "0x6000B82")]
	[Address(RVA = "0xF4CA8C", Offset = "0xF4CA8C", VA = "0xF4CA8C")]
	public void Playing()
	{
	}

	[Token(Token = "0x6000B83")]
	[Address(RVA = "0xF4CE6C", Offset = "0xF4CE6C", VA = "0xF4CE6C")]
	public void Complete()
	{
	}

	[Token(Token = "0x6000B84")]
	[Address(RVA = "0xF4C10C", Offset = "0xF4C10C", VA = "0xF4C10C")]
	public void Idle()
	{
	}

	[Token(Token = "0x6000B85")]
	[Address(RVA = "0xF4D20C", Offset = "0xF4D20C", VA = "0xF4D20C")]
	public void Pause()
	{
	}

	[Token(Token = "0x6000B86")]
	[Address(RVA = "0xF4D340", Offset = "0xF4D340", VA = "0xF4D340")]
	public void Resume()
	{
	}

	[Token(Token = "0x6000B91")]
	[Address(RVA = "0xF52554", Offset = "0xF52554", VA = "0xF52554")]
	public int SortOrder(RangeMatch localPlayer)
	{
		return default(int);
	}

	[Token(Token = "0x6000B92")]
	[Address(RVA = "0xF53F10", Offset = "0xF53F10", VA = "0xF53F10")]
	public bool SameGameModeAs(RangeMatch other)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B93")]
	[Address(RVA = "0xF52594", Offset = "0xF52594", VA = "0xF52594")]
	public void Read(string json)
	{
	}

	[Token(Token = "0x6000B94")]
	[Address(RVA = "0xF52064", Offset = "0xF52064", VA = "0xF52064")]
	public string Write()
	{
		return null;
	}

	[Token(Token = "0x6000B95")]
	[Address(RVA = "0xF53F34", Offset = "0xF53F34", VA = "0xF53F34")]
	private void ReadJson(string json)
	{
	}

	[Token(Token = "0x6000B96")]
	[Address(RVA = "0xF54060", Offset = "0xF54060", VA = "0xF54060")]
	private string WriteJson()
	{
		return null;
	}
}
[Token(Token = "0x20001A2")]
public class RangeMatchView : MonoBehaviour
{
	[Token(Token = "0x40009E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMeshProUGUI nameText;

	[Token(Token = "0x40009E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshProUGUI ballsText;

	[Token(Token = "0x40009EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TextMeshProUGUI timeText;

	[Token(Token = "0x40009EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TextMeshProUGUI practicingText;

	[Token(Token = "0x40009EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TextMeshProUGUI scoreText;

	[Token(Token = "0x40009ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject divider;

	[Token(Token = "0x6000B9B")]
	[Address(RVA = "0xF541E8", Offset = "0xF541E8", VA = "0xF541E8")]
	public void SetMatch(RangeMatch match, bool _divider = false)
	{
	}

	[Token(Token = "0x6000B9C")]
	[Address(RVA = "0xF54360", Offset = "0xF54360", VA = "0xF54360")]
	public void SetActive(bool b)
	{
	}

	[Token(Token = "0x6000B9D")]
	[Address(RVA = "0xF54388", Offset = "0xF54388", VA = "0xF54388")]
	public RangeMatchView()
	{
	}
}
[Token(Token = "0x20001A3")]
public class RangeMenu : MonoBehaviour
{
	[Token(Token = "0x40009F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TextMeshProUGUI ballsText;

	[Token(Token = "0x40009F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TextMeshProUGUI scoreText;

	[Token(Token = "0x40009F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TextMeshProUGUI readyText;

	[Token(Token = "0x40009F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TextMeshProUGUI gameOverText;

	[Token(Token = "0x40009F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public TextMeshProUGUI timeText;

	[Token(Token = "0x40009F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public TextMeshProUGUI practiceText;

	[Token(Token = "0x40009F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public TextMeshProUGUI roomText;

	[Token(Token = "0x40009F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject timedGameButton;

	[Token(Token = "0x40009F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject ballGameButton;

	[Token(Token = "0x40009FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject stopGameButton;

	[Token(Token = "0x40009FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public VRPointerDetector detector;

	[Token(Token = "0x40009FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private RangeMatchView[] matchViews;

	[Token(Token = "0x17000196")]
	public bool pointerDetected
	{
		[Token(Token = "0x6000BAC")]
		[Address(RVA = "0xF4E050", Offset = "0xF4E050", VA = "0xF4E050")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000197")]
	public bool isActive
	{
		[Token(Token = "0x6000BB0")]
		[Address(RVA = "0xF54C7C", Offset = "0xF54C7C", VA = "0xF54C7C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000198")]
	public Range range
	{
		[Token(Token = "0x6000BB1")]
		[Address(RVA = "0xF546DC", Offset = "0xF546DC", VA = "0xF546DC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x14000028")]
	public event Action OnTimedGameClicked
	{
		[Token(Token = "0x6000B9E")]
		[Address(RVA = "0xF4D990", Offset = "0xF4D990", VA = "0xF4D990")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000B9F")]
		[Address(RVA = "0xF54390", Offset = "0xF54390", VA = "0xF54390")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000029")]
	public event Action OnBallGameClicked
	{
		[Token(Token = "0x6000BA0")]
		[Address(RVA = "0xF4DA2C", Offset = "0xF4DA2C", VA = "0xF4DA2C")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000BA1")]
		[Address(RVA = "0xF5442C", Offset = "0xF5442C", VA = "0xF5442C")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x1400002A")]
	public event Action OnStopGameClicked
	{
		[Token(Token = "0x6000BA2")]
		[Address(RVA = "0xF4DAC8", Offset = "0xF4DAC8", VA = "0xF4DAC8")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000BA3")]
		[Address(RVA = "0xF544C8", Offset = "0xF544C8", VA = "0xF544C8")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6000BA4")]
	[Address(RVA = "0xF54564", Offset = "0xF54564", VA = "0xF54564")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000BA5")]
	[Address(RVA = "0xF54634", Offset = "0xF54634", VA = "0xF54634")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000BA6")]
	[Address(RVA = "0xF4D8A4", Offset = "0xF4D8A4", VA = "0xF4D8A4")]
	public void AddListeners(RangeMatch match, RangeBoard board)
	{
	}

	[Token(Token = "0x6000BA7")]
	[Address(RVA = "0xF54B00", Offset = "0xF54B00", VA = "0xF54B00")]
	public void RemoveListeners(RangeMatch match, RangeBoard board)
	{
	}

	[Token(Token = "0x6000BA8")]
	[Address(RVA = "0xF54BEC", Offset = "0xF54BEC", VA = "0xF54BEC")]
	public void TimedGameClick()
	{
	}

	[Token(Token = "0x6000BA9")]
	[Address(RVA = "0xF54C10", Offset = "0xF54C10", VA = "0xF54C10")]
	public void BallGameClick()
	{
	}

	[Token(Token = "0x6000BAA")]
	[Address(RVA = "0xF54C34", Offset = "0xF54C34", VA = "0xF54C34")]
	public void StopGameClick()
	{
	}

	[Token(Token = "0x6000BAB")]
	[Address(RVA = "0xF54C58", Offset = "0xF54C58", VA = "0xF54C58")]
	public void Hide()
	{
	}

	[Token(Token = "0x6000BAD")]
	[Address(RVA = "0xF54944", Offset = "0xF54944", VA = "0xF54944")]
	public void UpdateBoard(RangeBoard board)
	{
	}

	[Token(Token = "0x6000BAE")]
	[Address(RVA = "0xF54C9C", Offset = "0xF54C9C", VA = "0xF54C9C")]
	private void HideMatchViews()
	{
	}

	[Token(Token = "0x6000BAF")]
	[Address(RVA = "0xF5471C", Offset = "0xF5471C", VA = "0xF5471C")]
	public void UpdateMatch(RangeMatch match)
	{
	}

	[Token(Token = "0x6000BB2")]
	[Address(RVA = "0xF54CFC", Offset = "0xF54CFC", VA = "0xF54CFC")]
	public RangeMenu()
	{
	}
}
[Token(Token = "0x20001A5")]
public class RangeMessages : MonoBehaviour
{
	[Token(Token = "0x4000A01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMeshProUGUI gameOverText;

	[Token(Token = "0x4000A02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshProUGUI scoreText;

	[Token(Token = "0x17000199")]
	public Range range
	{
		[Token(Token = "0x6000BBD")]
		[Address(RVA = "0xF55060", Offset = "0xF55060", VA = "0xF55060")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000BB9")]
	[Address(RVA = "0xF54FA8", Offset = "0xF54FA8", VA = "0xF54FA8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000BBA")]
	[Address(RVA = "0xF550A0", Offset = "0xF550A0", VA = "0xF550A0")]
	private void OnMatchComplete(RangeMatch match)
	{
	}

	[Token(Token = "0x6000BBB")]
	[Address(RVA = "0xF4BF5C", Offset = "0xF4BF5C", VA = "0xF4BF5C")]
	public void Clear()
	{
	}

	[Token(Token = "0x6000BBC")]
	[Address(RVA = "0xF550F4", Offset = "0xF550F4", VA = "0xF550F4")]
	public void GameOver()
	{
	}

	[Token(Token = "0x6000BBE")]
	[Address(RVA = "0xF551B0", Offset = "0xF551B0", VA = "0xF551B0")]
	public RangeMessages()
	{
	}
}
[Token(Token = "0x20001A6")]
public class RangeTarget : MonoBehaviour
{
	[Token(Token = "0x20001A7")]
	public enum HitType
	{
		[Token(Token = "0x4000A17")]
		None,
		[Token(Token = "0x4000A18")]
		Ring,
		[Token(Token = "0x4000A19")]
		Bullseye
	}

	[Serializable]
	[Token(Token = "0x20001A8")]
	public class Rings
	{
		[Token(Token = "0x4000A1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float inner;

		[Token(Token = "0x4000A1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float outer;

		[Token(Token = "0x6000BEC")]
		[Address(RVA = "0xF56E3C", Offset = "0xF56E3C", VA = "0xF56E3C")]
		public Rings()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20001A9")]
	public class Effect
	{
		[Token(Token = "0x4000A1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject bullseye;

		[Token(Token = "0x4000A1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject ring;

		[Token(Token = "0x6000BED")]
		[Address(RVA = "0xF56E50", Offset = "0xF56E50", VA = "0xF56E50")]
		public Effect()
		{
		}
	}

	[Token(Token = "0x20001AA")]
	[CompilerGenerated]
	private sealed class <AnimateOn>d__44 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RangeTarget <>4__this;

		[Token(Token = "0x4000A21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float duration;

		[Token(Token = "0x4000A22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <t>5__2;

		[Token(Token = "0x170001A6")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000BF1")]
			[Address(RVA = "0xF56F48", Offset = "0xF56F48", VA = "0xF56F48", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001A7")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000BF3")]
			[Address(RVA = "0xF56F90", Offset = "0xF56F90", VA = "0xF56F90", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000BEE")]
		[Address(RVA = "0xF557F0", Offset = "0xF557F0", VA = "0xF557F0")]
		[DebuggerHidden]
		public <AnimateOn>d__44(int <>1__state)
		{
		}

		[Token(Token = "0x6000BEF")]
		[Address(RVA = "0xF56E58", Offset = "0xF56E58", VA = "0xF56E58", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000BF0")]
		[Address(RVA = "0xF56E5C", Offset = "0xF56E5C", VA = "0xF56E5C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000BF2")]
		[Address(RVA = "0xF56F50", Offset = "0xF56F50", VA = "0xF56F50", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001AB")]
	[CompilerGenerated]
	private sealed class <AnimateOff>d__45 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RangeTarget <>4__this;

		[Token(Token = "0x4000A26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float duration;

		[Token(Token = "0x4000A27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <current>5__2;

		[Token(Token = "0x4000A28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <t>5__3;

		[Token(Token = "0x170001A8")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000BF7")]
			[Address(RVA = "0xF570BC", Offset = "0xF570BC", VA = "0xF570BC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001A9")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000BF9")]
			[Address(RVA = "0xF57104", Offset = "0xF57104", VA = "0xF57104", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000BF4")]
		[Address(RVA = "0xF55818", Offset = "0xF55818", VA = "0xF55818")]
		[DebuggerHidden]
		public <AnimateOff>d__45(int <>1__state)
		{
		}

		[Token(Token = "0x6000BF5")]
		[Address(RVA = "0xF56F98", Offset = "0xF56F98", VA = "0xF56F98", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000BF6")]
		[Address(RVA = "0xF56F9C", Offset = "0xF56F9C", VA = "0xF56F9C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000BF8")]
		[Address(RVA = "0xF570C4", Offset = "0xF570C4", VA = "0xF570C4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001AC")]
	[CompilerGenerated]
	private sealed class <PointsEffects>d__52 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RangeTarget <>4__this;

		[Token(Token = "0x4000A2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int _points;

		[Token(Token = "0x4000A2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public HitType hitType;

		[Token(Token = "0x4000A2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector3 hitPosition;

		[Token(Token = "0x4000A2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private GameObject <_flash>5__2;

		[Token(Token = "0x4000A30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vector3 <start>5__3;

		[Token(Token = "0x4000A31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Vector3 <end>5__4;

		[Token(Token = "0x4000A32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float <duration>5__5;

		[Token(Token = "0x4000A33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float <t>5__6;

		[Token(Token = "0x170001AA")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000BFD")]
			[Address(RVA = "0xF57550", Offset = "0xF57550", VA = "0xF57550", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001AB")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000BFF")]
			[Address(RVA = "0xF57598", Offset = "0xF57598", VA = "0xF57598", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000BFA")]
		[Address(RVA = "0xF55D30", Offset = "0xF55D30", VA = "0xF55D30")]
		[DebuggerHidden]
		public <PointsEffects>d__52(int <>1__state)
		{
		}

		[Token(Token = "0x6000BFB")]
		[Address(RVA = "0xF5710C", Offset = "0xF5710C", VA = "0xF5710C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000BFC")]
		[Address(RVA = "0xF57110", Offset = "0xF57110", VA = "0xF57110", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000BFE")]
		[Address(RVA = "0xF57558", Offset = "0xF57558", VA = "0xF57558", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000A05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int value;

	[Token(Token = "0x4000A06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int bullsEyeMultiplier;

	[Token(Token = "0x4000A07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Rings rings;

	[Token(Token = "0x4000A08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Effect flash;

	[Token(Token = "0x4000A09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Effect burst;

	[Token(Token = "0x4000A0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Queue<RangeTargetEffect> burst_rings;

	[Token(Token = "0x4000A0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Queue<RangeTargetEffect> burst_bullseyes;

	[Token(Token = "0x4000A0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<RangeTargetEffect> burst_created;

	[Token(Token = "0x4000A0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject points;

	[Token(Token = "0x4000A0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public TextMeshPro pointsText;

	[Token(Token = "0x4000A0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Animation pointsAnim;

	[Token(Token = "0x4000A10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float startScale;

	[Token(Token = "0x4000A11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private float cooldownTime;

	[Token(Token = "0x4000A14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public MultiplayerAvatar avatar;

	[Token(Token = "0x4000A15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private BoxCollider _boxCollider;

	[Token(Token = "0x1700019A")]
	public int id
	{
		[Token(Token = "0x6000BC1")]
		[Address(RVA = "0xF55318", Offset = "0xF55318", VA = "0xF55318")]
		[CompilerGenerated]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000BC2")]
		[Address(RVA = "0xF55320", Offset = "0xF55320", VA = "0xF55320")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x1700019B")]
	public float cooldown
	{
		[Token(Token = "0x6000BC3")]
		[Address(RVA = "0xF55328", Offset = "0xF55328", VA = "0xF55328")]
		[CompilerGenerated]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000BC4")]
		[Address(RVA = "0xF55330", Offset = "0xF55330", VA = "0xF55330")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x1700019C")]
	public bool showing
	{
		[Token(Token = "0x6000BC5")]
		[Address(RVA = "0xF55338", Offset = "0xF55338", VA = "0xF55338")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000BC6")]
		[Address(RVA = "0xF55340", Offset = "0xF55340", VA = "0xF55340")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x1700019D")]
	public bool lostTracking
	{
		[Token(Token = "0x6000BCA")]
		[Address(RVA = "0xF55490", Offset = "0xF55490", VA = "0xF55490")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700019E")]
	public Transform trackingTransform
	{
		[Token(Token = "0x6000BCB")]
		[Address(RVA = "0xF55540", Offset = "0xF55540", VA = "0xF55540")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700019F")]
	public bool trackingGeoActive
	{
		[Token(Token = "0x6000BCC")]
		[Address(RVA = "0xF55570", Offset = "0xF55570", VA = "0xF55570")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170001A0")]
	public BoxCollider boxCollider
	{
		[Token(Token = "0x6000BE2")]
		[Address(RVA = "0xF566B8", Offset = "0xF566B8", VA = "0xF566B8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001A1")]
	public float scale
	{
		[Token(Token = "0x6000BE3")]
		[Address(RVA = "0xF5674C", Offset = "0xF5674C", VA = "0xF5674C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000BE4")]
		[Address(RVA = "0xF5676C", Offset = "0xF5676C", VA = "0xF5676C")]
		set
		{
		}
	}

	[Token(Token = "0x170001A2")]
	public float distanceToCamera
	{
		[Token(Token = "0x6000BE5")]
		[Address(RVA = "0xF567EC", Offset = "0xF567EC", VA = "0xF567EC")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170001A3")]
	public float distanceToRange
	{
		[Token(Token = "0x6000BE6")]
		[Address(RVA = "0xF569AC", Offset = "0xF569AC", VA = "0xF569AC")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170001A4")]
	public bool activeInHierarchy
	{
		[Token(Token = "0x6000BE7")]
		[Address(RVA = "0xF55B20", Offset = "0xF55B20", VA = "0xF55B20")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170001A5")]
	public bool isAnimating
	{
		[Token(Token = "0x6000BE9")]
		[Address(RVA = "0xF4D668", Offset = "0xF4D668", VA = "0xF4D668")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1400002B")]
	public event Action<RangeTarget, RangeBall, int> OnHit
	{
		[Token(Token = "0x6000BBF")]
		[Address(RVA = "0xF551B8", Offset = "0xF551B8", VA = "0xF551B8")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000BC0")]
		[Address(RVA = "0xF55268", Offset = "0xF55268", VA = "0xF55268")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6000BC7")]
	[Address(RVA = "0xF5534C", Offset = "0xF5534C", VA = "0xF5534C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000BC8")]
	[Address(RVA = "0xF553CC", Offset = "0xF553CC", VA = "0xF553CC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000BC9")]
	[Address(RVA = "0xF55404", Offset = "0xF55404", VA = "0xF55404")]
	public void SetScale(float s)
	{
	}

	[Token(Token = "0x6000BCD")]
	[Address(RVA = "0xF55614", Offset = "0xF55614", VA = "0xF55614")]
	public void Show(float duration = 0.25f)
	{
	}

	[Token(Token = "0x6000BCE")]
	[Address(RVA = "0xF55704", Offset = "0xF55704", VA = "0xF55704")]
	public void Hide(float duration = 0.25f)
	{
	}

	[Token(Token = "0x6000BCF")]
	[Address(RVA = "0xF5568C", Offset = "0xF5568C", VA = "0xF5568C")]
	[IteratorStateMachine(typeof(<AnimateOn>d__44))]
	private IEnumerator AnimateOn(float duration = 0.25f)
	{
		return null;
	}

	[Token(Token = "0x6000BD0")]
	[Address(RVA = "0xF55778", Offset = "0xF55778", VA = "0xF55778")]
	[IteratorStateMachine(typeof(<AnimateOff>d__45))]
	private IEnumerator AnimateOff(float duration = 0.25f)
	{
		return null;
	}

	[Token(Token = "0x6000BD1")]
	[Address(RVA = "0xF55840", Offset = "0xF55840", VA = "0xF55840")]
	private void Update()
	{
	}

	[Token(Token = "0x6000BD2")]
	[Address(RVA = "0xF5586C", Offset = "0xF5586C", VA = "0xF5586C")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000BD3")]
	[Address(RVA = "0xF4FF08", Offset = "0xF4FF08", VA = "0xF4FF08")]
	public void OnTriggerEnter(RangeBall ball)
	{
	}

	[Token(Token = "0x6000BD4")]
	[Address(RVA = "0xF55918", Offset = "0xF55918", VA = "0xF55918")]
	public HitType GetHitTypeByDistance(RangeBall ball)
	{
		return default(HitType);
	}

	[Token(Token = "0x6000BD5")]
	[Address(RVA = "0xF4FE3C", Offset = "0xF4FE3C", VA = "0xF4FE3C")]
	public bool IsCornerHit(RangeBall ball)
	{
		return default(bool);
	}

	[Token(Token = "0x6000BD6")]
	[Address(RVA = "0xF559F8", Offset = "0xF559F8", VA = "0xF559F8")]
	private void OnBallHit(RangeBall ball, HitType hitType)
	{
	}

	[Token(Token = "0x6000BD7")]
	[Address(RVA = "0xF55B40", Offset = "0xF55B40", VA = "0xF55B40")]
	[IteratorStateMachine(typeof(<PointsEffects>d__52))]
	private IEnumerator PointsEffects(Vector3 hitPosition, HitType hitType, int _points)
	{
		return null;
	}

	[Token(Token = "0x6000BD8")]
	[Address(RVA = "0xF55BE0", Offset = "0xF55BE0", VA = "0xF55BE0")]
	private RangeTargetEffect GetOrCreateBurst(HitType hitType)
	{
		return null;
	}

	[Token(Token = "0x6000BD9")]
	[Address(RVA = "0xF55EDC", Offset = "0xF55EDC", VA = "0xF55EDC")]
	private RangeTargetEffect CreateBurstRing()
	{
		return null;
	}

	[Token(Token = "0x6000BDA")]
	[Address(RVA = "0xF56210", Offset = "0xF56210", VA = "0xF56210")]
	private void OnBurstRingTimeout(RangeTargetEffect effect)
	{
	}

	[Token(Token = "0x6000BDB")]
	[Address(RVA = "0xF55D58", Offset = "0xF55D58", VA = "0xF55D58")]
	private RangeTargetEffect CreateBurstBullseye()
	{
		return null;
	}

	[Token(Token = "0x6000BDC")]
	[Address(RVA = "0xF56268", Offset = "0xF56268", VA = "0xF56268")]
	private void OnBurstBullseyeTimeout(RangeTargetEffect effect)
	{
	}

	[Token(Token = "0x6000BDD")]
	[Address(RVA = "0xF553E4", Offset = "0xF553E4", VA = "0xF553E4")]
	public void DeactivateEffects()
	{
	}

	[Token(Token = "0x6000BDE")]
	[Address(RVA = "0xF562C0", Offset = "0xF562C0", VA = "0xF562C0")]
	public void DeactivateBursts()
	{
	}

	[Token(Token = "0x6000BDF")]
	[Address(RVA = "0xF5650C", Offset = "0xF5650C", VA = "0xF5650C")]
	public void DeactivatePoints()
	{
	}

	[Token(Token = "0x6000BE0")]
	[Address(RVA = "0xF564C4", Offset = "0xF564C4", VA = "0xF564C4")]
	public void DeactivatetFlashes()
	{
	}

	[Token(Token = "0x6000BE1")]
	[Address(RVA = "0xF56594", Offset = "0xF56594", VA = "0xF56594")]
	public void SetColliderThickness(float value)
	{
	}

	[Token(Token = "0x6000BE8")]
	[Address(RVA = "0xF56A3C", Offset = "0xF56A3C", VA = "0xF56A3C")]
	public Vector3 InverseLookTarget()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000BEA")]
	[Address(RVA = "0xF56B20", Offset = "0xF56B20", VA = "0xF56B20")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x6000BEB")]
	[Address(RVA = "0xF56C54", Offset = "0xF56C54", VA = "0xF56C54")]
	public RangeTarget()
	{
	}
}
[Token(Token = "0x20001AE")]
public class RangeTargetEffect : MonoBehaviour
{
	[Token(Token = "0x4000A37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public RangeTarget.HitType hitType;

	[Token(Token = "0x4000A38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float timeoutTime;

	[Token(Token = "0x170001AC")]
	public float timeout
	{
		[Token(Token = "0x6000C05")]
		[Address(RVA = "0xF576C0", Offset = "0xF576C0", VA = "0xF576C0")]
		[CompilerGenerated]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000C06")]
		[Address(RVA = "0xF576C8", Offset = "0xF576C8", VA = "0xF576C8")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x1400002C")]
	public event Action<RangeTargetEffect> OnTimeout
	{
		[Token(Token = "0x6000C03")]
		[Address(RVA = "0xF56160", Offset = "0xF56160", VA = "0xF56160")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000C04")]
		[Address(RVA = "0xF57610", Offset = "0xF57610", VA = "0xF57610")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6000C07")]
	[Address(RVA = "0xF56060", Offset = "0xF56060", VA = "0xF56060")]
	public void Init(GameObject prefab)
	{
	}

	[Token(Token = "0x6000C08")]
	[Address(RVA = "0xF55C88", Offset = "0xF55C88", VA = "0xF55C88")]
	public void Activate(Vector3 ballPosition)
	{
	}

	[Token(Token = "0x6000C09")]
	[Address(RVA = "0xF5654C", Offset = "0xF5654C", VA = "0xF5654C")]
	public void Deactivate()
	{
	}

	[Token(Token = "0x6000C0A")]
	[Address(RVA = "0xF576D0", Offset = "0xF576D0", VA = "0xF576D0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C0B")]
	[Address(RVA = "0xF57714", Offset = "0xF57714", VA = "0xF57714")]
	public RangeTargetEffect()
	{
	}
}
[Token(Token = "0x20001B0")]
public class RangeTargets : MonoBehaviour
{
	[Token(Token = "0x20001B2")]
	[CompilerGenerated]
	private sealed class <AnimateOn>d__42 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RangeTargets <>4__this;

		[Token(Token = "0x4000A53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <i>5__2;

		[Token(Token = "0x4000A54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <sweep>5__3;

		[Token(Token = "0x4000A55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <max>5__4;

		[Token(Token = "0x4000A56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private RangeTarget <target>5__5;

		[Token(Token = "0x170001B1")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C30")]
			[Address(RVA = "0xF58AF0", Offset = "0xF58AF0", VA = "0xF58AF0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001B2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C32")]
			[Address(RVA = "0xF58B38", Offset = "0xF58B38", VA = "0xF58B38", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C2D")]
		[Address(RVA = "0xF58574", Offset = "0xF58574", VA = "0xF58574")]
		[DebuggerHidden]
		public <AnimateOn>d__42(int <>1__state)
		{
		}

		[Token(Token = "0x6000C2E")]
		[Address(RVA = "0xF58814", Offset = "0xF58814", VA = "0xF58814", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C2F")]
		[Address(RVA = "0xF58818", Offset = "0xF58818", VA = "0xF58818", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C31")]
		[Address(RVA = "0xF58AF8", Offset = "0xF58AF8", VA = "0xF58AF8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001B3")]
	[CompilerGenerated]
	private sealed class <AnimateOff>d__43 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RangeTargets <>4__this;

		[Token(Token = "0x4000A5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <i>5__2;

		[Token(Token = "0x4000A5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <sweep>5__3;

		[Token(Token = "0x4000A5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private RangeTarget <target>5__4;

		[Token(Token = "0x170001B3")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C36")]
			[Address(RVA = "0xF58E04", Offset = "0xF58E04", VA = "0xF58E04", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001B4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C38")]
			[Address(RVA = "0xF58E4C", Offset = "0xF58E4C", VA = "0xF58E4C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C33")]
		[Address(RVA = "0xF5859C", Offset = "0xF5859C", VA = "0xF5859C")]
		[DebuggerHidden]
		public <AnimateOff>d__43(int <>1__state)
		{
		}

		[Token(Token = "0x6000C34")]
		[Address(RVA = "0xF58B40", Offset = "0xF58B40", VA = "0xF58B40", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C35")]
		[Address(RVA = "0xF58B44", Offset = "0xF58B44", VA = "0xF58B44", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C37")]
		[Address(RVA = "0xF58E0C", Offset = "0xF58E0C", VA = "0xF58E0C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000A3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<RangeTarget> tracked;

	[Token(Token = "0x4000A40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Queue<RangeTarget> pool;

	[Token(Token = "0x4000A41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject prefab;

	[Token(Token = "0x4000A43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[Header("Static Target")]
	public float animateSweepStepTime;

	[Token(Token = "0x4000A44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float animateScaleDuration;

	[Token(Token = "0x4000A45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[Header("TRACKING")]
	public bool trackPlayers;

	[Token(Token = "0x4000A46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[Header("Tracked Target")]
	public float trackedTargetScale;

	[Token(Token = "0x4000A47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float trackedTargetOffset;

	[Token(Token = "0x4000A48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float trackedTargetThickness;

	[Token(Token = "0x4000A49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[Header("Tracking Space")]
	public float trackSpaceNear;

	[Token(Token = "0x4000A4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float trackSpaceFar;

	[Token(Token = "0x4000A4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float trackSpaceFloor;

	[Token(Token = "0x170001AD")]
	public RangeTarget[] targets
	{
		[Token(Token = "0x6000C11")]
		[Address(RVA = "0xF57924", Offset = "0xF57924", VA = "0xF57924")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000C12")]
		[Address(RVA = "0xF5792C", Offset = "0xF5792C", VA = "0xF5792C")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x170001AE")]
	public List<RangeTarget> sorted
	{
		[Token(Token = "0x6000C13")]
		[Address(RVA = "0xF57934", Offset = "0xF57934", VA = "0xF57934")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000C14")]
		[Address(RVA = "0xF5793C", Offset = "0xF5793C", VA = "0xF5793C")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x170001AF")]
	public bool visible
	{
		[Token(Token = "0x6000C15")]
		[Address(RVA = "0xF57944", Offset = "0xF57944", VA = "0xF57944")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000C16")]
		[Address(RVA = "0xF5794C", Offset = "0xF5794C", VA = "0xF5794C")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x170001B0")]
	public Vector3 camera
	{
		[Token(Token = "0x6000C21")]
		[Address(RVA = "0xF58264", Offset = "0xF58264", VA = "0xF58264")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x1400002D")]
	public event Action<RangeTarget, RangeBall, int> OnHit
	{
		[Token(Token = "0x6000C0F")]
		[Address(RVA = "0xF4D7F4", Offset = "0xF4D7F4", VA = "0xF4D7F4")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000C10")]
		[Address(RVA = "0xF57874", Offset = "0xF57874", VA = "0xF57874")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6000C17")]
	[Address(RVA = "0xF57958", Offset = "0xF57958", VA = "0xF57958")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000C18")]
	[Address(RVA = "0xF57A80", Offset = "0xF57A80", VA = "0xF57A80")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000C19")]
	[Address(RVA = "0xF57B38", Offset = "0xF57B38", VA = "0xF57B38")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000C1A")]
	[Address(RVA = "0xF57BF0", Offset = "0xF57BF0", VA = "0xF57BF0")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000C1B")]
	[Address(RVA = "0xF57F2C", Offset = "0xF57F2C", VA = "0xF57F2C")]
	private void OnAvatarCreated(MultiplayerAvatar avatar)
	{
	}

	[Token(Token = "0x6000C1C")]
	[Address(RVA = "0xF57F74", Offset = "0xF57F74", VA = "0xF57F74")]
	private RangeTarget AddTrackedTarget(MultiplayerAvatar avatar)
	{
		return null;
	}

	[Token(Token = "0x6000C1D")]
	[Address(RVA = "0xF58090", Offset = "0xF58090", VA = "0xF58090")]
	private RangeTarget CreateTrackedTarget()
	{
		return null;
	}

	[Token(Token = "0x6000C1E")]
	[Address(RVA = "0xF57C00", Offset = "0xF57C00", VA = "0xF57C00")]
	public void UpdateTrackedTargets()
	{
	}

	[Token(Token = "0x6000C1F")]
	[Address(RVA = "0xF58354", Offset = "0xF58354", VA = "0xF58354")]
	private int TrackedTargetPoints(Vector3 local)
	{
		return default(int);
	}

	[Token(Token = "0x6000C20")]
	[Address(RVA = "0xF583D0", Offset = "0xF583D0", VA = "0xF583D0")]
	private bool InTrackingSpace(Vector3 local)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C22")]
	[Address(RVA = "0xF58480", Offset = "0xF58480", VA = "0xF58480")]
	private void OnTargetHit(RangeTarget target, RangeBall ball, int points)
	{
	}

	[Token(Token = "0x6000C23")]
	[Address(RVA = "0xF4D370", Offset = "0xF4D370", VA = "0xF4D370")]
	public void Show()
	{
	}

	[Token(Token = "0x6000C24")]
	[Address(RVA = "0xF4D3B4", Offset = "0xF4D3B4", VA = "0xF4D3B4")]
	public void Hide()
	{
	}

	[Token(Token = "0x6000C25")]
	[Address(RVA = "0xF584A4", Offset = "0xF584A4", VA = "0xF584A4")]
	[IteratorStateMachine(typeof(<AnimateOn>d__42))]
	public IEnumerator AnimateOn(List<RangeTarget> list)
	{
		return null;
	}

	[Token(Token = "0x6000C26")]
	[Address(RVA = "0xF5850C", Offset = "0xF5850C", VA = "0xF5850C")]
	[IteratorStateMachine(typeof(<AnimateOff>d__43))]
	public IEnumerator AnimateOff(List<RangeTarget> list)
	{
		return null;
	}

	[Token(Token = "0x6000C27")]
	[Address(RVA = "0xF585C4", Offset = "0xF585C4", VA = "0xF585C4")]
	public RangeTargets()
	{
	}
}
[Token(Token = "0x20001B4")]
public class RangeTee : MonoBehaviour
{
	[Token(Token = "0x4000A5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform marker;

	[Token(Token = "0x4000A60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject menus;

	[Token(Token = "0x4000A61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject open;

	[Token(Token = "0x4000A62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public RangeMenu left;

	[Token(Token = "0x4000A63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public RangeMenu right;

	[Token(Token = "0x4000A66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Collider player;

	[Token(Token = "0x170001B5")]
	public RangeMenu activeMenu
	{
		[Token(Token = "0x6000C3D")]
		[Address(RVA = "0xF59114", Offset = "0xF59114", VA = "0xF59114")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000C3E")]
		[Address(RVA = "0xF5911C", Offset = "0xF5911C", VA = "0xF5911C")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x170001B6")]
	public int id
	{
		[Token(Token = "0x6000C3F")]
		[Address(RVA = "0xF59124", Offset = "0xF59124", VA = "0xF59124")]
		[CompilerGenerated]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000C40")]
		[Address(RVA = "0xF5912C", Offset = "0xF5912C", VA = "0xF5912C")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x170001B7")]
	private bool CanUpdateMenus
	{
		[Token(Token = "0x6000C47")]
		[Address(RVA = "0xF59408", Offset = "0xF59408", VA = "0xF59408")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170001B8")]
	public bool IsOpen
	{
		[Token(Token = "0x6000C48")]
		[Address(RVA = "0xF59510", Offset = "0xF59510", VA = "0xF59510")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000C49")]
		[Address(RVA = "0xF5952C", Offset = "0xF5952C", VA = "0xF5952C")]
		set
		{
		}
	}

	[Token(Token = "0x1400002E")]
	public event Action<RangeTee> OnEnter
	{
		[Token(Token = "0x6000C39")]
		[Address(RVA = "0xF58E54", Offset = "0xF58E54", VA = "0xF58E54")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000C3A")]
		[Address(RVA = "0xF58F04", Offset = "0xF58F04", VA = "0xF58F04")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x1400002F")]
	public event Action<RangeTee> OnExit
	{
		[Token(Token = "0x6000C3B")]
		[Address(RVA = "0xF58FB4", Offset = "0xF58FB4", VA = "0xF58FB4")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000C3C")]
		[Address(RVA = "0xF59064", Offset = "0xF59064", VA = "0xF59064")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6000C41")]
	[Address(RVA = "0xF59134", Offset = "0xF59134", VA = "0xF59134")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000C42")]
	[Address(RVA = "0xF59168", Offset = "0xF59168", VA = "0xF59168")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C43")]
	[Address(RVA = "0xF59214", Offset = "0xF59214", VA = "0xF59214")]
	public void HideMenu()
	{
	}

	[Token(Token = "0x6000C44")]
	[Address(RVA = "0xF59278", Offset = "0xF59278", VA = "0xF59278")]
	public void ShowMenu()
	{
	}

	[Token(Token = "0x6000C45")]
	[Address(RVA = "0xF593D4", Offset = "0xF593D4", VA = "0xF593D4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C46")]
	[Address(RVA = "0xF592A4", Offset = "0xF592A4", VA = "0xF592A4")]
	public void UpdateActiveMenu()
	{
	}

	[Token(Token = "0x6000C4A")]
	[Address(RVA = "0xF591E8", Offset = "0xF591E8", VA = "0xF591E8")]
	public void HideMarker()
	{
	}

	[Token(Token = "0x6000C4B")]
	[Address(RVA = "0xF5954C", Offset = "0xF5954C", VA = "0xF5954C")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000C4C")]
	[Address(RVA = "0xF59608", Offset = "0xF59608", VA = "0xF59608")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000C4D")]
	[Address(RVA = "0xF596BC", Offset = "0xF596BC", VA = "0xF596BC")]
	public RangeTee()
	{
	}
}
[Token(Token = "0x20001B6")]
public class RangeTees : MonoBehaviourPunCallbacks
{
	[Token(Token = "0x4000A6D")]
	public const string prop_Tee = "rt_t";

	[Token(Token = "0x170001B9")]
	public RangeTee[] tees
	{
		[Token(Token = "0x6000C56")]
		[Address(RVA = "0xF599F8", Offset = "0xF599F8", VA = "0xF599F8")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000C57")]
		[Address(RVA = "0xF59A00", Offset = "0xF59A00", VA = "0xF59A00")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x170001BA")]
	public HashSet<int> occupied
	{
		[Token(Token = "0x6000C58")]
		[Address(RVA = "0xF59A08", Offset = "0xF59A08", VA = "0xF59A08")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000C59")]
		[Address(RVA = "0xF59A10", Offset = "0xF59A10", VA = "0xF59A10")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x170001BB")]
	public bool HasOpenTee
	{
		[Token(Token = "0x6000C5E")]
		[Address(RVA = "0xF59CAC", Offset = "0xF59CAC", VA = "0xF59CAC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170001BC")]
	public RangeTee FirstTee
	{
		[Token(Token = "0x6000C61")]
		[Address(RVA = "0xF59E34", Offset = "0xF59E34", VA = "0xF59E34")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001BD")]
	public Range range
	{
		[Token(Token = "0x6000C6D")]
		[Address(RVA = "0xF59C14", Offset = "0xF59C14", VA = "0xF59C14")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001BE")]
	public Photon.Realtime.Player localPlayer
	{
		[Token(Token = "0x6000C6E")]
		[Address(RVA = "0xF5A380", Offset = "0xF5A380", VA = "0xF5A380")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001BF")]
	public Photon.Realtime.Player[] playerList
	{
		[Token(Token = "0x6000C6F")]
		[Address(RVA = "0xF5A234", Offset = "0xF5A234", VA = "0xF5A234")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x14000030")]
	public event Action<RangeTee> OnEnter
	{
		[Token(Token = "0x6000C52")]
		[Address(RVA = "0xF4D694", Offset = "0xF4D694", VA = "0xF4D694")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000C53")]
		[Address(RVA = "0xF59898", Offset = "0xF59898", VA = "0xF59898")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000031")]
	public event Action<RangeTee> OnExit
	{
		[Token(Token = "0x6000C54")]
		[Address(RVA = "0xF4D744", Offset = "0xF4D744", VA = "0xF4D744")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000C55")]
		[Address(RVA = "0xF59948", Offset = "0xF59948", VA = "0xF59948")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6000C5A")]
	[Address(RVA = "0xF59A18", Offset = "0xF59A18", VA = "0xF59A18")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000C5B")]
	[Address(RVA = "0xF59B5C", Offset = "0xF59B5C", VA = "0xF59B5C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C5C")]
	[Address(RVA = "0xF4D3F4", Offset = "0xF4D3F4", VA = "0xF4D3F4")]
	public void HideMenus()
	{
	}

	[Token(Token = "0x6000C5D")]
	[Address(RVA = "0xF59C54", Offset = "0xF59C54", VA = "0xF59C54")]
	public bool IsOccupied(int teeId)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C5F")]
	[Address(RVA = "0xF59D08", Offset = "0xF59D08", VA = "0xF59D08")]
	public RangeTee FindOpenTee()
	{
		return null;
	}

	[Token(Token = "0x6000C60")]
	[Address(RVA = "0xF59D8C", Offset = "0xF59D8C", VA = "0xF59D8C")]
	public void ClearOccupied()
	{
	}

	[Token(Token = "0x6000C62")]
	[Address(RVA = "0xF59E5C", Offset = "0xF59E5C", VA = "0xF59E5C")]
	private void OnEnterTee(RangeTee tee)
	{
	}

	[Token(Token = "0x6000C63")]
	[Address(RVA = "0xF5A084", Offset = "0xF5A084", VA = "0xF5A084")]
	private void OnExitTee(RangeTee tee)
	{
	}

	[Token(Token = "0x6000C64")]
	[Address(RVA = "0xF5A0A8", Offset = "0xF5A0A8", VA = "0xF5A0A8")]
	private void OnExitRange()
	{
	}

	[Token(Token = "0x6000C65")]
	[Address(RVA = "0xF5A0C4", Offset = "0xF5A0C4", VA = "0xF5A0C4", Slot = "47")]
	public override void OnPlayerPropertiesUpdate(Photon.Realtime.Player player, ExitGames.Client.Photon.Hashtable changedProps)
	{
	}

	[Token(Token = "0x6000C66")]
	[Address(RVA = "0xF5A148", Offset = "0xF5A148", VA = "0xF5A148", Slot = "41")]
	public override void OnJoinedRoom()
	{
	}

	[Token(Token = "0x6000C67")]
	[Address(RVA = "0xF5A14C", Offset = "0xF5A14C", VA = "0xF5A14C", Slot = "31")]
	public override void OnLeftRoom()
	{
	}

	[Token(Token = "0x6000C68")]
	[Address(RVA = "0xF5A150", Offset = "0xF5A150", VA = "0xF5A150", Slot = "42")]
	public override void OnPlayerEnteredRoom(Photon.Realtime.Player p)
	{
	}

	[Token(Token = "0x6000C69")]
	[Address(RVA = "0xF5A154", Offset = "0xF5A154", VA = "0xF5A154", Slot = "43")]
	public override void OnPlayerLeftRoom(Photon.Realtime.Player p)
	{
	}

	[Token(Token = "0x6000C6A")]
	[Address(RVA = "0xF59FB8", Offset = "0xF59FB8", VA = "0xF59FB8")]
	public void UpdateOccupied()
	{
	}

	[Token(Token = "0x6000C6B")]
	[Address(RVA = "0xF5A158", Offset = "0xF5A158", VA = "0xF5A158")]
	private void AddOccupied()
	{
	}

	[Token(Token = "0x6000C6C")]
	[Address(RVA = "0xF59EA8", Offset = "0xF59EA8", VA = "0xF59EA8")]
	private void SetPlayerTeeId(int teeId)
	{
	}

	[Token(Token = "0x6000C70")]
	[Address(RVA = "0xF5A284", Offset = "0xF5A284", VA = "0xF5A284")]
	private int GetPlayerTeeId(Photon.Realtime.Player player)
	{
		return default(int);
	}

	[Token(Token = "0x6000C71")]
	[Address(RVA = "0xF5A350", Offset = "0xF5A350", VA = "0xF5A350")]
	private bool Valid(int teeId)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C72")]
	[Address(RVA = "0xF5A3D0", Offset = "0xF5A3D0", VA = "0xF5A3D0")]
	public RangeTees()
	{
	}
}
[Token(Token = "0x20001B8")]
public class RealtimeLightingSettings : MonoBehaviour
{
	[Token(Token = "0x4000A72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float realtimeAmbientIntensity;

	[Token(Token = "0x4000A73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool applyIntensityToCurrentColor;

	[Token(Token = "0x4000A74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[ColorUsage(true, true)]
	public Color realtimeAmbientColor1;

	[Token(Token = "0x4000A75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[ColorUsage(true, true)]
	public Color realtimeAmbientColor2;

	[Token(Token = "0x4000A76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[ColorUsage(true, true)]
	public Color realtimeAmbientColor3;

	[Token(Token = "0x6000C77")]
	[Address(RVA = "0xF5A5E8", Offset = "0xF5A5E8", VA = "0xF5A5E8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000C78")]
	[Address(RVA = "0xF5A70C", Offset = "0xF5A70C", VA = "0xF5A70C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C79")]
	[Address(RVA = "0xF5A710", Offset = "0xF5A710", VA = "0xF5A710")]
	public RealtimeLightingSettings()
	{
	}
}
[Token(Token = "0x20001B9")]
public class ReflectionViewOffset : MonoBehaviour
{
	[Token(Token = "0x4000A77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Transform playerTransform;

	[Token(Token = "0x4000A78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3 offsetDivision1;

	[Token(Token = "0x4000A79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Vector3 offsetDivision2;

	[Token(Token = "0x4000A7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Vector3 targetAngle;

	[Token(Token = "0x4000A7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float cutoffThreshold;

	[Token(Token = "0x4000A7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float threshholdRange;

	[Token(Token = "0x6000C7A")]
	[Address(RVA = "0xF5A734", Offset = "0xF5A734", VA = "0xF5A734")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C7B")]
	[Address(RVA = "0xF5A79C", Offset = "0xF5A79C", VA = "0xF5A79C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C7C")]
	[Address(RVA = "0xF5AB60", Offset = "0xF5AB60", VA = "0xF5AB60")]
	public ReflectionViewOffset()
	{
	}
}
[Token(Token = "0x20001BA")]
public static class ExtensionMethods
{
	[Token(Token = "0x6000C7D")]
	[Address(RVA = "0xF5AB44", Offset = "0xF5AB44", VA = "0xF5AB44")]
	public static float Remap(this float value, float from1, float to1, float from2, float to2)
	{
		return default(float);
	}
}
[Token(Token = "0x20001BB")]
[ExecuteInEditMode]
public class ReplaceMaterials : MonoBehaviour
{
	[Token(Token = "0x4000A7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material oldMaterialToReplace;

	[Token(Token = "0x4000A7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material newMaterial;

	[Token(Token = "0x4000A7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool newMat;

	[Token(Token = "0x4000A80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool oldMat;

	[Token(Token = "0x6000C7E")]
	[Address(RVA = "0xF5AB90", Offset = "0xF5AB90", VA = "0xF5AB90")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C7F")]
	[Address(RVA = "0xF5AD48", Offset = "0xF5AD48", VA = "0xF5AD48")]
	public ReplaceMaterials()
	{
	}
}
[Token(Token = "0x20001BC")]
public class RestartDemo : MonoBehaviour
{
	[Token(Token = "0x20001BD")]
	[CompilerGenerated]
	private sealed class <Restart>d__1 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x170001C0")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C86")]
			[Address(RVA = "0xF5AF48", Offset = "0xF5AF48", VA = "0xF5AF48", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001C1")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C88")]
			[Address(RVA = "0xF5AF90", Offset = "0xF5AF90", VA = "0xF5AF90", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C83")]
		[Address(RVA = "0xF5ADD0", Offset = "0xF5ADD0", VA = "0xF5ADD0")]
		[DebuggerHidden]
		public <Restart>d__1(int <>1__state)
		{
		}

		[Token(Token = "0x6000C84")]
		[Address(RVA = "0xF5AE00", Offset = "0xF5AE00", VA = "0xF5AE00", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C85")]
		[Address(RVA = "0xF5AE04", Offset = "0xF5AE04", VA = "0xF5AE04", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C87")]
		[Address(RVA = "0xF5AF50", Offset = "0xF5AF50", VA = "0xF5AF50", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x6000C80")]
	[Address(RVA = "0xF5AD50", Offset = "0xF5AD50", VA = "0xF5AD50")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C81")]
	[Address(RVA = "0xF5AD70", Offset = "0xF5AD70", VA = "0xF5AD70")]
	[IteratorStateMachine(typeof(<Restart>d__1))]
	private IEnumerator Restart()
	{
		return null;
	}

	[Token(Token = "0x6000C82")]
	[Address(RVA = "0xF5ADF8", Offset = "0xF5ADF8", VA = "0xF5ADF8")]
	public RestartDemo()
	{
	}
}
[Token(Token = "0x20001BE")]
public class RestoreDataButton : MonoBehaviour, IProfileActivatedHandler, IProfileHandler, IProfilesChangedHandler
{
	[Token(Token = "0x4000A83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] enableList;

	[Token(Token = "0x6000C89")]
	[Address(RVA = "0xF5AF98", Offset = "0xF5AF98", VA = "0xF5AF98")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x6000C8A")]
	[Address(RVA = "0xF5B0F0", Offset = "0xF5B0F0", VA = "0xF5B0F0")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x6000C8B")]
	[Address(RVA = "0xF5B148", Offset = "0xF5B148", VA = "0xF5B148", Slot = "4")]
	public void OnProfileActivated(ProfileData profile)
	{
	}

	[Token(Token = "0x6000C8C")]
	[Address(RVA = "0xF5B14C", Offset = "0xF5B14C", VA = "0xF5B14C", Slot = "5")]
	public void OnProfilesChanged(ProfileData[] profiles)
	{
	}

	[Token(Token = "0x6000C8D")]
	[Address(RVA = "0xF5B150", Offset = "0xF5B150", VA = "0xF5B150")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C8E")]
	[Address(RVA = "0xF5AFF8", Offset = "0xF5AFF8", VA = "0xF5AFF8")]
	private void Refresh()
	{
	}

	[Token(Token = "0x6000C8F")]
	[Address(RVA = "0xF5B154", Offset = "0xF5B154", VA = "0xF5B154")]
	public void RestoreData()
	{
	}

	[Token(Token = "0x6000C90")]
	[Address(RVA = "0xF5B2B8", Offset = "0xF5B2B8", VA = "0xF5B2B8")]
	public RestoreDataButton()
	{
	}
}
[Token(Token = "0x20001C0")]
public class Reticle : MonoBehaviour
{
	[Token(Token = "0x4000A86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private CanvasGroup reticle;

	[Token(Token = "0x4000A87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float fadeTime;

	[Token(Token = "0x6000C94")]
	[Address(RVA = "0xF5B37C", Offset = "0xF5B37C", VA = "0xF5B37C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C95")]
	[Address(RVA = "0xF5B3E8", Offset = "0xF5B3E8", VA = "0xF5B3E8")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000C96")]
	[Address(RVA = "0xF5B634", Offset = "0xF5B634", VA = "0xF5B634")]
	public Reticle()
	{
	}
}
[Token(Token = "0x20001C1")]
public class RoomNameInput : MonoBehaviour
{
	[Token(Token = "0x6000C97")]
	[Address(RVA = "0xF5B644", Offset = "0xF5B644", VA = "0xF5B644")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C98")]
	[Address(RVA = "0xF5B648", Offset = "0xF5B648", VA = "0xF5B648")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C99")]
	[Address(RVA = "0xF5B64C", Offset = "0xF5B64C", VA = "0xF5B64C")]
	public RoomNameInput()
	{
	}
}
[Token(Token = "0x20001C2")]
public class RopeScaler : MonoBehaviour
{
	[Token(Token = "0x4000A88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform target;

	[Token(Token = "0x4000A89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool pointAtTarget;

	[Token(Token = "0x4000A8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool affectScale;

	[Token(Token = "0x6000C9A")]
	[Address(RVA = "0xF5B654", Offset = "0xF5B654", VA = "0xF5B654")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C9B")]
	[Address(RVA = "0xF5B8A0", Offset = "0xF5B8A0", VA = "0xF5B8A0")]
	public RopeScaler()
	{
	}
}
[Token(Token = "0x20001C3")]
public class RuntimeQualitySettings : MonoBehaviour
{
	[Token(Token = "0x4000A8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UniversalRenderPipelineAsset URPAsset;

	[Token(Token = "0x6000C9C")]
	[Address(RVA = "0xF5B8B0", Offset = "0xF5B8B0", VA = "0xF5B8B0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C9D")]
	[Address(RVA = "0xF5B8D0", Offset = "0xF5B8D0", VA = "0xF5B8D0")]
	public RuntimeQualitySettings()
	{
	}
}
[Token(Token = "0x20001C4")]
public class ScaleLeftRight : MonoBehaviour
{
	[Token(Token = "0x6000C9E")]
	[Address(RVA = "0xF5B8D8", Offset = "0xF5B8D8", VA = "0xF5B8D8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C9F")]
	[Address(RVA = "0xF5B9D0", Offset = "0xF5B9D0", VA = "0xF5B9D0")]
	public ScaleLeftRight()
	{
	}
}
[Token(Token = "0x20001C5")]
public class ScaleNearClippingPlane : MonoBehaviour
{
	[Token(Token = "0x6000CA0")]
	[Address(RVA = "0xF5B9D8", Offset = "0xF5B9D8", VA = "0xF5B9D8")]
	public ScaleNearClippingPlane()
	{
	}
}
[Token(Token = "0x20001C6")]
public class ScaleOnHover : MonoBehaviour
{
	[Token(Token = "0x4000A8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float scaleFactor;

	[Token(Token = "0x4000A8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[Tooltip("Use when trying to overlap sibling elements. WARNING: If using Rect Transform Pivot needs to be at (0, 0).")]
	public float forwardOffset;

	[Token(Token = "0x4000A8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Tooltip("Use when trying to overlap sibling elements. WARNING: If using Rect Transform Pivot needs to be at (0, 0).")]
	public float upOffset;

	[Token(Token = "0x4000A8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[Tooltip("Sets the ease of the scaling tween - both up & down.")]
	private Ease scaleEase;

	[Token(Token = "0x4000A90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Tooltip("When enabled will overlap all siblings when scaled on hover. When disabled will only overlap left or upper sibling when in a Horizontal or Vertical Layout group.")]
	public bool OverlapAllLayoutGroupSiblings;

	[Token(Token = "0x4000A91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	[Tooltip("Use for Special Cases where ScaleOnHover is on a TemplatePrefab and we don't want it to start scaling hiddenUntilHoverChildObjectsOrigScale elements to 0 before we've made our Clones. (Ex. See CourseItemViewTemplate/CourseItemButton)")]
	public bool DelayInit;

	[Token(Token = "0x4000A92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
	[Tooltip("Use for Special Cases where ScaleOnHover is on a GO that also has a DisableOnPlay component. (Ex. See CourseItemViewTemplate/CourseItemButton)")]
	public bool InitOnEnable;

	[Token(Token = "0x4000A93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Tooltip("Objects in this list will be scaled to Vector3.zero on Start and on Hover will scale up to its Default Scale")]
	public List<Transform> hiddenUntilHoverChildObjects;

	[Token(Token = "0x4000A94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[Tooltip("Objects in this list will be scaled to Vector3.zero on Hover and will scale up to its Default Scale when not Hovered")]
	public List<Transform> visibleUntilHoverChildObjects;

	[Token(Token = "0x4000A95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Tooltip("Instead of using the default scale at runtime which is error prone if on a GO that is instantiated at runtime from already existing GO. (Ex. CourseItemButton's GetCourseButton.)")]
	public bool UseManuallySetDefaultScale;

	[Token(Token = "0x4000A96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public Vector3 ManuallySetDefaultScale;

	[Token(Token = "0x4000A97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[FarBridge.ReadOnly]
	public Vector3 defaultScale;

	[Token(Token = "0x4000A98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Vector3 defaultPosition;

	[Token(Token = "0x4000A99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Dictionary<int, Vector3> hiddenUntilHoverChildObjectsOrigScale;

	[Token(Token = "0x4000A9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Dictionary<int, Vector3> visibleUntilHoverChildObjectsOrigScale;

	[Token(Token = "0x4000A9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Canvas tempCanvas;

	[Token(Token = "0x4000A9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private bool parentSortingValuesSet;

	[Token(Token = "0x4000A9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private int parentSortingLayerID;

	[Token(Token = "0x4000A9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private int parentSortingOrder;

	[Token(Token = "0x4000A9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private int childHoverCount;

	[Token(Token = "0x4000AA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private bool hovering;

	[Token(Token = "0x4000AA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x91")]
	private bool checkIfChildrenDoneHovering;

	[Token(Token = "0x4000AA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x92")]
	private bool initialized;

	[Token(Token = "0x4000AA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public ViewContainer[] parentViewContainers;

	[Token(Token = "0x6000CA1")]
	[Address(RVA = "0xF5B9E0", Offset = "0xF5B9E0", VA = "0xF5B9E0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000CA2")]
	[Address(RVA = "0xF5BAD8", Offset = "0xF5BAD8", VA = "0xF5BAD8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000CA3")]
	[Address(RVA = "0xF5BAE8", Offset = "0xF5BAE8", VA = "0xF5BAE8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000CA4")]
	[Address(RVA = "0xF5B9F0", Offset = "0xF5B9F0", VA = "0xF5B9F0")]
	private void ManageInitDelay()
	{
	}

	[Token(Token = "0x6000CA5")]
	[Address(RVA = "0xF5BAF0", Offset = "0xF5BAF0", VA = "0xF5BAF0")]
	private void Init()
	{
	}

	[Token(Token = "0x6000CA6")]
	[Address(RVA = "0xF5BF80", Offset = "0xF5BF80", VA = "0xF5BF80")]
	private void Update()
	{
	}

	[Token(Token = "0x6000CA7")]
	[Address(RVA = "0xF5C540", Offset = "0xF5C540", VA = "0xF5C540")]
	public void Hover(bool hover)
	{
	}

	[Token(Token = "0x6000CA8")]
	[Address(RVA = "0xF5C598", Offset = "0xF5C598", VA = "0xF5C598")]
	private bool ParentViewIsTransitioning()
	{
		return default(bool);
	}

	[Token(Token = "0x6000CA9")]
	[Address(RVA = "0xF5C5F8", Offset = "0xF5C5F8", VA = "0xF5C5F8")]
	private void OnStartHover()
	{
	}

	[Token(Token = "0x6000CAA")]
	[Address(RVA = "0xF5C030", Offset = "0xF5C030", VA = "0xF5C030")]
	private void OnStopHover()
	{
	}

	[Token(Token = "0x6000CAB")]
	[Address(RVA = "0xF5CCA8", Offset = "0xF5CCA8", VA = "0xF5CCA8")]
	public void AddChildHover()
	{
	}

	[Token(Token = "0x6000CAC")]
	[Address(RVA = "0xF5CCB8", Offset = "0xF5CCB8", VA = "0xF5CCB8")]
	public void RemoveChildHover()
	{
	}

	[Token(Token = "0x6000CAD")]
	[Address(RVA = "0xF5CCCC", Offset = "0xF5CCCC", VA = "0xF5CCCC")]
	public ScaleOnHover()
	{
	}
}
[Token(Token = "0x20001C7")]
public class ScalerTest : MonoBehaviour
{
	[Token(Token = "0x6000CAF")]
	[Address(RVA = "0xF5CDC4", Offset = "0xF5CDC4", VA = "0xF5CDC4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000CB0")]
	[Address(RVA = "0xF5CDF0", Offset = "0xF5CDF0", VA = "0xF5CDF0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000CB1")]
	[Address(RVA = "0xF5CDF4", Offset = "0xF5CDF4", VA = "0xF5CDF4")]
	public ScalerTest()
	{
	}
}
[Token(Token = "0x20001C8")]
public class ScaleUpLostBall : MonoBehaviour
{
	[Token(Token = "0x20001C9")]
	[CompilerGenerated]
	private sealed class <DoScale>d__1 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000AA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000AA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000AA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ScaleUpLostBall <>4__this;

		[Token(Token = "0x4000AA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <endScale>5__2;

		[Token(Token = "0x4000AA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <timer>5__3;

		[Token(Token = "0x170001C2")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000CB8")]
			[Address(RVA = "0xF5D098", Offset = "0xF5D098", VA = "0xF5D098", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001C3")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000CBA")]
			[Address(RVA = "0xF5D0E0", Offset = "0xF5D0E0", VA = "0xF5D0E0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000CB5")]
		[Address(RVA = "0xF5CE84", Offset = "0xF5CE84", VA = "0xF5CE84")]
		[DebuggerHidden]
		public <DoScale>d__1(int <>1__state)
		{
		}

		[Token(Token = "0x6000CB6")]
		[Address(RVA = "0xF5CEB4", Offset = "0xF5CEB4", VA = "0xF5CEB4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000CB7")]
		[Address(RVA = "0xF5CEB8", Offset = "0xF5CEB8", VA = "0xF5CEB8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CB9")]
		[Address(RVA = "0xF5D0A0", Offset = "0xF5D0A0", VA = "0xF5D0A0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x6000CB2")]
	[Address(RVA = "0xF5CDFC", Offset = "0xF5CDFC", VA = "0xF5CDFC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000CB3")]
	[Address(RVA = "0xF5CE1C", Offset = "0xF5CE1C", VA = "0xF5CE1C")]
	[IteratorStateMachine(typeof(<DoScale>d__1))]
	private IEnumerator DoScale()
	{
		return null;
	}

	[Token(Token = "0x6000CB4")]
	[Address(RVA = "0xF5CEAC", Offset = "0xF5CEAC", VA = "0xF5CEAC")]
	public ScaleUpLostBall()
	{
	}
}
[Token(Token = "0x20001CA")]
public class ScaleUpOnLook : MonoBehaviour
{
	[Token(Token = "0x20001CB")]
	[CompilerGenerated]
	private sealed class <HoldOpen>d__15 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000AB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000AB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000AB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ScaleUpOnLook <>4__this;

		[Token(Token = "0x170001C4")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000CC4")]
			[Address(RVA = "0xF5D7D8", Offset = "0xF5D7D8", VA = "0xF5D7D8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001C5")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000CC6")]
			[Address(RVA = "0xF5D820", Offset = "0xF5D820", VA = "0xF5D820", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000CC1")]
		[Address(RVA = "0xF5D730", Offset = "0xF5D730", VA = "0xF5D730")]
		[DebuggerHidden]
		public <HoldOpen>d__15(int <>1__state)
		{
		}

		[Token(Token = "0x6000CC2")]
		[Address(RVA = "0xF5D780", Offset = "0xF5D780", VA = "0xF5D780", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000CC3")]
		[Address(RVA = "0xF5D784", Offset = "0xF5D784", VA = "0xF5D784", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CC5")]
		[Address(RVA = "0xF5D7E0", Offset = "0xF5D7E0", VA = "0xF5D7E0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000AA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float transitionTime;

	[Token(Token = "0x4000AAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float cutoff;

	[Token(Token = "0x4000AAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector3 defaultScale;

	[Token(Token = "0x4000AAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float transition;

	[Token(Token = "0x4000AAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private CanvasGroup canvasGroup;

	[Token(Token = "0x4000AAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject[] enableList;

	[Token(Token = "0x4000AAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float distanceCutoff;

	[Token(Token = "0x4000AB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float holdOpen;

	[Token(Token = "0x4000AB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool looking;

	[Token(Token = "0x4000AB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	public bool testInView;

	[Token(Token = "0x4000AB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
	public bool testAxisAligned;

	[Token(Token = "0x6000CBB")]
	[Address(RVA = "0xF5D0E8", Offset = "0xF5D0E8", VA = "0xF5D0E8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000CBC")]
	[Address(RVA = "0xF5D1B4", Offset = "0xF5D1B4", VA = "0xF5D1B4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000CBD")]
	[Address(RVA = "0xF5D6A0", Offset = "0xF5D6A0", VA = "0xF5D6A0")]
	public void ForceOpen(float duration)
	{
	}

	[Token(Token = "0x6000CBE")]
	[Address(RVA = "0xF5D6A8", Offset = "0xF5D6A8", VA = "0xF5D6A8")]
	public void ForceOpen()
	{
	}

	[Token(Token = "0x6000CBF")]
	[Address(RVA = "0xF5D6C8", Offset = "0xF5D6C8", VA = "0xF5D6C8")]
	[IteratorStateMachine(typeof(<HoldOpen>d__15))]
	private IEnumerator HoldOpen()
	{
		return null;
	}

	[Token(Token = "0x6000CC0")]
	[Address(RVA = "0xF5D758", Offset = "0xF5D758", VA = "0xF5D758")]
	public ScaleUpOnLook()
	{
	}
}
[Token(Token = "0x20001CC")]
public class ScaleWithDistance : MonoBehaviour
{
	[Token(Token = "0x4000AB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float multiplier;

	[Token(Token = "0x4000AB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform trackingObject;

	[Token(Token = "0x4000AB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool useCamera;

	[Token(Token = "0x4000ABA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool pointAtTrackingObject;

	[Token(Token = "0x4000ABB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
	public bool scaling;

	[Token(Token = "0x4000ABC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B")]
	public bool useGlobalScale;

	[Token(Token = "0x6000CC7")]
	[Address(RVA = "0xF5D828", Offset = "0xF5D828", VA = "0xF5D828")]
	private void Start()
	{
	}

	[Token(Token = "0x6000CC8")]
	[Address(RVA = "0xF5D85C", Offset = "0xF5D85C", VA = "0xF5D85C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000CC9")]
	[Address(RVA = "0xF5DBE4", Offset = "0xF5DBE4", VA = "0xF5DBE4")]
	public ScaleWithDistance()
	{
	}
}
[Token(Token = "0x20001CD")]
public class SceneMaterialOverrides : MonoBehaviour
{
	[Token(Token = "0x4000ABD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material ballMaterial;

	[Token(Token = "0x4000ABE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material avatarMaterial;

	[Token(Token = "0x4000ABF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool avatarLightProbes;

	[Token(Token = "0x4000AC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static SceneMaterialOverrides instance;

	[Token(Token = "0x170001C6")]
	public static bool AvatarLightProbes
	{
		[Token(Token = "0x6000CCB")]
		[Address(RVA = "0xF5DC48", Offset = "0xF5DC48", VA = "0xF5DC48")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000CCA")]
	[Address(RVA = "0xF5DBFC", Offset = "0xF5DBFC", VA = "0xF5DBFC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000CCC")]
	[Address(RVA = "0xF5DCF0", Offset = "0xF5DCF0", VA = "0xF5DCF0")]
	public SceneMaterialOverrides()
	{
	}
}
[Token(Token = "0x20001CE")]
[ExecuteInEditMode]
public class SceneWind : MonoBehaviour
{
	[Token(Token = "0x20001CF")]
	[CompilerGenerated]
	private sealed class <TransitionWind>d__20 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000AD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000AD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000AD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SceneWind <>4__this;

		[Token(Token = "0x4000AD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <elapsedTime>5__2;

		[Token(Token = "0x4000AD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Vector3 <curWindDirection>5__3;

		[Token(Token = "0x4000AD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float <curWindSpeed>5__4;

		[Token(Token = "0x4000AD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float <curWindIntensity>5__5;

		[Token(Token = "0x170001C7")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000CD6")]
			[Address(RVA = "0xF5E310", Offset = "0xF5E310", VA = "0xF5E310", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001C8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000CD8")]
			[Address(RVA = "0xF5E358", Offset = "0xF5E358", VA = "0xF5E358", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000CD3")]
		[Address(RVA = "0xF5E128", Offset = "0xF5E128", VA = "0xF5E128")]
		[DebuggerHidden]
		public <TransitionWind>d__20(int <>1__state)
		{
		}

		[Token(Token = "0x6000CD4")]
		[Address(RVA = "0xF5E1D4", Offset = "0xF5E1D4", VA = "0xF5E1D4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000CD5")]
		[Address(RVA = "0xF5E1D8", Offset = "0xF5E1D8", VA = "0xF5E1D8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CD7")]
		[Address(RVA = "0xF5E318", Offset = "0xF5E318", VA = "0xF5E318", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000AC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 windDirection;

	[Token(Token = "0x4000AC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector3 targetWindDirection;

	[Token(Token = "0x4000AC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float targetWindSpeed;

	[Token(Token = "0x4000AC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float targetWindIntensity;

	[Token(Token = "0x4000AC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[Range(-360f, 360f)]
	public float windAngle;

	[Token(Token = "0x4000AC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float windSpeed;

	[Token(Token = "0x4000AC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Range(0f, 5f)]
	public float windIntensity;

	[Token(Token = "0x4000AC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float transitionLength;

	[Token(Token = "0x4000AC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool linkSpeedToIntensity;

	[Token(Token = "0x4000ACA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	public bool linkDirectionToAngle;

	[Token(Token = "0x4000ACB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
	public bool normalizeDirection;

	[Token(Token = "0x4000ACC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4B")]
	public bool updateEveryFrame;

	[Token(Token = "0x4000ACD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Vector3 windPos;

	[Token(Token = "0x4000ACE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool testWindSock;

	[Token(Token = "0x4000ACF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Transform windSock;

	[Token(Token = "0x4000AD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static SceneWind instance;

	[Token(Token = "0x6000CCD")]
	[Address(RVA = "0xF5DCF8", Offset = "0xF5DCF8", VA = "0xF5DCF8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000CCE")]
	[Address(RVA = "0xF5DD44", Offset = "0xF5DD44", VA = "0xF5DD44")]
	public void SetWind()
	{
	}

	[Token(Token = "0x6000CCF")]
	[Address(RVA = "0xF5DFD8", Offset = "0xF5DFD8", VA = "0xF5DFD8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000CD0")]
	[Address(RVA = "0xF5E094", Offset = "0xF5E094", VA = "0xF5E094")]
	public void ChangeWind()
	{
	}

	[Token(Token = "0x6000CD1")]
	[Address(RVA = "0xF5E0C0", Offset = "0xF5E0C0", VA = "0xF5E0C0")]
	[IteratorStateMachine(typeof(<TransitionWind>d__20))]
	private IEnumerator TransitionWind()
	{
		return null;
	}

	[Token(Token = "0x6000CD2")]
	[Address(RVA = "0xF5E150", Offset = "0xF5E150", VA = "0xF5E150")]
	public SceneWind()
	{
	}
}
[Token(Token = "0x20001D0")]
public class ScorecardButton : MonoBehaviour
{
	[Token(Token = "0x4000AD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private CanvasGroup canvasGroup;

	[Token(Token = "0x6000CD9")]
	[Address(RVA = "0xF5E360", Offset = "0xF5E360", VA = "0xF5E360")]
	private void Start()
	{
	}

	[Token(Token = "0x6000CDA")]
	[Address(RVA = "0xF5E3C0", Offset = "0xF5E3C0", VA = "0xF5E3C0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000CDB")]
	[Address(RVA = "0xF5E48C", Offset = "0xF5E48C", VA = "0xF5E48C")]
	public ScorecardButton()
	{
	}
}
[Token(Token = "0x20001D1")]
public class ScorecardHole : MonoBehaviour
{
	[Token(Token = "0x4000AD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int holeNumber;

	[Token(Token = "0x4000ADA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshProUGUI holeText;

	[Token(Token = "0x4000ADB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TextMeshProUGUI parText;

	[Token(Token = "0x4000ADC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TextMeshProUGUI[] scoreText;

	[Token(Token = "0x4000ADD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject[] scoreBox;

	[Token(Token = "0x4000ADE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int hoverCounter;

	[Token(Token = "0x4000ADF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Animator animator;

	[Token(Token = "0x4000AE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Image lostBallCheckmark;

	[Token(Token = "0x4000AE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject practiceCircle;

	[Token(Token = "0x6000CDC")]
	[Address(RVA = "0xF5E494", Offset = "0xF5E494", VA = "0xF5E494")]
	private void Start()
	{
	}

	[Token(Token = "0x6000CDD")]
	[Address(RVA = "0xF5E4F4", Offset = "0xF5E4F4", VA = "0xF5E4F4")]
	public void Refresh()
	{
	}

	[Token(Token = "0x6000CDE")]
	[Address(RVA = "0xF5EA78", Offset = "0xF5EA78", VA = "0xF5EA78")]
	public void Update()
	{
	}

	[Token(Token = "0x6000CDF")]
	[Address(RVA = "0xF5EB58", Offset = "0xF5EB58", VA = "0xF5EB58")]
	public void PracticeThisHole()
	{
	}

	[Token(Token = "0x6000CE0")]
	[Address(RVA = "0xF5EC44", Offset = "0xF5EC44", VA = "0xF5EC44")]
	public static void DoPractice(int holeInt)
	{
	}

	[Token(Token = "0x6000CE1")]
	[Address(RVA = "0xF5ED28", Offset = "0xF5ED28", VA = "0xF5ED28")]
	public void AddHover()
	{
	}

	[Token(Token = "0x6000CE2")]
	[Address(RVA = "0xF5ED98", Offset = "0xF5ED98", VA = "0xF5ED98")]
	public void RemoveHover()
	{
	}

	[Token(Token = "0x6000CE3")]
	[Address(RVA = "0xF5EDA8", Offset = "0xF5EDA8", VA = "0xF5EDA8")]
	public ScorecardHole()
	{
	}
}
[Token(Token = "0x20001D2")]
public class ScorecardHUD : MonoBehaviour
{
	[Token(Token = "0x4000AE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMeshProUGUI holeText;

	[Token(Token = "0x4000AE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshProUGUI parText;

	[Token(Token = "0x4000AE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TextMeshProUGUI strokesText;

	[Token(Token = "0x4000AE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TextMeshProUGUI roundText;

	[Token(Token = "0x4000AE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TextMeshProUGUI clockText;

	[Token(Token = "0x4000AE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject circleBG;

	[Token(Token = "0x4000AE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float updateClockRate;

	[Token(Token = "0x4000AE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float currentClockRateTimer;

	[Token(Token = "0x6000CE4")]
	[Address(RVA = "0xF5EDB0", Offset = "0xF5EDB0", VA = "0xF5EDB0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000CE5")]
	[Address(RVA = "0xF5F5A4", Offset = "0xF5F5A4", VA = "0xF5F5A4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000CE6")]
	[Address(RVA = "0xF5F168", Offset = "0xF5F168", VA = "0xF5F168")]
	private void Init()
	{
	}

	[Token(Token = "0x6000CE7")]
	[Address(RVA = "0xF5F954", Offset = "0xF5F954", VA = "0xF5F954")]
	private void Update()
	{
	}

	[Token(Token = "0x6000CE8")]
	[Address(RVA = "0xF5FAB8", Offset = "0xF5FAB8", VA = "0xF5FAB8")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000CE9")]
	[Address(RVA = "0xF5FB08", Offset = "0xF5FB08", VA = "0xF5FB08")]
	private void OnHoleStart()
	{
	}

	[Token(Token = "0x6000CEA")]
	[Address(RVA = "0xF5FF44", Offset = "0xF5FF44", VA = "0xF5FF44")]
	private void OnActiveHoleUpdated()
	{
	}

	[Token(Token = "0x6000CEB")]
	[Address(RVA = "0xF5FF48", Offset = "0xF5FF48", VA = "0xF5FF48")]
	public void OnPutt()
	{
	}

	[Token(Token = "0x6000CEC")]
	[Address(RVA = "0xF5FF4C", Offset = "0xF5FF4C", VA = "0xF5FF4C")]
	private void OnHoleCompleted()
	{
	}

	[Token(Token = "0x6000CED")]
	[Address(RVA = "0xF5FFF4", Offset = "0xF5FFF4", VA = "0xF5FFF4")]
	private void OnCourseStart()
	{
	}

	[Token(Token = "0x6000CEE")]
	[Address(RVA = "0xF5FBBC", Offset = "0xF5FBBC", VA = "0xF5FBBC")]
	private void UpdateHoleData()
	{
	}

	[Token(Token = "0x6000CEF")]
	[Address(RVA = "0xF5FDE4", Offset = "0xF5FDE4", VA = "0xF5FDE4")]
	private void UpdateStrokeData()
	{
	}

	[Token(Token = "0x6000CF0")]
	[Address(RVA = "0xF5FF50", Offset = "0xF5FF50", VA = "0xF5FF50")]
	private void UpdateRoundText()
	{
	}

	[Token(Token = "0x6000CF1")]
	[Address(RVA = "0xF6000C", Offset = "0xF6000C", VA = "0xF6000C")]
	public ScorecardHUD()
	{
	}
}
[Token(Token = "0x20001D3")]
public class ScreenCaptureCamera : MonoBehaviour
{
	[Token(Token = "0x4000AEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Camera cam;

	[Token(Token = "0x4000AEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform driver;

	[Token(Token = "0x4000AEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 previousPosition;

	[Token(Token = "0x4000AED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float speedMultiplier;

	[Token(Token = "0x4000AEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool isActive;

	[Token(Token = "0x6000CF2")]
	[Address(RVA = "0xF6001C", Offset = "0xF6001C", VA = "0xF6001C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000CF3")]
	[Address(RVA = "0xF6007C", Offset = "0xF6007C", VA = "0xF6007C")]
	private void ToggleActive()
	{
	}

	[Token(Token = "0x6000CF4")]
	[Address(RVA = "0xF60170", Offset = "0xF60170", VA = "0xF60170")]
	private void Update()
	{
	}

	[Token(Token = "0x6000CF5")]
	[Address(RVA = "0xF606D4", Offset = "0xF606D4", VA = "0xF606D4")]
	public ScreenCaptureCamera()
	{
	}
}
[Token(Token = "0x20001D4")]
public class SetAsLastSibling : MonoBehaviour
{
	[Token(Token = "0x6000CF6")]
	[Address(RVA = "0xF606E4", Offset = "0xF606E4", VA = "0xF606E4")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000CF7")]
	[Address(RVA = "0xF60704", Offset = "0xF60704", VA = "0xF60704")]
	public SetAsLastSibling()
	{
	}
}
[Token(Token = "0x20001D5")]
public class SetLanguage : MonoBehaviour
{
	[Token(Token = "0x4000AEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string Language;

	[Token(Token = "0x6000CF8")]
	[Address(RVA = "0xF6070C", Offset = "0xF6070C", VA = "0xF6070C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000CF9")]
	[Address(RVA = "0xF60768", Offset = "0xF60768", VA = "0xF60768")]
	private void Update()
	{
	}

	[Token(Token = "0x6000CFA")]
	[Address(RVA = "0xF6076C", Offset = "0xF6076C", VA = "0xF6076C")]
	public SetLanguage()
	{
	}
}
[Token(Token = "0x20001D6")]
public class SlopeIndicator : MonoBehaviour
{
	[Token(Token = "0x6000CFB")]
	[Address(RVA = "0xF60774", Offset = "0xF60774", VA = "0xF60774")]
	private void Start()
	{
	}

	[Token(Token = "0x6000CFC")]
	[Address(RVA = "0xF60A04", Offset = "0xF60A04", VA = "0xF60A04")]
	private void Update()
	{
	}

	[Token(Token = "0x6000CFD")]
	[Address(RVA = "0xF60A08", Offset = "0xF60A08", VA = "0xF60A08")]
	public SlopeIndicator()
	{
	}
}
[Token(Token = "0x20001D7")]
public class SmoothLocomotionFakeFloor : MonoBehaviour
{
	[Token(Token = "0x20001D8")]
	public enum FloorPosition
	{
		[Token(Token = "0x4000AF3")]
		previousBallPosition,
		[Token(Token = "0x4000AF4")]
		stationaryBallPosition
	}

	[Token(Token = "0x4000AF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public FloorPosition floorPosition;

	[Token(Token = "0x4000AF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Collider coll;

	[Token(Token = "0x6000CFE")]
	[Address(RVA = "0xF60A10", Offset = "0xF60A10", VA = "0xF60A10")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000CFF")]
	[Address(RVA = "0xF60AC8", Offset = "0xF60AC8", VA = "0xF60AC8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000D00")]
	[Address(RVA = "0xF60B80", Offset = "0xF60B80", VA = "0xF60B80")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D01")]
	[Address(RVA = "0xF60C3C", Offset = "0xF60C3C", VA = "0xF60C3C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D02")]
	[Address(RVA = "0xF610E0", Offset = "0xF610E0", VA = "0xF610E0")]
	private void SetColliderPosition()
	{
	}

	[Token(Token = "0x6000D03")]
	[Address(RVA = "0xF61460", Offset = "0xF61460", VA = "0xF61460")]
	public SmoothLocomotionFakeFloor()
	{
	}
}
[Token(Token = "0x20001D9")]
public class Splash : MonoBehaviour
{
	[Token(Token = "0x4000AF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float volumeMultiplier;

	[Token(Token = "0x4000AF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float scaleFactor;

	[Token(Token = "0x4000AF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioSource audioSource;

	[Token(Token = "0x6000D04")]
	[Address(RVA = "0xF61468", Offset = "0xF61468", VA = "0xF61468")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D05")]
	[Address(RVA = "0xF61690", Offset = "0xF61690", VA = "0xF61690")]
	public Splash()
	{
	}
}
[Token(Token = "0x20001DA")]
public class SplashTint : MonoBehaviour
{
	[Token(Token = "0x4000AF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Color splashColor1;

	[Token(Token = "0x4000AF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Color splashColor2;

	[Token(Token = "0x6000D06")]
	[Address(RVA = "0xF616A0", Offset = "0xF616A0", VA = "0xF616A0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D07")]
	[Address(RVA = "0xF61720", Offset = "0xF61720", VA = "0xF61720")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D08")]
	[Address(RVA = "0xF61724", Offset = "0xF61724", VA = "0xF61724")]
	public SplashTint()
	{
	}
}
[Token(Token = "0x20001DB")]
[DisallowMultipleComponent]
public class SteamManager : MonoBehaviour
{
	[Token(Token = "0x170001C9")]
	public static bool Initialized
	{
		[Token(Token = "0x6000D09")]
		[Address(RVA = "0xF61740", Offset = "0xF61740", VA = "0xF61740")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000D0A")]
	[Address(RVA = "0xF61748", Offset = "0xF61748", VA = "0xF61748")]
	public SteamManager()
	{
	}
}
[Token(Token = "0x20001DC")]
public class Surface : MonoBehaviour
{
	[Token(Token = "0x4000AFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public new string tag;

	[Token(Token = "0x4000AFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float drag;

	[Token(Token = "0x4000AFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioClip hitSound;

	[Token(Token = "0x4000AFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioClip rollSound;

	[Token(Token = "0x4000AFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public PhysicMaterial physicMaterial;

	[Token(Token = "0x6000D0B")]
	[Address(RVA = "0xF61750", Offset = "0xF61750", VA = "0xF61750")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D0C")]
	[Address(RVA = "0xF61754", Offset = "0xF61754", VA = "0xF61754")]
	public void AssignPhysicMaterial()
	{
	}

	[Token(Token = "0x6000D0D")]
	[Address(RVA = "0xF61808", Offset = "0xF61808", VA = "0xF61808")]
	public Surface()
	{
	}
}
[Token(Token = "0x20001DD")]
public class SurfaceManager : MonoBehaviour
{
	[Token(Token = "0x20001DE")]
	[CompilerGenerated]
	private sealed class <Start>d__1 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SurfaceManager <>4__this;

		[Token(Token = "0x4000B03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Surface[] <>7__wrap1;

		[Token(Token = "0x4000B04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <>7__wrap2;

		[Token(Token = "0x170001CA")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000D14")]
			[Address(RVA = "0xF61AE4", Offset = "0xF61AE4", VA = "0xF61AE4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001CB")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000D16")]
			[Address(RVA = "0xF61B2C", Offset = "0xF61B2C", VA = "0xF61B2C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D11")]
		[Address(RVA = "0xF618C8", Offset = "0xF618C8", VA = "0xF618C8")]
		[DebuggerHidden]
		public <Start>d__1(int <>1__state)
		{
		}

		[Token(Token = "0x6000D12")]
		[Address(RVA = "0xF61A34", Offset = "0xF61A34", VA = "0xF61A34", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000D13")]
		[Address(RVA = "0xF61A38", Offset = "0xF61A38", VA = "0xF61A38", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D15")]
		[Address(RVA = "0xF61AEC", Offset = "0xF61AEC", VA = "0xF61AEC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000AFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Surface[] surfaces;

	[Token(Token = "0x6000D0E")]
	[Address(RVA = "0xF61860", Offset = "0xF61860", VA = "0xF61860")]
	[IteratorStateMachine(typeof(<Start>d__1))]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000D0F")]
	[Address(RVA = "0xF618F0", Offset = "0xF618F0", VA = "0xF618F0")]
	private void SetupSurface(Surface surfaceType)
	{
	}

	[Token(Token = "0x6000D10")]
	[Address(RVA = "0xF61A2C", Offset = "0xF61A2C", VA = "0xF61A2C")]
	public SurfaceManager()
	{
	}
}
[Token(Token = "0x20001DF")]
public class SwitchableSound : MonoBehaviour, ISwitchable
{
	[Token(Token = "0x20001E0")]
	[CompilerGenerated]
	private sealed class <DelayedStart>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SwitchableSound <>4__this;

		[Token(Token = "0x170001CC")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000D28")]
			[Address(RVA = "0xF61F5C", Offset = "0xF61F5C", VA = "0xF61F5C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001CD")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000D2A")]
			[Address(RVA = "0xF61FA4", Offset = "0xF61FA4", VA = "0xF61FA4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D25")]
		[Address(RVA = "0xF61DB4", Offset = "0xF61DB4", VA = "0xF61DB4")]
		[DebuggerHidden]
		public <DelayedStart>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x6000D26")]
		[Address(RVA = "0xF61EAC", Offset = "0xF61EAC", VA = "0xF61EAC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000D27")]
		[Address(RVA = "0xF61EB0", Offset = "0xF61EB0", VA = "0xF61EB0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D29")]
		[Address(RVA = "0xF61F64", Offset = "0xF61F64", VA = "0xF61F64", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000B05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioClip onSound;

	[Token(Token = "0x4000B06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioClip offSound;

	[Token(Token = "0x4000B07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool initialized;

	[Token(Token = "0x4000B08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private AudioSource audioSource;

	[Token(Token = "0x4000B09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool switchedOn;

	[Token(Token = "0x6000D17")]
	[Address(RVA = "0xF61B34", Offset = "0xF61B34", VA = "0xF61B34")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D18")]
	[Address(RVA = "0xF61B38", Offset = "0xF61B38", VA = "0xF61B38")]
	private void Init()
	{
	}

	[Token(Token = "0x6000D19")]
	[Address(RVA = "0xF61B60", Offset = "0xF61B60", VA = "0xF61B60")]
	private void SetupAudioSource()
	{
	}

	[Token(Token = "0x6000D1A")]
	[Address(RVA = "0xF61CE0", Offset = "0xF61CE0", VA = "0xF61CE0")]
	private void AddAudioFadeOnSceneChangeComponent()
	{
	}

	[Token(Token = "0x6000D1B")]
	[Address(RVA = "0xF61C78", Offset = "0xF61C78", VA = "0xF61C78")]
	[IteratorStateMachine(typeof(<DelayedStart>d__9))]
	private IEnumerator DelayedStart()
	{
		return null;
	}

	[Token(Token = "0x6000D1C")]
	[Address(RVA = "0xF61DDC", Offset = "0xF61DDC", VA = "0xF61DDC", Slot = "4")]
	public void Reset(bool fastSwitch = false)
	{
	}

	[Token(Token = "0x6000D1D")]
	[Address(RVA = "0xF61DE0", Offset = "0xF61DE0", VA = "0xF61DE0", Slot = "5")]
	public void Toggle(bool fastSwitch = false)
	{
	}

	[Token(Token = "0x6000D1E")]
	[Address(RVA = "0xF61DF8", Offset = "0xF61DF8", VA = "0xF61DF8", Slot = "6")]
	public void Switch(bool newActiveState, bool fastSwitch = false)
	{
	}

	[Token(Token = "0x6000D1F")]
	[Address(RVA = "0xF61E7C", Offset = "0xF61E7C", VA = "0xF61E7C", Slot = "7")]
	[ContextMenu("Switch On")]
	public void SwitchOn(bool fastSwitch = false)
	{
	}

	[Token(Token = "0x6000D20")]
	[Address(RVA = "0xF61E88", Offset = "0xF61E88", VA = "0xF61E88", Slot = "8")]
	[ContextMenu("Switch Off")]
	public void SwitchOff(bool fastSwitch = false)
	{
	}

	[Token(Token = "0x6000D21")]
	[Address(RVA = "0xF61E94", Offset = "0xF61E94", VA = "0xF61E94", Slot = "9")]
	public bool GetSwitchState()
	{
		return default(bool);
	}

	[Token(Token = "0x6000D22")]
	[Address(RVA = "0xF61E60", Offset = "0xF61E60", VA = "0xF61E60")]
	private void PlaySound(AudioClip soundToPlay)
	{
	}

	[Token(Token = "0x6000D23")]
	[Address(RVA = "0xF61E9C", Offset = "0xF61E9C", VA = "0xF61E9C", Slot = "10")]
	public Hole GetHole()
	{
		return null;
	}

	[Token(Token = "0x6000D24")]
	[Address(RVA = "0xF61EA4", Offset = "0xF61EA4", VA = "0xF61EA4")]
	public SwitchableSound()
	{
	}
}
[Token(Token = "0x20001E1")]
public class Teleporter : MonoBehaviour
{
	[Token(Token = "0x20001E2")]
	public delegate void ManualTeleportEvent();

	[Token(Token = "0x4000B0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public bool aiming;

	[Token(Token = "0x4000B0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float aimVelocity;

	[Token(Token = "0x4000B0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector3 gravity;

	[Token(Token = "0x4000B10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float raycastStep;

	[Token(Token = "0x4000B11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float displaySubstep;

	[Token(Token = "0x4000B12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float vrRange;

	[Token(Token = "0x4000B13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float arRange;

	[Token(Token = "0x4000B14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public LineRenderer line;

	[Token(Token = "0x4000B15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector3 target;

	[Token(Token = "0x4000B16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private bool targetAcquired;

	[Token(Token = "0x4000B17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
	public bool debugSteps;

	[Token(Token = "0x4000B18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Material material;

	[Token(Token = "0x4000B19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Teleporter instance;

	[Token(Token = "0x4000B1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject groundIndicator;

	[Token(Token = "0x4000B1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Animator groundAnimator;

	[Token(Token = "0x4000B1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Transform previousTarget;

	[Token(Token = "0x4000B1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private MovingObject previousTargetMovingObject;

	[Token(Token = "0x4000B1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private bool _debug_isPressed;

	[Token(Token = "0x14000032")]
	public static event ManualTeleportEvent onManualTeleportEvent
	{
		[Token(Token = "0x6000D2B")]
		[Address(RVA = "0xF61FAC", Offset = "0xF61FAC", VA = "0xF61FAC")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000D2C")]
		[Address(RVA = "0xF62068", Offset = "0xF62068", VA = "0xF62068")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6000D2D")]
	[Address(RVA = "0xF62124", Offset = "0xF62124", VA = "0xF62124")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D2E")]
	[Address(RVA = "0xF621F0", Offset = "0xF621F0", VA = "0xF621F0")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000D2F")]
	[Address(RVA = "0xF62564", Offset = "0xF62564", VA = "0xF62564")]
	public void PullTrigger()
	{
	}

	[Token(Token = "0x6000D30")]
	[Address(RVA = "0xF62608", Offset = "0xF62608", VA = "0xF62608")]
	public void ReleaseTrigger()
	{
	}

	[Token(Token = "0x6000D31")]
	[Address(RVA = "0xF63B20", Offset = "0xF63B20", VA = "0xF63B20")]
	public void AimAR()
	{
	}

	[Token(Token = "0x6000D32")]
	[Address(RVA = "0xF62DBC", Offset = "0xF62DBC", VA = "0xF62DBC")]
	public void AimVR()
	{
	}

	[Token(Token = "0x6000D33")]
	[Address(RVA = "0xF63DC4", Offset = "0xF63DC4", VA = "0xF63DC4")]
	private void UpdateGroundIndicator()
	{
	}

	[Token(Token = "0x6000D34")]
	[Address(RVA = "0xF63FEC", Offset = "0xF63FEC", VA = "0xF63FEC")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000D35")]
	[Address(RVA = "0xF640D0", Offset = "0xF640D0", VA = "0xF640D0")]
	public Teleporter()
	{
	}
}
[Token(Token = "0x20001E3")]
public class DisableParticles : MonoBehaviour
{
	[Token(Token = "0x6000D3A")]
	[Address(RVA = "0xF64274", Offset = "0xF64274", VA = "0xF64274")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000D3B")]
	[Address(RVA = "0xF642D8", Offset = "0xF642D8", VA = "0xF642D8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000D3C")]
	[Address(RVA = "0xF64360", Offset = "0xF64360", VA = "0xF64360")]
	public DisableParticles()
	{
	}
}
[Token(Token = "0x20001E4")]
public class LoadScene : MonoBehaviour
{
	[Token(Token = "0x20001E5")]
	[CompilerGenerated]
	private sealed class <Start>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LoadScene <>4__this;

		[Token(Token = "0x170001CE")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000D43")]
			[Address(RVA = "0xF644BC", Offset = "0xF644BC", VA = "0xF644BC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001CF")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000D45")]
			[Address(RVA = "0xF64504", Offset = "0xF64504", VA = "0xF64504", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D40")]
		[Address(RVA = "0xF643D0", Offset = "0xF643D0", VA = "0xF643D0")]
		[DebuggerHidden]
		public <Start>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x6000D41")]
		[Address(RVA = "0xF64404", Offset = "0xF64404", VA = "0xF64404", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000D42")]
		[Address(RVA = "0xF64408", Offset = "0xF64408", VA = "0xF64408", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D44")]
		[Address(RVA = "0xF644C4", Offset = "0xF644C4", VA = "0xF644C4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000B20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string sceneName;

	[Token(Token = "0x4000B21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public BallSwitch BALL;

	[Token(Token = "0x4000B22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SwitchableContainer asdf;

	[Token(Token = "0x4000B23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public SwitchableContainer[] aa;

	[Token(Token = "0x6000D3D")]
	[Address(RVA = "0xF64368", Offset = "0xF64368", VA = "0xF64368")]
	[IteratorStateMachine(typeof(<Start>d__4))]
	public IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000D3E")]
	[Address(RVA = "0xF643F8", Offset = "0xF643F8", VA = "0xF643F8")]
	public void OnValidate()
	{
	}

	[Token(Token = "0x6000D3F")]
	[Address(RVA = "0xF643FC", Offset = "0xF643FC", VA = "0xF643FC")]
	public LoadScene()
	{
	}
}
[Token(Token = "0x20001E6")]
[ExecuteInEditMode]
public class TestObjectBounds : MonoBehaviour
{
	[Token(Token = "0x6000D46")]
	[Address(RVA = "0xF6450C", Offset = "0xF6450C", VA = "0xF6450C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D47")]
	[Address(RVA = "0xF64668", Offset = "0xF64668", VA = "0xF64668")]
	public TestObjectBounds()
	{
	}
}
[Token(Token = "0x20001E7")]
[ExecuteInEditMode]
public class TextMaxSize : MonoBehaviour
{
	[Token(Token = "0x4000B27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMeshProUGUI text;

	[Token(Token = "0x4000B28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public LayoutElement layout;

	[Token(Token = "0x4000B29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float maxWidth;

	[Token(Token = "0x4000B2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float defaultWidth;

	[Token(Token = "0x4000B2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int characterWrapping;

	[Token(Token = "0x6000D48")]
	[Address(RVA = "0xF64670", Offset = "0xF64670", VA = "0xF64670")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D49")]
	[Address(RVA = "0xF64700", Offset = "0xF64700", VA = "0xF64700")]
	public TextMaxSize()
	{
	}
}
[Token(Token = "0x20001E8")]
public class Tips : MonoBehaviour
{
	[Token(Token = "0x20001E9")]
	[CompilerGenerated]
	private sealed class <AutoAdvance>d__16 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Tips <>4__this;

		[Token(Token = "0x170001D0")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000D5B")]
			[Address(RVA = "0xF65E5C", Offset = "0xF65E5C", VA = "0xF65E5C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001D1")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000D5D")]
			[Address(RVA = "0xF65EA4", Offset = "0xF65EA4", VA = "0xF65EA4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D58")]
		[Address(RVA = "0xF65B44", Offset = "0xF65B44", VA = "0xF65B44")]
		[DebuggerHidden]
		public <AutoAdvance>d__16(int <>1__state)
		{
		}

		[Token(Token = "0x6000D59")]
		[Address(RVA = "0xF65D5C", Offset = "0xF65D5C", VA = "0xF65D5C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000D5A")]
		[Address(RVA = "0xF65D60", Offset = "0xF65D60", VA = "0xF65D60", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D5C")]
		[Address(RVA = "0xF65E64", Offset = "0xF65E64", VA = "0xF65E64", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001EA")]
	[CompilerGenerated]
	private sealed class <ARMessages>d__17 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Tips <>4__this;

		[Token(Token = "0x170001D2")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000D61")]
			[Address(RVA = "0xF660C0", Offset = "0xF660C0", VA = "0xF660C0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001D3")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000D63")]
			[Address(RVA = "0xF66108", Offset = "0xF66108", VA = "0xF66108", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D5E")]
		[Address(RVA = "0xF65B6C", Offset = "0xF65B6C", VA = "0xF65B6C")]
		[DebuggerHidden]
		public <ARMessages>d__17(int <>1__state)
		{
		}

		[Token(Token = "0x6000D5F")]
		[Address(RVA = "0xF65EAC", Offset = "0xF65EAC", VA = "0xF65EAC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000D60")]
		[Address(RVA = "0xF65EB0", Offset = "0xF65EB0", VA = "0xF65EB0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D62")]
		[Address(RVA = "0xF660C8", Offset = "0xF660C8", VA = "0xF660C8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001EB")]
	[CompilerGenerated]
	private sealed class <DisplayTip>d__20 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Tips <>4__this;

		[Token(Token = "0x4000B3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int newTipNumber;

		[Token(Token = "0x170001D4")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000D67")]
			[Address(RVA = "0xF662C8", Offset = "0xF662C8", VA = "0xF662C8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001D5")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000D69")]
			[Address(RVA = "0xF66310", Offset = "0xF66310", VA = "0xF66310", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D64")]
		[Address(RVA = "0xF65CFC", Offset = "0xF65CFC", VA = "0xF65CFC")]
		[DebuggerHidden]
		public <DisplayTip>d__20(int <>1__state)
		{
		}

		[Token(Token = "0x6000D65")]
		[Address(RVA = "0xF66110", Offset = "0xF66110", VA = "0xF66110", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000D66")]
		[Address(RVA = "0xF66114", Offset = "0xF66114", VA = "0xF66114", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D68")]
		[Address(RVA = "0xF662D0", Offset = "0xF662D0", VA = "0xF662D0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001EC")]
	[CompilerGenerated]
	private sealed class <RebuildTips>d__21 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Tips <>4__this;

		[Token(Token = "0x170001D6")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000D6D")]
			[Address(RVA = "0xF663AC", Offset = "0xF663AC", VA = "0xF663AC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001D7")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000D6F")]
			[Address(RVA = "0xF663F4", Offset = "0xF663F4", VA = "0xF663F4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D6A")]
		[Address(RVA = "0xF65D24", Offset = "0xF65D24", VA = "0xF65D24")]
		[DebuggerHidden]
		public <RebuildTips>d__21(int <>1__state)
		{
		}

		[Token(Token = "0x6000D6B")]
		[Address(RVA = "0xF66318", Offset = "0xF66318", VA = "0xF66318", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000D6C")]
		[Address(RVA = "0xF6631C", Offset = "0xF6631C", VA = "0xF6631C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D6E")]
		[Address(RVA = "0xF663B4", Offset = "0xF663B4", VA = "0xF663B4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000B2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<string> tips;

	[Token(Token = "0x4000B2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool autoAdvance;

	[Token(Token = "0x4000B2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int currentTip;

	[Token(Token = "0x4000B2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool fading;

	[Token(Token = "0x4000B30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TextMeshProUGUI vrTipText;

	[Token(Token = "0x4000B31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public CanvasGroup vrMaster;

	[Token(Token = "0x4000B32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private CanvasGroup master;

	[Token(Token = "0x4000B33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private TextMeshProUGUI tipText;

	[Token(Token = "0x4000B34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private CanvasGroup canvasGroup;

	[Token(Token = "0x4000B35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float deadTimer;

	[Token(Token = "0x6000D4A")]
	[Address(RVA = "0xF6471C", Offset = "0xF6471C", VA = "0xF6471C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000D4B")]
	[Address(RVA = "0xF64790", Offset = "0xF64790", VA = "0xF64790")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000D4C")]
	[Address(RVA = "0xF6487C", Offset = "0xF6487C", VA = "0xF6487C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000D4D")]
	[Address(RVA = "0xF64984", Offset = "0xF64984", VA = "0xF64984")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D4E")]
	[Address(RVA = "0xF659D0", Offset = "0xF659D0", VA = "0xF659D0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D4F")]
	[Address(RVA = "0xF65B40", Offset = "0xF65B40", VA = "0xF65B40")]
	public void Refresh()
	{
	}

	[Token(Token = "0x6000D50")]
	[Address(RVA = "0xF64814", Offset = "0xF64814", VA = "0xF64814")]
	[IteratorStateMachine(typeof(<AutoAdvance>d__16))]
	private IEnumerator AutoAdvance()
	{
		return null;
	}

	[Token(Token = "0x6000D51")]
	[Address(RVA = "0xF65968", Offset = "0xF65968", VA = "0xF65968")]
	[IteratorStateMachine(typeof(<ARMessages>d__17))]
	private IEnumerator ARMessages()
	{
		return null;
	}

	[Token(Token = "0x6000D52")]
	[Address(RVA = "0xF65B94", Offset = "0xF65B94", VA = "0xF65B94")]
	public void NextTip()
	{
	}

	[Token(Token = "0x6000D53")]
	[Address(RVA = "0xF65C8C", Offset = "0xF65C8C", VA = "0xF65C8C")]
	public void PreviousTip()
	{
	}

	[Token(Token = "0x6000D54")]
	[Address(RVA = "0xF65C14", Offset = "0xF65C14", VA = "0xF65C14")]
	[IteratorStateMachine(typeof(<DisplayTip>d__20))]
	private IEnumerator DisplayTip(int newTipNumber)
	{
		return null;
	}

	[Token(Token = "0x6000D55")]
	[Address(RVA = "0xF65900", Offset = "0xF65900", VA = "0xF65900")]
	[IteratorStateMachine(typeof(<RebuildTips>d__21))]
	private IEnumerator RebuildTips()
	{
		return null;
	}

	[Token(Token = "0x6000D56")]
	[Address(RVA = "0xF64BDC", Offset = "0xF64BDC", VA = "0xF64BDC")]
	private void InitializeTips()
	{
	}

	[Token(Token = "0x6000D57")]
	[Address(RVA = "0xF65D4C", Offset = "0xF65D4C", VA = "0xF65D4C")]
	public Tips()
	{
	}
}
[Token(Token = "0x20001ED")]
public class Tooltip : MonoBehaviour
{
	[Token(Token = "0x4000B43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Tooltip activeTooltip;

	[Token(Token = "0x4000B44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string tooltipMessage;

	[Token(Token = "0x6000D70")]
	[Address(RVA = "0xF663FC", Offset = "0xF663FC", VA = "0xF663FC")]
	public void OnHoverEnter()
	{
	}

	[Token(Token = "0x6000D71")]
	[Address(RVA = "0xF66448", Offset = "0xF66448", VA = "0xF66448")]
	public void OnHoverExit()
	{
	}

	[Token(Token = "0x6000D72")]
	[Address(RVA = "0xF664E0", Offset = "0xF664E0", VA = "0xF664E0")]
	public Tooltip()
	{
	}
}
[Token(Token = "0x20001EE")]
public class TooltipMessage : MonoBehaviour
{
	[Token(Token = "0x4000B45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMeshProUGUI tooltipText;

	[Token(Token = "0x6000D73")]
	[Address(RVA = "0xF664E8", Offset = "0xF664E8", VA = "0xF664E8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D74")]
	[Address(RVA = "0xF66654", Offset = "0xF66654", VA = "0xF66654")]
	public TooltipMessage()
	{
	}
}
[Token(Token = "0x20001EF")]
public class TransformJitter : MonoBehaviour
{
	[Token(Token = "0x4000B46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 jitterScale;

	[Token(Token = "0x4000B47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector3 jitterPosition;

	[Token(Token = "0x4000B48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3 defaultScale;

	[Token(Token = "0x4000B49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Vector3 defaultPosition;

	[Token(Token = "0x6000D75")]
	[Address(RVA = "0xF6665C", Offset = "0xF6665C", VA = "0xF6665C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D76")]
	[Address(RVA = "0xF666AC", Offset = "0xF666AC", VA = "0xF666AC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D77")]
	[Address(RVA = "0xF6679C", Offset = "0xF6679C", VA = "0xF6679C")]
	public TransformJitter()
	{
	}
}
[Token(Token = "0x20001F0")]
public class TurnOffDepthSort : MonoBehaviour
{
	[Token(Token = "0x6000D78")]
	[Address(RVA = "0xF66810", Offset = "0xF66810", VA = "0xF66810")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D79")]
	[Address(RVA = "0xF66834", Offset = "0xF66834", VA = "0xF66834")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D7A")]
	[Address(RVA = "0xF66838", Offset = "0xF66838", VA = "0xF66838")]
	public TurnOffDepthSort()
	{
	}
}
[Token(Token = "0x20001F1")]
public class TurnOnDepthSort : MonoBehaviour
{
	[Token(Token = "0x6000D7B")]
	[Address(RVA = "0xF66840", Offset = "0xF66840", VA = "0xF66840")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D7C")]
	[Address(RVA = "0xF66864", Offset = "0xF66864", VA = "0xF66864")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D7D")]
	[Address(RVA = "0xF66868", Offset = "0xF66868", VA = "0xF66868")]
	public TurnOnDepthSort()
	{
	}
}
[Token(Token = "0x20001F2")]
public class TutorialAR : MonoBehaviour
{
	[Token(Token = "0x20001F3")]
	[CompilerGenerated]
	private sealed class <DialogueBoxCoro>d__16 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string message;

		[Token(Token = "0x4000B52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string confirmMessage;

		[Token(Token = "0x170001DA")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000D92")]
			[Address(RVA = "0xF673A8", Offset = "0xF673A8", VA = "0xF673A8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001DB")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000D94")]
			[Address(RVA = "0xF673F0", Offset = "0xF673F0", VA = "0xF673F0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D8F")]
		[Address(RVA = "0xF66F84", Offset = "0xF66F84", VA = "0xF66F84")]
		[DebuggerHidden]
		public <DialogueBoxCoro>d__16(int <>1__state)
		{
		}

		[Token(Token = "0x6000D90")]
		[Address(RVA = "0xF67210", Offset = "0xF67210", VA = "0xF67210", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000D91")]
		[Address(RVA = "0xF67214", Offset = "0xF67214", VA = "0xF67214", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D93")]
		[Address(RVA = "0xF673B0", Offset = "0xF673B0", VA = "0xF673B0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001F4")]
	[CompilerGenerated]
	private sealed class <TutorialSequence>d__17 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TutorialAR <>4__this;

		[Token(Token = "0x170001DC")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000D98")]
			[Address(RVA = "0xF67A80", Offset = "0xF67A80", VA = "0xF67A80", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001DD")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000D9A")]
			[Address(RVA = "0xF67AC8", Offset = "0xF67AC8", VA = "0xF67AC8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D95")]
		[Address(RVA = "0xF66FAC", Offset = "0xF66FAC", VA = "0xF66FAC")]
		[DebuggerHidden]
		public <TutorialSequence>d__17(int <>1__state)
		{
		}

		[Token(Token = "0x6000D96")]
		[Address(RVA = "0xF673F8", Offset = "0xF673F8", VA = "0xF673F8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000D97")]
		[Address(RVA = "0xF673FC", Offset = "0xF673FC", VA = "0xF673FC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D99")]
		[Address(RVA = "0xF67A88", Offset = "0xF67A88", VA = "0xF67A88", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001F5")]
	[CompilerGenerated]
	private sealed class <PracticeSequence>d__18 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TutorialAR <>4__this;

		[Token(Token = "0x170001DE")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000D9E")]
			[Address(RVA = "0xF67D28", Offset = "0xF67D28", VA = "0xF67D28", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001DF")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000DA0")]
			[Address(RVA = "0xF67D70", Offset = "0xF67D70", VA = "0xF67D70", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D9B")]
		[Address(RVA = "0xF6703C", Offset = "0xF6703C", VA = "0xF6703C")]
		[DebuggerHidden]
		public <PracticeSequence>d__18(int <>1__state)
		{
		}

		[Token(Token = "0x6000D9C")]
		[Address(RVA = "0xF67AD0", Offset = "0xF67AD0", VA = "0xF67AD0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000D9D")]
		[Address(RVA = "0xF67AD4", Offset = "0xF67AD4", VA = "0xF67AD4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D9F")]
		[Address(RVA = "0xF67D30", Offset = "0xF67D30", VA = "0xF67D30", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001F6")]
	[CompilerGenerated]
	private sealed class <TeleportSequence>d__19 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TutorialAR <>4__this;

		[Token(Token = "0x4000B5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool <restartTeleportSequence>5__2;

		[Token(Token = "0x170001E0")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000DA4")]
			[Address(RVA = "0xF68078", Offset = "0xF68078", VA = "0xF68078", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001E1")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000DA6")]
			[Address(RVA = "0xF680C0", Offset = "0xF680C0", VA = "0xF680C0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000DA1")]
		[Address(RVA = "0xF670CC", Offset = "0xF670CC", VA = "0xF670CC")]
		[DebuggerHidden]
		public <TeleportSequence>d__19(int <>1__state)
		{
		}

		[Token(Token = "0x6000DA2")]
		[Address(RVA = "0xF67D78", Offset = "0xF67D78", VA = "0xF67D78", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000DA3")]
		[Address(RVA = "0xF67D7C", Offset = "0xF67D7C", VA = "0xF67D7C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000DA5")]
		[Address(RVA = "0xF68080", Offset = "0xF68080", VA = "0xF68080", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001F7")]
	[CompilerGenerated]
	private sealed class <PuttSequence>d__20 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TutorialAR <>4__this;

		[Token(Token = "0x4000B60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float delay;

		[Token(Token = "0x4000B61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private bool <restartPuttSequence>5__2;

		[Token(Token = "0x170001E2")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000DAA")]
			[Address(RVA = "0xF68BB0", Offset = "0xF68BB0", VA = "0xF68BB0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001E3")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000DAC")]
			[Address(RVA = "0xF68BF8", Offset = "0xF68BF8", VA = "0xF68BF8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000DA7")]
		[Address(RVA = "0xF6716C", Offset = "0xF6716C", VA = "0xF6716C")]
		[DebuggerHidden]
		public <PuttSequence>d__20(int <>1__state)
		{
		}

		[Token(Token = "0x6000DA8")]
		[Address(RVA = "0xF680C8", Offset = "0xF680C8", VA = "0xF680C8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000DA9")]
		[Address(RVA = "0xF680CC", Offset = "0xF680CC", VA = "0xF680CC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000DAB")]
		[Address(RVA = "0xF68BB8", Offset = "0xF68BB8", VA = "0xF68BB8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000B4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool putt;

	[Token(Token = "0x4000B4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private int puttCounter;

	[Token(Token = "0x4000B4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool manualTeleport;

	[Token(Token = "0x4000B4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int manualTeleportCounter;

	[Token(Token = "0x4000B4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool undoStroke;

	[Token(Token = "0x170001D8")]
	private SavableBool tutorialActive
	{
		[Token(Token = "0x6000D7E")]
		[Address(RVA = "0xF66870", Offset = "0xF66870", VA = "0xF66870")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001D9")]
	private SavableBool practiceTutorialComplete
	{
		[Token(Token = "0x6000D7F")]
		[Address(RVA = "0xF668D0", Offset = "0xF668D0", VA = "0xF668D0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000D80")]
	[Address(RVA = "0xF66930", Offset = "0xF66930", VA = "0xF66930")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000D81")]
	[Address(RVA = "0xF66AA0", Offset = "0xF66AA0", VA = "0xF66AA0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000D82")]
	[Address(RVA = "0xF66C10", Offset = "0xF66C10", VA = "0xF66C10")]
	private void PuttEvent()
	{
	}

	[Token(Token = "0x6000D83")]
	[Address(RVA = "0xF66C28", Offset = "0xF66C28", VA = "0xF66C28")]
	private void ManualTeleportEvent()
	{
	}

	[Token(Token = "0x6000D84")]
	[Address(RVA = "0xF66C40", Offset = "0xF66C40", VA = "0xF66C40")]
	private void UndoStrokeEvent()
	{
	}

	[Token(Token = "0x6000D85")]
	[Address(RVA = "0xF66C4C", Offset = "0xF66C4C", VA = "0xF66C4C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D86")]
	[Address(RVA = "0xF66D8C", Offset = "0xF66D8C", VA = "0xF66D8C")]
	public void StartTutorial()
	{
	}

	[Token(Token = "0x6000D87")]
	[Address(RVA = "0xF66F10", Offset = "0xF66F10", VA = "0xF66F10")]
	[IteratorStateMachine(typeof(<DialogueBoxCoro>d__16))]
	private IEnumerator DialogueBoxCoro(string message, string confirmMessage)
	{
		return null;
	}

	[Token(Token = "0x6000D88")]
	[Address(RVA = "0xF66EA8", Offset = "0xF66EA8", VA = "0xF66EA8")]
	[IteratorStateMachine(typeof(<TutorialSequence>d__17))]
	private IEnumerator TutorialSequence()
	{
		return null;
	}

	[Token(Token = "0x6000D89")]
	[Address(RVA = "0xF66FD4", Offset = "0xF66FD4", VA = "0xF66FD4")]
	[IteratorStateMachine(typeof(<PracticeSequence>d__18))]
	private IEnumerator PracticeSequence()
	{
		return null;
	}

	[Token(Token = "0x6000D8A")]
	[Address(RVA = "0xF67064", Offset = "0xF67064", VA = "0xF67064")]
	[IteratorStateMachine(typeof(<TeleportSequence>d__19))]
	private IEnumerator TeleportSequence()
	{
		return null;
	}

	[Token(Token = "0x6000D8B")]
	[Address(RVA = "0xF670F4", Offset = "0xF670F4", VA = "0xF670F4")]
	[IteratorStateMachine(typeof(<PuttSequence>d__20))]
	private IEnumerator PuttSequence(float delay)
	{
		return null;
	}

	[Token(Token = "0x6000D8C")]
	[Address(RVA = "0xF67194", Offset = "0xF67194", VA = "0xF67194")]
	public void CancelTutorial()
	{
	}

	[Token(Token = "0x6000D8D")]
	[Address(RVA = "0xF66CD0", Offset = "0xF66CD0", VA = "0xF66CD0")]
	public void UpdateTutorialStatus()
	{
	}

	[Token(Token = "0x6000D8E")]
	[Address(RVA = "0xF67208", Offset = "0xF67208", VA = "0xF67208")]
	public TutorialAR()
	{
	}
}
[Token(Token = "0x20001F8")]
public class TutorialVR : MonoBehaviour
{
	[Token(Token = "0x20001F9")]
	public class InputDescriptionKeys
	{
		[Token(Token = "0x4000B6B")]
		public const string PullBack_1 = "PullBack_1";

		[Token(Token = "0x6000DBD")]
		[Address(RVA = "0xF69700", Offset = "0xF69700", VA = "0xF69700")]
		public InputDescriptionKeys()
		{
		}
	}

	[Token(Token = "0x20001FB")]
	[CompilerGenerated]
	private sealed class <TutorialSequence>d__20 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TutorialVR <>4__this;

		[Token(Token = "0x170001E4")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000DC4")]
			[Address(RVA = "0xF69FDC", Offset = "0xF69FDC", VA = "0xF69FDC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001E5")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000DC6")]
			[Address(RVA = "0xF6A024", Offset = "0xF6A024", VA = "0xF6A024", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000DC1")]
		[Address(RVA = "0xF694E8", Offset = "0xF694E8", VA = "0xF694E8")]
		[DebuggerHidden]
		public <TutorialSequence>d__20(int <>1__state)
		{
		}

		[Token(Token = "0x6000DC2")]
		[Address(RVA = "0xF69864", Offset = "0xF69864", VA = "0xF69864", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000DC3")]
		[Address(RVA = "0xF69868", Offset = "0xF69868", VA = "0xF69868", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000DC5")]
		[Address(RVA = "0xF69FE4", Offset = "0xF69FE4", VA = "0xF69FE4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001FC")]
	[CompilerGenerated]
	private sealed class <PracticeSequence>d__21 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TutorialVR <>4__this;

		[Token(Token = "0x170001E6")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000DCA")]
			[Address(RVA = "0xF6A368", Offset = "0xF6A368", VA = "0xF6A368", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001E7")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000DCC")]
			[Address(RVA = "0xF6A3B0", Offset = "0xF6A3B0", VA = "0xF6A3B0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000DC7")]
		[Address(RVA = "0xF69510", Offset = "0xF69510", VA = "0xF69510")]
		[DebuggerHidden]
		public <PracticeSequence>d__21(int <>1__state)
		{
		}

		[Token(Token = "0x6000DC8")]
		[Address(RVA = "0xF6A02C", Offset = "0xF6A02C", VA = "0xF6A02C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000DC9")]
		[Address(RVA = "0xF6A030", Offset = "0xF6A030", VA = "0xF6A030", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000DCB")]
		[Address(RVA = "0xF6A370", Offset = "0xF6A370", VA = "0xF6A370", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001FD")]
	[CompilerGenerated]
	private sealed class <TeleportSequence>d__22 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TutorialVR <>4__this;

		[Token(Token = "0x4000B77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool <restartTeleportSequence>5__2;

		[Token(Token = "0x170001E8")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000DD0")]
			[Address(RVA = "0xF6A7A4", Offset = "0xF6A7A4", VA = "0xF6A7A4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001E9")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000DD2")]
			[Address(RVA = "0xF6A7EC", Offset = "0xF6A7EC", VA = "0xF6A7EC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000DCD")]
		[Address(RVA = "0xF695A0", Offset = "0xF695A0", VA = "0xF695A0")]
		[DebuggerHidden]
		public <TeleportSequence>d__22(int <>1__state)
		{
		}

		[Token(Token = "0x6000DCE")]
		[Address(RVA = "0xF6A3B8", Offset = "0xF6A3B8", VA = "0xF6A3B8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000DCF")]
		[Address(RVA = "0xF6A3BC", Offset = "0xF6A3BC", VA = "0xF6A3BC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000DD1")]
		[Address(RVA = "0xF6A7AC", Offset = "0xF6A7AC", VA = "0xF6A7AC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001FE")]
	[CompilerGenerated]
	private sealed class <WristSequence>d__23 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TutorialVR <>4__this;

		[Token(Token = "0x4000B7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool <restartWristSequence>5__2;

		[Token(Token = "0x170001EA")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000DD6")]
			[Address(RVA = "0xF6ABA0", Offset = "0xF6ABA0", VA = "0xF6ABA0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001EB")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000DD8")]
			[Address(RVA = "0xF6ABE8", Offset = "0xF6ABE8", VA = "0xF6ABE8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000DD3")]
		[Address(RVA = "0xF69630", Offset = "0xF69630", VA = "0xF69630")]
		[DebuggerHidden]
		public <WristSequence>d__23(int <>1__state)
		{
		}

		[Token(Token = "0x6000DD4")]
		[Address(RVA = "0xF6A7F4", Offset = "0xF6A7F4", VA = "0xF6A7F4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000DD5")]
		[Address(RVA = "0xF6A7F8", Offset = "0xF6A7F8", VA = "0xF6A7F8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000DD7")]
		[Address(RVA = "0xF6ABA8", Offset = "0xF6ABA8", VA = "0xF6ABA8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001FF")]
	[CompilerGenerated]
	private sealed class <PuttSequence>d__24 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TutorialVR <>4__this;

		[Token(Token = "0x4000B7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float delay;

		[Token(Token = "0x4000B80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private bool <restartPuttSequence>5__2;

		[Token(Token = "0x4000B81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <ballInRangeDistance>5__3;

		[Token(Token = "0x170001EC")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000DDC")]
			[Address(RVA = "0xF6BB2C", Offset = "0xF6BB2C", VA = "0xF6BB2C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001ED")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000DDE")]
			[Address(RVA = "0xF6BB74", Offset = "0xF6BB74", VA = "0xF6BB74", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000DD9")]
		[Address(RVA = "0xF696D0", Offset = "0xF696D0", VA = "0xF696D0")]
		[DebuggerHidden]
		public <PuttSequence>d__24(int <>1__state)
		{
		}

		[Token(Token = "0x6000DDA")]
		[Address(RVA = "0xF6ABF0", Offset = "0xF6ABF0", VA = "0xF6ABF0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000DDB")]
		[Address(RVA = "0xF6ABF4", Offset = "0xF6ABF4", VA = "0xF6ABF4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000DDD")]
		[Address(RVA = "0xF6BB34", Offset = "0xF6BB34", VA = "0xF6BB34", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000B62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private SavableBool practiceTutorialComplete;

	[Token(Token = "0x4000B63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private SavableBool tutorialActive;

	[Token(Token = "0x4000B64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool putt;

	[Token(Token = "0x4000B65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private int puttCounter;

	[Token(Token = "0x4000B66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool manualTeleport;

	[Token(Token = "0x4000B67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int manualTeleportCounter;

	[Token(Token = "0x4000B68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool undoStroke;

	[Token(Token = "0x4000B69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform leftWristHUD;

	[Token(Token = "0x4000B6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform rightWristHUD;

	[Token(Token = "0x6000DAD")]
	[Address(RVA = "0xF68C00", Offset = "0xF68C00", VA = "0xF68C00")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000DAE")]
	[Address(RVA = "0xF68D70", Offset = "0xF68D70", VA = "0xF68D70")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000DAF")]
	[Address(RVA = "0xF68EE0", Offset = "0xF68EE0", VA = "0xF68EE0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000DB0")]
	[Address(RVA = "0xF690B8", Offset = "0xF690B8", VA = "0xF690B8")]
	public void StartTutorial()
	{
	}

	[Token(Token = "0x6000DB1")]
	[Address(RVA = "0xF6923C", Offset = "0xF6923C", VA = "0xF6923C")]
	public void CancelTutorial()
	{
	}

	[Token(Token = "0x6000DB2")]
	[Address(RVA = "0xF68FFC", Offset = "0xF68FFC", VA = "0xF68FFC")]
	public void UpdateTutorialStatus()
	{
	}

	[Token(Token = "0x6000DB3")]
	[Address(RVA = "0xF69318", Offset = "0xF69318", VA = "0xF69318")]
	public static string FormatMessage(string message, params string[] inputDescriptionKeys)
	{
		return null;
	}

	[Token(Token = "0x6000DB4")]
	[Address(RVA = "0xF69440", Offset = "0xF69440", VA = "0xF69440")]
	private void PuttEvent()
	{
	}

	[Token(Token = "0x6000DB5")]
	[Address(RVA = "0xF69458", Offset = "0xF69458", VA = "0xF69458")]
	private void ManualTeleportEvent()
	{
	}

	[Token(Token = "0x6000DB6")]
	[Address(RVA = "0xF69470", Offset = "0xF69470", VA = "0xF69470")]
	private void UndoStrokeEvent()
	{
	}

	[Token(Token = "0x6000DB7")]
	[Address(RVA = "0xF691D4", Offset = "0xF691D4", VA = "0xF691D4")]
	[IteratorStateMachine(typeof(<TutorialSequence>d__20))]
	private IEnumerator TutorialSequence()
	{
		return null;
	}

	[Token(Token = "0x6000DB8")]
	[Address(RVA = "0xF692B0", Offset = "0xF692B0", VA = "0xF692B0")]
	[IteratorStateMachine(typeof(<PracticeSequence>d__21))]
	private IEnumerator PracticeSequence()
	{
		return null;
	}

	[Token(Token = "0x6000DB9")]
	[Address(RVA = "0xF69538", Offset = "0xF69538", VA = "0xF69538")]
	[IteratorStateMachine(typeof(<TeleportSequence>d__22))]
	private IEnumerator TeleportSequence()
	{
		return null;
	}

	[Token(Token = "0x6000DBA")]
	[Address(RVA = "0xF695C8", Offset = "0xF695C8", VA = "0xF695C8")]
	[IteratorStateMachine(typeof(<WristSequence>d__23))]
	private IEnumerator WristSequence()
	{
		return null;
	}

	[Token(Token = "0x6000DBB")]
	[Address(RVA = "0xF69658", Offset = "0xF69658", VA = "0xF69658")]
	[IteratorStateMachine(typeof(<PuttSequence>d__24))]
	private IEnumerator PuttSequence(float delay)
	{
		return null;
	}

	[Token(Token = "0x6000DBC")]
	[Address(RVA = "0xF696F8", Offset = "0xF696F8", VA = "0xF696F8")]
	public TutorialVR()
	{
	}
}
[Token(Token = "0x2000200")]
public class ARNavMenu : CanvasView
{
	[Token(Token = "0x4000B82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static ARNavMenu Instance;

	[Token(Token = "0x4000B83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC9")]
	[Unity.Collections.ReadOnly]
	public bool isMenuOpen;

	[Token(Token = "0x4000B84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCA")]
	[Unity.Collections.ReadOnly]
	public bool isMenuVisible;

	[Token(Token = "0x4000B85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private RectTransform rectTrans;

	[Token(Token = "0x4000B86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private WarpToMenuTarget[] warpTargetChildren;

	[Token(Token = "0x6000DDF")]
	[Address(RVA = "0xF6BB7C", Offset = "0xF6BB7C", VA = "0xF6BB7C", Slot = "9")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000DE0")]
	[Address(RVA = "0xF6BD98", Offset = "0xF6BD98", VA = "0xF6BD98")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000DE1")]
	[Address(RVA = "0xF6BE3C", Offset = "0xF6BE3C", VA = "0xF6BE3C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000DE2")]
	[Address(RVA = "0xF6BEE0", Offset = "0xF6BEE0", VA = "0xF6BEE0")]
	private void OnSceneLoaded(Scene scene, LoadSceneMode mode)
	{
	}

	[Token(Token = "0x6000DE3")]
	[Address(RVA = "0xF6BFD0", Offset = "0xF6BFD0", VA = "0xF6BFD0")]
	private void ResetWarpTargetChildren()
	{
	}

	[Token(Token = "0x6000DE4")]
	[Address(RVA = "0xF6C190", Offset = "0xF6C190", VA = "0xF6C190")]
	private void InitWarpTargetChildren()
	{
	}

	[Token(Token = "0x6000DE5")]
	[Address(RVA = "0xF6C1F0", Offset = "0xF6C1F0", VA = "0xF6C1F0")]
	public void ToggleARNavMenuOpenState()
	{
	}

	[Token(Token = "0x6000DE6")]
	[Address(RVA = "0xF6C094", Offset = "0xF6C094", VA = "0xF6C094")]
	public void ShowARNavMenu()
	{
	}

	[Token(Token = "0x6000DE7")]
	[Address(RVA = "0xF6C030", Offset = "0xF6C030", VA = "0xF6C030")]
	public void HideARNavMenu()
	{
	}

	[Token(Token = "0x6000DE8")]
	[Address(RVA = "0xF6C200", Offset = "0xF6C200", VA = "0xF6C200")]
	public void OpenARNavMenu()
	{
	}

	[Token(Token = "0x6000DE9")]
	[Address(RVA = "0xF6C0FC", Offset = "0xF6C0FC", VA = "0xF6C0FC")]
	public void CloseARNavMenu()
	{
	}

	[Token(Token = "0x6000DEA")]
	[Address(RVA = "0xF6C298", Offset = "0xF6C298", VA = "0xF6C298")]
	public ARNavMenu()
	{
	}
}
[Token(Token = "0x2000201")]
public class MainMenuView : Singleton<MainMenuView>
{
	[Token(Token = "0x4000B87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public CourseCatalogController courseCatalogController;

	[Token(Token = "0x4000B88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public CourseSelectionMenu courseSelectionMenu;

	[Token(Token = "0x4000B89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public CourseItemsMenu courseItemsMenu;

	[Token(Token = "0x4000B8A")]
	private const string ALL = "all";

	[Token(Token = "0x4000B8B")]
	private const string SPECIALS = "specials";

	[Token(Token = "0x170001EE")]
	private CourseCatalogAsset Catalog
	{
		[Token(Token = "0x6000DEF")]
		[Address(RVA = "0xF6CDB8", Offset = "0xF6CDB8", VA = "0xF6CDB8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001EF")]
	public List<CourseInfoAsset> Courses
	{
		[Token(Token = "0x6000DF0")]
		[Address(RVA = "0xF6CD2C", Offset = "0xF6CD2C", VA = "0xF6CD2C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000DEB")]
	[Address(RVA = "0xF6C2A8", Offset = "0xF6C2A8", VA = "0xF6C2A8", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000DEC")]
	[Address(RVA = "0xF6C358", Offset = "0xF6C358", VA = "0xF6C358")]
	private void Init()
	{
	}

	[Token(Token = "0x6000DED")]
	[Address(RVA = "0xF6C35C", Offset = "0xF6C35C", VA = "0xF6C35C")]
	private void LoadCourseDetails()
	{
	}

	[Token(Token = "0x6000DEE")]
	[Address(RVA = "0xF6CD50", Offset = "0xF6CD50", VA = "0xF6CD50")]
	private void OnCourseCatalogueUpdated()
	{
	}

	[Token(Token = "0x6000DF1")]
	[Address(RVA = "0xF6CDD4", Offset = "0xF6CDD4", VA = "0xF6CDD4")]
	public MainMenuView()
	{
	}
}
[Token(Token = "0x2000202")]
public class PlayerAvatarView : CanvasView
{
	[Token(Token = "0x6000DF2")]
	[Address(RVA = "0xF6CE1C", Offset = "0xF6CE1C", VA = "0xF6CE1C", Slot = "19")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000DF3")]
	[Address(RVA = "0xF6CFC0", Offset = "0xF6CFC0", VA = "0xF6CFC0")]
	public PlayerAvatarView()
	{
	}
}
[Token(Token = "0x2000203")]
public class PutterView : CanvasView
{
	[Token(Token = "0x4000B8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[Space]
	[Header("Putter View Specific Settings")]
	public FilterButton CalibrationButton;

	[Token(Token = "0x4000B8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public TextMeshProUGUI GripToCalibrateText;

	[Token(Token = "0x4000B8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public TextMeshProUGUI ResetCalibrateText;

	[Token(Token = "0x4000B8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public TextMeshProUGUI SaveCalibrateText;

	[Token(Token = "0x4000B90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private float ResetCalibrationHoldButtonTimer;

	[Token(Token = "0x4000B91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	private bool CalibrationResetThisPress;

	[Token(Token = "0x6000DF4")]
	[Address(RVA = "0xF6CFC8", Offset = "0xF6CFC8", VA = "0xF6CFC8", Slot = "9")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000DF5")]
	[Address(RVA = "0xF6D1B4", Offset = "0xF6D1B4", VA = "0xF6D1B4", Slot = "19")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000DF6")]
	[Address(RVA = "0xF6D494", Offset = "0xF6D494", VA = "0xF6D494")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000DF7")]
	[Address(RVA = "0xF6D674", Offset = "0xF6D674", VA = "0xF6D674")]
	private void Update()
	{
	}

	[Token(Token = "0x6000DF8")]
	[Address(RVA = "0xF6D1D0", Offset = "0xF6D1D0", VA = "0xF6D1D0")]
	private void InitializePlatformStrings()
	{
	}

	[Token(Token = "0x6000DF9")]
	[Address(RVA = "0xF6D678", Offset = "0xF6D678", VA = "0xF6D678")]
	private void ManageCalibration()
	{
	}

	[Token(Token = "0x6000DFA")]
	[Address(RVA = "0xF6D9D0", Offset = "0xF6D9D0", VA = "0xF6D9D0")]
	private void SetAndExitCalibration()
	{
	}

	[Token(Token = "0x6000DFB")]
	[Address(RVA = "0xF6DD04", Offset = "0xF6DD04", VA = "0xF6DD04")]
	private void OnPutterCustomGripToggled(bool enabled)
	{
	}

	[Token(Token = "0x6000DFC")]
	[Address(RVA = "0xF6DE14", Offset = "0xF6DE14", VA = "0xF6DE14")]
	public PutterView()
	{
	}
}
[Token(Token = "0x2000204")]
public class UIValueRange : MonoBehaviour
{
	[Token(Token = "0x2000205")]
	[CompilerGenerated]
	private sealed class <UpdatingValue>d__20 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000BA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000BA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000BA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UIValueRange <>4__this;

		[Token(Token = "0x4000BA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float deltaValue;

		[Token(Token = "0x4000BA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <increaseUpdateRateTimer>5__2;

		[Token(Token = "0x4000BA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <updateValueTimer>5__3;

		[Token(Token = "0x170001F0")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000E0A")]
			[Address(RVA = "0xF6E500", Offset = "0xF6E500", VA = "0xF6E500", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001F1")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000E0C")]
			[Address(RVA = "0xF6E548", Offset = "0xF6E548", VA = "0xF6E548", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E07")]
		[Address(RVA = "0xF6E298", Offset = "0xF6E298", VA = "0xF6E298")]
		[DebuggerHidden]
		public <UpdatingValue>d__20(int <>1__state)
		{
		}

		[Token(Token = "0x6000E08")]
		[Address(RVA = "0xF6E364", Offset = "0xF6E364", VA = "0xF6E364", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000E09")]
		[Address(RVA = "0xF6E368", Offset = "0xF6E368", VA = "0xF6E368", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E0B")]
		[Address(RVA = "0xF6E508", Offset = "0xF6E508", VA = "0xF6E508", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000B92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UnityEvent OnValueChanged;

	[Token(Token = "0x4000B93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float minValue;

	[Token(Token = "0x4000B94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float maxValue;

	[Token(Token = "0x4000B95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float defaultValue;

	[Token(Token = "0x4000B96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string postString;

	[Token(Token = "0x4000B97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TextMeshProUGUI text;

	[Token(Token = "0x4000B98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float displayMultiplier;

	[Token(Token = "0x4000B99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public string displayFormat;

	[Token(Token = "0x4000B9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[Space]
	[Header("Update Value on Hold Settings")]
	[Tooltip("REQUIREMENT: StartUpdatingValue Event. Initial time (s) between value updating when button is held. Will be increased up to a max of 4x over the course of 2 x TimeBetweenUpdateRateIncreases (s).")]
	[Range(0.1f, 1f)]
	public float InitialUpdateRate;

	[Token(Token = "0x4000B9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[Tooltip("REQUIREMENT: StartUpdatingValue Event. Time (s) required to hold button down for it to increase update rate 2x. Increases rate max of 2x - i.e. After 2 x TimeBetweenUpdateRateIncreases (s) is passed it will no longer update the rate.")]
	[Range(0.5f, 5f)]
	public float TimeBetweenUpdateRateIncreases;

	[Token(Token = "0x4000B9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[Tooltip("Default: True. When values is changed it is saved. In some cases, ex. Calibration Menu, we don't want to save value changes until they're applied")]
	[Space]
	[Header("Special Settings")]
	public bool SaveValueOnValueChange;

	[Token(Token = "0x4000B9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[Tooltip("Local store of latest value. Used when SaveValueOnValueChange is False so it can be applied later if needed.")]
	private float lastValue;

	[Token(Token = "0x4000B9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private SavableFloat Savable;

	[Token(Token = "0x4000B9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Coroutine UpdatingValueCoroutine;

	[Token(Token = "0x6000DFD")]
	[Address(RVA = "0xF6DE1C", Offset = "0xF6DE1C", VA = "0xF6DE1C")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x6000DFE")]
	[Address(RVA = "0xF6DF08", Offset = "0xF6DF08", VA = "0xF6DF08")]
	public void Initialize(SavableFloat savable)
	{
	}

	[Token(Token = "0x6000DFF")]
	[Address(RVA = "0xF6DF3C", Offset = "0xF6DF3C", VA = "0xF6DF3C")]
	public void SetValue(float value)
	{
	}

	[Token(Token = "0x6000E00")]
	[Address(RVA = "0xF6E038", Offset = "0xF6E038", VA = "0xF6E038")]
	public void UpdateValue(float deltaValue)
	{
	}

	[Token(Token = "0x6000E01")]
	[Address(RVA = "0xF6E13C", Offset = "0xF6E13C", VA = "0xF6E13C")]
	public void ManuallySaveValue()
	{
	}

	[Token(Token = "0x6000E02")]
	[Address(RVA = "0xF6E1CC", Offset = "0xF6E1CC", VA = "0xF6E1CC")]
	public void StartUpdatingValue(float deltaValue)
	{
	}

	[Token(Token = "0x6000E03")]
	[Address(RVA = "0xF6E220", Offset = "0xF6E220", VA = "0xF6E220")]
	[IteratorStateMachine(typeof(<UpdatingValue>d__20))]
	private IEnumerator UpdatingValue(float deltaValue)
	{
		return null;
	}

	[Token(Token = "0x6000E04")]
	[Address(RVA = "0xF6E2C0", Offset = "0xF6E2C0", VA = "0xF6E2C0")]
	public void StopUpdatingValue()
	{
	}

	[Token(Token = "0x6000E05")]
	[Address(RVA = "0xF6DEA4", Offset = "0xF6DEA4", VA = "0xF6DEA4")]
	private void UpdateText(float value)
	{
	}

	[Token(Token = "0x6000E06")]
	[Address(RVA = "0xF6E2D4", Offset = "0xF6E2D4", VA = "0xF6E2D4")]
	public UIValueRange()
	{
	}
}
[Token(Token = "0x2000206")]
public class UndoStrokeButton : MonoBehaviour
{
	[Token(Token = "0x4000BA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private CanvasGroup canvasGroup;

	[Token(Token = "0x6000E0D")]
	[Address(RVA = "0xF6E550", Offset = "0xF6E550", VA = "0xF6E550")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E0E")]
	[Address(RVA = "0xF6E5FC", Offset = "0xF6E5FC", VA = "0xF6E5FC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E0F")]
	[Address(RVA = "0xF6E844", Offset = "0xF6E844", VA = "0xF6E844")]
	public UndoStrokeButton()
	{
	}
}
[Token(Token = "0x2000207")]
public class VersionNumber : MonoBehaviour
{
	[Token(Token = "0x4000BA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMeshProUGUI textField;

	[Token(Token = "0x4000BA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private string _format;

	[Token(Token = "0x6000E10")]
	[Address(RVA = "0xF6E84C", Offset = "0xF6E84C", VA = "0xF6E84C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E11")]
	[Address(RVA = "0xF6E924", Offset = "0xF6E924", VA = "0xF6E924")]
	public VersionNumber()
	{
	}
}
[Token(Token = "0x2000208")]
public class VRArrowToBall : BallDecoration
{
	[Token(Token = "0x4000BA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SpriteRenderer arrow;

	[Token(Token = "0x4000BAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static VRArrowToBall instance;

	[Token(Token = "0x4000BAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool showArrow;

	[Token(Token = "0x6000E12")]
	[Address(RVA = "0xF6E974", Offset = "0xF6E974", VA = "0xF6E974")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000E13")]
	[Address(RVA = "0xF6E9C0", Offset = "0xF6E9C0", VA = "0xF6E9C0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E14")]
	[Address(RVA = "0xF6EA40", Offset = "0xF6EA40", VA = "0xF6EA40")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000E15")]
	[Address(RVA = "0xF6E9C4", Offset = "0xF6E9C4", VA = "0xF6E9C4")]
	public void UpdateBallLocator()
	{
	}

	[Token(Token = "0x6000E16")]
	[Address(RVA = "0xF6F1E0", Offset = "0xF6F1E0", VA = "0xF6F1E0")]
	public VRArrowToBall()
	{
	}
}
[Token(Token = "0x2000209")]
public class VRCalibration : MonoBehaviour
{
	[Token(Token = "0x4000BAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UnityEvent firstRun;

	[Token(Token = "0x6000E17")]
	[Address(RVA = "0xF6F1F0", Offset = "0xF6F1F0", VA = "0xF6F1F0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000E18")]
	[Address(RVA = "0xF6F280", Offset = "0xF6F280", VA = "0xF6F280")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E19")]
	[Address(RVA = "0xF6F2E8", Offset = "0xF6F2E8", VA = "0xF6F2E8")]
	public VRCalibration()
	{
	}
}
[Token(Token = "0x200020A")]
public class VRGrabbable : MonoBehaviour
{
	[Token(Token = "0x200020B")]
	public class Pose
	{
		[Token(Token = "0x4000BB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 p;

		[Token(Token = "0x4000BB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Quaternion r;

		[Token(Token = "0x4000BB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform target;

		[Token(Token = "0x4000BB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform parent;

		[Token(Token = "0x6000E2D")]
		[Address(RVA = "0xF6F69C", Offset = "0xF6F69C", VA = "0xF6F69C")]
		public Pose(Transform _target)
		{
		}

		[Token(Token = "0x6000E2E")]
		[Address(RVA = "0xF6F79C", Offset = "0xF6F79C", VA = "0xF6F79C")]
		public void Set()
		{
		}

		[Token(Token = "0x6000E2F")]
		[Address(RVA = "0xF6F910", Offset = "0xF6F910", VA = "0xF6F910")]
		public void Restore()
		{
		}
	}

	[Token(Token = "0x200020C")]
	[CompilerGenerated]
	private sealed class <_SnapTo>d__30 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000BBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000BBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000BBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public VRGrabbable <>4__this;

		[Token(Token = "0x4000BBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <time>5__2;

		[Token(Token = "0x170001F6")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000E33")]
			[Address(RVA = "0xF6FD80", Offset = "0xF6FD80", VA = "0xF6FD80", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001F7")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000E35")]
			[Address(RVA = "0xF6FDC8", Offset = "0xF6FDC8", VA = "0xF6FDC8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E30")]
		[Address(RVA = "0xF6FA0C", Offset = "0xF6FA0C", VA = "0xF6FA0C")]
		[DebuggerHidden]
		public <_SnapTo>d__30(int <>1__state)
		{
		}

		[Token(Token = "0x6000E31")]
		[Address(RVA = "0xF6FBC4", Offset = "0xF6FBC4", VA = "0xF6FBC4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000E32")]
		[Address(RVA = "0xF6FBC8", Offset = "0xF6FBC8", VA = "0xF6FBC8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E34")]
		[Address(RVA = "0xF6FD88", Offset = "0xF6FD88", VA = "0xF6FD88", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000BB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AnimationCurve EaseInOut;

	[Token(Token = "0x4000BB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float snapTime;

	[Token(Token = "0x4000BB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float maxDistance;

	[Token(Token = "0x4000BB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float maxAngle;

	[Token(Token = "0x170001F2")]
	public Rigidbody rb
	{
		[Token(Token = "0x6000E1E")]
		[Address(RVA = "0xF6F5C0", Offset = "0xF6F5C0", VA = "0xF6F5C0")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000E1F")]
		[Address(RVA = "0xF6F5C8", Offset = "0xF6F5C8", VA = "0xF6F5C8")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x170001F3")]
	public VRGrabber grabbedBy
	{
		[Token(Token = "0x6000E20")]
		[Address(RVA = "0xF6F5D0", Offset = "0xF6F5D0", VA = "0xF6F5D0")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000E21")]
		[Address(RVA = "0xF6F5D8", Offset = "0xF6F5D8", VA = "0xF6F5D8")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x170001F4")]
	public Pose pose
	{
		[Token(Token = "0x6000E22")]
		[Address(RVA = "0xF6F5E0", Offset = "0xF6F5E0", VA = "0xF6F5E0")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000E23")]
		[Address(RVA = "0xF6F5E8", Offset = "0xF6F5E8", VA = "0xF6F5E8")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x170001F5")]
	public bool isGrabbed
	{
		[Token(Token = "0x6000E25")]
		[Address(RVA = "0xF6F6C8", Offset = "0xF6F6C8", VA = "0xF6F6C8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x14000033")]
	public event Action OnGrabBegin
	{
		[Token(Token = "0x6000E1A")]
		[Address(RVA = "0xF6F350", Offset = "0xF6F350", VA = "0xF6F350")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000E1B")]
		[Address(RVA = "0xF6F3EC", Offset = "0xF6F3EC", VA = "0xF6F3EC")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000034")]
	public event Action OnGrabEnd
	{
		[Token(Token = "0x6000E1C")]
		[Address(RVA = "0xF6F488", Offset = "0xF6F488", VA = "0xF6F488")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000E1D")]
		[Address(RVA = "0xF6F524", Offset = "0xF6F524", VA = "0xF6F524")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6000E24")]
	[Address(RVA = "0xF6F5F0", Offset = "0xF6F5F0", VA = "0xF6F5F0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000E26")]
	[Address(RVA = "0xF6F728", Offset = "0xF6F728", VA = "0xF6F728")]
	public void GrabBegin(VRGrabber grabber)
	{
	}

	[Token(Token = "0x6000E27")]
	[Address(RVA = "0xF6F820", Offset = "0xF6F820", VA = "0xF6F820")]
	public void GrabEnd(Vector3 linearVelocity, Vector3 angularVelocity)
	{
	}

	[Token(Token = "0x6000E28")]
	[Address(RVA = "0xF6F8D0", Offset = "0xF6F8D0", VA = "0xF6F8D0")]
	public void GrabEnd()
	{
	}

	[Token(Token = "0x6000E29")]
	[Address(RVA = "0xF6F964", Offset = "0xF6F964", VA = "0xF6F964")]
	public void GrabAbort()
	{
	}

	[Token(Token = "0x6000E2A")]
	[Address(RVA = "0xF6F7F4", Offset = "0xF6F7F4", VA = "0xF6F7F4")]
	private void SnapTo(Transform snapTarget)
	{
	}

	[Token(Token = "0x6000E2B")]
	[Address(RVA = "0xF6F9A4", Offset = "0xF6F9A4", VA = "0xF6F9A4")]
	[IteratorStateMachine(typeof(<_SnapTo>d__30))]
	private IEnumerator _SnapTo(Transform snapTarget)
	{
		return null;
	}

	[Token(Token = "0x6000E2C")]
	[Address(RVA = "0xF6FA34", Offset = "0xF6FA34", VA = "0xF6FA34")]
	public VRGrabbable()
	{
	}
}
[Token(Token = "0x200020E")]
public class VRGrabber : MonoBehaviour
{
	[Token(Token = "0x4000BC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform pointer;

	[Token(Token = "0x4000BC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform attach;

	[Token(Token = "0x4000BC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private VRGrabbable grabbed;

	[Token(Token = "0x4000BC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public VRGrabbable[] grabbables;

	[Token(Token = "0x4000BC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private VelocityEstimator estimator;

	[Token(Token = "0x4000BC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static VRGrabber instance;

	[Token(Token = "0x170001F8")]
	public bool isGrabbing
	{
		[Token(Token = "0x6000E3A")]
		[Address(RVA = "0xF6FE44", Offset = "0xF6FE44", VA = "0xF6FE44")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000E3B")]
		[Address(RVA = "0xF6FE4C", Offset = "0xF6FE4C", VA = "0xF6FE4C")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x170001F9")]
	public bool HasObject
	{
		[Token(Token = "0x6000E41")]
		[Address(RVA = "0xF700F4", Offset = "0xF700F4", VA = "0xF700F4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170001FA")]
	public bool PickUpIsPressed
	{
		[Token(Token = "0x6000E42")]
		[Address(RVA = "0xF70090", Offset = "0xF70090", VA = "0xF70090")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170001FB")]
	public bool PickUpIsUp
	{
		[Token(Token = "0x6000E43")]
		[Address(RVA = "0xF7002C", Offset = "0xF7002C", VA = "0xF7002C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170001FC")]
	public bool IsTurning
	{
		[Token(Token = "0x6000E44")]
		[Address(RVA = "0xF70628", Offset = "0xF70628", VA = "0xF70628")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000E3C")]
	[Address(RVA = "0xF6FE58", Offset = "0xF6FE58", VA = "0xF6FE58")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000E3D")]
	[Address(RVA = "0xF6FED4", Offset = "0xF6FED4", VA = "0xF6FED4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E3E")]
	[Address(RVA = "0xF6FF54", Offset = "0xF6FF54", VA = "0xF6FF54")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E3F")]
	[Address(RVA = "0xF7053C", Offset = "0xF7053C", VA = "0xF7053C")]
	public void GrabObject(VRGrabbable obj)
	{
	}

	[Token(Token = "0x6000E40")]
	[Address(RVA = "0xF70154", Offset = "0xF70154", VA = "0xF70154")]
	public void ReleaseObject()
	{
	}

	[Token(Token = "0x6000E45")]
	[Address(RVA = "0xF702A8", Offset = "0xF702A8", VA = "0xF702A8")]
	public VRGrabbable GetObjectDirectional()
	{
		return null;
	}

	[Token(Token = "0x6000E46")]
	[Address(RVA = "0xF706C4", Offset = "0xF706C4", VA = "0xF706C4")]
	public VRGrabbable GetClosestObject()
	{
		return null;
	}

	[Token(Token = "0x6000E47")]
	[Address(RVA = "0xF70824", Offset = "0xF70824", VA = "0xF70824")]
	public VRGrabber()
	{
	}
}
[Token(Token = "0x200020F")]
public class VRKey : MonoBehaviour
{
	[Token(Token = "0x4000BC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private VRKeyboard vrKeyboard;

	[Token(Token = "0x4000BC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshProUGUI characterDisplay;

	[Token(Token = "0x6000E48")]
	[Address(RVA = "0xF7082C", Offset = "0xF7082C", VA = "0xF7082C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E49")]
	[Address(RVA = "0xF7088C", Offset = "0xF7088C", VA = "0xF7088C")]
	public void SendKey()
	{
	}

	[Token(Token = "0x6000E4A")]
	[Address(RVA = "0xF7097C", Offset = "0xF7097C", VA = "0xF7097C")]
	public VRKey()
	{
	}
}
[Token(Token = "0x2000210")]
public class VRKeyboard : MonoBehaviour
{
	[Token(Token = "0x2000211")]
	[CompilerGenerated]
	private sealed class <DelayedUpdateText>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000BCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000BD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000BD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public VRKeyboard <>4__this;

		[Token(Token = "0x170001FD")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000E56")]
			[Address(RVA = "0xF70D14", Offset = "0xF70D14", VA = "0xF70D14", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001FE")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000E58")]
			[Address(RVA = "0xF70D5C", Offset = "0xF70D5C", VA = "0xF70D5C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E53")]
		[Address(RVA = "0xF70A0C", Offset = "0xF70A0C", VA = "0xF70A0C")]
		[DebuggerHidden]
		public <DelayedUpdateText>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6000E54")]
		[Address(RVA = "0xF70CC0", Offset = "0xF70CC0", VA = "0xF70CC0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000E55")]
		[Address(RVA = "0xF70CC4", Offset = "0xF70CC4", VA = "0xF70CC4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E57")]
		[Address(RVA = "0xF70D1C", Offset = "0xF70D1C", VA = "0xF70D1C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000BCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMeshProUGUI inputDisplay;

	[Token(Token = "0x4000BCB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshProUGUI defaultMessage;

	[Token(Token = "0x4000BCC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float delay;

	[Token(Token = "0x4000BCD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int maxCharacters;

	[Token(Token = "0x4000BCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject okButton;

	[Token(Token = "0x6000E4B")]
	[Address(RVA = "0xF70984", Offset = "0xF70984", VA = "0xF70984")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x6000E4C")]
	[Address(RVA = "0xF709A4", Offset = "0xF709A4", VA = "0xF709A4")]
	[IteratorStateMachine(typeof(<DelayedUpdateText>d__6))]
	private IEnumerator DelayedUpdateText()
	{
		return null;
	}

	[Token(Token = "0x6000E4D")]
	[Address(RVA = "0xF708C8", Offset = "0xF708C8", VA = "0xF708C8")]
	public void AddCharacter(string character)
	{
	}

	[Token(Token = "0x6000E4E")]
	[Address(RVA = "0xF70B40", Offset = "0xF70B40", VA = "0xF70B40")]
	public void Backspace()
	{
	}

	[Token(Token = "0x6000E4F")]
	[Address(RVA = "0xF70C20", Offset = "0xF70C20", VA = "0xF70C20")]
	public void Clear()
	{
	}

	[Token(Token = "0x6000E50")]
	[Address(RVA = "0xF70C84", Offset = "0xF70C84", VA = "0xF70C84")]
	public void Update()
	{
	}

	[Token(Token = "0x6000E51")]
	[Address(RVA = "0xF70A34", Offset = "0xF70A34", VA = "0xF70A34")]
	public void UpdateText()
	{
	}

	[Token(Token = "0x6000E52")]
	[Address(RVA = "0xF70CB0", Offset = "0xF70CB0", VA = "0xF70CB0")]
	public VRKeyboard()
	{
	}
}
[Token(Token = "0x2000212")]
public class VRLostBallGrabber : MonoBehaviour
{
	[Token(Token = "0x4000BD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public VRPointer vrPointer;

	[Token(Token = "0x4000BD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static VRLostBallGrabber instance;

	[Token(Token = "0x6000E59")]
	[Address(RVA = "0xF70D64", Offset = "0xF70D64", VA = "0xF70D64")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000E5A")]
	[Address(RVA = "0xF70DB0", Offset = "0xF70DB0", VA = "0xF70DB0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E5B")]
	[Address(RVA = "0xF70DD0", Offset = "0xF70DD0", VA = "0xF70DD0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000E5C")]
	[Address(RVA = "0xF70E50", Offset = "0xF70E50", VA = "0xF70E50")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000E5D")]
	[Address(RVA = "0xF70ED0", Offset = "0xF70ED0", VA = "0xF70ED0")]
	private void OnGodMode()
	{
	}

	[Token(Token = "0x6000E5E")]
	[Address(RVA = "0xF70EF4", Offset = "0xF70EF4", VA = "0xF70EF4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E5F")]
	[Address(RVA = "0xF710F8", Offset = "0xF710F8", VA = "0xF710F8")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000E60")]
	[Address(RVA = "0xF712BC", Offset = "0xF712BC", VA = "0xF712BC")]
	public VRLostBallGrabber()
	{
	}
}
[Token(Token = "0x2000213")]
public class VRPointer : MonoBehaviour
{
	[Token(Token = "0x4000BD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UserActionType UserActionType;

	[Token(Token = "0x4000BD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public LayerMask layers;

	[Token(Token = "0x4000BD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject line;

	[Token(Token = "0x4000BD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject point;

	[Token(Token = "0x4000BD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float distance;

	[Token(Token = "0x4000BD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool holdForTrigger;

	[Token(Token = "0x4000BDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
	public bool pauseMenu;

	[Token(Token = "0x4000BDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x36")]
	public bool showHitPoint;

	[Token(Token = "0x4000BDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x37")]
	public bool dialogueBox;

	[Token(Token = "0x4000BDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool foxhunt;

	[Token(Token = "0x4000BDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	private bool showLine;

	[Token(Token = "0x4000BDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
	public bool useExternalTrigger;

	[Token(Token = "0x4000BE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3B")]
	public bool showWhenCloseToMainMenu;

	[Token(Token = "0x4000BE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public bool subscribeToGlobalTrigger;

	[Token(Token = "0x4000BE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
	[HideInInspector]
	public bool closeToMainMenu;

	[Token(Token = "0x4000BE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3F")]
	private bool manuallyActivated;

	[Token(Token = "0x4000BE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool triggerPressedLastFrame;

	[Token(Token = "0x4000BE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private IInteractable lastFrameHitInteractable;

	[Token(Token = "0x4000BE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private IInteractable curFrameHitInteractable;

	[Token(Token = "0x170001FF")]
	public bool triggerPressed
	{
		[Token(Token = "0x6000E61")]
		[Address(RVA = "0xF712C4", Offset = "0xF712C4", VA = "0xF712C4")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000E62")]
		[Address(RVA = "0xF712CC", Offset = "0xF712CC", VA = "0xF712CC")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x6000E63")]
	[Address(RVA = "0xF712D8", Offset = "0xF712D8", VA = "0xF712D8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000E64")]
	[Address(RVA = "0xF714D4", Offset = "0xF714D4", VA = "0xF714D4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000E65")]
	[Address(RVA = "0xF716C8", Offset = "0xF716C8", VA = "0xF716C8")]
	private bool IsVRPointerActive()
	{
		return default(bool);
	}

	[Token(Token = "0x6000E66")]
	[Address(RVA = "0xF719C8", Offset = "0xF719C8", VA = "0xF719C8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E67")]
	[Address(RVA = "0xF71A8C", Offset = "0xF71A8C", VA = "0xF71A8C")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000E68")]
	[Address(RVA = "0xF7208C", Offset = "0xF7208C", VA = "0xF7208C")]
	private void ToggleVRPointer(bool isOn)
	{
	}

	[Token(Token = "0x6000E69")]
	[Address(RVA = "0xF710C4", Offset = "0xF710C4", VA = "0xF710C4")]
	public void PullTrigger()
	{
	}

	[Token(Token = "0x6000E6A")]
	[Address(RVA = "0xF712B4", Offset = "0xF712B4", VA = "0xF712B4")]
	public void HideLine()
	{
	}

	[Token(Token = "0x6000E6B")]
	[Address(RVA = "0xF710B8", Offset = "0xF710B8", VA = "0xF710B8")]
	public void ShowLine()
	{
	}

	[Token(Token = "0x6000E6C")]
	[Address(RVA = "0xF70EEC", Offset = "0xF70EEC", VA = "0xF70EEC")]
	public void ReleaseTrigger()
	{
	}

	[Token(Token = "0x6000E6D")]
	[Address(RVA = "0xF72098", Offset = "0xF72098", VA = "0xF72098")]
	public void ManualActivation(bool activationState)
	{
	}

	[Token(Token = "0x6000E6E")]
	[Address(RVA = "0xF716CC", Offset = "0xF716CC", VA = "0xF716CC")]
	private bool CanUpdate()
	{
		return default(bool);
	}

	[Token(Token = "0x6000E6F")]
	[Address(RVA = "0xF720A4", Offset = "0xF720A4", VA = "0xF720A4")]
	public VRPointer()
	{
	}
}
[Token(Token = "0x2000214")]
public class VRPointerDetector : MonoBehaviour
{
	[Token(Token = "0x4000BE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float distance;

	[Token(Token = "0x4000BEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Collider col;

	[Token(Token = "0x4000BEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Plane plane;

	[Token(Token = "0x4000BEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Ray ray;

	[Token(Token = "0x4000BED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private RaycastHit hit;

	[Token(Token = "0x17000200")]
	public bool isPointing
	{
		[Token(Token = "0x6000E70")]
		[Address(RVA = "0xF720CC", Offset = "0xF720CC", VA = "0xF720CC")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000E71")]
		[Address(RVA = "0xF720D4", Offset = "0xF720D4", VA = "0xF720D4")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000201")]
	public bool isAR
	{
		[Token(Token = "0x6000E78")]
		[Address(RVA = "0xF72708", Offset = "0xF72708", VA = "0xF72708")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000E72")]
	[Address(RVA = "0xF720E0", Offset = "0xF720E0", VA = "0xF720E0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000E73")]
	[Address(RVA = "0xF721FC", Offset = "0xF721FC", VA = "0xF721FC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000E74")]
	[Address(RVA = "0xF72204", Offset = "0xF72204", VA = "0xF72204")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E75")]
	[Address(RVA = "0xF72634", Offset = "0xF72634", VA = "0xF72634")]
	private Vector3 GetPointerDirection()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000E76")]
	[Address(RVA = "0xF72538", Offset = "0xF72538", VA = "0xF72538")]
	private Transform GetPointer()
	{
		return null;
	}

	[Token(Token = "0x6000E77")]
	[Address(RVA = "0xF722D4", Offset = "0xF722D4", VA = "0xF722D4")]
	private bool CanUpdate()
	{
		return default(bool);
	}

	[Token(Token = "0x6000E79")]
	[Address(RVA = "0xF727E0", Offset = "0xF727E0", VA = "0xF727E0")]
	public VRPointerDetector()
	{
	}
}
[Token(Token = "0x2000215")]
public class VRPointerHover : MonoBehaviour
{
	[Token(Token = "0x4000BEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UnityEvent onHoverEvent;

	[Token(Token = "0x4000BEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UnityEvent onHoverExitEvent;

	[Token(Token = "0x4000BF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool startedHovering;

	[Token(Token = "0x4000BF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	private bool stillHovering;

	[Token(Token = "0x6000E7A")]
	[Address(RVA = "0xF727F0", Offset = "0xF727F0", VA = "0xF727F0")]
	public void LateUpdate()
	{
	}

	[Token(Token = "0x6000E7B")]
	[Address(RVA = "0xF72840", Offset = "0xF72840", VA = "0xF72840")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x6000E7C")]
	[Address(RVA = "0xF72074", Offset = "0xF72074", VA = "0xF72074")]
	public void Hover()
	{
	}

	[Token(Token = "0x6000E7D")]
	[Address(RVA = "0xF7286C", Offset = "0xF7286C", VA = "0xF7286C")]
	public void OnHover()
	{
	}

	[Token(Token = "0x6000E7E")]
	[Address(RVA = "0xF7281C", Offset = "0xF7281C", VA = "0xF7281C")]
	public void OnHoverExit()
	{
	}

	[Token(Token = "0x6000E7F")]
	[Address(RVA = "0xF72894", Offset = "0xF72894", VA = "0xF72894")]
	public VRPointerHover()
	{
	}
}
[Token(Token = "0x2000216")]
public class WarpCanvas : MonoBehaviour
{
	[Token(Token = "0x4000BF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public CanvasGroup leftWarpButton;

	[Token(Token = "0x4000BF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public CanvasGroup rightWarpButton;

	[Token(Token = "0x4000BF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Image alignIconLeft;

	[Token(Token = "0x4000BF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Image moveIconLeft;

	[Token(Token = "0x4000BF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Image observeIconLeft;

	[Token(Token = "0x4000BF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Image alignIconRight;

	[Token(Token = "0x4000BF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Image moveIconRight;

	[Token(Token = "0x4000BF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Image observeIconRight;

	[Token(Token = "0x4000BFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float fadeTime;

	[Token(Token = "0x17000202")]
	public bool warpAvailable
	{
		[Token(Token = "0x6000E82")]
		[Address(RVA = "0xF72D64", Offset = "0xF72D64", VA = "0xF72D64")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000203")]
	public bool lineUpPutt
	{
		[Token(Token = "0x6000E83")]
		[Address(RVA = "0xF72E0C", Offset = "0xF72E0C", VA = "0xF72E0C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000E80")]
	[Address(RVA = "0xF7289C", Offset = "0xF7289C", VA = "0xF7289C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E81")]
	[Address(RVA = "0xF728A0", Offset = "0xF728A0", VA = "0xF728A0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E84")]
	[Address(RVA = "0xF72EB4", Offset = "0xF72EB4", VA = "0xF72EB4")]
	public WarpCanvas()
	{
	}
}
[Token(Token = "0x2000217")]
public class WarpToBall : MonoBehaviour
{
	[Token(Token = "0x2000218")]
	public delegate void WarpToBallEvent();

	[Token(Token = "0x4000BFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float arWarpDistanceOffset;

	[Token(Token = "0x4000BFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float delayTimer;

	[Token(Token = "0x4000BFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[HideInInspector]
	public static WarpToBall instance;

	[Token(Token = "0x4000BFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	private bool warpInstantly;

	[Token(Token = "0x4000C00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Transform refTransform;

	[Token(Token = "0x4000C02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public Vector3 vectorToBall;

	[Token(Token = "0x4000C03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[HideInInspector]
	public Vector3 horizontalVectorToBall;

	[Token(Token = "0x4000C05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	public bool doNotWarp;

	[Token(Token = "0x4000C06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[HideInInspector]
	public Vector3 smoothLocomotionFakeFloorPosition;

	[Token(Token = "0x4000C07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[Tooltip("This was for Myst, since the triggers you want to aim at are closer.")]
	public bool aimAtClosestPin;

	[Token(Token = "0x17000204")]
	private float vrWarpDistanceOffset
	{
		[Token(Token = "0x6000E85")]
		[Address(RVA = "0xF72EC8", Offset = "0xF72EC8", VA = "0xF72EC8")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000205")]
	public bool warpAvailable
	{
		[Token(Token = "0x6000E86")]
		[Address(RVA = "0xF72F44", Offset = "0xF72F44", VA = "0xF72F44")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000E87")]
		[Address(RVA = "0xF72F4C", Offset = "0xF72F4C", VA = "0xF72F4C")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000206")]
	public bool lineUpPutt
	{
		[Token(Token = "0x6000E8A")]
		[Address(RVA = "0xF730D0", Offset = "0xF730D0", VA = "0xF730D0")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000E8B")]
		[Address(RVA = "0xF730D8", Offset = "0xF730D8", VA = "0xF730D8")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x14000035")]
	public static event WarpToBallEvent OnWarpToBall
	{
		[Token(Token = "0x6000E88")]
		[Address(RVA = "0xF72F58", Offset = "0xF72F58", VA = "0xF72F58")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000E89")]
		[Address(RVA = "0xF73014", Offset = "0xF73014", VA = "0xF73014")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6000E8C")]
	[Address(RVA = "0xF730E4", Offset = "0xF730E4", VA = "0xF730E4")]
	public void Awake()
	{
	}

	[Token(Token = "0x6000E8D")]
	[Address(RVA = "0xF73130", Offset = "0xF73130", VA = "0xF73130")]
	public void Start()
	{
	}

	[Token(Token = "0x6000E8E")]
	[Address(RVA = "0xF731B4", Offset = "0xF731B4", VA = "0xF731B4")]
	public void RotateY(float degrees)
	{
	}

	[Token(Token = "0x6000E8F")]
	[Address(RVA = "0xF73210", Offset = "0xF73210", VA = "0xF73210")]
	public void Update()
	{
	}

	[Token(Token = "0x6000E90")]
	[Address(RVA = "0xF73AE0", Offset = "0xF73AE0", VA = "0xF73AE0")]
	public void DoStartingWarpRotation()
	{
	}

	[Token(Token = "0x6000E91")]
	[Address(RVA = "0xF73F44", Offset = "0xF73F44", VA = "0xF73F44")]
	public void DoWarpRotationAlways()
	{
	}

	[Token(Token = "0x6000E92")]
	[Address(RVA = "0xF739FC", Offset = "0xF739FC", VA = "0xF739FC")]
	private void PullTrigger()
	{
	}

	[Token(Token = "0x6000E93")]
	[Address(RVA = "0xF73F50", Offset = "0xF73F50", VA = "0xF73F50")]
	public void DoWarpRotation()
	{
	}

	[Token(Token = "0x6000E94")]
	[Address(RVA = "0xF75840", Offset = "0xF75840", VA = "0xF75840")]
	public void WarpToDrivingRange()
	{
	}

	[Token(Token = "0x6000E95")]
	[Address(RVA = "0xF75AE8", Offset = "0xF75AE8", VA = "0xF75AE8")]
	public void WarpToPuttingGreen()
	{
	}

	[Token(Token = "0x6000E96")]
	[Address(RVA = "0xF75C64", Offset = "0xF75C64", VA = "0xF75C64")]
	public WarpToBall()
	{
	}
}
[Token(Token = "0x2000219")]
public class WarpToMenu : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200021A")]
	public enum Edge
	{
		[Token(Token = "0x4000C1B")]
		None,
		[Token(Token = "0x4000C1C")]
		Left,
		[Token(Token = "0x4000C1D")]
		Right,
		[Token(Token = "0x4000C1E")]
		Up,
		[Token(Token = "0x4000C1F")]
		Down
	}

	[Token(Token = "0x200021B")]
	[CompilerGenerated]
	private sealed class <DoWarp>d__72 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000C20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000C21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000C22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WarpToMenuTarget target;

		[Token(Token = "0x4000C23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public WarpToMenu <>4__this;

		[Token(Token = "0x4000C24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float duration;

		[Token(Token = "0x4000C25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private WarpToMenuTarget <previous>5__2;

		[Token(Token = "0x4000C26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Vector3 <startPosition>5__3;

		[Token(Token = "0x4000C27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Quaternion <startRotation>5__4;

		[Token(Token = "0x4000C28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private Vector3 <endPosition>5__5;

		[Token(Token = "0x4000C29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Quaternion <endRotation>5__6;

		[Token(Token = "0x4000C2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float <t>5__7;

		[Token(Token = "0x17000212")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000EE1")]
			[Address(RVA = "0xF7A9D0", Offset = "0xF7A9D0", VA = "0xF7A9D0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000213")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000EE3")]
			[Address(RVA = "0xF7AA18", Offset = "0xF7AA18", VA = "0xF7AA18", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000EDE")]
		[Address(RVA = "0xF79C54", Offset = "0xF79C54", VA = "0xF79C54")]
		[DebuggerHidden]
		public <DoWarp>d__72(int <>1__state)
		{
		}

		[Token(Token = "0x6000EDF")]
		[Address(RVA = "0xF7A5C8", Offset = "0xF7A5C8", VA = "0xF7A5C8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000EE0")]
		[Address(RVA = "0xF7A5CC", Offset = "0xF7A5CC", VA = "0xF7A5CC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000EE2")]
		[Address(RVA = "0xF7A9D8", Offset = "0xF7A9D8", VA = "0xF7A9D8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000C0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Dictionary<string, WarpToMenuTarget> targets;

	[Token(Token = "0x4000C0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static WarpToMenu instance;

	[Token(Token = "0x4000C0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private UnityEngine.InputSystem.InputAction pressAction;

	[Token(Token = "0x4000C0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private WarpToMenuTarget current;

	[Token(Token = "0x4000C11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float edgeSize;

	[Token(Token = "0x4000C13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Canvas canvas;

	[Token(Token = "0x4000C14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[Tooltip("If enabled: Clicking on Menus will Warp Main Camera to them. If disabled either need to use ARNavMenu OR Edge Buttons if enabled")]
	public bool useDirectWarpToMenu;

	[Token(Token = "0x4000C15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	[Tooltip("If enabled: Displays Edge Screen buttons for clear use with Connection transitions")]
	public bool useEdgeButtons;

	[Token(Token = "0x4000C16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5A")]
	[Tooltip("If enabled: Taps on edges of screen that don't hit interactable buttons or WarpToMenuTargets will utilize Connection transitions.")]
	public bool useEdgeTransitions;

	[Token(Token = "0x4000C17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5B")]
	[Tooltip("If enabled: User can only interact with Interactables that are on the WarpToMenuTarget that is Current (i.e. WarpToMenu.current.id needs to match WarpToMenuTarget.id that is hit by raycast)")]
	private bool CurrentWarpTargetInteractOnly;

	[Token(Token = "0x4000C18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[Tooltip("If enabled: ARNavMenu will close when anything besides the ARNavMenu is Clicked")]
	public bool CloseARNavMenuOnOffClick;

	[Token(Token = "0x4000C19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public LayerMask IgnoreLayers;

	[Token(Token = "0x17000207")]
	public bool locked
	{
		[Token(Token = "0x6000E9F")]
		[Address(RVA = "0xF77138", Offset = "0xF77138", VA = "0xF77138")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000EA0")]
		[Address(RVA = "0xF77140", Offset = "0xF77140", VA = "0xF77140")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000208")]
	public bool warping
	{
		[Token(Token = "0x6000EA1")]
		[Address(RVA = "0xF7714C", Offset = "0xF7714C", VA = "0xF7714C")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000EA2")]
		[Address(RVA = "0xF77154", Offset = "0xF77154", VA = "0xF77154")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000209")]
	public Transform lockPose
	{
		[Token(Token = "0x6000EA3")]
		[Address(RVA = "0xF77160", Offset = "0xF77160", VA = "0xF77160")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000EA4")]
		[Address(RVA = "0xF77168", Offset = "0xF77168", VA = "0xF77168")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x1700020A")]
	public Button[] edgeButtons
	{
		[Token(Token = "0x6000EA5")]
		[Address(RVA = "0xF77170", Offset = "0xF77170", VA = "0xF77170")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000EA6")]
		[Address(RVA = "0xF77178", Offset = "0xF77178", VA = "0xF77178")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x1700020B")]
	public static bool IsLocked
	{
		[Token(Token = "0x6000EBC")]
		[Address(RVA = "0xF79654", Offset = "0xF79654", VA = "0xF79654")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700020C")]
	public bool LockedOnMenu
	{
		[Token(Token = "0x6000ED4")]
		[Address(RVA = "0xF7847C", Offset = "0xF7847C", VA = "0xF7847C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700020D")]
	public string currentMenu
	{
		[Token(Token = "0x6000ED5")]
		[Address(RVA = "0xF7A384", Offset = "0xF7A384", VA = "0xF7A384")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700020E")]
	public Transform rig
	{
		[Token(Token = "0x6000ED6")]
		[Address(RVA = "0xF79F38", Offset = "0xF79F38", VA = "0xF79F38")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700020F")]
	public Camera cam
	{
		[Token(Token = "0x6000ED7")]
		[Address(RVA = "0xF78A58", Offset = "0xF78A58", VA = "0xF78A58")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000210")]
	public bool isVR
	{
		[Token(Token = "0x6000ED8")]
		[Address(RVA = "0xF772B4", Offset = "0xF772B4", VA = "0xF772B4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000211")]
	public bool isAR
	{
		[Token(Token = "0x6000ED9")]
		[Address(RVA = "0xF79AA8", Offset = "0xF79AA8", VA = "0xF79AA8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x14000036")]
	public static event Action<WarpToMenuTarget> OnWarpBegin
	{
		[Token(Token = "0x6000E9B")]
		[Address(RVA = "0xF76D70", Offset = "0xF76D70", VA = "0xF76D70")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000E9C")]
		[Address(RVA = "0xF76E60", Offset = "0xF76E60", VA = "0xF76E60")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000037")]
	public static event Action<WarpToMenuTarget> OnWarpEnd
	{
		[Token(Token = "0x6000E9D")]
		[Address(RVA = "0xF76F50", Offset = "0xF76F50", VA = "0xF76F50")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000E9E")]
		[Address(RVA = "0xF77044", Offset = "0xF77044", VA = "0xF77044")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6000EA7")]
	[Address(RVA = "0xF77180", Offset = "0xF77180", VA = "0xF77180")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000EA8")]
	[Address(RVA = "0xF77264", Offset = "0xF77264", VA = "0xF77264")]
	private void Start()
	{
	}

	[Token(Token = "0x6000EA9")]
	[Address(RVA = "0xF775A8", Offset = "0xF775A8", VA = "0xF775A8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000EAA")]
	[Address(RVA = "0xF7770C", Offset = "0xF7770C", VA = "0xF7770C")]
	private void SubscribeToGlobalBroadcasts()
	{
	}

	[Token(Token = "0x6000EAB")]
	[Address(RVA = "0xF77CB4", Offset = "0xF77CB4", VA = "0xF77CB4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000EAC")]
	[Address(RVA = "0xF77D70", Offset = "0xF77D70", VA = "0xF77D70")]
	private void UnsubscribeToGlobalBroadcasts()
	{
	}

	[Token(Token = "0x6000EAD")]
	[Address(RVA = "0xF78318", Offset = "0xF78318", VA = "0xF78318")]
	public void Index(WarpToMenuTarget target)
	{
	}

	[Token(Token = "0x6000EAE")]
	[Address(RVA = "0xF775C0", Offset = "0xF775C0", VA = "0xF775C0")]
	private void AddInputActions()
	{
	}

	[Token(Token = "0x6000EAF")]
	[Address(RVA = "0xF77CCC", Offset = "0xF77CCC", VA = "0xF77CCC")]
	private void RemoveInputActions()
	{
	}

	[Token(Token = "0x6000EB0")]
	[Address(RVA = "0xF77524", Offset = "0xF77524", VA = "0xF77524")]
	private void CreateLockPose()
	{
	}

	[Token(Token = "0x6000EB1")]
	[Address(RVA = "0xF78444", Offset = "0xF78444", VA = "0xF78444")]
	private void OnPressAction()
	{
	}

	[Token(Token = "0x6000EB2")]
	[Address(RVA = "0xF788F0", Offset = "0xF788F0", VA = "0xF788F0")]
	private void OnPressWorldspace()
	{
	}

	[Token(Token = "0x6000EB3")]
	[Address(RVA = "0xF784F8", Offset = "0xF784F8", VA = "0xF784F8")]
	private void OnPressMenu()
	{
	}

	[Token(Token = "0x6000EB4")]
	[Address(RVA = "0xF7902C", Offset = "0xF7902C", VA = "0xF7902C")]
	private bool HasEdge(Vector2 mouse, float _edgeSize = 0.1f)
	{
		return default(bool);
	}

	[Token(Token = "0x6000EB5")]
	[Address(RVA = "0xF79060", Offset = "0xF79060", VA = "0xF79060")]
	private bool TryEdgeWarp(Vector2 mouse, float _edgeSize = 0.1f)
	{
		return default(bool);
	}

	[Token(Token = "0x6000EB6")]
	[Address(RVA = "0xF78B5C", Offset = "0xF78B5C", VA = "0xF78B5C")]
	public WarpToMenuTarget RaycastMenus(Ray ray, [Optional] WarpToMenuTarget exclude)
	{
		return null;
	}

	[Token(Token = "0x6000EB7")]
	[Address(RVA = "0xF78AA4", Offset = "0xF78AA4", VA = "0xF78AA4")]
	private IInteractable RaycastInteractables(Ray ray)
	{
		return null;
	}

	[Token(Token = "0x6000EB8")]
	[Address(RVA = "0xF7738C", Offset = "0xF7738C", VA = "0xF7738C")]
	private void GetEdgeButtons()
	{
	}

	[Token(Token = "0x6000EB9")]
	[Address(RVA = "0xF77400", Offset = "0xF77400", VA = "0xF77400")]
	private void UpdateEdgeButtons()
	{
	}

	[Token(Token = "0x6000EBA")]
	[Address(RVA = "0xF793B0", Offset = "0xF793B0", VA = "0xF793B0")]
	public void OnEdgeButtonClicked(string str)
	{
	}

	[Token(Token = "0x6000EBB")]
	[Address(RVA = "0xF79594", Offset = "0xF79594", VA = "0xF79594")]
	public static void Unlock()
	{
	}

	[Token(Token = "0x6000EBD")]
	[Address(RVA = "0xF79720", Offset = "0xF79720", VA = "0xF79720")]
	public static void WarpARGodMode(string id)
	{
	}

	[Token(Token = "0x6000EBE")]
	[Address(RVA = "0xF79868", Offset = "0xF79868", VA = "0xF79868")]
	public void WarpToMainMenu()
	{
	}

	[Token(Token = "0x6000EBF")]
	[Address(RVA = "0xF798B0", Offset = "0xF798B0", VA = "0xF798B0")]
	public void WarpToCourseSelectionMenu()
	{
	}

	[Token(Token = "0x6000EC0")]
	[Address(RVA = "0xF798F8", Offset = "0xF798F8", VA = "0xF798F8")]
	public void WarpToMultiplayerMenu()
	{
	}

	[Token(Token = "0x6000EC1")]
	[Address(RVA = "0xF79940", Offset = "0xF79940", VA = "0xF79940")]
	public void WarpToPlayerInfoMenu()
	{
	}

	[Token(Token = "0x6000EC2")]
	[Address(RVA = "0xF79988", Offset = "0xF79988", VA = "0xF79988")]
	public void WarpToConnectingMenu()
	{
	}

	[Token(Token = "0x6000EC3")]
	[Address(RVA = "0xF799D0", Offset = "0xF799D0", VA = "0xF799D0")]
	public void WarpToPrivateRoomMenu()
	{
	}

	[Token(Token = "0x6000EC4")]
	[Address(RVA = "0xF79A18", Offset = "0xF79A18", VA = "0xF79A18")]
	public void WarpToPutterSelection()
	{
	}

	[Token(Token = "0x6000EC5")]
	[Address(RVA = "0xF79A60", Offset = "0xF79A60", VA = "0xF79A60")]
	public void WarpToBallSelection()
	{
	}

	[Token(Token = "0x6000EC6")]
	[Address(RVA = "0xF7982C", Offset = "0xF7982C", VA = "0xF7982C")]
	public void WarpAR(string id)
	{
	}

	[Token(Token = "0x6000EC7")]
	[Address(RVA = "0xF79134", Offset = "0xF79134", VA = "0xF79134")]
	public void WarpTo(WarpToMenuTarget.Connection connection, float duration = 1f)
	{
	}

	[Token(Token = "0x6000EC8")]
	[Address(RVA = "0xF790A4", Offset = "0xF790A4", VA = "0xF790A4")]
	public void WarpTo(WarpToMenuTarget target, float duration = 1f)
	{
	}

	[Token(Token = "0x6000EC9")]
	[Address(RVA = "0xF79AC0", Offset = "0xF79AC0", VA = "0xF79AC0")]
	public void ZoomTo(string id, float distance = 5f, float duration = 1f)
	{
	}

	[Token(Token = "0x6000ECA")]
	[Address(RVA = "0xF79470", Offset = "0xF79470", VA = "0xF79470")]
	public void WarpTo(string id, float duration = 1f)
	{
	}

	[Token(Token = "0x6000ECB")]
	[Address(RVA = "0xF79BD0", Offset = "0xF79BD0", VA = "0xF79BD0")]
	[IteratorStateMachine(typeof(<DoWarp>d__72))]
	private IEnumerator DoWarp(WarpToMenuTarget target, float duration = 1f)
	{
		return null;
	}

	[Token(Token = "0x6000ECC")]
	[Address(RVA = "0xF79C7C", Offset = "0xF79C7C", VA = "0xF79C7C")]
	public void Goto(WarpToMenuTarget target)
	{
	}

	[Token(Token = "0x6000ECD")]
	[Address(RVA = "0xF79F8C", Offset = "0xF79F8C", VA = "0xF79F8C")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000ECE")]
	[Address(RVA = "0xF79DFC", Offset = "0xF79DFC", VA = "0xF79DFC")]
	public Vector3 GetOffset(WarpToMenuTarget target)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000ECF")]
	[Address(RVA = "0xF78ED0", Offset = "0xF78ED0", VA = "0xF78ED0")]
	public Edge GetEdge(Vector2 screenpoint, float size = 0.1f)
	{
		return default(Edge);
	}

	[Token(Token = "0x6000ED0")]
	[Address(RVA = "0xF7A338", Offset = "0xF7A338", VA = "0xF7A338")]
	public Edge GetOppositeEdge(Edge e)
	{
		return default(Edge);
	}

	[Token(Token = "0x6000ED1")]
	[Address(RVA = "0xF791E4", Offset = "0xF791E4", VA = "0xF791E4")]
	public Edge GetEdge(string s)
	{
		return default(Edge);
	}

	[Token(Token = "0x6000ED2")]
	[Address(RVA = "0xF7A364", Offset = "0xF7A364", VA = "0xF7A364")]
	public bool IsOuterEdge(Vector2 mouse)
	{
		return default(bool);
	}

	[Token(Token = "0x6000ED3")]
	[Address(RVA = "0xF783EC", Offset = "0xF783EC", VA = "0xF783EC")]
	public bool HasMenu(string id)
	{
		return default(bool);
	}

	[Token(Token = "0x6000EDA")]
	[Address(RVA = "0xF7A418", Offset = "0xF7A418", VA = "0xF7A418")]
	public WarpToMenu()
	{
	}
}
[Token(Token = "0x200021D")]
public class WarpToMenuTarget : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200021E")]
	public class Connection
	{
		[Token(Token = "0x4000C3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public WarpToMenuTarget target;

		[Token(Token = "0x4000C3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public WarpToMenu.Edge edge;

		[Token(Token = "0x6000F0E")]
		[Address(RVA = "0xF7B9E0", Offset = "0xF7B9E0", VA = "0xF7B9E0")]
		public Connection()
		{
		}
	}

	[Token(Token = "0x4000C2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Tooltip("The ID of this menu usef for WarpToMenu.WarpTo(id)")]
	public string id;

	[Token(Token = "0x4000C2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public RectTransform rect;

	[Token(Token = "0x4000C31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<Connection> connections;

	[Token(Token = "0x4000C32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Dictionary<WarpToMenu.Edge, Connection> index;

	[Token(Token = "0x4000C33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public List<CanvasGroup> fadeInCanvases;

	[Token(Token = "0x4000C34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public List<CanvasGroup> fadeOutCanvases;

	[Token(Token = "0x4000C36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject enableObject;

	[Token(Token = "0x4000C37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Vector2 margins;

	[Token(Token = "0x4000C38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Dictionary<int, IInteractable> ChildrenInteractablesDict;

	[Token(Token = "0x17000214")]
	public float height
	{
		[Token(Token = "0x6000EE8")]
		[Address(RVA = "0xF7AA94", Offset = "0xF7AA94", VA = "0xF7AA94")]
		[CompilerGenerated]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000EE9")]
		[Address(RVA = "0xF7AA9C", Offset = "0xF7AA9C", VA = "0xF7AA9C")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000215")]
	public float width
	{
		[Token(Token = "0x6000EEA")]
		[Address(RVA = "0xF7AAA4", Offset = "0xF7AAA4", VA = "0xF7AAA4")]
		[CompilerGenerated]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000EEB")]
		[Address(RVA = "0xF7AAAC", Offset = "0xF7AAAC", VA = "0xF7AAAC")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000216")]
	public Vector3[] corners
	{
		[Token(Token = "0x6000EEC")]
		[Address(RVA = "0xF7AAB4", Offset = "0xF7AAB4", VA = "0xF7AAB4")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000EED")]
		[Address(RVA = "0xF7AABC", Offset = "0xF7AABC", VA = "0xF7AABC")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000217")]
	public BoxCollider col
	{
		[Token(Token = "0x6000EEE")]
		[Address(RVA = "0xF7AAC4", Offset = "0xF7AAC4", VA = "0xF7AAC4")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000EEF")]
		[Address(RVA = "0xF7AACC", Offset = "0xF7AACC", VA = "0xF7AACC")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000218")]
	public bool initialized
	{
		[Token(Token = "0x6000EF0")]
		[Address(RVA = "0xF7AAD4", Offset = "0xF7AAD4", VA = "0xF7AAD4")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000EF1")]
		[Address(RVA = "0xF7AADC", Offset = "0xF7AADC", VA = "0xF7AADC")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000219")]
	public float aspect
	{
		[Token(Token = "0x6000F07")]
		[Address(RVA = "0xF7A30C", Offset = "0xF7A30C", VA = "0xF7A30C")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700021A")]
	public Vector3 position
	{
		[Token(Token = "0x6000F08")]
		[Address(RVA = "0xF7A318", Offset = "0xF7A318", VA = "0xF7A318")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x1700021B")]
	public Vector3 forward
	{
		[Token(Token = "0x6000F09")]
		[Address(RVA = "0xF79F18", Offset = "0xF79F18", VA = "0xF79F18")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x1700021C")]
	public bool isMain
	{
		[Token(Token = "0x6000F0A")]
		[Address(RVA = "0xF78FE0", Offset = "0xF78FE0", VA = "0xF78FE0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700021D")]
	public bool objectEnabled
	{
		[Token(Token = "0x6000F0B")]
		[Address(RVA = "0xF7915C", Offset = "0xF7915C", VA = "0xF7915C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000EF2")]
	[Address(RVA = "0xF7AAE8", Offset = "0xF7AAE8", VA = "0xF7AAE8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000EF3")]
	[Address(RVA = "0xF7ABA4", Offset = "0xF7ABA4", VA = "0xF7ABA4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000EF4")]
	[Address(RVA = "0xF7ABA8", Offset = "0xF7ABA8", VA = "0xF7ABA8")]
	public bool RayHitsMenu(Ray ray, float distance = 100f)
	{
		return default(bool);
	}

	[Token(Token = "0x6000EF5")]
	[Address(RVA = "0xF7AAEC", Offset = "0xF7AAEC", VA = "0xF7AAEC")]
	public void Init()
	{
	}

	[Token(Token = "0x6000EF6")]
	[Address(RVA = "0xF7AE54", Offset = "0xF7AE54", VA = "0xF7AE54")]
	public void AddChildInteractable(IInteractable interactable)
	{
	}

	[Token(Token = "0x6000EF7")]
	[Address(RVA = "0xF7AF10", Offset = "0xF7AF10", VA = "0xF7AF10")]
	public void Reset()
	{
	}

	[Token(Token = "0x6000EF8")]
	[Address(RVA = "0xF7A010", Offset = "0xF7A010", VA = "0xF7A010")]
	[ContextMenu("SetDimensions")]
	public void SetDimensions()
	{
	}

	[Token(Token = "0x6000EF9")]
	[Address(RVA = "0xF7AC58", Offset = "0xF7AC58", VA = "0xF7AC58")]
	public void Index()
	{
	}

	[Token(Token = "0x6000EFA")]
	[Address(RVA = "0xF78F5C", Offset = "0xF78F5C", VA = "0xF78F5C")]
	public bool ContainsInteractable(IInteractable interactable)
	{
		return default(bool);
	}

	[Token(Token = "0x6000EFB")]
	[Address(RVA = "0xF7AF18", Offset = "0xF7AF18", VA = "0xF7AF18")]
	public void WarpToMainMenu()
	{
	}

	[Token(Token = "0x6000EFC")]
	[Address(RVA = "0xF7AFAC", Offset = "0xF7AFAC", VA = "0xF7AFAC")]
	public void WarpToCourseSelectionMenu()
	{
	}

	[Token(Token = "0x6000EFD")]
	[Address(RVA = "0xF7B040", Offset = "0xF7B040", VA = "0xF7B040")]
	public void WarpToPlayerInfoMenu()
	{
	}

	[Token(Token = "0x6000EFE")]
	[Address(RVA = "0xF7B0D4", Offset = "0xF7B0D4", VA = "0xF7B0D4")]
	public void WarpToConnectingMenu()
	{
	}

	[Token(Token = "0x6000EFF")]
	[Address(RVA = "0xF7B168", Offset = "0xF7B168", VA = "0xF7B168")]
	public void WarpToMultiplayerMenu()
	{
	}

	[Token(Token = "0x6000F00")]
	[Address(RVA = "0xF7B1FC", Offset = "0xF7B1FC", VA = "0xF7B1FC")]
	public void WarpToPrivateRoomMenu()
	{
	}

	[Token(Token = "0x6000F01")]
	[Address(RVA = "0xF7B290", Offset = "0xF7B290", VA = "0xF7B290")]
	public void WarpToPutterSelection()
	{
	}

	[Token(Token = "0x6000F02")]
	[Address(RVA = "0xF7B324", Offset = "0xF7B324", VA = "0xF7B324")]
	public void WarpToBallSelection()
	{
	}

	[Token(Token = "0x6000F03")]
	[Address(RVA = "0xF7A9CC", Offset = "0xF7A9CC", VA = "0xF7A9CC")]
	public void OnWarp(float progress)
	{
	}

	[Token(Token = "0x6000F04")]
	[Address(RVA = "0xF7B3B8", Offset = "0xF7B3B8", VA = "0xF7B3B8")]
	private void DoCanvasFades(float progress)
	{
	}

	[Token(Token = "0x6000F05")]
	[Address(RVA = "0xF790BC", Offset = "0xF790BC", VA = "0xF790BC")]
	public Connection GetConnection(WarpToMenu.Edge edge)
	{
		return null;
	}

	[Token(Token = "0x6000F06")]
	[Address(RVA = "0xF79358", Offset = "0xF79358", VA = "0xF79358")]
	public bool HasEdge(WarpToMenu.Edge edge)
	{
		return default(bool);
	}

	[Token(Token = "0x6000F0C")]
	[Address(RVA = "0xF7B5E8", Offset = "0xF7B5E8", VA = "0xF7B5E8")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x6000F0D")]
	[Address(RVA = "0xF7B890", Offset = "0xF7B890", VA = "0xF7B890")]
	public WarpToMenuTarget()
	{
	}
}
[Token(Token = "0x200021F")]
[ExecuteInEditMode]
public class WaterController : MonoBehaviour
{
	[Token(Token = "0x4000C3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Texture2D waveTexture;

	[Token(Token = "0x4000C3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float waveSize;

	[Token(Token = "0x4000C3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float waveSpeed;

	[Token(Token = "0x4000C3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float largeWaveSpeed;

	[Token(Token = "0x4000C40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float largeWaveSize;

	[Token(Token = "0x6000F0F")]
	[Address(RVA = "0xF7B9E8", Offset = "0xF7B9E8", VA = "0xF7B9E8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F10")]
	[Address(RVA = "0xF7BAD8", Offset = "0xF7BAD8", VA = "0xF7BAD8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000F11")]
	[Address(RVA = "0xF7B9EC", Offset = "0xF7B9EC", VA = "0xF7B9EC")]
	public void UpdateProps()
	{
	}

	[Token(Token = "0x6000F12")]
	[Address(RVA = "0xF7BB00", Offset = "0xF7BB00", VA = "0xF7BB00")]
	public WaterController()
	{
	}
}
[Token(Token = "0x2000220")]
public enum XYZAxis
{
	[Token(Token = "0x4000C42")]
	x,
	[Token(Token = "0x4000C43")]
	y,
	[Token(Token = "0x4000C44")]
	z
}
[Token(Token = "0x2000221")]
public enum DriverType
{
	[Token(Token = "0x4000C46")]
	postion,
	[Token(Token = "0x4000C47")]
	rotation
}
[Token(Token = "0x2000222")]
public class WheelRotation : MonoBehaviour
{
	[Token(Token = "0x4000C48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 rotationMagnitude;

	[Token(Token = "0x4000C49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector3 previousPosition;

	[Token(Token = "0x4000C4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3 previousRotation;

	[Token(Token = "0x4000C4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform driver;

	[Token(Token = "0x4000C4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public XYZAxis driverAxis;

	[Token(Token = "0x4000C4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public DriverType driverType;

	[Token(Token = "0x6000F13")]
	[Address(RVA = "0xF7BB14", Offset = "0xF7BB14", VA = "0xF7BB14")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F14")]
	[Address(RVA = "0xF7BBD4", Offset = "0xF7BBD4", VA = "0xF7BBD4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000F15")]
	[Address(RVA = "0xF7BD68", Offset = "0xF7BD68", VA = "0xF7BD68")]
	public WheelRotation()
	{
	}
}
[Token(Token = "0x2000223")]
public class WindmillNightLightningController : MonoBehaviour
{
	[Token(Token = "0x4000C4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Light Cloud3_Light;

	[Token(Token = "0x4000C4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Light Cloud4_Light;

	[Token(Token = "0x4000C50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector3 cloud4Frames123;

	[Token(Token = "0x4000C51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public Vector3 cloud3Frames123;

	[Token(Token = "0x4000C52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector4 cloud4Frames4567;

	[Token(Token = "0x4000C53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Vector3 cloud3Frames456;

	[Token(Token = "0x4000C54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public bool editDuringPlay;

	[Token(Token = "0x4000C55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Color lightColor;

	[Token(Token = "0x4000C56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[Tooltip("Attenuation Radius.  Only used for 'Simple Squared' light model.")]
	public float lightRadius;

	[Token(Token = "0x4000C57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[Tooltip("Light Intensity 1")]
	public float lightIntensity1;

	[Token(Token = "0x4000C58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[Tooltip("Light Intensity 2")]
	public float lightIntensity2;

	[Token(Token = "0x4000C59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	[Tooltip("Light Position 1")]
	public Vector3 lightPosition1;

	[Token(Token = "0x4000C5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[Tooltip("Light Position 2")]
	public Vector3 lightPosition2;

	[Token(Token = "0x4000C5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	[Tooltip("Attenuation Constant 1.  Hotspot attenuation.  Only used for '2 Constants' light model.")]
	public float lightAttnC1;

	[Token(Token = "0x4000C5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[Tooltip("Attenuation Constant 2.  Broader attenuation.  Only used for '2 Constants' light model.")]
	public float lightAttnC2;

	[Token(Token = "0x6000F16")]
	[Address(RVA = "0xF7BD78", Offset = "0xF7BD78", VA = "0xF7BD78")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F17")]
	[Address(RVA = "0xF7BD7C", Offset = "0xF7BD7C", VA = "0xF7BD7C")]
	public void InitializeProps()
	{
	}

	[Token(Token = "0x6000F18")]
	[Address(RVA = "0xF7BE44", Offset = "0xF7BE44", VA = "0xF7BE44")]
	public void UpdateProps()
	{
	}

	[Token(Token = "0x6000F19")]
	[Address(RVA = "0xF7BF1C", Offset = "0xF7BF1C", VA = "0xF7BF1C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000F1A")]
	[Address(RVA = "0xF7C0E0", Offset = "0xF7C0E0", VA = "0xF7C0E0")]
	public WindmillNightLightningController()
	{
	}
}
[Token(Token = "0x2000224")]
public class WindTrigger : CompoundTrigger
{
	[Token(Token = "0x4000C5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public Vector3 targetWindDirection;

	[Token(Token = "0x4000C5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float targetWindSpeed;

	[Token(Token = "0x4000C5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float targetWindIntensity;

	[Token(Token = "0x4000C60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform sourceWindZone;

	[Token(Token = "0x6000F1B")]
	[Address(RVA = "0xF7C10C", Offset = "0xF7C10C", VA = "0xF7C10C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F1C")]
	[Address(RVA = "0xF7C1CC", Offset = "0xF7C1CC", VA = "0xF7C1CC", Slot = "4")]
	protected override void OnCompoundTriggerEnter()
	{
	}

	[Token(Token = "0x6000F1D")]
	[Address(RVA = "0xF7C260", Offset = "0xF7C260", VA = "0xF7C260", Slot = "5")]
	protected override void OnCompoundTriggerExit()
	{
	}

	[Token(Token = "0x6000F1E")]
	[Address(RVA = "0xF7C264", Offset = "0xF7C264", VA = "0xF7C264")]
	public WindTrigger()
	{
	}
}
[Token(Token = "0x2000225")]
public class WMGRemoteConfig : MonoBehaviour
{
	[Token(Token = "0x2000226")]
	public struct userAttributes
	{
	}

	[Token(Token = "0x2000227")]
	public struct appAttributes
	{
	}

	[Token(Token = "0x4000C61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string vrTip1;

	[Token(Token = "0x4000C62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string vrTip2;

	[Token(Token = "0x4000C63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string vrTip3;

	[Token(Token = "0x4000C64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string vrTip4;

	[Token(Token = "0x4000C65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string vrTip5;

	[Token(Token = "0x4000C66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string vrTip6;

	[Token(Token = "0x4000C67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public string vrTip7;

	[Token(Token = "0x4000C68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public string vrTip8;

	[Token(Token = "0x4000C69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public string vrTip9;

	[Token(Token = "0x4000C6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public string vrTip10;

	[Token(Token = "0x4000C6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public string arTip1;

	[Token(Token = "0x4000C6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public string arTip2;

	[Token(Token = "0x4000C6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public string arTip3;

	[Token(Token = "0x4000C6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public string arTip4;

	[Token(Token = "0x4000C6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public string arTip5;

	[Token(Token = "0x4000C70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public string arTip6;

	[Token(Token = "0x4000C71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public string arTip7;

	[Token(Token = "0x4000C72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public string arTip8;

	[Token(Token = "0x4000C73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public string arTip9;

	[Token(Token = "0x4000C74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public string arTip10;

	[Token(Token = "0x4000C75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public string currentVersionString;

	[Token(Token = "0x4000C76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public float currentVersion;

	[Token(Token = "0x4000C77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public string outdatedVersionMessage;

	[Token(Token = "0x4000C78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[HideInInspector]
	public static WMGRemoteConfig instance;

	[Token(Token = "0x4000C79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[HideInInspector]
	public bool initialized;

	[Token(Token = "0x6000F1F")]
	[Address(RVA = "0xF7C2D0", Offset = "0xF7C2D0", VA = "0xF7C2D0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000F20")]
	[Address(RVA = "0xF7C3A8", Offset = "0xF7C3A8", VA = "0xF7C3A8")]
	private void ApplyRemoteSettings()
	{
	}

	[Token(Token = "0x6000F21")]
	[Address(RVA = "0xF7C9EC", Offset = "0xF7C9EC", VA = "0xF7C9EC")]
	public void Reload()
	{
	}

	[Token(Token = "0x6000F22")]
	[Address(RVA = "0xF7C9F0", Offset = "0xF7C9F0", VA = "0xF7C9F0")]
	public WMGRemoteConfig()
	{
	}
}
[Token(Token = "0x2000228")]
public class WorldspaceLayout : MonoBehaviour
{
	[Token(Token = "0x4000C7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Dictionary<string, WorldspaceLayoutTarget[]> targets;

	[Token(Token = "0x6000F23")]
	[Address(RVA = "0xF7CA6C", Offset = "0xF7CA6C", VA = "0xF7CA6C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000F24")]
	[Address(RVA = "0xF7CA70", Offset = "0xF7CA70", VA = "0xF7CA70")]
	private void Init()
	{
	}

	[Token(Token = "0x6000F25")]
	[Address(RVA = "0xF7CDC4", Offset = "0xF7CDC4", VA = "0xF7CDC4")]
	public void SetLayout(string layout)
	{
	}

	[Token(Token = "0x6000F26")]
	[Address(RVA = "0xF7D06C", Offset = "0xF7D06C", VA = "0xF7D06C")]
	public WorldspaceLayout()
	{
	}
}
[Token(Token = "0x2000229")]
public class WorldspaceLayoutTarget : MonoBehaviour
{
	[Token(Token = "0x4000C7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform target;

	[Token(Token = "0x6000F27")]
	[Address(RVA = "0xF7CEE8", Offset = "0xF7CEE8", VA = "0xF7CEE8")]
	public void Apply()
	{
	}

	[Token(Token = "0x6000F28")]
	[Address(RVA = "0xF7D0E8", Offset = "0xF7D0E8", VA = "0xF7D0E8")]
	public WorldspaceLayoutTarget()
	{
	}
}
[Token(Token = "0x200022A")]
[Obsolete("This class is deprecated. See FarBridge.Weywot.InputManager instead.")]
public class XRInput : MonoBehaviour
{
	[Token(Token = "0x4000C7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<UnityEngine.XR.InputDevice> unityXrDevices;

	[Token(Token = "0x4000C7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private UnityEngine.XR.InputDevice unityXrLeftHand;

	[Token(Token = "0x4000C7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private UnityEngine.XR.InputDevice unityXrRightHand;

	[Token(Token = "0x4000C7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private UnityEngine.XR.InputDevice unityXrHead;

	[Token(Token = "0x6000F29")]
	[Address(RVA = "0xF7D0F0", Offset = "0xF7D0F0", VA = "0xF7D0F0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000F2A")]
	[Address(RVA = "0xF7D1B4", Offset = "0xF7D1B4", VA = "0xF7D1B4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F2B")]
	[Address(RVA = "0xF7D270", Offset = "0xF7D270", VA = "0xF7D270")]
	private void OnInputTrackingChanged(XRNodeState xrNodeState)
	{
	}

	[Token(Token = "0x6000F2C")]
	[Address(RVA = "0xF7D168", Offset = "0xF7D168", VA = "0xF7D168")]
	private void UpdateUnityXRDevices()
	{
	}

	[Token(Token = "0x6000F2D")]
	[Address(RVA = "0xF7D274", Offset = "0xF7D274", VA = "0xF7D274")]
	public XRInput()
	{
	}
}
[Token(Token = "0x200022B")]
public class ARRig : MonoBehaviour
{
	[Token(Token = "0x200022C")]
	[CompilerGenerated]
	private sealed class <Start>d__22 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000C95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000C96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000C97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ARRig <>4__this;

		[Token(Token = "0x4000C98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <i>5__2;

		[Token(Token = "0x1700021E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000F3A")]
			[Address(RVA = "0xF7ED80", Offset = "0xF7ED80", VA = "0xF7ED80", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700021F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000F3C")]
			[Address(RVA = "0xF7EDC8", Offset = "0xF7EDC8", VA = "0xF7EDC8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F37")]
		[Address(RVA = "0xF7D370", Offset = "0xF7D370", VA = "0xF7D370")]
		[DebuggerHidden]
		public <Start>d__22(int <>1__state)
		{
		}

		[Token(Token = "0x6000F38")]
		[Address(RVA = "0xF7E6DC", Offset = "0xF7E6DC", VA = "0xF7E6DC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000F39")]
		[Address(RVA = "0xF7E6E0", Offset = "0xF7E6E0", VA = "0xF7E6E0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F3B")]
		[Address(RVA = "0xF7ED88", Offset = "0xF7ED88", VA = "0xF7ED88", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000C80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[HideInInspector]
	public static ARRig instance;

	[Token(Token = "0x4000C81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public Transform driver;

	[Token(Token = "0x4000C82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform driverCurrent;

	[Token(Token = "0x4000C83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Transform driverPrevious;

	[Token(Token = "0x4000C84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject FPSControls;

	[Token(Token = "0x4000C85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public Transform groundOrigin;

	[Token(Token = "0x4000C86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float maxHeight;

	[Token(Token = "0x4000C87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Camera renderCamera;

	[Token(Token = "0x4000C88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private ARCameraBackground arBackground;

	[Token(Token = "0x4000C89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Transform renderCameraCurrent;

	[Token(Token = "0x4000C8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Transform renderCameraPrevious;

	[Token(Token = "0x4000C8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private ARRaycastManager raycastManager;

	[Token(Token = "0x4000C8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private List<ARRaycastHit> arHitResults;

	[Token(Token = "0x4000C8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[HideInInspector]
	public float detectedHeight;

	[Token(Token = "0x4000C8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private float timeToRecalibrateHeight;

	[Token(Token = "0x4000C8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private bool fpsMode;

	[Token(Token = "0x4000C90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[HideInInspector]
	public float fieldOfView;

	[Token(Token = "0x4000C91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[HideInInspector]
	public float yOffset;

	[Token(Token = "0x4000C92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	[HideInInspector]
	public int badPositionFrames;

	[Token(Token = "0x4000C93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private bool lockMode;

	[Token(Token = "0x4000C94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private int trackingFoundCounter;

	[Token(Token = "0x6000F2E")]
	[Address(RVA = "0xF7D27C", Offset = "0xF7D27C", VA = "0xF7D27C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000F2F")]
	[Address(RVA = "0xF7D308", Offset = "0xF7D308", VA = "0xF7D308")]
	[IteratorStateMachine(typeof(<Start>d__22))]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000F30")]
	[Address(RVA = "0xF7D398", Offset = "0xF7D398", VA = "0xF7D398")]
	private void ToggleLockMode()
	{
	}

	[Token(Token = "0x6000F31")]
	[Address(RVA = "0xF7D3A8", Offset = "0xF7D3A8", VA = "0xF7D3A8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000F32")]
	[Address(RVA = "0xF7DED4", Offset = "0xF7DED4", VA = "0xF7DED4")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000F33")]
	[Address(RVA = "0xF7DF10", Offset = "0xF7DF10", VA = "0xF7DF10")]
	public void PreWarp()
	{
	}

	[Token(Token = "0x6000F34")]
	[Address(RVA = "0xF7E530", Offset = "0xF7E530", VA = "0xF7E530")]
	private void TrackingLost()
	{
	}

	[Token(Token = "0x6000F35")]
	[Address(RVA = "0xF7E5FC", Offset = "0xF7E5FC", VA = "0xF7E5FC")]
	private void TrackingFound()
	{
	}

	[Token(Token = "0x6000F36")]
	[Address(RVA = "0xF7E640", Offset = "0xF7E640", VA = "0xF7E640")]
	public ARRig()
	{
	}
}
[Token(Token = "0x200022D")]
public class ButtonControl : MonoBehaviour, IInteractable
{
	[Token(Token = "0x200022E")]
	[CompilerGenerated]
	private sealed class <AutoSwitchOff>d__18 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000CA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000CA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000CA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ButtonControl <>4__this;

		[Token(Token = "0x17000221")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000F4B")]
			[Address(RVA = "0xF7F3D4", Offset = "0xF7F3D4", VA = "0xF7F3D4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000222")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000F4D")]
			[Address(RVA = "0xF7F41C", Offset = "0xF7F41C", VA = "0xF7F41C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F48")]
		[Address(RVA = "0xF7F2E4", Offset = "0xF7F2E4", VA = "0xF7F2E4")]
		[DebuggerHidden]
		public <AutoSwitchOff>d__18(int <>1__state)
		{
		}

		[Token(Token = "0x6000F49")]
		[Address(RVA = "0xF7F31C", Offset = "0xF7F31C", VA = "0xF7F31C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000F4A")]
		[Address(RVA = "0xF7F320", Offset = "0xF7F320", VA = "0xF7F320", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F4C")]
		[Address(RVA = "0xF7F3DC", Offset = "0xF7F3DC", VA = "0xF7F3DC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000C9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Animator anim;

	[Token(Token = "0x4000C9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SwitchableContainer[] switchableObjects;

	[Token(Token = "0x4000C9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool switchedOn;

	[Token(Token = "0x4000C9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string downTrigger;

	[Token(Token = "0x4000C9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool resetOnDeath;

	[Token(Token = "0x4000C9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	private bool startingState;

	[Token(Token = "0x4000CA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AudioClip buttonClick;

	[Token(Token = "0x4000CA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool clickable;

	[Token(Token = "0x4000CA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float turnOffAutoTime;

	[Token(Token = "0x17000220")]
	public float maxInteractionDistance
	{
		[Token(Token = "0x6000F3D")]
		[Address(RVA = "0xF7EDD0", Offset = "0xF7EDD0", VA = "0xF7EDD0", Slot = "4")]
		[CompilerGenerated]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000F3E")]
		[Address(RVA = "0xF7EDD8", Offset = "0xF7EDD8", VA = "0xF7EDD8", Slot = "5")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x6000F3F")]
	[Address(RVA = "0xF7EDE0", Offset = "0xF7EDE0", VA = "0xF7EDE0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F40")]
	[Address(RVA = "0xF7EFB8", Offset = "0xF7EFB8", VA = "0xF7EFB8")]
	private void RespawnCallback()
	{
	}

	[Token(Token = "0x6000F41")]
	[Address(RVA = "0xF7EFD0", Offset = "0xF7EFD0", VA = "0xF7EFD0", Slot = "6")]
	public void OnHoover()
	{
	}

	[Token(Token = "0x6000F42")]
	[Address(RVA = "0xF7EFD4", Offset = "0xF7EFD4", VA = "0xF7EFD4", Slot = "7")]
	public void OnClick()
	{
	}

	[Token(Token = "0x6000F43")]
	[Address(RVA = "0xF7EFD8", Offset = "0xF7EFD8", VA = "0xF7EFD8", Slot = "8")]
	public void OnRelease()
	{
	}

	[Token(Token = "0x6000F44")]
	[Address(RVA = "0xF7F27C", Offset = "0xF7F27C", VA = "0xF7F27C")]
	[IteratorStateMachine(typeof(<AutoSwitchOff>d__18))]
	private IEnumerator AutoSwitchOff()
	{
		return null;
	}

	[Token(Token = "0x6000F45")]
	[Address(RVA = "0xF7F0B4", Offset = "0xF7F0B4", VA = "0xF7F0B4")]
	private void SwitchObjects()
	{
	}

	[Token(Token = "0x6000F46")]
	[Address(RVA = "0xF7F090", Offset = "0xF7F090", VA = "0xF7F090")]
	private void resetAnimator()
	{
	}

	[Token(Token = "0x6000F47")]
	[Address(RVA = "0xF7F30C", Offset = "0xF7F30C", VA = "0xF7F30C")]
	public ButtonControl()
	{
	}
}
[Token(Token = "0x200022F")]
public class ButtonEvent : MonoBehaviour, IInteractable
{
	[Token(Token = "0x4000CA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Tooltip("Enabled by default. Able to be disabled when a button is disabled. See FilterButton.DisableButton.")]
	[FarBridge.ReadOnly]
	public bool EventsEnabled;

	[Token(Token = "0x4000CA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UnityEvent onClickEvent;

	[Token(Token = "0x4000CA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public UnityEvent onReleaseEvent;

	[Token(Token = "0x17000223")]
	public float maxInteractionDistance
	{
		[Token(Token = "0x6000F4E")]
		[Address(RVA = "0xF7F424", Offset = "0xF7F424", VA = "0xF7F424", Slot = "4")]
		[CompilerGenerated]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000F4F")]
		[Address(RVA = "0xF7F42C", Offset = "0xF7F42C", VA = "0xF7F42C", Slot = "5")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x6000F50")]
	[Address(RVA = "0xF7F434", Offset = "0xF7F434", VA = "0xF7F434")]
	public void Start()
	{
	}

	[Token(Token = "0x6000F51")]
	[Address(RVA = "0xF7F524", Offset = "0xF7F524", VA = "0xF7F524", Slot = "6")]
	public void OnHoover()
	{
	}

	[Token(Token = "0x6000F52")]
	[Address(RVA = "0xF7F528", Offset = "0xF7F528", VA = "0xF7F528", Slot = "8")]
	public void OnRelease()
	{
	}

	[Token(Token = "0x6000F53")]
	[Address(RVA = "0xF7F544", Offset = "0xF7F544", VA = "0xF7F544", Slot = "7")]
	public void OnClick()
	{
	}

	[Token(Token = "0x6000F54")]
	[Address(RVA = "0xF7F5BC", Offset = "0xF7F5BC", VA = "0xF7F5BC")]
	public ButtonEvent()
	{
	}
}
[Token(Token = "0x2000230")]
public class CanvasSwitcher : MonoBehaviour
{
	[Token(Token = "0x4000CAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private CanvasGroup canvas;

	[Token(Token = "0x4000CAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool isActive;

	[Token(Token = "0x4000CAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float transitionTime;

	[Token(Token = "0x4000CAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float delay;

	[Token(Token = "0x6000F55")]
	[Address(RVA = "0xF7F5CC", Offset = "0xF7F5CC", VA = "0xF7F5CC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F56")]
	[Address(RVA = "0xF7F638", Offset = "0xF7F638", VA = "0xF7F638")]
	private void Update()
	{
	}

	[Token(Token = "0x6000F57")]
	[Address(RVA = "0xF7F7F8", Offset = "0xF7F7F8", VA = "0xF7F7F8")]
	public void Activate()
	{
	}

	[Token(Token = "0x6000F58")]
	[Address(RVA = "0xF7F80C", Offset = "0xF7F80C", VA = "0xF7F80C")]
	public void Deactivate()
	{
	}

	[Token(Token = "0x6000F59")]
	[Address(RVA = "0xF7F818", Offset = "0xF7F818", VA = "0xF7F818")]
	public CanvasSwitcher()
	{
	}
}
[Token(Token = "0x2000231")]
public class GrabableObject : MonoBehaviour, IInteractable
{
	[Token(Token = "0x4000CAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool grabbed;

	[Token(Token = "0x4000CB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Rigidbody thisRigidbody;

	[Token(Token = "0x4000CB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Transform defaultParent;

	[Token(Token = "0x4000CB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool stickInPlace;

	[Token(Token = "0x17000224")]
	public float maxInteractionDistance
	{
		[Token(Token = "0x6000F5A")]
		[Address(RVA = "0xF7F830", Offset = "0xF7F830", VA = "0xF7F830", Slot = "4")]
		[CompilerGenerated]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000F5B")]
		[Address(RVA = "0xF7F838", Offset = "0xF7F838", VA = "0xF7F838", Slot = "5")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x6000F5C")]
	[Address(RVA = "0xF7F840", Offset = "0xF7F840", VA = "0xF7F840")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F5D")]
	[Address(RVA = "0xF7F8D8", Offset = "0xF7F8D8", VA = "0xF7F8D8", Slot = "6")]
	public void OnHoover()
	{
	}

	[Token(Token = "0x6000F5E")]
	[Address(RVA = "0xF7F8DC", Offset = "0xF7F8DC", VA = "0xF7F8DC", Slot = "7")]
	public void OnClick()
	{
	}

	[Token(Token = "0x6000F5F")]
	[Address(RVA = "0xF7F97C", Offset = "0xF7F97C", VA = "0xF7F97C", Slot = "8")]
	public void OnRelease()
	{
	}

	[Token(Token = "0x6000F60")]
	[Address(RVA = "0xF7F9C8", Offset = "0xF7F9C8", VA = "0xF7F9C8")]
	public GrabableObject()
	{
	}
}
[Token(Token = "0x2000232")]
public interface ISwitchable
{
	[Token(Token = "0x6000F61")]
	void Reset(bool fastSwitch = false);

	[Token(Token = "0x6000F62")]
	void Toggle(bool fastSwitch = false);

	[Token(Token = "0x6000F63")]
	void Switch(bool newActiveState, bool fastSwitch = false);

	[Token(Token = "0x6000F64")]
	void SwitchOn(bool fastSwitch = false);

	[Token(Token = "0x6000F65")]
	void SwitchOff(bool fastSwitch = false);

	[Token(Token = "0x6000F66")]
	bool GetSwitchState();

	[Token(Token = "0x6000F67")]
	Hole GetHole();
}
[Serializable]
[Token(Token = "0x2000233")]
public class SwitchableContainer : IUnifiedContainer<ISwitchable>
{
	[Token(Token = "0x6000F68")]
	[Address(RVA = "0xF7F9D0", Offset = "0xF7F9D0", VA = "0xF7F9D0")]
	public SwitchableContainer()
	{
	}
}
[Token(Token = "0x2000234")]
public class MovingObject : MonoBehaviour, ISwitchable
{
	[Token(Token = "0x4000CB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool isRidable;

	[Token(Token = "0x4000CB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool startSwitchState;

	[Token(Token = "0x4000CB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[Tooltip("seconds it takes to slow/start when switched")]
	public float easeOnSwitch;

	[Token(Token = "0x4000CB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioClip rotatingSound;

	[Token(Token = "0x4000CB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioClip movingSound;

	[Token(Token = "0x4000CB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float volumeMultiplier;

	[Token(Token = "0x4000CB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float pitchMultiplier;

	[Token(Token = "0x4000CBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float pitchOffset;

	[Token(Token = "0x4000CBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float audioRolloffMinDistance;

	[Token(Token = "0x4000CBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float audioRolloffMaxDistance;

	[Token(Token = "0x4000CBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[Tooltip("This is changed dynamically when the ball is in proximity, but if you ignoreBallProximity, then this will always run in either Update (when false) or FixedUpdate (when true)")]
	public bool useFixedUpdate;

	[Token(Token = "0x4000CBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
	[Tooltip("Turn this off if you don't want the ball to activate some optimizations when it's outside the distanceToBallCutoff")]
	public bool ignoreBallProximity;

	[Token(Token = "0x4000CBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Tooltip("Beyond this distance, the collider will turn off and the MovingObject will use Update rather than FixedUpdate for optimization purposes.")]
	public float distanceToBallCutoff;

	[Token(Token = "0x4000CC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public bool syncWithServer;

	[Token(Token = "0x4000CC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
	public bool useAbsoluteServerTime;

	[Token(Token = "0x4000CC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform distanceToBallAnchorOverride;

	[Token(Token = "0x4000CC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[HideInInspector]
	public bool childObject;

	[Token(Token = "0x4000CC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[HideInInspector]
	public MovingObject masterMovingObject;

	[Token(Token = "0x4000CC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	protected float movingEase;

	[Token(Token = "0x4000CC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	protected Vector3 resetPosition;

	[Token(Token = "0x4000CC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	protected Quaternion resetRotation;

	[Token(Token = "0x4000CC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	protected float timeMoving;

	[Token(Token = "0x4000CC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	protected Rigidbody rb;

	[Token(Token = "0x4000CCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	protected bool switchedOn;

	[Token(Token = "0x4000CCB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private List<MovingObject> movingChildren;

	[Token(Token = "0x4000CCC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private AudioSource rotatingSource;

	[Token(Token = "0x4000CCD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private AudioSource movingSource;

	[Token(Token = "0x4000CCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Collider myCollider;

	[Token(Token = "0x4000CCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private AudioFadeOnSceneChange audioFadeOnSceneChange;

	[Token(Token = "0x4000CD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private Vector3 previousPositionForAudio;

	[Token(Token = "0x4000CD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	private Vector3 previousPosition;

	[Token(Token = "0x4000CD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private Quaternion previousRotationForAudio;

	[Token(Token = "0x4000CD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private Quaternion previousRotation;

	[Token(Token = "0x4000CD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private Transform dummyMaster;

	[Token(Token = "0x4000CD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private Transform objectToMoveDummy;

	[Token(Token = "0x4000CD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private bool ballInRange;

	[Token(Token = "0x4000CD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x111")]
	private bool bypassSound;

	[Token(Token = "0x4000CD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	[Tooltip("These are additional child geos to parent under this moving object at runtime, allowing us to move functionality out of imported model.")]
	public Transform[] constrainedChildren;

	[Token(Token = "0x6000F69")]
	[Address(RVA = "0xF7FA18", Offset = "0xF7FA18", VA = "0xF7FA18")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000F6A")]
	[Address(RVA = "0xF7FEEC", Offset = "0xF7FEEC", VA = "0xF7FEEC")]
	private void InitializeChildren(MovingObject newMasterMovingObject)
	{
	}

	[Token(Token = "0x6000F6B")]
	[Address(RVA = "0xF80108", Offset = "0xF80108", VA = "0xF80108")]
	private void InitializeAudio()
	{
	}

	[Token(Token = "0x6000F6C")]
	[Address(RVA = "0xF80460", Offset = "0xF80460", VA = "0xF80460")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000F6D")]
	[Address(RVA = "0xF80650", Offset = "0xF80650", VA = "0xF80650")]
	public void SetColliderEnabled(bool newEnabled)
	{
	}

	[Token(Token = "0x6000F6E")]
	[Address(RVA = "0xF807E8", Offset = "0xF807E8", VA = "0xF807E8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000F6F")]
	[Address(RVA = "0xF80D70", Offset = "0xF80D70", VA = "0xF80D70")]
	private void CheckBallProximity()
	{
	}

	[Token(Token = "0x6000F70")]
	[Address(RVA = "0xF80898", Offset = "0xF80898", VA = "0xF80898")]
	private void SetMasterMovingObjectOnChildren(MovingObject newMasterMovingObject)
	{
	}

	[Token(Token = "0x6000F71")]
	[Address(RVA = "0xF80494", Offset = "0xF80494", VA = "0xF80494")]
	public void CachePreviousPosition()
	{
	}

	[Token(Token = "0x6000F72")]
	[Address(RVA = "0xF8055C", Offset = "0xF8055C", VA = "0xF8055C")]
	public void UpdateMovingObject()
	{
	}

	[Token(Token = "0x6000F73")]
	[Address(RVA = "0xF809EC", Offset = "0xF809EC", VA = "0xF809EC")]
	private void PlaySound()
	{
	}

	[Token(Token = "0x6000F74")]
	[Address(RVA = "0xF7FD0C", Offset = "0xF7FD0C", VA = "0xF7FD0C")]
	public void ResetMovingObject()
	{
	}

	[Token(Token = "0x6000F75")]
	[Address(RVA = "0xF80FF8", Offset = "0xF80FF8", VA = "0xF80FF8")]
	public void MoveWithObject(GameObject objectToMove, float movePercentage, bool maintainUpVector = false)
	{
	}

	[Token(Token = "0x6000F76")]
	[Address(RVA = "0xF812DC", Offset = "0xF812DC", VA = "0xF812DC", Slot = "11")]
	protected virtual void MoveObject()
	{
	}

	[Token(Token = "0x6000F77")]
	[Address(RVA = "0xF812E0", Offset = "0xF812E0", VA = "0xF812E0", Slot = "12")]
	protected virtual void OnReset()
	{
	}

	[Token(Token = "0x6000F78")]
	[Address(RVA = "0xF812E4", Offset = "0xF812E4", VA = "0xF812E4", Slot = "13")]
	protected virtual void OnAwake()
	{
	}

	[Token(Token = "0x6000F79")]
	[Address(RVA = "0xF812E8", Offset = "0xF812E8", VA = "0xF812E8", Slot = "4")]
	public void Reset(bool fastSwitch = false)
	{
	}

	[Token(Token = "0x6000F7A")]
	[Address(RVA = "0xF812F4", Offset = "0xF812F4", VA = "0xF812F4", Slot = "5")]
	public void Toggle(bool fastSwitch = false)
	{
	}

	[Token(Token = "0x6000F7B")]
	[Address(RVA = "0xF81304", Offset = "0xF81304", VA = "0xF81304", Slot = "6")]
	public void Switch(bool newActiveState, bool fastSwitch = false)
	{
	}

	[Token(Token = "0x6000F7C")]
	[Address(RVA = "0xF81310", Offset = "0xF81310", VA = "0xF81310", Slot = "14")]
	[ContextMenu("Switch On")]
	public virtual void SwitchOn(bool fastSwitch = false)
	{
	}

	[Token(Token = "0x6000F7D")]
	[Address(RVA = "0xF8131C", Offset = "0xF8131C", VA = "0xF8131C", Slot = "15")]
	[ContextMenu("Switch Off")]
	public virtual void SwitchOff(bool fastSwitch = false)
	{
	}

	[Token(Token = "0x6000F7E")]
	[Address(RVA = "0xF81324", Offset = "0xF81324", VA = "0xF81324", Slot = "9")]
	public bool GetSwitchState()
	{
		return default(bool);
	}

	[Token(Token = "0x6000F7F")]
	[Address(RVA = "0xF8132C", Offset = "0xF8132C", VA = "0xF8132C", Slot = "10")]
	public Hole GetHole()
	{
		return null;
	}

	[Token(Token = "0x6000F80")]
	[Address(RVA = "0xF81334", Offset = "0xF81334", VA = "0xF81334")]
	public MovingObject()
	{
	}
}
[Token(Token = "0x2000235")]
public class PlayerTrigger : MonoBehaviour
{
	[Token(Token = "0x4000CD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] enableOnTrigger;

	[Token(Token = "0x4000CDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject[] disableOnTrigger;

	[Token(Token = "0x6000F81")]
	[Address(RVA = "0xF8137C", Offset = "0xF8137C", VA = "0xF8137C")]
	private void OnTriggerEnter(Collider col)
	{
	}

	[Token(Token = "0x6000F82")]
	[Address(RVA = "0xF81488", Offset = "0xF81488", VA = "0xF81488", Slot = "4")]
	protected virtual void ExecuteOnTrigger()
	{
	}

	[Token(Token = "0x6000F83")]
	[Address(RVA = "0xF8148C", Offset = "0xF8148C", VA = "0xF8148C")]
	public PlayerTrigger()
	{
	}
}
[Token(Token = "0x2000236")]
public class RaycastInteraction : MonoBehaviour
{
	[Token(Token = "0x4000CDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Camera thisCamera;

	[Token(Token = "0x4000CDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float raycastRange;

	[Token(Token = "0x4000CDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public LayerMask raycastOnTap;

	[Token(Token = "0x4000CDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private IInteractable currentInteraction;

	[Token(Token = "0x17000225")]
	public bool shouldRaycast
	{
		[Token(Token = "0x6000F86")]
		[Address(RVA = "0xF818D8", Offset = "0xF818D8", VA = "0xF818D8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000F84")]
	[Address(RVA = "0xF81494", Offset = "0xF81494", VA = "0xF81494")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F85")]
	[Address(RVA = "0xF814F4", Offset = "0xF814F4", VA = "0xF814F4")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000F87")]
	[Address(RVA = "0xF81830", Offset = "0xF81830", VA = "0xF81830")]
	private void EndInteraction()
	{
	}

	[Token(Token = "0x6000F88")]
	[Address(RVA = "0xF819BC", Offset = "0xF819BC", VA = "0xF819BC")]
	public RaycastInteraction()
	{
	}
}
[Token(Token = "0x2000237")]
public class RotatingObject : MovingObject
{
	[Token(Token = "0x4000CDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public Vector3 rotationVelocity;

	[Token(Token = "0x4000CE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
	public Vector3 speedChange;

	[Token(Token = "0x4000CE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private Exception previousError;

	[Token(Token = "0x4000CE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	[SerializeField]
	private bool moveToTransformOnStart;

	[Token(Token = "0x4000CE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	[SerializeField]
	private Transform onStartPosition;

	[Token(Token = "0x6000F89")]
	[Address(RVA = "0xF819CC", Offset = "0xF819CC", VA = "0xF819CC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F8A")]
	[Address(RVA = "0xF81A7C", Offset = "0xF81A7C", VA = "0xF81A7C", Slot = "11")]
	protected override void MoveObject()
	{
	}

	[Token(Token = "0x6000F8B")]
	[Address(RVA = "0xF81EA0", Offset = "0xF81EA0", VA = "0xF81EA0", Slot = "12")]
	protected override void OnReset()
	{
	}

	[Token(Token = "0x6000F8C")]
	[Address(RVA = "0xF81EA8", Offset = "0xF81EA8", VA = "0xF81EA8")]
	public RotatingObject()
	{
	}
}
[Token(Token = "0x2000238")]
public class SwitchableMaterial : MonoBehaviour, ISwitchable
{
	[Token(Token = "0x4000CE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material onMat;

	[Token(Token = "0x4000CE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material offMat;

	[Token(Token = "0x4000CE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool switchedOn;

	[Token(Token = "0x4000CE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Renderer rend;

	[Token(Token = "0x6000F8D")]
	[Address(RVA = "0xF81F60", Offset = "0xF81F60", VA = "0xF81F60")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000F8E")]
	[Address(RVA = "0xF81FE4", Offset = "0xF81FE4", VA = "0xF81FE4", Slot = "4")]
	public void Reset(bool fastSwitch = false)
	{
	}

	[Token(Token = "0x6000F8F")]
	[Address(RVA = "0xF81FEC", Offset = "0xF81FEC", VA = "0xF81FEC", Slot = "5")]
	public void Toggle(bool fastSwitch = false)
	{
	}

	[Token(Token = "0x6000F90")]
	[Address(RVA = "0xF82000", Offset = "0xF82000", VA = "0xF82000", Slot = "6")]
	public void Switch(bool newActiveState, bool fastSwitch = false)
	{
	}

	[Token(Token = "0x6000F91")]
	[Address(RVA = "0xF81FCC", Offset = "0xF81FCC", VA = "0xF81FCC", Slot = "7")]
	[ContextMenu("Switch On")]
	public void SwitchOn(bool fastSwitch = false)
	{
	}

	[Token(Token = "0x6000F92")]
	[Address(RVA = "0xF81FD8", Offset = "0xF81FD8", VA = "0xF81FD8", Slot = "8")]
	[ContextMenu("Switch Off")]
	public void SwitchOff(bool fastSwitch = false)
	{
	}

	[Token(Token = "0x6000F93")]
	[Address(RVA = "0xF82058", Offset = "0xF82058", VA = "0xF82058", Slot = "9")]
	public bool GetSwitchState()
	{
		return default(bool);
	}

	[Token(Token = "0x6000F94")]
	[Address(RVA = "0xF82060", Offset = "0xF82060", VA = "0xF82060", Slot = "10")]
	public Hole GetHole()
	{
		return null;
	}

	[Token(Token = "0x6000F95")]
	[Address(RVA = "0xF82068", Offset = "0xF82068", VA = "0xF82068")]
	public SwitchableMaterial()
	{
	}
}
[Token(Token = "0x2000239")]
public class SwitchableObject : MonoBehaviour, ISwitchable
{
	[Token(Token = "0x4000CE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool switchedOn;

	[Token(Token = "0x4000CE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool invert;

	[Token(Token = "0x6000F96")]
	[Address(RVA = "0xF82070", Offset = "0xF82070", VA = "0xF82070")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000F97")]
	[Address(RVA = "0xF8207C", Offset = "0xF8207C", VA = "0xF8207C", Slot = "4")]
	public void Reset(bool fastSwitch = false)
	{
	}

	[Token(Token = "0x6000F98")]
	[Address(RVA = "0xF820E0", Offset = "0xF820E0", VA = "0xF820E0", Slot = "5")]
	public void Toggle(bool fastSwitch = false)
	{
	}

	[Token(Token = "0x6000F99")]
	[Address(RVA = "0xF82088", Offset = "0xF82088", VA = "0xF82088", Slot = "6")]
	public void Switch(bool newActiveState, bool fastSwitch = false)
	{
	}

	[Token(Token = "0x6000F9A")]
	[Address(RVA = "0xF820F4", Offset = "0xF820F4", VA = "0xF820F4", Slot = "7")]
	[ContextMenu("Switch On")]
	public void SwitchOn(bool fastSwitch = false)
	{
	}

	[Token(Token = "0x6000F9B")]
	[Address(RVA = "0xF82100", Offset = "0xF82100", VA = "0xF82100", Slot = "8")]
	[ContextMenu("Switch Off")]
	public void SwitchOff(bool fastSwitch = false)
	{
	}

	[Token(Token = "0x6000F9C")]
	[Address(RVA = "0xF8210C", Offset = "0xF8210C", VA = "0xF8210C")]
	public void ToggleSwitch()
	{
	}

	[Token(Token = "0x6000F9D")]
	[Address(RVA = "0xF82120", Offset = "0xF82120", VA = "0xF82120", Slot = "9")]
	public bool GetSwitchState()
	{
		return default(bool);
	}

	[Token(Token = "0x6000F9E")]
	[Address(RVA = "0xF82128", Offset = "0xF82128", VA = "0xF82128", Slot = "10")]
	public Hole GetHole()
	{
		return null;
	}

	[Token(Token = "0x6000F9F")]
	[Address(RVA = "0xF82130", Offset = "0xF82130", VA = "0xF82130")]
	public SwitchableObject()
	{
	}
}
[Token(Token = "0x200023A")]
public class SwitchableSwitch : MonoBehaviour, ISwitchable
{
	[Token(Token = "0x4000CEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SwitchableContainer[] switchOn;

	[Token(Token = "0x4000CEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool switchedOn;

	[Token(Token = "0x4000CEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool invert;

	[Token(Token = "0x4000CED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
	public bool toggleable;

	[Token(Token = "0x4000CEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x23")]
	private bool toggled;

	[Token(Token = "0x6000FA0")]
	[Address(RVA = "0xF82138", Offset = "0xF82138", VA = "0xF82138")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000FA1")]
	[Address(RVA = "0xF82140", Offset = "0xF82140", VA = "0xF82140", Slot = "4")]
	public void Reset(bool fastSwitch = false)
	{
	}

	[Token(Token = "0x6000FA2")]
	[Address(RVA = "0xF8245C", Offset = "0xF8245C", VA = "0xF8245C", Slot = "5")]
	public void Toggle(bool fastSwitch = false)
	{
	}

	[Token(Token = "0x6000FA3")]
	[Address(RVA = "0xF82474", Offset = "0xF82474", VA = "0xF82474", Slot = "6")]
	public void Switch(bool newActiveState, bool fastSwitch = false)
	{
	}

	[Token(Token = "0x6000FA4")]
	[Address(RVA = "0xF82178", Offset = "0xF82178", VA = "0xF82178", Slot = "7")]
	[ContextMenu("Switch On")]
	public void SwitchOn(bool fastSwitch = false)
	{
	}

	[Token(Token = "0x6000FA5")]
	[Address(RVA = "0xF822EC", Offset = "0xF822EC", VA = "0xF822EC", Slot = "8")]
	[ContextMenu("Switch Off")]
	public void SwitchOff(bool fastSwitch = false)
	{
	}

	[Token(Token = "0x6000FA6")]
	[Address(RVA = "0xF82488", Offset = "0xF82488", VA = "0xF82488", Slot = "9")]
	public bool GetSwitchState()
	{
		return default(bool);
	}

	[Token(Token = "0x6000FA7")]
	[Address(RVA = "0xF82490", Offset = "0xF82490", VA = "0xF82490", Slot = "10")]
	public Hole GetHole()
	{
		return null;
	}

	[Token(Token = "0x6000FA8")]
	[Address(RVA = "0xF82498", Offset = "0xF82498", VA = "0xF82498")]
	public SwitchableSwitch()
	{
	}
}
[Token(Token = "0x200023B")]
public class TrackingStatus : MonoBehaviour
{
	[Token(Token = "0x4000CEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UnityEvent firstScanEvent;

	[Token(Token = "0x4000CF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UnityEvent trackingLostEvent;

	[Token(Token = "0x4000CF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public UnityEvent trackingFoundEvent;

	[Token(Token = "0x4000CF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[HideInInspector]
	public static bool tracking;

	[Token(Token = "0x4000CF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool firstScan;

	[Token(Token = "0x4000CF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	private bool editor;

	[Token(Token = "0x4000CF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject[] destroyIfEditor;

	[Token(Token = "0x4000CF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static TrackingStatus instance;

	[Token(Token = "0x6000FA9")]
	[Address(RVA = "0xF824A8", Offset = "0xF824A8", VA = "0xF824A8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000FAA")]
	[Address(RVA = "0xF824F4", Offset = "0xF824F4", VA = "0xF824F4")]
	public void Update()
	{
	}

	[Token(Token = "0x6000FAB")]
	[Address(RVA = "0xF825F4", Offset = "0xF825F4", VA = "0xF825F4")]
	private void FirstScan()
	{
	}

	[Token(Token = "0x6000FAC")]
	[Address(RVA = "0xF8274C", Offset = "0xF8274C", VA = "0xF8274C")]
	private void TrackingLost()
	{
	}

	[Token(Token = "0x6000FAD")]
	[Address(RVA = "0xF827F8", Offset = "0xF827F8", VA = "0xF827F8")]
	private void TrackingFound()
	{
	}

	[Token(Token = "0x6000FAE")]
	[Address(RVA = "0xF828A0", Offset = "0xF828A0", VA = "0xF828A0")]
	public TrackingStatus()
	{
	}
}
[Token(Token = "0x200023C")]
public class TutorialPlay : MonoBehaviour
{
	[Token(Token = "0x4000CF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float delay;

	[Token(Token = "0x6000FAF")]
	[Address(RVA = "0xF82940", Offset = "0xF82940", VA = "0xF82940")]
	private void Update()
	{
	}

	[Token(Token = "0x6000FB0")]
	[Address(RVA = "0xF82A9C", Offset = "0xF82A9C", VA = "0xF82A9C")]
	public TutorialPlay()
	{
	}
}
[Token(Token = "0x200023D")]
public class VideoBackground : MonoBehaviour
{
	[Token(Token = "0x4000CF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private RawImage videoImage;

	[Token(Token = "0x6000FB1")]
	[Address(RVA = "0xF82AAC", Offset = "0xF82AAC", VA = "0xF82AAC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000FB2")]
	[Address(RVA = "0xF82D4C", Offset = "0xF82D4C", VA = "0xF82D4C")]
	public VideoBackground()
	{
	}
}
[Token(Token = "0x200023E")]
public class VRRig : MonoBehaviour
{
	[Token(Token = "0x4000CFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform centerOffset;

	[Token(Token = "0x4000CFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform head;

	[Token(Token = "0x4000CFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform leftHand;

	[Token(Token = "0x4000CFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform rightHand;

	[Token(Token = "0x4000CFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform tempCenter;

	[Token(Token = "0x4000CFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public CanvasGroup fadeGroupVR;

	[Token(Token = "0x4000D00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Image fadeImageVR;

	[Token(Token = "0x4000D01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[HideInInspector]
	public Vector3 originalLeftHandRotation;

	[Token(Token = "0x17000226")]
	public static VRRig instance
	{
		[Token(Token = "0x6000FB3")]
		[Address(RVA = "0xF82D54", Offset = "0xF82D54", VA = "0xF82D54")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000FB4")]
		[Address(RVA = "0xF82D9C", Offset = "0xF82D9C", VA = "0xF82D9C")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x6000FB5")]
	[Address(RVA = "0xF82DE8", Offset = "0xF82DE8", VA = "0xF82DE8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000FB6")]
	[Address(RVA = "0xF82E34", Offset = "0xF82E34", VA = "0xF82E34")]
	private void Start()
	{
	}

	[Token(Token = "0x6000FB7")]
	[Address(RVA = "0xF82EC8", Offset = "0xF82EC8", VA = "0xF82EC8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000FB8")]
	[Address(RVA = "0xF831AC", Offset = "0xF831AC", VA = "0xF831AC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000FB9")]
	[Address(RVA = "0xF833D4", Offset = "0xF833D4", VA = "0xF833D4")]
	private void OnFocusLost()
	{
	}

	[Token(Token = "0x6000FBA")]
	[Address(RVA = "0xF83474", Offset = "0xF83474", VA = "0xF83474")]
	private void OnFocusAcquired()
	{
	}

	[Token(Token = "0x6000FBB")]
	[Address(RVA = "0xF83480", Offset = "0xF83480", VA = "0xF83480")]
	private void HandleFocusChanged(bool focus)
	{
	}

	[Token(Token = "0x6000FBC")]
	[Address(RVA = "0xF83524", Offset = "0xF83524", VA = "0xF83524")]
	public void Recenter()
	{
	}

	[Token(Token = "0x6000FBD")]
	[Address(RVA = "0xF837D4", Offset = "0xF837D4", VA = "0xF837D4")]
	public void ClearOffsets()
	{
	}

	[Token(Token = "0x6000FBE")]
	[Address(RVA = "0xF83884", Offset = "0xF83884", VA = "0xF83884")]
	public VRRig()
	{
	}
}
[Token(Token = "0x200023F")]
public class Waypoint : MonoBehaviour
{
	[Token(Token = "0x4000D02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float transitionTime;

	[Token(Token = "0x4000D03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool switchOffWhenReached;

	[Token(Token = "0x4000D04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UnityEvent waypointReachedEvent;

	[Token(Token = "0x6000FBF")]
	[Address(RVA = "0xF8388C", Offset = "0xF8388C", VA = "0xF8388C")]
	public void SetEulerX(float x)
	{
	}

	[Token(Token = "0x6000FC0")]
	[Address(RVA = "0xF838F4", Offset = "0xF838F4", VA = "0xF838F4")]
	public void SetEulerY(float y)
	{
	}

	[Token(Token = "0x6000FC1")]
	[Address(RVA = "0xF8395C", Offset = "0xF8395C", VA = "0xF8395C")]
	public void SetEulerZ(float z)
	{
	}

	[Token(Token = "0x6000FC2")]
	[Address(RVA = "0xF839C4", Offset = "0xF839C4", VA = "0xF839C4")]
	public void WaypointReached()
	{
	}

	[Token(Token = "0x6000FC3")]
	[Address(RVA = "0xF839E0", Offset = "0xF839E0", VA = "0xF839E0")]
	public Waypoint()
	{
	}
}
[Token(Token = "0x2000240")]
public class WaypointMover : MovingObject
{
	[Token(Token = "0x4000D05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public bool easeInOut;

	[Token(Token = "0x4000D06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public Waypoint[] waypoints;

	[Token(Token = "0x4000D07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public float startPercentage;

	[Token(Token = "0x4000D08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	private float timer;

	[Token(Token = "0x4000D09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private int previousWaypoint;

	[Token(Token = "0x4000D0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
	private int nextWaypoint;

	[Token(Token = "0x4000D0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public float timerOffset;

	[Token(Token = "0x4000D0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	private float totalDuration;

	[Token(Token = "0x6000FC4")]
	[Address(RVA = "0xF839F0", Offset = "0xF839F0", VA = "0xF839F0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000FC5")]
	[Address(RVA = "0xF83A74", Offset = "0xF83A74", VA = "0xF83A74", Slot = "11")]
	protected override void MoveObject()
	{
	}

	[Token(Token = "0x6000FC6")]
	[Address(RVA = "0xF8402C", Offset = "0xF8402C", VA = "0xF8402C")]
	private void AdvanceToNextCheckpoint()
	{
	}

	[Token(Token = "0x6000FC7")]
	[Address(RVA = "0xF840E8", Offset = "0xF840E8", VA = "0xF840E8", Slot = "12")]
	protected override void OnReset()
	{
	}

	[Token(Token = "0x6000FC8")]
	[Address(RVA = "0xF83E6C", Offset = "0xF83E6C", VA = "0xF83E6C")]
	private void SyncWithServer()
	{
	}

	[Token(Token = "0x6000FC9")]
	[Address(RVA = "0xF8413C", Offset = "0xF8413C", VA = "0xF8413C")]
	public WaypointMover()
	{
	}
}
[Token(Token = "0x2000241")]
public class WaypointSwitched : MovingObject
{
	[Token(Token = "0x4000D0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public bool easeInOut;

	[Token(Token = "0x4000D0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public Waypoint offWaypoint;

	[Token(Token = "0x4000D0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public Waypoint onWaypoint;

	[Token(Token = "0x4000D10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private float timer;

	[Token(Token = "0x4000D11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
	private bool previousSwitchedOn;

	[Token(Token = "0x4000D12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private Vector3 fromPosition;

	[Token(Token = "0x4000D13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
	private Quaternion fromRotation;

	[Token(Token = "0x4000D14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private Waypoint targetWaypoint;

	[Token(Token = "0x4000D15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	[Tooltip("These objects will be duplicated in the on/off position, so they can batch when not moving.")]
	[SerializeField]
	private Renderer[] movingGeoToMakeStatic;

	[Token(Token = "0x4000D16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private bool useStaticGeo;

	[Token(Token = "0x4000D17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private Renderer[] staticOnGeo;

	[Token(Token = "0x4000D18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private Renderer[] staticOffGeo;

	[Token(Token = "0x6000FCA")]
	[Address(RVA = "0xF8418C", Offset = "0xF8418C", VA = "0xF8418C", Slot = "13")]
	protected override void OnAwake()
	{
	}

	[Token(Token = "0x6000FCB")]
	[Address(RVA = "0xF8450C", Offset = "0xF8450C", VA = "0xF8450C")]
	private void GoToWaypoint(Waypoint wp)
	{
	}

	[Token(Token = "0x6000FCC")]
	[Address(RVA = "0xF84598", Offset = "0xF84598", VA = "0xF84598", Slot = "11")]
	protected override void MoveObject()
	{
	}

	[Token(Token = "0x6000FCD")]
	[Address(RVA = "0xF84934", Offset = "0xF84934", VA = "0xF84934")]
	private void ShowGeo(Renderer[] rendsToShow)
	{
	}

	[Token(Token = "0x6000FCE")]
	[Address(RVA = "0xF849D4", Offset = "0xF849D4", VA = "0xF849D4")]
	private void HideGeo(Renderer[] rendsToHide)
	{
	}

	[Token(Token = "0x6000FCF")]
	[Address(RVA = "0xF84A38", Offset = "0xF84A38", VA = "0xF84A38", Slot = "12")]
	protected override void OnReset()
	{
	}

	[Token(Token = "0x6000FD0")]
	[Address(RVA = "0xF84914", Offset = "0xF84914", VA = "0xF84914")]
	private void ChangeTarget()
	{
	}

	[Token(Token = "0x6000FD1")]
	[Address(RVA = "0xF84A68", Offset = "0xF84A68", VA = "0xF84A68", Slot = "14")]
	public override void SwitchOn(bool fastSwitch = false)
	{
	}

	[Token(Token = "0x6000FD2")]
	[Address(RVA = "0xF84AA0", Offset = "0xF84AA0", VA = "0xF84AA0", Slot = "15")]
	public override void SwitchOff(bool fastSwitch = false)
	{
	}

	[Token(Token = "0x6000FD3")]
	[Address(RVA = "0xF84AD4", Offset = "0xF84AD4", VA = "0xF84AD4")]
	public void ToggleSwitch()
	{
	}

	[Token(Token = "0x6000FD4")]
	[Address(RVA = "0xF84B00", Offset = "0xF84B00", VA = "0xF84B00")]
	public WaypointSwitched()
	{
	}
}
[Token(Token = "0x2000242")]
public enum Platform
{
	[Token(Token = "0x4000D1A")]
	undefined = -1,
	[Token(Token = "0x4000D1B")]
	quest,
	[Token(Token = "0x4000D1C")]
	rift,
	[Token(Token = "0x4000D1D")]
	arcore,
	[Token(Token = "0x4000D1E")]
	arkit,
	[Token(Token = "0x4000D1F")]
	openvr,
	[Token(Token = "0x4000D20")]
	pico,
	[Token(Token = "0x4000D21")]
	psvr2
}
[Token(Token = "0x2000243")]
public enum WarpOnGodModeExit
{
	[Token(Token = "0x4000D23")]
	warpToBall,
	[Token(Token = "0x4000D24")]
	returnToPosition,
	[Token(Token = "0x4000D25")]
	dontWarp
}
[Token(Token = "0x2000244")]
public class XRRig : MonoBehaviour, IProfileActivatedHandler, IProfileHandler
{
	[Token(Token = "0x2000245")]
	public delegate void WarpEvent();

	[Token(Token = "0x2000246")]
	public delegate void OnGodModeEvent();

	[Token(Token = "0x2000247")]
	public delegate void OnGodModeExitEvent();

	[Token(Token = "0x2000248")]
	public delegate void OnTurnEvent();

	[Token(Token = "0x2000249")]
	public delegate void OnFlyingEvent();

	[Token(Token = "0x200024A")]
	public delegate void FocusEvent();

	[Token(Token = "0x200024B")]
	public delegate void MainMenuInRangeEvent();

	[Token(Token = "0x200024C")]
	[CompilerGenerated]
	private sealed class <DoWarp>d__132 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000D5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000D5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000D5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform target;

		[Token(Token = "0x4000D60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public XRRig <>4__this;

		[Token(Token = "0x4000D61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float duration;

		[Token(Token = "0x4000D62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Vector3 <startPos>5__2;

		[Token(Token = "0x4000D63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Vector3 <startScale>5__3;

		[Token(Token = "0x4000D64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float <percentage>5__4;

		[Token(Token = "0x4000D65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Quaternion <startRot>5__5;

		[Token(Token = "0x4000D66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Quaternion <endRot>5__6;

		[Token(Token = "0x17000233")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001048")]
			[Address(RVA = "0xF8AC68", Offset = "0xF8AC68", VA = "0xF8AC68", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000234")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600104A")]
			[Address(RVA = "0xF8ACB0", Offset = "0xF8ACB0", VA = "0xF8ACB0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001045")]
		[Address(RVA = "0xF88BD4", Offset = "0xF88BD4", VA = "0xF88BD4")]
		[DebuggerHidden]
		public <DoWarp>d__132(int <>1__state)
		{
		}

		[Token(Token = "0x6001046")]
		[Address(RVA = "0xF8A308", Offset = "0xF8A308", VA = "0xF8A308", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001047")]
		[Address(RVA = "0xF8A30C", Offset = "0xF8A30C", VA = "0xF8A30C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001049")]
		[Address(RVA = "0xF8AC70", Offset = "0xF8AC70", VA = "0xF8AC70", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200024D")]
	[CompilerGenerated]
	private sealed class <DelayedWarpToStartPosition>d__141 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000D67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000D68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000D69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public XRRig <>4__this;

		[Token(Token = "0x17000235")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600104E")]
			[Address(RVA = "0xF8BDAC", Offset = "0xF8BDAC", VA = "0xF8BDAC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000236")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001050")]
			[Address(RVA = "0xF8BDF4", Offset = "0xF8BDF4", VA = "0xF8BDF4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600104B")]
		[Address(RVA = "0xF8BCB8", Offset = "0xF8BCB8", VA = "0xF8BCB8")]
		[DebuggerHidden]
		public <DelayedWarpToStartPosition>d__141(int <>1__state)
		{
		}

		[Token(Token = "0x600104C")]
		[Address(RVA = "0xF8BCE0", Offset = "0xF8BCE0", VA = "0xF8BCE0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600104D")]
		[Address(RVA = "0xF8BCE4", Offset = "0xF8BCE4", VA = "0xF8BCE4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600104F")]
		[Address(RVA = "0xF8BDB4", Offset = "0xF8BDB4", VA = "0xF8BDB4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200024E")]
	[CompilerGenerated]
	private sealed class <DelayedWarpToPreviousPosition>d__142 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000D6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000D6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000D6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public XRRig <>4__this;

		[Token(Token = "0x17000237")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001054")]
			[Address(RVA = "0xF8BEB0", Offset = "0xF8BEB0", VA = "0xF8BEB0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000238")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001056")]
			[Address(RVA = "0xF8BEF8", Offset = "0xF8BEF8", VA = "0xF8BEF8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001051")]
		[Address(RVA = "0xF8BDFC", Offset = "0xF8BDFC", VA = "0xF8BDFC")]
		[DebuggerHidden]
		public <DelayedWarpToPreviousPosition>d__142(int <>1__state)
		{
		}

		[Token(Token = "0x6001052")]
		[Address(RVA = "0xF8BE24", Offset = "0xF8BE24", VA = "0xF8BE24", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001053")]
		[Address(RVA = "0xF8BE28", Offset = "0xF8BE28", VA = "0xF8BE28", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001055")]
		[Address(RVA = "0xF8BEB8", Offset = "0xF8BEB8", VA = "0xF8BEB8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000D26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public WarpOnGodModeExit warpOnGodModeExit;

	[Token(Token = "0x4000D28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject arRig;

	[Token(Token = "0x4000D29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject vrRig;

	[Token(Token = "0x4000D2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GameObject activeRig;

	[Token(Token = "0x4000D2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject gameManager;

	[Token(Token = "0x4000D2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	public bool warping;

	[Token(Token = "0x4000D2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[HideInInspector]
	public Camera mainCamera;

	[Token(Token = "0x4000D30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public CameraConstraint cameraConstraint;

	[Token(Token = "0x4000D31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool godMode;

	[Token(Token = "0x4000D35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	[HideInInspector]
	public bool godModeTrigger;

	[Token(Token = "0x4000D36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5A")]
	[HideInInspector]
	public bool shackModeTrigger;

	[Token(Token = "0x4000D37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float normalClippingPlane;

	[Token(Token = "0x4000D3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public bool debugMode;

	[Token(Token = "0x4000D3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x62")]
	[HideInInspector]
	public bool hasFocus;

	[Token(Token = "0x4000D3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Transform nonGodPreviousTransform;

	[Token(Token = "0x4000D40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private MovingObject nonGodPreviousRidingOnMovingObject;

	[Token(Token = "0x4000D41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[HideInInspector]
	public bool manualTeleport;

	[Token(Token = "0x4000D42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
	private bool previousManualTeleport;

	[Token(Token = "0x4000D43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7A")]
	[HideInInspector]
	public bool flyingTakeoffAllowed;

	[Token(Token = "0x4000D44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7B")]
	[HideInInspector]
	public bool recenterOnLoad;

	[Token(Token = "0x4000D45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	[HideInInspector]
	public bool warpingToBall;

	[Token(Token = "0x4000D46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7D")]
	[HideInInspector]
	public bool autoCenter;

	[Token(Token = "0x4000D47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Vector3 lastGoodLocomotionPosition;

	[Token(Token = "0x4000D48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public LayerMask raycastLayers;

	[Token(Token = "0x4000D49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[HideInInspector]
	public bool flying;

	[Token(Token = "0x4000D4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private float takeoffTimer;

	[Token(Token = "0x4000D4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private float flyingTimer;

	[Token(Token = "0x4000D4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private float landingTimer;

	[Token(Token = "0x4000D4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private bool alreadyFlown;

	[Token(Token = "0x4000D4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA1")]
	[HideInInspector]
	public bool wasFlying;

	[Token(Token = "0x4000D4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA2")]
	[HideInInspector]
	public bool doingTheLocomotion;

	[Token(Token = "0x4000D50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA3")]
	[HideInInspector]
	public bool activelyFlying;

	[Token(Token = "0x4000D51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	[HideInInspector]
	public bool mainMenuInRange;

	[Token(Token = "0x4000D52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA5")]
	private bool previousMainMenuInRange;

	[Token(Token = "0x4000D55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA6")]
	private bool justWarped;

	[Token(Token = "0x4000D56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA7")]
	[HideInInspector]
	public bool startInGodMode;

	[Token(Token = "0x4000D57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private MovingObject ridingOnMovingObject;

	[Token(Token = "0x4000D58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private bool _userIsPresent;

	[Token(Token = "0x4000D59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public global::LIV.SDK.Unity.LIV LIV;

	[Token(Token = "0x4000D5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private bool clearOffsetsOnWarp;

	[Token(Token = "0x4000D5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC1")]
	public bool vr;

	[Token(Token = "0x4000D5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private float toggleGodModeCoolDownTimer;

	[Token(Token = "0x17000227")]
	[HideInInspector]
	public static XRRig instance
	{
		[Token(Token = "0x6000FD5")]
		[Address(RVA = "0xF84B58", Offset = "0xF84B58", VA = "0xF84B58")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000FD6")]
		[Address(RVA = "0xF84BA0", Offset = "0xF84BA0", VA = "0xF84BA0")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000228")]
	public bool worldspaceAR
	{
		[Token(Token = "0x6000FE5")]
		[Address(RVA = "0xF85634", Offset = "0xF85634", VA = "0xF85634")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000FE6")]
		[Address(RVA = "0xF8563C", Offset = "0xF8563C", VA = "0xF8563C")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000229")]
	private ProfileData _profileData
	{
		[Token(Token = "0x6000FEF")]
		[Address(RVA = "0xF85938", Offset = "0xF85938", VA = "0xF85938")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700022A")]
	public Platform platform
	{
		[Token(Token = "0x6000FF0")]
		[Address(RVA = "0xF85988", Offset = "0xF85988", VA = "0xF85988")]
		get
		{
			return default(Platform);
		}
	}

	[Token(Token = "0x1700022B")]
	public bool smoothLocomotion
	{
		[Token(Token = "0x6000FF1")]
		[Address(RVA = "0xF859A8", Offset = "0xF859A8", VA = "0xF859A8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700022C")]
	public bool smoothRotation
	{
		[Token(Token = "0x6000FF2")]
		[Address(RVA = "0xF859D0", Offset = "0xF859D0", VA = "0xF859D0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700022D")]
	public float smoothLocomotionSpeed
	{
		[Token(Token = "0x6000FF3")]
		[Address(RVA = "0xF859F8", Offset = "0xF859F8", VA = "0xF859F8")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700022E")]
	public float rotationSpeed
	{
		[Token(Token = "0x6000FF4")]
		[Address(RVA = "0xF85A20", Offset = "0xF85A20", VA = "0xF85A20")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700022F")]
	public bool gravitySideways
	{
		[Token(Token = "0x6000FF5")]
		[Address(RVA = "0xF85A48", Offset = "0xF85A48", VA = "0xF85A48")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000230")]
	public bool gravityUpsideDown
	{
		[Token(Token = "0x6000FF6")]
		[Address(RVA = "0xF85A70", Offset = "0xF85A70", VA = "0xF85A70")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000231")]
	public bool gravityAbnormal
	{
		[Token(Token = "0x6000FF7")]
		[Address(RVA = "0xF85A94", Offset = "0xF85A94", VA = "0xF85A94")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000232")]
	public bool isPracticeGreen
	{
		[Token(Token = "0x6000FF8")]
		[Address(RVA = "0xF85AB8", Offset = "0xF85AB8", VA = "0xF85AB8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x14000038")]
	public static event WarpEvent OnWarp
	{
		[Token(Token = "0x6000FD7")]
		[Address(RVA = "0xF84BEC", Offset = "0xF84BEC", VA = "0xF84BEC")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000FD8")]
		[Address(RVA = "0xF84CA8", Offset = "0xF84CA8", VA = "0xF84CA8")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000039")]
	public static event WarpEvent OnWarpComplete
	{
		[Token(Token = "0x6000FD9")]
		[Address(RVA = "0xF84D64", Offset = "0xF84D64", VA = "0xF84D64")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000FDA")]
		[Address(RVA = "0xF84E20", Offset = "0xF84E20", VA = "0xF84E20")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x1400003A")]
	public static event OnGodModeEvent onGodMode
	{
		[Token(Token = "0x6000FDB")]
		[Address(RVA = "0xF84EDC", Offset = "0xF84EDC", VA = "0xF84EDC")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000FDC")]
		[Address(RVA = "0xF84F98", Offset = "0xF84F98", VA = "0xF84F98")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x1400003B")]
	public static event OnGodModeExitEvent onGodModeExit
	{
		[Token(Token = "0x6000FDD")]
		[Address(RVA = "0xF85054", Offset = "0xF85054", VA = "0xF85054")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000FDE")]
		[Address(RVA = "0xF85110", Offset = "0xF85110", VA = "0xF85110")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x1400003C")]
	public static event OnTurnEvent onTurnEvent
	{
		[Token(Token = "0x6000FDF")]
		[Address(RVA = "0xF851CC", Offset = "0xF851CC", VA = "0xF851CC")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000FE0")]
		[Address(RVA = "0xF85288", Offset = "0xF85288", VA = "0xF85288")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x1400003D")]
	public static event OnFlyingEvent onFlyingStarted
	{
		[Token(Token = "0x6000FE1")]
		[Address(RVA = "0xF85344", Offset = "0xF85344", VA = "0xF85344")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000FE2")]
		[Address(RVA = "0xF85400", Offset = "0xF85400", VA = "0xF85400")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x1400003E")]
	public static event OnFlyingEvent onFlyingStopped
	{
		[Token(Token = "0x6000FE3")]
		[Address(RVA = "0xF854BC", Offset = "0xF854BC", VA = "0xF854BC")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000FE4")]
		[Address(RVA = "0xF85578", Offset = "0xF85578", VA = "0xF85578")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x1400003F")]
	public static event FocusEvent onFocusLost
	{
		[Token(Token = "0x6000FE7")]
		[Address(RVA = "0xF83034", Offset = "0xF83034", VA = "0xF83034")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000FE8")]
		[Address(RVA = "0xF8325C", Offset = "0xF8325C", VA = "0xF8325C")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000040")]
	public static event FocusEvent onFocusAcquired
	{
		[Token(Token = "0x6000FE9")]
		[Address(RVA = "0xF830F0", Offset = "0xF830F0", VA = "0xF830F0")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000FEA")]
		[Address(RVA = "0xF83318", Offset = "0xF83318", VA = "0xF83318")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000041")]
	public static event MainMenuInRangeEvent onMainMenuInRange
	{
		[Token(Token = "0x6000FEB")]
		[Address(RVA = "0xF85648", Offset = "0xF85648", VA = "0xF85648")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000FEC")]
		[Address(RVA = "0xF85704", Offset = "0xF85704", VA = "0xF85704")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000042")]
	public static event MainMenuInRangeEvent onMainMenuOutOfRange
	{
		[Token(Token = "0x6000FED")]
		[Address(RVA = "0xF857C0", Offset = "0xF857C0", VA = "0xF857C0")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000FEE")]
		[Address(RVA = "0xF8587C", Offset = "0xF8587C", VA = "0xF8587C")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6000FF9")]
	[Address(RVA = "0xF85B9C", Offset = "0xF85B9C", VA = "0xF85B9C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000FFA")]
	[Address(RVA = "0xF85C4C", Offset = "0xF85C4C", VA = "0xF85C4C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000FFB")]
	[Address(RVA = "0xF85CFC", Offset = "0xF85CFC", VA = "0xF85CFC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000FFC")]
	[Address(RVA = "0xF862C0", Offset = "0xF862C0", VA = "0xF862C0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000FFD")]
	[Address(RVA = "0xF863C8", Offset = "0xF863C8", VA = "0xF863C8")]
	public void Init()
	{
	}

	[Token(Token = "0x6000FFE")]
	[Address(RVA = "0xF86508", Offset = "0xF86508", VA = "0xF86508")]
	public void NewCourseLoaded()
	{
	}

	[Token(Token = "0x6000FFF")]
	[Address(RVA = "0xF866F8", Offset = "0xF866F8", VA = "0xF866F8")]
	private void Update()
	{
	}

	[Token(Token = "0x6001000")]
	[Address(RVA = "0xF86BE0", Offset = "0xF86BE0", VA = "0xF86BE0")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6001001")]
	[Address(RVA = "0xF87F9C", Offset = "0xF87F9C", VA = "0xF87F9C")]
	private void MoveWithObject()
	{
	}

	[Token(Token = "0x6001002")]
	[Address(RVA = "0xF86504", Offset = "0xF86504", VA = "0xF86504", Slot = "4")]
	public void OnProfileActivated(ProfileData profile)
	{
	}

	[Token(Token = "0x6001003")]
	[Address(RVA = "0xF881F8", Offset = "0xF881F8", VA = "0xF881F8")]
	private void UpdateUserPresence()
	{
	}

	[Token(Token = "0x6001004")]
	[Address(RVA = "0xF882B0", Offset = "0xF882B0", VA = "0xF882B0")]
	private void FocusAcquired()
	{
	}

	[Token(Token = "0x6001005")]
	[Address(RVA = "0xF88320", Offset = "0xF88320", VA = "0xF88320")]
	private void FocusLost()
	{
	}

	[Token(Token = "0x6001006")]
	[Address(RVA = "0xF8838C", Offset = "0xF8838C", VA = "0xF8838C")]
	public void RotateY(float degrees)
	{
	}

	[Token(Token = "0x6001007")]
	[Address(RVA = "0xF88640", Offset = "0xF88640", VA = "0xF88640")]
	public void Warp(Vector3 endPos, float duration)
	{
	}

	[Token(Token = "0x6001008")]
	[Address(RVA = "0xF88930", Offset = "0xF88930", VA = "0xF88930")]
	public void TrackingLost()
	{
	}

	[Token(Token = "0x6001009")]
	[Address(RVA = "0xF8895C", Offset = "0xF8895C", VA = "0xF8895C")]
	public void TrackingFound()
	{
	}

	[Token(Token = "0x600100A")]
	[Address(RVA = "0xF886A8", Offset = "0xF886A8", VA = "0xF886A8")]
	public void Warp(Vector3 endPos, float duration, Vector3 lookDirection)
	{
	}

	[Token(Token = "0x600100B")]
	[Address(RVA = "0xF88988", Offset = "0xF88988", VA = "0xF88988")]
	public void Warp(Transform target, float duration)
	{
	}

	[Token(Token = "0x600100C")]
	[Address(RVA = "0xF88A50", Offset = "0xF88A50", VA = "0xF88A50")]
	public void OffsetWarp(Vector3 target)
	{
	}

	[Token(Token = "0x600100D")]
	[Address(RVA = "0xF88B68", Offset = "0xF88B68", VA = "0xF88B68")]
	public void SetDefaultClippingPlane()
	{
	}

	[Token(Token = "0x600100E")]
	[Address(RVA = "0xF88B8C", Offset = "0xF88B8C", VA = "0xF88B8C")]
	public void SetScaledClippingPlane()
	{
	}

	[Token(Token = "0x600100F")]
	[Address(RVA = "0xF889CC", Offset = "0xF889CC", VA = "0xF889CC")]
	[IteratorStateMachine(typeof(<DoWarp>d__132))]
	private IEnumerator DoWarp(Transform target, float duration)
	{
		return null;
	}

	[Token(Token = "0x6001010")]
	[Address(RVA = "0xF88BFC", Offset = "0xF88BFC", VA = "0xF88BFC")]
	private void ResetWarpFlags(Transform target)
	{
	}

	[Token(Token = "0x6001011")]
	[Address(RVA = "0xF88C88", Offset = "0xF88C88", VA = "0xF88C88")]
	public void LoadScene(string toLoad)
	{
	}

	[Token(Token = "0x6001012")]
	[Address(RVA = "0xF88CE8", Offset = "0xF88CE8", VA = "0xF88CE8")]
	private void ResumeFlyingIfNecessary()
	{
	}

	[Token(Token = "0x6001013")]
	[Address(RVA = "0xF86AD8", Offset = "0xF86AD8", VA = "0xF86AD8")]
	public void ToggleGodMode()
	{
	}

	[Token(Token = "0x6001014")]
	[Address(RVA = "0xF865AC", Offset = "0xF865AC", VA = "0xF865AC")]
	public void GodModeOn()
	{
	}

	[Token(Token = "0x6001015")]
	[Address(RVA = "0xF86638", Offset = "0xF86638", VA = "0xF86638")]
	public void GodModeOff()
	{
	}

	[Token(Token = "0x6001016")]
	[Address(RVA = "0xF8941C", Offset = "0xF8941C", VA = "0xF8941C")]
	public void ForceExitGodMode()
	{
	}

	[Token(Token = "0x6001017")]
	[Address(RVA = "0xF89480", Offset = "0xF89480", VA = "0xF89480")]
	public bool IsPreviousWarpPositionValid()
	{
		return default(bool);
	}

	[Token(Token = "0x6001018")]
	[Address(RVA = "0xF8934C", Offset = "0xF8934C", VA = "0xF8934C")]
	[IteratorStateMachine(typeof(<DelayedWarpToStartPosition>d__141))]
	public IEnumerator DelayedWarpToStartPosition()
	{
		return null;
	}

	[Token(Token = "0x6001019")]
	[Address(RVA = "0xF893B4", Offset = "0xF893B4", VA = "0xF893B4")]
	[IteratorStateMachine(typeof(<DelayedWarpToPreviousPosition>d__142))]
	public IEnumerator DelayedWarpToPreviousPosition()
	{
		return null;
	}

	[Token(Token = "0x600101A")]
	[Address(RVA = "0xF88D5C", Offset = "0xF88D5C", VA = "0xF88D5C")]
	private void WarpToPreviousPosition()
	{
	}

	[Token(Token = "0x600101B")]
	[Address(RVA = "0xF865A8", Offset = "0xF865A8", VA = "0xF865A8")]
	private void WarpToMainMenuShackPosition()
	{
	}

	[Token(Token = "0x600101C")]
	[Address(RVA = "0xF88E68", Offset = "0xF88E68", VA = "0xF88E68")]
	private void WarpToGodModePosition()
	{
	}

	[Token(Token = "0x600101D")]
	[Address(RVA = "0xF861B4", Offset = "0xF861B4", VA = "0xF861B4")]
	public void ResetNonGodWarpPosition()
	{
	}

	[Token(Token = "0x600101E")]
	[Address(RVA = "0xF89524", Offset = "0xF89524", VA = "0xF89524")]
	public void SetNonGodWarpPosition(Vector3 newPosition, Vector3 newForward)
	{
	}

	[Token(Token = "0x600101F")]
	[Address(RVA = "0xF895EC", Offset = "0xF895EC", VA = "0xF895EC")]
	private void Recenter(bool rotationChanged, bool positionChanged)
	{
	}

	[Token(Token = "0x6001020")]
	[Address(RVA = "0xF880F4", Offset = "0xF880F4", VA = "0xF880F4")]
	public void UpdateLockBallPosition()
	{
	}

	[Token(Token = "0x6001021")]
	[Address(RVA = "0xF87670", Offset = "0xF87670", VA = "0xF87670")]
	private void UpdateFlying()
	{
	}

	[Token(Token = "0x6001022")]
	[Address(RVA = "0xF89C2C", Offset = "0xF89C2C", VA = "0xF89C2C")]
	private void StopFlying()
	{
	}

	[Token(Token = "0x6001023")]
	[Address(RVA = "0xF86A84", Offset = "0xF86A84", VA = "0xF86A84")]
	public void SnapTurnLeft()
	{
	}

	[Token(Token = "0x6001024")]
	[Address(RVA = "0xF86AB0", Offset = "0xF86AB0", VA = "0xF86AB0")]
	public void SnapTurnRight()
	{
	}

	[Token(Token = "0x6001025")]
	[Address(RVA = "0xF87548", Offset = "0xF87548", VA = "0xF87548")]
	private void SmoothRotation()
	{
	}

	[Token(Token = "0x6001026")]
	[Address(RVA = "0xF86DA8", Offset = "0xF86DA8", VA = "0xF86DA8")]
	private void SmoothLocomotion()
	{
	}

	[Token(Token = "0x6001027")]
	[Address(RVA = "0xF89CA0", Offset = "0xF89CA0", VA = "0xF89CA0")]
	private float GetMovementTimeStep()
	{
		return default(float);
	}

	[Token(Token = "0x6001028")]
	[Address(RVA = "0xF89CA8", Offset = "0xF89CA8", VA = "0xF89CA8")]
	public XRRig()
	{
	}
}
namespace UnityStandardAssets.Characters.FirstPerson
{
	[Token(Token = "0x200024F")]
	[RequireComponent(typeof(CharacterController))]
	[RequireComponent(typeof(AudioSource))]
	public class FirstPersonController : MonoBehaviour
	{
		[Token(Token = "0x4000D6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool m_IsWalking;

		[Token(Token = "0x4000D6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float m_WalkSpeed;

		[Token(Token = "0x4000D6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float m_RunSpeed;

		[Token(Token = "0x4000D70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[Range(0f, 1f)]
		public float m_RunstepLenghten;

		[Token(Token = "0x4000D71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float m_JumpSpeed;

		[Token(Token = "0x4000D72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float m_StickToGroundForce;

		[Token(Token = "0x4000D73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float m_GravityMultiplier;

		[Token(Token = "0x4000D74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public MouseLook m_MouseLook;

		[Token(Token = "0x4000D75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float m_StepInterval;

		[Token(Token = "0x4000D76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public AudioClip[] m_FootstepSounds;

		[Token(Token = "0x4000D77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public AudioClip m_JumpSound;

		[Token(Token = "0x4000D78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public AudioClip m_LandSound;

		[Token(Token = "0x4000D79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Camera m_Camera;

		[Token(Token = "0x4000D7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool m_Jump;

		[Token(Token = "0x4000D7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private float m_YRotation;

		[Token(Token = "0x4000D7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Vector2 m_Input;

		[Token(Token = "0x4000D7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector3 m_MoveDir;

		[Token(Token = "0x4000D7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private CharacterController m_CharacterController;

		[Token(Token = "0x4000D7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private CollisionFlags m_CollisionFlags;

		[Token(Token = "0x4000D80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private bool m_PreviouslyGrounded;

		[Token(Token = "0x4000D81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Vector3 m_OriginalCameraPosition;

		[Token(Token = "0x4000D82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private float m_StepCycle;

		[Token(Token = "0x4000D83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private float m_NextStep;

		[Token(Token = "0x4000D84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private bool m_Jumping;

		[Token(Token = "0x4000D85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private AudioSource m_AudioSource;

		[Token(Token = "0x6001057")]
		[Address(RVA = "0xF8BF00", Offset = "0xF8BF00", VA = "0xF8BF00")]
		private void Start()
		{
		}

		[Token(Token = "0x6001058")]
		[Address(RVA = "0xF8C034", Offset = "0xF8C034", VA = "0xF8C034")]
		private void Update()
		{
		}

		[Token(Token = "0x6001059")]
		[Address(RVA = "0xF8C1E8", Offset = "0xF8C1E8", VA = "0xF8C1E8")]
		private void PlayLandingSound()
		{
		}

		[Token(Token = "0x600105A")]
		[Address(RVA = "0xF8C230", Offset = "0xF8C230", VA = "0xF8C230")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x600105B")]
		[Address(RVA = "0xF8C7A8", Offset = "0xF8C7A8", VA = "0xF8C7A8")]
		private void PlayJumpSound()
		{
		}

		[Token(Token = "0x600105C")]
		[Address(RVA = "0xF8C7DC", Offset = "0xF8C7DC", VA = "0xF8C7DC")]
		private void ProgressStepCycle(float speed)
		{
		}

		[Token(Token = "0x600105D")]
		[Address(RVA = "0xF8C93C", Offset = "0xF8C93C", VA = "0xF8C93C")]
		private void PlayFootStepAudio()
		{
		}

		[Token(Token = "0x600105E")]
		[Address(RVA = "0xF8C624", Offset = "0xF8C624", VA = "0xF8C624")]
		private void GetInput(out float speed)
		{
		}

		[Token(Token = "0x600105F")]
		[Address(RVA = "0xF8C128", Offset = "0xF8C128", VA = "0xF8C128")]
		private void RotateView()
		{
		}

		[Token(Token = "0x6001060")]
		[Address(RVA = "0xF8CE34", Offset = "0xF8CE34", VA = "0xF8CE34")]
		private void OnControllerColliderHit(ControllerColliderHit hit)
		{
		}

		[Token(Token = "0x6001061")]
		[Address(RVA = "0xF8CF58", Offset = "0xF8CF58", VA = "0xF8CF58")]
		public FirstPersonController()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000250")]
	public class MouseLook
	{
		[Token(Token = "0x4000D86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float XSensitivity;

		[Token(Token = "0x4000D87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float YSensitivity;

		[Token(Token = "0x4000D88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool clampVerticalRotation;

		[Token(Token = "0x4000D89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float MinimumX;

		[Token(Token = "0x4000D8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float MaximumX;

		[Token(Token = "0x4000D8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool smooth;

		[Token(Token = "0x4000D8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float smoothTime;

		[Token(Token = "0x4000D8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool lockCursor;

		[Token(Token = "0x4000D8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Quaternion m_CharacterTargetRot;

		[Token(Token = "0x4000D8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Quaternion m_CameraTargetRot;

		[Token(Token = "0x4000D90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool m_cursorIsLocked;

		[Token(Token = "0x6001062")]
		[Address(RVA = "0xF8BFE4", Offset = "0xF8BFE4", VA = "0xF8BFE4")]
		public void Init(Transform character, Transform camera)
		{
		}

		[Token(Token = "0x6001063")]
		[Address(RVA = "0xF8CACC", Offset = "0xF8CACC", VA = "0xF8CACC")]
		public void LookRotation(Transform character, Transform camera)
		{
		}

		[Token(Token = "0x6001064")]
		[Address(RVA = "0xF8D01C", Offset = "0xF8D01C", VA = "0xF8D01C")]
		public void SetCursorLock(bool value)
		{
		}

		[Token(Token = "0x6001065")]
		[Address(RVA = "0xF8C92C", Offset = "0xF8C92C", VA = "0xF8C92C")]
		public void UpdateCursorLock()
		{
		}

		[Token(Token = "0x6001066")]
		[Address(RVA = "0xF8D050", Offset = "0xF8D050", VA = "0xF8D050")]
		private void InternalLockUpdate()
		{
		}

		[Token(Token = "0x6001067")]
		[Address(RVA = "0xF8CFB8", Offset = "0xF8CFB8", VA = "0xF8CFB8")]
		private Quaternion ClampRotationAroundXAxis(Quaternion q)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6001068")]
		[Address(RVA = "0xF8D148", Offset = "0xF8D148", VA = "0xF8D148")]
		public MouseLook()
		{
		}
	}
	[Token(Token = "0x2000251")]
	[RequireComponent(typeof(Rigidbody))]
	[RequireComponent(typeof(CapsuleCollider))]
	public class RigidbodyFirstPersonController : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000252")]
		public class MovementSettings
		{
			[Token(Token = "0x4000D9D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float ForwardSpeed;

			[Token(Token = "0x4000D9E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float BackwardSpeed;

			[Token(Token = "0x4000D9F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float StrafeSpeed;

			[Token(Token = "0x4000DA0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public float RunMultiplier;

			[Token(Token = "0x4000DA1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public KeyCode RunKey;

			[Token(Token = "0x4000DA2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public float JumpForce;

			[Token(Token = "0x4000DA3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public AnimationCurve SlopeCurveModifier;

			[Token(Token = "0x4000DA4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[HideInInspector]
			public float CurrentTargetSpeed;

			[Token(Token = "0x6001076")]
			[Address(RVA = "0xF8E040", Offset = "0xF8E040", VA = "0xF8E040")]
			public void UpdateDesiredTargetSpeed(Vector2 input)
			{
			}

			[Token(Token = "0x6001077")]
			[Address(RVA = "0xF8E1FC", Offset = "0xF8E1FC", VA = "0xF8E1FC")]
			public MovementSettings()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000253")]
		public class AdvancedSettings
		{
			[Token(Token = "0x4000DA5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float groundCheckDistance;

			[Token(Token = "0x4000DA6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float stickToGroundHelperDistance;

			[Token(Token = "0x4000DA7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float slowDownRate;

			[Token(Token = "0x4000DA8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public bool airControl;

			[Token(Token = "0x4000DA9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[Tooltip("set it to 0.1 or more if you get stuck in wall")]
			public float shellOffset;

			[Token(Token = "0x6001078")]
			[Address(RVA = "0xF8E3AC", Offset = "0xF8E3AC", VA = "0xF8E3AC")]
			public AdvancedSettings()
			{
			}
		}

		[Token(Token = "0x4000D91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Camera cam;

		[Token(Token = "0x4000D92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MovementSettings movementSettings;

		[Token(Token = "0x4000D93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public MouseLook mouseLook;

		[Token(Token = "0x4000D94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AdvancedSettings advancedSettings;

		[Token(Token = "0x4000D95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Rigidbody m_RigidBody;

		[Token(Token = "0x4000D96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private CapsuleCollider m_Capsule;

		[Token(Token = "0x4000D97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float m_YRotation;

		[Token(Token = "0x4000D98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Vector3 m_GroundContactNormal;

		[Token(Token = "0x4000D99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool m_Jump;

		[Token(Token = "0x4000D9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
		private bool m_PreviouslyGrounded;

		[Token(Token = "0x4000D9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5A")]
		private bool m_Jumping;

		[Token(Token = "0x4000D9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5B")]
		private bool m_IsGrounded;

		[Token(Token = "0x17000239")]
		public Vector3 Velocity
		{
			[Token(Token = "0x6001069")]
			[Address(RVA = "0xF8D17C", Offset = "0xF8D17C", VA = "0xF8D17C")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x1700023A")]
		public bool Grounded
		{
			[Token(Token = "0x600106A")]
			[Address(RVA = "0xF8D198", Offset = "0xF8D198", VA = "0xF8D198")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700023B")]
		public bool Jumping
		{
			[Token(Token = "0x600106B")]
			[Address(RVA = "0xF8D1A0", Offset = "0xF8D1A0", VA = "0xF8D1A0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700023C")]
		public bool Running
		{
			[Token(Token = "0x600106C")]
			[Address(RVA = "0xF8D1A8", Offset = "0xF8D1A8", VA = "0xF8D1A8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600106D")]
		[Address(RVA = "0xF8D1B0", Offset = "0xF8D1B0", VA = "0xF8D1B0")]
		private void Start()
		{
		}

		[Token(Token = "0x600106E")]
		[Address(RVA = "0xF8D268", Offset = "0xF8D268", VA = "0xF8D268")]
		private void Update()
		{
		}

		[Token(Token = "0x600106F")]
		[Address(RVA = "0xF8D3E8", Offset = "0xF8D3E8", VA = "0xF8D3E8")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001070")]
		[Address(RVA = "0xF8DB94", Offset = "0xF8DB94", VA = "0xF8DB94")]
		private float SlopeMultiplier()
		{
			return default(float);
		}

		[Token(Token = "0x6001071")]
		[Address(RVA = "0xF8DCF4", Offset = "0xF8DCF4", VA = "0xF8DCF4")]
		private void StickToGroundHelper()
		{
		}

		[Token(Token = "0x6001072")]
		[Address(RVA = "0xF8DA04", Offset = "0xF8DA04", VA = "0xF8DA04")]
		private Vector2 GetInput()
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001073")]
		[Address(RVA = "0xF8D26C", Offset = "0xF8D26C", VA = "0xF8D26C")]
		private void RotateView()
		{
		}

		[Token(Token = "0x6001074")]
		[Address(RVA = "0xF8D838", Offset = "0xF8D838", VA = "0xF8D838")]
		private void GroundCheck()
		{
		}

		[Token(Token = "0x6001075")]
		[Address(RVA = "0xF8E0F8", Offset = "0xF8E0F8", VA = "0xF8E0F8")]
		public RigidbodyFirstPersonController()
		{
		}
	}
}
namespace UnityStandardAssets.CrossPlatformInput
{
	[Token(Token = "0x2000254")]
	public class AxisTouchButton : MonoBehaviour, IPointerDownHandler, IEventSystemHandler, IPointerUpHandler
	{
		[Token(Token = "0x4000DAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string axisName;

		[Token(Token = "0x4000DAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float axisValue;

		[Token(Token = "0x4000DAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float responseSpeed;

		[Token(Token = "0x4000DAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float returnToCentreSpeed;

		[Token(Token = "0x4000DAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private AxisTouchButton m_PairedWith;

		[Token(Token = "0x4000DAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private CrossPlatformInputManager.VirtualAxis m_Axis;

		[Token(Token = "0x6001079")]
		[Address(RVA = "0xF8E3C8", Offset = "0xF8E3C8", VA = "0xF8E3C8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600107A")]
		[Address(RVA = "0xF8E618", Offset = "0xF8E618", VA = "0xF8E618")]
		private void FindPairedButton()
		{
		}

		[Token(Token = "0x600107B")]
		[Address(RVA = "0xF8E794", Offset = "0xF8E794", VA = "0xF8E794")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600107C")]
		[Address(RVA = "0xF8E804", Offset = "0xF8E804", VA = "0xF8E804", Slot = "4")]
		public void OnPointerDown(PointerEventData data)
		{
		}

		[Token(Token = "0x600107D")]
		[Address(RVA = "0xF8E8D0", Offset = "0xF8E8D0", VA = "0xF8E8D0", Slot = "5")]
		public void OnPointerUp(PointerEventData data)
		{
		}

		[Token(Token = "0x600107E")]
		[Address(RVA = "0xF8E934", Offset = "0xF8E934", VA = "0xF8E934")]
		public AxisTouchButton()
		{
		}
	}
	[Token(Token = "0x2000255")]
	public class ButtonHandler : MonoBehaviour
	{
		[Token(Token = "0x4000DB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string Name;

		[Token(Token = "0x600107F")]
		[Address(RVA = "0xF8E998", Offset = "0xF8E998", VA = "0xF8E998")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001080")]
		[Address(RVA = "0xF8E99C", Offset = "0xF8E99C", VA = "0xF8E99C")]
		public void SetDownState()
		{
		}

		[Token(Token = "0x6001081")]
		[Address(RVA = "0xF8EA64", Offset = "0xF8EA64", VA = "0xF8EA64")]
		public void SetUpState()
		{
		}

		[Token(Token = "0x6001082")]
		[Address(RVA = "0xF8EB2C", Offset = "0xF8EB2C", VA = "0xF8EB2C")]
		public void SetAxisPositiveState()
		{
		}

		[Token(Token = "0x6001083")]
		[Address(RVA = "0xF8EBF4", Offset = "0xF8EBF4", VA = "0xF8EBF4")]
		public void SetAxisNeutralState()
		{
		}

		[Token(Token = "0x6001084")]
		[Address(RVA = "0xF8ECBC", Offset = "0xF8ECBC", VA = "0xF8ECBC")]
		public void SetAxisNegativeState()
		{
		}

		[Token(Token = "0x6001085")]
		[Address(RVA = "0xF8ED84", Offset = "0xF8ED84", VA = "0xF8ED84")]
		public void Update()
		{
		}

		[Token(Token = "0x6001086")]
		[Address(RVA = "0xF8ED88", Offset = "0xF8ED88", VA = "0xF8ED88")]
		public ButtonHandler()
		{
		}
	}
	[Token(Token = "0x2000256")]
	public static class CrossPlatformInputManager
	{
		[Token(Token = "0x2000257")]
		public enum ActiveInputMethod
		{
			[Token(Token = "0x4000DB5")]
			Hardware,
			[Token(Token = "0x4000DB6")]
			Touch
		}

		[Token(Token = "0x2000258")]
		public class VirtualAxis
		{
			[Token(Token = "0x4000DB8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private float m_Value;

			[Token(Token = "0x1700023E")]
			public string name
			{
				[Token(Token = "0x60010A0")]
				[Address(RVA = "0xF8FA4C", Offset = "0xF8FA4C", VA = "0xF8FA4C")]
				[CompilerGenerated]
				get
				{
					return null;
				}
				[Token(Token = "0x60010A1")]
				[Address(RVA = "0xF8FA54", Offset = "0xF8FA54", VA = "0xF8FA54")]
				[CompilerGenerated]
				private set
				{
				}
			}

			[Token(Token = "0x1700023F")]
			public bool matchWithInputManager
			{
				[Token(Token = "0x60010A2")]
				[Address(RVA = "0xF8FA5C", Offset = "0xF8FA5C", VA = "0xF8FA5C")]
				[CompilerGenerated]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x60010A3")]
				[Address(RVA = "0xF8FA64", Offset = "0xF8FA64", VA = "0xF8FA64")]
				[CompilerGenerated]
				private set
				{
				}
			}

			[Token(Token = "0x17000240")]
			public float GetValue
			{
				[Token(Token = "0x60010A8")]
				[Address(RVA = "0xF8FAAC", Offset = "0xF8FAAC", VA = "0xF8FAAC")]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x17000241")]
			public float GetValueRaw
			{
				[Token(Token = "0x60010A9")]
				[Address(RVA = "0xF8FAB4", Offset = "0xF8FAB4", VA = "0xF8FAB4")]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x60010A4")]
			[Address(RVA = "0xF8E518", Offset = "0xF8E518", VA = "0xF8E518")]
			public VirtualAxis(string name)
			{
			}

			[Token(Token = "0x60010A5")]
			[Address(RVA = "0xF8FA70", Offset = "0xF8FA70", VA = "0xF8FA70")]
			public VirtualAxis(string name, bool matchToInputSettings)
			{
			}

			[Token(Token = "0x60010A6")]
			[Address(RVA = "0xF8E7AC", Offset = "0xF8E7AC", VA = "0xF8E7AC")]
			public void Remove()
			{
			}

			[Token(Token = "0x60010A7")]
			[Address(RVA = "0xF8FAA4", Offset = "0xF8FAA4", VA = "0xF8FAA4")]
			public void Update(float value)
			{
			}
		}

		[Token(Token = "0x2000259")]
		public class VirtualButton
		{
			[Token(Token = "0x4000DBC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			private int m_LastPressedFrame;

			[Token(Token = "0x4000DBD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int m_ReleasedFrame;

			[Token(Token = "0x4000DBE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			private bool m_Pressed;

			[Token(Token = "0x17000242")]
			public string name
			{
				[Token(Token = "0x60010AA")]
				[Address(RVA = "0xF8FABC", Offset = "0xF8FABC", VA = "0xF8FABC")]
				[CompilerGenerated]
				get
				{
					return null;
				}
				[Token(Token = "0x60010AB")]
				[Address(RVA = "0xF8FAC4", Offset = "0xF8FAC4", VA = "0xF8FAC4")]
				[CompilerGenerated]
				private set
				{
				}
			}

			[Token(Token = "0x17000243")]
			public bool matchWithInputManager
			{
				[Token(Token = "0x60010AC")]
				[Address(RVA = "0xF8FACC", Offset = "0xF8FACC", VA = "0xF8FACC")]
				[CompilerGenerated]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x60010AD")]
				[Address(RVA = "0xF8FAD4", Offset = "0xF8FAD4", VA = "0xF8FAD4")]
				[CompilerGenerated]
				private set
				{
				}
			}

			[Token(Token = "0x17000244")]
			public bool GetButton
			{
				[Token(Token = "0x60010B3")]
				[Address(RVA = "0xF8FBF8", Offset = "0xF8FBF8", VA = "0xF8FBF8")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x17000245")]
			public bool GetButtonDown
			{
				[Token(Token = "0x60010B4")]
				[Address(RVA = "0xF8FC00", Offset = "0xF8FC00", VA = "0xF8FC00")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x17000246")]
			public bool GetButtonUp
			{
				[Token(Token = "0x60010B5")]
				[Address(RVA = "0xF8FC24", Offset = "0xF8FC24", VA = "0xF8FC24")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x60010AE")]
			[Address(RVA = "0xF8FAE0", Offset = "0xF8FAE0", VA = "0xF8FAE0")]
			public VirtualButton(string name)
			{
			}

			[Token(Token = "0x60010AF")]
			[Address(RVA = "0xF8FB18", Offset = "0xF8FB18", VA = "0xF8FB18")]
			public VirtualButton(string name, bool matchToInputSettings)
			{
			}

			[Token(Token = "0x60010B0")]
			[Address(RVA = "0xF8FB54", Offset = "0xF8FB54", VA = "0xF8FB54")]
			public void Pressed()
			{
			}

			[Token(Token = "0x60010B1")]
			[Address(RVA = "0xF8FB80", Offset = "0xF8FB80", VA = "0xF8FB80")]
			public void Released()
			{
			}

			[Token(Token = "0x60010B2")]
			[Address(RVA = "0xF8FBA0", Offset = "0xF8FBA0", VA = "0xF8FBA0")]
			public void Remove()
			{
			}
		}

		[Token(Token = "0x4000DB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static VirtualInput activeInput;

		[Token(Token = "0x4000DB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static VirtualInput s_TouchInput;

		[Token(Token = "0x4000DB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static VirtualInput s_HardwareInput;

		[Token(Token = "0x1700023D")]
		public static Vector3 mousePosition
		{
			[Token(Token = "0x600109C")]
			[Address(RVA = "0xF8F878", Offset = "0xF8F878", VA = "0xF8F878")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x6001087")]
		[Address(RVA = "0xF8ED90", Offset = "0xF8ED90", VA = "0xF8ED90")]
		static CrossPlatformInputManager()
		{
		}

		[Token(Token = "0x6001088")]
		[Address(RVA = "0xF8EE48", Offset = "0xF8EE48", VA = "0xF8EE48")]
		public static void SwitchActiveInputMethod(ActiveInputMethod activeInputMethod)
		{
		}

		[Token(Token = "0x6001089")]
		[Address(RVA = "0xF8E4B0", Offset = "0xF8E4B0", VA = "0xF8E4B0")]
		public static bool AxisExists(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x600108A")]
		[Address(RVA = "0xF8EF30", Offset = "0xF8EF30", VA = "0xF8EF30")]
		public static bool ButtonExists(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x600108B")]
		[Address(RVA = "0xF8E548", Offset = "0xF8E548", VA = "0xF8E548")]
		public static void RegisterVirtualAxis(VirtualAxis axis)
		{
		}

		[Token(Token = "0x600108C")]
		[Address(RVA = "0xF8F178", Offset = "0xF8F178", VA = "0xF8F178")]
		public static void RegisterVirtualButton(VirtualButton button)
		{
		}

		[Token(Token = "0x600108D")]
		[Address(RVA = "0xF8F368", Offset = "0xF8F368", VA = "0xF8F368")]
		public static void UnRegisterVirtualAxis(string name)
		{
		}

		[Token(Token = "0x600108E")]
		[Address(RVA = "0xF8F4B0", Offset = "0xF8F4B0", VA = "0xF8F4B0")]
		public static void UnRegisterVirtualButton(string name)
		{
		}

		[Token(Token = "0x600108F")]
		[Address(RVA = "0xF8E5B0", Offset = "0xF8E5B0", VA = "0xF8E5B0")]
		public static VirtualAxis VirtualAxisReference(string name)
		{
			return null;
		}

		[Token(Token = "0x6001090")]
		[Address(RVA = "0xF8CA74", Offset = "0xF8CA74", VA = "0xF8CA74")]
		public static float GetAxis(string name)
		{
			return default(float);
		}

		[Token(Token = "0x6001091")]
		[Address(RVA = "0xF8F6BC", Offset = "0xF8F6BC", VA = "0xF8F6BC")]
		public static float GetAxisRaw(string name)
		{
			return default(float);
		}

		[Token(Token = "0x6001092")]
		[Address(RVA = "0xF8F63C", Offset = "0xF8F63C", VA = "0xF8F63C")]
		private static float GetAxis(string name, bool raw)
		{
			return default(float);
		}

		[Token(Token = "0x6001093")]
		[Address(RVA = "0xF8F714", Offset = "0xF8F714", VA = "0xF8F714")]
		public static bool GetButton(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x6001094")]
		[Address(RVA = "0xF8C178", Offset = "0xF8C178", VA = "0xF8C178")]
		public static bool GetButtonDown(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x6001095")]
		[Address(RVA = "0xF8F784", Offset = "0xF8F784", VA = "0xF8F784")]
		public static bool GetButtonUp(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x6001096")]
		[Address(RVA = "0xF8E9F4", Offset = "0xF8E9F4", VA = "0xF8E9F4")]
		public static void SetButtonDown(string name)
		{
		}

		[Token(Token = "0x6001097")]
		[Address(RVA = "0xF8EABC", Offset = "0xF8EABC", VA = "0xF8EABC")]
		public static void SetButtonUp(string name)
		{
		}

		[Token(Token = "0x6001098")]
		[Address(RVA = "0xF8EB84", Offset = "0xF8EB84", VA = "0xF8EB84")]
		public static void SetAxisPositive(string name)
		{
		}

		[Token(Token = "0x6001099")]
		[Address(RVA = "0xF8ED14", Offset = "0xF8ED14", VA = "0xF8ED14")]
		public static void SetAxisNegative(string name)
		{
		}

		[Token(Token = "0x600109A")]
		[Address(RVA = "0xF8EC4C", Offset = "0xF8EC4C", VA = "0xF8EC4C")]
		public static void SetAxisZero(string name)
		{
		}

		[Token(Token = "0x600109B")]
		[Address(RVA = "0xF8F7F4", Offset = "0xF8F7F4", VA = "0xF8F7F4")]
		public static void SetAxis(string name, float value)
		{
		}

		[Token(Token = "0x600109D")]
		[Address(RVA = "0xF8F8E4", Offset = "0xF8F8E4", VA = "0xF8F8E4")]
		public static void SetVirtualMousePositionX(float f)
		{
		}

		[Token(Token = "0x600109E")]
		[Address(RVA = "0xF8F95C", Offset = "0xF8F95C", VA = "0xF8F95C")]
		public static void SetVirtualMousePositionY(float f)
		{
		}

		[Token(Token = "0x600109F")]
		[Address(RVA = "0xF8F9D4", Offset = "0xF8F9D4", VA = "0xF8F9D4")]
		public static void SetVirtualMousePositionZ(float f)
		{
		}
	}
	[Token(Token = "0x200025A")]
	public class InputAxisScrollbar : MonoBehaviour
	{
		[Token(Token = "0x4000DBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string axis;

		[Token(Token = "0x60010B6")]
		[Address(RVA = "0xF8FC48", Offset = "0xF8FC48", VA = "0xF8FC48")]
		private void Update()
		{
		}

		[Token(Token = "0x60010B7")]
		[Address(RVA = "0xF8FC4C", Offset = "0xF8FC4C", VA = "0xF8FC4C")]
		public void HandleInput(float value)
		{
		}

		[Token(Token = "0x60010B8")]
		[Address(RVA = "0xF8FCBC", Offset = "0xF8FCBC", VA = "0xF8FCBC")]
		public InputAxisScrollbar()
		{
		}
	}
	[Token(Token = "0x200025B")]
	public class Joystick : MonoBehaviour, IPointerDownHandler, IEventSystemHandler, IPointerUpHandler, IDragHandler
	{
		[Token(Token = "0x200025C")]
		public enum AxisOption
		{
			[Token(Token = "0x4000DCA")]
			Both,
			[Token(Token = "0x4000DCB")]
			OnlyHorizontal,
			[Token(Token = "0x4000DCC")]
			OnlyVertical
		}

		[Token(Token = "0x4000DC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int MovementRange;

		[Token(Token = "0x4000DC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public AxisOption axesToUse;

		[Token(Token = "0x4000DC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string horizontalAxisName;

		[Token(Token = "0x4000DC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string verticalAxisName;

		[Token(Token = "0x4000DC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 m_StartPos;

		[Token(Token = "0x4000DC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private bool m_UseX;

		[Token(Token = "0x4000DC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
		private bool m_UseY;

		[Token(Token = "0x4000DC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private CrossPlatformInputManager.VirtualAxis m_HorizontalVirtualAxis;

		[Token(Token = "0x4000DC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private CrossPlatformInputManager.VirtualAxis m_VerticalVirtualAxis;

		[Token(Token = "0x60010B9")]
		[Address(RVA = "0xF8FCC4", Offset = "0xF8FCC4", VA = "0xF8FCC4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60010BA")]
		[Address(RVA = "0xF8FDEC", Offset = "0xF8FDEC", VA = "0xF8FDEC")]
		private void Start()
		{
		}

		[Token(Token = "0x60010BB")]
		[Address(RVA = "0xF8FE1C", Offset = "0xF8FE1C", VA = "0xF8FE1C")]
		private void UpdateVirtualAxes(Vector3 value)
		{
		}

		[Token(Token = "0x60010BC")]
		[Address(RVA = "0xF8FCC8", Offset = "0xF8FCC8", VA = "0xF8FCC8")]
		private void CreateVirtualAxes()
		{
		}

		[Token(Token = "0x60010BD")]
		[Address(RVA = "0xF8FE7C", Offset = "0xF8FE7C", VA = "0xF8FE7C", Slot = "6")]
		public void OnDrag(PointerEventData data)
		{
		}

		[Token(Token = "0x60010BE")]
		[Address(RVA = "0xF8FFC8", Offset = "0xF8FFC8", VA = "0xF8FFC8", Slot = "5")]
		public void OnPointerUp(PointerEventData data)
		{
		}

		[Token(Token = "0x60010BF")]
		[Address(RVA = "0xF90004", Offset = "0xF90004", VA = "0xF90004", Slot = "4")]
		public void OnPointerDown(PointerEventData data)
		{
		}

		[Token(Token = "0x60010C0")]
		[Address(RVA = "0xF90008", Offset = "0xF90008", VA = "0xF90008")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60010C1")]
		[Address(RVA = "0xF90048", Offset = "0xF90048", VA = "0xF90048")]
		public Joystick()
		{
		}
	}
	[Token(Token = "0x200025D")]
	[ExecuteInEditMode]
	public class MobileControlRig : MonoBehaviour
	{
		[Token(Token = "0x60010C2")]
		[Address(RVA = "0xF900C4", Offset = "0xF900C4", VA = "0xF900C4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60010C3")]
		[Address(RVA = "0xF900D4", Offset = "0xF900D4", VA = "0xF900D4")]
		private void Start()
		{
		}

		[Token(Token = "0x60010C4")]
		[Address(RVA = "0xF900CC", Offset = "0xF900CC", VA = "0xF900CC")]
		private void CheckEnableControlRig()
		{
		}

		[Token(Token = "0x60010C5")]
		[Address(RVA = "0xF901DC", Offset = "0xF901DC", VA = "0xF901DC")]
		private void EnableControlRig(bool enabled)
		{
		}

		[Token(Token = "0x60010C6")]
		[Address(RVA = "0xF90554", Offset = "0xF90554", VA = "0xF90554")]
		public MobileControlRig()
		{
		}
	}
	[Token(Token = "0x200025E")]
	public class TiltInput : MonoBehaviour
	{
		[Token(Token = "0x200025F")]
		public enum AxisOptions
		{
			[Token(Token = "0x4000DD3")]
			ForwardAxis,
			[Token(Token = "0x4000DD4")]
			SidewaysAxis
		}

		[Serializable]
		[Token(Token = "0x2000260")]
		public class AxisMapping
		{
			[Token(Token = "0x2000261")]
			public enum MappingType
			{
				[Token(Token = "0x4000DD8")]
				NamedAxis,
				[Token(Token = "0x4000DD9")]
				MousePositionX,
				[Token(Token = "0x4000DDA")]
				MousePositionY,
				[Token(Token = "0x4000DDB")]
				MousePositionZ
			}

			[Token(Token = "0x4000DD5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public MappingType type;

			[Token(Token = "0x4000DD6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string axisName;

			[Token(Token = "0x60010CB")]
			[Address(RVA = "0xF90894", Offset = "0xF90894", VA = "0xF90894")]
			public AxisMapping()
			{
			}
		}

		[Token(Token = "0x4000DCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AxisMapping mapping;

		[Token(Token = "0x4000DCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AxisOptions tiltAroundAxis;

		[Token(Token = "0x4000DCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float fullTiltAngle;

		[Token(Token = "0x4000DD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float centreAngleOffset;

		[Token(Token = "0x4000DD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private CrossPlatformInputManager.VirtualAxis m_SteerAxis;

		[Token(Token = "0x60010C7")]
		[Address(RVA = "0xF9055C", Offset = "0xF9055C", VA = "0xF9055C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60010C8")]
		[Address(RVA = "0xF9061C", Offset = "0xF9061C", VA = "0xF9061C")]
		private void Update()
		{
		}

		[Token(Token = "0x60010C9")]
		[Address(RVA = "0xF9086C", Offset = "0xF9086C", VA = "0xF9086C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60010CA")]
		[Address(RVA = "0xF90884", Offset = "0xF90884", VA = "0xF90884")]
		public TiltInput()
		{
		}
	}
	[Token(Token = "0x2000262")]
	[RequireComponent(typeof(Image))]
	public class TouchPad : MonoBehaviour, IPointerDownHandler, IEventSystemHandler, IPointerUpHandler
	{
		[Token(Token = "0x2000263")]
		public enum AxisOption
		{
			[Token(Token = "0x4000DEF")]
			Both,
			[Token(Token = "0x4000DF0")]
			OnlyHorizontal,
			[Token(Token = "0x4000DF1")]
			OnlyVertical
		}

		[Token(Token = "0x2000264")]
		public enum ControlStyle
		{
			[Token(Token = "0x4000DF3")]
			Absolute,
			[Token(Token = "0x4000DF4")]
			Relative,
			[Token(Token = "0x4000DF5")]
			Swipe
		}

		[Token(Token = "0x4000DDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AxisOption axesToUse;

		[Token(Token = "0x4000DDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public ControlStyle controlStyle;

		[Token(Token = "0x4000DDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string horizontalAxisName;

		[Token(Token = "0x4000DDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string verticalAxisName;

		[Token(Token = "0x4000DE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float Xsensitivity;

		[Token(Token = "0x4000DE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float Ysensitivity;

		[Token(Token = "0x4000DE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 m_StartPos;

		[Token(Token = "0x4000DE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Vector2 m_PreviousDelta;

		[Token(Token = "0x4000DE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Vector3 m_JoytickOutput;

		[Token(Token = "0x4000DE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool m_UseX;

		[Token(Token = "0x4000DE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
		private bool m_UseY;

		[Token(Token = "0x4000DE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private CrossPlatformInputManager.VirtualAxis m_HorizontalVirtualAxis;

		[Token(Token = "0x4000DE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private CrossPlatformInputManager.VirtualAxis m_VerticalVirtualAxis;

		[Token(Token = "0x4000DE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool m_Dragging;

		[Token(Token = "0x4000DEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private int m_Id;

		[Token(Token = "0x4000DEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector2 m_PreviousTouchPos;

		[Token(Token = "0x4000DEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Vector3 m_Center;

		[Token(Token = "0x4000DED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Image m_Image;

		[Token(Token = "0x60010CC")]
		[Address(RVA = "0xF9089C", Offset = "0xF9089C", VA = "0xF9089C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60010CD")]
		[Address(RVA = "0xF909C4", Offset = "0xF909C4", VA = "0xF909C4")]
		private void Start()
		{
		}

		[Token(Token = "0x60010CE")]
		[Address(RVA = "0xF908A0", Offset = "0xF908A0", VA = "0xF908A0")]
		private void CreateVirtualAxes()
		{
		}

		[Token(Token = "0x60010CF")]
		[Address(RVA = "0xF90A38", Offset = "0xF90A38", VA = "0xF90A38")]
		private void UpdateVirtualAxes(Vector3 value)
		{
		}

		[Token(Token = "0x60010D0")]
		[Address(RVA = "0xF90B38", Offset = "0xF90B38", VA = "0xF90B38", Slot = "4")]
		public void OnPointerDown(PointerEventData data)
		{
		}

		[Token(Token = "0x60010D1")]
		[Address(RVA = "0xF90B70", Offset = "0xF90B70", VA = "0xF90B70")]
		private void Update()
		{
		}

		[Token(Token = "0x60010D2")]
		[Address(RVA = "0xF90D48", Offset = "0xF90D48", VA = "0xF90D48", Slot = "5")]
		public void OnPointerUp(PointerEventData data)
		{
		}

		[Token(Token = "0x60010D3")]
		[Address(RVA = "0xF90DA8", Offset = "0xF90DA8", VA = "0xF90DA8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60010D4")]
		[Address(RVA = "0xF90E68", Offset = "0xF90E68", VA = "0xF90E68")]
		public TouchPad()
		{
		}
	}
	[Token(Token = "0x2000265")]
	public abstract class VirtualInput
	{
		[Token(Token = "0x4000DF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected Dictionary<string, CrossPlatformInputManager.VirtualAxis> m_VirtualAxes;

		[Token(Token = "0x4000DF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected Dictionary<string, CrossPlatformInputManager.VirtualButton> m_VirtualButtons;

		[Token(Token = "0x4000DF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected List<string> m_AlwaysUseVirtual;

		[Token(Token = "0x17000247")]
		public Vector3 virtualMousePosition
		{
			[Token(Token = "0x60010D5")]
			[Address(RVA = "0xF90EEC", Offset = "0xF90EEC", VA = "0xF90EEC")]
			[CompilerGenerated]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60010D6")]
			[Address(RVA = "0xF90EF8", Offset = "0xF90EF8", VA = "0xF90EF8")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x60010D7")]
		[Address(RVA = "0xF8EED8", Offset = "0xF8EED8", VA = "0xF8EED8")]
		public bool AxisExists(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x60010D8")]
		[Address(RVA = "0xF8EF98", Offset = "0xF8EF98", VA = "0xF8EF98")]
		public bool ButtonExists(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x60010D9")]
		[Address(RVA = "0xF8EFF0", Offset = "0xF8EFF0", VA = "0xF8EFF0")]
		public void RegisterVirtualAxis(CrossPlatformInputManager.VirtualAxis axis)
		{
		}

		[Token(Token = "0x60010DA")]
		[Address(RVA = "0xF8F1E0", Offset = "0xF8F1E0", VA = "0xF8F1E0")]
		public void RegisterVirtualButton(CrossPlatformInputManager.VirtualButton button)
		{
		}

		[Token(Token = "0x60010DB")]
		[Address(RVA = "0xF8F420", Offset = "0xF8F420", VA = "0xF8F420")]
		public void UnRegisterVirtualAxis(string name)
		{
		}

		[Token(Token = "0x60010DC")]
		[Address(RVA = "0xF8F518", Offset = "0xF8F518", VA = "0xF8F518")]
		public void UnRegisterVirtualButton(string name)
		{
		}

		[Token(Token = "0x60010DD")]
		[Address(RVA = "0xF8F5A8", Offset = "0xF8F5A8", VA = "0xF8F5A8")]
		public CrossPlatformInputManager.VirtualAxis VirtualAxisReference(string name)
		{
			return null;
		}

		[Token(Token = "0x60010DE")]
		[Address(RVA = "0xF8F954", Offset = "0xF8F954", VA = "0xF8F954")]
		public void SetVirtualMousePositionX(float f)
		{
		}

		[Token(Token = "0x60010DF")]
		[Address(RVA = "0xF8F9CC", Offset = "0xF8F9CC", VA = "0xF8F9CC")]
		public void SetVirtualMousePositionY(float f)
		{
		}

		[Token(Token = "0x60010E0")]
		[Address(RVA = "0xF8FA44", Offset = "0xF8FA44", VA = "0xF8FA44")]
		public void SetVirtualMousePositionZ(float f)
		{
		}

		[Token(Token = "0x60010E1")]
		public abstract float GetAxis(string name, bool raw);

		[Token(Token = "0x60010E2")]
		public abstract bool GetButton(string name);

		[Token(Token = "0x60010E3")]
		public abstract bool GetButtonDown(string name);

		[Token(Token = "0x60010E4")]
		public abstract bool GetButtonUp(string name);

		[Token(Token = "0x60010E5")]
		public abstract void SetButtonDown(string name);

		[Token(Token = "0x60010E6")]
		public abstract void SetButtonUp(string name);

		[Token(Token = "0x60010E7")]
		public abstract void SetAxisPositive(string name);

		[Token(Token = "0x60010E8")]
		public abstract void SetAxisNegative(string name);

		[Token(Token = "0x60010E9")]
		public abstract void SetAxisZero(string name);

		[Token(Token = "0x60010EA")]
		public abstract void SetAxis(string name, float value);

		[Token(Token = "0x60010EB")]
		public abstract Vector3 MousePosition();

		[Token(Token = "0x60010EC")]
		[Address(RVA = "0xF90F04", Offset = "0xF90F04", VA = "0xF90F04")]
		protected VirtualInput()
		{
		}
	}
}
namespace UnityStandardAssets.CrossPlatformInput.PlatformSpecific
{
	[Token(Token = "0x2000266")]
	public class MobileInput : VirtualInput
	{
		[Token(Token = "0x60010ED")]
		[Address(RVA = "0xF91008", Offset = "0xF91008", VA = "0xF91008")]
		private void AddButton(string name)
		{
		}

		[Token(Token = "0x60010EE")]
		[Address(RVA = "0xF910A0", Offset = "0xF910A0", VA = "0xF910A0")]
		private void AddAxes(string name)
		{
		}

		[Token(Token = "0x60010EF")]
		[Address(RVA = "0xF91130", Offset = "0xF91130", VA = "0xF91130", Slot = "4")]
		public override float GetAxis(string name, bool raw)
		{
			return default(float);
		}

		[Token(Token = "0x60010F0")]
		[Address(RVA = "0xF911C8", Offset = "0xF911C8", VA = "0xF911C8", Slot = "8")]
		public override void SetButtonDown(string name)
		{
		}

		[Token(Token = "0x60010F1")]
		[Address(RVA = "0xF9127C", Offset = "0xF9127C", VA = "0xF9127C", Slot = "9")]
		public override void SetButtonUp(string name)
		{
		}

		[Token(Token = "0x60010F2")]
		[Address(RVA = "0xF91324", Offset = "0xF91324", VA = "0xF91324", Slot = "10")]
		public override void SetAxisPositive(string name)
		{
		}

		[Token(Token = "0x60010F3")]
		[Address(RVA = "0xF913C0", Offset = "0xF913C0", VA = "0xF913C0", Slot = "11")]
		public override void SetAxisNegative(string name)
		{
		}

		[Token(Token = "0x60010F4")]
		[Address(RVA = "0xF9145C", Offset = "0xF9145C", VA = "0xF9145C", Slot = "12")]
		public override void SetAxisZero(string name)
		{
		}

		[Token(Token = "0x60010F5")]
		[Address(RVA = "0xF914F4", Offset = "0xF914F4", VA = "0xF914F4", Slot = "13")]
		public override void SetAxis(string name, float value)
		{
		}

		[Token(Token = "0x60010F6")]
		[Address(RVA = "0xF91598", Offset = "0xF91598", VA = "0xF91598", Slot = "6")]
		public override bool GetButtonDown(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x60010F7")]
		[Address(RVA = "0xF91644", Offset = "0xF91644", VA = "0xF91644", Slot = "7")]
		public override bool GetButtonUp(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x60010F8")]
		[Address(RVA = "0xF916F0", Offset = "0xF916F0", VA = "0xF916F0", Slot = "5")]
		public override bool GetButton(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x60010F9")]
		[Address(RVA = "0xF91788", Offset = "0xF91788", VA = "0xF91788", Slot = "14")]
		public override Vector3 MousePosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60010FA")]
		[Address(RVA = "0xF8EE40", Offset = "0xF8EE40", VA = "0xF8EE40")]
		public MobileInput()
		{
		}
	}
	[Token(Token = "0x2000267")]
	public class StandaloneInput : VirtualInput
	{
		[Token(Token = "0x60010FB")]
		[Address(RVA = "0xF91794", Offset = "0xF91794", VA = "0xF91794", Slot = "4")]
		public override float GetAxis(string name, bool raw)
		{
			return default(float);
		}

		[Token(Token = "0x60010FC")]
		[Address(RVA = "0xF917A8", Offset = "0xF917A8", VA = "0xF917A8", Slot = "5")]
		public override bool GetButton(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x60010FD")]
		[Address(RVA = "0xF917B4", Offset = "0xF917B4", VA = "0xF917B4", Slot = "6")]
		public override bool GetButtonDown(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x60010FE")]
		[Address(RVA = "0xF917C0", Offset = "0xF917C0", VA = "0xF917C0", Slot = "7")]
		public override bool GetButtonUp(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x60010FF")]
		[Address(RVA = "0xF917CC", Offset = "0xF917CC", VA = "0xF917CC", Slot = "8")]
		public override void SetButtonDown(string name)
		{
		}

		[Token(Token = "0x6001100")]
		[Address(RVA = "0xF9181C", Offset = "0xF9181C", VA = "0xF9181C", Slot = "9")]
		public override void SetButtonUp(string name)
		{
		}

		[Token(Token = "0x6001101")]
		[Address(RVA = "0xF9186C", Offset = "0xF9186C", VA = "0xF9186C", Slot = "10")]
		public override void SetAxisPositive(string name)
		{
		}

		[Token(Token = "0x6001102")]
		[Address(RVA = "0xF918BC", Offset = "0xF918BC", VA = "0xF918BC", Slot = "11")]
		public override void SetAxisNegative(string name)
		{
		}

		[Token(Token = "0x6001103")]
		[Address(RVA = "0xF9190C", Offset = "0xF9190C", VA = "0xF9190C", Slot = "12")]
		public override void SetAxisZero(string name)
		{
		}

		[Token(Token = "0x6001104")]
		[Address(RVA = "0xF9195C", Offset = "0xF9195C", VA = "0xF9195C", Slot = "13")]
		public override void SetAxis(string name, float value)
		{
		}

		[Token(Token = "0x6001105")]
		[Address(RVA = "0xF919AC", Offset = "0xF919AC", VA = "0xF919AC", Slot = "14")]
		public override Vector3 MousePosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001106")]
		[Address(RVA = "0xF8EE44", Offset = "0xF8EE44", VA = "0xF8EE44")]
		public StandaloneInput()
		{
		}
	}
}
namespace Valve.VR.InteractionSystem
{
	[Token(Token = "0x2000268")]
	public class VelocityEstimator : MonoBehaviour
	{
		[Token(Token = "0x2000269")]
		[CompilerGenerated]
		private sealed class <EstimateVelocityCoroutine>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000E01")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000E02")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000E03")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VelocityEstimator <>4__this;

			[Token(Token = "0x4000E04")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Vector3 <previousPosition>5__2;

			[Token(Token = "0x4000E05")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private Quaternion <previousRotation>5__3;

			[Token(Token = "0x17000248")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001112")]
				[Address(RVA = "0xF92184", Offset = "0xF92184", VA = "0xF92184", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000249")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001114")]
				[Address(RVA = "0xF921CC", Offset = "0xF921CC", VA = "0xF921CC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600110F")]
			[Address(RVA = "0xF91DC0", Offset = "0xF91DC0", VA = "0xF91DC0")]
			[DebuggerHidden]
			public <EstimateVelocityCoroutine>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x6001110")]
			[Address(RVA = "0xF91DFC", Offset = "0xF91DFC", VA = "0xF91DFC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001111")]
			[Address(RVA = "0xF91E00", Offset = "0xF91E00", VA = "0xF91E00", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001113")]
			[Address(RVA = "0xF9218C", Offset = "0xF9218C", VA = "0xF9218C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000DFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Tooltip("How many frames to average over for computing velocity")]
		public int velocityAverageFrames;

		[Token(Token = "0x4000DFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[Tooltip("How many frames to average over for computing angular velocity")]
		public int angularVelocityAverageFrames;

		[Token(Token = "0x4000DFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool estimateOnAwake;

		[Token(Token = "0x4000DFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Coroutine routine;

		[Token(Token = "0x4000DFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int sampleCount;

		[Token(Token = "0x4000DFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3[] velocitySamples;

		[Token(Token = "0x4000E00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Vector3[] angularVelocitySamples;

		[Token(Token = "0x6001107")]
		[Address(RVA = "0xF919B4", Offset = "0xF919B4", VA = "0xF919B4")]
		public void BeginEstimatingVelocity()
		{
		}

		[Token(Token = "0x6001108")]
		[Address(RVA = "0xF919F8", Offset = "0xF919F8", VA = "0xF919F8")]
		public void FinishEstimatingVelocity()
		{
		}

		[Token(Token = "0x6001109")]
		[Address(RVA = "0xF91A84", Offset = "0xF91A84", VA = "0xF91A84")]
		public Vector3 GetVelocityEstimate()
		{
			return default(Vector3);
		}

		[Token(Token = "0x600110A")]
		[Address(RVA = "0xF91B4C", Offset = "0xF91B4C", VA = "0xF91B4C")]
		public Vector3 GetAngularVelocityEstimate()
		{
			return default(Vector3);
		}

		[Token(Token = "0x600110B")]
		[Address(RVA = "0xF91C14", Offset = "0xF91C14", VA = "0xF91C14")]
		public Vector3 GetAccelerationEstimate()
		{
			return default(Vector3);
		}

		[Token(Token = "0x600110C")]
		[Address(RVA = "0xF91D48", Offset = "0xF91D48", VA = "0xF91D48")]
		private void Awake()
		{
		}

		[Token(Token = "0x600110D")]
		[Address(RVA = "0xF91A1C", Offset = "0xF91A1C", VA = "0xF91A1C")]
		[IteratorStateMachine(typeof(<EstimateVelocityCoroutine>d__13))]
		private IEnumerator EstimateVelocityCoroutine()
		{
			return null;
		}

		[Token(Token = "0x600110E")]
		[Address(RVA = "0xF91DE8", Offset = "0xF91DE8", VA = "0xF91DE8")]
		public VelocityEstimator()
		{
		}
	}
}
namespace IUnifiedContainerBase
{
	[Serializable]
	[Token(Token = "0x200026A")]
	public abstract class IUnifiedContainerBase
	{
		[Token(Token = "0x4000E06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		[HideInInspector]
		protected UnityEngine.Object ObjectField;

		[Token(Token = "0x4000E07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[HideInInspector]
		protected string ResultType;

		[Token(Token = "0x4000E08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Regex TypeArgumentsReplace;

		[Token(Token = "0x6001115")]
		[Address(RVA = "0xF921D4", Offset = "0xF921D4", VA = "0xF921D4")]
		public static string ConstructResolvedName(Type type)
		{
			return null;
		}

		[Token(Token = "0x6001116")]
		[Address(RVA = "0xF923CC", Offset = "0xF923CC", VA = "0xF923CC")]
		protected IUnifiedContainerBase()
		{
		}
	}
}
namespace Assets.IUnified
{
	[Token(Token = "0x200026C")]
	public static class CollectionExtensions
	{
		[Token(Token = "0x600111B")]
		public static int FirstIndexWhere<T>(this IList<T> list, Func<T, bool> predicate)
		{
			return default(int);
		}

		[Token(Token = "0x600111C")]
		public static List<TContainer> ToContainerList<TContainer, TInterface>(this IEnumerable<TInterface> interfaces) where TContainer : IUnifiedContainer<TInterface>, new() where TInterface : class
		{
			return null;
		}
	}
}
namespace Sabresaurus.PlayerPrefsExtensions
{
	[Token(Token = "0x200026E")]
	public static class SimpleEncryption
	{
		[Token(Token = "0x4000E0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static string key;

		[Token(Token = "0x4000E0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static RijndaelManaged provider;

		[Token(Token = "0x6001120")]
		[Address(RVA = "0xF92570", Offset = "0xF92570", VA = "0xF92570")]
		private static void SetupProvider()
		{
		}

		[Token(Token = "0x6001121")]
		[Address(RVA = "0xF92658", Offset = "0xF92658", VA = "0xF92658")]
		public static string EncryptString(string sourceString)
		{
			return null;
		}

		[Token(Token = "0x6001122")]
		[Address(RVA = "0xF927E8", Offset = "0xF927E8", VA = "0xF927E8")]
		public static string DecryptString(string sourceString)
		{
			return null;
		}

		[Token(Token = "0x6001123")]
		[Address(RVA = "0xF92970", Offset = "0xF92970", VA = "0xF92970")]
		public static string EncryptFloat(float value)
		{
			return null;
		}

		[Token(Token = "0x6001124")]
		[Address(RVA = "0xF92A3C", Offset = "0xF92A3C", VA = "0xF92A3C")]
		public static string EncryptInt(int value)
		{
			return null;
		}

		[Token(Token = "0x6001125")]
		[Address(RVA = "0xF92B00", Offset = "0xF92B00", VA = "0xF92B00")]
		public static float DecryptFloat(string sourceString)
		{
			return default(float);
		}

		[Token(Token = "0x6001126")]
		[Address(RVA = "0xF92BC8", Offset = "0xF92BC8", VA = "0xF92BC8")]
		public static int DecryptInt(string sourceString)
		{
			return default(int);
		}
	}
}
namespace ExitGames.Demos.DemoPunVoice
{
	[Token(Token = "0x200026F")]
	[RequireComponent(typeof(PhotonView))]
	[RequireComponent(typeof(Rigidbody))]
	[RequireComponent(typeof(Animator))]
	public abstract class BaseController : MonoBehaviour
	{
		[Token(Token = "0x4000E0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Camera ControllerCamera;

		[Token(Token = "0x4000E10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected Rigidbody rigidBody;

		[Token(Token = "0x4000E11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected Animator animator;

		[Token(Token = "0x4000E12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected Transform camTrans;

		[Token(Token = "0x4000E13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float h;

		[Token(Token = "0x4000E14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float v;

		[Token(Token = "0x4000E15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		protected float speed;

		[Token(Token = "0x4000E16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		private float cameraDistance;

		[Token(Token = "0x6001128")]
		[Address(RVA = "0xF92CFC", Offset = "0xF92CFC", VA = "0xF92CFC", Slot = "4")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6001129")]
		[Address(RVA = "0xF92EF4", Offset = "0xF92EF4", VA = "0xF92EF4", Slot = "5")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x600112A")]
		[Address(RVA = "0xF93018", Offset = "0xF93018", VA = "0xF93018", Slot = "6")]
		protected virtual void ChangePOV_CameraChanged(Camera camera)
		{
		}

		[Token(Token = "0x600112B")]
		[Address(RVA = "0xF930C0", Offset = "0xF930C0", VA = "0xF930C0", Slot = "7")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x600112C")]
		[Address(RVA = "0xF93150", Offset = "0xF93150", VA = "0xF93150", Slot = "8")]
		protected virtual void Init()
		{
		}

		[Token(Token = "0x600112D")]
		[Address(RVA = "0xF931CC", Offset = "0xF931CC", VA = "0xF931CC", Slot = "9")]
		protected virtual void SetCamera()
		{
		}

		[Token(Token = "0x600112E")]
		[Address(RVA = "0xF93264", Offset = "0xF93264", VA = "0xF93264", Slot = "10")]
		protected virtual void UpdateAnimator(float h, float v)
		{
		}

		[Token(Token = "0x600112F")]
		[Address(RVA = "0xF932DC", Offset = "0xF932DC", VA = "0xF932DC", Slot = "11")]
		protected virtual void FixedUpdate()
		{
		}

		[Token(Token = "0x6001130")]
		[Address(RVA = "0xF933D0", Offset = "0xF933D0", VA = "0xF933D0", Slot = "12")]
		protected virtual void ShowCamera(Camera camera)
		{
		}

		[Token(Token = "0x6001131")]
		[Address(RVA = "0xF93460", Offset = "0xF93460", VA = "0xF93460", Slot = "13")]
		protected virtual void HideCamera(Camera camera)
		{
		}

		[Token(Token = "0x6001132")]
		protected abstract void Move(float h, float v);

		[Token(Token = "0x6001133")]
		[Address(RVA = "0xF934F0", Offset = "0xF934F0", VA = "0xF934F0")]
		protected BaseController()
		{
		}
	}
	[Token(Token = "0x2000270")]
	[RequireComponent(typeof(Toggle))]
	[DisallowMultipleComponent]
	public class BetterToggle : MonoBehaviour
	{
		[Token(Token = "0x2000271")]
		public delegate void OnToggle(Toggle toggle);

		[Token(Token = "0x4000E17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Toggle toggle;

		[Token(Token = "0x14000043")]
		public static event OnToggle ToggleValueChanged
		{
			[Token(Token = "0x6001134")]
			[Address(RVA = "0xF93500", Offset = "0xF93500", VA = "0xF93500")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001135")]
			[Address(RVA = "0xF935B8", Offset = "0xF935B8", VA = "0xF935B8")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x6001136")]
		[Address(RVA = "0xF93670", Offset = "0xF93670", VA = "0xF93670")]
		private void Start()
		{
		}

		[Token(Token = "0x6001137")]
		[Address(RVA = "0xF93738", Offset = "0xF93738", VA = "0xF93738")]
		public void OnToggleValueChanged()
		{
		}

		[Token(Token = "0x6001138")]
		[Address(RVA = "0xF937A4", Offset = "0xF937A4", VA = "0xF937A4")]
		public BetterToggle()
		{
		}
	}
	[Token(Token = "0x2000272")]
	public class ChangePOV : MonoBehaviour, IMatchmakingCallbacks
	{
		[Token(Token = "0x2000273")]
		public delegate void OnCameraChanged(Camera newCamera);

		[Token(Token = "0x4000E19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private FirstPersonController firstPersonController;

		[Token(Token = "0x4000E1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private ThirdPersonController thirdPersonController;

		[Token(Token = "0x4000E1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private OrthographicController orthographicController;

		[Token(Token = "0x4000E1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 initialCameraPosition;

		[Token(Token = "0x4000E1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Quaternion initialCameraRotation;

		[Token(Token = "0x4000E1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Camera defaultCamera;

		[Token(Token = "0x4000E1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject ButtonsHolder;

		[Token(Token = "0x4000E20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Button FirstPersonCamActivator;

		[Token(Token = "0x4000E21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private Button ThirdPersonCamActivator;

		[Token(Token = "0x4000E22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Button OrthographicCamActivator;

		[Token(Token = "0x14000044")]
		public static event OnCameraChanged CameraChanged
		{
			[Token(Token = "0x600113E")]
			[Address(RVA = "0xF92E3C", Offset = "0xF92E3C", VA = "0xF92E3C")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x600113F")]
			[Address(RVA = "0xF92F60", Offset = "0xF92F60", VA = "0xF92F60")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x6001140")]
		[Address(RVA = "0xF9391C", Offset = "0xF9391C", VA = "0xF9391C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001141")]
		[Address(RVA = "0xF93B50", Offset = "0xF93B50", VA = "0xF93B50")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001142")]
		[Address(RVA = "0xF93CB0", Offset = "0xF93CB0", VA = "0xF93CB0")]
		private void Start()
		{
		}

		[Token(Token = "0x6001143")]
		[Address(RVA = "0xF93EC0", Offset = "0xF93EC0", VA = "0xF93EC0")]
		private void OnCharacterInstantiated(GameObject character)
		{
		}

		[Token(Token = "0x6001144")]
		[Address(RVA = "0xF93F98", Offset = "0xF93F98", VA = "0xF93F98")]
		private void FirstPersonMode()
		{
		}

		[Token(Token = "0x6001145")]
		[Address(RVA = "0xF9411C", Offset = "0xF9411C", VA = "0xF9411C")]
		private void ThirdPersonMode()
		{
		}

		[Token(Token = "0x6001146")]
		[Address(RVA = "0xF94124", Offset = "0xF94124", VA = "0xF94124")]
		private void OrthographicMode()
		{
		}

		[Token(Token = "0x6001147")]
		[Address(RVA = "0xF93FA0", Offset = "0xF93FA0", VA = "0xF93FA0")]
		private void ToggleMode(BaseController controller)
		{
		}

		[Token(Token = "0x6001148")]
		[Address(RVA = "0xF9412C", Offset = "0xF9412C", VA = "0xF9412C")]
		private void BroadcastChange(Camera camera)
		{
		}

		[Token(Token = "0x6001149")]
		[Address(RVA = "0xF941D0", Offset = "0xF941D0", VA = "0xF941D0", Slot = "4")]
		public void OnFriendListUpdate(List<Photon.Realtime.FriendInfo> friendList)
		{
		}

		[Token(Token = "0x600114A")]
		[Address(RVA = "0xF941D4", Offset = "0xF941D4", VA = "0xF941D4", Slot = "5")]
		public void OnCreatedRoom()
		{
		}

		[Token(Token = "0x600114B")]
		[Address(RVA = "0xF941D8", Offset = "0xF941D8", VA = "0xF941D8", Slot = "6")]
		public void OnCreateRoomFailed(short returnCode, string message)
		{
		}

		[Token(Token = "0x600114C")]
		[Address(RVA = "0xF941DC", Offset = "0xF941DC", VA = "0xF941DC", Slot = "7")]
		public void OnJoinedRoom()
		{
		}

		[Token(Token = "0x600114D")]
		[Address(RVA = "0xF941E0", Offset = "0xF941E0", VA = "0xF941E0", Slot = "8")]
		public void OnJoinRoomFailed(short returnCode, string message)
		{
		}

		[Token(Token = "0x600114E")]
		[Address(RVA = "0xF941E4", Offset = "0xF941E4", VA = "0xF941E4", Slot = "9")]
		public void OnJoinRandomFailed(short returnCode, string message)
		{
		}

		[Token(Token = "0x600114F")]
		[Address(RVA = "0xF941E8", Offset = "0xF941E8", VA = "0xF941E8", Slot = "10")]
		public void OnLeftRoom()
		{
		}

		[Token(Token = "0x6001150")]
		[Address(RVA = "0xF942FC", Offset = "0xF942FC", VA = "0xF942FC")]
		public ChangePOV()
		{
		}
	}
	[Token(Token = "0x2000274")]
	public class CharacterInstantiation : MonoBehaviourPunCallbacks, IOnEventCallback
	{
		[Token(Token = "0x2000275")]
		public enum SpawnSequence
		{
			[Token(Token = "0x4000E33")]
			Connection,
			[Token(Token = "0x4000E34")]
			Random,
			[Token(Token = "0x4000E35")]
			RoundRobin
		}

		[Token(Token = "0x2000276")]
		public delegate void OnCharacterInstantiated(GameObject character);

		[Token(Token = "0x4000E24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform SpawnPosition;

		[Token(Token = "0x4000E25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float PositionOffset;

		[Token(Token = "0x4000E26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject[] PrefabsToInstantiate;

		[Token(Token = "0x4000E27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public List<Transform> SpawnPoints;

		[Token(Token = "0x4000E28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool AutoSpawn;

		[Token(Token = "0x4000E29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		public bool UseRandomOffset;

		[Token(Token = "0x4000E2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public SpawnSequence Sequence;

		[Token(Token = "0x4000E2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private byte manualInstantiationEventCode;

		[Token(Token = "0x4000E2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		protected int lastUsedSpawnPointIndex;

		[Token(Token = "0x4000E2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private bool manualInstantiation;

		[Token(Token = "0x4000E2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		[SerializeField]
		private bool differentPrefabs;

		[Token(Token = "0x4000E30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private string localPrefabSuffix;

		[Token(Token = "0x4000E31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private string remotePrefabSuffix;

		[Token(Token = "0x14000045")]
		public static event OnCharacterInstantiated CharacterInstantiated
		{
			[Token(Token = "0x6001155")]
			[Address(RVA = "0xF93A98", Offset = "0xF93A98", VA = "0xF93A98")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001156")]
			[Address(RVA = "0xF93BF8", Offset = "0xF93BF8", VA = "0xF93BF8")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x6001157")]
		[Address(RVA = "0xF94344", Offset = "0xF94344", VA = "0xF94344", Slot = "41")]
		public override void OnJoinedRoom()
		{
		}

		[Token(Token = "0x6001158")]
		[Address(RVA = "0xF94558", Offset = "0xF94558", VA = "0xF94558")]
		private void ManualInstantiation(int index, Vector3 position, Quaternion rotation)
		{
		}

		[Token(Token = "0x6001159")]
		[Address(RVA = "0xF94A54", Offset = "0xF94A54", VA = "0xF94A54", Slot = "54")]
		public void OnEvent(EventData photonEvent)
		{
		}

		[Token(Token = "0x600115A")]
		[Address(RVA = "0xF94DB4", Offset = "0xF94DB4", VA = "0xF94DB4", Slot = "55")]
		protected virtual void GetSpawnPoint(out Vector3 spawnPos, out Quaternion spawnRot)
		{
		}

		[Token(Token = "0x600115B")]
		[Address(RVA = "0xF94FCC", Offset = "0xF94FCC", VA = "0xF94FCC", Slot = "56")]
		protected virtual Transform GetSpawnPoint()
		{
			return null;
		}

		[Token(Token = "0x600115C")]
		[Address(RVA = "0xF950EC", Offset = "0xF950EC", VA = "0xF950EC")]
		public CharacterInstantiation()
		{
		}
	}
	[Token(Token = "0x2000277")]
	public class FirstPersonController : BaseController
	{
		[Token(Token = "0x4000E36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private MouseLookHelper mouseLook;

		[Token(Token = "0x4000E37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float oldYRotation;

		[Token(Token = "0x4000E38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Quaternion velRotation;

		[Token(Token = "0x1700024A")]
		public Vector3 Velocity
		{
			[Token(Token = "0x6001161")]
			[Address(RVA = "0xF95154", Offset = "0xF95154", VA = "0xF95154")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x6001162")]
		[Address(RVA = "0xF95170", Offset = "0xF95170", VA = "0xF95170", Slot = "9")]
		protected override void SetCamera()
		{
		}

		[Token(Token = "0x6001163")]
		[Address(RVA = "0xF951B4", Offset = "0xF951B4", VA = "0xF951B4", Slot = "14")]
		protected override void Move(float h, float v)
		{
		}

		[Token(Token = "0x6001164")]
		[Address(RVA = "0xF9523C", Offset = "0xF9523C", VA = "0xF9523C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001165")]
		[Address(RVA = "0xF95240", Offset = "0xF95240", VA = "0xF95240")]
		private void RotateView()
		{
		}

		[Token(Token = "0x6001166")]
		[Address(RVA = "0xF95368", Offset = "0xF95368", VA = "0xF95368")]
		public FirstPersonController()
		{
		}
	}
	[Token(Token = "0x2000278")]
	[RequireComponent(typeof(Canvas))]
	public class Highlighter : MonoBehaviour
	{
		[Token(Token = "0x4000E39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Canvas canvas;

		[Token(Token = "0x4000E3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private PhotonVoiceView photonVoiceView;

		[Token(Token = "0x4000E3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Image recorderSprite;

		[Token(Token = "0x4000E3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Image speakerSprite;

		[Token(Token = "0x4000E3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Text bufferLagText;

		[Token(Token = "0x4000E3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool showSpeakerLag;

		[Token(Token = "0x6001167")]
		[Address(RVA = "0xF953D8", Offset = "0xF953D8", VA = "0xF953D8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001168")]
		[Address(RVA = "0xF95618", Offset = "0xF95618", VA = "0xF95618")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001169")]
		[Address(RVA = "0xF95794", Offset = "0xF95794", VA = "0xF95794")]
		private void VoiceDemoUI_DebugToggled(bool debugMode)
		{
		}

		[Token(Token = "0x600116A")]
		[Address(RVA = "0xF957A0", Offset = "0xF957A0", VA = "0xF957A0")]
		private void ChangePOV_CameraChanged(Camera camera)
		{
		}

		[Token(Token = "0x600116B")]
		[Address(RVA = "0xF957BC", Offset = "0xF957BC", VA = "0xF957BC")]
		private void Awake()
		{
		}

		[Token(Token = "0x600116C")]
		[Address(RVA = "0xF958D4", Offset = "0xF958D4", VA = "0xF958D4")]
		private void Update()
		{
		}

		[Token(Token = "0x600116D")]
		[Address(RVA = "0xF95A34", Offset = "0xF95A34", VA = "0xF95A34")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x600116E")]
		[Address(RVA = "0xF95B4C", Offset = "0xF95B4C", VA = "0xF95B4C")]
		public Highlighter()
		{
		}
	}
	[Token(Token = "0x2000279")]
	public class OrthographicController : ThirdPersonController
	{
		[Token(Token = "0x4000E3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float smoothing;

		[Token(Token = "0x4000E40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Vector3 offset;

		[Token(Token = "0x600116F")]
		[Address(RVA = "0xF95B54", Offset = "0xF95B54", VA = "0xF95B54", Slot = "8")]
		protected override void Init()
		{
		}

		[Token(Token = "0x6001170")]
		[Address(RVA = "0xF95B74", Offset = "0xF95B74", VA = "0xF95B74", Slot = "9")]
		protected override void SetCamera()
		{
		}

		[Token(Token = "0x6001171")]
		[Address(RVA = "0xF95BE4", Offset = "0xF95BE4", VA = "0xF95BE4", Slot = "14")]
		protected override void Move(float h, float v)
		{
		}

		[Token(Token = "0x6001172")]
		[Address(RVA = "0xF95D78", Offset = "0xF95D78", VA = "0xF95D78")]
		private void CameraFollow()
		{
		}

		[Token(Token = "0x6001173")]
		[Address(RVA = "0xF95E4C", Offset = "0xF95E4C", VA = "0xF95E4C")]
		public OrthographicController()
		{
		}
	}
	[Token(Token = "0x200027A")]
	public class SoundsForJoinAndLeave : MonoBehaviourPunCallbacks
	{
		[Token(Token = "0x4000E41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioClip JoinClip;

		[Token(Token = "0x4000E42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AudioClip LeaveClip;

		[Token(Token = "0x4000E43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private AudioSource source;

		[Token(Token = "0x6001174")]
		[Address(RVA = "0xF95E80", Offset = "0xF95E80", VA = "0xF95E80", Slot = "42")]
		public override void OnPlayerEnteredRoom(Photon.Realtime.Player newPlayer)
		{
		}

		[Token(Token = "0x6001175")]
		[Address(RVA = "0xF95F68", Offset = "0xF95F68", VA = "0xF95F68", Slot = "43")]
		public override void OnPlayerLeftRoom(Photon.Realtime.Player otherPlayer)
		{
		}

		[Token(Token = "0x6001176")]
		[Address(RVA = "0xF96050", Offset = "0xF96050", VA = "0xF96050")]
		public SoundsForJoinAndLeave()
		{
		}
	}
	[Token(Token = "0x200027B")]
	public class ThirdPersonController : BaseController
	{
		[Token(Token = "0x4000E44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private float movingTurnSpeed;

		[Token(Token = "0x6001177")]
		[Address(RVA = "0xF95BFC", Offset = "0xF95BFC", VA = "0xF95BFC", Slot = "14")]
		protected override void Move(float h, float v)
		{
		}

		[Token(Token = "0x6001178")]
		[Address(RVA = "0xF95E68", Offset = "0xF95E68", VA = "0xF95E68")]
		public ThirdPersonController()
		{
		}
	}
	[Token(Token = "0x200027C")]
	public class VoiceDemoUI : MonoBehaviour
	{
		[Token(Token = "0x200027D")]
		public delegate void OnDebugToggle(bool debugMode);

		[Token(Token = "0x4000E45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Text punState;

		[Token(Token = "0x4000E46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Text voiceState;

		[Token(Token = "0x4000E47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private PhotonVoiceNetwork punVoiceNetwork;

		[Token(Token = "0x4000E48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Canvas canvas;

		[Token(Token = "0x4000E49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Button punSwitch;

		[Token(Token = "0x4000E4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Text punSwitchText;

		[Token(Token = "0x4000E4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Button voiceSwitch;

		[Token(Token = "0x4000E4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Text voiceSwitchText;

		[Token(Token = "0x4000E4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Button calibrateButton;

		[Token(Token = "0x4000E4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Text calibrateText;

		[Token(Token = "0x4000E4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private Text voiceDebugText;

		[Token(Token = "0x4000E50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Recorder recorder;

		[Token(Token = "0x4000E51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private GameObject inGameSettings;

		[Token(Token = "0x4000E52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private GameObject globalSettings;

		[Token(Token = "0x4000E53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private Text devicesInfoText;

		[Token(Token = "0x4000E54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private GameObject debugGO;

		[Token(Token = "0x4000E55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private bool debugMode;

		[Token(Token = "0x4000E56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private float volumeBeforeMute;

		[Token(Token = "0x4000E57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private DebugLevel previousDebugLevel;

		[Token(Token = "0x4000E59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		[SerializeField]
		private int calibrationMilliSeconds;

		[Token(Token = "0x1700024B")]
		public bool DebugMode
		{
			[Token(Token = "0x6001179")]
			[Address(RVA = "0xF96058", Offset = "0xF96058", VA = "0xF96058")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600117A")]
			[Address(RVA = "0xF96060", Offset = "0xF96060", VA = "0xF96060")]
			set
			{
			}
		}

		[Token(Token = "0x14000046")]
		public static event OnDebugToggle DebugToggled
		{
			[Token(Token = "0x600117B")]
			[Address(RVA = "0xF95560", Offset = "0xF95560", VA = "0xF95560")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x600117C")]
			[Address(RVA = "0xF956DC", Offset = "0xF956DC", VA = "0xF956DC")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x600117D")]
		[Address(RVA = "0xF96190", Offset = "0xF96190", VA = "0xF96190")]
		private void Awake()
		{
		}

		[Token(Token = "0x600117E")]
		[Address(RVA = "0xF961EC", Offset = "0xF961EC", VA = "0xF961EC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600117F")]
		[Address(RVA = "0xF963F0", Offset = "0xF963F0", VA = "0xF963F0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001180")]
		[Address(RVA = "0xF965F4", Offset = "0xF965F4", VA = "0xF965F4")]
		private void CharacterInstantiation_CharacterInstantiated(GameObject character)
		{
		}

		[Token(Token = "0x6001181")]
		[Address(RVA = "0xF966A0", Offset = "0xF966A0", VA = "0xF966A0")]
		private void InitToggles(Toggle[] toggles)
		{
		}

		[Token(Token = "0x6001182")]
		[Address(RVA = "0xF96A20", Offset = "0xF96A20", VA = "0xF96A20")]
		private void BetterToggle_ToggleValueChanged(Toggle toggle)
		{
		}

		[Token(Token = "0x6001183")]
		[Address(RVA = "0xF96D74", Offset = "0xF96D74", VA = "0xF96D74")]
		private void OnCameraChanged(Camera newCamera)
		{
		}

		[Token(Token = "0x6001184")]
		[Address(RVA = "0xF96D90", Offset = "0xF96D90", VA = "0xF96D90")]
		private void Start()
		{
		}

		[Token(Token = "0x6001185")]
		[Address(RVA = "0xF97330", Offset = "0xF97330", VA = "0xF97330")]
		private void PunSwitchOnClick()
		{
		}

		[Token(Token = "0x6001186")]
		[Address(RVA = "0xF97400", Offset = "0xF97400", VA = "0xF97400")]
		private void VoiceSwitchOnClick()
		{
		}

		[Token(Token = "0x6001187")]
		[Address(RVA = "0xF97480", Offset = "0xF97480", VA = "0xF97480")]
		private void CalibrateButtonOnClick()
		{
		}

		[Token(Token = "0x6001188")]
		[Address(RVA = "0xF9751C", Offset = "0xF9751C", VA = "0xF9751C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001189")]
		[Address(RVA = "0xF9772C", Offset = "0xF9772C", VA = "0xF9772C")]
		private void PunClientStateChanged(ClientState fromState, ClientState toState)
		{
		}

		[Token(Token = "0x600118A")]
		[Address(RVA = "0xF97CF4", Offset = "0xF97CF4", VA = "0xF97CF4")]
		private void VoiceClientStateChanged(ClientState fromState, ClientState toState)
		{
		}

		[Token(Token = "0x600118B")]
		[Address(RVA = "0xF978C0", Offset = "0xF978C0", VA = "0xF978C0")]
		private void UpdateUiBasedOnVoiceState(ClientState voiceClientState)
		{
		}

		[Token(Token = "0x600118C")]
		[Address(RVA = "0xF97CFC", Offset = "0xF97CFC", VA = "0xF97CFC")]
		public VoiceDemoUI()
		{
		}
	}
}
namespace Photon.Voice.Unity.Demos
{
	[Token(Token = "0x200027E")]
	public class BackgroundMusicController : MonoBehaviour
	{
		[Token(Token = "0x4000E5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Text volumeText;

		[Token(Token = "0x4000E5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Slider volumeSlider;

		[Token(Token = "0x4000E5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AudioSource audioSource;

		[Token(Token = "0x4000E5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private float initialVolume;

		[Token(Token = "0x6001191")]
		[Address(RVA = "0xF97DB8", Offset = "0xF97DB8", VA = "0xF97DB8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001192")]
		[Address(RVA = "0xF97EF8", Offset = "0xF97EF8", VA = "0xF97EF8")]
		private void OnVolumeChanged(float newValue)
		{
		}

		[Token(Token = "0x6001193")]
		[Address(RVA = "0xF97FC4", Offset = "0xF97FC4", VA = "0xF97FC4")]
		public BackgroundMusicController()
		{
		}
	}
	[Token(Token = "0x200027F")]
	public class SidebarToggle : MonoBehaviour
	{
		[Token(Token = "0x4000E5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Button sidebarButton;

		[Token(Token = "0x4000E5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private RectTransform panelsHolder;

		[Token(Token = "0x4000E60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float sidebarWidth;

		[Token(Token = "0x4000E61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private bool sidebarOpen;

		[Token(Token = "0x6001194")]
		[Address(RVA = "0xF97FD4", Offset = "0xF97FD4", VA = "0xF97FD4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001195")]
		[Address(RVA = "0xF980A4", Offset = "0xF980A4", VA = "0xF980A4")]
		[ContextMenu("ToggleSidebar")]
		private void ToggleSidebar()
		{
		}

		[Token(Token = "0x6001196")]
		[Address(RVA = "0xF9808C", Offset = "0xF9808C", VA = "0xF9808C")]
		private void ToggleSidebar(bool open)
		{
		}

		[Token(Token = "0x6001197")]
		[Address(RVA = "0xF98108", Offset = "0xF98108", VA = "0xF98108")]
		public SidebarToggle()
		{
		}
	}
	[Token(Token = "0x2000280")]
	public static class UiExtensions
	{
		[Token(Token = "0x6001198")]
		[Address(RVA = "0xF980BC", Offset = "0xF980BC", VA = "0xF980BC")]
		public static void SetPosX(this RectTransform rectTransform, float x)
		{
		}

		[Token(Token = "0x6001199")]
		[Address(RVA = "0xF98120", Offset = "0xF98120", VA = "0xF98120")]
		public static void SetHeight(this RectTransform rectTransform, float h)
		{
		}

		[Token(Token = "0x600119A")]
		[Address(RVA = "0xF98138", Offset = "0xF98138", VA = "0xF98138")]
		public static void SetValue(this Toggle toggle, bool isOn)
		{
		}

		[Token(Token = "0x600119B")]
		[Address(RVA = "0xF98150", Offset = "0xF98150", VA = "0xF98150")]
		public static void SetValue(this Slider slider, float v)
		{
		}

		[Token(Token = "0x600119C")]
		[Address(RVA = "0xF98170", Offset = "0xF98170", VA = "0xF98170")]
		public static void SetValue(this InputField inputField, string v)
		{
		}

		[Token(Token = "0x600119D")]
		[Address(RVA = "0xF98184", Offset = "0xF98184", VA = "0xF98184")]
		public static void DestroyChildren(this Transform transform)
		{
		}

		[Token(Token = "0x600119E")]
		[Address(RVA = "0xF982C8", Offset = "0xF982C8", VA = "0xF982C8")]
		public static void Hide(this CanvasGroup canvasGroup, bool blockRaycasts = false, bool interactable = false)
		{
		}

		[Token(Token = "0x600119F")]
		[Address(RVA = "0xF98318", Offset = "0xF98318", VA = "0xF98318")]
		public static void Show(this CanvasGroup canvasGroup, bool blockRaycasts = true, bool interactable = true)
		{
		}

		[Token(Token = "0x60011A0")]
		[Address(RVA = "0xF98368", Offset = "0xF98368", VA = "0xF98368")]
		public static bool IsHidden(this CanvasGroup canvasGroup)
		{
			return default(bool);
		}

		[Token(Token = "0x60011A1")]
		[Address(RVA = "0xF9838C", Offset = "0xF9838C", VA = "0xF9838C")]
		public static bool IsShown(this CanvasGroup canvasGroup)
		{
			return default(bool);
		}

		[Token(Token = "0x60011A2")]
		[Address(RVA = "0xF983B0", Offset = "0xF983B0", VA = "0xF983B0")]
		public static void SetSingleOnClickCallback(this Button button, UnityAction action)
		{
		}

		[Token(Token = "0x60011A3")]
		[Address(RVA = "0xF983F4", Offset = "0xF983F4", VA = "0xF983F4")]
		public static void SetSingleOnValueChangedCallback(this Toggle toggle, UnityAction<bool> action)
		{
		}

		[Token(Token = "0x60011A4")]
		[Address(RVA = "0xF98460", Offset = "0xF98460", VA = "0xF98460")]
		public static void SetSingleOnValueChangedCallback(this InputField inputField, UnityAction<string> action)
		{
		}

		[Token(Token = "0x60011A5")]
		[Address(RVA = "0xF984CC", Offset = "0xF984CC", VA = "0xF984CC")]
		public static void SetSingleOnEndEditCallback(this InputField inputField, UnityAction<string> action)
		{
		}

		[Token(Token = "0x60011A6")]
		[Address(RVA = "0xF98538", Offset = "0xF98538", VA = "0xF98538")]
		public static void SetSingleOnValueChangedCallback(this Dropdown inputField, UnityAction<int> action)
		{
		}

		[Token(Token = "0x60011A7")]
		[Address(RVA = "0xF97E8C", Offset = "0xF97E8C", VA = "0xF97E8C")]
		public static void SetSingleOnValueChangedCallback(this Slider slider, UnityAction<float> action)
		{
		}
	}
}
namespace Photon.Voice.Unity.Demos.DemoVoiceUI
{
	[Token(Token = "0x2000281")]
	public class CodecSettingsUI : MonoBehaviour
	{
		[Token(Token = "0x4000E62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Dropdown frameDurationDropdown;

		[Token(Token = "0x4000E63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Dropdown samplingRateDropdown;

		[Token(Token = "0x4000E64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private InputField bitrateInputField;

		[Token(Token = "0x4000E65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Recorder recorder;

		[Token(Token = "0x4000E66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly List<string> frameDurationOptions;

		[Token(Token = "0x4000E67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly List<string> samplingRateOptions;

		[Token(Token = "0x60011A8")]
		[Address(RVA = "0xF985A4", Offset = "0xF985A4", VA = "0xF985A4")]
		private void Awake()
		{
		}

		[Token(Token = "0x60011A9")]
		[Address(RVA = "0xF988A8", Offset = "0xF988A8", VA = "0xF988A8")]
		private void Update()
		{
		}

		[Token(Token = "0x60011AA")]
		[Address(RVA = "0xF988C8", Offset = "0xF988C8", VA = "0xF988C8")]
		private void OnBitrateChanged(string newBitrateString)
		{
		}

		[Token(Token = "0x60011AB")]
		[Address(RVA = "0xF98930", Offset = "0xF98930", VA = "0xF98930")]
		private void OnFrameDurationChanged(int index)
		{
		}

		[Token(Token = "0x60011AC")]
		[Address(RVA = "0xF98990", Offset = "0xF98990", VA = "0xF98990")]
		private void OnSamplingRateChanged(int index)
		{
		}

		[Token(Token = "0x60011AD")]
		[Address(RVA = "0xF98764", Offset = "0xF98764", VA = "0xF98764")]
		private void InitFrameDuration()
		{
		}

		[Token(Token = "0x60011AE")]
		[Address(RVA = "0xF987F0", Offset = "0xF987F0", VA = "0xF987F0")]
		private void InitSamplingRate()
		{
		}

		[Token(Token = "0x60011AF")]
		[Address(RVA = "0xF98858", Offset = "0xF98858", VA = "0xF98858")]
		private void InitBitrate()
		{
		}

		[Token(Token = "0x60011B0")]
		[Address(RVA = "0xF989F0", Offset = "0xF989F0", VA = "0xF989F0")]
		public CodecSettingsUI()
		{
		}
	}
	[Token(Token = "0x2000282")]
	[RequireComponent(typeof(VoiceConnection), typeof(ConnectAndJoin))]
	public class DemoVoiceUI : MonoBehaviour, IInRoomCallbacks, IMatchmakingCallbacks
	{
		[Token(Token = "0x4000E68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Text connectionStatusText;

		[Token(Token = "0x4000E69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Text serverStatusText;

		[Token(Token = "0x4000E6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Text roomStatusText;

		[Token(Token = "0x4000E6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Text inputWarningText;

		[Token(Token = "0x4000E6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Text rttText;

		[Token(Token = "0x4000E6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Text rttVariationText;

		[Token(Token = "0x4000E6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Text packetLossWarningText;

		[Token(Token = "0x4000E6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private InputField localNicknameText;

		[Token(Token = "0x4000E70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Toggle debugEchoToggle;

		[Token(Token = "0x4000E71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Toggle reliableTransmissionToggle;

		[Token(Token = "0x4000E72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private Toggle encryptionToggle;

		[Token(Token = "0x4000E73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private GameObject webRtcDspGameObject;

		[Token(Token = "0x4000E74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private Toggle aecToggle;

		[Token(Token = "0x4000E75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private Toggle aecHighPassToggle;

		[Token(Token = "0x4000E76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private InputField reverseStreamDelayInputField;

		[Token(Token = "0x4000E77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private Toggle noiseSuppressionToggle;

		[Token(Token = "0x4000E78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private Toggle agcToggle;

		[Token(Token = "0x4000E79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private Slider agcCompressionGainSlider;

		[Token(Token = "0x4000E7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private Toggle vadToggle;

		[Token(Token = "0x4000E7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private Toggle muteToggle;

		[Token(Token = "0x4000E7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private Toggle streamAudioClipToggle;

		[Token(Token = "0x4000E7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private Toggle audioToneToggle;

		[Token(Token = "0x4000E7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private Toggle dspToggle;

		[Token(Token = "0x4000E7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private Toggle highPassToggle;

		[Token(Token = "0x4000E80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private Toggle photonVadToggle;

		[Token(Token = "0x4000E81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private GameObject microphoneSetupGameObject;

		[Token(Token = "0x4000E82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[SerializeField]
		private bool defaultTransmitEnabled;

		[Token(Token = "0x4000E83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		[SerializeField]
		private int screenWidth;

		[Token(Token = "0x4000E84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[SerializeField]
		private int screenHeight;

		[Token(Token = "0x4000E85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		[SerializeField]
		private bool fullScreen;

		[Token(Token = "0x4000E86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[SerializeField]
		private InputField roomNameInputField;

		[Token(Token = "0x4000E87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[SerializeField]
		private InputField globalMinDelaySoftInputField;

		[Token(Token = "0x4000E88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[SerializeField]
		private InputField globalMaxDelaySoftInputField;

		[Token(Token = "0x4000E89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[SerializeField]
		private InputField globalMaxDelayHardInputField;

		[Token(Token = "0x4000E8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[SerializeField]
		private int rttYellowThreshold;

		[Token(Token = "0x4000E8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		[SerializeField]
		private int rttRedThreshold;

		[Token(Token = "0x4000E8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[SerializeField]
		private int rttVariationYellowThreshold;

		[Token(Token = "0x4000E8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		[SerializeField]
		private int rttVariationRedThreshold;

		[Token(Token = "0x4000E8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private GameObject compressionGainGameObject;

		[Token(Token = "0x4000E8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private Text compressionGainText;

		[Token(Token = "0x4000E90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private GameObject aecOptionsGameObject;

		[Token(Token = "0x4000E91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		public Transform RemoteVoicesPanel;

		[Token(Token = "0x4000E92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		protected VoiceConnection voiceConnection;

		[Token(Token = "0x4000E93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private WebRtcAudioDsp voiceAudioPreprocessor;

		[Token(Token = "0x4000E94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		private ConnectAndJoin connectAndJoin;

		[Token(Token = "0x4000E95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		private readonly Color warningColor;

		[Token(Token = "0x4000E96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		private readonly Color okColor;

		[Token(Token = "0x4000E97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		private readonly Color redColor;

		[Token(Token = "0x4000E98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		private readonly Color defaultColor;

		[Token(Token = "0x60011B2")]
		[Address(RVA = "0xF98F44", Offset = "0xF98F44", VA = "0xF98F44")]
		private void Awake()
		{
		}

		[Token(Token = "0x60011B3")]
		[Address(RVA = "0xF99C34", Offset = "0xF99C34", VA = "0xF99C34", Slot = "16")]
		protected virtual void SetDefaults()
		{
		}

		[Token(Token = "0x60011B4")]
		[Address(RVA = "0xF99C60", Offset = "0xF99C60", VA = "0xF99C60")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60011B5")]
		[Address(RVA = "0xF99CFC", Offset = "0xF99CFC", VA = "0xF99CFC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60011B6")]
		[Address(RVA = "0xF99B98", Offset = "0xF99B98", VA = "0xF99B98")]
		private void GetSavedNickname()
		{
		}

		[Token(Token = "0x60011B7")]
		[Address(RVA = "0xF99D98", Offset = "0xF99D98", VA = "0xF99D98", Slot = "17")]
		protected virtual void OnSpeakerCreated(Speaker speaker)
		{
		}

		[Token(Token = "0x60011B8")]
		[Address(RVA = "0xF99EBC", Offset = "0xF99EBC", VA = "0xF99EBC")]
		private void OnRemoteVoiceRemove(Speaker speaker)
		{
		}

		[Token(Token = "0x60011B9")]
		[Address(RVA = "0xF99F60", Offset = "0xF99F60", VA = "0xF99F60")]
		private void ToggleMute(bool isOn)
		{
		}

		[Token(Token = "0x60011BA")]
		[Address(RVA = "0xF9A1AC", Offset = "0xF9A1AC", VA = "0xF9A1AC", Slot = "18")]
		protected virtual void ToggleIsRecording(bool isRecording)
		{
		}

		[Token(Token = "0x60011BB")]
		[Address(RVA = "0xF9A1DC", Offset = "0xF9A1DC", VA = "0xF9A1DC")]
		private void ToggleDebugEcho(bool isOn)
		{
		}

		[Token(Token = "0x60011BC")]
		[Address(RVA = "0xF9A20C", Offset = "0xF9A20C", VA = "0xF9A20C")]
		private void ToggleReliable(bool isOn)
		{
		}

		[Token(Token = "0x60011BD")]
		[Address(RVA = "0xF9A23C", Offset = "0xF9A23C", VA = "0xF9A23C")]
		private void ToggleEncryption(bool isOn)
		{
		}

		[Token(Token = "0x60011BE")]
		[Address(RVA = "0xF9A26C", Offset = "0xF9A26C", VA = "0xF9A26C")]
		private void ToggleAEC(bool isOn)
		{
		}

		[Token(Token = "0x60011BF")]
		[Address(RVA = "0xF9A2B0", Offset = "0xF9A2B0", VA = "0xF9A2B0")]
		private void ToggleNoiseSuppression(bool isOn)
		{
		}

		[Token(Token = "0x60011C0")]
		[Address(RVA = "0xF9A2D0", Offset = "0xF9A2D0", VA = "0xF9A2D0")]
		private void ToggleAGC(bool isOn)
		{
		}

		[Token(Token = "0x60011C1")]
		[Address(RVA = "0xF9A314", Offset = "0xF9A314", VA = "0xF9A314")]
		private void ToggleVAD(bool isOn)
		{
		}

		[Token(Token = "0x60011C2")]
		[Address(RVA = "0xF9A334", Offset = "0xF9A334", VA = "0xF9A334")]
		private void ToggleHighPass(bool isOn)
		{
		}

		[Token(Token = "0x60011C3")]
		[Address(RVA = "0xF9A354", Offset = "0xF9A354", VA = "0xF9A354")]
		private void ToggleDsp(bool isOn)
		{
		}

		[Token(Token = "0x60011C4")]
		[Address(RVA = "0xF9A3B4", Offset = "0xF9A3B4", VA = "0xF9A3B4")]
		private void ToggleAudioClipStreaming(bool isOn)
		{
		}

		[Token(Token = "0x60011C5")]
		[Address(RVA = "0xF9A4AC", Offset = "0xF9A4AC", VA = "0xF9A4AC")]
		private void ToggleAudioToneFactory(bool isOn)
		{
		}

		[Token(Token = "0x60011C6")]
		[Address(RVA = "0xF9A6A8", Offset = "0xF9A6A8", VA = "0xF9A6A8")]
		private void TogglePhotonVAD(bool isOn)
		{
		}

		[Token(Token = "0x60011C7")]
		[Address(RVA = "0xF9A6D8", Offset = "0xF9A6D8", VA = "0xF9A6D8")]
		private void ToggleAecHighPass(bool isOn)
		{
		}

		[Token(Token = "0x60011C8")]
		[Address(RVA = "0xF9A6F8", Offset = "0xF9A6F8", VA = "0xF9A6F8")]
		private void OnAgcCompressionGainChanged(float agcCompressionGain)
		{
		}

		[Token(Token = "0x60011C9")]
		[Address(RVA = "0xF9A7C8", Offset = "0xF9A7C8", VA = "0xF9A7C8")]
		private void OnGlobalPlaybackDelayMinSoftChanged(string newMinDelaySoftString)
		{
		}

		[Token(Token = "0x60011CA")]
		[Address(RVA = "0xF9A898", Offset = "0xF9A898", VA = "0xF9A898")]
		private void OnGlobalPlaybackDelayMaxSoftChanged(string newMaxDelaySoftString)
		{
		}

		[Token(Token = "0x60011CB")]
		[Address(RVA = "0xF9A964", Offset = "0xF9A964", VA = "0xF9A964")]
		private void OnGlobalPlaybackDelayMaxHardChanged(string newMaxDelayHardString)
		{
		}

		[Token(Token = "0x60011CC")]
		[Address(RVA = "0xF9AA30", Offset = "0xF9AA30", VA = "0xF9AA30")]
		private void OnReverseStreamDelayChanged(string newReverseStreamString)
		{
		}

		[Token(Token = "0x60011CD")]
		[Address(RVA = "0xF9AABC", Offset = "0xF9AABC", VA = "0xF9AABC")]
		private void UpdateSyncedNickname(string nickname)
		{
		}

		[Token(Token = "0x60011CE")]
		[Address(RVA = "0xF9AB64", Offset = "0xF9AB64", VA = "0xF9AB64")]
		private void JoinOrCreateRoom(string roomName)
		{
		}

		[Token(Token = "0x60011CF")]
		[Address(RVA = "0xF9AC80", Offset = "0xF9AC80", VA = "0xF9AC80", Slot = "19")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x60011D0")]
		[Address(RVA = "0xF9B20C", Offset = "0xF9B20C", VA = "0xF9B20C")]
		private void SetTextColor(int textValue, Text text, int yellowThreshold, int redThreshold)
		{
		}

		[Token(Token = "0x60011D1")]
		[Address(RVA = "0xF9B1D4", Offset = "0xF9B1D4", VA = "0xF9B1D4")]
		private void ResetTextColor(Text text)
		{
		}

		[Token(Token = "0x60011D2")]
		[Address(RVA = "0xF990B0", Offset = "0xF990B0", VA = "0xF990B0")]
		private void InitUiCallbacks()
		{
		}

		[Token(Token = "0x60011D3")]
		[Address(RVA = "0xF996E4", Offset = "0xF996E4", VA = "0xF996E4")]
		private void InitUiValues()
		{
		}

		[Token(Token = "0x60011D4")]
		[Address(RVA = "0xF9B354", Offset = "0xF9B354", VA = "0xF9B354")]
		private void SetRoomDebugText()
		{
		}

		[Token(Token = "0x60011D5")]
		[Address(RVA = "0xF9B664", Offset = "0xF9B664", VA = "0xF9B664", Slot = "20")]
		protected virtual void OnActorPropertiesChanged(Photon.Realtime.Player targetPlayer, ExitGames.Client.Photon.Hashtable changedProps)
		{
		}

		[Token(Token = "0x60011D6")]
		[Address(RVA = "0xF9B6D8", Offset = "0xF9B6D8", VA = "0xF9B6D8", Slot = "4")]
		private void Photon.Realtime.IInRoomCallbacks.OnPlayerEnteredRoom(Photon.Realtime.Player newPlayer)
		{
		}

		[Token(Token = "0x60011D7")]
		[Address(RVA = "0xF9B6DC", Offset = "0xF9B6DC", VA = "0xF9B6DC", Slot = "5")]
		private void Photon.Realtime.IInRoomCallbacks.OnPlayerLeftRoom(Photon.Realtime.Player otherPlayer)
		{
		}

		[Token(Token = "0x60011D8")]
		[Address(RVA = "0xF9B6E0", Offset = "0xF9B6E0", VA = "0xF9B6E0", Slot = "6")]
		private void Photon.Realtime.IInRoomCallbacks.OnRoomPropertiesUpdate(ExitGames.Client.Photon.Hashtable propertiesThatChanged)
		{
		}

		[Token(Token = "0x60011D9")]
		[Address(RVA = "0xF9B6E4", Offset = "0xF9B6E4", VA = "0xF9B6E4", Slot = "7")]
		private void Photon.Realtime.IInRoomCallbacks.OnPlayerPropertiesUpdate(Photon.Realtime.Player targetPlayer, ExitGames.Client.Photon.Hashtable changedProps)
		{
		}

		[Token(Token = "0x60011DA")]
		[Address(RVA = "0xF9B6F4", Offset = "0xF9B6F4", VA = "0xF9B6F4", Slot = "8")]
		private void Photon.Realtime.IInRoomCallbacks.OnMasterClientSwitched(Photon.Realtime.Player newMasterClient)
		{
		}

		[Token(Token = "0x60011DB")]
		[Address(RVA = "0xF9B6F8", Offset = "0xF9B6F8", VA = "0xF9B6F8", Slot = "9")]
		private void Photon.Realtime.IMatchmakingCallbacks.OnFriendListUpdate(List<Photon.Realtime.FriendInfo> friendList)
		{
		}

		[Token(Token = "0x60011DC")]
		[Address(RVA = "0xF9B6FC", Offset = "0xF9B6FC", VA = "0xF9B6FC", Slot = "10")]
		private void Photon.Realtime.IMatchmakingCallbacks.OnCreatedRoom()
		{
		}

		[Token(Token = "0x60011DD")]
		[Address(RVA = "0xF9B700", Offset = "0xF9B700", VA = "0xF9B700", Slot = "11")]
		private void Photon.Realtime.IMatchmakingCallbacks.OnCreateRoomFailed(short returnCode, string message)
		{
		}

		[Token(Token = "0x60011DE")]
		[Address(RVA = "0xF9B704", Offset = "0xF9B704", VA = "0xF9B704", Slot = "12")]
		private void Photon.Realtime.IMatchmakingCallbacks.OnJoinedRoom()
		{
		}

		[Token(Token = "0x60011DF")]
		[Address(RVA = "0xF9B708", Offset = "0xF9B708", VA = "0xF9B708", Slot = "13")]
		private void Photon.Realtime.IMatchmakingCallbacks.OnJoinRoomFailed(short returnCode, string message)
		{
		}

		[Token(Token = "0x60011E0")]
		[Address(RVA = "0xF9B70C", Offset = "0xF9B70C", VA = "0xF9B70C", Slot = "14")]
		private void Photon.Realtime.IMatchmakingCallbacks.OnJoinRandomFailed(short returnCode, string message)
		{
		}

		[Token(Token = "0x60011E1")]
		[Address(RVA = "0xF9B710", Offset = "0xF9B710", VA = "0xF9B710", Slot = "15")]
		private void Photon.Realtime.IMatchmakingCallbacks.OnLeftRoom()
		{
		}

		[Token(Token = "0x60011E2")]
		[Address(RVA = "0xF9B784", Offset = "0xF9B784", VA = "0xF9B784")]
		public DemoVoiceUI()
		{
		}
	}
	[Token(Token = "0x2000284")]
	public struct MicRef
	{
		[Token(Token = "0x4000E9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Recorder.MicType MicType;

		[Token(Token = "0x4000E9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string Name;

		[Token(Token = "0x4000E9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int PhotonId;

		[Token(Token = "0x4000E9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string PhotonIdString;

		[Token(Token = "0x60011E6")]
		[Address(RVA = "0xF9B8C8", Offset = "0xF9B8C8", VA = "0xF9B8C8")]
		public MicRef(string name, int id)
		{
		}

		[Token(Token = "0x60011E7")]
		[Address(RVA = "0xF9B938", Offset = "0xF9B938", VA = "0xF9B938")]
		public MicRef(string name, string id)
		{
		}

		[Token(Token = "0x60011E8")]
		[Address(RVA = "0xF9B954", Offset = "0xF9B954", VA = "0xF9B954")]
		public MicRef(string name)
		{
		}

		[Token(Token = "0x60011E9")]
		[Address(RVA = "0xF9B9C0", Offset = "0xF9B9C0", VA = "0xF9B9C0", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x2000285")]
	public class MicrophoneDropdownFiller : MonoBehaviour
	{
		[Token(Token = "0x4000E9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<MicRef> micOptions;

		[Token(Token = "0x4000EA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Dropdown micDropdown;

		[Token(Token = "0x4000EA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Recorder recorder;

		[Token(Token = "0x4000EA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[FormerlySerializedAs("RefreshButton")]
		[SerializeField]
		private GameObject refreshButton;

		[Token(Token = "0x4000EA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[FormerlySerializedAs("ToggleButton")]
		[SerializeField]
		private GameObject toggleButton;

		[Token(Token = "0x4000EA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Toggle photonToggle;

		[Token(Token = "0x60011EA")]
		[Address(RVA = "0xF9BA0C", Offset = "0xF9BA0C", VA = "0xF9BA0C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60011EB")]
		[Address(RVA = "0xF9BA88", Offset = "0xF9BA88", VA = "0xF9BA88")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60011EC")]
		[Address(RVA = "0xF9BB08", Offset = "0xF9BB08", VA = "0xF9BB08")]
		private void OnMicrophonePermissionCallback(bool granted)
		{
		}

		[Token(Token = "0x60011ED")]
		[Address(RVA = "0xF9BB20", Offset = "0xF9BB20", VA = "0xF9BB20")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60011EE")]
		[Address(RVA = "0xF9BBA0", Offset = "0xF9BBA0", VA = "0xF9BBA0")]
		private void SetupMicDropdown()
		{
		}

		[Token(Token = "0x60011EF")]
		[Address(RVA = "0xF9BEDC", Offset = "0xF9BEDC", VA = "0xF9BEDC")]
		private void MicDropdownValueChanged(MicRef mic)
		{
		}

		[Token(Token = "0x60011F0")]
		[Address(RVA = "0xF9BF70", Offset = "0xF9BF70", VA = "0xF9BF70")]
		private void SetCurrentValue()
		{
		}

		[Token(Token = "0x60011F1")]
		[Address(RVA = "0xF9C30C", Offset = "0xF9C30C", VA = "0xF9C30C")]
		public void PhotonMicToggled(bool on)
		{
		}

		[Token(Token = "0x60011F2")]
		[Address(RVA = "0xF9BA70", Offset = "0xF9BA70", VA = "0xF9BA70")]
		public void RefreshMicrophones()
		{
		}

		[Token(Token = "0x60011F3")]
		[Address(RVA = "0xF9C3A0", Offset = "0xF9C3A0", VA = "0xF9C3A0")]
		private void PhotonVoiceCreated()
		{
		}

		[Token(Token = "0x60011F4")]
		[Address(RVA = "0xF9C3B8", Offset = "0xF9C3B8", VA = "0xF9C3B8")]
		public MicrophoneDropdownFiller()
		{
		}
	}
	[Token(Token = "0x2000286")]
	public static class PhotonDemoExtensions
	{
		[Token(Token = "0x4000EA5")]
		internal const string IS_MUTED_PROPERTY_KEY = "mute";

		[Token(Token = "0x60011F6")]
		[Address(RVA = "0xF99FC8", Offset = "0xF99FC8", VA = "0xF99FC8")]
		public static bool Mute(this Photon.Realtime.Player player)
		{
			return default(bool);
		}

		[Token(Token = "0x60011F7")]
		[Address(RVA = "0xF9A0BC", Offset = "0xF9A0BC", VA = "0xF9A0BC")]
		public static bool Unmute(this Photon.Realtime.Player player)
		{
			return default(bool);
		}

		[Token(Token = "0x60011F8")]
		[Address(RVA = "0xF9B288", Offset = "0xF9B288", VA = "0xF9B288")]
		public static bool IsMuted(this Photon.Realtime.Player player)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000287")]
	[RequireComponent(typeof(Speaker))]
	public class RemoteSpeakerUI : MonoBehaviour, IInRoomCallbacks
	{
		[Token(Token = "0x4000EA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Text nameText;

		[Token(Token = "0x4000EA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		protected Image remoteIsMuting;

		[Token(Token = "0x4000EA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Image remoteIsTalking;

		[Token(Token = "0x4000EA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private InputField minDelaySoftInputField;

		[Token(Token = "0x4000EAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private InputField maxDelaySoftInputField;

		[Token(Token = "0x4000EAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private InputField maxDelayHardInputField;

		[Token(Token = "0x4000EAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Text bufferLagText;

		[Token(Token = "0x4000EAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected Speaker speaker;

		[Token(Token = "0x4000EAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected VoiceConnection voiceConnection;

		[Token(Token = "0x4000EAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		protected LoadBalancingClient loadBalancingClient;

		[Token(Token = "0x60011F9")]
		[Address(RVA = "0xF9C440", Offset = "0xF9C440", VA = "0xF9C440", Slot = "9")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x60011FA")]
		[Address(RVA = "0xF9C74C", Offset = "0xF9C74C", VA = "0xF9C74C")]
		private void OnMinDelaySoftChanged(string newMinDelaySoftString)
		{
		}

		[Token(Token = "0x60011FB")]
		[Address(RVA = "0xF9C81C", Offset = "0xF9C81C", VA = "0xF9C81C")]
		private void OnMaxDelaySoftChanged(string newMaxDelaySoftString)
		{
		}

		[Token(Token = "0x60011FC")]
		[Address(RVA = "0xF9C8E8", Offset = "0xF9C8E8", VA = "0xF9C8E8")]
		private void OnMaxDelayHardChanged(string newMaxDelayHardString)
		{
		}

		[Token(Token = "0x60011FD")]
		[Address(RVA = "0xF9C9B4", Offset = "0xF9C9B4", VA = "0xF9C9B4")]
		private void Update()
		{
		}

		[Token(Token = "0x60011FE")]
		[Address(RVA = "0xF9CA94", Offset = "0xF9CA94", VA = "0xF9CA94")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60011FF")]
		[Address(RVA = "0xF9C634", Offset = "0xF9C634", VA = "0xF9C634")]
		private void SetNickname()
		{
		}

		[Token(Token = "0x6001200")]
		[Address(RVA = "0xF9C718", Offset = "0xF9C718", VA = "0xF9C718")]
		private void SetMutedState()
		{
		}

		[Token(Token = "0x6001201")]
		[Address(RVA = "0xF9CAAC", Offset = "0xF9CAAC", VA = "0xF9CAAC", Slot = "10")]
		protected virtual void SetMutedState(bool isMuted)
		{
		}

		[Token(Token = "0x6001202")]
		[Address(RVA = "0xF9CACC", Offset = "0xF9CACC", VA = "0xF9CACC", Slot = "11")]
		protected virtual void OnActorPropertiesChanged(Photon.Realtime.Player targetPlayer, ExitGames.Client.Photon.Hashtable changedProps)
		{
		}

		[Token(Token = "0x6001203")]
		[Address(RVA = "0xF9CB18", Offset = "0xF9CB18", VA = "0xF9CB18", Slot = "12")]
		public virtual void Init(VoiceConnection vC)
		{
		}

		[Token(Token = "0x6001204")]
		[Address(RVA = "0xF9CB50", Offset = "0xF9CB50", VA = "0xF9CB50", Slot = "4")]
		private void Photon.Realtime.IInRoomCallbacks.OnPlayerEnteredRoom(Photon.Realtime.Player newPlayer)
		{
		}

		[Token(Token = "0x6001205")]
		[Address(RVA = "0xF9CB54", Offset = "0xF9CB54", VA = "0xF9CB54", Slot = "5")]
		private void Photon.Realtime.IInRoomCallbacks.OnPlayerLeftRoom(Photon.Realtime.Player otherPlayer)
		{
		}

		[Token(Token = "0x6001206")]
		[Address(RVA = "0xF9CB58", Offset = "0xF9CB58", VA = "0xF9CB58", Slot = "6")]
		private void Photon.Realtime.IInRoomCallbacks.OnRoomPropertiesUpdate(ExitGames.Client.Photon.Hashtable propertiesThatChanged)
		{
		}

		[Token(Token = "0x6001207")]
		[Address(RVA = "0xF9CB5C", Offset = "0xF9CB5C", VA = "0xF9CB5C", Slot = "7")]
		private void Photon.Realtime.IInRoomCallbacks.OnPlayerPropertiesUpdate(Photon.Realtime.Player targetPlayer, ExitGames.Client.Photon.Hashtable changedProps)
		{
		}

		[Token(Token = "0x6001208")]
		[Address(RVA = "0xF9CB68", Offset = "0xF9CB68", VA = "0xF9CB68", Slot = "8")]
		private void Photon.Realtime.IInRoomCallbacks.OnMasterClientSwitched(Photon.Realtime.Player newMasterClient)
		{
		}

		[Token(Token = "0x6001209")]
		[Address(RVA = "0xF9CB6C", Offset = "0xF9CB6C", VA = "0xF9CB6C")]
		public RemoteSpeakerUI()
		{
		}
	}
}
namespace Photon.Realtime.Demo
{
	[Token(Token = "0x2000288")]
	public class ConnectAndJoinRandomLb : MonoBehaviour, IConnectionCallbacks, IMatchmakingCallbacks, ILobbyCallbacks
	{
		[Token(Token = "0x4000EB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AppSettings appSettings;

		[Token(Token = "0x4000EB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private LoadBalancingClient lbc;

		[Token(Token = "0x4000EB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private ConnectionHandler ch;

		[Token(Token = "0x4000EB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Text StateUiText;

		[Token(Token = "0x600120A")]
		[Address(RVA = "0xF9CB74", Offset = "0xF9CB74", VA = "0xF9CB74")]
		public void Start()
		{
		}

		[Token(Token = "0x600120B")]
		[Address(RVA = "0xF9CCD4", Offset = "0xF9CCD4", VA = "0xF9CCD4")]
		public void Update()
		{
		}

		[Token(Token = "0x600120C")]
		[Address(RVA = "0xF9CE08", Offset = "0xF9CE08", VA = "0xF9CE08", Slot = "4")]
		public void OnConnected()
		{
		}

		[Token(Token = "0x600120D")]
		[Address(RVA = "0xF9CE0C", Offset = "0xF9CE0C", VA = "0xF9CE0C", Slot = "5")]
		public void OnConnectedToMaster()
		{
		}

		[Token(Token = "0x600120E")]
		[Address(RVA = "0xF9CE90", Offset = "0xF9CE90", VA = "0xF9CE90", Slot = "6")]
		public void OnDisconnected(DisconnectCause cause)
		{
		}

		[Token(Token = "0x600120F")]
		[Address(RVA = "0xF9CF7C", Offset = "0xF9CF7C", VA = "0xF9CF7C", Slot = "8")]
		public void OnCustomAuthenticationResponse(Dictionary<string, object> data)
		{
		}

		[Token(Token = "0x6001210")]
		[Address(RVA = "0xF9CF80", Offset = "0xF9CF80", VA = "0xF9CF80", Slot = "9")]
		public void OnCustomAuthenticationFailed(string debugMessage)
		{
		}

		[Token(Token = "0x6001211")]
		[Address(RVA = "0xF9CF84", Offset = "0xF9CF84", VA = "0xF9CF84", Slot = "7")]
		public void OnRegionListReceived(RegionHandler regionHandler)
		{
		}

		[Token(Token = "0x6001212")]
		[Address(RVA = "0xF9D060", Offset = "0xF9D060", VA = "0xF9D060", Slot = "19")]
		public void OnRoomListUpdate(List<RoomInfo> roomList)
		{
		}

		[Token(Token = "0x6001213")]
		[Address(RVA = "0xF9D064", Offset = "0xF9D064", VA = "0xF9D064", Slot = "20")]
		public void OnLobbyStatisticsUpdate(List<TypedLobbyInfo> lobbyStatistics)
		{
		}

		[Token(Token = "0x6001214")]
		[Address(RVA = "0xF9D068", Offset = "0xF9D068", VA = "0xF9D068", Slot = "17")]
		public void OnJoinedLobby()
		{
		}

		[Token(Token = "0x6001215")]
		[Address(RVA = "0xF9D06C", Offset = "0xF9D06C", VA = "0xF9D06C", Slot = "18")]
		public void OnLeftLobby()
		{
		}

		[Token(Token = "0x6001216")]
		[Address(RVA = "0xF9D070", Offset = "0xF9D070", VA = "0xF9D070", Slot = "10")]
		public void OnFriendListUpdate(List<FriendInfo> friendList)
		{
		}

		[Token(Token = "0x6001217")]
		[Address(RVA = "0xF9D074", Offset = "0xF9D074", VA = "0xF9D074", Slot = "11")]
		public void OnCreatedRoom()
		{
		}

		[Token(Token = "0x6001218")]
		[Address(RVA = "0xF9D078", Offset = "0xF9D078", VA = "0xF9D078", Slot = "12")]
		public void OnCreateRoomFailed(short returnCode, string message)
		{
		}

		[Token(Token = "0x6001219")]
		[Address(RVA = "0xF9D07C", Offset = "0xF9D07C", VA = "0xF9D07C", Slot = "13")]
		public void OnJoinedRoom()
		{
		}

		[Token(Token = "0x600121A")]
		[Address(RVA = "0xF9D0E4", Offset = "0xF9D0E4", VA = "0xF9D0E4", Slot = "14")]
		public void OnJoinRoomFailed(short returnCode, string message)
		{
		}

		[Token(Token = "0x600121B")]
		[Address(RVA = "0xF9D0E8", Offset = "0xF9D0E8", VA = "0xF9D0E8", Slot = "15")]
		public void OnJoinRandomFailed(short returnCode, string message)
		{
		}

		[Token(Token = "0x600121C")]
		[Address(RVA = "0xF9D19C", Offset = "0xF9D19C", VA = "0xF9D19C", Slot = "16")]
		public void OnLeftRoom()
		{
		}

		[Token(Token = "0x600121D")]
		[Address(RVA = "0xF9D1A0", Offset = "0xF9D1A0", VA = "0xF9D1A0")]
		private void OnRegionPingCompleted(RegionHandler regionHandler)
		{
		}

		[Token(Token = "0x600121E")]
		[Address(RVA = "0xF9D2C4", Offset = "0xF9D2C4", VA = "0xF9D2C4")]
		public ConnectAndJoinRandomLb()
		{
		}
	}
}
namespace Photon.Chat.Demo
{
	[Token(Token = "0x2000289")]
	public static class AppSettingsExtensions
	{
		[Token(Token = "0x600121F")]
		[Address(RVA = "0xF9D32C", Offset = "0xF9D32C", VA = "0xF9D32C")]
		public static ChatAppSettings GetChatSettings(this AppSettings appSettings)
		{
			return null;
		}
	}
	[Token(Token = "0x200028A")]
	public class ChannelSelector : MonoBehaviour, IPointerClickHandler, IEventSystemHandler
	{
		[Token(Token = "0x4000EB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string Channel;

		[Token(Token = "0x6001220")]
		[Address(RVA = "0xF9D3F8", Offset = "0xF9D3F8", VA = "0xF9D3F8")]
		public void SetChannel(string channel)
		{
		}

		[Token(Token = "0x6001221")]
		[Address(RVA = "0xF9D46C", Offset = "0xF9D46C", VA = "0xF9D46C", Slot = "4")]
		public void OnPointerClick(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001222")]
		[Address(RVA = "0xF9D76C", Offset = "0xF9D76C", VA = "0xF9D76C")]
		public ChannelSelector()
		{
		}
	}
	[Token(Token = "0x200028B")]
	[ExecuteInEditMode]
	public class ChatAppIdCheckerUI : MonoBehaviour
	{
		[Token(Token = "0x4000EB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Text Description;

		[Token(Token = "0x6001223")]
		[Address(RVA = "0xF9D774", Offset = "0xF9D774", VA = "0xF9D774")]
		public void Update()
		{
		}

		[Token(Token = "0x6001224")]
		[Address(RVA = "0xF9D8A4", Offset = "0xF9D8A4", VA = "0xF9D8A4")]
		public ChatAppIdCheckerUI()
		{
		}
	}
	[Token(Token = "0x200028C")]
	public class ChatGui : MonoBehaviour, IChatClientListener
	{
		[Token(Token = "0x4000EB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string[] ChannelsToJoinOnConnect;

		[Token(Token = "0x4000EB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string[] FriendsList;

		[Token(Token = "0x4000EB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int HistoryLengthToFetch;

		[Token(Token = "0x4000EBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string selectedChannelName;

		[Token(Token = "0x4000EBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public ChatClient chatClient;

		[Token(Token = "0x4000EBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected internal ChatAppSettings chatAppSettings;

		[Token(Token = "0x4000EBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public GameObject missingAppIdErrorPanel;

		[Token(Token = "0x4000EBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public GameObject ConnectingLabel;

		[Token(Token = "0x4000EBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public RectTransform ChatPanel;

		[Token(Token = "0x4000EC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public GameObject UserIdFormPanel;

		[Token(Token = "0x4000EC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public InputField InputFieldChat;

		[Token(Token = "0x4000EC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Text CurrentChannelText;

		[Token(Token = "0x4000EC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Toggle ChannelToggleToInstantiate;

		[Token(Token = "0x4000EC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public GameObject FriendListUiItemtoInstantiate;

		[Token(Token = "0x4000EC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private readonly Dictionary<string, Toggle> channelToggles;

		[Token(Token = "0x4000EC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private readonly Dictionary<string, FriendItem> friendListItemLUT;

		[Token(Token = "0x4000EC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public bool ShowState;

		[Token(Token = "0x4000EC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public GameObject Title;

		[Token(Token = "0x4000EC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public Text StateText;

		[Token(Token = "0x4000ECA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public Text UserIdText;

		[Token(Token = "0x4000ECB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static string HelpText;

		[Token(Token = "0x4000ECC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public int TestLength;

		[Token(Token = "0x4000ECD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private byte[] testBytes;

		[Token(Token = "0x1700024C")]
		public string UserName
		{
			[Token(Token = "0x6001225")]
			[Address(RVA = "0xF9D8AC", Offset = "0xF9D8AC", VA = "0xF9D8AC")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001226")]
			[Address(RVA = "0xF9D8B4", Offset = "0xF9D8B4", VA = "0xF9D8B4")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6001227")]
		[Address(RVA = "0xF9D8BC", Offset = "0xF9D8BC", VA = "0xF9D8BC")]
		public void Start()
		{
		}

		[Token(Token = "0x6001228")]
		[Address(RVA = "0xF9DB5C", Offset = "0xF9DB5C", VA = "0xF9DB5C")]
		public void Connect()
		{
		}

		[Token(Token = "0x6001229")]
		[Address(RVA = "0xF9DCCC", Offset = "0xF9DCCC", VA = "0xF9DCCC")]
		public void OnDestroy()
		{
		}

		[Token(Token = "0x600122A")]
		[Address(RVA = "0xF9DCE4", Offset = "0xF9DCE4", VA = "0xF9DCE4")]
		public void OnApplicationQuit()
		{
		}

		[Token(Token = "0x600122B")]
		[Address(RVA = "0xF9DCFC", Offset = "0xF9DCFC", VA = "0xF9DCFC")]
		public void Update()
		{
		}

		[Token(Token = "0x600122C")]
		[Address(RVA = "0xF9DDCC", Offset = "0xF9DDCC", VA = "0xF9DDCC")]
		public void OnEnterSend()
		{
		}

		[Token(Token = "0x600122D")]
		[Address(RVA = "0xF9E8A4", Offset = "0xF9E8A4", VA = "0xF9E8A4")]
		public void OnClickSend()
		{
		}

		[Token(Token = "0x600122E")]
		[Address(RVA = "0xF9DE60", Offset = "0xF9DE60", VA = "0xF9DE60")]
		private void SendChatMessage(string inputLine)
		{
		}

		[Token(Token = "0x600122F")]
		[Address(RVA = "0xF9E954", Offset = "0xF9E954", VA = "0xF9E954")]
		public void PostHelpToCurrentChannel()
		{
		}

		[Token(Token = "0x6001230")]
		[Address(RVA = "0xF9E9F8", Offset = "0xF9E9F8", VA = "0xF9E9F8", Slot = "4")]
		public void DebugReturn(DebugLevel level, string message)
		{
		}

		[Token(Token = "0x6001231")]
		[Address(RVA = "0xF9EAA0", Offset = "0xF9EAA0", VA = "0xF9EAA0", Slot = "6")]
		public void OnConnected()
		{
		}

		[Token(Token = "0x6001232")]
		[Address(RVA = "0xF9EDCC", Offset = "0xF9EDCC", VA = "0xF9EDCC", Slot = "5")]
		public void OnDisconnected()
		{
		}

		[Token(Token = "0x6001233")]
		[Address(RVA = "0xF9EDEC", Offset = "0xF9EDEC", VA = "0xF9EDEC", Slot = "7")]
		public void OnChatStateChange(ChatState state)
		{
		}

		[Token(Token = "0x6001234")]
		[Address(RVA = "0xF9EE80", Offset = "0xF9EE80", VA = "0xF9EE80", Slot = "10")]
		public void OnSubscribed(string[] channels, bool[] results)
		{
		}

		[Token(Token = "0x6001235")]
		[Address(RVA = "0xF9F1D0", Offset = "0xF9F1D0", VA = "0xF9F1D0")]
		public void OnSubscribed(string channel, string[] users, Dictionary<object, object> properties)
		{
		}

		[Token(Token = "0x6001236")]
		[Address(RVA = "0xF9F014", Offset = "0xF9F014", VA = "0xF9F014")]
		private void InstantiateChannelButton(string channelName)
		{
		}

		[Token(Token = "0x6001237")]
		[Address(RVA = "0xF9EC84", Offset = "0xF9EC84", VA = "0xF9EC84")]
		private void InstantiateFriendButton(string friendId)
		{
		}

		[Token(Token = "0x6001238")]
		[Address(RVA = "0xF9F370", Offset = "0xF9F370", VA = "0xF9F370", Slot = "11")]
		public void OnUnsubscribed(string[] channels)
		{
		}

		[Token(Token = "0x6001239")]
		[Address(RVA = "0xF9F7B4", Offset = "0xF9F7B4", VA = "0xF9F7B4", Slot = "8")]
		public void OnGetMessages(string channelName, string[] senders, object[] messages)
		{
		}

		[Token(Token = "0x600123A")]
		[Address(RVA = "0xF9F7F4", Offset = "0xF9F7F4", VA = "0xF9F7F4", Slot = "9")]
		public void OnPrivateMessage(string sender, object message, string channelName)
		{
		}

		[Token(Token = "0x600123B")]
		[Address(RVA = "0xF9F908", Offset = "0xF9F908", VA = "0xF9F908", Slot = "12")]
		public void OnStatusUpdate(string user, int status, bool gotMessage, object message)
		{
		}

		[Token(Token = "0x600123C")]
		[Address(RVA = "0xF9FACC", Offset = "0xF9FACC", VA = "0xF9FACC", Slot = "13")]
		public void OnUserSubscribed(string channel, string user)
		{
		}

		[Token(Token = "0x600123D")]
		[Address(RVA = "0xF9FBD0", Offset = "0xF9FBD0", VA = "0xF9FBD0", Slot = "14")]
		public void OnUserUnsubscribed(string channel, string user)
		{
		}

		[Token(Token = "0x600123E")]
		[Address(RVA = "0xF9FCD4", Offset = "0xF9FCD4", VA = "0xF9FCD4")]
		public void OnChannelPropertiesChanged(string channel, string userId, Dictionary<object, object> properties)
		{
		}

		[Token(Token = "0x600123F")]
		[Address(RVA = "0xF9FE38", Offset = "0xF9FE38", VA = "0xF9FE38")]
		public void OnUserPropertiesChanged(string channel, string targetUserId, string senderUserId, Dictionary<object, object> properties)
		{
		}

		[Token(Token = "0x6001240")]
		[Address(RVA = "0xF9FFD0", Offset = "0xF9FFD0", VA = "0xF9FFD0")]
		public void OnErrorInfo(string channel, string error, object data)
		{
		}

		[Token(Token = "0x6001241")]
		[Address(RVA = "0xFA0100", Offset = "0xFA0100", VA = "0xFA0100")]
		public void AddMessageToSelectedChannel(string msg)
		{
		}

		[Token(Token = "0x6001242")]
		[Address(RVA = "0xF9D4E4", Offset = "0xF9D4E4", VA = "0xF9D4E4")]
		public void ShowChannel(string channelName)
		{
		}

		[Token(Token = "0x6001243")]
		[Address(RVA = "0xFA01EC", Offset = "0xFA01EC", VA = "0xFA01EC")]
		public void OpenDashboard()
		{
		}

		[Token(Token = "0x6001244")]
		[Address(RVA = "0xFA0230", Offset = "0xFA0230", VA = "0xFA0230")]
		public ChatGui()
		{
		}
	}
	[Token(Token = "0x200028D")]
	public class FriendItem : MonoBehaviour
	{
		[Token(Token = "0x4000ECE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Text NameLabel;

		[Token(Token = "0x4000ECF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Text StatusLabel;

		[Token(Token = "0x4000ED0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Text Health;

		[Token(Token = "0x1700024D")]
		[HideInInspector]
		public string FriendId
		{
			[Token(Token = "0x6001247")]
			[Address(RVA = "0xE31FF8", Offset = "0xE31FF8", VA = "0xE31FF8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001246")]
			[Address(RVA = "0xE31FD4", Offset = "0xE31FD4", VA = "0xE31FD4")]
			set
			{
			}
		}

		[Token(Token = "0x6001248")]
		[Address(RVA = "0xE3201C", Offset = "0xE3201C", VA = "0xE3201C")]
		public void Awake()
		{
		}

		[Token(Token = "0x6001249")]
		[Address(RVA = "0xE32080", Offset = "0xE32080", VA = "0xE32080")]
		public void OnFriendStatusUpdate(int status, bool gotMessage, object message)
		{
		}

		[Token(Token = "0x600124A")]
		[Address(RVA = "0xE32200", Offset = "0xE32200", VA = "0xE32200")]
		public FriendItem()
		{
		}
	}
	[Token(Token = "0x200028E")]
	public class IgnoreUiRaycastWhenInactive : MonoBehaviour, ICanvasRaycastFilter
	{
		[Token(Token = "0x600124B")]
		[Address(RVA = "0xE32208", Offset = "0xE32208", VA = "0xE32208", Slot = "4")]
		public bool IsRaycastLocationValid(Vector2 screenPoint, Camera eventCamera)
		{
			return default(bool);
		}

		[Token(Token = "0x600124C")]
		[Address(RVA = "0xE32228", Offset = "0xE32228", VA = "0xE32228")]
		public IgnoreUiRaycastWhenInactive()
		{
		}
	}
	[Token(Token = "0x200028F")]
	[RequireComponent(typeof(ChatGui))]
	public class NamePickGui : MonoBehaviour
	{
		[Token(Token = "0x4000ED1")]
		private const string UserNamePlayerPref = "NamePickUserName";

		[Token(Token = "0x4000ED2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ChatGui chatNewComponent;

		[Token(Token = "0x4000ED3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public InputField idInput;

		[Token(Token = "0x600124D")]
		[Address(RVA = "0xE32230", Offset = "0xE32230", VA = "0xE32230")]
		public void Start()
		{
		}

		[Token(Token = "0x600124E")]
		[Address(RVA = "0xE322F0", Offset = "0xE322F0", VA = "0xE322F0")]
		public void EndEditOnEnter()
		{
		}

		[Token(Token = "0x600124F")]
		[Address(RVA = "0xE3232C", Offset = "0xE3232C", VA = "0xE3232C")]
		public void StartChat()
		{
		}

		[Token(Token = "0x6001250")]
		[Address(RVA = "0xE323FC", Offset = "0xE323FC", VA = "0xE323FC")]
		public NamePickGui()
		{
		}
	}
}
namespace Photon.Chat.UtilityScripts
{
	[Token(Token = "0x2000290")]
	public class EventSystemSpawner : MonoBehaviour
	{
		[Token(Token = "0x6001251")]
		[Address(RVA = "0xE32404", Offset = "0xE32404", VA = "0xE32404")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001252")]
		[Address(RVA = "0xE32474", Offset = "0xE32474", VA = "0xE32474")]
		public EventSystemSpawner()
		{
		}
	}
	[Token(Token = "0x2000291")]
	public class OnStartDelete : MonoBehaviour
	{
		[Token(Token = "0x6001253")]
		[Address(RVA = "0xE3247C", Offset = "0xE3247C", VA = "0xE3247C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001254")]
		[Address(RVA = "0xE324E8", Offset = "0xE324E8", VA = "0xE324E8")]
		public OnStartDelete()
		{
		}
	}
	[Token(Token = "0x2000292")]
	[RequireComponent(typeof(Text))]
	public class TextButtonTransition : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
	{
		[Token(Token = "0x4000ED4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Text _text;

		[Token(Token = "0x4000ED5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UnityEngine.UI.Selectable Selectable;

		[Token(Token = "0x4000ED6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Color NormalColor;

		[Token(Token = "0x4000ED7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Color HoverColor;

		[Token(Token = "0x6001255")]
		[Address(RVA = "0xE324F0", Offset = "0xE324F0", VA = "0xE324F0")]
		public void Awake()
		{
		}

		[Token(Token = "0x6001256")]
		[Address(RVA = "0xE32540", Offset = "0xE32540", VA = "0xE32540")]
		public void OnEnable()
		{
		}

		[Token(Token = "0x6001257")]
		[Address(RVA = "0xE32570", Offset = "0xE32570", VA = "0xE32570")]
		public void OnDisable()
		{
		}

		[Token(Token = "0x6001258")]
		[Address(RVA = "0xE325A0", Offset = "0xE325A0", VA = "0xE325A0", Slot = "4")]
		public void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001259")]
		[Address(RVA = "0xE32650", Offset = "0xE32650", VA = "0xE32650", Slot = "5")]
		public void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x600125A")]
		[Address(RVA = "0xE32700", Offset = "0xE32700", VA = "0xE32700")]
		public TextButtonTransition()
		{
		}
	}
	[Token(Token = "0x2000293")]
	[RequireComponent(typeof(Text))]
	public class TextToggleIsOnTransition : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
	{
		[Token(Token = "0x4000ED8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle toggle;

		[Token(Token = "0x4000ED9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Text _text;

		[Token(Token = "0x4000EDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Color NormalOnColor;

		[Token(Token = "0x4000EDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Color NormalOffColor;

		[Token(Token = "0x4000EDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Color HoverOnColor;

		[Token(Token = "0x4000EDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Color HoverOffColor;

		[Token(Token = "0x4000EDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool isHover;

		[Token(Token = "0x600125B")]
		[Address(RVA = "0xE3271C", Offset = "0xE3271C", VA = "0xE3271C")]
		public void OnEnable()
		{
		}

		[Token(Token = "0x600125C")]
		[Address(RVA = "0xE32860", Offset = "0xE32860", VA = "0xE32860")]
		public void OnDisable()
		{
		}

		[Token(Token = "0x600125D")]
		[Address(RVA = "0xE327FC", Offset = "0xE327FC", VA = "0xE327FC")]
		public void OnValueChanged(bool isOn)
		{
		}

		[Token(Token = "0x600125E")]
		[Address(RVA = "0xE32908", Offset = "0xE32908", VA = "0xE32908", Slot = "4")]
		public void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x600125F")]
		[Address(RVA = "0xE3297C", Offset = "0xE3297C", VA = "0xE3297C", Slot = "5")]
		public void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001260")]
		[Address(RVA = "0xE329EC", Offset = "0xE329EC", VA = "0xE329EC")]
		public TextToggleIsOnTransition()
		{
		}
	}
}
namespace Weightless.FruityFeet
{
	[Token(Token = "0x2000294")]
	public class FreeCam : MonoBehaviour
	{
		[Token(Token = "0x4000EDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float mainSpeed;

		[Token(Token = "0x4000EE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float shiftAdd;

		[Token(Token = "0x4000EE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float maxShift;

		[Token(Token = "0x4000EE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float camSens;

		[Token(Token = "0x4000EE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 lastMouse;

		[Token(Token = "0x4000EE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float totalRun;

		[Token(Token = "0x4000EE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float UI_Width;

		[Token(Token = "0x4000EE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameObject mouseObject;

		[Token(Token = "0x4000EE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float hd;

		[Token(Token = "0x1700024E")]
		private bool anyButtonDown
		{
			[Token(Token = "0x6001263")]
			[Address(RVA = "0xE32FA0", Offset = "0xE32FA0", VA = "0xE32FA0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700024F")]
		private bool anyButton
		{
			[Token(Token = "0x6001264")]
			[Address(RVA = "0xE32FE0", Offset = "0xE32FE0", VA = "0xE32FE0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001261")]
		[Address(RVA = "0xE32A10", Offset = "0xE32A10", VA = "0xE32A10")]
		private void Update()
		{
		}

		[Token(Token = "0x6001262")]
		[Address(RVA = "0xE32D88", Offset = "0xE32D88", VA = "0xE32D88")]
		private void HandSim()
		{
		}

		[Token(Token = "0x6001265")]
		[Address(RVA = "0xE32C9C", Offset = "0xE32C9C", VA = "0xE32C9C")]
		private Vector3 GetBaseInput()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001266")]
		[Address(RVA = "0xE33020", Offset = "0xE33020", VA = "0xE33020")]
		public FreeCam()
		{
		}
	}
	[Token(Token = "0x2000295")]
	public class WASDController : MonoBehaviour
	{
		[Token(Token = "0x4000EE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float moveSpeed;

		[Token(Token = "0x4000EE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float lookSpeed;

		[Token(Token = "0x4000EEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Vector2 lastMouse;

		[Token(Token = "0x6001267")]
		[Address(RVA = "0xE33050", Offset = "0xE33050", VA = "0xE33050")]
		private void Update()
		{
		}

		[Token(Token = "0x6001268")]
		[Address(RVA = "0xE33318", Offset = "0xE33318", VA = "0xE33318")]
		private Vector3 GetBaseInput()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001269")]
		[Address(RVA = "0xE33558", Offset = "0xE33558", VA = "0xE33558")]
		public WASDController()
		{
		}
	}
}
namespace LIV.SDK.Unity
{
	[Token(Token = "0x2000296")]
	[Flags]
	public enum INVALIDATION_FLAGS : uint
	{
		[Token(Token = "0x4000EEC")]
		NONE = 0u,
		[Token(Token = "0x4000EED")]
		HMD_CAMERA = 1u,
		[Token(Token = "0x4000EEE")]
		STAGE = 2u,
		[Token(Token = "0x4000EEF")]
		MR_CAMERA_PREFAB = 4u,
		[Token(Token = "0x4000EF0")]
		EXCLUDE_BEHAVIOURS = 8u
	}
	[Token(Token = "0x2000297")]
	[HelpURL("https://liv.tv/sdk-unity-docs")]
	[AddComponentMenu("LIV/LIV")]
	public class LIV : MonoBehaviour
	{
		[Token(Token = "0x2000298")]
		[CompilerGenerated]
		private sealed class <WaitForUnityEndOfFrame>d__68 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000F0B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000F0C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000F0D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public LIV <>4__this;

			[Token(Token = "0x1700025F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001294")]
				[Address(RVA = "0xE34A70", Offset = "0xE34A70", VA = "0xE34A70", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000260")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001296")]
				[Address(RVA = "0xE34AB8", Offset = "0xE34AB8", VA = "0xE34AB8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001291")]
			[Address(RVA = "0xE33EB0", Offset = "0xE33EB0", VA = "0xE33EB0")]
			[DebuggerHidden]
			public <WaitForUnityEndOfFrame>d__68(int <>1__state)
			{
			}

			[Token(Token = "0x6001292")]
			[Address(RVA = "0xE348D8", Offset = "0xE348D8", VA = "0xE348D8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001293")]
			[Address(RVA = "0xE348DC", Offset = "0xE348DC", VA = "0xE348DC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001295")]
			[Address(RVA = "0xE34A78", Offset = "0xE34A78", VA = "0xE34A78", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000EF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Action onActivate;

		[Token(Token = "0x4000EF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Action<SDKRender> onPreRender;

		[Token(Token = "0x4000EF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action<SDKRender> onPreRenderBackground;

		[Token(Token = "0x4000EF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Action<SDKRender> onPostRenderBackground;

		[Token(Token = "0x4000EF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Action<SDKRender> onPreRenderForeground;

		[Token(Token = "0x4000EF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Action<SDKRender> onPostRenderForeground;

		[Token(Token = "0x4000EF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Action<SDKRender> onPostRender;

		[Token(Token = "0x4000EF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Action onDeactivate;

		[Token(Token = "0x4000EF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("This is the topmost transform of your VR rig.")]
		[FormerlySerializedAs("TrackedSpaceOrigin")]
		[SerializeField]
		private Transform _stage;

		[Token(Token = "0x4000EFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[Tooltip("This transform is an additional wrapper to the user’s playspace.")]
		[FormerlySerializedAs("StageTransform")]
		[SerializeField]
		private Transform _stageTransform;

		[Token(Token = "0x4000EFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[Tooltip("This is the camera responsible for rendering the user’s HMD.")]
		[FormerlySerializedAs("HMDCamera")]
		[SerializeField]
		private Camera _HMDCamera;

		[Token(Token = "0x4000EFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[Tooltip("Camera prefab for customized rendering.")]
		[FormerlySerializedAs("MRCameraPrefab")]
		[SerializeField]
		private Camera _MRCameraPrefab;

		[Token(Token = "0x4000EFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[Tooltip("This option disables all standard Unity assets for the Mixed Reality rendering.")]
		[FormerlySerializedAs("DisableStandardAssets")]
		[SerializeField]
		private bool _disableStandardAssets;

		[Token(Token = "0x4000EFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[SerializeField]
		[FormerlySerializedAs("SpectatorLayerMask")]
		[Tooltip("The layer mask defines exactly which object layers should be rendered in MR.")]
		private LayerMask _spectatorLayerMask;

		[Token(Token = "0x4000EFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[Tooltip("This is for removing unwanted scripts from the cloned MR camera.")]
		[FormerlySerializedAs("ExcludeBehaviours")]
		[SerializeField]
		private string[] _excludeBehaviours;

		[Token(Token = "0x4000F00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[Tooltip("Recovers corrupted alpha channel when using post-effects.")]
		[SerializeField]
		[FormerlySerializedAs("FixPostEffectsAlpha")]
		private bool _fixPostEffectsAlpha;

		[Token(Token = "0x4000F01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x89")]
		private bool _isActive;

		[Token(Token = "0x4000F02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private SDKRender _render;

		[Token(Token = "0x4000F03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private bool _wasReady;

		[Token(Token = "0x4000F04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private INVALIDATION_FLAGS _invalidate;

		[Token(Token = "0x4000F05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Transform _stageCandidate;

		[Token(Token = "0x4000F06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Camera _HMDCameraCandidate;

		[Token(Token = "0x4000F07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Camera _MRCameraPrefabCandidate;

		[Token(Token = "0x4000F08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private string[] _excludeBehavioursCandidate;

		[Token(Token = "0x4000F09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private bool _enabled;

		[Token(Token = "0x4000F0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private Coroutine _waitForEndOfFrameCoroutine;

		[Token(Token = "0x17000250")]
		public Transform stage
		{
			[Token(Token = "0x600126A")]
			[Address(RVA = "0xE3356C", Offset = "0xE3356C", VA = "0xE3356C")]
			get
			{
				return null;
			}
			[Token(Token = "0x600126B")]
			[Address(RVA = "0xE335FC", Offset = "0xE335FC", VA = "0xE335FC")]
			set
			{
			}
		}

		[Token(Token = "0x17000251")]
		[Obsolete("Use stage instead")]
		public Transform trackedSpaceOrigin
		{
			[Token(Token = "0x600126C")]
			[Address(RVA = "0xE336FC", Offset = "0xE336FC", VA = "0xE336FC")]
			get
			{
				return null;
			}
			[Token(Token = "0x600126D")]
			[Address(RVA = "0xE33700", Offset = "0xE33700", VA = "0xE33700")]
			set
			{
			}
		}

		[Token(Token = "0x17000252")]
		public Matrix4x4 stageLocalToWorldMatrix
		{
			[Token(Token = "0x600126E")]
			[Address(RVA = "0xE33704", Offset = "0xE33704", VA = "0xE33704")]
			get
			{
				return default(Matrix4x4);
			}
		}

		[Token(Token = "0x17000253")]
		public Matrix4x4 stageWorldToLocalMatrix
		{
			[Token(Token = "0x600126F")]
			[Address(RVA = "0xE337FC", Offset = "0xE337FC", VA = "0xE337FC")]
			get
			{
				return default(Matrix4x4);
			}
		}

		[Token(Token = "0x17000254")]
		public Transform stageTransform
		{
			[Token(Token = "0x6001270")]
			[Address(RVA = "0xE338F4", Offset = "0xE338F4", VA = "0xE338F4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001271")]
			[Address(RVA = "0xE338FC", Offset = "0xE338FC", VA = "0xE338FC")]
			set
			{
			}
		}

		[Token(Token = "0x17000255")]
		public Camera HMDCamera
		{
			[Token(Token = "0x6001272")]
			[Address(RVA = "0xE33904", Offset = "0xE33904", VA = "0xE33904")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001273")]
			[Address(RVA = "0xE3390C", Offset = "0xE3390C", VA = "0xE3390C")]
			set
			{
			}
		}

		[Token(Token = "0x17000256")]
		public Camera MRCameraPrefab
		{
			[Token(Token = "0x6001274")]
			[Address(RVA = "0xE339F8", Offset = "0xE339F8", VA = "0xE339F8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001275")]
			[Address(RVA = "0xE33A00", Offset = "0xE33A00", VA = "0xE33A00")]
			set
			{
			}
		}

		[Token(Token = "0x17000257")]
		public bool disableStandardAssets
		{
			[Token(Token = "0x6001276")]
			[Address(RVA = "0xE33A84", Offset = "0xE33A84", VA = "0xE33A84")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001277")]
			[Address(RVA = "0xE33A8C", Offset = "0xE33A8C", VA = "0xE33A8C")]
			set
			{
			}
		}

		[Token(Token = "0x17000258")]
		public LayerMask spectatorLayerMask
		{
			[Token(Token = "0x6001278")]
			[Address(RVA = "0xE33A98", Offset = "0xE33A98", VA = "0xE33A98")]
			get
			{
				return default(LayerMask);
			}
			[Token(Token = "0x6001279")]
			[Address(RVA = "0xE33AA0", Offset = "0xE33AA0", VA = "0xE33AA0")]
			set
			{
			}
		}

		[Token(Token = "0x17000259")]
		public string[] excludeBehaviours
		{
			[Token(Token = "0x600127A")]
			[Address(RVA = "0xE33AA8", Offset = "0xE33AA8", VA = "0xE33AA8")]
			get
			{
				return null;
			}
			[Token(Token = "0x600127B")]
			[Address(RVA = "0xE33AB0", Offset = "0xE33AB0", VA = "0xE33AB0")]
			set
			{
			}
		}

		[Token(Token = "0x1700025A")]
		public bool fixPostEffectsAlpha
		{
			[Token(Token = "0x600127C")]
			[Address(RVA = "0xE33AD0", Offset = "0xE33AD0", VA = "0xE33AD0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600127D")]
			[Address(RVA = "0xE33AD8", Offset = "0xE33AD8", VA = "0xE33AD8")]
			set
			{
			}
		}

		[Token(Token = "0x1700025B")]
		public bool isValid
		{
			[Token(Token = "0x600127E")]
			[Address(RVA = "0xE33AE4", Offset = "0xE33AE4", VA = "0xE33AE4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700025C")]
		public bool isActive
		{
			[Token(Token = "0x600127F")]
			[Address(RVA = "0xE33C44", Offset = "0xE33C44", VA = "0xE33C44")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700025D")]
		private bool _isReady
		{
			[Token(Token = "0x6001280")]
			[Address(RVA = "0xE33C4C", Offset = "0xE33C4C", VA = "0xE33C4C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700025E")]
		public SDKRender render
		{
			[Token(Token = "0x6001281")]
			[Address(RVA = "0xE33D58", Offset = "0xE33D58", VA = "0xE33D58")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001282")]
		[Address(RVA = "0xE33D60", Offset = "0xE33D60", VA = "0xE33D60")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001283")]
		[Address(RVA = "0xE33DB0", Offset = "0xE33DB0", VA = "0xE33DB0")]
		private void Update()
		{
		}

		[Token(Token = "0x6001284")]
		[Address(RVA = "0xE33E40", Offset = "0xE33E40", VA = "0xE33E40")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001285")]
		[Address(RVA = "0xE33E48", Offset = "0xE33E48", VA = "0xE33E48")]
		[IteratorStateMachine(typeof(<WaitForUnityEndOfFrame>d__68))]
		private IEnumerator WaitForUnityEndOfFrame()
		{
			return null;
		}

		[Token(Token = "0x6001286")]
		[Address(RVA = "0xE33D6C", Offset = "0xE33D6C", VA = "0xE33D6C")]
		private void UpdateSDKReady()
		{
		}

		[Token(Token = "0x6001287")]
		[Address(RVA = "0xE33ED8", Offset = "0xE33ED8", VA = "0xE33ED8")]
		private void OnSDKReadyChanged(bool value)
		{
		}

		[Token(Token = "0x6001288")]
		[Address(RVA = "0xE33EE4", Offset = "0xE33EE4", VA = "0xE33EE4")]
		private void OnSDKActivate()
		{
		}

		[Token(Token = "0x6001289")]
		[Address(RVA = "0xE33F90", Offset = "0xE33F90", VA = "0xE33F90")]
		private void OnSDKDeactivate()
		{
		}

		[Token(Token = "0x600128A")]
		[Address(RVA = "0xE34190", Offset = "0xE34190", VA = "0xE34190")]
		private void CreateAssets()
		{
		}

		[Token(Token = "0x600128B")]
		[Address(RVA = "0xE34268", Offset = "0xE34268", VA = "0xE34268")]
		private void DestroyAssets()
		{
		}

		[Token(Token = "0x600128C")]
		[Address(RVA = "0xE34200", Offset = "0xE34200", VA = "0xE34200")]
		private void StartRenderCoroutine()
		{
		}

		[Token(Token = "0x600128D")]
		[Address(RVA = "0xE34244", Offset = "0xE34244", VA = "0xE34244")]
		private void StopRenderCoroutine()
		{
		}

		[Token(Token = "0x600128E")]
		[Address(RVA = "0xE34044", Offset = "0xE34044", VA = "0xE34044")]
		private void SubmitSDKOutput()
		{
		}

		[Token(Token = "0x600128F")]
		[Address(RVA = "0xE33DC8", Offset = "0xE33DC8", VA = "0xE33DC8")]
		private void Invalidate()
		{
		}

		[Token(Token = "0x6001290")]
		[Address(RVA = "0xE34718", Offset = "0xE34718", VA = "0xE34718")]
		public LIV()
		{
		}
	}
	[Token(Token = "0x2000299")]
	public static class SDKBridge
	{
		[Token(Token = "0x200029A")]
		public struct SDKInjection<T>
		{
			[Token(Token = "0x4000F15")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool active;

			[Token(Token = "0x4000F16")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action action;

			[Token(Token = "0x4000F17")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T data;
		}

		[Token(Token = "0x4000F0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static SDKInjection<SDKInputFrame> _injection_SDKInputFrame;

		[Token(Token = "0x4000F0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		private static SDKInjection<SDKResolution> _injection_SDKResolution;

		[Token(Token = "0x4000F10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		private static SDKInjection<bool> _injection_IsActive;

		[Token(Token = "0x4000F11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		private static bool _injection_DisableSubmit;

		[Token(Token = "0x4000F12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x199")]
		private static bool _injection_DisableSubmitApplicationOutput;

		[Token(Token = "0x4000F13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19A")]
		private static bool _injection_DisableAddTexture;

		[Token(Token = "0x4000F14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19B")]
		private static bool _injection_DisableCreateFrame;

		[Token(Token = "0x17000261")]
		public static bool IsActive
		{
			[Token(Token = "0x60012A9")]
			[Address(RVA = "0xE33CC0", Offset = "0xE33CC0", VA = "0xE33CC0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001297")]
		[Address(RVA = "0xE34AC0", Offset = "0xE34AC0", VA = "0xE34AC0")]
		public static int AddStringToChannel(int slot, IntPtr str, int length, ulong tag)
		{
			return default(int);
		}

		[Token(Token = "0x6001298")]
		[Address(RVA = "0xE34AC8", Offset = "0xE34AC8", VA = "0xE34AC8")]
		public static int addtexture(IntPtr sourcetexture, ulong tag)
		{
			return default(int);
		}

		[Token(Token = "0x6001299")]
		[Address(RVA = "0xE34AD0", Offset = "0xE34AD0", VA = "0xE34AD0")]
		public static ulong GetObjectTimeStamp(IntPtr obj)
		{
			return default(ulong);
		}

		[Token(Token = "0x600129A")]
		[Address(RVA = "0xE34AD8", Offset = "0xE34AD8", VA = "0xE34AD8")]
		public static ulong GetCurrentTimeTicks()
		{
			return default(ulong);
		}

		[Token(Token = "0x600129B")]
		[Address(RVA = "0xE34AE0", Offset = "0xE34AE0", VA = "0xE34AE0")]
		private static bool GetIsCaptureActive()
		{
			return default(bool);
		}

		[Token(Token = "0x600129C")]
		[Address(RVA = "0xE34AE8", Offset = "0xE34AE8", VA = "0xE34AE8")]
		public static IntPtr GetRenderEventFunc()
		{
			return default(IntPtr);
		}

		[Token(Token = "0x600129D")]
		[Address(RVA = "0xE34B30", Offset = "0xE34B30", VA = "0xE34B30")]
		public static IntPtr GetCompositorChannelObject(int slot, ulong tag, ulong timestamp)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x600129E")]
		[Address(RVA = "0xE34B78", Offset = "0xE34B78", VA = "0xE34B78")]
		public static int AddObjectToCompositorChannel(int slot, IntPtr obj, int objectsize, ulong tag)
		{
			return default(int);
		}

		[Token(Token = "0x600129F")]
		[Address(RVA = "0xE34B80", Offset = "0xE34B80", VA = "0xE34B80")]
		public static int AddObjectToFrame(IntPtr obj, int objectsize, ulong tag)
		{
			return default(int);
		}

		[Token(Token = "0x60012A0")]
		[Address(RVA = "0xE34B88", Offset = "0xE34B88", VA = "0xE34B88")]
		public static IntPtr updatinputframe(IntPtr InputFrame)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x60012A1")]
		[Address(RVA = "0xE34BD0", Offset = "0xE34BD0", VA = "0xE34BD0")]
		public static IntPtr GetViewportTexture()
		{
			return default(IntPtr);
		}

		[Token(Token = "0x60012A2")]
		[Address(RVA = "0xE34C18", Offset = "0xE34C18", VA = "0xE34C18")]
		public static IntPtr GetChannelObject(int slot, ulong tag, ulong timestamp)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x60012A3")]
		[Address(RVA = "0xE34C60", Offset = "0xE34C60", VA = "0xE34C60")]
		public static int AddObjectToChannel(int slot, IntPtr obj, int objectsize, ulong tag)
		{
			return default(int);
		}

		[Token(Token = "0x60012A4")]
		[Address(RVA = "0xE34C68", Offset = "0xE34C68", VA = "0xE34C68")]
		public static ulong Tag(string str)
		{
			return default(ulong);
		}

		[Token(Token = "0x60012A5")]
		[Address(RVA = "0xE34CEC", Offset = "0xE34CEC", VA = "0xE34CEC")]
		public static void AddString(string tag, string value, int slot)
		{
		}

		[Token(Token = "0x60012A6")]
		[Address(RVA = "0xE34DE8", Offset = "0xE34DE8", VA = "0xE34DE8")]
		public static void AddTexture(SDKTexture texture, ulong tag)
		{
		}

		[Token(Token = "0x60012A7")]
		[Address(RVA = "0xE34EA8", Offset = "0xE34EA8", VA = "0xE34EA8")]
		public static ulong GetObjectTime(IntPtr objectptr)
		{
			return default(ulong);
		}

		[Token(Token = "0x60012A8")]
		[Address(RVA = "0xE34F04", Offset = "0xE34F04", VA = "0xE34F04")]
		public static ulong GetCurrentTime()
		{
			return default(ulong);
		}

		[Token(Token = "0x60012AA")]
		[Address(RVA = "0xE34F60", Offset = "0xE34F60", VA = "0xE34F60")]
		public static void IssuePluginEvent()
		{
		}

		[Token(Token = "0x60012AB")]
		[Address(RVA = "0xE3451C", Offset = "0xE3451C", VA = "0xE3451C")]
		public static void SubmitApplicationOutput(SDKApplicationOutput applicationOutput)
		{
		}

		[Token(Token = "0x60012AC")]
		public static bool GetStructFromGlobalChannel<T>(ref T mystruct, int channel, ulong tag)
		{
			return default(bool);
		}

		[Token(Token = "0x60012AD")]
		public static int AddStructToGlobalChannel<T>(ref T mystruct, int channel, ulong tag)
		{
			return default(int);
		}

		[Token(Token = "0x60012AE")]
		public static bool GetStructFromLocalChannel<T>(ref T mystruct, int channel, ulong tag)
		{
			return default(bool);
		}

		[Token(Token = "0x60012AF")]
		public static int AddStructToLocalChannel<T>(ref T mystruct, int channel, ulong tag)
		{
			return default(int);
		}

		[Token(Token = "0x60012B0")]
		public static void AddStructToFrame<T>(ref T mystruct, ulong tag)
		{
		}

		[Token(Token = "0x60012B1")]
		[Address(RVA = "0xE35010", Offset = "0xE35010", VA = "0xE35010")]
		public static bool UpdateInputFrame(ref SDKInputFrame setframe)
		{
			return default(bool);
		}

		[Token(Token = "0x60012B2")]
		[Address(RVA = "0xE35414", Offset = "0xE35414", VA = "0xE35414")]
		public static SDKTexture GetViewfinderTexture()
		{
			return default(SDKTexture);
		}

		[Token(Token = "0x60012B3")]
		[Address(RVA = "0xE35644", Offset = "0xE35644", VA = "0xE35644")]
		public static void AddTexture(SDKTexture texture)
		{
		}

		[Token(Token = "0x60012B4")]
		[Address(RVA = "0xE35774", Offset = "0xE35774", VA = "0xE35774")]
		public static void CreateFrame(SDKOutputFrame frame)
		{
		}

		[Token(Token = "0x60012B5")]
		[Address(RVA = "0xE358DC", Offset = "0xE358DC", VA = "0xE358DC")]
		public static void SetGroundPlane(SDKPlane groundPlane)
		{
		}

		[Token(Token = "0x60012B6")]
		[Address(RVA = "0xE3597C", Offset = "0xE3597C", VA = "0xE3597C")]
		public static bool GetResolution(ref SDKResolution sdkResolution)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200029B")]
	public class SDKRender : IDisposable
	{
		[Token(Token = "0x4000F18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private LIV _liv;

		[Token(Token = "0x4000F19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private SDKOutputFrame _outputFrame;

		[Token(Token = "0x4000F1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private SDKInputFrame _inputFrame;

		[Token(Token = "0x4000F1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
		private SDKResolution _resolution;

		[Token(Token = "0x4000F1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
		private Camera _cameraInstance;

		[Token(Token = "0x4000F1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
		private SDKPose _requestedPose;

		[Token(Token = "0x4000F1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
		private int _requestedPoseFrameIndex;

		[Token(Token = "0x4000F1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
		private SDKPass _clipPlanePass;

		[Token(Token = "0x4000F20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
		private SDKPass _combineAlphaPass;

		[Token(Token = "0x4000F21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B8")]
		private SDKPass _captureTexturePass;

		[Token(Token = "0x4000F22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C0")]
		private SDKPass _applyTexturePass;

		[Token(Token = "0x4000F23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C8")]
		private SDKPass _optimizedRenderingPass;

		[Token(Token = "0x4000F24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D0")]
		private RenderPassEvent _clipPlaneRenderPassEvent;

		[Token(Token = "0x4000F25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D4")]
		private RenderPassEvent _addAlphaRenderPassEvent;

		[Token(Token = "0x4000F26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D8")]
		private RenderPassEvent _captureTextureRenderPassEvent;

		[Token(Token = "0x4000F27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2DC")]
		private RenderPassEvent _applyTextureRenderPassEvent;

		[Token(Token = "0x4000F28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E0")]
		private RenderPassEvent _optimizedRenderingPassEvent;

		[Token(Token = "0x4000F29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E8")]
		private Mesh _clipPlaneMesh;

		[Token(Token = "0x4000F2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2F0")]
		private Material _clipPlaneSimpleMaterial;

		[Token(Token = "0x4000F2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2F8")]
		private Material _clipPlaneSimpleDebugMaterial;

		[Token(Token = "0x4000F2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x300")]
		private Material _clipPlaneComplexMaterial;

		[Token(Token = "0x4000F2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x308")]
		private Material _clipPlaneComplexDebugMaterial;

		[Token(Token = "0x4000F2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x310")]
		private Material _writeOpaqueToAlphaMaterial;

		[Token(Token = "0x4000F2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x318")]
		private Material _combineAlphaMaterial;

		[Token(Token = "0x4000F30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x320")]
		private Material _writeMaterial;

		[Token(Token = "0x4000F31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x328")]
		private Material _forceForwardRenderingMaterial;

		[Token(Token = "0x4000F32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x330")]
		private RenderTexture _backgroundRenderTexture;

		[Token(Token = "0x4000F33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x338")]
		private RenderTexture _foregroundRenderTexture;

		[Token(Token = "0x4000F34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x340")]
		private RenderTexture _optimizedRenderTexture;

		[Token(Token = "0x4000F35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x348")]
		private RenderTexture _complexClipPlaneRenderTexture;

		[Token(Token = "0x4000F36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x350")]
		private UniversalAdditionalCameraData _universalAdditionalCameraData;

		[Token(Token = "0x4000F37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x358")]
		private RenderTargetIdentifier _cameraColorTextureIdentifier;

		[Token(Token = "0x17000262")]
		public LIV liv
		{
			[Token(Token = "0x60012B8")]
			[Address(RVA = "0xE35B50", Offset = "0xE35B50", VA = "0xE35B50")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000263")]
		public SDKOutputFrame outputFrame
		{
			[Token(Token = "0x60012B9")]
			[Address(RVA = "0xE35B58", Offset = "0xE35B58", VA = "0xE35B58")]
			get
			{
				return default(SDKOutputFrame);
			}
		}

		[Token(Token = "0x17000264")]
		public SDKInputFrame inputFrame
		{
			[Token(Token = "0x60012BA")]
			[Address(RVA = "0xE35B68", Offset = "0xE35B68", VA = "0xE35B68")]
			get
			{
				return default(SDKInputFrame);
			}
		}

		[Token(Token = "0x17000265")]
		public SDKResolution resolution
		{
			[Token(Token = "0x60012BB")]
			[Address(RVA = "0xE35B78", Offset = "0xE35B78", VA = "0xE35B78")]
			get
			{
				return default(SDKResolution);
			}
		}

		[Token(Token = "0x17000266")]
		public Camera cameraInstance
		{
			[Token(Token = "0x60012BC")]
			[Address(RVA = "0xE35B80", Offset = "0xE35B80", VA = "0xE35B80")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000267")]
		public Camera cameraReference
		{
			[Token(Token = "0x60012BD")]
			[Address(RVA = "0xE35B88", Offset = "0xE35B88", VA = "0xE35B88")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000268")]
		public Camera hmdCamera
		{
			[Token(Token = "0x60012BE")]
			[Address(RVA = "0xE35C14", Offset = "0xE35C14", VA = "0xE35C14")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000269")]
		public Transform stage
		{
			[Token(Token = "0x60012BF")]
			[Address(RVA = "0xE35C30", Offset = "0xE35C30", VA = "0xE35C30")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700026A")]
		public Transform stageTransform
		{
			[Token(Token = "0x60012C0")]
			[Address(RVA = "0xE35C48", Offset = "0xE35C48", VA = "0xE35C48")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700026B")]
		public Matrix4x4 stageLocalToWorldMatrix
		{
			[Token(Token = "0x60012C1")]
			[Address(RVA = "0xE35C64", Offset = "0xE35C64", VA = "0xE35C64")]
			get
			{
				return default(Matrix4x4);
			}
		}

		[Token(Token = "0x1700026C")]
		public Matrix4x4 localToWorldMatrix
		{
			[Token(Token = "0x60012C2")]
			[Address(RVA = "0xE35D5C", Offset = "0xE35D5C", VA = "0xE35D5C")]
			get
			{
				return default(Matrix4x4);
			}
		}

		[Token(Token = "0x1700026D")]
		public int spectatorLayerMask
		{
			[Token(Token = "0x60012C3")]
			[Address(RVA = "0xE35E20", Offset = "0xE35E20", VA = "0xE35E20")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700026E")]
		public bool disableStandardAssets
		{
			[Token(Token = "0x60012C4")]
			[Address(RVA = "0xE35E40", Offset = "0xE35E40", VA = "0xE35E40")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700026F")]
		public bool canSetPose
		{
			[Token(Token = "0x60012C5")]
			[Address(RVA = "0xE35E5C", Offset = "0xE35E5C", VA = "0xE35E5C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000270")]
		private bool useDeferredRendering
		{
			[Token(Token = "0x60012DB")]
			[Address(RVA = "0xE375B4", Offset = "0xE375B4", VA = "0xE375B4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000271")]
		private bool interlacedRendering
		{
			[Token(Token = "0x60012DC")]
			[Address(RVA = "0xE37600", Offset = "0xE37600", VA = "0xE37600")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000272")]
		private bool canRenderBackground
		{
			[Token(Token = "0x60012DD")]
			[Address(RVA = "0xE3760C", Offset = "0xE3760C", VA = "0xE3760C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000273")]
		private bool canRenderForeground
		{
			[Token(Token = "0x60012DE")]
			[Address(RVA = "0xE37698", Offset = "0xE37698", VA = "0xE37698")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000274")]
		private bool canRenderOptimized
		{
			[Token(Token = "0x60012DF")]
			[Address(RVA = "0xE37738", Offset = "0xE37738", VA = "0xE37738")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60012C6")]
		[Address(RVA = "0xE35E7C", Offset = "0xE35E7C", VA = "0xE35E7C")]
		public bool SetPose(Vector3 position, Quaternion rotation, float verticalFieldOfView = 60f, bool useLocalSpace = false)
		{
			return default(bool);
		}

		[Token(Token = "0x60012C7")]
		[Address(RVA = "0xE36320", Offset = "0xE36320", VA = "0xE36320")]
		public void SetGroundPlane(float distance, Vector3 normal, bool useLocalSpace = false)
		{
		}

		[Token(Token = "0x60012C8")]
		[Address(RVA = "0xE364B4", Offset = "0xE364B4", VA = "0xE364B4")]
		public void SetGroundPlane(Plane plane, bool useLocalSpace = false)
		{
		}

		[Token(Token = "0x60012C9")]
		[Address(RVA = "0xE3652C", Offset = "0xE3652C", VA = "0xE3652C")]
		public void SetGroundPlane(Transform transform, bool useLocalSpace = false)
		{
		}

		[Token(Token = "0x60012CA")]
		[Address(RVA = "0xE366CC", Offset = "0xE366CC", VA = "0xE366CC")]
		private void ReleaseBridgePoseControl()
		{
		}

		[Token(Token = "0x60012CB")]
		[Address(RVA = "0xE36740", Offset = "0xE36740", VA = "0xE36740")]
		private void UpdateBridgeResolution()
		{
		}

		[Token(Token = "0x60012CC")]
		[Address(RVA = "0xE36798", Offset = "0xE36798", VA = "0xE36798")]
		private void UpdateBridgeInputFrame()
		{
		}

		[Token(Token = "0x60012CD")]
		[Address(RVA = "0xE369D8", Offset = "0xE369D8", VA = "0xE369D8")]
		private void InvokePreRender()
		{
		}

		[Token(Token = "0x60012CE")]
		[Address(RVA = "0xE36A10", Offset = "0xE36A10", VA = "0xE36A10")]
		private void IvokePostRender()
		{
		}

		[Token(Token = "0x60012CF")]
		[Address(RVA = "0xE36A48", Offset = "0xE36A48", VA = "0xE36A48")]
		private void InvokePreRenderBackground()
		{
		}

		[Token(Token = "0x60012D0")]
		[Address(RVA = "0xE36A80", Offset = "0xE36A80", VA = "0xE36A80")]
		private void InvokePostRenderBackground()
		{
		}

		[Token(Token = "0x60012D1")]
		[Address(RVA = "0xE36AB8", Offset = "0xE36AB8", VA = "0xE36AB8")]
		private void InvokePreRenderForeground()
		{
		}

		[Token(Token = "0x60012D2")]
		[Address(RVA = "0xE36AF0", Offset = "0xE36AF0", VA = "0xE36AF0")]
		private void InvokePostRenderForeground()
		{
		}

		[Token(Token = "0x60012D3")]
		[Address(RVA = "0xE36B28", Offset = "0xE36B28", VA = "0xE36B28")]
		private void CreateBackgroundTexture()
		{
		}

		[Token(Token = "0x60012D4")]
		[Address(RVA = "0xE36D2C", Offset = "0xE36D2C", VA = "0xE36D2C")]
		private void CreateForegroundTexture()
		{
		}

		[Token(Token = "0x60012D5")]
		[Address(RVA = "0xE36DC0", Offset = "0xE36DC0", VA = "0xE36DC0")]
		private void CreateOptimizedTexture()
		{
		}

		[Token(Token = "0x60012D6")]
		[Address(RVA = "0xE36E54", Offset = "0xE36E54", VA = "0xE36E54")]
		private void CreateComplexClipPlaneTexture()
		{
		}

		[Token(Token = "0x60012D7")]
		[Address(RVA = "0xE36EE8", Offset = "0xE36EE8", VA = "0xE36EE8")]
		private void UpdateTextures()
		{
		}

		[Token(Token = "0x60012D8")]
		[Address(RVA = "0xE37208", Offset = "0xE37208", VA = "0xE37208")]
		private void SendTextureToBridge(RenderTexture texture, TEXTURE_ID id)
		{
		}

		[Token(Token = "0x60012D9")]
		[Address(RVA = "0xE37414", Offset = "0xE37414", VA = "0xE37414")]
		private Material GetClipPlaneMaterial(bool debugClipPlane, bool complexClipPlane, ColorWriteMask colorWriteMask)
		{
			return null;
		}

		[Token(Token = "0x60012DA")]
		[Address(RVA = "0xE37518", Offset = "0xE37518", VA = "0xE37518")]
		private Material GetGroundClipPlaneMaterial(bool debugClipPlane, ColorWriteMask colorWriteMask)
		{
			return null;
		}

		[Token(Token = "0x60012E0")]
		[Address(RVA = "0xE34288", Offset = "0xE34288", VA = "0xE34288")]
		public SDKRender(LIV liv)
		{
		}

		[Token(Token = "0x60012E1")]
		[Address(RVA = "0xE349AC", Offset = "0xE349AC", VA = "0xE349AC")]
		public void Render()
		{
		}

		[Token(Token = "0x60012E2")]
		[Address(RVA = "0xE3810C", Offset = "0xE3810C", VA = "0xE3810C")]
		private void RenderBackground()
		{
		}

		[Token(Token = "0x60012E3")]
		[Address(RVA = "0xE3840C", Offset = "0xE3840C", VA = "0xE3840C")]
		private void RenderForeground()
		{
		}

		[Token(Token = "0x60012E4")]
		[Address(RVA = "0xE38E3C", Offset = "0xE38E3C", VA = "0xE38E3C")]
		private void RenderOptimized()
		{
		}

		[Token(Token = "0x60012E5")]
		[Address(RVA = "0xE37810", Offset = "0xE37810", VA = "0xE37810")]
		private void CreateAssets()
		{
		}

		[Token(Token = "0x60012E6")]
		[Address(RVA = "0xE3A700", Offset = "0xE3A700", VA = "0xE3A700")]
		private void DestroyAssets()
		{
		}

		[Token(Token = "0x60012E7")]
		[Address(RVA = "0xE34464", Offset = "0xE34464", VA = "0xE34464", Slot = "4")]
		public void Dispose()
		{
		}
	}
	[Token(Token = "0x200029C")]
	internal static class SDKShaders
	{
		[Token(Token = "0x4000F38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly int LIV_COLOR_MASK;

		[Token(Token = "0x4000F39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public static readonly int LIV_TESSELLATION_PROPERTY;

		[Token(Token = "0x4000F3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static readonly int LIV_CLIP_PLANE_HEIGHT_MAP_PROPERTY;

		[Token(Token = "0x4000F3B")]
		public const string LIV_MR_FOREGROUND_KEYWORD = "LIV_MR_FOREGROUND";

		[Token(Token = "0x4000F3C")]
		public const string LIV_MR_BACKGROUND_KEYWORD = "LIV_MR_BACKGROUND";

		[Token(Token = "0x4000F3D")]
		public const string LIV_MR_KEYWORD = "LIV_MR";

		[Token(Token = "0x4000F3E")]
		public const string LIV_CLIP_PLANE_SIMPLE_SHADER = "Hidden/LIV_ClipPlaneSimple";

		[Token(Token = "0x4000F3F")]
		public const string LIV_CLIP_PLANE_SIMPLE_DEBUG_SHADER = "Hidden/LIV_ClipPlaneSimpleDebug";

		[Token(Token = "0x4000F40")]
		public const string LIV_CLIP_PLANE_COMPLEX_SHADER = "Hidden/LIV_ClipPlaneComplex";

		[Token(Token = "0x4000F41")]
		public const string LIV_CLIP_PLANE_COMPLEX_DEBUG_SHADER = "Hidden/LIV_ClipPlaneComplexDebug";

		[Token(Token = "0x4000F42")]
		public const string LIV_WRITE_OPAQUE_TO_ALPHA_SHADER = "Hidden/LIV_WriteOpaqueToAlpha";

		[Token(Token = "0x4000F43")]
		public const string LIV_COMBINE_ALPHA_SHADER = "Hidden/LIV_CombineAlpha";

		[Token(Token = "0x4000F44")]
		public const string LIV_WRITE_SHADER = "Hidden/LIV_Write";

		[Token(Token = "0x4000F45")]
		public const string LIV_FORCE_FORWARD_RENDERING_SHADER = "Hidden/LIV_ForceForwardRendering";

		[Token(Token = "0x60012E8")]
		[Address(RVA = "0xE397C0", Offset = "0xE397C0", VA = "0xE397C0")]
		public static void StartRendering()
		{
		}

		[Token(Token = "0x60012E9")]
		[Address(RVA = "0xE3988C", Offset = "0xE3988C", VA = "0xE3988C")]
		public static void StopRendering()
		{
		}

		[Token(Token = "0x60012EA")]
		[Address(RVA = "0xE39DA8", Offset = "0xE39DA8", VA = "0xE39DA8")]
		public static void StartForegroundRendering()
		{
		}

		[Token(Token = "0x60012EB")]
		[Address(RVA = "0xE39DEC", Offset = "0xE39DEC", VA = "0xE39DEC")]
		public static void StopForegroundRendering()
		{
		}

		[Token(Token = "0x60012EC")]
		[Address(RVA = "0xE39804", Offset = "0xE39804", VA = "0xE39804")]
		public static void StartBackgroundRendering()
		{
		}

		[Token(Token = "0x60012ED")]
		[Address(RVA = "0xE39848", Offset = "0xE39848", VA = "0xE39848")]
		public static void StopBackgroundRendering()
		{
		}
	}
	[Token(Token = "0x200029D")]
	public struct SDKConstants
	{
		[Token(Token = "0x4000F46")]
		public const string SDK_ID = "TEB76PTTXJRGTIBKTNAWMKGYTE6WDBRN";

		[Token(Token = "0x4000F47")]
		public const string SDK_VERSION = "1.5.4";

		[Token(Token = "0x4000F48")]
		public const string ENGINE_NAME = "unity";
	}
	[Token(Token = "0x200029E")]
	public enum PRIORITY : sbyte
	{
		[Token(Token = "0x4000F4A")]
		NONE = 0,
		[Token(Token = "0x4000F4B")]
		GAME = 63
	}
	[Token(Token = "0x200029F")]
	[Flags]
	public enum FEATURES : ulong
	{
		[Token(Token = "0x4000F4D")]
		NONE = 0uL,
		[Token(Token = "0x4000F4E")]
		BACKGROUND_RENDER = 1uL,
		[Token(Token = "0x4000F4F")]
		FOREGROUND_RENDER = 2uL,
		[Token(Token = "0x4000F50")]
		COMPLEX_CLIP_PLANE = 4uL,
		[Token(Token = "0x4000F51")]
		BACKGROUND_DEPTH_RENDER = 8uL,
		[Token(Token = "0x4000F52")]
		OVERRIDE_POST_PROCESSING = 0x10uL,
		[Token(Token = "0x4000F53")]
		FIX_FOREGROUND_ALPHA = 0x20uL,
		[Token(Token = "0x4000F54")]
		GROUND_CLIP_PLANE = 0x40uL,
		[Token(Token = "0x4000F55")]
		RELEASE_CONTROL = 0x8000uL,
		[Token(Token = "0x4000F56")]
		OPTIMIZED_RENDER = 0x10000000uL,
		[Token(Token = "0x4000F57")]
		INTERLACED_RENDER = 0x20000000uL,
		[Token(Token = "0x4000F58")]
		DEBUG_CLIP_PLANE = 0x1000000000000uL
	}
	[Token(Token = "0x20002A0")]
	public enum TEXTURE_ID : uint
	{
		[Token(Token = "0x4000F5A")]
		UNDEFINED = 0u,
		[Token(Token = "0x4000F5B")]
		BACKGROUND_COLOR_BUFFER_ID = 10u,
		[Token(Token = "0x4000F5C")]
		FOREGROUND_COLOR_BUFFER_ID = 20u,
		[Token(Token = "0x4000F5D")]
		OPTIMIZED_COLOR_BUFFER_ID = 30u
	}
	[Token(Token = "0x20002A1")]
	public enum TEXTURE_TYPE : uint
	{
		[Token(Token = "0x4000F5F")]
		UNDEFINED,
		[Token(Token = "0x4000F60")]
		COLOR_BUFFER
	}
	[Token(Token = "0x20002A2")]
	public enum TEXTURE_FORMAT : uint
	{
		[Token(Token = "0x4000F62")]
		UNDEFINED = 0u,
		[Token(Token = "0x4000F63")]
		ARGB32 = 10u
	}
	[Token(Token = "0x20002A3")]
	public enum TEXTURE_DEVICE : uint
	{
		[Token(Token = "0x4000F65")]
		UNDEFINED,
		[Token(Token = "0x4000F66")]
		RAW,
		[Token(Token = "0x4000F67")]
		DIRECTX,
		[Token(Token = "0x4000F68")]
		OPENGL,
		[Token(Token = "0x4000F69")]
		VULKAN,
		[Token(Token = "0x4000F6A")]
		METAL
	}
	[Token(Token = "0x20002A4")]
	public enum TEXTURE_COLOR_SPACE : uint
	{
		[Token(Token = "0x4000F6C")]
		UNDEFINED,
		[Token(Token = "0x4000F6D")]
		LINEAR,
		[Token(Token = "0x4000F6E")]
		SRGB
	}
	[Token(Token = "0x20002A5")]
	public enum RENDERING_PIPELINE : uint
	{
		[Token(Token = "0x4000F70")]
		UNDEFINED,
		[Token(Token = "0x4000F71")]
		FORWARD,
		[Token(Token = "0x4000F72")]
		DEFERRED,
		[Token(Token = "0x4000F73")]
		VERTEX_LIT,
		[Token(Token = "0x4000F74")]
		UNIVERSAL,
		[Token(Token = "0x4000F75")]
		HIGH_DEFINITION
	}
	[Token(Token = "0x20002A6")]
	public struct SDKResolution
	{
		[Token(Token = "0x4000F76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int width;

		[Token(Token = "0x4000F77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int height;

		[Token(Token = "0x17000275")]
		public static SDKResolution zero
		{
			[Token(Token = "0x60012EF")]
			[Address(RVA = "0xE35B48", Offset = "0xE35B48", VA = "0xE35B48")]
			get
			{
				return default(SDKResolution);
			}
		}

		[Token(Token = "0x60012F0")]
		[Address(RVA = "0xE3A974", Offset = "0xE3A974", VA = "0xE3A974", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x20002A7")]
	public struct SDKVector3
	{
		[Token(Token = "0x4000F78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float x;

		[Token(Token = "0x4000F79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float y;

		[Token(Token = "0x4000F7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float z;

		[Token(Token = "0x17000276")]
		public static SDKVector3 zero
		{
			[Token(Token = "0x60012F1")]
			[Address(RVA = "0xE3AA14", Offset = "0xE3AA14", VA = "0xE3AA14")]
			get
			{
				return default(SDKVector3);
			}
		}

		[Token(Token = "0x17000277")]
		public static SDKVector3 one
		{
			[Token(Token = "0x60012F2")]
			[Address(RVA = "0xE3AA24", Offset = "0xE3AA24", VA = "0xE3AA24")]
			get
			{
				return default(SDKVector3);
			}
		}

		[Token(Token = "0x17000278")]
		public static SDKVector3 forward
		{
			[Token(Token = "0x60012F3")]
			[Address(RVA = "0xE3AA34", Offset = "0xE3AA34", VA = "0xE3AA34")]
			get
			{
				return default(SDKVector3);
			}
		}

		[Token(Token = "0x17000279")]
		public static SDKVector3 up
		{
			[Token(Token = "0x60012F4")]
			[Address(RVA = "0xE3AA44", Offset = "0xE3AA44", VA = "0xE3AA44")]
			get
			{
				return default(SDKVector3);
			}
		}

		[Token(Token = "0x1700027A")]
		public static SDKVector3 right
		{
			[Token(Token = "0x60012F5")]
			[Address(RVA = "0xE3AA54", Offset = "0xE3AA54", VA = "0xE3AA54")]
			get
			{
				return default(SDKVector3);
			}
		}

		[Token(Token = "0x60012F6")]
		[Address(RVA = "0xE3AA64", Offset = "0xE3AA64", VA = "0xE3AA64")]
		public static implicit operator Vector3(SDKVector3 v)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60012F7")]
		[Address(RVA = "0xE362D4", Offset = "0xE362D4", VA = "0xE362D4")]
		public static implicit operator SDKVector3(Vector3 v)
		{
			return default(SDKVector3);
		}

		[Token(Token = "0x60012F8")]
		[Address(RVA = "0xE3AA68", Offset = "0xE3AA68", VA = "0xE3AA68")]
		public static SDKVector3 operator +(SDKVector3 lhs, SDKVector3 rhs)
		{
			return default(SDKVector3);
		}

		[Token(Token = "0x60012F9")]
		[Address(RVA = "0xE3AA78", Offset = "0xE3AA78", VA = "0xE3AA78")]
		public static SDKVector3 operator -(SDKVector3 lhs, SDKVector3 rhs)
		{
			return default(SDKVector3);
		}

		[Token(Token = "0x60012FA")]
		[Address(RVA = "0xE3AA88", Offset = "0xE3AA88", VA = "0xE3AA88")]
		public static SDKVector3 operator *(SDKVector3 lhs, SDKVector3 rhs)
		{
			return default(SDKVector3);
		}

		[Token(Token = "0x60012FB")]
		[Address(RVA = "0xE3AA98", Offset = "0xE3AA98", VA = "0xE3AA98")]
		public static SDKVector3 operator *(SDKVector3 lhs, float rhs)
		{
			return default(SDKVector3);
		}

		[Token(Token = "0x60012FC")]
		[Address(RVA = "0xE3AAA8", Offset = "0xE3AAA8", VA = "0xE3AAA8", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x20002A8")]
	public struct SDKQuaternion
	{
		[Token(Token = "0x4000F7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float x;

		[Token(Token = "0x4000F7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float y;

		[Token(Token = "0x4000F7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float z;

		[Token(Token = "0x4000F7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float w;

		[Token(Token = "0x1700027B")]
		public static SDKQuaternion identity
		{
			[Token(Token = "0x60012FD")]
			[Address(RVA = "0xE3AB6C", Offset = "0xE3AB6C", VA = "0xE3AB6C")]
			get
			{
				return default(SDKQuaternion);
			}
		}

		[Token(Token = "0x60012FE")]
		[Address(RVA = "0xE3AB80", Offset = "0xE3AB80", VA = "0xE3AB80")]
		public static implicit operator Quaternion(SDKQuaternion v)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x60012FF")]
		[Address(RVA = "0xE362D8", Offset = "0xE362D8", VA = "0xE362D8")]
		public static implicit operator SDKQuaternion(Quaternion v)
		{
			return default(SDKQuaternion);
		}

		[Token(Token = "0x6001300")]
		[Address(RVA = "0xE3AB84", Offset = "0xE3AB84", VA = "0xE3AB84")]
		public static SDKQuaternion Euler(float pitch, float yaw, float roll)
		{
			return default(SDKQuaternion);
		}

		[Token(Token = "0x6001301")]
		[Address(RVA = "0xE3AC38", Offset = "0xE3AC38", VA = "0xE3AC38")]
		public static SDKQuaternion operator *(SDKQuaternion lhs, SDKQuaternion rhs)
		{
			return default(SDKQuaternion);
		}

		[Token(Token = "0x6001302")]
		[Address(RVA = "0xE3ACAC", Offset = "0xE3ACAC", VA = "0xE3ACAC")]
		public static SDKVector3 operator *(SDKQuaternion lhs, SDKVector3 rhs)
		{
			return default(SDKVector3);
		}

		[Token(Token = "0x6001303")]
		[Address(RVA = "0xE3AD50", Offset = "0xE3AD50", VA = "0xE3AD50", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x20002A9")]
	public struct SDKMatrix4x4
	{
		[Token(Token = "0x4000F7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float m00;

		[Token(Token = "0x4000F80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float m01;

		[Token(Token = "0x4000F81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float m02;

		[Token(Token = "0x4000F82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float m03;

		[Token(Token = "0x4000F83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float m10;

		[Token(Token = "0x4000F84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float m11;

		[Token(Token = "0x4000F85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float m12;

		[Token(Token = "0x4000F86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float m13;

		[Token(Token = "0x4000F87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float m20;

		[Token(Token = "0x4000F88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float m21;

		[Token(Token = "0x4000F89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float m22;

		[Token(Token = "0x4000F8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float m23;

		[Token(Token = "0x4000F8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float m30;

		[Token(Token = "0x4000F8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float m31;

		[Token(Token = "0x4000F8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float m32;

		[Token(Token = "0x4000F8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float m33;

		[Token(Token = "0x1700027C")]
		public static SDKMatrix4x4 identity
		{
			[Token(Token = "0x6001304")]
			[Address(RVA = "0xE3AEFC", Offset = "0xE3AEFC", VA = "0xE3AEFC")]
			get
			{
				return default(SDKMatrix4x4);
			}
		}

		[Token(Token = "0x6001305")]
		[Address(RVA = "0xE39AD8", Offset = "0xE39AD8", VA = "0xE39AD8")]
		public static implicit operator Matrix4x4(SDKMatrix4x4 v)
		{
			return default(Matrix4x4);
		}

		[Token(Token = "0x6001306")]
		[Address(RVA = "0xE362DC", Offset = "0xE362DC", VA = "0xE362DC")]
		public static implicit operator SDKMatrix4x4(Matrix4x4 v)
		{
			return default(SDKMatrix4x4);
		}

		[Token(Token = "0x6001307")]
		[Address(RVA = "0xE3AF28", Offset = "0xE3AF28", VA = "0xE3AF28")]
		public static SDKMatrix4x4 Perspective(float vFov, float aspect, float zNear, float zFar)
		{
			return default(SDKMatrix4x4);
		}

		[Token(Token = "0x6001308")]
		[Address(RVA = "0xE3AFD4", Offset = "0xE3AFD4", VA = "0xE3AFD4")]
		public static SDKMatrix4x4 operator *(SDKMatrix4x4 lhs, SDKMatrix4x4 rhs)
		{
			return default(SDKMatrix4x4);
		}

		[Token(Token = "0x6001309")]
		[Address(RVA = "0xE3B0E0", Offset = "0xE3B0E0", VA = "0xE3B0E0")]
		public static SDKVector3 operator *(SDKMatrix4x4 lhs, SDKVector3 rhs)
		{
			return default(SDKVector3);
		}

		[Token(Token = "0x600130A")]
		[Address(RVA = "0xE3B138", Offset = "0xE3B138", VA = "0xE3B138")]
		public static SDKMatrix4x4 Translate(SDKVector3 value)
		{
			return default(SDKMatrix4x4);
		}

		[Token(Token = "0x600130B")]
		[Address(RVA = "0xE3B174", Offset = "0xE3B174", VA = "0xE3B174")]
		public static SDKMatrix4x4 Rotate(SDKQuaternion value)
		{
			return default(SDKMatrix4x4);
		}

		[Token(Token = "0x600130C")]
		[Address(RVA = "0xE3B208", Offset = "0xE3B208", VA = "0xE3B208")]
		public static SDKMatrix4x4 Scale(SDKVector3 value)
		{
			return default(SDKMatrix4x4);
		}

		[Token(Token = "0x600130D")]
		[Address(RVA = "0xE3B234", Offset = "0xE3B234", VA = "0xE3B234")]
		public static SDKMatrix4x4 TRS(SDKVector3 translation, SDKQuaternion rotation, SDKVector3 scale)
		{
			return default(SDKMatrix4x4);
		}

		[Token(Token = "0x600130E")]
		[Address(RVA = "0xE3B318", Offset = "0xE3B318", VA = "0xE3B318", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x20002AA")]
	public struct SDKPlane
	{
		[Token(Token = "0x4000F8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float distance;

		[Token(Token = "0x4000F90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public SDKVector3 normal;

		[Token(Token = "0x1700027D")]
		public static SDKPlane empty
		{
			[Token(Token = "0x6001310")]
			[Address(RVA = "0xE3B820", Offset = "0xE3B820", VA = "0xE3B820")]
			get
			{
				return default(SDKPlane);
			}
		}

		[Token(Token = "0x600130F")]
		[Address(RVA = "0xE3B7C4", Offset = "0xE3B7C4", VA = "0xE3B7C4")]
		public static implicit operator SDKPlane(Plane v)
		{
			return default(SDKPlane);
		}

		[Token(Token = "0x6001311")]
		[Address(RVA = "0xE3B834", Offset = "0xE3B834", VA = "0xE3B834", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x20002AB")]
	public struct SDKPriority
	{
		[Token(Token = "0x4000F91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public sbyte pose;

		[Token(Token = "0x4000F92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		public sbyte clipPlane;

		[Token(Token = "0x4000F93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
		public sbyte stage;

		[Token(Token = "0x4000F94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3")]
		public sbyte resolution;

		[Token(Token = "0x4000F95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public sbyte feature;

		[Token(Token = "0x4000F96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5")]
		public sbyte nearFarAdjustment;

		[Token(Token = "0x4000F97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6")]
		public sbyte groundPlane;

		[Token(Token = "0x4000F98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7")]
		public sbyte reserved2;

		[Token(Token = "0x1700027E")]
		public static SDKPriority empty
		{
			[Token(Token = "0x6001312")]
			[Address(RVA = "0xE3B8F8", Offset = "0xE3B8F8", VA = "0xE3B8F8")]
			get
			{
				return default(SDKPriority);
			}
		}

		[Token(Token = "0x6001313")]
		[Address(RVA = "0xE3B904", Offset = "0xE3B904", VA = "0xE3B904", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x20002AC")]
	public struct SDKApplicationOutput
	{
		[Token(Token = "0x4000F99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public FEATURES supportedFeatures;

		[Token(Token = "0x4000F9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string engineName;

		[Token(Token = "0x4000F9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string engineVersion;

		[Token(Token = "0x4000F9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string applicationName;

		[Token(Token = "0x4000F9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string applicationVersion;

		[Token(Token = "0x4000F9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string xrDeviceName;

		[Token(Token = "0x4000F9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string graphicsAPI;

		[Token(Token = "0x4000FA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string sdkID;

		[Token(Token = "0x4000FA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string sdkVersion;

		[Token(Token = "0x1700027F")]
		public static SDKApplicationOutput empty
		{
			[Token(Token = "0x6001314")]
			[Address(RVA = "0xE3449C", Offset = "0xE3449C", VA = "0xE3449C")]
			get
			{
				return default(SDKApplicationOutput);
			}
		}

		[Token(Token = "0x6001315")]
		[Address(RVA = "0xE3BB70", Offset = "0xE3BB70", VA = "0xE3BB70", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x20002AD")]
	public struct SDKInputFrame
	{
		[Token(Token = "0x4000FA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public SDKPose pose;

		[Token(Token = "0x4000FA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public SDKClipPlane clipPlane;

		[Token(Token = "0x4000FA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		public SDKTransform stageTransform;

		[Token(Token = "0x4000FA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public FEATURES features;

		[Token(Token = "0x4000FA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public SDKClipPlane groundClipPlane;

		[Token(Token = "0x4000FA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		public ulong frameid;

		[Token(Token = "0x4000FA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		public ulong referenceframe;

		[Token(Token = "0x4000FA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		public SDKPriority priority;

		[Token(Token = "0x17000280")]
		public static SDKInputFrame empty
		{
			[Token(Token = "0x6001316")]
			[Address(RVA = "0xE352D0", Offset = "0xE352D0", VA = "0xE352D0")]
			get
			{
				return default(SDKInputFrame);
			}
		}

		[Token(Token = "0x6001317")]
		[Address(RVA = "0xE36730", Offset = "0xE36730", VA = "0xE36730")]
		public void ReleaseControl()
		{
		}

		[Token(Token = "0x6001318")]
		[Address(RVA = "0xE36954", Offset = "0xE36954", VA = "0xE36954")]
		public void ObtainControl()
		{
		}

		[Token(Token = "0x6001319")]
		[Address(RVA = "0xE3BDFC", Offset = "0xE3BDFC", VA = "0xE3BDFC", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x20002AE")]
	public struct SDKOutputFrame
	{
		[Token(Token = "0x4000FAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public RENDERING_PIPELINE renderingPipeline;

		[Token(Token = "0x4000FAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public SDKTrackedSpace trackedSpace;

		[Token(Token = "0x17000281")]
		public static SDKOutputFrame empty
		{
			[Token(Token = "0x600131A")]
			[Address(RVA = "0xE377B0", Offset = "0xE377B0", VA = "0xE377B0")]
			get
			{
				return default(SDKOutputFrame);
			}
		}

		[Token(Token = "0x600131B")]
		[Address(RVA = "0xE3C194", Offset = "0xE3C194", VA = "0xE3C194", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x20002AF")]
	public struct SDKTrackedSpace
	{
		[Token(Token = "0x4000FAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public SDKVector3 trackedSpaceWorldPosition;

		[Token(Token = "0x4000FAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public SDKQuaternion trackedSpaceWorldRotation;

		[Token(Token = "0x4000FAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public SDKVector3 trackedSpaceLocalScale;

		[Token(Token = "0x4000FAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SDKMatrix4x4 trackedSpaceLocalToWorldMatrix;

		[Token(Token = "0x4000FB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public SDKMatrix4x4 trackedSpaceWorldToLocalMatrix;

		[Token(Token = "0x17000282")]
		public static SDKTrackedSpace empty
		{
			[Token(Token = "0x600131C")]
			[Address(RVA = "0xE3C130", Offset = "0xE3C130", VA = "0xE3C130")]
			get
			{
				return default(SDKTrackedSpace);
			}
		}

		[Token(Token = "0x600131D")]
		[Address(RVA = "0xE3C258", Offset = "0xE3C258", VA = "0xE3C258", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x20002B0")]
	public struct SDKTexture
	{
		[Token(Token = "0x4000FB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public TEXTURE_ID id;

		[Token(Token = "0x4000FB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public IntPtr texturePtr;

		[Token(Token = "0x4000FB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public IntPtr SharedHandle;

		[Token(Token = "0x4000FB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TEXTURE_DEVICE device;

		[Token(Token = "0x4000FB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int dummy;

		[Token(Token = "0x4000FB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TEXTURE_TYPE type;

		[Token(Token = "0x4000FB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public TEXTURE_FORMAT format;

		[Token(Token = "0x4000FB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TEXTURE_COLOR_SPACE colorSpace;

		[Token(Token = "0x4000FB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int width;

		[Token(Token = "0x4000FBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int height;

		[Token(Token = "0x17000283")]
		public static SDKTexture empty
		{
			[Token(Token = "0x600131E")]
			[Address(RVA = "0xE355E8", Offset = "0xE355E8", VA = "0xE355E8")]
			get
			{
				return default(SDKTexture);
			}
		}

		[Token(Token = "0x600131F")]
		[Address(RVA = "0xE3C49C", Offset = "0xE3C49C", VA = "0xE3C49C", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x20002B1")]
	public struct SDKTransform
	{
		[Token(Token = "0x4000FBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public SDKVector3 localPosition;

		[Token(Token = "0x4000FBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public SDKQuaternion localRotation;

		[Token(Token = "0x4000FBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public SDKVector3 localScale;

		[Token(Token = "0x17000284")]
		public static SDKTransform empty
		{
			[Token(Token = "0x6001320")]
			[Address(RVA = "0xE3BDE8", Offset = "0xE3BDE8", VA = "0xE3BDE8")]
			get
			{
				return default(SDKTransform);
			}
		}

		[Token(Token = "0x6001321")]
		[Address(RVA = "0xE3C840", Offset = "0xE3C840", VA = "0xE3C840", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x20002B2")]
	public struct SDKClipPlane
	{
		[Token(Token = "0x4000FBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public SDKMatrix4x4 transform;

		[Token(Token = "0x4000FBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int width;

		[Token(Token = "0x4000FC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public int height;

		[Token(Token = "0x4000FC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float tesselation;

		[Token(Token = "0x17000285")]
		public static SDKClipPlane empty
		{
			[Token(Token = "0x6001322")]
			[Address(RVA = "0xE3BDB4", Offset = "0xE3BDB4", VA = "0xE3BDB4")]
			get
			{
				return default(SDKClipPlane);
			}
		}

		[Token(Token = "0x6001323")]
		[Address(RVA = "0xE3C928", Offset = "0xE3C928", VA = "0xE3C928", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x20002B3")]
	public struct SDKControllerState
	{
		[Token(Token = "0x4000FC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public SDKVector3 hmdposition;

		[Token(Token = "0x4000FC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public SDKQuaternion hmdrotation;

		[Token(Token = "0x4000FC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public SDKVector3 calibrationcameraposition;

		[Token(Token = "0x4000FC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SDKQuaternion calibrationcamerarotation;

		[Token(Token = "0x4000FC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public SDKVector3 cameraposition;

		[Token(Token = "0x4000FC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public SDKQuaternion camerarotation;

		[Token(Token = "0x4000FC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public SDKVector3 leftposition;

		[Token(Token = "0x4000FC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public SDKQuaternion leftrotation;

		[Token(Token = "0x4000FCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public SDKVector3 rightposition;

		[Token(Token = "0x4000FCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public SDKQuaternion rightrotation;

		[Token(Token = "0x17000286")]
		public static SDKControllerState empty
		{
			[Token(Token = "0x6001324")]
			[Address(RVA = "0xE3CB04", Offset = "0xE3CB04", VA = "0xE3CB04")]
			get
			{
				return default(SDKControllerState);
			}
		}

		[Token(Token = "0x6001325")]
		[Address(RVA = "0xE3CB50", Offset = "0xE3CB50", VA = "0xE3CB50", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x20002B4")]
	public struct SDKPose
	{
		[Token(Token = "0x4000FCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public SDKMatrix4x4 projectionMatrix;

		[Token(Token = "0x4000FCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public SDKVector3 localPosition;

		[Token(Token = "0x4000FCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public SDKQuaternion localRotation;

		[Token(Token = "0x4000FCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float verticalFieldOfView;

		[Token(Token = "0x4000FD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float nearClipPlane;

		[Token(Token = "0x4000FD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public float farClipPlane;

		[Token(Token = "0x4000FD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public int unused0;

		[Token(Token = "0x4000FD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public int unused1;

		[Token(Token = "0x17000287")]
		public static SDKPose empty
		{
			[Token(Token = "0x6001326")]
			[Address(RVA = "0xE36968", Offset = "0xE36968", VA = "0xE36968")]
			get
			{
				return default(SDKPose);
			}
		}

		[Token(Token = "0x6001327")]
		[Address(RVA = "0xE3CEB8", Offset = "0xE3CEB8", VA = "0xE3CEB8", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x20002B5")]
	public class SDKPass : ScriptableRenderPass
	{
		[Token(Token = "0x4000FD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public CommandBuffer commandBuffer;

		[Token(Token = "0x6001328")]
		[Address(RVA = "0xE3D130", Offset = "0xE3D130", VA = "0xE3D130", Slot = "9")]
		public override void Execute(ScriptableRenderContext context, ref RenderingData renderingData)
		{
		}

		[Token(Token = "0x6001329")]
		[Address(RVA = "0xE3A6F8", Offset = "0xE3A6F8", VA = "0xE3A6F8")]
		public SDKPass()
		{
		}
	}
	[Token(Token = "0x20002B6")]
	public class SDKUniversalRenderFeature : ScriptableRendererFeature
	{
		[Token(Token = "0x4000FD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static List<SDKPass> passes;

		[Token(Token = "0x600132A")]
		[Address(RVA = "0xE396F0", Offset = "0xE396F0", VA = "0xE396F0")]
		public static void AddPass(SDKPass pass)
		{
		}

		[Token(Token = "0x600132B")]
		[Address(RVA = "0xE398D0", Offset = "0xE398D0", VA = "0xE398D0")]
		public static void ClearPasses()
		{
		}

		[Token(Token = "0x600132C")]
		[Address(RVA = "0xE3D150", Offset = "0xE3D150", VA = "0xE3D150", Slot = "5")]
		public override void Create()
		{
		}

		[Token(Token = "0x600132D")]
		[Address(RVA = "0xE3D154", Offset = "0xE3D154", VA = "0xE3D154", Slot = "7")]
		public override void AddRenderPasses(ScriptableRenderer renderer, ref RenderingData renderingData)
		{
		}

		[Token(Token = "0x600132E")]
		[Address(RVA = "0xE3D260", Offset = "0xE3D260", VA = "0xE3D260")]
		public SDKUniversalRenderFeature()
		{
		}
	}
	[Token(Token = "0x20002B7")]
	public static class SDKUtils
	{
		[Token(Token = "0x17000288")]
		public static TEXTURE_COLOR_SPACE GetDefaultColorSpace
		{
			[Token(Token = "0x6001332")]
			[Address(RVA = "0xE3D30C", Offset = "0xE3D30C", VA = "0xE3D30C")]
			get
			{
				return default(TEXTURE_COLOR_SPACE);
			}
		}

		[Token(Token = "0x6001330")]
		[Address(RVA = "0xE3A23C", Offset = "0xE3A23C", VA = "0xE3A23C")]
		public static void CreateClipPlane(Mesh mesh, int resX, int resY, bool useQuads, float skirtLength)
		{
		}

		[Token(Token = "0x6001331")]
		[Address(RVA = "0xE3D2F4", Offset = "0xE3D2F4", VA = "0xE3D2F4")]
		public static RenderTextureReadWrite GetReadWriteFromColorSpace(TEXTURE_COLOR_SPACE colorSpace)
		{
			return default(RenderTextureReadWrite);
		}

		[Token(Token = "0x6001333")]
		[Address(RVA = "0xE37388", Offset = "0xE37388", VA = "0xE37388")]
		public static TEXTURE_COLOR_SPACE GetColorSpace(RenderTexture renderTexture)
		{
			return default(TEXTURE_COLOR_SPACE);
		}

		[Token(Token = "0x6001334")]
		[Address(RVA = "0xE3D338", Offset = "0xE3D338", VA = "0xE3D338")]
		public static RENDERING_PIPELINE GetRenderingPipeline(RenderingPath renderingPath)
		{
			return default(RENDERING_PIPELINE);
		}

		[Token(Token = "0x6001335")]
		[Address(RVA = "0xE37324", Offset = "0xE37324", VA = "0xE37324")]
		public static TEXTURE_DEVICE GetDevice()
		{
			return default(TEXTURE_DEVICE);
		}

		[Token(Token = "0x6001336")]
		[Address(RVA = "0xE3470C", Offset = "0xE3470C", VA = "0xE3470C")]
		public static bool ContainsFlag(ulong flags, ulong flag)
		{
			return default(bool);
		}

		[Token(Token = "0x6001337")]
		[Address(RVA = "0xE336E8", Offset = "0xE336E8", VA = "0xE336E8")]
		public static ulong SetFlag(ulong flags, ulong flag, bool enabled)
		{
			return default(ulong);
		}

		[Token(Token = "0x6001338")]
		[Address(RVA = "0xE3D358", Offset = "0xE3D358", VA = "0xE3D358")]
		public static void GetCameraPositionAndRotation(SDKPose pose, Matrix4x4 originLocalToWorldMatrix, out Vector3 position, out Quaternion rotation)
		{
		}

		[Token(Token = "0x6001339")]
		[Address(RVA = "0xE39EB8", Offset = "0xE39EB8", VA = "0xE39EB8")]
		public static void CleanCameraBehaviours(Camera camera, string[] excludeBehaviours)
		{
		}

		[Token(Token = "0x600133A")]
		[Address(RVA = "0xE394A4", Offset = "0xE394A4", VA = "0xE394A4")]
		public static void SetCamera(Camera camera, Transform cameraTransform, SDKInputFrame inputFrame, Matrix4x4 originLocalToWorldMatrix, int layerMask)
		{
		}

		[Token(Token = "0x600133B")]
		[Address(RVA = "0xE36170", Offset = "0xE36170", VA = "0xE36170")]
		public static Quaternion RotateQuaternionByMatrix(Matrix4x4 matrix, Quaternion rotation)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x600133C")]
		[Address(RVA = "0xE3D3D0", Offset = "0xE3D3D0", VA = "0xE3D3D0")]
		public static SDKTrackedSpace GetTrackedSpace(Transform transform)
		{
			return default(SDKTrackedSpace);
		}

		[Token(Token = "0x600133D")]
		public static bool DestroyObject<T>(ref T reference) where T : UnityEngine.Object
		{
			return default(bool);
		}

		[Token(Token = "0x600133E")]
		public static bool DisposeObject<T>(ref T reference) where T : IDisposable
		{
			return default(bool);
		}

		[Token(Token = "0x600133F")]
		[Address(RVA = "0xE36BBC", Offset = "0xE36BBC", VA = "0xE36BBC")]
		public static bool CreateTexture(ref RenderTexture renderTexture, int width, int height, int depth, RenderTextureFormat format)
		{
			return default(bool);
		}

		[Token(Token = "0x6001340")]
		[Address(RVA = "0xE37174", Offset = "0xE37174", VA = "0xE37174")]
		public static void DestroyTexture(ref RenderTexture _renderTexture)
		{
		}

		[Token(Token = "0x6001341")]
		[Address(RVA = "0xE3801C", Offset = "0xE3801C", VA = "0xE3801C")]
		public static void ApplyUserSpaceTransform(SDKRender render)
		{
		}

		[Token(Token = "0x6001342")]
		[Address(RVA = "0xE39384", Offset = "0xE39384", VA = "0xE39384")]
		public static void CreateBridgeOutputFrame(SDKRender render)
		{
		}

		[Token(Token = "0x6001343")]
		[Address(RVA = "0xE37168", Offset = "0xE37168", VA = "0xE37168")]
		public static bool FeatureEnabled(FEATURES features, FEATURES feature)
		{
			return default(bool);
		}

		[Token(Token = "0x6001344")]
		[Address(RVA = "0xE39968", Offset = "0xE39968", VA = "0xE39968")]
		public static void DisableStandardAssets(Camera cameraInstance, ref MonoBehaviour[] behaviours, ref bool[] wasBehaviourEnabled)
		{
		}

		[Token(Token = "0x6001345")]
		[Address(RVA = "0xE39E30", Offset = "0xE39E30", VA = "0xE39E30")]
		public static void RestoreStandardAssets(ref MonoBehaviour[] behaviours, ref bool[] wasBehaviourEnabled)
		{
		}

		[Token(Token = "0x6001346")]
		[Address(RVA = "0xE39B1C", Offset = "0xE39B1C", VA = "0xE39B1C")]
		public static void ForceForwardRendering(Camera cameraInstance, Mesh clipPlaneMesh, Material forceForwardRenderingMaterial)
		{
		}
	}
}
namespace I2.Loc
{
	[Token(Token = "0x20002B8")]
	public class CallbackNotification : MonoBehaviour
	{
		[Token(Token = "0x6001347")]
		[Address(RVA = "0xE3D64C", Offset = "0xE3D64C", VA = "0xE3D64C")]
		public void OnModifyLocalization()
		{
		}

		[Token(Token = "0x6001348")]
		[Address(RVA = "0xE3D750", Offset = "0xE3D750", VA = "0xE3D750")]
		public CallbackNotification()
		{
		}
	}
	[Token(Token = "0x20002B9")]
	public class Example_ChangeLanguage : MonoBehaviour
	{
		[Token(Token = "0x6001349")]
		[Address(RVA = "0xE3D758", Offset = "0xE3D758", VA = "0xE3D758")]
		public void SetLanguage_English()
		{
		}

		[Token(Token = "0x600134A")]
		[Address(RVA = "0xE3D828", Offset = "0xE3D828", VA = "0xE3D828")]
		public void SetLanguage_French()
		{
		}

		[Token(Token = "0x600134B")]
		[Address(RVA = "0xE3D868", Offset = "0xE3D868", VA = "0xE3D868")]
		public void SetLanguage_Spanish()
		{
		}

		[Token(Token = "0x600134C")]
		[Address(RVA = "0xE3D798", Offset = "0xE3D798", VA = "0xE3D798")]
		public void SetLanguage(string LangName)
		{
		}

		[Token(Token = "0x600134D")]
		[Address(RVA = "0xE3D8A8", Offset = "0xE3D8A8", VA = "0xE3D8A8")]
		public Example_ChangeLanguage()
		{
		}
	}
	[Token(Token = "0x20002BA")]
	public class Example_LocalizedString : MonoBehaviour
	{
		[Token(Token = "0x4000FD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LocalizedString _MyLocalizedString;

		[Token(Token = "0x4000FD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string _NormalString;

		[Token(Token = "0x4000FD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[TermsPopup("")]
		public string _StringWithTermPopup;

		[Token(Token = "0x600134E")]
		[Address(RVA = "0xE3D8B0", Offset = "0xE3D8B0", VA = "0xE3D8B0")]
		public void Start()
		{
		}

		[Token(Token = "0x600134F")]
		[Address(RVA = "0xE3DBE0", Offset = "0xE3DBE0", VA = "0xE3DBE0")]
		public Example_LocalizedString()
		{
		}
	}
	[Token(Token = "0x20002BB")]
	public class GlobalParametersExample : RegisterGlobalParameters
	{
		[Token(Token = "0x6001350")]
		[Address(RVA = "0xE3DBE8", Offset = "0xE3DBE8", VA = "0xE3DBE8", Slot = "7")]
		public override string GetParameterValue(string ParamName)
		{
			return null;
		}

		[Token(Token = "0x6001351")]
		[Address(RVA = "0xE3DCA8", Offset = "0xE3DCA8", VA = "0xE3DCA8")]
		public GlobalParametersExample()
		{
		}
	}
	[Token(Token = "0x20002BC")]
	public class RealTimeTranslation : MonoBehaviour
	{
		[Token(Token = "0x4000FD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private string OriginalText;

		[Token(Token = "0x4000FDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private string TranslatedText;

		[Token(Token = "0x4000FDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool IsTranslating;

		[Token(Token = "0x6001352")]
		[Address(RVA = "0xE3DCB0", Offset = "0xE3DCB0", VA = "0xE3DCB0")]
		public void OnGUI()
		{
		}

		[Token(Token = "0x6001353")]
		[Address(RVA = "0xE3E198", Offset = "0xE3E198", VA = "0xE3E198")]
		public void StartTranslating(string fromCode, string toCode)
		{
		}

		[Token(Token = "0x6001354")]
		[Address(RVA = "0xE3E440", Offset = "0xE3E440", VA = "0xE3E440")]
		private void OnTranslationReady(string Translation, string errorMsg)
		{
		}

		[Token(Token = "0x6001355")]
		[Address(RVA = "0xE3E4C4", Offset = "0xE3E4C4", VA = "0xE3E4C4")]
		public void ExampleMultiTranslations_Blocking()
		{
		}

		[Token(Token = "0x6001356")]
		[Address(RVA = "0xE3E26C", Offset = "0xE3E26C", VA = "0xE3E26C")]
		public void ExampleMultiTranslations_Async()
		{
		}

		[Token(Token = "0x6001357")]
		[Address(RVA = "0xE3E738", Offset = "0xE3E738", VA = "0xE3E738")]
		private void OnMultitranslationReady(Dictionary<string, TranslationQuery> dict, string errorMsg)
		{
		}

		[Token(Token = "0x6001358")]
		[Address(RVA = "0xE3E974", Offset = "0xE3E974", VA = "0xE3E974")]
		public bool IsWaitingForTranslation()
		{
			return default(bool);
		}

		[Token(Token = "0x6001359")]
		[Address(RVA = "0xE3E97C", Offset = "0xE3E97C", VA = "0xE3E97C")]
		public string GetTranslatedText()
		{
			return null;
		}

		[Token(Token = "0x600135A")]
		[Address(RVA = "0xE3E984", Offset = "0xE3E984", VA = "0xE3E984")]
		public void SetOriginalText(string text)
		{
		}

		[Token(Token = "0x600135B")]
		[Address(RVA = "0xE3E98C", Offset = "0xE3E98C", VA = "0xE3E98C")]
		public RealTimeTranslation()
		{
		}
	}
	[Token(Token = "0x20002BD")]
	public class RegisterBundlesManager : MonoBehaviour, IResourceManager_Bundles
	{
		[Token(Token = "0x600135C")]
		[Address(RVA = "0xE3EA08", Offset = "0xE3EA08", VA = "0xE3EA08")]
		public void OnEnable()
		{
		}

		[Token(Token = "0x600135D")]
		[Address(RVA = "0xE3EAF0", Offset = "0xE3EAF0", VA = "0xE3EAF0")]
		public void OnDisable()
		{
		}

		[Token(Token = "0x600135E")]
		[Address(RVA = "0xE3EB50", Offset = "0xE3EB50", VA = "0xE3EB50", Slot = "5")]
		public virtual UnityEngine.Object LoadFromBundle(string path, Type assetType)
		{
			return null;
		}

		[Token(Token = "0x600135F")]
		[Address(RVA = "0xE3EB58", Offset = "0xE3EB58", VA = "0xE3EB58")]
		public RegisterBundlesManager()
		{
		}
	}
	[Token(Token = "0x20002BE")]
	public class ToggleLanguage : MonoBehaviour
	{
		[Token(Token = "0x6001360")]
		[Address(RVA = "0xE3EB60", Offset = "0xE3EB60", VA = "0xE3EB60")]
		private void Start()
		{
		}

		[Token(Token = "0x6001361")]
		[Address(RVA = "0xE3EBB0", Offset = "0xE3EBB0", VA = "0xE3EBB0")]
		private void test()
		{
		}

		[Token(Token = "0x6001362")]
		[Address(RVA = "0xE3EC74", Offset = "0xE3EC74", VA = "0xE3EC74")]
		public ToggleLanguage()
		{
		}
	}
	[Token(Token = "0x20002BF")]
	public static class PersistentStorage
	{
		[Token(Token = "0x20002C0")]
		public enum eFileType
		{
			[Token(Token = "0x4000FDE")]
			Raw,
			[Token(Token = "0x4000FDF")]
			Persistent,
			[Token(Token = "0x4000FE0")]
			Temporal,
			[Token(Token = "0x4000FE1")]
			Streaming
		}

		[Token(Token = "0x4000FDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static I2CustomPersistentStorage mStorage;

		[Token(Token = "0x6001363")]
		[Address(RVA = "0xE3EC7C", Offset = "0xE3EC7C", VA = "0xE3EC7C")]
		public static void SetSetting_String(string key, string value)
		{
		}

		[Token(Token = "0x6001364")]
		[Address(RVA = "0xE3ED3C", Offset = "0xE3ED3C", VA = "0xE3ED3C")]
		public static string GetSetting_String(string key, string defaultValue)
		{
			return null;
		}

		[Token(Token = "0x6001365")]
		[Address(RVA = "0xE3EDF4", Offset = "0xE3EDF4", VA = "0xE3EDF4")]
		public static void DeleteSetting(string key)
		{
		}

		[Token(Token = "0x6001366")]
		[Address(RVA = "0xE3EE9C", Offset = "0xE3EE9C", VA = "0xE3EE9C")]
		public static bool HasSetting(string key)
		{
			return default(bool);
		}

		[Token(Token = "0x6001367")]
		[Address(RVA = "0xE3EF44", Offset = "0xE3EF44", VA = "0xE3EF44")]
		public static void ForceSaveSettings()
		{
		}

		[Token(Token = "0x6001368")]
		[Address(RVA = "0xE3EFE4", Offset = "0xE3EFE4", VA = "0xE3EFE4")]
		public static bool CanAccessFiles()
		{
			return default(bool);
		}

		[Token(Token = "0x6001369")]
		[Address(RVA = "0xE3F084", Offset = "0xE3F084", VA = "0xE3F084")]
		public static bool SaveFile(eFileType fileType, string fileName, string data, bool logExceptions = true)
		{
			return default(bool);
		}

		[Token(Token = "0x600136A")]
		[Address(RVA = "0xE3F154", Offset = "0xE3F154", VA = "0xE3F154")]
		public static string LoadFile(eFileType fileType, string fileName, bool logExceptions = true)
		{
			return null;
		}

		[Token(Token = "0x600136B")]
		[Address(RVA = "0xE3F214", Offset = "0xE3F214", VA = "0xE3F214")]
		public static bool DeleteFile(eFileType fileType, string fileName, bool logExceptions = true)
		{
			return default(bool);
		}

		[Token(Token = "0x600136C")]
		[Address(RVA = "0xE3F2D4", Offset = "0xE3F2D4", VA = "0xE3F2D4")]
		public static bool HasFile(eFileType fileType, string fileName, bool logExceptions = true)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20002C1")]
	public abstract class I2BasePersistentStorage
	{
		[Token(Token = "0x600136D")]
		[Address(RVA = "0xE3F398", Offset = "0xE3F398", VA = "0xE3F398", Slot = "4")]
		public virtual void SetSetting_String(string key, string value)
		{
		}

		[Token(Token = "0x600136E")]
		[Address(RVA = "0xE3F634", Offset = "0xE3F634", VA = "0xE3F634", Slot = "5")]
		public virtual string GetSetting_String(string key, string defaultValue)
		{
			return null;
		}

		[Token(Token = "0x600136F")]
		[Address(RVA = "0xE3F8B0", Offset = "0xE3F8B0", VA = "0xE3F8B0", Slot = "6")]
		public virtual void DeleteSetting(string key)
		{
		}

		[Token(Token = "0x6001370")]
		[Address(RVA = "0xE3FAF0", Offset = "0xE3FAF0", VA = "0xE3FAF0", Slot = "7")]
		public virtual void ForceSaveSettings()
		{
		}

		[Token(Token = "0x6001371")]
		[Address(RVA = "0xE3FAF8", Offset = "0xE3FAF8", VA = "0xE3FAF8", Slot = "8")]
		public virtual bool HasSetting(string key)
		{
			return default(bool);
		}

		[Token(Token = "0x6001372")]
		[Address(RVA = "0xE3FB04", Offset = "0xE3FB04", VA = "0xE3FB04", Slot = "9")]
		public virtual bool CanAccessFiles()
		{
			return default(bool);
		}

		[Token(Token = "0x6001373")]
		[Address(RVA = "0xE3FB0C", Offset = "0xE3FB0C", VA = "0xE3FB0C")]
		private string UpdateFilename(PersistentStorage.eFileType fileType, string fileName)
		{
			return null;
		}

		[Token(Token = "0x6001374")]
		[Address(RVA = "0xE3FBA4", Offset = "0xE3FBA4", VA = "0xE3FBA4", Slot = "10")]
		public virtual bool SaveFile(PersistentStorage.eFileType fileType, string fileName, string data, bool logExceptions = true)
		{
			return default(bool);
		}

		[Token(Token = "0x6001375")]
		[Address(RVA = "0xE3FD38", Offset = "0xE3FD38", VA = "0xE3FD38", Slot = "11")]
		public virtual string LoadFile(PersistentStorage.eFileType fileType, string fileName, bool logExceptions = true)
		{
			return null;
		}

		[Token(Token = "0x6001376")]
		[Address(RVA = "0xE3FEC0", Offset = "0xE3FEC0", VA = "0xE3FEC0", Slot = "12")]
		public virtual bool DeleteFile(PersistentStorage.eFileType fileType, string fileName, bool logExceptions = true)
		{
			return default(bool);
		}

		[Token(Token = "0x6001377")]
		[Address(RVA = "0xE4003C", Offset = "0xE4003C", VA = "0xE4003C", Slot = "13")]
		public virtual bool HasFile(PersistentStorage.eFileType fileType, string fileName, bool logExceptions = true)
		{
			return default(bool);
		}

		[Token(Token = "0x6001378")]
		[Address(RVA = "0xE401B8", Offset = "0xE401B8", VA = "0xE401B8")]
		protected I2BasePersistentStorage()
		{
		}
	}
	[Token(Token = "0x20002C2")]
	public class I2CustomPersistentStorage : I2BasePersistentStorage
	{
		[Token(Token = "0x6001379")]
		[Address(RVA = "0xE3ED34", Offset = "0xE3ED34", VA = "0xE3ED34")]
		public I2CustomPersistentStorage()
		{
		}
	}
	[Token(Token = "0x20002C3")]
	public class BaseSpecializationManager
	{
		[Token(Token = "0x4000FE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string[] mSpecializations;

		[Token(Token = "0x4000FE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Dictionary<string, string> mSpecializationsFallbacks;

		[Token(Token = "0x600137A")]
		[Address(RVA = "0xE401C0", Offset = "0xE401C0", VA = "0xE401C0", Slot = "4")]
		public virtual void InitializeSpecializations()
		{
		}

		[Token(Token = "0x600137B")]
		[Address(RVA = "0xE406B0", Offset = "0xE406B0", VA = "0xE406B0", Slot = "5")]
		public virtual string GetCurrentSpecialization()
		{
			return null;
		}

		[Token(Token = "0x600137C")]
		[Address(RVA = "0xE4070C", Offset = "0xE4070C", VA = "0xE4070C", Slot = "6")]
		public virtual string GetFallbackSpecialization(string specialization)
		{
			return null;
		}

		[Token(Token = "0x600137D")]
		[Address(RVA = "0xE407B4", Offset = "0xE407B4", VA = "0xE407B4")]
		public BaseSpecializationManager()
		{
		}
	}
	[Token(Token = "0x20002C4")]
	public class SpecializationManager : BaseSpecializationManager
	{
		[Token(Token = "0x4000FE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static SpecializationManager Singleton;

		[Token(Token = "0x600137E")]
		[Address(RVA = "0xE407BC", Offset = "0xE407BC", VA = "0xE407BC")]
		private SpecializationManager()
		{
		}

		[Token(Token = "0x600137F")]
		[Address(RVA = "0xE407E0", Offset = "0xE407E0", VA = "0xE407E0")]
		public static string GetSpecializedText(string text, [Optional] string specialization)
		{
			return null;
		}

		[Token(Token = "0x6001380")]
		[Address(RVA = "0xE409D8", Offset = "0xE409D8", VA = "0xE409D8")]
		public static string SetSpecializedText(string text, string newText, string specialization)
		{
			return null;
		}

		[Token(Token = "0x6001381")]
		[Address(RVA = "0xE40D64", Offset = "0xE40D64", VA = "0xE40D64")]
		public static string SetSpecializedText(Dictionary<string, string> specializations)
		{
			return null;
		}

		[Token(Token = "0x6001382")]
		[Address(RVA = "0xE40AF8", Offset = "0xE40AF8", VA = "0xE40AF8")]
		public static Dictionary<string, string> GetSpecializations(string text, [Optional] Dictionary<string, string> buffer)
		{
			return null;
		}

		[Token(Token = "0x6001383")]
		[Address(RVA = "0xE41120", Offset = "0xE41120", VA = "0xE41120")]
		public static void AppendSpecializations(string text, [Optional] List<string> list)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002C5")]
	public class EventCallback
	{
		[Token(Token = "0x4000FE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public MonoBehaviour Target;

		[Token(Token = "0x4000FE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string MethodName;

		[Token(Token = "0x6001385")]
		[Address(RVA = "0xE413C0", Offset = "0xE413C0", VA = "0xE413C0")]
		public void Execute([Optional] UnityEngine.Object Sender)
		{
		}

		[Token(Token = "0x6001386")]
		[Address(RVA = "0xE41424", Offset = "0xE41424", VA = "0xE41424")]
		public bool HasCallback()
		{
			return default(bool);
		}

		[Token(Token = "0x6001387")]
		[Address(RVA = "0xE414A8", Offset = "0xE414A8", VA = "0xE414A8")]
		public EventCallback()
		{
		}
	}
	[Token(Token = "0x20002C6")]
	public enum ePluralType
	{
		[Token(Token = "0x4000FE8")]
		Zero,
		[Token(Token = "0x4000FE9")]
		One,
		[Token(Token = "0x4000FEA")]
		Two,
		[Token(Token = "0x4000FEB")]
		Few,
		[Token(Token = "0x4000FEC")]
		Many,
		[Token(Token = "0x4000FED")]
		Plural
	}
	[Token(Token = "0x20002C7")]
	public static class GoogleLanguages
	{
		[Token(Token = "0x20002C8")]
		public struct LanguageCodeDef
		{
			[Token(Token = "0x4000FEF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string Code;

			[Token(Token = "0x4000FF0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public string GoogleCode;

			[Token(Token = "0x4000FF1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool HasJoinedWords;

			[Token(Token = "0x4000FF2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public int PluralRule;
		}

		[Token(Token = "0x4000FEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Dictionary<string, LanguageCodeDef> mLanguageDef;

		[Token(Token = "0x6001388")]
		[Address(RVA = "0xE41500", Offset = "0xE41500", VA = "0xE41500")]
		public static string GetLanguageCode(string Filter, bool ShowWarnings = false)
		{
			return null;
		}

		[Token(Token = "0x6001389")]
		[Address(RVA = "0xE41918", Offset = "0xE41918", VA = "0xE41918")]
		public static List<string> GetLanguagesForDropdown(string Filter, string CodesToExclude)
		{
			return null;
		}

		[Token(Token = "0x600138A")]
		[Address(RVA = "0xE417CC", Offset = "0xE417CC", VA = "0xE417CC")]
		private static bool LanguageMatchesFilter(string Language, string[] Filters)
		{
			return default(bool);
		}

		[Token(Token = "0x600138B")]
		[Address(RVA = "0xE41E98", Offset = "0xE41E98", VA = "0xE41E98")]
		public static string GetFormatedLanguageName(string Language)
		{
			return null;
		}

		[Token(Token = "0x600138C")]
		[Address(RVA = "0xE41FE4", Offset = "0xE41FE4", VA = "0xE41FE4")]
		public static string GetCodedLanguage(string Language, string code)
		{
			return null;
		}

		[Token(Token = "0x600138D")]
		[Address(RVA = "0xE420B4", Offset = "0xE420B4", VA = "0xE420B4")]
		public static void UnPackCodeFromLanguageName(string CodedLanguage, out string Language, out string code)
		{
		}

		[Token(Token = "0x600138E")]
		[Address(RVA = "0xE42214", Offset = "0xE42214", VA = "0xE42214")]
		public static string GetGoogleLanguageCode(string InternationalCode)
		{
			return null;
		}

		[Token(Token = "0x600138F")]
		[Address(RVA = "0xE42410", Offset = "0xE42410", VA = "0xE42410")]
		public static string GetLanguageName(string code, bool useParenthesesForRegion = false, bool allowDiscardRegion = true)
		{
			return null;
		}

		[Token(Token = "0x6001390")]
		[Address(RVA = "0xE42710", Offset = "0xE42710", VA = "0xE42710")]
		public static List<string> GetAllInternationalCodes()
		{
			return null;
		}

		[Token(Token = "0x6001391")]
		[Address(RVA = "0xE429A0", Offset = "0xE429A0", VA = "0xE429A0")]
		public static bool LanguageCode_HasJoinedWord(string languageCode)
		{
			return default(bool);
		}

		[Token(Token = "0x6001392")]
		[Address(RVA = "0xE42B60", Offset = "0xE42B60", VA = "0xE42B60")]
		private static int GetPluralRule(string langCode)
		{
			return default(int);
		}

		[Token(Token = "0x6001393")]
		[Address(RVA = "0xE42D40", Offset = "0xE42D40", VA = "0xE42D40")]
		public static bool LanguageHasPluralType(string langCode, string pluralType)
		{
			return default(bool);
		}

		[Token(Token = "0x6001394")]
		[Address(RVA = "0xE42EF0", Offset = "0xE42EF0", VA = "0xE42EF0")]
		public static ePluralType GetPluralType(string langCode, int n)
		{
			return default(ePluralType);
		}

		[Token(Token = "0x6001395")]
		[Address(RVA = "0xE43590", Offset = "0xE43590", VA = "0xE43590")]
		public static int GetPluralTestNumber(string langCode, ePluralType pluralType)
		{
			return default(int);
		}

		[Token(Token = "0x6001396")]
		[Address(RVA = "0xE43578", Offset = "0xE43578", VA = "0xE43578")]
		private static bool inRange(int amount, int min, int max)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20002C9")]
	public static class GoogleTranslation
	{
		[Token(Token = "0x20002CA")]
		public delegate void fnOnTranslated(string Translation, string Error);

		[Token(Token = "0x20002CB")]
		public delegate void fnOnTranslationReady(Dictionary<string, TranslationQuery> dict, string error);

		[Token(Token = "0x20002CD")]
		[CompilerGenerated]
		private sealed class <WaitForTranslations>d__11 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000FF9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000FFA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x17000289")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60013C1")]
				[Address(RVA = "0xE4CD48", Offset = "0xE4CD48", VA = "0xE4CD48", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700028A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60013C3")]
				[Address(RVA = "0xE4CD90", Offset = "0xE4CD90", VA = "0xE4CD90", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60013BE")]
			[Address(RVA = "0xE4AAD4", Offset = "0xE4AAD4", VA = "0xE4AAD4")]
			[DebuggerHidden]
			public <WaitForTranslations>d__11(int <>1__state)
			{
			}

			[Token(Token = "0x60013BF")]
			[Address(RVA = "0xE4CBC0", Offset = "0xE4CBC0", VA = "0xE4CBC0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60013C0")]
			[Address(RVA = "0xE4CBC4", Offset = "0xE4CBC4", VA = "0xE4CBC4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60013C2")]
			[Address(RVA = "0xE4CD50", Offset = "0xE4CD50", VA = "0xE4CD50", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000FF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static List<UnityWebRequest> mCurrentTranslations;

		[Token(Token = "0x4000FF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static List<TranslationJob> mTranslationJobs;

		[Token(Token = "0x6001398")]
		[Address(RVA = "0xE49344", Offset = "0xE49344", VA = "0xE49344")]
		public static bool CanTranslate()
		{
			return default(bool);
		}

		[Token(Token = "0x6001399")]
		[Address(RVA = "0xE4957C", Offset = "0xE4957C", VA = "0xE4957C")]
		public static void Translate(string text, string LanguageCodeFrom, string LanguageCodeTo, fnOnTranslated OnTranslationReady)
		{
		}

		[Token(Token = "0x600139A")]
		[Address(RVA = "0xE49CD4", Offset = "0xE49CD4", VA = "0xE49CD4")]
		public static string ForceTranslate(string text, string LanguageCodeFrom, string LanguageCodeTo)
		{
			return null;
		}

		[Token(Token = "0x600139B")]
		[Address(RVA = "0xE49C40", Offset = "0xE49C40", VA = "0xE49C40")]
		public static void Translate(Dictionary<string, TranslationQuery> requests, fnOnTranslationReady OnTranslationReady, bool usePOST = true)
		{
		}

		[Token(Token = "0x600139C")]
		[Address(RVA = "0xE4A3D4", Offset = "0xE4A3D4", VA = "0xE4A3D4")]
		public static bool ForceTranslate(Dictionary<string, TranslationQuery> requests, bool usePOST = true)
		{
			return default(bool);
		}

		[Token(Token = "0x600139D")]
		[Address(RVA = "0xE4A450", Offset = "0xE4A450", VA = "0xE4A450")]
		public static List<string> ConvertTranslationRequest(Dictionary<string, TranslationQuery> requests, bool encodeGET)
		{
			return null;
		}

		[Token(Token = "0x600139E")]
		[Address(RVA = "0xE4A2C0", Offset = "0xE4A2C0", VA = "0xE4A2C0")]
		private static void AddTranslationJob(TranslationJob job)
		{
		}

		[Token(Token = "0x600139F")]
		[Address(RVA = "0xE4AA74", Offset = "0xE4AA74", VA = "0xE4AA74")]
		[IteratorStateMachine(typeof(<WaitForTranslations>d__11))]
		private static IEnumerator WaitForTranslations()
		{
			return null;
		}

		[Token(Token = "0x60013A0")]
		[Address(RVA = "0xE4AAFC", Offset = "0xE4AAFC", VA = "0xE4AAFC")]
		public static string ParseTranslationResult(string html, Dictionary<string, TranslationQuery> requests)
		{
			return null;
		}

		[Token(Token = "0x60013A1")]
		[Address(RVA = "0xE4B218", Offset = "0xE4B218", VA = "0xE4B218")]
		public static bool IsTranslating()
		{
			return default(bool);
		}

		[Token(Token = "0x60013A2")]
		[Address(RVA = "0xE4B2CC", Offset = "0xE4B2CC", VA = "0xE4B2CC")]
		public static void CancelCurrentGoogleTranslations()
		{
		}

		[Token(Token = "0x60013A3")]
		[Address(RVA = "0xE49900", Offset = "0xE49900", VA = "0xE49900")]
		public static void CreateQueries(string text, string LanguageCodeFrom, string LanguageCodeTo, Dictionary<string, TranslationQuery> dict)
		{
		}

		[Token(Token = "0x60013A4")]
		[Address(RVA = "0xE4B4D4", Offset = "0xE4B4D4", VA = "0xE4B4D4")]
		private static void CreateQueries_Plurals(string text, string LanguageCodeFrom, string LanguageCodeTo, Dictionary<string, TranslationQuery> dict)
		{
		}

		[Token(Token = "0x60013A5")]
		[Address(RVA = "0xE49E8C", Offset = "0xE49E8C", VA = "0xE49E8C")]
		public static void AddQuery(string text, string LanguageCodeFrom, string LanguageCodeTo, Dictionary<string, TranslationQuery> dict)
		{
		}

		[Token(Token = "0x60013A6")]
		[Address(RVA = "0xE4BF60", Offset = "0xE4BF60", VA = "0xE4BF60")]
		private static string GetTranslation(string text, string LanguageCodeTo, Dictionary<string, TranslationQuery> dict)
		{
			return null;
		}

		[Token(Token = "0x60013A7")]
		[Address(RVA = "0xE4AF98", Offset = "0xE4AF98", VA = "0xE4AF98")]
		private static TranslationQuery FindQueryFromOrigText(string origText, Dictionary<string, TranslationQuery> dict)
		{
			return default(TranslationQuery);
		}

		[Token(Token = "0x60013A8")]
		[Address(RVA = "0xE4B724", Offset = "0xE4B724", VA = "0xE4B724")]
		public static bool HasParameters(string text)
		{
			return default(bool);
		}

		[Token(Token = "0x60013A9")]
		[Address(RVA = "0xE4B8F8", Offset = "0xE4B8F8", VA = "0xE4B8F8")]
		public static string GetPluralParameter(string text, bool forceTag)
		{
			return null;
		}

		[Token(Token = "0x60013AA")]
		[Address(RVA = "0xE4B7C0", Offset = "0xE4B7C0", VA = "0xE4B7C0")]
		public static string GetPluralText(string text, string pluralType)
		{
			return null;
		}

		[Token(Token = "0x60013AB")]
		[Address(RVA = "0xE4C060", Offset = "0xE4C060", VA = "0xE4C060")]
		private static int FindClosingTag(string tag, MatchCollection matches, int startIndex)
		{
			return default(int);
		}

		[Token(Token = "0x60013AC")]
		[Address(RVA = "0xE4B168", Offset = "0xE4B168", VA = "0xE4B168")]
		private static string GetGoogleNoTranslateTag(int tagNumber)
		{
			return null;
		}

		[Token(Token = "0x60013AD")]
		[Address(RVA = "0xE4B9E8", Offset = "0xE4B9E8", VA = "0xE4B9E8")]
		private static void ParseNonTranslatableElements(ref TranslationQuery query)
		{
		}

		[Token(Token = "0x60013AE")]
		[Address(RVA = "0xE4A1A8", Offset = "0xE4A1A8", VA = "0xE4A1A8")]
		public static string GetQueryResult(string text, string LanguageCodeTo, Dictionary<string, TranslationQuery> dict)
		{
			return null;
		}

		[Token(Token = "0x60013AF")]
		[Address(RVA = "0xE4C128", Offset = "0xE4C128", VA = "0xE4C128")]
		public static string RebuildTranslation(string text, Dictionary<string, TranslationQuery> dict, string LanguageCodeTo)
		{
			return null;
		}

		[Token(Token = "0x60013B0")]
		[Address(RVA = "0xE4C440", Offset = "0xE4C440", VA = "0xE4C440")]
		private static string RebuildTranslation_Plural(string text, Dictionary<string, TranslationQuery> dict, string LanguageCodeTo)
		{
			return null;
		}

		[Token(Token = "0x60013B1")]
		[Address(RVA = "0xE4C7A8", Offset = "0xE4C7A8", VA = "0xE4C7A8")]
		public static string UppercaseFirst(string s)
		{
			return null;
		}

		[Token(Token = "0x60013B2")]
		[Address(RVA = "0xE4A9C0", Offset = "0xE4A9C0", VA = "0xE4A9C0")]
		public static string TitleCase(string s)
		{
			return null;
		}
	}
	[Token(Token = "0x20002CE")]
	public struct TranslationQuery
	{
		[Token(Token = "0x4000FFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string OrigText;

		[Token(Token = "0x4000FFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string Text;

		[Token(Token = "0x4000FFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string LanguageCode;

		[Token(Token = "0x4000FFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string[] TargetLanguagesCode;

		[Token(Token = "0x4000FFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string[] Results;

		[Token(Token = "0x4001000")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string[] Tags;
	}
	[Token(Token = "0x20002CF")]
	public class TranslationJob : IDisposable
	{
		[Token(Token = "0x20002D0")]
		public enum eJobState
		{
			[Token(Token = "0x4001003")]
			Running,
			[Token(Token = "0x4001004")]
			Succeeded,
			[Token(Token = "0x4001005")]
			Failed
		}

		[Token(Token = "0x4001001")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public eJobState mJobState;

		[Token(Token = "0x60013C4")]
		[Address(RVA = "0xE4CD98", Offset = "0xE4CD98", VA = "0xE4CD98", Slot = "5")]
		public virtual eJobState GetState()
		{
			return default(eJobState);
		}

		[Token(Token = "0x60013C5")]
		[Address(RVA = "0xE4CDA0", Offset = "0xE4CDA0", VA = "0xE4CDA0", Slot = "6")]
		public virtual void Dispose()
		{
		}

		[Token(Token = "0x60013C6")]
		[Address(RVA = "0xE4CDA4", Offset = "0xE4CDA4", VA = "0xE4CDA4")]
		public TranslationJob()
		{
		}
	}
	[Token(Token = "0x20002D1")]
	public class TranslationJob_WWW : TranslationJob
	{
		[Token(Token = "0x4001006")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UnityWebRequest www;

		[Token(Token = "0x60013C7")]
		[Address(RVA = "0xE4CDAC", Offset = "0xE4CDAC", VA = "0xE4CDAC", Slot = "6")]
		public override void Dispose()
		{
		}

		[Token(Token = "0x60013C8")]
		[Address(RVA = "0xE4CDD0", Offset = "0xE4CDD0", VA = "0xE4CDD0")]
		public TranslationJob_WWW()
		{
		}
	}
	[Token(Token = "0x20002D2")]
	public class TranslationJob_GET : TranslationJob_WWW
	{
		[Token(Token = "0x4001007")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Dictionary<string, TranslationQuery> _requests;

		[Token(Token = "0x4001008")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GoogleTranslation.fnOnTranslationReady _OnTranslationReady;

		[Token(Token = "0x4001009")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<string> mQueries;

		[Token(Token = "0x400100A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string mErrorMessage;

		[Token(Token = "0x60013C9")]
		[Address(RVA = "0xE4CDD8", Offset = "0xE4CDD8", VA = "0xE4CDD8")]
		public TranslationJob_GET(Dictionary<string, TranslationQuery> requests, GoogleTranslation.fnOnTranslationReady OnTranslationReady)
		{
		}

		[Token(Token = "0x60013CA")]
		[Address(RVA = "0xE4CE64", Offset = "0xE4CE64", VA = "0xE4CE64")]
		private void ExecuteNextQuery()
		{
		}

		[Token(Token = "0x60013CB")]
		[Address(RVA = "0xE4CF84", Offset = "0xE4CF84", VA = "0xE4CF84", Slot = "5")]
		public override eJobState GetState()
		{
			return default(eJobState);
		}

		[Token(Token = "0x60013CC")]
		[Address(RVA = "0xE4D024", Offset = "0xE4D024", VA = "0xE4D024")]
		public void ProcessResult(byte[] bytes, string errorMsg)
		{
		}
	}
	[Token(Token = "0x20002D3")]
	public class TranslationJob_Main : TranslationJob
	{
		[Token(Token = "0x400100B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private TranslationJob_WEB mWeb;

		[Token(Token = "0x400100C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private TranslationJob_POST mPost;

		[Token(Token = "0x400100D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TranslationJob_GET mGet;

		[Token(Token = "0x400100E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Dictionary<string, TranslationQuery> _requests;

		[Token(Token = "0x400100F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private GoogleTranslation.fnOnTranslationReady _OnTranslationReady;

		[Token(Token = "0x4001010")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string mErrorMessage;

		[Token(Token = "0x60013CD")]
		[Address(RVA = "0xE4A124", Offset = "0xE4A124", VA = "0xE4A124")]
		public TranslationJob_Main(Dictionary<string, TranslationQuery> requests, GoogleTranslation.fnOnTranslationReady OnTranslationReady)
		{
		}

		[Token(Token = "0x60013CE")]
		[Address(RVA = "0xE4D2A4", Offset = "0xE4D2A4", VA = "0xE4D2A4", Slot = "5")]
		public override eJobState GetState()
		{
			return default(eJobState);
		}

		[Token(Token = "0x60013CF")]
		[Address(RVA = "0xE4D460", Offset = "0xE4D460", VA = "0xE4D460", Slot = "6")]
		public override void Dispose()
		{
		}
	}
	[Token(Token = "0x20002D4")]
	public class TranslationJob_POST : TranslationJob_WWW
	{
		[Token(Token = "0x4001011")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Dictionary<string, TranslationQuery> _requests;

		[Token(Token = "0x4001012")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GoogleTranslation.fnOnTranslationReady _OnTranslationReady;

		[Token(Token = "0x60013D0")]
		[Address(RVA = "0xE4D124", Offset = "0xE4D124", VA = "0xE4D124")]
		public TranslationJob_POST(Dictionary<string, TranslationQuery> requests, GoogleTranslation.fnOnTranslationReady OnTranslationReady)
		{
		}

		[Token(Token = "0x60013D1")]
		[Address(RVA = "0xE4D4A8", Offset = "0xE4D4A8", VA = "0xE4D4A8", Slot = "5")]
		public override eJobState GetState()
		{
			return default(eJobState);
		}

		[Token(Token = "0x60013D2")]
		[Address(RVA = "0xE4D534", Offset = "0xE4D534", VA = "0xE4D534")]
		public void ProcessResult(byte[] bytes, string errorMsg)
		{
		}
	}
	[Token(Token = "0x20002D5")]
	public class TranslationJob_WEB : TranslationJob_WWW
	{
		[Token(Token = "0x4001013")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Dictionary<string, TranslationQuery> _requests;

		[Token(Token = "0x4001014")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GoogleTranslation.fnOnTranslationReady _OnTranslationReady;

		[Token(Token = "0x4001015")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string mErrorMessage;

		[Token(Token = "0x4001016")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string mCurrentBatch_ToLanguageCode;

		[Token(Token = "0x4001017")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private string mCurrentBatch_FromLanguageCode;

		[Token(Token = "0x4001018")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<string> mCurrentBatch_Text;

		[Token(Token = "0x4001019")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private List<KeyValuePair<string, string>> mQueries;

		[Token(Token = "0x60013D3")]
		[Address(RVA = "0xE4D61C", Offset = "0xE4D61C", VA = "0xE4D61C")]
		public TranslationJob_WEB(Dictionary<string, TranslationQuery> requests, GoogleTranslation.fnOnTranslationReady OnTranslationReady)
		{
		}

		[Token(Token = "0x60013D4")]
		[Address(RVA = "0xE4D654", Offset = "0xE4D654", VA = "0xE4D654")]
		private void FindAllQueries()
		{
		}

		[Token(Token = "0x60013D5")]
		[Address(RVA = "0xE4DA18", Offset = "0xE4DA18", VA = "0xE4DA18")]
		private void ExecuteNextBatch()
		{
		}

		[Token(Token = "0x60013D6")]
		[Address(RVA = "0xE4DDA0", Offset = "0xE4DDA0", VA = "0xE4DDA0", Slot = "5")]
		public override eJobState GetState()
		{
			return default(eJobState);
		}

		[Token(Token = "0x60013D7")]
		[Address(RVA = "0xE4DE40", Offset = "0xE4DE40", VA = "0xE4DE40")]
		public void ProcessResult(byte[] bytes, string errorMsg)
		{
		}

		[Token(Token = "0x60013D8")]
		[Address(RVA = "0xE4DF5C", Offset = "0xE4DF5C", VA = "0xE4DF5C")]
		private string ParseTranslationResult(string html, string OriginalText)
		{
			return null;
		}
	}
	[Token(Token = "0x20002D7")]
	public enum eLanguageDataFlags
	{
		[Token(Token = "0x400101F")]
		DISABLED = 1,
		[Token(Token = "0x4001020")]
		KEEP_LOADED = 2,
		[Token(Token = "0x4001021")]
		NOT_LOADED = 4
	}
	[Serializable]
	[Token(Token = "0x20002D8")]
	public class LanguageData
	{
		[Token(Token = "0x4001022")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string Name;

		[Token(Token = "0x4001023")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string Code;

		[Token(Token = "0x4001024")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public byte Flags;

		[NonSerialized]
		[Token(Token = "0x4001025")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public bool Compressed;

		[Token(Token = "0x60013DE")]
		[Address(RVA = "0xE4E62C", Offset = "0xE4E62C", VA = "0xE4E62C")]
		public bool IsEnabled()
		{
			return default(bool);
		}

		[Token(Token = "0x60013DF")]
		[Address(RVA = "0xE4E63C", Offset = "0xE4E63C", VA = "0xE4E63C")]
		public void SetEnabled(bool bEnabled)
		{
		}

		[Token(Token = "0x60013E0")]
		[Address(RVA = "0xE4E658", Offset = "0xE4E658", VA = "0xE4E658")]
		public bool IsLoaded()
		{
			return default(bool);
		}

		[Token(Token = "0x60013E1")]
		[Address(RVA = "0xE4E668", Offset = "0xE4E668", VA = "0xE4E668")]
		public bool CanBeUnloaded()
		{
			return default(bool);
		}

		[Token(Token = "0x60013E2")]
		[Address(RVA = "0xE4E678", Offset = "0xE4E678", VA = "0xE4E678")]
		public void SetLoaded(bool loaded)
		{
		}

		[Token(Token = "0x60013E3")]
		[Address(RVA = "0xE4E694", Offset = "0xE4E694", VA = "0xE4E694")]
		public void SetCanBeUnLoaded(bool allowUnloading)
		{
		}

		[Token(Token = "0x60013E4")]
		[Address(RVA = "0xE4E6B0", Offset = "0xE4E6B0", VA = "0xE4E6B0")]
		public LanguageData()
		{
		}
	}
	[Token(Token = "0x20002D9")]
	[ExecuteInEditMode]
	[AddComponentMenu("I2/Localization/Source")]
	public class LanguageSource : MonoBehaviour, ISerializationCallbackReceiver, ILanguageSource
	{
		[Token(Token = "0x20002DA")]
		public delegate void fnOnSourceUpdated(LanguageSourceData source, bool ReceivedNewData, string errorMsg);

		[Token(Token = "0x4001026")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LanguageSourceData mSource;

		[Token(Token = "0x4001027")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int version;

		[Token(Token = "0x4001028")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool NeverDestroy;

		[Token(Token = "0x4001029")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
		public bool UserAgreesToHaveItOnTheScene;

		[Token(Token = "0x400102A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x26")]
		public bool UserAgreesToHaveItInsideThePluginsFolder;

		[Token(Token = "0x400102B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x27")]
		public bool GoogleLiveSyncIsUptoDate;

		[Token(Token = "0x400102C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<UnityEngine.Object> Assets;

		[Token(Token = "0x400102D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string Google_WebServiceURL;

		[Token(Token = "0x400102E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string Google_SpreadsheetKey;

		[Token(Token = "0x400102F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string Google_SpreadsheetName;

		[Token(Token = "0x4001030")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string Google_LastUpdatedVersion;

		[Token(Token = "0x4001031")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public LanguageSourceData.eGoogleUpdateFrequency GoogleUpdateFrequency;

		[Token(Token = "0x4001032")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float GoogleUpdateDelay;

		[Token(Token = "0x4001034")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public List<LanguageData> mLanguages;

		[Token(Token = "0x4001035")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public bool IgnoreDeviceLanguage;

		[Token(Token = "0x4001036")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public LanguageSourceData.eAllowUnloadLanguages _AllowUnloadingLanguages;

		[Token(Token = "0x4001037")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public List<TermData> mTerms;

		[Token(Token = "0x4001038")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public bool CaseInsensitiveTerms;

		[Token(Token = "0x4001039")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public LanguageSourceData.MissingTranslationAction OnMissingTranslation;

		[Token(Token = "0x400103A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public string mTerm_AppName;

		[Token(Token = "0x1700028B")]
		public LanguageSourceData SourceData
		{
			[Token(Token = "0x60013E5")]
			[Address(RVA = "0xE4E6B8", Offset = "0xE4E6B8", VA = "0xE4E6B8", Slot = "6")]
			get
			{
				return null;
			}
			[Token(Token = "0x60013E6")]
			[Address(RVA = "0xE4E6C0", Offset = "0xE4E6C0", VA = "0xE4E6C0", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x14000047")]
		public event fnOnSourceUpdated Event_OnSourceUpdateFromGoogle
		{
			[Token(Token = "0x60013E7")]
			[Address(RVA = "0xE4E6C8", Offset = "0xE4E6C8", VA = "0xE4E6C8")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x60013E8")]
			[Address(RVA = "0xE4E764", Offset = "0xE4E764", VA = "0xE4E764")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x60013E9")]
		[Address(RVA = "0xE4E800", Offset = "0xE4E800", VA = "0xE4E800")]
		private void Awake()
		{
		}

		[Token(Token = "0x60013EA")]
		[Address(RVA = "0xE4E890", Offset = "0xE4E890", VA = "0xE4E890")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60013EB")]
		[Address(RVA = "0xE4E904", Offset = "0xE4E904", VA = "0xE4E904")]
		public string GetSourceName()
		{
			return null;
		}

		[Token(Token = "0x60013EC")]
		[Address(RVA = "0xE4E9F4", Offset = "0xE4E9F4", VA = "0xE4E9F4", Slot = "4")]
		public void OnBeforeSerialize()
		{
		}

		[Token(Token = "0x60013ED")]
		[Address(RVA = "0xE4EA00", Offset = "0xE4EA00", VA = "0xE4EA00", Slot = "5")]
		public void OnAfterDeserialize()
		{
		}

		[Token(Token = "0x60013EE")]
		[Address(RVA = "0xE4F0A4", Offset = "0xE4F0A4", VA = "0xE4F0A4")]
		public LanguageSource()
		{
		}
	}
	[Token(Token = "0x20002DB")]
	[CreateAssetMenu(fileName = "I2Languages", menuName = "I2 Localization/LanguageSource", order = 1)]
	public class LanguageSourceAsset : ScriptableObject, ILanguageSource
	{
		[Token(Token = "0x400103B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LanguageSourceData mSource;

		[Token(Token = "0x1700028C")]
		public LanguageSourceData SourceData
		{
			[Token(Token = "0x60013F3")]
			[Address(RVA = "0xE4F3E0", Offset = "0xE4F3E0", VA = "0xE4F3E0", Slot = "4")]
			get
			{
				return null;
			}
			[Token(Token = "0x60013F4")]
			[Address(RVA = "0xE4F3E8", Offset = "0xE4F3E8", VA = "0xE4F3E8", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x60013F5")]
		[Address(RVA = "0xE4F3F0", Offset = "0xE4F3F0", VA = "0xE4F3F0")]
		public LanguageSourceAsset()
		{
		}
	}
	[Token(Token = "0x20002DC")]
	public interface ILanguageSource
	{
		[Token(Token = "0x1700028D")]
		LanguageSourceData SourceData
		{
			[Token(Token = "0x60013F6")]
			get;
			[Token(Token = "0x60013F7")]
			set;
		}
	}
	[Serializable]
	[Token(Token = "0x20002DD")]
	[ExecuteInEditMode]
	public class LanguageSourceData
	{
		[Token(Token = "0x20002DE")]
		public enum MissingTranslationAction
		{
			[Token(Token = "0x4001058")]
			Empty,
			[Token(Token = "0x4001059")]
			Fallback,
			[Token(Token = "0x400105A")]
			ShowWarning,
			[Token(Token = "0x400105B")]
			ShowTerm
		}

		[Token(Token = "0x20002DF")]
		public enum eAllowUnloadLanguages
		{
			[Token(Token = "0x400105D")]
			Never,
			[Token(Token = "0x400105E")]
			OnlyInDevice,
			[Token(Token = "0x400105F")]
			EditorAndDevice
		}

		[Token(Token = "0x20002E0")]
		public enum eGoogleUpdateFrequency
		{
			[Token(Token = "0x4001061")]
			Always,
			[Token(Token = "0x4001062")]
			Never,
			[Token(Token = "0x4001063")]
			Daily,
			[Token(Token = "0x4001064")]
			Weekly,
			[Token(Token = "0x4001065")]
			Monthly,
			[Token(Token = "0x4001066")]
			OnlyOnce,
			[Token(Token = "0x4001067")]
			EveryOtherDay
		}

		[Token(Token = "0x20002E1")]
		public enum eGoogleUpdateSynchronization
		{
			[Token(Token = "0x4001069")]
			Manual,
			[Token(Token = "0x400106A")]
			OnSceneLoaded,
			[Token(Token = "0x400106B")]
			AsSoonAsDownloaded
		}

		[Token(Token = "0x20002E3")]
		[CompilerGenerated]
		private sealed class <Import_Google_Coroutine>d__65 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001073")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001074")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001075")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public LanguageSourceData <>4__this;

			[Token(Token = "0x4001076")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool JustCheck;

			[Token(Token = "0x4001077")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private UnityWebRequest <www>5__2;

			[Token(Token = "0x1700028F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001452")]
				[Address(RVA = "0xE57B70", Offset = "0xE57B70", VA = "0xE57B70", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000290")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001454")]
				[Address(RVA = "0xE57BB8", Offset = "0xE57BB8", VA = "0xE57BB8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600144F")]
			[Address(RVA = "0xE55308", Offset = "0xE55308", VA = "0xE55308")]
			[DebuggerHidden]
			public <Import_Google_Coroutine>d__65(int <>1__state)
			{
			}

			[Token(Token = "0x6001450")]
			[Address(RVA = "0xE578B0", Offset = "0xE578B0", VA = "0xE578B0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001451")]
			[Address(RVA = "0xE578B4", Offset = "0xE578B4", VA = "0xE578B4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001453")]
			[Address(RVA = "0xE57B78", Offset = "0xE57B78", VA = "0xE57B78", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[NonSerialized]
		[Token(Token = "0x400103C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ILanguageSource owner;

		[Token(Token = "0x400103D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool UserAgreesToHaveItOnTheScene;

		[Token(Token = "0x400103E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool UserAgreesToHaveItInsideThePluginsFolder;

		[Token(Token = "0x400103F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		public bool GoogleLiveSyncIsUptoDate;

		[NonSerialized]
		[Token(Token = "0x4001040")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
		public bool mIsGlobalSource;

		[Token(Token = "0x4001041")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<TermData> mTerms;

		[Token(Token = "0x4001042")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool CaseInsensitiveTerms;

		[NonSerialized]
		[Token(Token = "0x4001043")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Dictionary<string, TermData> mDictionary;

		[Token(Token = "0x4001044")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public MissingTranslationAction OnMissingTranslation;

		[Token(Token = "0x4001045")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string mTerm_AppName;

		[Token(Token = "0x4001046")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public List<LanguageData> mLanguages;

		[Token(Token = "0x4001047")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public bool IgnoreDeviceLanguage;

		[Token(Token = "0x4001048")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public eAllowUnloadLanguages _AllowUnloadingLanguages;

		[Token(Token = "0x4001049")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public string Google_WebServiceURL;

		[Token(Token = "0x400104A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public string Google_SpreadsheetKey;

		[Token(Token = "0x400104B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public string Google_SpreadsheetName;

		[Token(Token = "0x400104C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public string Google_LastUpdatedVersion;

		[Token(Token = "0x400104D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public eGoogleUpdateFrequency GoogleUpdateFrequency;

		[Token(Token = "0x400104E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public eGoogleUpdateFrequency GoogleInEditorCheckFrequency;

		[Token(Token = "0x400104F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public eGoogleUpdateSynchronization GoogleUpdateSynchronization;

		[Token(Token = "0x4001050")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public float GoogleUpdateDelay;

		[Token(Token = "0x4001052")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public List<UnityEngine.Object> Assets;

		[NonSerialized]
		[Token(Token = "0x4001053")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public Dictionary<string, UnityEngine.Object> mAssetDictionary;

		[Token(Token = "0x4001054")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private string mDelayedGoogleData;

		[Token(Token = "0x4001055")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static string EmptyCategory;

		[Token(Token = "0x4001056")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static char[] CategorySeparators;

		[Token(Token = "0x1700028E")]
		public UnityEngine.Object ownerObject
		{
			[Token(Token = "0x60013F8")]
			[Address(RVA = "0xE4F454", Offset = "0xE4F454", VA = "0xE4F454")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x14000048")]
		public event LanguageSource.fnOnSourceUpdated Event_OnSourceUpdateFromGoogle
		{
			[Token(Token = "0x60013F9")]
			[Address(RVA = "0xE4F008", Offset = "0xE4F008", VA = "0xE4F008")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x60013FA")]
			[Address(RVA = "0xE4F4D0", Offset = "0xE4F4D0", VA = "0xE4F4D0")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x60013FB")]
		[Address(RVA = "0xE4E820", Offset = "0xE4E820", VA = "0xE4E820")]
		public void Awake()
		{
		}

		[Token(Token = "0x60013FC")]
		[Address(RVA = "0xE4E8B0", Offset = "0xE4E8B0", VA = "0xE4E8B0")]
		public void OnDestroy()
		{
		}

		[Token(Token = "0x60013FD")]
		[Address(RVA = "0xE4FFF0", Offset = "0xE4FFF0", VA = "0xE4FFF0")]
		public bool IsEqualTo(LanguageSourceData Source)
		{
			return default(bool);
		}

		[Token(Token = "0x60013FE")]
		[Address(RVA = "0xE50558", Offset = "0xE50558", VA = "0xE50558")]
		internal bool ManagerHasASimilarSource()
		{
			return default(bool);
		}

		[Token(Token = "0x60013FF")]
		[Address(RVA = "0xE50660", Offset = "0xE50660", VA = "0xE50660")]
		public void ClearAllData()
		{
		}

		[Token(Token = "0x6001400")]
		[Address(RVA = "0xE50744", Offset = "0xE50744", VA = "0xE50744")]
		public bool IsGlobalSource()
		{
			return default(bool);
		}

		[Token(Token = "0x6001401")]
		[Address(RVA = "0xE5074C", Offset = "0xE5074C", VA = "0xE5074C")]
		public void Editor_SetDirty()
		{
		}

		[Token(Token = "0x6001402")]
		[Address(RVA = "0xE4FAB8", Offset = "0xE4FAB8", VA = "0xE4FAB8")]
		public void UpdateAssetDictionary()
		{
		}

		[Token(Token = "0x6001403")]
		[Address(RVA = "0xE50750", Offset = "0xE50750", VA = "0xE50750")]
		public UnityEngine.Object FindAsset(string Name)
		{
			return null;
		}

		[Token(Token = "0x6001404")]
		[Address(RVA = "0xE50824", Offset = "0xE50824", VA = "0xE50824")]
		public bool HasAsset(UnityEngine.Object Obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6001405")]
		[Address(RVA = "0xE5087C", Offset = "0xE5087C", VA = "0xE5087C")]
		public void AddAsset(UnityEngine.Object Obj)
		{
		}

		[Token(Token = "0x6001406")]
		[Address(RVA = "0xE5095C", Offset = "0xE5095C", VA = "0xE5095C")]
		public string Export_I2CSV(string Category, char Separator = ',', bool specializationsAsRows = true)
		{
			return null;
		}

		[Token(Token = "0x6001407")]
		[Address(RVA = "0xE51084", Offset = "0xE51084", VA = "0xE51084")]
		private static void AppendI2Term(StringBuilder Builder, int nLanguages, string Term, TermData termData, char Separator, string forceSpecialization)
		{
		}

		[Token(Token = "0x6001408")]
		[Address(RVA = "0xE512E0", Offset = "0xE512E0", VA = "0xE512E0")]
		private static void AppendI2Text(StringBuilder Builder, string text)
		{
		}

		[Token(Token = "0x6001409")]
		[Address(RVA = "0xE513B4", Offset = "0xE513B4", VA = "0xE513B4")]
		private string Export_Language_to_Cache(int langIndex, bool fillTermWithFallback)
		{
			return null;
		}

		[Token(Token = "0x600140A")]
		[Address(RVA = "0xE518C4", Offset = "0xE518C4", VA = "0xE518C4")]
		public string Export_CSV(string Category, char Separator = ',', bool specializationsAsRows = true)
		{
			return null;
		}

		[Token(Token = "0x600140B")]
		[Address(RVA = "0xE5220C", Offset = "0xE5220C", VA = "0xE5220C")]
		private static void AppendTerm(StringBuilder Builder, int nLanguages, string Term, TermData termData, string specialization, char Separator)
		{
		}

		[Token(Token = "0x600140C")]
		[Address(RVA = "0xE520A8", Offset = "0xE520A8", VA = "0xE520A8")]
		private static void AppendString(StringBuilder Builder, string Text, char Separator)
		{
		}

		[Token(Token = "0x600140D")]
		[Address(RVA = "0xE5246C", Offset = "0xE5246C", VA = "0xE5246C")]
		private static void AppendTranslation(StringBuilder Builder, string Text, char Separator, string tags)
		{
		}

		[Token(Token = "0x600140E")]
		[Address(RVA = "0xE525E8", Offset = "0xE525E8", VA = "0xE525E8")]
		public UnityWebRequest Export_Google_CreateWWWcall(eSpreadsheetUpdateMode UpdateMode = eSpreadsheetUpdateMode.Replace)
		{
			return null;
		}

		[Token(Token = "0x600140F")]
		[Address(RVA = "0xE527AC", Offset = "0xE527AC", VA = "0xE527AC")]
		private string Export_Google_CreateData()
		{
			return null;
		}

		[Token(Token = "0x6001410")]
		[Address(RVA = "0xE52C80", Offset = "0xE52C80", VA = "0xE52C80")]
		public string Import_CSV(string Category, string CSVstring, eSpreadsheetUpdateMode UpdateMode = eSpreadsheetUpdateMode.Replace, char Separator = ',')
		{
			return null;
		}

		[Token(Token = "0x6001411")]
		[Address(RVA = "0xE53980", Offset = "0xE53980", VA = "0xE53980")]
		public string Import_I2CSV(string Category, string I2CSVstring, eSpreadsheetUpdateMode UpdateMode = eSpreadsheetUpdateMode.Replace)
		{
			return null;
		}

		[Token(Token = "0x6001412")]
		[Address(RVA = "0xE52DE0", Offset = "0xE52DE0", VA = "0xE52DE0")]
		public string Import_CSV(string Category, List<string[]> CSV, eSpreadsheetUpdateMode UpdateMode = eSpreadsheetUpdateMode.Replace)
		{
			return null;
		}

		[Token(Token = "0x6001413")]
		[Address(RVA = "0xE53BC8", Offset = "0xE53BC8", VA = "0xE53BC8")]
		private bool ArrayContains(string MainText, params string[] texts)
		{
			return default(bool);
		}

		[Token(Token = "0x6001414")]
		[Address(RVA = "0xE53F40", Offset = "0xE53F40", VA = "0xE53F40")]
		public static eTermType GetTermType(string type)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6001415")]
		[Address(RVA = "0xE54188", Offset = "0xE54188", VA = "0xE54188")]
		private void Import_Language_from_Cache(int langIndex, string langData, bool useFallback, bool onlyCurrentSpecialization)
		{
		}

		[Token(Token = "0x6001416")]
		[Address(RVA = "0xE543B8", Offset = "0xE543B8", VA = "0xE543B8")]
		public static void FreeUnusedLanguages()
		{
		}

		[Token(Token = "0x6001417")]
		[Address(RVA = "0xE5455C", Offset = "0xE5455C", VA = "0xE5455C")]
		public void Import_Google_FromCache()
		{
		}

		[Token(Token = "0x6001418")]
		[Address(RVA = "0xE54970", Offset = "0xE54970", VA = "0xE54970")]
		private bool IsNewerVersion(string currentVersion, string newVersion)
		{
			return default(bool);
		}

		[Token(Token = "0x6001419")]
		[Address(RVA = "0xE5501C", Offset = "0xE5501C", VA = "0xE5501C")]
		public void Import_Google(bool ForceUpdate, bool justCheck)
		{
		}

		[Token(Token = "0x600141A")]
		[Address(RVA = "0xE547B0", Offset = "0xE547B0", VA = "0xE547B0")]
		private string GetSourcePlayerPrefName()
		{
			return null;
		}

		[Token(Token = "0x600141B")]
		[Address(RVA = "0xE5528C", Offset = "0xE5528C", VA = "0xE5528C")]
		[IteratorStateMachine(typeof(<Import_Google_Coroutine>d__65))]
		private IEnumerator Import_Google_Coroutine(bool JustCheck)
		{
			return null;
		}

		[Token(Token = "0x600141C")]
		[Address(RVA = "0xE55330", Offset = "0xE55330", VA = "0xE55330")]
		private void ApplyDownloadedDataOnSceneLoaded(Scene scene, LoadSceneMode mode)
		{
		}

		[Token(Token = "0x600141D")]
		[Address(RVA = "0xE553DC", Offset = "0xE553DC", VA = "0xE553DC")]
		public void ApplyDownloadedDataFromGoogle()
		{
		}

		[Token(Token = "0x600141E")]
		[Address(RVA = "0xE5553C", Offset = "0xE5553C", VA = "0xE5553C")]
		public UnityWebRequest Import_Google_CreateWWWcall(bool ForceUpdate, bool justCheck)
		{
			return null;
		}

		[Token(Token = "0x600141F")]
		[Address(RVA = "0xE556A4", Offset = "0xE556A4", VA = "0xE556A4")]
		public bool HasGoogleSpreadsheet()
		{
			return default(bool);
		}

		[Token(Token = "0x6001420")]
		[Address(RVA = "0xE54A00", Offset = "0xE54A00", VA = "0xE54A00")]
		public string Import_Google_Result(string JsonString, eSpreadsheetUpdateMode UpdateMode, bool saveInPlayerPrefs = false)
		{
			return null;
		}

		[Token(Token = "0x6001421")]
		[Address(RVA = "0xE50150", Offset = "0xE50150", VA = "0xE50150")]
		public int GetLanguageIndex(string language, bool AllowDiscartingRegion = true, bool SkipDisabled = true)
		{
			return default(int);
		}

		[Token(Token = "0x6001422")]
		[Address(RVA = "0xE558F8", Offset = "0xE558F8", VA = "0xE558F8")]
		public LanguageData GetLanguageData(string language, bool AllowDiscartingRegion = true)
		{
			return null;
		}

		[Token(Token = "0x6001423")]
		[Address(RVA = "0xE55988", Offset = "0xE55988", VA = "0xE55988")]
		public bool IsCurrentLanguage(int languageIndex)
		{
			return default(bool);
		}

		[Token(Token = "0x6001424")]
		[Address(RVA = "0xE53C58", Offset = "0xE53C58", VA = "0xE53C58")]
		public int GetLanguageIndexFromCode(string Code, bool exactMatch = true, bool ignoreDisabled = false)
		{
			return default(int);
		}

		[Token(Token = "0x6001425")]
		[Address(RVA = "0xE5573C", Offset = "0xE5573C", VA = "0xE5573C")]
		public static int GetCommonWordInLanguageNames(string Language1, string Language2)
		{
			return default(int);
		}

		[Token(Token = "0x6001426")]
		[Address(RVA = "0xE55A2C", Offset = "0xE55A2C", VA = "0xE55A2C")]
		public static bool AreTheSameLanguage(string Language1, string Language2)
		{
			return default(bool);
		}

		[Token(Token = "0x6001427")]
		[Address(RVA = "0xE55AB8", Offset = "0xE55AB8", VA = "0xE55AB8")]
		public static string GetLanguageWithoutRegion(string Language)
		{
			return null;
		}

		[Token(Token = "0x6001428")]
		[Address(RVA = "0xE55B50", Offset = "0xE55B50", VA = "0xE55B50")]
		public void AddLanguage(string LanguageName)
		{
		}

		[Token(Token = "0x6001429")]
		[Address(RVA = "0xE55BC8", Offset = "0xE55BC8", VA = "0xE55BC8")]
		public void AddLanguage(string LanguageName, string LanguageCode)
		{
		}

		[Token(Token = "0x600142A")]
		[Address(RVA = "0xE55D9C", Offset = "0xE55D9C", VA = "0xE55D9C")]
		public void RemoveLanguage(string LanguageName)
		{
		}

		[Token(Token = "0x600142B")]
		[Address(RVA = "0xE56064", Offset = "0xE56064", VA = "0xE56064")]
		public List<string> GetLanguages(bool skipDisabled = true)
		{
			return null;
		}

		[Token(Token = "0x600142C")]
		[Address(RVA = "0xE561D8", Offset = "0xE561D8", VA = "0xE561D8")]
		public List<string> GetLanguagesCode(bool allowRegions = true, bool skipDisabled = true)
		{
			return null;
		}

		[Token(Token = "0x600142D")]
		[Address(RVA = "0xE563C8", Offset = "0xE563C8", VA = "0xE563C8")]
		public bool IsLanguageEnabled(string Language)
		{
			return default(bool);
		}

		[Token(Token = "0x600142E")]
		[Address(RVA = "0xE56454", Offset = "0xE56454", VA = "0xE56454")]
		public void EnableLanguage(string Language, bool bEnabled)
		{
		}

		[Token(Token = "0x600142F")]
		[Address(RVA = "0xE564F0", Offset = "0xE564F0", VA = "0xE564F0")]
		public bool AllowUnloadingLanguages()
		{
			return default(bool);
		}

		[Token(Token = "0x6001430")]
		[Address(RVA = "0xE56500", Offset = "0xE56500", VA = "0xE56500")]
		private string GetSavedLanguageFileName(int languageIndex)
		{
			return null;
		}

		[Token(Token = "0x6001431")]
		[Address(RVA = "0xE566DC", Offset = "0xE566DC", VA = "0xE566DC")]
		public void LoadLanguage(int languageIndex, bool UnloadOtherLanguages, bool useFallback, bool onlyCurrentSpecialization, bool forceLoad)
		{
		}

		[Token(Token = "0x6001432")]
		[Address(RVA = "0xE56A9C", Offset = "0xE56A9C", VA = "0xE56A9C")]
		public void LoadAllLanguages(bool forceLoad = false)
		{
		}

		[Token(Token = "0x6001433")]
		[Address(RVA = "0xE56840", Offset = "0xE56840", VA = "0xE56840")]
		public void UnloadLanguage(int languageIndex)
		{
		}

		[Token(Token = "0x6001434")]
		[Address(RVA = "0xE54070", Offset = "0xE54070", VA = "0xE54070")]
		public void SaveLanguages(bool unloadAll, PersistentStorage.eFileType fileLocation = PersistentStorage.eFileType.Temporal)
		{
		}

		[Token(Token = "0x6001435")]
		[Address(RVA = "0xE53FD8", Offset = "0xE53FD8", VA = "0xE53FD8")]
		public bool HasUnloadedLanguages()
		{
			return default(bool);
		}

		[Token(Token = "0x6001436")]
		[Address(RVA = "0xE529C0", Offset = "0xE529C0", VA = "0xE529C0")]
		public List<string> GetCategories(bool OnlyMainCategory = false, [Optional] List<string> Categories)
		{
			return null;
		}

		[Token(Token = "0x6001437")]
		[Address(RVA = "0xE56BE8", Offset = "0xE56BE8", VA = "0xE56BE8")]
		public static string GetKeyFromFullTerm(string FullTerm, bool OnlyMainCategory = false)
		{
			return null;
		}

		[Token(Token = "0x6001438")]
		[Address(RVA = "0xE56B20", Offset = "0xE56B20", VA = "0xE56B20")]
		public static string GetCategoryFromFullTerm(string FullTerm, bool OnlyMainCategory = false)
		{
			return null;
		}

		[Token(Token = "0x6001439")]
		[Address(RVA = "0xE56C94", Offset = "0xE56C94", VA = "0xE56C94")]
		public static void DeserializeFullTerm(string FullTerm, out string Key, out string Category, bool OnlyMainCategory = false)
		{
		}

		[Token(Token = "0x600143A")]
		[Address(RVA = "0xE4F7C0", Offset = "0xE4F7C0", VA = "0xE4F7C0")]
		public void UpdateDictionary(bool force = false)
		{
		}

		[Token(Token = "0x600143B")]
		[Address(RVA = "0xE56D88", Offset = "0xE56D88", VA = "0xE56D88")]
		public string GetTranslation(string term, [Optional] string overrideLanguage, [Optional] string overrideSpecialization, bool skipDisabled = false, bool allowCategoryMistmatch = false)
		{
			return null;
		}

		[Token(Token = "0x600143C")]
		[Address(RVA = "0xE56E2C", Offset = "0xE56E2C", VA = "0xE56E2C")]
		public bool TryGetTranslation(string term, out string Translation, [Optional] string overrideLanguage, [Optional] string overrideSpecialization, bool skipDisabled = false, bool allowCategoryMistmatch = false)
		{
			return default(bool);
		}

		[Token(Token = "0x600143D")]
		[Address(RVA = "0xE51664", Offset = "0xE51664", VA = "0xE51664")]
		private bool TryGetFallbackTranslation(TermData termData, out string Translation, int langIndex, [Optional] string overrideSpecialization, bool skipDisabled = false)
		{
			return default(bool);
		}

		[Token(Token = "0x600143E")]
		[Address(RVA = "0xE57060", Offset = "0xE57060", VA = "0xE57060")]
		public TermData AddTerm(string term)
		{
			return null;
		}

		[Token(Token = "0x600143F")]
		[Address(RVA = "0xE50300", Offset = "0xE50300", VA = "0xE50300")]
		public TermData GetTermData(string term, bool allowCategoryMistmatch = false)
		{
			return null;
		}

		[Token(Token = "0x6001440")]
		[Address(RVA = "0xE57288", Offset = "0xE57288", VA = "0xE57288")]
		public bool ContainsTerm(string term)
		{
			return default(bool);
		}

		[Token(Token = "0x6001441")]
		[Address(RVA = "0xE572A4", Offset = "0xE572A4", VA = "0xE572A4")]
		public List<string> GetTermsList([Optional] string Category)
		{
			return null;
		}

		[Token(Token = "0x6001442")]
		[Address(RVA = "0xE5706C", Offset = "0xE5706C", VA = "0xE5706C")]
		public TermData AddTerm(string NewTerm, eTermType termType, bool SaveSource = true)
		{
			return null;
		}

		[Token(Token = "0x6001443")]
		[Address(RVA = "0xE574F0", Offset = "0xE574F0", VA = "0xE574F0")]
		public void RemoveTerm(string term)
		{
		}

		[Token(Token = "0x6001444")]
		[Address(RVA = "0xE53DCC", Offset = "0xE53DCC", VA = "0xE53DCC")]
		public static void ValidateFullTerm(ref string Term)
		{
		}

		[Token(Token = "0x6001445")]
		[Address(RVA = "0xE4EDAC", Offset = "0xE4EDAC", VA = "0xE4EDAC")]
		public LanguageSourceData()
		{
		}
	}
	[Token(Token = "0x20002E4")]
	public enum eSpreadsheetUpdateMode
	{
		[Token(Token = "0x4001079")]
		None,
		[Token(Token = "0x400107A")]
		Replace,
		[Token(Token = "0x400107B")]
		Merge,
		[Token(Token = "0x400107C")]
		AddNewTerms
	}
	[Token(Token = "0x20002E5")]
	public class LocalizationReader
	{
		[Token(Token = "0x6001455")]
		[Address(RVA = "0xE57BC0", Offset = "0xE57BC0", VA = "0xE57BC0")]
		public static Dictionary<string, string> ReadTextAsset(TextAsset asset)
		{
			return null;
		}

		[Token(Token = "0x6001456")]
		[Address(RVA = "0xE57E40", Offset = "0xE57E40", VA = "0xE57E40")]
		public static bool TextAsset_ReadLine(string line, out string key, out string value, out string category, out string comment, out string termType)
		{
			return default(bool);
		}

		[Token(Token = "0x6001457")]
		[Address(RVA = "0xE58220", Offset = "0xE58220", VA = "0xE58220")]
		public static string ReadCSVfile(string Path, Encoding encoding)
		{
			return null;
		}

		[Token(Token = "0x6001458")]
		[Address(RVA = "0xE52CBC", Offset = "0xE52CBC", VA = "0xE52CBC")]
		public static List<string[]> ReadCSV(string Text, char Separator = ',')
		{
			return null;
		}

		[Token(Token = "0x6001459")]
		[Address(RVA = "0xE58444", Offset = "0xE58444", VA = "0xE58444")]
		private static string[] ParseCSVline(string Line, ref int iStart, char Separator)
		{
			return null;
		}

		[Token(Token = "0x600145A")]
		[Address(RVA = "0xE58630", Offset = "0xE58630", VA = "0xE58630")]
		private static void AddCSVtoken(ref List<string> list, ref string Line, int iEnd, ref int iWordStart)
		{
		}

		[Token(Token = "0x600145B")]
		[Address(RVA = "0xE539B8", Offset = "0xE539B8", VA = "0xE539B8")]
		public static List<string[]> ReadI2CSV(string Text)
		{
			return null;
		}

		[Token(Token = "0x600145C")]
		[Address(RVA = "0xE58194", Offset = "0xE58194", VA = "0xE58194")]
		public static void ValidateFullTerm(ref string Term)
		{
		}

		[Token(Token = "0x600145D")]
		[Address(RVA = "0xE587B4", Offset = "0xE587B4", VA = "0xE587B4")]
		public static string EncodeString(string str)
		{
			return null;
		}

		[Token(Token = "0x600145E")]
		[Address(RVA = "0xE580EC", Offset = "0xE580EC", VA = "0xE580EC")]
		public static string DecodeString(string str)
		{
			return null;
		}

		[Token(Token = "0x600145F")]
		[Address(RVA = "0xE588AC", Offset = "0xE588AC", VA = "0xE588AC")]
		public LocalizationReader()
		{
		}
	}
	[Token(Token = "0x20002E6")]
	[AddComponentMenu("I2/Localization/I2 Localize")]
	public class Localize : MonoBehaviour
	{
		[Token(Token = "0x20002E7")]
		public enum TermModification
		{
			[Token(Token = "0x400109E")]
			DontModify,
			[Token(Token = "0x400109F")]
			ToUpper,
			[Token(Token = "0x40010A0")]
			ToLower,
			[Token(Token = "0x40010A1")]
			ToUpperFirst,
			[Token(Token = "0x40010A2")]
			ToTitle
		}

		[Token(Token = "0x400107D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string mTerm;

		[Token(Token = "0x400107E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string mTermSecondary;

		[NonSerialized]
		[Token(Token = "0x400107F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string FinalTerm;

		[NonSerialized]
		[Token(Token = "0x4001080")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string FinalSecondaryTerm;

		[Token(Token = "0x4001081")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public TermModification PrimaryTermModifier;

		[Token(Token = "0x4001082")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public TermModification SecondaryTermModifier;

		[Token(Token = "0x4001083")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string TermPrefix;

		[Token(Token = "0x4001084")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string TermSuffix;

		[Token(Token = "0x4001085")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public bool LocalizeOnAwake;

		[Token(Token = "0x4001086")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private string LastLocalizedLanguage;

		[Token(Token = "0x4001087")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public bool IgnoreRTL;

		[Token(Token = "0x4001088")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public int MaxCharactersInRTL;

		[Token(Token = "0x4001089")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public bool IgnoreNumbersInRTL;

		[Token(Token = "0x400108A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
		public bool CorrectAlignmentForRTL;

		[Token(Token = "0x400108B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6A")]
		public bool AddSpacesToJoinedLanguages;

		[Token(Token = "0x400108C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6B")]
		public bool AllowLocalizedParameters;

		[Token(Token = "0x400108D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public bool AllowParameters;

		[Token(Token = "0x400108E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public List<UnityEngine.Object> TranslatedObjects;

		[NonSerialized]
		[Token(Token = "0x400108F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Dictionary<string, UnityEngine.Object> mAssetDictionary;

		[Token(Token = "0x4001090")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public UnityEvent LocalizeEvent;

		[Token(Token = "0x4001091")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static string MainTranslation;

		[Token(Token = "0x4001092")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static string SecondaryTranslation;

		[Token(Token = "0x4001093")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static string CallBackTerm;

		[Token(Token = "0x4001094")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static string CallBackSecondaryTerm;

		[Token(Token = "0x4001095")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static Localize CurrentLocalizeComponent;

		[Token(Token = "0x4001096")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public bool AlwaysForceLocalize;

		[Token(Token = "0x4001097")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		public EventCallback LocalizeCallBack;

		[Token(Token = "0x4001098")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public bool mGUI_ShowReferences;

		[Token(Token = "0x4001099")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x99")]
		public bool mGUI_ShowTems;

		[Token(Token = "0x400109A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9A")]
		public bool mGUI_ShowCallback;

		[Token(Token = "0x400109B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public ILocalizeTarget mLocalizeTarget;

		[Token(Token = "0x400109C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public string mLocalizeTargetName;

		[Token(Token = "0x17000291")]
		public string Term
		{
			[Token(Token = "0x6001460")]
			[Address(RVA = "0xE588B4", Offset = "0xE588B4", VA = "0xE588B4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001461")]
			[Address(RVA = "0xE588BC", Offset = "0xE588BC", VA = "0xE588BC")]
			set
			{
			}
		}

		[Token(Token = "0x17000292")]
		public string SecondaryTerm
		{
			[Token(Token = "0x6001462")]
			[Address(RVA = "0xE588FC", Offset = "0xE588FC", VA = "0xE588FC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001463")]
			[Address(RVA = "0xE58904", Offset = "0xE58904", VA = "0xE58904")]
			set
			{
			}
		}

		[Token(Token = "0x6001464")]
		[Address(RVA = "0xE58958", Offset = "0xE58958", VA = "0xE58958")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001465")]
		[Address(RVA = "0xE58A28", Offset = "0xE58A28", VA = "0xE58A28")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001466")]
		[Address(RVA = "0xE593B8", Offset = "0xE593B8", VA = "0xE593B8")]
		public bool HasCallback()
		{
			return default(bool);
		}

		[Token(Token = "0x6001467")]
		[Address(RVA = "0xE58B88", Offset = "0xE58B88", VA = "0xE58B88")]
		public void OnLocalize(bool Force = false)
		{
		}

		[Token(Token = "0x6001468")]
		[Address(RVA = "0xE596F4", Offset = "0xE596F4", VA = "0xE596F4")]
		public bool FindTarget()
		{
			return default(bool);
		}

		[Token(Token = "0x6001469")]
		[Address(RVA = "0xE59400", Offset = "0xE59400", VA = "0xE59400")]
		public void GetFinalTerms(out string primaryTerm, out string secondaryTerm)
		{
		}

		[Token(Token = "0x600146A")]
		[Address(RVA = "0xE5A02C", Offset = "0xE5A02C", VA = "0xE5A02C")]
		public string GetMainTargetsText()
		{
			return null;
		}

		[Token(Token = "0x600146B")]
		[Address(RVA = "0xE5A0F4", Offset = "0xE5A0F4", VA = "0xE5A0F4")]
		public void SetFinalTerms(string Main, string Secondary, out string primaryTerm, out string secondaryTerm, bool RemoveNonASCII)
		{
		}

		[Token(Token = "0x600146C")]
		[Address(RVA = "0xE588C0", Offset = "0xE588C0", VA = "0xE588C0")]
		public void SetTerm(string primary)
		{
		}

		[Token(Token = "0x600146D")]
		[Address(RVA = "0xE58910", Offset = "0xE58910", VA = "0xE58910")]
		public void SetTerm(string primary, string secondary)
		{
		}

		[Token(Token = "0x600146E")]
		internal T GetSecondaryTranslatedObj<T>(ref string mainTranslation, ref string secondaryTranslation) where T : UnityEngine.Object
		{
			return null;
		}

		[Token(Token = "0x600146F")]
		[Address(RVA = "0xE5A130", Offset = "0xE5A130", VA = "0xE5A130")]
		public void UpdateAssetDictionary()
		{
		}

		[Token(Token = "0x6001470")]
		internal T GetObject<T>(string Translation) where T : UnityEngine.Object
		{
			return null;
		}

		[Token(Token = "0x6001471")]
		private T GetTranslatedObject<T>(string Translation) where T : UnityEngine.Object
		{
			return null;
		}

		[Token(Token = "0x6001472")]
		[Address(RVA = "0xE5A46C", Offset = "0xE5A46C", VA = "0xE5A46C")]
		private void DeserializeTranslation(string translation, out string value, out string secondary)
		{
		}

		[Token(Token = "0x6001473")]
		public T FindTranslatedObject<T>(string value) where T : UnityEngine.Object
		{
			return null;
		}

		[Token(Token = "0x6001474")]
		[Address(RVA = "0xE5A558", Offset = "0xE5A558", VA = "0xE5A558")]
		public bool HasTranslatedObject(UnityEngine.Object Obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6001475")]
		[Address(RVA = "0xE5A5DC", Offset = "0xE5A5DC", VA = "0xE5A5DC")]
		public void AddTranslatedObject(UnityEngine.Object Obj)
		{
		}

		[Token(Token = "0x6001476")]
		[Address(RVA = "0xE5A6BC", Offset = "0xE5A6BC", VA = "0xE5A6BC")]
		public void SetGlobalLanguage(string Language)
		{
		}

		[Token(Token = "0x6001477")]
		[Address(RVA = "0xE5A7E0", Offset = "0xE5A7E0", VA = "0xE5A7E0")]
		public Localize()
		{
		}
	}
	[Token(Token = "0x20002E9")]
	[AddComponentMenu("I2/Localization/Localize Dropdown")]
	public class LocalizeDropdown : MonoBehaviour
	{
		[Token(Token = "0x40010A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<string> _Terms;

		[Token(Token = "0x6001480")]
		[Address(RVA = "0xE5AB90", Offset = "0xE5AB90", VA = "0xE5AB90")]
		public void Start()
		{
		}

		[Token(Token = "0x6001481")]
		[Address(RVA = "0xE5AEB8", Offset = "0xE5AEB8", VA = "0xE5AEB8")]
		public void OnDestroy()
		{
		}

		[Token(Token = "0x6001482")]
		[Address(RVA = "0xE5B030", Offset = "0xE5B030", VA = "0xE5B030")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001483")]
		[Address(RVA = "0xE5ADCC", Offset = "0xE5ADCC", VA = "0xE5ADCC")]
		public void OnLocalize()
		{
		}

		[Token(Token = "0x6001484")]
		[Address(RVA = "0xE5B088", Offset = "0xE5B088", VA = "0xE5B088")]
		private void FillValues()
		{
		}

		[Token(Token = "0x6001485")]
		[Address(RVA = "0xE5B2E4", Offset = "0xE5B2E4", VA = "0xE5B2E4")]
		public void UpdateLocalization()
		{
		}

		[Token(Token = "0x6001486")]
		[Address(RVA = "0xE5B850", Offset = "0xE5B850", VA = "0xE5B850")]
		public void UpdateLocalizationTMPro()
		{
		}

		[Token(Token = "0x6001487")]
		[Address(RVA = "0xE5B60C", Offset = "0xE5B60C", VA = "0xE5B60C")]
		private void FillValuesTMPro()
		{
		}

		[Token(Token = "0x6001488")]
		[Address(RVA = "0xE5BB6C", Offset = "0xE5BB6C", VA = "0xE5BB6C")]
		public LocalizeDropdown()
		{
		}
	}
	[Token(Token = "0x20002EA")]
	public static class LocalizationManager
	{
		[Token(Token = "0x20002EB")]
		public delegate object _GetParam(string param);

		[Token(Token = "0x20002EC")]
		public delegate void OnLocalizeCallback();

		[Token(Token = "0x20002F2")]
		[CompilerGenerated]
		private sealed class <Delayed_Import_Google>d__61 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40010C2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40010C3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40010C4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float delay;

			[Token(Token = "0x40010C5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public LanguageSourceData source;

			[Token(Token = "0x40010C6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public bool justCheck;

			[Token(Token = "0x17000298")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60014E4")]
				[Address(RVA = "0xE610C8", Offset = "0xE610C8", VA = "0xE610C8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000299")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60014E6")]
				[Address(RVA = "0xE61110", Offset = "0xE61110", VA = "0xE61110", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60014E1")]
			[Address(RVA = "0xE5F044", Offset = "0xE5F044", VA = "0xE5F044")]
			[DebuggerHidden]
			public <Delayed_Import_Google>d__61(int <>1__state)
			{
			}

			[Token(Token = "0x60014E2")]
			[Address(RVA = "0xE61010", Offset = "0xE61010", VA = "0xE61010", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60014E3")]
			[Address(RVA = "0xE61014", Offset = "0xE61014", VA = "0xE61014", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60014E5")]
			[Address(RVA = "0xE610D0", Offset = "0xE610D0", VA = "0xE610D0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20002F4")]
		[CompilerGenerated]
		private sealed class <Coroutine_LocalizeAll>d__86 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40010C8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40010C9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x1700029A")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60014EC")]
				[Address(RVA = "0xE6222C", Offset = "0xE6222C", VA = "0xE6222C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700029B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60014EE")]
				[Address(RVA = "0xE62274", Offset = "0xE62274", VA = "0xE62274", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60014E9")]
			[Address(RVA = "0xE62148", Offset = "0xE62148", VA = "0xE62148")]
			[DebuggerHidden]
			public <Coroutine_LocalizeAll>d__86(int <>1__state)
			{
			}

			[Token(Token = "0x60014EA")]
			[Address(RVA = "0xE62170", Offset = "0xE62170", VA = "0xE62170", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60014EB")]
			[Address(RVA = "0xE62174", Offset = "0xE62174", VA = "0xE62174", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60014ED")]
			[Address(RVA = "0xE62234", Offset = "0xE62234", VA = "0xE62234", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40010A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static string mCurrentLanguage;

		[Token(Token = "0x40010AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static string mLanguageCode;

		[Token(Token = "0x40010AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static CultureInfo mCurrentCulture;

		[Token(Token = "0x40010AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static bool mChangeCultureInfo;

		[Token(Token = "0x40010AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public static bool IsRight2Left;

		[Token(Token = "0x40010AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		public static bool HasJoinedWords;

		[Token(Token = "0x40010AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static List<ILocalizationParamsManager> ParamManagers;

		[Token(Token = "0x40010B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static string[] LanguagesRTL;

		[Token(Token = "0x40010B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public static List<LanguageSourceData> Sources;

		[Token(Token = "0x40010B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public static string[] GlobalSources;

		[Token(Token = "0x40010B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public static Func<LanguageSourceData, bool> Callback_AllowSyncFromGoogle;

		[Token(Token = "0x40010B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private static string mCurrentDeviceLanguage;

		[Token(Token = "0x40010B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public static List<ILocalizeTargetDescriptor> mLocalizeTargets;

		[Token(Token = "0x40010B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private static bool mLocalizeIsScheduled;

		[Token(Token = "0x40010B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		private static bool mLocalizeIsScheduledWithForcedValue;

		[Token(Token = "0x40010B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x62")]
		public static bool HighlightLocalizedTargets;

		[Token(Token = "0x17000293")]
		public static string CurrentLanguage
		{
			[Token(Token = "0x600148D")]
			[Address(RVA = "0xE54500", Offset = "0xE54500", VA = "0xE54500")]
			get
			{
				return null;
			}
			[Token(Token = "0x600148E")]
			[Address(RVA = "0xE5A710", Offset = "0xE5A710", VA = "0xE5A710")]
			set
			{
			}
		}

		[Token(Token = "0x17000294")]
		public static string CurrentLanguageCode
		{
			[Token(Token = "0x600148F")]
			[Address(RVA = "0xE5C940", Offset = "0xE5C940", VA = "0xE5C940")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001490")]
			[Address(RVA = "0xE5C99C", Offset = "0xE5C99C", VA = "0xE5C99C")]
			set
			{
			}
		}

		[Token(Token = "0x17000295")]
		public static string CurrentRegion
		{
			[Token(Token = "0x6001491")]
			[Address(RVA = "0xE5CC2C", Offset = "0xE5CC2C", VA = "0xE5CC2C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001492")]
			[Address(RVA = "0xE5CDA0", Offset = "0xE5CDA0", VA = "0xE5CDA0")]
			set
			{
			}
		}

		[Token(Token = "0x17000296")]
		public static string CurrentRegionCode
		{
			[Token(Token = "0x6001493")]
			[Address(RVA = "0xE5CF60", Offset = "0xE5CF60", VA = "0xE5CF60")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001494")]
			[Address(RVA = "0xE5D030", Offset = "0xE5D030", VA = "0xE5D030")]
			set
			{
			}
		}

		[Token(Token = "0x17000297")]
		public static CultureInfo CurrentCulture
		{
			[Token(Token = "0x6001495")]
			[Address(RVA = "0xE5D134", Offset = "0xE5D134", VA = "0xE5D134")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x14000049")]
		public static event OnLocalizeCallback OnLocalizeEvent
		{
			[Token(Token = "0x60014BE")]
			[Address(RVA = "0xE5ACF0", Offset = "0xE5ACF0", VA = "0xE5ACF0")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x60014BF")]
			[Address(RVA = "0xE5AF54", Offset = "0xE5AF54", VA = "0xE5AF54")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x6001489")]
		[Address(RVA = "0xE4983C", Offset = "0xE4983C", VA = "0xE4983C")]
		public static void InitializeIfNeeded()
		{
		}

		[Token(Token = "0x600148A")]
		[Address(RVA = "0xE5C214", Offset = "0xE5C214", VA = "0xE5C214")]
		public static string GetVersion()
		{
			return null;
		}

		[Token(Token = "0x600148B")]
		[Address(RVA = "0xE55734", Offset = "0xE55734", VA = "0xE55734")]
		public static int GetRequiredWebServiceVersion()
		{
			return default(int);
		}

		[Token(Token = "0x600148C")]
		[Address(RVA = "0xE493E8", Offset = "0xE493E8", VA = "0xE493E8")]
		public static string GetWebServiceURL([Optional] LanguageSourceData source)
		{
			return null;
		}

		[Token(Token = "0x6001496")]
		[Address(RVA = "0xE5C768", Offset = "0xE5C768", VA = "0xE5C768")]
		public static void SetLanguageAndCode(string LanguageName, string LanguageCode, bool RememberLanguage = true, bool Force = false)
		{
		}

		[Token(Token = "0x6001497")]
		[Address(RVA = "0xE5D18C", Offset = "0xE5D18C", VA = "0xE5D18C")]
		private static CultureInfo CreateCultureForCode(string code)
		{
			return null;
		}

		[Token(Token = "0x6001498")]
		[Address(RVA = "0xE5D37C", Offset = "0xE5D37C", VA = "0xE5D37C")]
		public static void EnableChangingCultureInfo(bool bEnable)
		{
		}

		[Token(Token = "0x6001499")]
		[Address(RVA = "0xE5D280", Offset = "0xE5D280", VA = "0xE5D280")]
		private static void SetCurrentCultureInfo()
		{
		}

		[Token(Token = "0x600149A")]
		[Address(RVA = "0xE5BE40", Offset = "0xE5BE40", VA = "0xE5BE40")]
		private static void SelectStartupLanguage()
		{
		}

		[Token(Token = "0x600149B")]
		[Address(RVA = "0xE5D4AC", Offset = "0xE5D4AC", VA = "0xE5D4AC")]
		public static bool HasLanguage(string Language, bool AllowDiscartingRegion = true, bool Initialize = true, bool SkipDisabled = true)
		{
			return default(bool);
		}

		[Token(Token = "0x600149C")]
		[Address(RVA = "0xE5C254", Offset = "0xE5C254", VA = "0xE5C254")]
		public static string GetSupportedLanguage(string Language, bool ignoreDisabled = false)
		{
			return null;
		}

		[Token(Token = "0x600149D")]
		[Address(RVA = "0xE5C5B0", Offset = "0xE5C5B0", VA = "0xE5C5B0")]
		public static string GetLanguageCode(string Language)
		{
			return null;
		}

		[Token(Token = "0x600149E")]
		[Address(RVA = "0xE5CA64", Offset = "0xE5CA64", VA = "0xE5CA64")]
		public static string GetLanguageFromCode(string Code, bool exactMatch = true)
		{
			return null;
		}

		[Token(Token = "0x600149F")]
		[Address(RVA = "0xE5D664", Offset = "0xE5D664", VA = "0xE5D664")]
		public static List<string> GetAllLanguages(bool SkipDisabled = true)
		{
			return null;
		}

		[Token(Token = "0x60014A0")]
		[Address(RVA = "0xE5D8C4", Offset = "0xE5D8C4", VA = "0xE5D8C4")]
		public static List<string> GetAllLanguagesCode(bool allowRegions = true, bool SkipDisabled = true)
		{
			return null;
		}

		[Token(Token = "0x60014A1")]
		[Address(RVA = "0xE5DAF8", Offset = "0xE5DAF8", VA = "0xE5DAF8")]
		public static bool IsLanguageEnabled(string Language)
		{
			return default(bool);
		}

		[Token(Token = "0x60014A2")]
		[Address(RVA = "0xE5DBEC", Offset = "0xE5DBEC", VA = "0xE5DBEC")]
		private static void LoadCurrentLanguage()
		{
		}

		[Token(Token = "0x60014A3")]
		[Address(RVA = "0xE5DD14", Offset = "0xE5DD14", VA = "0xE5DD14")]
		public static void PreviewLanguage(string NewLanguage)
		{
		}

		[Token(Token = "0x60014A4")]
		[Address(RVA = "0xE5BBE8", Offset = "0xE5BBE8", VA = "0xE5BBE8")]
		public static void AutoLoadGlobalParamManagers()
		{
		}

		[Token(Token = "0x60014A5")]
		[Address(RVA = "0xE5DDE4", Offset = "0xE5DDE4", VA = "0xE5DDE4")]
		public static void ApplyLocalizationParams(ref string translation, bool allowLocalizedParameters = true)
		{
		}

		[Token(Token = "0x60014A6")]
		[Address(RVA = "0xE59610", Offset = "0xE59610", VA = "0xE59610")]
		public static void ApplyLocalizationParams(ref string translation, GameObject root, bool allowLocalizedParameters = true)
		{
		}

		[Token(Token = "0x60014A7")]
		[Address(RVA = "0xE5E3D4", Offset = "0xE5E3D4", VA = "0xE5E3D4")]
		public static void ApplyLocalizationParams(ref string translation, Dictionary<string, object> parameters, bool allowLocalizedParameters = true)
		{
		}

		[Token(Token = "0x60014A8")]
		[Address(RVA = "0xE5DFC0", Offset = "0xE5DFC0", VA = "0xE5DFC0")]
		public static void ApplyLocalizationParams(ref string translation, _GetParam getParam, bool allowLocalizedParameters = true)
		{
		}

		[Token(Token = "0x60014A9")]
		[Address(RVA = "0xE5E600", Offset = "0xE5E600", VA = "0xE5E600")]
		internal static string GetLocalizationParam(string ParamName, GameObject root)
		{
			return null;
		}

		[Token(Token = "0x60014AA")]
		[Address(RVA = "0xE5E890", Offset = "0xE5E890", VA = "0xE5E890")]
		private static string GetPluralType(MatchCollection matches, string langCode, _GetParam getParam)
		{
			return null;
		}

		[Token(Token = "0x60014AB")]
		[Address(RVA = "0xE59FD0", Offset = "0xE59FD0", VA = "0xE59FD0")]
		public static string ApplyRTLfix(string line)
		{
			return null;
		}

		[Token(Token = "0x60014AC")]
		[Address(RVA = "0xE59B68", Offset = "0xE59B68", VA = "0xE59B68")]
		public static string ApplyRTLfix(string line, int maxCharacters, bool ignoreNumbers)
		{
			return null;
		}

		[Token(Token = "0x60014AD")]
		[Address(RVA = "0xE5EA54", Offset = "0xE5EA54", VA = "0xE5EA54")]
		public static string FixRTL_IfNeeded(string text, int maxCharacters = 0, bool ignoreNumber = false)
		{
			return null;
		}

		[Token(Token = "0x60014AE")]
		[Address(RVA = "0xE5D2F8", Offset = "0xE5D2F8", VA = "0xE5D2F8")]
		public static bool IsRTL(string Code)
		{
			return default(bool);
		}

		[Token(Token = "0x60014AF")]
		[Address(RVA = "0xE5BDBC", Offset = "0xE5BDBC", VA = "0xE5BDBC")]
		public static bool UpdateSources()
		{
			return default(bool);
		}

		[Token(Token = "0x60014B0")]
		[Address(RVA = "0xE5EAF0", Offset = "0xE5EAF0", VA = "0xE5EAF0")]
		private static void UnregisterDeletededSources()
		{
		}

		[Token(Token = "0x60014B1")]
		[Address(RVA = "0xE5ED94", Offset = "0xE5ED94", VA = "0xE5ED94")]
		private static void RegisterSceneSources()
		{
		}

		[Token(Token = "0x60014B2")]
		[Address(RVA = "0xE5EBF8", Offset = "0xE5EBF8", VA = "0xE5EBF8")]
		private static void RegisterSourceInResources()
		{
		}

		[Token(Token = "0x60014B3")]
		[Address(RVA = "0xE5EF18", Offset = "0xE5EF18", VA = "0xE5EF18")]
		private static bool AllowSyncFromGoogle(LanguageSourceData Source)
		{
			return default(bool);
		}

		[Token(Token = "0x60014B4")]
		[Address(RVA = "0xE4F56C", Offset = "0xE4F56C", VA = "0xE4F56C")]
		internal static void AddSource(LanguageSourceData Source)
		{
		}

		[Token(Token = "0x60014B5")]
		[Address(RVA = "0xE5EFB8", Offset = "0xE5EFB8", VA = "0xE5EFB8")]
		[IteratorStateMachine(typeof(<Delayed_Import_Google>d__61))]
		private static IEnumerator Delayed_Import_Google(LanguageSourceData source, float delay, bool justCheck)
		{
			return null;
		}

		[Token(Token = "0x60014B6")]
		[Address(RVA = "0xE4FF70", Offset = "0xE4FF70", VA = "0xE4FF70")]
		internal static void RemoveSource(LanguageSourceData Source)
		{
		}

		[Token(Token = "0x60014B7")]
		[Address(RVA = "0xE5F06C", Offset = "0xE5F06C", VA = "0xE5F06C")]
		public static bool IsGlobalSource(string SourceName)
		{
			return default(bool);
		}

		[Token(Token = "0x60014B8")]
		[Address(RVA = "0xE5F0F0", Offset = "0xE5F0F0", VA = "0xE5F0F0")]
		public static LanguageSourceData GetSourceContaining(string term, bool fallbackToFirst = true)
		{
			return null;
		}

		[Token(Token = "0x60014B9")]
		[Address(RVA = "0xE5F294", Offset = "0xE5F294", VA = "0xE5F294")]
		public static UnityEngine.Object FindAsset(string value)
		{
			return null;
		}

		[Token(Token = "0x60014BA")]
		[Address(RVA = "0xE5F3C4", Offset = "0xE5F3C4", VA = "0xE5F3C4")]
		public static void ApplyDownloadedDataFromGoogle()
		{
		}

		[Token(Token = "0x60014BB")]
		[Address(RVA = "0xE5D410", Offset = "0xE5D410", VA = "0xE5D410")]
		public static string GetCurrentDeviceLanguage(bool force = false)
		{
			return null;
		}

		[Token(Token = "0x60014BC")]
		[Address(RVA = "0xE5F4A0", Offset = "0xE5F4A0", VA = "0xE5F4A0")]
		private static void DetectDeviceLanguage()
		{
		}

		[Token(Token = "0x60014BD")]
		[Address(RVA = "0xE5F8D8", Offset = "0xE5F8D8", VA = "0xE5F8D8")]
		public static void RegisterTarget(ILocalizeTargetDescriptor desc)
		{
		}

		[Token(Token = "0x60014C0")]
		[Address(RVA = "0xE5954C", Offset = "0xE5954C", VA = "0xE5954C")]
		public static string GetTranslation(string Term, bool FixForRTL = true, int maxLineLengthForRTL = 0, bool ignoreRTLnumbers = true, bool applyParameters = false, [Optional] GameObject localParametersRoot, [Optional] string overrideLanguage, bool allowLocalizedParameters = true)
		{
			return null;
		}

		[Token(Token = "0x60014C1")]
		[Address(RVA = "0xE5FD40", Offset = "0xE5FD40", VA = "0xE5FD40")]
		public static string GetTermTranslation(string Term, bool FixForRTL = true, int maxLineLengthForRTL = 0, bool ignoreRTLnumbers = true, bool applyParameters = false, [Optional] GameObject localParametersRoot, [Optional] string overrideLanguage, bool allowLocalizedParameters = true)
		{
			return null;
		}

		[Token(Token = "0x60014C2")]
		[Address(RVA = "0xE5FB64", Offset = "0xE5FB64", VA = "0xE5FB64")]
		public static bool TryGetTranslation(string Term, out string Translation, bool FixForRTL = true, int maxLineLengthForRTL = 0, bool ignoreRTLnumbers = true, bool applyParameters = false, [Optional] GameObject localParametersRoot, [Optional] string overrideLanguage, bool allowLocalizedParameters = true)
		{
			return default(bool);
		}

		[Token(Token = "0x60014C3")]
		public static T GetTranslatedObject<T>(string AssetName, [Optional] Localize optionalLocComp) where T : UnityEngine.Object
		{
			return null;
		}

		[Token(Token = "0x60014C4")]
		public static T GetTranslatedObjectByTermName<T>(string Term, [Optional] Localize optionalLocComp) where T : UnityEngine.Object
		{
			return null;
		}

		[Token(Token = "0x60014C5")]
		[Address(RVA = "0xE5FDEC", Offset = "0xE5FDEC", VA = "0xE5FDEC")]
		public static string GetAppName(string languageCode)
		{
			return null;
		}

		[Token(Token = "0x60014C6")]
		[Address(RVA = "0xE4FEA4", Offset = "0xE4FEA4", VA = "0xE4FEA4")]
		public static void LocalizeAll(bool Force = false)
		{
		}

		[Token(Token = "0x60014C7")]
		[Address(RVA = "0xE60154", Offset = "0xE60154", VA = "0xE60154")]
		[IteratorStateMachine(typeof(<Coroutine_LocalizeAll>d__86))]
		private static IEnumerator Coroutine_LocalizeAll()
		{
			return null;
		}

		[Token(Token = "0x60014C8")]
		[Address(RVA = "0xE5FFDC", Offset = "0xE5FFDC", VA = "0xE5FFDC")]
		private static void DoLocalizeAll(bool Force = false)
		{
		}

		[Token(Token = "0x60014C9")]
		[Address(RVA = "0xE601B4", Offset = "0xE601B4", VA = "0xE601B4")]
		public static List<string> GetCategories()
		{
			return null;
		}

		[Token(Token = "0x60014CA")]
		[Address(RVA = "0xE602DC", Offset = "0xE602DC", VA = "0xE602DC")]
		public static List<string> GetTermsList([Optional] string Category)
		{
			return null;
		}

		[Token(Token = "0x60014CB")]
		[Address(RVA = "0xE60520", Offset = "0xE60520", VA = "0xE60520")]
		public static TermData GetTermData(string term)
		{
			return null;
		}

		[Token(Token = "0x60014CC")]
		[Address(RVA = "0xE5E4C0", Offset = "0xE5E4C0", VA = "0xE5E4C0")]
		public static TermData GetTermData(string term, out LanguageSourceData source)
		{
			return null;
		}
	}
	[Token(Token = "0x20002F5")]
	public abstract class ILocalizeTarget : ScriptableObject
	{
		[Token(Token = "0x60014EF")]
		public abstract bool IsValid(Localize cmp);

		[Token(Token = "0x60014F0")]
		public abstract void GetFinalTerms(Localize cmp, string Main, string Secondary, out string primaryTerm, out string secondaryTerm);

		[Token(Token = "0x60014F1")]
		public abstract void DoLocalize(Localize cmp, string mainTranslation, string secondaryTranslation);

		[Token(Token = "0x60014F2")]
		public abstract bool CanUseSecondaryTerm();

		[Token(Token = "0x60014F3")]
		public abstract bool AllowMainTermToBeRTL();

		[Token(Token = "0x60014F4")]
		public abstract bool AllowSecondTermToBeRTL();

		[Token(Token = "0x60014F5")]
		public abstract eTermType GetPrimaryTermType(Localize cmp);

		[Token(Token = "0x60014F6")]
		public abstract eTermType GetSecondaryTermType(Localize cmp);

		[Token(Token = "0x60014F7")]
		[Address(RVA = "0xE6227C", Offset = "0xE6227C", VA = "0xE6227C")]
		protected ILocalizeTarget()
		{
		}
	}
	[Token(Token = "0x20002F6")]
	public abstract class LocalizeTarget<T> : ILocalizeTarget where T : UnityEngine.Object
	{
		[Token(Token = "0x40010CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public T mTarget;

		[Token(Token = "0x60014F8")]
		public override bool IsValid(Localize cmp)
		{
			return default(bool);
		}

		[Token(Token = "0x60014F9")]
		protected LocalizeTarget()
		{
		}
	}
	[Token(Token = "0x20002F7")]
	public abstract class ILocalizeTargetDescriptor
	{
		[Token(Token = "0x40010CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string Name;

		[Token(Token = "0x40010CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int Priority;

		[Token(Token = "0x60014FA")]
		public abstract bool CanLocalize(Localize cmp);

		[Token(Token = "0x60014FB")]
		public abstract ILocalizeTarget CreateTarget(Localize cmp);

		[Token(Token = "0x60014FC")]
		public abstract Type GetTargetType();

		[Token(Token = "0x60014FD")]
		[Address(RVA = "0xE62284", Offset = "0xE62284", VA = "0xE62284")]
		protected ILocalizeTargetDescriptor()
		{
		}
	}
	[Token(Token = "0x20002F8")]
	public abstract class LocalizeTargetDesc<T> : ILocalizeTargetDescriptor where T : ILocalizeTarget
	{
		[Token(Token = "0x60014FE")]
		public override ILocalizeTarget CreateTarget(Localize cmp)
		{
			return null;
		}

		[Token(Token = "0x60014FF")]
		public override Type GetTargetType()
		{
			return null;
		}

		[Token(Token = "0x6001500")]
		protected LocalizeTargetDesc()
		{
		}
	}
	[Token(Token = "0x20002F9")]
	public class LocalizeTargetDesc_Type<T, G> : LocalizeTargetDesc<G> where T : UnityEngine.Object where G : LocalizeTarget<T>
	{
		[Token(Token = "0x6001501")]
		public override bool CanLocalize(Localize cmp)
		{
			return default(bool);
		}

		[Token(Token = "0x6001502")]
		public override ILocalizeTarget CreateTarget(Localize cmp)
		{
			return null;
		}

		[Token(Token = "0x6001503")]
		public LocalizeTargetDesc_Type()
		{
		}
	}
	[Token(Token = "0x20002FA")]
	public class LocalizeTarget_TextMeshPro_Label : LocalizeTarget<TextMeshPro>
	{
		[Token(Token = "0x40010CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private TextAlignmentOptions mAlignment_RTL;

		[Token(Token = "0x40010CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private TextAlignmentOptions mAlignment_LTR;

		[Token(Token = "0x40010CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool mAlignmentWasRTL;

		[Token(Token = "0x40010D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		private bool mInitializeAlignment;

		[Token(Token = "0x6001504")]
		[Address(RVA = "0xE6228C", Offset = "0xE6228C", VA = "0xE6228C")]
		static LocalizeTarget_TextMeshPro_Label()
		{
		}

		[Token(Token = "0x6001505")]
		[Address(RVA = "0xE62290", Offset = "0xE62290", VA = "0xE62290")]
		[RuntimeInitializeOnLoadMethod(RuntimeInitializeLoadType.BeforeSceneLoad)]
		private static void AutoRegister()
		{
		}

		[Token(Token = "0x6001506")]
		[Address(RVA = "0xE6234C", Offset = "0xE6234C", VA = "0xE6234C", Slot = "10")]
		public override eTermType GetPrimaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6001507")]
		[Address(RVA = "0xE62354", Offset = "0xE62354", VA = "0xE62354", Slot = "11")]
		public override eTermType GetSecondaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6001508")]
		[Address(RVA = "0xE6235C", Offset = "0xE6235C", VA = "0xE6235C", Slot = "7")]
		public override bool CanUseSecondaryTerm()
		{
			return default(bool);
		}

		[Token(Token = "0x6001509")]
		[Address(RVA = "0xE62364", Offset = "0xE62364", VA = "0xE62364", Slot = "8")]
		public override bool AllowMainTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x600150A")]
		[Address(RVA = "0xE6236C", Offset = "0xE6236C", VA = "0xE6236C", Slot = "9")]
		public override bool AllowSecondTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x600150B")]
		[Address(RVA = "0xE62374", Offset = "0xE62374", VA = "0xE62374", Slot = "5")]
		public override void GetFinalTerms(Localize cmp, string Main, string Secondary, out string primaryTerm, out string secondaryTerm)
		{
		}

		[Token(Token = "0x600150C")]
		[Address(RVA = "0xE62480", Offset = "0xE62480", VA = "0xE62480", Slot = "6")]
		public override void DoLocalize(Localize cmp, string mainTranslation, string secondaryTranslation)
		{
		}

		[Token(Token = "0x600150D")]
		[Address(RVA = "0xE62A14", Offset = "0xE62A14", VA = "0xE62A14")]
		internal static TMP_FontAsset GetTMPFontFromMaterial(Localize cmp, string matName)
		{
			return null;
		}

		[Token(Token = "0x600150E")]
		[Address(RVA = "0xE62C7C", Offset = "0xE62C7C", VA = "0xE62C7C")]
		internal static void InitAlignment_TMPro(bool isRTL, TextAlignmentOptions alignment, out TextAlignmentOptions alignLTR, out TextAlignmentOptions alignRTL)
		{
		}

		[Token(Token = "0x600150F")]
		[Address(RVA = "0xE62934", Offset = "0xE62934", VA = "0xE62934")]
		internal static void SetFont(TMP_Text label, TMP_FontAsset newFont)
		{
		}

		[Token(Token = "0x6001510")]
		[Address(RVA = "0xE62B7C", Offset = "0xE62B7C", VA = "0xE62B7C")]
		internal static void SetMaterial(TMP_Text label, Material newMat)
		{
		}

		[Token(Token = "0x6001511")]
		[Address(RVA = "0xE62F20", Offset = "0xE62F20", VA = "0xE62F20")]
		public LocalizeTarget_TextMeshPro_Label()
		{
		}
	}
	[Token(Token = "0x20002FB")]
	public class LocalizeTarget_TextMeshPro_UGUI : LocalizeTarget<TextMeshProUGUI>
	{
		[Token(Token = "0x40010D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TextAlignmentOptions mAlignment_RTL;

		[Token(Token = "0x40010D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public TextAlignmentOptions mAlignment_LTR;

		[Token(Token = "0x40010D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool mAlignmentWasRTL;

		[Token(Token = "0x40010D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		public bool mInitializeAlignment;

		[Token(Token = "0x6001512")]
		[Address(RVA = "0xE62F7C", Offset = "0xE62F7C", VA = "0xE62F7C")]
		static LocalizeTarget_TextMeshPro_UGUI()
		{
		}

		[Token(Token = "0x6001513")]
		[Address(RVA = "0xE62F80", Offset = "0xE62F80", VA = "0xE62F80")]
		[RuntimeInitializeOnLoadMethod(RuntimeInitializeLoadType.BeforeSceneLoad)]
		private static void AutoRegister()
		{
		}

		[Token(Token = "0x6001514")]
		[Address(RVA = "0xE6303C", Offset = "0xE6303C", VA = "0xE6303C", Slot = "10")]
		public override eTermType GetPrimaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6001515")]
		[Address(RVA = "0xE63044", Offset = "0xE63044", VA = "0xE63044", Slot = "11")]
		public override eTermType GetSecondaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6001516")]
		[Address(RVA = "0xE6304C", Offset = "0xE6304C", VA = "0xE6304C", Slot = "7")]
		public override bool CanUseSecondaryTerm()
		{
			return default(bool);
		}

		[Token(Token = "0x6001517")]
		[Address(RVA = "0xE63054", Offset = "0xE63054", VA = "0xE63054", Slot = "8")]
		public override bool AllowMainTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6001518")]
		[Address(RVA = "0xE6305C", Offset = "0xE6305C", VA = "0xE6305C", Slot = "9")]
		public override bool AllowSecondTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6001519")]
		[Address(RVA = "0xE63064", Offset = "0xE63064", VA = "0xE63064", Slot = "5")]
		public override void GetFinalTerms(Localize cmp, string Main, string Secondary, out string primaryTerm, out string secondaryTerm)
		{
		}

		[Token(Token = "0x600151A")]
		[Address(RVA = "0xE63170", Offset = "0xE63170", VA = "0xE63170", Slot = "6")]
		public override void DoLocalize(Localize cmp, string mainTranslation, string secondaryTranslation)
		{
		}

		[Token(Token = "0x600151B")]
		[Address(RVA = "0xE63624", Offset = "0xE63624", VA = "0xE63624")]
		public LocalizeTarget_TextMeshPro_UGUI()
		{
		}
	}
	[Token(Token = "0x20002FC")]
	public class LocalizeTarget_UnityStandard_AudioSource : LocalizeTarget<AudioSource>
	{
		[Token(Token = "0x600151C")]
		[Address(RVA = "0xE63680", Offset = "0xE63680", VA = "0xE63680")]
		static LocalizeTarget_UnityStandard_AudioSource()
		{
		}

		[Token(Token = "0x600151D")]
		[Address(RVA = "0xE63684", Offset = "0xE63684", VA = "0xE63684")]
		[RuntimeInitializeOnLoadMethod(RuntimeInitializeLoadType.BeforeSceneLoad)]
		private static void AutoRegister()
		{
		}

		[Token(Token = "0x600151E")]
		[Address(RVA = "0xE63740", Offset = "0xE63740", VA = "0xE63740", Slot = "10")]
		public override eTermType GetPrimaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x600151F")]
		[Address(RVA = "0xE63748", Offset = "0xE63748", VA = "0xE63748", Slot = "11")]
		public override eTermType GetSecondaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6001520")]
		[Address(RVA = "0xE63750", Offset = "0xE63750", VA = "0xE63750", Slot = "7")]
		public override bool CanUseSecondaryTerm()
		{
			return default(bool);
		}

		[Token(Token = "0x6001521")]
		[Address(RVA = "0xE63758", Offset = "0xE63758", VA = "0xE63758", Slot = "8")]
		public override bool AllowMainTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6001522")]
		[Address(RVA = "0xE63760", Offset = "0xE63760", VA = "0xE63760", Slot = "9")]
		public override bool AllowSecondTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6001523")]
		[Address(RVA = "0xE63768", Offset = "0xE63768", VA = "0xE63768", Slot = "5")]
		public override void GetFinalTerms(Localize cmp, string Main, string Secondary, out string primaryTerm, out string secondaryTerm)
		{
		}

		[Token(Token = "0x6001524")]
		[Address(RVA = "0xE63830", Offset = "0xE63830", VA = "0xE63830", Slot = "6")]
		public override void DoLocalize(Localize cmp, string mainTranslation, string secondaryTranslation)
		{
		}

		[Token(Token = "0x6001525")]
		[Address(RVA = "0xE639A0", Offset = "0xE639A0", VA = "0xE639A0")]
		public LocalizeTarget_UnityStandard_AudioSource()
		{
		}
	}
	[Token(Token = "0x20002FD")]
	public class LocalizeTargetDesc_Child : LocalizeTargetDesc<LocalizeTarget_UnityStandard_Child>
	{
		[Token(Token = "0x6001526")]
		[Address(RVA = "0xE639E8", Offset = "0xE639E8", VA = "0xE639E8", Slot = "4")]
		public override bool CanLocalize(Localize cmp)
		{
			return default(bool);
		}

		[Token(Token = "0x6001527")]
		[Address(RVA = "0xE63A1C", Offset = "0xE63A1C", VA = "0xE63A1C")]
		public LocalizeTargetDesc_Child()
		{
		}
	}
	[Token(Token = "0x20002FE")]
	public class LocalizeTarget_UnityStandard_Child : LocalizeTarget<GameObject>
	{
		[Token(Token = "0x6001528")]
		[Address(RVA = "0xE63A64", Offset = "0xE63A64", VA = "0xE63A64")]
		static LocalizeTarget_UnityStandard_Child()
		{
		}

		[Token(Token = "0x6001529")]
		[Address(RVA = "0xE63A68", Offset = "0xE63A68", VA = "0xE63A68")]
		[RuntimeInitializeOnLoadMethod(RuntimeInitializeLoadType.BeforeSceneLoad)]
		private static void AutoRegister()
		{
		}

		[Token(Token = "0x600152A")]
		[Address(RVA = "0xE63B0C", Offset = "0xE63B0C", VA = "0xE63B0C", Slot = "4")]
		public override bool IsValid(Localize cmp)
		{
			return default(bool);
		}

		[Token(Token = "0x600152B")]
		[Address(RVA = "0xE63B40", Offset = "0xE63B40", VA = "0xE63B40", Slot = "10")]
		public override eTermType GetPrimaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x600152C")]
		[Address(RVA = "0xE63B48", Offset = "0xE63B48", VA = "0xE63B48", Slot = "11")]
		public override eTermType GetSecondaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x600152D")]
		[Address(RVA = "0xE63B50", Offset = "0xE63B50", VA = "0xE63B50", Slot = "7")]
		public override bool CanUseSecondaryTerm()
		{
			return default(bool);
		}

		[Token(Token = "0x600152E")]
		[Address(RVA = "0xE63B58", Offset = "0xE63B58", VA = "0xE63B58", Slot = "8")]
		public override bool AllowMainTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x600152F")]
		[Address(RVA = "0xE63B60", Offset = "0xE63B60", VA = "0xE63B60", Slot = "9")]
		public override bool AllowSecondTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6001530")]
		[Address(RVA = "0xE63B68", Offset = "0xE63B68", VA = "0xE63B68", Slot = "5")]
		public override void GetFinalTerms(Localize cmp, string Main, string Secondary, out string primaryTerm, out string secondaryTerm)
		{
		}

		[Token(Token = "0x6001531")]
		[Address(RVA = "0xE63BA0", Offset = "0xE63BA0", VA = "0xE63BA0", Slot = "6")]
		public override void DoLocalize(Localize cmp, string mainTranslation, string secondaryTranslation)
		{
		}

		[Token(Token = "0x6001532")]
		[Address(RVA = "0xE63CE0", Offset = "0xE63CE0", VA = "0xE63CE0")]
		public LocalizeTarget_UnityStandard_Child()
		{
		}
	}
	[Token(Token = "0x20002FF")]
	public class LocalizeTarget_UnityStandard_MeshRenderer : LocalizeTarget<MeshRenderer>
	{
		[Token(Token = "0x6001533")]
		[Address(RVA = "0xE63D28", Offset = "0xE63D28", VA = "0xE63D28")]
		static LocalizeTarget_UnityStandard_MeshRenderer()
		{
		}

		[Token(Token = "0x6001534")]
		[Address(RVA = "0xE63D2C", Offset = "0xE63D2C", VA = "0xE63D2C")]
		[RuntimeInitializeOnLoadMethod(RuntimeInitializeLoadType.BeforeSceneLoad)]
		private static void AutoRegister()
		{
		}

		[Token(Token = "0x6001535")]
		[Address(RVA = "0xE63DE8", Offset = "0xE63DE8", VA = "0xE63DE8", Slot = "10")]
		public override eTermType GetPrimaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6001536")]
		[Address(RVA = "0xE63DF0", Offset = "0xE63DF0", VA = "0xE63DF0", Slot = "11")]
		public override eTermType GetSecondaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6001537")]
		[Address(RVA = "0xE63DF8", Offset = "0xE63DF8", VA = "0xE63DF8", Slot = "7")]
		public override bool CanUseSecondaryTerm()
		{
			return default(bool);
		}

		[Token(Token = "0x6001538")]
		[Address(RVA = "0xE63E00", Offset = "0xE63E00", VA = "0xE63E00", Slot = "8")]
		public override bool AllowMainTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6001539")]
		[Address(RVA = "0xE63E08", Offset = "0xE63E08", VA = "0xE63E08", Slot = "9")]
		public override bool AllowSecondTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x600153A")]
		[Address(RVA = "0xE63E10", Offset = "0xE63E10", VA = "0xE63E10", Slot = "5")]
		public override void GetFinalTerms(Localize cmp, string Main, string Secondary, out string primaryTerm, out string secondaryTerm)
		{
		}

		[Token(Token = "0x600153B")]
		[Address(RVA = "0xE63FEC", Offset = "0xE63FEC", VA = "0xE63FEC", Slot = "6")]
		public override void DoLocalize(Localize cmp, string mainTranslation, string secondaryTranslation)
		{
		}

		[Token(Token = "0x600153C")]
		[Address(RVA = "0xE641B8", Offset = "0xE641B8", VA = "0xE641B8")]
		public LocalizeTarget_UnityStandard_MeshRenderer()
		{
		}
	}
	[Token(Token = "0x2000300")]
	public class LocalizeTargetDesc_Prefab : LocalizeTargetDesc<LocalizeTarget_UnityStandard_Prefab>
	{
		[Token(Token = "0x600153D")]
		[Address(RVA = "0xE64200", Offset = "0xE64200", VA = "0xE64200", Slot = "4")]
		public override bool CanLocalize(Localize cmp)
		{
			return default(bool);
		}

		[Token(Token = "0x600153E")]
		[Address(RVA = "0xE64208", Offset = "0xE64208", VA = "0xE64208")]
		public LocalizeTargetDesc_Prefab()
		{
		}
	}
	[Token(Token = "0x2000301")]
	public class LocalizeTarget_UnityStandard_Prefab : LocalizeTarget<GameObject>
	{
		[Token(Token = "0x600153F")]
		[Address(RVA = "0xE64250", Offset = "0xE64250", VA = "0xE64250")]
		static LocalizeTarget_UnityStandard_Prefab()
		{
		}

		[Token(Token = "0x6001540")]
		[Address(RVA = "0xE64254", Offset = "0xE64254", VA = "0xE64254")]
		[RuntimeInitializeOnLoadMethod(RuntimeInitializeLoadType.BeforeSceneLoad)]
		private static void AutoRegister()
		{
		}

		[Token(Token = "0x6001541")]
		[Address(RVA = "0xE642F8", Offset = "0xE642F8", VA = "0xE642F8", Slot = "4")]
		public override bool IsValid(Localize cmp)
		{
			return default(bool);
		}

		[Token(Token = "0x6001542")]
		[Address(RVA = "0xE64300", Offset = "0xE64300", VA = "0xE64300", Slot = "10")]
		public override eTermType GetPrimaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6001543")]
		[Address(RVA = "0xE64308", Offset = "0xE64308", VA = "0xE64308", Slot = "11")]
		public override eTermType GetSecondaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6001544")]
		[Address(RVA = "0xE64310", Offset = "0xE64310", VA = "0xE64310", Slot = "7")]
		public override bool CanUseSecondaryTerm()
		{
			return default(bool);
		}

		[Token(Token = "0x6001545")]
		[Address(RVA = "0xE64318", Offset = "0xE64318", VA = "0xE64318", Slot = "8")]
		public override bool AllowMainTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6001546")]
		[Address(RVA = "0xE64320", Offset = "0xE64320", VA = "0xE64320", Slot = "9")]
		public override bool AllowSecondTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6001547")]
		[Address(RVA = "0xE64328", Offset = "0xE64328", VA = "0xE64328", Slot = "5")]
		public override void GetFinalTerms(Localize cmp, string Main, string Secondary, out string primaryTerm, out string secondaryTerm)
		{
		}

		[Token(Token = "0x6001548")]
		[Address(RVA = "0xE64360", Offset = "0xE64360", VA = "0xE64360", Slot = "6")]
		public override void DoLocalize(Localize cmp, string mainTranslation, string secondaryTranslation)
		{
		}

		[Token(Token = "0x6001549")]
		[Address(RVA = "0xE64564", Offset = "0xE64564", VA = "0xE64564")]
		private Transform InstantiateNewPrefab(Localize cmp, string mainTranslation)
		{
			return null;
		}

		[Token(Token = "0x600154A")]
		[Address(RVA = "0xE64708", Offset = "0xE64708", VA = "0xE64708")]
		public LocalizeTarget_UnityStandard_Prefab()
		{
		}
	}
	[Token(Token = "0x2000302")]
	public class LocalizeTarget_UnityStandard_SpriteRenderer : LocalizeTarget<SpriteRenderer>
	{
		[Token(Token = "0x600154B")]
		[Address(RVA = "0xE64750", Offset = "0xE64750", VA = "0xE64750")]
		static LocalizeTarget_UnityStandard_SpriteRenderer()
		{
		}

		[Token(Token = "0x600154C")]
		[Address(RVA = "0xE64754", Offset = "0xE64754", VA = "0xE64754")]
		[RuntimeInitializeOnLoadMethod(RuntimeInitializeLoadType.BeforeSceneLoad)]
		private static void AutoRegister()
		{
		}

		[Token(Token = "0x600154D")]
		[Address(RVA = "0xE64810", Offset = "0xE64810", VA = "0xE64810", Slot = "10")]
		public override eTermType GetPrimaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x600154E")]
		[Address(RVA = "0xE64818", Offset = "0xE64818", VA = "0xE64818", Slot = "11")]
		public override eTermType GetSecondaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x600154F")]
		[Address(RVA = "0xE64820", Offset = "0xE64820", VA = "0xE64820", Slot = "7")]
		public override bool CanUseSecondaryTerm()
		{
			return default(bool);
		}

		[Token(Token = "0x6001550")]
		[Address(RVA = "0xE64828", Offset = "0xE64828", VA = "0xE64828", Slot = "8")]
		public override bool AllowMainTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6001551")]
		[Address(RVA = "0xE64830", Offset = "0xE64830", VA = "0xE64830", Slot = "9")]
		public override bool AllowSecondTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6001552")]
		[Address(RVA = "0xE64838", Offset = "0xE64838", VA = "0xE64838", Slot = "5")]
		public override void GetFinalTerms(Localize cmp, string Main, string Secondary, out string primaryTerm, out string secondaryTerm)
		{
		}

		[Token(Token = "0x6001553")]
		[Address(RVA = "0xE64904", Offset = "0xE64904", VA = "0xE64904", Slot = "6")]
		public override void DoLocalize(Localize cmp, string mainTranslation, string secondaryTranslation)
		{
		}

		[Token(Token = "0x6001554")]
		[Address(RVA = "0xE64A00", Offset = "0xE64A00", VA = "0xE64A00")]
		public LocalizeTarget_UnityStandard_SpriteRenderer()
		{
		}
	}
	[Token(Token = "0x2000303")]
	public class LocalizeTarget_UnityStandard_TextMesh : LocalizeTarget<TextMesh>
	{
		[Token(Token = "0x40010D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private TextAlignment mAlignment_RTL;

		[Token(Token = "0x40010D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private TextAlignment mAlignment_LTR;

		[Token(Token = "0x40010D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool mAlignmentWasRTL;

		[Token(Token = "0x40010D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		private bool mInitializeAlignment;

		[Token(Token = "0x6001555")]
		[Address(RVA = "0xE64A48", Offset = "0xE64A48", VA = "0xE64A48")]
		static LocalizeTarget_UnityStandard_TextMesh()
		{
		}

		[Token(Token = "0x6001556")]
		[Address(RVA = "0xE64A4C", Offset = "0xE64A4C", VA = "0xE64A4C")]
		[RuntimeInitializeOnLoadMethod(RuntimeInitializeLoadType.BeforeSceneLoad)]
		private static void AutoRegister()
		{
		}

		[Token(Token = "0x6001557")]
		[Address(RVA = "0xE64B08", Offset = "0xE64B08", VA = "0xE64B08", Slot = "10")]
		public override eTermType GetPrimaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6001558")]
		[Address(RVA = "0xE64B10", Offset = "0xE64B10", VA = "0xE64B10", Slot = "11")]
		public override eTermType GetSecondaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6001559")]
		[Address(RVA = "0xE64B18", Offset = "0xE64B18", VA = "0xE64B18", Slot = "7")]
		public override bool CanUseSecondaryTerm()
		{
			return default(bool);
		}

		[Token(Token = "0x600155A")]
		[Address(RVA = "0xE64B20", Offset = "0xE64B20", VA = "0xE64B20", Slot = "8")]
		public override bool AllowMainTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x600155B")]
		[Address(RVA = "0xE64B28", Offset = "0xE64B28", VA = "0xE64B28", Slot = "9")]
		public override bool AllowSecondTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x600155C")]
		[Address(RVA = "0xE64B30", Offset = "0xE64B30", VA = "0xE64B30", Slot = "5")]
		public override void GetFinalTerms(Localize cmp, string Main, string Secondary, out string primaryTerm, out string secondaryTerm)
		{
		}

		[Token(Token = "0x600155D")]
		[Address(RVA = "0xE64C4C", Offset = "0xE64C4C", VA = "0xE64C4C", Slot = "6")]
		public override void DoLocalize(Localize cmp, string mainTranslation, string secondaryTranslation)
		{
		}

		[Token(Token = "0x600155E")]
		[Address(RVA = "0xE64EF4", Offset = "0xE64EF4", VA = "0xE64EF4")]
		public LocalizeTarget_UnityStandard_TextMesh()
		{
		}
	}
	[Token(Token = "0x2000304")]
	public class LocalizeTarget_UnityStandard_VideoPlayer : LocalizeTarget<VideoPlayer>
	{
		[Token(Token = "0x600155F")]
		[Address(RVA = "0xE64F4C", Offset = "0xE64F4C", VA = "0xE64F4C")]
		static LocalizeTarget_UnityStandard_VideoPlayer()
		{
		}

		[Token(Token = "0x6001560")]
		[Address(RVA = "0xE64F50", Offset = "0xE64F50", VA = "0xE64F50")]
		[RuntimeInitializeOnLoadMethod(RuntimeInitializeLoadType.BeforeSceneLoad)]
		private static void AutoRegister()
		{
		}

		[Token(Token = "0x6001561")]
		[Address(RVA = "0xE6500C", Offset = "0xE6500C", VA = "0xE6500C", Slot = "10")]
		public override eTermType GetPrimaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6001562")]
		[Address(RVA = "0xE65014", Offset = "0xE65014", VA = "0xE65014", Slot = "11")]
		public override eTermType GetSecondaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6001563")]
		[Address(RVA = "0xE6501C", Offset = "0xE6501C", VA = "0xE6501C", Slot = "7")]
		public override bool CanUseSecondaryTerm()
		{
			return default(bool);
		}

		[Token(Token = "0x6001564")]
		[Address(RVA = "0xE65024", Offset = "0xE65024", VA = "0xE65024", Slot = "8")]
		public override bool AllowMainTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6001565")]
		[Address(RVA = "0xE6502C", Offset = "0xE6502C", VA = "0xE6502C", Slot = "9")]
		public override bool AllowSecondTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6001566")]
		[Address(RVA = "0xE65034", Offset = "0xE65034", VA = "0xE65034", Slot = "5")]
		public override void GetFinalTerms(Localize cmp, string Main, string Secondary, out string primaryTerm, out string secondaryTerm)
		{
		}

		[Token(Token = "0x6001567")]
		[Address(RVA = "0xE65100", Offset = "0xE65100", VA = "0xE65100", Slot = "6")]
		public override void DoLocalize(Localize cmp, string mainTranslation, string secondaryTranslation)
		{
		}

		[Token(Token = "0x6001568")]
		[Address(RVA = "0xE651FC", Offset = "0xE651FC", VA = "0xE651FC")]
		public LocalizeTarget_UnityStandard_VideoPlayer()
		{
		}
	}
	[Token(Token = "0x2000305")]
	public class LocalizeTarget_UnityUI_Image : LocalizeTarget<Image>
	{
		[Token(Token = "0x6001569")]
		[Address(RVA = "0xE65244", Offset = "0xE65244", VA = "0xE65244")]
		static LocalizeTarget_UnityUI_Image()
		{
		}

		[Token(Token = "0x600156A")]
		[Address(RVA = "0xE65248", Offset = "0xE65248", VA = "0xE65248")]
		[RuntimeInitializeOnLoadMethod(RuntimeInitializeLoadType.BeforeSceneLoad)]
		private static void AutoRegister()
		{
		}

		[Token(Token = "0x600156B")]
		[Address(RVA = "0xE65304", Offset = "0xE65304", VA = "0xE65304", Slot = "7")]
		public override bool CanUseSecondaryTerm()
		{
			return default(bool);
		}

		[Token(Token = "0x600156C")]
		[Address(RVA = "0xE6530C", Offset = "0xE6530C", VA = "0xE6530C", Slot = "8")]
		public override bool AllowMainTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x600156D")]
		[Address(RVA = "0xE65314", Offset = "0xE65314", VA = "0xE65314", Slot = "9")]
		public override bool AllowSecondTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x600156E")]
		[Address(RVA = "0xE6531C", Offset = "0xE6531C", VA = "0xE6531C", Slot = "10")]
		public override eTermType GetPrimaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x600156F")]
		[Address(RVA = "0xE6539C", Offset = "0xE6539C", VA = "0xE6539C", Slot = "11")]
		public override eTermType GetSecondaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6001570")]
		[Address(RVA = "0xE653A4", Offset = "0xE653A4", VA = "0xE653A4", Slot = "5")]
		public override void GetFinalTerms(Localize cmp, string Main, string Secondary, out string primaryTerm, out string secondaryTerm)
		{
		}

		[Token(Token = "0x6001571")]
		[Address(RVA = "0xE65520", Offset = "0xE65520", VA = "0xE65520", Slot = "6")]
		public override void DoLocalize(Localize cmp, string mainTranslation, string secondaryTranslation)
		{
		}

		[Token(Token = "0x6001572")]
		[Address(RVA = "0xE65610", Offset = "0xE65610", VA = "0xE65610")]
		public LocalizeTarget_UnityUI_Image()
		{
		}
	}
	[Token(Token = "0x2000306")]
	public class LocalizeTarget_UnityUI_RawImage : LocalizeTarget<RawImage>
	{
		[Token(Token = "0x6001573")]
		[Address(RVA = "0xE65658", Offset = "0xE65658", VA = "0xE65658")]
		static LocalizeTarget_UnityUI_RawImage()
		{
		}

		[Token(Token = "0x6001574")]
		[Address(RVA = "0xE6565C", Offset = "0xE6565C", VA = "0xE6565C")]
		[RuntimeInitializeOnLoadMethod(RuntimeInitializeLoadType.BeforeSceneLoad)]
		private static void AutoRegister()
		{
		}

		[Token(Token = "0x6001575")]
		[Address(RVA = "0xE65718", Offset = "0xE65718", VA = "0xE65718", Slot = "10")]
		public override eTermType GetPrimaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6001576")]
		[Address(RVA = "0xE65720", Offset = "0xE65720", VA = "0xE65720", Slot = "11")]
		public override eTermType GetSecondaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6001577")]
		[Address(RVA = "0xE65728", Offset = "0xE65728", VA = "0xE65728", Slot = "7")]
		public override bool CanUseSecondaryTerm()
		{
			return default(bool);
		}

		[Token(Token = "0x6001578")]
		[Address(RVA = "0xE65730", Offset = "0xE65730", VA = "0xE65730", Slot = "8")]
		public override bool AllowMainTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6001579")]
		[Address(RVA = "0xE65738", Offset = "0xE65738", VA = "0xE65738", Slot = "9")]
		public override bool AllowSecondTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x600157A")]
		[Address(RVA = "0xE65740", Offset = "0xE65740", VA = "0xE65740", Slot = "5")]
		public override void GetFinalTerms(Localize cmp, string Main, string Secondary, out string primaryTerm, out string secondaryTerm)
		{
		}

		[Token(Token = "0x600157B")]
		[Address(RVA = "0xE6581C", Offset = "0xE6581C", VA = "0xE6581C", Slot = "6")]
		public override void DoLocalize(Localize cmp, string mainTranslation, string secondaryTranslation)
		{
		}

		[Token(Token = "0x600157C")]
		[Address(RVA = "0xE6590C", Offset = "0xE6590C", VA = "0xE6590C")]
		public LocalizeTarget_UnityUI_RawImage()
		{
		}
	}
	[Token(Token = "0x2000307")]
	public class LocalizeTarget_UnityUI_Text : LocalizeTarget<Text>
	{
		[Token(Token = "0x40010D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private TextAnchor mAlignment_RTL;

		[Token(Token = "0x40010DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private TextAnchor mAlignment_LTR;

		[Token(Token = "0x40010DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool mAlignmentWasRTL;

		[Token(Token = "0x40010DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		private bool mInitializeAlignment;

		[Token(Token = "0x600157D")]
		[Address(RVA = "0xE65954", Offset = "0xE65954", VA = "0xE65954")]
		static LocalizeTarget_UnityUI_Text()
		{
		}

		[Token(Token = "0x600157E")]
		[Address(RVA = "0xE65958", Offset = "0xE65958", VA = "0xE65958")]
		[RuntimeInitializeOnLoadMethod(RuntimeInitializeLoadType.BeforeSceneLoad)]
		private static void AutoRegister()
		{
		}

		[Token(Token = "0x600157F")]
		[Address(RVA = "0xE65A14", Offset = "0xE65A14", VA = "0xE65A14", Slot = "10")]
		public override eTermType GetPrimaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6001580")]
		[Address(RVA = "0xE65A1C", Offset = "0xE65A1C", VA = "0xE65A1C", Slot = "11")]
		public override eTermType GetSecondaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6001581")]
		[Address(RVA = "0xE65A24", Offset = "0xE65A24", VA = "0xE65A24", Slot = "7")]
		public override bool CanUseSecondaryTerm()
		{
			return default(bool);
		}

		[Token(Token = "0x6001582")]
		[Address(RVA = "0xE65A2C", Offset = "0xE65A2C", VA = "0xE65A2C", Slot = "8")]
		public override bool AllowMainTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6001583")]
		[Address(RVA = "0xE65A34", Offset = "0xE65A34", VA = "0xE65A34", Slot = "9")]
		public override bool AllowSecondTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6001584")]
		[Address(RVA = "0xE65A3C", Offset = "0xE65A3C", VA = "0xE65A3C", Slot = "5")]
		public override void GetFinalTerms(Localize cmp, string Main, string Secondary, out string primaryTerm, out string secondaryTerm)
		{
		}

		[Token(Token = "0x6001585")]
		[Address(RVA = "0xE65B58", Offset = "0xE65B58", VA = "0xE65B58", Slot = "6")]
		public override void DoLocalize(Localize cmp, string mainTranslation, string secondaryTranslation)
		{
		}

		[Token(Token = "0x6001586")]
		[Address(RVA = "0xE65E00", Offset = "0xE65E00", VA = "0xE65E00")]
		private void InitAlignment(bool isRTL, TextAnchor alignment, out TextAnchor alignLTR, out TextAnchor alignRTL)
		{
		}

		[Token(Token = "0x6001587")]
		[Address(RVA = "0xE65EB8", Offset = "0xE65EB8", VA = "0xE65EB8")]
		public LocalizeTarget_UnityUI_Text()
		{
		}
	}
	[Token(Token = "0x2000308")]
	public enum eTermType
	{
		[Token(Token = "0x40010DE")]
		Text,
		[Token(Token = "0x40010DF")]
		Font,
		[Token(Token = "0x40010E0")]
		Texture,
		[Token(Token = "0x40010E1")]
		AudioClip,
		[Token(Token = "0x40010E2")]
		GameObject,
		[Token(Token = "0x40010E3")]
		Sprite,
		[Token(Token = "0x40010E4")]
		Material,
		[Token(Token = "0x40010E5")]
		Child,
		[Token(Token = "0x40010E6")]
		Mesh,
		[Token(Token = "0x40010E7")]
		TextMeshPFont,
		[Token(Token = "0x40010E8")]
		Object,
		[Token(Token = "0x40010E9")]
		Video
	}
	[Token(Token = "0x2000309")]
	public enum TranslationFlag : byte
	{
		[Token(Token = "0x40010EB")]
		Normal = 1,
		[Token(Token = "0x40010EC")]
		AutoTranslated
	}
	[Serializable]
	[Token(Token = "0x200030A")]
	public class TermData
	{
		[Token(Token = "0x40010ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string Term;

		[Token(Token = "0x40010EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public eTermType TermType;

		[NonSerialized]
		[Token(Token = "0x40010EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string Description;

		[Token(Token = "0x40010F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string[] Languages;

		[Token(Token = "0x40010F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public byte[] Flags;

		[Token(Token = "0x40010F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private string[] Languages_Touch;

		[Token(Token = "0x6001588")]
		[Address(RVA = "0xE65F10", Offset = "0xE65F10", VA = "0xE65F10")]
		public string GetTranslation(int idx, [Optional] string specialization, bool editMode = false)
		{
			return null;
		}

		[Token(Token = "0x6001589")]
		[Address(RVA = "0xE66024", Offset = "0xE66024", VA = "0xE66024")]
		public void SetTranslation(int idx, string translation, [Optional] string specialization)
		{
		}

		[Token(Token = "0x600158A")]
		[Address(RVA = "0xE66100", Offset = "0xE66100", VA = "0xE66100")]
		public void RemoveSpecialization(string specialization)
		{
		}

		[Token(Token = "0x600158B")]
		[Address(RVA = "0xE66154", Offset = "0xE66154", VA = "0xE66154")]
		public void RemoveSpecialization(int idx, string specialization)
		{
		}

		[Token(Token = "0x600158C")]
		[Address(RVA = "0xE662E0", Offset = "0xE662E0", VA = "0xE662E0")]
		public bool IsAutoTranslated(int idx, bool IsTouch)
		{
			return default(bool);
		}

		[Token(Token = "0x600158D")]
		[Address(RVA = "0xE66314", Offset = "0xE66314", VA = "0xE66314")]
		public void Validate()
		{
		}

		[Token(Token = "0x600158E")]
		[Address(RVA = "0xE664C8", Offset = "0xE664C8", VA = "0xE664C8")]
		public bool IsTerm(string name, bool allowCategoryMistmatch)
		{
			return default(bool);
		}

		[Token(Token = "0x600158F")]
		[Address(RVA = "0xE66550", Offset = "0xE66550", VA = "0xE66550")]
		public bool HasSpecializations()
		{
			return default(bool);
		}

		[Token(Token = "0x6001590")]
		[Address(RVA = "0xE66618", Offset = "0xE66618", VA = "0xE66618")]
		public List<string> GetAllSpecializations()
		{
			return null;
		}

		[Token(Token = "0x6001591")]
		[Address(RVA = "0xE66700", Offset = "0xE66700", VA = "0xE66700")]
		public TermData()
		{
		}
	}
	[Token(Token = "0x200030B")]
	public class TermsPopup : PropertyAttribute
	{
		[Token(Token = "0x1700029C")]
		public string Filter
		{
			[Token(Token = "0x6001593")]
			[Address(RVA = "0xE66838", Offset = "0xE66838", VA = "0xE66838")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001594")]
			[Address(RVA = "0xE66840", Offset = "0xE66840", VA = "0xE66840")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x6001592")]
		[Address(RVA = "0xE66810", Offset = "0xE66810", VA = "0xE66810")]
		public TermsPopup(string filter = "")
		{
		}
	}
	[Token(Token = "0x200030C")]
	public class AutoChangeCultureInfo : MonoBehaviour
	{
		[Token(Token = "0x6001595")]
		[Address(RVA = "0xE66848", Offset = "0xE66848", VA = "0xE66848")]
		public void Start()
		{
		}

		[Token(Token = "0x6001596")]
		[Address(RVA = "0xE6689C", Offset = "0xE6689C", VA = "0xE6689C")]
		public AutoChangeCultureInfo()
		{
		}
	}
	[Token(Token = "0x200030D")]
	public class CoroutineManager : MonoBehaviour
	{
		[Token(Token = "0x40010F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static CoroutineManager mInstance;

		[Token(Token = "0x1700029D")]
		private static CoroutineManager pInstance
		{
			[Token(Token = "0x6001597")]
			[Address(RVA = "0xE668A4", Offset = "0xE668A4", VA = "0xE668A4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001598")]
		[Address(RVA = "0xE669E4", Offset = "0xE669E4", VA = "0xE669E4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001599")]
		[Address(RVA = "0xE66A68", Offset = "0xE66A68", VA = "0xE66A68")]
		public static Coroutine Start(IEnumerator coroutine)
		{
			return null;
		}

		[Token(Token = "0x600159A")]
		[Address(RVA = "0xE66A8C", Offset = "0xE66A8C", VA = "0xE66A8C")]
		public CoroutineManager()
		{
		}
	}
	[Token(Token = "0x200030E")]
	[AddComponentMenu("I2/Localization/I2 Localize Callback")]
	public class CustomLocalizeCallback : MonoBehaviour
	{
		[Token(Token = "0x40010F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UnityEvent _OnLocalize;

		[Token(Token = "0x600159B")]
		[Address(RVA = "0xE66A94", Offset = "0xE66A94", VA = "0xE66A94")]
		public void OnEnable()
		{
		}

		[Token(Token = "0x600159C")]
		[Address(RVA = "0xE66B6C", Offset = "0xE66B6C", VA = "0xE66B6C")]
		public void OnDisable()
		{
		}

		[Token(Token = "0x600159D")]
		[Address(RVA = "0xE66C10", Offset = "0xE66C10", VA = "0xE66C10")]
		public void OnLocalize()
		{
		}

		[Token(Token = "0x600159E")]
		[Address(RVA = "0xE66C2C", Offset = "0xE66C2C", VA = "0xE66C2C")]
		public CustomLocalizeCallback()
		{
		}
	}
	[Token(Token = "0x200030F")]
	public class HindiFixer
	{
		[Token(Token = "0x600159F")]
		[Address(RVA = "0xE66C94", Offset = "0xE66C94", VA = "0xE66C94")]
		internal static string Fix(string text)
		{
			return null;
		}

		[Token(Token = "0x60015A0")]
		[Address(RVA = "0xE67098", Offset = "0xE67098", VA = "0xE67098")]
		public HindiFixer()
		{
		}
	}
	[Token(Token = "0x2000311")]
	public static class I2Utils
	{
		[Token(Token = "0x40010F8")]
		public const string ValidChars = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789_";

		[Token(Token = "0x40010F9")]
		public const string NumberChars = "0123456789";

		[Token(Token = "0x40010FA")]
		public const string ValidNameSymbols = ".-_$#@*()[]{}+:?!&',^=<>~`";

		[Token(Token = "0x60015A4")]
		[Address(RVA = "0xE62E64", Offset = "0xE62E64", VA = "0xE62E64")]
		public static string ReverseText(string source)
		{
			return null;
		}

		[Token(Token = "0x60015A5")]
		[Address(RVA = "0xE67118", Offset = "0xE67118", VA = "0xE67118")]
		public static string RemoveNonASCII(string text, bool allowCategory = false)
		{
			return null;
		}

		[Token(Token = "0x60015A6")]
		[Address(RVA = "0xE67338", Offset = "0xE67338", VA = "0xE67338")]
		public static string GetValidTermName(string text, bool allowCategory = false)
		{
			return null;
		}

		[Token(Token = "0x60015A7")]
		[Address(RVA = "0xE673E0", Offset = "0xE673E0", VA = "0xE673E0")]
		public static string SplitLine(string line, int maxCharacters)
		{
			return null;
		}

		[Token(Token = "0x60015A8")]
		[Address(RVA = "0xE6767C", Offset = "0xE6767C", VA = "0xE6767C")]
		public static bool FindNextTag(string line, int iStart, out int tagStart, out int tagEnd)
		{
			return default(bool);
		}

		[Token(Token = "0x60015A9")]
		[Address(RVA = "0xE67358", Offset = "0xE67358", VA = "0xE67358")]
		public static string RemoveTags(string text)
		{
			return null;
		}

		[Token(Token = "0x60015AA")]
		[Address(RVA = "0xE67800", Offset = "0xE67800", VA = "0xE67800")]
		public static bool RemoveResourcesPath(ref string sPath)
		{
			return default(bool);
		}

		[Token(Token = "0x60015AB")]
		[Address(RVA = "0xE67A8C", Offset = "0xE67A8C", VA = "0xE67A8C")]
		public static bool IsPlaying()
		{
			return default(bool);
		}

		[Token(Token = "0x60015AC")]
		[Address(RVA = "0xE67A94", Offset = "0xE67A94", VA = "0xE67A94")]
		public static string GetPath(this Transform tr)
		{
			return null;
		}

		[Token(Token = "0x60015AD")]
		[Address(RVA = "0xE67B64", Offset = "0xE67B64", VA = "0xE67B64")]
		public static Transform FindObject(string objectPath)
		{
			return null;
		}

		[Token(Token = "0x60015AE")]
		[Address(RVA = "0xE67BC4", Offset = "0xE67BC4", VA = "0xE67BC4")]
		public static Transform FindObject(Scene scene, string objectPath)
		{
			return null;
		}

		[Token(Token = "0x60015AF")]
		[Address(RVA = "0xE67D04", Offset = "0xE67D04", VA = "0xE67D04")]
		public static Transform FindObject(Transform root, string objectPath)
		{
			return null;
		}

		[Token(Token = "0x60015B0")]
		public static H FindInParents<H>(Transform tr) where H : Component
		{
			return null;
		}

		[Token(Token = "0x60015B1")]
		[Address(RVA = "0xE67E2C", Offset = "0xE67E2C", VA = "0xE67E2C")]
		public static string GetCaptureMatch(Match match)
		{
			return null;
		}

		[Token(Token = "0x60015B2")]
		[Address(RVA = "0xE67ED8", Offset = "0xE67ED8", VA = "0xE67ED8")]
		public static void SendWebRequest(UnityWebRequest www)
		{
		}
	}
	[Token(Token = "0x2000313")]
	public interface ILocalizationParamsManager
	{
		[Token(Token = "0x60015B6")]
		string GetParameterValue(string Param);
	}
	[Token(Token = "0x2000314")]
	public class LocalizationParamsManager : MonoBehaviour, ILocalizationParamsManager
	{
		[Serializable]
		[Token(Token = "0x2000315")]
		public struct ParamValue
		{
			[Token(Token = "0x40010FF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string Name;

			[Token(Token = "0x4001100")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public string Value;
		}

		[Token(Token = "0x40010FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public List<ParamValue> _Params;

		[Token(Token = "0x40010FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool _IsGlobalManager;

		[Token(Token = "0x60015B7")]
		[Address(RVA = "0xE67F64", Offset = "0xE67F64", VA = "0xE67F64", Slot = "4")]
		public string GetParameterValue(string ParamName)
		{
			return null;
		}

		[Token(Token = "0x60015B8")]
		[Address(RVA = "0xE68028", Offset = "0xE68028", VA = "0xE68028")]
		public void SetParameterValue(string ParamName, string ParamValue, bool localize = true)
		{
		}

		[Token(Token = "0x60015B9")]
		[Address(RVA = "0xE681C4", Offset = "0xE681C4", VA = "0xE681C4")]
		public void OnLocalize()
		{
		}

		[Token(Token = "0x60015BA")]
		[Address(RVA = "0xE6827C", Offset = "0xE6827C", VA = "0xE6827C", Slot = "5")]
		public virtual void OnEnable()
		{
		}

		[Token(Token = "0x60015BB")]
		[Address(RVA = "0xE6828C", Offset = "0xE6828C", VA = "0xE6828C")]
		public void DoAutoRegister()
		{
		}

		[Token(Token = "0x60015BC")]
		[Address(RVA = "0xE683B0", Offset = "0xE683B0", VA = "0xE683B0")]
		public void OnDisable()
		{
		}

		[Token(Token = "0x60015BD")]
		[Address(RVA = "0xE68430", Offset = "0xE68430", VA = "0xE68430")]
		public LocalizationParamsManager()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000316")]
	public struct LocalizedString
	{
		[Token(Token = "0x4001101")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string mTerm;

		[Token(Token = "0x4001102")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public bool mRTL_IgnoreArabicFix;

		[Token(Token = "0x4001103")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int mRTL_MaxLineLength;

		[Token(Token = "0x4001104")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool mRTL_ConvertNumbers;

		[Token(Token = "0x4001105")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public bool m_DontLocalizeParameters;

		[Token(Token = "0x60015BE")]
		[Address(RVA = "0xE684AC", Offset = "0xE684AC", VA = "0xE684AC")]
		public static implicit operator string(LocalizedString s)
		{
			return null;
		}

		[Token(Token = "0x60015BF")]
		[Address(RVA = "0xE68574", Offset = "0xE68574", VA = "0xE68574")]
		public static implicit operator LocalizedString(string term)
		{
			return default(LocalizedString);
		}

		[Token(Token = "0x60015C0")]
		[Address(RVA = "0xE68580", Offset = "0xE68580", VA = "0xE68580")]
		public LocalizedString(LocalizedString str)
		{
		}

		[Token(Token = "0x60015C1")]
		[Address(RVA = "0xE684B0", Offset = "0xE684B0", VA = "0xE684B0", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x2000317")]
	public class RegisterCallback_AllowSyncFromGoogle : MonoBehaviour
	{
		[Token(Token = "0x60015C2")]
		[Address(RVA = "0xE685B8", Offset = "0xE685B8", VA = "0xE685B8")]
		public void Awake()
		{
		}

		[Token(Token = "0x60015C3")]
		[Address(RVA = "0xE68654", Offset = "0xE68654", VA = "0xE68654")]
		public void OnEnable()
		{
		}

		[Token(Token = "0x60015C4")]
		[Address(RVA = "0xE686F0", Offset = "0xE686F0", VA = "0xE686F0")]
		public void OnDisable()
		{
		}

		[Token(Token = "0x60015C5")]
		[Address(RVA = "0xE68748", Offset = "0xE68748", VA = "0xE68748", Slot = "4")]
		public virtual bool AllowSyncFromGoogle(LanguageSourceData Source)
		{
			return default(bool);
		}

		[Token(Token = "0x60015C6")]
		[Address(RVA = "0xE68750", Offset = "0xE68750", VA = "0xE68750")]
		public RegisterCallback_AllowSyncFromGoogle()
		{
		}
	}
	[Token(Token = "0x2000318")]
	public class RegisterGlobalParameters : MonoBehaviour, ILocalizationParamsManager
	{
		[Token(Token = "0x60015C7")]
		[Address(RVA = "0xE68758", Offset = "0xE68758", VA = "0xE68758", Slot = "5")]
		public virtual void OnEnable()
		{
		}

		[Token(Token = "0x60015C8")]
		[Address(RVA = "0xE6887C", Offset = "0xE6887C", VA = "0xE6887C", Slot = "6")]
		public virtual void OnDisable()
		{
		}

		[Token(Token = "0x60015C9")]
		[Address(RVA = "0xE688FC", Offset = "0xE688FC", VA = "0xE688FC", Slot = "7")]
		public virtual string GetParameterValue(string ParamName)
		{
			return null;
		}

		[Token(Token = "0x60015CA")]
		[Address(RVA = "0xE68904", Offset = "0xE68904", VA = "0xE68904")]
		public RegisterGlobalParameters()
		{
		}
	}
	[Token(Token = "0x2000319")]
	public interface IResourceManager_Bundles
	{
		[Token(Token = "0x60015CB")]
		UnityEngine.Object LoadFromBundle(string path, Type assetType);
	}
	[Token(Token = "0x200031A")]
	public class ResourceManager : MonoBehaviour
	{
		[Token(Token = "0x4001106")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static ResourceManager mInstance;

		[Token(Token = "0x4001107")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<IResourceManager_Bundles> mBundleManagers;

		[Token(Token = "0x4001108")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UnityEngine.Object[] Assets;

		[Token(Token = "0x4001109")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly Dictionary<string, UnityEngine.Object> mResourcesCache;

		[Token(Token = "0x1700029E")]
		public static ResourceManager pInstance
		{
			[Token(Token = "0x60015CC")]
			[Address(RVA = "0xE6890C", Offset = "0xE6890C", VA = "0xE6890C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60015CD")]
		[Address(RVA = "0xE68CB4", Offset = "0xE68CB4", VA = "0xE68CB4")]
		public static void MyOnLevelWasLoaded(Scene scene, LoadSceneMode mode)
		{
		}

		[Token(Token = "0x60015CE")]
		public T GetAsset<T>(string Name) where T : UnityEngine.Object
		{
			return null;
		}

		[Token(Token = "0x60015CF")]
		[Address(RVA = "0xE68D7C", Offset = "0xE68D7C", VA = "0xE68D7C")]
		private UnityEngine.Object FindAsset(string Name)
		{
			return null;
		}

		[Token(Token = "0x60015D0")]
		[Address(RVA = "0xE68EA0", Offset = "0xE68EA0", VA = "0xE68EA0")]
		public bool HasAsset(UnityEngine.Object Obj)
		{
			return default(bool);
		}

		[Token(Token = "0x60015D1")]
		public T LoadFromResources<T>(string Path) where T : UnityEngine.Object
		{
			return null;
		}

		[Token(Token = "0x60015D2")]
		public T LoadFromBundle<T>(string path) where T : UnityEngine.Object
		{
			return null;
		}

		[Token(Token = "0x60015D3")]
		[Address(RVA = "0xE68D10", Offset = "0xE68D10", VA = "0xE68D10")]
		public void CleanResourceCache(bool unloadResources = false)
		{
		}

		[Token(Token = "0x60015D4")]
		[Address(RVA = "0xE68F00", Offset = "0xE68F00", VA = "0xE68F00")]
		public ResourceManager()
		{
		}
	}
	[Token(Token = "0x200031B")]
	public class RTLFixer
	{
		[Token(Token = "0x60015D5")]
		[Address(RVA = "0xE6902C", Offset = "0xE6902C", VA = "0xE6902C")]
		public static string Fix(string str)
		{
			return null;
		}

		[Token(Token = "0x60015D6")]
		[Address(RVA = "0xE692A8", Offset = "0xE692A8", VA = "0xE692A8")]
		public static string Fix(string str, bool rtl)
		{
			return null;
		}

		[Token(Token = "0x60015D7")]
		[Address(RVA = "0xE69038", Offset = "0xE69038", VA = "0xE69038")]
		public static string Fix(string str, bool showTashkeel, bool useHinduNumbers)
		{
			return null;
		}

		[Token(Token = "0x60015D8")]
		[Address(RVA = "0xE6A4B0", Offset = "0xE6A4B0", VA = "0xE6A4B0")]
		public RTLFixer()
		{
		}
	}
	[Token(Token = "0x200031C")]
	internal enum IsolatedArabicLetters
	{
		[Token(Token = "0x400110B")]
		Hamza = 65152,
		[Token(Token = "0x400110C")]
		Alef = 65165,
		[Token(Token = "0x400110D")]
		AlefHamza = 65155,
		[Token(Token = "0x400110E")]
		WawHamza = 65157,
		[Token(Token = "0x400110F")]
		AlefMaksoor = 65159,
		[Token(Token = "0x4001110")]
		AlefMaksora = 64508,
		[Token(Token = "0x4001111")]
		HamzaNabera = 65161,
		[Token(Token = "0x4001112")]
		Ba = 65167,
		[Token(Token = "0x4001113")]
		Ta = 65173,
		[Token(Token = "0x4001114")]
		Tha2 = 65177,
		[Token(Token = "0x4001115")]
		Jeem = 65181,
		[Token(Token = "0x4001116")]
		H7aa = 65185,
		[Token(Token = "0x4001117")]
		Khaa2 = 65189,
		[Token(Token = "0x4001118")]
		Dal = 65193,
		[Token(Token = "0x4001119")]
		Thal = 65195,
		[Token(Token = "0x400111A")]
		Ra2 = 65197,
		[Token(Token = "0x400111B")]
		Zeen = 65199,
		[Token(Token = "0x400111C")]
		Seen = 65201,
		[Token(Token = "0x400111D")]
		Sheen = 65205,
		[Token(Token = "0x400111E")]
		S9a = 65209,
		[Token(Token = "0x400111F")]
		Dha = 65213,
		[Token(Token = "0x4001120")]
		T6a = 65217,
		[Token(Token = "0x4001121")]
		T6ha = 65221,
		[Token(Token = "0x4001122")]
		Ain = 65225,
		[Token(Token = "0x4001123")]
		Gain = 65229,
		[Token(Token = "0x4001124")]
		Fa = 65233,
		[Token(Token = "0x4001125")]
		Gaf = 65237,
		[Token(Token = "0x4001126")]
		Kaf = 65241,
		[Token(Token = "0x4001127")]
		Lam = 65245,
		[Token(Token = "0x4001128")]
		Meem = 65249,
		[Token(Token = "0x4001129")]
		Noon = 65253,
		[Token(Token = "0x400112A")]
		Ha = 65257,
		[Token(Token = "0x400112B")]
		Waw = 65261,
		[Token(Token = "0x400112C")]
		Ya = 65265,
		[Token(Token = "0x400112D")]
		AlefMad = 65153,
		[Token(Token = "0x400112E")]
		TaMarboota = 65171,
		[Token(Token = "0x400112F")]
		PersianPe = 64342,
		[Token(Token = "0x4001130")]
		PersianChe = 64378,
		[Token(Token = "0x4001131")]
		PersianZe = 64394,
		[Token(Token = "0x4001132")]
		PersianGaf = 64402,
		[Token(Token = "0x4001133")]
		PersianGaf2 = 64398
	}
	[Token(Token = "0x200031D")]
	internal enum GeneralArabicLetters
	{
		[Token(Token = "0x4001135")]
		Hamza = 1569,
		[Token(Token = "0x4001136")]
		Alef = 1575,
		[Token(Token = "0x4001137")]
		AlefHamza = 1571,
		[Token(Token = "0x4001138")]
		WawHamza = 1572,
		[Token(Token = "0x4001139")]
		AlefMaksoor = 1573,
		[Token(Token = "0x400113A")]
		AlefMagsora = 1609,
		[Token(Token = "0x400113B")]
		HamzaNabera = 1574,
		[Token(Token = "0x400113C")]
		Ba = 1576,
		[Token(Token = "0x400113D")]
		Ta = 1578,
		[Token(Token = "0x400113E")]
		Tha2 = 1579,
		[Token(Token = "0x400113F")]
		Jeem = 1580,
		[Token(Token = "0x4001140")]
		H7aa = 1581,
		[Token(Token = "0x4001141")]
		Khaa2 = 1582,
		[Token(Token = "0x4001142")]
		Dal = 1583,
		[Token(Token = "0x4001143")]
		Thal = 1584,
		[Token(Token = "0x4001144")]
		Ra2 = 1585,
		[Token(Token = "0x4001145")]
		Zeen = 1586,
		[Token(Token = "0x4001146")]
		Seen = 1587,
		[Token(Token = "0x4001147")]
		Sheen = 1588,
		[Token(Token = "0x4001148")]
		S9a = 1589,
		[Token(Token = "0x4001149")]
		Dha = 1590,
		[Token(Token = "0x400114A")]
		T6a = 1591,
		[Token(Token = "0x400114B")]
		T6ha = 1592,
		[Token(Token = "0x400114C")]
		Ain = 1593,
		[Token(Token = "0x400114D")]
		Gain = 1594,
		[Token(Token = "0x400114E")]
		Fa = 1601,
		[Token(Token = "0x400114F")]
		Gaf = 1602,
		[Token(Token = "0x4001150")]
		Kaf = 1603,
		[Token(Token = "0x4001151")]
		Lam = 1604,
		[Token(Token = "0x4001152")]
		Meem = 1605,
		[Token(Token = "0x4001153")]
		Noon = 1606,
		[Token(Token = "0x4001154")]
		Ha = 1607,
		[Token(Token = "0x4001155")]
		Waw = 1608,
		[Token(Token = "0x4001156")]
		Ya = 1610,
		[Token(Token = "0x4001157")]
		AlefMad = 1570,
		[Token(Token = "0x4001158")]
		TaMarboota = 1577,
		[Token(Token = "0x4001159")]
		PersianPe = 1662,
		[Token(Token = "0x400115A")]
		PersianChe = 1670,
		[Token(Token = "0x400115B")]
		PersianZe = 1688,
		[Token(Token = "0x400115C")]
		PersianGaf = 1711,
		[Token(Token = "0x400115D")]
		PersianGaf2 = 1705
	}
	[Token(Token = "0x200031E")]
	internal class ArabicMapping
	{
		[Token(Token = "0x400115E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int from;

		[Token(Token = "0x400115F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int to;

		[Token(Token = "0x60015D9")]
		[Address(RVA = "0xE6A4B8", Offset = "0xE6A4B8", VA = "0xE6A4B8")]
		public ArabicMapping(int from, int to)
		{
		}
	}
	[Token(Token = "0x200031F")]
	internal class ArabicTable
	{
		[Token(Token = "0x4001160")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static List<ArabicMapping> mapList;

		[Token(Token = "0x4001161")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static ArabicTable arabicMapper;

		[Token(Token = "0x1700029F")]
		internal static ArabicTable ArabicMapper
		{
			[Token(Token = "0x60015DB")]
			[Address(RVA = "0xE6BC24", Offset = "0xE6BC24", VA = "0xE6BC24")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60015DA")]
		[Address(RVA = "0xE6A4E4", Offset = "0xE6A4E4", VA = "0xE6A4E4")]
		private ArabicTable()
		{
		}

		[Token(Token = "0x60015DC")]
		[Address(RVA = "0xE6BC94", Offset = "0xE6BC94", VA = "0xE6BC94")]
		internal int Convert(int toBeConverted)
		{
			return default(int);
		}
	}
	[Token(Token = "0x2000320")]
	internal class TashkeelLocation
	{
		[Token(Token = "0x4001162")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public char tashkeel;

		[Token(Token = "0x4001163")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int position;

		[Token(Token = "0x60015DD")]
		[Address(RVA = "0xE6BE28", Offset = "0xE6BE28", VA = "0xE6BE28")]
		public TashkeelLocation(char tashkeel, int position)
		{
		}
	}
	[Token(Token = "0x2000321")]
	internal class RTLFixerTool
	{
		[Token(Token = "0x4001164")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal static bool showTashkeel;

		[Token(Token = "0x4001165")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		internal static bool useHinduNumbers;

		[Token(Token = "0x60015DE")]
		[Address(RVA = "0xE6BE58", Offset = "0xE6BE58", VA = "0xE6BE58")]
		internal static string RemoveTashkeel(string str, out List<TashkeelLocation> tashkeelLocation)
		{
			return null;
		}

		[Token(Token = "0x60015DF")]
		[Address(RVA = "0xE6C374", Offset = "0xE6C374", VA = "0xE6C374")]
		internal static char[] ReturnTashkeel(char[] letters, List<TashkeelLocation> tashkeelLocation)
		{
			return null;
		}

		[Token(Token = "0x60015E0")]
		[Address(RVA = "0xE694A8", Offset = "0xE694A8", VA = "0xE694A8")]
		internal static string FixLine(string str)
		{
			return null;
		}

		[Token(Token = "0x60015E1")]
		[Address(RVA = "0xE6C59C", Offset = "0xE6C59C", VA = "0xE6C59C")]
		internal static bool IsIgnoredCharacter(char ch)
		{
			return default(bool);
		}

		[Token(Token = "0x60015E2")]
		[Address(RVA = "0xE6CB6C", Offset = "0xE6CB6C", VA = "0xE6CB6C")]
		internal static bool IsLeadingLetter(char[] letters, int index)
		{
			return default(bool);
		}

		[Token(Token = "0x60015E3")]
		[Address(RVA = "0xE6CA28", Offset = "0xE6CA28", VA = "0xE6CA28")]
		internal static bool IsFinishingLetter(char[] letters, int index)
		{
			return default(bool);
		}

		[Token(Token = "0x60015E4")]
		[Address(RVA = "0xE6C6F8", Offset = "0xE6C6F8", VA = "0xE6C6F8")]
		internal static bool IsMiddleLetter(char[] letters, int index)
		{
			return default(bool);
		}

		[Token(Token = "0x60015E5")]
		[Address(RVA = "0xE6CE58", Offset = "0xE6CE58", VA = "0xE6CE58")]
		public RTLFixerTool()
		{
		}
	}
	[Token(Token = "0x2000322")]
	[AddComponentMenu("I2/Localization/SetLanguage Button")]
	public class SetLanguage : MonoBehaviour
	{
		[Token(Token = "0x4001166")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string _Language;

		[Token(Token = "0x60015E7")]
		[Address(RVA = "0xE6CEAC", Offset = "0xE6CEAC", VA = "0xE6CEAC")]
		private void OnClick()
		{
		}

		[Token(Token = "0x60015E8")]
		[Address(RVA = "0xE6CEB0", Offset = "0xE6CEB0", VA = "0xE6CEB0")]
		public void ApplyLanguage()
		{
		}

		[Token(Token = "0x60015E9")]
		[Address(RVA = "0xE6CF48", Offset = "0xE6CF48", VA = "0xE6CF48")]
		public SetLanguage()
		{
		}
	}
	[Token(Token = "0x2000323")]
	[AddComponentMenu("I2/Localization/SetLanguage Dropdown")]
	public class SetLanguageDropdown : MonoBehaviour
	{
		[Token(Token = "0x60015EA")]
		[Address(RVA = "0xE6CF50", Offset = "0xE6CF50", VA = "0xE6CF50")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60015EB")]
		[Address(RVA = "0xE6D1A8", Offset = "0xE6D1A8", VA = "0xE6D1A8")]
		private void OnValueChanged(int index)
		{
		}

		[Token(Token = "0x60015EC")]
		[Address(RVA = "0xE6D294", Offset = "0xE6D294", VA = "0xE6D294")]
		public SetLanguageDropdown()
		{
		}
	}
	[Token(Token = "0x2000324")]
	public class StringObfucator
	{
		[Token(Token = "0x4001167")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static char[] StringObfuscatorPassword;

		[Token(Token = "0x60015ED")]
		[Address(RVA = "0xE6D29C", Offset = "0xE6D29C", VA = "0xE6D29C")]
		public static string Encode(string NormalString)
		{
			return null;
		}

		[Token(Token = "0x60015EE")]
		[Address(RVA = "0xE6D590", Offset = "0xE6D590", VA = "0xE6D590")]
		public static string Decode(string ObfucatedString)
		{
			return null;
		}

		[Token(Token = "0x60015EF")]
		[Address(RVA = "0xE6D50C", Offset = "0xE6D50C", VA = "0xE6D50C")]
		private static string ToBase64(string regularString)
		{
			return null;
		}

		[Token(Token = "0x60015F0")]
		[Address(RVA = "0xE6D668", Offset = "0xE6D668", VA = "0xE6D668")]
		private static string FromBase64(string base64string)
		{
			return null;
		}

		[Token(Token = "0x60015F1")]
		[Address(RVA = "0xE6D374", Offset = "0xE6D374", VA = "0xE6D374")]
		private static string XoREncode(string NormalString)
		{
			return null;
		}

		[Token(Token = "0x60015F2")]
		[Address(RVA = "0xE6D6F4", Offset = "0xE6D6F4", VA = "0xE6D6F4")]
		public StringObfucator()
		{
		}
	}
}
namespace I2.Loc.SimpleJSON
{
	[Token(Token = "0x2000325")]
	public enum JSONBinaryTag
	{
		[Token(Token = "0x4001169")]
		Array = 1,
		[Token(Token = "0x400116A")]
		Class,
		[Token(Token = "0x400116B")]
		Value,
		[Token(Token = "0x400116C")]
		IntValue,
		[Token(Token = "0x400116D")]
		DoubleValue,
		[Token(Token = "0x400116E")]
		BoolValue,
		[Token(Token = "0x400116F")]
		FloatValue
	}
	[Token(Token = "0x2000326")]
	public class JSONNode
	{
		[Token(Token = "0x2000327")]
		[CompilerGenerated]
		private sealed class <get_Childs>d__17 : IEnumerable<JSONNode>, IEnumerable, IEnumerator<JSONNode>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001170")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001171")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private JSONNode <>2__current;

			[Token(Token = "0x4001172")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x170002AC")]
			private JSONNode System.Collections.Generic.IEnumerator<I2.Loc.SimpleJSON.JSONNode>.Current
			{
				[Token(Token = "0x6001628")]
				[Address(RVA = "0xE6F7DC", Offset = "0xE6F7DC", VA = "0xE6F7DC", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002AD")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600162A")]
				[Address(RVA = "0xE6F824", Offset = "0xE6F824", VA = "0xE6F824", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001625")]
			[Address(RVA = "0xE6D8BC", Offset = "0xE6D8BC", VA = "0xE6D8BC")]
			[DebuggerHidden]
			public <get_Childs>d__17(int <>1__state)
			{
			}

			[Token(Token = "0x6001626")]
			[Address(RVA = "0xE6F7C0", Offset = "0xE6F7C0", VA = "0xE6F7C0", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001627")]
			[Address(RVA = "0xE6F7C4", Offset = "0xE6F7C4", VA = "0xE6F7C4", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001629")]
			[Address(RVA = "0xE6F7E4", Offset = "0xE6F7E4", VA = "0xE6F7E4", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x600162B")]
			[Address(RVA = "0xE6F82C", Offset = "0xE6F82C", VA = "0xE6F82C", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<JSONNode> System.Collections.Generic.IEnumerable<I2.Loc.SimpleJSON.JSONNode>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x600162C")]
			[Address(RVA = "0xE6F8C4", Offset = "0xE6F8C4", VA = "0xE6F8C4", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x2000328")]
		[CompilerGenerated]
		private sealed class <get_DeepChilds>d__19 : IEnumerable<JSONNode>, IEnumerable, IEnumerator<JSONNode>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001173")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001174")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private JSONNode <>2__current;

			[Token(Token = "0x4001175")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4001176")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public JSONNode <>4__this;

			[Token(Token = "0x4001177")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private IEnumerator<JSONNode> <>7__wrap1;

			[Token(Token = "0x4001178")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private IEnumerator<JSONNode> <>7__wrap2;

			[Token(Token = "0x170002AE")]
			private JSONNode System.Collections.Generic.IEnumerator<I2.Loc.SimpleJSON.JSONNode>.Current
			{
				[Token(Token = "0x6001632")]
				[Address(RVA = "0xE6FF14", Offset = "0xE6FF14", VA = "0xE6FF14", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002AF")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001634")]
				[Address(RVA = "0xE6FF5C", Offset = "0xE6FF5C", VA = "0xE6FF5C", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600162D")]
			[Address(RVA = "0xE6D968", Offset = "0xE6D968", VA = "0xE6D968")]
			[DebuggerHidden]
			public <get_DeepChilds>d__19(int <>1__state)
			{
			}

			[Token(Token = "0x600162E")]
			[Address(RVA = "0xE6F8C8", Offset = "0xE6F8C8", VA = "0xE6F8C8", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600162F")]
			[Address(RVA = "0xE6F980", Offset = "0xE6F980", VA = "0xE6F980", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001630")]
			[Address(RVA = "0xE6FE64", Offset = "0xE6FE64", VA = "0xE6FE64")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6001631")]
			[Address(RVA = "0xE6FDB4", Offset = "0xE6FDB4", VA = "0xE6FDB4")]
			private void <>m__Finally2()
			{
			}

			[Token(Token = "0x6001633")]
			[Address(RVA = "0xE6FF1C", Offset = "0xE6FF1C", VA = "0xE6FF1C", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6001635")]
			[Address(RVA = "0xE6FF64", Offset = "0xE6FF64", VA = "0xE6FF64", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<JSONNode> System.Collections.Generic.IEnumerable<I2.Loc.SimpleJSON.JSONNode>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6001636")]
			[Address(RVA = "0xE70008", Offset = "0xE70008", VA = "0xE70008", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x170002A0")]
		public virtual JSONNode this[int aIndex]
		{
			[Token(Token = "0x60015F5")]
			[Address(RVA = "0xE6D770", Offset = "0xE6D770", VA = "0xE6D770", Slot = "5")]
			get
			{
				return null;
			}
			[Token(Token = "0x60015F6")]
			[Address(RVA = "0xE6D778", Offset = "0xE6D778", VA = "0xE6D778", Slot = "6")]
			set
			{
			}
		}

		[Token(Token = "0x170002A1")]
		public virtual JSONNode this[string aKey]
		{
			[Token(Token = "0x60015F7")]
			[Address(RVA = "0xE6D77C", Offset = "0xE6D77C", VA = "0xE6D77C", Slot = "7")]
			get
			{
				return null;
			}
			[Token(Token = "0x60015F8")]
			[Address(RVA = "0xE6D784", Offset = "0xE6D784", VA = "0xE6D784", Slot = "8")]
			set
			{
			}
		}

		[Token(Token = "0x170002A2")]
		public virtual string Value
		{
			[Token(Token = "0x60015F9")]
			[Address(RVA = "0xE6D788", Offset = "0xE6D788", VA = "0xE6D788", Slot = "9")]
			get
			{
				return null;
			}
			[Token(Token = "0x60015FA")]
			[Address(RVA = "0xE6D7C8", Offset = "0xE6D7C8", VA = "0xE6D7C8", Slot = "10")]
			set
			{
			}
		}

		[Token(Token = "0x170002A3")]
		public virtual int Count
		{
			[Token(Token = "0x60015FB")]
			[Address(RVA = "0xE6D7CC", Offset = "0xE6D7CC", VA = "0xE6D7CC", Slot = "11")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170002A4")]
		public virtual IEnumerable<JSONNode> Childs
		{
			[Token(Token = "0x6001600")]
			[Address(RVA = "0xE6D84C", Offset = "0xE6D84C", VA = "0xE6D84C", Slot = "16")]
			[IteratorStateMachine(typeof(<get_Childs>d__17))]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002A5")]
		public IEnumerable<JSONNode> DeepChilds
		{
			[Token(Token = "0x6001601")]
			[Address(RVA = "0xE6D8F0", Offset = "0xE6D8F0", VA = "0xE6D8F0")]
			[IteratorStateMachine(typeof(<get_DeepChilds>d__19))]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002A6")]
		public virtual int AsInt
		{
			[Token(Token = "0x6001604")]
			[Address(RVA = "0xE6DA1C", Offset = "0xE6DA1C", VA = "0xE6DA1C", Slot = "18")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001605")]
			[Address(RVA = "0xE6DA50", Offset = "0xE6DA50", VA = "0xE6DA50", Slot = "19")]
			set
			{
			}
		}

		[Token(Token = "0x170002A7")]
		public virtual float AsFloat
		{
			[Token(Token = "0x6001606")]
			[Address(RVA = "0xE6DA8C", Offset = "0xE6DA8C", VA = "0xE6DA8C", Slot = "20")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001607")]
			[Address(RVA = "0xE6DAC4", Offset = "0xE6DAC4", VA = "0xE6DAC4", Slot = "21")]
			set
			{
			}
		}

		[Token(Token = "0x170002A8")]
		public virtual double AsDouble
		{
			[Token(Token = "0x6001608")]
			[Address(RVA = "0xE6DB00", Offset = "0xE6DB00", VA = "0xE6DB00", Slot = "22")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x6001609")]
			[Address(RVA = "0xE6DB38", Offset = "0xE6DB38", VA = "0xE6DB38", Slot = "23")]
			set
			{
			}
		}

		[Token(Token = "0x170002A9")]
		public virtual bool AsBool
		{
			[Token(Token = "0x600160A")]
			[Address(RVA = "0xE6DB74", Offset = "0xE6DB74", VA = "0xE6DB74", Slot = "24")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600160B")]
			[Address(RVA = "0xE6DC2C", Offset = "0xE6DC2C", VA = "0xE6DC2C", Slot = "25")]
			set
			{
			}
		}

		[Token(Token = "0x170002AA")]
		public virtual JSONArray AsArray
		{
			[Token(Token = "0x600160C")]
			[Address(RVA = "0xE6DCA4", Offset = "0xE6DCA4", VA = "0xE6DCA4", Slot = "26")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002AB")]
		public virtual JSONClass AsObject
		{
			[Token(Token = "0x600160D")]
			[Address(RVA = "0xE6DD1C", Offset = "0xE6DD1C", VA = "0xE6DD1C", Slot = "27")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60015F4")]
		[Address(RVA = "0xE6D76C", Offset = "0xE6D76C", VA = "0xE6D76C", Slot = "4")]
		public virtual void Add(string aKey, JSONNode aItem)
		{
		}

		[Token(Token = "0x60015FC")]
		[Address(RVA = "0xE6D7D4", Offset = "0xE6D7D4", VA = "0xE6D7D4", Slot = "12")]
		public virtual void Add(JSONNode aItem)
		{
		}

		[Token(Token = "0x60015FD")]
		[Address(RVA = "0xE6D834", Offset = "0xE6D834", VA = "0xE6D834", Slot = "13")]
		public virtual JSONNode Remove(string aKey)
		{
			return null;
		}

		[Token(Token = "0x60015FE")]
		[Address(RVA = "0xE6D83C", Offset = "0xE6D83C", VA = "0xE6D83C", Slot = "14")]
		public virtual JSONNode Remove(int aIndex)
		{
			return null;
		}

		[Token(Token = "0x60015FF")]
		[Address(RVA = "0xE6D844", Offset = "0xE6D844", VA = "0xE6D844", Slot = "15")]
		public virtual JSONNode Remove(JSONNode aNode)
		{
			return null;
		}

		[Token(Token = "0x6001602")]
		[Address(RVA = "0xE6D99C", Offset = "0xE6D99C", VA = "0xE6D99C", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6001603")]
		[Address(RVA = "0xE6D9DC", Offset = "0xE6D9DC", VA = "0xE6D9DC", Slot = "17")]
		public virtual string ToString(string aPrefix)
		{
			return null;
		}

		[Token(Token = "0x600160E")]
		[Address(RVA = "0xE6DD94", Offset = "0xE6DD94", VA = "0xE6DD94")]
		public static implicit operator JSONNode(string s)
		{
			return null;
		}

		[Token(Token = "0x600160F")]
		[Address(RVA = "0xE6DE20", Offset = "0xE6DE20", VA = "0xE6DE20")]
		public static implicit operator string(JSONNode d)
		{
			return null;
		}

		[Token(Token = "0x6001610")]
		[Address(RVA = "0xE6DE5C", Offset = "0xE6DE5C", VA = "0xE6DE5C")]
		public static bool operator ==(JSONNode a, object b)
		{
			return default(bool);
		}

		[Token(Token = "0x6001611")]
		[Address(RVA = "0xE6DEE4", Offset = "0xE6DEE4", VA = "0xE6DEE4")]
		public static bool operator !=(JSONNode a, object b)
		{
			return default(bool);
		}

		[Token(Token = "0x6001612")]
		[Address(RVA = "0xE6DEFC", Offset = "0xE6DEFC", VA = "0xE6DEFC", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6001613")]
		[Address(RVA = "0xE6DF08", Offset = "0xE6DF08", VA = "0xE6DF08", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6001614")]
		[Address(RVA = "0xE6DF10", Offset = "0xE6DF10", VA = "0xE6DF10")]
		internal static string Escape(string aText)
		{
			return null;
		}

		[Token(Token = "0x6001615")]
		[Address(RVA = "0xE6E0DC", Offset = "0xE6E0DC", VA = "0xE6E0DC")]
		public static JSONNode Parse(string aJSON)
		{
			return null;
		}

		[Token(Token = "0x6001616")]
		[Address(RVA = "0xE6E954", Offset = "0xE6E954", VA = "0xE6E954", Slot = "28")]
		public virtual void Serialize(BinaryWriter aWriter)
		{
		}

		[Token(Token = "0x6001617")]
		[Address(RVA = "0xE6E958", Offset = "0xE6E958", VA = "0xE6E958")]
		public void SaveToStream(Stream aData)
		{
		}

		[Token(Token = "0x6001618")]
		[Address(RVA = "0xE6E9D8", Offset = "0xE6E9D8", VA = "0xE6E9D8")]
		public void SaveToCompressedStream(Stream aData)
		{
		}

		[Token(Token = "0x6001619")]
		[Address(RVA = "0xE6EA28", Offset = "0xE6EA28", VA = "0xE6EA28")]
		public void SaveToCompressedFile(string aFileName)
		{
		}

		[Token(Token = "0x600161A")]
		[Address(RVA = "0xE6EA78", Offset = "0xE6EA78", VA = "0xE6EA78")]
		public string SaveToCompressedBase64()
		{
			return null;
		}

		[Token(Token = "0x600161B")]
		[Address(RVA = "0xE6EAC8", Offset = "0xE6EAC8", VA = "0xE6EAC8")]
		public void SaveToFile(string aFileName)
		{
		}

		[Token(Token = "0x600161C")]
		[Address(RVA = "0xE6EC98", Offset = "0xE6EC98", VA = "0xE6EC98")]
		public string SaveToBase64()
		{
			return null;
		}

		[Token(Token = "0x600161D")]
		[Address(RVA = "0xE6EE98", Offset = "0xE6EE98", VA = "0xE6EE98")]
		public static JSONNode Deserialize(BinaryReader aReader)
		{
			return null;
		}

		[Token(Token = "0x600161E")]
		[Address(RVA = "0xE6F304", Offset = "0xE6F304", VA = "0xE6F304")]
		public static JSONNode LoadFromCompressedFile(string aFileName)
		{
			return null;
		}

		[Token(Token = "0x600161F")]
		[Address(RVA = "0xE6F354", Offset = "0xE6F354", VA = "0xE6F354")]
		public static JSONNode LoadFromCompressedStream(Stream aData)
		{
			return null;
		}

		[Token(Token = "0x6001620")]
		[Address(RVA = "0xE6F3A4", Offset = "0xE6F3A4", VA = "0xE6F3A4")]
		public static JSONNode LoadFromCompressedBase64(string aBase64)
		{
			return null;
		}

		[Token(Token = "0x6001621")]
		[Address(RVA = "0xE6F3F4", Offset = "0xE6F3F4", VA = "0xE6F3F4")]
		public static JSONNode LoadFromStream(Stream aData)
		{
			return null;
		}

		[Token(Token = "0x6001622")]
		[Address(RVA = "0xE6F588", Offset = "0xE6F588", VA = "0xE6F588")]
		public static JSONNode LoadFromFile(string aFileName)
		{
			return null;
		}

		[Token(Token = "0x6001623")]
		[Address(RVA = "0xE6F704", Offset = "0xE6F704", VA = "0xE6F704")]
		public static JSONNode LoadFromBase64(string aBase64)
		{
			return null;
		}

		[Token(Token = "0x6001624")]
		[Address(RVA = "0xE6F7B8", Offset = "0xE6F7B8", VA = "0xE6F7B8")]
		public JSONNode()
		{
		}
	}
	[Token(Token = "0x2000329")]
	public class JSONArray : JSONNode, IEnumerable
	{
		[Token(Token = "0x200032A")]
		[CompilerGenerated]
		private sealed class <get_Childs>d__13 : IEnumerable<JSONNode>, IEnumerable, IEnumerator<JSONNode>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400117A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400117B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private JSONNode <>2__current;

			[Token(Token = "0x400117C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x400117D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public JSONArray <>4__this;

			[Token(Token = "0x400117E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private List<JSONNode>.Enumerator <>7__wrap1;

			[Token(Token = "0x170002B4")]
			private JSONNode System.Collections.Generic.IEnumerator<I2.Loc.SimpleJSON.JSONNode>.Current
			{
				[Token(Token = "0x6001649")]
				[Address(RVA = "0xE70DB0", Offset = "0xE70DB0", VA = "0xE70DB0", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002B5")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600164B")]
				[Address(RVA = "0xE70DF8", Offset = "0xE70DF8", VA = "0xE70DF8", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001645")]
			[Address(RVA = "0xE70578", Offset = "0xE70578", VA = "0xE70578")]
			[DebuggerHidden]
			public <get_Childs>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x6001646")]
			[Address(RVA = "0xE70BB0", Offset = "0xE70BB0", VA = "0xE70BB0", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001647")]
			[Address(RVA = "0xE70BCC", Offset = "0xE70BCC", VA = "0xE70BCC", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001648")]
			[Address(RVA = "0xE70D60", Offset = "0xE70D60", VA = "0xE70D60")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x600164A")]
			[Address(RVA = "0xE70DB8", Offset = "0xE70DB8", VA = "0xE70DB8", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x600164C")]
			[Address(RVA = "0xE70E00", Offset = "0xE70E00", VA = "0xE70E00", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<JSONNode> System.Collections.Generic.IEnumerable<I2.Loc.SimpleJSON.JSONNode>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x600164D")]
			[Address(RVA = "0xE70EA4", Offset = "0xE70EA4", VA = "0xE70EA4", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x200032B")]
		[CompilerGenerated]
		private sealed class <GetEnumerator>d__14 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400117F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001180")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001181")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public JSONArray <>4__this;

			[Token(Token = "0x4001182")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private List<JSONNode>.Enumerator <>7__wrap1;

			[Token(Token = "0x170002B6")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001652")]
				[Address(RVA = "0xE710A8", Offset = "0xE710A8", VA = "0xE710A8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002B7")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001654")]
				[Address(RVA = "0xE710F0", Offset = "0xE710F0", VA = "0xE710F0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600164E")]
			[Address(RVA = "0xE70614", Offset = "0xE70614", VA = "0xE70614")]
			[DebuggerHidden]
			public <GetEnumerator>d__14(int <>1__state)
			{
			}

			[Token(Token = "0x600164F")]
			[Address(RVA = "0xE70EA8", Offset = "0xE70EA8", VA = "0xE70EA8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001650")]
			[Address(RVA = "0xE70EC4", Offset = "0xE70EC4", VA = "0xE70EC4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001651")]
			[Address(RVA = "0xE71058", Offset = "0xE71058", VA = "0xE71058")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6001653")]
			[Address(RVA = "0xE710B0", Offset = "0xE710B0", VA = "0xE710B0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001179")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private List<JSONNode> m_List;

		[Token(Token = "0x170002B0")]
		public override JSONNode this[int aIndex]
		{
			[Token(Token = "0x6001637")]
			[Address(RVA = "0xE7000C", Offset = "0xE7000C", VA = "0xE7000C", Slot = "5")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001638")]
			[Address(RVA = "0xE700E8", Offset = "0xE700E8", VA = "0xE700E8", Slot = "6")]
			set
			{
			}
		}

		[Token(Token = "0x170002B1")]
		public override JSONNode this[string aKey]
		{
			[Token(Token = "0x6001639")]
			[Address(RVA = "0xE701F0", Offset = "0xE701F0", VA = "0xE701F0", Slot = "7")]
			get
			{
				return null;
			}
			[Token(Token = "0x600163A")]
			[Address(RVA = "0xE70254", Offset = "0xE70254", VA = "0xE70254", Slot = "8")]
			set
			{
			}
		}

		[Token(Token = "0x170002B2")]
		public override int Count
		{
			[Token(Token = "0x600163B")]
			[Address(RVA = "0xE702FC", Offset = "0xE702FC", VA = "0xE702FC", Slot = "11")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170002B3")]
		public override IEnumerable<JSONNode> Childs
		{
			[Token(Token = "0x600163F")]
			[Address(RVA = "0xE70500", Offset = "0xE70500", VA = "0xE70500", Slot = "16")]
			[IteratorStateMachine(typeof(<get_Childs>d__13))]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600163C")]
		[Address(RVA = "0xE70344", Offset = "0xE70344", VA = "0xE70344", Slot = "4")]
		public override void Add(string aKey, JSONNode aItem)
		{
		}

		[Token(Token = "0x600163D")]
		[Address(RVA = "0xE703EC", Offset = "0xE703EC", VA = "0xE703EC", Slot = "14")]
		public override JSONNode Remove(int aIndex)
		{
			return null;
		}

		[Token(Token = "0x600163E")]
		[Address(RVA = "0xE704A0", Offset = "0xE704A0", VA = "0xE704A0", Slot = "15")]
		public override JSONNode Remove(JSONNode aNode)
		{
			return null;
		}

		[Token(Token = "0x6001640")]
		[Address(RVA = "0xE705AC", Offset = "0xE705AC", VA = "0xE705AC", Slot = "29")]
		[IteratorStateMachine(typeof(<GetEnumerator>d__14))]
		public IEnumerator GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6001641")]
		[Address(RVA = "0xE7063C", Offset = "0xE7063C", VA = "0xE7063C", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6001642")]
		[Address(RVA = "0xE70854", Offset = "0xE70854", VA = "0xE70854", Slot = "17")]
		public override string ToString(string aPrefix)
		{
			return null;
		}

		[Token(Token = "0x6001643")]
		[Address(RVA = "0xE70AD4", Offset = "0xE70AD4", VA = "0xE70AD4", Slot = "28")]
		public override void Serialize(BinaryWriter aWriter)
		{
		}

		[Token(Token = "0x6001644")]
		[Address(RVA = "0xE6E8D8", Offset = "0xE6E8D8", VA = "0xE6E8D8")]
		public JSONArray()
		{
		}
	}
	[Token(Token = "0x200032C")]
	public class JSONClass : JSONNode, IEnumerable
	{
		[Token(Token = "0x200032E")]
		[CompilerGenerated]
		private sealed class <get_Childs>d__14 : IEnumerable<JSONNode>, IEnumerable, IEnumerator<JSONNode>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001185")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001186")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private JSONNode <>2__current;

			[Token(Token = "0x4001187")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4001188")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public JSONClass <>4__this;

			[Token(Token = "0x4001189")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Dictionary<string, JSONNode>.Enumerator <>7__wrap1;

			[Token(Token = "0x170002BC")]
			private JSONNode System.Collections.Generic.IEnumerator<I2.Loc.SimpleJSON.JSONNode>.Current
			{
				[Token(Token = "0x600166A")]
				[Address(RVA = "0xE726F0", Offset = "0xE726F0", VA = "0xE726F0", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002BD")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600166C")]
				[Address(RVA = "0xE72738", Offset = "0xE72738", VA = "0xE72738", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001666")]
			[Address(RVA = "0xE71974", Offset = "0xE71974", VA = "0xE71974")]
			[DebuggerHidden]
			public <get_Childs>d__14(int <>1__state)
			{
			}

			[Token(Token = "0x6001667")]
			[Address(RVA = "0xE724DC", Offset = "0xE724DC", VA = "0xE724DC", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001668")]
			[Address(RVA = "0xE724F8", Offset = "0xE724F8", VA = "0xE724F8", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001669")]
			[Address(RVA = "0xE726A0", Offset = "0xE726A0", VA = "0xE726A0")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x600166B")]
			[Address(RVA = "0xE726F8", Offset = "0xE726F8", VA = "0xE726F8", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x600166D")]
			[Address(RVA = "0xE72740", Offset = "0xE72740", VA = "0xE72740", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<JSONNode> System.Collections.Generic.IEnumerable<I2.Loc.SimpleJSON.JSONNode>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x600166E")]
			[Address(RVA = "0xE727E4", Offset = "0xE727E4", VA = "0xE727E4", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x200032F")]
		[CompilerGenerated]
		private sealed class <GetEnumerator>d__15 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400118A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400118B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400118C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public JSONClass <>4__this;

			[Token(Token = "0x400118D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Dictionary<string, JSONNode>.Enumerator <>7__wrap1;

			[Token(Token = "0x170002BE")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001673")]
				[Address(RVA = "0xE72A28", Offset = "0xE72A28", VA = "0xE72A28", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002BF")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001675")]
				[Address(RVA = "0xE72A70", Offset = "0xE72A70", VA = "0xE72A70", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600166F")]
			[Address(RVA = "0xE71A10", Offset = "0xE71A10", VA = "0xE71A10")]
			[DebuggerHidden]
			public <GetEnumerator>d__15(int <>1__state)
			{
			}

			[Token(Token = "0x6001670")]
			[Address(RVA = "0xE727E8", Offset = "0xE727E8", VA = "0xE727E8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001671")]
			[Address(RVA = "0xE72804", Offset = "0xE72804", VA = "0xE72804", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001672")]
			[Address(RVA = "0xE729D8", Offset = "0xE729D8", VA = "0xE729D8")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6001674")]
			[Address(RVA = "0xE72A30", Offset = "0xE72A30", VA = "0xE72A30", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001183")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Dictionary<string, JSONNode> m_Dict;

		[Token(Token = "0x170002B8")]
		public override JSONNode this[string aKey]
		{
			[Token(Token = "0x6001655")]
			[Address(RVA = "0xE710F8", Offset = "0xE710F8", VA = "0xE710F8", Slot = "7")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001656")]
			[Address(RVA = "0xE711E8", Offset = "0xE711E8", VA = "0xE711E8", Slot = "8")]
			set
			{
			}
		}

		[Token(Token = "0x170002B9")]
		public override JSONNode this[int aIndex]
		{
			[Token(Token = "0x6001657")]
			[Address(RVA = "0xE712B4", Offset = "0xE712B4", VA = "0xE712B4", Slot = "5")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001658")]
			[Address(RVA = "0xE71354", Offset = "0xE71354", VA = "0xE71354", Slot = "6")]
			set
			{
			}
		}

		[Token(Token = "0x170002BA")]
		public override int Count
		{
			[Token(Token = "0x6001659")]
			[Address(RVA = "0xE71430", Offset = "0xE71430", VA = "0xE71430", Slot = "11")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170002BB")]
		public override IEnumerable<JSONNode> Childs
		{
			[Token(Token = "0x600165E")]
			[Address(RVA = "0xE718FC", Offset = "0xE718FC", VA = "0xE718FC", Slot = "16")]
			[IteratorStateMachine(typeof(<get_Childs>d__14))]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600165A")]
		[Address(RVA = "0xE71480", Offset = "0xE71480", VA = "0xE71480", Slot = "4")]
		public override void Add(string aKey, JSONNode aItem)
		{
		}

		[Token(Token = "0x600165B")]
		[Address(RVA = "0xE71594", Offset = "0xE71594", VA = "0xE71594", Slot = "13")]
		public override JSONNode Remove(string aKey)
		{
			return null;
		}

		[Token(Token = "0x600165C")]
		[Address(RVA = "0xE71658", Offset = "0xE71658", VA = "0xE71658", Slot = "14")]
		public override JSONNode Remove(int aIndex)
		{
			return null;
		}

		[Token(Token = "0x600165D")]
		[Address(RVA = "0xE71734", Offset = "0xE71734", VA = "0xE71734", Slot = "15")]
		public override JSONNode Remove(JSONNode aNode)
		{
			return null;
		}

		[Token(Token = "0x600165F")]
		[Address(RVA = "0xE719A8", Offset = "0xE719A8", VA = "0xE719A8", Slot = "29")]
		[IteratorStateMachine(typeof(<GetEnumerator>d__15))]
		public IEnumerator GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6001660")]
		[Address(RVA = "0xE71A38", Offset = "0xE71A38", VA = "0xE71A38", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6001661")]
		[Address(RVA = "0xE71E0C", Offset = "0xE71E0C", VA = "0xE71E0C", Slot = "17")]
		public override string ToString(string aPrefix)
		{
			return null;
		}

		[Token(Token = "0x6001662")]
		[Address(RVA = "0xE72278", Offset = "0xE72278", VA = "0xE72278", Slot = "28")]
		public override void Serialize(BinaryWriter aWriter)
		{
		}

		[Token(Token = "0x6001663")]
		[Address(RVA = "0xE6E7F8", Offset = "0xE6E7F8", VA = "0xE6E7F8")]
		public JSONClass()
		{
		}
	}
	[Token(Token = "0x2000330")]
	public class JSONData : JSONNode
	{
		[Token(Token = "0x400118E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private string m_Data;

		[Token(Token = "0x170002C0")]
		public override string Value
		{
			[Token(Token = "0x6001676")]
			[Address(RVA = "0xE72A78", Offset = "0xE72A78", VA = "0xE72A78", Slot = "9")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001677")]
			[Address(RVA = "0xE72A80", Offset = "0xE72A80", VA = "0xE72A80", Slot = "10")]
			set
			{
			}
		}

		[Token(Token = "0x6001678")]
		[Address(RVA = "0xE6DDF8", Offset = "0xE6DDF8", VA = "0xE6DDF8")]
		public JSONData(string aData)
		{
		}

		[Token(Token = "0x6001679")]
		[Address(RVA = "0xE6F2CC", Offset = "0xE6F2CC", VA = "0xE6F2CC")]
		public JSONData(float aData)
		{
		}

		[Token(Token = "0x600167A")]
		[Address(RVA = "0xE6F25C", Offset = "0xE6F25C", VA = "0xE6F25C")]
		public JSONData(double aData)
		{
		}

		[Token(Token = "0x600167B")]
		[Address(RVA = "0xE6F294", Offset = "0xE6F294", VA = "0xE6F294")]
		public JSONData(bool aData)
		{
		}

		[Token(Token = "0x600167C")]
		[Address(RVA = "0xE6F224", Offset = "0xE6F224", VA = "0xE6F224")]
		public JSONData(int aData)
		{
		}

		[Token(Token = "0x600167D")]
		[Address(RVA = "0xE72A88", Offset = "0xE72A88", VA = "0xE72A88", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x600167E")]
		[Address(RVA = "0xE72AE0", Offset = "0xE72AE0", VA = "0xE72AE0", Slot = "17")]
		public override string ToString(string aPrefix)
		{
			return null;
		}

		[Token(Token = "0x600167F")]
		[Address(RVA = "0xE72B38", Offset = "0xE72B38", VA = "0xE72B38", Slot = "28")]
		public override void Serialize(BinaryWriter aWriter)
		{
		}
	}
	[Token(Token = "0x2000331")]
	internal class JSONLazyCreator : JSONNode
	{
		[Token(Token = "0x400118F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private JSONNode m_Node;

		[Token(Token = "0x4001190")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private string m_Key;

		[Token(Token = "0x170002C1")]
		public override JSONNode this[int aIndex]
		{
			[Token(Token = "0x6001683")]
			[Address(RVA = "0xE72E4C", Offset = "0xE72E4C", VA = "0xE72E4C", Slot = "5")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001684")]
			[Address(RVA = "0xE72EB0", Offset = "0xE72EB0", VA = "0xE72EB0", Slot = "6")]
			set
			{
			}
		}

		[Token(Token = "0x170002C2")]
		public override JSONNode this[string aKey]
		{
			[Token(Token = "0x6001685")]
			[Address(RVA = "0xE72F30", Offset = "0xE72F30", VA = "0xE72F30", Slot = "7")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001686")]
			[Address(RVA = "0xE72FA0", Offset = "0xE72FA0", VA = "0xE72FA0", Slot = "8")]
			set
			{
			}
		}

		[Token(Token = "0x170002C3")]
		public override int AsInt
		{
			[Token(Token = "0x600168F")]
			[Address(RVA = "0xE73200", Offset = "0xE73200", VA = "0xE73200", Slot = "18")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001690")]
			[Address(RVA = "0xE73284", Offset = "0xE73284", VA = "0xE73284", Slot = "19")]
			set
			{
			}
		}

		[Token(Token = "0x170002C4")]
		public override float AsFloat
		{
			[Token(Token = "0x6001691")]
			[Address(RVA = "0xE7330C", Offset = "0xE7330C", VA = "0xE7330C", Slot = "20")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001692")]
			[Address(RVA = "0xE73390", Offset = "0xE73390", VA = "0xE73390", Slot = "21")]
			set
			{
			}
		}

		[Token(Token = "0x170002C5")]
		public override double AsDouble
		{
			[Token(Token = "0x6001693")]
			[Address(RVA = "0xE73418", Offset = "0xE73418", VA = "0xE73418", Slot = "22")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x6001694")]
			[Address(RVA = "0xE7349C", Offset = "0xE7349C", VA = "0xE7349C", Slot = "23")]
			set
			{
			}
		}

		[Token(Token = "0x170002C6")]
		public override bool AsBool
		{
			[Token(Token = "0x6001695")]
			[Address(RVA = "0xE73524", Offset = "0xE73524", VA = "0xE73524", Slot = "24")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001696")]
			[Address(RVA = "0xE735A8", Offset = "0xE735A8", VA = "0xE735A8", Slot = "25")]
			set
			{
			}
		}

		[Token(Token = "0x170002C7")]
		public override JSONArray AsArray
		{
			[Token(Token = "0x6001697")]
			[Address(RVA = "0xE73630", Offset = "0xE73630", VA = "0xE73630", Slot = "26")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002C8")]
		public override JSONClass AsObject
		{
			[Token(Token = "0x6001698")]
			[Address(RVA = "0xE73698", Offset = "0xE73698", VA = "0xE73698", Slot = "27")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001680")]
		[Address(RVA = "0xE700C0", Offset = "0xE700C0", VA = "0xE700C0")]
		public JSONLazyCreator(JSONNode aNode)
		{
		}

		[Token(Token = "0x6001681")]
		[Address(RVA = "0xE711BC", Offset = "0xE711BC", VA = "0xE711BC")]
		public JSONLazyCreator(JSONNode aNode, string aKey)
		{
		}

		[Token(Token = "0x6001682")]
		[Address(RVA = "0xE72DF8", Offset = "0xE72DF8", VA = "0xE72DF8")]
		private void Set(JSONNode aVal)
		{
		}

		[Token(Token = "0x6001687")]
		[Address(RVA = "0xE73028", Offset = "0xE73028", VA = "0xE73028", Slot = "12")]
		public override void Add(JSONNode aItem)
		{
		}

		[Token(Token = "0x6001688")]
		[Address(RVA = "0xE730A8", Offset = "0xE730A8", VA = "0xE730A8", Slot = "4")]
		public override void Add(string aKey, JSONNode aItem)
		{
		}

		[Token(Token = "0x6001689")]
		[Address(RVA = "0xE73130", Offset = "0xE73130", VA = "0xE73130")]
		public static bool operator ==(JSONLazyCreator a, object b)
		{
			return default(bool);
		}

		[Token(Token = "0x600168A")]
		[Address(RVA = "0xE73148", Offset = "0xE73148", VA = "0xE73148")]
		public static bool operator !=(JSONLazyCreator a, object b)
		{
			return default(bool);
		}

		[Token(Token = "0x600168B")]
		[Address(RVA = "0xE73160", Offset = "0xE73160", VA = "0xE73160", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x600168C")]
		[Address(RVA = "0xE73178", Offset = "0xE73178", VA = "0xE73178", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x600168D")]
		[Address(RVA = "0xE73180", Offset = "0xE73180", VA = "0xE73180", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x600168E")]
		[Address(RVA = "0xE731C0", Offset = "0xE731C0", VA = "0xE731C0", Slot = "17")]
		public override string ToString(string aPrefix)
		{
			return null;
		}
	}
	[Token(Token = "0x2000332")]
	public static class JSON
	{
		[Token(Token = "0x6001699")]
		[Address(RVA = "0xE73700", Offset = "0xE73700", VA = "0xE73700")]
		public static JSONNode Parse(string aJSON)
		{
			return null;
		}
	}
}
namespace FarBridge
{
	[Token(Token = "0x2000333")]
	public class BufferArray<T>
	{
		[Token(Token = "0x4001191")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T[] _rawArray;

		[Token(Token = "0x4001192")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int _nextIndex;

		[Token(Token = "0x170002C9")]
		public T[] Array
		{
			[Token(Token = "0x600169A")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600169B")]
		public BufferArray(int size)
		{
		}

		[Token(Token = "0x600169C")]
		public T GetAt(int i)
		{
			return (T)null;
		}

		[Token(Token = "0x600169D")]
		public T[] GetLast(int range)
		{
			return null;
		}

		[Token(Token = "0x600169E")]
		public T First()
		{
			return (T)null;
		}

		[Token(Token = "0x600169F")]
		public T Last()
		{
			return (T)null;
		}

		[Token(Token = "0x60016A0")]
		public void Add(T value)
		{
		}

		[Token(Token = "0x60016A1")]
		public void Fill(T value)
		{
		}
	}
	[Token(Token = "0x2000334")]
	public class Vector3BufferArray : BufferArray<Vector3>
	{
		[Token(Token = "0x60016A2")]
		[Address(RVA = "0xE73704", Offset = "0xE73704", VA = "0xE73704")]
		public Vector3BufferArray(int size)
		{
		}

		[Token(Token = "0x60016A3")]
		[Address(RVA = "0xE7375C", Offset = "0xE7375C", VA = "0xE7375C")]
		public Vector3 GetAverage()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60016A4")]
		[Address(RVA = "0xE7383C", Offset = "0xE7383C", VA = "0xE7383C")]
		public Vector3 GetSum()
		{
			return default(Vector3);
		}
	}
	[Token(Token = "0x2000335")]
	public class FloatBufferArray : BufferArray<float>
	{
		[Token(Token = "0x60016A5")]
		[Address(RVA = "0xE73958", Offset = "0xE73958", VA = "0xE73958")]
		public FloatBufferArray(int size)
		{
		}

		[Token(Token = "0x60016A6")]
		[Address(RVA = "0xE739B0", Offset = "0xE739B0", VA = "0xE739B0")]
		public float GetAverage()
		{
			return default(float);
		}

		[Token(Token = "0x60016A7")]
		[Address(RVA = "0xE73A44", Offset = "0xE73A44", VA = "0xE73A44")]
		public float GetSum()
		{
			return default(float);
		}
	}
	[Token(Token = "0x2000336")]
	public static class BufferArrayExtensions
	{
		[Token(Token = "0x60016A8")]
		[Address(RVA = "0xE73AF8", Offset = "0xE73AF8", VA = "0xE73AF8")]
		public static float GetAverage(this float[] array)
		{
			return default(float);
		}

		[Token(Token = "0x60016A9")]
		[Address(RVA = "0xE73B34", Offset = "0xE73B34", VA = "0xE73B34")]
		public static float GetSum(this float[] array)
		{
			return default(float);
		}

		[Token(Token = "0x60016AA")]
		[Address(RVA = "0xE73B90", Offset = "0xE73B90", VA = "0xE73B90")]
		public static Vector3 GetAverage(this Vector3[] array)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60016AB")]
		[Address(RVA = "0xE73C08", Offset = "0xE73C08", VA = "0xE73C08")]
		public static Vector3 GetSum(this Vector3[] array)
		{
			return default(Vector3);
		}
	}
	[Token(Token = "0x2000337")]
	internal struct EnumEqualityComparer<TEnum> : IEqualityComparer<TEnum> where TEnum : struct
	{
		[Token(Token = "0x2000338")]
		private static class BoxAvoidance
		{
			[Token(Token = "0x4001193")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private static readonly Func<TEnum, int> _wrapper;

			[Token(Token = "0x60016AE")]
			public static int ToInt(TEnum enu)
			{
				return default(int);
			}

			[Token(Token = "0x60016AF")]
			static BoxAvoidance()
			{
			}
		}

		[Token(Token = "0x60016AC")]
		public bool Equals(TEnum firstEnum, TEnum secondEnum)
		{
			return default(bool);
		}

		[Token(Token = "0x60016AD")]
		public int GetHashCode(TEnum firstEnum)
		{
			return default(int);
		}
	}
	[Token(Token = "0x2000339")]
	public class IgnoreCanvasRaycast : MonoBehaviour, ICanvasRaycastFilter
	{
		[Token(Token = "0x60016B0")]
		[Address(RVA = "0xE73CA8", Offset = "0xE73CA8", VA = "0xE73CA8", Slot = "4")]
		public bool IsRaycastLocationValid(Vector2 sp, Camera eventCamera)
		{
			return default(bool);
		}

		[Token(Token = "0x60016B1")]
		[Address(RVA = "0xE73CB0", Offset = "0xE73CB0", VA = "0xE73CB0")]
		public IgnoreCanvasRaycast()
		{
		}
	}
	[Token(Token = "0x200033A")]
	[CreateAssetMenu(menuName = "FarBridge/Worlds/OverlayContent", fileName = "New OverlayContent")]
	public class OverlayContentAsset : ScriptableObject
	{
		[Token(Token = "0x4001194")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public OverlayContent Content;

		[Token(Token = "0x60016B2")]
		[Address(RVA = "0xE73CB8", Offset = "0xE73CB8", VA = "0xE73CB8")]
		public OverlayContentAsset()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200033B")]
	public class OverlayContent
	{
		[Token(Token = "0x4001195")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[Header("Billboard")]
		public Texture BillboardTexture;

		[Token(Token = "0x4001196")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float BillboardDistance;

		[Token(Token = "0x4001197")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Header("Skybox (Cubemap)")]
		public Texture CubemapTexture;

		[Token(Token = "0x4001198")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Header("Skybox (6-sided)")]
		public Texture Front;

		[Token(Token = "0x4001199")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Texture Back;

		[Token(Token = "0x400119A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Texture Left;

		[Token(Token = "0x400119B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Texture Right;

		[Token(Token = "0x400119C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Texture Top;

		[Token(Token = "0x400119D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Texture Bottom;

		[Token(Token = "0x60016B3")]
		[Address(RVA = "0xE73CC0", Offset = "0xE73CC0", VA = "0xE73CC0")]
		public static OverlayContent LoadFromResources(string path)
		{
			return null;
		}

		[Token(Token = "0x60016B4")]
		[Address(RVA = "0xE73D90", Offset = "0xE73D90", VA = "0xE73D90")]
		public OverlayContent()
		{
		}
	}
	[Token(Token = "0x200033C")]
	public static class OverlayManager
	{
		[Token(Token = "0x200033D")]
		public delegate OverlayController ControllerAccessor();

		[Token(Token = "0x400119E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static OverlayController _controller;

		[Token(Token = "0x400119F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static bool _logged;

		[Token(Token = "0x40011A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static OverlayContent _content;

		[Token(Token = "0x60016B5")]
		[Address(RVA = "0xE73D98", Offset = "0xE73D98", VA = "0xE73D98")]
		public static void SetControllerAccessor(ControllerAccessor accessor)
		{
		}

		[Token(Token = "0x60016B6")]
		[Address(RVA = "0xE73DFC", Offset = "0xE73DFC", VA = "0xE73DFC")]
		public static void SetContent(OverlayContent content)
		{
		}

		[Token(Token = "0x60016B7")]
		[Address(RVA = "0xE73E48", Offset = "0xE73E48", VA = "0xE73E48")]
		private static void LogMissing()
		{
		}

		[Token(Token = "0x60016B8")]
		[Address(RVA = "0xE73EE8", Offset = "0xE73EE8", VA = "0xE73EE8")]
		public static void Show(float transitionDuration)
		{
		}

		[Token(Token = "0x60016B9")]
		[Address(RVA = "0xE73FC4", Offset = "0xE73FC4", VA = "0xE73FC4")]
		public static void Hide(float transitionDuration)
		{
		}
	}
	[Token(Token = "0x200033E")]
	public abstract class OverlayController : MonoBehaviour
	{
		[Token(Token = "0x60016BE")]
		public abstract void Show(float transitionDuration);

		[Token(Token = "0x60016BF")]
		public abstract void Hide(float transitionDuration);

		[Token(Token = "0x60016C0")]
		public abstract void SetContent(OverlayContent content);

		[Token(Token = "0x60016C1")]
		[Address(RVA = "0xE7419C", Offset = "0xE7419C", VA = "0xE7419C")]
		protected OverlayController()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200033F")]
	public class PlatformData
	{
		[Token(Token = "0x40011A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string Name;

		[Token(Token = "0x40011A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private string _integrationTypeName;

		[Token(Token = "0x40011A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool IsVrSupported;

		[Token(Token = "0x40011A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public bool UseMobileAssets;

		[Token(Token = "0x40011A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string XRLoaderName;

		[Token(Token = "0x40011A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[FormerlySerializedAs("VrSdks")]
		public string[] LegacyVrSdks;

		[Token(Token = "0x40011A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly PlatformData None;

		[Token(Token = "0x40011A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static readonly PlatformData Undefined;

		[Token(Token = "0x170002CA")]
		public string NiceName
		{
			[Token(Token = "0x60016C2")]
			[Address(RVA = "0xE741A4", Offset = "0xE741A4", VA = "0xE741A4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60016C3")]
		[Address(RVA = "0xE74220", Offset = "0xE74220", VA = "0xE74220")]
		public PlatformData(string name, string integrationTypeName)
		{
		}

		[Token(Token = "0x60016C4")]
		[Address(RVA = "0xE742F4", Offset = "0xE742F4", VA = "0xE742F4")]
		public string GetIntegrationTypeName()
		{
			return null;
		}
	}
	[Token(Token = "0x2000340")]
	public static class AudioDeviceManager
	{
		[Token(Token = "0x60016C6")]
		[Address(RVA = "0xE743C8", Offset = "0xE743C8", VA = "0xE743C8")]
		public static string GetDefaultMicorphoneName()
		{
			return null;
		}

		[Token(Token = "0x60016C7")]
		[Address(RVA = "0xE743D0", Offset = "0xE743D0", VA = "0xE743D0")]
		public static string GetMicrophoneName(int index)
		{
			return null;
		}
	}
	[Token(Token = "0x2000341")]
	public class DontDestroyOnLoad : MonoBehaviour
	{
		[Token(Token = "0x60016C8")]
		[Address(RVA = "0xE7445C", Offset = "0xE7445C", VA = "0xE7445C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60016C9")]
		[Address(RVA = "0xE744C8", Offset = "0xE744C8", VA = "0xE744C8")]
		public DontDestroyOnLoad()
		{
		}
	}
	[Token(Token = "0x2000342")]
	public class EncryptionHelpers
	{
		[Token(Token = "0x60016CA")]
		[Address(RVA = "0xE744D0", Offset = "0xE744D0", VA = "0xE744D0")]
		public static string Encrypt(string clearText, string key)
		{
			return null;
		}

		[Token(Token = "0x60016CB")]
		[Address(RVA = "0xE74AB4", Offset = "0xE74AB4", VA = "0xE74AB4")]
		public static string Decrypt(string cipherText, string key)
		{
			return null;
		}

		[Token(Token = "0x60016CC")]
		[Address(RVA = "0xE750EC", Offset = "0xE750EC", VA = "0xE750EC")]
		public EncryptionHelpers()
		{
		}
	}
	[Token(Token = "0x2000343")]
	public class ReadOnlyAttribute : PropertyAttribute
	{
		[Token(Token = "0x60016CD")]
		[Address(RVA = "0xE750F4", Offset = "0xE750F4", VA = "0xE750F4")]
		public ReadOnlyAttribute()
		{
		}
	}
	[Token(Token = "0x2000344")]
	public static class ReflectionHelpers
	{
		[Token(Token = "0x60016CE")]
		[Address(RVA = "0xE750FC", Offset = "0xE750FC", VA = "0xE750FC")]
		public static void SetProperty(object obj, string propertyName, object value, bool isPublic)
		{
		}

		[Token(Token = "0x60016CF")]
		[Address(RVA = "0xE75174", Offset = "0xE75174", VA = "0xE75174")]
		public static void SetField(object obj, string fieldName, object value, bool isPublic)
		{
		}

		[Token(Token = "0x60016D0")]
		[Address(RVA = "0xE751E8", Offset = "0xE751E8", VA = "0xE751E8")]
		public static bool GetBoolField(object obj, string fieldName)
		{
			return default(bool);
		}

		[Token(Token = "0x60016D1")]
		[Address(RVA = "0xE75368", Offset = "0xE75368", VA = "0xE75368")]
		public static bool GetBoolProperty(object obj, string fieldName)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000345")]
	public class InputActionController : MonoBehaviour
	{
		[Token(Token = "0x40011A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[Tooltip("Input action assets to affect when inputs are enabled or disabled.")]
		private List<InputActionAsset> m_ActionAssets;

		[Token(Token = "0x170002CB")]
		public List<InputActionAsset> actionAssets
		{
			[Token(Token = "0x60016D2")]
			[Address(RVA = "0xE754D8", Offset = "0xE754D8", VA = "0xE754D8")]
			get
			{
				return null;
			}
			[Token(Token = "0x60016D3")]
			[Address(RVA = "0xE754E0", Offset = "0xE754E0", VA = "0xE754E0")]
			set
			{
			}
		}

		[Token(Token = "0x60016D4")]
		[Address(RVA = "0xE75550", Offset = "0xE75550", VA = "0xE75550")]
		protected void OnEnable()
		{
		}

		[Token(Token = "0x60016D5")]
		[Address(RVA = "0xE756E8", Offset = "0xE756E8", VA = "0xE756E8")]
		protected void OnDisable()
		{
		}

		[Token(Token = "0x60016D6")]
		[Address(RVA = "0xE75554", Offset = "0xE75554", VA = "0xE75554")]
		public void EnableInput()
		{
		}

		[Token(Token = "0x60016D7")]
		[Address(RVA = "0xE756EC", Offset = "0xE756EC", VA = "0xE756EC")]
		public void DisableInput()
		{
		}

		[Token(Token = "0x60016D8")]
		[Address(RVA = "0xE75880", Offset = "0xE75880", VA = "0xE75880")]
		public InputActionController()
		{
		}
	}
	[Token(Token = "0x2000346")]
	public class InputNode : MonoBehaviour
	{
		[Token(Token = "0x40011AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InputActionReference MenuButton;

		[Token(Token = "0x40011AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public InputActionReference TriggerButton;

		[Token(Token = "0x40011AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public InputActionReference CenterPosition;

		[Token(Token = "0x40011AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public InputActionReference CenterRotation;

		[Token(Token = "0x40011AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public InputActionReference Grip;

		[Token(Token = "0x40011AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public InputActionReference TrackpadClick;

		[Token(Token = "0x40011B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public InputActionReference TrackpadTouch;

		[Token(Token = "0x40011B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public InputActionReference ThumbPosition;

		[Token(Token = "0x40011B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public InputActionReference PrimaryButton;

		[Token(Token = "0x60016D9")]
		[Address(RVA = "0xE75888", Offset = "0xE75888", VA = "0xE75888")]
		private void Awake()
		{
		}

		[Token(Token = "0x60016DA")]
		[Address(RVA = "0xE7588C", Offset = "0xE7588C", VA = "0xE7588C")]
		private void Start()
		{
		}

		[Token(Token = "0x60016DB")]
		[Address(RVA = "0xE75890", Offset = "0xE75890", VA = "0xE75890")]
		private void Update()
		{
		}

		[Token(Token = "0x60016DC")]
		[Address(RVA = "0xE75EA0", Offset = "0xE75EA0", VA = "0xE75EA0")]
		private void ApplyPose()
		{
		}

		[Token(Token = "0x60016DD")]
		[Address(RVA = "0xE758A8", Offset = "0xE758A8", VA = "0xE758A8")]
		private void LogInputs()
		{
		}

		[Token(Token = "0x60016DE")]
		[Address(RVA = "0xE75FE4", Offset = "0xE75FE4", VA = "0xE75FE4")]
		public InputNode()
		{
		}
	}
}
namespace FarBridge.Worlds
{
	[Token(Token = "0x2000347")]
	public class DefaultControllerRenderer : HandAdapter, IInputDeviceConnectedListener, IInputDeviceListener
	{
		[Token(Token = "0x40011B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private NodeAvatar _avatar;

		[Token(Token = "0x60016DF")]
		[Address(RVA = "0xE75FEC", Offset = "0xE75FEC", VA = "0xE75FEC", Slot = "10")]
		public void OnInputDeviceConnected(InputDevice inputDevice, bool connected)
		{
		}

		[Token(Token = "0x60016E0")]
		[Address(RVA = "0xE75FF8", Offset = "0xE75FF8", VA = "0xE75FF8")]
		private void AddAvatar()
		{
		}

		[Token(Token = "0x60016E1")]
		[Address(RVA = "0xE76080", Offset = "0xE76080", VA = "0xE76080")]
		private void RemoveAvatar()
		{
		}

		[Token(Token = "0x60016E2")]
		[Address(RVA = "0xE76120", Offset = "0xE76120", VA = "0xE76120")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60016E3")]
		[Address(RVA = "0xE7615C", Offset = "0xE7615C", VA = "0xE7615C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60016E4")]
		[Address(RVA = "0xE76160", Offset = "0xE76160", VA = "0xE76160")]
		public DefaultControllerRenderer()
		{
		}
	}
	[Token(Token = "0x2000348")]
	public class Eyes : MonoBehaviour
	{
		[Token(Token = "0x40011B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Vector3? _overrideAnchorPosition;

		[Token(Token = "0x40011B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Quaternion? _overrideAnchorRotation;

		[Token(Token = "0x40011B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Transform _view;

		[Token(Token = "0x170002CC")]
		public Camera[] Cameras
		{
			[Token(Token = "0x60016E5")]
			[Address(RVA = "0xE76170", Offset = "0xE76170", VA = "0xE76170")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002CD")]
		public Transform View
		{
			[Token(Token = "0x60016E6")]
			[Address(RVA = "0xE761B8", Offset = "0xE761B8", VA = "0xE761B8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002CE")]
		public Vector3? OverrideAnchorPosition
		{
			[Token(Token = "0x60016E7")]
			[Address(RVA = "0xE761C0", Offset = "0xE761C0", VA = "0xE761C0")]
			get
			{
				return null;
			}
			[Token(Token = "0x60016E8")]
			[Address(RVA = "0xE761CC", Offset = "0xE761CC", VA = "0xE761CC")]
			set
			{
			}
		}

		[Token(Token = "0x170002CF")]
		public Quaternion? OverrideAnchorRotation
		{
			[Token(Token = "0x60016E9")]
			[Address(RVA = "0xE76288", Offset = "0xE76288", VA = "0xE76288")]
			get
			{
				return null;
			}
			[Token(Token = "0x60016EA")]
			[Address(RVA = "0xE7629C", Offset = "0xE7629C", VA = "0xE7629C")]
			set
			{
			}
		}

		[Token(Token = "0x60016EB")]
		[Address(RVA = "0xE76354", Offset = "0xE76354", VA = "0xE76354")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60016EC")]
		[Address(RVA = "0xE7644C", Offset = "0xE7644C", VA = "0xE7644C")]
		public Eyes()
		{
		}
	}
	[Token(Token = "0x2000349")]
	public class HandAdapter : NodeAdapter
	{
		[Token(Token = "0x40011B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private HandNode _hand;

		[Token(Token = "0x170002D0")]
		public HandNode Hand
		{
			[Token(Token = "0x60016ED")]
			[Address(RVA = "0xE76454", Offset = "0xE76454", VA = "0xE76454")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60016EE")]
		[Address(RVA = "0xE76168", Offset = "0xE76168", VA = "0xE76168")]
		public HandAdapter()
		{
		}
	}
	[Token(Token = "0x200034A")]
	public enum Handedness
	{
		[Token(Token = "0x40011B9")]
		Left = -1,
		[Token(Token = "0x40011BA")]
		Any,
		[Token(Token = "0x40011BB")]
		Right
	}
	[Token(Token = "0x200034B")]
	public static class HandednessExtension
	{
		[Token(Token = "0x60016EF")]
		[Address(RVA = "0xE76520", Offset = "0xE76520", VA = "0xE76520")]
		public static bool IsLeft(this Handedness handedness)
		{
			return default(bool);
		}

		[Token(Token = "0x60016F0")]
		[Address(RVA = "0xE7652C", Offset = "0xE7652C", VA = "0xE7652C")]
		public static bool IsRight(this Handedness handedness)
		{
			return default(bool);
		}

		[Token(Token = "0x60016F1")]
		[Address(RVA = "0xE76538", Offset = "0xE76538", VA = "0xE76538")]
		public static string AsString(this Handedness hand)
		{
			return null;
		}
	}
	[Token(Token = "0x200034C")]
	public class HandNode : Node
	{
		[Token(Token = "0x40011BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[Header("Hand Node")]
		[Tooltip("Place objects under this Transform if they should be posed relative to Worlds hand pose, compensated for the current hand tracker.")]
		public Transform HandPosOffset;

		[Token(Token = "0x40011BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[Tooltip("Place objects under this Transform if they should be posed relative to Worlds hand pose, compensated for the current hand tracker.")]
		public Transform HandRotOffset;

		[Token(Token = "0x40011BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("This transform is used to perform calculations during Calibration to determine offsets relative to original offset")]
		public Transform OrigPosOffsetRef;

		[Token(Token = "0x40011BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("This transform is used to perform calculations during Calibration to determine offsets relative to original offset")]
		public Transform OrigRotOffsetRef;

		[Token(Token = "0x40011C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public HandNode OtherHand;

		[Token(Token = "0x40011C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Handedness Handedness;

		[Token(Token = "0x40011C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[SerializeField]
		private bool _restingPoseEnabled;

		[Token(Token = "0x40011C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Vector3 _restingPosition;

		[Token(Token = "0x40011C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[SerializeField]
		private Vector3 _restingRotation;

		[Token(Token = "0x40011C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Vector3 prevHandOffsetPos;

		[Token(Token = "0x40011C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private Quaternion prevHandOffsetRot;

		[Token(Token = "0x60016F2")]
		[Address(RVA = "0xE765A0", Offset = "0xE765A0", VA = "0xE765A0")]
		private void Start()
		{
		}

		[Token(Token = "0x60016F3")]
		[Address(RVA = "0xE76C60", Offset = "0xE76C60", VA = "0xE76C60")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60016F4")]
		[Address(RVA = "0xE76E18", Offset = "0xE76E18", VA = "0xE76E18", Slot = "4")]
		protected override void Update()
		{
		}

		[Token(Token = "0x60016F5")]
		[Address(RVA = "0xE77318", Offset = "0xE77318", VA = "0xE77318")]
		private void OnPutterCalibrationStarted()
		{
		}

		[Token(Token = "0x60016F6")]
		[Address(RVA = "0xE773E4", Offset = "0xE773E4", VA = "0xE773E4")]
		private void OnPutterCalibrationStopped()
		{
		}

		[Token(Token = "0x60016F7")]
		[Address(RVA = "0xE77128", Offset = "0xE77128", VA = "0xE77128")]
		public void ShowController()
		{
		}

		[Token(Token = "0x60016F8")]
		[Address(RVA = "0xE77220", Offset = "0xE77220", VA = "0xE77220")]
		public void HideController()
		{
		}

		[Token(Token = "0x60016F9")]
		[Address(RVA = "0xE77650", Offset = "0xE77650", VA = "0xE77650", Slot = "5")]
		protected override bool TryUpdateTransform()
		{
			return default(bool);
		}

		[Token(Token = "0x60016FA")]
		[Address(RVA = "0xE76974", Offset = "0xE76974", VA = "0xE76974")]
		private void CreateDefaultController()
		{
		}

		[Token(Token = "0x60016FB")]
		[Address(RVA = "0xE779A4", Offset = "0xE779A4", VA = "0xE779A4")]
		public HandNode()
		{
		}
	}
	[Token(Token = "0x200034D")]
	public class HeadNode : Node
	{
		[Token(Token = "0x60016FC")]
		[Address(RVA = "0xE779C4", Offset = "0xE779C4", VA = "0xE779C4")]
		public HeadNode()
		{
		}
	}
	[Token(Token = "0x200034E")]
	[Flags]
	public enum Input
	{
		[Token(Token = "0x40011C8")]
		Any = -1,
		[Token(Token = "0x40011C9")]
		None = 0,
		[Token(Token = "0x40011CA")]
		Menu = 1,
		[Token(Token = "0x40011CB")]
		Back = 2,
		[Token(Token = "0x40011CC")]
		System = 4,
		[Token(Token = "0x40011CD")]
		Left = 8,
		[Token(Token = "0x40011CE")]
		Up = 0x10,
		[Token(Token = "0x40011CF")]
		Right = 0x20,
		[Token(Token = "0x40011D0")]
		Down = 0x40,
		[Token(Token = "0x40011D1")]
		PrimaryButton = 0x80,
		[Token(Token = "0x40011D2")]
		PrimaryTouch = 0x100,
		[Token(Token = "0x40011D3")]
		SecondaryButton = 0x200,
		[Token(Token = "0x40011D4")]
		SecondaryTouch = 0x400,
		[Token(Token = "0x40011D5")]
		IndexButton = 0x800,
		[Token(Token = "0x40011D6")]
		IndexTouch = 0x1000,
		[Token(Token = "0x40011D7")]
		ThumbButton = 0x2000,
		[Token(Token = "0x40011D8")]
		ThumbTouch = 0x4000,
		[Token(Token = "0x40011D9")]
		HandButton = 0x8000,
		[Token(Token = "0x40011DA")]
		HandTouch = 0x10000,
		[Token(Token = "0x40011DB")]
		SqueezeButton = 0x40000,
		[Token(Token = "0x40011DC")]
		SwipeLeft = 0x80000,
		[Token(Token = "0x40011DD")]
		SwipeRight = 0x100000,
		[Token(Token = "0x40011DE")]
		Pose = int.MinValue
	}
	[Token(Token = "0x200034F")]
	public struct InputComparer : IEqualityComparer<Input>
	{
		[Token(Token = "0x60016FD")]
		[Address(RVA = "0xE779CC", Offset = "0xE779CC", VA = "0xE779CC", Slot = "4")]
		public bool Equals(Input x, Input y)
		{
			return default(bool);
		}

		[Token(Token = "0x60016FE")]
		[Address(RVA = "0xE779D8", Offset = "0xE779D8", VA = "0xE779D8", Slot = "5")]
		public int GetHashCode(Input obj)
		{
			return default(int);
		}
	}
	[Token(Token = "0x2000350")]
	public class InputAction
	{
		[Token(Token = "0x2000351")]
		public delegate void PoseChangedHandler(Pose pose);

		[Token(Token = "0x2000352")]
		public delegate void ButtonChangedHandler(bool isPressed);

		[Token(Token = "0x2000353")]
		public delegate void AxisChangedHandler(Vector2 axis);

		[Token(Token = "0x2000354")]
		public delegate void EnvelopeChangedHandler(float envelope);

		[Token(Token = "0x40011E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Pose _pose;

		[Token(Token = "0x40011E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Pose _poseCached;

		[Token(Token = "0x40011E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool _isPressed;

		[Token(Token = "0x40011E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
		private bool _isPressedCached;

		[Token(Token = "0x40011E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector2 _axis;

		[Token(Token = "0x40011E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Vector2 _axisCached;

		[Token(Token = "0x40011EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private float _envelope;

		[Token(Token = "0x40011EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private float _envelopeCached;

		[Token(Token = "0x170002D1")]
		public Pose Pose
		{
			[Token(Token = "0x60016FF")]
			[Address(RVA = "0xE779E0", Offset = "0xE779E0", VA = "0xE779E0")]
			get
			{
				return default(Pose);
			}
		}

		[Token(Token = "0x170002D2")]
		public Vector3 Position
		{
			[Token(Token = "0x6001700")]
			[Address(RVA = "0xE779F4", Offset = "0xE779F4", VA = "0xE779F4")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170002D3")]
		public Quaternion Rotation
		{
			[Token(Token = "0x6001701")]
			[Address(RVA = "0xE77A00", Offset = "0xE77A00", VA = "0xE77A00")]
			get
			{
				return default(Quaternion);
			}
		}

		[Token(Token = "0x170002D4")]
		public bool IsPressed
		{
			[Token(Token = "0x600170A")]
			[Address(RVA = "0xE77EEC", Offset = "0xE77EEC", VA = "0xE77EEC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002D5")]
		public bool IsPressedDown
		{
			[Token(Token = "0x600170B")]
			[Address(RVA = "0xE77EF4", Offset = "0xE77EF4", VA = "0xE77EF4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002D6")]
		public bool IsPressedUp
		{
			[Token(Token = "0x600170C")]
			[Address(RVA = "0xE77F14", Offset = "0xE77F14", VA = "0xE77F14")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002D7")]
		public bool PressedStateChanged
		{
			[Token(Token = "0x600170D")]
			[Address(RVA = "0xE77F34", Offset = "0xE77F34", VA = "0xE77F34")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002D8")]
		public Vector2 Axis
		{
			[Token(Token = "0x6001710")]
			[Address(RVA = "0xE78080", Offset = "0xE78080", VA = "0xE78080")]
			get
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x170002D9")]
		public Vector2 AxisDelta
		{
			[Token(Token = "0x6001711")]
			[Address(RVA = "0xE78088", Offset = "0xE78088", VA = "0xE78088")]
			get
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x170002DA")]
		public float Envelope
		{
			[Token(Token = "0x6001714")]
			[Address(RVA = "0xE781D0", Offset = "0xE781D0", VA = "0xE781D0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170002DB")]
		public float EnvelopeDelta
		{
			[Token(Token = "0x6001715")]
			[Address(RVA = "0xE781D8", Offset = "0xE781D8", VA = "0xE781D8")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1400004A")]
		public event PoseChangedHandler PoseChangedEvent
		{
			[Token(Token = "0x6001702")]
			[Address(RVA = "0xE77A0C", Offset = "0xE77A0C", VA = "0xE77A0C")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001703")]
			[Address(RVA = "0xE77AA8", Offset = "0xE77AA8", VA = "0xE77AA8")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x1400004B")]
		public event ButtonChangedHandler ButtonChangedEvent
		{
			[Token(Token = "0x6001704")]
			[Address(RVA = "0xE77B44", Offset = "0xE77B44", VA = "0xE77B44")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001705")]
			[Address(RVA = "0xE77BE0", Offset = "0xE77BE0", VA = "0xE77BE0")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x1400004C")]
		public event Action PressedEvent
		{
			[Token(Token = "0x6001706")]
			[Address(RVA = "0xE77C7C", Offset = "0xE77C7C", VA = "0xE77C7C")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001707")]
			[Address(RVA = "0xE77D18", Offset = "0xE77D18", VA = "0xE77D18")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x1400004D")]
		public event Action ReleasedEvent
		{
			[Token(Token = "0x6001708")]
			[Address(RVA = "0xE77DB4", Offset = "0xE77DB4", VA = "0xE77DB4")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001709")]
			[Address(RVA = "0xE77E50", Offset = "0xE77E50", VA = "0xE77E50")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x1400004E")]
		public event AxisChangedHandler AxisChangedEvent
		{
			[Token(Token = "0x600170E")]
			[Address(RVA = "0xE77F48", Offset = "0xE77F48", VA = "0xE77F48")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x600170F")]
			[Address(RVA = "0xE77FE4", Offset = "0xE77FE4", VA = "0xE77FE4")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x1400004F")]
		public event EnvelopeChangedHandler EnvelopeChangedEvent
		{
			[Token(Token = "0x6001712")]
			[Address(RVA = "0xE78098", Offset = "0xE78098", VA = "0xE78098")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001713")]
			[Address(RVA = "0xE78134", Offset = "0xE78134", VA = "0xE78134")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x6001716")]
		[Address(RVA = "0xE781E4", Offset = "0xE781E4", VA = "0xE781E4")]
		public void SetPose(Vector3 position, Quaternion rotation)
		{
		}

		[Token(Token = "0x6001717")]
		[Address(RVA = "0xE782C8", Offset = "0xE782C8", VA = "0xE782C8")]
		public void SetPosition(Vector3 position)
		{
		}

		[Token(Token = "0x6001718")]
		[Address(RVA = "0xE78370", Offset = "0xE78370", VA = "0xE78370")]
		public void SetRotation(Quaternion rotation)
		{
		}

		[Token(Token = "0x6001719")]
		[Address(RVA = "0xE78408", Offset = "0xE78408", VA = "0xE78408")]
		public void SetPressedState(bool pressedState)
		{
		}

		[Token(Token = "0x600171A")]
		[Address(RVA = "0xE784A4", Offset = "0xE784A4", VA = "0xE784A4")]
		public void SetAxisState(Vector2 axis)
		{
		}

		[Token(Token = "0x600171B")]
		[Address(RVA = "0xE78508", Offset = "0xE78508", VA = "0xE78508")]
		public void SetEnvelopeState(float envelope)
		{
		}

		[Token(Token = "0x600171C")]
		[Address(RVA = "0xE7854C", Offset = "0xE7854C", VA = "0xE7854C")]
		public InputAction()
		{
		}
	}
	[Token(Token = "0x2000356")]
	public abstract class InputDevice
	{
		[Token(Token = "0x2000357")]
		public delegate void InputDeviceConnectedHandler(InputDevice inputDevice, bool connected);

		[Token(Token = "0x2000358")]
		public delegate void InputDeviceTrackingHandler(InputDevice inputDevice, bool tracking);

		[Token(Token = "0x40011F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly Dictionary<Input, InputAction> _inputActionsByInput;

		[Token(Token = "0x40011F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly InputAction _unmappedAction;

		[Token(Token = "0x40011FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private List<HapticVibrationAsset.HapticVibrationPlayer> _currentHaptics;

		[Token(Token = "0x40011FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private List<Input> allInputValues;

		[Token(Token = "0x40011FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool _isConnected;

		[Token(Token = "0x40011FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		private bool _isTracked;

		[Token(Token = "0x170002DC")]
		public bool HasPose
		{
			[Token(Token = "0x6001739")]
			[Address(RVA = "0xE79198", Offset = "0xE79198", VA = "0xE79198")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600173A")]
			[Address(RVA = "0xE791A0", Offset = "0xE791A0", VA = "0xE791A0")]
			[CompilerGenerated]
			protected set
			{
			}
		}

		[Token(Token = "0x170002DD")]
		public Vector3 PosePositionOffset
		{
			[Token(Token = "0x600173B")]
			[Address(RVA = "0xE791AC", Offset = "0xE791AC", VA = "0xE791AC")]
			[CompilerGenerated]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x600173C")]
			[Address(RVA = "0xE791B8", Offset = "0xE791B8", VA = "0xE791B8")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170002DE")]
		public Quaternion PoseRotationOffset
		{
			[Token(Token = "0x600173D")]
			[Address(RVA = "0xE791C4", Offset = "0xE791C4", VA = "0xE791C4")]
			[CompilerGenerated]
			get
			{
				return default(Quaternion);
			}
			[Token(Token = "0x600173E")]
			[Address(RVA = "0xE791D0", Offset = "0xE791D0", VA = "0xE791D0")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170002DF")]
		public bool IsConnected
		{
			[Token(Token = "0x600173F")]
			[Address(RVA = "0xE791DC", Offset = "0xE791DC", VA = "0xE791DC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001740")]
			[Address(RVA = "0xE791E4", Offset = "0xE791E4", VA = "0xE791E4")]
			protected set
			{
			}
		}

		[Token(Token = "0x170002E0")]
		public bool IsTracking
		{
			[Token(Token = "0x6001741")]
			[Address(RVA = "0xE79230", Offset = "0xE79230", VA = "0xE79230")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001742")]
			[Address(RVA = "0xE79238", Offset = "0xE79238", VA = "0xE79238")]
			protected set
			{
			}
		}

		[Token(Token = "0x14000050")]
		public event InputDeviceConnectedHandler ConnectedChangedEvent
		{
			[Token(Token = "0x6001735")]
			[Address(RVA = "0xE78F28", Offset = "0xE78F28", VA = "0xE78F28")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001736")]
			[Address(RVA = "0xE78FC4", Offset = "0xE78FC4", VA = "0xE78FC4")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000051")]
		public event InputDeviceTrackingHandler TrackingChangedEvent
		{
			[Token(Token = "0x6001737")]
			[Address(RVA = "0xE79060", Offset = "0xE79060", VA = "0xE79060")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001738")]
			[Address(RVA = "0xE790FC", Offset = "0xE790FC", VA = "0xE790FC")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x6001743")]
		[Address(RVA = "0xE79284", Offset = "0xE79284", VA = "0xE79284")]
		public InputDevice()
		{
		}

		[Token(Token = "0x6001744")]
		[Address(RVA = "0xE79CCC", Offset = "0xE79CCC", VA = "0xE79CCC", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6001745")]
		public abstract string GetDeviceType();

		[Token(Token = "0x6001746")]
		protected abstract void SetHapticVibration(float frequency = 0.35f, float amplitude = 0.35f);

		[Token(Token = "0x6001747")]
		public abstract void TriggerHapticPulse(float durationSeconds = 0.2f, float frequency = 0.35f, float amplitude = 0.35f);

		[Token(Token = "0x6001748")]
		public abstract void UpdateActions();

		[Token(Token = "0x6001749")]
		[Address(RVA = "0xE79FDC", Offset = "0xE79FDC", VA = "0xE79FDC")]
		public HapticVibrationAsset.HapticVibrationPlayer PlayHapticVibration(HapticVibrationAsset hapticVibrationAsset, float amplitudeMultiplier = 1f)
		{
			return null;
		}

		[Token(Token = "0x600174A")]
		[Address(RVA = "0xE7A0F0", Offset = "0xE7A0F0", VA = "0xE7A0F0")]
		public bool StopHapticVibration(HapticVibrationAsset.HapticVibrationPlayer hapticVibrationPlayer)
		{
			return default(bool);
		}

		[Token(Token = "0x600174B")]
		[Address(RVA = "0xE7A190", Offset = "0xE7A190", VA = "0xE7A190")]
		public void UpdateHapticVibration()
		{
		}

		[Token(Token = "0x600174C")]
		[Address(RVA = "0xE79F5C", Offset = "0xE79F5C", VA = "0xE79F5C")]
		public InputAction GetAction(Input input)
		{
			return null;
		}

		[Token(Token = "0x600174D")]
		[Address(RVA = "0xE7A304", Offset = "0xE7A304", VA = "0xE7A304")]
		public bool IsPressed(Input inputMask)
		{
			return default(bool);
		}

		[Token(Token = "0x600174E")]
		[Address(RVA = "0xE7A404", Offset = "0xE7A404", VA = "0xE7A404")]
		public void Subscribe(IInputDeviceConnectedListener listener)
		{
		}

		[Token(Token = "0x600174F")]
		[Address(RVA = "0xE7A4E4", Offset = "0xE7A4E4", VA = "0xE7A4E4")]
		public void Unsubscribe(IInputDeviceConnectedListener listener)
		{
		}

		[Token(Token = "0x6001750")]
		[Address(RVA = "0xE798D4", Offset = "0xE798D4", VA = "0xE798D4")]
		private void MapInputs()
		{
		}
	}
	[Token(Token = "0x200035A")]
	public class DefaultInputDevice : InputDevice
	{
		[Token(Token = "0x600175D")]
		[Address(RVA = "0xE7BA10", Offset = "0xE7BA10", VA = "0xE7BA10", Slot = "4")]
		public override string GetDeviceType()
		{
			return null;
		}

		[Token(Token = "0x600175E")]
		[Address(RVA = "0xE7BA50", Offset = "0xE7BA50", VA = "0xE7BA50", Slot = "6")]
		public override void TriggerHapticPulse(float durationSeconds = 0.2f, float frequency = 0.35f, float amplitude = 0.35f)
		{
		}

		[Token(Token = "0x600175F")]
		[Address(RVA = "0xE7BA90", Offset = "0xE7BA90", VA = "0xE7BA90", Slot = "7")]
		public override void UpdateActions()
		{
		}

		[Token(Token = "0x6001760")]
		[Address(RVA = "0xE7BA94", Offset = "0xE7BA94", VA = "0xE7BA94", Slot = "5")]
		protected override void SetHapticVibration(float frequency = 0.35f, float amplitude = 0.35f)
		{
		}

		[Token(Token = "0x6001761")]
		[Address(RVA = "0xE7BAD4", Offset = "0xE7BAD4", VA = "0xE7BAD4")]
		public DefaultInputDevice()
		{
		}
	}
	[Token(Token = "0x200035B")]
	public class HMDInputDevice : InputDevice
	{
		[Token(Token = "0x6001762")]
		[Address(RVA = "0xE7BADC", Offset = "0xE7BADC", VA = "0xE7BADC", Slot = "4")]
		public override string GetDeviceType()
		{
			return null;
		}

		[Token(Token = "0x6001763")]
		[Address(RVA = "0xE7BB1C", Offset = "0xE7BB1C", VA = "0xE7BB1C", Slot = "6")]
		public override void TriggerHapticPulse(float durationSeconds = 0.2f, float frequency = 0.35f, float amplitude = 0.35f)
		{
		}

		[Token(Token = "0x6001764")]
		[Address(RVA = "0xE7BB5C", Offset = "0xE7BB5C", VA = "0xE7BB5C", Slot = "7")]
		public override void UpdateActions()
		{
		}

		[Token(Token = "0x6001765")]
		[Address(RVA = "0xE7BBBC", Offset = "0xE7BBBC", VA = "0xE7BBBC", Slot = "5")]
		protected override void SetHapticVibration(float frequency = 0.35f, float amplitude = 0.35f)
		{
		}

		[Token(Token = "0x6001766")]
		[Address(RVA = "0xE7BBFC", Offset = "0xE7BBFC", VA = "0xE7BBFC", Slot = "8")]
		protected virtual bool HMDIsConnected()
		{
			return default(bool);
		}

		[Token(Token = "0x6001767")]
		[Address(RVA = "0xE7BDF8", Offset = "0xE7BDF8", VA = "0xE7BDF8")]
		public HMDInputDevice()
		{
		}
	}
	[Token(Token = "0x200035C")]
	public interface IInputDeviceListener
	{
	}
	[Token(Token = "0x200035D")]
	public interface IInputDeviceConnectedListener : IInputDeviceListener
	{
		[Token(Token = "0x6001768")]
		void OnInputDeviceConnected(InputDevice inputDevice, bool connected);
	}
	[Token(Token = "0x200035E")]
	public interface IInputDeviceTrackingListener : IInputDeviceListener
	{
		[Token(Token = "0x6001769")]
		void OnInputDeviceIsTracking(InputDevice inputDevice, bool tracking);
	}
	[Token(Token = "0x200035F")]
	public class Node : MonoBehaviour
	{
		[Token(Token = "0x2000360")]
		public delegate void Handler(Node node);

		[Token(Token = "0x2000361")]
		public delegate void InputDeviceChangedHandler(InputDevice from, InputDevice to);

		[Token(Token = "0x4001202")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Tooltip("Visual Representation of Controller Location & Rotation. Available if provided during Platform Integration AttachDefaultAvatar Call.")]
		[ReadOnly]
		public Transform ControllerVisual;

		[Token(Token = "0x4001203")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Player _player;

		[Token(Token = "0x4001204")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private InputDevice _inputDevice;

		[Token(Token = "0x4001206")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private DefaultInputDevice defaultInput;

		[Token(Token = "0x170002E1")]
		public Player Player
		{
			[Token(Token = "0x600176A")]
			[Address(RVA = "0xE7BE00", Offset = "0xE7BE00", VA = "0xE7BE00")]
			get
			{
				return null;
			}
			[Token(Token = "0x600176B")]
			[Address(RVA = "0xE7BE90", Offset = "0xE7BE90", VA = "0xE7BE90")]
			set
			{
			}
		}

		[Token(Token = "0x170002E2")]
		public InputDevice InputDevice
		{
			[Token(Token = "0x600176E")]
			[Address(RVA = "0xE7BFD0", Offset = "0xE7BFD0", VA = "0xE7BFD0")]
			get
			{
				return null;
			}
			[Token(Token = "0x600176F")]
			[Address(RVA = "0xE7BFEC", Offset = "0xE7BFEC", VA = "0xE7BFEC")]
			set
			{
			}
		}

		[Token(Token = "0x170002E3")]
		public bool IsConneted
		{
			[Token(Token = "0x6001770")]
			[Address(RVA = "0xE7C024", Offset = "0xE7C024", VA = "0xE7C024")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x14000052")]
		public event InputDeviceChangedHandler InputDeviceChangedEvent
		{
			[Token(Token = "0x600176C")]
			[Address(RVA = "0xE7BE98", Offset = "0xE7BE98", VA = "0xE7BE98")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x600176D")]
			[Address(RVA = "0xE7BF34", Offset = "0xE7BF34", VA = "0xE7BF34")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x6001771")]
		[Address(RVA = "0xE7C050", Offset = "0xE7C050", VA = "0xE7C050", Slot = "4")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x6001772")]
		[Address(RVA = "0xE7C0AC", Offset = "0xE7C0AC", VA = "0xE7C0AC", Slot = "5")]
		protected virtual bool TryUpdateTransform()
		{
			return default(bool);
		}

		[Token(Token = "0x6001773")]
		[Address(RVA = "0xE7C19C", Offset = "0xE7C19C", VA = "0xE7C19C")]
		public Node()
		{
		}
	}
	[Token(Token = "0x2000362")]
	public abstract class NodeAdapter : MonoBehaviour
	{
		[Token(Token = "0x4001207")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[Header("Node Adapter")]
		[Tooltip("Specify a Node to attach to. Without a custom Node, one will automatically be assigned if found on this GameObject or its parent.")]
		private Node _customNode;

		[Token(Token = "0x170002E4")]
		private IInputDeviceListener _inputDeviceListener
		{
			[Token(Token = "0x600177C")]
			[Address(RVA = "0xE7C504", Offset = "0xE7C504", VA = "0xE7C504")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002E5")]
		public Node Node
		{
			[Token(Token = "0x6001781")]
			[Address(RVA = "0xE7C7BC", Offset = "0xE7C7BC", VA = "0xE7C7BC")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001782")]
			[Address(RVA = "0xE7C7C4", Offset = "0xE7C7C4", VA = "0xE7C7C4")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x14000053")]
		public event Node.Handler AttachedToNodeEvent
		{
			[Token(Token = "0x600177D")]
			[Address(RVA = "0xE7C54C", Offset = "0xE7C54C", VA = "0xE7C54C")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x600177E")]
			[Address(RVA = "0xE7C5E8", Offset = "0xE7C5E8", VA = "0xE7C5E8")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000054")]
		public event Node.Handler DetachedNodeEvent
		{
			[Token(Token = "0x600177F")]
			[Address(RVA = "0xE7C684", Offset = "0xE7C684", VA = "0xE7C684")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001780")]
			[Address(RVA = "0xE7C720", Offset = "0xE7C720", VA = "0xE7C720")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x6001783")]
		[Address(RVA = "0xE7C7CC", Offset = "0xE7C7CC", VA = "0xE7C7CC")]
		public void AttachToNode(Node node)
		{
		}

		[Token(Token = "0x6001784")]
		[Address(RVA = "0xE7C9A8", Offset = "0xE7C9A8", VA = "0xE7C9A8")]
		public void DetachNode()
		{
		}

		[Token(Token = "0x6001785")]
		[Address(RVA = "0xE7CAC4", Offset = "0xE7CAC4", VA = "0xE7CAC4", Slot = "4")]
		protected virtual void OnAttachedToNode(Node node)
		{
		}

		[Token(Token = "0x6001786")]
		[Address(RVA = "0xE7CAC8", Offset = "0xE7CAC8", VA = "0xE7CAC8", Slot = "5")]
		protected virtual void OnDetachedToNode(Node node)
		{
		}

		[Token(Token = "0x6001787")]
		[Address(RVA = "0xE7CACC", Offset = "0xE7CACC", VA = "0xE7CACC", Slot = "6")]
		protected virtual void OnInputDeviceChanged(InputDevice from, InputDevice to)
		{
		}

		[Token(Token = "0x6001788")]
		[Address(RVA = "0xE7CB40", Offset = "0xE7CB40", VA = "0xE7CB40", Slot = "7")]
		protected virtual void UpdateListeners(IInputDeviceListener listener, InputDevice unsubscribeFromDevice, InputDevice subscribeToDevice)
		{
		}

		[Token(Token = "0x6001789")]
		[Address(RVA = "0xE7CC80", Offset = "0xE7CC80", VA = "0xE7CC80", Slot = "8")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x600178A")]
		[Address(RVA = "0xE7CD44", Offset = "0xE7CD44", VA = "0xE7CD44", Slot = "9")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x600178B")]
		[Address(RVA = "0xE7CD4C", Offset = "0xE7CD4C", VA = "0xE7CD4C")]
		protected NodeAdapter()
		{
		}
	}
	[Token(Token = "0x2000363")]
	public class NodeAvatar : NodeAdapter
	{
		[Token(Token = "0x600178C")]
		[Address(RVA = "0xE7CD54", Offset = "0xE7CD54", VA = "0xE7CD54")]
		private void Update()
		{
		}

		[Token(Token = "0x600178D")]
		[Address(RVA = "0xE7CE88", Offset = "0xE7CE88", VA = "0xE7CE88")]
		public NodeAvatar()
		{
		}
	}
	[Token(Token = "0x2000364")]
	public class Player : MonoBehaviour
	{
		[Token(Token = "0x2000365")]
		public delegate void Handler(Player player);

		[Token(Token = "0x400120C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public HeadNode Head;

		[Token(Token = "0x400120D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Eyes Eyes;

		[Token(Token = "0x400120E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public HandNode LeftHand;

		[Token(Token = "0x400120F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public HandNode RightHand;

		[Token(Token = "0x170002E6")]
		public static Player Instance
		{
			[Token(Token = "0x600178E")]
			[Address(RVA = "0xE7CE90", Offset = "0xE7CE90", VA = "0xE7CE90")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x600178F")]
			[Address(RVA = "0xE7CED8", Offset = "0xE7CED8", VA = "0xE7CED8")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x170002E7")]
		public HandNode[] Hands
		{
			[Token(Token = "0x6001790")]
			[Address(RVA = "0xE7CF24", Offset = "0xE7CF24", VA = "0xE7CF24")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002E8")]
		public Vector3 FeetPositionApprox
		{
			[Token(Token = "0x6001791")]
			[Address(RVA = "0xE7CFE4", Offset = "0xE7CFE4", VA = "0xE7CFE4")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170002E9")]
		public Vector3 RoomPosition
		{
			[Token(Token = "0x6001792")]
			[Address(RVA = "0xE7D080", Offset = "0xE7D080", VA = "0xE7D080")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170002EA")]
		public Vector3 Up
		{
			[Token(Token = "0x6001793")]
			[Address(RVA = "0xE7D0A0", Offset = "0xE7D0A0", VA = "0xE7D0A0")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170002EB")]
		public Vector3 Heading
		{
			[Token(Token = "0x6001794")]
			[Address(RVA = "0xE7D0C0", Offset = "0xE7D0C0", VA = "0xE7D0C0")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x14000055")]
		public static event Handler CreatedEvent
		{
			[Token(Token = "0x6001795")]
			[Address(RVA = "0xE7D1F0", Offset = "0xE7D1F0", VA = "0xE7D1F0")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001796")]
			[Address(RVA = "0xE7D2AC", Offset = "0xE7D2AC", VA = "0xE7D2AC")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000056")]
		public static event Handler DestroyedEvent
		{
			[Token(Token = "0x6001797")]
			[Address(RVA = "0xE7D368", Offset = "0xE7D368", VA = "0xE7D368")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001798")]
			[Address(RVA = "0xE7D424", Offset = "0xE7D424", VA = "0xE7D424")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000057")]
		public event Action WarpLocationEvent
		{
			[Token(Token = "0x6001799")]
			[Address(RVA = "0xE7D4E0", Offset = "0xE7D4E0", VA = "0xE7D4E0")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x600179A")]
			[Address(RVA = "0xE7D57C", Offset = "0xE7D57C", VA = "0xE7D57C")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x600179B")]
		[Address(RVA = "0xE7D618", Offset = "0xE7D618", VA = "0xE7D618")]
		public void DropItems()
		{
		}

		[Token(Token = "0x600179C")]
		[Address(RVA = "0xE7D61C", Offset = "0xE7D61C", VA = "0xE7D61C")]
		public HandNode GetHand(Handedness handedness)
		{
			return null;
		}

		[Token(Token = "0x600179D")]
		[Address(RVA = "0xE7D6AC", Offset = "0xE7D6AC", VA = "0xE7D6AC")]
		public HandNode GetPrimaryHand()
		{
			return null;
		}

		[Token(Token = "0x600179E")]
		[Address(RVA = "0xE7D754", Offset = "0xE7D754", VA = "0xE7D754")]
		public HandNode GetSecondaryHand()
		{
			return null;
		}

		[Token(Token = "0x600179F")]
		[Address(RVA = "0xE7D77C", Offset = "0xE7D77C", VA = "0xE7D77C")]
		public void MoveRoomTo(Transform point)
		{
		}

		[Token(Token = "0x60017A0")]
		[Address(RVA = "0xE7D804", Offset = "0xE7D804", VA = "0xE7D804")]
		public void MoveRoomTo(Vector3 position, Quaternion rotation)
		{
		}

		[Token(Token = "0x60017A1")]
		[Address(RVA = "0xE7D898", Offset = "0xE7D898", VA = "0xE7D898")]
		public void MoveFeetToPosition(Vector3 feetPosition)
		{
		}

		[Token(Token = "0x60017A2")]
		[Address(RVA = "0xE7D91C", Offset = "0xE7D91C", VA = "0xE7D91C")]
		public void RotateRoomToHeading(Vector3 heading)
		{
		}

		[Token(Token = "0x60017A3")]
		[Address(RVA = "0xE7DA9C", Offset = "0xE7DA9C", VA = "0xE7DA9C")]
		public void Rotate(float degrees)
		{
		}

		[Token(Token = "0x60017A4")]
		[Address(RVA = "0xE7DBC0", Offset = "0xE7DBC0", VA = "0xE7DBC0")]
		public void WarpToLocation(Vector3 feetPosition, Vector3 heading)
		{
		}

		[Token(Token = "0x60017A5")]
		[Address(RVA = "0xE7DC34", Offset = "0xE7DC34", VA = "0xE7DC34", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x60017A6")]
		[Address(RVA = "0xE7DE94", Offset = "0xE7DE94", VA = "0xE7DE94")]
		private void Start()
		{
		}

		[Token(Token = "0x60017A7")]
		[Address(RVA = "0xE7DE98", Offset = "0xE7DE98", VA = "0xE7DE98", Slot = "5")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x60017A8")]
		[Address(RVA = "0xE7DFA0", Offset = "0xE7DFA0", VA = "0xE7DFA0")]
		public Player()
		{
		}
	}
	[Token(Token = "0x2000366")]
	public class PlayerSpawner : MonoBehaviour
	{
		[Token(Token = "0x4001213")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Player _screenPlayer;

		[Token(Token = "0x4001214")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Player _vrPlayer;

		[Token(Token = "0x4001215")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private bool _initializeOnAwake;

		[Token(Token = "0x4001216")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		[SerializeField]
		private bool _skipIfInstanceExists;

		[Token(Token = "0x60017AD")]
		[Address(RVA = "0xE7E114", Offset = "0xE7E114", VA = "0xE7E114")]
		private void InstantiatePlayer()
		{
		}

		[Token(Token = "0x60017AE")]
		[Address(RVA = "0xE7E274", Offset = "0xE7E274", VA = "0xE7E274")]
		private void Start()
		{
		}

		[Token(Token = "0x60017AF")]
		[Address(RVA = "0xE7E378", Offset = "0xE7E378", VA = "0xE7E378")]
		public PlayerSpawner()
		{
		}
	}
	[Token(Token = "0x2000367")]
	[RequireComponent(typeof(Player))]
	public class VRPlayer : ComponentBehavior<Player>
	{
		[Token(Token = "0x2000368")]
		private class InterpolatedHeadInputDevice : HMDInputDevice
		{
			[Token(Token = "0x400121C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
			public Vector3 DefaultHeadPostiion;

			[Token(Token = "0x400121D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			private Player _player;

			[Token(Token = "0x60017B6")]
			[Address(RVA = "0xE7E9F8", Offset = "0xE7E9F8", VA = "0xE7E9F8")]
			public InterpolatedHeadInputDevice(Player player)
			{
			}

			[Token(Token = "0x60017B7")]
			[Address(RVA = "0xE7EBAC", Offset = "0xE7EBAC", VA = "0xE7EBAC", Slot = "7")]
			public override void UpdateActions()
			{
			}
		}

		[Token(Token = "0x4001217")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private InputDevice _cacheHeadInputDevice;

		[Token(Token = "0x4001218")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private InterpolatedHeadInputDevice _interpolatedHeadInputDevice;

		[Token(Token = "0x4001219")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private bool _enableInterpolatedHeadOnStart;

		[Token(Token = "0x400121A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		public Vector3 DefaultinterpolatedHeadPosition;

		[Token(Token = "0x400121B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool _interpolatedHeadEnabled;

		[Token(Token = "0x170002EC")]
		public Player Player
		{
			[Token(Token = "0x60017B0")]
			[Address(RVA = "0xE7E388", Offset = "0xE7E388", VA = "0xE7E388")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60017B1")]
		[Address(RVA = "0xE7E3D0", Offset = "0xE7E3D0", VA = "0xE7E3D0", Slot = "6")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x60017B2")]
		[Address(RVA = "0xE7E640", Offset = "0xE7E640", VA = "0xE7E640")]
		private void Start()
		{
		}

		[Token(Token = "0x60017B3")]
		[Address(RVA = "0xE7E654", Offset = "0xE7E654", VA = "0xE7E654")]
		public void SetInterpolatedHead(bool enabled)
		{
		}

		[Token(Token = "0x60017B4")]
		[Address(RVA = "0xE7EA30", Offset = "0xE7EA30", VA = "0xE7EA30")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60017B5")]
		[Address(RVA = "0xE7EB54", Offset = "0xE7EB54", VA = "0xE7EB54")]
		public VRPlayer()
		{
		}
	}
	[Token(Token = "0x2000369")]
	public class BotHandInputDevice : InputDevice
	{
		[Token(Token = "0x60017B8")]
		[Address(RVA = "0xE7EE98", Offset = "0xE7EE98", VA = "0xE7EE98", Slot = "4")]
		public override string GetDeviceType()
		{
			return null;
		}

		[Token(Token = "0x60017B9")]
		[Address(RVA = "0xE7EED8", Offset = "0xE7EED8", VA = "0xE7EED8", Slot = "5")]
		protected override void SetHapticVibration(float frequency = 0.35f, float amplitude = 0.35f)
		{
		}

		[Token(Token = "0x60017BA")]
		[Address(RVA = "0xE7EEDC", Offset = "0xE7EEDC", VA = "0xE7EEDC", Slot = "6")]
		public override void TriggerHapticPulse(float durationSeconds = 0.2f, float frequency = 0.35f, float amplitude = 0.35f)
		{
		}

		[Token(Token = "0x60017BB")]
		[Address(RVA = "0xE7EEE0", Offset = "0xE7EEE0", VA = "0xE7EEE0", Slot = "7")]
		public override void UpdateActions()
		{
		}

		[Token(Token = "0x60017BC")]
		[Address(RVA = "0xE7EEEC", Offset = "0xE7EEEC", VA = "0xE7EEEC")]
		public BotHandInputDevice()
		{
		}
	}
	[Token(Token = "0x200036A")]
	public class BotHeadInputDevice : InputDevice
	{
		[Token(Token = "0x60017BD")]
		[Address(RVA = "0xE7EEF4", Offset = "0xE7EEF4", VA = "0xE7EEF4", Slot = "4")]
		public override string GetDeviceType()
		{
			return null;
		}

		[Token(Token = "0x60017BE")]
		[Address(RVA = "0xE7EF8C", Offset = "0xE7EF8C", VA = "0xE7EF8C", Slot = "5")]
		protected override void SetHapticVibration(float frequency = 0.35f, float amplitude = 0.35f)
		{
		}

		[Token(Token = "0x60017BF")]
		[Address(RVA = "0xE7EF90", Offset = "0xE7EF90", VA = "0xE7EF90", Slot = "6")]
		public override void TriggerHapticPulse(float durationSeconds = 0.2f, float frequency = 0.35f, float amplitude = 0.35f)
		{
		}

		[Token(Token = "0x60017C0")]
		[Address(RVA = "0xE7EF94", Offset = "0xE7EF94", VA = "0xE7EF94", Slot = "7")]
		public override void UpdateActions()
		{
		}

		[Token(Token = "0x60017C1")]
		[Address(RVA = "0xE7EFA0", Offset = "0xE7EFA0", VA = "0xE7EFA0")]
		public BotHeadInputDevice()
		{
		}
	}
	[Token(Token = "0x200036B")]
	[RequireComponent(typeof(Player))]
	public class BotPlayer : ComponentBehavior<Player>
	{
		[Token(Token = "0x60017C2")]
		[Address(RVA = "0xE7EFA8", Offset = "0xE7EFA8", VA = "0xE7EFA8", Slot = "6")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x60017C3")]
		[Address(RVA = "0xE7F13C", Offset = "0xE7F13C", VA = "0xE7F13C")]
		public BotPlayer()
		{
		}
	}
	[Token(Token = "0x200036C")]
	public class DesktopHandInputDevice : InputDevice
	{
		[Token(Token = "0x400121E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public Handedness Handedness;

		[Token(Token = "0x60017C4")]
		[Address(RVA = "0xE7F184", Offset = "0xE7F184", VA = "0xE7F184")]
		public DesktopHandInputDevice()
		{
		}

		[Token(Token = "0x60017C5")]
		[Address(RVA = "0xE7F18C", Offset = "0xE7F18C", VA = "0xE7F18C", Slot = "4")]
		public override string GetDeviceType()
		{
			return null;
		}

		[Token(Token = "0x60017C6")]
		[Address(RVA = "0xE7F210", Offset = "0xE7F210", VA = "0xE7F210", Slot = "5")]
		protected override void SetHapticVibration(float frequency = 0.35f, float amplitude = 0.35f)
		{
		}

		[Token(Token = "0x60017C7")]
		[Address(RVA = "0xE7F214", Offset = "0xE7F214", VA = "0xE7F214", Slot = "6")]
		public override void TriggerHapticPulse(float durationSeconds = 0.2f, float frequency = 0.35f, float amplitude = 0.35f)
		{
		}

		[Token(Token = "0x60017C8")]
		[Address(RVA = "0xE7F218", Offset = "0xE7F218", VA = "0xE7F218", Slot = "7")]
		public override void UpdateActions()
		{
		}
	}
	[Token(Token = "0x200036D")]
	public class DesktopHeadInputDevice : InputDevice
	{
		[Token(Token = "0x400121F")]
		private const KeyCode _pointerKey = KeyCode.Mouse0;

		[Token(Token = "0x4001220")]
		private const KeyCode _primaryKey = KeyCode.Space;

		[Token(Token = "0x4001221")]
		private const KeyCode _backKey = KeyCode.Escape;

		[Token(Token = "0x4001222")]
		private const string _horizontalAxis = "Horizontal";

		[Token(Token = "0x4001223")]
		private const string _verticalAxis = "Vertical";

		[Token(Token = "0x60017C9")]
		[Address(RVA = "0xE7F3E8", Offset = "0xE7F3E8", VA = "0xE7F3E8", Slot = "4")]
		public override string GetDeviceType()
		{
			return null;
		}

		[Token(Token = "0x60017CA")]
		[Address(RVA = "0xE7F480", Offset = "0xE7F480", VA = "0xE7F480", Slot = "5")]
		protected override void SetHapticVibration(float frequency = 0.35f, float amplitude = 0.35f)
		{
		}

		[Token(Token = "0x60017CB")]
		[Address(RVA = "0xE7F484", Offset = "0xE7F484", VA = "0xE7F484", Slot = "6")]
		public override void TriggerHapticPulse(float durationSeconds = 0.2f, float frequency = 0.35f, float amplitude = 0.35f)
		{
		}

		[Token(Token = "0x60017CC")]
		[Address(RVA = "0xE7F488", Offset = "0xE7F488", VA = "0xE7F488", Slot = "7")]
		public override void UpdateActions()
		{
		}

		[Token(Token = "0x60017CD")]
		[Address(RVA = "0xE7F788", Offset = "0xE7F788", VA = "0xE7F788")]
		public DesktopHeadInputDevice()
		{
		}
	}
	[Token(Token = "0x200036E")]
	[RequireComponent(typeof(Player))]
	public class DesktopPlayer : ComponentBehavior<Player>
	{
		[Token(Token = "0x4001224")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float _cameraAngleX;

		[Token(Token = "0x4001225")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float _cameraAngleY;

		[Token(Token = "0x4001226")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[Header("Node Settings")]
		[SerializeField]
		private float _headHeight;

		[Token(Token = "0x4001227")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private Vector3 _headToHandOffset;

		[Token(Token = "0x4001228")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private float _handRotationOffset;

		[Token(Token = "0x4001229")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		[Header("Camera Settings")]
		private Vector3 _cameraOrbitOffset;

		[Token(Token = "0x400122A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private KeyCode _cameraMoveKey;

		[Token(Token = "0x400122B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[Range(0f, 10f)]
		[SerializeField]
		private float _mouseSensitivity;

		[Token(Token = "0x170002ED")]
		private Player _player
		{
			[Token(Token = "0x60017CE")]
			[Address(RVA = "0xE7F790", Offset = "0xE7F790", VA = "0xE7F790")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002EE")]
		private Quaternion _localLookRotation
		{
			[Token(Token = "0x60017CF")]
			[Address(RVA = "0xE7F7D8", Offset = "0xE7F7D8", VA = "0xE7F7D8")]
			get
			{
				return default(Quaternion);
			}
		}

		[Token(Token = "0x170002EF")]
		private Quaternion _worldLookRotation
		{
			[Token(Token = "0x60017D0")]
			[Address(RVA = "0xE7F7F8", Offset = "0xE7F7F8", VA = "0xE7F7F8")]
			get
			{
				return default(Quaternion);
			}
		}

		[Token(Token = "0x60017D1")]
		[Address(RVA = "0xE7F8D0", Offset = "0xE7F8D0", VA = "0xE7F8D0")]
		private void UpdateNodeTransforms()
		{
		}

		[Token(Token = "0x60017D2")]
		[Address(RVA = "0xE7FCA8", Offset = "0xE7FCA8", VA = "0xE7FCA8")]
		private void UpdateCamera()
		{
		}

		[Token(Token = "0x60017D3")]
		[Address(RVA = "0xE7FE98", Offset = "0xE7FE98", VA = "0xE7FE98", Slot = "6")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x60017D4")]
		[Address(RVA = "0xE80358", Offset = "0xE80358", VA = "0xE80358")]
		private void Update()
		{
		}

		[Token(Token = "0x60017D5")]
		[Address(RVA = "0xE80370", Offset = "0xE80370", VA = "0xE80370")]
		public DesktopPlayer()
		{
		}
	}
	[Token(Token = "0x2000370")]
	public enum DisplayMode
	{
		[Token(Token = "0x400122F")]
		Screen,
		[Token(Token = "0x4001230")]
		VR
	}
	[Token(Token = "0x2000371")]
	public class DisplayModeAdapter : MonoBehaviour
	{
		[Token(Token = "0x4001231")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool _enabledForScreen;

		[Token(Token = "0x4001232")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[SerializeField]
		private bool _enabledForVR;

		[Token(Token = "0x60017D9")]
		[Address(RVA = "0xE80550", Offset = "0xE80550", VA = "0xE80550")]
		private void Start()
		{
		}

		[Token(Token = "0x60017DA")]
		[Address(RVA = "0xE805C8", Offset = "0xE805C8", VA = "0xE805C8")]
		private void SetActive(bool active)
		{
		}

		[Token(Token = "0x60017DB")]
		[Address(RVA = "0xE805F0", Offset = "0xE805F0", VA = "0xE805F0")]
		public DisplayModeAdapter()
		{
		}
	}
	[Token(Token = "0x2000372")]
	public class DisplayModeController : MonoBehaviour
	{
		[Token(Token = "0x2000373")]
		[CompilerGenerated]
		private sealed class <SetupVRDisplayModeRoutine>d__2 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001233")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001234")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x170002F0")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60017E4")]
				[Address(RVA = "0xE8077C", Offset = "0xE8077C", VA = "0xE8077C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002F1")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60017E6")]
				[Address(RVA = "0xE807C4", Offset = "0xE807C4", VA = "0xE807C4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60017E1")]
			[Address(RVA = "0xE80708", Offset = "0xE80708", VA = "0xE80708")]
			[DebuggerHidden]
			public <SetupVRDisplayModeRoutine>d__2(int <>1__state)
			{
			}

			[Token(Token = "0x60017E2")]
			[Address(RVA = "0xE80760", Offset = "0xE80760", VA = "0xE80760", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60017E3")]
			[Address(RVA = "0xE80764", Offset = "0xE80764", VA = "0xE80764", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60017E5")]
			[Address(RVA = "0xE80784", Offset = "0xE80784", VA = "0xE80784", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000374")]
		[CompilerGenerated]
		private sealed class <SetupScreenModeDisplay>d__3 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001235")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001236")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x170002F2")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60017EA")]
				[Address(RVA = "0xE807E8", Offset = "0xE807E8", VA = "0xE807E8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002F3")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60017EC")]
				[Address(RVA = "0xE80830", Offset = "0xE80830", VA = "0xE80830", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60017E7")]
			[Address(RVA = "0xE80730", Offset = "0xE80730", VA = "0xE80730")]
			[DebuggerHidden]
			public <SetupScreenModeDisplay>d__3(int <>1__state)
			{
			}

			[Token(Token = "0x60017E8")]
			[Address(RVA = "0xE807CC", Offset = "0xE807CC", VA = "0xE807CC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60017E9")]
			[Address(RVA = "0xE807D0", Offset = "0xE807D0", VA = "0xE807D0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60017EB")]
			[Address(RVA = "0xE807F0", Offset = "0xE807F0", VA = "0xE807F0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x60017DC")]
		[Address(RVA = "0xE805F8", Offset = "0xE805F8", VA = "0xE805F8")]
		public void SetupVRDisplayMode()
		{
		}

		[Token(Token = "0x60017DD")]
		[Address(RVA = "0xE80680", Offset = "0xE80680", VA = "0xE80680")]
		public void SetupScreenDisplayMode()
		{
		}

		[Token(Token = "0x60017DE")]
		[Address(RVA = "0xE80620", Offset = "0xE80620", VA = "0xE80620")]
		[IteratorStateMachine(typeof(<SetupVRDisplayModeRoutine>d__2))]
		private IEnumerator SetupVRDisplayModeRoutine()
		{
			return null;
		}

		[Token(Token = "0x60017DF")]
		[Address(RVA = "0xE806A8", Offset = "0xE806A8", VA = "0xE806A8")]
		[IteratorStateMachine(typeof(<SetupScreenModeDisplay>d__3))]
		private IEnumerator SetupScreenModeDisplay()
		{
			return null;
		}

		[Token(Token = "0x60017E0")]
		[Address(RVA = "0xE80758", Offset = "0xE80758", VA = "0xE80758")]
		public DisplayModeController()
		{
		}
	}
	[Token(Token = "0x2000375")]
	public class DisplayModedCanvas : MonoBehaviour
	{
		[Token(Token = "0x4001237")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Vector2 _worldSpaceSize;

		[Token(Token = "0x4001238")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Canvas _canvas;

		[Token(Token = "0x4001239")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private bool _autoArrangeOnStart;

		[Token(Token = "0x60017ED")]
		[Address(RVA = "0xE80838", Offset = "0xE80838", VA = "0xE80838")]
		[ContextMenu("Arrange for Screen")]
		public void ArrangeForScreen()
		{
		}

		[Token(Token = "0x60017EE")]
		[Address(RVA = "0xE809E8", Offset = "0xE809E8", VA = "0xE809E8")]
		[ContextMenu("Arrange for VR")]
		public void ArrangeForVR()
		{
		}

		[Token(Token = "0x60017EF")]
		[Address(RVA = "0xE809F0", Offset = "0xE809F0", VA = "0xE809F0")]
		public void AutoArrange()
		{
		}

		[Token(Token = "0x60017F0")]
		[Address(RVA = "0xE80840", Offset = "0xE80840", VA = "0xE80840")]
		private void ArrangeInRect(DisplayMode mode)
		{
		}

		[Token(Token = "0x60017F1")]
		[Address(RVA = "0xE80A40", Offset = "0xE80A40", VA = "0xE80A40")]
		private void Start()
		{
		}

		[Token(Token = "0x60017F2")]
		[Address(RVA = "0xE80A50", Offset = "0xE80A50", VA = "0xE80A50")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x60017F3")]
		[Address(RVA = "0xE80BC4", Offset = "0xE80BC4", VA = "0xE80BC4")]
		public DisplayModedCanvas()
		{
		}
	}
	[Token(Token = "0x2000376")]
	public static class DisplayModeManager
	{
		[Token(Token = "0x400123B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static DisplayModeController _controller;

		[Token(Token = "0x400123C")]
		private const string playerPrefKey = "DisplayMode";

		[Token(Token = "0x400123D")]
		private const string commandArgKey = "-vrmode";

		[Token(Token = "0x170002F4")]
		public static DisplayMode CurrentMode
		{
			[Token(Token = "0x60017F4")]
			[Address(RVA = "0xE80BD8", Offset = "0xE80BD8", VA = "0xE80BD8")]
			[CompilerGenerated]
			get
			{
				return default(DisplayMode);
			}
			[Token(Token = "0x60017F5")]
			[Address(RVA = "0xE80C20", Offset = "0xE80C20", VA = "0xE80C20")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x170002F5")]
		public static DisplayMode PreferredMode
		{
			[Token(Token = "0x60017F6")]
			[Address(RVA = "0xE80C6C", Offset = "0xE80C6C", VA = "0xE80C6C")]
			get
			{
				return default(DisplayMode);
			}
			[Token(Token = "0x60017F7")]
			[Address(RVA = "0xE80D7C", Offset = "0xE80D7C", VA = "0xE80D7C")]
			set
			{
			}
		}

		[Token(Token = "0x170002F6")]
		public static DisplayModeController Controller
		{
			[Token(Token = "0x60017F8")]
			[Address(RVA = "0xE80E10", Offset = "0xE80E10", VA = "0xE80E10")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60017F9")]
		[Address(RVA = "0xE80F18", Offset = "0xE80F18", VA = "0xE80F18")]
		public static void SetMode(DisplayMode mode)
		{
		}

		[Token(Token = "0x60017FA")]
		[Address(RVA = "0xE80FF8", Offset = "0xE80FF8", VA = "0xE80FF8")]
		[RuntimeInitializeOnLoadMethod(RuntimeInitializeLoadType.BeforeSceneLoad)]
		private static void OnPreSceneLoad()
		{
		}
	}
	[Token(Token = "0x2000377")]
	public static class FadeManager
	{
		[Token(Token = "0x2000378")]
		public delegate IFadeController ControllerAccessor();

		[Token(Token = "0x400123E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static IFadeController _controller;

		[Token(Token = "0x60017FB")]
		[Address(RVA = "0xE802F4", Offset = "0xE802F4", VA = "0xE802F4")]
		public static void SetControllerAccessor(ControllerAccessor accessor)
		{
		}

		[Token(Token = "0x60017FC")]
		[Address(RVA = "0xE811B4", Offset = "0xE811B4", VA = "0xE811B4")]
		public static void Fade(Color targetColor, float duration)
		{
		}
	}
	[Token(Token = "0x2000379")]
	public interface IFadeController
	{
		[Token(Token = "0x6001801")]
		void Fade(Color targetColor, float duration);
	}
	[Token(Token = "0x200037A")]
	public class SimpleCameraFadeController : MonoBehaviour, IFadeController
	{
		[Token(Token = "0x200037B")]
		[CompilerGenerated]
		private sealed class <FadeRoutine>d__8 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001244")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001245")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001246")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SimpleCameraFadeController <>4__this;

			[Token(Token = "0x4001247")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Color targetColor;

			[Token(Token = "0x4001248")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public float duration;

			[Token(Token = "0x4001249")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <time>5__2;

			[Token(Token = "0x400124A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private Color <startColor>5__3;

			[Token(Token = "0x170002F7")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600180E")]
				[Address(RVA = "0xE818EC", Offset = "0xE818EC", VA = "0xE818EC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002F8")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001810")]
				[Address(RVA = "0xE81934", Offset = "0xE81934", VA = "0xE81934", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600180B")]
			[Address(RVA = "0xE81538", Offset = "0xE81538", VA = "0xE81538")]
			[DebuggerHidden]
			public <FadeRoutine>d__8(int <>1__state)
			{
			}

			[Token(Token = "0x600180C")]
			[Address(RVA = "0xE817DC", Offset = "0xE817DC", VA = "0xE817DC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600180D")]
			[Address(RVA = "0xE817E0", Offset = "0xE817E0", VA = "0xE817E0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600180F")]
			[Address(RVA = "0xE818F4", Offset = "0xE818F4", VA = "0xE818F4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400123F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static SimpleCameraFadeController _instance;

		[Token(Token = "0x4001240")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Material _fadeMaterial;

		[Token(Token = "0x4001241")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int _fadeMaterialColorID;

		[Token(Token = "0x4001242")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private Color _currentColor;

		[Token(Token = "0x4001243")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Coroutine _fadeRoutine;

		[Token(Token = "0x6001802")]
		[Address(RVA = "0xE80454", Offset = "0xE80454", VA = "0xE80454")]
		public static SimpleCameraFadeController GetInstance()
		{
			return null;
		}

		[Token(Token = "0x6001803")]
		[Address(RVA = "0xE81300", Offset = "0xE81300", VA = "0xE81300", Slot = "4")]
		public void Fade(Color targetColor, float duration)
		{
		}

		[Token(Token = "0x6001804")]
		[Address(RVA = "0xE813DC", Offset = "0xE813DC", VA = "0xE813DC")]
		public void Stop()
		{
		}

		[Token(Token = "0x6001805")]
		[Address(RVA = "0xE81498", Offset = "0xE81498", VA = "0xE81498")]
		[IteratorStateMachine(typeof(<FadeRoutine>d__8))]
		private IEnumerator FadeRoutine(Color targetColor, float duration)
		{
			return null;
		}

		[Token(Token = "0x6001806")]
		[Address(RVA = "0xE81560", Offset = "0xE81560", VA = "0xE81560")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001807")]
		[Address(RVA = "0xE816A0", Offset = "0xE816A0", VA = "0xE816A0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001808")]
		[Address(RVA = "0xE816A4", Offset = "0xE816A4", VA = "0xE816A4")]
		private void OnPostRender()
		{
		}

		[Token(Token = "0x6001809")]
		[Address(RVA = "0xE817C8", Offset = "0xE817C8", VA = "0xE817C8")]
		public SimpleCameraFadeController()
		{
		}
	}
	[Token(Token = "0x200037C")]
	public static class HandednessManager
	{
		[Token(Token = "0x400124C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static int _rightScore;

		[Token(Token = "0x400124D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static int _leftScore;

		[Token(Token = "0x170002F9")]
		public static Handedness UserConfiguration
		{
			[Token(Token = "0x6001811")]
			[Address(RVA = "0xE8193C", Offset = "0xE8193C", VA = "0xE8193C")]
			[CompilerGenerated]
			get
			{
				return default(Handedness);
			}
			[Token(Token = "0x6001812")]
			[Address(RVA = "0xE81984", Offset = "0xE81984", VA = "0xE81984")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6001813")]
		[Address(RVA = "0xE819D0", Offset = "0xE819D0", VA = "0xE819D0")]
		public static void RegisterAction(Handedness handedness, int points = 1)
		{
		}

		[Token(Token = "0x6001814")]
		[Address(RVA = "0xE7D6D4", Offset = "0xE7D6D4", VA = "0xE7D6D4")]
		public static Handedness GetHandedness()
		{
			return default(Handedness);
		}

		[Token(Token = "0x6001815")]
		[Address(RVA = "0xE81A44", Offset = "0xE81A44", VA = "0xE81A44")]
		private static Handedness GetBestGuess()
		{
			return default(Handedness);
		}
	}
	[Token(Token = "0x200037D")]
	[CreateAssetMenu(fileName = "New Haptic Curve", menuName = "FarBridge/Europa/Haptic Curve")]
	public class HapticCurveAsset : HapticVibrationAsset
	{
		[Token(Token = "0x200037E")]
		public class HapticCurvePlayer : HapticVibrationPlayer
		{
			[Token(Token = "0x4001255")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private HapticCurveAsset _curveAsset;

			[Token(Token = "0x4001256")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private float _amplitudeMultiplier;

			[Token(Token = "0x4001257")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			private float _time;

			[Token(Token = "0x6001818")]
			[Address(RVA = "0xE81B0C", Offset = "0xE81B0C", VA = "0xE81B0C")]
			public HapticCurvePlayer(HapticCurveAsset curveAsset, float amplitudeMultiplier)
			{
			}

			[Token(Token = "0x6001819")]
			[Address(RVA = "0xE81BD0", Offset = "0xE81BD0", VA = "0xE81BD0", Slot = "4")]
			public override void UpdateTime(float deltaTime)
			{
			}

			[Token(Token = "0x600181A")]
			[Address(RVA = "0xE81BE0", Offset = "0xE81BE0", VA = "0xE81BE0", Slot = "5")]
			public override bool IsFinished()
			{
				return default(bool);
			}

			[Token(Token = "0x600181B")]
			[Address(RVA = "0xE81C08", Offset = "0xE81C08", VA = "0xE81C08", Slot = "6")]
			public override HapticPulse GetHapticPulse()
			{
				return default(HapticPulse);
			}
		}

		[Token(Token = "0x400124E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Tooltip("The amount of time the vibration will occur")]
		[SerializeField]
		[Header("Duration")]
		private float _duration;

		[Token(Token = "0x400124F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[Range(0f, 1f)]
		[Tooltip("Minimum value used by the Frequency curve, corresponding to 0")]
		[SerializeField]
		[Header("Strength")]
		private float _minFrequency;

		[Token(Token = "0x4001250")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Range(0f, 1f)]
		[Tooltip("Maximum value used by the Frequency curve, corresponding to 1")]
		[SerializeField]
		private float _maxFrequency;

		[Token(Token = "0x4001251")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Tooltip("How often the haptic motor will bounce")]
		[SerializeField]
		private AnimationCurve _frequencyOverTime;

		[Token(Token = "0x4001252")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[Range(0f, 1f)]
		[SerializeField]
		[Tooltip("Minimum value used by the Amplitude curve, corresponding to 0")]
		private float _minAmplitude;

		[Token(Token = "0x4001253")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[Range(0f, 1f)]
		[SerializeField]
		[Tooltip("Maximum value used by the Amplitude curve, corresponding to 1")]
		private float _maxAmplitude;

		[Token(Token = "0x4001254")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		[Tooltip("How intense the haptic action should be")]
		private AnimationCurve _amplitudeOverTime;

		[Token(Token = "0x6001816")]
		[Address(RVA = "0xE81A98", Offset = "0xE81A98", VA = "0xE81A98", Slot = "4")]
		public override HapticVibrationPlayer CreatePlayer(float amplitudeMultiplier)
		{
			return null;
		}

		[Token(Token = "0x6001817")]
		[Address(RVA = "0xE81B44", Offset = "0xE81B44", VA = "0xE81B44")]
		public HapticCurveAsset()
		{
		}
	}
	[Token(Token = "0x200037F")]
	[CreateAssetMenu(fileName = "New Haptic Pulse", menuName = "FarBridge/Europa/Haptic Pulse")]
	public class HapticPulseAsset : HapticVibrationAsset
	{
		[Token(Token = "0x2000380")]
		public class HapticPulsePlayer : HapticVibrationPlayer
		{
			[Token(Token = "0x400125B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private HapticPulseAsset _pulseAsset;

			[Token(Token = "0x400125C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private float _amplitudeMultiplier;

			[Token(Token = "0x400125D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			private float _time;

			[Token(Token = "0x600181E")]
			[Address(RVA = "0xE81D88", Offset = "0xE81D88", VA = "0xE81D88")]
			public HapticPulsePlayer(HapticPulseAsset pulseAsset, float amplitudeMultiplier)
			{
			}

			[Token(Token = "0x600181F")]
			[Address(RVA = "0xE81DE0", Offset = "0xE81DE0", VA = "0xE81DE0", Slot = "4")]
			public override void UpdateTime(float deltaTime)
			{
			}

			[Token(Token = "0x6001820")]
			[Address(RVA = "0xE81DF0", Offset = "0xE81DF0", VA = "0xE81DF0", Slot = "5")]
			public override bool IsFinished()
			{
				return default(bool);
			}

			[Token(Token = "0x6001821")]
			[Address(RVA = "0xE81E18", Offset = "0xE81E18", VA = "0xE81E18", Slot = "6")]
			public override HapticPulse GetHapticPulse()
			{
				return default(HapticPulse);
			}
		}

		[Token(Token = "0x4001258")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Tooltip("The amount of time the vibration will occur")]
		[SerializeField]
		[Header("Duration")]
		private float _duration;

		[Token(Token = "0x4001259")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[Tooltip("How often the haptic motor will bounce")]
		[SerializeField]
		[Range(0f, 1f)]
		[Header("Strength")]
		private float _frequency;

		[Token(Token = "0x400125A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Tooltip("How intense the haptic action should be")]
		[SerializeField]
		[Range(0f, 1f)]
		private float _amplitude;

		[Token(Token = "0x600181C")]
		[Address(RVA = "0xE81D14", Offset = "0xE81D14", VA = "0xE81D14", Slot = "4")]
		public override HapticVibrationPlayer CreatePlayer(float amplitudeMultiplier)
		{
			return null;
		}

		[Token(Token = "0x600181D")]
		[Address(RVA = "0xE81DC0", Offset = "0xE81DC0", VA = "0xE81DC0")]
		public HapticPulseAsset()
		{
		}
	}
	[Token(Token = "0x2000381")]
	public abstract class HapticVibrationAsset : ScriptableObject
	{
		[Token(Token = "0x2000382")]
		public abstract class HapticVibrationPlayer
		{
			[Token(Token = "0x6001824")]
			public abstract void UpdateTime(float deltaTime);

			[Token(Token = "0x6001825")]
			public abstract bool IsFinished();

			[Token(Token = "0x6001826")]
			public abstract HapticPulse GetHapticPulse();

			[Token(Token = "0x6001827")]
			[Address(RVA = "0xE81BC8", Offset = "0xE81BC8", VA = "0xE81BC8")]
			protected HapticVibrationPlayer()
			{
			}
		}

		[Token(Token = "0x6001822")]
		public abstract HapticVibrationPlayer CreatePlayer(float amplitudeMultiplier = 1f);

		[Token(Token = "0x6001823")]
		[Address(RVA = "0xE81BC0", Offset = "0xE81BC0", VA = "0xE81BC0")]
		protected HapticVibrationAsset()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000383")]
	public struct HapticPulse
	{
		[Token(Token = "0x400125E")]
		public const float DefaultDuration = 0.2f;

		[Token(Token = "0x400125F")]
		public const float DefaultFrequency = 0.35f;

		[Token(Token = "0x4001260")]
		public const float DefaultAmplitude = 0.35f;

		[Token(Token = "0x4001261")]
		public const string DurationTooltip = "The amount of time the vibration will occur";

		[Token(Token = "0x4001262")]
		public const string FrequencyTooltip = "How often the haptic motor will bounce";

		[Token(Token = "0x4001263")]
		public const string AmplitudeTooltip = "How intense the haptic action should be";

		[Token(Token = "0x4001264")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[Tooltip("The amount of time the vibration will occur")]
		public float Duration;

		[Token(Token = "0x4001265")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		[Tooltip("How often the haptic motor will bounce")]
		[Range(0f, 1f)]
		public float Frequency;

		[Token(Token = "0x4001266")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[Tooltip("How intense the haptic action should be")]
		[Range(0f, 1f)]
		public float Amplitude;

		[Token(Token = "0x170002FA")]
		public static HapticPulse Default
		{
			[Token(Token = "0x6001828")]
			[Address(RVA = "0xE81E44", Offset = "0xE81E44", VA = "0xE81E44")]
			get
			{
				return default(HapticPulse);
			}
		}

		[Token(Token = "0x170002FB")]
		public static HapticPulse Zero
		{
			[Token(Token = "0x6001829")]
			[Address(RVA = "0xE81E5C", Offset = "0xE81E5C", VA = "0xE81E5C")]
			get
			{
				return default(HapticPulse);
			}
		}

		[Token(Token = "0x600182A")]
		[Address(RVA = "0xE81D08", Offset = "0xE81D08", VA = "0xE81D08")]
		public HapticPulse(float duration, float frequency, float amplitude)
		{
		}

		[Token(Token = "0x600182B")]
		[Address(RVA = "0xE81E6C", Offset = "0xE81E6C", VA = "0xE81E6C", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x2000384")]
	[RequireComponent(typeof(Interactable))]
	public class InteractableHaptics : MonoBehaviour
	{
		[Token(Token = "0x4001267")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[Header("Haptics")]
		private HapticVibrationAsset _interactVibration;

		[Token(Token = "0x4001268")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Header("Playback Options")]
		[SerializeField]
		private bool _onBeginInteraction;

		[Token(Token = "0x4001269")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		[SerializeField]
		private bool _onUseButtonDown;

		[Token(Token = "0x400126A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
		[SerializeField]
		private bool _onUseButtonUp;

		[Token(Token = "0x400126B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Interactable _interactable;

		[Token(Token = "0x600182C")]
		[Address(RVA = "0xE81F30", Offset = "0xE81F30", VA = "0xE81F30")]
		private void Awake()
		{
		}

		[Token(Token = "0x600182D")]
		[Address(RVA = "0xE82160", Offset = "0xE82160", VA = "0xE82160")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600182E")]
		[Address(RVA = "0xE8231C", Offset = "0xE8231C", VA = "0xE8231C")]
		[ContextMenu("PlayHapticVibration")]
		private void PlayHapticVibration()
		{
		}

		[Token(Token = "0x600182F")]
		[Address(RVA = "0xE82410", Offset = "0xE82410", VA = "0xE82410")]
		private void OnBeginInteraction(Interactor interactor, Interactable interactable)
		{
		}

		[Token(Token = "0x6001830")]
		[Address(RVA = "0xE8201C", Offset = "0xE8201C", VA = "0xE8201C")]
		private void SubscribeVibrationCallback()
		{
		}

		[Token(Token = "0x6001831")]
		[Address(RVA = "0xE821D8", Offset = "0xE821D8", VA = "0xE821D8")]
		private void UnsubscribeVibrationCallback()
		{
		}

		[Token(Token = "0x6001832")]
		[Address(RVA = "0xE828EC", Offset = "0xE828EC", VA = "0xE828EC")]
		public InteractableHaptics()
		{
		}
	}
	[Token(Token = "0x2000385")]
	[RequireComponent(typeof(InteractableItem))]
	public class InteractableItemCollisionHaptics : MonoBehaviour
	{
		[Token(Token = "0x400126C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private HapticVibrationAsset _collisionVibration;

		[Token(Token = "0x400126D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float _minImpulse;

		[Token(Token = "0x400126E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[Header("Scaling Amplitude")]
		[SerializeField]
		private bool _scaleByImpulse;

		[Token(Token = "0x400126F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Vector2 _impulseRange;

		[Token(Token = "0x4001270")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Vector2 _multiplierRange;

		[Token(Token = "0x4001271")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[Header("Debug")]
		[SerializeField]
		private bool _logImpulse;

		[Token(Token = "0x4001272")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private InteractableItem _interactableItem;

		[Token(Token = "0x6001833")]
		[Address(RVA = "0xE828F4", Offset = "0xE828F4", VA = "0xE828F4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001834")]
		[Address(RVA = "0xE82AA4", Offset = "0xE82AA4", VA = "0xE82AA4")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001835")]
		[Address(RVA = "0xE82BE0", Offset = "0xE82BE0", VA = "0xE82BE0")]
		[ContextMenu("PlayHapticVibration")]
		private void PlayHapticVibration(float impulseMagnitude)
		{
		}

		[Token(Token = "0x6001836")]
		[Address(RVA = "0xE829E0", Offset = "0xE829E0", VA = "0xE829E0")]
		private void SubscribeVibrationCallback()
		{
		}

		[Token(Token = "0x6001837")]
		[Address(RVA = "0xE82B1C", Offset = "0xE82B1C", VA = "0xE82B1C")]
		private void UnsubscribeVibrationCallback()
		{
		}

		[Token(Token = "0x6001838")]
		[Address(RVA = "0xE8302C", Offset = "0xE8302C", VA = "0xE8302C")]
		public InteractableItemCollisionHaptics()
		{
		}
	}
	[Token(Token = "0x2000386")]
	[RequireComponent(typeof(Player))]
	public class PlayerHapticsTester : MonoBehaviour
	{
		[Token(Token = "0x4001273")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private HapticVibrationAsset _hapticVibration;

		[Token(Token = "0x4001274")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private HapticPulse _simpleHapticPulse;

		[Token(Token = "0x4001275")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Player _player;

		[Token(Token = "0x4001276")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private HapticVibrationAsset.HapticVibrationPlayer _leftHandHapticPlayer;

		[Token(Token = "0x4001277")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private HapticVibrationAsset.HapticVibrationPlayer _rightHandHapticPlayer;

		[Token(Token = "0x6001839")]
		[Address(RVA = "0xE83040", Offset = "0xE83040", VA = "0xE83040")]
		private void Awake()
		{
		}

		[Token(Token = "0x600183A")]
		[Address(RVA = "0xE83090", Offset = "0xE83090", VA = "0xE83090")]
		[ContextMenu("Left Hand - Pulse")]
		public void TriggerHapticPulse_LeftHand()
		{
		}

		[Token(Token = "0x600183B")]
		[Address(RVA = "0xE830D8", Offset = "0xE830D8", VA = "0xE830D8")]
		[ContextMenu("Left Hand - Vibration Asset")]
		public void TriggerHapticVibration_LeftHand()
		{
		}

		[Token(Token = "0x600183C")]
		[Address(RVA = "0xE83124", Offset = "0xE83124", VA = "0xE83124")]
		[ContextMenu("Right Hand - Pulse")]
		public void TriggerHapticPulse_RightHand()
		{
		}

		[Token(Token = "0x600183D")]
		[Address(RVA = "0xE8316C", Offset = "0xE8316C", VA = "0xE8316C")]
		[ContextMenu("Right Hand - Vibration Asset")]
		public void TriggerHapticVibration_RightHand()
		{
		}

		[Token(Token = "0x600183E")]
		[Address(RVA = "0xE831B8", Offset = "0xE831B8", VA = "0xE831B8")]
		[ContextMenu("Both - Vibration Asset")]
		public void TriggerHapticVibration_BothHands()
		{
		}

		[Token(Token = "0x600183F")]
		[Address(RVA = "0xE831D0", Offset = "0xE831D0", VA = "0xE831D0")]
		[ContextMenu("Stop Haptic Vibration")]
		public void StopHapticVibration()
		{
		}

		[Token(Token = "0x6001840")]
		[Address(RVA = "0xE83240", Offset = "0xE83240", VA = "0xE83240")]
		public PlayerHapticsTester()
		{
		}
	}
	[Token(Token = "0x2000387")]
	public class HandDistanceGrabber : InteractableDetector
	{
		[Token(Token = "0x2000388")]
		private enum SphereSize
		{
			[Token(Token = "0x4001286")]
			Focused,
			[Token(Token = "0x4001287")]
			Medium,
			[Token(Token = "0x4001288")]
			Big
		}

		[Token(Token = "0x4001278")]
		private const float CooldownDuration = 0.1f;

		[Token(Token = "0x4001279")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Header("Settings")]
		[SerializeField]
		private LayerMask _interactableMask;

		[Token(Token = "0x400127A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private LayerMask _blockingMask;

		[Token(Token = "0x400127B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float maxDistance;

		[Token(Token = "0x400127C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private float focusSphereCastRadius;

		[Token(Token = "0x400127D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float mediumSphereCastRadius;

		[Token(Token = "0x400127E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private float bigSphereCastRadius;

		[Token(Token = "0x400127F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private float mediumStart;

		[Token(Token = "0x4001280")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private float bigStart;

		[Token(Token = "0x4001281")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Transform _raycastOrigin;

		[Token(Token = "0x4001282")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private bool _drawDebug;

		[Token(Token = "0x4001283")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float remainingCooldown;

		[Token(Token = "0x4001284")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Interactable lastHitInteractable;

		[Token(Token = "0x6001841")]
		[Address(RVA = "0xE83260", Offset = "0xE83260", VA = "0xE83260", Slot = "5")]
		public override Interactable GetClosestHoveringInteractable()
		{
			return null;
		}

		[Token(Token = "0x6001842")]
		[Address(RVA = "0xE833C0", Offset = "0xE833C0", VA = "0xE833C0")]
		private Interactable GetItemFromSphereCast(SphereSize sphereSize)
		{
			return null;
		}

		[Token(Token = "0x6001843")]
		[Address(RVA = "0xE83704", Offset = "0xE83704", VA = "0xE83704")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001844")]
		[Address(RVA = "0xE83708", Offset = "0xE83708", VA = "0xE83708")]
		private void Start()
		{
		}

		[Token(Token = "0x6001845")]
		[Address(RVA = "0xE8370C", Offset = "0xE8370C", VA = "0xE8370C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001846")]
		[Address(RVA = "0xE8374C", Offset = "0xE8374C", VA = "0xE8374C")]
		public HandDistanceGrabber()
		{
		}
	}
	[Token(Token = "0x2000389")]
	public class HandedInteractableArt : MonoBehaviour
	{
		[Token(Token = "0x4001289")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Interactable _interactable;

		[Token(Token = "0x400128A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject[] _leftHandGameObjects;

		[Token(Token = "0x400128B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject[] _rightHandGameObjects;

		[Token(Token = "0x6001847")]
		[Address(RVA = "0xE8377C", Offset = "0xE8377C", VA = "0xE8377C")]
		public void ShowArtForHand(Handedness handedness)
		{
		}

		[Token(Token = "0x6001848")]
		[Address(RVA = "0xE838D0", Offset = "0xE838D0", VA = "0xE838D0", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6001849")]
		[Address(RVA = "0xE83960", Offset = "0xE83960", VA = "0xE83960", Slot = "5")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x600184A")]
		[Address(RVA = "0xE83A28", Offset = "0xE83A28", VA = "0xE83A28")]
		private void OnBeginInteraction(Interactor interactor, Interactable interactable)
		{
		}

		[Token(Token = "0x600184B")]
		[Address(RVA = "0xE83B6C", Offset = "0xE83B6C", VA = "0xE83B6C")]
		public HandedInteractableArt()
		{
		}
	}
	[Token(Token = "0x200038A")]
	public class HandedInteractionPoint : InteractionSolver
	{
		[Token(Token = "0x400128C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform _leftHandInteractionPoint;

		[Token(Token = "0x400128D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform _rightHandInteractionPoint;

		[Token(Token = "0x600184C")]
		[Address(RVA = "0xE83BD4", Offset = "0xE83BD4", VA = "0xE83BD4", Slot = "4")]
		public override Transform SolveInteractionPoint(Interactor interactor, Interactable interactable)
		{
			return null;
		}

		[Token(Token = "0x600184D")]
		[Address(RVA = "0xE83DD8", Offset = "0xE83DD8", VA = "0xE83DD8")]
		public HandedInteractionPoint()
		{
		}
	}
	[Token(Token = "0x200038B")]
	public interface IIgnorableCollidable
	{
		[Token(Token = "0x600184E")]
		Collider[] GetIgnorableColliders();
	}
	[Token(Token = "0x200038C")]
	public abstract class Interactable : MonoBehaviour, IIgnorableCollidable
	{
		[Token(Token = "0x200038D")]
		public delegate void Handler(Interactable interactable);

		[Token(Token = "0x4001294")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public readonly Prohibition InteractionProhibition;

		[Token(Token = "0x4001295")]
		public const float DropDistance = 1.5f;

		[Token(Token = "0x4001296")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Header("Interactable")]
		[SerializeField]
		protected Rigidbody _rigidbody;

		[Token(Token = "0x4001297")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private bool _canInteract;

		[Token(Token = "0x4001298")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
		public bool DisableKinematicOnAttach;

		[Token(Token = "0x4001299")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5A")]
		public bool EnableKinematicOnDetach;

		[Token(Token = "0x400129A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5B")]
		public bool DisableHandCollidersOnAttach;

		[Token(Token = "0x400129B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public bool EnableGravityOnDetach;

		[Token(Token = "0x400129C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public InteractionSolver InteractionSolver;

		[Token(Token = "0x400129D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Transform InteractionPoint;

		[Token(Token = "0x400129E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Collider[] Colliders;

		[Token(Token = "0x170002FC")]
		public virtual bool CanInteract
		{
			[Token(Token = "0x6001859")]
			[Address(RVA = "0xE84058", Offset = "0xE84058", VA = "0xE84058", Slot = "5")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600185A")]
			[Address(RVA = "0xE84088", Offset = "0xE84088", VA = "0xE84088", Slot = "6")]
			set
			{
			}
		}

		[Token(Token = "0x170002FD")]
		public virtual Rigidbody Rigidbody
		{
			[Token(Token = "0x600185B")]
			[Address(RVA = "0xE84094", Offset = "0xE84094", VA = "0xE84094", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002FE")]
		public Interactor Interactor
		{
			[Token(Token = "0x600185C")]
			[Address(RVA = "0xE84124", Offset = "0xE84124", VA = "0xE84124")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x600185D")]
			[Address(RVA = "0xE8412C", Offset = "0xE8412C", VA = "0xE8412C")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170002FF")]
		public float BeginInteractionTime
		{
			[Token(Token = "0x600185E")]
			[Address(RVA = "0xE84134", Offset = "0xE84134", VA = "0xE84134")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600185F")]
			[Address(RVA = "0xE8413C", Offset = "0xE8413C", VA = "0xE8413C")]
			[CompilerGenerated]
			protected set
			{
			}
		}

		[Token(Token = "0x17000300")]
		public int BeginInteractionFrame
		{
			[Token(Token = "0x6001860")]
			[Address(RVA = "0xE84144", Offset = "0xE84144", VA = "0xE84144")]
			[CompilerGenerated]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001861")]
			[Address(RVA = "0xE8414C", Offset = "0xE8414C", VA = "0xE8414C")]
			[CompilerGenerated]
			protected set
			{
			}
		}

		[Token(Token = "0x17000301")]
		public float InteractionTime
		{
			[Token(Token = "0x6001862")]
			[Address(RVA = "0xE84154", Offset = "0xE84154", VA = "0xE84154")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000302")]
		public float TempDropDistance
		{
			[Token(Token = "0x6001863")]
			[Address(RVA = "0xE84174", Offset = "0xE84174", VA = "0xE84174")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001864")]
			[Address(RVA = "0xE8417C", Offset = "0xE8417C", VA = "0xE8417C")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000303")]
		public virtual bool IsAttached
		{
			[Token(Token = "0x6001865")]
			[Address(RVA = "0xE84184", Offset = "0xE84184", VA = "0xE84184", Slot = "8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x14000058")]
		public event Interaction.Handler HoverEvent
		{
			[Token(Token = "0x600184F")]
			[Address(RVA = "0xE83DE8", Offset = "0xE83DE8", VA = "0xE83DE8")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001850")]
			[Address(RVA = "0xE83E84", Offset = "0xE83E84", VA = "0xE83E84")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000059")]
		public event Interaction.Handler BeginInteractionEvent
		{
			[Token(Token = "0x6001851")]
			[Address(RVA = "0xE82544", Offset = "0xE82544", VA = "0xE82544")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001852")]
			[Address(RVA = "0xE82718", Offset = "0xE82718", VA = "0xE82718")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x1400005A")]
		public event Interaction.Handler EndInteractionEvent
		{
			[Token(Token = "0x6001853")]
			[Address(RVA = "0xE83F20", Offset = "0xE83F20", VA = "0xE83F20")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001854")]
			[Address(RVA = "0xE83FBC", Offset = "0xE83FBC", VA = "0xE83FBC")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x1400005B")]
		public event Action UseButtonDownEvent
		{
			[Token(Token = "0x6001855")]
			[Address(RVA = "0xE825E0", Offset = "0xE825E0", VA = "0xE825E0")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001856")]
			[Address(RVA = "0xE827B4", Offset = "0xE827B4", VA = "0xE827B4")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x1400005C")]
		public event Action UseButtonUpEvent
		{
			[Token(Token = "0x6001857")]
			[Address(RVA = "0xE8267C", Offset = "0xE8267C", VA = "0xE8267C")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001858")]
			[Address(RVA = "0xE82850", Offset = "0xE82850", VA = "0xE82850")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x6001866")]
		[Address(RVA = "0xE841E4", Offset = "0xE841E4", VA = "0xE841E4", Slot = "9")]
		public virtual Transform SolveInteractionPoint(Interactor interactor)
		{
			return null;
		}

		[Token(Token = "0x6001867")]
		[Address(RVA = "0xE84288", Offset = "0xE84288", VA = "0xE84288", Slot = "10")]
		public virtual void ResetInteractable()
		{
		}

		[Token(Token = "0x6001868")]
		[Address(RVA = "0xE842C0", Offset = "0xE842C0", VA = "0xE842C0", Slot = "11")]
		public virtual void UpdateColliders()
		{
		}

		[Token(Token = "0x6001869")]
		[Address(RVA = "0xE844E8", Offset = "0xE844E8", VA = "0xE844E8", Slot = "12")]
		public virtual void BeginInteraction(Interactor interactor)
		{
		}

		[Token(Token = "0x600186A")]
		[Address(RVA = "0xE845C0", Offset = "0xE845C0", VA = "0xE845C0", Slot = "13")]
		public virtual void InteractingUpdate(Interactor interactor)
		{
		}

		[Token(Token = "0x600186B")]
		[Address(RVA = "0xE845C4", Offset = "0xE845C4", VA = "0xE845C4", Slot = "14")]
		public virtual void HoveringUpdate(Interactor interactor, float forTime)
		{
		}

		[Token(Token = "0x600186C")]
		[Address(RVA = "0xE845E4", Offset = "0xE845E4", VA = "0xE845E4", Slot = "15")]
		public virtual void ForceDetach()
		{
		}

		[Token(Token = "0x600186D")]
		[Address(RVA = "0xE846B0", Offset = "0xE846B0", VA = "0xE846B0", Slot = "16")]
		public virtual void EndInteraction()
		{
		}

		[Token(Token = "0x600186E")]
		[Address(RVA = "0xE84754", Offset = "0xE84754", VA = "0xE84754", Slot = "17")]
		public virtual void AddExternalVelocity(Vector3 velocity)
		{
		}

		[Token(Token = "0x600186F")]
		[Address(RVA = "0xE847A4", Offset = "0xE847A4", VA = "0xE847A4", Slot = "18")]
		public virtual void AddExternalAngularVelocity(Vector3 angularVelocity)
		{
		}

		[Token(Token = "0x6001870")]
		[Address(RVA = "0xE847F4", Offset = "0xE847F4", VA = "0xE847F4", Slot = "4")]
		public Collider[] GetIgnorableColliders()
		{
			return null;
		}

		[Token(Token = "0x6001871")]
		protected abstract void ProcessBeginInteraction(Interactor hand);

		[Token(Token = "0x6001872")]
		protected abstract void ProcessEndInteraction();

		[Token(Token = "0x6001873")]
		[Address(RVA = "0xE842F0", Offset = "0xE842F0", VA = "0xE842F0")]
		protected Collider[] FindColliders()
		{
			return null;
		}

		[Token(Token = "0x6001874")]
		[Address(RVA = "0xE847FC", Offset = "0xE847FC", VA = "0xE847FC")]
		protected float GetDistance()
		{
			return default(float);
		}

		[Token(Token = "0x6001875")]
		[Address(RVA = "0xE849A4", Offset = "0xE849A4", VA = "0xE849A4", Slot = "21")]
		protected virtual Vector3 GetClosestHeldPoint()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001876")]
		[Address(RVA = "0xE845A0", Offset = "0xE845A0", VA = "0xE845A0")]
		protected void InvokeBeginInteractionEvent(Interactor interactor)
		{
		}

		[Token(Token = "0x6001877")]
		[Address(RVA = "0xE84BCC", Offset = "0xE84BCC", VA = "0xE84BCC", Slot = "22")]
		protected virtual void UpdateInput()
		{
		}

		[Token(Token = "0x6001878")]
		[Address(RVA = "0xE84CB4", Offset = "0xE84CB4", VA = "0xE84CB4", Slot = "23")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6001879")]
		[Address(RVA = "0xE84D7C", Offset = "0xE84D7C", VA = "0xE84D7C", Slot = "24")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x600187A")]
		[Address(RVA = "0xE84D88", Offset = "0xE84D88", VA = "0xE84D88", Slot = "25")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x600187B")]
		[Address(RVA = "0xE84D98", Offset = "0xE84D98", VA = "0xE84D98", Slot = "26")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x600187C")]
		[Address(RVA = "0xE85064", Offset = "0xE85064", VA = "0xE85064")]
		protected Interactable()
		{
		}
	}
	[Token(Token = "0x200038F")]
	public abstract class InteractableBehaviour : MonoBehaviour, IInteractableListener
	{
		[Token(Token = "0x40012A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Interactable _interactable;

		[Token(Token = "0x6001885")]
		[Address(RVA = "0xE85434", Offset = "0xE85434", VA = "0xE85434", Slot = "4")]
		protected virtual void SubscribeToInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x6001886")]
		[Address(RVA = "0xE85644", Offset = "0xE85644", VA = "0xE85644", Slot = "5")]
		protected virtual void UnsubscribeFromInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x6001887")]
		[Address(RVA = "0xE85854", Offset = "0xE85854", VA = "0xE85854")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001888")]
		[Address(RVA = "0xE85974", Offset = "0xE85974", VA = "0xE85974")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001889")]
		[Address(RVA = "0xE859F4", Offset = "0xE859F4", VA = "0xE859F4")]
		protected InteractableBehaviour()
		{
		}
	}
	[Token(Token = "0x2000390")]
	public interface IInteractableListener
	{
	}
	[Token(Token = "0x2000391")]
	public interface IBeginInteractionListener : IInteractableListener
	{
		[Token(Token = "0x600188A")]
		void OnBeginInteraction(Interactor interactor, Interactable interactable);
	}
	[Token(Token = "0x2000392")]
	public interface IEndInteractionListener : IInteractableListener
	{
		[Token(Token = "0x600188B")]
		void OnEndInteraction(Interactor interactor, Interactable interactable);
	}
	[Token(Token = "0x2000393")]
	public abstract class InteractableDetector : MonoBehaviour, IInteractableDetector
	{
		[Token(Token = "0x600188C")]
		public abstract Interactable GetClosestHoveringInteractable();

		[Token(Token = "0x600188D")]
		[Address(RVA = "0xE83774", Offset = "0xE83774", VA = "0xE83774")]
		protected InteractableDetector()
		{
		}
	}
	[Token(Token = "0x2000394")]
	public interface IInteractableDetector
	{
		[Token(Token = "0x600188E")]
		Interactable GetClosestHoveringInteractable();
	}
	[Token(Token = "0x2000395")]
	[RequireComponent(typeof(Rigidbody))]
	[SelectionBase]
	public class InteractableItem : Interactable
	{
		[Token(Token = "0x2000396")]
		public delegate void CollisionHandler(float impulse);

		[Token(Token = "0x40012A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public CollisionHandler CollideWhileAttachedEvent;

		[Token(Token = "0x40012AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[Header("Interactable Item")]
		public bool DisablePhysicalMaterialsOnAttach;

		[Token(Token = "0x40012AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private VelocitySettingsAsset _intializeVelocitySettingsAsset;

		[Token(Token = "0x40012AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public NewtonSettings.VelocitySettings VelocitySettings;

		[Token(Token = "0x40012AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		protected Vector3 _externalVelocity;

		[Token(Token = "0x40012AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		protected Vector3 _externalAngularVelocity;

		[Token(Token = "0x40012B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		protected Vector3?[] _velocityHistory;

		[Token(Token = "0x40012B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		protected Vector3?[] _angularVelocityHistory;

		[Token(Token = "0x40012B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		protected int _currentVelocityHistoryStep;

		[Token(Token = "0x40012B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		protected float _dragCached;

		[Token(Token = "0x40012B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		protected float _angularDragCached;

		[Token(Token = "0x40012B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		protected float _collisionFatigue;

		[Token(Token = "0x40012B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		protected Dictionary<Collider, PhysicMaterial> _physicalMaterialCache;

		[Token(Token = "0x17000304")]
		public Transform PickupTransform
		{
			[Token(Token = "0x600188F")]
			[Address(RVA = "0xE859FC", Offset = "0xE859FC", VA = "0xE859FC")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001890")]
			[Address(RVA = "0xE85A04", Offset = "0xE85A04", VA = "0xE85A04")]
			[CompilerGenerated]
			protected set
			{
			}
		}

		[Token(Token = "0x17000305")]
		public float OverallVelocityDampen
		{
			[Token(Token = "0x6001891")]
			[Address(RVA = "0xE85A0C", Offset = "0xE85A0C", VA = "0xE85A0C")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001892")]
			[Address(RVA = "0xE85A14", Offset = "0xE85A14", VA = "0xE85A14")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000306")]
		public float InteractionVelocityDampen
		{
			[Token(Token = "0x6001893")]
			[Address(RVA = "0xE85A1C", Offset = "0xE85A1C", VA = "0xE85A1C")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001894")]
			[Address(RVA = "0xE85A24", Offset = "0xE85A24", VA = "0xE85A24")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000307")]
		public float AngularVelocityDampen
		{
			[Token(Token = "0x6001895")]
			[Address(RVA = "0xE85A2C", Offset = "0xE85A2C", VA = "0xE85A2C")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001896")]
			[Address(RVA = "0xE85A34", Offset = "0xE85A34", VA = "0xE85A34")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000308")]
		public float InteractionAngularVelocityDampen
		{
			[Token(Token = "0x6001897")]
			[Address(RVA = "0xE85A3C", Offset = "0xE85A3C", VA = "0xE85A3C")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001898")]
			[Address(RVA = "0xE85A44", Offset = "0xE85A44", VA = "0xE85A44")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x1400005D")]
		public event Interactor.Handler RequestInteractionPointEvent
		{
			[Token(Token = "0x6001899")]
			[Address(RVA = "0xE85A4C", Offset = "0xE85A4C", VA = "0xE85A4C")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x600189A")]
			[Address(RVA = "0xE85AE8", Offset = "0xE85AE8", VA = "0xE85AE8")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x600189B")]
		[Address(RVA = "0xE85B84", Offset = "0xE85B84", VA = "0xE85B84")]
		public void ResetCollisionFatigue()
		{
		}

		[Token(Token = "0x600189C")]
		[Address(RVA = "0xE85B8C", Offset = "0xE85B8C", VA = "0xE85B8C", Slot = "27")]
		public virtual void ApplyVelocityHistory()
		{
		}

		[Token(Token = "0x600189D")]
		[Address(RVA = "0xE85DE8", Offset = "0xE85DE8", VA = "0xE85DE8")]
		public void SnapToHand()
		{
		}

		[Token(Token = "0x600189E")]
		[Address(RVA = "0xE8620C", Offset = "0xE8620C", VA = "0xE8620C", Slot = "17")]
		public override void AddExternalVelocity(Vector3 velocity)
		{
		}

		[Token(Token = "0x600189F")]
		[Address(RVA = "0xE862E8", Offset = "0xE862E8", VA = "0xE862E8", Slot = "18")]
		public override void AddExternalAngularVelocity(Vector3 angularVelocity)
		{
		}

		[Token(Token = "0x60018A0")]
		[Address(RVA = "0xE863C4", Offset = "0xE863C4", VA = "0xE863C4", Slot = "10")]
		public override void ResetInteractable()
		{
		}

		[Token(Token = "0x60018A1")]
		[Address(RVA = "0xE86410", Offset = "0xE86410", VA = "0xE86410", Slot = "11")]
		public override void UpdateColliders()
		{
		}

		[Token(Token = "0x60018A2")]
		[Address(RVA = "0xE86554", Offset = "0xE86554", VA = "0xE86554", Slot = "19")]
		protected override void ProcessBeginInteraction(Interactor interactor)
		{
		}

		[Token(Token = "0x60018A3")]
		[Address(RVA = "0xE86A0C", Offset = "0xE86A0C", VA = "0xE86A0C", Slot = "20")]
		protected override void ProcessEndInteraction()
		{
		}

		[Token(Token = "0x60018A4")]
		[Address(RVA = "0xE86C64", Offset = "0xE86C64", VA = "0xE86C64")]
		protected float GetVelocityMagic()
		{
			return default(float);
		}

		[Token(Token = "0x60018A5")]
		[Address(RVA = "0xE86C94", Offset = "0xE86C94", VA = "0xE86C94")]
		protected float GetAngularVelocityMagic()
		{
			return default(float);
		}

		[Token(Token = "0x60018A6")]
		[Address(RVA = "0xE86CD8", Offset = "0xE86CD8", VA = "0xE86CD8", Slot = "28")]
		protected virtual void UpdateVelocities()
		{
		}

		[Token(Token = "0x60018A7")]
		[Address(RVA = "0xE875D4", Offset = "0xE875D4", VA = "0xE875D4")]
		public void CalculatePositionDelta(out Vector3 positionDelta)
		{
		}

		[Token(Token = "0x60018A8")]
		[Address(RVA = "0xE87338", Offset = "0xE87338", VA = "0xE87338")]
		protected void CalculateTransformDeltas(out Vector3 positionDelta, out Quaternion rotationDelta)
		{
		}

		[Token(Token = "0x60018A9")]
		[Address(RVA = "0xE876FC", Offset = "0xE876FC", VA = "0xE876FC", Slot = "29")]
		protected virtual void AddExternalVelocities()
		{
		}

		[Token(Token = "0x60018AA")]
		[Address(RVA = "0xE87918", Offset = "0xE87918", VA = "0xE87918", Slot = "30")]
		protected virtual void ResetVelocityHistory()
		{
		}

		[Token(Token = "0x60018AB")]
		[Address(RVA = "0xE85C78", Offset = "0xE85C78", VA = "0xE85C78")]
		protected Vector3? GetMeanVector(Vector3?[] positions)
		{
			return null;
		}

		[Token(Token = "0x60018AC")]
		[Address(RVA = "0xE868DC", Offset = "0xE868DC", VA = "0xE868DC")]
		protected void DisablePhysicalMaterials()
		{
		}

		[Token(Token = "0x60018AD")]
		[Address(RVA = "0xE86B20", Offset = "0xE86B20", VA = "0xE86B20")]
		protected void EnablePhysicalMaterials()
		{
		}

		[Token(Token = "0x60018AE")]
		[Address(RVA = "0xE879D0", Offset = "0xE879D0", VA = "0xE879D0", Slot = "23")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x60018AF")]
		[Address(RVA = "0xE87AD8", Offset = "0xE87AD8", VA = "0xE87AD8", Slot = "31")]
		protected virtual void FixedUpdate()
		{
		}

		[Token(Token = "0x60018B0")]
		[Address(RVA = "0xE87B4C", Offset = "0xE87B4C", VA = "0xE87B4C")]
		private void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x60018B1")]
		[Address(RVA = "0xE87C50", Offset = "0xE87C50", VA = "0xE87C50")]
		public InteractableItem()
		{
		}
	}
	[Token(Token = "0x2000397")]
	public static class InteractablesManager
	{
		[Token(Token = "0x40012B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool _initialized;

		[Token(Token = "0x40012B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Dictionary<Collider, Interactable> _interactableByColliderMap;

		[Token(Token = "0x40012B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static Dictionary<Interactable, Collider[]> _collidersByInteractableMap;

		[Token(Token = "0x60018B6")]
		[Address(RVA = "0xE87D9C", Offset = "0xE87D9C", VA = "0xE87D9C")]
		public static void Initialize()
		{
		}

		[Token(Token = "0x60018B7")]
		[Address(RVA = "0xE843DC", Offset = "0xE843DC", VA = "0xE843DC")]
		public static void Register(Interactable interactable, Collider[] colliders)
		{
		}

		[Token(Token = "0x60018B8")]
		[Address(RVA = "0xE84DBC", Offset = "0xE84DBC", VA = "0xE84DBC")]
		public static void Deregister(Interactable interactable)
		{
		}

		[Token(Token = "0x60018B9")]
		[Address(RVA = "0xE87E84", Offset = "0xE87E84", VA = "0xE87E84")]
		public static Interactable GetInteractable(Collider collider)
		{
			return null;
		}
	}
	[Token(Token = "0x200039A")]
	[RequireComponent(typeof(Interactable))]
	public class InteractableUnityEvents : MonoBehaviour
	{
		[Token(Token = "0x40012BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private UnityEvent _onHover;

		[Token(Token = "0x40012BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private UnityEvent _onBeginInteraction;

		[Token(Token = "0x40012C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private UnityEvent _onEndInteraction;

		[Token(Token = "0x40012C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private UnityEvent _onUseButtonDown;

		[Token(Token = "0x40012C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private UnityEvent _onUseButtonUp;

		[Token(Token = "0x40012C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Interactable _interactable;

		[Token(Token = "0x60018C0")]
		[Address(RVA = "0xE8807C", Offset = "0xE8807C", VA = "0xE8807C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60018C1")]
		[Address(RVA = "0xE882E4", Offset = "0xE882E4", VA = "0xE882E4")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60018C2")]
		[Address(RVA = "0xE884E4", Offset = "0xE884E4", VA = "0xE884E4")]
		public InteractableUnityEvents()
		{
		}
	}
	[Token(Token = "0x200039B")]
	public struct Interaction
	{
		[Token(Token = "0x200039C")]
		public delegate void Handler(Interactor interactor, Interactable interactable);

		[Token(Token = "0x40012C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Interactor Interactor;

		[Token(Token = "0x40012C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Interactable Interactable;
	}
	[Token(Token = "0x200039D")]
	public abstract class InteractionSolver : MonoBehaviour
	{
		[Token(Token = "0x60018CD")]
		[Address(RVA = "0xE885DC", Offset = "0xE885DC", VA = "0xE885DC", Slot = "4")]
		public virtual Transform SolveInteractionPoint(Interactor interactor, Interactable interactable)
		{
			return null;
		}

		[Token(Token = "0x60018CE")]
		[Address(RVA = "0xE885E4", Offset = "0xE885E4", VA = "0xE885E4", Slot = "5")]
		public virtual Transform SolveGrabPoint(Interactor interactor, Interactable interactable)
		{
			return null;
		}

		[Token(Token = "0x60018CF")]
		[Address(RVA = "0xE83DE0", Offset = "0xE83DE0", VA = "0xE83DE0")]
		protected InteractionSolver()
		{
		}
	}
	[Token(Token = "0x200039E")]
	[RequireComponent(typeof(Rigidbody))]
	public class Interactor : NodeAdapter
	{
		[Token(Token = "0x200039F")]
		public delegate void Handler(Interactor interactor);

		[Token(Token = "0x20003A0")]
		private enum InteractionStyle
		{
			[Token(Token = "0x40012DB")]
			Hold,
			[Token(Token = "0x40012DC")]
			Toggle
		}

		[Token(Token = "0x40012C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public readonly Prohibition InteractionProhibition;

		[Token(Token = "0x40012CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public int ActorID;

		[Token(Token = "0x40012CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[SerializeField]
		private bool _canInteract;

		[Token(Token = "0x40012CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		protected Transform _interactionPoint;

		[Token(Token = "0x40012CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private InteractableDetector _interactableDetector;

		[Token(Token = "0x40012CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[Header("Action Inputs")]
		[SerializeField]
		protected Input _dropInput;

		[Token(Token = "0x40012D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[SerializeField]
		protected Input _gripInput;

		[Token(Token = "0x40012D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		protected Input _useInput;

		[Token(Token = "0x40012D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Dictionary<Interactable, Dictionary<Collider, float>> _hoveringInteractables;

		[Token(Token = "0x40012D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Interactable _currentInteractable;

		[Token(Token = "0x40012D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private int _estimationSampleIndex;

		[Token(Token = "0x40012D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Vector3BufferArray _positionSamples;

		[Token(Token = "0x40012D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private BufferArray<Quaternion> _rotationSamples;

		[Token(Token = "0x40012D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private FloatBufferArray _deltaTimeSamples;

		[Token(Token = "0x40012D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private InteractionStyle _style;

		[Token(Token = "0x40012D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private bool _waitForPressDown;

		[Token(Token = "0x17000309")]
		public bool CanInteract
		{
			[Token(Token = "0x60018D0")]
			[Address(RVA = "0xE885EC", Offset = "0xE885EC", VA = "0xE885EC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60018D1")]
			[Address(RVA = "0xE8861C", Offset = "0xE8861C", VA = "0xE8861C")]
			set
			{
			}
		}

		[Token(Token = "0x1700030A")]
		public bool IsHovering
		{
			[Token(Token = "0x60018D2")]
			[Address(RVA = "0xE88628", Offset = "0xE88628", VA = "0xE88628")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700030B")]
		public bool IsInteracting
		{
			[Token(Token = "0x60018D3")]
			[Address(RVA = "0xE88724", Offset = "0xE88724", VA = "0xE88724")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700030C")]
		public virtual InputAction DropAction
		{
			[Token(Token = "0x60018D4")]
			[Address(RVA = "0xE88784", Offset = "0xE88784", VA = "0xE88784", Slot = "10")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700030D")]
		public virtual InputAction GripAction
		{
			[Token(Token = "0x60018D5")]
			[Address(RVA = "0xE887BC", Offset = "0xE887BC", VA = "0xE887BC", Slot = "11")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700030E")]
		public virtual InputAction UseAction
		{
			[Token(Token = "0x60018D6")]
			[Address(RVA = "0xE887F4", Offset = "0xE887F4", VA = "0xE887F4", Slot = "12")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700030F")]
		public virtual bool CanUseItem
		{
			[Token(Token = "0x60018D7")]
			[Address(RVA = "0xE8882C", Offset = "0xE8882C", VA = "0xE8882C", Slot = "13")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000310")]
		public Interactable CurrentInteractable
		{
			[Token(Token = "0x60018D8")]
			[Address(RVA = "0xE88834", Offset = "0xE88834", VA = "0xE88834")]
			get
			{
				return null;
			}
			[Token(Token = "0x60018D9")]
			[Address(RVA = "0xE8883C", Offset = "0xE8883C", VA = "0xE8883C")]
			set
			{
			}
		}

		[Token(Token = "0x17000311")]
		public InteractableItem CurrentInteractableItem
		{
			[Token(Token = "0x60018DA")]
			[Address(RVA = "0xE888C0", Offset = "0xE888C0", VA = "0xE888C0")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60018DB")]
			[Address(RVA = "0xE888C8", Offset = "0xE888C8", VA = "0xE888C8")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000312")]
		public Transform InteractionPoint
		{
			[Token(Token = "0x60018DC")]
			[Address(RVA = "0xE84928", Offset = "0xE84928", VA = "0xE84928")]
			get
			{
				return null;
			}
			[Token(Token = "0x60018DD")]
			[Address(RVA = "0xE888D0", Offset = "0xE888D0", VA = "0xE888D0")]
			set
			{
			}
		}

		[Token(Token = "0x17000313")]
		public Rigidbody Rigidbody
		{
			[Token(Token = "0x60018DE")]
			[Address(RVA = "0xE888D8", Offset = "0xE888D8", VA = "0xE888D8")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60018DF")]
			[Address(RVA = "0xE888E0", Offset = "0xE888E0", VA = "0xE888E0")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x1400005E")]
		public event Interaction.Handler BeginInteractionEvent
		{
			[Token(Token = "0x60018E0")]
			[Address(RVA = "0xE888E8", Offset = "0xE888E8", VA = "0xE888E8")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x60018E1")]
			[Address(RVA = "0xE88984", Offset = "0xE88984", VA = "0xE88984")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x1400005F")]
		public event Interaction.Handler EndInteractionEvent
		{
			[Token(Token = "0x60018E2")]
			[Address(RVA = "0xE88A20", Offset = "0xE88A20", VA = "0xE88A20")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x60018E3")]
			[Address(RVA = "0xE88ABC", Offset = "0xE88ABC", VA = "0xE88ABC")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x60018E4")]
		[Address(RVA = "0xE88B58", Offset = "0xE88B58", VA = "0xE88B58")]
		public Vector3 GetVelocityEstimation()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60018E5")]
		[Address(RVA = "0xE88C88", Offset = "0xE88C88", VA = "0xE88C88")]
		public Vector3 GetAngularVelocityEstimation()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60018E6")]
		[Address(RVA = "0xE88E80", Offset = "0xE88E80", VA = "0xE88E80")]
		public Vector3 GetPositionDelta()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60018E7")]
		[Address(RVA = "0xE88F18", Offset = "0xE88F18", VA = "0xE88F18")]
		public Quaternion GetRotationDelta()
		{
			return default(Quaternion);
		}

		[Token(Token = "0x60018E8")]
		[Address(RVA = "0xE89020", Offset = "0xE89020", VA = "0xE89020", Slot = "14")]
		public virtual void BeginInteraction(Interactable interactable)
		{
		}

		[Token(Token = "0x60018E9")]
		[Address(RVA = "0xE89144", Offset = "0xE89144", VA = "0xE89144", Slot = "15")]
		public virtual void EndInteraction(Interactable item)
		{
		}

		[Token(Token = "0x60018EA")]
		[Address(RVA = "0xE89294", Offset = "0xE89294", VA = "0xE89294", Slot = "16")]
		public virtual void CancelInteraction()
		{
		}

		[Token(Token = "0x60018EB")]
		[Address(RVA = "0xE8931C", Offset = "0xE8931C", VA = "0xE8931C", Slot = "17")]
		public virtual Interactable GetClosestHoveringInteractable()
		{
			return null;
		}

		[Token(Token = "0x60018EC")]
		[Address(RVA = "0xE895FC", Offset = "0xE895FC", VA = "0xE895FC", Slot = "18")]
		public virtual Collider GetClosestHoveringCollider()
		{
			return null;
		}

		[Token(Token = "0x60018ED")]
		[Address(RVA = "0xE89A48", Offset = "0xE89A48", VA = "0xE89A48", Slot = "19")]
		public virtual Interactable GetHoveringInteractable(Collider collider)
		{
			return null;
		}

		[Token(Token = "0x60018EE")]
		[Address(RVA = "0xE89D84", Offset = "0xE89D84", VA = "0xE89D84", Slot = "20")]
		public virtual bool GetCanInteractWith(Interactable interactable)
		{
			return default(bool);
		}

		[Token(Token = "0x60018EF")]
		[Address(RVA = "0xE89DA4", Offset = "0xE89DA4", VA = "0xE89DA4", Slot = "21")]
		protected virtual void Initialize()
		{
		}

		[Token(Token = "0x60018F0")]
		[Address(RVA = "0xE89FAC", Offset = "0xE89FAC", VA = "0xE89FAC", Slot = "22")]
		protected virtual void UpdateHovering()
		{
		}

		[Token(Token = "0x60018F1")]
		[Address(RVA = "0xE8A1F4", Offset = "0xE8A1F4", VA = "0xE8A1F4", Slot = "23")]
		protected virtual void UpdateInteraction()
		{
		}

		[Token(Token = "0x60018F2")]
		[Address(RVA = "0xE8A398", Offset = "0xE8A398", VA = "0xE8A398", Slot = "24")]
		protected virtual bool PickupClosest()
		{
			return default(bool);
		}

		[Token(Token = "0x60018F3")]
		[Address(RVA = "0xE8A43C", Offset = "0xE8A43C", VA = "0xE8A43C", Slot = "8")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x60018F4")]
		[Address(RVA = "0xE8A4E4", Offset = "0xE8A4E4", VA = "0xE8A4E4", Slot = "25")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x60018F5")]
		[Address(RVA = "0xE8A528", Offset = "0xE8A528", VA = "0xE8A528", Slot = "26")]
		protected virtual void FixedUpdate()
		{
		}

		[Token(Token = "0x60018F6")]
		[Address(RVA = "0xE8A65C", Offset = "0xE8A65C", VA = "0xE8A65C", Slot = "27")]
		protected virtual void OnTriggerEnter(Collider collider)
		{
		}

		[Token(Token = "0x60018F7")]
		[Address(RVA = "0xE8A834", Offset = "0xE8A834", VA = "0xE8A834", Slot = "28")]
		protected virtual void OnTriggerStay(Collider collider)
		{
		}

		[Token(Token = "0x60018F8")]
		[Address(RVA = "0xE8AA0C", Offset = "0xE8AA0C", VA = "0xE8AA0C", Slot = "29")]
		protected virtual void OnTriggerExit(Collider collider)
		{
		}

		[Token(Token = "0x60018F9")]
		[Address(RVA = "0xE8ABB0", Offset = "0xE8ABB0", VA = "0xE8ABB0")]
		public Interactor()
		{
		}
	}
	[Token(Token = "0x20003A2")]
	public abstract class InteractorAdapter : NodeAdapter
	{
		[Token(Token = "0x40012E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[Header("Interactor Adapter")]
		private Interactor _interactor;

		[Token(Token = "0x17000314")]
		public Interactor Interactor
		{
			[Token(Token = "0x6001903")]
			[Address(RVA = "0xE8AF5C", Offset = "0xE8AF5C", VA = "0xE8AF5C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001904")]
		[Address(RVA = "0xE8AF64", Offset = "0xE8AF64", VA = "0xE8AF64", Slot = "4")]
		protected override void OnAttachedToNode(Node node)
		{
		}

		[Token(Token = "0x6001905")]
		protected abstract void OnBeginInteraction(Interactor interactor, Interactable interactable);

		[Token(Token = "0x6001906")]
		protected abstract void OnEndInteraction(Interactor interactor, Interactable interactable);

		[Token(Token = "0x6001907")]
		[Address(RVA = "0xE8B148", Offset = "0xE8B148", VA = "0xE8B148")]
		protected InteractorAdapter()
		{
		}
	}
	[Token(Token = "0x20003A3")]
	public static class NewtonSettings
	{
		[Serializable]
		[Token(Token = "0x20003A4")]
		public struct VelocitySettings
		{
			[Token(Token = "0x40012E6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float MaxVelocityChange;

			[Token(Token = "0x40012E7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public float MaxAngularVelocityChange;

			[Token(Token = "0x40012E8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public float VelocityMagic;

			[Token(Token = "0x40012E9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public float AngularVelocityMagic;

			[Token(Token = "0x17000316")]
			public static VelocitySettings Default
			{
				[Token(Token = "0x600190B")]
				[Address(RVA = "0xE87CDC", Offset = "0xE87CDC", VA = "0xE87CDC")]
				get
				{
					return default(VelocitySettings);
				}
			}
		}

		[Token(Token = "0x40012E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static int VelocityHistorySteps;

		[Token(Token = "0x40012E2")]
		public const float ExpectedDeltaTime = 0.0111f;

		[Token(Token = "0x40012E3")]
		public const bool AutoSetFixedDeltaTime = true;

		[Token(Token = "0x40012E4")]
		public const int EstimationSampleCount = 5;

		[Token(Token = "0x40012E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static VelocitySettings _velocitySettings;

		[Token(Token = "0x17000315")]
		public static VelocitySettings DefaultVelocitySettings
		{
			[Token(Token = "0x6001908")]
			[Address(RVA = "0xE8B150", Offset = "0xE8B150", VA = "0xE8B150")]
			get
			{
				return default(VelocitySettings);
			}
			[Token(Token = "0x6001909")]
			[Address(RVA = "0xE8B1AC", Offset = "0xE8B1AC", VA = "0xE8B1AC")]
			set
			{
			}
		}
	}
	[Token(Token = "0x20003A5")]
	public static class PhysicsManager
	{
		[Token(Token = "0x600190C")]
		[Address(RVA = "0xE8B280", Offset = "0xE8B280", VA = "0xE8B280")]
		public static void IgnoreCollisions(IIgnorableCollidable collidableA, IIgnorableCollidable collidableB, bool ignoreCollision)
		{
		}

		[Token(Token = "0x600190D")]
		[Address(RVA = "0xE8B494", Offset = "0xE8B494", VA = "0xE8B494")]
		public static void SetCollidersEnabled(IIgnorableCollidable collidable, bool enabled)
		{
		}
	}
	[Token(Token = "0x20003A6")]
	public class SimpleInteractionSolver : InteractionSolver
	{
		[Token(Token = "0x40012EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected Transform _grabPoint;

		[Token(Token = "0x40012EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		protected Transform _interactionPoint;

		[Token(Token = "0x600190E")]
		[Address(RVA = "0xE8B5D8", Offset = "0xE8B5D8", VA = "0xE8B5D8", Slot = "5")]
		public override Transform SolveGrabPoint(Interactor interactor, Interactable interactable)
		{
			return null;
		}

		[Token(Token = "0x600190F")]
		[Address(RVA = "0xE8B658", Offset = "0xE8B658", VA = "0xE8B658", Slot = "4")]
		public override Transform SolveInteractionPoint(Interactor interactor, Interactable interactable)
		{
			return null;
		}

		[Token(Token = "0x6001910")]
		[Address(RVA = "0xE8B6D8", Offset = "0xE8B6D8", VA = "0xE8B6D8")]
		public SimpleInteractionSolver()
		{
		}
	}
	[Token(Token = "0x20003A7")]
	[CreateAssetMenu(fileName = "New VelocitySettings", menuName = "FarBridge/Newton/VelocitySettings")]
	public class VelocitySettingsAsset : ScriptableObject
	{
		[Token(Token = "0x40012EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public NewtonSettings.VelocitySettings VelocitySettings;

		[Token(Token = "0x6001911")]
		[Address(RVA = "0xE8B6E0", Offset = "0xE8B6E0", VA = "0xE8B6E0")]
		public VelocitySettingsAsset()
		{
		}
	}
	[Token(Token = "0x20003A8")]
	public class OverlayContentController : MonoBehaviour
	{
		[Token(Token = "0x40012ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private OverlayContentAsset _defaultContent;

		[Token(Token = "0x6001912")]
		[Address(RVA = "0xE8B6F4", Offset = "0xE8B6F4", VA = "0xE8B6F4")]
		private void Start()
		{
		}

		[Token(Token = "0x6001913")]
		[Address(RVA = "0xE8B74C", Offset = "0xE8B74C", VA = "0xE8B74C")]
		public OverlayContentController()
		{
		}
	}
	[Token(Token = "0x20003A9")]
	public class PicoInterface : PlatformInterface
	{
		[Token(Token = "0x40012EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private string _username;

		[Token(Token = "0x40012EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private string _userId;

		[Token(Token = "0x40012F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool _isConnected;

		[Token(Token = "0x17000317")]
		public override string Name
		{
			[Token(Token = "0x6001914")]
			[Address(RVA = "0xE8B754", Offset = "0xE8B754", VA = "0xE8B754", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001915")]
		[Address(RVA = "0xE8B794", Offset = "0xE8B794", VA = "0xE8B794", Slot = "7")]
		public override string GetUserId()
		{
			return null;
		}

		[Token(Token = "0x6001916")]
		[Address(RVA = "0xE8B7E4", Offset = "0xE8B7E4", VA = "0xE8B7E4", Slot = "8")]
		public override string GetUserName()
		{
			return null;
		}

		[Token(Token = "0x6001917")]
		[Address(RVA = "0xE8B8B8", Offset = "0xE8B8B8", VA = "0xE8B8B8", Slot = "6")]
		public override bool IsConnected()
		{
			return default(bool);
		}

		[Token(Token = "0x6001918")]
		[Address(RVA = "0xE8B8C0", Offset = "0xE8B8C0", VA = "0xE8B8C0", Slot = "5")]
		public override bool IsReady()
		{
			return default(bool);
		}

		[Token(Token = "0x6001919")]
		[Address(RVA = "0xE8B948", Offset = "0xE8B948", VA = "0xE8B948", Slot = "10")]
		public override void OnInitialize()
		{
		}

		[Token(Token = "0x600191A")]
		[Address(RVA = "0xE8BA68", Offset = "0xE8BA68", VA = "0xE8BA68")]
		private void OnLogin(Message<User> msg)
		{
		}

		[Token(Token = "0x600191B")]
		[Address(RVA = "0xE8BC18", Offset = "0xE8BC18", VA = "0xE8BC18")]
		public PicoInterface()
		{
		}
	}
	[Token(Token = "0x20003AA")]
	public static class PlatformServiceManager
	{
		[Token(Token = "0x40012F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static PlatformInterface _interface;

		[Token(Token = "0x17000318")]
		public static PlatformInterface Interface
		{
			[Token(Token = "0x600191C")]
			[Address(RVA = "0xE8BC28", Offset = "0xE8BC28", VA = "0xE8BC28")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600191D")]
		[Address(RVA = "0xE8BCBC", Offset = "0xE8BCBC", VA = "0xE8BCBC")]
		public static bool ValidatePlatformService()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20003AB")]
	public class PlatformServiceController : MonoBehaviour
	{
		[Token(Token = "0x17000319")]
		public static PlatformServiceController Instance
		{
			[Token(Token = "0x600191E")]
			[Address(RVA = "0xE8BCD4", Offset = "0xE8BCD4", VA = "0xE8BCD4")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x600191F")]
			[Address(RVA = "0xE8BD1C", Offset = "0xE8BD1C", VA = "0xE8BD1C")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x6001920")]
		[Address(RVA = "0xE8BD68", Offset = "0xE8BD68", VA = "0xE8BD68")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001921")]
		[Address(RVA = "0xE8BDB4", Offset = "0xE8BDB4", VA = "0xE8BDB4")]
		private void Start()
		{
		}

		[Token(Token = "0x6001922")]
		[Address(RVA = "0xE8BE38", Offset = "0xE8BE38", VA = "0xE8BE38")]
		private void Update()
		{
		}

		[Token(Token = "0x6001923")]
		[Address(RVA = "0xE8BE68", Offset = "0xE8BE68", VA = "0xE8BE68")]
		private void OnApplicationQuit()
		{
		}

		[Token(Token = "0x6001924")]
		[Address(RVA = "0xE8BE8C", Offset = "0xE8BE8C", VA = "0xE8BE8C")]
		public PlatformServiceController()
		{
		}
	}
	[Token(Token = "0x20003AC")]
	public abstract class PlatformInterface
	{
		[Token(Token = "0x1700031A")]
		public IPlatformAuthentication Authentication
		{
			[Token(Token = "0x6001925")]
			[Address(RVA = "0xE8BE94", Offset = "0xE8BE94", VA = "0xE8BE94")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700031B")]
		public IPlatformDLC DLC
		{
			[Token(Token = "0x6001926")]
			[Address(RVA = "0xE8BEDC", Offset = "0xE8BEDC", VA = "0xE8BEDC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700031C")]
		public IPlatformOverlay Overlay
		{
			[Token(Token = "0x6001927")]
			[Address(RVA = "0xE8BF24", Offset = "0xE8BF24", VA = "0xE8BF24")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700031D")]
		public IPlatformAchievements Achievements
		{
			[Token(Token = "0x6001928")]
			[Address(RVA = "0xE8BF6C", Offset = "0xE8BF6C", VA = "0xE8BF6C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700031E")]
		public virtual string Name
		{
			[Token(Token = "0x6001929")]
			[Address(RVA = "0xE8BFB4", Offset = "0xE8BFB4", VA = "0xE8BFB4", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600192A")]
		public abstract bool IsReady();

		[Token(Token = "0x600192B")]
		public abstract bool IsConnected();

		[Token(Token = "0x600192C")]
		public abstract string GetUserId();

		[Token(Token = "0x600192D")]
		public abstract string GetUserName();

		[Token(Token = "0x600192E")]
		[Address(RVA = "0xE8BFF4", Offset = "0xE8BFF4", VA = "0xE8BFF4", Slot = "9")]
		public virtual void OnDispose()
		{
		}

		[Token(Token = "0x600192F")]
		[Address(RVA = "0xE8BFF8", Offset = "0xE8BFF8", VA = "0xE8BFF8", Slot = "10")]
		public virtual void OnInitialize()
		{
		}

		[Token(Token = "0x6001930")]
		[Address(RVA = "0xE8BFFC", Offset = "0xE8BFFC", VA = "0xE8BFFC", Slot = "11")]
		public virtual void OnUpdate()
		{
		}

		[Token(Token = "0x6001931")]
		[Address(RVA = "0xE8C000", Offset = "0xE8C000", VA = "0xE8C000")]
		public bool SupportsAuthentication()
		{
			return default(bool);
		}

		[Token(Token = "0x6001932")]
		[Address(RVA = "0xE8C018", Offset = "0xE8C018", VA = "0xE8C018")]
		public bool SupportsDLC()
		{
			return default(bool);
		}

		[Token(Token = "0x6001933")]
		[Address(RVA = "0xE8C030", Offset = "0xE8C030", VA = "0xE8C030")]
		public bool SupportsOverlay()
		{
			return default(bool);
		}

		[Token(Token = "0x6001934")]
		[Address(RVA = "0xE8C048", Offset = "0xE8C048", VA = "0xE8C048")]
		public bool SupportsAchievements()
		{
			return default(bool);
		}

		[Token(Token = "0x6001935")]
		[Address(RVA = "0xE8BC20", Offset = "0xE8BC20", VA = "0xE8BC20")]
		protected PlatformInterface()
		{
		}
	}
	[Token(Token = "0x20003AD")]
	public class NullInterface : PlatformInterface
	{
		[Token(Token = "0x6001936")]
		[Address(RVA = "0xE8C060", Offset = "0xE8C060", VA = "0xE8C060", Slot = "7")]
		public override string GetUserId()
		{
			return null;
		}

		[Token(Token = "0x6001937")]
		[Address(RVA = "0xE8C068", Offset = "0xE8C068", VA = "0xE8C068", Slot = "8")]
		public override string GetUserName()
		{
			return null;
		}

		[Token(Token = "0x6001938")]
		[Address(RVA = "0xE8C070", Offset = "0xE8C070", VA = "0xE8C070", Slot = "6")]
		public override bool IsConnected()
		{
			return default(bool);
		}

		[Token(Token = "0x6001939")]
		[Address(RVA = "0xE8C078", Offset = "0xE8C078", VA = "0xE8C078", Slot = "5")]
		public override bool IsReady()
		{
			return default(bool);
		}

		[Token(Token = "0x600193A")]
		[Address(RVA = "0xE8C080", Offset = "0xE8C080", VA = "0xE8C080")]
		public NullInterface()
		{
		}
	}
	[Token(Token = "0x20003AE")]
	public interface IPlatformAuthentication
	{
		[Token(Token = "0x600193B")]
		string GetAuthTicket();

		[Token(Token = "0x600193C")]
		void CancelTicket();
	}
	[Token(Token = "0x20003AF")]
	public interface IPlatformDLC
	{
		[Token(Token = "0x20003B0")]
		public delegate void PurchaseFlowEndedDelegate();

		[Token(Token = "0x20003B1")]
		public delegate void UpdatedPurchasesDelegate(bool success);

		[Token(Token = "0x600193D")]
		void InitiateProductPurchase(ProductDefinition productDefinition);

		[Token(Token = "0x600193E")]
		void UpdatePurchases(UpdatedPurchasesDelegate onUpdated);

		[Token(Token = "0x600193F")]
		bool DoesUserOwnProduct(ProductDefinition productDefinition);

		[Token(Token = "0x6001940")]
		void AddPurchaseFlowCallback(PurchaseFlowEndedDelegate callback);

		[Token(Token = "0x6001941")]
		void RemovePurchaseFlowCallback(PurchaseFlowEndedDelegate callback);
	}
	[Token(Token = "0x20003B2")]
	public interface IPlatformOverlay
	{
		[Token(Token = "0x20003B3")]
		public delegate void OverlayActivatedDelegate(bool activated);

		[Token(Token = "0x600194A")]
		void AddOverlayCallback(OverlayActivatedDelegate callback);

		[Token(Token = "0x600194B")]
		void RemoveOverlayCallback(OverlayActivatedDelegate callback);
	}
	[Token(Token = "0x20003B4")]
	public interface IPlatformAchievements
	{
		[Token(Token = "0x6001950")]
		void GetTrophyData();

		[Token(Token = "0x6001951")]
		void UpdateTrophyProgress(AchievementData achievement);

		[Token(Token = "0x6001952")]
		void UnlockTrophy(AchievementData achievement);
	}
	[Token(Token = "0x20003B5")]
	[CreateAssetMenu(menuName = "FarBridge/Worlds/Product Definition")]
	public class ProductDefinition : ScriptableObject
	{
		[Token(Token = "0x40012F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string Name;

		[Token(Token = "0x40012F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int SteamID;

		[Token(Token = "0x40012F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string OculusID;

		[Token(Token = "0x40012F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string ViveportAppID;

		[Token(Token = "0x40012F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string ticket;

		[Token(Token = "0x40012F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string PicoID;

		[Token(Token = "0x40012F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string iOSID;

		[Token(Token = "0x40012FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public string AndroidID;

		[Token(Token = "0x1700031F")]
		public bool IsOwned
		{
			[Token(Token = "0x6001953")]
			[Address(RVA = "0xE8C464", Offset = "0xE8C464", VA = "0xE8C464")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001954")]
			[Address(RVA = "0xE8C46C", Offset = "0xE8C46C", VA = "0xE8C46C")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6001955")]
		[Address(RVA = "0xE8C478", Offset = "0xE8C478", VA = "0xE8C478")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001956")]
		[Address(RVA = "0xE8C480", Offset = "0xE8C480", VA = "0xE8C480")]
		public ProductDefinition()
		{
		}
	}
	[Token(Token = "0x20003B6")]
	public enum PlayerMode
	{
		[Token(Token = "0x40012FD")]
		None = -1,
		[Token(Token = "0x40012FE")]
		Player,
		[Token(Token = "0x40012FF")]
		Spectator
	}
	[Token(Token = "0x20003B7")]
	public static class PlayerModeManager
	{
		[Token(Token = "0x4001301")]
		private const string commandArgKey = "-playermode";

		[Token(Token = "0x4001302")]
		private const string playerPrefKey = "PlayerMode";

		[Token(Token = "0x17000320")]
		public static PlayerMode CurrentMode
		{
			[Token(Token = "0x6001957")]
			[Address(RVA = "0xE8C4E4", Offset = "0xE8C4E4", VA = "0xE8C4E4")]
			[CompilerGenerated]
			get
			{
				return default(PlayerMode);
			}
			[Token(Token = "0x6001958")]
			[Address(RVA = "0xE8C52C", Offset = "0xE8C52C", VA = "0xE8C52C")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000321")]
		public static PlayerMode PreferredMode
		{
			[Token(Token = "0x6001959")]
			[Address(RVA = "0xE8C578", Offset = "0xE8C578", VA = "0xE8C578")]
			get
			{
				return default(PlayerMode);
			}
			[Token(Token = "0x600195A")]
			[Address(RVA = "0xE8C668", Offset = "0xE8C668", VA = "0xE8C668")]
			set
			{
			}
		}

		[Token(Token = "0x600195B")]
		[Address(RVA = "0xE8C6FC", Offset = "0xE8C6FC", VA = "0xE8C6FC")]
		public static void SetMode(PlayerMode mode)
		{
		}

		[Token(Token = "0x600195C")]
		[Address(RVA = "0xE8C74C", Offset = "0xE8C74C", VA = "0xE8C74C")]
		[RuntimeInitializeOnLoadMethod(RuntimeInitializeLoadType.BeforeSceneLoad)]
		private static void AfterSceneLoad()
		{
		}
	}
	[Token(Token = "0x20003B8")]
	public class SpatialInputAdapter : NodeAdapter
	{
		[Token(Token = "0x20003B9")]
		public enum Button
		{
			[Token(Token = "0x4001314")]
			Pointer,
			[Token(Token = "0x4001315")]
			Submit,
			[Token(Token = "0x4001316")]
			Cancel
		}

		[Token(Token = "0x400130A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[SerializeField]
		private Input _pointerInput;

		[Token(Token = "0x400130B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Input _submitInput;

		[Token(Token = "0x400130C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[SerializeField]
		private Input _cancelInput;

		[Token(Token = "0x400130D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private bool _activateOnEnable;

		[Token(Token = "0x400130E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[SerializeField]
		private LayerMask _layersThatBlockRaycast;

		[Token(Token = "0x400130F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Vector3BufferArray _directionBuffer;

		[Token(Token = "0x4001310")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Vector3 _filteredRaycastDirection;

		[Token(Token = "0x4001311")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private int _lastUpdateFrame;

		[Token(Token = "0x4001312")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private bool _filterEnabled;

		[Token(Token = "0x17000322")]
		public Interactor Interactor
		{
			[Token(Token = "0x600195D")]
			[Address(RVA = "0xE8C908", Offset = "0xE8C908", VA = "0xE8C908")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x600195E")]
			[Address(RVA = "0xE8C910", Offset = "0xE8C910", VA = "0xE8C910")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000323")]
		public bool IsCursorActive
		{
			[Token(Token = "0x600195F")]
			[Address(RVA = "0xE8C918", Offset = "0xE8C918", VA = "0xE8C918")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001960")]
			[Address(RVA = "0xE8C920", Offset = "0xE8C920", VA = "0xE8C920")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000324")]
		public SpatialInputModule InputModule
		{
			[Token(Token = "0x6001961")]
			[Address(RVA = "0xE8C92C", Offset = "0xE8C92C", VA = "0xE8C92C")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001962")]
			[Address(RVA = "0xE8C934", Offset = "0xE8C934", VA = "0xE8C934")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000325")]
		public bool IsActiveInModule
		{
			[Token(Token = "0x6001963")]
			[Address(RVA = "0xE8C93C", Offset = "0xE8C93C", VA = "0xE8C93C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000326")]
		public bool HasRaycastPoint
		{
			[Token(Token = "0x6001964")]
			[Address(RVA = "0xE8C9DC", Offset = "0xE8C9DC", VA = "0xE8C9DC")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001965")]
			[Address(RVA = "0xE8C9E4", Offset = "0xE8C9E4", VA = "0xE8C9E4")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000327")]
		public bool RaycastIsBlocked
		{
			[Token(Token = "0x6001966")]
			[Address(RVA = "0xE8C9F0", Offset = "0xE8C9F0", VA = "0xE8C9F0")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001967")]
			[Address(RVA = "0xE8C9F8", Offset = "0xE8C9F8", VA = "0xE8C9F8")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000328")]
		public bool RaycastIsValid
		{
			[Token(Token = "0x6001968")]
			[Address(RVA = "0xE8CA04", Offset = "0xE8CA04", VA = "0xE8CA04")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000329")]
		public Vector3 RaycastNormal
		{
			[Token(Token = "0x6001969")]
			[Address(RVA = "0xE8CA24", Offset = "0xE8CA24", VA = "0xE8CA24")]
			[CompilerGenerated]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x600196A")]
			[Address(RVA = "0xE8CA30", Offset = "0xE8CA30", VA = "0xE8CA30")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x1700032A")]
		public Vector3 RaycastPoint
		{
			[Token(Token = "0x600196B")]
			[Address(RVA = "0xE8CA3C", Offset = "0xE8CA3C", VA = "0xE8CA3C")]
			[CompilerGenerated]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x600196C")]
			[Address(RVA = "0xE8CA48", Offset = "0xE8CA48", VA = "0xE8CA48")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x1700032B")]
		public Vector3 RaycastOrigin
		{
			[Token(Token = "0x600196D")]
			[Address(RVA = "0xE8CA54", Offset = "0xE8CA54", VA = "0xE8CA54")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x1700032C")]
		public Vector3 RaycastDirection
		{
			[Token(Token = "0x600196E")]
			[Address(RVA = "0xE8CA74", Offset = "0xE8CA74", VA = "0xE8CA74")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x1700032D")]
		public Vector3 FilteredRaycastDirection
		{
			[Token(Token = "0x600196F")]
			[Address(RVA = "0xE8CA94", Offset = "0xE8CA94", VA = "0xE8CA94")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x6001970")]
		[Address(RVA = "0xE8CD28", Offset = "0xE8CD28", VA = "0xE8CD28", Slot = "8")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001971")]
		[Address(RVA = "0xE8CDAC", Offset = "0xE8CDAC", VA = "0xE8CDAC")]
		private void Start()
		{
		}

		[Token(Token = "0x6001972")]
		[Address(RVA = "0xE8CDC8", Offset = "0xE8CDC8", VA = "0xE8CDC8")]
		private void Update()
		{
		}

		[Token(Token = "0x6001973")]
		[Address(RVA = "0xE8CF30", Offset = "0xE8CF30", VA = "0xE8CF30", Slot = "10")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6001974")]
		[Address(RVA = "0xE8CFAC", Offset = "0xE8CFAC", VA = "0xE8CFAC")]
		public PointerEventData.FramePressState GetButtonPressState(Button button)
		{
			return default(PointerEventData.FramePressState);
		}

		[Token(Token = "0x6001975")]
		[Address(RVA = "0xE8CE78", Offset = "0xE8CE78", VA = "0xE8CE78")]
		public InputAction GetButtonInputAction(Button button)
		{
			return null;
		}

		[Token(Token = "0x6001976")]
		[Address(RVA = "0xE8D004", Offset = "0xE8D004", VA = "0xE8D004")]
		public void ProcessPointerData(PointerEventData pointerEventData)
		{
		}

		[Token(Token = "0x6001977")]
		[Address(RVA = "0xE8CAB0", Offset = "0xE8CAB0", VA = "0xE8CAB0")]
		private void UpdateFilter()
		{
		}

		[Token(Token = "0x6001978")]
		[Address(RVA = "0xE8D138", Offset = "0xE8D138", VA = "0xE8D138")]
		public SpatialInputAdapter()
		{
		}
	}
	[Token(Token = "0x20003BA")]
	public class SpatialInputLine : SpatialInputRenderer
	{
		[Token(Token = "0x4001317")]
		private const float _invalidRayLength = 0.5f;

		[Token(Token = "0x4001318")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Header("Line")]
		[SerializeField]
		private LineRenderer _lineRenderer;

		[Token(Token = "0x4001319")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Color _validColor;

		[Token(Token = "0x400131A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Color _invalidColor;

		[Token(Token = "0x400131B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Vector3[] _positions;

		[Token(Token = "0x6001979")]
		[Address(RVA = "0xE8D1D0", Offset = "0xE8D1D0", VA = "0xE8D1D0")]
		private void Start()
		{
		}

		[Token(Token = "0x600197A")]
		[Address(RVA = "0xE8D1F0", Offset = "0xE8D1F0", VA = "0xE8D1F0", Slot = "10")]
		protected override void OnUpdate(bool isActive, bool hasRaycastPoint, bool inputIsValid, Vector3 originPosition, Vector3 hitPosition, Vector3 hitNormal)
		{
		}

		[Token(Token = "0x600197B")]
		[Address(RVA = "0xE8D4D4", Offset = "0xE8D4D4", VA = "0xE8D4D4")]
		public SpatialInputLine()
		{
		}
	}
	[Token(Token = "0x20003BB")]
	public class SpatialInputModule : PointerInputModule
	{
		[Token(Token = "0x400131C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public SpatialInputAdapter InputAdapter;

		[Token(Token = "0x400131D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static GameObject CustomCancelGameObject;

		[Token(Token = "0x400131E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Camera _eventCamera;

		[Token(Token = "0x400131F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private SpatialPointerMode _pointerMode;

		[Token(Token = "0x4001320")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private string m_HorizontalAxis;

		[Token(Token = "0x4001321")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private string m_VerticalAxis;

		[Token(Token = "0x4001322")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private string m_SubmitButton;

		[Token(Token = "0x4001323")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private string m_CancelButton;

		[Token(Token = "0x4001324")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private float m_InputActionsPerSecond;

		[Token(Token = "0x4001325")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		[SerializeField]
		private float m_RepeatDelay;

		[Token(Token = "0x4001326")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private int _consecutiveMoveCount;

		[Token(Token = "0x4001327")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private Vector2 _lastMoveVector;

		[Token(Token = "0x4001328")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private Vector3? _lastPointerWorldPosition;

		[Token(Token = "0x4001329")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private float _pausePointerTime;

		[Token(Token = "0x400132A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private float _prevActionTime;

		[Token(Token = "0x1700032E")]
		public virtual Camera EventCamera
		{
			[Token(Token = "0x600197C")]
			[Address(RVA = "0xE8D580", Offset = "0xE8D580", VA = "0xE8D580", Slot = "31")]
			get
			{
				return null;
			}
			[Token(Token = "0x600197D")]
			[Address(RVA = "0xE8D588", Offset = "0xE8D588", VA = "0xE8D588", Slot = "32")]
			set
			{
			}
		}

		[Token(Token = "0x1700032F")]
		public SpatialPointerMode PointerMode
		{
			[Token(Token = "0x600197E")]
			[Address(RVA = "0xE8D590", Offset = "0xE8D590", VA = "0xE8D590")]
			get
			{
				return default(SpatialPointerMode);
			}
			[Token(Token = "0x600197F")]
			[Address(RVA = "0xE8D598", Offset = "0xE8D598", VA = "0xE8D598")]
			set
			{
			}
		}

		[Token(Token = "0x6001980")]
		[Address(RVA = "0xE8D5A0", Offset = "0xE8D5A0", VA = "0xE8D5A0", Slot = "6")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6001981")]
		[Address(RVA = "0xE8D60C", Offset = "0xE8D60C", VA = "0xE8D60C", Slot = "5")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6001982")]
		[Address(RVA = "0xE8D6BC", Offset = "0xE8D6BC", VA = "0xE8D6BC", Slot = "7")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x6001983")]
		[Address(RVA = "0xE8D76C", Offset = "0xE8D76C", VA = "0xE8D76C")]
		private void Initialize()
		{
		}

		[Token(Token = "0x6001984")]
		[Address(RVA = "0xE8DA0C", Offset = "0xE8DA0C", VA = "0xE8DA0C")]
		private void OnSceneLoaded(Scene scene, LoadSceneMode mode)
		{
		}

		[Token(Token = "0x6001985")]
		[Address(RVA = "0xE8D8CC", Offset = "0xE8D8CC", VA = "0xE8D8CC")]
		private void InitCanvases()
		{
		}

		[Token(Token = "0x6001986")]
		[Address(RVA = "0xE8DA10", Offset = "0xE8DA10", VA = "0xE8DA10", Slot = "24")]
		public override void UpdateModule()
		{
		}

		[Token(Token = "0x6001987")]
		[Address(RVA = "0xE8DB64", Offset = "0xE8DB64", VA = "0xE8DB64", Slot = "25")]
		public override bool IsModuleSupported()
		{
			return default(bool);
		}

		[Token(Token = "0x6001988")]
		[Address(RVA = "0xE8DB6C", Offset = "0xE8DB6C", VA = "0xE8DB6C", Slot = "21")]
		public override bool ShouldActivateModule()
		{
			return default(bool);
		}

		[Token(Token = "0x6001989")]
		[Address(RVA = "0xE8DB74", Offset = "0xE8DB74", VA = "0xE8DB74", Slot = "23")]
		public override void ActivateModule()
		{
		}

		[Token(Token = "0x600198A")]
		[Address(RVA = "0xE8DC30", Offset = "0xE8DC30", VA = "0xE8DC30", Slot = "22")]
		public override void DeactivateModule()
		{
		}

		[Token(Token = "0x600198B")]
		[Address(RVA = "0xE8DC50", Offset = "0xE8DC50", VA = "0xE8DC50", Slot = "17")]
		public override void Process()
		{
		}

		[Token(Token = "0x600198C")]
		[Address(RVA = "0xE8ED68", Offset = "0xE8ED68", VA = "0xE8ED68")]
		public Ray GetEventRay()
		{
			return default(Ray);
		}

		[Token(Token = "0x600198D")]
		[Address(RVA = "0xE8E42C", Offset = "0xE8E42C", VA = "0xE8E42C")]
		protected bool SendSubmitEventToSelectedObject()
		{
			return default(bool);
		}

		[Token(Token = "0x600198E")]
		[Address(RVA = "0xE8EF24", Offset = "0xE8EF24", VA = "0xE8EF24")]
		private bool GetSubmitPressedDown()
		{
			return default(bool);
		}

		[Token(Token = "0x600198F")]
		[Address(RVA = "0xE8EFD4", Offset = "0xE8EFD4", VA = "0xE8EFD4")]
		private bool GetCancelPressedDown()
		{
			return default(bool);
		}

		[Token(Token = "0x6001990")]
		[Address(RVA = "0xE8F084", Offset = "0xE8F084", VA = "0xE8F084")]
		private Vector2 GetRawMoveVector()
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001991")]
		[Address(RVA = "0xE8E048", Offset = "0xE8E048", VA = "0xE8E048")]
		protected bool SendMoveEventToSelectedObject()
		{
			return default(bool);
		}

		[Token(Token = "0x6001992")]
		[Address(RVA = "0xE8DF00", Offset = "0xE8DF00", VA = "0xE8DF00")]
		protected bool SendUpdateEventToSelectedObject()
		{
			return default(bool);
		}

		[Token(Token = "0x6001993")]
		[Address(RVA = "0xE8ED40", Offset = "0xE8ED40", VA = "0xE8ED40")]
		protected void ProcessMouseEvent(int id)
		{
		}

		[Token(Token = "0x6001994")]
		[Address(RVA = "0xE8E6D0", Offset = "0xE8E6D0", VA = "0xE8E6D0")]
		private void ProcessCustomRayEvent(SpatialInputAdapter inputAdapter, Vector3 origin, Vector3 direction, Vector3 up)
		{
		}

		[Token(Token = "0x6001995")]
		[Address(RVA = "0xE8F564", Offset = "0xE8F564", VA = "0xE8F564", Slot = "33")]
		protected virtual void UpdateSpatialPointerData(ref PointerEventData data)
		{
		}

		[Token(Token = "0x6001996")]
		[Address(RVA = "0xE8F2C4", Offset = "0xE8F2C4", VA = "0xE8F2C4")]
		protected void ProcessMouseState(MouseState mouseState)
		{
		}

		[Token(Token = "0x6001997")]
		[Address(RVA = "0xE8F770", Offset = "0xE8F770", VA = "0xE8F770")]
		protected void ProcessMousePress(MouseButtonEventData data)
		{
		}

		[Token(Token = "0x6001998")]
		[Address(RVA = "0xE8FD94", Offset = "0xE8FD94", VA = "0xE8FD94")]
		public SpatialInputModule()
		{
		}
	}
	[Token(Token = "0x20003BD")]
	public abstract class SpatialInputRenderer : ComponentBehavior<SpatialInputAdapter>
	{
		[Token(Token = "0x17000330")]
		public SpatialInputAdapter InputAdapter
		{
			[Token(Token = "0x600199C")]
			[Address(RVA = "0xE8D48C", Offset = "0xE8D48C", VA = "0xE8D48C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600199D")]
		[Address(RVA = "0xE8FF34", Offset = "0xE8FF34", VA = "0xE8FF34")]
		protected void LateUpdate()
		{
		}

		[Token(Token = "0x600199E")]
		protected abstract void OnUpdate(bool isActive, bool hasRaycastPoint, bool inputIsValid, Vector3 originPosition, Vector3 hitPosition, Vector3 hitNormal);

		[Token(Token = "0x600199F")]
		[Address(RVA = "0xE8D538", Offset = "0xE8D538", VA = "0xE8D538")]
		protected SpatialInputRenderer()
		{
		}
	}
	[Token(Token = "0x20003BE")]
	public enum SpatialPointerMode
	{
		[Token(Token = "0x400132E")]
		InputAdapter,
		[Token(Token = "0x400132F")]
		Mouse,
		[Token(Token = "0x4001330")]
		WorldMouse
	}
	[Token(Token = "0x20003BF")]
	public class SystemCheckController : MonoBehaviour
	{
		[Token(Token = "0x4001333")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Player _screenPlayerPrefab;

		[Token(Token = "0x4001334")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Player _vrPlayerPrefab;

		[Token(Token = "0x4001335")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private SystemCheckUI _ui;

		[Token(Token = "0x4001336")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private bool _waitForPress;

		[Token(Token = "0x4001337")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		[Tooltip("Invoked when systems check is successful and the player proceeeds via input.")]
		private UnityEvent _completeEvent;

		[Token(Token = "0x4001338")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Player _player;

		[Token(Token = "0x4001339")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Action _updateAction;

		[Token(Token = "0x400133A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float _updateDuration;

		[Token(Token = "0x17000331")]
		public float Progress
		{
			[Token(Token = "0x60019A0")]
			[Address(RVA = "0xE90044", Offset = "0xE90044", VA = "0xE90044")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60019A1")]
			[Address(RVA = "0xE9004C", Offset = "0xE9004C", VA = "0xE9004C")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000332")]
		public bool HasPress
		{
			[Token(Token = "0x60019A2")]
			[Address(RVA = "0xE90054", Offset = "0xE90054", VA = "0xE90054")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60019A3")]
			[Address(RVA = "0xE9005C", Offset = "0xE9005C", VA = "0xE9005C")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x60019A4")]
		[Address(RVA = "0xE90068", Offset = "0xE90068", VA = "0xE90068")]
		public void BeginSystemsCheck()
		{
		}

		[Token(Token = "0x60019A5")]
		[Address(RVA = "0xE90124", Offset = "0xE90124", VA = "0xE90124")]
		public void EndSystemsCheck()
		{
		}

		[Token(Token = "0x60019A6")]
		[Address(RVA = "0xE90168", Offset = "0xE90168", VA = "0xE90168")]
		private void UpdateSystemsCheck()
		{
		}

		[Token(Token = "0x60019A7")]
		[Address(RVA = "0xE90288", Offset = "0xE90288", VA = "0xE90288")]
		private void UpdateProgress()
		{
		}

		[Token(Token = "0x60019A8")]
		[Address(RVA = "0xE905EC", Offset = "0xE905EC", VA = "0xE905EC")]
		private void Awake()
		{
		}

		[Token(Token = "0x60019A9")]
		[Address(RVA = "0xE906B4", Offset = "0xE906B4", VA = "0xE906B4")]
		private void Update()
		{
		}

		[Token(Token = "0x60019AA")]
		[Address(RVA = "0xE906D0", Offset = "0xE906D0", VA = "0xE906D0")]
		public SystemCheckController()
		{
		}
	}
	[Token(Token = "0x20003C0")]
	public class SystemCheckUI : MonoBehaviour
	{
		[Token(Token = "0x400133B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Canvas _worldSpaceCanvas;

		[Token(Token = "0x400133C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private SystemCheckController _titleController;

		[Token(Token = "0x400133D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Header("Systems Report")]
		[SerializeField]
		private SystemCheckUIElement _headStatus;

		[Token(Token = "0x400133E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private SystemCheckUIElement _leftHandStatus;

		[Token(Token = "0x400133F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private SystemCheckUIElement _rightHandStatus;

		[Token(Token = "0x4001340")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		[Header("Progress")]
		private Image _fill;

		[Token(Token = "0x4001341")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Image _border;

		[Token(Token = "0x4001342")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Color _borderGlowColor;

		[Token(Token = "0x60019AB")]
		[Address(RVA = "0xE906D8", Offset = "0xE906D8", VA = "0xE906D8")]
		private void Start()
		{
		}

		[Token(Token = "0x60019AC")]
		[Address(RVA = "0xE90914", Offset = "0xE90914", VA = "0xE90914")]
		private void Update()
		{
		}

		[Token(Token = "0x60019AD")]
		[Address(RVA = "0xE90A18", Offset = "0xE90A18", VA = "0xE90A18")]
		public SystemCheckUI()
		{
		}
	}
	[Token(Token = "0x20003C1")]
	public abstract class PlatformIntegration
	{
		[Token(Token = "0x4001343")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected static PlatformIntegration _currentIntegration;

		[Token(Token = "0x17000333")]
		public static PlatformIntegration CurrentIntegration
		{
			[Token(Token = "0x60019AE")]
			[Address(RVA = "0xE90A20", Offset = "0xE90A20", VA = "0xE90A20")]
			get
			{
				return null;
			}
			[Token(Token = "0x60019AF")]
			[Address(RVA = "0xE90AA8", Offset = "0xE90AA8", VA = "0xE90AA8")]
			protected set
			{
			}
		}

		[Token(Token = "0x60019B0")]
		[Address(RVA = "0xE7E520", Offset = "0xE7E520", VA = "0xE7E520")]
		public static PlatformIntegration GetInstance()
		{
			return null;
		}

		[Token(Token = "0x60019B1")]
		[Address(RVA = "0xE90B10", Offset = "0xE90B10", VA = "0xE90B10")]
		private static PlatformIntegration GetInstance(string typeName)
		{
			return null;
		}

		[Token(Token = "0x60019B2")]
		[Address(RVA = "0xE7E544", Offset = "0xE7E544", VA = "0xE7E544")]
		public void Initialize(Player player)
		{
		}

		[Token(Token = "0x60019B3")]
		protected abstract void OnInitialize(Player player);

		[Token(Token = "0x60019B4")]
		public abstract Vector3 GetPlayspaceBounds();

		[Token(Token = "0x60019B5")]
		[Address(RVA = "0xE90DB8", Offset = "0xE90DB8", VA = "0xE90DB8", Slot = "6")]
		public virtual NodeAvatar AttachDefaultAvatar(Node node)
		{
			return null;
		}

		[Token(Token = "0x60019B6")]
		[Address(RVA = "0xE90DC0", Offset = "0xE90DC0", VA = "0xE90DC0")]
		protected void LogPlatformError()
		{
		}

		[Token(Token = "0x60019B7")]
		[Address(RVA = "0xE90E28", Offset = "0xE90E28", VA = "0xE90E28")]
		protected PlatformIntegration()
		{
		}
	}
	[Token(Token = "0x20003C2")]
	public class DefaultIntegration : PlatformIntegration
	{
		[Token(Token = "0x60019B8")]
		[Address(RVA = "0xE90E30", Offset = "0xE90E30", VA = "0xE90E30", Slot = "5")]
		public override Vector3 GetPlayspaceBounds()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60019B9")]
		[Address(RVA = "0xE90E74", Offset = "0xE90E74", VA = "0xE90E74", Slot = "4")]
		protected override void OnInitialize(Player player)
		{
		}

		[Token(Token = "0x60019BA")]
		[Address(RVA = "0xE90AA0", Offset = "0xE90AA0", VA = "0xE90AA0")]
		public DefaultIntegration()
		{
		}
	}
	[Token(Token = "0x20003C3")]
	[CreateAssetMenu(fileName = "PlatformTarget", menuName = "FarBridge/Worlds/PlatformTarget")]
	public class PlatformTarget : ScriptableObject
	{
		[Token(Token = "0x4001344")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PlatformData Data;

		[Token(Token = "0x4001345")]
		private const string pathInResources = "PlatformTarget";

		[Token(Token = "0x4001346")]
		private const string pathInProject = "Assets/FarBridge/Worlds/PlatformConfig/Resources/";

		[Token(Token = "0x60019BB")]
		[Address(RVA = "0xE90EDC", Offset = "0xE90EDC", VA = "0xE90EDC")]
		public static PlatformTarget GetTarget()
		{
			return null;
		}

		[Token(Token = "0x60019BC")]
		[Address(RVA = "0xE90AF4", Offset = "0xE90AF4", VA = "0xE90AF4")]
		public static PlatformData GetPlatformData()
		{
			return null;
		}

		[Token(Token = "0x60019BD")]
		[Address(RVA = "0xE90F34", Offset = "0xE90F34", VA = "0xE90F34")]
		public static void SetData(PlatformData data)
		{
		}

		[Token(Token = "0x60019BE")]
		[Address(RVA = "0xE90F54", Offset = "0xE90F54", VA = "0xE90F54")]
		public static void Clean_Editor()
		{
		}

		[Token(Token = "0x60019BF")]
		[Address(RVA = "0xE90F58", Offset = "0xE90F58", VA = "0xE90F58")]
		public PlatformTarget()
		{
		}
	}
	[Token(Token = "0x20003C4")]
	public abstract class BaseComponentBehaviour : MonoBehaviour
	{
		[Token(Token = "0x60019C0")]
		[Address(RVA = "0xE90F60", Offset = "0xE90F60", VA = "0xE90F60", Slot = "4")]
		protected virtual void OnSubscribeToComponent()
		{
		}

		[Token(Token = "0x60019C1")]
		[Address(RVA = "0xE90F64", Offset = "0xE90F64", VA = "0xE90F64", Slot = "5")]
		protected virtual void OnUnsubscribeFromComponent()
		{
		}

		[Token(Token = "0x60019C2")]
		[Address(RVA = "0xE7E514", Offset = "0xE7E514", VA = "0xE7E514", Slot = "6")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x60019C3")]
		[Address(RVA = "0xE90F68", Offset = "0xE90F68", VA = "0xE90F68", Slot = "7")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x60019C4")]
		[Address(RVA = "0xE90F74", Offset = "0xE90F74", VA = "0xE90F74", Slot = "8")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x60019C5")]
		protected abstract void FindComponentsInHierarchy();

		[Token(Token = "0x60019C6")]
		[Address(RVA = "0xE90F80", Offset = "0xE90F80", VA = "0xE90F80")]
		protected BaseComponentBehaviour()
		{
		}
	}
	[Token(Token = "0x20003C5")]
	public abstract class ComponentBehavior<T> : BaseComponentBehaviour where T : Component
	{
		[Token(Token = "0x4001347")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool _initialized;

		[Token(Token = "0x4001348")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T _internal_component;

		[Token(Token = "0x17000334")]
		protected T _component
		{
			[Token(Token = "0x60019C7")]
			get
			{
				return null;
			}
			[Token(Token = "0x60019C8")]
			private set
			{
			}
		}

		[Token(Token = "0x60019C9")]
		public void SetComponent(T component)
		{
		}

		[Token(Token = "0x60019CA")]
		protected sealed override void FindComponentsInHierarchy()
		{
		}

		[Token(Token = "0x60019CB")]
		protected ComponentBehavior()
		{
		}
	}
	[Token(Token = "0x20003C6")]
	public abstract class ComponentBehavior<T0, T1> : BaseComponentBehaviour where T0 : Component where T1 : Component
	{
		[Token(Token = "0x17000335")]
		protected T0 _component0
		{
			[Token(Token = "0x60019CC")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60019CD")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000336")]
		protected T1 _component1
		{
			[Token(Token = "0x60019CE")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60019CF")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x60019D0")]
		public void SetComponents(T0 component0, T1 component1)
		{
		}

		[Token(Token = "0x60019D1")]
		protected sealed override void FindComponentsInHierarchy()
		{
		}

		[Token(Token = "0x60019D2")]
		protected ComponentBehavior()
		{
		}
	}
	[Token(Token = "0x20003C7")]
	public class PicoInputDevice : InputDevice
	{
		[Token(Token = "0x400134B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public GameObject ControllerObject;

		[Token(Token = "0x400134C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public PXR_Input.Controller Controller;

		[Token(Token = "0x400134D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public PXR_Input.ControllerDevice DeviceType;

		[Token(Token = "0x400134E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector2 _thumbAxis;

		[Token(Token = "0x400134F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private float _trigger;

		[Token(Token = "0x4001350")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private float _grip;

		[Token(Token = "0x4001351")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private bool _thumbButton;

		[Token(Token = "0x4001352")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x89")]
		private bool _thumbTouch;

		[Token(Token = "0x4001353")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8A")]
		private bool _menuButton;

		[Token(Token = "0x4001354")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8B")]
		private bool _gripButton;

		[Token(Token = "0x4001355")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private bool _triggerButton;

		[Token(Token = "0x4001356")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8D")]
		private bool _primaryButton;

		[Token(Token = "0x4001357")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8E")]
		private bool _secondaryButton;

		[Token(Token = "0x60019D3")]
		[Address(RVA = "0xE90F88", Offset = "0xE90F88", VA = "0xE90F88")]
		public PicoInputDevice(PXR_Input.Controller controller)
		{
		}

		[Token(Token = "0x60019D4")]
		[Address(RVA = "0xE90FB0", Offset = "0xE90FB0", VA = "0xE90FB0", Slot = "4")]
		public override string GetDeviceType()
		{
			return null;
		}

		[Token(Token = "0x60019D5")]
		[Address(RVA = "0xE9106C", Offset = "0xE9106C", VA = "0xE9106C", Slot = "6")]
		public override void TriggerHapticPulse(float durationSeconds = 0.2f, float frequency = 0.35f, float amplitude = 0.35f)
		{
		}

		[Token(Token = "0x60019D6")]
		[Address(RVA = "0xE910A0", Offset = "0xE910A0", VA = "0xE910A0", Slot = "5")]
		protected override void SetHapticVibration(float frequency = 0.35f, float amplitude = 0.35f)
		{
		}

		[Token(Token = "0x60019D7")]
		[Address(RVA = "0xE910A4", Offset = "0xE910A4", VA = "0xE910A4", Slot = "7")]
		public override void UpdateActions()
		{
		}
	}
	[Token(Token = "0x20003C8")]
	public class PicoHeadInputDevice : InputDevice
	{
		[Token(Token = "0x60019D8")]
		[Address(RVA = "0xE91628", Offset = "0xE91628", VA = "0xE91628", Slot = "4")]
		public override string GetDeviceType()
		{
			return null;
		}

		[Token(Token = "0x60019D9")]
		[Address(RVA = "0xE91634", Offset = "0xE91634", VA = "0xE91634", Slot = "6")]
		public override void TriggerHapticPulse(float durationSeconds = 0.2f, float frequency = 0.35f, float amplitude = 0.35f)
		{
		}

		[Token(Token = "0x60019DA")]
		[Address(RVA = "0xE91674", Offset = "0xE91674", VA = "0xE91674", Slot = "7")]
		public override void UpdateActions()
		{
		}

		[Token(Token = "0x60019DB")]
		[Address(RVA = "0xE9178C", Offset = "0xE9178C", VA = "0xE9178C", Slot = "5")]
		protected override void SetHapticVibration(float frequency = 0.35f, float amplitude = 0.35f)
		{
		}

		[Token(Token = "0x60019DC")]
		[Address(RVA = "0xE91790", Offset = "0xE91790", VA = "0xE91790")]
		public PicoHeadInputDevice()
		{
		}
	}
	[Token(Token = "0x20003C9")]
	public class PicoIntegration : PlatformIntegration
	{
		[Token(Token = "0x4001358")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int _headset;

		[Token(Token = "0x60019DD")]
		[Address(RVA = "0xE91798", Offset = "0xE91798", VA = "0xE91798", Slot = "5")]
		public override Vector3 GetPlayspaceBounds()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60019DE")]
		[Address(RVA = "0xE917D8", Offset = "0xE917D8", VA = "0xE917D8", Slot = "4")]
		protected override void OnInitialize(Player player)
		{
		}

		[Token(Token = "0x60019DF")]
		[Address(RVA = "0xE91990", Offset = "0xE91990", VA = "0xE91990", Slot = "6")]
		public override NodeAvatar AttachDefaultAvatar(Node node)
		{
			return null;
		}

		[Token(Token = "0x60019E0")]
		[Address(RVA = "0xE91D04", Offset = "0xE91D04", VA = "0xE91D04")]
		public PicoIntegration()
		{
		}
	}
}
namespace FarBridge.Worlds.Demo
{
	[Token(Token = "0x20003CA")]
	public class InputActionDebugger : ComponentBehavior<Node>
	{
		[Token(Token = "0x4001359")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private DebugText _popupPrefab;

		[Token(Token = "0x400135A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Input[] _popupInputs;

		[Token(Token = "0x400135B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private float _stackDistance;

		[Token(Token = "0x400135C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private DebugText _thumbPopup;

		[Token(Token = "0x400135D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private DebugText _indexTriggerPopup;

		[Token(Token = "0x400135E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private DebugText _handTriggerPopup;

		[Token(Token = "0x400135F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float _timeSinceLastPopup;

		[Token(Token = "0x4001360")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private int _stackIndex;

		[Token(Token = "0x17000337")]
		private Node _node
		{
			[Token(Token = "0x60019E1")]
			[Address(RVA = "0xE91D0C", Offset = "0xE91D0C", VA = "0xE91D0C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000338")]
		private Camera _camera
		{
			[Token(Token = "0x60019E2")]
			[Address(RVA = "0xE91D54", Offset = "0xE91D54", VA = "0xE91D54")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60019E3")]
		[Address(RVA = "0xE91DF8", Offset = "0xE91DF8", VA = "0xE91DF8")]
		private void Print3d(string message, [Optional] DebugText text)
		{
		}

		[Token(Token = "0x60019E4")]
		[Address(RVA = "0xE9212C", Offset = "0xE9212C", VA = "0xE9212C")]
		private void FaceOtherTransform(Transform transform, Transform other, bool reverse = true)
		{
		}

		[Token(Token = "0x60019E5")]
		[Address(RVA = "0xE92198", Offset = "0xE92198", VA = "0xE92198", Slot = "7")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x60019E6")]
		[Address(RVA = "0xE921A0", Offset = "0xE921A0", VA = "0xE921A0")]
		private void Start()
		{
		}

		[Token(Token = "0x60019E7")]
		[Address(RVA = "0xE9246C", Offset = "0xE9246C", VA = "0xE9246C")]
		private void Update()
		{
		}

		[Token(Token = "0x60019E8")]
		[Address(RVA = "0xE92BB0", Offset = "0xE92BB0", VA = "0xE92BB0")]
		public InputActionDebugger()
		{
		}
	}
}
namespace FarBridge.Weywot
{
	[Token(Token = "0x20003CB")]
	public class ConnectionManager : MonoBehaviour
	{
		[Token(Token = "0x20003CC")]
		public delegate void PlatformConnectionHandler(PlatformInterface platformInterface);

		[Token(Token = "0x20003CD")]
		public delegate void PlayFabConnectionHandler();

		[Token(Token = "0x20003CF")]
		[CompilerGenerated]
		private sealed class <AttemptToLoginToPlayFab>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001368")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001369")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400136A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ConnectionManager <>4__this;

			[Token(Token = "0x400136B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool retry;

			[Token(Token = "0x17000339")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001A02")]
				[Address(RVA = "0xE94120", Offset = "0xE94120", VA = "0xE94120", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700033A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001A04")]
				[Address(RVA = "0xE94168", Offset = "0xE94168", VA = "0xE94168", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60019FF")]
			[Address(RVA = "0xE93440", Offset = "0xE93440", VA = "0xE93440")]
			[DebuggerHidden]
			public <AttemptToLoginToPlayFab>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x6001A00")]
			[Address(RVA = "0xE93A1C", Offset = "0xE93A1C", VA = "0xE93A1C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001A01")]
			[Address(RVA = "0xE93A20", Offset = "0xE93A20", VA = "0xE93A20", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001A03")]
			[Address(RVA = "0xE94128", Offset = "0xE94128", VA = "0xE94128", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001361")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool _wasReadyAndConnected;

		[Token(Token = "0x4001362")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool _isAttemptingLoginToPlayFab;

		[Token(Token = "0x14000060")]
		public static event PlatformConnectionHandler ConnectedToPlatformEvent
		{
			[Token(Token = "0x60019E9")]
			[Address(RVA = "0xE92C54", Offset = "0xE92C54", VA = "0xE92C54")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x60019EA")]
			[Address(RVA = "0xE92D0C", Offset = "0xE92D0C", VA = "0xE92D0C")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000061")]
		public static event PlayFabConnectionHandler ConnectedToPlayFabEvent
		{
			[Token(Token = "0x60019EB")]
			[Address(RVA = "0xE92DC4", Offset = "0xE92DC4", VA = "0xE92DC4")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x60019EC")]
			[Address(RVA = "0xE92E80", Offset = "0xE92E80", VA = "0xE92E80")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x60019ED")]
		[Address(RVA = "0xE92F3C", Offset = "0xE92F3C", VA = "0xE92F3C")]
		private void Start()
		{
		}

		[Token(Token = "0x60019EE")]
		[Address(RVA = "0xE93044", Offset = "0xE93044", VA = "0xE93044")]
		private void Update()
		{
		}

		[Token(Token = "0x60019EF")]
		[Address(RVA = "0xE930B4", Offset = "0xE930B4", VA = "0xE930B4")]
		private void UpdateConnections()
		{
		}

		[Token(Token = "0x60019F0")]
		[Address(RVA = "0xE933C4", Offset = "0xE933C4", VA = "0xE933C4")]
		[IteratorStateMachine(typeof(<AttemptToLoginToPlayFab>d__13))]
		private IEnumerator AttemptToLoginToPlayFab(bool retry = false)
		{
			return null;
		}

		[Token(Token = "0x60019F1")]
		[Address(RVA = "0xE93468", Offset = "0xE93468", VA = "0xE93468")]
		[RuntimeInitializeOnLoadMethod(RuntimeInitializeLoadType.BeforeSceneLoad)]
		public static void Init()
		{
		}

		[Token(Token = "0x60019F2")]
		[Address(RVA = "0xE93698", Offset = "0xE93698", VA = "0xE93698")]
		public ConnectionManager()
		{
		}
	}
	[Token(Token = "0x20003D0")]
	public class ControllerProfile
	{
		[Token(Token = "0x400136C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly ControllerProfile Default;

		[Token(Token = "0x400136D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string DeviceName;

		[Token(Token = "0x400136E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ThumbInputMode ThumbInputMode;

		[Token(Token = "0x400136F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float ThumbDeadzone;

		[Token(Token = "0x4001370")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool HasThumbstick;

		[Token(Token = "0x4001371")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Dictionary<UserActionType, UserAction> _userActions;

		[Token(Token = "0x4001372")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Dictionary<string, string> _inputDescriptions;

		[Token(Token = "0x6001A05")]
		[Address(RVA = "0xE94170", Offset = "0xE94170", VA = "0xE94170")]
		public ControllerProfile(string deviceName)
		{
		}

		[Token(Token = "0x6001A06")]
		[Address(RVA = "0xE9461C", Offset = "0xE9461C", VA = "0xE9461C")]
		private void AddUserAction(UserAction userAction)
		{
		}

		[Token(Token = "0x6001A07")]
		[Address(RVA = "0xE946E4", Offset = "0xE946E4", VA = "0xE946E4")]
		public UserAction GetUserAction(UserActionType type)
		{
			return null;
		}

		[Token(Token = "0x6001A08")]
		[Address(RVA = "0xE9467C", Offset = "0xE9467C", VA = "0xE9467C")]
		public void SetInputDescription(string key, string description)
		{
		}

		[Token(Token = "0x6001A09")]
		[Address(RVA = "0xE94788", Offset = "0xE94788", VA = "0xE94788")]
		public string GetInputDescription(string key)
		{
			return null;
		}
	}
	[Token(Token = "0x20003D1")]
	public class UserAction
	{
		[Token(Token = "0x4001373")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly UserActionType Type;

		[Token(Token = "0x4001374")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Input Input;

		[Token(Token = "0x4001375")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly UserAction Null;

		[Token(Token = "0x6001A0B")]
		[Address(RVA = "0xE945F0", Offset = "0xE945F0", VA = "0xE945F0")]
		public UserAction(UserActionType type, Input inputBinding)
		{
		}
	}
	[Token(Token = "0x20003D2")]
	public enum UserActionType
	{
		[Token(Token = "0x4001377")]
		None,
		[Token(Token = "0x4001378")]
		Teleport,
		[Token(Token = "0x4001379")]
		TurnLeft,
		[Token(Token = "0x400137A")]
		TurnRight,
		[Token(Token = "0x400137B")]
		Locomotion,
		[Token(Token = "0x400137C")]
		Pickup,
		[Token(Token = "0x400137D")]
		Pointer,
		[Token(Token = "0x400137E")]
		Undo,
		[Token(Token = "0x400137F")]
		Pause,
		[Token(Token = "0x4001380")]
		CenterBall,
		[Token(Token = "0x4001381")]
		Grip,
		[Token(Token = "0x4001382")]
		Replay,
		[Token(Token = "0x4001383")]
		Thumb,
		[Token(Token = "0x4001384")]
		Pause2,
		[Token(Token = "0x4001385")]
		UpdateCalibration,
		[Token(Token = "0x4001386")]
		SetCalibration,
		[Token(Token = "0x4001387")]
		ResetCalibration
	}
	[Token(Token = "0x20003D3")]
	public class EntitlementController : MonoBehaviour
	{
		[Token(Token = "0x20003D4")]
		[CompilerGenerated]
		private sealed class <EntitlementFailedRoutine>d__9 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400138D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400138E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400138F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string message;

			[Token(Token = "0x1700033B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001A16")]
				[Address(RVA = "0xE94CCC", Offset = "0xE94CCC", VA = "0xE94CCC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700033C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001A18")]
				[Address(RVA = "0xE94D14", Offset = "0xE94D14", VA = "0xE94D14", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001A13")]
			[Address(RVA = "0xE94AB4", Offset = "0xE94AB4", VA = "0xE94AB4")]
			[DebuggerHidden]
			public <EntitlementFailedRoutine>d__9(int <>1__state)
			{
			}

			[Token(Token = "0x6001A14")]
			[Address(RVA = "0xE94AE4", Offset = "0xE94AE4", VA = "0xE94AE4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001A15")]
			[Address(RVA = "0xE94AE8", Offset = "0xE94AE8", VA = "0xE94AE8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001A17")]
			[Address(RVA = "0xE94CD4", Offset = "0xE94CD4", VA = "0xE94CD4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001388")]
		private const string VIVEPORT_ID = "2eeae35c-26e8-48cc-9138-2d586bcbc93f";

		[Token(Token = "0x4001389")]
		private const string VIVEPORT_KEY = "MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQCh61BsvPwxjpBxKtja1irGM8cwhVhHbe9BNJywwpeLc21VnvNLAE58xorW4oiMB6P+Jo0lWOxlJfvLoqyHxo6XQmPvmi++xJhEHpMpfPc56G4K71Vm5fSI1tsM4u366KszDA6Mu2tPyq0FFF6O+AWbGcI8RUdrTgSeIk68ts6jYQIDAQAB";

		[Token(Token = "0x400138A")]
		private const string inAppApiKey = "moBYPMeAQZuCWf6QPABJe2aNPUWbmpef";

		[Token(Token = "0x400138B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool _entitlementFailedFlag;

		[Token(Token = "0x400138C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private string _entitlementFailedMessage;

		[Token(Token = "0x6001A0D")]
		[Address(RVA = "0xE94930", Offset = "0xE94930", VA = "0xE94930")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001A0E")]
		[Address(RVA = "0xE9499C", Offset = "0xE9499C", VA = "0xE9499C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001A0F")]
		[Address(RVA = "0xE94A3C", Offset = "0xE94A3C", VA = "0xE94A3C")]
		private void EntitlementGranted()
		{
		}

		[Token(Token = "0x6001A10")]
		[Address(RVA = "0xE94AA4", Offset = "0xE94AA4", VA = "0xE94AA4")]
		private void EntitlementFailed([Optional] string message)
		{
		}

		[Token(Token = "0x6001A11")]
		[Address(RVA = "0xE949D4", Offset = "0xE949D4", VA = "0xE949D4")]
		[IteratorStateMachine(typeof(<EntitlementFailedRoutine>d__9))]
		private IEnumerator EntitlementFailedRoutine([Optional] string message)
		{
			return null;
		}

		[Token(Token = "0x6001A12")]
		[Address(RVA = "0xE94ADC", Offset = "0xE94ADC", VA = "0xE94ADC")]
		public EntitlementController()
		{
		}
	}
	[Token(Token = "0x20003D5")]
	public static class IAPManager
	{
		[Token(Token = "0x20003D6")]
		public delegate void ValidatedPurchasesHandler();

		[Token(Token = "0x4001390")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static ProductDefinition[] _products;

		[Token(Token = "0x1700033D")]
		public static ProductDefinition[] Products
		{
			[Token(Token = "0x6001A19")]
			[Address(RVA = "0xE94D1C", Offset = "0xE94D1C", VA = "0xE94D1C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x14000062")]
		public static event ValidatedPurchasesHandler ValidatedPurchasesEvent
		{
			[Token(Token = "0x6001A1A")]
			[Address(RVA = "0xE94DE8", Offset = "0xE94DE8", VA = "0xE94DE8")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001A1B")]
			[Address(RVA = "0xE94EA4", Offset = "0xE94EA4", VA = "0xE94EA4")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000063")]
		public static event ValidatedPurchasesHandler PostValidatedPurchasesEvent
		{
			[Token(Token = "0x6001A1C")]
			[Address(RVA = "0xE94F60", Offset = "0xE94F60", VA = "0xE94F60")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001A1D")]
			[Address(RVA = "0xE9501C", Offset = "0xE9501C", VA = "0xE9501C")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x6001A1E")]
		[Address(RVA = "0xE950D8", Offset = "0xE950D8", VA = "0xE950D8")]
		[RuntimeInitializeOnLoadMethod(RuntimeInitializeLoadType.BeforeSceneLoad)]
		private static void Init()
		{
		}

		[Token(Token = "0x6001A1F")]
		[Address(RVA = "0xE95190", Offset = "0xE95190", VA = "0xE95190")]
		private static void OnConnectedToPlatform(PlatformInterface platformInterface)
		{
		}

		[Token(Token = "0x6001A20")]
		[Address(RVA = "0xE95194", Offset = "0xE95194", VA = "0xE95194")]
		public static void UpdateAndValidatePurchases()
		{
		}

		[Token(Token = "0x6001A21")]
		[Address(RVA = "0xE953AC", Offset = "0xE953AC", VA = "0xE953AC")]
		public static void InitiateProductPurchase(ProductDefinition product)
		{
		}

		[Token(Token = "0x6001A22")]
		[Address(RVA = "0xE954A4", Offset = "0xE954A4", VA = "0xE954A4")]
		public static void SetProductOwned(ProductDefinition productToDisable, bool isOwned)
		{
		}

		[Token(Token = "0x6001A23")]
		[Address(RVA = "0xE95638", Offset = "0xE95638", VA = "0xE95638")]
		public static void DisableAllDLC()
		{
		}
	}
	[Token(Token = "0x20003D9")]
	[DefaultExecutionOrder(-10)]
	public class InputManager : MonoBehaviour
	{
		[Token(Token = "0x20003DA")]
		[CompilerGenerated]
		private sealed class <SetupCoroutine>d__36 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40013A7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40013A8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x17000344")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001A4C")]
				[Address(RVA = "0xE97E0C", Offset = "0xE97E0C", VA = "0xE97E0C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000345")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001A4E")]
				[Address(RVA = "0xE97E54", Offset = "0xE97E54", VA = "0xE97E54", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001A49")]
			[Address(RVA = "0xE96F24", Offset = "0xE96F24", VA = "0xE96F24")]
			[DebuggerHidden]
			public <SetupCoroutine>d__36(int <>1__state)
			{
			}

			[Token(Token = "0x6001A4A")]
			[Address(RVA = "0xE979FC", Offset = "0xE979FC", VA = "0xE979FC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001A4B")]
			[Address(RVA = "0xE97A00", Offset = "0xE97A00", VA = "0xE97A00", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001A4D")]
			[Address(RVA = "0xE97E14", Offset = "0xE97E14", VA = "0xE97E14", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001399")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static float undoDelay;

		[Token(Token = "0x400139A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static Dictionary<string, ControllerProfile> _profiles;

		[Token(Token = "0x400139B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static List<string> _undefinedProfiles;

		[Token(Token = "0x400139C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static string _lastUsedProfile;

		[Token(Token = "0x400139D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static FarBridge.Worlds.InputAction _upAction;

		[Token(Token = "0x400139E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static FarBridge.Worlds.InputAction _leftAction;

		[Token(Token = "0x400139F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static FarBridge.Worlds.InputAction _rightAction;

		[Token(Token = "0x40013A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private static FarBridge.Worlds.InputAction _downAction;

		[Token(Token = "0x40013A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private static AudioSource interactionSound;

		[Token(Token = "0x40013A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private static float hoverCoolDown;

		[Token(Token = "0x40013A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private static AudioClip hoverSound;

		[Token(Token = "0x40013A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private static AudioClip clickSound;

		[Token(Token = "0x40013A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public static readonly DefaultInputDevice defaultInputDevice;

		[Token(Token = "0x1700033E")]
		public static Handedness ActiveHand
		{
			[Token(Token = "0x6001A31")]
			[Address(RVA = "0xE962C4", Offset = "0xE962C4", VA = "0xE962C4")]
			[CompilerGenerated]
			get
			{
				return default(Handedness);
			}
			[Token(Token = "0x6001A32")]
			[Address(RVA = "0xE9631C", Offset = "0xE9631C", VA = "0xE9631C")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x1700033F")]
		public static string ActiveHandString
		{
			[Token(Token = "0x6001A33")]
			[Address(RVA = "0xE96378", Offset = "0xE96378", VA = "0xE96378")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000340")]
		public static bool IsLeftHandActive
		{
			[Token(Token = "0x6001A34")]
			[Address(RVA = "0xE96404", Offset = "0xE96404", VA = "0xE96404")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000341")]
		public static bool IsRightHandActive
		{
			[Token(Token = "0x6001A35")]
			[Address(RVA = "0xE96494", Offset = "0xE96494", VA = "0xE96494")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000342")]
		public static ControllerProfile ActiveProfile
		{
			[Token(Token = "0x6001A36")]
			[Address(RVA = "0xE96274", Offset = "0xE96274", VA = "0xE96274")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000343")]
		private static FarBridge.Worlds.InputDevice _activeDevice
		{
			[Token(Token = "0x6001A37")]
			[Address(RVA = "0xE96108", Offset = "0xE96108", VA = "0xE96108")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x14000064")]
		public static event Action ChangeHandEvent
		{
			[Token(Token = "0x6001A2E")]
			[Address(RVA = "0xE95E2C", Offset = "0xE95E2C", VA = "0xE95E2C")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001A2F")]
			[Address(RVA = "0xE95F04", Offset = "0xE95F04", VA = "0xE95F04")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x6001A30")]
		[Address(RVA = "0xE95FDC", Offset = "0xE95FDC", VA = "0xE95FDC")]
		public static FarBridge.Worlds.InputAction GetAction(UserActionType userActionType)
		{
			return null;
		}

		[Token(Token = "0x6001A38")]
		[Address(RVA = "0xE967D0", Offset = "0xE967D0", VA = "0xE967D0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001A39")]
		[Address(RVA = "0xE968AC", Offset = "0xE968AC", VA = "0xE968AC")]
		private void Start()
		{
		}

		[Token(Token = "0x6001A3A")]
		[Address(RVA = "0xE969B4", Offset = "0xE969B4", VA = "0xE969B4")]
		public static void OnHover()
		{
		}

		[Token(Token = "0x6001A3B")]
		[Address(RVA = "0xE96C28", Offset = "0xE96C28", VA = "0xE96C28")]
		public static void OnClick()
		{
		}

		[Token(Token = "0x6001A3C")]
		[Address(RVA = "0xE96DA8", Offset = "0xE96DA8", VA = "0xE96DA8")]
		private void ProfilesLoaded()
		{
		}

		[Token(Token = "0x6001A3D")]
		[Address(RVA = "0xE96EC4", Offset = "0xE96EC4", VA = "0xE96EC4")]
		[IteratorStateMachine(typeof(<SetupCoroutine>d__36))]
		private IEnumerator SetupCoroutine()
		{
			return null;
		}

		[Token(Token = "0x6001A3E")]
		[Address(RVA = "0xE96F4C", Offset = "0xE96F4C", VA = "0xE96F4C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001A3F")]
		[Address(RVA = "0xE97410", Offset = "0xE97410", VA = "0xE97410")]
		[RuntimeInitializeOnLoadMethod(RuntimeInitializeLoadType.BeforeSceneLoad)]
		public static void Init()
		{
		}

		[Token(Token = "0x6001A40")]
		[Address(RVA = "0xE975AC", Offset = "0xE975AC", VA = "0xE975AC")]
		public static void SetActiveHand(string hand)
		{
		}

		[Token(Token = "0x6001A41")]
		[Address(RVA = "0xE9763C", Offset = "0xE9763C", VA = "0xE9763C")]
		public static void SetActiveHand(Handedness hand)
		{
		}

		[Token(Token = "0x6001A42")]
		[Address(RVA = "0xE97798", Offset = "0xE97798", VA = "0xE97798")]
		public static void AddProfile(ControllerProfile profile)
		{
		}

		[Token(Token = "0x6001A43")]
		[Address(RVA = "0xE96524", Offset = "0xE96524", VA = "0xE96524")]
		private static ControllerProfile GetProfile(FarBridge.Worlds.InputDevice device)
		{
			return null;
		}

		[Token(Token = "0x6001A44")]
		[Address(RVA = "0xE97078", Offset = "0xE97078", VA = "0xE97078")]
		private static void UpdateActiveHand()
		{
		}

		[Token(Token = "0x6001A45")]
		[Address(RVA = "0xE971E0", Offset = "0xE971E0", VA = "0xE971E0")]
		private static void UpdateFilters()
		{
		}

		[Token(Token = "0x6001A46")]
		[Address(RVA = "0xE96B54", Offset = "0xE96B54", VA = "0xE96B54")]
		public static void Vibrate(float duration, float intensity)
		{
		}

		[Token(Token = "0x6001A47")]
		[Address(RVA = "0xE97820", Offset = "0xE97820", VA = "0xE97820")]
		public InputManager()
		{
		}
	}
	[Token(Token = "0x20003DB")]
	public enum ThumbInputMode
	{
		[Token(Token = "0x40013AA")]
		Touch,
		[Token(Token = "0x40013AB")]
		Press
	}
	[Token(Token = "0x20003DC")]
	public class PlayFabController : MonoBehaviour
	{
		[Token(Token = "0x20003DD")]
		public abstract class PlayFabRequest
		{
			[Token(Token = "0x17000350")]
			public Action<ErrorCallback> OnFailure
			{
				[Token(Token = "0x6001A75")]
				[Address(RVA = "0xE99694", Offset = "0xE99694", VA = "0xE99694")]
				[CompilerGenerated]
				get
				{
					return null;
				}
				[Token(Token = "0x6001A76")]
				[Address(RVA = "0xE9969C", Offset = "0xE9969C", VA = "0xE9969C")]
				[CompilerGenerated]
				set
				{
				}
			}

			[Token(Token = "0x6001A77")]
			[Address(RVA = "0xE996A4", Offset = "0xE996A4", VA = "0xE996A4")]
			protected PlayFabRequest()
			{
			}
		}

		[Token(Token = "0x20003DE")]
		public class PlayFabGetAllFilesRequest : PlayFabRequest
		{
			[Token(Token = "0x17000351")]
			public Action<Dictionary<string, byte[]>> OnSuccess
			{
				[Token(Token = "0x6001A78")]
				[Address(RVA = "0xE996AC", Offset = "0xE996AC", VA = "0xE996AC")]
				[CompilerGenerated]
				get
				{
					return null;
				}
				[Token(Token = "0x6001A79")]
				[Address(RVA = "0xE996B4", Offset = "0xE996B4", VA = "0xE996B4")]
				[CompilerGenerated]
				set
				{
				}
			}

			[Token(Token = "0x6001A7A")]
			[Address(RVA = "0xE984C0", Offset = "0xE984C0", VA = "0xE984C0")]
			public PlayFabGetAllFilesRequest()
			{
			}
		}

		[Token(Token = "0x20003DF")]
		public class PlayFabUploadAllFilesRequest : PlayFabRequest
		{
			[Token(Token = "0x17000352")]
			public Dictionary<string, byte[]> Files
			{
				[Token(Token = "0x6001A7B")]
				[Address(RVA = "0xE996BC", Offset = "0xE996BC", VA = "0xE996BC")]
				[CompilerGenerated]
				get
				{
					return null;
				}
				[Token(Token = "0x6001A7C")]
				[Address(RVA = "0xE996C4", Offset = "0xE996C4", VA = "0xE996C4")]
				[CompilerGenerated]
				set
				{
				}
			}

			[Token(Token = "0x17000353")]
			public Action OnSuccess
			{
				[Token(Token = "0x6001A7D")]
				[Address(RVA = "0xE996CC", Offset = "0xE996CC", VA = "0xE996CC")]
				[CompilerGenerated]
				get
				{
					return null;
				}
				[Token(Token = "0x6001A7E")]
				[Address(RVA = "0xE996D4", Offset = "0xE996D4", VA = "0xE996D4")]
				[CompilerGenerated]
				set
				{
				}
			}

			[Token(Token = "0x6001A7F")]
			[Address(RVA = "0xE98C2C", Offset = "0xE98C2C", VA = "0xE98C2C")]
			public PlayFabUploadAllFilesRequest()
			{
			}
		}

		[Token(Token = "0x20003E0")]
		public class PlayFabDeleteFilesRequest : PlayFabRequest
		{
			[Token(Token = "0x17000354")]
			public List<string> FileNames
			{
				[Token(Token = "0x6001A80")]
				[Address(RVA = "0xE996DC", Offset = "0xE996DC", VA = "0xE996DC")]
				[CompilerGenerated]
				get
				{
					return null;
				}
				[Token(Token = "0x6001A81")]
				[Address(RVA = "0xE996E4", Offset = "0xE996E4", VA = "0xE996E4")]
				[CompilerGenerated]
				set
				{
				}
			}

			[Token(Token = "0x17000355")]
			public Action OnSuccess
			{
				[Token(Token = "0x6001A82")]
				[Address(RVA = "0xE996EC", Offset = "0xE996EC", VA = "0xE996EC")]
				[CompilerGenerated]
				get
				{
					return null;
				}
				[Token(Token = "0x6001A83")]
				[Address(RVA = "0xE996F4", Offset = "0xE996F4", VA = "0xE996F4")]
				[CompilerGenerated]
				set
				{
				}
			}

			[Token(Token = "0x6001A84")]
			[Address(RVA = "0xE99340", Offset = "0xE99340", VA = "0xE99340")]
			public PlayFabDeleteFilesRequest()
			{
			}
		}

		[Token(Token = "0x20003E1")]
		public class ErrorCallback
		{
			[Token(Token = "0x17000356")]
			public IEnumerable<string> Errors
			{
				[Token(Token = "0x6001A85")]
				[Address(RVA = "0xE996FC", Offset = "0xE996FC", VA = "0xE996FC")]
				[CompilerGenerated]
				get
				{
					return null;
				}
				[Token(Token = "0x6001A86")]
				[Address(RVA = "0xE99704", Offset = "0xE99704", VA = "0xE99704")]
				[CompilerGenerated]
				private set
				{
				}
			}

			[Token(Token = "0x17000357")]
			public IEnumerable<PlayFabError> PlayFabErrors
			{
				[Token(Token = "0x6001A87")]
				[Address(RVA = "0xE9970C", Offset = "0xE9970C", VA = "0xE9970C")]
				[CompilerGenerated]
				get
				{
					return null;
				}
				[Token(Token = "0x6001A88")]
				[Address(RVA = "0xE99714", Offset = "0xE99714", VA = "0xE99714")]
				[CompilerGenerated]
				private set
				{
				}
			}

			[Token(Token = "0x6001A89")]
			[Address(RVA = "0xE9971C", Offset = "0xE9971C", VA = "0xE9971C")]
			public ErrorCallback(IEnumerable<string> errors, IEnumerable<PlayFabError> playFabErrors)
			{
			}
		}

		[Token(Token = "0x20003E3")]
		[CompilerGenerated]
		private sealed class <>c__DisplayClass58_0
		{
			[Token(Token = "0x40013C8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public PlayFabController <>4__this;

			[Token(Token = "0x40013C9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Dictionary<string, byte[]> payloads;

			[Token(Token = "0x40013CA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public List<string> errors;

			[Token(Token = "0x40013CB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public List<PlayFabError> playFabErrors;

			[Token(Token = "0x6001A94")]
			[Address(RVA = "0xE99908", Offset = "0xE99908", VA = "0xE99908")]
			public <>c__DisplayClass58_0()
			{
			}

			[Token(Token = "0x6001A95")]
			[Address(RVA = "0xE99910", Offset = "0xE99910", VA = "0xE99910")]
			internal bool <PlayFabGetAllFiles>b__0()
			{
				return default(bool);
			}

			[Token(Token = "0x6001A96")]
			[Address(RVA = "0xE9994C", Offset = "0xE9994C", VA = "0xE9994C")]
			internal void <PlayFabGetAllFiles>b__1(GetFilesResponse response)
			{
			}

			[Token(Token = "0x6001A97")]
			[Address(RVA = "0xE99CA0", Offset = "0xE99CA0", VA = "0xE99CA0")]
			internal void <PlayFabGetAllFiles>b__2(PlayFabError error)
			{
			}

			[Token(Token = "0x6001A98")]
			[Address(RVA = "0xE99CD0", Offset = "0xE99CD0", VA = "0xE99CD0")]
			internal bool <PlayFabGetAllFiles>b__3()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20003E6")]
		[CompilerGenerated]
		private sealed class <PlayFabGetAllFiles>d__58 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40013D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40013D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40013D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PlayFabController <>4__this;

			[Token(Token = "0x40013D4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private <>c__DisplayClass58_0 <>8__1;

			[Token(Token = "0x40013D5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public PlayFabGetAllFilesRequest request;

			[Token(Token = "0x17000358")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001AA0")]
				[Address(RVA = "0xE9A364", Offset = "0xE9A364", VA = "0xE9A364", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000359")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001AA2")]
				[Address(RVA = "0xE9A3AC", Offset = "0xE9A3AC", VA = "0xE9A3AC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001A9D")]
			[Address(RVA = "0xE993C0", Offset = "0xE993C0", VA = "0xE993C0")]
			[DebuggerHidden]
			public <PlayFabGetAllFiles>d__58(int <>1__state)
			{
			}

			[Token(Token = "0x6001A9E")]
			[Address(RVA = "0xE99DF0", Offset = "0xE99DF0", VA = "0xE99DF0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001A9F")]
			[Address(RVA = "0xE99DF4", Offset = "0xE99DF4", VA = "0xE99DF4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001AA1")]
			[Address(RVA = "0xE9A36C", Offset = "0xE9A36C", VA = "0xE9A36C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20003E7")]
		[CompilerGenerated]
		private sealed class <>c__DisplayClass59_0
		{
			[Token(Token = "0x40013D6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public PlayFabController <>4__this;

			[Token(Token = "0x40013D7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public IList<byte[]> files;

			[Token(Token = "0x40013D8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int filesLeft;

			[Token(Token = "0x40013D9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public List<string> errors;

			[Token(Token = "0x40013DA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public bool shouldAbortUploads;

			[Token(Token = "0x40013DB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public int fileCount;

			[Token(Token = "0x40013DC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public List<PlayFabError> playFabErrors;

			[Token(Token = "0x40013DD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public List<string> fileNames;

			[Token(Token = "0x40013DE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public Action<byte[]> <>9__5;

			[Token(Token = "0x40013DF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public Action<string> <>9__6;

			[Token(Token = "0x6001AA3")]
			[Address(RVA = "0xE9A3B4", Offset = "0xE9A3B4", VA = "0xE9A3B4")]
			public <>c__DisplayClass59_0()
			{
			}

			[Token(Token = "0x6001AA4")]
			[Address(RVA = "0xE9A3BC", Offset = "0xE9A3BC", VA = "0xE9A3BC")]
			internal bool <PlayFabUploadAllFiles>b__0()
			{
				return default(bool);
			}

			[Token(Token = "0x6001AA5")]
			[Address(RVA = "0xE9A3F8", Offset = "0xE9A3F8", VA = "0xE9A3F8")]
			internal void <PlayFabUploadAllFiles>b__1(InitiateFileUploadsResponse response)
			{
			}

			[Token(Token = "0x6001AA6")]
			[Address(RVA = "0xE9A600", Offset = "0xE9A600", VA = "0xE9A600")]
			internal void <PlayFabUploadAllFiles>b__5(byte[] _)
			{
			}

			[Token(Token = "0x6001AA7")]
			[Address(RVA = "0xE9A610", Offset = "0xE9A610", VA = "0xE9A610")]
			internal void <PlayFabUploadAllFiles>b__6(string error)
			{
			}

			[Token(Token = "0x6001AA8")]
			[Address(RVA = "0xE9A648", Offset = "0xE9A648", VA = "0xE9A648")]
			internal void <PlayFabUploadAllFiles>b__2(PlayFabError error)
			{
			}

			[Token(Token = "0x6001AA9")]
			[Address(RVA = "0xE9A680", Offset = "0xE9A680", VA = "0xE9A680")]
			internal bool <PlayFabUploadAllFiles>b__3()
			{
				return default(bool);
			}

			[Token(Token = "0x6001AAA")]
			[Address(RVA = "0xE9A690", Offset = "0xE9A690", VA = "0xE9A690")]
			internal void <PlayFabUploadAllFiles>b__7(GetFilesResponse response)
			{
			}

			[Token(Token = "0x6001AAB")]
			[Address(RVA = "0xE9AB94", Offset = "0xE9AB94", VA = "0xE9AB94")]
			internal void <PlayFabUploadAllFiles>b__8(PlayFabError error)
			{
			}

			[Token(Token = "0x6001AAC")]
			[Address(RVA = "0xE9ABC4", Offset = "0xE9ABC4", VA = "0xE9ABC4")]
			internal void <PlayFabUploadAllFiles>b__11(FinalizeFileUploadsResponse _)
			{
			}

			[Token(Token = "0x6001AAD")]
			[Address(RVA = "0xE9ACA4", Offset = "0xE9ACA4", VA = "0xE9ACA4")]
			internal void <PlayFabUploadAllFiles>b__12(PlayFabError error)
			{
			}

			[Token(Token = "0x6001AAE")]
			[Address(RVA = "0xE9ACC0", Offset = "0xE9ACC0", VA = "0xE9ACC0")]
			internal bool <PlayFabUploadAllFiles>b__4()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20003EA")]
		[CompilerGenerated]
		private sealed class <PlayFabUploadAllFiles>d__59 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40013E4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40013E5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40013E6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PlayFabController <>4__this;

			[Token(Token = "0x40013E7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private <>c__DisplayClass59_0 <>8__1;

			[Token(Token = "0x40013E8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public PlayFabUploadAllFilesRequest request;

			[Token(Token = "0x1700035A")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001AB6")]
				[Address(RVA = "0xE9B718", Offset = "0xE9B718", VA = "0xE9B718", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700035B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001AB8")]
				[Address(RVA = "0xE9B760", Offset = "0xE9B760", VA = "0xE9B760", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001AB3")]
			[Address(RVA = "0xE993E8", Offset = "0xE993E8", VA = "0xE993E8")]
			[DebuggerHidden]
			public <PlayFabUploadAllFiles>d__59(int <>1__state)
			{
			}

			[Token(Token = "0x6001AB4")]
			[Address(RVA = "0xE9AEA8", Offset = "0xE9AEA8", VA = "0xE9AEA8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001AB5")]
			[Address(RVA = "0xE9AEAC", Offset = "0xE9AEAC", VA = "0xE9AEAC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001AB7")]
			[Address(RVA = "0xE9B720", Offset = "0xE9B720", VA = "0xE9B720", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20003EB")]
		[CompilerGenerated]
		private sealed class <>c__DisplayClass60_0
		{
			[Token(Token = "0x40013E9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public PlayFabController <>4__this;

			[Token(Token = "0x40013EA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public List<PlayFabError> playFabErrors;

			[Token(Token = "0x6001AB9")]
			[Address(RVA = "0xE9B768", Offset = "0xE9B768", VA = "0xE9B768")]
			public <>c__DisplayClass60_0()
			{
			}

			[Token(Token = "0x6001ABA")]
			[Address(RVA = "0xE9B770", Offset = "0xE9B770", VA = "0xE9B770")]
			internal bool <PlayFabDeleteFiles>b__0()
			{
				return default(bool);
			}

			[Token(Token = "0x6001ABB")]
			[Address(RVA = "0xE9B7AC", Offset = "0xE9B7AC", VA = "0xE9B7AC")]
			internal void <PlayFabDeleteFiles>b__1(DeleteFilesResponse _)
			{
			}

			[Token(Token = "0x6001ABC")]
			[Address(RVA = "0xE9B7C8", Offset = "0xE9B7C8", VA = "0xE9B7C8")]
			internal void <PlayFabDeleteFiles>b__2(PlayFabError error)
			{
			}

			[Token(Token = "0x6001ABD")]
			[Address(RVA = "0xE9B7F8", Offset = "0xE9B7F8", VA = "0xE9B7F8")]
			internal bool <PlayFabDeleteFiles>b__3()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20003EC")]
		[CompilerGenerated]
		private sealed class <PlayFabDeleteFiles>d__60 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40013EB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40013EC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40013ED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PlayFabController <>4__this;

			[Token(Token = "0x40013EE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private <>c__DisplayClass60_0 <>8__1;

			[Token(Token = "0x40013EF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public PlayFabDeleteFilesRequest request;

			[Token(Token = "0x40013F0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private List<string> <errors>5__2;

			[Token(Token = "0x1700035C")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001AC1")]
				[Address(RVA = "0xE9BCA0", Offset = "0xE9BCA0", VA = "0xE9BCA0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700035D")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001AC3")]
				[Address(RVA = "0xE9BCE8", Offset = "0xE9BCE8", VA = "0xE9BCE8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001ABE")]
			[Address(RVA = "0xE99410", Offset = "0xE99410", VA = "0xE99410")]
			[DebuggerHidden]
			public <PlayFabDeleteFiles>d__60(int <>1__state)
			{
			}

			[Token(Token = "0x6001ABF")]
			[Address(RVA = "0xE9B81C", Offset = "0xE9B81C", VA = "0xE9B81C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001AC0")]
			[Address(RVA = "0xE9B820", Offset = "0xE9B820", VA = "0xE9B820", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001AC2")]
			[Address(RVA = "0xE9BCA8", Offset = "0xE9BCA8", VA = "0xE9BCA8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40013B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private string _entityId;

		[Token(Token = "0x40013B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string _entityType;

		[Token(Token = "0x17000346")]
		public static PlayFabController Instance
		{
			[Token(Token = "0x6001A4F")]
			[Address(RVA = "0xE97E5C", Offset = "0xE97E5C", VA = "0xE97E5C")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A50")]
			[Address(RVA = "0xE97EA4", Offset = "0xE97EA4", VA = "0xE97EA4")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000347")]
		public bool IsLoggedIn
		{
			[Token(Token = "0x6001A51")]
			[Address(RVA = "0xE97EF0", Offset = "0xE97EF0", VA = "0xE97EF0")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001A52")]
			[Address(RVA = "0xE97EF8", Offset = "0xE97EF8", VA = "0xE97EF8")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000348")]
		public bool IsLoggingIn
		{
			[Token(Token = "0x6001A53")]
			[Address(RVA = "0xE97F04", Offset = "0xE97F04", VA = "0xE97F04")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001A54")]
			[Address(RVA = "0xE97F0C", Offset = "0xE97F0C", VA = "0xE97F0C")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000349")]
		public string PlayFabId
		{
			[Token(Token = "0x6001A55")]
			[Address(RVA = "0xE97F18", Offset = "0xE97F18", VA = "0xE97F18")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A56")]
			[Address(RVA = "0xE97F20", Offset = "0xE97F20", VA = "0xE97F20")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x1700034A")]
		public bool IsNewlyCreatedAccount
		{
			[Token(Token = "0x6001A57")]
			[Address(RVA = "0xE97F28", Offset = "0xE97F28", VA = "0xE97F28")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001A58")]
			[Address(RVA = "0xE97F30", Offset = "0xE97F30", VA = "0xE97F30")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x1700034B")]
		public bool HasPendingFileOperations
		{
			[Token(Token = "0x6001A59")]
			[Address(RVA = "0xE97F3C", Offset = "0xE97F3C", VA = "0xE97F3C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700034C")]
		public bool IsDownloading
		{
			[Token(Token = "0x6001A5A")]
			[Address(RVA = "0xE97F64", Offset = "0xE97F64", VA = "0xE97F64")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001A5B")]
			[Address(RVA = "0xE97F6C", Offset = "0xE97F6C", VA = "0xE97F6C")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x1700034D")]
		public bool IsUploading
		{
			[Token(Token = "0x6001A5C")]
			[Address(RVA = "0xE97F78", Offset = "0xE97F78", VA = "0xE97F78")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001A5D")]
			[Address(RVA = "0xE97F80", Offset = "0xE97F80", VA = "0xE97F80")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x1700034E")]
		public bool IsDeleting
		{
			[Token(Token = "0x6001A5E")]
			[Address(RVA = "0xE97F8C", Offset = "0xE97F8C", VA = "0xE97F8C")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001A5F")]
			[Address(RVA = "0xE97F94", Offset = "0xE97F94", VA = "0xE97F94")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x1700034F")]
		public static bool OfflineMode
		{
			[Token(Token = "0x6001A60")]
			[Address(RVA = "0xE97FA0", Offset = "0xE97FA0", VA = "0xE97FA0")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001A61")]
			[Address(RVA = "0xE97FE8", Offset = "0xE97FE8", VA = "0xE97FE8")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x6001A62")]
		[Address(RVA = "0xE98034", Offset = "0xE98034", VA = "0xE98034")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001A63")]
		[Address(RVA = "0xE93E30", Offset = "0xE93E30", VA = "0xE93E30")]
		public void Login()
		{
		}

		[Token(Token = "0x6001A64")]
		[Address(RVA = "0xE980C0", Offset = "0xE980C0", VA = "0xE980C0")]
		private void OnLoginSuccess(LoginResult result)
		{
		}

		[Token(Token = "0x6001A65")]
		[Address(RVA = "0xE981BC", Offset = "0xE981BC", VA = "0xE981BC")]
		private void OnLoginFailure(PlayFabError error)
		{
		}

		[Token(Token = "0x6001A66")]
		[Address(RVA = "0xE932FC", Offset = "0xE932FC", VA = "0xE932FC")]
		public void OnConnectionLost()
		{
		}

		[Token(Token = "0x6001A67")]
		[Address(RVA = "0xE98328", Offset = "0xE98328", VA = "0xE98328")]
		public void GetAllFiles(Action<IDictionary<string, byte[]>> onSuccess, string onFailure)
		{
		}

		[Token(Token = "0x6001A68")]
		[Address(RVA = "0xE98380", Offset = "0xE98380", VA = "0xE98380")]
		public void GetAllFiles(Action<IDictionary<string, byte[]>> onSuccess, Action<ErrorCallback> onFailure)
		{
		}

		[Token(Token = "0x6001A69")]
		[Address(RVA = "0xE98540", Offset = "0xE98540", VA = "0xE98540")]
		public void UploadData(Dictionary<string, object> data)
		{
		}

		[Token(Token = "0x6001A6A")]
		[Address(RVA = "0xE98A5C", Offset = "0xE98A5C", VA = "0xE98A5C")]
		public void UploadData(Dictionary<string, object> data, Action onSuccess)
		{
		}

		[Token(Token = "0x6001A6B")]
		[Address(RVA = "0xE9876C", Offset = "0xE9876C", VA = "0xE9876C")]
		public void UploadData(Dictionary<string, object> data, Action onSuccess, Action<ErrorCallback> onFailure)
		{
		}

		[Token(Token = "0x6001A6C")]
		[Address(RVA = "0xE98CAC", Offset = "0xE98CAC", VA = "0xE98CAC")]
		public void DeleteFiles(IList<string> fileNames)
		{
		}

		[Token(Token = "0x6001A6D")]
		[Address(RVA = "0xE99124", Offset = "0xE99124", VA = "0xE99124")]
		public void DeleteFiles(IList<string> fileNames, Action onSuccess)
		{
		}

		[Token(Token = "0x6001A6E")]
		[Address(RVA = "0xE98F24", Offset = "0xE98F24", VA = "0xE98F24")]
		public void DeleteFiles(IList<string> fileNames, Action onSuccess, Action<ErrorCallback> onFailure)
		{
		}

		[Token(Token = "0x6001A6F")]
		[Address(RVA = "0xE984C8", Offset = "0xE984C8", VA = "0xE984C8")]
		[IteratorStateMachine(typeof(<PlayFabGetAllFiles>d__58))]
		private IEnumerator PlayFabGetAllFiles(PlayFabGetAllFilesRequest request)
		{
			return null;
		}

		[Token(Token = "0x6001A70")]
		[Address(RVA = "0xE98C34", Offset = "0xE98C34", VA = "0xE98C34")]
		[IteratorStateMachine(typeof(<PlayFabUploadAllFiles>d__59))]
		private IEnumerator PlayFabUploadAllFiles(PlayFabUploadAllFilesRequest request)
		{
			return null;
		}

		[Token(Token = "0x6001A71")]
		[Address(RVA = "0xE99348", Offset = "0xE99348", VA = "0xE99348")]
		[IteratorStateMachine(typeof(<PlayFabDeleteFiles>d__60))]
		private IEnumerator PlayFabDeleteFiles(PlayFabDeleteFilesRequest request)
		{
			return null;
		}

		[Token(Token = "0x6001A72")]
		[Address(RVA = "0xE99438", Offset = "0xE99438", VA = "0xE99438")]
		private void OnSharedFailure(PlayFabError error, List<PlayFabError> playFabErrors)
		{
		}

		[Token(Token = "0x6001A73")]
		[Address(RVA = "0xE99588", Offset = "0xE99588", VA = "0xE99588")]
		private void OnSharedFailure(string error, List<string> errors)
		{
		}

		[Token(Token = "0x6001A74")]
		[Address(RVA = "0xE9968C", Offset = "0xE9968C", VA = "0xE9968C")]
		public PlayFabController()
		{
		}
	}
	[Token(Token = "0x20003ED")]
	public class SavableController : MonoBehaviour
	{
		[Token(Token = "0x6001AC4")]
		[Address(RVA = "0xE9BCF0", Offset = "0xE9BCF0", VA = "0xE9BCF0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001AC5")]
		[Address(RVA = "0xE9BE88", Offset = "0xE9BE88", VA = "0xE9BE88")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001AC6")]
		[Address(RVA = "0xE9C020", Offset = "0xE9C020", VA = "0xE9C020")]
		private void OnApplicationQuit()
		{
		}

		[Token(Token = "0x6001AC7")]
		[Address(RVA = "0xE9C078", Offset = "0xE9C078", VA = "0xE9C078")]
		private void OnSceneChanged(Scene from, Scene to)
		{
		}

		[Token(Token = "0x6001AC8")]
		[Address(RVA = "0xE9C10C", Offset = "0xE9C10C", VA = "0xE9C10C")]
		private void OnXRFocusLost()
		{
		}

		[Token(Token = "0x6001AC9")]
		[Address(RVA = "0xE9C110", Offset = "0xE9C110", VA = "0xE9C110")]
		private static void OnConnectToPlayFab()
		{
		}

		[Token(Token = "0x6001ACA")]
		[Address(RVA = "0xE9C1A4", Offset = "0xE9C1A4", VA = "0xE9C1A4")]
		private static void OnConnectedToPlatform(PlatformInterface platformInterface)
		{
		}

		[Token(Token = "0x6001ACB")]
		[Address(RVA = "0xE9C324", Offset = "0xE9C324", VA = "0xE9C324")]
		public SavableController()
		{
		}
	}
	[Token(Token = "0x20003EE")]
	public class SettingsPanel : MonoBehaviour, IProfileActivatedHandler, IProfileHandler, IProfilesChangedHandler
	{
		[Token(Token = "0x40013F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UIValueRange PutterStrengthPicker;

		[Token(Token = "0x40013F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UIValueRange PutterAnglePicker;

		[Token(Token = "0x40013F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SavableToggle GripToPuttToggle;

		[Token(Token = "0x40013F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public SavableToggle InvertHandsToggle;

		[Token(Token = "0x40013F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public SavableStringToggle PutterHandToggle;

		[Token(Token = "0x40013F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public SavableToggle CustomGripToggle;

		[Token(Token = "0x40013F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public SavableToggle LockBallPositionToggle;

		[Token(Token = "0x40013F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public UIValueRange AutoAlignDistanceToBall;

		[Token(Token = "0x40013F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public SavableToggle SmoothRotationToggle;

		[Token(Token = "0x40013FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public UIValueRange RotationSpeedPicker;

		[Token(Token = "0x40013FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public SavableToggle SmoothLocomotionToggle;

		[Token(Token = "0x40013FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public UIValueRange LocomtionSpeedPicker;

		[Token(Token = "0x40013FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public UIValueRange SoundEffectVolumePicker;

		[Token(Token = "0x40013FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public UIValueRange MusicVolumePicker;

		[Token(Token = "0x40013FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public UIValueRange VoiceChatVolumePicker;

		[Token(Token = "0x4001400")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public SavableToggle StrokeLimitToggle;

		[Token(Token = "0x4001401")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public SavableToggle BallLocatorToggle;

		[Token(Token = "0x4001402")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public SavableToggle BallTrailToggle;

		[Token(Token = "0x4001403")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public SavableToggle NametagsToggle;

		[Token(Token = "0x4001404")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public SavableToggle TurnNotificationsToggle;

		[Token(Token = "0x4001405")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public SavableToggle OpponentScoreNotificationsToggle;

		[Token(Token = "0x6001ACC")]
		[Address(RVA = "0xE9C32C", Offset = "0xE9C32C", VA = "0xE9C32C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001ACD")]
		[Address(RVA = "0xE9C6FC", Offset = "0xE9C6FC", VA = "0xE9C6FC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001ACE")]
		[Address(RVA = "0xE9C7A0", Offset = "0xE9C7A0", VA = "0xE9C7A0", Slot = "4")]
		public void OnProfileActivated(ProfileData profile)
		{
		}

		[Token(Token = "0x6001ACF")]
		[Address(RVA = "0xE9C7FC", Offset = "0xE9C7FC", VA = "0xE9C7FC", Slot = "5")]
		public void OnProfilesChanged(ProfileData[] profiles)
		{
		}

		[Token(Token = "0x6001AD0")]
		[Address(RVA = "0xE9C38C", Offset = "0xE9C38C", VA = "0xE9C38C")]
		private void UpdateSettingsPanel()
		{
		}

		[Token(Token = "0x6001AD1")]
		[Address(RVA = "0xE9C858", Offset = "0xE9C858", VA = "0xE9C858")]
		public SettingsPanel()
		{
		}
	}
	[Token(Token = "0x20003EF")]
	public static class VersionManager
	{
		[Token(Token = "0x4001406")]
		private const string _versionAssetPathInResources = "AppVersion_Weywot";

		[Token(Token = "0x4001407")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static VersionAsset _versionAsset;

		[Token(Token = "0x1700035E")]
		public static VersionAsset VersionAsset
		{
			[Token(Token = "0x6001AD2")]
			[Address(RVA = "0xE9C860", Offset = "0xE9C860", VA = "0xE9C860")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001AD3")]
		[Address(RVA = "0xE9C928", Offset = "0xE9C928", VA = "0xE9C928")]
		public static int CompareVersions(string a, string b)
		{
			return default(int);
		}

		[Token(Token = "0x6001AD4")]
		[Address(RVA = "0xE9CEC0", Offset = "0xE9CEC0", VA = "0xE9CEC0")]
		[RuntimeInitializeOnLoadMethod(RuntimeInitializeLoadType.BeforeSceneLoad)]
		public static void Init()
		{
		}
	}
	[Token(Token = "0x20003F1")]
	public class WeywotPlatformData : ScriptableObject
	{
		[Token(Token = "0x400140F")]
		private const string pathInResources = "WeywotPlatformData";

		[Token(Token = "0x4001410")]
		private const string pathInProject = "Assets/FarBridge/Weywot/Resources/";

		[Token(Token = "0x4001411")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Platform Platform;

		[Token(Token = "0x4001412")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool Vr;

		[Token(Token = "0x4001413")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Recorder.MicType MicType;

		[Token(Token = "0x1700035F")]
		public static WeywotPlatformData Instance
		{
			[Token(Token = "0x6001ADD")]
			[Address(RVA = "0xE9D144", Offset = "0xE9D144", VA = "0xE9D144")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001ADE")]
		[Address(RVA = "0xE9D250", Offset = "0xE9D250", VA = "0xE9D250")]
		public static bool Initialize()
		{
			return default(bool);
		}

		[Token(Token = "0x6001ADF")]
		[Address(RVA = "0xE9D2B4", Offset = "0xE9D2B4", VA = "0xE9D2B4")]
		public WeywotPlatformData()
		{
		}
	}
}
namespace Mighty
{
	[Token(Token = "0x20003F2")]
	public class Actions : MonoBehaviour
	{
		[Token(Token = "0x4001414")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<Action> actions;

		[Token(Token = "0x4001416")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float interval;

		[Token(Token = "0x4001417")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int i;

		[Token(Token = "0x4001418")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Dictionary<string, object> scope;

		[Token(Token = "0x4001419")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Action _callback;

		[Token(Token = "0x400141A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public bool silent;

		[Token(Token = "0x17000360")]
		public bool running
		{
			[Token(Token = "0x6001AE0")]
			[Address(RVA = "0xE9D2C4", Offset = "0xE9D2C4", VA = "0xE9D2C4")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001AE1")]
			[Address(RVA = "0xE9D2CC", Offset = "0xE9D2CC", VA = "0xE9D2CC")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x6001AE2")]
		[Address(RVA = "0xE9D2D8", Offset = "0xE9D2D8", VA = "0xE9D2D8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001AE3")]
		[Address(RVA = "0xE9D2E0", Offset = "0xE9D2E0", VA = "0xE9D2E0")]
		private void Update()
		{
		}

		[Token(Token = "0x6001AE4")]
		[Address(RVA = "0xE9D3E4", Offset = "0xE9D3E4", VA = "0xE9D3E4")]
		private void OnStart()
		{
		}

		[Token(Token = "0x6001AE5")]
		[Address(RVA = "0xE9D3B4", Offset = "0xE9D3B4", VA = "0xE9D3B4")]
		private void OnComplete()
		{
		}

		[Token(Token = "0x6001AE6")]
		[Address(RVA = "0xE9D4A0", Offset = "0xE9D4A0", VA = "0xE9D4A0")]
		private void OnTerminate()
		{
		}

		[Token(Token = "0x6001AE7")]
		[Address(RVA = "0xE9D3E8", Offset = "0xE9D3E8", VA = "0xE9D3E8")]
		public void Empty()
		{
		}

		[Token(Token = "0x6001AE8")]
		[Address(RVA = "0xE9D4A4", Offset = "0xE9D4A4", VA = "0xE9D4A4")]
		public void SetCallback(Action Callback)
		{
		}

		[Token(Token = "0x6001AE9")]
		[Address(RVA = "0xE9D4AC", Offset = "0xE9D4AC", VA = "0xE9D4AC")]
		public void SetScope(string key, bool val)
		{
		}

		[Token(Token = "0x6001AEA")]
		[Address(RVA = "0xE9D548", Offset = "0xE9D548", VA = "0xE9D548")]
		public void SetScope(string key, string val)
		{
		}

		[Token(Token = "0x6001AEB")]
		[Address(RVA = "0xE9D5B0", Offset = "0xE9D5B0", VA = "0xE9D5B0")]
		public void Advance()
		{
		}

		[Token(Token = "0x6001AEC")]
		[Address(RVA = "0xE9D660", Offset = "0xE9D660", VA = "0xE9D660")]
		public void Goto(int step)
		{
		}

		[Token(Token = "0x6001AED")]
		[Address(RVA = "0xE9D820", Offset = "0xE9D820", VA = "0xE9D820")]
		private void Push(Action action)
		{
		}

		[Token(Token = "0x6001AEE")]
		[Address(RVA = "0xE9D8D4", Offset = "0xE9D8D4", VA = "0xE9D8D4")]
		public void Call(Action<Dictionary<string, object>> method)
		{
		}

		[Token(Token = "0x6001AEF")]
		[Address(RVA = "0xE9D9A8", Offset = "0xE9D9A8", VA = "0xE9D9A8")]
		public void Call(Action method)
		{
		}

		[Token(Token = "0x6001AF0")]
		[Address(RVA = "0xE9DA7C", Offset = "0xE9DA7C", VA = "0xE9DA7C")]
		public void Action(Action<Dictionary<string, object>> method)
		{
		}

		[Token(Token = "0x6001AF1")]
		[Address(RVA = "0xE9DB50", Offset = "0xE9DB50", VA = "0xE9DB50")]
		public void Action(Action method)
		{
		}

		[Token(Token = "0x6001AF2")]
		[Address(RVA = "0xE9DC24", Offset = "0xE9DC24", VA = "0xE9DC24")]
		public void Wait(float seconds)
		{
		}

		[Token(Token = "0x6001AF3")]
		[Address(RVA = "0xE9DCF8", Offset = "0xE9DCF8", VA = "0xE9DCF8")]
		public void Terminate([Optional] string error)
		{
		}

		[Token(Token = "0x6001AF4")]
		[Address(RVA = "0xE9DDB8", Offset = "0xE9DDB8", VA = "0xE9DDB8")]
		public void Terminate(Action callback)
		{
		}

		[Token(Token = "0x6001AF5")]
		[Address(RVA = "0xE9DDE8", Offset = "0xE9DDE8", VA = "0xE9DDE8")]
		public void Terminate(Action<Dictionary<string, object>> callback)
		{
		}

		[Token(Token = "0x6001AF6")]
		[Address(RVA = "0xE9D8F0", Offset = "0xE9D8F0", VA = "0xE9D8F0")]
		private Action Synchronous(Action<Dictionary<string, object>> method)
		{
			return null;
		}

		[Token(Token = "0x6001AF7")]
		[Address(RVA = "0xE9D9C4", Offset = "0xE9D9C4", VA = "0xE9D9C4")]
		private Action Synchronous(Action method)
		{
			return null;
		}

		[Token(Token = "0x6001AF8")]
		[Address(RVA = "0xE9DA98", Offset = "0xE9DA98", VA = "0xE9DA98")]
		private Action Asyncronous(Action<Dictionary<string, object>> method)
		{
			return null;
		}

		[Token(Token = "0x6001AF9")]
		[Address(RVA = "0xE9DB6C", Offset = "0xE9DB6C", VA = "0xE9DB6C")]
		private Action Asyncronous(Action method)
		{
			return null;
		}

		[Token(Token = "0x6001AFA")]
		[Address(RVA = "0xE9DE4C", Offset = "0xE9DE4C", VA = "0xE9DE4C")]
		public Actions()
		{
		}
	}
	[Token(Token = "0x20003F8")]
	public class Avatar : MonoBehaviour
	{
		[Token(Token = "0x4001425")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int version;

		[Token(Token = "0x4001427")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Mouth mouth;

		[Token(Token = "0x4001428")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Voice voice;

		[Token(Token = "0x4001429")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Eyes eyes;

		[Token(Token = "0x400142A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Rig rig;

		[Token(Token = "0x400142B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Meshes meshes;

		[Token(Token = "0x17000361")]
		public SkinnedMeshRenderer render
		{
			[Token(Token = "0x6001B05")]
			[Address(RVA = "0xE9E00C", Offset = "0xE9E00C", VA = "0xE9E00C")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001B06")]
			[Address(RVA = "0xE9E014", Offset = "0xE9E014", VA = "0xE9E014")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000362")]
		public LightProbeUsage lightProbeUsage
		{
			[Token(Token = "0x6001B0B")]
			[Address(RVA = "0xE9E0E8", Offset = "0xE9E0E8", VA = "0xE9E0E8")]
			get
			{
				return default(LightProbeUsage);
			}
			[Token(Token = "0x6001B0C")]
			[Address(RVA = "0xE9E10C", Offset = "0xE9E10C", VA = "0xE9E10C")]
			set
			{
			}
		}

		[Token(Token = "0x6001B07")]
		[Address(RVA = "0xE9E01C", Offset = "0xE9E01C", VA = "0xE9E01C")]
		public void SetLayer(string layer)
		{
		}

		[Token(Token = "0x6001B08")]
		[Address(RVA = "0xE9E060", Offset = "0xE9E060", VA = "0xE9E060")]
		public int GetWindingOrder(Category c)
		{
			return default(int);
		}

		[Token(Token = "0x6001B09")]
		[Address(RVA = "0xE9E07C", Offset = "0xE9E07C", VA = "0xE9E07C")]
		public void SetWindingOrder(Category c, int order)
		{
		}

		[Token(Token = "0x6001B0A")]
		[Address(RVA = "0xE9E0CC", Offset = "0xE9E0CC", VA = "0xE9E0CC")]
		public bool HasMesh(Category c)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B0D")]
		[Address(RVA = "0xE9E130", Offset = "0xE9E130", VA = "0xE9E130")]
		public void TurnOffLightProbes()
		{
		}

		[Token(Token = "0x6001B0E")]
		[Address(RVA = "0xE9E138", Offset = "0xE9E138", VA = "0xE9E138")]
		public static Avatar Create(Mesh mesh, Material material, [Optional] AudioSource source, [Optional] Meshes meshes)
		{
			return null;
		}

		[Token(Token = "0x6001B0F")]
		[Address(RVA = "0xE9E41C", Offset = "0xE9E41C", VA = "0xE9E41C")]
		public Avatar()
		{
		}
	}
	[Token(Token = "0x20003F9")]
	public class AvatarEditor : MonoBehaviour, IProfileActivatedHandler, IProfileHandler, IProfileDeactivatedHandler
	{
		[Token(Token = "0x20003FA")]
		[CompilerGenerated]
		private sealed class <SequencedProfileLoad>d__30 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001441")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001442")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001443")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public AvatarEditor <>4__this;

			[Token(Token = "0x4001444")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public ProfileData profile;

			[Token(Token = "0x4001445")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int <i>5__2;

			[Token(Token = "0x1700036D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001B4E")]
				[Address(RVA = "0xEA372C", Offset = "0xEA372C", VA = "0xEA372C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700036E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001B50")]
				[Address(RVA = "0xEA3774", Offset = "0xEA3774", VA = "0xEA3774", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001B4B")]
			[Address(RVA = "0xE9F844", Offset = "0xE9F844", VA = "0xE9F844")]
			[DebuggerHidden]
			public <SequencedProfileLoad>d__30(int <>1__state)
			{
			}

			[Token(Token = "0x6001B4C")]
			[Address(RVA = "0xEA3314", Offset = "0xEA3314", VA = "0xEA3314", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001B4D")]
			[Address(RVA = "0xEA3318", Offset = "0xEA3318", VA = "0xEA3318", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001B4F")]
			[Address(RVA = "0xEA3734", Offset = "0xEA3734", VA = "0xEA3734", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400142C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<Data> categories;

		[Token(Token = "0x400142D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<Data> channels;

		[Token(Token = "0x400142E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<Data> items;

		[Token(Token = "0x400142F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<Data> colors;

		[Token(Token = "0x4001430")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public TextMeshProUGUI header;

		[Token(Token = "0x4001431")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[Header("Views")]
		public View categoriesView;

		[Token(Token = "0x4001432")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public View channelsView;

		[Token(Token = "0x4001433")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public View itemsView;

		[Token(Token = "0x4001434")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public View colorsView;

		[Token(Token = "0x4001435")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public View next;

		[Token(Token = "0x4001436")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public View prev;

		[Token(Token = "0x4001437")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[Header("Mirror")]
		public Mirror mirror;

		[Token(Token = "0x4001438")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Data channel;

		[Token(Token = "0x4001439")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Data category;

		[Token(Token = "0x400143A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Data hovering;

		[Token(Token = "0x400143B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private ProfileData profile;

		[Token(Token = "0x400143C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Collection collection;

		[Token(Token = "0x400143D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public bool hoverSelect;

		[Token(Token = "0x400143E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Page page;

		[Token(Token = "0x400143F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public Rule[] rules;

		[Token(Token = "0x4001440")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private Dictionary<Category, Rule> _rules;

		[Token(Token = "0x17000363")]
		private bool IsRequiredCategory
		{
			[Token(Token = "0x6001B33")]
			[Address(RVA = "0xEA22E4", Offset = "0xEA22E4", VA = "0xEA22E4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000364")]
		private bool NothingSelected
		{
			[Token(Token = "0x6001B34")]
			[Address(RVA = "0xE9FF98", Offset = "0xE9FF98", VA = "0xE9FF98")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000365")]
		private bool shouldShowNoneOption
		{
			[Token(Token = "0x6001B35")]
			[Address(RVA = "0xEA0954", Offset = "0xEA0954", VA = "0xEA0954")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000366")]
		public bool IsColorChannel
		{
			[Token(Token = "0x6001B37")]
			[Address(RVA = "0xE9FB44", Offset = "0xE9FB44", VA = "0xE9FB44")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000367")]
		private bool HasNoneSwatch
		{
			[Token(Token = "0x6001B39")]
			[Address(RVA = "0xEA0018", Offset = "0xEA0018", VA = "0xEA0018")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000368")]
		private bool HasLoadedProfile
		{
			[Token(Token = "0x6001B3A")]
			[Address(RVA = "0xE9F86C", Offset = "0xE9F86C", VA = "0xE9F86C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000369")]
		private bool IsPresetView
		{
			[Token(Token = "0x6001B3C")]
			[Address(RVA = "0xEA00C0", Offset = "0xEA00C0", VA = "0xEA00C0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700036A")]
		public Avatars avatars
		{
			[Token(Token = "0x6001B44")]
			[Address(RVA = "0xEA2FE0", Offset = "0xEA2FE0", VA = "0xEA2FE0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700036B")]
		public Library library
		{
			[Token(Token = "0x6001B45")]
			[Address(RVA = "0xE9F054", Offset = "0xE9F054", VA = "0xE9F054")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700036C")]
		public Photographer photographer
		{
			[Token(Token = "0x6001B46")]
			[Address(RVA = "0xEA12AC", Offset = "0xEA12AC", VA = "0xEA12AC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001B10")]
		[Address(RVA = "0xE9E424", Offset = "0xE9E424", VA = "0xE9E424")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001B11")]
		[Address(RVA = "0xE9E500", Offset = "0xE9E500", VA = "0xE9E500")]
		private void Start()
		{
		}

		[Token(Token = "0x6001B12")]
		[Address(RVA = "0xE9E428", Offset = "0xE9E428", VA = "0xE9E428")]
		private void Index()
		{
		}

		[Token(Token = "0x6001B13")]
		[Address(RVA = "0xE9E608", Offset = "0xE9E608", VA = "0xE9E608")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001B14")]
		[Address(RVA = "0xE9E844", Offset = "0xE9E844", VA = "0xE9E844")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001B15")]
		[Address(RVA = "0xE9EB88", Offset = "0xE9EB88", VA = "0xE9EB88", Slot = "4")]
		public void OnProfileActivated(ProfileData profile)
		{
		}

		[Token(Token = "0x6001B16")]
		[Address(RVA = "0xE9EBA8", Offset = "0xE9EBA8", VA = "0xE9EBA8", Slot = "5")]
		public void OnProfileDeactivate(ProfileData profile)
		{
		}

		[Token(Token = "0x6001B17")]
		[Address(RVA = "0xE9EBAC", Offset = "0xE9EBAC", VA = "0xE9EBAC")]
		private string NameOf(ProfileData _profile)
		{
			return null;
		}

		[Token(Token = "0x6001B18")]
		[Address(RVA = "0xE9EC14", Offset = "0xE9EC14", VA = "0xE9EC14")]
		private void LoadProfile(ProfileData profile)
		{
		}

		[Token(Token = "0x6001B19")]
		[Address(RVA = "0xE9E7D0", Offset = "0xE9E7D0", VA = "0xE9E7D0")]
		[IteratorStateMachine(typeof(<SequencedProfileLoad>d__30))]
		private IEnumerator SequencedProfileLoad(ProfileData profile)
		{
			return null;
		}

		[Token(Token = "0x6001B1A")]
		[Address(RVA = "0xE9E8CC", Offset = "0xE9E8CC", VA = "0xE9E8CC")]
		private void SaveProfile()
		{
		}

		[Token(Token = "0x6001B1B")]
		[Address(RVA = "0xE9FA14", Offset = "0xE9FA14", VA = "0xE9FA14")]
		private void OnSelectChannel(Data _channel)
		{
		}

		[Token(Token = "0x6001B1C")]
		[Address(RVA = "0xE9FAC8", Offset = "0xE9FAC8", VA = "0xE9FAC8")]
		private void OnSelectCategory(Data _category)
		{
		}

		[Token(Token = "0x6001B1D")]
		[Address(RVA = "0xE9FCC8", Offset = "0xE9FCC8", VA = "0xE9FCC8")]
		public void OnNext()
		{
		}

		[Token(Token = "0x6001B1E")]
		[Address(RVA = "0xE9FD60", Offset = "0xE9FD60", VA = "0xE9FD60")]
		public void OnPrev()
		{
		}

		[Token(Token = "0x6001B1F")]
		[Address(RVA = "0xE9FD90", Offset = "0xE9FD90", VA = "0xE9FD90")]
		private void OnSelectItem(Data item)
		{
		}

		[Token(Token = "0x6001B20")]
		[Address(RVA = "0xEA01A4", Offset = "0xEA01A4", VA = "0xEA01A4")]
		private void OnHoverItem(Data item, bool hover)
		{
		}

		[Token(Token = "0x6001B21")]
		[Address(RVA = "0xEA02F0", Offset = "0xEA02F0", VA = "0xEA02F0")]
		private void OnSelectColor(Data color)
		{
		}

		[Token(Token = "0x6001B22")]
		[Address(RVA = "0xE9FA40", Offset = "0xE9FA40", VA = "0xE9FA40")]
		private void UpdateMultiSelect()
		{
		}

		[Token(Token = "0x6001B23")]
		[Address(RVA = "0xE9FC18", Offset = "0xE9FC18", VA = "0xE9FC18")]
		private void UpdateChannels()
		{
		}

		[Token(Token = "0x6001B24")]
		[Address(RVA = "0xE9F694", Offset = "0xE9F694", VA = "0xE9F694")]
		private void UpdateCategories()
		{
		}

		[Token(Token = "0x6001B25")]
		[Address(RVA = "0xE9F4BC", Offset = "0xE9F4BC", VA = "0xE9F4BC")]
		private void UpdateItems()
		{
		}

		[Token(Token = "0x6001B26")]
		[Address(RVA = "0xEA05F0", Offset = "0xEA05F0", VA = "0xEA05F0")]
		private void UpdateStyles()
		{
		}

		[Token(Token = "0x6001B27")]
		[Address(RVA = "0xEA0A9C", Offset = "0xEA0A9C", VA = "0xEA0A9C")]
		private void SetOptionColors(List<Option> _options, byte color)
		{
		}

		[Token(Token = "0x6001B28")]
		[Address(RVA = "0xE9F518", Offset = "0xE9F518", VA = "0xE9F518")]
		private void UpdateColors()
		{
		}

		[Token(Token = "0x6001B29")]
		[Address(RVA = "0xEA0F4C", Offset = "0xEA0F4C", VA = "0xEA0F4C")]
		private void SetColors(List<Option> available)
		{
		}

		[Token(Token = "0x6001B2A")]
		[Address(RVA = "0xEA0D70", Offset = "0xEA0D70", VA = "0xEA0D70")]
		private void RenderOptions(List<Option> selected, List<Option> available)
		{
		}

		[Token(Token = "0x6001B2B")]
		[Address(RVA = "0xE9FCF8", Offset = "0xE9FCF8", VA = "0xE9FCF8")]
		private void UpdatePaging()
		{
		}

		[Token(Token = "0x6001B2C")]
		[Address(RVA = "0xE9F414", Offset = "0xE9F414", VA = "0xE9F414")]
		private void StartState()
		{
		}

		[Token(Token = "0x6001B2D")]
		[Address(RVA = "0xEA211C", Offset = "0xEA211C", VA = "0xEA211C")]
		private bool HasRule(Category type)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B2E")]
		[Address(RVA = "0xEA0A3C", Offset = "0xEA0A3C", VA = "0xEA0A3C")]
		private bool IsGlobalColor(Data category)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B2F")]
		[Address(RVA = "0xE9FF10", Offset = "0xE9FF10", VA = "0xE9FF10")]
		private bool IsMultiselect(Category type)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B30")]
		[Address(RVA = "0xEA21FC", Offset = "0xEA21FC", VA = "0xEA21FC")]
		private bool IsMultiselect(Data _category)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B31")]
		[Address(RVA = "0xEA2174", Offset = "0xEA2174", VA = "0xEA2174")]
		private bool IsGlobalColor(Category type)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B32")]
		[Address(RVA = "0xEA225C", Offset = "0xEA225C", VA = "0xEA225C")]
		private bool IsRequired(Category type)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B36")]
		[Address(RVA = "0xEA0594", Offset = "0xEA0594", VA = "0xEA0594")]
		public bool IsStyle(Data _channel)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B38")]
		[Address(RVA = "0xEA0BDC", Offset = "0xEA0BDC", VA = "0xEA0BDC")]
		public bool isModel(Data _category)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B3B")]
		[Address(RVA = "0xE9ED8C", Offset = "0xE9ED8C", VA = "0xE9ED8C")]
		private bool ShouldLoad(ProfileData p)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B3D")]
		[Address(RVA = "0xEA2340", Offset = "0xEA2340", VA = "0xEA2340")]
		public void UpdateCategoriesText()
		{
		}

		[Token(Token = "0x6001B3E")]
		[Address(RVA = "0xEA1308", Offset = "0xEA1308", VA = "0xEA1308")]
		private void LoadChannels()
		{
		}

		[Token(Token = "0x6001B3F")]
		[Address(RVA = "0xEA1824", Offset = "0xEA1824", VA = "0xEA1824")]
		private void LoadCategories()
		{
		}

		[Token(Token = "0x6001B40")]
		[Address(RVA = "0xEA151C", Offset = "0xEA151C", VA = "0xEA151C")]
		private void LoadItems()
		{
		}

		[Token(Token = "0x6001B41")]
		[Address(RVA = "0xEA16D8", Offset = "0xEA16D8", VA = "0xEA16D8")]
		private void LoadColors()
		{
		}

		[Token(Token = "0x6001B42")]
		[Address(RVA = "0xEA2B78", Offset = "0xEA2B78", VA = "0xEA2B78")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001B43")]
		[Address(RVA = "0xEA2E24", Offset = "0xEA2E24", VA = "0xEA2E24")]
		private void CleanupTextures()
		{
		}

		[Token(Token = "0x6001B47")]
		[Address(RVA = "0xE9FB9C", Offset = "0xE9FB9C", VA = "0xE9FB9C")]
		private Data Select(List<Data> collection, int i)
		{
			return null;
		}

		[Token(Token = "0x6001B48")]
		[Address(RVA = "0xEA0448", Offset = "0xEA0448", VA = "0xEA0448")]
		private void Hide(List<Data> collection)
		{
		}

		[Token(Token = "0x6001B49")]
		[Address(RVA = "0xEA0998", Offset = "0xEA0998", VA = "0xEA0998")]
		private Option NoneOption(bool selected)
		{
			return null;
		}

		[Token(Token = "0x6001B4A")]
		[Address(RVA = "0xEA31C4", Offset = "0xEA31C4", VA = "0xEA31C4")]
		public AvatarEditor()
		{
		}
	}
	[Token(Token = "0x20003FC")]
	public class Avatars : MonoBehaviour
	{
		[Token(Token = "0x4001449")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Avatars Instance;

		[Token(Token = "0x400144A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Library library;

		[Token(Token = "0x400144B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Photographer photographer;

		[Token(Token = "0x400144C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Stage stage;

		[Token(Token = "0x400144D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Baker baker;

		[Token(Token = "0x400144E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Snapshots snapshots;

		[Token(Token = "0x400144F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Factory factory;

		[Token(Token = "0x4001450")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Lighting lighting;

		[Token(Token = "0x1700036F")]
		public static bool Ready
		{
			[Token(Token = "0x6001B58")]
			[Address(RVA = "0xEA3C98", Offset = "0xEA3C98", VA = "0xEA3C98")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000370")]
		public static string activeAvatar
		{
			[Token(Token = "0x6001B66")]
			[Address(RVA = "0xEA5824", Offset = "0xEA5824", VA = "0xEA5824")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000371")]
		public static Avatars avatars
		{
			[Token(Token = "0x6001B6A")]
			[Address(RVA = "0xEA5960", Offset = "0xEA5960", VA = "0xEA5960")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x14000065")]
		public static event Action OnAvatarChanged
		{
			[Token(Token = "0x6001B54")]
			[Address(RVA = "0xEA3800", Offset = "0xEA3800", VA = "0xEA3800")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001B55")]
			[Address(RVA = "0xEA38D8", Offset = "0xEA38D8", VA = "0xEA38D8")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x6001B56")]
		[Address(RVA = "0xEA39B0", Offset = "0xEA39B0", VA = "0xEA39B0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001B57")]
		[Address(RVA = "0xEA3BE0", Offset = "0xEA3BE0", VA = "0xEA3BE0")]
		private void Init()
		{
		}

		[Token(Token = "0x6001B59")]
		[Address(RVA = "0xEA3D24", Offset = "0xEA3D24", VA = "0xEA3D24")]
		public static Avatar Bake(string json, int playerNumber = 0, int putterNumber = 0, [Optional] AudioSource source)
		{
			return null;
		}

		[Token(Token = "0x6001B5A")]
		[Address(RVA = "0xEA3FEC", Offset = "0xEA3FEC", VA = "0xEA3FEC")]
		public static Avatar Bake(Option option, int playerNumber = 0, int putterNumber = 0, [Optional] AudioSource source)
		{
			return null;
		}

		[Token(Token = "0x6001B5B")]
		[Address(RVA = "0xEA3F2C", Offset = "0xEA3F2C", VA = "0xEA3F2C")]
		public static Avatar Fallback(int playerNumber = 0, int putterNumber = 0, [Optional] AudioSource source)
		{
			return null;
		}

		[Token(Token = "0x6001B5C")]
		[Address(RVA = "0xEA425C", Offset = "0xEA425C", VA = "0xEA425C")]
		public static Avatar Bake(Option option, int putterNumber = 0, [Optional] AudioSource source)
		{
			return null;
		}

		[Token(Token = "0x6001B5D")]
		[Address(RVA = "0xEA4354", Offset = "0xEA4354", VA = "0xEA4354")]
		public static void AddPutter(Option option, int putterNumber = 0)
		{
		}

		[Token(Token = "0x6001B5E")]
		[Address(RVA = "0xEA5070", Offset = "0xEA5070", VA = "0xEA5070")]
		public static void SetColor(Mesh mesh, byte color)
		{
		}

		[Token(Token = "0x6001B5F")]
		[Address(RVA = "0xEA5120", Offset = "0xEA5120", VA = "0xEA5120")]
		public static byte GetColor(string avatar, Category category, byte fallback = 15)
		{
			return default(byte);
		}

		[Token(Token = "0x6001B60")]
		[Address(RVA = "0xEA4FB4", Offset = "0xEA4FB4", VA = "0xEA4FB4")]
		public static bool HasPutter(byte id, params Category[] categories)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B61")]
		[Address(RVA = "0xEA51C4", Offset = "0xEA51C4", VA = "0xEA51C4")]
		public static bool HasParts(Option option, byte id, params Category[] categories)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B62")]
		[Address(RVA = "0xEA40F4", Offset = "0xEA40F4", VA = "0xEA40F4")]
		public static bool CanBake(Option option)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B63")]
		[Address(RVA = "0xEA5280", Offset = "0xEA5280", VA = "0xEA5280")]
		public static Transform BakePutter(int id = 0)
		{
			return null;
		}

		[Token(Token = "0x6001B64")]
		[Address(RVA = "0xE9F9A8", Offset = "0xE9F9A8", VA = "0xE9F9A8")]
		public static void Changed()
		{
		}

		[Token(Token = "0x6001B65")]
		[Address(RVA = "0xEA56AC", Offset = "0xEA56AC", VA = "0xEA56AC")]
		public static Texture2D Snapshot(string json, [Optional] Texture2D texture)
		{
			return null;
		}

		[Token(Token = "0x6001B67")]
		[Address(RVA = "0xE9E6AC", Offset = "0xE9E6AC", VA = "0xE9E6AC")]
		public static void Activate()
		{
		}

		[Token(Token = "0x6001B68")]
		[Address(RVA = "0xE9EA64", Offset = "0xE9EA64", VA = "0xE9EA64")]
		public static void Deactivate()
		{
		}

		[Token(Token = "0x6001B69")]
		[Address(RVA = "0xEA3ADC", Offset = "0xEA3ADC", VA = "0xEA3ADC")]
		private bool Singleton()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B6B")]
		private T Get<T>()
		{
			return (T)null;
		}

		[Token(Token = "0x6001B6C")]
		[Address(RVA = "0xEA59B8", Offset = "0xEA59B8", VA = "0xEA59B8")]
		public static string NameOf(ProfileData _profile)
		{
			return null;
		}

		[Token(Token = "0x6001B6D")]
		[Address(RVA = "0xEA5A20", Offset = "0xEA5A20", VA = "0xEA5A20")]
		public Avatars()
		{
		}
	}
	[Token(Token = "0x20003FE")]
	public class Baker : MonoBehaviour
	{
		[Token(Token = "0x17000372")]
		public Library library
		{
			[Token(Token = "0x6001B75")]
			[Address(RVA = "0xEA5B5C", Offset = "0xEA5B5C", VA = "0xEA5B5C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000373")]
		public Avatars avatars
		{
			[Token(Token = "0x6001B76")]
			[Address(RVA = "0xEA5E54", Offset = "0xEA5E54", VA = "0xEA5E54")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001B72")]
		[Address(RVA = "0xEA44F0", Offset = "0xEA44F0", VA = "0xEA44F0")]
		public (Mesh, Meshes) Bake(Option option)
		{
			return default((Mesh, Meshes));
		}

		[Token(Token = "0x6001B73")]
		[Address(RVA = "0xEA5338", Offset = "0xEA5338", VA = "0xEA5338")]
		public Transform BakeObjects(Option option)
		{
			return null;
		}

		[Token(Token = "0x6001B74")]
		[Address(RVA = "0xEA5BD4", Offset = "0xEA5BD4", VA = "0xEA5BD4")]
		public Transform BakeSubmesh(Submesh submesh)
		{
			return null;
		}

		[Token(Token = "0x6001B77")]
		[Address(RVA = "0xEA5EAC", Offset = "0xEA5EAC", VA = "0xEA5EAC")]
		public Baker()
		{
		}
	}
	[Token(Token = "0x20003FF")]
	public enum Category : byte
	{
		[Token(Token = "0x4001453")]
		Model,
		[Token(Token = "0x4001454")]
		Head,
		[Token(Token = "0x4001455")]
		Beard,
		[Token(Token = "0x4001456")]
		Eyebrows,
		[Token(Token = "0x4001457")]
		Eyelashes,
		[Token(Token = "0x4001458")]
		Eyes,
		[Token(Token = "0x4001459")]
		Glasses,
		[Token(Token = "0x400145A")]
		Hair,
		[Token(Token = "0x400145B")]
		Hat,
		[Token(Token = "0x400145C")]
		Outfit,
		[Token(Token = "0x400145D")]
		Piercing,
		[Token(Token = "0x400145E")]
		Hand,
		[Token(Token = "0x400145F")]
		Club,
		[Token(Token = "0x4001460")]
		Shaft,
		[Token(Token = "0x4001461")]
		Handle
	}
	[Token(Token = "0x2000400")]
	public enum Channel
	{
		[Token(Token = "0x4001463")]
		Style,
		[Token(Token = "0x4001464")]
		Color
	}
	[Token(Token = "0x2000401")]
	public class Collection
	{
		[Token(Token = "0x2000402")]
		public enum Header
		{
			[Token(Token = "0x400146B")]
			size,
			[Token(Token = "0x400146C")]
			version,
			[Token(Token = "0x400146D")]
			library,
			[Token(Token = "0x400146E")]
			platform,
			[Token(Token = "0x400146F")]
			major,
			[Token(Token = "0x4001470")]
			minor,
			[Token(Token = "0x4001471")]
			active
		}

		[Token(Token = "0x4001465")]
		public const byte Version = 0;

		[Token(Token = "0x4001466")]
		public const int MaxSize = 32;

		[Token(Token = "0x4001467")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private List<byte> b;

		[NonSerialized]
		[Token(Token = "0x4001468")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<Option> options;

		[Token(Token = "0x4001469")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Dictionary<Header, byte> header;

		[Token(Token = "0x17000374")]
		public byte version
		{
			[Token(Token = "0x6001B7F")]
			[Address(RVA = "0xEA68BC", Offset = "0xEA68BC", VA = "0xEA68BC")]
			get
			{
				return default(byte);
			}
		}

		[Token(Token = "0x17000375")]
		public byte library
		{
			[Token(Token = "0x6001B80")]
			[Address(RVA = "0xEA63CC", Offset = "0xEA63CC", VA = "0xEA63CC")]
			get
			{
				return default(byte);
			}
		}

		[Token(Token = "0x17000376")]
		public byte active
		{
			[Token(Token = "0x6001B81")]
			[Address(RVA = "0xEA6934", Offset = "0xEA6934", VA = "0xEA6934")]
			get
			{
				return default(byte);
			}
			[Token(Token = "0x6001B82")]
			[Address(RVA = "0xEA6270", Offset = "0xEA6270", VA = "0xEA6270")]
			private set
			{
			}
		}

		[Token(Token = "0x17000377")]
		public byte platform
		{
			[Token(Token = "0x6001B83")]
			[Address(RVA = "0xEA693C", Offset = "0xEA693C", VA = "0xEA693C")]
			get
			{
				return default(byte);
			}
		}

		[Token(Token = "0x17000378")]
		public byte major
		{
			[Token(Token = "0x6001B84")]
			[Address(RVA = "0xEA6944", Offset = "0xEA6944", VA = "0xEA6944")]
			get
			{
				return default(byte);
			}
		}

		[Token(Token = "0x17000379")]
		public byte minor
		{
			[Token(Token = "0x6001B85")]
			[Address(RVA = "0xEA694C", Offset = "0xEA694C", VA = "0xEA694C")]
			get
			{
				return default(byte);
			}
		}

		[Token(Token = "0x1700037A")]
		public int count
		{
			[Token(Token = "0x6001B86")]
			[Address(RVA = "0xEA6954", Offset = "0xEA6954", VA = "0xEA6954")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700037B")]
		public Option Active
		{
			[Token(Token = "0x6001B8B")]
			[Address(RVA = "0xEA0CA0", Offset = "0xEA0CA0", VA = "0xEA0CA0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700037C")]
		public bool IsEmpty
		{
			[Token(Token = "0x6001B8E")]
			[Address(RVA = "0xEA3ED8", Offset = "0xEA3ED8", VA = "0xEA3ED8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700037D")]
		public static Avatars avatars
		{
			[Token(Token = "0x6001BA1")]
			[Address(RVA = "0xEA82D4", Offset = "0xEA82D4", VA = "0xEA82D4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001B78")]
		[Address(RVA = "0xEA5EB4", Offset = "0xEA5EB4", VA = "0xEA5EB4")]
		public Collection()
		{
		}

		[Token(Token = "0x6001B79")]
		[Address(RVA = "0xEA5FB8", Offset = "0xEA5FB8", VA = "0xEA5FB8")]
		public Collection(Option option)
		{
		}

		[Token(Token = "0x6001B7A")]
		[Address(RVA = "0xE9ED94", Offset = "0xE9ED94", VA = "0xE9ED94")]
		public Collection(string json)
		{
		}

		[Token(Token = "0x6001B7B")]
		[Address(RVA = "0xE9EEB0", Offset = "0xE9EEB0", VA = "0xE9EEB0")]
		public void Upgrades()
		{
		}

		[Token(Token = "0x6001B7C")]
		[Address(RVA = "0xEA63D4", Offset = "0xEA63D4", VA = "0xEA63D4")]
		public List<Option> FindAll(Category category)
		{
			return null;
		}

		[Token(Token = "0x6001B7D")]
		[Address(RVA = "0xEA62CC", Offset = "0xEA62CC", VA = "0xEA62CC")]
		public void Read(string json)
		{
		}

		[Token(Token = "0x6001B7E")]
		[Address(RVA = "0xE9F8FC", Offset = "0xE9F8FC", VA = "0xE9F8FC")]
		public string Write()
		{
			return null;
		}

		[Token(Token = "0x6001B87")]
		[Address(RVA = "0xEA68C4", Offset = "0xEA68C4", VA = "0xEA68C4")]
		public byte TryGet(Header key)
		{
			return default(byte);
		}

		[Token(Token = "0x6001B88")]
		[Address(RVA = "0xEA69C0", Offset = "0xEA69C0", VA = "0xEA69C0")]
		public List<Option> GetOptions(bool selectedOnly = false)
		{
			return null;
		}

		[Token(Token = "0x6001B89")]
		[Address(RVA = "0xEA00EC", Offset = "0xEA00EC", VA = "0xEA00EC")]
		public void SetActive(Option option)
		{
		}

		[Token(Token = "0x6001B8A")]
		[Address(RVA = "0xEA0C38", Offset = "0xEA0C38", VA = "0xEA0C38")]
		public void SetActive(byte index)
		{
		}

		[Token(Token = "0x6001B8C")]
		[Address(RVA = "0xE9F88C", Offset = "0xE9F88C", VA = "0xE9F88C")]
		public Collection Trim()
		{
			return null;
		}

		[Token(Token = "0x6001B8D")]
		[Address(RVA = "0xEA60E0", Offset = "0xEA60E0", VA = "0xEA60E0")]
		public void Add(Option option)
		{
		}

		[Token(Token = "0x6001B8F")]
		[Address(RVA = "0xEA6B40", Offset = "0xEA6B40", VA = "0xEA6B40")]
		public bool IsParent(Option option)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B90")]
		[Address(RVA = "0xE9F0B0", Offset = "0xE9F0B0", VA = "0xE9F0B0")]
		public void Update(List<Preset> presets)
		{
		}

		[Token(Token = "0x6001B91")]
		[Address(RVA = "0xEA6B58", Offset = "0xEA6B58", VA = "0xEA6B58")]
		public void Clear()
		{
		}

		[Token(Token = "0x6001B92")]
		[Address(RVA = "0xEA6BD4", Offset = "0xEA6BD4", VA = "0xEA6BD4")]
		public void Reset()
		{
		}

		[Token(Token = "0x6001B93")]
		[Address(RVA = "0xEA65FC", Offset = "0xEA65FC", VA = "0xEA65FC")]
		private void ReadJson(string json)
		{
		}

		[Token(Token = "0x6001B94")]
		[Address(RVA = "0xEA67A8", Offset = "0xEA67A8", VA = "0xEA67A8")]
		private string WriteJson()
		{
			return null;
		}

		[Token(Token = "0x6001B95")]
		[Address(RVA = "0xEA6728", Offset = "0xEA6728", VA = "0xEA6728")]
		private void ReadBytes()
		{
		}

		[Token(Token = "0x6001B96")]
		[Address(RVA = "0xEA6768", Offset = "0xEA6768", VA = "0xEA6768")]
		private void WriteBytes()
		{
		}

		[Token(Token = "0x6001B97")]
		[Address(RVA = "0xEA79D4", Offset = "0xEA79D4", VA = "0xEA79D4")]
		private List<byte> WriteData()
		{
			return null;
		}

		[Token(Token = "0x6001B98")]
		[Address(RVA = "0xEA7D10", Offset = "0xEA7D10", VA = "0xEA7D10")]
		private void WriteOption(Option option, List<byte> bytes)
		{
		}

		[Token(Token = "0x6001B99")]
		[Address(RVA = "0xEA7204", Offset = "0xEA7204", VA = "0xEA7204")]
		private void ReadData(List<byte> bytes)
		{
		}

		[Token(Token = "0x6001B9A")]
		[Address(RVA = "0xEA7E6C", Offset = "0xEA7E6C", VA = "0xEA7E6C")]
		private Option ReadOption(int i, List<byte> bytes)
		{
			return null;
		}

		[Token(Token = "0x6001B9B")]
		[Address(RVA = "0xEA7558", Offset = "0xEA7558", VA = "0xEA7558")]
		public List<byte> WriteHeader()
		{
			return null;
		}

		[Token(Token = "0x6001B9C")]
		[Address(RVA = "0xEA6DA0", Offset = "0xEA6DA0", VA = "0xEA6DA0")]
		private void ReadHeader(List<byte> bytes)
		{
		}

		[Token(Token = "0x6001B9D")]
		[Address(RVA = "0xEA73B4", Offset = "0xEA73B4", VA = "0xEA73B4")]
		private void UpdateHeader()
		{
		}

		[Token(Token = "0x6001B9E")]
		[Address(RVA = "0xEA7F2C", Offset = "0xEA7F2C", VA = "0xEA7F2C")]
		public void debug()
		{
		}

		[Token(Token = "0x6001B9F")]
		[Address(RVA = "0xEA7FB0", Offset = "0xEA7FB0", VA = "0xEA7FB0")]
		public void debugOptions()
		{
		}

		[Token(Token = "0x6001BA0")]
		[Address(RVA = "0xEA8004", Offset = "0xEA8004", VA = "0xEA8004", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6001BA2")]
		[Address(RVA = "0xEA6C4C", Offset = "0xEA6C4C", VA = "0xEA6C4C")]
		public static void Split(List<byte> bytes, out List<byte> header, out List<byte> data)
		{
		}

		[Token(Token = "0x6001BA3")]
		[Address(RVA = "0xEA7C44", Offset = "0xEA7C44", VA = "0xEA7C44")]
		public static List<byte> Combine(List<byte> header, List<byte> data)
		{
			return null;
		}

		[Token(Token = "0x6001BA4")]
		[Address(RVA = "0xEA6B30", Offset = "0xEA6B30", VA = "0xEA6B30")]
		public static bool Valid(Option option)
		{
			return default(bool);
		}

		[Token(Token = "0x6001BA5")]
		[Address(RVA = "0xEA832C", Offset = "0xEA832C", VA = "0xEA832C")]
		public static bool Valid(List<byte> bytes)
		{
			return default(bool);
		}

		[Token(Token = "0x6001BA6")]
		[Address(RVA = "0xEA8554", Offset = "0xEA8554", VA = "0xEA8554")]
		public static bool ValidData(List<byte> bytes)
		{
			return default(bool);
		}

		[Token(Token = "0x6001BA7")]
		[Address(RVA = "0xEA8440", Offset = "0xEA8440", VA = "0xEA8440")]
		public static bool ValidHeader(List<byte> bytes)
		{
			return default(bool);
		}

		[Token(Token = "0x6001BA8")]
		[Address(RVA = "0xEA8630", Offset = "0xEA8630", VA = "0xEA8630")]
		public static string Print(List<byte> bytes)
		{
			return null;
		}

		[Token(Token = "0x6001BA9")]
		[Address(RVA = "0xEA8844", Offset = "0xEA8844", VA = "0xEA8844")]
		public static void TestJson()
		{
		}

		[Token(Token = "0x6001BAA")]
		[Address(RVA = "0xEA8B3C", Offset = "0xEA8B3C", VA = "0xEA8B3C")]
		public static void TestSplit()
		{
		}
	}
	[Token(Token = "0x2000403")]
	public class Data
	{
		[Token(Token = "0x4001472")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public object value;

		[Token(Token = "0x4001474")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private string _text;

		[Token(Token = "0x4001475")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Texture _texture;

		[Token(Token = "0x4001476")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool _selected;

		[Token(Token = "0x4001477")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		private bool _visible;

		[Token(Token = "0x4001478")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Color _color;

		[Token(Token = "0x4001479")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public bool add;

		[Token(Token = "0x400147A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
		public bool remove;

		[Token(Token = "0x400147B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public List<Data> children;

		[Token(Token = "0x1700037E")]
		public bool selected
		{
			[Token(Token = "0x6001BB3")]
			[Address(RVA = "0xEA9408", Offset = "0xEA9408", VA = "0xEA9408")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001BB4")]
			[Address(RVA = "0xEA3184", Offset = "0xEA3184", VA = "0xEA3184")]
			set
			{
			}
		}

		[Token(Token = "0x1700037F")]
		public string text
		{
			[Token(Token = "0x6001BB5")]
			[Address(RVA = "0xEA9410", Offset = "0xEA9410", VA = "0xEA9410")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001BB6")]
			[Address(RVA = "0xEA275C", Offset = "0xEA275C", VA = "0xEA275C")]
			set
			{
			}
		}

		[Token(Token = "0x17000380")]
		public Color color
		{
			[Token(Token = "0x6001BB7")]
			[Address(RVA = "0xEA9418", Offset = "0xEA9418", VA = "0xEA9418")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6001BB8")]
			[Address(RVA = "0xEA11E0", Offset = "0xEA11E0", VA = "0xEA11E0")]
			set
			{
			}
		}

		[Token(Token = "0x17000381")]
		public bool visible
		{
			[Token(Token = "0x6001BB9")]
			[Address(RVA = "0xEA9424", Offset = "0xEA9424", VA = "0xEA9424")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001BBA")]
			[Address(RVA = "0xEA0408", Offset = "0xEA0408", VA = "0xEA0408")]
			set
			{
			}
		}

		[Token(Token = "0x17000382")]
		public Texture texture
		{
			[Token(Token = "0x6001BBB")]
			[Address(RVA = "0xEA942C", Offset = "0xEA942C", VA = "0xEA942C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001BBC")]
			[Address(RVA = "0xEA2AD8", Offset = "0xEA2AD8", VA = "0xEA2AD8")]
			set
			{
			}
		}

		[Token(Token = "0x17000383")]
		public bool HasTexture
		{
			[Token(Token = "0x6001BBE")]
			[Address(RVA = "0xEA943C", Offset = "0xEA943C", VA = "0xEA943C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000384")]
		public bool HasRenderTexture
		{
			[Token(Token = "0x6001BBF")]
			[Address(RVA = "0xEA94FC", Offset = "0xEA94FC", VA = "0xEA94FC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x14000066")]
		public event Action changed
		{
			[Token(Token = "0x6001BAB")]
			[Address(RVA = "0xEA90C0", Offset = "0xEA90C0", VA = "0xEA90C0")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001BAC")]
			[Address(RVA = "0xEA915C", Offset = "0xEA915C", VA = "0xEA915C")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x6001BAD")]
		[Address(RVA = "0xEA29E0", Offset = "0xEA29E0", VA = "0xEA29E0")]
		public Data()
		{
		}

		[Token(Token = "0x6001BAE")]
		[Address(RVA = "0xEA27B0", Offset = "0xEA27B0", VA = "0xEA27B0")]
		public Data(object _value)
		{
		}

		[Token(Token = "0x6001BAF")]
		[Address(RVA = "0xEA92E8", Offset = "0xEA92E8", VA = "0xEA92E8")]
		public Data(object _value, bool _selected)
		{
		}

		[Token(Token = "0x6001BB0")]
		[Address(RVA = "0xEA28B8", Offset = "0xEA28B8", VA = "0xEA28B8")]
		public Data(object _value, string _text, bool _selected)
		{
		}

		[Token(Token = "0x6001BB1")]
		public T Get<T>()
		{
			return (T)null;
		}

		[Token(Token = "0x6001BB2")]
		[Address(RVA = "0xEA1258", Offset = "0xEA1258", VA = "0xEA1258")]
		public void Set(object _value, bool _selected = false, bool _visible = true)
		{
		}

		[Token(Token = "0x6001BBD")]
		[Address(RVA = "0xEA9434", Offset = "0xEA9434", VA = "0xEA9434")]
		public void SetTexture(Texture2D t)
		{
		}

		[Token(Token = "0x6001BC0")]
		[Address(RVA = "0xEA91F8", Offset = "0xEA91F8", VA = "0xEA91F8")]
		private void TrySetText()
		{
		}

		[Token(Token = "0x6001BC1")]
		[Address(RVA = "0xEA3038", Offset = "0xEA3038", VA = "0xEA3038")]
		public static void Deselect(List<Data> collection)
		{
		}

		[Token(Token = "0x6001BC2")]
		public static List<T> GetSelected<T>(List<Data> collection)
		{
			return null;
		}
	}
	[Token(Token = "0x2000405")]
	public class Eyes : MonoBehaviour
	{
		[Token(Token = "0x2000406")]
		public class Controller
		{
			[Token(Token = "0x4001485")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float rate;

			[Token(Token = "0x4001486")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public Vector2 range;

			[Token(Token = "0x4001487")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public float timer;

			[Token(Token = "0x4001488")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string name;

			[Token(Token = "0x4001489")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Animation anim;

			[Token(Token = "0x6001BD2")]
			[Address(RVA = "0xEA9E9C", Offset = "0xEA9E9C", VA = "0xEA9E9C")]
			public void Update(float deltaTime)
			{
			}

			[Token(Token = "0x6001BD3")]
			[Address(RVA = "0xEA9B98", Offset = "0xEA9B98", VA = "0xEA9B98")]
			public Controller(Animation _anim, string _name, float range_x, float range_y, float _rate = 1f)
			{
			}
		}

		[Token(Token = "0x4001481")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Animation anim;

		[Token(Token = "0x4001482")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<AnimationClip> animations;

		[Token(Token = "0x4001483")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<Controller> controllers;

		[Token(Token = "0x4001484")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float timer;

		[Token(Token = "0x6001BC9")]
		[Address(RVA = "0xEA9630", Offset = "0xEA9630", VA = "0xEA9630")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001BCA")]
		[Address(RVA = "0xEA969C", Offset = "0xEA969C", VA = "0xEA969C")]
		protected void Animations()
		{
		}

		[Token(Token = "0x6001BCB")]
		[Address(RVA = "0xEA98EC", Offset = "0xEA98EC", VA = "0xEA98EC")]
		private void Controllers()
		{
		}

		[Token(Token = "0x6001BCC")]
		[Address(RVA = "0xEA9BFC", Offset = "0xEA9BFC", VA = "0xEA9BFC")]
		private void Update()
		{
		}

		[Token(Token = "0x6001BCD")]
		[Address(RVA = "0xEA9C4C", Offset = "0xEA9C4C", VA = "0xEA9C4C")]
		private void UpdateControllers(float deltaTime)
		{
		}

		[Token(Token = "0x6001BCE")]
		[Address(RVA = "0xEA9F08", Offset = "0xEA9F08", VA = "0xEA9F08")]
		public void Play(string name)
		{
		}

		[Token(Token = "0x6001BCF")]
		[Address(RVA = "0xEA9A2C", Offset = "0xEA9A2C", VA = "0xEA9A2C")]
		public AnimationClip Clip(string name, int layer, string path, string prop, params Keyframe[] keys)
		{
			return null;
		}

		[Token(Token = "0x6001BD0")]
		[Address(RVA = "0xEA9A14", Offset = "0xEA9A14", VA = "0xEA9A14")]
		public Keyframe K(float a, float b, float c, float d)
		{
			return default(Keyframe);
		}

		[Token(Token = "0x6001BD1")]
		[Address(RVA = "0xEA9F24", Offset = "0xEA9F24", VA = "0xEA9F24")]
		public Eyes()
		{
		}
	}
	[Token(Token = "0x2000407")]
	public class Factory : MonoBehaviour
	{
		[Token(Token = "0x2000408")]
		[CompilerGenerated]
		private sealed class <_Randomizer>d__9 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400148E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400148F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001490")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Factory <>4__this;

			[Token(Token = "0x17000389")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001BE8")]
				[Address(RVA = "0xEAAAEC", Offset = "0xEAAAEC", VA = "0xEAAAEC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700038A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001BEA")]
				[Address(RVA = "0xEAAB34", Offset = "0xEAAB34", VA = "0xEAAB34", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001BE5")]
			[Address(RVA = "0xEAA668", Offset = "0xEAA668", VA = "0xEAA668")]
			[DebuggerHidden]
			public <_Randomizer>d__9(int <>1__state)
			{
			}

			[Token(Token = "0x6001BE6")]
			[Address(RVA = "0xEAAA18", Offset = "0xEAAA18", VA = "0xEAAA18", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001BE7")]
			[Address(RVA = "0xEAAA1C", Offset = "0xEAAA1C", VA = "0xEAAA1C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001BE9")]
			[Address(RVA = "0xEAAAF4", Offset = "0xEAAAF4", VA = "0xEAAAF4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400148A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject putter_template;

		[Token(Token = "0x400148B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Workspace workspace;

		[Token(Token = "0x400148C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int max_putters;

		[Token(Token = "0x400148D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[Range(0.03f, 3f)]
		public float randomizer_delay;

		[Token(Token = "0x17000385")]
		public Quaternion rotation
		{
			[Token(Token = "0x6001BDE")]
			[Address(RVA = "0xEAA918", Offset = "0xEAA918", VA = "0xEAA918")]
			get
			{
				return default(Quaternion);
			}
			[Token(Token = "0x6001BDF")]
			[Address(RVA = "0xEAA938", Offset = "0xEAA938", VA = "0xEAA938")]
			set
			{
			}
		}

		[Token(Token = "0x17000386")]
		public Vector3 position
		{
			[Token(Token = "0x6001BE0")]
			[Address(RVA = "0xEAA988", Offset = "0xEAA988", VA = "0xEAA988")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001BE1")]
			[Address(RVA = "0xEAA84C", Offset = "0xEAA84C", VA = "0xEAA84C")]
			set
			{
			}
		}

		[Token(Token = "0x17000387")]
		public static Avatars avatars
		{
			[Token(Token = "0x6001BE2")]
			[Address(RVA = "0xEAA9A8", Offset = "0xEAA9A8", VA = "0xEAA9A8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000388")]
		public static Library library
		{
			[Token(Token = "0x6001BE3")]
			[Address(RVA = "0xEAA574", Offset = "0xEAA574", VA = "0xEAA574")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001BD4")]
		[Address(RVA = "0xEA3C94", Offset = "0xEA3C94", VA = "0xEA3C94")]
		public void Init()
		{
		}

		[Token(Token = "0x6001BD5")]
		[Address(RVA = "0xEA9FEC", Offset = "0xEA9FEC", VA = "0xEA9FEC")]
		public Avatar Bake(Option option, int putter_id = 0)
		{
			return null;
		}

		[Token(Token = "0x6001BD6")]
		[Address(RVA = "0xEAA3F8", Offset = "0xEAA3F8", VA = "0xEAA3F8")]
		public Avatar BakeRandom()
		{
			return null;
		}

		[Token(Token = "0x6001BD7")]
		[Address(RVA = "0xEAA090", Offset = "0xEAA090", VA = "0xEAA090")]
		private void Pose(Avatar avatar)
		{
		}

		[Token(Token = "0x6001BD8")]
		[Address(RVA = "0xEAA5D0", Offset = "0xEAA5D0", VA = "0xEAA5D0")]
		public void Randomizer(float delay = 0.5f)
		{
		}

		[Token(Token = "0x6001BD9")]
		[Address(RVA = "0xEAA600", Offset = "0xEAA600", VA = "0xEAA600")]
		[IteratorStateMachine(typeof(<_Randomizer>d__9))]
		public IEnumerator _Randomizer()
		{
			return null;
		}

		[Token(Token = "0x6001BDA")]
		[Address(RVA = "0xEAA690", Offset = "0xEAA690", VA = "0xEAA690")]
		public void Detatch()
		{
		}

		[Token(Token = "0x6001BDB")]
		[Address(RVA = "0xEAA718", Offset = "0xEAA718", VA = "0xEAA718")]
		public void Clear()
		{
		}

		[Token(Token = "0x6001BDC")]
		[Address(RVA = "0xEAA744", Offset = "0xEAA744", VA = "0xEAA744")]
		public void Goto(Camera camera, float distance = 2.5f, float up = 0f)
		{
		}

		[Token(Token = "0x6001BDD")]
		[Address(RVA = "0xEAA894", Offset = "0xEAA894", VA = "0xEAA894")]
		public void LookAt(Transform target)
		{
		}

		[Token(Token = "0x6001BE4")]
		[Address(RVA = "0xEAAA00", Offset = "0xEAAA00", VA = "0xEAAA00")]
		public Factory()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000409")]
	public class Frame
	{
		[Token(Token = "0x4001491")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Part part;

		[Token(Token = "0x4001492")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string name;

		[Token(Token = "0x4001493")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3[] vertices;

		[Token(Token = "0x4001494")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3[] normals;

		[Token(Token = "0x1700038B")]
		public Submesh submesh
		{
			[Token(Token = "0x6001BEC")]
			[Address(RVA = "0xEA5BB8", Offset = "0xEA5BB8", VA = "0xEA5BB8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001BEB")]
		[Address(RVA = "0xEAAB3C", Offset = "0xEAAB3C", VA = "0xEAAB3C")]
		public Frame(Part _part, string _name, int index)
		{
		}
	}
	[Token(Token = "0x200040A")]
	public class Importer : MonoBehaviour
	{
		[Token(Token = "0x4001495")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Category[] rotate_x_90;

		[Token(Token = "0x4001496")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Dictionary<Category, Vector3> rotations;

		[Token(Token = "0x6001BED")]
		[Address(RVA = "0xEAAC34", Offset = "0xEAAC34", VA = "0xEAAC34")]
		public void Apply(Part part)
		{
		}

		[Token(Token = "0x6001BEE")]
		[Address(RVA = "0xEAAD1C", Offset = "0xEAAD1C", VA = "0xEAAD1C")]
		public void ApplyRotation(Vector3[] v, Vector3[] n, Vector3 rotation)
		{
		}

		[Token(Token = "0x6001BEF")]
		[Address(RVA = "0xEAACBC", Offset = "0xEAACBC", VA = "0xEAACBC")]
		public bool Contains(Category c)
		{
			return default(bool);
		}

		[Token(Token = "0x6001BF0")]
		[Address(RVA = "0xEAAE38", Offset = "0xEAAE38", VA = "0xEAAE38")]
		private void Index()
		{
		}

		[Token(Token = "0x6001BF1")]
		[Address(RVA = "0xEAAF70", Offset = "0xEAAF70", VA = "0xEAAF70")]
		public Importer()
		{
		}
	}
	[Token(Token = "0x200040B")]
	public class Library : MonoBehaviour
	{
		[Token(Token = "0x4001497")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public Model model;

		[Token(Token = "0x4001498")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public Collection collection;

		[Token(Token = "0x4001499")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Shared shared;

		[Token(Token = "0x400149A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Model[] models;

		[Token(Token = "0x400149B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int maxVertices;

		[Token(Token = "0x400149C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public int version;

		[Token(Token = "0x400149D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Material material;

		[Token(Token = "0x400149E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Preset Fallback;

		[Token(Token = "0x400149F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public List<Preset> presets;

		[Token(Token = "0x40014A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public List<Shot.Map> shotMap;

		[Token(Token = "0x40014A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Dictionary<byte, Model> index;

		[Token(Token = "0x1700038C")]
		public bool indexed
		{
			[Token(Token = "0x6001BF2")]
			[Address(RVA = "0xEABF78", Offset = "0xEABF78", VA = "0xEABF78")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001BF3")]
			[Address(RVA = "0xEABF80", Offset = "0xEABF80", VA = "0xEABF80")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x1700038D")]
		public int warnings
		{
			[Token(Token = "0x6001BF4")]
			[Address(RVA = "0xEABF8C", Offset = "0xEABF8C", VA = "0xEABF8C")]
			[CompilerGenerated]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001BF5")]
			[Address(RVA = "0xEABF94", Offset = "0xEABF94", VA = "0xEABF94")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x1700038E")]
		public int errors
		{
			[Token(Token = "0x6001BF6")]
			[Address(RVA = "0xEABF9C", Offset = "0xEABF9C", VA = "0xEABF9C")]
			[CompilerGenerated]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001BF7")]
			[Address(RVA = "0xEABFA4", Offset = "0xEABFA4", VA = "0xEABFA4")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x1700038F")]
		public bool HasSelectedModel
		{
			[Token(Token = "0x6001C1F")]
			[Address(RVA = "0xEADD90", Offset = "0xEADD90", VA = "0xEADD90")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000390")]
		private Avatars avatars
		{
			[Token(Token = "0x6001C28")]
			[Address(RVA = "0xEB0750", Offset = "0xEB0750", VA = "0xEB0750")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000391")]
		private Stage stage
		{
			[Token(Token = "0x6001C29")]
			[Address(RVA = "0xEAE0F8", Offset = "0xEAE0F8", VA = "0xEAE0F8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001BF8")]
		[Address(RVA = "0xEABFAC", Offset = "0xEABFAC", VA = "0xEABFAC")]
		public void Init()
		{
		}

		[Token(Token = "0x6001BF9")]
		[Address(RVA = "0xEAC2C0", Offset = "0xEAC2C0", VA = "0xEAC2C0")]
		public void Initialize()
		{
		}

		[Token(Token = "0x6001BFA")]
		[Address(RVA = "0xEAC308", Offset = "0xEAC308", VA = "0xEAC308")]
		private bool InitModels()
		{
			return default(bool);
		}

		[Token(Token = "0x6001BFB")]
		[Address(RVA = "0xEAC83C", Offset = "0xEAC83C", VA = "0xEAC83C")]
		private bool InitPresets()
		{
			return default(bool);
		}

		[Token(Token = "0x6001BFC")]
		[Address(RVA = "0xEAC0D8", Offset = "0xEAC0D8", VA = "0xEAC0D8")]
		public bool CheckAllPresets()
		{
			return default(bool);
		}

		[Token(Token = "0x6001BFD")]
		[Address(RVA = "0xEAD4C4", Offset = "0xEAD4C4", VA = "0xEAD4C4")]
		private void RunImporter()
		{
		}

		[Token(Token = "0x6001BFE")]
		[Address(RVA = "0xEACB78", Offset = "0xEACB78", VA = "0xEACB78")]
		private void SetShots()
		{
		}

		[Token(Token = "0x6001BFF")]
		[Address(RVA = "0xEABFC4", Offset = "0xEABFC4", VA = "0xEABFC4")]
		public void Index()
		{
		}

		[Token(Token = "0x6001C00")]
		[Address(RVA = "0xEADAA8", Offset = "0xEADAA8", VA = "0xEADAA8")]
		public Option GetFallback(int playerNumber)
		{
			return null;
		}

		[Token(Token = "0x6001C01")]
		[Address(RVA = "0xEADD64", Offset = "0xEADD64", VA = "0xEADD64")]
		public void Save()
		{
		}

		[Token(Token = "0x6001C02")]
		[Address(RVA = "0xEADEC8", Offset = "0xEADEC8", VA = "0xEADEC8")]
		public void Freeze()
		{
		}

		[Token(Token = "0x6001C03")]
		[Address(RVA = "0xEAE000", Offset = "0xEAE000", VA = "0xEAE000")]
		public void UnFreeze()
		{
		}

		[Token(Token = "0x6001C04")]
		[Address(RVA = "0xEAE154", Offset = "0xEAE154", VA = "0xEAE154")]
		public void Select(Collection _collection)
		{
		}

		[Token(Token = "0x6001C05")]
		[Address(RVA = "0xEAE23C", Offset = "0xEAE23C", VA = "0xEAE23C")]
		public void Select(List<Option> options)
		{
		}

		[Token(Token = "0x6001C06")]
		[Address(RVA = "0xEAE1F8", Offset = "0xEAE1F8", VA = "0xEAE1F8")]
		public void Select(Option option)
		{
		}

		[Token(Token = "0x6001C07")]
		[Address(RVA = "0xEAE50C", Offset = "0xEAE50C", VA = "0xEAE50C")]
		public void Select(Category type, byte id = 0, byte value = 0)
		{
		}

		[Token(Token = "0x6001C08")]
		[Address(RVA = "0xEAE4A8", Offset = "0xEAE4A8", VA = "0xEAE4A8")]
		public void Select(byte type, byte id, byte value = 0)
		{
		}

		[Token(Token = "0x6001C09")]
		[Address(RVA = "0xEAE388", Offset = "0xEAE388", VA = "0xEAE388")]
		public void SelectModel(Option option)
		{
		}

		[Token(Token = "0x6001C0A")]
		[Address(RVA = "0xEAE194", Offset = "0xEAE194", VA = "0xEAE194")]
		public void Deselect()
		{
		}

		[Token(Token = "0x6001C0B")]
		[Address(RVA = "0xEAE6AC", Offset = "0xEAE6AC", VA = "0xEAE6AC")]
		public void Deselect(Model[] list)
		{
		}

		[Token(Token = "0x6001C0C")]
		[Address(RVA = "0xEAE70C", Offset = "0xEAE70C", VA = "0xEAE70C")]
		public void Deselect(Category type)
		{
		}

		[Token(Token = "0x6001C0D")]
		[Address(RVA = "0xEAE460", Offset = "0xEAE460", VA = "0xEAE460")]
		public void Deselect(byte type)
		{
		}

		[Token(Token = "0x6001C0E")]
		[Address(RVA = "0xEAE898", Offset = "0xEAE898", VA = "0xEAE898")]
		public void Deselect(List<Option> options)
		{
		}

		[Token(Token = "0x6001C0F")]
		[Address(RVA = "0xEAE9D4", Offset = "0xEAE9D4", VA = "0xEAE9D4")]
		public void Deselect(Option option)
		{
		}

		[Token(Token = "0x6001C10")]
		[Address(RVA = "0xEAEB04", Offset = "0xEAEB04", VA = "0xEAEB04")]
		public int CountSelected(Category type)
		{
			return default(int);
		}

		[Token(Token = "0x6001C11")]
		[Address(RVA = "0xEAEC08", Offset = "0xEAEC08", VA = "0xEAEC08")]
		public bool AnySelected(Category type)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C12")]
		[Address(RVA = "0xEAEB5C", Offset = "0xEAEB5C", VA = "0xEAEB5C")]
		public List<Option> GetOptions(Category type, bool selectedOnly = false)
		{
			return null;
		}

		[Token(Token = "0x6001C13")]
		[Address(RVA = "0xEAEC2C", Offset = "0xEAEC2C", VA = "0xEAEC2C")]
		public List<Option> GetModelOptions(bool selectedOnly)
		{
			return null;
		}

		[Token(Token = "0x6001C14")]
		[Address(RVA = "0xEAF054", Offset = "0xEAF054", VA = "0xEAF054")]
		public List<Option> GetColorOptions(Category type, byte id, bool selectedOnly = false)
		{
			return null;
		}

		[Token(Token = "0x6001C15")]
		[Address(RVA = "0xEAF304", Offset = "0xEAF304", VA = "0xEAF304")]
		public Option Randomize(Option option)
		{
			return null;
		}

		[Token(Token = "0x6001C16")]
		[Address(RVA = "0xEAF568", Offset = "0xEAF568", VA = "0xEAF568")]
		public void GetSubmeshes(Option option, List<Submesh> submeshes, Dictionary<string, List<Frame>> frames, out int vertices, out int triangles)
		{
		}

		[Token(Token = "0x6001C17")]
		[Address(RVA = "0xEAFC88", Offset = "0xEAFC88", VA = "0xEAFC88")]
		public void FallbackMissing(Option option)
		{
		}

		[Token(Token = "0x6001C18")]
		[Address(RVA = "0xEAD340", Offset = "0xEAD340", VA = "0xEAD340")]
		public bool CanBake(Option option)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C19")]
		[Address(RVA = "0xEB0090", Offset = "0xEB0090", VA = "0xEB0090")]
		public bool HasParts(Option option, byte id, params Category[] categories)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C1A")]
		[Address(RVA = "0xEAFE4C", Offset = "0xEAFE4C", VA = "0xEAFE4C")]
		public bool HasAllParts(Model m, List<Option> list)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C1B")]
		[Address(RVA = "0xEB01F0", Offset = "0xEB01F0", VA = "0xEB01F0")]
		public bool HasColorOptions(Category type)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C1C")]
		[Address(RVA = "0xEB0474", Offset = "0xEB0474", VA = "0xEB0474")]
		public bool HasStyleOptions(Category type)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C1D")]
		[Address(RVA = "0xEB05D8", Offset = "0xEB05D8", VA = "0xEB05D8")]
		public bool HasModel(byte id)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C1E")]
		[Address(RVA = "0xEAF028", Offset = "0xEAF028", VA = "0xEAF028")]
		public bool HasModel(Option option)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C20")]
		[Address(RVA = "0xEAEA30", Offset = "0xEAEA30", VA = "0xEAEA30")]
		public Model GetModel(byte id)
		{
			return null;
		}

		[Token(Token = "0x6001C21")]
		[Address(RVA = "0xEB0630", Offset = "0xEB0630", VA = "0xEB0630")]
		public Model GetModel(List<Option> options)
		{
			return null;
		}

		[Token(Token = "0x6001C22")]
		[Address(RVA = "0xEAE5A0", Offset = "0xEAE5A0", VA = "0xEAE5A0")]
		public Model GetModel(Option option)
		{
			return null;
		}

		[Token(Token = "0x6001C23")]
		[Address(RVA = "0xEAEA10", Offset = "0xEAEA10", VA = "0xEAEA10")]
		public bool IsModel(Option option)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C24")]
		[Address(RVA = "0xEAEC20", Offset = "0xEAEC20", VA = "0xEAEC20")]
		public bool IsModel(Category type)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C25")]
		[Address(RVA = "0xEAE510", Offset = "0xEAE510", VA = "0xEAE510")]
		public bool IsModel(byte type)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C26")]
		[Address(RVA = "0xEB06BC", Offset = "0xEB06BC", VA = "0xEB06BC")]
		public bool IsCurrentModel(byte id)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C27")]
		private T GetOrAdd<T>(Transform t) where T : MonoBehaviour
		{
			return null;
		}

		[Token(Token = "0x6001C2A")]
		[Address(RVA = "0xEACD8C", Offset = "0xEACD8C", VA = "0xEACD8C")]
		public void Report()
		{
		}

		[Token(Token = "0x6001C2B")]
		[Address(RVA = "0xEB07A8", Offset = "0xEB07A8", VA = "0xEB07A8")]
		public Library()
		{
		}
	}
	[Token(Token = "0x200040C")]
	public class Meshes
	{
		[Token(Token = "0x200040D")]
		public class Triangles
		{
			[Token(Token = "0x40014A6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int start;

			[Token(Token = "0x40014A7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public int length;

			[Token(Token = "0x40014A8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int winding;

			[Token(Token = "0x6001C31")]
			[Address(RVA = "0xEB0958", Offset = "0xEB0958", VA = "0xEB0958")]
			public Triangles()
			{
			}
		}

		[Token(Token = "0x40014A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Dictionary<Category, Triangles> triangles;

		[Token(Token = "0x6001C2C")]
		[Address(RVA = "0xEB08AC", Offset = "0xEB08AC", VA = "0xEB08AC")]
		public void AddTriangles(Category c, int start, int length)
		{
		}

		[Token(Token = "0x6001C2D")]
		[Address(RVA = "0xEB0968", Offset = "0xEB0968", VA = "0xEB0968")]
		public bool HasMesh(Category c)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C2E")]
		[Address(RVA = "0xEB09C0", Offset = "0xEB09C0", VA = "0xEB09C0")]
		public int GetWindingOrder(Category c)
		{
			return default(int);
		}

		[Token(Token = "0x6001C2F")]
		[Address(RVA = "0xEB0A24", Offset = "0xEB0A24", VA = "0xEB0A24")]
		public void SetWindingOrder(Category c, Mesh m, int order)
		{
		}

		[Token(Token = "0x6001C30")]
		[Address(RVA = "0xEB0C68", Offset = "0xEB0C68", VA = "0xEB0C68")]
		public Meshes()
		{
		}
	}
	[Token(Token = "0x200040E")]
	[ExecuteAlways]
	public class Mirror : MonoBehaviour
	{
		[Token(Token = "0x40014A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public RawImage image;

		[Token(Token = "0x40014AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool stationary;

		[Token(Token = "0x40014AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float stationary_rotation;

		[Token(Token = "0x17000392")]
		public Avatars avatars
		{
			[Token(Token = "0x6001C33")]
			[Address(RVA = "0xEB1234", Offset = "0xEB1234", VA = "0xEB1234")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000393")]
		public Stage stage
		{
			[Token(Token = "0x6001C34")]
			[Address(RVA = "0xEB11D8", Offset = "0xEB11D8", VA = "0xEB11D8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000394")]
		public Library library
		{
			[Token(Token = "0x6001C35")]
			[Address(RVA = "0xEB128C", Offset = "0xEB128C", VA = "0xEB128C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001C32")]
		[Address(RVA = "0xEB0CE4", Offset = "0xEB0CE4", VA = "0xEB0CE4")]
		public void Update()
		{
		}

		[Token(Token = "0x6001C36")]
		[Address(RVA = "0xEB12E8", Offset = "0xEB12E8", VA = "0xEB12E8")]
		public Mirror()
		{
		}
	}
	[Token(Token = "0x200040F")]
	public class Model : MonoBehaviour
	{
		[Token(Token = "0x40014AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public byte type;

		[Token(Token = "0x40014AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public byte id;

		[Token(Token = "0x40014AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		public byte version;

		[Token(Token = "0x40014AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string iap;

		[Token(Token = "0x40014B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Part[] parts;

		[Token(Token = "0x40014B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Dictionary<byte, Dictionary<byte, Part>> index;

		[Token(Token = "0x40014B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Dictionary<string, List<Shape>> shapes;

		[Token(Token = "0x40014B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public Option option;

		[Token(Token = "0x17000395")]
		public int warnings
		{
			[Token(Token = "0x6001C37")]
			[Address(RVA = "0xEB1300", Offset = "0xEB1300", VA = "0xEB1300")]
			[CompilerGenerated]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001C38")]
			[Address(RVA = "0xEB1308", Offset = "0xEB1308", VA = "0xEB1308")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000396")]
		public int errors
		{
			[Token(Token = "0x6001C39")]
			[Address(RVA = "0xEB1310", Offset = "0xEB1310", VA = "0xEB1310")]
			[CompilerGenerated]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001C3A")]
			[Address(RVA = "0xEB1318", Offset = "0xEB1318", VA = "0xEB1318")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000397")]
		public bool selected
		{
			[Token(Token = "0x6001C43")]
			[Address(RVA = "0xEB26C8", Offset = "0xEB26C8", VA = "0xEB26C8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001C44")]
			[Address(RVA = "0xEAE61C", Offset = "0xEAE61C", VA = "0xEAE61C")]
			set
			{
			}
		}

		[Token(Token = "0x17000398")]
		public int maxVertices
		{
			[Token(Token = "0x6001C63")]
			[Address(RVA = "0xEAD1B0", Offset = "0xEAD1B0", VA = "0xEAD1B0")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6001C3B")]
		[Address(RVA = "0xEAD104", Offset = "0xEAD104", VA = "0xEAD104")]
		public void Init()
		{
		}

		[Token(Token = "0x6001C3C")]
		[Address(RVA = "0xEB190C", Offset = "0xEB190C", VA = "0xEB190C")]
		private void InitPartsNested()
		{
		}

		[Token(Token = "0x6001C3D")]
		[Address(RVA = "0xEB1508", Offset = "0xEB1508", VA = "0xEB1508")]
		private void InitParts()
		{
		}

		[Token(Token = "0x6001C3E")]
		[Address(RVA = "0xEAD140", Offset = "0xEAD140", VA = "0xEAD140")]
		public void SetMaterial(Material m)
		{
		}

		[Token(Token = "0x6001C3F")]
		[Address(RVA = "0xEAD61C", Offset = "0xEAD61C", VA = "0xEAD61C")]
		public void Index()
		{
		}

		[Token(Token = "0x6001C40")]
		[Address(RVA = "0xEB2110", Offset = "0xEB2110", VA = "0xEB2110")]
		private void Index(Part part)
		{
		}

		[Token(Token = "0x6001C41")]
		[Address(RVA = "0xEB223C", Offset = "0xEB223C", VA = "0xEB223C")]
		private void Index(Shape shape)
		{
		}

		[Token(Token = "0x6001C42")]
		[Address(RVA = "0xEADDF0", Offset = "0xEADDF0", VA = "0xEADDF0")]
		public void Save()
		{
		}

		[Token(Token = "0x6001C45")]
		[Address(RVA = "0xEB01D4", Offset = "0xEB01D4", VA = "0xEB01D4")]
		public Part GetPart(Option option)
		{
			return null;
		}

		[Token(Token = "0x6001C46")]
		[Address(RVA = "0xEAD618", Offset = "0xEAD618", VA = "0xEAD618")]
		public Part GetPart(Category type, byte id)
		{
			return null;
		}

		[Token(Token = "0x6001C47")]
		[Address(RVA = "0xEB26E8", Offset = "0xEB26E8", VA = "0xEB26E8")]
		public Part GetPart(byte type, byte id)
		{
			return null;
		}

		[Token(Token = "0x6001C48")]
		[Address(RVA = "0xEB2860", Offset = "0xEB2860", VA = "0xEB2860")]
		public HashSet<string> GetBlends(List<Option> options)
		{
			return null;
		}

		[Token(Token = "0x6001C49")]
		[Address(RVA = "0xEB2A34", Offset = "0xEB2A34", VA = "0xEB2A34")]
		public void Blend(string target, float value)
		{
		}

		[Token(Token = "0x6001C4A")]
		[Address(RVA = "0xEB2CF8", Offset = "0xEB2CF8", VA = "0xEB2CF8")]
		public void Select(Option option)
		{
		}

		[Token(Token = "0x6001C4B")]
		[Address(RVA = "0xEAE51C", Offset = "0xEAE51C", VA = "0xEAE51C")]
		public void Select(byte type, byte id, byte color = 0)
		{
		}

		[Token(Token = "0x6001C4C")]
		[Address(RVA = "0xEAE644", Offset = "0xEAE644", VA = "0xEAE644")]
		public void Deselect()
		{
		}

		[Token(Token = "0x6001C4D")]
		[Address(RVA = "0xEAEAA8", Offset = "0xEAEAA8", VA = "0xEAEAA8")]
		public void Deselect(Option option)
		{
		}

		[Token(Token = "0x6001C4E")]
		[Address(RVA = "0xEB2F20", Offset = "0xEB2F20", VA = "0xEB2F20")]
		public void Deselect(Part part)
		{
		}

		[Token(Token = "0x6001C4F")]
		[Address(RVA = "0xEAE710", Offset = "0xEAE710", VA = "0xEAE710")]
		public void Deselect(byte type)
		{
		}

		[Token(Token = "0x6001C50")]
		[Address(RVA = "0xEB2FC0", Offset = "0xEB2FC0", VA = "0xEB2FC0")]
		public Option GetOption()
		{
			return null;
		}

		[Token(Token = "0x6001C51")]
		[Address(RVA = "0xEAF54C", Offset = "0xEAF54C", VA = "0xEAF54C")]
		public Option Randomize(Option option)
		{
			return null;
		}

		[Token(Token = "0x6001C52")]
		[Address(RVA = "0xEB3130", Offset = "0xEB3130", VA = "0xEB3130")]
		public Option RandomOption(Category type, float chance = 1f)
		{
			return null;
		}

		[Token(Token = "0x6001C53")]
		[Address(RVA = "0xEB325C", Offset = "0xEB325C", VA = "0xEB325C")]
		public Option RandomColor(Option part)
		{
			return null;
		}

		[Token(Token = "0x6001C54")]
		[Address(RVA = "0xEB3198", Offset = "0xEB3198", VA = "0xEB3198")]
		public Option RandomPart(Category type)
		{
			return null;
		}

		[Token(Token = "0x6001C55")]
		[Address(RVA = "0xEAED48", Offset = "0xEAED48", VA = "0xEAED48")]
		public List<Option> GetOptions(Category type, bool selectedOnly = false)
		{
			return null;
		}

		[Token(Token = "0x6001C56")]
		[Address(RVA = "0xEAF15C", Offset = "0xEAF15C", VA = "0xEAF15C")]
		public List<Option> GetColorOptions(Category type, byte id, bool selectedOnly = false)
		{
			return null;
		}

		[Token(Token = "0x6001C57")]
		[Address(RVA = "0xEB0294", Offset = "0xEB0294", VA = "0xEB0294")]
		public bool HasColorOptions(Category type)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C58")]
		[Address(RVA = "0xEAF64C", Offset = "0xEAF64C", VA = "0xEAF64C")]
		public void GetSubmeshes(List<Option> options, List<Submesh> submeshes, Dictionary<string, List<Frame>> frames, Shared shared, out int vertices, out int triangles)
		{
		}

		[Token(Token = "0x6001C59")]
		[Address(RVA = "0xEAFE30", Offset = "0xEAFE30", VA = "0xEAFE30")]
		public bool HasPart(Option option)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C5A")]
		[Address(RVA = "0xEB33A0", Offset = "0xEB33A0", VA = "0xEB33A0")]
		public bool HasPart(Category type, byte id)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C5B")]
		[Address(RVA = "0xEB0150", Offset = "0xEB0150", VA = "0xEB0150")]
		public bool HasParts(byte id, params Category[] categories)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C5C")]
		[Address(RVA = "0xEB2798", Offset = "0xEB2798", VA = "0xEB2798")]
		public bool HasPart(byte type, byte id)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C5D")]
		[Address(RVA = "0xEB2BC4", Offset = "0xEB2BC4", VA = "0xEB2BC4")]
		public bool HasShape(string target)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C5E")]
		[Address(RVA = "0xEB3304", Offset = "0xEB3304", VA = "0xEB3304")]
		public bool HasType(Category type)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C5F")]
		[Address(RVA = "0xEB2F68", Offset = "0xEB2F68", VA = "0xEB2F68")]
		public bool HasType(byte type)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C60")]
		[Address(RVA = "0xEB0520", Offset = "0xEB0520", VA = "0xEB0520")]
		public int TypeCount(Category type)
		{
			return default(int);
		}

		[Token(Token = "0x6001C61")]
		[Address(RVA = "0xEB354C", Offset = "0xEB354C", VA = "0xEB354C")]
		public bool HasSubmesh(Option option)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C62")]
		[Address(RVA = "0xEB3550", Offset = "0xEB3550", VA = "0xEB3550")]
		public Submesh GetSubmesh(Option option, HashSet<string> blends, int vertices, int triangles)
		{
			return null;
		}

		[Token(Token = "0x6001C64")]
		private T GetOrAdd<T>(Transform t) where T : MonoBehaviour
		{
			return null;
		}

		[Token(Token = "0x6001C65")]
		[Address(RVA = "0xEB3990", Offset = "0xEB3990", VA = "0xEB3990")]
		public Model()
		{
		}
	}
	[Token(Token = "0x2000410")]
	public class Mouth : MonoBehaviour
	{
		[Token(Token = "0x2000411")]
		public class Settings
		{
			[Token(Token = "0x40014BF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int window;

			[Token(Token = "0x40014C0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float smooth_open;

			[Token(Token = "0x40014C1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float smooth_close;

			[Token(Token = "0x40014C2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public float cutoff;

			[Token(Token = "0x40014C3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float luf_factor;

			[Token(Token = "0x6001C6F")]
			[Address(RVA = "0xEB421C", Offset = "0xEB421C", VA = "0xEB421C")]
			public Settings()
			{
			}
		}

		[Token(Token = "0x2000412")]
		public class Controller
		{
			[Token(Token = "0x40014C4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float current;

			[Token(Token = "0x40014C5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float velocity;

			[Token(Token = "0x40014C6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float target;

			[Token(Token = "0x6001C70")]
			[Address(RVA = "0xEB4238", Offset = "0xEB4238", VA = "0xEB4238")]
			public Controller()
			{
			}
		}

		[Token(Token = "0x40014B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Voice voice;

		[Token(Token = "0x40014B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SkinnedMeshRenderer render;

		[Token(Token = "0x40014B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string[] names;

		[Token(Token = "0x40014B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Dictionary<string, int> shapes;

		[Token(Token = "0x40014BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Settings settings;

		[Token(Token = "0x40014BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float timer;

		[Token(Token = "0x40014BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public bool sync;

		[Token(Token = "0x40014BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Controller open;

		[Token(Token = "0x40014BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Controller wide;

		[Token(Token = "0x6001C66")]
		[Address(RVA = "0xEB3A50", Offset = "0xEB3A50", VA = "0xEB3A50")]
		private void Start()
		{
		}

		[Token(Token = "0x6001C67")]
		[Address(RVA = "0xEB3BA8", Offset = "0xEB3BA8", VA = "0xEB3BA8")]
		private void Index()
		{
		}

		[Token(Token = "0x6001C68")]
		[Address(RVA = "0xEB3C7C", Offset = "0xEB3C7C", VA = "0xEB3C7C")]
		public void Blend(string name, float value)
		{
		}

		[Token(Token = "0x6001C69")]
		[Address(RVA = "0xEB3D58", Offset = "0xEB3D58", VA = "0xEB3D58")]
		public bool HasShape(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C6A")]
		[Address(RVA = "0xEB3DB0", Offset = "0xEB3DB0", VA = "0xEB3DB0")]
		private void Update()
		{
		}

		[Token(Token = "0x6001C6B")]
		[Address(RVA = "0xEB3E50", Offset = "0xEB3E50", VA = "0xEB3E50")]
		private void SimpleSync2()
		{
		}

		[Token(Token = "0x6001C6C")]
		[Address(RVA = "0xEB4024", Offset = "0xEB4024", VA = "0xEB4024")]
		private float CutoffBackground(float lufs)
		{
			return default(float);
		}

		[Token(Token = "0x6001C6D")]
		[Address(RVA = "0xEB404C", Offset = "0xEB404C", VA = "0xEB404C")]
		private void SimpleSync1()
		{
		}

		[Token(Token = "0x6001C6E")]
		[Address(RVA = "0xEB4050", Offset = "0xEB4050", VA = "0xEB4050")]
		public Mouth()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000413")]
	public class Option
	{
		[Token(Token = "0x40014C7")]
		public const byte NONE = byte.MaxValue;

		[Token(Token = "0x40014C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public byte t;

		[Token(Token = "0x40014C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public byte i;

		[Token(Token = "0x40014CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
		public byte v;

		[NonSerialized]
		[Token(Token = "0x40014CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13")]
		public bool selected;

		[NonSerialized]
		[Token(Token = "0x40014CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<Option> children;

		[NonSerialized]
		[Token(Token = "0x40014CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int index;

		[NonSerialized]
		[Token(Token = "0x40014CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool locked;

		[NonSerialized]
		[Token(Token = "0x40014CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string name;

		[NonSerialized]
		[Token(Token = "0x40014D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Shot.Type shot;

		[NonSerialized]
		[Token(Token = "0x40014D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Color color;

		[NonSerialized]
		[Token(Token = "0x40014D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public int layer;

		[NonSerialized]
		[Token(Token = "0x40014D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float chance;

		[Token(Token = "0x17000399")]
		public bool isModel
		{
			[Token(Token = "0x6001C77")]
			[Address(RVA = "0xEAE378", Offset = "0xEAE378", VA = "0xEAE378")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700039A")]
		public bool isNone
		{
			[Token(Token = "0x6001C78")]
			[Address(RVA = "0xEAE450", Offset = "0xEAE450", VA = "0xEAE450")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700039B")]
		public byte preset
		{
			[Token(Token = "0x6001C79")]
			[Address(RVA = "0xEB4448", Offset = "0xEB4448", VA = "0xEB4448")]
			get
			{
				return default(byte);
			}
			[Token(Token = "0x6001C7A")]
			[Address(RVA = "0xEB4450", Offset = "0xEB4450", VA = "0xEB4450")]
			set
			{
			}
		}

		[Token(Token = "0x1700039C")]
		public Category category
		{
			[Token(Token = "0x6001C7B")]
			[Address(RVA = "0xEB4458", Offset = "0xEB4458", VA = "0xEB4458")]
			get
			{
				return default(Category);
			}
		}

		[Token(Token = "0x1700039D")]
		public bool hasChildren
		{
			[Token(Token = "0x6001C84")]
			[Address(RVA = "0xEB46D0", Offset = "0xEB46D0", VA = "0xEB46D0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700039E")]
		public int SortOrder
		{
			[Token(Token = "0x6001C8D")]
			[Address(RVA = "0xEB55F0", Offset = "0xEB55F0", VA = "0xEB55F0")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6001C71")]
		[Address(RVA = "0xEB4240", Offset = "0xEB4240", VA = "0xEB4240")]
		public Option()
		{
		}

		[Token(Token = "0x6001C72")]
		[Address(RVA = "0xEB42A0", Offset = "0xEB42A0", VA = "0xEB42A0")]
		public Option(Category type, byte id, byte color = 0)
		{
		}

		[Token(Token = "0x6001C73")]
		[Address(RVA = "0xEB432C", Offset = "0xEB432C", VA = "0xEB432C")]
		public Option(Option other)
		{
		}

		[Token(Token = "0x6001C74")]
		[Address(RVA = "0xEB43BC", Offset = "0xEB43BC", VA = "0xEB43BC")]
		public Option(byte type, byte id, byte value = 0)
		{
		}

		[Token(Token = "0x6001C75")]
		[Address(RVA = "0xEB2444", Offset = "0xEB2444", VA = "0xEB2444")]
		public Option(Part part)
		{
		}

		[Token(Token = "0x6001C76")]
		[Address(RVA = "0xEB3094", Offset = "0xEB3094", VA = "0xEB3094")]
		public Option(Model model)
		{
		}

		[Token(Token = "0x6001C7C")]
		[Address(RVA = "0xEB4460", Offset = "0xEB4460", VA = "0xEB4460")]
		public List<Option> AsList()
		{
			return null;
		}

		[Token(Token = "0x6001C7D")]
		[Address(RVA = "0xEB24EC", Offset = "0xEB24EC", VA = "0xEB24EC")]
		public void AddChild(Option option)
		{
		}

		[Token(Token = "0x6001C7E")]
		[Address(RVA = "0xEB4724", Offset = "0xEB4724", VA = "0xEB4724")]
		public void Add(Category type, byte id, byte color = 0)
		{
		}

		[Token(Token = "0x6001C7F")]
		[Address(RVA = "0xEB47AC", Offset = "0xEB47AC", VA = "0xEB47AC")]
		public void Add(byte id, params Category[] categories)
		{
		}

		[Token(Token = "0x6001C80")]
		[Address(RVA = "0xEB4824", Offset = "0xEB4824", VA = "0xEB4824")]
		public void Add(List<Option> list)
		{
		}

		[Token(Token = "0x6001C81")]
		[Address(RVA = "0xEB4960", Offset = "0xEB4960", VA = "0xEB4960")]
		public void Choice(Category category, float chance = 1f)
		{
		}

		[Token(Token = "0x6001C82")]
		[Address(RVA = "0xEB49E8", Offset = "0xEB49E8", VA = "0xEB49E8")]
		public void Remove(Category type)
		{
		}

		[Token(Token = "0x6001C83")]
		[Address(RVA = "0xEB23B8", Offset = "0xEB23B8", VA = "0xEB23B8")]
		public void Clear()
		{
		}

		[Token(Token = "0x6001C85")]
		[Address(RVA = "0xEB4C7C", Offset = "0xEB4C7C", VA = "0xEB4C7C")]
		public Option FindChild(Category category)
		{
			return null;
		}

		[Token(Token = "0x6001C86")]
		[Address(RVA = "0xEB4E10", Offset = "0xEB4E10", VA = "0xEB4E10")]
		public Option Find(Category cat)
		{
			return null;
		}

		[Token(Token = "0x6001C87")]
		[Address(RVA = "0xEB4F74", Offset = "0xEB4F74", VA = "0xEB4F74")]
		public static Option Putter(byte id, byte handColor = 15)
		{
			return null;
		}

		[Token(Token = "0x6001C88")]
		[Address(RVA = "0xEB5038", Offset = "0xEB5038", VA = "0xEB5038")]
		public void ColorMatch(Category target, Category source)
		{
		}

		[Token(Token = "0x6001C89")]
		[Address(RVA = "0xEB50C0", Offset = "0xEB50C0", VA = "0xEB50C0")]
		public byte GetColor(Category type, byte fallback = 0)
		{
			return default(byte);
		}

		[Token(Token = "0x6001C8A")]
		[Address(RVA = "0xEB5238", Offset = "0xEB5238", VA = "0xEB5238", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6001C8B")]
		[Address(RVA = "0xEB5408", Offset = "0xEB5408", VA = "0xEB5408")]
		public static void debug(List<Option> options, string label = "OPTIONS")
		{
		}

		[Token(Token = "0x6001C8C")]
		[Address(RVA = "0xEB55D8", Offset = "0xEB55D8", VA = "0xEB55D8")]
		public static byte Byte(int number, byte fallback = 0)
		{
			return default(byte);
		}
	}
	[Token(Token = "0x2000414")]
	public class Overlay : MonoBehaviour
	{
		[Token(Token = "0x40014D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public View view;

		[Token(Token = "0x40014D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private VRPointerHover viewHover;

		[Token(Token = "0x40014D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public ScaleOnHover add_btn;

		[Token(Token = "0x40014D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public ScaleOnHover remove_btn;

		[Token(Token = "0x40014D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Vector3 buttonScale;

		[Token(Token = "0x1700039F")]
		public bool hovering
		{
			[Token(Token = "0x6001C8E")]
			[Address(RVA = "0xEB5624", Offset = "0xEB5624", VA = "0xEB5624")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001C8F")]
			[Address(RVA = "0xEB562C", Offset = "0xEB562C", VA = "0xEB562C")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x6001C90")]
		[Address(RVA = "0xEB5638", Offset = "0xEB5638", VA = "0xEB5638")]
		public void Show(View _view)
		{
		}

		[Token(Token = "0x6001C91")]
		[Address(RVA = "0xEB589C", Offset = "0xEB589C", VA = "0xEB589C")]
		public void Hide()
		{
		}

		[Token(Token = "0x6001C92")]
		[Address(RVA = "0xEB58D8", Offset = "0xEB58D8", VA = "0xEB58D8")]
		public void OnButtonHover(bool hover)
		{
		}

		[Token(Token = "0x6001C93")]
		[Address(RVA = "0xEB5884", Offset = "0xEB5884", VA = "0xEB5884")]
		private void UpdateButtons()
		{
		}

		[Token(Token = "0x6001C94")]
		[Address(RVA = "0xEB597C", Offset = "0xEB597C", VA = "0xEB597C")]
		private void ShowButtons()
		{
		}

		[Token(Token = "0x6001C95")]
		[Address(RVA = "0xEB58E4", Offset = "0xEB58E4", VA = "0xEB58E4")]
		private void HideButtons()
		{
		}

		[Token(Token = "0x6001C96")]
		[Address(RVA = "0xEB5A5C", Offset = "0xEB5A5C", VA = "0xEB5A5C")]
		public void OnAddClicked()
		{
		}

		[Token(Token = "0x6001C97")]
		[Address(RVA = "0xEB5B30", Offset = "0xEB5B30", VA = "0xEB5B30")]
		public void OnRemoveClicked()
		{
		}

		[Token(Token = "0x6001C98")]
		[Address(RVA = "0xEB5C04", Offset = "0xEB5C04", VA = "0xEB5C04")]
		private void Update()
		{
		}

		[Token(Token = "0x6001C99")]
		[Address(RVA = "0xEB57FC", Offset = "0xEB57FC", VA = "0xEB57FC")]
		private void HoverParent()
		{
		}

		[Token(Token = "0x6001C9A")]
		[Address(RVA = "0xEB56F8", Offset = "0xEB56F8", VA = "0xEB56F8")]
		private void Attach()
		{
		}

		[Token(Token = "0x6001C9B")]
		[Address(RVA = "0xEB5768", Offset = "0xEB5768", VA = "0xEB5768")]
		private void Track()
		{
		}

		[Token(Token = "0x6001C9C")]
		[Address(RVA = "0xEB5C80", Offset = "0xEB5C80", VA = "0xEB5C80")]
		public Overlay()
		{
		}
	}
	[Token(Token = "0x2000415")]
	public class Page
	{
		[Token(Token = "0x40014DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int index;

		[Token(Token = "0x40014DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int size;

		[Token(Token = "0x40014DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int items;

		[Token(Token = "0x170003A0")]
		public int start
		{
			[Token(Token = "0x6001CA0")]
			[Address(RVA = "0xEB5D70", Offset = "0xEB5D70", VA = "0xEB5D70")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170003A1")]
		public int end
		{
			[Token(Token = "0x6001CA1")]
			[Address(RVA = "0xEB5D7C", Offset = "0xEB5D7C", VA = "0xEB5D7C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170003A2")]
		public bool hasNext
		{
			[Token(Token = "0x6001CA2")]
			[Address(RVA = "0xEB5D30", Offset = "0xEB5D30", VA = "0xEB5D30")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170003A3")]
		public bool hasPrev
		{
			[Token(Token = "0x6001CA3")]
			[Address(RVA = "0xEB5D60", Offset = "0xEB5D60", VA = "0xEB5D60")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001C9D")]
		[Address(RVA = "0xEB5CE0", Offset = "0xEB5CE0", VA = "0xEB5CE0")]
		public Page(int _size = 16)
		{
		}

		[Token(Token = "0x6001C9E")]
		[Address(RVA = "0xEB5D10", Offset = "0xEB5D10", VA = "0xEB5D10")]
		public void Next()
		{
		}

		[Token(Token = "0x6001C9F")]
		[Address(RVA = "0xEB5D4C", Offset = "0xEB5D4C", VA = "0xEB5D4C")]
		public void Prev()
		{
		}

		[Token(Token = "0x6001CA4")]
		[Address(RVA = "0xEB5D98", Offset = "0xEB5D98", VA = "0xEB5D98", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x2000416")]
	public class Palette
	{
		[Token(Token = "0x40014DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Vector2 area;

		[Token(Token = "0x40014DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int[] blocks;

		[Token(Token = "0x40014DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float bounds;

		[Token(Token = "0x40014E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float uvc;

		[Token(Token = "0x40014E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float uvc2;

		[Token(Token = "0x40014E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Palette Instance;

		[Token(Token = "0x6001CA5")]
		[Address(RVA = "0xEB600C", Offset = "0xEB600C", VA = "0xEB600C")]
		public Palette(Vector2 _area, int[] _blocks)
		{
		}

		[Token(Token = "0x6001CA6")]
		[Address(RVA = "0xEB60A8", Offset = "0xEB60A8", VA = "0xEB60A8")]
		private int block(float uvx)
		{
			return default(int);
		}

		[Token(Token = "0x6001CA7")]
		[Address(RVA = "0xEB612C", Offset = "0xEB612C", VA = "0xEB612C")]
		private int colors(float uvx)
		{
			return default(int);
		}

		[Token(Token = "0x6001CA8")]
		[Address(RVA = "0xEB6160", Offset = "0xEB6160", VA = "0xEB6160")]
		private bool dynamic(float uvy)
		{
			return default(bool);
		}

		[Token(Token = "0x6001CA9")]
		[Address(RVA = "0xEB6170", Offset = "0xEB6170", VA = "0xEB6170")]
		private int col(float uvx)
		{
			return default(int);
		}

		[Token(Token = "0x6001CAA")]
		[Address(RVA = "0xEB61E4", Offset = "0xEB61E4", VA = "0xEB61E4")]
		private int color(float uvx)
		{
			return default(int);
		}

		[Token(Token = "0x6001CAB")]
		[Address(RVA = "0xEB6224", Offset = "0xEB6224", VA = "0xEB6224")]
		private float set(float uvx, int color)
		{
			return default(float);
		}

		[Token(Token = "0x6001CAC")]
		[Address(RVA = "0xEB6284", Offset = "0xEB6284", VA = "0xEB6284")]
		private int setUVS(Vector2[] uvs, int target)
		{
			return default(int);
		}

		[Token(Token = "0x6001CAD")]
		[Address(RVA = "0xEB6364", Offset = "0xEB6364", VA = "0xEB6364")]
		private Vector2 getUVS(Vector2[] uvs, int target)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001CAE")]
		[Address(RVA = "0xEB38B0", Offset = "0xEB38B0", VA = "0xEB38B0")]
		public static int SetColor(Vector2[] uvs, int _color)
		{
			return default(int);
		}

		[Token(Token = "0x6001CAF")]
		[Address(RVA = "0xEB6438", Offset = "0xEB6438", VA = "0xEB6438")]
		public static Vector2 GetUVS(Vector2[] uvs, int _color)
		{
			return default(Vector2);
		}
	}
	[Token(Token = "0x2000417")]
	public class Parser
	{
		[Token(Token = "0x2000418")]
		public enum BlendTypes
		{
			[Token(Token = "0x40014E4")]
			with,
			[Token(Token = "0x40014E5")]
			anim
		}

		[Token(Token = "0x6001CB0")]
		[Address(RVA = "0xEB6518", Offset = "0xEB6518", VA = "0xEB6518")]
		public static void type_id_tag_iap(string name, out byte type, out byte id, out string tag, out string iap)
		{
		}

		[Token(Token = "0x6001CB1")]
		[Address(RVA = "0xEB1320", Offset = "0xEB1320", VA = "0xEB1320")]
		public static void type_id_iap(string name, out byte type, out byte id, out string iap)
		{
		}

		[Token(Token = "0x6001CB2")]
		[Address(RVA = "0xEB69B8", Offset = "0xEB69B8", VA = "0xEB69B8")]
		public static byte preset_id(string name, bool quiet = false)
		{
			return default(byte);
		}

		[Token(Token = "0x6001CB3")]
		[Address(RVA = "0xEB671C", Offset = "0xEB671C", VA = "0xEB671C")]
		public static Category ParseType(string type)
		{
			return default(Category);
		}

		[Token(Token = "0x6001CB4")]
		[Address(RVA = "0xEB6AE8", Offset = "0xEB6AE8", VA = "0xEB6AE8")]
		public static void blend_shape(string blend_shape_name, out string type, out string name)
		{
		}

		[Token(Token = "0x6001CB5")]
		[Address(RVA = "0xEB6C94", Offset = "0xEB6C94", VA = "0xEB6C94")]
		public static BlendTypes TryParseBlendType(string s)
		{
			return default(BlendTypes);
		}

		[Token(Token = "0x6001CB6")]
		[Address(RVA = "0xEB6D90", Offset = "0xEB6D90", VA = "0xEB6D90")]
		public Parser()
		{
		}
	}
	[Token(Token = "0x2000419")]
	public class Part : MonoBehaviour
	{
		[Token(Token = "0x40014E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public byte type;

		[Token(Token = "0x40014E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public byte id;

		[Token(Token = "0x40014E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		public byte color;

		[Token(Token = "0x40014E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
		public byte colors;

		[Token(Token = "0x40014EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string iap;

		[Token(Token = "0x40014EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string blend;

		[Token(Token = "0x40014EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Renderer render;

		[Token(Token = "0x40014ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public MeshFilter filter;

		[Token(Token = "0x40014EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Submesh submesh;

		[Token(Token = "0x40014EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Shape basis;

		[Token(Token = "0x40014F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public List<Shape> shapes;

		[Token(Token = "0x40014F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public List<Frame> frames;

		[Token(Token = "0x40014F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Shot.Type shot;

		[Token(Token = "0x40014F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[Header("IAP")]
		public bool IsLocked;

		[Token(Token = "0x40014F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public ProductDefinition product;

		[Token(Token = "0x170003A4")]
		public int warnings
		{
			[Token(Token = "0x6001CB7")]
			[Address(RVA = "0xEB6D98", Offset = "0xEB6D98", VA = "0xEB6D98")]
			[CompilerGenerated]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001CB8")]
			[Address(RVA = "0xEB6DA0", Offset = "0xEB6DA0", VA = "0xEB6DA0")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x170003A5")]
		public int errors
		{
			[Token(Token = "0x6001CB9")]
			[Address(RVA = "0xEB6DA8", Offset = "0xEB6DA8", VA = "0xEB6DA8")]
			[CompilerGenerated]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001CBA")]
			[Address(RVA = "0xEB6DB0", Offset = "0xEB6DB0", VA = "0xEB6DB0")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x170003A6")]
		public bool IsFree
		{
			[Token(Token = "0x6001CC4")]
			[Address(RVA = "0xEB3308", Offset = "0xEB3308", VA = "0xEB3308")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170003A7")]
		public bool IsOwned
		{
			[Token(Token = "0x6001CC5")]
			[Address(RVA = "0xEB3318", Offset = "0xEB3318", VA = "0xEB3318")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170003A8")]
		public bool selected
		{
			[Token(Token = "0x6001CC6")]
			[Address(RVA = "0xEB2424", Offset = "0xEB2424", VA = "0xEB2424")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001CC7")]
			[Address(RVA = "0xEB2D18", Offset = "0xEB2D18", VA = "0xEB2D18")]
			set
			{
			}
		}

		[Token(Token = "0x170003A9")]
		public Mesh sharedMesh
		{
			[Token(Token = "0x6001CC9")]
			[Address(RVA = "0xEB73FC", Offset = "0xEB73FC", VA = "0xEB73FC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003AA")]
		public Mesh mesh
		{
			[Token(Token = "0x6001CCA")]
			[Address(RVA = "0xEB7658", Offset = "0xEB7658", VA = "0xEB7658")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003AB")]
		public int blendShapeCount
		{
			[Token(Token = "0x6001CCB")]
			[Address(RVA = "0xEB7604", Offset = "0xEB7604", VA = "0xEB7604")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170003AC")]
		public bool hasShapes
		{
			[Token(Token = "0x6001CCC")]
			[Address(RVA = "0xEB7674", Offset = "0xEB7674", VA = "0xEB7674")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170003AD")]
		public Category category
		{
			[Token(Token = "0x6001CD1")]
			[Address(RVA = "0xEB768C", Offset = "0xEB768C", VA = "0xEB768C")]
			get
			{
				return default(Category);
			}
		}

		[Token(Token = "0x6001CBB")]
		[Address(RVA = "0xEB1F78", Offset = "0xEB1F78", VA = "0xEB1F78")]
		public void Init()
		{
		}

		[Token(Token = "0x6001CBC")]
		[Address(RVA = "0xEB71F0", Offset = "0xEB71F0", VA = "0xEB71F0")]
		private void InitIAP()
		{
		}

		[Token(Token = "0x6001CBD")]
		[Address(RVA = "0xEB6F54", Offset = "0xEB6F54", VA = "0xEB6F54")]
		private void InitShapes()
		{
		}

		[Token(Token = "0x6001CBE")]
		[Address(RVA = "0xEB20EC", Offset = "0xEB20EC", VA = "0xEB20EC")]
		public void SetMaterial(Material m)
		{
		}

		[Token(Token = "0x6001CBF")]
		[Address(RVA = "0xEB33A4", Offset = "0xEB33A4", VA = "0xEB33A4")]
		public Color GetColorSwatch(byte color)
		{
			return default(Color);
		}

		[Token(Token = "0x6001CC0")]
		[Address(RVA = "0xEB2108", Offset = "0xEB2108", VA = "0xEB2108")]
		public void Index()
		{
		}

		[Token(Token = "0x6001CC1")]
		[Address(RVA = "0xEB2DC8", Offset = "0xEB2DC8", VA = "0xEB2DC8")]
		public void Deselect()
		{
		}

		[Token(Token = "0x6001CC2")]
		[Address(RVA = "0xEB2D40", Offset = "0xEB2D40", VA = "0xEB2D40")]
		public void SetColor(byte c)
		{
		}

		[Token(Token = "0x6001CC3")]
		[Address(RVA = "0xEB762C", Offset = "0xEB762C", VA = "0xEB762C")]
		private byte ClampColor(byte c)
		{
			return default(byte);
		}

		[Token(Token = "0x6001CC8")]
		[Address(RVA = "0xEB36F4", Offset = "0xEB36F4", VA = "0xEB36F4")]
		public Shape GetShape(HashSet<string> blends)
		{
			return null;
		}

		[Token(Token = "0x6001CCD")]
		[Address(RVA = "0xEB6DB8", Offset = "0xEB6DB8", VA = "0xEB6DB8")]
		private void SwapSkinnedMeshRender()
		{
		}

		[Token(Token = "0x6001CCE")]
		private T Swap<T>(Component component) where T : Component
		{
			return null;
		}

		[Token(Token = "0x6001CCF")]
		private T Add<T>() where T : Component
		{
			return null;
		}

		[Token(Token = "0x6001CD0")]
		[Address(RVA = "0xEB6F10", Offset = "0xEB6F10", VA = "0xEB6F10")]
		public void SetLayer(string layer)
		{
		}

		[Token(Token = "0x6001CD2")]
		[Address(RVA = "0xEB7694", Offset = "0xEB7694", VA = "0xEB7694")]
		public Part()
		{
		}
	}
	[Token(Token = "0x200041A")]
	public class Photographer : MonoBehaviour
	{
		[Token(Token = "0x40014F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Camera cam;

		[Token(Token = "0x40014F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int size;

		[Token(Token = "0x40014FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Dictionary<Shot.Type, Shot> index;

		[Token(Token = "0x40014FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private RenderTexture rt;

		[Token(Token = "0x170003AE")]
		public Shot shot
		{
			[Token(Token = "0x6001CD3")]
			[Address(RVA = "0xEB76A4", Offset = "0xEB76A4", VA = "0xEB76A4")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001CD4")]
			[Address(RVA = "0xEB76AC", Offset = "0xEB76AC", VA = "0xEB76AC")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x170003AF")]
		public Shot[] shots
		{
			[Token(Token = "0x6001CD6")]
			[Address(RVA = "0xEB77A4", Offset = "0xEB77A4", VA = "0xEB77A4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003B0")]
		public RenderTexture renderTexture
		{
			[Token(Token = "0x6001CDE")]
			[Address(RVA = "0xEB7A2C", Offset = "0xEB7A2C", VA = "0xEB7A2C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001CD5")]
		[Address(RVA = "0xEB76B4", Offset = "0xEB76B4", VA = "0xEB76B4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001CD7")]
		[Address(RVA = "0xEB76B8", Offset = "0xEB76B8", VA = "0xEB76B8")]
		private void IndexShots()
		{
		}

		[Token(Token = "0x6001CD8")]
		[Address(RVA = "0xEB7808", Offset = "0xEB7808", VA = "0xEB7808")]
		public void Init()
		{
		}

		[Token(Token = "0x6001CD9")]
		[Address(RVA = "0xEB7940", Offset = "0xEB7940", VA = "0xEB7940")]
		public Texture2D CreateTexture()
		{
			return null;
		}

		[Token(Token = "0x6001CDA")]
		[Address(RVA = "0xEB7A48", Offset = "0xEB7A48", VA = "0xEB7A48")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001CDB")]
		[Address(RVA = "0xEB7BC8", Offset = "0xEB7BC8", VA = "0xEB7BC8")]
		public void Snapshot(Texture texture, Shot.Type shot = Shot.Type.Head)
		{
		}

		[Token(Token = "0x6001CDC")]
		[Address(RVA = "0xEB7C6C", Offset = "0xEB7C6C", VA = "0xEB7C6C")]
		public void Goto(Shot.Type t)
		{
		}

		[Token(Token = "0x6001CDD")]
		[Address(RVA = "0xEB7D08", Offset = "0xEB7D08", VA = "0xEB7D08")]
		public void Goto(Shot shot)
		{
		}

		[Token(Token = "0x6001CDF")]
		[Address(RVA = "0xEB7DE8", Offset = "0xEB7DE8", VA = "0xEB7DE8")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x6001CE0")]
		[Address(RVA = "0xEB7EB0", Offset = "0xEB7EB0", VA = "0xEB7EB0")]
		private void DrawShot(Shot shot)
		{
		}

		[Token(Token = "0x6001CE1")]
		[Address(RVA = "0xEB7F6C", Offset = "0xEB7F6C", VA = "0xEB7F6C")]
		public Photographer()
		{
		}
	}
	[Token(Token = "0x200041B")]
	public class Players : View
	{
		[Token(Token = "0x6001CE2")]
		[Address(RVA = "0xEB7FF0", Offset = "0xEB7FF0", VA = "0xEB7FF0")]
		public Players()
		{
		}
	}
	[Token(Token = "0x200041C")]
	[CreateAssetMenu(fileName = "preset_0", menuName = "Avatars/Preset", order = 1)]
	public class Preset : ScriptableObject
	{
		[Token(Token = "0x40014FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Header("Settings")]
		public byte id;

		[Token(Token = "0x40014FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string label;

		[Token(Token = "0x40014FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool locked;

		[Token(Token = "0x40014FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public ProductDefinition product;

		[Token(Token = "0x4001500")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		public List<Option> options;

		[Token(Token = "0x170003B1")]
		public bool IsOwned
		{
			[Token(Token = "0x6001CE5")]
			[Address(RVA = "0xEB829C", Offset = "0xEB829C", VA = "0xEB829C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170003B2")]
		public bool IsFree
		{
			[Token(Token = "0x6001CE6")]
			[Address(RVA = "0xEB8324", Offset = "0xEB8324", VA = "0xEB8324")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170003B3")]
		public Option Option
		{
			[Token(Token = "0x6001CE7")]
			[Address(RVA = "0xEAD2C4", Offset = "0xEAD2C4", VA = "0xEAD2C4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001CE3")]
		[Address(RVA = "0xEAD218", Offset = "0xEAD218", VA = "0xEAD218")]
		public void Init()
		{
		}

		[Token(Token = "0x6001CE4")]
		[Address(RVA = "0xEAD23C", Offset = "0xEAD23C", VA = "0xEAD23C")]
		public bool Valid()
		{
			return default(bool);
		}

		[Token(Token = "0x6001CE8")]
		[Address(RVA = "0xEADC1C", Offset = "0xEADC1C", VA = "0xEADC1C")]
		public Option GetOption([Optional] Option color)
		{
			return null;
		}

		[Token(Token = "0x6001CE9")]
		[Address(RVA = "0xEB8334", Offset = "0xEB8334", VA = "0xEB8334")]
		private bool SameCategory(Option part, Option variant)
		{
			return default(bool);
		}

		[Token(Token = "0x6001CEA")]
		[Address(RVA = "0xEADBB4", Offset = "0xEADBB4", VA = "0xEADBB4")]
		public static Option Visor(int color)
		{
			return null;
		}

		[Token(Token = "0x6001CEB")]
		[Address(RVA = "0xEB8364", Offset = "0xEB8364", VA = "0xEB8364")]
		public Preset()
		{
		}
	}
	[Token(Token = "0x200041D")]
	public class Rig
	{
		[Token(Token = "0x4001501")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SkinnedMeshRenderer renderer;

		[Token(Token = "0x4001502")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform[] bones;

		[Token(Token = "0x4001503")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Matrix4x4[] bindPoses;

		[Token(Token = "0x4001504")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Dictionary<Category, byte> indices;

		[Token(Token = "0x4001505")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Dictionary<Category, Category> parents;

		[Token(Token = "0x6001CEC")]
		[Address(RVA = "0xEB840C", Offset = "0xEB840C", VA = "0xEB840C")]
		public Rig(SkinnedMeshRenderer render)
		{
		}

		[Token(Token = "0x6001CED")]
		[Address(RVA = "0xEB8C1C", Offset = "0xEB8C1C", VA = "0xEB8C1C")]
		public static byte GetIndex(Category type)
		{
			return default(byte);
		}

		[Token(Token = "0x6001CEE")]
		[Address(RVA = "0xEB8CF0", Offset = "0xEB8CF0", VA = "0xEB8CF0")]
		public Transform GetBone(Category type)
		{
			return null;
		}

		[Token(Token = "0x6001CEF")]
		[Address(RVA = "0xEB8DF0", Offset = "0xEB8DF0", VA = "0xEB8DF0")]
		public Transform GetParent(Category type)
		{
			return null;
		}

		[Token(Token = "0x6001CF0")]
		[Address(RVA = "0xEB8438", Offset = "0xEB8438", VA = "0xEB8438")]
		protected void Build()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200041E")]
	public class Rule
	{
		[Token(Token = "0x200041F")]
		public enum Type
		{
			[Token(Token = "0x4001509")]
			Multiselect,
			[Token(Token = "0x400150A")]
			GlobalColor,
			[Token(Token = "0x400150B")]
			Required
		}

		[Token(Token = "0x4001506")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Category category;

		[Token(Token = "0x4001507")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Type[] types;

		[Token(Token = "0x6001CF2")]
		[Address(RVA = "0xEB9090", Offset = "0xEB9090", VA = "0xEB9090")]
		public bool Has(Type _type)
		{
			return default(bool);
		}

		[Token(Token = "0x6001CF3")]
		[Address(RVA = "0xEB90E8", Offset = "0xEB90E8", VA = "0xEB90E8")]
		public Rule()
		{
		}
	}
	[Token(Token = "0x2000420")]
	public class Selectable : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000421")]
		public class TextColor
		{
			[Token(Token = "0x4001510")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Color selected;

			[Token(Token = "0x4001511")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Color deselected;

			[Token(Token = "0x6001CFA")]
			[Address(RVA = "0xEB9564", Offset = "0xEB9564", VA = "0xEB9564")]
			public TextColor()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000422")]
		public class Objects
		{
			[Token(Token = "0x4001512")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GameObject[] selected;

			[Token(Token = "0x4001513")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public GameObject[] deselected;

			[Token(Token = "0x6001CFB")]
			[Address(RVA = "0xEB9234", Offset = "0xEB9234", VA = "0xEB9234")]
			public void Show(bool select)
			{
			}

			[Token(Token = "0x6001CFC")]
			[Address(RVA = "0xEB956C", Offset = "0xEB956C", VA = "0xEB956C")]
			public Objects()
			{
			}
		}

		[Token(Token = "0x400150C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TextMeshProUGUI textfield;

		[Token(Token = "0x400150D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TextColor colors;

		[Token(Token = "0x400150E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Objects objects;

		[Token(Token = "0x400150F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool _selected;

		[Token(Token = "0x170003B4")]
		public bool selected
		{
			[Token(Token = "0x6001CF4")]
			[Address(RVA = "0xEB90F8", Offset = "0xEB90F8", VA = "0xEB90F8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001CF5")]
			[Address(RVA = "0xEB9100", Offset = "0xEB9100", VA = "0xEB9100")]
			set
			{
			}
		}

		[Token(Token = "0x170003B5")]
		public string text
		{
			[Token(Token = "0x6001CF7")]
			[Address(RVA = "0xEB942C", Offset = "0xEB942C", VA = "0xEB942C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001CF6")]
			[Address(RVA = "0xEB938C", Offset = "0xEB938C", VA = "0xEB938C")]
			set
			{
			}
		}

		[Token(Token = "0x170003B6")]
		public Color textcolor
		{
			[Token(Token = "0x6001CF8")]
			[Address(RVA = "0xEB9170", Offset = "0xEB9170", VA = "0xEB9170")]
			set
			{
			}
		}

		[Token(Token = "0x6001CF9")]
		[Address(RVA = "0xEB94D0", Offset = "0xEB94D0", VA = "0xEB94D0")]
		public Selectable()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000423")]
	public class Shape
	{
		[Token(Token = "0x4001514")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x4001515")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Part part;

		[Token(Token = "0x4001516")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3[] vertices;

		[Token(Token = "0x4001517")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3[] normals;

		[Token(Token = "0x4001518")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float weight;

		[Token(Token = "0x6001CFD")]
		[Address(RVA = "0xEB734C", Offset = "0xEB734C", VA = "0xEB734C")]
		public Shape(Part _part)
		{
		}

		[Token(Token = "0x6001CFE")]
		[Address(RVA = "0xEB7418", Offset = "0xEB7418", VA = "0xEB7418")]
		public Shape(Part _part, string _name, int index)
		{
		}

		[Token(Token = "0x6001CFF")]
		[Address(RVA = "0xEB2C1C", Offset = "0xEB2C1C", VA = "0xEB2C1C")]
		public void Blend(float value)
		{
		}
	}
	[Token(Token = "0x2000424")]
	public class Shared : MonoBehaviour
	{
		[Token(Token = "0x4001519")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public byte version;

		[Token(Token = "0x400151A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Part[] parts;

		[Token(Token = "0x400151B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Dictionary<byte, Dictionary<byte, Part>> index;

		[Token(Token = "0x400151C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Dictionary<string, List<Shape>> shapes;

		[Token(Token = "0x400151D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool loggedError;

		[Token(Token = "0x170003B7")]
		public bool selected
		{
			[Token(Token = "0x6001D06")]
			[Address(RVA = "0xEB9F10", Offset = "0xEB9F10", VA = "0xEB9F10")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001D07")]
			[Address(RVA = "0xEB95D4", Offset = "0xEB95D4", VA = "0xEB95D4")]
			set
			{
			}
		}

		[Token(Token = "0x170003B8")]
		public int maxVertices
		{
			[Token(Token = "0x6001D14")]
			[Address(RVA = "0xEAD09C", Offset = "0xEAD09C", VA = "0xEAD09C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6001D00")]
		[Address(RVA = "0xEAD010", Offset = "0xEAD010", VA = "0xEAD010")]
		public void Init()
		{
		}

		[Token(Token = "0x6001D01")]
		[Address(RVA = "0xEB95FC", Offset = "0xEB95FC", VA = "0xEB95FC")]
		private void InitParts()
		{
		}

		[Token(Token = "0x6001D02")]
		[Address(RVA = "0xEAD02C", Offset = "0xEAD02C", VA = "0xEAD02C")]
		public void SetMaterial(Material m)
		{
		}

		[Token(Token = "0x6001D03")]
		[Address(RVA = "0xEAD814", Offset = "0xEAD814", VA = "0xEAD814")]
		public void Index()
		{
		}

		[Token(Token = "0x6001D04")]
		[Address(RVA = "0xEB9C68", Offset = "0xEB9C68", VA = "0xEB9C68")]
		private void Index(Part part)
		{
		}

		[Token(Token = "0x6001D05")]
		[Address(RVA = "0xEB9D94", Offset = "0xEB9D94", VA = "0xEB9D94")]
		private void Index(Shape shape)
		{
		}

		[Token(Token = "0x6001D08")]
		[Address(RVA = "0xEB9F30", Offset = "0xEB9F30", VA = "0xEB9F30")]
		public Part GetPart(Option option)
		{
			return null;
		}

		[Token(Token = "0x6001D09")]
		[Address(RVA = "0xEB9FFC", Offset = "0xEB9FFC", VA = "0xEB9FFC")]
		public Part GetPart(Category type, byte id)
		{
			return null;
		}

		[Token(Token = "0x6001D0A")]
		[Address(RVA = "0xEB9F4C", Offset = "0xEB9F4C", VA = "0xEB9F4C")]
		public Part GetPart(byte type, byte id)
		{
			return null;
		}

		[Token(Token = "0x6001D0B")]
		[Address(RVA = "0xEBA0C8", Offset = "0xEBA0C8", VA = "0xEBA0C8")]
		public bool HasPart(Option option)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D0C")]
		[Address(RVA = "0xEBA0E4", Offset = "0xEBA0E4", VA = "0xEBA0E4")]
		public bool HasPart(Category type, byte id)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D0D")]
		[Address(RVA = "0xEBA0E8", Offset = "0xEBA0E8", VA = "0xEBA0E8")]
		public bool HasParts(byte id, params Category[] categories)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D0E")]
		[Address(RVA = "0xEBA000", Offset = "0xEBA000", VA = "0xEBA000")]
		public bool HasPart(byte type, byte id)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D0F")]
		[Address(RVA = "0xEBA16C", Offset = "0xEBA16C", VA = "0xEBA16C")]
		public bool HasShape(string target)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D10")]
		[Address(RVA = "0xEBA1C4", Offset = "0xEBA1C4", VA = "0xEBA1C4")]
		public bool HasType(Category type)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D11")]
		[Address(RVA = "0xEBA1C8", Offset = "0xEBA1C8", VA = "0xEBA1C8")]
		public bool HasType(byte type)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D12")]
		[Address(RVA = "0xEB3620", Offset = "0xEB3620", VA = "0xEB3620")]
		public bool HasSubmesh(Option option)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D13")]
		[Address(RVA = "0xEB3624", Offset = "0xEB3624", VA = "0xEB3624")]
		public Submesh GetSubmesh(Option option, HashSet<string> blends, int vertices, int triangles)
		{
			return null;
		}

		[Token(Token = "0x6001D15")]
		private T GetOrAdd<T>(Transform t) where T : MonoBehaviour
		{
			return null;
		}

		[Token(Token = "0x6001D16")]
		[Address(RVA = "0xEBA220", Offset = "0xEBA220", VA = "0xEBA220")]
		public Shared()
		{
		}
	}
	[Token(Token = "0x2000425")]
	public class Shot : MonoBehaviour
	{
		[Token(Token = "0x2000426")]
		public enum Type
		{
			[Token(Token = "0x4001521")]
			Head,
			[Token(Token = "0x4001522")]
			Closeup,
			[Token(Token = "0x4001523")]
			Angle,
			[Token(Token = "0x4001524")]
			RightEar,
			[Token(Token = "0x4001525")]
			LeftEar,
			[Token(Token = "0x4001526")]
			RightNose,
			[Token(Token = "0x4001527")]
			LeftNose,
			[Token(Token = "0x4001528")]
			RightEye,
			[Token(Token = "0x4001529")]
			LeftEye,
			[Token(Token = "0x400152A")]
			Shoulders
		}

		[Serializable]
		[Token(Token = "0x2000427")]
		public class Map
		{
			[Token(Token = "0x400152B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Category type;

			[Token(Token = "0x400152C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
			public byte id;

			[Token(Token = "0x400152D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public Type shot;

			[Token(Token = "0x6001D19")]
			[Address(RVA = "0xEBA3C8", Offset = "0xEBA3C8", VA = "0xEBA3C8")]
			public Map()
			{
			}
		}

		[Token(Token = "0x400151E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Type type;

		[Token(Token = "0x400151F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool selected;

		[Token(Token = "0x6001D17")]
		[Address(RVA = "0xEBA2E0", Offset = "0xEBA2E0", VA = "0xEBA2E0")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x6001D18")]
		[Address(RVA = "0xEBA3C0", Offset = "0xEBA3C0", VA = "0xEBA3C0")]
		public Shot()
		{
		}
	}
	[Token(Token = "0x2000428")]
	public class Snapshots : MonoBehaviour
	{
		[Token(Token = "0x400152E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int size;

		[Token(Token = "0x400152F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Camera cam;

		[Token(Token = "0x4001530")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform pivot;

		[Token(Token = "0x4001531")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private RenderTexture rt;

		[Token(Token = "0x4001532")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Texture2D fallback;

		[Token(Token = "0x6001D1A")]
		[Address(RVA = "0xEBA3D0", Offset = "0xEBA3D0", VA = "0xEBA3D0")]
		public void Init()
		{
		}

		[Token(Token = "0x6001D1B")]
		[Address(RVA = "0xEBA464", Offset = "0xEBA464", VA = "0xEBA464")]
		public void ReplaceRenderTexture()
		{
		}

		[Token(Token = "0x6001D1C")]
		[Address(RVA = "0xEBA544", Offset = "0xEBA544", VA = "0xEBA544")]
		public Texture2D CreateTexture()
		{
			return null;
		}

		[Token(Token = "0x6001D1D")]
		[Address(RVA = "0xEBA5DC", Offset = "0xEBA5DC", VA = "0xEBA5DC")]
		public Texture2D Render(Avatar avatar, Texture2D texture)
		{
			return null;
		}

		[Token(Token = "0x6001D1E")]
		[Address(RVA = "0xEBA8F0", Offset = "0xEBA8F0", VA = "0xEBA8F0")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001D1F")]
		[Address(RVA = "0xEBAA70", Offset = "0xEBAA70", VA = "0xEBAA70")]
		public Snapshots()
		{
		}
	}
	[Token(Token = "0x2000429")]
	public class Stage : MonoBehaviour
	{
		[Token(Token = "0x4001533")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Camera cam;

		[Token(Token = "0x4001534")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform pivot;

		[Token(Token = "0x170003B9")]
		public RenderTexture renderTexture
		{
			[Token(Token = "0x6001D22")]
			[Address(RVA = "0xEBAB70", Offset = "0xEBAB70", VA = "0xEBAB70")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001D20")]
		[Address(RVA = "0xEBAA80", Offset = "0xEBAA80", VA = "0xEBAA80")]
		public void Awake()
		{
		}

		[Token(Token = "0x6001D21")]
		[Address(RVA = "0xEBAA84", Offset = "0xEBAA84", VA = "0xEBAA84")]
		public void Add(Library library)
		{
		}

		[Token(Token = "0x6001D23")]
		[Address(RVA = "0xEBAB8C", Offset = "0xEBAB8C", VA = "0xEBAB8C")]
		public Stage()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200042A")]
	public class Submesh
	{
		[Token(Token = "0x200042B")]
		public class Offsets
		{
			[Token(Token = "0x400153D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int vertices;

			[Token(Token = "0x400153E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public int triangles;

			[Token(Token = "0x6001D27")]
			[Address(RVA = "0xEB3884", Offset = "0xEB3884", VA = "0xEB3884")]
			public Offsets(int v, int t)
			{
			}
		}

		[Token(Token = "0x4001535")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Part part;

		[Token(Token = "0x4001536")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Offsets offset;

		[Token(Token = "0x4001537")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector2[] uvs;

		[Token(Token = "0x4001538")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int[] triangles;

		[Token(Token = "0x4001539")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector3[] vertices;

		[Token(Token = "0x400153A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Vector3[] normals;

		[Token(Token = "0x400153B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public byte[] bones;

		[Token(Token = "0x400153C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public BoneWeight1[] weights;

		[Token(Token = "0x170003BA")]
		public int length
		{
			[Token(Token = "0x6001D26")]
			[Address(RVA = "0xEBAD14", Offset = "0xEBAD14", VA = "0xEBAD14")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6001D24")]
		[Address(RVA = "0xEB6E94", Offset = "0xEB6E94", VA = "0xEB6E94")]
		public Submesh(Part _part)
		{
		}

		[Token(Token = "0x6001D25")]
		[Address(RVA = "0xEBAB94", Offset = "0xEBAB94", VA = "0xEBAB94")]
		private void SetBones()
		{
		}
	}
	[Token(Token = "0x200042C")]
	public class Tests : Actions
	{
		[Token(Token = "0x170003BB")]
		private Avatars avatars
		{
			[Token(Token = "0x6001D29")]
			[Address(RVA = "0xEBAEB0", Offset = "0xEBAEB0", VA = "0xEBAEB0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003BC")]
		private Library library
		{
			[Token(Token = "0x6001D2A")]
			[Address(RVA = "0xEBAF08", Offset = "0xEBAF08", VA = "0xEBAF08")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001D28")]
		[Address(RVA = "0xEBAD30", Offset = "0xEBAD30", VA = "0xEBAD30")]
		private void Start()
		{
		}

		[Token(Token = "0x6001D2B")]
		[Address(RVA = "0xEBAF64", Offset = "0xEBAF64", VA = "0xEBAF64")]
		public Tests()
		{
		}
	}
	[Token(Token = "0x200042E")]
	public class Transformer : MonoBehaviour
	{
		[Token(Token = "0x4001542")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Vector3[] v1;

		[Token(Token = "0x4001543")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Vector3[] n1;

		[Token(Token = "0x4001544")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Mesh mesh;

		[Token(Token = "0x6001D30")]
		[Address(RVA = "0xEBB0A8", Offset = "0xEBB0A8", VA = "0xEBB0A8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001D31")]
		[Address(RVA = "0xEBB130", Offset = "0xEBB130", VA = "0xEBB130")]
		public void Apply()
		{
		}

		[Token(Token = "0x6001D32")]
		[Address(RVA = "0xEBB308", Offset = "0xEBB308", VA = "0xEBB308")]
		public static void Apply(Vector3[] vertices, Vector3[] normals, Vector3 rotation)
		{
		}

		[Token(Token = "0x6001D33")]
		[Address(RVA = "0xEBB30C", Offset = "0xEBB30C", VA = "0xEBB30C")]
		public Transformer()
		{
		}
	}
	[Token(Token = "0x200042F")]
	[RequireComponent(typeof(Selectable))]
	public class View : MonoBehaviour
	{
		[Token(Token = "0x400154A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool multiselect;

		[Token(Token = "0x400154B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		public bool toggle;

		[Token(Token = "0x400154C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Selectable selectable;

		[Token(Token = "0x400154D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public RawImage image;

		[Token(Token = "0x400154E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Overlay overlay;

		[Token(Token = "0x400154F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Image color;

		[Token(Token = "0x4001551")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public List<View> children;

		[Token(Token = "0x4001552")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		protected View parent;

		[Token(Token = "0x170003BD")]
		public Data data
		{
			[Token(Token = "0x6001D34")]
			[Address(RVA = "0xEBB314", Offset = "0xEBB314", VA = "0xEBB314")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001D35")]
			[Address(RVA = "0xEBB31C", Offset = "0xEBB31C", VA = "0xEBB31C")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x170003BE")]
		public List<Data> collection
		{
			[Token(Token = "0x6001D3E")]
			[Address(RVA = "0xEBB8A4", Offset = "0xEBB8A4", VA = "0xEBB8A4")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001D3F")]
			[Address(RVA = "0xEBB8AC", Offset = "0xEBB8AC", VA = "0xEBB8AC")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x170003BF")]
		public bool visible
		{
			[Token(Token = "0x6001D49")]
			[Address(RVA = "0xEBC034", Offset = "0xEBC034", VA = "0xEBC034")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001D4A")]
			[Address(RVA = "0xEBC054", Offset = "0xEBC054", VA = "0xEBC054")]
			set
			{
			}
		}

		[Token(Token = "0x170003C0")]
		public bool NoData
		{
			[Token(Token = "0x6001D53")]
			[Address(RVA = "0xEBBAD8", Offset = "0xEBBAD8", VA = "0xEBBAD8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170003C1")]
		public bool NoDataTemplate
		{
			[Token(Token = "0x6001D54")]
			[Address(RVA = "0xEBBDC0", Offset = "0xEBBDC0", VA = "0xEBBDC0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170003C2")]
		public bool HaveImage
		{
			[Token(Token = "0x6001D55")]
			[Address(RVA = "0xEBBB30", Offset = "0xEBBB30", VA = "0xEBBB30")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170003C3")]
		public bool HasColorImage
		{
			[Token(Token = "0x6001D56")]
			[Address(RVA = "0xEBBB90", Offset = "0xEBBB90", VA = "0xEBBB90")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170003C4")]
		public bool IsChild
		{
			[Token(Token = "0x6001D57")]
			[Address(RVA = "0xEBC0CC", Offset = "0xEBC0CC", VA = "0xEBC0CC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170003C5")]
		public VRPointerHover pointerHover
		{
			[Token(Token = "0x6001D58")]
			[Address(RVA = "0xEB56A0", Offset = "0xEB56A0", VA = "0xEB56A0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x14000067")]
		public event Action<Data> OnClick
		{
			[Token(Token = "0x6001D36")]
			[Address(RVA = "0xEBB324", Offset = "0xEBB324", VA = "0xEBB324")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001D37")]
			[Address(RVA = "0xEBB3D4", Offset = "0xEBB3D4", VA = "0xEBB3D4")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000068")]
		public event Action<Data, bool> OnHover
		{
			[Token(Token = "0x6001D38")]
			[Address(RVA = "0xEBB484", Offset = "0xEBB484", VA = "0xEBB484")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001D39")]
			[Address(RVA = "0xEBB534", Offset = "0xEBB534", VA = "0xEBB534")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000069")]
		public event Action<Data> OnAdd
		{
			[Token(Token = "0x6001D3A")]
			[Address(RVA = "0xEBB5E4", Offset = "0xEBB5E4", VA = "0xEBB5E4")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001D3B")]
			[Address(RVA = "0xEBB694", Offset = "0xEBB694", VA = "0xEBB694")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x1400006A")]
		public event Action<Data> OnRemove
		{
			[Token(Token = "0x6001D3C")]
			[Address(RVA = "0xEBB744", Offset = "0xEBB744", VA = "0xEBB744")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001D3D")]
			[Address(RVA = "0xEBB7F4", Offset = "0xEBB7F4", VA = "0xEBB7F4")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x6001D40")]
		[Address(RVA = "0xEBB8B4", Offset = "0xEBB8B4", VA = "0xEBB8B4")]
		public void SetData(Data data)
		{
		}

		[Token(Token = "0x6001D41")]
		[Address(RVA = "0xEBBA10", Offset = "0xEBBA10", VA = "0xEBBA10")]
		private void OnDataChanged()
		{
		}

		[Token(Token = "0x6001D42")]
		[Address(RVA = "0xEBBBF0", Offset = "0xEBBBF0", VA = "0xEBBBF0")]
		public void SetData(List<Data> _collection, [Optional] Action<Data> OnClicked, [Optional] Action<Data, bool> Hover)
		{
		}

		[Token(Token = "0x6001D43")]
		[Address(RVA = "0xEBBE70", Offset = "0xEBBE70", VA = "0xEBBE70")]
		private View AddChild()
		{
			return null;
		}

		[Token(Token = "0x6001D44")]
		[Address(RVA = "0xEBBE10", Offset = "0xEBBE10", VA = "0xEBBE10")]
		private void SetChildCount(int count)
		{
		}

		[Token(Token = "0x6001D45")]
		[Address(RVA = "0xEBB8E4", Offset = "0xEBB8E4", VA = "0xEBB8E4")]
		private void Remove(Data _data)
		{
		}

		[Token(Token = "0x6001D46")]
		[Address(RVA = "0xEBB97C", Offset = "0xEBB97C", VA = "0xEBB97C")]
		private void Add(Data _data)
		{
		}

		[Token(Token = "0x6001D47")]
		[Address(RVA = "0xEBBAE8", Offset = "0xEBBAE8", VA = "0xEBBAE8")]
		public void Hide()
		{
		}

		[Token(Token = "0x6001D48")]
		[Address(RVA = "0xEBBB0C", Offset = "0xEBBB0C", VA = "0xEBBB0C")]
		public void Show()
		{
		}

		[Token(Token = "0x6001D4B")]
		[Address(RVA = "0xEBC07C", Offset = "0xEBC07C", VA = "0xEBC07C")]
		public void OnClicked()
		{
		}

		[Token(Token = "0x6001D4C")]
		[Address(RVA = "0xEBC12C", Offset = "0xEBC12C", VA = "0xEBC12C")]
		public void OnClicked(Data child)
		{
		}

		[Token(Token = "0x6001D4D")]
		[Address(RVA = "0xEBC1D4", Offset = "0xEBC1D4", VA = "0xEBC1D4")]
		public void Hover(bool hover)
		{
		}

		[Token(Token = "0x6001D4E")]
		[Address(RVA = "0xEBC234", Offset = "0xEBC234", VA = "0xEBC234")]
		public void Hover(View child, bool hover)
		{
		}

		[Token(Token = "0x6001D4F")]
		[Address(RVA = "0xEB5AE8", Offset = "0xEB5AE8", VA = "0xEB5AE8")]
		public void OnAddClicked()
		{
		}

		[Token(Token = "0x6001D50")]
		[Address(RVA = "0xEBC398", Offset = "0xEBC398", VA = "0xEBC398")]
		public void OnAddClicked(View child)
		{
		}

		[Token(Token = "0x6001D51")]
		[Address(RVA = "0xEB5BBC", Offset = "0xEB5BBC", VA = "0xEB5BBC")]
		public void OnRemoveClicked()
		{
		}

		[Token(Token = "0x6001D52")]
		[Address(RVA = "0xEBC3C4", Offset = "0xEBC3C4", VA = "0xEBC3C4")]
		public void OnRemoveClicked(View child)
		{
		}

		[Token(Token = "0x6001D59")]
		[Address(RVA = "0xEB7FF4", Offset = "0xEB7FF4", VA = "0xEB7FF4")]
		public View()
		{
		}
	}
	[Token(Token = "0x2000431")]
	public class Voice : MonoBehaviour
	{
		[Token(Token = "0x2000432")]
		public enum Method
		{
			[Token(Token = "0x4001564")]
			Decibals,
			[Token(Token = "0x4001565")]
			Loudness
		}

		[Token(Token = "0x4001558")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AudioSource source;

		[Token(Token = "0x400155E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float[] samples;

		[Token(Token = "0x400155F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float[] spectrum;

		[Token(Token = "0x4001560")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool initialized;

		[Token(Token = "0x4001561")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Action method;

		[Token(Token = "0x170003C6")]
		public float rms
		{
			[Token(Token = "0x6001D60")]
			[Address(RVA = "0xEBC46C", Offset = "0xEBC46C", VA = "0xEBC46C")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001D61")]
			[Address(RVA = "0xEBC474", Offset = "0xEBC474", VA = "0xEBC474")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x170003C7")]
		public float db
		{
			[Token(Token = "0x6001D62")]
			[Address(RVA = "0xEBC47C", Offset = "0xEBC47C", VA = "0xEBC47C")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001D63")]
			[Address(RVA = "0xEBC484", Offset = "0xEBC484", VA = "0xEBC484")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x170003C8")]
		public float lufs
		{
			[Token(Token = "0x6001D64")]
			[Address(RVA = "0xEBC48C", Offset = "0xEBC48C", VA = "0xEBC48C")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001D65")]
			[Address(RVA = "0xEBC494", Offset = "0xEBC494", VA = "0xEBC494")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x170003C9")]
		public float max
		{
			[Token(Token = "0x6001D66")]
			[Address(RVA = "0xEBC49C", Offset = "0xEBC49C", VA = "0xEBC49C")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001D67")]
			[Address(RVA = "0xEBC4A4", Offset = "0xEBC4A4", VA = "0xEBC4A4")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x170003CA")]
		public float min
		{
			[Token(Token = "0x6001D68")]
			[Address(RVA = "0xEBC4AC", Offset = "0xEBC4AC", VA = "0xEBC4AC")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001D69")]
			[Address(RVA = "0xEBC4B4", Offset = "0xEBC4B4", VA = "0xEBC4B4")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x170003CB")]
		public bool sampling
		{
			[Token(Token = "0x6001D6A")]
			[Address(RVA = "0xEBC4BC", Offset = "0xEBC4BC", VA = "0xEBC4BC")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001D6B")]
			[Address(RVA = "0xEBC4C4", Offset = "0xEBC4C4", VA = "0xEBC4C4")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x6001D6C")]
		[Address(RVA = "0xEB3AE8", Offset = "0xEB3AE8", VA = "0xEB3AE8")]
		public void Initialize(Method _method, int _window)
		{
		}

		[Token(Token = "0x6001D6D")]
		[Address(RVA = "0xEBC4D0", Offset = "0xEBC4D0", VA = "0xEBC4D0")]
		private void Update()
		{
		}

		[Token(Token = "0x6001D6E")]
		[Address(RVA = "0xEBC594", Offset = "0xEBC594", VA = "0xEBC594")]
		private bool SampleOutput()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D6F")]
		[Address(RVA = "0xEBC6B8", Offset = "0xEBC6B8", VA = "0xEBC6B8")]
		private void loudness()
		{
		}

		[Token(Token = "0x6001D70")]
		[Address(RVA = "0xEBC738", Offset = "0xEBC738", VA = "0xEBC738")]
		private void decibals()
		{
		}

		[Token(Token = "0x6001D71")]
		[Address(RVA = "0xEBC7CC", Offset = "0xEBC7CC", VA = "0xEBC7CC")]
		public Voice()
		{
		}
	}
	[Token(Token = "0x2000433")]
	public class Workspace : MonoBehaviour
	{
		[Token(Token = "0x4001566")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int cols;

		[Token(Token = "0x4001567")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector2 cell;

		[Token(Token = "0x4001568")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public List<Transform> children;

		[Token(Token = "0x4001569")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public Bounds bounds;

		[Token(Token = "0x170003CC")]
		public int Count
		{
			[Token(Token = "0x6001D79")]
			[Address(RVA = "0xEBCD80", Offset = "0xEBCD80", VA = "0xEBCD80")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170003CD")]
		public int rows
		{
			[Token(Token = "0x6001D7C")]
			[Address(RVA = "0xEBD00C", Offset = "0xEBD00C", VA = "0xEBD00C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170003CE")]
		public float width
		{
			[Token(Token = "0x6001D7D")]
			[Address(RVA = "0xEBCBAC", Offset = "0xEBCBAC", VA = "0xEBCBAC")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170003CF")]
		public float height
		{
			[Token(Token = "0x6001D7E")]
			[Address(RVA = "0xEBCBD4", Offset = "0xEBCBD4", VA = "0xEBCBD4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170003D0")]
		public Vector3 position
		{
			[Token(Token = "0x6001D7F")]
			[Address(RVA = "0xEBD030", Offset = "0xEBD030", VA = "0xEBD030")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001D80")]
			[Address(RVA = "0xEBD050", Offset = "0xEBD050", VA = "0xEBD050")]
			set
			{
			}
		}

		[Token(Token = "0x6001D72")]
		[Address(RVA = "0xEBC7D4", Offset = "0xEBC7D4", VA = "0xEBC7D4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001D73")]
		[Address(RVA = "0xEBC834", Offset = "0xEBC834", VA = "0xEBC834")]
		public void Add(MonoBehaviour b)
		{
		}

		[Token(Token = "0x6001D74")]
		[Address(RVA = "0xEBCA50", Offset = "0xEBCA50", VA = "0xEBCA50")]
		public void Add(GameObject o)
		{
		}

		[Token(Token = "0x6001D75")]
		[Address(RVA = "0xEBC92C", Offset = "0xEBC92C", VA = "0xEBC92C")]
		public void Add(Transform child)
		{
		}

		[Token(Token = "0x6001D76")]
		[Address(RVA = "0xEBCA7C", Offset = "0xEBCA7C", VA = "0xEBCA7C")]
		public void Layout()
		{
		}

		[Token(Token = "0x6001D77")]
		[Address(RVA = "0xEBCC6C", Offset = "0xEBCC6C", VA = "0xEBCC6C")]
		public Bounds GetBounds(int i)
		{
			return default(Bounds);
		}

		[Token(Token = "0x6001D78")]
		[Address(RVA = "0xEBCDC8", Offset = "0xEBCDC8", VA = "0xEBCDC8")]
		public void Clear(bool stopRoutines = true)
		{
		}

		[Token(Token = "0x6001D7A")]
		[Address(RVA = "0xEBCBC4", Offset = "0xEBCBC4", VA = "0xEBCBC4")]
		public int col(int i)
		{
			return default(int);
		}

		[Token(Token = "0x6001D7B")]
		[Address(RVA = "0xEBCC08", Offset = "0xEBCC08", VA = "0xEBCC08")]
		public int row(int i)
		{
			return default(int);
		}

		[Token(Token = "0x6001D81")]
		[Address(RVA = "0xEBD098", Offset = "0xEBD098", VA = "0xEBD098")]
		public static Workspace Create(float x, float y, float z)
		{
			return null;
		}

		[Token(Token = "0x6001D82")]
		[Address(RVA = "0xEBD228", Offset = "0xEBD228", VA = "0xEBD228")]
		public Workspace()
		{
		}
	}
	[Token(Token = "0x2000434")]
	public class LanguageManager : MonoBehaviour
	{
		[Token(Token = "0x400156A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool isInit;

		[Token(Token = "0x6001D83")]
		[Address(RVA = "0xEBD2B8", Offset = "0xEBD2B8", VA = "0xEBD2B8")]
		private void Start()
		{
		}

		[Token(Token = "0x6001D84")]
		[Address(RVA = "0xEBD470", Offset = "0xEBD470", VA = "0xEBD470")]
		public LanguageManager()
		{
		}
	}
	[Token(Token = "0x2000435")]
	public class AnimationMover : MovingObject
	{
		[Token(Token = "0x400156B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[Space(15f)]
		[Header("Animation Mover Settings")]
		public Animation anim;

		[Token(Token = "0x400156C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		public float intervalThreshhold;

		[Token(Token = "0x400156D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		public UnityEvent OnINtervalAction;

		[Token(Token = "0x400156E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		public bool isLooping;

		[Token(Token = "0x400156F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private AnimationClip clip;

		[Token(Token = "0x4001570")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private AnimationState state;

		[Token(Token = "0x4001571")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private float duration;

		[Token(Token = "0x4001572")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
		private bool initialized;

		[Token(Token = "0x4001573")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		private Exception previousError;

		[Token(Token = "0x4001574")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		private bool onceLooped;

		[Token(Token = "0x4001575")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
		[SerializeField]
		private float timeOffset;

		[Token(Token = "0x6001D85")]
		[Address(RVA = "0xEBD478", Offset = "0xEBD478", VA = "0xEBD478")]
		protected void Initialize()
		{
		}

		[Token(Token = "0x6001D86")]
		[Address(RVA = "0xEBD524", Offset = "0xEBD524", VA = "0xEBD524", Slot = "11")]
		protected override void MoveObject()
		{
		}

		[Token(Token = "0x6001D87")]
		[Address(RVA = "0xEBD7FC", Offset = "0xEBD7FC", VA = "0xEBD7FC", Slot = "12")]
		protected override void OnReset()
		{
		}

		[Token(Token = "0x6001D88")]
		[Address(RVA = "0xEBD76C", Offset = "0xEBD76C", VA = "0xEBD76C")]
		public void Cue(double time)
		{
		}

		[Token(Token = "0x6001D89")]
		[Address(RVA = "0xEBD4DC", Offset = "0xEBD4DC", VA = "0xEBD4DC")]
		private AnimationState GetState(string name)
		{
			return null;
		}

		[Token(Token = "0x6001D8A")]
		[Address(RVA = "0xEBD814", Offset = "0xEBD814", VA = "0xEBD814")]
		public AnimationMover()
		{
		}
	}
	[Token(Token = "0x2000436")]
	public class AnimatorTriggerBroadcast : StateMachineBehaviour
	{
		[Token(Token = "0x4001576")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string triggerKey;

		[Token(Token = "0x6001D8B")]
		[Address(RVA = "0xEBD824", Offset = "0xEBD824", VA = "0xEBD824", Slot = "4")]
		public override void OnStateEnter(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
		{
		}

		[Token(Token = "0x6001D8C")]
		[Address(RVA = "0xEBD8D0", Offset = "0xEBD8D0", VA = "0xEBD8D0")]
		public AnimatorTriggerBroadcast()
		{
		}
	}
	[Token(Token = "0x2000437")]
	public class Common : Singleton<Common>
	{
		[Token(Token = "0x2000438")]
		public enum Course
		{
			[Token(Token = "0x400157B")]
			NA = 0,
			[Token(Token = "0x400157C")]
			Alfheim_Easy = 1,
			[Token(Token = "0x400157D")]
			Alfheim_Hard = 2,
			[Token(Token = "0x400157E")]
			Arizona_Easy = 3,
			[Token(Token = "0x400157F")]
			Arizona_Hard = 4,
			[Token(Token = "0x4001580")]
			Atlantis_Easy = 5,
			[Token(Token = "0x4001581")]
			Atlantis_Hard = 6,
			[Token(Token = "0x4001582")]
			Babylon_Easy = 7,
			[Token(Token = "0x4001583")]
			Babylon_Hard = 8,
			[Token(Token = "0x4001584")]
			CherryBlosson_Easy = 9,
			[Token(Token = "0x4001585")]
			CherryBlosson_Hard = 10,
			[Token(Token = "0x4001586")]
			ElDorado_Easy = 11,
			[Token(Token = "0x4001587")]
			ElDorado_Hard = 12,
			[Token(Token = "0x4001588")]
			BogeysBonanza_Easy = 13,
			[Token(Token = "0x4001589")]
			BogeysBonanza_Hard = 14,
			[Token(Token = "0x400158A")]
			Gravity_Easy = 15,
			[Token(Token = "0x400158B")]
			Gravity_Hard = 16,
			[Token(Token = "0x400158C")]
			Journey_Easy = 17,
			[Token(Token = "0x400158D")]
			Journey_Hard = 18,
			[Token(Token = "0x400158E")]
			Labyrinth_Easy = 19,
			[Token(Token = "0x400158F")]
			Labyrinth_Hard = 20,
			[Token(Token = "0x4001590")]
			Myst_Easy = 21,
			[Token(Token = "0x4001591")]
			Myst_Hard = 22,
			[Token(Token = "0x4001592")]
			TwentyThousandLeaguesUnderTheSea_Easy = 24,
			[Token(Token = "0x4001593")]
			TwentyThousandLeaguesUnderTheSea_Hard = 25,
			[Token(Token = "0x4001594")]
			OriginalGothic_Easy = 26,
			[Token(Token = "0x4001595")]
			OriginalGothic_Hard = 27,
			[Token(Token = "0x4001596")]
			SeagullStacks_Easy = 28,
			[Token(Token = "0x4001597")]
			SeagullStacks_Hard = 29,
			[Token(Token = "0x4001598")]
			ShangriLa_Easy = 30,
			[Token(Token = "0x4001599")]
			ShangriLa_Hard = 31,
			[Token(Token = "0x400159A")]
			TethysStation_Easy = 32,
			[Token(Token = "0x400159B")]
			TethysStation_Hard = 33,
			[Token(Token = "0x400159C")]
			Sweetopia_Easy = 34,
			[Token(Token = "0x400159D")]
			Sweetopia_Hard = 35,
			[Token(Token = "0x400159E")]
			TouristTrap_Easy = 36,
			[Token(Token = "0x400159F")]
			TouristTrap_Hard = 37,
			[Token(Token = "0x40015A0")]
			TropicalLair_Easy = 38,
			[Token(Token = "0x40015A1")]
			TropicalLair_Hard = 39,
			[Token(Token = "0x40015A2")]
			Windmills_Easy = 40,
			[Token(Token = "0x40015A3")]
			Windmills_Hard = 41,
			[Token(Token = "0x40015A4")]
			Zerzura_Easy = 42,
			[Token(Token = "0x40015A5")]
			Zerzura_Hard = 43,
			[Token(Token = "0x40015A6")]
			MeowWolf_Easy = 44,
			[Token(Token = "0x40015A7")]
			MeowWolf_Hard = 45,
			[Token(Token = "0x40015A8")]
			AroundTheWorld_Easy = 46,
			[Token(Token = "0x40015A9")]
			AroundTheWorld_Hard = 47,
			[Token(Token = "0x40015AA")]
			AntarcticLair_Easy = 48,
			[Token(Token = "0x40015AB")]
			AntarcticLair_Hard = 49,
			[Token(Token = "0x40015AC")]
			MainMenu = 1000
		}

		[Token(Token = "0x2000439")]
		public enum DisplayCondition
		{
			[Token(Token = "0x40015AE")]
			DefaultNone,
			[Token(Token = "0x40015AF")]
			CoursePurchased,
			[Token(Token = "0x40015B0")]
			CourseCompleted,
			[Token(Token = "0x40015B1")]
			FoxhuntCompleted,
			[Token(Token = "0x40015B2")]
			AllLostBallsFound,
			[Token(Token = "0x40015B3")]
			NoLostBallsFound,
			[Token(Token = "0x40015B4")]
			HaveYouFlown,
			[Token(Token = "0x40015B5")]
			TriedGripToPutt,
			[Token(Token = "0x40015B6")]
			TriedInstantReplay,
			[Token(Token = "0x40015B7")]
			TriedTossBall,
			[Token(Token = "0x40015B8")]
			LanguageIsEnglish
		}

		[Token(Token = "0x200043A")]
		public enum DisplayCategory
		{
			[Token(Token = "0x40015BA")]
			DLC = 0,
			[Token(Token = "0x40015BB")]
			GameGuide = 1,
			[Token(Token = "0x40015BC")]
			OffPlatformSocial = 2,
			[Token(Token = "0x40015BD")]
			MotivationalPosters = 3,
			[Token(Token = "0x40015BE")]
			Merch = 5,
			[Token(Token = "0x40015BF")]
			ShackDispatch = 6,
			[Token(Token = "0x40015C0")]
			BehindTheScenes = 7,
			[Token(Token = "0x40015C1")]
			Announcement = 8
		}

		[Token(Token = "0x200043B")]
		[Flags]
		public enum TargetDevice
		{
			[Token(Token = "0x40015C3")]
			Nothing = 0,
			[Token(Token = "0x40015C4")]
			Quest1 = 1,
			[Token(Token = "0x40015C5")]
			Quest2 = 2,
			[Token(Token = "0x40015C6")]
			Mobile = 4,
			[Token(Token = "0x40015C7")]
			PCVR = 8
		}

		[Token(Token = "0x200043D")]
		[CompilerGenerated]
		private sealed class <TimeDelayRoutine>d__6 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40015CB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40015CC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40015CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float time;

			[Token(Token = "0x40015CE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Action callback;

			[Token(Token = "0x170003D1")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001DA3")]
				[Address(RVA = "0xEBE6F4", Offset = "0xEBE6F4", VA = "0xEBE6F4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003D2")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001DA5")]
				[Address(RVA = "0xEBE73C", Offset = "0xEBE73C", VA = "0xEBE73C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001DA0")]
			[Address(RVA = "0xEBDB20", Offset = "0xEBDB20", VA = "0xEBDB20")]
			[DebuggerHidden]
			public <TimeDelayRoutine>d__6(int <>1__state)
			{
			}

			[Token(Token = "0x6001DA1")]
			[Address(RVA = "0xEBE638", Offset = "0xEBE638", VA = "0xEBE638", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001DA2")]
			[Address(RVA = "0xEBE63C", Offset = "0xEBE63C", VA = "0xEBE63C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001DA4")]
			[Address(RVA = "0xEBE6FC", Offset = "0xEBE6FC", VA = "0xEBE6FC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200043E")]
		[CompilerGenerated]
		private sealed class <FrameDelayRoutine>d__8 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40015CF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40015D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40015D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int frameCount;

			[Token(Token = "0x40015D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Action callback;

			[Token(Token = "0x40015D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int <i>5__2;

			[Token(Token = "0x170003D3")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001DA9")]
				[Address(RVA = "0xEBE7C4", Offset = "0xEBE7C4", VA = "0xEBE7C4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003D4")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001DAB")]
				[Address(RVA = "0xEBE80C", Offset = "0xEBE80C", VA = "0xEBE80C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001DA6")]
			[Address(RVA = "0xEBDBE0", Offset = "0xEBDBE0", VA = "0xEBDBE0")]
			[DebuggerHidden]
			public <FrameDelayRoutine>d__8(int <>1__state)
			{
			}

			[Token(Token = "0x6001DA7")]
			[Address(RVA = "0xEBE744", Offset = "0xEBE744", VA = "0xEBE744", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001DA8")]
			[Address(RVA = "0xEBE748", Offset = "0xEBE748", VA = "0xEBE748", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001DAA")]
			[Address(RVA = "0xEBE7CC", Offset = "0xEBE7CC", VA = "0xEBE7CC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200043F")]
		[CompilerGenerated]
		private sealed class <FindNormalFacingCoroutine>d__11 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40015D4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40015D5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40015D6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float distance;

			[Token(Token = "0x40015D7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public Vector3 startingDirection;

			[Token(Token = "0x40015D8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Vector3 pos;

			[Token(Token = "0x40015D9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public Transform target;

			[Token(Token = "0x40015DA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public Common <>4__this;

			[Token(Token = "0x40015DB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public string[] tags;

			[Token(Token = "0x40015DC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public LayerMask layerMask;

			[Token(Token = "0x40015DD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public Action<Vector3, float> Callback;

			[Token(Token = "0x40015DE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			private ClosestSurface <closestSurface>5__2;

			[Token(Token = "0x40015DF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			private int <i>5__3;

			[Token(Token = "0x170003D5")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001DAF")]
				[Address(RVA = "0xEBE9C4", Offset = "0xEBE9C4", VA = "0xEBE9C4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003D6")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001DB1")]
				[Address(RVA = "0xEBEA0C", Offset = "0xEBEA0C", VA = "0xEBEA0C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001DAC")]
			[Address(RVA = "0xEBDE70", Offset = "0xEBDE70", VA = "0xEBDE70")]
			[DebuggerHidden]
			public <FindNormalFacingCoroutine>d__11(int <>1__state)
			{
			}

			[Token(Token = "0x6001DAD")]
			[Address(RVA = "0xEBE814", Offset = "0xEBE814", VA = "0xEBE814", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001DAE")]
			[Address(RVA = "0xEBE818", Offset = "0xEBE818", VA = "0xEBE818", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001DB0")]
			[Address(RVA = "0xEBE9CC", Offset = "0xEBE9CC", VA = "0xEBE9CC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001577")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Dictionary<Course, CourseDetails> courseNameDictionary;

		[Token(Token = "0x4001578")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float defaultTimeStep;

		[Token(Token = "0x4001579")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3[] restingPlaneCheckVectors;

		[Token(Token = "0x6001D8D")]
		[Address(RVA = "0xEBD8D8", Offset = "0xEBD8D8", VA = "0xEBD8D8")]
		public void CacheDefaultTimeStep(float defaultTimeStep)
		{
		}

		[Token(Token = "0x6001D8E")]
		[Address(RVA = "0xEBD8E0", Offset = "0xEBD8E0", VA = "0xEBD8E0")]
		public void TweenToMaxTimeStep(float time)
		{
		}

		[Token(Token = "0x6001D8F")]
		[Address(RVA = "0xEBDA88", Offset = "0xEBDA88", VA = "0xEBDA88")]
		public void TimeDelayInvoke(Action callback, float time)
		{
		}

		[Token(Token = "0x6001D90")]
		[Address(RVA = "0xEBDAA8", Offset = "0xEBDAA8", VA = "0xEBDAA8")]
		[IteratorStateMachine(typeof(<TimeDelayRoutine>d__6))]
		private IEnumerator TimeDelayRoutine(Action callback, float time)
		{
			return null;
		}

		[Token(Token = "0x6001D91")]
		[Address(RVA = "0xEBDB48", Offset = "0xEBDB48", VA = "0xEBDB48")]
		public void FrameDelayInvoke(Action callback, int frameCount = 1)
		{
		}

		[Token(Token = "0x6001D92")]
		[Address(RVA = "0xEBDB68", Offset = "0xEBDB68", VA = "0xEBDB68")]
		[IteratorStateMachine(typeof(<FrameDelayRoutine>d__8))]
		private IEnumerator FrameDelayRoutine(Action callback, int frameCount = 1)
		{
			return null;
		}

		[Token(Token = "0x6001D93")]
		[Address(RVA = "0xEBDC08", Offset = "0xEBDC08", VA = "0xEBDC08")]
		public void GetSurfaceRestingNormal(Vector3 pos, string[] tags, float distance, LayerMask layerMask, Action<Vector3, float> Callback, [Optional] Transform target)
		{
		}

		[Token(Token = "0x6001D94")]
		[Address(RVA = "0xEBDE4C", Offset = "0xEBDE4C", VA = "0xEBDE4C")]
		public void GetSurfaceRestingNormal(Vector3 pos, string[] tags, float distance, LayerMask layerMask, Vector3 startingDirection, Action<Vector3, float> Callback, [Optional] Transform target)
		{
		}

		[Token(Token = "0x6001D95")]
		[Address(RVA = "0xEBDD6C", Offset = "0xEBDD6C", VA = "0xEBDD6C")]
		[IteratorStateMachine(typeof(<FindNormalFacingCoroutine>d__11))]
		private IEnumerator FindNormalFacingCoroutine(Vector3 pos, string[] tags, float distance, LayerMask layerMask, Vector3 startingDirection, Action<Vector3, float> Callback, [Optional] Transform target)
		{
			return null;
		}

		[Token(Token = "0x6001D96")]
		[Address(RVA = "0xEBDE98", Offset = "0xEBDE98", VA = "0xEBDE98")]
		public ClosestSurface CheckClosestRestingSurface(Vector3 pos, string[] tags, float distance, LayerMask layerMask, Vector3 checkDirection, float closestDistance, QueryTriggerInteraction ignoreQueryTriggerInteraction = QueryTriggerInteraction.UseGlobal)
		{
			return default(ClosestSurface);
		}

		[Token(Token = "0x6001D97")]
		[Address(RVA = "0xEBE010", Offset = "0xEBE010", VA = "0xEBE010")]
		public CourseInfoAsset GetCourseInfoAsset(Course courseSelected)
		{
			return null;
		}

		[Token(Token = "0x6001D98")]
		[Address(RVA = "0xEBE0A8", Offset = "0xEBE0A8", VA = "0xEBE0A8")]
		public void SetCourseDictionary(CourseCatalogAsset Catalog)
		{
		}

		[Token(Token = "0x6001D99")]
		[Address(RVA = "0xEBE25C", Offset = "0xEBE25C", VA = "0xEBE25C")]
		public float ForceAngle180(float A)
		{
			return default(float);
		}

		[Token(Token = "0x6001D9A")]
		[Address(RVA = "0xEBE2B0", Offset = "0xEBE2B0", VA = "0xEBE2B0")]
		public static TargetDevice GetTargetDevice()
		{
			return default(TargetDevice);
		}

		[Token(Token = "0x6001D9B")]
		[Address(RVA = "0xEBE470", Offset = "0xEBE470", VA = "0xEBE470")]
		public Common()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000440")]
	[CreateAssetMenu(fileName = "AchievementsData", menuName = "Achievements/AchievementData", order = 500)]
	public class AchievementData : ScriptableObject
	{
		[Token(Token = "0x40015E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Header("General Settings")]
		public string displayName;

		[Token(Token = "0x40015E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string description;

		[Token(Token = "0x40015E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AchievementsCatalog.AchievementType API_ID;

		[Token(Token = "0x40015E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int requiredCount;

		[Token(Token = "0x40015E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[FarBridge.ReadOnly]
		public int currentCount;

		[Token(Token = "0x40015E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public bool capCountAtRequiredCount;

		[Token(Token = "0x40015E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
		[Space]
		[Header("Platform Achievement Settings")]
		public bool platformAchievement;

		[Token(Token = "0x40015E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x36")]
		[Space]
		[Header("Walkabout Achievement Settings")]
		public bool autoRedeem;

		[Token(Token = "0x40015E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x37")]
		[FarBridge.ReadOnly]
		public bool redeemed;

		[Token(Token = "0x40015E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool repetable;

		[Token(Token = "0x6001DB2")]
		[Address(RVA = "0xEBEA14", Offset = "0xEBEA14", VA = "0xEBEA14")]
		public AchievementData()
		{
		}
	}
	[Token(Token = "0x2000441")]
	public enum PlatformAchievementType
	{
		[Token(Token = "0x40015EB")]
		Binary,
		[Token(Token = "0x40015EC")]
		Progressive
	}
	[Token(Token = "0x2000442")]
	[CreateAssetMenu(fileName = "AchievementsCatalog", menuName = "Achievements/AchievementsCatalog", order = 500)]
	public class AchievementsCatalog : ScriptableObject
	{
		[Token(Token = "0x2000443")]
		public enum AchievementType
		{
			[Token(Token = "0x40015F3")]
			CompleteFirstHole,
			[Token(Token = "0x40015F4")]
			Complete9Holes,
			[Token(Token = "0x40015F5")]
			CompleteFirstCourse,
			[Token(Token = "0x40015F6")]
			TotalAchievements
		}

		[Token(Token = "0x40015ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool ResetAchievements;

		[Token(Token = "0x40015EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public AchievementData[] Achievements;

		[Token(Token = "0x40015EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AchievementData[] PlatformAchievements;

		[Token(Token = "0x40015F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AchievementData[] WalkaboutAchievements;

		[Token(Token = "0x40015F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		public Dictionary<AchievementType, AchievementData> AchievementsDict;

		[Token(Token = "0x6001DB3")]
		[Address(RVA = "0xEBEA28", Offset = "0xEBEA28", VA = "0xEBEA28")]
		public void InitAchievementsCatalog()
		{
		}

		[Token(Token = "0x6001DB4")]
		[Address(RVA = "0xEBEBE8", Offset = "0xEBEBE8", VA = "0xEBEBE8")]
		public AchievementData LookupAchievement(AchievementType t)
		{
			return null;
		}

		[Token(Token = "0x6001DB5")]
		[Address(RVA = "0xEBEC90", Offset = "0xEBEC90", VA = "0xEBEC90")]
		public void ResetAchievementCounts()
		{
		}

		[Token(Token = "0x6001DB6")]
		[Address(RVA = "0xEBECE8", Offset = "0xEBECE8", VA = "0xEBECE8")]
		public AchievementsCatalog()
		{
		}
	}
	[Token(Token = "0x2000444")]
	public class FacingDetector : MonoBehaviour
	{
		[Token(Token = "0x40015F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[FormerlySerializedAs("dotTarget")]
		public float zForwardDotTarget;

		[Token(Token = "0x40015F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[FormerlySerializedAs("dotThreshhold")]
		public float zForwardDotThreshhold;

		[Token(Token = "0x40015F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Tooltip("An additional check to see if we're actually pointing at the target, not just aligned with it's forward vectors.")]
		public float pointAtDotThreshold;

		[Token(Token = "0x40015FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[Tooltip("From this distance and further, add an extra Dot check to see if we're pointing at the object, not just aligned with it's forward vectors.")]
		public float pointAtTargetStartingRange;

		[Token(Token = "0x40015FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool isFirstTargetCamera;

		[Token(Token = "0x40015FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform firstTarget;

		[Token(Token = "0x40015FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform secondTarget;

		[Token(Token = "0x40015FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float acitvationDelay;

		[Token(Token = "0x40015FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float distanceThreshhold;

		[Token(Token = "0x4001600")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[Space(20f)]
		public UnityEvent<bool> OnFacingDetected;

		[Token(Token = "0x4001601")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Space(10f)]
		[Header("Performance Settings")]
		public int frameThrottle;

		[Token(Token = "0x4001602")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private int currentFrame;

		[Token(Token = "0x4001603")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float currentTime;

		[Token(Token = "0x4001604")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private bool facingState;

		[Token(Token = "0x4001605")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5D")]
		private bool inRange;

		[Token(Token = "0x4001606")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5E")]
		private bool isFacingTransitioning;

		[Token(Token = "0x6001DB7")]
		[Address(RVA = "0xEBED60", Offset = "0xEBED60", VA = "0xEBED60")]
		private void Start()
		{
		}

		[Token(Token = "0x6001DB8")]
		[Address(RVA = "0xEBEDFC", Offset = "0xEBEDFC", VA = "0xEBEDFC")]
		public void Update()
		{
		}

		[Token(Token = "0x6001DB9")]
		[Address(RVA = "0xEBEFEC", Offset = "0xEBEFEC", VA = "0xEBEFEC")]
		private bool CheckFacing()
		{
			return default(bool);
		}

		[Token(Token = "0x6001DBA")]
		[Address(RVA = "0xEBF148", Offset = "0xEBF148", VA = "0xEBF148")]
		private bool CheckPointingAtTarget()
		{
			return default(bool);
		}

		[Token(Token = "0x6001DBB")]
		[Address(RVA = "0xEBEF70", Offset = "0xEBEF70", VA = "0xEBEF70")]
		private void FacingTriggered(bool newFacing)
		{
		}

		[Token(Token = "0x6001DBC")]
		[Address(RVA = "0xEBF314", Offset = "0xEBF314", VA = "0xEBF314")]
		public FacingDetector()
		{
		}
	}
	[Token(Token = "0x2000445")]
	public class ListenTrigger : MonoBehaviour
	{
		[Token(Token = "0x4001607")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string triggerKey;

		[Token(Token = "0x4001608")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UnityEvent action;

		[Token(Token = "0x4001609")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int fireEveryXTimes;

		[Token(Token = "0x400160A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int counter;

		[Token(Token = "0x6001DBD")]
		[Address(RVA = "0xEBF33C", Offset = "0xEBF33C", VA = "0xEBF33C")]
		public void Start()
		{
		}

		[Token(Token = "0x6001DBE")]
		[Address(RVA = "0xEBF468", Offset = "0xEBF468", VA = "0xEBF468")]
		public void OnDestroy()
		{
		}

		[Token(Token = "0x6001DBF")]
		[Address(RVA = "0xEBF584", Offset = "0xEBF584", VA = "0xEBF584")]
		private void Trigger(string key)
		{
		}

		[Token(Token = "0x6001DC0")]
		[Address(RVA = "0xEBF5D8", Offset = "0xEBF5D8", VA = "0xEBF5D8")]
		public ListenTrigger()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000446")]
	public class ListWrapper<T>
	{
		[Token(Token = "0x400160B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public List<T> myList;

		[Token(Token = "0x6001DC1")]
		public ListWrapper()
		{
		}
	}
	[Token(Token = "0x2000447")]
	public class GameObjectListWrapper : ListWrapper<GameObject>
	{
		[Token(Token = "0x6001DC2")]
		[Address(RVA = "0xEBF5E8", Offset = "0xEBF5E8", VA = "0xEBF5E8")]
		public GameObjectListWrapper()
		{
		}
	}
	[Token(Token = "0x2000448")]
	public class IntListWrapper : ListWrapper<GameObject>
	{
		[Token(Token = "0x6001DC3")]
		[Address(RVA = "0xEBF630", Offset = "0xEBF630", VA = "0xEBF630")]
		public IntListWrapper()
		{
		}
	}
	[Token(Token = "0x2000449")]
	public class FloatListWrapper : ListWrapper<GameObject>
	{
		[Token(Token = "0x6001DC4")]
		[Address(RVA = "0xEBF678", Offset = "0xEBF678", VA = "0xEBF678")]
		public FloatListWrapper()
		{
		}
	}
	[Token(Token = "0x200044A")]
	[DefaultExecutionOrder(-11)]
	public class MightyTime : MonoBehaviour
	{
		[Token(Token = "0x400160C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static float deltaNetworkTime;

		[Token(Token = "0x400160D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public static float currentDeltaTime;

		[Token(Token = "0x400160E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static float currentFixedDeltaTime;

		[Token(Token = "0x400160F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private double currentNetworkTime;

		[Token(Token = "0x4001610")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private double updateNetorkTime;

		[Token(Token = "0x4001611")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private double previousNetworkTime;

		[Token(Token = "0x4001612")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private double currentFixedStopwatchMS;

		[Token(Token = "0x4001613")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private double previousFixedStopwatchTime;

		[Token(Token = "0x4001614")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private double currentStopwatchMS;

		[Token(Token = "0x4001615")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private double previousStopwatchTime;

		[Token(Token = "0x4001616")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Stopwatch stopwatch;

		[Token(Token = "0x4001617")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int frame;

		[Token(Token = "0x4001618")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private uint conversionUInt;

		[Token(Token = "0x170003D7")]
		public static float deltaTime
		{
			[Token(Token = "0x6001DC5")]
			[Address(RVA = "0xEBF6C0", Offset = "0xEBF6C0", VA = "0xEBF6C0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6001DC6")]
		[Address(RVA = "0xEBF720", Offset = "0xEBF720", VA = "0xEBF720")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001DC7")]
		[Address(RVA = "0xEBF81C", Offset = "0xEBF81C", VA = "0xEBF81C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001DC8")]
		[Address(RVA = "0xEBF97C", Offset = "0xEBF97C", VA = "0xEBF97C")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001DC9")]
		[Address(RVA = "0xEBFA08", Offset = "0xEBFA08", VA = "0xEBFA08")]
		private void OnFocusAcquired()
		{
		}

		[Token(Token = "0x6001DCA")]
		[Address(RVA = "0xEBFA24", Offset = "0xEBFA24", VA = "0xEBFA24")]
		private void OnFocusLost()
		{
		}

		[Token(Token = "0x6001DCB")]
		[Address(RVA = "0xEBFA40", Offset = "0xEBFA40", VA = "0xEBFA40")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001DCC")]
		[Address(RVA = "0xEBFB00", Offset = "0xEBFB00", VA = "0xEBFB00")]
		public MightyTime()
		{
		}
	}
	[Token(Token = "0x200044B")]
	public abstract class Singleton<T> : MonoBehaviour where T : Singleton<T>
	{
		[Token(Token = "0x4001619")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static T instance;

		[Token(Token = "0x170003D8")]
		public static T Instance
		{
			[Token(Token = "0x6001DCD")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001DCE")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6001DCF")]
		protected void SingletonInit()
		{
		}

		[Token(Token = "0x6001DD0")]
		protected Singleton()
		{
		}
	}
	[Token(Token = "0x200044C")]
	public struct ClosestSurface
	{
		[Token(Token = "0x400161A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float closestDistance;

		[Token(Token = "0x400161B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public Vector3 checkDirection;
	}
	[Token(Token = "0x200044D")]
	public class GlobalBroadcast : Singleton<GlobalBroadcast>
	{
		[Token(Token = "0x400161C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Action InitialProfilesLoaded;

		[Token(Token = "0x400161D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Action ValidatePurchases;

		[Token(Token = "0x400161E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action PlatformFilterInitialized;

		[Token(Token = "0x400161F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Func<Collider> GetPlayerCollider;

		[Token(Token = "0x4001620")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Action<bool> ToggleMultiplayerAvatarVisibilty;

		[Token(Token = "0x4001621")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Action<int, int> OnPutterSelected;

		[Token(Token = "0x4001622")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Action UpdatePlaformConnections;

		[Token(Token = "0x4001623")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Action<bool, bool> ToggleMainMenu;

		[Token(Token = "0x4001624")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Action<CourseDetails, int> CourseDeeplink;

		[Token(Token = "0x4001625")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Func<PlayerHomeViewList> GetPlayerHomeViewList;

		[Token(Token = "0x4001626")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Action IncreaseBallStink;

		[Token(Token = "0x4001627")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Action HolesIntialized;

		[Token(Token = "0x4001628")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Action HoleStart;

		[Token(Token = "0x4001629")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Action MyTurnStarted;

		[Token(Token = "0x400162A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Action ResetDelayedSwitches;

		[Token(Token = "0x400162B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public Action Putt;

		[Token(Token = "0x400162C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public Action PuttComplete;

		[Token(Token = "0x400162D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public Action HoleCompleted;

		[Token(Token = "0x400162E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public Action ActiveHoleUpdated;

		[Token(Token = "0x400162F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public Action CourseStart;

		[Token(Token = "0x4001630")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public Action CourseComplete;

		[Token(Token = "0x4001631")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public Action InstantReplayStarted;

		[Token(Token = "0x4001632")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public Action<bool> InstantReplayEnded;

		[Token(Token = "0x4001633")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public Action RecordStarting;

		[Token(Token = "0x4001634")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public Action StrokeUndo;

		[Token(Token = "0x4001635")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public Action FoxHuntInitialized;

		[Token(Token = "0x4001636")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public Action<FoxhuntClue> FoxHuntClueFound;

		[Token(Token = "0x4001637")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public Action<FoxhuntClue> CurrentFoxHuntClueUpdated;

		[Token(Token = "0x4001638")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public Action<ISwitchable, bool, bool> BallSwitchToggled;

		[Token(Token = "0x4001639")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public Action WarpToMainMenu;

		[Token(Token = "0x400163A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public Action WarpToCourseSelectionMenu;

		[Token(Token = "0x400163B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public Action WarpToMultiplayerMenu;

		[Token(Token = "0x400163C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		public Action WarpToPlayerInfoMenu;

		[Token(Token = "0x400163D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		public Action WarpToConnectingMenu;

		[Token(Token = "0x400163E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		public Action WarpToPrivateRoomMenu;

		[Token(Token = "0x400163F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		public Action WarpToPutterSelection;

		[Token(Token = "0x4001640")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		public Action WarpToBallSelection;

		[Token(Token = "0x4001641")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		public Func<bool> IsVRPointerActive;

		[Token(Token = "0x4001642")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		public Action<bool> ToggleVRPointer;

		[Token(Token = "0x4001643")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		public Action<bool> VRPointerActivated;

		[Token(Token = "0x4001644")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		public Action PutterHandInverted;

		[Token(Token = "0x4001645")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		public Action<bool> PutterCustomGripToggled;

		[Token(Token = "0x4001646")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		public Action PutterCalibrationStarted;

		[Token(Token = "0x4001647")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		public Action PutterCalibrationStopped;

		[Token(Token = "0x4001648")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		public Action LanguageChange;

		[Token(Token = "0x4001649")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		public Action UGSAuthenticated;

		[Token(Token = "0x400164A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		public Action<string, Dictionary<string, object>> UnityAnalyticsEvent;

		[Token(Token = "0x400164B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		public Action<AchievementsCatalog.AchievementType> AchievementEventHappened;

		[Token(Token = "0x400164C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		public Action<WalkaboutLOD> SubscribeLODUpdate;

		[Token(Token = "0x400164D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		public Action<WalkaboutLOD> QueueLODUpdate;

		[Token(Token = "0x400164E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		public Action<string> KeyTriggerBroadcast;

		[Token(Token = "0x400164F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		public Action<bool> ToggleUICamera;

		[Token(Token = "0x4001650")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		public Action RecalculateLOD;

		[Token(Token = "0x6001DD1")]
		[Address(RVA = "0xEBFB08", Offset = "0xEBFB08", VA = "0xEBFB08")]
		[RuntimeInitializeOnLoadMethod(RuntimeInitializeLoadType.BeforeSceneLoad)]
		public static void Init()
		{
		}

		[Token(Token = "0x6001DD2")]
		[Address(RVA = "0xEBFC28", Offset = "0xEBFC28", VA = "0xEBFC28")]
		private void Start()
		{
		}

		[Token(Token = "0x6001DD3")]
		[Address(RVA = "0xEBFD44", Offset = "0xEBFD44", VA = "0xEBFD44")]
		public GlobalBroadcast()
		{
		}
	}
	[Token(Token = "0x200044E")]
	public class HideMultiplayerAvatars : MonoBehaviour
	{
		[Token(Token = "0x4001651")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Collider compareCollider;

		[Token(Token = "0x6001DD5")]
		[Address(RVA = "0xEBFE70", Offset = "0xEBFE70", VA = "0xEBFE70")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001DD6")]
		[Address(RVA = "0xEBFF10", Offset = "0xEBFF10", VA = "0xEBFF10")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6001DD7")]
		[Address(RVA = "0xEBFFF8", Offset = "0xEBFFF8", VA = "0xEBFFF8")]
		private void OnTriggerStay(Collider other)
		{
		}

		[Token(Token = "0x6001DD8")]
		[Address(RVA = "0xEC00E0", Offset = "0xEC00E0", VA = "0xEC00E0")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6001DD9")]
		[Address(RVA = "0xEC01C8", Offset = "0xEC01C8", VA = "0xEC01C8")]
		public HideMultiplayerAvatars()
		{
		}
	}
	[Token(Token = "0x200044F")]
	public class LeaderboardManager : Singleton<LeaderboardManager>
	{
		[Token(Token = "0x4001652")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Header("DEBUG")]
		public string TestLeaderboardName;

		[Token(Token = "0x4001653")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int TestScore;

		[Token(Token = "0x4001654")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool TestUploadData;

		[Token(Token = "0x4001655")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
		public bool TestDownloadData;

		[Token(Token = "0x4001656")]
		public const string DAILY_LEADERBOARD_All_PLATFORMS = "DailyAverageLeaderboard_AllPlatforms";

		[Token(Token = "0x4001657")]
		public const string WEEKLY_LEADERBOARD_All_PLATFORMS = "WeeklyAverageLeaderboard_AllPlatforms";

		[Token(Token = "0x4001658")]
		public const string ALL_TIME_LEADERBOARD_All_PLATFORMS = "AllTimeAverageLeaderboard_AllPlatforms";

		[Token(Token = "0x4001659")]
		public const string DAILY_LEADERBOARD_META = "DailyAverageLeaderboard_Meta";

		[Token(Token = "0x400165A")]
		public const string WEEKLY_LEADERBOARD_META = "WeeklyAverageLeaderboard_Meta";

		[Token(Token = "0x400165B")]
		public const string ALL_TIME_LEADERBOARD_META = "AllTimeAverageLeaderboard_Meta";

		[Token(Token = "0x400165C")]
		public const string DAILY_LEADERBOARD_VIVE = "DailyAverageLeaderboard_Vive";

		[Token(Token = "0x400165D")]
		public const string WEEKLY_LEADERBOARD_VIVE = "WeeklyAverageLeaderboard_Vive";

		[Token(Token = "0x400165E")]
		public const string ALL_TIME_LEADERBOARD_VIVE = "AllTimeAverageLeaderboard_Vive";

		[Token(Token = "0x400165F")]
		public const string DAILY_LEADERBOARD_PICO = "DailyAverageLeaderboard_Pico";

		[Token(Token = "0x4001660")]
		public const string WEEKLY_LEADERBOARD_PICO = "WeeklyAverageLeaderboard_Pico";

		[Token(Token = "0x4001661")]
		public const string ALL_TIME_LEADERBOARD_PICO = "AllTimeAverageLeaderboard_Pico";

		[Token(Token = "0x4001662")]
		public const string DAILY_LEADERBOARD_PLAYSTATION = "DailyAverageLeaderboard_Playstation";

		[Token(Token = "0x4001663")]
		public const string WEEKLY_LEADERBOARD_PLAYSTATION = "WeeklyAverageLeaderboard_Playstation";

		[Token(Token = "0x4001664")]
		public const string ALL_TIME_LEADERBOARD_PLAYSTATION = "AllTimeAverageLeaderboard_Playstation";

		[Token(Token = "0x6001DDA")]
		[Address(RVA = "0xEC01D0", Offset = "0xEC01D0", VA = "0xEC01D0")]
		private void Update()
		{
		}

		[Token(Token = "0x6001DDB")]
		[Address(RVA = "0xEC078C", Offset = "0xEC078C", VA = "0xEC078C")]
		public void SendAllLeaderboards(int score)
		{
		}

		[Token(Token = "0x6001DDC")]
		[Address(RVA = "0xEC0224", Offset = "0xEC0224", VA = "0xEC0224")]
		public void SendLeaderboard(string leaderboardName, int score)
		{
		}

		[Token(Token = "0x6001DDD")]
		[Address(RVA = "0xEC0790", Offset = "0xEC0790", VA = "0xEC0790")]
		private void OnLeaderboardUpdate(UpdatePlayerStatisticsResult result)
		{
		}

		[Token(Token = "0x6001DDE")]
		[Address(RVA = "0xEC0448", Offset = "0xEC0448", VA = "0xEC0448")]
		public void GetLeaderboard(string leaderboardName, int startPosition = 0, int maxResults = 10, [Optional] Action<GetLeaderboardResult> onLeaderboardGet)
		{
		}

		[Token(Token = "0x6001DDF")]
		[Address(RVA = "0xEC07F8", Offset = "0xEC07F8", VA = "0xEC07F8")]
		private void OnLeaderboardGet(GetLeaderboardResult result)
		{
		}

		[Token(Token = "0x6001DE0")]
		[Address(RVA = "0xEC0C54", Offset = "0xEC0C54", VA = "0xEC0C54")]
		public void GetLeaderboardAroundPlayer(string leaderboardName, int maxResults = 10)
		{
		}

		[Token(Token = "0x6001DE1")]
		[Address(RVA = "0xEC0E5C", Offset = "0xEC0E5C", VA = "0xEC0E5C")]
		private void OnLeaderboardAroundGet(GetLeaderboardAroundPlayerResult result)
		{
		}

		[Token(Token = "0x6001DE2")]
		[Address(RVA = "0xEC12B8", Offset = "0xEC12B8", VA = "0xEC12B8")]
		private void OnError(PlayFabError error)
		{
		}

		[Token(Token = "0x6001DE3")]
		[Address(RVA = "0xEC132C", Offset = "0xEC132C", VA = "0xEC132C")]
		public LeaderboardManager()
		{
		}
	}
	[Token(Token = "0x2000450")]
	public class WaypointAnimationMover : MovingObject
	{
		[Token(Token = "0x4001665")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[Space(15f)]
		[Header("Animation Settings")]
		public AnimationClip clip;

		[Token(Token = "0x4001666")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		public LoopType loopType;

		[Token(Token = "0x4001667")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		[Tooltip("")]
		public bool isSwitchDriven;

		[Token(Token = "0x4001668")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private double currentTime;

		[Token(Token = "0x4001669")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private double clipLength;

		[Token(Token = "0x400166A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private double previousAnimationSample;

		[Token(Token = "0x400166B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private int reverseFactor;

		[Token(Token = "0x400166C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
		private int switchDirectionFactor;

		[Token(Token = "0x400166D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private double previousNetworkTime;

		[Token(Token = "0x6001DE4")]
		[Address(RVA = "0xEC1398", Offset = "0xEC1398", VA = "0xEC1398")]
		private void Start()
		{
		}

		[Token(Token = "0x6001DE5")]
		[Address(RVA = "0xEC13C4", Offset = "0xEC13C4", VA = "0xEC13C4", Slot = "11")]
		protected override void MoveObject()
		{
		}

		[Token(Token = "0x6001DE6")]
		[Address(RVA = "0xEC1760", Offset = "0xEC1760", VA = "0xEC1760", Slot = "12")]
		protected override void OnReset()
		{
		}

		[Token(Token = "0x6001DE7")]
		[Address(RVA = "0xEC1688", Offset = "0xEC1688", VA = "0xEC1688")]
		private void CheckForLoop()
		{
		}

		[Token(Token = "0x6001DE8")]
		[Address(RVA = "0xEC1768", Offset = "0xEC1768", VA = "0xEC1768", Slot = "15")]
		public override void SwitchOff(bool fastSwitch = false)
		{
		}

		[Token(Token = "0x6001DE9")]
		[Address(RVA = "0xEC17CC", Offset = "0xEC17CC", VA = "0xEC17CC", Slot = "14")]
		public override void SwitchOn(bool fastSwitch = false)
		{
		}

		[Token(Token = "0x6001DEA")]
		[Address(RVA = "0xEC1858", Offset = "0xEC1858", VA = "0xEC1858")]
		public void ToggleSwitch()
		{
		}

		[Token(Token = "0x6001DEB")]
		[Address(RVA = "0xEC1884", Offset = "0xEC1884", VA = "0xEC1884")]
		public WaypointAnimationMover()
		{
		}
	}
	[Token(Token = "0x2000451")]
	public class PlayerCollider : MonoBehaviour
	{
		[Token(Token = "0x400166E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Collider myCollider;

		[Token(Token = "0x6001DEC")]
		[Address(RVA = "0xEC18A4", Offset = "0xEC18A4", VA = "0xEC18A4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001DED")]
		[Address(RVA = "0xEC19C0", Offset = "0xEC19C0", VA = "0xEC19C0")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001DEE")]
		[Address(RVA = "0xEC1ADC", Offset = "0xEC1ADC", VA = "0xEC1ADC")]
		private Collider GetCollider()
		{
			return null;
		}

		[Token(Token = "0x6001DEF")]
		[Address(RVA = "0xEC1AE4", Offset = "0xEC1AE4", VA = "0xEC1AE4")]
		public PlayerCollider()
		{
		}
	}
	[Token(Token = "0x2000452")]
	public class ProximityEvent : MonoBehaviour
	{
		[Token(Token = "0x400166F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UnityEvent OnEnterRange;

		[Token(Token = "0x4001670")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UnityEvent OnLeaveRange;

		[Token(Token = "0x4001671")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public DefaultTargets defaultTarget;

		[Token(Token = "0x4001672")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform target;

		[Token(Token = "0x4001673")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float proximity;

		[Token(Token = "0x4001674")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[Space(10f)]
		[Header("Performance")]
		public int frameThrottle;

		[Token(Token = "0x4001675")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int currentFrame;

		[Token(Token = "0x4001676")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private bool inRange;

		[Token(Token = "0x4001677")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
		private bool firstCheck;

		[Token(Token = "0x6001DF0")]
		[Address(RVA = "0xEC1AEC", Offset = "0xEC1AEC", VA = "0xEC1AEC")]
		private void Start()
		{
		}

		[Token(Token = "0x6001DF1")]
		[Address(RVA = "0xEC1AF0", Offset = "0xEC1AF0", VA = "0xEC1AF0")]
		private void Init()
		{
		}

		[Token(Token = "0x6001DF2")]
		[Address(RVA = "0xEC1C88", Offset = "0xEC1C88", VA = "0xEC1C88")]
		private void Update()
		{
		}

		[Token(Token = "0x6001DF3")]
		[Address(RVA = "0xEC1DBC", Offset = "0xEC1DBC", VA = "0xEC1DBC")]
		public ProximityEvent()
		{
		}
	}
	[Token(Token = "0x2000453")]
	public enum DefaultTargets
	{
		[Token(Token = "0x4001679")]
		NA,
		[Token(Token = "0x400167A")]
		Ball,
		[Token(Token = "0x400167B")]
		PlayerHead
	}
	[Token(Token = "0x2000454")]
	public class RemoteConfigSettings : MonoBehaviour
	{
		[Token(Token = "0x6001DF4")]
		[Address(RVA = "0xEC1DD8", Offset = "0xEC1DD8", VA = "0xEC1DD8")]
		public RemoteConfigSettings()
		{
		}
	}
	[Token(Token = "0x2000455")]
	public class RenderScaleManager : MonoBehaviour
	{
		[Token(Token = "0x400167C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private UniversalRenderPipelineAsset urpAsset;

		[Token(Token = "0x6001DF5")]
		[Address(RVA = "0xEC1DE0", Offset = "0xEC1DE0", VA = "0xEC1DE0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001DF6")]
		[Address(RVA = "0xEC1EB0", Offset = "0xEC1EB0", VA = "0xEC1EB0")]
		public RenderScaleManager()
		{
		}
	}
	[Token(Token = "0x2000456")]
	public class ReparentOnPlay : MonoBehaviour
	{
		[Token(Token = "0x400167D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Tooltip("Searches in hierarchy for Transform with this name if ParentTransRef is Null")]
		public string ParentTransName;

		[Token(Token = "0x400167E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Tooltip("If suplied will ignore ParentTransName and utilize ParentTransRef directly")]
		public Transform ParentTransRef;

		[Token(Token = "0x400167F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool DelayFind;

		[Token(Token = "0x4001680")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		[Space]
		[Tooltip("Default Value: False")]
		public bool ResetTransformOnReparent;

		[Token(Token = "0x4001681")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
		[Tooltip("Default Value: True")]
		public bool worldPositionStays;

		[Token(Token = "0x6001DF7")]
		[Address(RVA = "0xEC1EB8", Offset = "0xEC1EB8", VA = "0xEC1EB8")]
		private void Start()
		{
		}

		[Token(Token = "0x6001DF8")]
		[Address(RVA = "0xEC1F9C", Offset = "0xEC1F9C", VA = "0xEC1F9C")]
		private void FindAndSetParent()
		{
		}

		[Token(Token = "0x6001DF9")]
		[Address(RVA = "0xEC2360", Offset = "0xEC2360", VA = "0xEC2360")]
		public ReparentOnPlay()
		{
		}
	}
	[Token(Token = "0x2000457")]
	public class StinkyBall : MonoBehaviourPunCallbacks
	{
		[Token(Token = "0x4001682")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public StinkyBallFX stinkyFX;

		[Token(Token = "0x4001683")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly string stinkyBall;

		[Token(Token = "0x6001DFB")]
		[Address(RVA = "0xEC23BC", Offset = "0xEC23BC", VA = "0xEC23BC", Slot = "47")]
		public override void OnPlayerPropertiesUpdate(Photon.Realtime.Player player, ExitGames.Client.Photon.Hashtable changedProps)
		{
		}

		[Token(Token = "0x6001DFC")]
		[Address(RVA = "0xEC2884", Offset = "0xEC2884", VA = "0xEC2884")]
		public StinkyBall()
		{
		}
	}
	[Token(Token = "0x2000458")]
	public class StinkyBallFX : MonoBehaviour
	{
		[Token(Token = "0x4001684")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ParticleSystem stinkParticles;

		[Token(Token = "0x4001685")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int maxEmmision;

		[Token(Token = "0x4001686")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int emmisionStep;

		[Token(Token = "0x4001687")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Renderer rend;

		[Token(Token = "0x6001DFD")]
		[Address(RVA = "0xEC2740", Offset = "0xEC2740", VA = "0xEC2740")]
		public void Init()
		{
		}

		[Token(Token = "0x6001DFE")]
		[Address(RVA = "0xEC28D4", Offset = "0xEC28D4", VA = "0xEC28D4")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001DFF")]
		[Address(RVA = "0xEC29DC", Offset = "0xEC29DC", VA = "0xEC29DC")]
		private void Update()
		{
		}

		[Token(Token = "0x6001E00")]
		[Address(RVA = "0xEC2B30", Offset = "0xEC2B30", VA = "0xEC2B30")]
		private void IncreaseBallStink()
		{
		}

		[Token(Token = "0x6001E01")]
		[Address(RVA = "0xEC2BE0", Offset = "0xEC2BE0", VA = "0xEC2BE0")]
		public StinkyBallFX()
		{
		}
	}
	[Token(Token = "0x2000459")]
	public class StinkyBallTrigger : CompoundTrigger
	{
		[Token(Token = "0x6001E02")]
		[Address(RVA = "0xEC2BE8", Offset = "0xEC2BE8", VA = "0xEC2BE8")]
		private void Start()
		{
		}

		[Token(Token = "0x6001E03")]
		[Address(RVA = "0xEC2BF0", Offset = "0xEC2BF0", VA = "0xEC2BF0", Slot = "4")]
		protected override void OnCompoundTriggerEnter()
		{
		}

		[Token(Token = "0x6001E04")]
		[Address(RVA = "0xEC2E10", Offset = "0xEC2E10", VA = "0xEC2E10")]
		public StinkyBallTrigger()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200045A")]
	public class CourseDetails
	{
		[Token(Token = "0x4001688")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string courseName;

		[Token(Token = "0x4001689")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string sceneName;

		[Token(Token = "0x400168A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[NonReorderable]
		public string[] tags;

		[Token(Token = "0x400168B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string courseDescription;

		[Token(Token = "0x400168C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public CourseInfoAsset courseInfo;

		[Token(Token = "0x170003D9")]
		public Sprite Image
		{
			[Token(Token = "0x6001E09")]
			[Address(RVA = "0xEC2F80", Offset = "0xEC2F80", VA = "0xEC2F80")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003DA")]
		public bool HasImage
		{
			[Token(Token = "0x6001E0A")]
			[Address(RVA = "0xEC2F9C", Offset = "0xEC2F9C", VA = "0xEC2F9C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001E05")]
		[Address(RVA = "0xEBE254", Offset = "0xEBE254", VA = "0xEBE254")]
		public CourseDetails()
		{
		}

		[Token(Token = "0x6001E06")]
		[Address(RVA = "0xEC2E18", Offset = "0xEC2E18", VA = "0xEC2E18")]
		public CourseDetails(CourseInfoAsset asset)
		{
		}

		[Token(Token = "0x6001E07")]
		[Address(RVA = "0xEC2E50", Offset = "0xEC2E50", VA = "0xEC2E50")]
		public bool CompareTags(string[] otherTags)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E08")]
		[Address(RVA = "0xEC2F0C", Offset = "0xEC2F0C", VA = "0xEC2F0C")]
		public bool CompareTag(string otherTag)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200045B")]
	public class CourseDetailsView : CanvasView
	{
		[Token(Token = "0x400168D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[Header("Course Elements")]
		public GameObject playRoundButton;

		[Token(Token = "0x400168E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public GameObject front9Button;

		[Token(Token = "0x400168F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public GameObject back9Button;

		[Token(Token = "0x4001690")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public GameObject practiceButton;

		[Token(Token = "0x4001691")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public GameObject GetCourseButton;

		[Token(Token = "0x4001692")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public GameObject lockedIndicator;

		[Token(Token = "0x4001693")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public TextMeshProUGUI lockText;

		[Token(Token = "0x4001694")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public GameObject lockMessageButton;

		[Token(Token = "0x4001695")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public GameObject lockUnlockableIcon;

		[Token(Token = "0x4001696")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		public GameObject lockPurchasableIcon;

		[Token(Token = "0x4001697")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		public GameObject unlockIndicator;

		[Token(Token = "0x4001698")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		public GameObject guestPass;

		[Token(Token = "0x4001699")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[Header("Course Details")]
		public TextMeshProUGUI courseName;

		[Token(Token = "0x400169A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		public Localize courseNameI2;

		[Token(Token = "0x400169B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		public Image courseImage;

		[Token(Token = "0x400169C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		public Localize courseDescriptionI2;

		[Token(Token = "0x400169D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		public TextMeshProUGUI courseDescriptionText;

		[Token(Token = "0x400169E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		public TextMeshProUGUI courseStatsText;

		[Token(Token = "0x400169F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		private CourseDetails courseDetails;

		[Token(Token = "0x6001E0B")]
		[Address(RVA = "0xEC3040", Offset = "0xEC3040", VA = "0xEC3040", Slot = "9")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001E0C")]
		[Address(RVA = "0xEC3194", Offset = "0xEC3194", VA = "0xEC3194")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001E0D")]
		[Address(RVA = "0xEC32DC", Offset = "0xEC32DC", VA = "0xEC32DC")]
		public void Play18()
		{
		}

		[Token(Token = "0x6001E0E")]
		[Address(RVA = "0xEC349C", Offset = "0xEC349C", VA = "0xEC349C")]
		public void PlayFront9()
		{
		}

		[Token(Token = "0x6001E0F")]
		[Address(RVA = "0xEC3500", Offset = "0xEC3500", VA = "0xEC3500")]
		public void PlayBack9()
		{
		}

		[Token(Token = "0x6001E10")]
		[Address(RVA = "0xEC3564", Offset = "0xEC3564", VA = "0xEC3564")]
		public void PlayPractice()
		{
		}

		[Token(Token = "0x6001E11")]
		[Address(RVA = "0xEC35C8", Offset = "0xEC35C8", VA = "0xEC35C8")]
		public void Purchase()
		{
		}

		[Token(Token = "0x6001E12")]
		[Address(RVA = "0xEC333C", Offset = "0xEC333C", VA = "0xEC333C")]
		private void LoadSceneIfValid()
		{
		}

		[Token(Token = "0x6001E13")]
		[Address(RVA = "0xEC35EC", Offset = "0xEC35EC", VA = "0xEC35EC")]
		public void OnCourseSelected(CourseDetails courseDetails, int viewIndex)
		{
		}

		[Token(Token = "0x6001E14")]
		[Address(RVA = "0xEC35F4", Offset = "0xEC35F4", VA = "0xEC35F4")]
		private void UpdateCourseDetails()
		{
		}

		[Token(Token = "0x6001E15")]
		[Address(RVA = "0xEC3DFC", Offset = "0xEC3DFC", VA = "0xEC3DFC")]
		private void DisplayLocked()
		{
		}

		[Token(Token = "0x6001E16")]
		[Address(RVA = "0xEC3BDC", Offset = "0xEC3BDC", VA = "0xEC3BDC")]
		private void DisplayUnlocked()
		{
		}

		[Token(Token = "0x6001E17")]
		[Address(RVA = "0xEC4060", Offset = "0xEC4060", VA = "0xEC4060")]
		private void UpdateTextScriptUponLanguageChange()
		{
		}

		[Token(Token = "0x6001E18")]
		[Address(RVA = "0xEC4158", Offset = "0xEC4158", VA = "0xEC4158")]
		public CourseDetailsView()
		{
		}
	}
	[Token(Token = "0x200045C")]
	public class CourseItemButton : MonoBehaviour
	{
		[Token(Token = "0x40016A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Header("Course Elements")]
		public TextMeshProUGUI courseName;

		[Token(Token = "0x40016A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Localize courseNameI2;

		[Token(Token = "0x40016A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TextMeshProUGUI stats;

		[Token(Token = "0x40016A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public TextMeshProUGUI lockText;

		[Token(Token = "0x40016A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Image image;

		[Token(Token = "0x40016A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameObject lockedIndicator;

		[Token(Token = "0x40016A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public GameObject lockMessageButton;

		[Token(Token = "0x40016A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public GameObject lockUnlockableIcon;

		[Token(Token = "0x40016A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public GameObject lockPurchasableIcon;

		[Token(Token = "0x40016A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public GameObject unlockIndicator;

		[Token(Token = "0x40016AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public GameObject guestPass;

		[Token(Token = "0x40016AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public GameObject PlayRoundButton;

		[Token(Token = "0x40016AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public GameObject MoreInfoButton;

		[Token(Token = "0x40016AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public GameObject GetCourseButton;

		[Token(Token = "0x40016AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[FarBridge.ReadOnly]
		[Header("Dynamically Assigned Fields")]
		public CourseDetails courseDetails;

		[Token(Token = "0x40016AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public int viewIndex;

		[Token(Token = "0x40016B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public Action<CourseItemButton, int> OnCourseSelected;

		[Token(Token = "0x6001E19")]
		[Address(RVA = "0xEC4160", Offset = "0xEC4160", VA = "0xEC4160")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001E1A")]
		[Address(RVA = "0xEC4460", Offset = "0xEC4460", VA = "0xEC4460")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001E1B")]
		[Address(RVA = "0xEC45A8", Offset = "0xEC45A8", VA = "0xEC45A8")]
		public void Setup(CourseDetails courseDetails)
		{
		}

		[Token(Token = "0x6001E1C")]
		[Address(RVA = "0xEC42AC", Offset = "0xEC42AC", VA = "0xEC42AC")]
		private void UpdateCourseDetails()
		{
		}

		[Token(Token = "0x6001E1D")]
		[Address(RVA = "0xEC4B20", Offset = "0xEC4B20", VA = "0xEC4B20")]
		public void Play18()
		{
		}

		[Token(Token = "0x6001E1E")]
		[Address(RVA = "0xEC4CE0", Offset = "0xEC4CE0", VA = "0xEC4CE0")]
		public void MoreInfo()
		{
		}

		[Token(Token = "0x6001E1F")]
		[Address(RVA = "0xEC4D9C", Offset = "0xEC4D9C", VA = "0xEC4D9C")]
		public void Purchase()
		{
		}

		[Token(Token = "0x6001E20")]
		[Address(RVA = "0xEC492C", Offset = "0xEC492C", VA = "0xEC492C")]
		private void DisplayLocked()
		{
		}

		[Token(Token = "0x6001E21")]
		[Address(RVA = "0xEC47D0", Offset = "0xEC47D0", VA = "0xEC47D0")]
		private void DisplayUnlocked()
		{
		}

		[Token(Token = "0x6001E22")]
		[Address(RVA = "0xEC4B80", Offset = "0xEC4B80", VA = "0xEC4B80")]
		private void LoadSceneIfValid()
		{
		}

		[Token(Token = "0x6001E23")]
		[Address(RVA = "0xEC4DC0", Offset = "0xEC4DC0", VA = "0xEC4DC0")]
		private void UpdateTextScriptUponLanguageChange()
		{
		}

		[Token(Token = "0x6001E24")]
		[Address(RVA = "0xEC4EB8", Offset = "0xEC4EB8", VA = "0xEC4EB8")]
		public CourseItemButton()
		{
		}
	}
	[Token(Token = "0x200045D")]
	public class CourseItemsMenu : CanvasView
	{
		[Token(Token = "0x40016B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public Dictionary<string, List<CourseDetails>> courseDetailsDict;

		[Token(Token = "0x40016B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[HideInInspector]
		public List<CourseDetails> allCourseDetails;

		[Token(Token = "0x40016B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public PagingPipsView pagingPips;

		[Token(Token = "0x40016B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public FilterSelectionView filterSelection;

		[Token(Token = "0x40016B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[NonReorderable]
		public FilterCollection filterCollection;

		[Token(Token = "0x40016B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public Action<CourseDetails, int> OnCourseSelecteded;

		[Token(Token = "0x40016B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private Dictionary<int, string> filterStartingPageIndexesDict;

		[Token(Token = "0x40016B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private bool setup;

		[Token(Token = "0x40016B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		private int FilterIndex;

		[Token(Token = "0x40016BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private int totalPageCount;

		[Token(Token = "0x6001E25")]
		[Address(RVA = "0xEC4EC0", Offset = "0xEC4EC0", VA = "0xEC4EC0", Slot = "19")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6001E26")]
		[Address(RVA = "0xEC64D0", Offset = "0xEC64D0", VA = "0xEC64D0")]
		public void Setup()
		{
		}

		[Token(Token = "0x6001E27")]
		[Address(RVA = "0xEC75C8", Offset = "0xEC75C8", VA = "0xEC75C8")]
		public void GoToPage(int pageIndex, ViewTransition transition = ViewTransition.Direct)
		{
		}

		[Token(Token = "0x6001E28")]
		[Address(RVA = "0xEC7710", Offset = "0xEC7710", VA = "0xEC7710")]
		public void GoToView(int viewIndex)
		{
		}

		[Token(Token = "0x6001E29")]
		[Address(RVA = "0xEC7D8C", Offset = "0xEC7D8C", VA = "0xEC7D8C", Slot = "13")]
		public override void Next()
		{
		}

		[Token(Token = "0x6001E2A")]
		[Address(RVA = "0xEC7EF8", Offset = "0xEC7EF8", VA = "0xEC7EF8", Slot = "14")]
		public override void Previous()
		{
		}

		[Token(Token = "0x6001E2B")]
		[Address(RVA = "0xEC7FF0", Offset = "0xEC7FF0", VA = "0xEC7FF0", Slot = "20")]
		public override void InitializePagingButtons(int pageQty)
		{
		}

		[Token(Token = "0x6001E2C")]
		[Address(RVA = "0xEC80D0", Offset = "0xEC80D0", VA = "0xEC80D0")]
		private void OnCourseSelected(CourseDetails courseDetails, int viewIndex)
		{
		}

		[Token(Token = "0x6001E2D")]
		[Address(RVA = "0xEC80EC", Offset = "0xEC80EC", VA = "0xEC80EC")]
		private void OnFilterSelected(Filter filter)
		{
		}

		[Token(Token = "0x6001E2E")]
		[Address(RVA = "0xEC5414", Offset = "0xEC5414", VA = "0xEC5414")]
		private void ValidateFilterCollection(FilterCollection filterCollection)
		{
		}

		[Token(Token = "0x6001E2F")]
		[Address(RVA = "0xEC5C74", Offset = "0xEC5C74", VA = "0xEC5C74")]
		private int GetTotalPages()
		{
			return default(int);
		}

		[Token(Token = "0x6001E30")]
		[Address(RVA = "0xEC83D8", Offset = "0xEC83D8", VA = "0xEC83D8")]
		private int GetCurrentTotalPagesIndex(int filterIndex, int viewIndex)
		{
			return default(int);
		}

		[Token(Token = "0x6001E31")]
		[Address(RVA = "0xEC86BC", Offset = "0xEC86BC", VA = "0xEC86BC")]
		public (CourseDetails, int) GetCourseDetailsAndViewIndexBasedOnName(string courseNameOrSceneName)
		{
			return default((CourseDetails, int));
		}

		[Token(Token = "0x6001E32")]
		[Address(RVA = "0xEC8BD4", Offset = "0xEC8BD4", VA = "0xEC8BD4")]
		public void SetTemplatesGameObejctsInactiveInScene()
		{
		}

		[Token(Token = "0x6001E33")]
		[Address(RVA = "0xEC8CE8", Offset = "0xEC8CE8", VA = "0xEC8CE8")]
		public CourseItemsMenu()
		{
		}
	}
	[Token(Token = "0x200045F")]
	public class CourseItemsView : CanvasView
	{
		[Token(Token = "0x40016BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public List<CourseItemButton> courseButtons;

		[Token(Token = "0x40016BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public Action<CourseDetails, int> OnCourseSelecteded;

		[Token(Token = "0x6001E36")]
		[Address(RVA = "0xEC7034", Offset = "0xEC7034", VA = "0xEC7034")]
		public void Setup(List<CourseDetails> courseDetails, int viewIndex)
		{
		}

		[Token(Token = "0x6001E37")]
		[Address(RVA = "0xEC8DA0", Offset = "0xEC8DA0", VA = "0xEC8DA0")]
		private void OnCourseSelected(CourseItemButton courseButton, int viewIndex)
		{
		}

		[Token(Token = "0x6001E38")]
		[Address(RVA = "0xEC8DD4", Offset = "0xEC8DD4", VA = "0xEC8DD4", Slot = "15")]
		public override void ShowNextView([Optional] Action OnComplete)
		{
		}

		[Token(Token = "0x6001E39")]
		[Address(RVA = "0xEC8E4C", Offset = "0xEC8E4C", VA = "0xEC8E4C")]
		private void OnValidatePurchases()
		{
		}

		[Token(Token = "0x6001E3A")]
		[Address(RVA = "0xEC8F64", Offset = "0xEC8F64", VA = "0xEC8F64", Slot = "9")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001E3B")]
		[Address(RVA = "0xEC90AC", Offset = "0xEC90AC", VA = "0xEC90AC")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001E3C")]
		[Address(RVA = "0xEC91BC", Offset = "0xEC91BC", VA = "0xEC91BC")]
		public CourseItemsView()
		{
		}
	}
	[Token(Token = "0x2000460")]
	public class CourseSelectionMenu : ViewContainer
	{
		[Token(Token = "0x2000461")]
		[CompilerGenerated]
		private sealed class <Start>d__2 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40016C0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40016C1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40016C2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CourseSelectionMenu <>4__this;

			[Token(Token = "0x170003DB")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001E46")]
				[Address(RVA = "0xEC9C24", Offset = "0xEC9C24", VA = "0xEC9C24", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003DC")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E48")]
				[Address(RVA = "0xEC9C6C", Offset = "0xEC9C6C", VA = "0xEC9C6C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E43")]
			[Address(RVA = "0xEC9228", Offset = "0xEC9228", VA = "0xEC9228")]
			[DebuggerHidden]
			public <Start>d__2(int <>1__state)
			{
			}

			[Token(Token = "0x6001E44")]
			[Address(RVA = "0xEC9688", Offset = "0xEC9688", VA = "0xEC9688", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E45")]
			[Address(RVA = "0xEC968C", Offset = "0xEC968C", VA = "0xEC968C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E47")]
			[Address(RVA = "0xEC9C2C", Offset = "0xEC9C2C", VA = "0xEC9C2C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40016BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private CourseItemsMenu courseItemsMenu;

		[Token(Token = "0x40016BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private CourseDetailsView courseDetailsView;

		[Token(Token = "0x6001E3D")]
		[Address(RVA = "0xEC91C0", Offset = "0xEC91C0", VA = "0xEC91C0")]
		[IteratorStateMachine(typeof(<Start>d__2))]
		private IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x6001E3E")]
		[Address(RVA = "0xEC9250", Offset = "0xEC9250", VA = "0xEC9250")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001E3F")]
		[Address(RVA = "0xEC93FC", Offset = "0xEC93FC", VA = "0xEC93FC")]
		private void OnCourseSelectedDeepLink(CourseDetails courseDetails, int viewIndex)
		{
		}

		[Token(Token = "0x6001E40")]
		[Address(RVA = "0xEC9534", Offset = "0xEC9534", VA = "0xEC9534")]
		private void OnReturnToMainMenuFromCourseName(string sceneName)
		{
		}

		[Token(Token = "0x6001E41")]
		[Address(RVA = "0xEC943C", Offset = "0xEC943C", VA = "0xEC943C")]
		private void OnCourseSelected(CourseDetails courseDetails, int viewIndex)
		{
		}

		[Token(Token = "0x6001E42")]
		[Address(RVA = "0xEC95EC", Offset = "0xEC95EC", VA = "0xEC95EC")]
		public CourseSelectionMenu()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000462")]
	public class DisplayCheck
	{
		[Token(Token = "0x40016C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Common.DisplayCondition displayCondition;

		[Token(Token = "0x40016C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public bool not;

		[Token(Token = "0x40016C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Common.Course associatedCourse;

		[Token(Token = "0x6001E49")]
		[Address(RVA = "0xEC9C74", Offset = "0xEC9C74", VA = "0xEC9C74")]
		public DisplayCheck()
		{
		}
	}
	[Token(Token = "0x2000463")]
	public class FilterButton : MonoBehaviour
	{
		[Token(Token = "0x40016C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Header("Base Settings")]
		public Localize titleLocalization;

		[Token(Token = "0x40016C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TextMeshProUGUI titleTextMesh;

		[Token(Token = "0x40016C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ButtonEvent buttonEvents;

		[Token(Token = "0x40016C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public CanvasGroup canvasGroup;

		[Token(Token = "0x40016CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Filter filter;

		[Token(Token = "0x40016CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[Header("Selected Button Settings")]
		[Space]
		[Tooltip("Enabled when button selected if EnableBackgroundOnSelect is set to true")]
		public GameObject SelectedBackground;

		[Token(Token = "0x40016CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Color SelectedTextColor;

		[Token(Token = "0x40016CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("If left empty then when not selected it will have transparent background")]
		public GameObject UnselectedBackground;

		[Token(Token = "0x40016CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Color UnselectedTextColor;

		[Token(Token = "0x40016CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[Space]
		public Action<FilterButton> OnFilterSelected;

		[Token(Token = "0x6001E4A")]
		[Address(RVA = "0xEC9C7C", Offset = "0xEC9C7C", VA = "0xEC9C7C")]
		public void Setup(Filter filter, Action<FilterButton> onFilterSelected)
		{
		}

		[Token(Token = "0x6001E4B")]
		[Address(RVA = "0xEC9D90", Offset = "0xEC9D90", VA = "0xEC9D90")]
		public void OnClick()
		{
		}

		[Token(Token = "0x6001E4C")]
		[Address(RVA = "0xEC9DB0", Offset = "0xEC9DB0", VA = "0xEC9DB0")]
		public void SetSelected(bool selected)
		{
		}

		[Token(Token = "0x6001E4D")]
		[Address(RVA = "0xEC9F10", Offset = "0xEC9F10", VA = "0xEC9F10")]
		public void DisableButton()
		{
		}

		[Token(Token = "0x6001E4E")]
		[Address(RVA = "0xEC9FCC", Offset = "0xEC9FCC", VA = "0xEC9FCC")]
		public void EnableButton()
		{
		}

		[Token(Token = "0x6001E4F")]
		[Address(RVA = "0xECA08C", Offset = "0xECA08C", VA = "0xECA08C")]
		public FilterButton()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000464")]
	public class Filter
	{
		[Token(Token = "0x40016D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string filterName;

		[Token(Token = "0x40016D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Tooltip("ViewID is used only for static Menus - i.e. Menus whose views aren't created at runtime")]
		public string tag;

		[Token(Token = "0x40016D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string viewID;

		[Token(Token = "0x40016D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Mighty.UIView.View viewTemplate;

		[Token(Token = "0x6001E50")]
		[Address(RVA = "0xECA094", Offset = "0xECA094", VA = "0xECA094")]
		public Filter()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000465")]
	public class FilterCollection
	{
		[Token(Token = "0x40016D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<Filter> filters;

		[Token(Token = "0x40016D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public List<string> filterTags;

		[Token(Token = "0x6001E51")]
		[Address(RVA = "0xECA09C", Offset = "0xECA09C", VA = "0xECA09C")]
		public void Init()
		{
		}

		[Token(Token = "0x6001E52")]
		[Address(RVA = "0xEC6ED8", Offset = "0xEC6ED8", VA = "0xEC6ED8")]
		public Filter GetFilterByTag(string tag)
		{
			return null;
		}

		[Token(Token = "0x6001E53")]
		[Address(RVA = "0xEC6D08", Offset = "0xEC6D08", VA = "0xEC6D08")]
		public void DisableAllViewTemplates()
		{
		}

		[Token(Token = "0x6001E54")]
		[Address(RVA = "0xECA2FC", Offset = "0xECA2FC", VA = "0xECA2FC")]
		public FilterCollection()
		{
		}
	}
	[Token(Token = "0x2000466")]
	public class FilterButtonView : CanvasView
	{
		[Token(Token = "0x40016D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public FilterButton[] filterButtons;

		[Token(Token = "0x40016D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public Action<Filter> OnFilterSelected;

		[Token(Token = "0x40016D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private Filter[] currentFilter;

		[Token(Token = "0x6001E55")]
		[Address(RVA = "0xECA304", Offset = "0xECA304", VA = "0xECA304")]
		public void Setup(List<Filter> filters)
		{
		}

		[Token(Token = "0x6001E56")]
		[Address(RVA = "0xECA564", Offset = "0xECA564", VA = "0xECA564")]
		public void FilterSelected(FilterButton selected)
		{
		}

		[Token(Token = "0x6001E57")]
		[Address(RVA = "0xECA4A8", Offset = "0xECA4A8", VA = "0xECA4A8")]
		public void UpdateSelectedButtonBackground(FilterButton selected)
		{
		}

		[Token(Token = "0x6001E58")]
		[Address(RVA = "0xECA5AC", Offset = "0xECA5AC", VA = "0xECA5AC")]
		public FilterButton GetFilterButtonByTag(string tag)
		{
			return null;
		}

		[Token(Token = "0x6001E59")]
		[Address(RVA = "0xECA634", Offset = "0xECA634", VA = "0xECA634")]
		public FilterButtonView()
		{
		}
	}
	[Token(Token = "0x2000467")]
	public class FilterSelectionView : CanvasView
	{
		[Token(Token = "0x40016D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public FilterButtonView filterButtonViewTemplate;

		[Token(Token = "0x40016DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public List<Filter>[] currentFilters;

		[Token(Token = "0x40016DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public Action<Filter> OnFilterSelected;

		[Token(Token = "0x40016DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private List<FilterButtonView> filterButtonViews;

		[Token(Token = "0x40016DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private bool setupComplete;

		[Token(Token = "0x6001E5A")]
		[Address(RVA = "0xEC5508", Offset = "0xEC5508", VA = "0xEC5508")]
		public void Setup(List<Filter> filters)
		{
		}

		[Token(Token = "0x6001E5B")]
		[Address(RVA = "0xEC7888", Offset = "0xEC7888", VA = "0xEC7888")]
		public void UpdateSelectedFilterButtonBackground(string tag)
		{
		}

		[Token(Token = "0x6001E5C")]
		[Address(RVA = "0xECA70C", Offset = "0xECA70C", VA = "0xECA70C", Slot = "13")]
		public override void Next()
		{
		}

		[Token(Token = "0x6001E5D")]
		[Address(RVA = "0xECA878", Offset = "0xECA878", VA = "0xECA878", Slot = "14")]
		public override void Previous()
		{
		}

		[Token(Token = "0x6001E5E")]
		[Address(RVA = "0xECA9AC", Offset = "0xECA9AC", VA = "0xECA9AC")]
		public FilterSelectionView()
		{
		}
	}
	[Token(Token = "0x2000468")]
	public class LeaderboardItemLabel : MonoBehaviour
	{
		[Token(Token = "0x40016DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TextMeshProUGUI RankText;

		[Token(Token = "0x40016DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TextMeshProUGUI UserNameText;

		[Token(Token = "0x40016E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TextMeshProUGUI ScoreText;

		[Token(Token = "0x6001E5F")]
		[Address(RVA = "0xECA9B0", Offset = "0xECA9B0", VA = "0xECA9B0")]
		public LeaderboardItemLabel()
		{
		}
	}
	[Token(Token = "0x2000469")]
	public class LeaderboardMenu : CanvasView
	{
		[Token(Token = "0x40016E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[NonReorderable]
		public List<Filter> filters;

		[Token(Token = "0x40016E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[NonReorderable]
		public List<LeaderboardItemLabel> leaderboardLabels;

		[Token(Token = "0x40016E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public FilterSelectionView filterSelection;

		[Token(Token = "0x6001E60")]
		[Address(RVA = "0xECA9B8", Offset = "0xECA9B8", VA = "0xECA9B8", Slot = "19")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6001E61")]
		[Address(RVA = "0xECAB60", Offset = "0xECAB60", VA = "0xECAB60")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001E62")]
		[Address(RVA = "0xECAD20", Offset = "0xECAD20", VA = "0xECAD20")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001E63")]
		[Address(RVA = "0xECAC34", Offset = "0xECAC34", VA = "0xECAC34")]
		public void RefreshLeaderboard()
		{
		}

		[Token(Token = "0x6001E64")]
		[Address(RVA = "0xECADA0", Offset = "0xECADA0", VA = "0xECADA0")]
		private void OnLeaderboardGet(GetLeaderboardResult result)
		{
		}

		[Token(Token = "0x6001E65")]
		[Address(RVA = "0xECB274", Offset = "0xECB274", VA = "0xECB274")]
		private void OnFilterSelected(Filter filter)
		{
		}

		[Token(Token = "0x6001E66")]
		[Address(RVA = "0xECB278", Offset = "0xECB278", VA = "0xECB278")]
		public LeaderboardMenu()
		{
		}
	}
	[Token(Token = "0x200046A")]
	public class PagingPip : MonoBehaviour
	{
		[Token(Token = "0x40016E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Header("Base Settings")]
		public Image EmptyPip;

		[Token(Token = "0x40016E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Image FilledPip;

		[Token(Token = "0x40016E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Unity.Collections.ReadOnly]
		public int PageIndex;

		[Token(Token = "0x6001E67")]
		[Address(RVA = "0xECB27C", Offset = "0xECB27C", VA = "0xECB27C")]
		public void Setup(int pageIndex)
		{
		}

		[Token(Token = "0x6001E68")]
		[Address(RVA = "0xECB284", Offset = "0xECB284", VA = "0xECB284")]
		public void SetSelected(bool selected)
		{
		}

		[Token(Token = "0x6001E69")]
		[Address(RVA = "0xECB2A4", Offset = "0xECB2A4", VA = "0xECB2A4")]
		public PagingPip()
		{
		}
	}
	[Token(Token = "0x200046B")]
	public class PagingPipsView : CanvasView
	{
		[Token(Token = "0x40016E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public PagingPip pipsTemplate;

		[Token(Token = "0x40016E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private List<PagingPip> pagingPips;

		[Token(Token = "0x6001E6A")]
		[Address(RVA = "0xEC608C", Offset = "0xEC608C", VA = "0xEC608C")]
		public void Setup(int pageCount)
		{
		}

		[Token(Token = "0x6001E6B")]
		[Address(RVA = "0xEC7BB4", Offset = "0xEC7BB4", VA = "0xEC7BB4")]
		public void UpdateSelectedPagingPip(int pageIndex)
		{
		}

		[Token(Token = "0x6001E6C")]
		[Address(RVA = "0xECB2AC", Offset = "0xECB2AC", VA = "0xECB2AC")]
		public PagingPipsView()
		{
		}
	}
	[Token(Token = "0x200046C")]
	public class PlayerHomeView : CanvasView
	{
		[Token(Token = "0x200046D")]
		[CompilerGenerated]
		private sealed class <Carousel>d__17 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40016F1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40016F2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40016F3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PlayerHomeView <>4__this;

			[Token(Token = "0x170003DD")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001E7D")]
				[Address(RVA = "0xECC05C", Offset = "0xECC05C", VA = "0xECC05C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003DE")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E7F")]
				[Address(RVA = "0xECC0A4", Offset = "0xECC0A4", VA = "0xECC0A4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E7A")]
			[Address(RVA = "0xECBB08", Offset = "0xECBB08", VA = "0xECBB08")]
			[DebuggerHidden]
			public <Carousel>d__17(int <>1__state)
			{
			}

			[Token(Token = "0x6001E7B")]
			[Address(RVA = "0xECBEF8", Offset = "0xECBEF8", VA = "0xECBEF8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E7C")]
			[Address(RVA = "0xECBEFC", Offset = "0xECBEFC", VA = "0xECBEFC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E7E")]
			[Address(RVA = "0xECC064", Offset = "0xECC064", VA = "0xECC064", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40016E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC9")]
		[Header("Player Home View")]
		public bool carouselEnabled;

		[Token(Token = "0x40016EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		public float pageCarouselWaitTimeinSecs;

		[Token(Token = "0x40016EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public PagingPipsView pagingPips;

		[Token(Token = "0x40016EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private string currentCourseName;

		[Token(Token = "0x40016ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private CourseDetails currentCourseDetails;

		[Token(Token = "0x40016EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private Coroutine pageCarouselCoroutine;

		[Token(Token = "0x40016EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private WaitForSeconds pageCarouselWaitForSeconds;

		[Token(Token = "0x40016F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private List<int> timesViewsShown;

		[Token(Token = "0x6001E6D")]
		[Address(RVA = "0xECB2B0", Offset = "0xECB2B0", VA = "0xECB2B0", Slot = "9")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001E6E")]
		[Address(RVA = "0xECB430", Offset = "0xECB430", VA = "0xECB430")]
		public void StartingViewsChanged()
		{
		}

		[Token(Token = "0x6001E6F")]
		[Address(RVA = "0xECB32C", Offset = "0xECB32C", VA = "0xECB32C")]
		private void SetUpPagingPips()
		{
		}

		[Token(Token = "0x6001E70")]
		[Address(RVA = "0xECB504", Offset = "0xECB504", VA = "0xECB504", Slot = "13")]
		public override void Next()
		{
		}

		[Token(Token = "0x6001E71")]
		[Address(RVA = "0xECB5A0", Offset = "0xECB5A0", VA = "0xECB5A0", Slot = "14")]
		public override void Previous()
		{
		}

		[Token(Token = "0x6001E72")]
		[Address(RVA = "0xECB5C4", Offset = "0xECB5C4", VA = "0xECB5C4")]
		private void InitCourseDetails()
		{
		}

		[Token(Token = "0x6001E73")]
		[Address(RVA = "0xECB79C", Offset = "0xECB79C", VA = "0xECB79C")]
		private CourseDetails GetCourseDetails(string courseName)
		{
			return null;
		}

		[Token(Token = "0x6001E74")]
		[Address(RVA = "0xECB9A0", Offset = "0xECB9A0", VA = "0xECB9A0")]
		public void CourseDeeplink(string courseName)
		{
		}

		[Token(Token = "0x6001E75")]
		[Address(RVA = "0xECB460", Offset = "0xECB460", VA = "0xECB460")]
		public void SetCarousel(bool setActive)
		{
		}

		[Token(Token = "0x6001E76")]
		[Address(RVA = "0xECBAA0", Offset = "0xECBAA0", VA = "0xECBAA0")]
		[IteratorStateMachine(typeof(<Carousel>d__17))]
		private IEnumerator Carousel()
		{
			return null;
		}

		[Token(Token = "0x6001E77")]
		[Address(RVA = "0xECBB30", Offset = "0xECBB30", VA = "0xECBB30")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001E78")]
		[Address(RVA = "0xECBB38", Offset = "0xECBB38", VA = "0xECBB38")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001E79")]
		[Address(RVA = "0xECBE4C", Offset = "0xECBE4C", VA = "0xECBE4C")]
		public PlayerHomeView()
		{
		}
	}
	[Token(Token = "0x200046E")]
	public class PlayerHomeViewItem : MonoBehaviour
	{
		[Token(Token = "0x40016F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string keyForRemoteConfig;

		[Token(Token = "0x40016F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Tooltip("The higher the priority, more likely to be displayed. 0 priority will not show this viewItem at all. 100 priority means this viewItem will definitley the one that shows up (ignores random weighted selection) unless it does not qualify display condition.")]
		[Range(0f, 100f)]
		public int priority;

		[Token(Token = "0x40016F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public CanvasView canvasView;

		[Token(Token = "0x40016F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Common.DisplayCategory itemCategory;

		[Token(Token = "0x40016F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public DisplayCheck[] displayChecks;

		[Token(Token = "0x40016F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public string optionalText;

		[Token(Token = "0x40016FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[HideInInspector]
		public TextMeshProUGUI annoucementTextMeshProUGUI;

		[Token(Token = "0x6001E80")]
		[Address(RVA = "0xECC0AC", Offset = "0xECC0AC", VA = "0xECC0AC")]
		public PlayerHomeViewItem()
		{
		}
	}
	[Token(Token = "0x200046F")]
	public class PlayerHomeViewList : MonoBehaviour
	{
		[Token(Token = "0x2000470")]
		[CompilerGenerated]
		private sealed class <>c__DisplayClass15_0
		{
			[Token(Token = "0x4001707")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public PlayerHomeViewList <>4__this;

			[Token(Token = "0x4001708")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int i;

			[Token(Token = "0x4001709")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Predicate<PlayerHomeViewItem> <>9__0;

			[Token(Token = "0x6001E8E")]
			[Address(RVA = "0xECDCAC", Offset = "0xECDCAC", VA = "0xECDCAC")]
			public <>c__DisplayClass15_0()
			{
			}

			[Token(Token = "0x6001E8F")]
			[Address(RVA = "0xECDCB4", Offset = "0xECDCB4", VA = "0xECDCB4")]
			internal bool <UpdatePlayerHomeViewList>b__0(PlayerHomeViewItem e)
			{
				return default(bool);
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000471")]
		[CompilerGenerated]
		private struct <UpdatePlayerHomeViewList>d__15 : IAsyncStateMachine
		{
			[Token(Token = "0x400170A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x400170B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x400170C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public PlayerHomeViewList <>4__this;

			[Token(Token = "0x400170D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private <>c__DisplayClass15_0 <>8__1;

			[Token(Token = "0x400170E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private YieldAwaitable.YieldAwaiter <>u__1;

			[Token(Token = "0x6001E90")]
			[Address(RVA = "0xECDD30", Offset = "0xECDD30", VA = "0xECDD30", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001E91")]
			[Address(RVA = "0xECE590", Offset = "0xECE590", VA = "0xECE590", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x40016FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PlayerHomeView playerHomeView;

		[Token(Token = "0x40016FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool bypassRemoteConfigUseInspectorValue;

		[Token(Token = "0x40016FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject viewItemSelectedForPico;

		[Token(Token = "0x40016FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<PlayerHomeViewItem> fullListOfItemsInventory;

		[Token(Token = "0x40016FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Dictionary<string, IntStringValue> keyAndPriorityDictionary;

		[Token(Token = "0x4001700")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public StringCustomDictionaryArray stringCustomDictionaryArray;

		[Token(Token = "0x4001701")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public SlotCategory slotCategory;

		[Token(Token = "0x4001702")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Header("RunTime Property:")]
		[Space(50f)]
		[SerializeField]
		private List<PlayerHomeViewListItemInventoryBySlot> itemsInventoryInSlots;

		[Token(Token = "0x4001703")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private List<PlayerHomeViewItem> filteredListOfItemsInventory;

		[Token(Token = "0x4001704")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private int numberOfSlots;

		[Token(Token = "0x4001705")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private int numberOfTimesOfClick;

		[Token(Token = "0x4001706")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private int numberOfTimesOfShown;

		[Token(Token = "0x6001E81")]
		[Address(RVA = "0xECC0BC", Offset = "0xECC0BC", VA = "0xECC0BC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001E82")]
		[Address(RVA = "0xECC240", Offset = "0xECC240", VA = "0xECC240")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001E83")]
		[Address(RVA = "0xECC35C", Offset = "0xECC35C", VA = "0xECC35C")]
		private PlayerHomeViewList GetSelf()
		{
			return null;
		}

		[Token(Token = "0x6001E84")]
		[Address(RVA = "0xECC360", Offset = "0xECC360", VA = "0xECC360")]
		[ContextMenu("UpdatePlayerHomeViewList()")]
		[AsyncStateMachine(typeof(<UpdatePlayerHomeViewList>d__15))]
		public void UpdatePlayerHomeViewList()
		{
		}

		[Token(Token = "0x6001E85")]
		[Address(RVA = "0xECC3F0", Offset = "0xECC3F0", VA = "0xECC3F0")]
		private bool IsDisplayConditionsMet(PlayerHomeViewItem item)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E86")]
		[Address(RVA = "0xECC46C", Offset = "0xECC46C", VA = "0xECC46C")]
		private bool SingleDisplayConditionCheck(DisplayCheck currentCheck)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E87")]
		[Address(RVA = "0xECCA94", Offset = "0xECCA94", VA = "0xECCA94")]
		private void SelectViewItems()
		{
		}

		[Token(Token = "0x6001E88")]
		[Address(RVA = "0xECCEB4", Offset = "0xECCEB4", VA = "0xECCEB4")]
		private int SelectSingleViewItemBasedOnRandomizeThreshold(int slotIndex)
		{
			return default(int);
		}

		[Token(Token = "0x6001E89")]
		[Address(RVA = "0xECD238", Offset = "0xECD238", VA = "0xECD238")]
		public void SavePrioritiesAsIntList()
		{
		}

		[Token(Token = "0x6001E8A")]
		[Address(RVA = "0xECD704", Offset = "0xECD704", VA = "0xECD704")]
		public void RetrievedStringIntDictionaryArray(StringCustomDictionaryArray dictionaryArray)
		{
		}

		[Token(Token = "0x6001E8B")]
		[Address(RVA = "0xECD708", Offset = "0xECD708", VA = "0xECD708")]
		private void UpdatePriorityAndText()
		{
		}

		[Token(Token = "0x6001E8C")]
		[Address(RVA = "0xECD98C", Offset = "0xECD98C", VA = "0xECD98C")]
		[ContextMenu("Test SendTimesClickAnalyticsEvent()")]
		public void SendTimesClickAnalyticsEvent()
		{
		}

		[Token(Token = "0x6001E8D")]
		[Address(RVA = "0xECDBA8", Offset = "0xECDBA8", VA = "0xECDBA8")]
		public PlayerHomeViewList()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000473")]
	public class PlayerHomeViewListInventory
	{
		[Token(Token = "0x4001711")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[NonReorderable]
		public List<PlayerHomeViewItem> listOfItemsInventory;

		[Token(Token = "0x6001E95")]
		[Address(RVA = "0xECE5D0", Offset = "0xECE5D0", VA = "0xECE5D0")]
		public PlayerHomeViewListInventory()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000474")]
	public class PlayerHomeViewListItemInventoryBySlot
	{
		[Token(Token = "0x4001712")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<PlayerHomeViewItem> itemInventoryBySlot;

		[Token(Token = "0x6001E96")]
		[Address(RVA = "0xECE650", Offset = "0xECE650", VA = "0xECE650")]
		public PlayerHomeViewListItemInventoryBySlot()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000475")]
	public class PlayerHomeViewListOrderOfPreference
	{
		[Token(Token = "0x4001713")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[Tooltip("This is a list of preferred order of the view categories, also determines the total number of views at a time. For example, 'DLC, DLC, TipsAndTricks, Marketing'(total of 4 views)'")]
		public List<Common.DisplayCategory> orderOfCategories;

		[Token(Token = "0x6001E97")]
		[Address(RVA = "0xECE6CC", Offset = "0xECE6CC", VA = "0xECE6CC")]
		public PlayerHomeViewListOrderOfPreference()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000476")]
	public class PlayerHomeViewListOrderOfPreferenceWrapper
	{
		[Token(Token = "0x4001714")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<PlayerHomeViewListOrderOfPreference> content;

		[Token(Token = "0x6001E98")]
		[Address(RVA = "0xECE74C", Offset = "0xECE74C", VA = "0xECE74C")]
		public PlayerHomeViewListOrderOfPreferenceWrapper()
		{
		}
	}
	[Token(Token = "0x2000477")]
	public class PlayerInfoMenu : CanvasView
	{
		[Token(Token = "0x4001715")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[NonReorderable]
		public List<Filter> filters;

		[Token(Token = "0x4001716")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public FilterSelectionView filterSelection;

		[Token(Token = "0x6001E99")]
		[Address(RVA = "0xECE7CC", Offset = "0xECE7CC", VA = "0xECE7CC", Slot = "19")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6001E9A")]
		[Address(RVA = "0xECE908", Offset = "0xECE908", VA = "0xECE908")]
		private void OnFilterSelected(Filter filter)
		{
		}

		[Token(Token = "0x6001E9B")]
		[Address(RVA = "0xECE920", Offset = "0xECE920", VA = "0xECE920")]
		private void UpdateView(string viewID)
		{
		}

		[Token(Token = "0x6001E9C")]
		[Address(RVA = "0xECE9CC", Offset = "0xECE9CC", VA = "0xECE9CC")]
		public PlayerInfoMenu()
		{
		}
	}
	[Token(Token = "0x2000478")]
	public class SettingsView : CanvasView
	{
		[Token(Token = "0x4001717")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public FilterSelectionView filterSelection;

		[Token(Token = "0x4001718")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[NonReorderable]
		public FilterCollection filterCollection;

		[Token(Token = "0x4001719")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private bool setup;

		[Token(Token = "0x6001E9D")]
		[Address(RVA = "0xECE9D0", Offset = "0xECE9D0", VA = "0xECE9D0", Slot = "19")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6001E9E")]
		[Address(RVA = "0xECEBB0", Offset = "0xECEBB0", VA = "0xECEBB0")]
		public void Setup()
		{
		}

		[Token(Token = "0x6001E9F")]
		[Address(RVA = "0xECEC68", Offset = "0xECEC68", VA = "0xECEC68")]
		private void OnFilterSelected(Filter filter)
		{
		}

		[Token(Token = "0x6001EA0")]
		[Address(RVA = "0xECECE0", Offset = "0xECECE0", VA = "0xECECE0")]
		public SettingsView()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000479")]
	public class Slot
	{
		[Token(Token = "0x400171A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[Tooltip("e.g. If random threshold was 60 and the highest priority in the slot is 80, then any ViewItems with priority in the range of 20 to 80 will be included in the randomizer pool.")]
		[Range(0f, 100f)]
		public int randomThreshold;

		[Token(Token = "0x400171B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public Common.DisplayCategory[] categories;

		[Token(Token = "0x6001EA1")]
		[Address(RVA = "0xECECE4", Offset = "0xECECE4", VA = "0xECECE4")]
		public Slot()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200047A")]
	public class SlotCategory
	{
		[Token(Token = "0x400171C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Slot[] slots;

		[Token(Token = "0x6001EA2")]
		[Address(RVA = "0xECECF4", Offset = "0xECECF4", VA = "0xECECF4")]
		public SlotCategory()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200047B")]
	public class StringCustomDictionaryArray
	{
		[Token(Token = "0x400171D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public StringCustomDictionary[] items;

		[Token(Token = "0x6001EA3")]
		[Address(RVA = "0xECECFC", Offset = "0xECECFC", VA = "0xECECFC")]
		public static string ToJson(Dictionary<string, IntStringValue> dictionary)
		{
			return null;
		}

		[Token(Token = "0x6001EA4")]
		[Address(RVA = "0xECED10", Offset = "0xECED10", VA = "0xECED10")]
		public static Dictionary<string, IntStringValue> FromJson(string json)
		{
			return null;
		}

		[Token(Token = "0x6001EA5")]
		[Address(RVA = "0xECD43C", Offset = "0xECD43C", VA = "0xECD43C")]
		public static StringCustomDictionaryArray ToDictionaryArray(Dictionary<string, IntStringValue> dictionary)
		{
			return null;
		}

		[Token(Token = "0x6001EA6")]
		[Address(RVA = "0xECEE88", Offset = "0xECEE88", VA = "0xECEE88")]
		public static Dictionary<string, IntStringValue> FromDictionaryArray(StringCustomDictionaryArray dictionaryArray)
		{
			return null;
		}

		[Token(Token = "0x6001EA7")]
		[Address(RVA = "0xECEE1C", Offset = "0xECEE1C", VA = "0xECEE1C")]
		public StringCustomDictionaryArray()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200047C")]
	public class StringCustomDictionary
	{
		[Token(Token = "0x400171E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string key;

		[Token(Token = "0x400171F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public IntStringValue value;

		[Token(Token = "0x6001EA8")]
		[Address(RVA = "0xECEE14", Offset = "0xECEE14", VA = "0xECEE14")]
		public StringCustomDictionary()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200047D")]
	public class IntStringValue
	{
		[Token(Token = "0x4001720")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int priority;

		[Token(Token = "0x4001721")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string optionalText;

		[Token(Token = "0x6001EA9")]
		[Address(RVA = "0xECD3E4", Offset = "0xECD3E4", VA = "0xECD3E4")]
		public IntStringValue()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200047E")]
	public class StringIntDictionaryArray
	{
		[Token(Token = "0x4001722")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public StringIntDictionary[] items;

		[Token(Token = "0x6001EAA")]
		[Address(RVA = "0xECEF64", Offset = "0xECEF64", VA = "0xECEF64")]
		public static string ToJson(Dictionary<string, int> dictionary)
		{
			return null;
		}

		[Token(Token = "0x6001EAB")]
		[Address(RVA = "0xECF244", Offset = "0xECF244", VA = "0xECF244")]
		public static Dictionary<string, int> FromJson(string json)
		{
			return null;
		}

		[Token(Token = "0x6001EAC")]
		[Address(RVA = "0xECEF78", Offset = "0xECEF78", VA = "0xECEF78")]
		public static StringIntDictionaryArray ToDictionaryArray(Dictionary<string, int> dictionary)
		{
			return null;
		}

		[Token(Token = "0x6001EAD")]
		[Address(RVA = "0xECF3C0", Offset = "0xECF3C0", VA = "0xECF3C0")]
		public static Dictionary<string, int> FromDictionaryArray(StringIntDictionaryArray dictionaryArray)
		{
			return null;
		}

		[Token(Token = "0x6001EAE")]
		[Address(RVA = "0xECF354", Offset = "0xECF354", VA = "0xECF354")]
		public StringIntDictionaryArray()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200047F")]
	public class StringIntDictionary
	{
		[Token(Token = "0x4001723")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string key;

		[Token(Token = "0x4001724")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int value;

		[Token(Token = "0x6001EAF")]
		[Address(RVA = "0xECF34C", Offset = "0xECF34C", VA = "0xECF34C")]
		public StringIntDictionary()
		{
		}
	}
	[Token(Token = "0x2000480")]
	public class UICamera : MonoBehaviour
	{
		[Token(Token = "0x4001725")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Camera cam;

		[Token(Token = "0x6001EB0")]
		[Address(RVA = "0xECF4A0", Offset = "0xECF4A0", VA = "0xECF4A0")]
		public void Awake()
		{
		}

		[Token(Token = "0x6001EB1")]
		[Address(RVA = "0xECF5D4", Offset = "0xECF5D4", VA = "0xECF5D4")]
		private void Start()
		{
		}

		[Token(Token = "0x6001EB2")]
		[Address(RVA = "0xECF690", Offset = "0xECF690", VA = "0xECF690")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001EB3")]
		[Address(RVA = "0xECF7AC", Offset = "0xECF7AC", VA = "0xECF7AC")]
		private void ToggleCamera(bool isOn)
		{
		}

		[Token(Token = "0x6001EB4")]
		[Address(RVA = "0xECF7D4", Offset = "0xECF7D4", VA = "0xECF7D4")]
		public UICamera()
		{
		}
	}
	[Token(Token = "0x2000481")]
	public class UnityAnalytics : MonoBehaviour
	{
		[StructLayout(3)]
		[Token(Token = "0x2000482")]
		[CompilerGenerated]
		private struct <Start>d__1 : IAsyncStateMachine
		{
			[Token(Token = "0x4001726")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001727")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4001728")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x4001729")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private TaskAwaiter<List<string>> <>u__2;

			[Token(Token = "0x6001EBA")]
			[Address(RVA = "0xECFBBC", Offset = "0xECFBBC", VA = "0xECFBBC", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001EBB")]
			[Address(RVA = "0xECFF8C", Offset = "0xECFF8C", VA = "0xECFF8C", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x6001EB5")]
		[Address(RVA = "0xECF7DC", Offset = "0xECF7DC", VA = "0xECF7DC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001EB6")]
		[Address(RVA = "0xECF8F8", Offset = "0xECF8F8", VA = "0xECF8F8")]
		[AsyncStateMachine(typeof(<Start>d__1))]
		private void Start()
		{
		}

		[Token(Token = "0x6001EB7")]
		[Address(RVA = "0xECF984", Offset = "0xECF984", VA = "0xECF984")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001EB8")]
		[Address(RVA = "0xECFAA0", Offset = "0xECFAA0", VA = "0xECFAA0")]
		private void SendUnityAnalyticsEvent(string eventName, Dictionary<string, object> parameters)
		{
		}

		[Token(Token = "0x6001EB9")]
		[Address(RVA = "0xECFBB4", Offset = "0xECFBB4", VA = "0xECFBB4")]
		public UnityAnalytics()
		{
		}
	}
	[Token(Token = "0x2000483")]
	public class UnityAnalyticsButtonEvent : MonoBehaviour
	{
		[Token(Token = "0x400172A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string eventName;

		[Token(Token = "0x400172B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string menuNavigationItemName;

		[Token(Token = "0x400172C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public PlayerHomeViewItem playerHomeViewItem;

		[Token(Token = "0x400172D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private string viewItemKey;

		[Token(Token = "0x6001EBC")]
		[Address(RVA = "0xECFF98", Offset = "0xECFF98", VA = "0xECFF98")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001EBD")]
		[Address(RVA = "0xED0014", Offset = "0xED0014", VA = "0xED0014")]
		public void AnalyticsEvent()
		{
		}

		[Token(Token = "0x6001EBE")]
		[Address(RVA = "0xED0248", Offset = "0xED0248", VA = "0xED0248")]
		public UnityAnalyticsButtonEvent()
		{
		}
	}
	[Token(Token = "0x2000484")]
	public class UnityGamingServices : MonoBehaviour
	{
		[StructLayout(3)]
		[Token(Token = "0x2000485")]
		[CompilerGenerated]
		private struct <Start>d__4 : IAsyncStateMachine
		{
			[Token(Token = "0x4001730")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001731")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x4001732")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public UnityGamingServices <>4__this;

			[Token(Token = "0x4001733")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x6001EC4")]
			[Address(RVA = "0xED05D4", Offset = "0xED05D4", VA = "0xED05D4", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001EC5")]
			[Address(RVA = "0xED083C", Offset = "0xED083C", VA = "0xED083C", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000486")]
		[CompilerGenerated]
		private struct <InitializeAsync>d__5 : IAsyncStateMachine
		{
			[Token(Token = "0x4001734")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001735")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x4001736")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public UnityGamingServices <>4__this;

			[Token(Token = "0x4001737")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x6001EC6")]
			[Address(RVA = "0xED0848", Offset = "0xED0848", VA = "0xED0848", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001EC7")]
			[Address(RVA = "0xED0BE0", Offset = "0xED0BE0", VA = "0xED0BE0", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000487")]
		[CompilerGenerated]
		private struct <SignInAnonymouslyAsync>d__6 : IAsyncStateMachine
		{
			[Token(Token = "0x4001738")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001739")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x400173A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x6001EC8")]
			[Address(RVA = "0xED0BEC", Offset = "0xED0BEC", VA = "0xED0BEC", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001EC9")]
			[Address(RVA = "0xED101C", Offset = "0xED101C", VA = "0xED101C", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x400172E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private TaskCompletionSource<bool> changedTaskSource;

		[Token(Token = "0x400172F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool isChangedTask;

		[Token(Token = "0x170003DF")]
		public System.Threading.Tasks.Task hasChangedTask
		{
			[Token(Token = "0x6001EBF")]
			[Address(RVA = "0xED02BC", Offset = "0xED02BC", VA = "0xED02BC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001EC0")]
		[Address(RVA = "0xED0304", Offset = "0xED0304", VA = "0xED0304")]
		[AsyncStateMachine(typeof(<Start>d__4))]
		private System.Threading.Tasks.Task Start()
		{
			return null;
		}

		[Token(Token = "0x6001EC1")]
		[Address(RVA = "0xED03CC", Offset = "0xED03CC", VA = "0xED03CC")]
		[AsyncStateMachine(typeof(<InitializeAsync>d__5))]
		private System.Threading.Tasks.Task InitializeAsync()
		{
			return null;
		}

		[Token(Token = "0x6001EC2")]
		[Address(RVA = "0xED0494", Offset = "0xED0494", VA = "0xED0494")]
		[AsyncStateMachine(typeof(<SignInAnonymouslyAsync>d__6))]
		private System.Threading.Tasks.Task SignInAnonymouslyAsync()
		{
			return null;
		}

		[Token(Token = "0x6001EC3")]
		[Address(RVA = "0xED0558", Offset = "0xED0558", VA = "0xED0558")]
		public UnityGamingServices()
		{
		}
	}
	[Token(Token = "0x2000488")]
	public class JsonHelper
	{
		[Token(Token = "0x400173B")]
		private const string INDENT_STRING = "    ";

		[Token(Token = "0x6001ECA")]
		[Address(RVA = "0xED1028", Offset = "0xED1028", VA = "0xED1028")]
		public static string FormatJson(string str)
		{
			return null;
		}

		[Token(Token = "0x6001ECB")]
		[Address(RVA = "0xED1400", Offset = "0xED1400", VA = "0xED1400")]
		public JsonHelper()
		{
		}
	}
	[Token(Token = "0x200048A")]
	public static class JsonHelperExtensions
	{
		[Token(Token = "0x6001ED0")]
		public static void ForEach<T>(this IEnumerable<T> ie, Action<T> action)
		{
		}
	}
	[Token(Token = "0x200048B")]
	public class ThinkTime : Singleton<ThinkTime>
	{
		[Token(Token = "0x4001740")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool Initialized;

		[Token(Token = "0x4001741")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float FirstInitTime;

		[Token(Token = "0x4001742")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int FirstInitFrameCount;

		[Token(Token = "0x4001743")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float FPSEstimate;

		[Token(Token = "0x4001744")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int TargetFPS;

		[Token(Token = "0x4001745")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int Think30FPSIndex;

		[Token(Token = "0x4001746")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int Think20FPSIndex;

		[Token(Token = "0x4001747")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int Think10FPSIndex;

		[Token(Token = "0x4001748")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int Think5FPSIndex;

		[Token(Token = "0x4001749")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int Think1FPSIndex;

		[Token(Token = "0x400174A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[FarBridge.ReadOnly]
		public bool Think30FPS;

		[Token(Token = "0x400174B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		[FarBridge.ReadOnly]
		public bool Think20FPS;

		[Token(Token = "0x400174C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x42")]
		[FarBridge.ReadOnly]
		public bool Think10FPS;

		[Token(Token = "0x400174D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x43")]
		[FarBridge.ReadOnly]
		public bool Think5FPS;

		[Token(Token = "0x400174E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[FarBridge.ReadOnly]
		public bool Think1FPS;

		[Token(Token = "0x6001ED1")]
		[Address(RVA = "0xED1504", Offset = "0xED1504", VA = "0xED1504", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001ED2")]
		[Address(RVA = "0xED163C", Offset = "0xED163C", VA = "0xED163C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001ED3")]
		[Address(RVA = "0xED1580", Offset = "0xED1580", VA = "0xED1580")]
		private void Initialize()
		{
		}

		[Token(Token = "0x6001ED4")]
		[Address(RVA = "0xED16A4", Offset = "0xED16A4", VA = "0xED16A4")]
		private void Update()
		{
		}

		[Token(Token = "0x6001ED5")]
		[Address(RVA = "0xED1748", Offset = "0xED1748", VA = "0xED1748")]
		public ThinkTime()
		{
		}
	}
	[Token(Token = "0x200048C")]
	public class NoFlyZone : CompoundTrigger
	{
		[Token(Token = "0x400174F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
		public bool takeoffAllowed;

		[Token(Token = "0x4001750")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x33")]
		private bool stopFlying;

		[Token(Token = "0x6001ED6")]
		[Address(RVA = "0xED1790", Offset = "0xED1790", VA = "0xED1790")]
		private void Start()
		{
		}

		[Token(Token = "0x6001ED7")]
		[Address(RVA = "0xED1798", Offset = "0xED1798", VA = "0xED1798", Slot = "4")]
		protected override void OnCompoundTriggerEnter()
		{
		}

		[Token(Token = "0x6001ED8")]
		[Address(RVA = "0xED17F4", Offset = "0xED17F4", VA = "0xED17F4", Slot = "5")]
		protected override void OnCompoundTriggerExit()
		{
		}

		[Token(Token = "0x6001ED9")]
		[Address(RVA = "0xED1844", Offset = "0xED1844", VA = "0xED1844")]
		public NoFlyZone()
		{
		}
	}
}
namespace Mighty.Utilities
{
	[Serializable]
	[Token(Token = "0x200048D")]
	public struct LanguageImageMap
	{
		[Token(Token = "0x4001751")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[HideInInspector]
		public string Language;

		[Token(Token = "0x4001752")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[HideInInspector]
		public string LanguageCode;

		[Token(Token = "0x4001753")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Sprite Sprite;
	}
	[Token(Token = "0x200048E")]
	[RequireComponent(typeof(Image))]
	public class LanguageSpecificImage : MonoBehaviour
	{
		[Token(Token = "0x4001754")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<LanguageImageMap> languageImageMap;

		[Token(Token = "0x4001755")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Image image;

		[Token(Token = "0x6001EDA")]
		[Address(RVA = "0xED184C", Offset = "0xED184C", VA = "0xED184C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001EDB")]
		[Address(RVA = "0xED19B4", Offset = "0xED19B4", VA = "0xED19B4")]
		private void UpdateImage()
		{
		}

		[Token(Token = "0x6001EDC")]
		[Address(RVA = "0xED1AE0", Offset = "0xED1AE0", VA = "0xED1AE0")]
		private void Reset()
		{
		}

		[Token(Token = "0x6001EDD")]
		[Address(RVA = "0xED1CC8", Offset = "0xED1CC8", VA = "0xED1CC8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001EDE")]
		[Address(RVA = "0xED1DD0", Offset = "0xED1DD0", VA = "0xED1DD0")]
		public LanguageSpecificImage()
		{
		}
	}
}
namespace Mighty.Switchables
{
	[Token(Token = "0x2000490")]
	public class CourseSwitchablesManager : MonoBehaviour
	{
		[Token(Token = "0x2000491")]
		[CompilerGenerated]
		private sealed class <SwitchDelay>d__30 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001766")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001767")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001768")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public double time;

			[Token(Token = "0x4001769")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool isOn;

			[Token(Token = "0x400176A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public CourseSwitchablesManager <>4__this;

			[Token(Token = "0x400176B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public int switchIndex;

			[Token(Token = "0x400176C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public bool fastSwitch;

			[Token(Token = "0x170003E0")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001EFF")]
				[Address(RVA = "0xED5BA4", Offset = "0xED5BA4", VA = "0xED5BA4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003E1")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001F01")]
				[Address(RVA = "0xED5BEC", Offset = "0xED5BEC", VA = "0xED5BEC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001EFC")]
			[Address(RVA = "0xED4C44", Offset = "0xED4C44", VA = "0xED4C44")]
			[DebuggerHidden]
			public <SwitchDelay>d__30(int <>1__state)
			{
			}

			[Token(Token = "0x6001EFD")]
			[Address(RVA = "0xED59E4", Offset = "0xED59E4", VA = "0xED59E4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001EFE")]
			[Address(RVA = "0xED59E8", Offset = "0xED59E8", VA = "0xED59E8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001F00")]
			[Address(RVA = "0xED5BAC", Offset = "0xED5BAC", VA = "0xED5BAC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001757")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<SwitchableContainer> courseSwitches;

		[Token(Token = "0x4001758")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SwitchablesNetwork switchNetwork;

		[Token(Token = "0x4001759")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool[] switchStates;

		[Token(Token = "0x400175A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool debugLogs;

		[Token(Token = "0x400175B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		private bool updatingMySwitches;

		[Token(Token = "0x400175C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
		private bool isInitialized;

		[Token(Token = "0x400175D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Dictionary<ISwitchable, int> switchableHash;

		[Token(Token = "0x400175E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<(ISwitchable, bool)> playerPreviousSwitchStates;

		[Token(Token = "0x400175F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<(ISwitchable, bool)> playerSingleSwitchPlayback;

		[Token(Token = "0x4001760")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private List<(ISwitchable, bool)> activeOpponentPreviousSwitchStates;

		[Token(Token = "0x4001761")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private List<(ISwitchable, bool)> activeOpponentSingleSwitchPlayback;

		[Token(Token = "0x4001762")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private List<ISwitchable> replayHolesSwitches;

		[Token(Token = "0x4001763")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Hole replaysHole;

		[Token(Token = "0x4001764")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool restartedSameHole;

		[Token(Token = "0x4001765")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		private bool firstTurn;

		[Token(Token = "0x6001EE1")]
		[Address(RVA = "0xED1E60", Offset = "0xED1E60", VA = "0xED1E60")]
		public void Init()
		{
		}

		[Token(Token = "0x6001EE2")]
		[Address(RVA = "0xED2A94", Offset = "0xED2A94", VA = "0xED2A94")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001EE3")]
		[Address(RVA = "0xED2B6C", Offset = "0xED2B6C", VA = "0xED2B6C")]
		public void OnDestroy()
		{
		}

		[Token(Token = "0x6001EE4")]
		[Address(RVA = "0xED3224", Offset = "0xED3224", VA = "0xED3224")]
		private void TurnStarted()
		{
		}

		[Token(Token = "0x6001EE5")]
		[Address(RVA = "0xED358C", Offset = "0xED358C", VA = "0xED358C")]
		private void UpdateSingleActiveOpponentSwitch(int switchIndex, bool isOn, bool fastSwitch = false, double time = -1.0)
		{
		}

		[Token(Token = "0x6001EE6")]
		[Address(RVA = "0xED3920", Offset = "0xED3920", VA = "0xED3920")]
		private void UpdateAllActiveOpponentSwitches(bool[] multiplayerSwitchStates)
		{
		}

		[Token(Token = "0x6001EE7")]
		[Address(RVA = "0xED32E4", Offset = "0xED32E4", VA = "0xED32E4")]
		private void UpdateToPlayerSwitchStates()
		{
		}

		[Token(Token = "0x6001EE8")]
		[Address(RVA = "0xED40F8", Offset = "0xED40F8", VA = "0xED40F8")]
		private void ResetToPlayerPlaybackStartSwitches()
		{
		}

		[Token(Token = "0x6001EE9")]
		[Address(RVA = "0xED4138", Offset = "0xED4138", VA = "0xED4138")]
		private void RedoPlayerPreviousStrokeSwitchToggles()
		{
		}

		[Token(Token = "0x6001EEA")]
		[Address(RVA = "0xED3DA8", Offset = "0xED3DA8", VA = "0xED3DA8")]
		public void UpdateToActiveOpponentSwitchState()
		{
		}

		[Token(Token = "0x6001EEB")]
		[Address(RVA = "0xED4660", Offset = "0xED4660", VA = "0xED4660")]
		private void ResetToActiveOpponentPlaybackStartSwitches()
		{
		}

		[Token(Token = "0x6001EEC")]
		[Address(RVA = "0xED4668", Offset = "0xED4668", VA = "0xED4668")]
		private void RedoActiveOpponentPreviousStrokeSwitchToggles()
		{
		}

		[Token(Token = "0x6001EED")]
		[Address(RVA = "0xED4140", Offset = "0xED4140", VA = "0xED4140")]
		private void ResetSwitches(List<(ISwitchable, bool)> previousSwitchStates)
		{
		}

		[Token(Token = "0x6001EEE")]
		[Address(RVA = "0xED43D0", Offset = "0xED43D0", VA = "0xED43D0")]
		private void RedoPreviousStrokeSwitchToggles(List<(ISwitchable, bool)> previousSwitchStates)
		{
		}

		[Token(Token = "0x6001EEF")]
		[Address(RVA = "0xED4670", Offset = "0xED4670", VA = "0xED4670")]
		private void SwitchToggled(ISwitchable switchable, bool isOn, bool startState)
		{
		}

		[Token(Token = "0x6001EF0")]
		[Address(RVA = "0xED3878", Offset = "0xED3878", VA = "0xED3878")]
		[IteratorStateMachine(typeof(<SwitchDelay>d__30))]
		private IEnumerator SwitchDelay(int switchIndex, bool isOn, bool fastSwitch, double time)
		{
			return null;
		}

		[Token(Token = "0x6001EF1")]
		[Address(RVA = "0xED4C6C", Offset = "0xED4C6C", VA = "0xED4C6C")]
		public void CacheCurrentHoleSwitcheStates()
		{
		}

		[Token(Token = "0x6001EF2")]
		[Address(RVA = "0xED4FCC", Offset = "0xED4FCC", VA = "0xED4FCC")]
		private void UpdateReplaysHoles()
		{
		}

		[Token(Token = "0x6001EF3")]
		[Address(RVA = "0xED52D8", Offset = "0xED52D8", VA = "0xED52D8")]
		private void HoleStartSetup()
		{
		}

		[Token(Token = "0x6001EF4")]
		[Address(RVA = "0xED54B0", Offset = "0xED54B0", VA = "0xED54B0")]
		private void InstantReplayEndCheck(bool replayFinished)
		{
		}

		[Token(Token = "0x6001EF5")]
		[Address(RVA = "0xED3C58", Offset = "0xED3C58", VA = "0xED3C58")]
		private bool CanShowMultiplayerSwitchChanges()
		{
			return default(bool);
		}

		[Token(Token = "0x6001EF6")]
		[Address(RVA = "0xED2560", Offset = "0xED2560", VA = "0xED2560")]
		private void ResampleSwitchStates(bool addToHash = false)
		{
		}

		[Token(Token = "0x6001EF7")]
		[Address(RVA = "0xED3EF8", Offset = "0xED3EF8", VA = "0xED3EF8")]
		private void RestoreSwitchStatesForHole()
		{
		}

		[Token(Token = "0x6001EF8")]
		[Address(RVA = "0xED3330", Offset = "0xED3330", VA = "0xED3330")]
		private void UpdateSwitchStates()
		{
		}

		[Token(Token = "0x6001EF9")]
		[Address(RVA = "0xED56B4", Offset = "0xED56B4", VA = "0xED56B4")]
		[ContextMenu("Load all ball switches")]
		private void LoadAllBallSwitches()
		{
		}

		[Token(Token = "0x6001EFA")]
		[Address(RVA = "0xED5870", Offset = "0xED5870", VA = "0xED5870")]
		public CourseSwitchablesManager()
		{
		}
	}
	[Token(Token = "0x2000492")]
	public class EventSwitch : MonoBehaviour, ISwitchable
	{
		[Token(Token = "0x400176D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UnityEvent onEvent;

		[Token(Token = "0x400176E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UnityEvent offEvent;

		[Token(Token = "0x400176F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Space(10f)]
		public bool triggerEventOnStart;

		[Token(Token = "0x4001770")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		public bool startingState;

		[Token(Token = "0x4001771")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
		public bool fireEventOnFastSwitch;

		[Token(Token = "0x4001772")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B")]
		[HideInInspector]
		public bool toggleSwitchNextFrame;

		[Token(Token = "0x4001773")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private bool switchState;

		[Token(Token = "0x6001F02")]
		[Address(RVA = "0xED5BF4", Offset = "0xED5BF4", VA = "0xED5BF4")]
		private void Start()
		{
		}

		[Token(Token = "0x6001F03")]
		[Address(RVA = "0xED5C38", Offset = "0xED5C38", VA = "0xED5C38")]
		public void FixedUpdate()
		{
		}

		[Token(Token = "0x6001F04")]
		[Address(RVA = "0xED5C70", Offset = "0xED5C70", VA = "0xED5C70", Slot = "9")]
		public bool GetSwitchState()
		{
			return default(bool);
		}

		[Token(Token = "0x6001F05")]
		[Address(RVA = "0xED5C78", Offset = "0xED5C78", VA = "0xED5C78", Slot = "4")]
		public void Reset(bool fastSwitch = false)
		{
		}

		[Token(Token = "0x6001F06")]
		[Address(RVA = "0xED5CA4", Offset = "0xED5CA4", VA = "0xED5CA4", Slot = "5")]
		public void Toggle(bool fastSwitch = false)
		{
		}

		[Token(Token = "0x6001F07")]
		[Address(RVA = "0xED5C90", Offset = "0xED5C90", VA = "0xED5C90", Slot = "6")]
		public void Switch(bool newActiveState, bool fastSwitch = false)
		{
		}

		[Token(Token = "0x6001F08")]
		[Address(RVA = "0xED5CBC", Offset = "0xED5CBC", VA = "0xED5CBC", Slot = "7")]
		public void SwitchOn(bool fastSwitch = false)
		{
		}

		[Token(Token = "0x6001F09")]
		[Address(RVA = "0xED5CFC", Offset = "0xED5CFC", VA = "0xED5CFC", Slot = "8")]
		public void SwitchOff(bool fastSwitch = false)
		{
		}

		[Token(Token = "0x6001F0A")]
		[Address(RVA = "0xED5C58", Offset = "0xED5C58", VA = "0xED5C58")]
		public void ToggleSwitch()
		{
		}

		[Token(Token = "0x6001F0B")]
		[Address(RVA = "0xED5D38", Offset = "0xED5D38", VA = "0xED5D38", Slot = "10")]
		public Hole GetHole()
		{
			return null;
		}

		[Token(Token = "0x6001F0C")]
		[Address(RVA = "0xED5D40", Offset = "0xED5D40", VA = "0xED5D40")]
		public EventSwitch()
		{
		}
	}
	[Token(Token = "0x2000493")]
	public class GodModeEvent : MonoBehaviour
	{
		[Token(Token = "0x4001774")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UnityEvent godModeEvent;

		[Token(Token = "0x4001775")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UnityEvent godModeExitEvent;

		[Token(Token = "0x4001776")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Tooltip("Connect a PlatformFilter component to selectively execute the event only on certain platforms.")]
		public PlatformFilter platformFilter;

		[Token(Token = "0x4001777")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool godModeActive;

		[Token(Token = "0x6001F0D")]
		[Address(RVA = "0xED5D50", Offset = "0xED5D50", VA = "0xED5D50")]
		private void Start()
		{
		}

		[Token(Token = "0x6001F0E")]
		[Address(RVA = "0xED5DAC", Offset = "0xED5DAC", VA = "0xED5DAC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001F0F")]
		[Address(RVA = "0xED5E80", Offset = "0xED5E80", VA = "0xED5E80")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001F10")]
		[Address(RVA = "0xED5F54", Offset = "0xED5F54", VA = "0xED5F54")]
		public void OnGodMode()
		{
		}

		[Token(Token = "0x6001F11")]
		[Address(RVA = "0xED5FF4", Offset = "0xED5FF4", VA = "0xED5FF4")]
		public void OnGodModeExit()
		{
		}

		[Token(Token = "0x6001F12")]
		[Address(RVA = "0xED6090", Offset = "0xED6090", VA = "0xED6090")]
		public GodModeEvent()
		{
		}
	}
	[Token(Token = "0x2000494")]
	public class SwitchablesNetwork : MonoBehaviourPunCallbacks
	{
		[Token(Token = "0x2000495")]
		[CompilerGenerated]
		private sealed class <UpdateWhenNotMyTurn>d__5 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400177B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400177C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400177D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SwitchablesNetwork <>4__this;

			[Token(Token = "0x400177E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool[] states;

			[Token(Token = "0x170003E2")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001F1C")]
				[Address(RVA = "0xED6364", Offset = "0xED6364", VA = "0xED6364", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003E3")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001F1E")]
				[Address(RVA = "0xED63AC", Offset = "0xED63AC", VA = "0xED63AC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001F19")]
			[Address(RVA = "0xED610C", Offset = "0xED610C", VA = "0xED610C")]
			[DebuggerHidden]
			public <UpdateWhenNotMyTurn>d__5(int <>1__state)
			{
			}

			[Token(Token = "0x6001F1A")]
			[Address(RVA = "0xED61F4", Offset = "0xED61F4", VA = "0xED61F4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001F1B")]
			[Address(RVA = "0xED61F8", Offset = "0xED61F8", VA = "0xED61F8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001F1D")]
			[Address(RVA = "0xED636C", Offset = "0xED636C", VA = "0xED636C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001778")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Action<int, bool, bool, double> ToggleSwitch;

		[Token(Token = "0x4001779")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action<bool[]> ToggleAllSwitches;

		[Token(Token = "0x400177A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<(ISwitchable, bool, bool)> opponentSwitchUpdateQueue;

		[Token(Token = "0x6001F13")]
		[Address(RVA = "0xED4994", Offset = "0xED4994", VA = "0xED4994")]
		public void BroadcastSingleSwitch(ISwitchable switchable, int index, bool isOn)
		{
		}

		[Token(Token = "0x6001F14")]
		[Address(RVA = "0xED34B4", Offset = "0xED34B4", VA = "0xED34B4")]
		public void SyncAllSwitches(bool[] switchStates)
		{
		}

		[Token(Token = "0x6001F15")]
		[Address(RVA = "0xED6098", Offset = "0xED6098", VA = "0xED6098")]
		[IteratorStateMachine(typeof(<UpdateWhenNotMyTurn>d__5))]
		private IEnumerator UpdateWhenNotMyTurn(bool[] states)
		{
			return null;
		}

		[Token(Token = "0x6001F16")]
		[Address(RVA = "0xED6134", Offset = "0xED6134", VA = "0xED6134")]
		[PunRPC]
		private void UpdateAllSwitches(bool[] states)
		{
		}

		[Token(Token = "0x6001F17")]
		[Address(RVA = "0xED6154", Offset = "0xED6154", VA = "0xED6154")]
		[PunRPC]
		private void UpdateSingleSwitch(int switchIndex, bool isOn, bool fastSwitch = false, double time = -1.0)
		{
		}

		[Token(Token = "0x6001F18")]
		[Address(RVA = "0xED6178", Offset = "0xED6178", VA = "0xED6178")]
		public SwitchablesNetwork()
		{
		}
	}
}
namespace Mighty.LODs
{
	[Token(Token = "0x2000496")]
	public enum WalkaboutLODState
	{
		[Token(Token = "0x4001780")]
		lod0,
		[Token(Token = "0x4001781")]
		lod1,
		[Token(Token = "0x4001782")]
		culled,
		[Token(Token = "0x4001783")]
		noEffect,
		[Token(Token = "0x4001784")]
		lod2
	}
	[Token(Token = "0x2000497")]
	[ExecuteInEditMode]
	public class WalkaboutLOD : MonoBehaviour
	{
		[Token(Token = "0x4001785")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Header("Quest 1: more than 150 will ignore distance check.")]
		public float lod1Distance;

		[Token(Token = "0x4001786")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float lod2Distance;

		[Token(Token = "0x4001787")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float culledDistance;

		[Token(Token = "0x4001788")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[Header("God Mode")]
		public WalkaboutLODState quest1GodMode;

		[Token(Token = "0x4001789")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public WalkaboutLODState quest2GodMode;

		[Token(Token = "0x400178A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public WalkaboutLODState pcvrGodMode;

		[Token(Token = "0x400178B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public WalkaboutLODState mobileGodMode;

		[Token(Token = "0x400178C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform anchorOverride;

		[Token(Token = "0x400178D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool debug;

		[Token(Token = "0x400178E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		public bool selectConnectedTriggers;

		[Token(Token = "0x400178F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[Header("Comma delineated list of ints")]
		public string manualTriggerIDs;

		[Token(Token = "0x4001790")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private List<WalkaboutLODTrigger> manualTriggers;

		[Token(Token = "0x4001791")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private LODGroup lodGroup;

		[Token(Token = "0x4001792")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private WalkaboutLODState godMode;

		[Token(Token = "0x4001793")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private int targetLOD;

		[Token(Token = "0x4001794")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float distanceToCamera;

		[Token(Token = "0x6001F1F")]
		[Address(RVA = "0xED63B4", Offset = "0xED63B4", VA = "0xED63B4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001F20")]
		[Address(RVA = "0xED65E8", Offset = "0xED65E8", VA = "0xED65E8")]
		public void OnDestroy()
		{
		}

		[Token(Token = "0x6001F21")]
		[Address(RVA = "0xED67EC", Offset = "0xED67EC", VA = "0xED67EC")]
		private void Start()
		{
		}

		[Token(Token = "0x6001F22")]
		[Address(RVA = "0xED6B34", Offset = "0xED6B34", VA = "0xED6B34")]
		private void Setup()
		{
		}

		[Token(Token = "0x6001F23")]
		[Address(RVA = "0xED6994", Offset = "0xED6994", VA = "0xED6994")]
		private void ConnectManualTriggers()
		{
		}

		[Token(Token = "0x6001F24")]
		[Address(RVA = "0xED6F90", Offset = "0xED6F90", VA = "0xED6F90")]
		public static WalkaboutLOD SetUpWalkaboutLOD(GameObject go)
		{
			return null;
		}

		[Token(Token = "0x6001F25")]
		[Address(RVA = "0xED7274", Offset = "0xED7274", VA = "0xED7274")]
		private static bool ConnectLOD(GameObject go)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F26")]
		[Address(RVA = "0xED7B60", Offset = "0xED7B60", VA = "0xED7B60")]
		private void QueueLOD()
		{
		}

		[Token(Token = "0x6001F27")]
		[Address(RVA = "0xED7BF0", Offset = "0xED7BF0", VA = "0xED7BF0")]
		public void CheckForUpdate(bool skipQueue = false)
		{
		}

		[Token(Token = "0x6001F28")]
		[Address(RVA = "0xED7FA4", Offset = "0xED7FA4", VA = "0xED7FA4")]
		public void InstantUpdateLOD()
		{
		}

		[Token(Token = "0x6001F29")]
		[Address(RVA = "0xED7FC0", Offset = "0xED7FC0", VA = "0xED7FC0")]
		public void UpdateLOD()
		{
		}

		[Token(Token = "0x6001F2A")]
		[Address(RVA = "0xED8168", Offset = "0xED8168", VA = "0xED8168")]
		public void UpdateGodModeLOD()
		{
		}

		[Token(Token = "0x6001F2B")]
		[Address(RVA = "0xED838C", Offset = "0xED838C", VA = "0xED838C")]
		private void OnWarpComplete()
		{
		}

		[Token(Token = "0x6001F2C")]
		[Address(RVA = "0xED83A8", Offset = "0xED83A8", VA = "0xED83A8")]
		private void OnGodModeEnter()
		{
		}

		[Token(Token = "0x6001F2D")]
		[Address(RVA = "0xED83AC", Offset = "0xED83AC", VA = "0xED83AC")]
		private void OnGodModeExit()
		{
		}

		[Token(Token = "0x6001F2E")]
		[Address(RVA = "0xED83C8", Offset = "0xED83C8", VA = "0xED83C8")]
		public WalkaboutLOD()
		{
		}
	}
	[Token(Token = "0x2000498")]
	public class WalkaboutLODMaster : MonoBehaviour
	{
		[Token(Token = "0x2000499")]
		public enum WalkaboutLODPlatform
		{
			[Token(Token = "0x40017A9")]
			useCurrentConfig,
			[Token(Token = "0x40017AA")]
			quest1,
			[Token(Token = "0x40017AB")]
			quest2,
			[Token(Token = "0x40017AC")]
			pcvr,
			[Token(Token = "0x40017AD")]
			mobile
		}

		[Token(Token = "0x4001795")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public WalkaboutLODPlatform editorPlatformOverride;

		[Token(Token = "0x4001796")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float quest1LOD1Multiplier;

		[Token(Token = "0x4001797")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float quest1LOD2Multiplier;

		[Token(Token = "0x4001798")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float quest1CulledMultiplier;

		[Token(Token = "0x4001799")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float quest2LOD1Multiplier;

		[Token(Token = "0x400179A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float quest2LOD2Multiplier;

		[Token(Token = "0x400179B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float quest2CulledMultiplier;

		[Token(Token = "0x400179C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float mobileLOD1Multiplier;

		[Token(Token = "0x400179D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float mobileLOD2Multiplier;

		[Token(Token = "0x400179E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float mobileCulledMultiplier;

		[Token(Token = "0x400179F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float pcvrLOD1Multiplier;

		[Token(Token = "0x40017A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float pcvrLOD2Multiplier;

		[Token(Token = "0x40017A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float pcvrCulledMultiplier;

		[Token(Token = "0x40017A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[HideInInspector]
		public static WalkaboutLODMaster instance;

		[Token(Token = "0x40017A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private List<WalkaboutLOD> lods;

		[Token(Token = "0x40017A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Queue<WalkaboutLOD> lodsToUpdate;

		[Token(Token = "0x40017A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private int currentIndex;

		[Token(Token = "0x40017A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[Tooltip("Total WalkaboutLODs to be distance checked per frame. Use 0 to be unlimited.")]
		public int maxLodsToCheckPerFrame;

		[Token(Token = "0x40017A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[Tooltip("Total WalkaboutLODs to be updated per frame. Use 0 to be unlimited.")]
		private int lodsToUpdatePerFrame;

		[Token(Token = "0x170003E4")]
		public WalkaboutLODPlatform currentLODPlatform
		{
			[Token(Token = "0x6001F2F")]
			[Address(RVA = "0xED6EE4", Offset = "0xED6EE4", VA = "0xED6EE4")]
			get
			{
				return default(WalkaboutLODPlatform);
			}
		}

		[Token(Token = "0x6001F30")]
		[Address(RVA = "0xED8624", Offset = "0xED8624", VA = "0xED8624")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001F31")]
		[Address(RVA = "0xED881C", Offset = "0xED881C", VA = "0xED881C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001F32")]
		[Address(RVA = "0xED89FC", Offset = "0xED89FC", VA = "0xED89FC")]
		private void Update()
		{
		}

		[Token(Token = "0x6001F33")]
		[Address(RVA = "0xED8B54", Offset = "0xED8B54", VA = "0xED8B54")]
		private void ProcessQueue()
		{
		}

		[Token(Token = "0x6001F34")]
		[Address(RVA = "0xED8BEC", Offset = "0xED8BEC", VA = "0xED8BEC")]
		private void EnqueueLOD(WalkaboutLOD lod)
		{
		}

		[Token(Token = "0x6001F35")]
		[Address(RVA = "0xED8C7C", Offset = "0xED8C7C", VA = "0xED8C7C")]
		public void SubscribeLODUpdate(WalkaboutLOD lod)
		{
		}

		[Token(Token = "0x6001F36")]
		[Address(RVA = "0xED8494", Offset = "0xED8494", VA = "0xED8494")]
		private WalkaboutLODPlatform GetCurrentWalkaboutLODPlatform()
		{
			return default(WalkaboutLODPlatform);
		}

		[Token(Token = "0x6001F37")]
		[Address(RVA = "0xED8D24", Offset = "0xED8D24", VA = "0xED8D24")]
		public WalkaboutLODMaster()
		{
		}
	}
	[Token(Token = "0x200049A")]
	[ExecuteInEditMode]
	public class WalkaboutLODTrigger : CompoundTrigger
	{
		[Token(Token = "0x40017AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public int triggerID;

		[Token(Token = "0x40017AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public WalkaboutLODState quest1InsideState;

		[Token(Token = "0x40017B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public WalkaboutLODState quest1OutsideState;

		[Token(Token = "0x40017B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public WalkaboutLODState quest2InsideState;

		[Token(Token = "0x40017B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public WalkaboutLODState quest2OutsideState;

		[Token(Token = "0x40017B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public WalkaboutLODState mobileInsideState;

		[Token(Token = "0x40017B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public WalkaboutLODState mobileOutsideState;

		[Token(Token = "0x40017B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public WalkaboutLODState pcvrInsideState;

		[Token(Token = "0x40017B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public WalkaboutLODState pcvrOutsideState;

		[Token(Token = "0x40017B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[HideInInspector]
		public WalkaboutLODState insideState;

		[Token(Token = "0x40017B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[HideInInspector]
		public WalkaboutLODState outsideState;

		[Token(Token = "0x40017B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private List<WalkaboutLOD> connectedLODs;

		[Token(Token = "0x40017BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[HideInInspector]
		public bool triggered;

		[Token(Token = "0x40017BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
		[HideInInspector]
		public bool hasEffect;

		[Token(Token = "0x40017BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6A")]
		public bool selectConnectedLODs;

		[Token(Token = "0x6001F38")]
		[Address(RVA = "0xED6EE8", Offset = "0xED6EE8", VA = "0xED6EE8")]
		public void ConnectLOD(WalkaboutLOD lod)
		{
		}

		[Token(Token = "0x6001F39")]
		[Address(RVA = "0xED8E14", Offset = "0xED8E14", VA = "0xED8E14")]
		private void Start()
		{
		}

		[Token(Token = "0x6001F3A")]
		[Address(RVA = "0xED9240", Offset = "0xED9240", VA = "0xED9240")]
		private void Update()
		{
		}

		[Token(Token = "0x6001F3B")]
		[Address(RVA = "0xED9244", Offset = "0xED9244", VA = "0xED9244", Slot = "4")]
		protected override void OnCompoundTriggerEnter()
		{
		}

		[Token(Token = "0x6001F3C")]
		[Address(RVA = "0xED9414", Offset = "0xED9414", VA = "0xED9414", Slot = "5")]
		protected override void OnCompoundTriggerExit()
		{
		}

		[Token(Token = "0x6001F3D")]
		[Address(RVA = "0xED95E0", Offset = "0xED95E0", VA = "0xED95E0")]
		public WalkaboutLODTrigger()
		{
		}
	}
}
namespace Mighty.Interactable
{
	[Token(Token = "0x200049B")]
	public class InteractableObject : MonoBehaviour, IInteractable
	{
		[Token(Token = "0x40017BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float interactionDelay;

		[Token(Token = "0x40017BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Space(15f)]
		[Header("Events")]
		public UnityEvent OnHooverStart;

		[Token(Token = "0x40017BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UnityEvent OnHooverEnd;

		[Token(Token = "0x40017C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public UnityEvent OnInteract;

		[Token(Token = "0x40017C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float currentDelay;

		[Token(Token = "0x40017C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int hooverCounter;

		[Token(Token = "0x170003E5")]
		public float maxInteractionDistance
		{
			[Token(Token = "0x6001F3E")]
			[Address(RVA = "0xED9670", Offset = "0xED9670", VA = "0xED9670", Slot = "4")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001F3F")]
			[Address(RVA = "0xED9678", Offset = "0xED9678", VA = "0xED9678", Slot = "5")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6001F40")]
		[Address(RVA = "0xED9680", Offset = "0xED9680", VA = "0xED9680")]
		private void Init()
		{
		}

		[Token(Token = "0x6001F41")]
		[Address(RVA = "0xED9688", Offset = "0xED9688", VA = "0xED9688")]
		private void Start()
		{
		}

		[Token(Token = "0x6001F42")]
		[Address(RVA = "0xED9690", Offset = "0xED9690", VA = "0xED9690")]
		private void Update()
		{
		}

		[Token(Token = "0x6001F43")]
		[Address(RVA = "0xED96C8", Offset = "0xED96C8", VA = "0xED96C8")]
		private void HooverStateUpdate()
		{
		}

		[Token(Token = "0x6001F44")]
		[Address(RVA = "0xED96F4", Offset = "0xED96F4", VA = "0xED96F4", Slot = "7")]
		public void OnClick()
		{
		}

		[Token(Token = "0x6001F45")]
		[Address(RVA = "0xED9720", Offset = "0xED9720", VA = "0xED9720", Slot = "6")]
		public void OnHoover()
		{
		}

		[Token(Token = "0x6001F46")]
		[Address(RVA = "0xED9740", Offset = "0xED9740", VA = "0xED9740", Slot = "8")]
		public void OnRelease()
		{
		}

		[Token(Token = "0x6001F47")]
		[Address(RVA = "0xED9744", Offset = "0xED9744", VA = "0xED9744")]
		public InteractableObject()
		{
		}
	}
	[Token(Token = "0x200049C")]
	[RequireComponent(typeof(FacingDetector))]
	public class PointerInteractableObject : InteractableObject
	{
		[Token(Token = "0x40017C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[FormerlySerializedAs("dotThreshhold")]
		[Header("Facing Settings")]
		public float zForwardDotThreshhold;

		[Token(Token = "0x40017C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float acitvationDelay;

		[Token(Token = "0x40017C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float distanceThreshhold;

		[Token(Token = "0x40017C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float pointAtDotThreshold;

		[Token(Token = "0x40017C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float pointAtTargetStartingRange;

		[Token(Token = "0x40017C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public bool ignoreFacing;

		[Token(Token = "0x40017CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[Space(10f)]
		[Header("Performance Settings")]
		public int frameThrottle;

		[Token(Token = "0x40017CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[HideInInspector]
		public FacingDetector facingDetector;

		[Token(Token = "0x6001F48")]
		[Address(RVA = "0xED9754", Offset = "0xED9754", VA = "0xED9754")]
		private void Init()
		{
		}

		[Token(Token = "0x6001F49")]
		[Address(RVA = "0xED9918", Offset = "0xED9918", VA = "0xED9918")]
		private void Start()
		{
		}

		[Token(Token = "0x6001F4A")]
		[Address(RVA = "0xED99E8", Offset = "0xED99E8", VA = "0xED99E8")]
		private void OnFacingDetected(bool isDetected)
		{
		}

		[Token(Token = "0x6001F4B")]
		[Address(RVA = "0xED9A84", Offset = "0xED9A84", VA = "0xED9A84")]
		public PointerInteractableObject()
		{
		}
	}
	[Token(Token = "0x200049D")]
	public interface IInteractable
	{
		[Token(Token = "0x170003E6")]
		float maxInteractionDistance
		{
			[Token(Token = "0x6001F4D")]
			get;
			[Token(Token = "0x6001F4E")]
			set;
		}

		[Token(Token = "0x6001F4F")]
		void OnHoover();

		[Token(Token = "0x6001F50")]
		void OnClick();

		[Token(Token = "0x6001F51")]
		void OnRelease();
	}
}
namespace Mighty.UIView
{
	[Token(Token = "0x200049E")]
	public class CanvasView : ViewContainer
	{
		[Token(Token = "0x40017CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float showDuration;

		[Token(Token = "0x40017CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public float hideDuration;

		[Token(Token = "0x40017CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public GameObject NextButton;

		[Token(Token = "0x40017CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public GameObject PreviousButton;

		[Token(Token = "0x40017D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[Tooltip("When enabled pressing Next button on last page or Previous button on the first page will bring you to the first and last pages respecively. If disabled the Next button on the last page and Previous button on the first page will be disabled.")]
		public bool WrapPages;

		[Token(Token = "0x40017D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[Header("Personal View Settings")]
		public float fadeInDuration;

		[Token(Token = "0x40017D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public float fadeOutDuration;

		[Token(Token = "0x40017D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public CanvasGroup canvasGroup;

		[Token(Token = "0x40017D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[Tooltip("Define Mesh based Gameobjects here so they utilize transition like the rest of the view")]
		public List<Transform> MeshObjects;

		[Token(Token = "0x40017D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Dictionary<int, Vector3> MeshOriginalScalesDict;

		[Token(Token = "0x40017D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[Tooltip("Instead of using the default position at runtime which is error prone if on a GO that is instantiated at runtime from already existing GO. (Ex. CourseItemButton's GetCourseButton.)")]
		public bool UseManuallySetOriginalPosition;

		[Token(Token = "0x40017D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		public Vector3 ManuallySetOriginalPosition;

		[Token(Token = "0x40017D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[FarBridge.ReadOnly]
		public Vector3 OriginalPosition;

		[Token(Token = "0x40017D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private RectTransform rectTransform;

		[Token(Token = "0x40017DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private bool initialized;

		[Token(Token = "0x6001F52")]
		[Address(RVA = "0xEC907C", Offset = "0xEC907C", VA = "0xEC907C", Slot = "9")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001F53")]
		[Address(RVA = "0xEC514C", Offset = "0xEC514C", VA = "0xEC514C", Slot = "19")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x6001F54")]
		[Address(RVA = "0xED9AD0", Offset = "0xED9AD0", VA = "0xED9AD0")]
		public void Initialize()
		{
		}

		[Token(Token = "0x6001F55")]
		[Address(RVA = "0xED9B64", Offset = "0xED9B64", VA = "0xED9B64", Slot = "6")]
		public override void ShowView(ViewTransition viewTransition, [Optional] Action OnComplete)
		{
		}

		[Token(Token = "0x6001F56")]
		[Address(RVA = "0xEC8E6C", Offset = "0xEC8E6C", VA = "0xEC8E6C")]
		public void DoAnchorPos3D(Action actionOnComplete)
		{
		}

		[Token(Token = "0x6001F57")]
		[Address(RVA = "0xED9D78", Offset = "0xED9D78", VA = "0xED9D78")]
		private void ShowMeshes()
		{
		}

		[Token(Token = "0x6001F58")]
		[Address(RVA = "0xED9F80", Offset = "0xED9F80", VA = "0xED9F80", Slot = "7")]
		public override void HideView([Optional] Action OnComplete)
		{
		}

		[Token(Token = "0x6001F59")]
		[Address(RVA = "0xEDA0BC", Offset = "0xEDA0BC", VA = "0xEDA0BC")]
		private void HideMeshes()
		{
		}

		[Token(Token = "0x6001F5A")]
		[Address(RVA = "0xEDA338", Offset = "0xEDA338", VA = "0xEDA338", Slot = "8")]
		public override void StopTransition()
		{
		}

		[Token(Token = "0x6001F5B")]
		[Address(RVA = "0xECA7D8", Offset = "0xECA7D8", VA = "0xECA7D8", Slot = "13")]
		public override void Next()
		{
		}

		[Token(Token = "0x6001F5C")]
		[Address(RVA = "0xECA944", Offset = "0xECA944", VA = "0xECA944", Slot = "14")]
		public override void Previous()
		{
		}

		[Token(Token = "0x6001F5D")]
		[Address(RVA = "0xEDA37C", Offset = "0xEDA37C", VA = "0xEDA37C", Slot = "20")]
		public virtual void InitializePagingButtons(int pageQty)
		{
		}

		[Token(Token = "0x6001F5E")]
		[Address(RVA = "0xEC7B10", Offset = "0xEC7B10", VA = "0xEC7B10")]
		protected void TogglePreviousButton(bool enable)
		{
		}

		[Token(Token = "0x6001F5F")]
		[Address(RVA = "0xEC7A6C", Offset = "0xEC7A6C", VA = "0xEC7A6C")]
		protected void ToggleNextButton(bool enable)
		{
		}

		[Token(Token = "0x6001F60")]
		[Address(RVA = "0xEC8CEC", Offset = "0xEC8CEC", VA = "0xEC8CEC")]
		public CanvasView()
		{
		}
	}
	[Token(Token = "0x20004A1")]
	public class View : MonoBehaviour
	{
		[Token(Token = "0x40017DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Header("View")]
		[Space(10f)]
		public string viewID;

		[Token(Token = "0x40017DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected int viewIndex;

		[Token(Token = "0x6001F66")]
		[Address(RVA = "0xEDA470", Offset = "0xEDA470", VA = "0xEDA470", Slot = "4")]
		public virtual void SetupView(int index)
		{
		}

		[Token(Token = "0x6001F67")]
		[Address(RVA = "0xEDA478", Offset = "0xEDA478", VA = "0xEDA478", Slot = "5")]
		public virtual int GetViewIndex()
		{
			return default(int);
		}

		[Token(Token = "0x6001F68")]
		[Address(RVA = "0xEDA480", Offset = "0xEDA480", VA = "0xEDA480", Slot = "6")]
		public virtual void ShowView(ViewTransition viewTransition = ViewTransition.Next, [Optional] Action OnComplete)
		{
		}

		[Token(Token = "0x6001F69")]
		[Address(RVA = "0xEDA484", Offset = "0xEDA484", VA = "0xEDA484", Slot = "7")]
		public virtual void HideView([Optional] Action OnComplete)
		{
		}

		[Token(Token = "0x6001F6A")]
		[Address(RVA = "0xEDA488", Offset = "0xEDA488", VA = "0xEDA488", Slot = "8")]
		public virtual void StopTransition()
		{
		}

		[Token(Token = "0x6001F6B")]
		[Address(RVA = "0xEDA48C", Offset = "0xEDA48C", VA = "0xEDA48C")]
		public View()
		{
		}
	}
	[Token(Token = "0x20004A2")]
	public class ViewContainer : View
	{
		[Token(Token = "0x40017E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Space(10f)]
		[Header("Master View Settings")]
		[Tooltip("Views that are present in prefab - i.e. not created at runtime.")]
		public List<View> startingViews;

		[Token(Token = "0x40017E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int startingViewIndex;

		[Token(Token = "0x40017E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public bool initOnAwake;

		[Token(Token = "0x40017E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
		public bool showViewInInit;

		[Token(Token = "0x40017E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x36")]
		[HideInInspector]
		public bool isTransitioning;

		[Token(Token = "0x40017E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x37")]
		[Tooltip("When disabled all child view transition animations will disabled and only transitions via alpha fade.")]
		public bool transitionAnimationsEnabled;

		[Token(Token = "0x40017E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float transitionAnimationDuration;

		[Token(Token = "0x40017E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected List<View> currentViews;

		[Token(Token = "0x40017E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected int currentViewIndex;

		[Token(Token = "0x40017E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Dictionary<string, View> viewDictionary;

		[Token(Token = "0x40017EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private View transitionView;

		[Token(Token = "0x6001F6C")]
		[Address(RVA = "0xED9AB4", Offset = "0xED9AB4", VA = "0xED9AB4", Slot = "9")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6001F6D")]
		[Address(RVA = "0xEDA494", Offset = "0xEDA494", VA = "0xEDA494", Slot = "10")]
		public virtual void Init([Optional] Action OnComplete)
		{
		}

		[Token(Token = "0x6001F6E")]
		[Address(RVA = "0xEC73CC", Offset = "0xEC73CC", VA = "0xEC73CC")]
		public void AddView(View view)
		{
		}

		[Token(Token = "0x6001F6F")]
		[Address(RVA = "0xECA638", Offset = "0xECA638", VA = "0xECA638")]
		public void RemoveView(View view)
		{
		}

		[Token(Token = "0x6001F70")]
		[Address(RVA = "0xEDA764", Offset = "0xEDA764", VA = "0xEDA764", Slot = "11")]
		public virtual View GetNextView()
		{
			return null;
		}

		[Token(Token = "0x6001F71")]
		[Address(RVA = "0xEDA7E8", Offset = "0xEDA7E8", VA = "0xEDA7E8", Slot = "12")]
		public virtual View GetPreviousView()
		{
			return null;
		}

		[Token(Token = "0x6001F72")]
		[Address(RVA = "0xEDA354", Offset = "0xEDA354", VA = "0xEDA354", Slot = "13")]
		[ContextMenu("Show Next")]
		public virtual void Next()
		{
		}

		[Token(Token = "0x6001F73")]
		[Address(RVA = "0xEDA368", Offset = "0xEDA368", VA = "0xEDA368", Slot = "14")]
		[ContextMenu("Show Previous")]
		public virtual void Previous()
		{
		}

		[Token(Token = "0x6001F74")]
		[Address(RVA = "0xEC8DD8", Offset = "0xEC8DD8", VA = "0xEC8DD8", Slot = "15")]
		public virtual void ShowNextView([Optional] Action OnComplete)
		{
		}

		[Token(Token = "0x6001F75")]
		[Address(RVA = "0xEDA878", Offset = "0xEDA878", VA = "0xEDA878", Slot = "16")]
		public virtual void ShowPreviousView([Optional] Action OnComplete)
		{
		}

		[Token(Token = "0x6001F76")]
		[Address(RVA = "0xEDA8F8", Offset = "0xEDA8F8", VA = "0xEDA8F8", Slot = "17")]
		public virtual void ShowView(string viewID, ViewTransition viewTransition = ViewTransition.Direct, [Optional] Action OnComplete)
		{
		}

		[Token(Token = "0x6001F77")]
		[Address(RVA = "0xECA6F4", Offset = "0xECA6F4", VA = "0xECA6F4")]
		public void ShowView(int viewIndex)
		{
		}

		[Token(Token = "0x6001F78")]
		[Address(RVA = "0xEDACB4", Offset = "0xEDACB4", VA = "0xEDACB4")]
		public void ShowView(string viewID)
		{
		}

		[Token(Token = "0x6001F79")]
		[Address(RVA = "0xEDACCC", Offset = "0xEDACCC", VA = "0xEDACCC", Slot = "18")]
		public virtual void ShowView(int viewIndex, ViewTransition viewTransition = ViewTransition.Direct, [Optional] Action OnComplete)
		{
		}

		[Token(Token = "0x6001F7A")]
		[Address(RVA = "0xEDAA08", Offset = "0xEDAA08", VA = "0xEDAA08")]
		private void HideCurrentAndShowNext(View view, ViewTransition viewTransition, Action OnComplete)
		{
		}

		[Token(Token = "0x6001F7B")]
		[Address(RVA = "0xEC95F0", Offset = "0xEC95F0", VA = "0xEC95F0")]
		public ViewContainer()
		{
		}
	}
	[Token(Token = "0x20004A4")]
	public enum ViewTransition
	{
		[Token(Token = "0x40017F1")]
		None,
		[Token(Token = "0x40017F2")]
		Next,
		[Token(Token = "0x40017F3")]
		Previous,
		[Token(Token = "0x40017F4")]
		Direct
	}
}
namespace Mighty.Activities
{
	[Token(Token = "0x20004A5")]
	public class Activity : MonoBehaviour
	{
		[Token(Token = "0x40017F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string id;

		[Token(Token = "0x170003E7")]
		public Dictionary<int, ActivityPlayer> players
		{
			[Token(Token = "0x6001F7F")]
			[Address(RVA = "0xEDBE6C", Offset = "0xEDBE6C", VA = "0xEDBE6C")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001F80")]
			[Address(RVA = "0xEDBE74", Offset = "0xEDBE74", VA = "0xEDBE74")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x6001F81")]
		[Address(RVA = "0xEDBE7C", Offset = "0xEDBE7C", VA = "0xEDBE7C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001F82")]
		[Address(RVA = "0xEDBEE4", Offset = "0xEDBEE4", VA = "0xEDBEE4")]
		public void Enter(ActivityPlayer player)
		{
		}

		[Token(Token = "0x6001F83")]
		[Address(RVA = "0xEDBEE8", Offset = "0xEDBEE8", VA = "0xEDBEE8")]
		public void Exit(ActivityPlayer player)
		{
		}

		[Token(Token = "0x6001F84")]
		[Address(RVA = "0xEDBEEC", Offset = "0xEDBEEC", VA = "0xEDBEEC")]
		public bool Contains(ActivityPlayer player)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F85")]
		[Address(RVA = "0xEDBF7C", Offset = "0xEDBF7C", VA = "0xEDBF7C", Slot = "4")]
		public virtual void OnPlayerEnter()
		{
		}

		[Token(Token = "0x6001F86")]
		[Address(RVA = "0xEDBF80", Offset = "0xEDBF80", VA = "0xEDBF80", Slot = "5")]
		public virtual void OnPlayerExit()
		{
		}

		[Token(Token = "0x6001F87")]
		[Address(RVA = "0xEDBF84", Offset = "0xEDBF84", VA = "0xEDBF84", Slot = "6")]
		public virtual void Begin()
		{
		}

		[Token(Token = "0x6001F88")]
		[Address(RVA = "0xEDBF88", Offset = "0xEDBF88", VA = "0xEDBF88", Slot = "7")]
		public virtual void Pause()
		{
		}

		[Token(Token = "0x6001F89")]
		[Address(RVA = "0xEDBF8C", Offset = "0xEDBF8C", VA = "0xEDBF8C", Slot = "8")]
		public virtual void Resume()
		{
		}

		[Token(Token = "0x6001F8A")]
		[Address(RVA = "0xEDBF90", Offset = "0xEDBF90", VA = "0xEDBF90", Slot = "9")]
		public virtual void End()
		{
		}

		[Token(Token = "0x6001F8B")]
		[Address(RVA = "0xEDBF94", Offset = "0xEDBF94", VA = "0xEDBF94", Slot = "10")]
		public virtual void Restart()
		{
		}

		[Token(Token = "0x6001F8C")]
		[Address(RVA = "0xEDBF98", Offset = "0xEDBF98", VA = "0xEDBF98")]
		public Activity()
		{
		}
	}
	[Token(Token = "0x20004A6")]
	public class ActivityAvatar : MonoBehaviour
	{
		[Token(Token = "0x40017F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AudioSource source;

		[Token(Token = "0x40017F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Avatar avatar;

		[Token(Token = "0x40017F9")]
		public const string prop_avatarID = "av";

		[Token(Token = "0x6001F8D")]
		[Address(RVA = "0xEDBFA0", Offset = "0xEDBFA0", VA = "0xEDBFA0")]
		private void Start()
		{
		}

		[Token(Token = "0x6001F8E")]
		[Address(RVA = "0xEDC008", Offset = "0xEDC008", VA = "0xEDC008")]
		public void Setup(string json)
		{
		}

		[Token(Token = "0x6001F8F")]
		[Address(RVA = "0xEDC224", Offset = "0xEDC224", VA = "0xEDC224")]
		private void Hide(params Category[] categories)
		{
		}

		[Token(Token = "0x6001F90")]
		[Address(RVA = "0xEDC304", Offset = "0xEDC304", VA = "0xEDC304")]
		public ActivityAvatar()
		{
		}
	}
	[Token(Token = "0x20004A7")]
	public class ActivityManager : MonoBehaviourPunCallbacks
	{
		[Token(Token = "0x20004A8")]
		[CompilerGenerated]
		private sealed class <DoConnect>d__5 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40017FC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40017FD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x170003E8")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001F9C")]
				[Address(RVA = "0xEDC7FC", Offset = "0xEDC7FC", VA = "0xEDC7FC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003E9")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001F9E")]
				[Address(RVA = "0xEDC844", Offset = "0xEDC844", VA = "0xEDC844", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001F99")]
			[Address(RVA = "0xEDC458", Offset = "0xEDC458", VA = "0xEDC458")]
			[DebuggerHidden]
			public <DoConnect>d__5(int <>1__state)
			{
			}

			[Token(Token = "0x6001F9A")]
			[Address(RVA = "0xEDC684", Offset = "0xEDC684", VA = "0xEDC684", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001F9B")]
			[Address(RVA = "0xEDC688", Offset = "0xEDC688", VA = "0xEDC688", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001F9D")]
			[Address(RVA = "0xEDC804", Offset = "0xEDC804", VA = "0xEDC804", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40017FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ActivityManager instance;

		[Token(Token = "0x40017FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ActivityRoom room;

		[Token(Token = "0x6001F91")]
		[Address(RVA = "0xEDC30C", Offset = "0xEDC30C", VA = "0xEDC30C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001F92")]
		[Address(RVA = "0xEDC358", Offset = "0xEDC358", VA = "0xEDC358")]
		private void Start()
		{
		}

		[Token(Token = "0x6001F93")]
		[Address(RVA = "0xEDC3D8", Offset = "0xEDC3D8", VA = "0xEDC3D8")]
		private void Connect()
		{
		}

		[Token(Token = "0x6001F94")]
		[Address(RVA = "0xEDC3F8", Offset = "0xEDC3F8", VA = "0xEDC3F8")]
		[IteratorStateMachine(typeof(<DoConnect>d__5))]
		private IEnumerator DoConnect()
		{
			return null;
		}

		[Token(Token = "0x6001F95")]
		[Address(RVA = "0xEDC480", Offset = "0xEDC480", VA = "0xEDC480", Slot = "45")]
		public override void OnConnectedToMaster()
		{
		}

		[Token(Token = "0x6001F96")]
		[Address(RVA = "0xEDC674", Offset = "0xEDC674", VA = "0xEDC674")]
		public void OnActivityTriggerEnter(Activity activitity)
		{
		}

		[Token(Token = "0x6001F97")]
		[Address(RVA = "0xEDC678", Offset = "0xEDC678", VA = "0xEDC678")]
		public void OnActivityTriggerExit(Activity activitity)
		{
		}

		[Token(Token = "0x6001F98")]
		[Address(RVA = "0xEDC67C", Offset = "0xEDC67C", VA = "0xEDC67C")]
		public ActivityManager()
		{
		}
	}
	[Token(Token = "0x20004A9")]
	public class ActivityPlayer : MonoBehaviourPunCallbacks
	{
		[Token(Token = "0x20004AA")]
		public class Props
		{
			[Token(Token = "0x4001800")]
			public const string avatarID = "av";

			[Token(Token = "0x6001FAA")]
			[Address(RVA = "0xEDCCAC", Offset = "0xEDCCAC", VA = "0xEDCCAC")]
			public Props()
			{
			}
		}

		[Token(Token = "0x40017FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TextMeshPro label;

		[Token(Token = "0x40017FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ActivityAvatar avatar;

		[Token(Token = "0x170003EA")]
		public ExitGames.Client.Photon.Hashtable props
		{
			[Token(Token = "0x6001FA5")]
			[Address(RVA = "0xEDCC7C", Offset = "0xEDCC7C", VA = "0xEDCC7C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003EB")]
		public string AvatarJson
		{
			[Token(Token = "0x6001FA6")]
			[Address(RVA = "0xEDCBAC", Offset = "0xEDCBAC", VA = "0xEDCBAC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003EC")]
		public int ActorNumber
		{
			[Token(Token = "0x6001FA7")]
			[Address(RVA = "0xEDBF54", Offset = "0xEDBF54", VA = "0xEDBF54")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170003ED")]
		public bool IsLocal
		{
			[Token(Token = "0x6001FA8")]
			[Address(RVA = "0xEDCB40", Offset = "0xEDCB40", VA = "0xEDCB40")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001F9F")]
		[Address(RVA = "0xEDC84C", Offset = "0xEDC84C", VA = "0xEDC84C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001FA0")]
		[Address(RVA = "0xEDC8B4", Offset = "0xEDC8B4", VA = "0xEDC8B4")]
		private void Start()
		{
		}

		[Token(Token = "0x6001FA1")]
		[Address(RVA = "0xEDC928", Offset = "0xEDC928", VA = "0xEDC928")]
		public void Setup()
		{
		}

		[Token(Token = "0x6001FA2")]
		[Address(RVA = "0xEDC948", Offset = "0xEDC948", VA = "0xEDC948")]
		private void AttachToRig()
		{
		}

		[Token(Token = "0x6001FA3")]
		[Address(RVA = "0xEDCA50", Offset = "0xEDCA50", VA = "0xEDCA50")]
		private void SetLabel()
		{
		}

		[Token(Token = "0x6001FA4")]
		[Address(RVA = "0xEDCB1C", Offset = "0xEDCB1C", VA = "0xEDCB1C")]
		private void SetupAvatar()
		{
		}

		[Token(Token = "0x6001FA9")]
		[Address(RVA = "0xEDCCA4", Offset = "0xEDCCA4", VA = "0xEDCCA4")]
		public ActivityPlayer()
		{
		}
	}
	[Token(Token = "0x20004AB")]
	public class ActivityRig : MonoBehaviour
	{
		[Token(Token = "0x170003EE")]
		public Collider collider
		{
			[Token(Token = "0x6001FAB")]
			[Address(RVA = "0xEDCCB4", Offset = "0xEDCCB4", VA = "0xEDCCB4")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001FAC")]
			[Address(RVA = "0xEDCCBC", Offset = "0xEDCCBC", VA = "0xEDCCBC")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x170003EF")]
		[HideInInspector]
		public static ActivityRig instance
		{
			[Token(Token = "0x6001FAD")]
			[Address(RVA = "0xEDCCC4", Offset = "0xEDCCC4", VA = "0xEDCCC4")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001FAE")]
			[Address(RVA = "0xEDCD0C", Offset = "0xEDCD0C", VA = "0xEDCD0C")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x170003F0")]
		public static Transform Transform
		{
			[Token(Token = "0x6001FB0")]
			[Address(RVA = "0xEDCB60", Offset = "0xEDCB60", VA = "0xEDCB60")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001FAF")]
		[Address(RVA = "0xEDCD58", Offset = "0xEDCD58", VA = "0xEDCD58")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001FB1")]
		[Address(RVA = "0xEDCE20", Offset = "0xEDCE20", VA = "0xEDCE20")]
		public ActivityRig()
		{
		}
	}
	[Token(Token = "0x20004AC")]
	public class ActivityRoom : MonoBehaviourPunCallbacks
	{
		[Token(Token = "0x20004AD")]
		[CompilerGenerated]
		private sealed class <CreateLocalPlayer>d__4 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001803")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001804")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001805")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ActivityRoom <>4__this;

			[Token(Token = "0x170003F1")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001FBC")]
				[Address(RVA = "0xEDD408", Offset = "0xEDD408", VA = "0xEDD408", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003F2")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001FBE")]
				[Address(RVA = "0xEDD450", Offset = "0xEDD450", VA = "0xEDD450", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001FB9")]
			[Address(RVA = "0xEDD054", Offset = "0xEDD054", VA = "0xEDD054")]
			[DebuggerHidden]
			public <CreateLocalPlayer>d__4(int <>1__state)
			{
			}

			[Token(Token = "0x6001FBA")]
			[Address(RVA = "0xEDD298", Offset = "0xEDD298", VA = "0xEDD298", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001FBB")]
			[Address(RVA = "0xEDD29C", Offset = "0xEDD29C", VA = "0xEDD29C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001FBD")]
			[Address(RVA = "0xEDD410", Offset = "0xEDD410", VA = "0xEDD410", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x6001FB2")]
		[Address(RVA = "0xEDCE28", Offset = "0xEDCE28", VA = "0xEDCE28")]
		private void Start()
		{
		}

		[Token(Token = "0x6001FB3")]
		[Address(RVA = "0xEDC514", Offset = "0xEDC514", VA = "0xEDC514")]
		public void Join(string roomToJoin)
		{
		}

		[Token(Token = "0x6001FB4")]
		[Address(RVA = "0xEDCE90", Offset = "0xEDCE90", VA = "0xEDCE90", Slot = "41")]
		public override void OnJoinedRoom()
		{
		}

		[Token(Token = "0x6001FB5")]
		[Address(RVA = "0xEDCFC8", Offset = "0xEDCFC8", VA = "0xEDCFC8", Slot = "42")]
		public override void OnPlayerEnteredRoom(Photon.Realtime.Player newPlayer)
		{
		}

		[Token(Token = "0x6001FB6")]
		[Address(RVA = "0xEDCF60", Offset = "0xEDCF60", VA = "0xEDCF60")]
		[IteratorStateMachine(typeof(<CreateLocalPlayer>d__4))]
		private IEnumerator CreateLocalPlayer()
		{
			return null;
		}

		[Token(Token = "0x6001FB7")]
		[Address(RVA = "0xEDD07C", Offset = "0xEDD07C", VA = "0xEDD07C")]
		private void InitializePlayerProperties()
		{
		}

		[Token(Token = "0x6001FB8")]
		[Address(RVA = "0xEDD290", Offset = "0xEDD290", VA = "0xEDD290")]
		public ActivityRoom()
		{
		}
	}
	[Token(Token = "0x20004AE")]
	public class ActivityTrigger : MonoBehaviour
	{
		[Token(Token = "0x4001806")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Activity actitivity;

		[Token(Token = "0x170003F3")]
		public ActivityManager manager
		{
			[Token(Token = "0x6001FC2")]
			[Address(RVA = "0xEDD550", Offset = "0xEDD550", VA = "0xEDD550")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001FBF")]
		[Address(RVA = "0xEDD458", Offset = "0xEDD458", VA = "0xEDD458")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001FC0")]
		[Address(RVA = "0xEDD4C0", Offset = "0xEDD4C0", VA = "0xEDD4C0")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6001FC1")]
		[Address(RVA = "0xEDD508", Offset = "0xEDD508", VA = "0xEDD508")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6001FC3")]
		[Address(RVA = "0xEDD598", Offset = "0xEDD598", VA = "0xEDD598")]
		public ActivityTrigger()
		{
		}
	}
	[Token(Token = "0x20004AF")]
	public class ActivityView : MonoBehaviour
	{
		[Token(Token = "0x4001807")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Activity actitivity;

		[Token(Token = "0x170003F4")]
		public ActivityManager manager
		{
			[Token(Token = "0x6001FC5")]
			[Address(RVA = "0xEDD608", Offset = "0xEDD608", VA = "0xEDD608")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001FC4")]
		[Address(RVA = "0xEDD5A0", Offset = "0xEDD5A0", VA = "0xEDD5A0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001FC6")]
		[Address(RVA = "0xEDD650", Offset = "0xEDD650", VA = "0xEDD650")]
		public ActivityView()
		{
		}
	}
}
namespace Mighty.Achievements
{
	[Token(Token = "0x20004B0")]
	public class AchievementsManager : Singleton<AchievementsManager>
	{
		[Token(Token = "0x6001FC7")]
		[Address(RVA = "0xEDD658", Offset = "0xEDD658", VA = "0xEDD658")]
		public AchievementsManager()
		{
		}
	}
	[Token(Token = "0x20004B1")]
	public class PlayerEventsManager : Singleton<PlayerEventsManager>
	{
		[Token(Token = "0x6001FC8")]
		[Address(RVA = "0xEDD6A0", Offset = "0xEDD6A0", VA = "0xEDD6A0")]
		public PlayerEventsManager()
		{
		}
	}
}
namespace Mighty.Boids
{
	[Token(Token = "0x20004B2")]
	public class BoidsGroup : MonoBehaviour
	{
		[Token(Token = "0x4001808")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<BoidsDeviceSettings> deviceSettings;

		[Token(Token = "0x4001809")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Header("Mesh and Material")]
		[Space(10f)]
		public Mesh mesh;

		[Token(Token = "0x400180A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Material material;

		[Token(Token = "0x400180B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float3 modelRotation;

		[Token(Token = "0x6001FC9")]
		[Address(RVA = "0xEDD6E8", Offset = "0xEDD6E8", VA = "0xEDD6E8")]
		public void Init()
		{
		}

		[Token(Token = "0x6001FCA")]
		[Address(RVA = "0xEDDB18", Offset = "0xEDDB18", VA = "0xEDDB18")]
		public BoidsDeviceSettings GetDeviceSetting(Common.TargetDevice lookingForDevice)
		{
			return null;
		}

		[Token(Token = "0x6001FCB")]
		[Address(RVA = "0xEDD970", Offset = "0xEDD970", VA = "0xEDD970")]
		private void SetBounds(BoidsDeviceSettings deviceSettings)
		{
		}

		[Token(Token = "0x6001FCC")]
		[Address(RVA = "0xEDDCE8", Offset = "0xEDDCE8", VA = "0xEDDCE8")]
		public BoidsGroup()
		{
		}
	}
	[Token(Token = "0x20004B3")]
	public class BoidsManager : MonoBehaviour
	{
		[Token(Token = "0x400180C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<BoidsGroup> boidGroups;

		[Token(Token = "0x400180D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<BoidsDevicePerformanceSettings> boidsDevicePerformanceSettings;

		[Token(Token = "0x400180E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Tooltip("Should the leaders & their followers move.")]
		public bool runMovement;

		[Token(Token = "0x400180F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		public bool useFirstMesh;

		[Token(Token = "0x4001810")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
		public bool useTestDevice;

		[Token(Token = "0x4001811")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Common.TargetDevice testDevice;

		[Token(Token = "0x4001812")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool showGizmos;

		[Token(Token = "0x4001813")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private List<GPUBoidInstance> gpuBoidInstances;

		[Token(Token = "0x4001814")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Common.TargetDevice targetDevice;

		[Token(Token = "0x4001815")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private BoidsDevicePerformanceSettings performanceSettings;

		[Token(Token = "0x4001816")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool firstRun;

		[Token(Token = "0x6001FCD")]
		[Address(RVA = "0xEDDD74", Offset = "0xEDDD74", VA = "0xEDDD74")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001FCE")]
		[Address(RVA = "0xEDED20", Offset = "0xEDED20", VA = "0xEDED20")]
		private void Start()
		{
		}

		[Token(Token = "0x6001FCF")]
		[Address(RVA = "0xEDEDE0", Offset = "0xEDEDE0", VA = "0xEDEDE0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001FD0")]
		[Address(RVA = "0xEDF218", Offset = "0xEDF218", VA = "0xEDF218")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001FD1")]
		[Address(RVA = "0xEDF3D4", Offset = "0xEDF3D4", VA = "0xEDF3D4")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001FD2")]
		[Address(RVA = "0xEDF7EC", Offset = "0xEDF7EC", VA = "0xEDF7EC")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001FD3")]
		[Address(RVA = "0xEDFB84", Offset = "0xEDFB84", VA = "0xEDFB84")]
		private void FullReset()
		{
		}

		[Token(Token = "0x6001FD4")]
		[Address(RVA = "0xEDDEF0", Offset = "0xEDDEF0", VA = "0xEDDEF0")]
		private void GetDeviceSettings()
		{
		}

		[Token(Token = "0x6001FD5")]
		[Address(RVA = "0xEDE10C", Offset = "0xEDE10C", VA = "0xEDE10C")]
		private void ConsolidateInstances()
		{
		}

		[Token(Token = "0x6001FD6")]
		[Address(RVA = "0xEDFFB8", Offset = "0xEDFFB8", VA = "0xEDFFB8")]
		private void FocusLost()
		{
		}

		[Token(Token = "0x6001FD7")]
		[Address(RVA = "0xEDFFC4", Offset = "0xEDFFC4", VA = "0xEDFFC4")]
		private void FocusAcquired()
		{
		}

		[Token(Token = "0x6001FD8")]
		[Address(RVA = "0xEDFFD0", Offset = "0xEDFFD0", VA = "0xEDFFD0")]
		public BoidsManager()
		{
		}
	}
	[Token(Token = "0x20004B5")]
	public struct BoidPosition
	{
		[Token(Token = "0x4001819")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float3 position;

		[Token(Token = "0x400181A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public quaternion rotation;

		[Token(Token = "0x400181B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float cacheHit;

		[Token(Token = "0x6001FDB")]
		[Address(RVA = "0xEE0188", Offset = "0xEE0188", VA = "0xEE0188")]
		public BoidPosition(float3 position, quaternion rotation)
		{
		}

		[Token(Token = "0x6001FDC")]
		[Address(RVA = "0xEE01A0", Offset = "0xEE01A0", VA = "0xEE01A0")]
		public BoidPosition(float3 position)
		{
		}
	}
	[Token(Token = "0x20004B6")]
	public struct BOIDData
	{
		[Token(Token = "0x400181C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float cohesionLocalVariance;

		[Token(Token = "0x400181D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float separationLocalVariance;

		[Token(Token = "0x400181E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float alignmentLocalVariance;

		[Token(Token = "0x400181F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float speedlocalVariance;

		[Token(Token = "0x4001820")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 currentPosition;

		[Token(Token = "0x4001821")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 velocity;

		[Token(Token = "0x4001822")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 acceleration;

		[Token(Token = "0x4001823")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Vector3 scale;
	}
	[Serializable]
	[Token(Token = "0x20004B7")]
	public class BoidsDevicePerformanceSettings
	{
		[Token(Token = "0x4001824")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Common.TargetDevice targetDevice;

		[Token(Token = "0x4001825")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[Tooltip("Number of non-main-thread cores we can expect to toss tasks at without enterupting the main thread")]
		public int avaialableCores;

		[Token(Token = "0x4001826")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Tooltip("Governs how fast followers can turn")]
		public float slerpSpeed;

		[Token(Token = "0x4001827")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[Tooltip("Each Boid Group's follower count will be multiplied by this")]
		public float followersPerLeaderMultiplier;

		[Token(Token = "0x6001FDD")]
		[Address(RVA = "0xEE0218", Offset = "0xEE0218", VA = "0xEE0218")]
		public BoidsDevicePerformanceSettings()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20004B8")]
	public class BoidsDeviceSettings
	{
		[Token(Token = "0x4001828")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[FormerlySerializedAs("targetDevive")]
		public Common.TargetDevice targetDevice;

		[Token(Token = "0x4001829")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[Tooltip("Interactive part of simulation. Total count is leaders time followers.")]
		[Header("Count")]
		public int leaderCount;

		[Token(Token = "0x400182A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Tooltip("Non interactive. Follow leaders in cool boid manner.")]
		public int followersPerLeader;

		[Token(Token = "0x400182B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BoidsEnvironmentSettings environmentSettings;

		[Token(Token = "0x400182C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[Tooltip("Texture array row to pull from")]
		[Space(10f)]
		public int textureArrayRow;

		[Token(Token = "0x400182D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		[HideInInspector]
		public Vector3 origin;

		[Token(Token = "0x6001FDE")]
		[Address(RVA = "0xEE0230", Offset = "0xEE0230", VA = "0xEE0230")]
		public BoidsDeviceSettings()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20004B9")]
	public struct BoidsEnvironmentSettings : IEquatable<BoidsEnvironmentSettings>
	{
		[Token(Token = "0x400182E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[Header("Mode")]
		public LeaderMode leaderStartingMode;

		[Token(Token = "0x400182F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		[Range(0f, 1f)]
		[Tooltip("Toggle off to have the fish point towards their acceleration instead")]
		public float velocityToAccelerationRotationBlend;

		[Token(Token = "0x4001830")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[Header("Boids Settings")]
		[Tooltip("How hard to align to group direction")]
		public float alignmentBias;

		[Token(Token = "0x4001831")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[Tooltip("How hard to steer towards group center")]
		public float cohesionBias;

		[Token(Token = "0x4001832")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[Tooltip("How hard to avoid flockmates")]
		public float separationBias;

		[Token(Token = "0x4001833")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[Tooltip("Min/max multipliers for how hard to pull towards leader based on leaderDistanceBias")]
		public Vector2 leaderBias;

		[Token(Token = "0x4001834")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[Tooltip("Min/Max distances mapped to leaderBias for how hard to push/pull towards leader")]
		public Vector2 leaderDistanceBias;

		[Token(Token = "0x4001835")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[Tooltip("Min/Max acceleration for followers")]
		public Vector2 followerAcceleration;

		[Token(Token = "0x4001836")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[Tooltip("Min/Max speed for followers")]
		public Vector2 followerSpeedMax;

		[Token(Token = "0x4001837")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[Tooltip("Not a true friction, just the lerp time passed in between our velocity and zero.")]
		public float friction;

		[Token(Token = "0x4001838")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[Range(1f, 65535f)]
		[Tooltip("Total followers divided by this is how many are checked for separation per frame")]
		public ushort separationChecksDivider;

		[Token(Token = "0x4001839")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[Header("Leader Settings")]
		[Tooltip("How far out form origin to target leaders at when in UnitSphere mode")]
		public float leaderTargetDestinationRadius;

		[Token(Token = "0x400183A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[Tooltip("Distance from leader that they'll become aware of external items")]
		[HideInInspector]
		public float leaderVisualRange;

		[Token(Token = "0x400183B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[Tooltip("Leader's acceleration per second")]
		public float acceleration;

		[Token(Token = "0x400183C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[Tooltip("Max speed for leader")]
		public float maxSpeed;

		[Token(Token = "0x400183D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("If leader mode is Follow, this is what we're following")]
		public Transform targetObject;

		[Token(Token = "0x400183E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("If leader mode is Follow, this our offset from their forward we're shooting for")]
		public Vector3 targetObjectOffset;

		[Token(Token = "0x400183F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[Tooltip("When the leader reaches its destination it'll pause for a random time between these two values")]
		public Vector2 leaderArrivedDelayMinMax;

		[Token(Token = "0x4001840")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[Tooltip("If leader mode is ConvexShape, this is the space in which the leader may choose to navigate to")]
		public MeshFilter convexBoundsMeshFilter;

		[Token(Token = "0x4001841")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[Header("Variance Settings")]
		public Vector2 alignmentVariation;

		[Token(Token = "0x4001842")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Vector2 cohesionVariation;

		[Token(Token = "0x4001843")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Vector2 separationVariation;

		[Token(Token = "0x4001844")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public Vector2 scaleVariation;

		[Token(Token = "0x4001845")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[Header("Depricated")]
		public Vector2 accelerationVariation;

		[Token(Token = "0x4001846")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public Vector2 speedMaxVariation;

		[Token(Token = "0x4001847")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		[HideInInspector]
		public LeaderBounds leaderBounds;

		[Token(Token = "0x6001FDF")]
		[Address(RVA = "0xEE0238", Offset = "0xEE0238", VA = "0xEE0238")]
		public static bool operator ==(BoidsEnvironmentSettings a, BoidsEnvironmentSettings b)
		{
			return default(bool);
		}

		[Token(Token = "0x6001FE0")]
		[Address(RVA = "0xEE044C", Offset = "0xEE044C", VA = "0xEE044C")]
		public static bool operator !=(BoidsEnvironmentSettings a, BoidsEnvironmentSettings b)
		{
			return default(bool);
		}

		[Token(Token = "0x6001FE1")]
		[Address(RVA = "0xEE026C", Offset = "0xEE026C", VA = "0xEE026C", Slot = "4")]
		public bool Equals(BoidsEnvironmentSettings other)
		{
			return default(bool);
		}

		[Token(Token = "0x6001FE2")]
		[Address(RVA = "0xEE0484", Offset = "0xEE0484", VA = "0xEE0484", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6001FE3")]
		[Address(RVA = "0xEE0514", Offset = "0xEE0514", VA = "0xEE0514", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}
	}
	[Token(Token = "0x20004BA")]
	public struct CustomPlayerLoopStartUpdate
	{
		[Token(Token = "0x6001FE4")]
		[Address(RVA = "0xEE0580", Offset = "0xEE0580", VA = "0xEE0580")]
		public static PlayerLoopSystem GetNewSystem()
		{
			return default(PlayerLoopSystem);
		}

		[Token(Token = "0x6001FE5")]
		[Address(RVA = "0xEE066C", Offset = "0xEE066C", VA = "0xEE066C")]
		public static void UpdateFunction()
		{
		}
	}
	[Token(Token = "0x20004BB")]
	public struct Follower
	{
		[Token(Token = "0x4001848")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int leaderIndex;

		[Token(Token = "0x4001849")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int textureIndex;

		[Token(Token = "0x400184A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float scale;

		[Token(Token = "0x400184B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float alignmentBias;

		[Token(Token = "0x400184C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float cohesionBias;

		[Token(Token = "0x400184D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float separationBias;

		[Token(Token = "0x400184E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float acceleration;

		[Token(Token = "0x400184F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float speedMax;

		[Token(Token = "0x6001FE6")]
		[Address(RVA = "0xEE06D0", Offset = "0xEE06D0", VA = "0xEE06D0")]
		public Follower(int leaderIndex, int textureIndex, float scale, float cohesionBias, float separationBias, float alignmentBias, float acceleration, float speedMax)
		{
		}
	}
	[StructLayout(0)]
	[Token(Token = "0x20004BC")]
	public class GPUBoidInstance
	{
		[Token(Token = "0x4001850")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Mesh mesh;

		[Token(Token = "0x4001851")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Material material;

		[Token(Token = "0x4001852")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float3 modelRotation;

		[Token(Token = "0x4001853")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Quaternion instanceRotation;

		[Token(Token = "0x4001854")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public List<BoidsDeviceSettings> boidsDeviceSettings;

		[Token(Token = "0x4001855")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public int groupCount;

		[Token(Token = "0x4001856")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public int leaderCountTotal;

		[Token(Token = "0x4001857")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public int followerCountTotal;

		[Token(Token = "0x4001858")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public int followerCountTwoEyesTotal;

		[Token(Token = "0x4001859")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public int arrayCopySlices;

		[Token(Token = "0x400185A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private int arrayCopyIncrements;

		[Token(Token = "0x400185B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Bounds bounds;

		[Token(Token = "0x400185C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private MaterialPropertyBlock materialPropertyBlock;

		[Token(Token = "0x400185D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public ComputeBuffer matrixBuffer;

		[Token(Token = "0x400185E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public ComputeBuffer textureIndexBuffer;

		[Token(Token = "0x400185F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public ComputeBuffer randomValueBuffer;

		[Token(Token = "0x4001860")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public ComputeBuffer accelerationMaxSpeedMaxExtentsBuffer;

		[Token(Token = "0x4001861")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private NativeArray<Leader> leaders;

		[Token(Token = "0x4001862")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private NativeArray<BoidPosition> leaderPositions;

		[Token(Token = "0x4001863")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private NativeArray<float3> leaderVelocities;

		[Token(Token = "0x4001864")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private NativeArray<float3> leaderAccelerations;

		[Token(Token = "0x4001865")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private NativeArray<float3> leaderTargetPositions;

		[Token(Token = "0x4001866")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private List<LeaderTargetParameters> leaderTargetParameters;

		[Token(Token = "0x4001867")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private NativeArray<LeaderBounds> leaderBounds;

		[Token(Token = "0x4001868")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private NativeArray<float2> leaderDelayMinMaxes;

		[Token(Token = "0x4001869")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private NativeArray<float> leaderDelays;

		[Token(Token = "0x400186A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private NativeArray<float3> groupAlignments;

		[Token(Token = "0x400186B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private NativeArray<float3> groupCohesions;

		[Token(Token = "0x400186C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private NativeArray<Follower> followers;

		[Token(Token = "0x400186D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		private NativeArray<BoidPosition> followerPositions;

		[Token(Token = "0x400186E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		private NativeArray<float3> followerVelocities;

		[Token(Token = "0x400186F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		private NativeArray<float3> followerAccelerations;

		[Token(Token = "0x4001870")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		private NativeArray<int> followersPerLeaders;

		[Token(Token = "0x4001871")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		private NativeArray<float> followerVelocityBasedRotation;

		[Token(Token = "0x4001872")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		private NativeArray<int> textureIndexes;

		[Token(Token = "0x4001873")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		private NativeArray<float> randomValues;

		[Token(Token = "0x4001874")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		private NativeArray<float3> accelerationMaxSpeedMaxExtents;

		[Token(Token = "0x4001875")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		private NativeArray<float4x4> bufferMatrix4x4s;

		[Token(Token = "0x4001876")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		private JobHandle leaderPlanningJobHandle;

		[Token(Token = "0x4001877")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		private JobHandle leaderAccelerationJobHandle;

		[Token(Token = "0x4001878")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		private JobHandle leaderVelocityJobHandle;

		[Token(Token = "0x4001879")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
		private JobHandle leaderPositionJobHandle;

		[Token(Token = "0x400187A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
		private JobHandle groupCommonValuesJobHandle;

		[Token(Token = "0x400187B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
		private JobHandle followerAccellerationJobHandle;

		[Token(Token = "0x400187C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
		private JobHandle followerVelocityJobHandle;

		[Token(Token = "0x400187D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
		private JobHandle followerPositionJobHandle;

		[Token(Token = "0x400187E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
		public JobHandle matrixCopyJobHandle;

		[Token(Token = "0x400187F")]
		private const string MATRIXBUFFER = "matrixBuffer";

		[Token(Token = "0x4001880")]
		private const string TEXTUREINDEXBUFFER = "textureIndexBuffer";

		[Token(Token = "0x4001881")]
		private const string RANDOMVALUEBUFFER = "randomValueBuffer";

		[Token(Token = "0x4001882")]
		private const string ACCELERATIONMAXSPEEDMAXEXTENTSBUFFER = "accelerationMaxSpeedMaxExtentsBuffer";

		[Token(Token = "0x4001883")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
		private bool writing;

		[Token(Token = "0x4001884")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x27C")]
		private float3 modelUp;

		[Token(Token = "0x4001885")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
		private float followersPerLeaderMultiplier;

		[Token(Token = "0x6001FE7")]
		[Address(RVA = "0xEDFCA4", Offset = "0xEDFCA4", VA = "0xEDFCA4")]
		public void ConsolidateData(float followersPerLeaderMultiplier)
		{
		}

		[Token(Token = "0x6001FE8")]
		[Address(RVA = "0xEDE754", Offset = "0xEDE754", VA = "0xEDE754")]
		public void Setup()
		{
		}

		[Token(Token = "0x6001FE9")]
		[Address(RVA = "0xEDFA30", Offset = "0xEDFA30", VA = "0xEDFA30")]
		public void Draw()
		{
		}

		[Token(Token = "0x6001FEA")]
		[Address(RVA = "0xEDF9B4", Offset = "0xEDF9B4", VA = "0xEDF9B4")]
		public void CompleteJobs()
		{
		}

		[Token(Token = "0x6001FEB")]
		[Address(RVA = "0xEDFB00", Offset = "0xEDFB00", VA = "0xEDFB00")]
		public void ScheduleJobs(BoidsDevicePerformanceSettings performanceSettings)
		{
		}

		[Token(Token = "0x6001FEC")]
		[Address(RVA = "0xEDF370", Offset = "0xEDF370", VA = "0xEDF370")]
		public void ForceEndWrite()
		{
		}

		[Token(Token = "0x6001FED")]
		[Address(RVA = "0xEE06E4", Offset = "0xEE06E4", VA = "0xEE06E4")]
		private void UpdateFollowedObjects()
		{
		}

		[Token(Token = "0x6001FEE")]
		[Address(RVA = "0xEE09D0", Offset = "0xEE09D0", VA = "0xEE09D0")]
		private void ScheduleMovementJobs(BoidsDevicePerformanceSettings performanceSettings)
		{
		}

		[Token(Token = "0x6001FEF")]
		[Address(RVA = "0xEDE94C", Offset = "0xEDE94C", VA = "0xEDE94C")]
		public void CreateNativeArrays()
		{
		}

		[Token(Token = "0x6001FF0")]
		[Address(RVA = "0xEDEF3C", Offset = "0xEDEF3C", VA = "0xEDEF3C")]
		public void InitNativeArrays()
		{
		}

		[Token(Token = "0x6001FF1")]
		[Address(RVA = "0xEE11F4", Offset = "0xEE11F4", VA = "0xEE11F4")]
		public int SetupLeaderNativeArrays(BoidsDeviceSettings boidsDeviceSetting, int offset, Vector3 origin)
		{
			return default(int);
		}

		[Token(Token = "0x6001FF2")]
		[Address(RVA = "0xEE19B4", Offset = "0xEE19B4", VA = "0xEE19B4")]
		public int SetupFollowerNativeArrays(BoidsDeviceSettings boidsDeviceSetting, int leaderOffset, int followerOffset, Vector3 origin)
		{
			return default(int);
		}

		[Token(Token = "0x6001FF3")]
		[Address(RVA = "0xEDF5CC", Offset = "0xEDF5CC", VA = "0xEDF5CC")]
		public void DisposeNativeArrays()
		{
		}

		[Token(Token = "0x6001FF4")]
		[Address(RVA = "0xEDE818", Offset = "0xEDE818", VA = "0xEDE818")]
		public void CreateBuffers()
		{
		}

		[Token(Token = "0x6001FF5")]
		[Address(RVA = "0xEDF0C4", Offset = "0xEDF0C4", VA = "0xEDF0C4")]
		public void InitBuffers()
		{
		}

		[Token(Token = "0x6001FF6")]
		[Address(RVA = "0xEDF798", Offset = "0xEDF798", VA = "0xEDF798")]
		public void DisposeBuffers()
		{
		}

		[Token(Token = "0x6001FF7")]
		[Address(RVA = "0xEE2200", Offset = "0xEE2200", VA = "0xEE2200")]
		private float FakeBellCurve(float min, float max)
		{
			return default(float);
		}

		[Token(Token = "0x6001FF8")]
		[Address(RVA = "0xEDFBBC", Offset = "0xEDFBBC", VA = "0xEDFBBC")]
		public GPUBoidInstance()
		{
		}
	}
	[Token(Token = "0x20004BD")]
	public enum LeaderMode : byte
	{
		[Token(Token = "0x4001887")]
		Stationary,
		[Token(Token = "0x4001888")]
		UnitSphereInside,
		[Token(Token = "0x4001889")]
		TargetObject,
		[Token(Token = "0x400188A")]
		Scared,
		[Token(Token = "0x400188B")]
		BoundsInside,
		[Token(Token = "0x400188C")]
		UnitSphereOutside,
		[Token(Token = "0x400188D")]
		TargetObjectOnTop,
		[Token(Token = "0x400188E")]
		Paused
	}
	[Token(Token = "0x20004BE")]
	public struct Leader
	{
		[Token(Token = "0x400188F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float alignmentBias;

		[Token(Token = "0x4001890")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float cohesionBias;

		[Token(Token = "0x4001891")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float separationBias;

		[Token(Token = "0x4001892")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float acceleration;

		[Token(Token = "0x4001893")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float speedMax;

		[Token(Token = "0x4001894")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float visualRange;

		[Token(Token = "0x4001895")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float targetDestinationRadius;

		[Token(Token = "0x4001896")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float2 targetBias;

		[Token(Token = "0x4001897")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float2 targetDistanceBias;

		[Token(Token = "0x4001898")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float3 originalPosition;

		[Token(Token = "0x4001899")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public LeaderMode mode;

		[Token(Token = "0x400189A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		public LeaderMode originalMode;

		[Token(Token = "0x400189B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
		public ushort separationChecksDivider;

		[Token(Token = "0x400189C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float friction;

		[Token(Token = "0x6001FF9")]
		[Address(RVA = "0xEE21B4", Offset = "0xEE21B4", VA = "0xEE21B4")]
		public Leader(float cohesionBias, float separationBias, float alignmentBias, float acceleration, float maxSpeed, float2 targetBias, float2 targetDistanceBias, float visualRange, float targetDestinationRadius, LeaderMode startingMode, float3 originalPosition, ushort separationChecksDivider, float friction)
		{
		}
	}
	[Token(Token = "0x20004BF")]
	public struct LeaderBounds
	{
		[Token(Token = "0x400189D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float3 center;

		[Token(Token = "0x400189E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float3 size;

		[Token(Token = "0x400189F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public quaternion rotation;
	}
	[Token(Token = "0x20004C0")]
	public struct LeaderTargetParameters
	{
		[Token(Token = "0x40018A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int leaderIndex;

		[Token(Token = "0x40018A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float3 offset;

		[Token(Token = "0x40018A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform followedObject;
	}
	[Token(Token = "0x20004C1")]
	[BurstCompile(CompileSynchronously = true)]
	public struct BufferCopyJob : IJobParallelFor
	{
		[Token(Token = "0x40018A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[Unity.Collections.ReadOnly]
		public NativeArray<Matrix4x4> read;

		[Token(Token = "0x40018A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[WriteOnly]
		public NativeArray<Matrix4x4> write;

		[Token(Token = "0x6001FFA")]
		[Address(RVA = "0xEE22A4", Offset = "0xEE22A4", VA = "0xEE22A4", Slot = "4")]
		public void Execute(int i)
		{
		}
	}
	[Token(Token = "0x20004C2")]
	[BurstCompile(CompileSynchronously = true)]
	public struct BufferFullCopyJob : IJob
	{
		[Token(Token = "0x40018A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[Unity.Collections.ReadOnly]
		public NativeArray<Matrix4x4> read;

		[Token(Token = "0x40018A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[WriteOnly]
		public NativeArray<Matrix4x4> write;

		[Token(Token = "0x6001FFB")]
		[Address(RVA = "0xEE22D8", Offset = "0xEE22D8", VA = "0xEE22D8", Slot = "4")]
		public void Execute()
		{
		}
	}
	[Token(Token = "0x20004C3")]
	[BurstCompile(CompileSynchronously = true)]
	public struct BufferPartialCopyJob : IJob
	{
		[Token(Token = "0x40018A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[Unity.Collections.ReadOnly]
		public NativeArray<float4x4> source;

		[Token(Token = "0x40018A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[Unity.Collections.ReadOnly]
		public int startIndex;

		[Token(Token = "0x40018A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[Unity.Collections.ReadOnly]
		public int endIndex;

		[Token(Token = "0x40018AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Unity.Collections.ReadOnly]
		public int length;

		[Token(Token = "0x40018AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[WriteOnly]
		public NativeArray<float4x4> destination;

		[Token(Token = "0x6001FFC")]
		[Address(RVA = "0xEE2324", Offset = "0xEE2324", VA = "0xEE2324", Slot = "4")]
		public void Execute()
		{
		}
	}
	[Token(Token = "0x20004C4")]
	[BurstCompile(CompileSynchronously = true, OptimizeFor = OptimizeFor.Performance, FloatMode = FloatMode.Fast, FloatPrecision = FloatPrecision.Low)]
	public struct FollowerAccelerationJob : IJobParallelFor
	{
		[Token(Token = "0x40018AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[Unity.Collections.ReadOnly]
		public NativeArray<int> followersPerLeaders;

		[Token(Token = "0x40018AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[Unity.Collections.ReadOnly]
		public int frame;

		[Token(Token = "0x40018AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Unity.Collections.ReadOnly]
		public NativeArray<Leader> leaders;

		[Token(Token = "0x40018AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Unity.Collections.ReadOnly]
		public NativeArray<Follower> followers;

		[Token(Token = "0x40018B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[Unity.Collections.ReadOnly]
		public NativeArray<BoidPosition> leaderPositions;

		[Token(Token = "0x40018B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[Unity.Collections.ReadOnly]
		public NativeArray<float3> leaderVelocities;

		[Token(Token = "0x40018B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Unity.Collections.ReadOnly]
		public NativeArray<float3> groupAlignments;

		[Token(Token = "0x40018B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[Unity.Collections.ReadOnly]
		public NativeArray<float3> groupCohesions;

		[Token(Token = "0x40018B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[Unity.Collections.ReadOnly]
		public NativeArray<BoidPosition> followerPositions;

		[Token(Token = "0x40018B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[WriteOnly]
		public NativeArray<float3> followerAccelerations;

		[Token(Token = "0x40018B6")]
		public const float perceptionRadius = 0.001f;

		[Token(Token = "0x6001FFD")]
		[Address(RVA = "0xEE237C", Offset = "0xEE237C", VA = "0xEE237C", Slot = "4")]
		[SkipLocalsInit]
		public void Execute(int index)
		{
		}
	}
	[Token(Token = "0x20004C5")]
	[BurstCompile(CompileSynchronously = true, OptimizeFor = OptimizeFor.Performance)]
	public struct FollowerPositionUpdateJob : IJobParallelFor
	{
		[Token(Token = "0x40018B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[Unity.Collections.ReadOnly]
		public NativeArray<float3> followerVelocities;

		[Token(Token = "0x40018B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[Unity.Collections.ReadOnly]
		public NativeArray<float3> followerAccelerations;

		[Token(Token = "0x40018B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Unity.Collections.ReadOnly]
		public NativeArray<float> velocityToAccelerationRotationBlend;

		[Token(Token = "0x40018BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[Unity.Collections.ReadOnly]
		public float slerpSpeed;

		[Token(Token = "0x40018BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[Unity.Collections.ReadOnly]
		public float3 up;

		[Token(Token = "0x40018BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[Unity.Collections.ReadOnly]
		public quaternion modelRotation;

		[Token(Token = "0x40018BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public NativeArray<BoidPosition> followerPositions;

		[Token(Token = "0x6001FFE")]
		[Address(RVA = "0xEE297C", Offset = "0xEE297C", VA = "0xEE297C", Slot = "4")]
		public void Execute(int index)
		{
		}
	}
	[Token(Token = "0x20004C6")]
	[BurstCompile(CompileSynchronously = true, OptimizeFor = OptimizeFor.Performance)]
	public struct FollowerVelocityUpdateJob : IJobParallelFor
	{
		[Token(Token = "0x40018BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[Unity.Collections.ReadOnly]
		public NativeArray<Leader> leaders;

		[Token(Token = "0x40018BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[Unity.Collections.ReadOnly]
		public NativeArray<Follower> followers;

		[Token(Token = "0x40018C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Unity.Collections.ReadOnly]
		public NativeArray<float3> followerAccelerations;

		[Token(Token = "0x40018C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[Unity.Collections.ReadOnly]
		public float deltaTime;

		[Token(Token = "0x40018C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public NativeArray<float3> followerVelocities;

		[Token(Token = "0x6001FFF")]
		[Address(RVA = "0xEE2E5C", Offset = "0xEE2E5C", VA = "0xEE2E5C", Slot = "4")]
		public void Execute(int index)
		{
		}
	}
	[Token(Token = "0x20004C7")]
	[BurstCompile(CompileSynchronously = true, OptimizeFor = OptimizeFor.Performance)]
	public struct GroupCommonValuesJob : IJobParallelFor
	{
		[Token(Token = "0x40018C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[Unity.Collections.ReadOnly]
		public int followersLength;

		[Token(Token = "0x40018C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[Unity.Collections.ReadOnly]
		public NativeArray<int> followersPerLeaders;

		[Token(Token = "0x40018C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Unity.Collections.ReadOnly]
		public NativeArray<BoidPosition> followerPositions;

		[Token(Token = "0x40018C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Unity.Collections.ReadOnly]
		public NativeArray<float3> followerVelocities;

		[Token(Token = "0x40018C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[WriteOnly]
		public NativeArray<float3> groupAlignment;

		[Token(Token = "0x40018C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[WriteOnly]
		public NativeArray<float3> groupCohesions;

		[Token(Token = "0x6002000")]
		[Address(RVA = "0xEE3048", Offset = "0xEE3048", VA = "0xEE3048", Slot = "4")]
		public void Execute(int index)
		{
		}
	}
	[Token(Token = "0x20004C8")]
	[BurstCompile(CompileSynchronously = true, OptimizeFor = OptimizeFor.Performance)]
	public struct LeaderAccelerationJob : IJobParallelFor
	{
		[Token(Token = "0x40018C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[Unity.Collections.ReadOnly]
		public NativeArray<Leader> leaders;

		[Token(Token = "0x40018CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[Unity.Collections.ReadOnly]
		public NativeArray<float3> leaderTargetPositions;

		[Token(Token = "0x40018CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Unity.Collections.ReadOnly]
		public NativeArray<BoidPosition> leaderPositions;

		[Token(Token = "0x40018CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[WriteOnly]
		public NativeArray<float3> leaderAcceleration;

		[Token(Token = "0x6002001")]
		[Address(RVA = "0xEE3154", Offset = "0xEE3154", VA = "0xEE3154", Slot = "4")]
		public void Execute(int index)
		{
		}
	}
	[Token(Token = "0x20004C9")]
	[BurstCompile(CompileSynchronously = true, OptimizeFor = OptimizeFor.Performance)]
	public struct LeaderPlanningJob : IJobParallelFor
	{
		[Token(Token = "0x40018CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[Unity.Collections.ReadOnly]
		public float deltaTime;

		[Token(Token = "0x40018CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		[Unity.Collections.ReadOnly]
		public Unity.Mathematics.Random random;

		[Token(Token = "0x40018CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[Unity.Collections.ReadOnly]
		public NativeArray<BoidPosition> leaderPositions;

		[Token(Token = "0x40018D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Unity.Collections.ReadOnly]
		public NativeArray<LeaderBounds> leaderBoundsArray;

		[Token(Token = "0x40018D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[WriteOnly]
		public NativeArray<float3> leaderVelocities;

		[Token(Token = "0x40018D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public NativeArray<Leader> leaders;

		[Token(Token = "0x40018D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public NativeArray<float3> leaderTargetPositions;

		[Token(Token = "0x40018D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public NativeArray<float> leaderDelays;

		[Token(Token = "0x40018D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public NativeArray<float2> leaderDelayMinMaxes;

		[Token(Token = "0x40018D6")]
		private const float CLOSEENOUGH = 0.01f;

		[Token(Token = "0x6002002")]
		[Address(RVA = "0xEE3264", Offset = "0xEE3264", VA = "0xEE3264", Slot = "4")]
		public void Execute(int index)
		{
		}
	}
	[Token(Token = "0x20004CA")]
	[BurstCompile(CompileSynchronously = true, OptimizeFor = OptimizeFor.Performance)]
	public struct LeaderPositionUpdateJob : IJobParallelFor
	{
		[Token(Token = "0x40018D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[Unity.Collections.ReadOnly]
		public NativeArray<float3> leaderVelocities;

		[Token(Token = "0x40018D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[Unity.Collections.ReadOnly]
		public NativeArray<float3> leaderTargetPositions;

		[Token(Token = "0x40018D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public NativeArray<BoidPosition> leaderPositions;

		[Token(Token = "0x6002003")]
		[Address(RVA = "0xEE391C", Offset = "0xEE391C", VA = "0xEE391C", Slot = "4")]
		public void Execute(int index)
		{
		}
	}
	[Token(Token = "0x20004CB")]
	[BurstCompile(CompileSynchronously = true, OptimizeFor = OptimizeFor.Performance)]
	public struct LeaderVelocityUpdateJob : IJobParallelFor
	{
		[Token(Token = "0x40018DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[Unity.Collections.ReadOnly]
		public float deltaTime;

		[Token(Token = "0x40018DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[Unity.Collections.ReadOnly]
		public NativeArray<Leader> leaders;

		[Token(Token = "0x40018DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Unity.Collections.ReadOnly]
		public NativeArray<float3> leaderAcceleration;

		[Token(Token = "0x40018DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public NativeArray<float3> leaderVelocities;

		[Token(Token = "0x6002004")]
		[Address(RVA = "0xEE3C88", Offset = "0xEE3C88", VA = "0xEE3C88", Slot = "4")]
		public void Execute(int index)
		{
		}
	}
	[Token(Token = "0x20004CC")]
	[BurstCompile(CompileSynchronously = true, OptimizeFor = OptimizeFor.Performance)]
	public struct MatrixUpdateJob : IJobParallelFor
	{
		[Token(Token = "0x40018DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[Unity.Collections.ReadOnly]
		public NativeArray<BoidPosition> followerPositions;

		[Token(Token = "0x40018DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[Unity.Collections.ReadOnly]
		public NativeArray<Follower> followers;

		[Token(Token = "0x40018E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[WriteOnly]
		public NativeArray<float4x4> writeMatrix;

		[Token(Token = "0x6002005")]
		[Address(RVA = "0xEE3E0C", Offset = "0xEE3E0C", VA = "0xEE3E0C", Slot = "4")]
		public void Execute(int i)
		{
		}
	}
	[Token(Token = "0x20004CD")]
	public class JobScheduleUpdate : MonoBehaviour
	{
		[Token(Token = "0x40018E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[HideInInspector]
		public static Action onEarlyUpdate;

		[Token(Token = "0x40018E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static bool hasCustomPlayerLoop;

		[Token(Token = "0x40018E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private PlayerLoopSystem previousPlayerLoopSystemList;

		[Token(Token = "0x6002006")]
		[Address(RVA = "0xEE3F38", Offset = "0xEE3F38", VA = "0xEE3F38")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002007")]
		[Address(RVA = "0xEE42AC", Offset = "0xEE42AC", VA = "0xEE42AC")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6002008")]
		[Address(RVA = "0xEE3F3C", Offset = "0xEE3F3C", VA = "0xEE3F3C")]
		private void SetupEarlyUpdatePlayerLoopStep()
		{
		}

		[Token(Token = "0x6002009")]
		[Address(RVA = "0xEE42E0", Offset = "0xEE42E0", VA = "0xEE42E0")]
		private void RemoveEarlyUpdatePlayerLoopStep()
		{
		}

		[Token(Token = "0x600200A")]
		[Address(RVA = "0xEE4314", Offset = "0xEE4314", VA = "0xEE4314")]
		public JobScheduleUpdate()
		{
		}
	}
	[Token(Token = "0x20004CE")]
	public struct JobScheduleUpdateStep
	{
		[Token(Token = "0x600200B")]
		[Address(RVA = "0xEE431C", Offset = "0xEE431C", VA = "0xEE431C")]
		public static PlayerLoopSystem GetNewSystem()
		{
			return default(PlayerLoopSystem);
		}

		[Token(Token = "0x600200C")]
		[Address(RVA = "0xEE4408", Offset = "0xEE4408", VA = "0xEE4408")]
		public static void UpdateFunction()
		{
		}
	}
}
namespace Mighty.Tools
{
	[Serializable]
	[Token(Token = "0x20004CF")]
	public class Data
	{
		[Token(Token = "0x40018E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int id;

		[Token(Token = "0x40018E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private bool _selected;

		[Token(Token = "0x170003F5")]
		public virtual string name
		{
			[Token(Token = "0x6002011")]
			[Address(RVA = "0xEE472C", Offset = "0xEE472C", VA = "0xEE472C", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003F6")]
		public bool selected
		{
			[Token(Token = "0x6002012")]
			[Address(RVA = "0xEE476C", Offset = "0xEE476C", VA = "0xEE476C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002013")]
			[Address(RVA = "0xEE4774", Offset = "0xEE4774", VA = "0xEE4774")]
			set
			{
			}
		}

		[Token(Token = "0x1400006B")]
		public event Action<Data> OnSelected
		{
			[Token(Token = "0x600200D")]
			[Address(RVA = "0xEE446C", Offset = "0xEE446C", VA = "0xEE446C")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x600200E")]
			[Address(RVA = "0xEE451C", Offset = "0xEE451C", VA = "0xEE451C")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x1400006C")]
		public event Action<Data> OnDeselected
		{
			[Token(Token = "0x600200F")]
			[Address(RVA = "0xEE45CC", Offset = "0xEE45CC", VA = "0xEE45CC")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6002010")]
			[Address(RVA = "0xEE467C", Offset = "0xEE467C", VA = "0xEE467C")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x6002014")]
		public T Clone<T>() where T : Data
		{
			return null;
		}

		[Token(Token = "0x6002015")]
		[Address(RVA = "0xEE47BC", Offset = "0xEE47BC", VA = "0xEE47BC", Slot = "5")]
		public virtual Data Clone()
		{
			return null;
		}

		[Token(Token = "0x6002016")]
		[Address(RVA = "0xEE4820", Offset = "0xEE4820", VA = "0xEE4820")]
		public Data()
		{
		}
	}
	[Token(Token = "0x20004D1")]
	public class DataList
	{
		[Token(Token = "0x40018EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x40018EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool quiet;

		[Token(Token = "0x40018F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Vector2 scroll;

		[Token(Token = "0x170003F7")]
		public List<Data> list
		{
			[Token(Token = "0x600201B")]
			[Address(RVA = "0xEE49F4", Offset = "0xEE49F4", VA = "0xEE49F4")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x600201C")]
			[Address(RVA = "0xEE49FC", Offset = "0xEE49FC", VA = "0xEE49FC")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x170003F8")]
		public int Count
		{
			[Token(Token = "0x6002027")]
			[Address(RVA = "0xEE52E8", Offset = "0xEE52E8", VA = "0xEE52E8")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170003F9")]
		public string[] names
		{
			[Token(Token = "0x600202D")]
			[Address(RVA = "0xEE59B4", Offset = "0xEE59B4", VA = "0xEE59B4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003FA")]
		public Data this[int i]
		{
			[Token(Token = "0x600202E")]
			[Address(RVA = "0xEE5ACC", Offset = "0xEE5ACC", VA = "0xEE5ACC")]
			get
			{
				return null;
			}
			[Token(Token = "0x600202F")]
			[Address(RVA = "0xEE5B24", Offset = "0xEE5B24", VA = "0xEE5B24")]
			set
			{
			}
		}

		[Token(Token = "0x1400006D")]
		public event Action<Data> OnSelect
		{
			[Token(Token = "0x600201D")]
			[Address(RVA = "0xEE4A04", Offset = "0xEE4A04", VA = "0xEE4A04")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x600201E")]
			[Address(RVA = "0xEE4AB4", Offset = "0xEE4AB4", VA = "0xEE4AB4")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x1400006E")]
		public event Action<Data> OnDeselect
		{
			[Token(Token = "0x600201F")]
			[Address(RVA = "0xEE4B64", Offset = "0xEE4B64", VA = "0xEE4B64")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6002020")]
			[Address(RVA = "0xEE4C14", Offset = "0xEE4C14", VA = "0xEE4C14")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x6002021")]
		[Address(RVA = "0xEE4CC4", Offset = "0xEE4CC4", VA = "0xEE4CC4")]
		public DataList()
		{
		}

		[Token(Token = "0x6002022")]
		[Address(RVA = "0xEE4EA4", Offset = "0xEE4EA4", VA = "0xEE4EA4")]
		public void Add(Data data)
		{
		}

		[Token(Token = "0x6002023")]
		[Address(RVA = "0xEE4FF0", Offset = "0xEE4FF0", VA = "0xEE4FF0")]
		public void Sort(Comparison<Data> comparison)
		{
		}

		[Token(Token = "0x6002024")]
		[Address(RVA = "0xEE50D8", Offset = "0xEE50D8", VA = "0xEE50D8")]
		public void SortByName()
		{
		}

		[Token(Token = "0x6002025")]
		[Address(RVA = "0xEE51E0", Offset = "0xEE51E0", VA = "0xEE51E0")]
		public void SortById()
		{
		}

		[Token(Token = "0x6002026")]
		[Address(RVA = "0xEE5050", Offset = "0xEE5050", VA = "0xEE5050")]
		public void SetIds()
		{
		}

		[Token(Token = "0x6002028")]
		[Address(RVA = "0xEE5330", Offset = "0xEE5330", VA = "0xEE5330")]
		public void Clear()
		{
		}

		[Token(Token = "0x6002029")]
		[Address(RVA = "0xEE54B4", Offset = "0xEE54B4", VA = "0xEE54B4")]
		public void Select(int i, bool _quiet = false)
		{
		}

		[Token(Token = "0x600202A")]
		[Address(RVA = "0xEE5578", Offset = "0xEE5578", VA = "0xEE5578")]
		public void Deselect(int i, bool _quiet = false)
		{
		}

		[Token(Token = "0x600202B")]
		[Address(RVA = "0xEE5634", Offset = "0xEE5634", VA = "0xEE5634")]
		public List<Data> GetSelected()
		{
			return null;
		}

		[Token(Token = "0x600202C")]
		[Address(RVA = "0xEE5840", Offset = "0xEE5840", VA = "0xEE5840")]
		public void Deselect()
		{
		}

		[Token(Token = "0x6002030")]
		public T Get<T>(int i) where T : Data
		{
			return null;
		}

		[Token(Token = "0x6002031")]
		[Address(RVA = "0xEE5B8C", Offset = "0xEE5B8C", VA = "0xEE5B8C")]
		public List<Data> ToList()
		{
			return null;
		}

		[Token(Token = "0x6002032")]
		[Address(RVA = "0xEE5C24", Offset = "0xEE5C24", VA = "0xEE5C24")]
		private void _OnSelect(Data data)
		{
		}

		[Token(Token = "0x6002033")]
		[Address(RVA = "0xEE5C48", Offset = "0xEE5C48", VA = "0xEE5C48")]
		private void _OnDeselect(Data data)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20004D3")]
	public class MaterialData : Data
	{
		[Token(Token = "0x40018F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Material material;

		[Token(Token = "0x40018F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int queue;

		[Token(Token = "0x40018F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public int strata;

		[Token(Token = "0x40018F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool runtime;

		[Token(Token = "0x170003FB")]
		public override string name
		{
			[Token(Token = "0x600203B")]
			[Address(RVA = "0xEE5DA4", Offset = "0xEE5DA4", VA = "0xEE5DA4", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003FC")]
		public bool IsStrata
		{
			[Token(Token = "0x600203C")]
			[Address(RVA = "0xEE5E40", Offset = "0xEE5E40", VA = "0xEE5E40")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170003FD")]
		public string display_name
		{
			[Token(Token = "0x600203D")]
			[Address(RVA = "0xEE5E50", Offset = "0xEE5E50", VA = "0xEE5E50")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003FE")]
		public bool HasMaterial
		{
			[Token(Token = "0x6002041")]
			[Address(RVA = "0xEE60A8", Offset = "0xEE60A8", VA = "0xEE60A8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600203A")]
		[Address(RVA = "0xEE5D60", Offset = "0xEE5D60", VA = "0xEE5D60")]
		public MaterialData(Material _material)
		{
		}

		[Token(Token = "0x600203E")]
		[Address(RVA = "0xEE5EF8", Offset = "0xEE5EF8", VA = "0xEE5EF8")]
		public bool RefreshQueue()
		{
			return default(bool);
		}

		[Token(Token = "0x600203F")]
		[Address(RVA = "0xEE5FA8", Offset = "0xEE5FA8", VA = "0xEE5FA8")]
		public bool ApplyQueue()
		{
			return default(bool);
		}

		[Token(Token = "0x6002040")]
		[Address(RVA = "0xEE603C", Offset = "0xEE603C", VA = "0xEE603C", Slot = "5")]
		public override Data Clone()
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x20004D4")]
	public class MaterialGroup
	{
		[Token(Token = "0x40018FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int id;

		[Token(Token = "0x40018FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string name;

		[Token(Token = "0x40018FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<MaterialData> materials;

		[Token(Token = "0x40018FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<Material> runtime;

		[Token(Token = "0x170003FF")]
		public Material source
		{
			[Token(Token = "0x6002044")]
			[Address(RVA = "0xEE638C", Offset = "0xEE638C", VA = "0xEE638C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000400")]
		public MaterialData this[int i]
		{
			[Token(Token = "0x6002049")]
			[Address(RVA = "0xEE6A9C", Offset = "0xEE6A9C", VA = "0xEE6A9C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002042")]
		[Address(RVA = "0xEE6108", Offset = "0xEE6108", VA = "0xEE6108")]
		public MaterialGroup()
		{
		}

		[Token(Token = "0x6002043")]
		[Address(RVA = "0xEE61D0", Offset = "0xEE61D0", VA = "0xEE61D0")]
		public MaterialGroup(MaterialData data)
		{
		}

		[Token(Token = "0x6002045")]
		[Address(RVA = "0xEE6408", Offset = "0xEE6408", VA = "0xEE6408")]
		public void DestroyRuntimeMaterials()
		{
		}

		[Token(Token = "0x6002046")]
		[Address(RVA = "0xEE66FC", Offset = "0xEE66FC", VA = "0xEE66FC")]
		public void CreateRuntimeMaterials()
		{
		}

		[Token(Token = "0x6002047")]
		[Address(RVA = "0xEE6984", Offset = "0xEE6984", VA = "0xEE6984")]
		public void Add(MaterialData data)
		{
		}

		[Token(Token = "0x6002048")]
		[Address(RVA = "0xEE6A2C", Offset = "0xEE6A2C", VA = "0xEE6A2C")]
		public void Clear()
		{
		}

		[Token(Token = "0x600204A")]
		[Address(RVA = "0xEE6AF4", Offset = "0xEE6AF4", VA = "0xEE6AF4")]
		public void SortByQueue()
		{
		}

		[Token(Token = "0x600204B")]
		[Address(RVA = "0xEE6C50", Offset = "0xEE6C50", VA = "0xEE6C50")]
		public bool Validate()
		{
			return default(bool);
		}

		[Token(Token = "0x600204C")]
		[Address(RVA = "0xEE6FC8", Offset = "0xEE6FC8", VA = "0xEE6FC8")]
		public bool ValidMaterial(int index)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20004D6")]
	public class MaterialList
	{
		[Token(Token = "0x4001902")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MaterialData selected;

		[Token(Token = "0x4001903")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector2 scroll;

		[Token(Token = "0x17000401")]
		public List<MaterialData> list
		{
			[Token(Token = "0x6002050")]
			[Address(RVA = "0xEE70BC", Offset = "0xEE70BC", VA = "0xEE70BC")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6002051")]
			[Address(RVA = "0xEE70C4", Offset = "0xEE70C4", VA = "0xEE70C4")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000402")]
		public Dictionary<Material, bool> index
		{
			[Token(Token = "0x6002052")]
			[Address(RVA = "0xEE70CC", Offset = "0xEE70CC", VA = "0xEE70CC")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6002053")]
			[Address(RVA = "0xEE70D4", Offset = "0xEE70D4", VA = "0xEE70D4")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000403")]
		public int Count
		{
			[Token(Token = "0x6002059")]
			[Address(RVA = "0xEE7730", Offset = "0xEE7730", VA = "0xEE7730")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000404")]
		public bool HasSelected
		{
			[Token(Token = "0x6002069")]
			[Address(RVA = "0xEE7FB0", Offset = "0xEE7FB0", VA = "0xEE7FB0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000405")]
		public MaterialData this[int i]
		{
			[Token(Token = "0x6002074")]
			[Address(RVA = "0xEE8DC4", Offset = "0xEE8DC4", VA = "0xEE8DC4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002075")]
			[Address(RVA = "0xEE8E1C", Offset = "0xEE8E1C", VA = "0xEE8E1C")]
			set
			{
			}
		}

		[Token(Token = "0x6002054")]
		[Address(RVA = "0xEE70DC", Offset = "0xEE70DC", VA = "0xEE70DC")]
		public MaterialList()
		{
		}

		[Token(Token = "0x6002055")]
		[Address(RVA = "0xEE71D8", Offset = "0xEE71D8", VA = "0xEE71D8")]
		public void Add(MaterialData data)
		{
		}

		[Token(Token = "0x6002056")]
		[Address(RVA = "0xEE7328", Offset = "0xEE7328", VA = "0xEE7328")]
		public void Add(List<MaterialData> list)
		{
		}

		[Token(Token = "0x6002057")]
		[Address(RVA = "0xEE7464", Offset = "0xEE7464", VA = "0xEE7464")]
		public void Remove(MaterialData data, bool index = true)
		{
		}

		[Token(Token = "0x6002058")]
		[Address(RVA = "0xEE75E0", Offset = "0xEE75E0", VA = "0xEE75E0")]
		public void Remove(List<MaterialData> data, bool index = true)
		{
		}

		[Token(Token = "0x600205A")]
		[Address(RVA = "0xEE7778", Offset = "0xEE7778", VA = "0xEE7778")]
		public void Clear()
		{
		}

		[Token(Token = "0x600205B")]
		[Address(RVA = "0xEE7510", Offset = "0xEE7510", VA = "0xEE7510")]
		public void Index()
		{
		}

		[Token(Token = "0x600205C")]
		[Address(RVA = "0xEE7284", Offset = "0xEE7284", VA = "0xEE7284")]
		private void Index(MaterialData data)
		{
		}

		[Token(Token = "0x600205D")]
		[Address(RVA = "0xEE7808", Offset = "0xEE7808", VA = "0xEE7808")]
		public bool CanIndex(MaterialData data)
		{
			return default(bool);
		}

		[Token(Token = "0x600205E")]
		[Address(RVA = "0xEE781C", Offset = "0xEE781C", VA = "0xEE781C")]
		public bool Contains(Material material)
		{
			return default(bool);
		}

		[Token(Token = "0x600205F")]
		[Address(RVA = "0xEE7874", Offset = "0xEE7874", VA = "0xEE7874")]
		public void Sort(Comparison<MaterialData> comparison)
		{
		}

		[Token(Token = "0x6002060")]
		[Address(RVA = "0xEE78CC", Offset = "0xEE78CC", VA = "0xEE78CC")]
		public void SortByName()
		{
		}

		[Token(Token = "0x6002061")]
		[Address(RVA = "0xEE79CC", Offset = "0xEE79CC", VA = "0xEE79CC")]
		public void SortById()
		{
		}

		[Token(Token = "0x6002062")]
		[Address(RVA = "0xEE7ACC", Offset = "0xEE7ACC", VA = "0xEE7ACC")]
		public void SortByQueue()
		{
		}

		[Token(Token = "0x6002063")]
		[Address(RVA = "0xEE7BCC", Offset = "0xEE7BCC", VA = "0xEE7BCC")]
		public void SetIds()
		{
		}

		[Token(Token = "0x6002064")]
		[Address(RVA = "0xEE7C54", Offset = "0xEE7C54", VA = "0xEE7C54")]
		public void Select(int i)
		{
		}

		[Token(Token = "0x6002065")]
		[Address(RVA = "0xEE7CE4", Offset = "0xEE7CE4", VA = "0xEE7CE4")]
		public void Select(MaterialData data)
		{
		}

		[Token(Token = "0x6002066")]
		[Address(RVA = "0xEE7EB4", Offset = "0xEE7EB4", VA = "0xEE7EB4")]
		public void ToggleSelect(MaterialData data)
		{
		}

		[Token(Token = "0x6002067")]
		[Address(RVA = "0xEE7F00", Offset = "0xEE7F00", VA = "0xEE7F00")]
		public void Deselect(int i)
		{
		}

		[Token(Token = "0x6002068")]
		[Address(RVA = "0xEE7D48", Offset = "0xEE7D48", VA = "0xEE7D48")]
		public void DeselectAll()
		{
		}

		[Token(Token = "0x600206A")]
		[Address(RVA = "0xEE7FC0", Offset = "0xEE7FC0", VA = "0xEE7FC0")]
		public List<MaterialData> GetSelected()
		{
			return null;
		}

		[Token(Token = "0x600206B")]
		[Address(RVA = "0xEE81CC", Offset = "0xEE81CC", VA = "0xEE81CC")]
		public List<MaterialData> GetStrataMaterials()
		{
			return null;
		}

		[Token(Token = "0x600206C")]
		[Address(RVA = "0xEE83E0", Offset = "0xEE83E0", VA = "0xEE83E0")]
		public void RemoveDataUsingMaterials(Dictionary<Material, bool> materials, bool skipStrata = true)
		{
		}

		[Token(Token = "0x600206D")]
		[Address(RVA = "0xEE8550", Offset = "0xEE8550", VA = "0xEE8550")]
		public List<MaterialData> FindDataUsing(Dictionary<Material, bool> materials, bool skipStrata = true)
		{
			return null;
		}

		[Token(Token = "0x600206E")]
		[Address(RVA = "0xEE86E8", Offset = "0xEE86E8", VA = "0xEE86E8")]
		public bool StrataStillValid(MaterialData m)
		{
			return default(bool);
		}

		[Token(Token = "0x600206F")]
		[Address(RVA = "0xEE8738", Offset = "0xEE8738", VA = "0xEE8738")]
		public List<MaterialData> AddStrata(MaterialData data, int count = 2)
		{
			return null;
		}

		[Token(Token = "0x6002070")]
		[Address(RVA = "0xEE8844", Offset = "0xEE8844", VA = "0xEE8844")]
		public List<MaterialData> CreateStrata(MaterialData data, int generate = 2)
		{
			return null;
		}

		[Token(Token = "0x6002071")]
		[Address(RVA = "0xEE8A60", Offset = "0xEE8A60", VA = "0xEE8A60")]
		public void RemoveStrata(MaterialData data)
		{
		}

		[Token(Token = "0x6002072")]
		[Address(RVA = "0xEE8B48", Offset = "0xEE8B48", VA = "0xEE8B48")]
		public List<MaterialData> FindStrata(MaterialData data)
		{
			return null;
		}

		[Token(Token = "0x6002073")]
		[Address(RVA = "0xEE8B60", Offset = "0xEE8B60", VA = "0xEE8B60")]
		public List<MaterialData> FindStrata(Material material)
		{
			return null;
		}

		[Token(Token = "0x6002076")]
		[Address(RVA = "0xEE8E84", Offset = "0xEE8E84", VA = "0xEE8E84")]
		public string[] GetMaterialNames()
		{
			return null;
		}

		[Token(Token = "0x6002077")]
		[Address(RVA = "0xEE8F9C", Offset = "0xEE8F9C", VA = "0xEE8F9C")]
		public List<Data> ToDataList()
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x20004D8")]
	public class RendererData : Data
	{
		[Token(Token = "0x4001908")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Renderer renderer;

		[Token(Token = "0x4001909")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Collider collider;

		[Token(Token = "0x400190A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Material material;

		[Token(Token = "0x400190B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int group;

		[Token(Token = "0x400190C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public byte depth;

		[Token(Token = "0x400190D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public List<Renderer> lods;

		[Token(Token = "0x400190E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public int[] lods_groups;

		[Token(Token = "0x17000406")]
		public override string name
		{
			[Token(Token = "0x6002080")]
			[Address(RVA = "0xEE92C4", Offset = "0xEE92C4", VA = "0xEE92C4", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000407")]
		public bool HasCollider
		{
			[Token(Token = "0x6002081")]
			[Address(RVA = "0xEE9360", Offset = "0xEE9360", VA = "0xEE9360")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000408")]
		public bool HasLODS
		{
			[Token(Token = "0x6002082")]
			[Address(RVA = "0xEE93C0", Offset = "0xEE93C0", VA = "0xEE93C0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000409")]
		public bool HasLODSGroups
		{
			[Token(Token = "0x6002083")]
			[Address(RVA = "0xEE9414", Offset = "0xEE9414", VA = "0xEE9414")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700040A")]
		public bool inactive
		{
			[Token(Token = "0x6002084")]
			[Address(RVA = "0xEE9424", Offset = "0xEE9424", VA = "0xEE9424")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600207D")]
		[Address(RVA = "0xEE9148", Offset = "0xEE9148", VA = "0xEE9148")]
		public RendererData(Renderer _renderer)
		{
		}

		[Token(Token = "0x600207E")]
		[Address(RVA = "0xEE91C8", Offset = "0xEE91C8", VA = "0xEE91C8")]
		public RendererData()
		{
		}

		[Token(Token = "0x600207F")]
		[Address(RVA = "0xEE91D4", Offset = "0xEE91D4", VA = "0xEE91D4")]
		public bool Matches(RendererData other)
		{
			return default(bool);
		}

		[Token(Token = "0x6002085")]
		[Address(RVA = "0xEE9458", Offset = "0xEE9458", VA = "0xEE9458")]
		public Renderer getActiveLOD()
		{
			return null;
		}

		[Token(Token = "0x6002086")]
		[Address(RVA = "0xEE966C", Offset = "0xEE966C", VA = "0xEE966C")]
		public void RestoreLODS(MaterialSortMaterials materials)
		{
		}

		[Token(Token = "0x6002087")]
		[Address(RVA = "0xEE998C", Offset = "0xEE998C", VA = "0xEE998C")]
		public void UpdateLODS(MaterialSortMaterials materials, byte depth, bool preview)
		{
		}

		[Token(Token = "0x6002088")]
		[Address(RVA = "0xEE9910", Offset = "0xEE9910", VA = "0xEE9910")]
		public int getLODMaterialGroup(int i)
		{
			return default(int);
		}

		[Token(Token = "0x6002089")]
		[Address(RVA = "0xEE9C1C", Offset = "0xEE9C1C", VA = "0xEE9C1C", Slot = "5")]
		public override Data Clone()
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x20004D9")]
	public class SceneData : Data
	{
		[Token(Token = "0x400190F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public DataList renderers;

		[Token(Token = "0x4001910")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public DataList materials;

		[Token(Token = "0x4001911")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool requireColliders;

		[Token(Token = "0x4001912")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Scene scene;

		[Token(Token = "0x1700040B")]
		public static Scene Active
		{
			[Token(Token = "0x6002090")]
			[Address(RVA = "0xEE9D54", Offset = "0xEE9D54", VA = "0xEE9D54")]
			get
			{
				return default(Scene);
			}
		}

		[Token(Token = "0x1700040C")]
		public bool StillActive
		{
			[Token(Token = "0x6002091")]
			[Address(RVA = "0xEEA140", Offset = "0xEEA140", VA = "0xEEA140")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700040D")]
		public int materialsCount
		{
			[Token(Token = "0x6002092")]
			[Address(RVA = "0xEEA160", Offset = "0xEEA160", VA = "0xEEA160")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700040E")]
		public int rendererCount
		{
			[Token(Token = "0x6002093")]
			[Address(RVA = "0xEEA170", Offset = "0xEEA170", VA = "0xEEA170")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x600208A")]
		[Address(RVA = "0xEE9C88", Offset = "0xEE9C88", VA = "0xEE9C88")]
		public SceneData(bool _renders = false, bool _materials = false, bool _requireColliders = false)
		{
		}

		[Token(Token = "0x600208B")]
		[Address(RVA = "0xEEA114", Offset = "0xEEA114", VA = "0xEEA114")]
		public void Clear()
		{
		}

		[Token(Token = "0x600208C")]
		[Address(RVA = "0xEE9DAC", Offset = "0xEE9DAC", VA = "0xEE9DAC")]
		public DataList GetRendererData()
		{
			return null;
		}

		[Token(Token = "0x600208D")]
		[Address(RVA = "0xEE9EF4", Offset = "0xEE9EF4", VA = "0xEE9EF4")]
		public DataList GetMaterialData([Optional] DataList _renderers)
		{
			return null;
		}

		[Token(Token = "0x600208E")]
		public List<T> GetComponents<T>(bool includeInactive = true)
		{
			return null;
		}

		[Token(Token = "0x600208F")]
		public T GetComponent<T>(bool includeInactive = true) where T : MonoBehaviour
		{
			return null;
		}

		[Token(Token = "0x6002094")]
		[Address(RVA = "0xEEA180", Offset = "0xEEA180", VA = "0xEEA180")]
		public void PrintMaterials()
		{
		}

		[Token(Token = "0x6002095")]
		[Address(RVA = "0xEEA288", Offset = "0xEEA288", VA = "0xEEA288")]
		public void PrintRenderers()
		{
		}

		[Token(Token = "0x6002096")]
		[Address(RVA = "0xEEA390", Offset = "0xEEA390", VA = "0xEEA390", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x20004DA")]
	public class ModelAnalyzer : MonoBehaviour
	{
		[Token(Token = "0x4001913")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public float lineThickness;

		[Token(Token = "0x4001914")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[HideInInspector]
		public float sphereRadius;

		[Token(Token = "0x4001915")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public float initStatus;

		[Token(Token = "0x4001916")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[HideInInspector]
		public float slowRollThreshold;

		[Token(Token = "0x4001917")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public float densityThreshold;

		[Token(Token = "0x4001918")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[HideInInspector]
		public float densityMax;

		[Token(Token = "0x4001919")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public float initProgress;

		[Token(Token = "0x400191A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[HideInInspector]
		public bool showHeightDelta;

		[Token(Token = "0x400191B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
		[HideInInspector]
		public bool showVertices;

		[Token(Token = "0x400191C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x36")]
		[HideInInspector]
		public bool showEdges;

		[Token(Token = "0x400191D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x37")]
		[HideInInspector]
		public bool initializing;

		[Token(Token = "0x400191E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		public MeshFilter meshFilter;

		[Token(Token = "0x400191F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public string meshName;

		[Token(Token = "0x4001920")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Vector3[] meshPoints;

		[Token(Token = "0x4001921")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private int[] triangles;

		[Token(Token = "0x4001922")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private float[] minMaxHeight;

		[Token(Token = "0x4001923")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Dictionary<string, ModelLine> lines;

		[Token(Token = "0x4001924")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private List<ModelVertex> vertices;

		[Token(Token = "0x4001925")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private int initLoadStep;

		[Token(Token = "0x6002097")]
		[Address(RVA = "0xEEA478", Offset = "0xEEA478", VA = "0xEEA478")]
		public ModelAnalyzer()
		{
		}
	}
	[Token(Token = "0x20004DB")]
	public struct ModelLine
	{
		[Token(Token = "0x4001926")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 p1;

		[Token(Token = "0x4001927")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Vector3 p2;

		[Token(Token = "0x4001928")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Color color;

		[Token(Token = "0x4001929")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float delta;
	}
	[Token(Token = "0x20004DC")]
	public class ModelVertex
	{
		[Token(Token = "0x400192A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 point;

		[Token(Token = "0x400192B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Color color;

		[Token(Token = "0x400192C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int density;

		[Token(Token = "0x6002098")]
		[Address(RVA = "0xEEA4B0", Offset = "0xEEA4B0", VA = "0xEEA4B0")]
		public ModelVertex()
		{
		}
	}
}
