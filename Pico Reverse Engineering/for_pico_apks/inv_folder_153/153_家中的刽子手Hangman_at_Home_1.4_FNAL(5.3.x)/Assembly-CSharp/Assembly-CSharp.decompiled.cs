using System;
using System.Collections;
using System.Collections.Generic;
using System.Diagnostics;
using System.IO;
using System.Net;
using System.Net.Sockets;
using System.Reflection;
using System.Runtime.InteropServices;
using System.Runtime.Serialization;
using System.Runtime.Serialization.Formatters.Binary;
using System.Threading;
using System.Timers;
using System.Xml.Linq;
using AK.Wwise;
using DG.Tweening;
using DG.Tweening.Core;
using DG.Tweening.Plugins.Options;
using Il2CppDummyDll;
using Oculus.Spatializer.Propagation;
using Sirenix.OdinInspector;
using StudioNyx.Network;
using TMPro;
using UnityEngine;
using UnityEngine.AI;
using UnityEngine.Audio;
using UnityEngine.Events;
using UnityEngine.Networking;
using UnityEngine.Playables;
using UnityEngine.Rendering;
using UnityEngine.SceneManagement;
using UnityEngine.Timeline;
using UnityEngine.UI;
using UnityEngine.Video;
using UnityEngine.XR;

[assembly: AssemblyVersion("0.0.0.0")]
[Serializable]
[Token(Token = "0x2000002")]
public class LightControlBehaviour : PlayableBehaviour
{
	[Token(Token = "0x4000001")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Color color;

	[Token(Token = "0x4000002")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float intensity;

	[Token(Token = "0x4000003")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float bounceIntensity;

	[Token(Token = "0x4000004")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float range;

	[Token(Token = "0x6000001")]
	[Address(RVA = "0x97BEE0", Offset = "0x97BEE0", VA = "0x97BEE0")]
	public LightControlBehaviour()
	{
	}
}
[Serializable]
[Token(Token = "0x2000003")]
public class LightControlClip : PlayableAsset, ITimelineClipAsset
{
	[Token(Token = "0x4000005")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LightControlBehaviour template;

	[Token(Token = "0x17000001")]
	public ClipCaps clipCaps
	{
		[Token(Token = "0x6000002")]
		[Address(RVA = "0x97BF24", Offset = "0x97BF24", VA = "0x97BF24", Slot = "9")]
		get
		{
			return default(ClipCaps);
		}
	}

	[Token(Token = "0x6000003")]
	[Address(RVA = "0x97BF2C", Offset = "0x97BF2C", VA = "0x97BF2C", Slot = "6")]
	public override Playable CreatePlayable(PlayableGraph graph, GameObject owner)
	{
		return default(Playable);
	}

	[Token(Token = "0x6000004")]
	[Address(RVA = "0x97BFCC", Offset = "0x97BFCC", VA = "0x97BFCC")]
	public LightControlClip()
	{
	}
}
[Token(Token = "0x2000004")]
public class LightControlMixerBehaviour : PlayableBehaviour
{
	[Token(Token = "0x4000006")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Color m_DefaultColor;

	[Token(Token = "0x4000007")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float m_DefaultIntensity;

	[Token(Token = "0x4000008")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float m_DefaultBounceIntensity;

	[Token(Token = "0x4000009")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float m_DefaultRange;

	[Token(Token = "0x400000A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Light m_TrackBinding;

	[Token(Token = "0x400000B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool m_FirstFrameHappened;

	[Token(Token = "0x6000005")]
	[Address(RVA = "0x97C030", Offset = "0x97C030", VA = "0x97C030", Slot = "20")]
	public override void ProcessFrame(Playable playable, FrameData info, object playerData)
	{
	}

	[Token(Token = "0x6000006")]
	[Address(RVA = "0x97C3FC", Offset = "0x97C3FC", VA = "0x97C3FC", Slot = "16")]
	public override void OnPlayableDestroy(Playable playable)
	{
	}

	[Token(Token = "0x6000007")]
	[Address(RVA = "0x97C4D8", Offset = "0x97C4D8", VA = "0x97C4D8")]
	public LightControlMixerBehaviour()
	{
	}
}
[Token(Token = "0x2000005")]
[AttributeAttribute(Name = "TrackColorAttribute", RVA = "0x6FF70C", Offset = "0x6FF70C")]
[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0x6FF70C", Offset = "0x6FF70C")]
[AttributeAttribute(Name = "TrackBindingTypeAttribute", RVA = "0x6FF70C", Offset = "0x6FF70C")]
public class LightControlTrack : TrackAsset
{
	[Token(Token = "0x6000008")]
	[Address(RVA = "0x97C4E0", Offset = "0x97C4E0", VA = "0x97C4E0", Slot = "24")]
	public override Playable CreateTrackMixer(PlayableGraph graph, GameObject go, int inputCount)
	{
		return default(Playable);
	}

	[Token(Token = "0x6000009")]
	[Address(RVA = "0x97C578", Offset = "0x97C578", VA = "0x97C578", Slot = "29")]
	public override void GatherProperties(PlayableDirector director, IPropertyCollector driver)
	{
	}

	[Token(Token = "0x600000A")]
	[Address(RVA = "0x97C580", Offset = "0x97C580", VA = "0x97C580")]
	public LightControlTrack()
	{
	}
}
[Serializable]
[Token(Token = "0x2000006")]
public class NavMeshAgentControlBehaviour : PlayableBehaviour
{
	[Token(Token = "0x400000C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Transform destination;

	[Token(Token = "0x400000D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool destinationSet;

	[Token(Token = "0x600000B")]
	[Address(RVA = "0xACE37C", Offset = "0xACE37C", VA = "0xACE37C", Slot = "15")]
	public override void OnPlayableCreate(Playable playable)
	{
	}

	[Token(Token = "0x600000C")]
	[Address(RVA = "0xACE384", Offset = "0xACE384", VA = "0xACE384")]
	public NavMeshAgentControlBehaviour()
	{
	}
}
[Serializable]
[Token(Token = "0x2000007")]
public class NavMeshAgentControlClip : PlayableAsset, ITimelineClipAsset
{
	[Token(Token = "0x400000E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ExposedReference<Transform> destination;

	[Token(Token = "0x400000F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public NavMeshAgentControlBehaviour template;

	[Token(Token = "0x17000002")]
	public ClipCaps clipCaps
	{
		[Token(Token = "0x600000D")]
		[Address(RVA = "0xACE38C", Offset = "0xACE38C", VA = "0xACE38C", Slot = "9")]
		get
		{
			return default(ClipCaps);
		}
	}

	[Token(Token = "0x600000E")]
	[Address(RVA = "0xACE394", Offset = "0xACE394", VA = "0xACE394", Slot = "6")]
	public override Playable CreatePlayable(PlayableGraph graph, GameObject owner)
	{
		return default(Playable);
	}

	[Token(Token = "0x600000F")]
	[Address(RVA = "0xACE4A0", Offset = "0xACE4A0", VA = "0xACE4A0")]
	public NavMeshAgentControlClip()
	{
	}
}
[Token(Token = "0x2000008")]
public class NavMeshAgentControlMixerBehaviour : PlayableBehaviour
{
	[Token(Token = "0x6000010")]
	[Address(RVA = "0xACE508", Offset = "0xACE508", VA = "0xACE508", Slot = "20")]
	public override void ProcessFrame(Playable playable, FrameData info, object playerData)
	{
	}

	[Token(Token = "0x6000011")]
	[Address(RVA = "0xACE738", Offset = "0xACE738", VA = "0xACE738")]
	public NavMeshAgentControlMixerBehaviour()
	{
	}
}
[Token(Token = "0x2000009")]
[AttributeAttribute(Name = "TrackColorAttribute", RVA = "0x6FF7C0", Offset = "0x6FF7C0")]
[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0x6FF7C0", Offset = "0x6FF7C0")]
[AttributeAttribute(Name = "TrackBindingTypeAttribute", RVA = "0x6FF7C0", Offset = "0x6FF7C0")]
public class NavMeshAgentControlTrack : TrackAsset
{
	[Token(Token = "0x6000012")]
	[Address(RVA = "0xACE740", Offset = "0xACE740", VA = "0xACE740", Slot = "24")]
	public override Playable CreateTrackMixer(PlayableGraph graph, GameObject go, int inputCount)
	{
		return default(Playable);
	}

	[Token(Token = "0x6000013")]
	[Address(RVA = "0xACE7D8", Offset = "0xACE7D8", VA = "0xACE7D8")]
	public NavMeshAgentControlTrack()
	{
	}
}
[Serializable]
[Token(Token = "0x200000A")]
public class ScreenFaderBehaviour : PlayableBehaviour
{
	[Token(Token = "0x4000010")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Color color;

	[Token(Token = "0x6000014")]
	[Address(RVA = "0x8871F4", Offset = "0x8871F4", VA = "0x8871F4")]
	public ScreenFaderBehaviour()
	{
	}
}
[Serializable]
[Token(Token = "0x200000B")]
public class ScreenFaderClip : PlayableAsset, ITimelineClipAsset
{
	[Token(Token = "0x4000011")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ScreenFaderBehaviour template;

	[Token(Token = "0x17000003")]
	public ClipCaps clipCaps
	{
		[Token(Token = "0x6000015")]
		[Address(RVA = "0x887228", Offset = "0x887228", VA = "0x887228", Slot = "9")]
		get
		{
			return default(ClipCaps);
		}
	}

	[Token(Token = "0x6000016")]
	[Address(RVA = "0x887230", Offset = "0x887230", VA = "0x887230", Slot = "6")]
	public override Playable CreatePlayable(PlayableGraph graph, GameObject owner)
	{
		return default(Playable);
	}

	[Token(Token = "0x6000017")]
	[Address(RVA = "0x8872D0", Offset = "0x8872D0", VA = "0x8872D0")]
	public ScreenFaderClip()
	{
	}
}
[Token(Token = "0x200000C")]
public class ScreenFaderMixerBehaviour : PlayableBehaviour
{
	[Token(Token = "0x4000012")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Color m_DefaultColor;

	[Token(Token = "0x4000013")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Image m_TrackBinding;

	[Token(Token = "0x4000014")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool m_FirstFrameHappened;

	[Token(Token = "0x6000018")]
	[Address(RVA = "0x887334", Offset = "0x887334", VA = "0x887334", Slot = "20")]
	public override void ProcessFrame(Playable playable, FrameData info, object playerData)
	{
	}

	[Token(Token = "0x6000019")]
	[Address(RVA = "0x887648", Offset = "0x887648", VA = "0x887648", Slot = "16")]
	public override void OnPlayableDestroy(Playable playable)
	{
	}

	[Token(Token = "0x600001A")]
	[Address(RVA = "0x8876F0", Offset = "0x8876F0", VA = "0x8876F0")]
	public ScreenFaderMixerBehaviour()
	{
	}
}
[Token(Token = "0x200000D")]
[AttributeAttribute(Name = "TrackColorAttribute", RVA = "0x6FF874", Offset = "0x6FF874")]
[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0x6FF874", Offset = "0x6FF874")]
[AttributeAttribute(Name = "TrackBindingTypeAttribute", RVA = "0x6FF874", Offset = "0x6FF874")]
public class ScreenFaderTrack : TrackAsset
{
	[Token(Token = "0x600001B")]
	[Address(RVA = "0x8876F8", Offset = "0x8876F8", VA = "0x8876F8", Slot = "24")]
	public override Playable CreateTrackMixer(PlayableGraph graph, GameObject go, int inputCount)
	{
		return default(Playable);
	}

	[Token(Token = "0x600001C")]
	[Address(RVA = "0x887790", Offset = "0x887790", VA = "0x887790", Slot = "29")]
	public override void GatherProperties(PlayableDirector director, IPropertyCollector driver)
	{
	}

	[Token(Token = "0x600001D")]
	[Address(RVA = "0x887798", Offset = "0x887798", VA = "0x887798")]
	public ScreenFaderTrack()
	{
	}
}
[Serializable]
[Token(Token = "0x200000E")]
public class TextSwitcherBehaviour : PlayableBehaviour
{
	[Token(Token = "0x4000015")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Color color;

	[Token(Token = "0x4000016")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int fontSize;

	[Token(Token = "0x4000017")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string text;

	[Token(Token = "0x600001E")]
	[Address(RVA = "0x897AB8", Offset = "0x897AB8", VA = "0x897AB8")]
	public TextSwitcherBehaviour()
	{
	}
}
[Serializable]
[Token(Token = "0x200000F")]
public class TextSwitcherClip : PlayableAsset, ITimelineClipAsset
{
	[Token(Token = "0x4000018")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextSwitcherBehaviour template;

	[Token(Token = "0x17000004")]
	public ClipCaps clipCaps
	{
		[Token(Token = "0x600001F")]
		[Address(RVA = "0x897AF4", Offset = "0x897AF4", VA = "0x897AF4", Slot = "9")]
		get
		{
			return default(ClipCaps);
		}
	}

	[Token(Token = "0x6000020")]
	[Address(RVA = "0x897AFC", Offset = "0x897AFC", VA = "0x897AFC", Slot = "6")]
	public override Playable CreatePlayable(PlayableGraph graph, GameObject owner)
	{
		return default(Playable);
	}

	[Token(Token = "0x6000021")]
	[Address(RVA = "0x897B9C", Offset = "0x897B9C", VA = "0x897B9C")]
	public TextSwitcherClip()
	{
	}
}
[Token(Token = "0x2000010")]
public class TextSwitcherMixerBehaviour : PlayableBehaviour
{
	[Token(Token = "0x4000019")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Color m_DefaultColor;

	[Token(Token = "0x400001A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int m_DefaultFontSize;

	[Token(Token = "0x400001B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string m_DefaultText;

	[Token(Token = "0x400001C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Text m_TrackBinding;

	[Token(Token = "0x400001D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool m_FirstFrameHappened;

	[Token(Token = "0x6000022")]
	[Address(RVA = "0x897C00", Offset = "0x897C00", VA = "0x897C00", Slot = "20")]
	public override void ProcessFrame(Playable playable, FrameData info, object playerData)
	{
	}

	[Token(Token = "0x6000023")]
	[Address(RVA = "0x898034", Offset = "0x898034", VA = "0x898034", Slot = "16")]
	public override void OnPlayableDestroy(Playable playable)
	{
	}

	[Token(Token = "0x6000024")]
	[Address(RVA = "0x89810C", Offset = "0x89810C", VA = "0x89810C")]
	public TextSwitcherMixerBehaviour()
	{
	}
}
[Token(Token = "0x2000011")]
[AttributeAttribute(Name = "TrackColorAttribute", RVA = "0x6FF924", Offset = "0x6FF924")]
[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0x6FF924", Offset = "0x6FF924")]
[AttributeAttribute(Name = "TrackBindingTypeAttribute", RVA = "0x6FF924", Offset = "0x6FF924")]
public class TextSwitcherTrack : TrackAsset
{
	[Token(Token = "0x6000025")]
	[Address(RVA = "0x898114", Offset = "0x898114", VA = "0x898114", Slot = "24")]
	public override Playable CreateTrackMixer(PlayableGraph graph, GameObject go, int inputCount)
	{
		return default(Playable);
	}

	[Token(Token = "0x6000026")]
	[Address(RVA = "0x8981AC", Offset = "0x8981AC", VA = "0x8981AC", Slot = "29")]
	public override void GatherProperties(PlayableDirector director, IPropertyCollector driver)
	{
	}

	[Token(Token = "0x6000027")]
	[Address(RVA = "0x8981B4", Offset = "0x8981B4", VA = "0x8981B4")]
	public TextSwitcherTrack()
	{
	}
}
[Serializable]
[Token(Token = "0x2000012")]
public class TimeDilationBehaviour : PlayableBehaviour
{
	[Token(Token = "0x400001E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float timeScale;

	[Token(Token = "0x6000028")]
	[Address(RVA = "0x89821C", Offset = "0x89821C", VA = "0x89821C")]
	public TimeDilationBehaviour()
	{
	}
}
[Serializable]
[Token(Token = "0x2000013")]
public class TimeDilationClip : PlayableAsset, ITimelineClipAsset
{
	[Token(Token = "0x400001F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TimeDilationBehaviour template;

	[Token(Token = "0x17000005")]
	public ClipCaps clipCaps
	{
		[Token(Token = "0x6000029")]
		[Address(RVA = "0x89822C", Offset = "0x89822C", VA = "0x89822C", Slot = "9")]
		get
		{
			return default(ClipCaps);
		}
	}

	[Token(Token = "0x600002A")]
	[Address(RVA = "0x898234", Offset = "0x898234", VA = "0x898234", Slot = "6")]
	public override Playable CreatePlayable(PlayableGraph graph, GameObject owner)
	{
		return default(Playable);
	}

	[Token(Token = "0x600002B")]
	[Address(RVA = "0x8982D4", Offset = "0x8982D4", VA = "0x8982D4")]
	public TimeDilationClip()
	{
	}
}
[Token(Token = "0x2000014")]
public class TimeDilationMixerBehaviour : PlayableBehaviour
{
	[Token(Token = "0x4000020")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private readonly float defaultTimeScale;

	[Token(Token = "0x600002C")]
	[Address(RVA = "0x898344", Offset = "0x898344", VA = "0x898344", Slot = "20")]
	public override void ProcessFrame(Playable playable, FrameData info, object playerData)
	{
	}

	[Token(Token = "0x600002D")]
	[Address(RVA = "0x898510", Offset = "0x898510", VA = "0x898510", Slot = "18")]
	public override void OnBehaviourPause(Playable playable, FrameData info)
	{
	}

	[Token(Token = "0x600002E")]
	[Address(RVA = "0x89851C", Offset = "0x89851C", VA = "0x89851C", Slot = "14")]
	public override void OnGraphStop(Playable playable)
	{
	}

	[Token(Token = "0x600002F")]
	[Address(RVA = "0x898528", Offset = "0x898528", VA = "0x898528", Slot = "16")]
	public override void OnPlayableDestroy(Playable playable)
	{
	}

	[Token(Token = "0x6000030")]
	[Address(RVA = "0x898534", Offset = "0x898534", VA = "0x898534")]
	public TimeDilationMixerBehaviour()
	{
	}
}
[Token(Token = "0x2000015")]
[AttributeAttribute(Name = "TrackColorAttribute", RVA = "0x6FF9D8", Offset = "0x6FF9D8")]
[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0x6FF9D8", Offset = "0x6FF9D8")]
public class TimeDilationTrack : TrackAsset
{
	[Token(Token = "0x6000031")]
	[Address(RVA = "0x898544", Offset = "0x898544", VA = "0x898544", Slot = "24")]
	public override Playable CreateTrackMixer(PlayableGraph graph, GameObject go, int inputCount)
	{
		return default(Playable);
	}

	[Token(Token = "0x6000032")]
	[Address(RVA = "0x8985DC", Offset = "0x8985DC", VA = "0x8985DC")]
	public TimeDilationTrack()
	{
	}
}
[Serializable]
[Token(Token = "0x2000016")]
public class TransformTweenBehaviour : PlayableBehaviour
{
	[Token(Token = "0x20001CB")]
	public enum TweenType
	{
		[Token(Token = "0x4000994")]
		Linear,
		[Token(Token = "0x4000995")]
		Deceleration,
		[Token(Token = "0x4000996")]
		Harmonic,
		[Token(Token = "0x4000997")]
		Custom
	}

	[Token(Token = "0x4000021")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Transform startLocation;

	[Token(Token = "0x4000022")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform endLocation;

	[Token(Token = "0x4000023")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool tweenPosition;

	[Token(Token = "0x4000024")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool tweenRotation;

	[Token(Token = "0x4000025")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public TweenType tweenType;

	[Token(Token = "0x4000026")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AnimationCurve customCurve;

	[Token(Token = "0x4000027")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector3 startingPosition;

	[Token(Token = "0x4000028")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Quaternion startingRotation;

	[Token(Token = "0x4000029")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private AnimationCurve m_LinearCurve;

	[Token(Token = "0x400002A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private AnimationCurve m_DecelerationCurve;

	[Token(Token = "0x400002B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private AnimationCurve m_HarmonicCurve;

	[Token(Token = "0x400002C")]
	private const float k_RightAngleInRads = (float)Math.PI / 2f;

	[Token(Token = "0x6000033")]
	[Address(RVA = "0x898944", Offset = "0x898944", VA = "0x898944", Slot = "19")]
	public override void PrepareFrame(Playable playable, FrameData info)
	{
	}

	[Token(Token = "0x6000034")]
	[Address(RVA = "0x8989EC", Offset = "0x8989EC", VA = "0x8989EC")]
	public float EvaluateCurrentCurve(float time)
	{
		return default(float);
	}

	[Token(Token = "0x6000035")]
	[Address(RVA = "0x898AE4", Offset = "0x898AE4", VA = "0x898AE4")]
	private bool IsCustomCurveNormalised()
	{
		return default(bool);
	}

	[Token(Token = "0x6000036")]
	[Address(RVA = "0x898D0C", Offset = "0x898D0C", VA = "0x898D0C")]
	public TransformTweenBehaviour()
	{
	}
}
[Serializable]
[Token(Token = "0x2000017")]
public class TransformTweenClip : PlayableAsset, ITimelineClipAsset
{
	[Token(Token = "0x400002D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TransformTweenBehaviour template;

	[Token(Token = "0x400002E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ExposedReference<Transform> startLocation;

	[Token(Token = "0x400002F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ExposedReference<Transform> endLocation;

	[Token(Token = "0x17000006")]
	public ClipCaps clipCaps
	{
		[Token(Token = "0x6000037")]
		[Address(RVA = "0x898EF0", Offset = "0x898EF0", VA = "0x898EF0", Slot = "9")]
		get
		{
			return default(ClipCaps);
		}
	}

	[Token(Token = "0x6000038")]
	[Address(RVA = "0x898EF8", Offset = "0x898EF8", VA = "0x898EF8", Slot = "6")]
	public override Playable CreatePlayable(PlayableGraph graph, GameObject owner)
	{
		return default(Playable);
	}

	[Token(Token = "0x6000039")]
	[Address(RVA = "0x899028", Offset = "0x899028", VA = "0x899028")]
	public TransformTweenClip()
	{
	}
}
[Token(Token = "0x2000018")]
public class TransformTweenMixerBehaviour : PlayableBehaviour
{
	[Token(Token = "0x4000030")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private bool m_FirstFrameHappened;

	[Token(Token = "0x600003A")]
	[Address(RVA = "0x89908C", Offset = "0x89908C", VA = "0x89908C", Slot = "20")]
	public override void ProcessFrame(Playable playable, FrameData info, object playerData)
	{
	}

	[Token(Token = "0x600003B")]
	[Address(RVA = "0x8997B4", Offset = "0x8997B4", VA = "0x8997B4", Slot = "16")]
	public override void OnPlayableDestroy(Playable playable)
	{
	}

	[Token(Token = "0x600003C")]
	[Address(RVA = "0x8997A0", Offset = "0x8997A0", VA = "0x8997A0")]
	private static Quaternion AddQuaternions(Quaternion first, Quaternion second)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x600003D")]
	[Address(RVA = "0x89978C", Offset = "0x89978C", VA = "0x89978C")]
	private static Quaternion ScaleQuaternion(Quaternion rotation, float multiplier)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x600003E")]
	[Address(RVA = "0x8997BC", Offset = "0x8997BC", VA = "0x8997BC")]
	private static float QuaternionMagnitude(Quaternion rotation)
	{
		return default(float);
	}

	[Token(Token = "0x600003F")]
	[Address(RVA = "0x89969C", Offset = "0x89969C", VA = "0x89969C")]
	private static Quaternion NormalizeQuaternion(Quaternion rotation)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000040")]
	[Address(RVA = "0x8998A8", Offset = "0x8998A8", VA = "0x8998A8")]
	public TransformTweenMixerBehaviour()
	{
	}
}
[Token(Token = "0x2000019")]
[AttributeAttribute(Name = "TrackColorAttribute", RVA = "0x6FFA64", Offset = "0x6FFA64")]
[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0x6FFA64", Offset = "0x6FFA64")]
[AttributeAttribute(Name = "TrackBindingTypeAttribute", RVA = "0x6FFA64", Offset = "0x6FFA64")]
public class TransformTweenTrack : TrackAsset
{
	[Token(Token = "0x6000041")]
	[Address(RVA = "0x8998B0", Offset = "0x8998B0", VA = "0x8998B0", Slot = "24")]
	public override Playable CreateTrackMixer(PlayableGraph graph, GameObject go, int inputCount)
	{
		return default(Playable);
	}

	[Token(Token = "0x6000042")]
	[Address(RVA = "0x899948", Offset = "0x899948", VA = "0x899948", Slot = "29")]
	public override void GatherProperties(PlayableDirector director, IPropertyCollector driver)
	{
	}

	[Token(Token = "0x6000043")]
	[Address(RVA = "0x899950", Offset = "0x899950", VA = "0x899950")]
	public TransformTweenTrack()
	{
	}
}
[Token(Token = "0x200001A")]
public static class BinarySerializationHelper
{
	[Token(Token = "0x4000031")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static BinaryFormatter formatter;

	[Token(Token = "0x6000044")]
	public static void Serialize<T>(Stream stream, T obj)
	{
	}

	[Token(Token = "0x6000045")]
	public static T Deserialize<T>(Stream stream)
	{
		return (T)null;
	}
}
[Token(Token = "0x200001B")]
internal class BindChanger : SerializationBinder
{
	[Token(Token = "0x6000047")]
	[Address(RVA = "0x93A4B4", Offset = "0x93A4B4", VA = "0x93A4B4", Slot = "5")]
	public override Type BindToType(string assemblyName, string typeName)
	{
		return null;
	}

	[Token(Token = "0x6000048")]
	[Address(RVA = "0x93A590", Offset = "0x93A590", VA = "0x93A590")]
	public BindChanger()
	{
	}
}
[Token(Token = "0x200001C")]
public class DebugText : MonoBehaviour
{
	[Token(Token = "0x4000032")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string receivedMessage;

	[Token(Token = "0x4000033")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Text receivedText;

	[Token(Token = "0x6000049")]
	[Address(RVA = "0x93D2B0", Offset = "0x93D2B0", VA = "0x93D2B0")]
	private void Start()
	{
	}

	[Token(Token = "0x600004A")]
	[Address(RVA = "0x93D308", Offset = "0x93D308", VA = "0x93D308")]
	private void Update()
	{
	}

	[Token(Token = "0x600004B")]
	[Address(RVA = "0x93D374", Offset = "0x93D374", VA = "0x93D374")]
	public DebugText()
	{
	}
}
[Token(Token = "0x200001D")]
public class AvatarBorders : MonoBehaviour
{
	[Token(Token = "0x4000034")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Transform _circleBorder;

	[Token(Token = "0x4000035")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private MeshRenderer _cylinderMeshRenderer;

	[Token(Token = "0x4000036")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Transform[] _playerTransforms;

	[Token(Token = "0x4000037")]
	private const float DrawCylinderDistance = 1.2f;

	[Token(Token = "0x4000038")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly int StartHeight;

	[Token(Token = "0x600004C")]
	[Address(RVA = "0x938FF8", Offset = "0x938FF8", VA = "0x938FF8")]
	private void Start()
	{
	}

	[Token(Token = "0x600004D")]
	[Address(RVA = "0x939334", Offset = "0x939334", VA = "0x939334")]
	private void Update()
	{
	}

	[Token(Token = "0x600004E")]
	[Address(RVA = "0x939504", Offset = "0x939504", VA = "0x939504")]
	private void UpdateCircle()
	{
	}

	[Token(Token = "0x600004F")]
	[Address(RVA = "0x9397BC", Offset = "0x9397BC", VA = "0x9397BC")]
	private void UpdateCylinder()
	{
	}

	[Token(Token = "0x6000050")]
	[Address(RVA = "0x939A7C", Offset = "0x939A7C", VA = "0x939A7C")]
	public AvatarBorders()
	{
	}
}
[Token(Token = "0x200001E")]
public class AvatarDistanceFade : MonoBehaviour
{
	[Token(Token = "0x4000039")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7014EC", Offset = "0x7014EC")]
	private float _visibleDistance;

	[Token(Token = "0x400003A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private string _colorName;

	[Token(Token = "0x400003B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private bool _isColor;

	[Token(Token = "0x400003C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Material _material;

	[Token(Token = "0x400003D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Transform _mainCameraTransform;

	[Token(Token = "0x6000052")]
	[Address(RVA = "0x939AE8", Offset = "0x939AE8", VA = "0x939AE8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000053")]
	[Address(RVA = "0x939B68", Offset = "0x939B68", VA = "0x939B68")]
	private void DistanceFade()
	{
	}

	[Token(Token = "0x6000054")]
	[Address(RVA = "0x939D10", Offset = "0x939D10", VA = "0x939D10")]
	private void Update()
	{
	}

	[Token(Token = "0x6000055")]
	[Address(RVA = "0x939D14", Offset = "0x939D14", VA = "0x939D14")]
	public AvatarDistanceFade()
	{
	}
}
[Token(Token = "0x200001F")]
public class AvatarHands : MonoBehaviour
{
	[Token(Token = "0x6000056")]
	[Address(RVA = "0x939D1C", Offset = "0x939D1C", VA = "0x939D1C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000057")]
	[Address(RVA = "0x939E80", Offset = "0x939E80", VA = "0x939E80")]
	private void InputEnable(bool obj)
	{
	}

	[Token(Token = "0x6000058")]
	[Address(RVA = "0x939EB4", Offset = "0x939EB4", VA = "0x939EB4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000059")]
	[Address(RVA = "0x93A018", Offset = "0x93A018", VA = "0x93A018")]
	public AvatarHands()
	{
	}
}
[Token(Token = "0x2000020")]
public class CameraFadeToBlack : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20001CC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x700FB8", Offset = "0x700FB8")]
	private sealed class <>c
	{
		[Token(Token = "0x4000998")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4000999")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static TweenCallback <>9__1_0;

		[Token(Token = "0x60011A6")]
		[Address(RVA = "0x93BDC4", Offset = "0x93BDC4", VA = "0x93BDC4")]
		public <>c()
		{
		}

		[Token(Token = "0x60011A7")]
		[Address(RVA = "0x93BDCC", Offset = "0x93BDCC", VA = "0x93BDCC")]
		internal void <FadeToBlack>b__1_0()
		{
		}
	}

	[Token(Token = "0x600005A")]
	[Address(RVA = "0x93BBD8", Offset = "0x93BBD8", VA = "0x93BBD8")]
	private void Start()
	{
	}

	[Token(Token = "0x600005B")]
	[Address(RVA = "0x93BBDC", Offset = "0x93BBDC", VA = "0x93BBDC")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x706AC4", Offset = "0x706AC4")]
	private void FadeToBlack()
	{
	}

	[Token(Token = "0x600005C")]
	[Address(RVA = "0x93BD58", Offset = "0x93BD58", VA = "0x93BD58")]
	public CameraFadeToBlack()
	{
	}
}
[Token(Token = "0x2000021")]
public class CameraTransitionFade : MonoBehaviour
{
	[Token(Token = "0x400003E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x701558", Offset = "0x701558")]
	private Action <_onFadeIn>k__BackingField;

	[Token(Token = "0x400003F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool _isFadingIn;

	[Token(Token = "0x4000040")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	private bool _isFadingOut;

	[Token(Token = "0x4000041")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float _fadeValue;

	[Token(Token = "0x4000042")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float _fadeTime;

	[Token(Token = "0x17000007")]
	private Action _onFadeIn
	{
		[Token(Token = "0x600005D")]
		[Address(RVA = "0x93BDD4", Offset = "0x93BDD4", VA = "0x93BDD4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x706AD4", Offset = "0x706AD4")]
		get
		{
			return null;
		}
		[Token(Token = "0x600005E")]
		[Address(RVA = "0x93BDDC", Offset = "0x93BDDC", VA = "0x93BDDC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x706AE4", Offset = "0x706AE4")]
		set
		{
		}
	}

	[Token(Token = "0x600005F")]
	[Address(RVA = "0x93BDE4", Offset = "0x93BDE4", VA = "0x93BDE4")]
	public void FadeIn(Action onFadeIn)
	{
	}

	[Token(Token = "0x6000060")]
	[Address(RVA = "0x93BE34", Offset = "0x93BE34", VA = "0x93BE34")]
	private void Update()
	{
	}

	[Token(Token = "0x6000061")]
	[Address(RVA = "0x93BFBC", Offset = "0x93BFBC", VA = "0x93BFBC")]
	public CameraTransitionFade()
	{
	}
}
[Token(Token = "0x2000022")]
public class DelayedEvent : MonoBehaviour
{
	[Token(Token = "0x4000043")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UnityEvent _event;

	[Token(Token = "0x4000044")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float _delay;

	[Token(Token = "0x4000045")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private bool _isEventCanceled;

	[Token(Token = "0x6000062")]
	[Address(RVA = "0x93E49C", Offset = "0x93E49C", VA = "0x93E49C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000063")]
	[Address(RVA = "0x93E4F4", Offset = "0x93E4F4", VA = "0x93E4F4")]
	public void CancelEvent()
	{
	}

	[Token(Token = "0x6000064")]
	[Address(RVA = "0x93E500", Offset = "0x93E500", VA = "0x93E500")]
	private void CallEvent()
	{
	}

	[Token(Token = "0x6000065")]
	[Address(RVA = "0x93E51C", Offset = "0x93E51C", VA = "0x93E51C")]
	public DelayedEvent()
	{
	}
}
[Token(Token = "0x2000023")]
public class MariekeRoomSynchronizer : MonoBehaviour
{
	[Token(Token = "0x4000046")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x701578", Offset = "0x701578")]
	[SerializeField]
	private PlayableDirector _MariekeTimeline;

	[Token(Token = "0x4000047")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool _playTimeline;

	[Token(Token = "0x6000066")]
	[Address(RVA = "0x97CF74", Offset = "0x97CF74", VA = "0x97CF74")]
	private void Start()
	{
	}

	[Token(Token = "0x6000067")]
	[Address(RVA = "0x97D1D4", Offset = "0x97D1D4", VA = "0x97D1D4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000068")]
	[Address(RVA = "0x97D1E8", Offset = "0x97D1E8", VA = "0x97D1E8")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x706AF4", Offset = "0x706AF4")]
	public void BeginMariekeSequence()
	{
	}

	[Token(Token = "0x6000069")]
	[Address(RVA = "0x97D238", Offset = "0x97D238", VA = "0x97D238")]
	public MariekeRoomSynchronizer()
	{
	}

	[Token(Token = "0x600006A")]
	[Address(RVA = "0x97D240", Offset = "0x97D240", VA = "0x97D240")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x706B04", Offset = "0x706B04")]
	private void <Start>b__2_0(INetworkMessage NetworkManager)
	{
	}
}
[Serializable]
[Token(Token = "0x2000024")]
public class SpawnedObjectDestroyMessage : BaseNetworkMessage
{
	[Token(Token = "0x4000048")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string TargetIP;

	[Token(Token = "0x600006B")]
	[Address(RVA = "0x88A008", Offset = "0x88A008", VA = "0x88A008")]
	public SpawnedObjectDestroyMessage(string targetIP)
	{
	}
}
[Serializable]
[Token(Token = "0x2000025")]
public class BurnBooksMessage : BaseNetworkMessage
{
	[Token(Token = "0x4000049")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SerializableVector3 FirePosition;

	[Token(Token = "0x600006C")]
	[Address(RVA = "0x93B8C4", Offset = "0x93B8C4", VA = "0x93B8C4")]
	public BurnBooksMessage(Vector3 pos)
	{
	}
}
[Serializable]
[Token(Token = "0x2000026")]
public class MatchBoxOpenMessage : BaseNetworkMessage
{
	[Token(Token = "0x400004A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool IsOpen;

	[Token(Token = "0x600006D")]
	[Address(RVA = "0x97D24C", Offset = "0x97D24C", VA = "0x97D24C")]
	public MatchBoxOpenMessage(bool isOpen)
	{
	}
}
[Serializable]
[Token(Token = "0x2000027")]
public class MatchBoxOwnerMessage : BaseNetworkMessage
{
	[Token(Token = "0x400004B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string OwnerID;

	[Token(Token = "0x600006E")]
	[Address(RVA = "0x97D27C", Offset = "0x97D27C", VA = "0x97D27C")]
	public MatchBoxOwnerMessage(string ownerID)
	{
	}
}
[Token(Token = "0x2000028")]
public class MatchCounter : MonoBehaviour
{
	[Token(Token = "0x400004C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int matchCount;

	[Token(Token = "0x400004D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static TransformSynchronizer lastMatch;

	[Token(Token = "0x400004E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private MatchboxSynchronizer _matchboxSynchronizer;

	[Token(Token = "0x600006F")]
	[Address(RVA = "0x97D2A8", Offset = "0x97D2A8", VA = "0x97D2A8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000070")]
	[Address(RVA = "0x97D514", Offset = "0x97D514", VA = "0x97D514")]
	public void OnMatchGrabbed()
	{
	}

	[Token(Token = "0x6000071")]
	[Address(RVA = "0x97D5B4", Offset = "0x97D5B4", VA = "0x97D5B4")]
	public void OnMatchReleased()
	{
	}

	[Token(Token = "0x6000072")]
	[Address(RVA = "0x97D750", Offset = "0x97D750", VA = "0x97D750")]
	public MatchCounter()
	{
	}
}
[Serializable]
[Token(Token = "0x2000029")]
public class MatchGrabbedMessage : BaseNetworkMessage
{
	[Token(Token = "0x400004F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string HandID;

	[Token(Token = "0x4000050")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string MatchID;

	[Token(Token = "0x4000051")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool IsGrabbed;

	[Token(Token = "0x6000073")]
	[Address(RVA = "0x97D758", Offset = "0x97D758", VA = "0x97D758")]
	public MatchGrabbedMessage(string matchID, bool isGrabbed, string handID)
	{
	}
}
[Serializable]
[Token(Token = "0x200002A")]
public class MatchLitMessage : BaseNetworkMessage
{
	[Token(Token = "0x4000052")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string MatchID;

	[Token(Token = "0x4000053")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool IsLit;

	[Token(Token = "0x6000074")]
	[Address(RVA = "0x97D79C", Offset = "0x97D79C", VA = "0x97D79C")]
	public MatchLitMessage(string matchID, bool isLit)
	{
	}
}
[Token(Token = "0x200002B")]
public class MatchboxSynchronizer : MonoBehaviour
{
	[Token(Token = "0x20001CD")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x700FC8", Offset = "0x700FC8")]
	private sealed class <SetOwnerCoroutine>d__30 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400099A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400099B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400099C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MatchboxSynchronizer <>4__this;

		[Token(Token = "0x1700021F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60011AB")]
			[Address(RVA = "0x97EF80", Offset = "0x97EF80", VA = "0x97EF80", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000220")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60011AD")]
			[Address(RVA = "0x97EFE8", Offset = "0x97EFE8", VA = "0x97EFE8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60011A8")]
		[Address(RVA = "0x97E740", Offset = "0x97E740", VA = "0x97E740")]
		[DebuggerHidden]
		public <SetOwnerCoroutine>d__30(int <>1__state)
		{
		}

		[Token(Token = "0x60011A9")]
		[Address(RVA = "0x97EE04", Offset = "0x97EE04", VA = "0x97EE04", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60011AA")]
		[Address(RVA = "0x97EE08", Offset = "0x97EE08", VA = "0x97EE08", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60011AC")]
		[Address(RVA = "0x97EF88", Offset = "0x97EF88", VA = "0x97EF88", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001CE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x700FD8", Offset = "0x700FD8")]
	private sealed class <GrabMatchCoroutine>d__33 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400099D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400099E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400099F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public InteractableGrab interactableGrab;

		[Token(Token = "0x17000221")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60011B1")]
			[Address(RVA = "0x97ED94", Offset = "0x97ED94", VA = "0x97ED94", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000222")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60011B3")]
			[Address(RVA = "0x97EDFC", Offset = "0x97EDFC", VA = "0x97EDFC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60011AE")]
		[Address(RVA = "0x97E8C8", Offset = "0x97E8C8", VA = "0x97E8C8")]
		[DebuggerHidden]
		public <GrabMatchCoroutine>d__33(int <>1__state)
		{
		}

		[Token(Token = "0x60011AF")]
		[Address(RVA = "0x97EBEC", Offset = "0x97EBEC", VA = "0x97EBEC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60011B0")]
		[Address(RVA = "0x97EBF0", Offset = "0x97EBF0", VA = "0x97EBF0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60011B2")]
		[Address(RVA = "0x97ED9C", Offset = "0x97ED9C", VA = "0x97ED9C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000054")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Transform _originalParent;

	[Token(Token = "0x4000055")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public InteractableGrab matchbox;

	[Token(Token = "0x4000056")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform matchboxInside;

	[Token(Token = "0x4000057")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public HandPose _matchBoxPose;

	[Token(Token = "0x4000058")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public HandPose _matchPose;

	[Token(Token = "0x4000059")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public BookFireStarter _bookFireStarter;

	[Token(Token = "0x400005A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool _updateParent;

	[Token(Token = "0x400005B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private string _ownerID;

	[Token(Token = "0x400005C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private string _lastOwnerID;

	[Token(Token = "0x400005D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool _updateOpen;

	[Token(Token = "0x400005E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	private bool _shouldOpen;

	[Token(Token = "0x400005F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x62")]
	private bool _burnBooks;

	[Token(Token = "0x4000060")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private Vector3 _firePos;

	[Token(Token = "0x4000061")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool _updateMatchLight;

	[Token(Token = "0x4000062")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
	private bool _isMatchLit;

	[Token(Token = "0x4000063")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private string _matchId;

	[Token(Token = "0x4000064")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private bool _updateMatchGrab;

	[Token(Token = "0x4000065")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private string _handID;

	[Token(Token = "0x4000066")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private bool _isMatchGrabbed;

	[Token(Token = "0x4000067")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private string _grabbedMatchID;

	[Token(Token = "0x4000068")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Transform _grabbedMatch;

	[Token(Token = "0x6000075")]
	[Address(RVA = "0x97D7DC", Offset = "0x97D7DC", VA = "0x97D7DC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000076")]
	[Address(RVA = "0x97DBB8", Offset = "0x97DBB8", VA = "0x97DBB8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000077")]
	[Address(RVA = "0x97E274", Offset = "0x97E274", VA = "0x97E274")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000078")]
	[Address(RVA = "0x97E36C", Offset = "0x97E36C", VA = "0x97E36C")]
	private void MatchGrabbed(INetworkMessage obj)
	{
	}

	[Token(Token = "0x6000079")]
	[Address(RVA = "0x97E41C", Offset = "0x97E41C", VA = "0x97E41C")]
	private void OnMatchboxOwnerChange(INetworkMessage obj)
	{
	}

	[Token(Token = "0x600007A")]
	[Address(RVA = "0x97E4C4", Offset = "0x97E4C4", VA = "0x97E4C4")]
	private void OnMatchboxOpen(INetworkMessage obj)
	{
	}

	[Token(Token = "0x600007B")]
	[Address(RVA = "0x97E55C", Offset = "0x97E55C", VA = "0x97E55C")]
	private void OnMatchLit(INetworkMessage obj)
	{
	}

	[Token(Token = "0x600007C")]
	[Address(RVA = "0x97E5FC", Offset = "0x97E5FC", VA = "0x97E5FC")]
	private void BurnBooks(INetworkMessage obj)
	{
	}

	[Token(Token = "0x600007D")]
	[Address(RVA = "0x97E6A4", Offset = "0x97E6A4", VA = "0x97E6A4")]
	public void SetAsOwner()
	{
	}

	[Token(Token = "0x600007E")]
	[Address(RVA = "0x97E6D0", Offset = "0x97E6D0", VA = "0x97E6D0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x706B14", Offset = "0x706B14")]
	private IEnumerator SetOwnerCoroutine()
	{
		return null;
	}

	[Token(Token = "0x600007F")]
	[Address(RVA = "0x97E76C", Offset = "0x97E76C", VA = "0x97E76C")]
	public void Release()
	{
	}

	[Token(Token = "0x6000080")]
	[Address(RVA = "0x97D588", Offset = "0x97D588", VA = "0x97D588")]
	public void GrabMatch(InteractableGrab interactableGrab)
	{
	}

	[Token(Token = "0x6000081")]
	[Address(RVA = "0x97E858", Offset = "0x97E858", VA = "0x97E858")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x706B78", Offset = "0x706B78")]
	private IEnumerator GrabMatchCoroutine(InteractableGrab interactableGrab)
	{
		return null;
	}

	[Token(Token = "0x6000082")]
	[Address(RVA = "0x97D618", Offset = "0x97D618", VA = "0x97D618")]
	public void ReleaseMatch(InteractableGrab interactableGrab)
	{
	}

	[Token(Token = "0x6000083")]
	[Address(RVA = "0x97E8F4", Offset = "0x97E8F4", VA = "0x97E8F4")]
	public void SetOpenMatchBox(bool value)
	{
	}

	[Token(Token = "0x6000084")]
	[Address(RVA = "0x97E9D0", Offset = "0x97E9D0", VA = "0x97E9D0")]
	public void StartFire(Vector3 firePos)
	{
	}

	[Token(Token = "0x6000085")]
	[Address(RVA = "0x97EACC", Offset = "0x97EACC", VA = "0x97EACC")]
	public void SetMatchLit(GameObject go, bool isLit)
	{
	}

	[Token(Token = "0x6000086")]
	[Address(RVA = "0x97EBE4", Offset = "0x97EBE4", VA = "0x97EBE4")]
	public MatchboxSynchronizer()
	{
	}
}
[Token(Token = "0x200002C")]
public class ServerMatchBox : MonoBehaviour
{
	[Token(Token = "0x6000087")]
	[Address(RVA = "0x8884AC", Offset = "0x8884AC", VA = "0x8884AC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000088")]
	[Address(RVA = "0x8884B0", Offset = "0x8884B0", VA = "0x8884B0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000089")]
	[Address(RVA = "0x8884B4", Offset = "0x8884B4", VA = "0x8884B4")]
	public ServerMatchBox()
	{
	}
}
[Token(Token = "0x200002D")]
public class SynchronizedMatch : MonoBehaviour
{
	[Token(Token = "0x4000069")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Animator _animator;

	[Token(Token = "0x400006A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Animator _flameAnimator;

	[Token(Token = "0x600008A")]
	[Address(RVA = "0x8950D0", Offset = "0x8950D0", VA = "0x8950D0")]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x706BDC", Offset = "0x706BDC")]
	public void SetLit(bool value)
	{
	}

	[Token(Token = "0x600008B")]
	[Address(RVA = "0x89516C", Offset = "0x89516C", VA = "0x89516C")]
	public SynchronizedMatch()
	{
	}
}
[Token(Token = "0x200002E")]
public class LanguageMessageReceiver : MonoBehaviour
{
	[Token(Token = "0x600008C")]
	[Address(RVA = "0x97B6E8", Offset = "0x97B6E8", VA = "0x97B6E8")]
	private void Start()
	{
	}

	[Token(Token = "0x600008D")]
	[Address(RVA = "0x97B8A8", Offset = "0x97B8A8", VA = "0x97B8A8")]
	public void SelectLanguage(INetworkMessage message)
	{
	}

	[Token(Token = "0x600008E")]
	[Address(RVA = "0x96C25C", Offset = "0x96C25C", VA = "0x96C25C")]
	public static void SetWwiseLanguage()
	{
	}

	[Token(Token = "0x600008F")]
	[Address(RVA = "0x97B95C", Offset = "0x97B95C", VA = "0x97B95C")]
	public LanguageMessageReceiver()
	{
	}
}
[Token(Token = "0x200002F")]
public class LanguageMessageSender : MonoBehaviour
{
	[Token(Token = "0x400006B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private string _currentLanguage;

	[Token(Token = "0x400006C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TMP_Dropdown _TMPDropdown;

	[Token(Token = "0x6000090")]
	[Address(RVA = "0x97B964", Offset = "0x97B964", VA = "0x97B964")]
	public void SelectLanguage()
	{
	}

	[Token(Token = "0x6000091")]
	[Address(RVA = "0x97BA94", Offset = "0x97BA94", VA = "0x97BA94")]
	public LanguageMessageSender()
	{
	}
}
[Token(Token = "0x2000030")]
public class Locomotion : MonoBehaviour
{
	[Token(Token = "0x400006D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float _movementSpeed;

	[Token(Token = "0x400006E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float _rotateSpeed;

	[Token(Token = "0x400006F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float _maxAllowedDistanceFromCenter;

	[Token(Token = "0x4000070")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private bool _debugMode;

	[Token(Token = "0x4000071")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private InputDevice _leftInputDevice;

	[Token(Token = "0x4000072")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private InputDevice _rightInputDevice;

	[Token(Token = "0x4000073")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool _clickToMove;

	[Token(Token = "0x4000074")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Transform _VrCameraTransform;

	[Token(Token = "0x4000075")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private CapsuleCollider _capsuleCollider;

	[Token(Token = "0x6000092")]
	[Address(RVA = "0x97C6E0", Offset = "0x97C6E0", VA = "0x97C6E0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000093")]
	[Address(RVA = "0x97C800", Offset = "0x97C800", VA = "0x97C800")]
	private void SceneManager_activeSceneChanged(Scene arg0, Scene arg1)
	{
	}

	[Token(Token = "0x6000094")]
	[Address(RVA = "0x97C8DC", Offset = "0x97C8DC", VA = "0x97C8DC")]
	private void InputDevices_deviceConnected(InputDevice obj)
	{
	}

	[Token(Token = "0x6000095")]
	[Address(RVA = "0x97CB08", Offset = "0x97CB08", VA = "0x97CB08")]
	private void Update()
	{
	}

	[Token(Token = "0x6000096")]
	[Address(RVA = "0x97CB34", Offset = "0x97CB34", VA = "0x97CB34")]
	private void MovePlayer(InputDevice inputDevice)
	{
	}

	[Token(Token = "0x6000097")]
	[Address(RVA = "0x97CF5C", Offset = "0x97CF5C", VA = "0x97CF5C")]
	public Locomotion()
	{
	}
}
[Token(Token = "0x2000031")]
public class PlaygroundCenter : MonoBehaviour
{
	[Token(Token = "0x6000098")]
	[Address(RVA = "0x884D9C", Offset = "0x884D9C", VA = "0x884D9C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000099")]
	[Address(RVA = "0x884E28", Offset = "0x884E28", VA = "0x884E28")]
	public PlaygroundCenter()
	{
	}
}
[Token(Token = "0x2000032")]
public class PostRenderAction : MonoBehaviour
{
	[Token(Token = "0x4000076")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x701614", Offset = "0x701614")]
	private Action <PostRender>k__BackingField;

	[Token(Token = "0x17000008")]
	public Action PostRender
	{
		[Token(Token = "0x600009A")]
		[Address(RVA = "0x885518", Offset = "0x885518", VA = "0x885518")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x706BEC", Offset = "0x706BEC")]
		get
		{
			return null;
		}
		[Token(Token = "0x600009B")]
		[Address(RVA = "0x885520", Offset = "0x885520", VA = "0x885520")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x706BFC", Offset = "0x706BFC")]
		set
		{
		}
	}

	[Token(Token = "0x600009C")]
	[Address(RVA = "0x885528", Offset = "0x885528", VA = "0x885528")]
	private void OnPostRender()
	{
	}

	[Token(Token = "0x600009D")]
	[Address(RVA = "0x88553C", Offset = "0x88553C", VA = "0x88553C")]
	public PostRenderAction()
	{
	}
}
[Token(Token = "0x2000033")]
public class RandomAvatar : MonoBehaviour
{
	[Token(Token = "0x4000077")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x701624", Offset = "0x701624")]
	private float _visibleDistance;

	[Token(Token = "0x4000078")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform _mainCameraTransform;

	[Token(Token = "0x4000079")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int _childIndex;

	[Token(Token = "0x400007A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform _avatarNeck;

	[Token(Token = "0x400007B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float _headRot;

	[Token(Token = "0x400007C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GameObject _eyesGameObject;

	[Token(Token = "0x400007D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private SkinnedMeshRenderer _blinkSkinnedMeshRenderer;

	[Token(Token = "0x400007E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float _nextBlinkTime;

	[Token(Token = "0x400007F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float _eyeLidBlendValue;

	[Token(Token = "0x4000080")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool _animateEyeLids;

	[Token(Token = "0x4000081")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float _eyeLidBlendValueTimeMultiplier;

	[Token(Token = "0x600009E")]
	[Address(RVA = "0x8856B4", Offset = "0x8856B4", VA = "0x8856B4")]
	private void Start()
	{
	}

	[Token(Token = "0x600009F")]
	[Address(RVA = "0x88591C", Offset = "0x88591C", VA = "0x88591C")]
	private void Update()
	{
	}

	[Token(Token = "0x60000A0")]
	[Address(RVA = "0x885B54", Offset = "0x885B54", VA = "0x885B54")]
	private void FixHeadOrientation()
	{
	}

	[Token(Token = "0x60000A1")]
	[Address(RVA = "0x885C6C", Offset = "0x885C6C", VA = "0x885C6C")]
	private void PostRender()
	{
	}

	[Token(Token = "0x60000A2")]
	[Address(RVA = "0x885940", Offset = "0x885940", VA = "0x885940")]
	private void DistanceFade()
	{
	}

	[Token(Token = "0x60000A3")]
	[Address(RVA = "0x885A34", Offset = "0x885A34", VA = "0x885A34")]
	private void EyeBlink()
	{
	}

	[Token(Token = "0x60000A4")]
	[Address(RVA = "0x885D14", Offset = "0x885D14", VA = "0x885D14")]
	public RandomAvatar()
	{
	}
}
[Token(Token = "0x2000034")]
public class SendLogMessage : MonoBehaviour
{
	[Token(Token = "0x4000082")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private string message;

	[Token(Token = "0x60000A5")]
	[Address(RVA = "0x887FD0", Offset = "0x887FD0", VA = "0x887FD0")]
	private void Start()
	{
	}

	[Token(Token = "0x60000A6")]
	[Address(RVA = "0x88819C", Offset = "0x88819C", VA = "0x88819C")]
	public SendLogMessage()
	{
	}
}
[Token(Token = "0x2000035")]
public class QuitApp : SerializedMonoBehaviour
{
	[Token(Token = "0x4000083")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public List<IResetable> Resetables;

	[Token(Token = "0x60000A7")]
	[Address(RVA = "0x885544", Offset = "0x885544", VA = "0x885544")]
	public void Reset()
	{
	}

	[Token(Token = "0x60000A8")]
	[Address(RVA = "0x8856A4", Offset = "0x8856A4", VA = "0x8856A4")]
	public void Quit()
	{
	}

	[Token(Token = "0x60000A9")]
	[Address(RVA = "0x8856AC", Offset = "0x8856AC", VA = "0x8856AC")]
	public QuitApp()
	{
	}
}
[Token(Token = "0x2000036")]
public interface IResetable
{
	[Token(Token = "0x60000AA")]
	void OnServerReset();
}
[Serializable]
[Token(Token = "0x2000037")]
public struct SerializableQuaternion
{
	[Token(Token = "0x4000084")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float x;

	[Token(Token = "0x4000085")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float y;

	[Token(Token = "0x4000086")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float z;

	[Token(Token = "0x4000087")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float w;

	[Token(Token = "0x60000AB")]
	[Address(RVA = "0x8881A4", Offset = "0x8881A4", VA = "0x8881A4")]
	public SerializableQuaternion(float rX, float rY, float rZ, float rW)
	{
	}

	[Token(Token = "0x60000AC")]
	[Address(RVA = "0x8881B0", Offset = "0x8881B0", VA = "0x8881B0", Slot = "3")]
	public override string ToString()
	{
		return null;
	}

	[Token(Token = "0x60000AD")]
	[Address(RVA = "0x888354", Offset = "0x888354", VA = "0x888354")]
	public static implicit operator Quaternion(SerializableQuaternion rValue)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x60000AE")]
	[Address(RVA = "0x888384", Offset = "0x888384", VA = "0x888384")]
	public static implicit operator SerializableQuaternion(Quaternion rValue)
	{
		return default(SerializableQuaternion);
	}
}
[Serializable]
[Token(Token = "0x2000038")]
public struct SerializableVector3
{
	[Token(Token = "0x4000088")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float x;

	[Token(Token = "0x4000089")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float y;

	[Token(Token = "0x400008A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float z;

	[Token(Token = "0x60000AF")]
	[Address(RVA = "0x888388", Offset = "0x888388", VA = "0x888388")]
	public SerializableVector3(float rX, float rY, float rZ)
	{
	}

	[Token(Token = "0x60000B0")]
	[Address(RVA = "0x888394", Offset = "0x888394", VA = "0x888394", Slot = "3")]
	public override string ToString()
	{
		return null;
	}

	[Token(Token = "0x60000B1")]
	[Address(RVA = "0x888454", Offset = "0x888454", VA = "0x888454")]
	public static implicit operator Vector3(SerializableVector3 rValue)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60000B2")]
	[Address(RVA = "0x888488", Offset = "0x888488", VA = "0x888488")]
	public static implicit operator SerializableVector3(Vector3 rValue)
	{
		return default(SerializableVector3);
	}

	[Token(Token = "0x60000B3")]
	[Address(RVA = "0x88848C", Offset = "0x88848C", VA = "0x88848C")]
	public static SerializableVector3 operator +(SerializableVector3 Vec1, SerializableVector3 Vec2)
	{
		return default(SerializableVector3);
	}

	[Token(Token = "0x60000B4")]
	[Address(RVA = "0x88849C", Offset = "0x88849C", VA = "0x88849C")]
	public static SerializableVector3 operator -(SerializableVector3 Vec1, SerializableVector3 Vec2)
	{
		return default(SerializableVector3);
	}
}
[Token(Token = "0x2000039")]
public class MessageUI : MonoBehaviour
{
	[Token(Token = "0x400008B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text textUI;

	[Token(Token = "0x400008C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public InputField textInput;

	[Token(Token = "0x400008D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string receivedText;

	[Token(Token = "0x400008E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private TextMessage _textMessage;

	[Token(Token = "0x400008F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private NetworkManager _networkManager;

	[Token(Token = "0x60000B5")]
	[Address(RVA = "0xACD924", Offset = "0xACD924", VA = "0xACD924")]
	private void Start()
	{
	}

	[Token(Token = "0x60000B6")]
	[Address(RVA = "0xACDA94", Offset = "0xACDA94", VA = "0xACDA94")]
	private void Update()
	{
	}

	[Token(Token = "0x60000B7")]
	[Address(RVA = "0xACDAC0", Offset = "0xACDAC0", VA = "0xACDAC0")]
	public void OnTextChange()
	{
	}

	[Token(Token = "0x60000B8")]
	[Address(RVA = "0xACDB00", Offset = "0xACDB00", VA = "0xACDB00")]
	public MessageUI()
	{
	}

	[Token(Token = "0x60000B9")]
	[Address(RVA = "0xACDB08", Offset = "0xACDB08", VA = "0xACDB08")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x706C0C", Offset = "0x706C0C")]
	private void <Start>b__5_0(INetworkMessage message)
	{
	}
}
[Token(Token = "0x200003A")]
public class PingUI : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20001CF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x700FE8", Offset = "0x700FE8")]
	private sealed class <>c
	{
		[Token(Token = "0x40009A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x40009A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action<INetworkMessage> <>9__2_0;

		[Token(Token = "0x60011B5")]
		[Address(RVA = "0xAE3008", Offset = "0xAE3008", VA = "0xAE3008")]
		public <>c()
		{
		}

		[Token(Token = "0x60011B6")]
		[Address(RVA = "0xAE3010", Offset = "0xAE3010", VA = "0xAE3010")]
		internal void <Start>b__2_0(INetworkMessage ping)
		{
		}
	}

	[Token(Token = "0x4000090")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text text;

	[Token(Token = "0x4000091")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private System.Timers.Timer _sendTimer;

	[Token(Token = "0x60000BA")]
	[Address(RVA = "0xAE2D10", Offset = "0xAE2D10", VA = "0xAE2D10")]
	private void Start()
	{
	}

	[Token(Token = "0x60000BB")]
	[Address(RVA = "0xAE2EB0", Offset = "0xAE2EB0", VA = "0xAE2EB0")]
	private void SendTransform(object sender, ElapsedEventArgs e)
	{
	}

	[Token(Token = "0x60000BC")]
	[Address(RVA = "0xAE2F9C", Offset = "0xAE2F9C", VA = "0xAE2F9C")]
	public PingUI()
	{
	}
}
[Token(Token = "0x200003B")]
public class DelayActive : MonoBehaviour
{
	[Token(Token = "0x20001D0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x700FF8", Offset = "0x700FF8")]
	private sealed class <Delay>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40009A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40009A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40009A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DelayActive <>4__this;

		[Token(Token = "0x40009A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private WaitForSeconds <wait>5__2;

		[Token(Token = "0x40009A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private MeshRenderer[] <>7__wrap2;

		[Token(Token = "0x40009A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int <>7__wrap3;

		[Token(Token = "0x17000223")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60011BA")]
			[Address(RVA = "0x93E42C", Offset = "0x93E42C", VA = "0x93E42C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000224")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60011BC")]
			[Address(RVA = "0x93E494", Offset = "0x93E494", VA = "0x93E494", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60011B7")]
		[Address(RVA = "0x93E2CC", Offset = "0x93E2CC", VA = "0x93E2CC")]
		[DebuggerHidden]
		public <Delay>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x60011B8")]
		[Address(RVA = "0x93E300", Offset = "0x93E300", VA = "0x93E300", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60011B9")]
		[Address(RVA = "0x93E304", Offset = "0x93E304", VA = "0x93E304", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60011BB")]
		[Address(RVA = "0x93E434", Offset = "0x93E434", VA = "0x93E434", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000092")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private MeshRenderer[] objs;

	[Token(Token = "0x60000BD")]
	[Address(RVA = "0x93E164", Offset = "0x93E164", VA = "0x93E164")]
	private void Start()
	{
	}

	[Token(Token = "0x60000BE")]
	[Address(RVA = "0x93E25C", Offset = "0x93E25C", VA = "0x93E25C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x706C1C", Offset = "0x706C1C")]
	private IEnumerator Delay()
	{
		return null;
	}

	[Token(Token = "0x60000BF")]
	[Address(RVA = "0x93E2F8", Offset = "0x93E2F8", VA = "0x93E2F8")]
	public DelayActive()
	{
	}
}
[Token(Token = "0x200003C")]
public class AnimatorDisableGameObject : StateMachineBehaviour
{
	[Token(Token = "0x20001D1")]
	public enum State
	{
		[Token(Token = "0x40009A9")]
		OnEnter,
		[Token(Token = "0x40009AA")]
		OnExit
	}

	[Token(Token = "0x4000093")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public State state;

	[Token(Token = "0x60000C0")]
	[Address(RVA = "0x936D28", Offset = "0x936D28", VA = "0x936D28", Slot = "4")]
	public override void OnStateEnter(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
	{
	}

	[Token(Token = "0x60000C1")]
	[Address(RVA = "0x936D68", Offset = "0x936D68", VA = "0x936D68", Slot = "6")]
	public override void OnStateExit(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
	{
	}

	[Token(Token = "0x60000C2")]
	[Address(RVA = "0x936DAC", Offset = "0x936DAC", VA = "0x936DAC")]
	public AnimatorDisableGameObject()
	{
	}
}
[Token(Token = "0x200003D")]
public class FrameSequencePlayer : MonoBehaviour
{
	[Token(Token = "0x20001D2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x701008", Offset = "0x701008")]
	private sealed class <Ticker>d__18 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40009AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40009AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40009AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FrameSequencePlayer <>4__this;

		[Token(Token = "0x17000225")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60011C0")]
			[Address(RVA = "0x9449DC", Offset = "0x9449DC", VA = "0x9449DC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000226")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60011C2")]
			[Address(RVA = "0x944A44", Offset = "0x944A44", VA = "0x944A44", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60011BD")]
		[Address(RVA = "0x944754", Offset = "0x944754", VA = "0x944754")]
		[DebuggerHidden]
		public <Ticker>d__18(int <>1__state)
		{
		}

		[Token(Token = "0x60011BE")]
		[Address(RVA = "0x94488C", Offset = "0x94488C", VA = "0x94488C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60011BF")]
		[Address(RVA = "0x944890", Offset = "0x944890", VA = "0x944890", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60011C1")]
		[Address(RVA = "0x9449E4", Offset = "0x9449E4", VA = "0x9449E4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000094")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool PlayOnEnable;

	[Token(Token = "0x4000095")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x701680", Offset = "0x701680")]
	public int FrameRate;

	[Token(Token = "0x4000096")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool Loop;

	[Token(Token = "0x4000097")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string ShaderProperty;

	[Token(Token = "0x4000098")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Material SpecificMaterial;

	[Token(Token = "0x4000099")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool UseSharedMaterial;

	[Token(Token = "0x400009A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Texture2D[] Frames;

	[Token(Token = "0x400009B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Material _material;

	[Token(Token = "0x400009C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Texture _originalTexture;

	[Token(Token = "0x400009D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Coroutine _ticker;

	[Token(Token = "0x400009E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Renderer _renderer;

	[Token(Token = "0x400009F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int _frameIndex;

	[Token(Token = "0x40000A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private bool _playing;

	[Token(Token = "0x60000C3")]
	[Address(RVA = "0x94436C", Offset = "0x94436C", VA = "0x94436C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60000C4")]
	[Address(RVA = "0x94463C", Offset = "0x94463C", VA = "0x94463C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60000C5")]
	[Address(RVA = "0x9445D8", Offset = "0x9445D8", VA = "0x9445D8")]
	public void Play()
	{
	}

	[Token(Token = "0x60000C6")]
	[Address(RVA = "0x944724", Offset = "0x944724", VA = "0x944724")]
	public void Pause()
	{
	}

	[Token(Token = "0x60000C7")]
	[Address(RVA = "0x944678", Offset = "0x944678", VA = "0x944678")]
	public void Stop()
	{
	}

	[Token(Token = "0x60000C8")]
	[Address(RVA = "0x9446B4", Offset = "0x9446B4", VA = "0x9446B4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x706C80", Offset = "0x706C80")]
	private IEnumerator Ticker()
	{
		return null;
	}

	[Token(Token = "0x60000C9")]
	[Address(RVA = "0x944780", Offset = "0x944780", VA = "0x944780")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60000CA")]
	[Address(RVA = "0x94481C", Offset = "0x94481C", VA = "0x94481C")]
	public FrameSequencePlayer()
	{
	}
}
[Token(Token = "0x200003E")]
public class HandAnimator : MonoBehaviour
{
	[Token(Token = "0x20001D3")]
	public enum PoseId
	{
		[Token(Token = "0x40009AF")]
		Idle,
		[Token(Token = "0x40009B0")]
		Up,
		[Token(Token = "0x40009B1")]
		Touch,
		[Token(Token = "0x40009B2")]
		Down
	}

	[Token(Token = "0x20001D4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x701018", Offset = "0x701018")]
	private sealed class <TransitionResponsiveHandPoses>d__28 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40009B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40009B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40009B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HandAnimator <>4__this;

		[Token(Token = "0x40009B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float target;

		[Token(Token = "0x40009B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <endTime>5__2;

		[Token(Token = "0x40009B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <sw>5__3;

		[Token(Token = "0x17000227")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60011C6")]
			[Address(RVA = "0x96AB98", Offset = "0x96AB98", VA = "0x96AB98", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000228")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60011C8")]
			[Address(RVA = "0x96AC00", Offset = "0x96AC00", VA = "0x96AC00", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60011C3")]
		[Address(RVA = "0x96AA08", Offset = "0x96AA08", VA = "0x96AA08")]
		[DebuggerHidden]
		public <TransitionResponsiveHandPoses>d__28(int <>1__state)
		{
		}

		[Token(Token = "0x60011C4")]
		[Address(RVA = "0x96AA34", Offset = "0x96AA34", VA = "0x96AA34", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60011C5")]
		[Address(RVA = "0x96AA38", Offset = "0x96AA38", VA = "0x96AA38", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60011C7")]
		[Address(RVA = "0x96ABA0", Offset = "0x96ABA0", VA = "0x96ABA0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40000A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Animator animator;

	[Token(Token = "0x40000A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string IdleParameter;

	[Token(Token = "0x40000A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x70169C", Offset = "0x70169C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x70169C", Offset = "0x70169C")]
	public Transform Pivot1;

	[Token(Token = "0x40000A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform Pivot2;

	[Token(Token = "0x40000A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform Pivot3;

	[Token(Token = "0x40000A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform Pivot4;

	[Token(Token = "0x40000A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform Pivot5;

	[Token(Token = "0x40000A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform Pivot6;

	[Token(Token = "0x40000A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform Pivot7;

	[Token(Token = "0x40000AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly int ThumbPoseId;

	[Token(Token = "0x40000AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static readonly int IndexPoseId;

	[Token(Token = "0x40000AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static readonly int ThreePoseId;

	[Token(Token = "0x40000AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private int m_thumbLayer;

	[Token(Token = "0x40000AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private int m_indexLayer;

	[Token(Token = "0x40000AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int m_threeLayer;

	[Token(Token = "0x40000B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7016E8", Offset = "0x7016E8")]
	private bool <isPosing>k__BackingField;

	[Token(Token = "0x40000B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Coroutine m_layerCoroutine;

	[Token(Token = "0x17000009")]
	public bool isPosing
	{
		[Token(Token = "0x60000CB")]
		[Address(RVA = "0x944A90", Offset = "0x944A90", VA = "0x944A90")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x706CE4", Offset = "0x706CE4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60000CC")]
		[Address(RVA = "0x944A98", Offset = "0x944A98", VA = "0x944A98")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x706CF4", Offset = "0x706CF4")]
		set
		{
		}
	}

	[Token(Token = "0x60000CD")]
	[Address(RVA = "0x944AA4", Offset = "0x944AA4", VA = "0x944AA4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60000CE")]
	[Address(RVA = "0x944C08", Offset = "0x944C08", VA = "0x944C08")]
	public void PlayPose(HandPose pose)
	{
	}

	[Token(Token = "0x60000CF")]
	[Address(RVA = "0x944B78", Offset = "0x944B78", VA = "0x944B78")]
	public void PlayIdle()
	{
	}

	[Token(Token = "0x60000D0")]
	[Address(RVA = "0x944EE4", Offset = "0x944EE4", VA = "0x944EE4")]
	public void SetThumbPoseId(PoseId id)
	{
	}

	[Token(Token = "0x60000D1")]
	[Address(RVA = "0x944FA8", Offset = "0x944FA8", VA = "0x944FA8")]
	public void SetIndexPoseId(PoseId id)
	{
	}

	[Token(Token = "0x60000D2")]
	[Address(RVA = "0x94506C", Offset = "0x94506C", VA = "0x94506C")]
	public void SetThreePoseId(PoseId id)
	{
	}

	[Token(Token = "0x60000D3")]
	[Address(RVA = "0x944D3C", Offset = "0x944D3C", VA = "0x944D3C")]
	public void DisableResponsiveHandPoses()
	{
	}

	[Token(Token = "0x60000D4")]
	[Address(RVA = "0x944E64", Offset = "0x944E64", VA = "0x944E64")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x706D04", Offset = "0x706D04")]
	private IEnumerator TransitionResponsiveHandPoses(float target)
	{
		return null;
	}

	[Token(Token = "0x60000D5")]
	[Address(RVA = "0x945130", Offset = "0x945130", VA = "0x945130")]
	private void SetAllLayersWeight(float weight)
	{
	}

	[Token(Token = "0x60000D6")]
	[Address(RVA = "0x945230", Offset = "0x945230", VA = "0x945230")]
	public HandAnimator()
	{
	}
}
[Token(Token = "0x200003F")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x6FFB18", Offset = "0x6FFB18")]
public class MaterialAnimator : MonoBehaviour
{
	[Token(Token = "0x20001D5")]
	public enum PropertyTypes
	{
		[Token(Token = "0x40009BA")]
		Int,
		[Token(Token = "0x40009BB")]
		Float,
		[Token(Token = "0x40009BC")]
		Color,
		[Token(Token = "0x40009BD")]
		Vector,
		[Token(Token = "0x40009BE")]
		Texture
	}

	[Serializable]
	[Token(Token = "0x20001D6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x701028", Offset = "0x701028")]
	private sealed class <>c
	{
		[Token(Token = "0x40009BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x40009C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Predicate<Material> <>9__23_0;

		[Token(Token = "0x60011CA")]
		[Address(RVA = "0x980A74", Offset = "0x980A74", VA = "0x980A74")]
		public <>c()
		{
		}

		[Token(Token = "0x60011CB")]
		[Address(RVA = "0x980A7C", Offset = "0x980A7C", VA = "0x980A7C")]
		internal bool <Awake>b__23_0(Material m)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x40000B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material[] SharedMaterials;

	[Token(Token = "0x40000B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MaterialSet[] materialSets;

	[Token(Token = "0x40000B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x7016F8", Offset = "0x7016F8")]
	public string PropertyName;

	[Token(Token = "0x40000B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public PropertyTypes PropertyType;

	[Token(Token = "0x40000B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool SetPropertyOnStart;

	[Token(Token = "0x40000B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
	public bool SetPropertyOnEnable;

	[Token(Token = "0x40000B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x36")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x701708", Offset = "0x701708")]
	public bool setOnUpdate;

	[Token(Token = "0x40000B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x701740", Offset = "0x701740")]
	public int IntValue;

	[Token(Token = "0x40000BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x701778", Offset = "0x701778")]
	public float FloatValue;

	[Token(Token = "0x40000BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7017B0", Offset = "0x7017B0")]
	public Color ColorValue;

	[Token(Token = "0x40000BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool onlyAlpha;

	[Token(Token = "0x40000BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7017E8", Offset = "0x7017E8")]
	public Vector4 VectorValue;

	[Token(Token = "0x40000BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x701820", Offset = "0x701820")]
	public Texture Texture;

	[Token(Token = "0x40000BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x701858", Offset = "0x701858")]
	public bool applyGammaToAlpha;

	[Token(Token = "0x40000C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private int[] m_intValues;

	[Token(Token = "0x40000C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float[] m_floatValues;

	[Token(Token = "0x40000C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Color[] m_colorValues;

	[Token(Token = "0x40000C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Vector4[] m_vectorValues;

	[Token(Token = "0x40000C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Texture[] m_textures;

	[Token(Token = "0x40000C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private bool m_animationMove;

	[Token(Token = "0x40000C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private List<Material> m_materials;

	[Token(Token = "0x40000C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private int m_prop;

	[Token(Token = "0x60000D8")]
	[Address(RVA = "0x97F620", Offset = "0x97F620", VA = "0x97F620")]
	private void Awake()
	{
	}

	[Token(Token = "0x60000D9")]
	[Address(RVA = "0x97FC84", Offset = "0x97FC84", VA = "0x97FC84")]
	private void Start()
	{
	}

	[Token(Token = "0x60000DA")]
	[Address(RVA = "0x980228", Offset = "0x980228", VA = "0x980228")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60000DB")]
	[Address(RVA = "0x980238", Offset = "0x980238", VA = "0x980238")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60000DC")]
	[Address(RVA = "0x97FC94", Offset = "0x97FC94", VA = "0x97FC94")]
	private void SetProperties()
	{
	}

	[Token(Token = "0x60000DD")]
	[Address(RVA = "0x980248", Offset = "0x980248", VA = "0x980248")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60000DE")]
	[Address(RVA = "0x9807FC", Offset = "0x9807FC", VA = "0x9807FC")]
	public void SetTexture(Texture texture)
	{
	}

	[Token(Token = "0x60000DF")]
	[Address(RVA = "0x980924", Offset = "0x980924", VA = "0x980924")]
	public MaterialAnimator()
	{
	}

	[Token(Token = "0x60000E0")]
	[Address(RVA = "0x9809DC", Offset = "0x9809DC", VA = "0x9809DC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x706D68", Offset = "0x706D68")]
	private bool <Awake>b__23_1(Material m)
	{
		return default(bool);
	}
}
[Token(Token = "0x2000040")]
public class ParticleUpdater : MonoBehaviour
{
	[Token(Token = "0x40000C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public bool EnablePlayback;

	[Token(Token = "0x40000C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ParticleSystem _ps;

	[Token(Token = "0x60000E1")]
	[Address(RVA = "0xAE19EC", Offset = "0xAE19EC", VA = "0xAE19EC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60000E2")]
	[Address(RVA = "0xAE1AC0", Offset = "0xAE1AC0", VA = "0xAE1AC0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60000E3")]
	[Address(RVA = "0xAE1B34", Offset = "0xAE1B34", VA = "0xAE1B34")]
	private void UpdateParticles()
	{
	}

	[Token(Token = "0x60000E4")]
	[Address(RVA = "0xAE1C50", Offset = "0xAE1C50", VA = "0xAE1C50")]
	public ParticleUpdater()
	{
	}
}
[Token(Token = "0x2000041")]
public class ShakeAnimation : MonoBehaviour
{
	[Token(Token = "0x40000CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform _targetTransform;

	[Token(Token = "0x40000CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float _shakeFrequency;

	[Token(Token = "0x40000CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private float _shakeStrength;

	[Token(Token = "0x40000CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float _shakeTime;

	[Token(Token = "0x40000CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private PlaySound _audioSource;

	[Token(Token = "0x40000CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int _shakeCount;

	[Token(Token = "0x40000D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private bool _isEnabled;

	[Token(Token = "0x60000E5")]
	[Address(RVA = "0x888D94", Offset = "0x888D94", VA = "0x888D94")]
	private void Update()
	{
	}

	[Token(Token = "0x60000E6")]
	[Address(RVA = "0x888E18", Offset = "0x888E18", VA = "0x888E18")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60000E7")]
	[Address(RVA = "0x888E20", Offset = "0x888E20", VA = "0x888E20")]
	public ShakeAnimation()
	{
	}
}
[Token(Token = "0x2000042")]
public class AppManager : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20001D7")]
	public class SceneKey
	{
		[Token(Token = "0x40009C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public KeyCode key;

		[Token(Token = "0x40009C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int sceneIndex;

		[Token(Token = "0x60011CC")]
		[Address(RVA = "0x937F40", Offset = "0x937F40", VA = "0x937F40")]
		public SceneKey(KeyCode keyCode, int index)
		{
		}
	}

	[Token(Token = "0x20001D8")]
	public delegate void FrameTick();

	[Token(Token = "0x20001D9")]
	public delegate void LateFrameTick();

	[Token(Token = "0x40000D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private bool singleUser;

	[Token(Token = "0x40000D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7018D8", Offset = "0x7018D8")]
	public int frameRate;

	[Token(Token = "0x40000D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7018F4", Offset = "0x7018F4")]
	public bool allowFastForward;

	[Token(Token = "0x40000D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x70192C", Offset = "0x70192C")]
	public KeyCode fullscreenKey;

	[Token(Token = "0x40000D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x701964", Offset = "0x701964")]
	public KeyCode vsyncKey;

	[Token(Token = "0x40000D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x70199C", Offset = "0x70199C")]
	public SceneKey[] sceneKeys;

	[Token(Token = "0x40000D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7019D4", Offset = "0x7019D4")]
	public KeyCode restartKey;

	[Token(Token = "0x40000D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public int restartIndex;

	[Token(Token = "0x40000D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x701A0C", Offset = "0x701A0C")]
	public KeyCode quitKey;

	[Token(Token = "0x40000DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public string quitScene;

	[Token(Token = "0x40000DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static float FrameRateDelta;

	[Token(Token = "0x40000DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static float SteppedTime;

	[Token(Token = "0x40000DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static AppManager instance;

	[Token(Token = "0x40000E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x701A64", Offset = "0x701A64")]
	private static bool <firstRun>k__BackingField;

	[Token(Token = "0x40000E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x701A74", Offset = "0x701A74")]
	private static bool <isSingleUser>k__BackingField;

	[Token(Token = "0x40000E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float _prevTime;

	[Token(Token = "0x40000E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private int _updates;

	[Token(Token = "0x40000E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private int _lateUpdates;

	[Token(Token = "0x40000E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
	private static bool m_allowFastForward;

	[Token(Token = "0x1700000A")]
	public static bool firstRun
	{
		[Token(Token = "0x60000EC")]
		[Address(RVA = "0x937094", Offset = "0x937094", VA = "0x937094")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x706DB8", Offset = "0x706DB8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60000ED")]
		[Address(RVA = "0x9370E4", Offset = "0x9370E4", VA = "0x9370E4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x706DC8", Offset = "0x706DC8")]
		private set
		{
		}
	}

	[Token(Token = "0x1700000B")]
	public static bool isSingleUser
	{
		[Token(Token = "0x60000EE")]
		[Address(RVA = "0x93713C", Offset = "0x93713C", VA = "0x93713C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x706DD8", Offset = "0x706DD8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60000EF")]
		[Address(RVA = "0x93718C", Offset = "0x93718C", VA = "0x93718C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x706DE8", Offset = "0x706DE8")]
		private set
		{
		}
	}

	[Token(Token = "0x14000001")]
	public static event FrameTick OnFrameTick
	{
		[Token(Token = "0x60000E8")]
		[Address(RVA = "0x936DB4", Offset = "0x936DB4", VA = "0x936DB4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x706D78", Offset = "0x706D78")]
		add
		{
		}
		[Token(Token = "0x60000E9")]
		[Address(RVA = "0x936E6C", Offset = "0x936E6C", VA = "0x936E6C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x706D88", Offset = "0x706D88")]
		remove
		{
		}
	}

	[Token(Token = "0x14000002")]
	public static event LateFrameTick OnLateFrameTick
	{
		[Token(Token = "0x60000EA")]
		[Address(RVA = "0x936F24", Offset = "0x936F24", VA = "0x936F24")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x706D98", Offset = "0x706D98")]
		add
		{
		}
		[Token(Token = "0x60000EB")]
		[Address(RVA = "0x936FDC", Offset = "0x936FDC", VA = "0x936FDC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x706DA8", Offset = "0x706DA8")]
		remove
		{
		}
	}

	[Token(Token = "0x60000F0")]
	[Address(RVA = "0x9371E4", Offset = "0x9371E4", VA = "0x9371E4")]
	private void Awake()
	{
	}

	[Token(Token = "0x60000F1")]
	[Address(RVA = "0x937394", Offset = "0x937394", VA = "0x937394")]
	private void Update()
	{
	}

	[Token(Token = "0x60000F2")]
	[Address(RVA = "0x937A80", Offset = "0x937A80", VA = "0x937A80")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60000F3")]
	[Address(RVA = "0x937704", Offset = "0x937704", VA = "0x937704")]
	private void FrameTicker()
	{
	}

	[Token(Token = "0x60000F4")]
	[Address(RVA = "0x9379E8", Offset = "0x9379E8", VA = "0x9379E8")]
	public void LoadIndex(int sceneIndex)
	{
	}

	[Token(Token = "0x60000F5")]
	[Address(RVA = "0x93762C", Offset = "0x93762C", VA = "0x93762C")]
	public void Restart()
	{
	}

	[Token(Token = "0x60000F6")]
	[Address(RVA = "0x937698", Offset = "0x937698", VA = "0x937698")]
	public void Quit()
	{
	}

	[Token(Token = "0x60000F7")]
	[Address(RVA = "0x937D08", Offset = "0x937D08", VA = "0x937D08")]
	public AppManager()
	{
	}
}
[Token(Token = "0x2000043")]
public class AppMenu : MonoBehaviour
{
	[Token(Token = "0x40000E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x701A84", Offset = "0x701A84")]
	[AttributeAttribute(Name = "HelpAttribute", RVA = "0x701A84", Offset = "0x701A84")]
	public VRController.Button viveButton;

	[Token(Token = "0x40000E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public VRController.Button oculusButton;

	[Token(Token = "0x40000E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x701AE4", Offset = "0x701AE4")]
	public float holdTime;

	[Token(Token = "0x40000E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject toggleGroup;

	[Token(Token = "0x40000EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x701AFC", Offset = "0x701AFC")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x701AFC", Offset = "0x701AFC")]
	public float height;

	[Token(Token = "0x40000EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x701B50", Offset = "0x701B50")]
	public float distance;

	[Token(Token = "0x40000EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x701B68", Offset = "0x701B68")]
	public Transform dot;

	[Token(Token = "0x40000ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform line;

	[Token(Token = "0x40000EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool hideOnAwake;

	[Token(Token = "0x40000EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public LayerMask layerMask;

	[Token(Token = "0x40000F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Transform m_leftDot;

	[Token(Token = "0x40000F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Transform m_rightDot;

	[Token(Token = "0x40000F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Transform m_leftLine;

	[Token(Token = "0x40000F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Transform m_rightLine;

	[Token(Token = "0x40000F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float m_holdTime;

	[Token(Token = "0x40000F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private bool m_canBeHidden;

	[Token(Token = "0x60000F8")]
	[Address(RVA = "0x938008", Offset = "0x938008", VA = "0x938008")]
	private void Awake()
	{
	}

	[Token(Token = "0x60000F9")]
	[Address(RVA = "0x93829C", Offset = "0x93829C", VA = "0x93829C")]
	private void Update()
	{
	}

	[Token(Token = "0x60000FA")]
	[Address(RVA = "0x938858", Offset = "0x938858", VA = "0x938858")]
	private void Show()
	{
	}

	[Token(Token = "0x60000FB")]
	[Address(RVA = "0x93863C", Offset = "0x93863C", VA = "0x93863C")]
	private void CheckHit(VRController controller, Transform line, Transform dot)
	{
	}

	[Token(Token = "0x60000FC")]
	[Address(RVA = "0x938AF0", Offset = "0x938AF0", VA = "0x938AF0")]
	public AppMenu()
	{
	}
}
[Token(Token = "0x2000044")]
public class AutoReset : MonoBehaviour
{
	[Token(Token = "0x60000FD")]
	[Address(RVA = "0x938F84", Offset = "0x938F84", VA = "0x938F84")]
	private void Start()
	{
	}

	[Token(Token = "0x60000FE")]
	[Address(RVA = "0x938FF0", Offset = "0x938FF0", VA = "0x938FF0")]
	public AutoReset()
	{
	}
}
[Token(Token = "0x2000045")]
public class ControllerTips : MonoBehaviour
{
	[Token(Token = "0x20001DA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x701038", Offset = "0x701038")]
	private sealed class <InputDevices_deviceConnected>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40009C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40009C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40009C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ControllerTips <>4__this;

		[Token(Token = "0x17000229")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60011D8")]
			[Address(RVA = "0x93D178", Offset = "0x93D178", VA = "0x93D178", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700022A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60011DA")]
			[Address(RVA = "0x93D1E0", Offset = "0x93D1E0", VA = "0x93D1E0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60011D5")]
		[Address(RVA = "0x93D038", Offset = "0x93D038", VA = "0x93D038")]
		[DebuggerHidden]
		public <InputDevices_deviceConnected>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x60011D6")]
		[Address(RVA = "0x93D06C", Offset = "0x93D06C", VA = "0x93D06C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60011D7")]
		[Address(RVA = "0x93D070", Offset = "0x93D070", VA = "0x93D070", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60011D9")]
		[Address(RVA = "0x93D180", Offset = "0x93D180", VA = "0x93D180", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40000F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject _oculusTips;

	[Token(Token = "0x40000F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject _viveTips;

	[Token(Token = "0x40000F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<InputDevice> _leftHandDevices;

	[Token(Token = "0x60000FF")]
	[Address(RVA = "0x93CF4C", Offset = "0x93CF4C", VA = "0x93CF4C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000100")]
	[Address(RVA = "0x93CFC8", Offset = "0x93CFC8", VA = "0x93CFC8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x706DF8", Offset = "0x706DF8")]
	private IEnumerator InputDevices_deviceConnected()
	{
		return null;
	}

	[Token(Token = "0x6000101")]
	[Address(RVA = "0x93D064", Offset = "0x93D064", VA = "0x93D064")]
	public ControllerTips()
	{
	}
}
[Token(Token = "0x2000046")]
public class CreditsImageSelector : MonoBehaviour
{
	[Token(Token = "0x40000F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Sprite _englishCredits;

	[Token(Token = "0x40000FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Sprite _frenchCredits;

	[Token(Token = "0x6000102")]
	[Address(RVA = "0x93D1E8", Offset = "0x93D1E8", VA = "0x93D1E8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000103")]
	[Address(RVA = "0x93D2A0", Offset = "0x93D2A0", VA = "0x93D2A0")]
	public CreditsImageSelector()
	{
	}
}
[Token(Token = "0x2000047")]
public class DebugUI : MonoBehaviour
{
	[Token(Token = "0x20001DB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x701048", Offset = "0x701048")]
	private sealed class <UpdateLoop>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40009C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40009C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40009C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DebugUI <>4__this;

		[Token(Token = "0x40009C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private WaitForSecondsRealtime <wait>5__2;

		[Token(Token = "0x1700022B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60011DE")]
			[Address(RVA = "0x93E0F4", Offset = "0x93E0F4", VA = "0x93E0F4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700022C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60011E0")]
			[Address(RVA = "0x93E15C", Offset = "0x93E15C", VA = "0x93E15C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60011DB")]
		[Address(RVA = "0x93D79C", Offset = "0x93D79C", VA = "0x93D79C")]
		[DebuggerHidden]
		public <UpdateLoop>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x60011DC")]
		[Address(RVA = "0x93E01C", Offset = "0x93E01C", VA = "0x93E01C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60011DD")]
		[Address(RVA = "0x93E020", Offset = "0x93E020", VA = "0x93E020", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60011DF")]
		[Address(RVA = "0x93E0FC", Offset = "0x93E0FC", VA = "0x93E0FC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40000FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HelpAttribute", RVA = "0x701BC0", Offset = "0x701BC0")]
	public KeyCode toggleKey;

	[Token(Token = "0x40000FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshProUGUI infoText;

	[Token(Token = "0x40000FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Canvas m_canvas;

	[Token(Token = "0x40000FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool m_canvasEnabled;

	[Token(Token = "0x40000FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Coroutine m_update;

	[Token(Token = "0x4000100")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int m_frameCount;

	[Token(Token = "0x4000101")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float m_lastTime;

	[Token(Token = "0x6000104")]
	[Address(RVA = "0x93D37C", Offset = "0x93D37C", VA = "0x93D37C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000105")]
	[Address(RVA = "0x93D414", Offset = "0x93D414", VA = "0x93D414")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000106")]
	[Address(RVA = "0x93D570", Offset = "0x93D570", VA = "0x93D570")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000107")]
	[Address(RVA = "0x93D584", Offset = "0x93D584", VA = "0x93D584")]
	private void Update()
	{
	}

	[Token(Token = "0x6000108")]
	[Address(RVA = "0x93D500", Offset = "0x93D500", VA = "0x93D500")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x706E5C", Offset = "0x706E5C")]
	private IEnumerator UpdateLoop()
	{
		return null;
	}

	[Token(Token = "0x6000109")]
	[Address(RVA = "0x93D654", Offset = "0x93D654", VA = "0x93D654")]
	private void UpdateStatus()
	{
	}

	[Token(Token = "0x600010A")]
	[Address(RVA = "0x93D7C8", Offset = "0x93D7C8", VA = "0x93D7C8")]
	private string GetFrameRate()
	{
		return null;
	}

	[Token(Token = "0x600010B")]
	[Address(RVA = "0x93D9F8", Offset = "0x93D9F8", VA = "0x93D9F8")]
	private string GetVRStatus()
	{
		return null;
	}

	[Token(Token = "0x600010C")]
	[Address(RVA = "0x93D8CC", Offset = "0x93D8CC", VA = "0x93D8CC")]
	private string GetRunningTime()
	{
		return null;
	}

	[Token(Token = "0x600010D")]
	[Address(RVA = "0x93DC48", Offset = "0x93DC48", VA = "0x93DC48")]
	private string GetHeight()
	{
		return null;
	}

	[Token(Token = "0x600010E")]
	[Address(RVA = "0x93DD28", Offset = "0x93DD28", VA = "0x93DD28")]
	private string GetResolution()
	{
		return null;
	}

	[Token(Token = "0x600010F")]
	[Address(RVA = "0x93DDD0", Offset = "0x93DDD0", VA = "0x93DDD0")]
	private string GetVSync()
	{
		return null;
	}

	[Token(Token = "0x6000110")]
	[Address(RVA = "0x93DE54", Offset = "0x93DE54", VA = "0x93DE54")]
	private string GetSmoothVRSpectator()
	{
		return null;
	}

	[Token(Token = "0x6000111")]
	[Address(RVA = "0x93DFB8", Offset = "0x93DFB8", VA = "0x93DFB8")]
	public DebugUI()
	{
	}
}
[Token(Token = "0x2000048")]
public class ExitBehaviour : MonoBehaviour
{
	[Token(Token = "0x20001DC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x701058", Offset = "0x701058")]
	private sealed class <Start>d__0 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40009CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40009CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40009CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private AsyncOperation <async>5__2;

		[Token(Token = "0x1700022D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60011E4")]
			[Address(RVA = "0x942278", Offset = "0x942278", VA = "0x942278", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700022E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60011E6")]
			[Address(RVA = "0x9422E0", Offset = "0x9422E0", VA = "0x9422E0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60011E1")]
		[Address(RVA = "0x942120", Offset = "0x942120", VA = "0x942120")]
		[DebuggerHidden]
		public <Start>d__0(int <>1__state)
		{
		}

		[Token(Token = "0x60011E2")]
		[Address(RVA = "0x942154", Offset = "0x942154", VA = "0x942154", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60011E3")]
		[Address(RVA = "0x942158", Offset = "0x942158", VA = "0x942158", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60011E5")]
		[Address(RVA = "0x942280", Offset = "0x942280", VA = "0x942280", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x6000113")]
	[Address(RVA = "0x9420C0", Offset = "0x9420C0", VA = "0x9420C0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x706EC0", Offset = "0x706EC0")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000114")]
	[Address(RVA = "0x94214C", Offset = "0x94214C", VA = "0x94214C")]
	public ExitBehaviour()
	{
	}
}
[Token(Token = "0x2000049")]
public class HardQuit : MonoBehaviour
{
	[Token(Token = "0x4000102")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private InputDevice _leftInputDevice;

	[Token(Token = "0x4000103")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private InputDevice _rightInputDevice;

	[Token(Token = "0x4000104")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool _isSteamVR;

	[Token(Token = "0x6000115")]
	[Address(RVA = "0x96E8C4", Offset = "0x96E8C4", VA = "0x96E8C4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000116")]
	[Address(RVA = "0x96E948", Offset = "0x96E948", VA = "0x96E948")]
	private void InputDevices_deviceConnected(InputDevice obj)
	{
	}

	[Token(Token = "0x6000117")]
	[Address(RVA = "0x96EB74", Offset = "0x96EB74", VA = "0x96EB74")]
	private void Update()
	{
	}

	[Token(Token = "0x6000118")]
	[Address(RVA = "0x96EC74", Offset = "0x96EC74", VA = "0x96EC74")]
	public HardQuit()
	{
	}
}
[Token(Token = "0x200004A")]
public class ImageSequence : MonoBehaviour
{
	[Token(Token = "0x20001DD")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x701068", Offset = "0x701068")]
	private sealed class <ShowCoroutine>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40009CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40009CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40009CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ImageSequence <>4__this;

		[Token(Token = "0x40009D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <i>5__2;

		[Token(Token = "0x1700022F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60011EA")]
			[Address(RVA = "0x970DE8", Offset = "0x970DE8", VA = "0x970DE8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000230")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60011EC")]
			[Address(RVA = "0x970E50", Offset = "0x970E50", VA = "0x970E50", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60011E7")]
		[Address(RVA = "0x970BEC", Offset = "0x970BEC", VA = "0x970BEC")]
		[DebuggerHidden]
		public <ShowCoroutine>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x60011E8")]
		[Address(RVA = "0x970C3C", Offset = "0x970C3C", VA = "0x970C3C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60011E9")]
		[Address(RVA = "0x970C40", Offset = "0x970C40", VA = "0x970C40", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60011EB")]
		[Address(RVA = "0x970DF0", Offset = "0x970DF0", VA = "0x970DF0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000105")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private List<SpriteRenderer> _logoList;

	[Token(Token = "0x4000106")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float _showDuration;

	[Token(Token = "0x4000107")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private UnityEvent OnComplete;

	[Token(Token = "0x6000119")]
	[Address(RVA = "0x970B50", Offset = "0x970B50", VA = "0x970B50")]
	private void Start()
	{
	}

	[Token(Token = "0x600011A")]
	[Address(RVA = "0x970B7C", Offset = "0x970B7C", VA = "0x970B7C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x706F24", Offset = "0x706F24")]
	private IEnumerator ShowCoroutine()
	{
		return null;
	}

	[Token(Token = "0x600011B")]
	[Address(RVA = "0x970C18", Offset = "0x970C18", VA = "0x970C18")]
	public ImageSequence()
	{
	}

	[Token(Token = "0x600011C")]
	[Address(RVA = "0x970C28", Offset = "0x970C28", VA = "0x970C28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x706F88", Offset = "0x706F88")]
	private void <ShowCoroutine>b__4_0()
	{
	}
}
[Token(Token = "0x200004B")]
public class LanguageSelector : MonoBehaviour
{
	[Token(Token = "0x4000108")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string CurrentLanguage;

	[Token(Token = "0x600011D")]
	[Address(RVA = "0x97BAEC", Offset = "0x97BAEC", VA = "0x97BAEC")]
	private void Start()
	{
	}

	[Token(Token = "0x600011E")]
	[Address(RVA = "0x97BB74", Offset = "0x97BB74", VA = "0x97BB74")]
	public void SelectLanguage(int index)
	{
	}

	[Token(Token = "0x600011F")]
	[Address(RVA = "0x97BE7C", Offset = "0x97BE7C", VA = "0x97BE7C")]
	public LanguageSelector()
	{
	}
}
[Token(Token = "0x200004C")]
public class LoadUI : MonoBehaviour
{
	[Token(Token = "0x4000109")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMeshProUGUI textUI;

	[Token(Token = "0x400010A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SceneLoader sceneLoader;

	[Token(Token = "0x6000121")]
	[Address(RVA = "0x97C5E8", Offset = "0x97C5E8", VA = "0x97C5E8")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000122")]
	[Address(RVA = "0x97C6D8", Offset = "0x97C6D8", VA = "0x97C6D8")]
	public LoadUI()
	{
	}
}
[Token(Token = "0x200004D")]
public class MenuElement : MonoBehaviour
{
	[Token(Token = "0x400010B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x701C28", Offset = "0x701C28")]
	public TextMeshProUGUI uiText;

	[Token(Token = "0x400010C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Color focusColor;

	[Token(Token = "0x400010D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public RectTransform progressBar;

	[Token(Token = "0x400010E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool isFillProgress;

	[Token(Token = "0x400010F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject border;

	[Token(Token = "0x4000110")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x701C60", Offset = "0x701C60")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x701C60", Offset = "0x701C60")]
	public float holdTime;

	[Token(Token = "0x4000111")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public UnityEvent pressEvent;

	[Token(Token = "0x4000112")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool m_hasFocus;

	[Token(Token = "0x4000113")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Color m_defaultColor;

	[Token(Token = "0x4000114")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x701CB4", Offset = "0x701CB4")]
	private bool <pressed>k__BackingField;

	[Token(Token = "0x4000115")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float m_holdTime;

	[Token(Token = "0x1700000C")]
	public bool pressed
	{
		[Token(Token = "0x6000123")]
		[Address(RVA = "0xACD53C", Offset = "0xACD53C", VA = "0xACD53C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x706F98", Offset = "0x706F98")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000124")]
		[Address(RVA = "0xACD544", Offset = "0xACD544", VA = "0xACD544")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x706FA8", Offset = "0x706FA8")]
		set
		{
		}
	}

	[Token(Token = "0x6000125")]
	[Address(RVA = "0xACD550", Offset = "0xACD550", VA = "0xACD550")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000126")]
	[Address(RVA = "0xACD638", Offset = "0xACD638", VA = "0xACD638")]
	public void Focus()
	{
	}

	[Token(Token = "0x6000127")]
	[Address(RVA = "0xACD644", Offset = "0xACD644", VA = "0xACD644")]
	private void Update()
	{
	}

	[Token(Token = "0x6000128")]
	[Address(RVA = "0xACD86C", Offset = "0xACD86C", VA = "0xACD86C")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000129")]
	[Address(RVA = "0xACD874", Offset = "0xACD874", VA = "0xACD874")]
	private void Reset()
	{
	}

	[Token(Token = "0x600012A")]
	[Address(RVA = "0xACD8E8", Offset = "0xACD8E8", VA = "0xACD8E8")]
	public MenuElement()
	{
	}
}
[Token(Token = "0x200004E")]
public class SceneLoader : MonoBehaviour
{
	[Token(Token = "0x20001DE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x701078", Offset = "0x701078")]
	private sealed class <DelayedAwake>d__19 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40009D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40009D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40009D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SceneLoader <>4__this;

		[Token(Token = "0x17000231")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60011F0")]
			[Address(RVA = "0x886934", Offset = "0x886934", VA = "0x886934", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000232")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60011F2")]
			[Address(RVA = "0x88699C", Offset = "0x88699C", VA = "0x88699C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60011ED")]
		[Address(RVA = "0x8865E8", Offset = "0x8865E8", VA = "0x8865E8")]
		[DebuggerHidden]
		public <DelayedAwake>d__19(int <>1__state)
		{
		}

		[Token(Token = "0x60011EE")]
		[Address(RVA = "0x8868A4", Offset = "0x8868A4", VA = "0x8868A4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60011EF")]
		[Address(RVA = "0x8868A8", Offset = "0x8868A8", VA = "0x8868A8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60011F1")]
		[Address(RVA = "0x88693C", Offset = "0x88693C", VA = "0x88693C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001DF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x701088", Offset = "0x701088")]
	private sealed class <LoadSceneAsync>d__25 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40009D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40009D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40009D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SceneLoader <>4__this;

		[Token(Token = "0x40009D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private AsyncOperation <load>5__2;

		[Token(Token = "0x40009D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Scene <scene>5__3;

		[Token(Token = "0x17000233")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60011F6")]
			[Address(RVA = "0x886C54", Offset = "0x886C54", VA = "0x886C54", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000234")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60011F8")]
			[Address(RVA = "0x886CBC", Offset = "0x886CBC", VA = "0x886CBC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60011F3")]
		[Address(RVA = "0x886810", Offset = "0x886810", VA = "0x886810")]
		[DebuggerHidden]
		public <LoadSceneAsync>d__25(int <>1__state)
		{
		}

		[Token(Token = "0x60011F4")]
		[Address(RVA = "0x8869A4", Offset = "0x8869A4", VA = "0x8869A4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60011F5")]
		[Address(RVA = "0x8869A8", Offset = "0x8869A8", VA = "0x8869A8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60011F7")]
		[Address(RVA = "0x886C5C", Offset = "0x886C5C", VA = "0x886C5C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001E0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x701098", Offset = "0x701098")]
	private sealed class <LoadSceneAsyncImmediate>d__26 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40009D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40009DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40009DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SceneLoader <>4__this;

		[Token(Token = "0x40009DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private AsyncOperation <load>5__2;

		[Token(Token = "0x40009DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Scene <scene>5__3;

		[Token(Token = "0x17000235")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60011FC")]
			[Address(RVA = "0x886ED0", Offset = "0x886ED0", VA = "0x886ED0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000236")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60011FE")]
			[Address(RVA = "0x886F38", Offset = "0x886F38", VA = "0x886F38", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60011F9")]
		[Address(RVA = "0x88683C", Offset = "0x88683C", VA = "0x88683C")]
		[DebuggerHidden]
		public <LoadSceneAsyncImmediate>d__26(int <>1__state)
		{
		}

		[Token(Token = "0x60011FA")]
		[Address(RVA = "0x886CC4", Offset = "0x886CC4", VA = "0x886CC4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60011FB")]
		[Address(RVA = "0x886CC8", Offset = "0x886CC8", VA = "0x886CC8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60011FD")]
		[Address(RVA = "0x886ED8", Offset = "0x886ED8", VA = "0x886ED8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001E1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7010A8", Offset = "0x7010A8")]
	private sealed class <UnloadSceneAsync>d__27 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40009DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40009DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40009E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SceneLoader <>4__this;

		[Token(Token = "0x40009E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private AsyncOperation <unload>5__2;

		[Token(Token = "0x17000237")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001202")]
			[Address(RVA = "0x887184", Offset = "0x887184", VA = "0x887184", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000238")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001204")]
			[Address(RVA = "0x8871EC", Offset = "0x8871EC", VA = "0x8871EC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60011FF")]
		[Address(RVA = "0x886868", Offset = "0x886868", VA = "0x886868")]
		[DebuggerHidden]
		public <UnloadSceneAsync>d__27(int <>1__state)
		{
		}

		[Token(Token = "0x6001200")]
		[Address(RVA = "0x886F40", Offset = "0x886F40", VA = "0x886F40", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001201")]
		[Address(RVA = "0x886F44", Offset = "0x886F44", VA = "0x886F44", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001203")]
		[Address(RVA = "0x88718C", Offset = "0x88718C", VA = "0x88718C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000116")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UnityEvent onSceneActivated;

	[Token(Token = "0x4000117")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public string loadScenePath;

	[Token(Token = "0x4000118")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public bool autoPreload;

	[Token(Token = "0x4000119")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	[HideInInspector]
	public bool autoActivate;

	[Token(Token = "0x400011A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[HideInInspector]
	public LoadSceneMode loadMode;

	[Token(Token = "0x400011B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public string unloadScenePath;

	[Token(Token = "0x400011C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public UnloadSceneOptions unloadMode;

	[Token(Token = "0x400011D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x701D24", Offset = "0x701D24")]
	private float <loadProgress>k__BackingField;

	[Token(Token = "0x400011E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x701D34", Offset = "0x701D34")]
	private float <unloadProgress>k__BackingField;

	[Token(Token = "0x400011F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private bool m_allowActivation;

	[Token(Token = "0x4000120")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Coroutine m_loadCoroutine;

	[Token(Token = "0x4000121")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Coroutine m_unloadCoroutine;

	[Token(Token = "0x1700000D")]
	public float loadProgress
	{
		[Token(Token = "0x600012B")]
		[Address(RVA = "0x88652C", Offset = "0x88652C", VA = "0x88652C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x706FB8", Offset = "0x706FB8")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600012C")]
		[Address(RVA = "0x886534", Offset = "0x886534", VA = "0x886534")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x706FC8", Offset = "0x706FC8")]
		private set
		{
		}
	}

	[Token(Token = "0x1700000E")]
	public float unloadProgress
	{
		[Token(Token = "0x600012D")]
		[Address(RVA = "0x88653C", Offset = "0x88653C", VA = "0x88653C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x706FD8", Offset = "0x706FD8")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600012E")]
		[Address(RVA = "0x886544", Offset = "0x886544", VA = "0x886544")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x706FE8", Offset = "0x706FE8")]
		private set
		{
		}
	}

	[Token(Token = "0x600012F")]
	[Address(RVA = "0x88654C", Offset = "0x88654C", VA = "0x88654C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000130")]
	[Address(RVA = "0x886578", Offset = "0x886578", VA = "0x886578")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x706FF8", Offset = "0x706FF8")]
	private IEnumerator DelayedAwake()
	{
		return null;
	}

	[Token(Token = "0x6000131")]
	[Address(RVA = "0x886614", Offset = "0x886614", VA = "0x886614")]
	public void Load()
	{
	}

	[Token(Token = "0x6000132")]
	[Address(RVA = "0x8866C4", Offset = "0x8866C4", VA = "0x8866C4")]
	public void LoadImmediate()
	{
	}

	[Token(Token = "0x6000133")]
	[Address(RVA = "0x886760", Offset = "0x886760", VA = "0x886760")]
	public void Unload()
	{
	}

	[Token(Token = "0x6000134")]
	[Address(RVA = "0x8867FC", Offset = "0x8867FC", VA = "0x8867FC")]
	public void AllowActivation()
	{
	}

	[Token(Token = "0x6000135")]
	[Address(RVA = "0x886808", Offset = "0x886808", VA = "0x886808")]
	public void DisallowActivation()
	{
	}

	[Token(Token = "0x6000136")]
	[Address(RVA = "0x886654", Offset = "0x886654", VA = "0x886654")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x70705C", Offset = "0x70705C")]
	private IEnumerator LoadSceneAsync()
	{
		return null;
	}

	[Token(Token = "0x6000137")]
	[Address(RVA = "0x8866F0", Offset = "0x8866F0", VA = "0x8866F0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7070C0", Offset = "0x7070C0")]
	private IEnumerator LoadSceneAsyncImmediate()
	{
		return null;
	}

	[Token(Token = "0x6000138")]
	[Address(RVA = "0x88678C", Offset = "0x88678C", VA = "0x88678C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x707124", Offset = "0x707124")]
	private IEnumerator UnloadSceneAsync()
	{
		return null;
	}

	[Token(Token = "0x6000139")]
	[Address(RVA = "0x886894", Offset = "0x886894", VA = "0x886894")]
	public SceneLoader()
	{
	}
}
[Token(Token = "0x200004F")]
public class DebugButtonAttribute : Attribute
{
	[Token(Token = "0x600013A")]
	[Address(RVA = "0x93D2A8", Offset = "0x93D2A8", VA = "0x93D2A8")]
	public DebugButtonAttribute()
	{
	}
}
[Token(Token = "0x2000050")]
[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0x6FFB7C", Offset = "0x6FFB7C")]
public class HelpAttribute : PropertyAttribute
{
	[Token(Token = "0x4000122")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public readonly string text;

	[Token(Token = "0x600013B")]
	[Address(RVA = "0x97053C", Offset = "0x97053C", VA = "0x97053C")]
	public HelpAttribute(string text)
	{
	}
}
[Token(Token = "0x2000051")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x6FFBB4", Offset = "0x6FFBB4")]
public class AudioFader : MonoBehaviour
{
	[Token(Token = "0x20001E2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7010B8", Offset = "0x7010B8")]
	private sealed class <FadeAudio>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40009E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40009E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40009E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioFader <>4__this;

		[Token(Token = "0x40009E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool fadeIn;

		[Token(Token = "0x40009E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float duration;

		[Token(Token = "0x40009E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <from>5__2;

		[Token(Token = "0x40009E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <to>5__3;

		[Token(Token = "0x40009E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float <endTime>5__4;

		[Token(Token = "0x17000239")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001208")]
			[Address(RVA = "0x938E98", Offset = "0x938E98", VA = "0x938E98", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700023A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600120A")]
			[Address(RVA = "0x938F00", Offset = "0x938F00", VA = "0x938F00", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001205")]
		[Address(RVA = "0x938CB0", Offset = "0x938CB0", VA = "0x938CB0")]
		[DebuggerHidden]
		public <FadeAudio>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x6001206")]
		[Address(RVA = "0x938CF4", Offset = "0x938CF4", VA = "0x938CF4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001207")]
		[Address(RVA = "0x938CF8", Offset = "0x938CF8", VA = "0x938CF8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001209")]
		[Address(RVA = "0x938EA0", Offset = "0x938EA0", VA = "0x938EA0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000123")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioSource audioSource;

	[Token(Token = "0x4000124")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float maxVolume;

	[Token(Token = "0x4000125")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float fadeInDuration;

	[Token(Token = "0x4000126")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float fadeOutDuration;

	[Token(Token = "0x4000127")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Coroutine m_coroutine;

	[Token(Token = "0x600013C")]
	[Address(RVA = "0x938B1C", Offset = "0x938B1C", VA = "0x938B1C")]
	private void Reset()
	{
	}

	[Token(Token = "0x600013D")]
	[Address(RVA = "0x938B74", Offset = "0x938B74", VA = "0x938B74")]
	public void FadeIn()
	{
	}

	[Token(Token = "0x600013E")]
	[Address(RVA = "0x938C5C", Offset = "0x938C5C", VA = "0x938C5C")]
	public void FadeOut()
	{
	}

	[Token(Token = "0x600013F")]
	[Address(RVA = "0x938BC8", Offset = "0x938BC8", VA = "0x938BC8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x707188", Offset = "0x707188")]
	private IEnumerator FadeAudio(float duration, bool fadeIn)
	{
		return null;
	}

	[Token(Token = "0x6000140")]
	[Address(RVA = "0x938CDC", Offset = "0x938CDC", VA = "0x938CDC")]
	public AudioFader()
	{
	}
}
[Token(Token = "0x2000052")]
public class AudioTester : MonoBehaviour
{
	[Token(Token = "0x4000128")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private PlaySound playSound;

	[Token(Token = "0x6000141")]
	[Address(RVA = "0x938F08", Offset = "0x938F08", VA = "0x938F08")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000142")]
	[Address(RVA = "0x938F60", Offset = "0x938F60", VA = "0x938F60")]
	[DebugButton]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x7071EC", Offset = "0x7071EC")]
	private void TestOneshotSound()
	{
	}

	[Token(Token = "0x6000143")]
	[Address(RVA = "0x938F7C", Offset = "0x938F7C", VA = "0x938F7C")]
	public AudioTester()
	{
	}
}
[Token(Token = "0x2000053")]
public class FadeOutMixer : MonoBehaviour
{
	[Token(Token = "0x4000129")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioMixerSnapshot Snapshot;

	[Token(Token = "0x6000144")]
	[Address(RVA = "0x9422E8", Offset = "0x9422E8", VA = "0x9422E8")]
	public void FadeOut(float t)
	{
	}

	[Token(Token = "0x6000145")]
	[Address(RVA = "0x942304", Offset = "0x942304", VA = "0x942304")]
	private void Start()
	{
	}

	[Token(Token = "0x6000146")]
	[Address(RVA = "0x942308", Offset = "0x942308", VA = "0x942308")]
	private void Update()
	{
	}

	[Token(Token = "0x6000147")]
	[Address(RVA = "0x94230C", Offset = "0x94230C", VA = "0x94230C")]
	public FadeOutMixer()
	{
	}
}
[Token(Token = "0x2000054")]
public class FixTheDamnTimeline : MonoBehaviour
{
	[Token(Token = "0x400012A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioClip clip;

	[Token(Token = "0x6000148")]
	[Address(RVA = "0x9426C4", Offset = "0x9426C4", VA = "0x9426C4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000149")]
	[Address(RVA = "0x942728", Offset = "0x942728", VA = "0x942728")]
	public FixTheDamnTimeline()
	{
	}
}
[Token(Token = "0x2000055")]
public class PaperAudio : MonoBehaviour
{
	[Token(Token = "0x20001E3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7010C8", Offset = "0x7010C8")]
	private sealed class <Slowing>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40009EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40009EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40009EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float t;

		[Token(Token = "0x40009ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public PaperAudio <>4__this;

		[Token(Token = "0x1700023B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600120E")]
			[Address(RVA = "0xAE1470", Offset = "0xAE1470", VA = "0xAE1470", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700023C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001210")]
			[Address(RVA = "0xAE14D8", Offset = "0xAE14D8", VA = "0xAE14D8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600120B")]
		[Address(RVA = "0xAE137C", Offset = "0xAE137C", VA = "0xAE137C")]
		[DebuggerHidden]
		public <Slowing>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x600120C")]
		[Address(RVA = "0xAE13B0", Offset = "0xAE13B0", VA = "0xAE13B0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600120D")]
		[Address(RVA = "0xAE13B4", Offset = "0xAE13B4", VA = "0xAE13B4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600120F")]
		[Address(RVA = "0xAE1478", Offset = "0xAE1478", VA = "0xAE1478", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400012B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UnityEvent OnStartFlap;

	[Token(Token = "0x400012C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UnityEvent OnStartBurn;

	[Token(Token = "0x400012D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public UnityEvent OnSlowDown;

	[Token(Token = "0x600014A")]
	[Address(RVA = "0xAE1298", Offset = "0xAE1298", VA = "0xAE1298")]
	public void StartFlap()
	{
	}

	[Token(Token = "0x600014B")]
	[Address(RVA = "0xAE12B4", Offset = "0xAE12B4", VA = "0xAE12B4")]
	public void StartBurn()
	{
	}

	[Token(Token = "0x600014C")]
	[Address(RVA = "0xAE12D0", Offset = "0xAE12D0", VA = "0xAE12D0")]
	public void SlowDown(float t)
	{
	}

	[Token(Token = "0x600014D")]
	[Address(RVA = "0xAE12FC", Offset = "0xAE12FC", VA = "0xAE12FC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x707224", Offset = "0x707224")]
	private IEnumerator Slowing(float t)
	{
		return null;
	}

	[Token(Token = "0x600014E")]
	[Address(RVA = "0xAE13A8", Offset = "0xAE13A8", VA = "0xAE13A8")]
	public PaperAudio()
	{
	}
}
[Token(Token = "0x2000056")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x6FFC18", Offset = "0x6FFC18")]
public class PlayAudio : MonoBehaviour
{
	[Token(Token = "0x400012E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private AudioSource m_audioSource;

	[Token(Token = "0x600014F")]
	[Address(RVA = "0xAE3014", Offset = "0xAE3014", VA = "0xAE3014")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000150")]
	[Address(RVA = "0xAE306C", Offset = "0xAE306C", VA = "0xAE306C")]
	public void PlayOneShot()
	{
	}

	[Token(Token = "0x6000151")]
	[Address(RVA = "0xAE3104", Offset = "0xAE3104", VA = "0xAE3104")]
	public PlayAudio()
	{
	}
}
[Token(Token = "0x2000057")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x6FFC7C", Offset = "0x6FFC7C")]
public class PlaySound : MonoBehaviour
{
	[Token(Token = "0x400012F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x701D44", Offset = "0x701D44")]
	public AudioClip[] waveFile;

	[Token(Token = "0x4000130")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x701D7C", Offset = "0x701D7C")]
	public bool stopOnPlay;

	[Token(Token = "0x4000131")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x701DB4", Offset = "0x701DB4")]
	public bool disableOnEnd;

	[Token(Token = "0x4000132")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x701DEC", Offset = "0x701DEC")]
	public bool looping;

	[Token(Token = "0x4000133")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x23")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x701E24", Offset = "0x701E24")]
	public bool stopOnEnd;

	[Token(Token = "0x4000134")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x701E5C", Offset = "0x701E5C")]
	public bool playOnAwakeWithDelay;

	[Token(Token = "0x4000135")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x701E94", Offset = "0x701E94")]
	public bool useRandomVolume;

	[Token(Token = "0x4000136")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x701ECC", Offset = "0x701ECC")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x701ECC", Offset = "0x701ECC")]
	public float volMin;

	[Token(Token = "0x4000137")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x701F20", Offset = "0x701F20")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x701F20", Offset = "0x701F20")]
	public float volMax;

	[Token(Token = "0x4000138")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x701F74", Offset = "0x701F74")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x701F74", Offset = "0x701F74")]
	public bool useRandomPitch;

	[Token(Token = "0x4000139")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x701FD4", Offset = "0x701FD4")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x701FD4", Offset = "0x701FD4")]
	public float pitchMin;

	[Token(Token = "0x400013A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x702028", Offset = "0x702028")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x702028", Offset = "0x702028")]
	public float pitchMax;

	[Token(Token = "0x400013B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x70207C", Offset = "0x70207C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x70207C", Offset = "0x70207C")]
	public bool useRetriggerTime;

	[Token(Token = "0x400013C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7020DC", Offset = "0x7020DC")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7020DC", Offset = "0x7020DC")]
	public float timeInitial;

	[Token(Token = "0x400013D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x702134", Offset = "0x702134")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x702134", Offset = "0x702134")]
	public float timeMin;

	[Token(Token = "0x400013E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x70218C", Offset = "0x70218C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x70218C", Offset = "0x70218C")]
	public float timeMax;

	[Token(Token = "0x400013F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7021E4", Offset = "0x7021E4")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7021E4", Offset = "0x7021E4")]
	public bool useRandomSilence;

	[Token(Token = "0x4000140")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x702244", Offset = "0x702244")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x702244", Offset = "0x702244")]
	public float percentToNotPlay;

	[Token(Token = "0x4000141")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x702298", Offset = "0x702298")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x702298", Offset = "0x702298")]
	public float delayOffsetTime;

	[Token(Token = "0x4000142")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7022F8", Offset = "0x7022F8")]
	public bool useRandomSampleOffset;

	[Token(Token = "0x4000143")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public AudioSource audioSource;

	[Token(Token = "0x4000144")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private AudioClip clip;

	[Token(Token = "0x6000152")]
	[Address(RVA = "0xAE310C", Offset = "0xAE310C", VA = "0xAE310C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000153")]
	[Address(RVA = "0xAE323C", Offset = "0xAE323C", VA = "0xAE323C")]
	public void Play()
	{
	}

	[Token(Token = "0x6000154")]
	[Address(RVA = "0xAE324C", Offset = "0xAE324C", VA = "0xAE324C")]
	public void PlayWithDelay(float delayTime)
	{
	}

	[Token(Token = "0x6000155")]
	[Address(RVA = "0xAE3388", Offset = "0xAE3388", VA = "0xAE3388")]
	public AudioClip PlayOneShotSound()
	{
		return null;
	}

	[Token(Token = "0x6000156")]
	[Address(RVA = "0xAE32C4", Offset = "0xAE32C4", VA = "0xAE32C4")]
	public AudioClip PlayLooping()
	{
		return null;
	}

	[Token(Token = "0x6000157")]
	[Address(RVA = "0xAE35B8", Offset = "0xAE35B8", VA = "0xAE35B8")]
	public void Disable()
	{
	}

	[Token(Token = "0x6000158")]
	[Address(RVA = "0xAE35E0", Offset = "0xAE35E0", VA = "0xAE35E0")]
	public void Stop()
	{
	}

	[Token(Token = "0x6000159")]
	[Address(RVA = "0xAE3450", Offset = "0xAE3450", VA = "0xAE3450")]
	private void SetAudioSource()
	{
	}

	[Token(Token = "0x600015A")]
	[Address(RVA = "0xAE35FC", Offset = "0xAE35FC", VA = "0xAE35FC")]
	public PlaySound()
	{
	}
}
[Token(Token = "0x2000058")]
public class SoundExampleClass : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20001E4")]
	public class SlideEvent : UnityEvent<float>
	{
		[Token(Token = "0x6001211")]
		[Address(RVA = "0x889BB4", Offset = "0x889BB4", VA = "0x889BB4")]
		public SlideEvent()
		{
		}
	}

	[Token(Token = "0x20001E5")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7010D8", Offset = "0x7010D8")]
	private sealed class <Sliding>d__30 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40009EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40009EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40009F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SoundExampleClass <>4__this;

		[Token(Token = "0x1700023D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001215")]
			[Address(RVA = "0x889B44", Offset = "0x889B44", VA = "0x889B44", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700023E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001217")]
			[Address(RVA = "0x889BAC", Offset = "0x889BAC", VA = "0x889BAC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001212")]
		[Address(RVA = "0x889A44", Offset = "0x889A44", VA = "0x889A44")]
		[DebuggerHidden]
		public <Sliding>d__30(int <>1__state)
		{
		}

		[Token(Token = "0x6001213")]
		[Address(RVA = "0x889A8C", Offset = "0x889A8C", VA = "0x889A8C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001214")]
		[Address(RVA = "0x889A90", Offset = "0x889A90", VA = "0x889A90", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001216")]
		[Address(RVA = "0x889B4C", Offset = "0x889B4C", VA = "0x889B4C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000145")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x702330", Offset = "0x702330")]
	public InteractableGrab GrabObject;

	[Token(Token = "0x4000146")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public InteractablePull DragObject;

	[Token(Token = "0x4000147")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x702368", Offset = "0x702368")]
	public PlaySound PlaySound;

	[Token(Token = "0x4000148")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float shakeCoolDown;

	[Token(Token = "0x4000149")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7023A0", Offset = "0x7023A0")]
	public UnityEvent OnGrabBegin;

	[Token(Token = "0x400014A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7023D8", Offset = "0x7023D8")]
	public UnityEvent OnGrabEnd;

	[Token(Token = "0x400014B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x702410", Offset = "0x702410")]
	public UnityEvent OnDragInteractionBegin;

	[Token(Token = "0x400014C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x702448", Offset = "0x702448")]
	public UnityEvent OnDragInteractionEnd;

	[Token(Token = "0x400014D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x702480", Offset = "0x702480")]
	public UnityEvent OnGrabShake;

	[Token(Token = "0x400014E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7024B8", Offset = "0x7024B8")]
	public UnityEvent OnSlideStart;

	[Token(Token = "0x400014F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7024F0", Offset = "0x7024F0")]
	public UnityEvent OnSlideEnd;

	[Token(Token = "0x4000150")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public SlideEvent OnSlide;

	[Token(Token = "0x4000151")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public SlideEvent OnGrabbed;

	[Token(Token = "0x4000152")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private bool canShake;

	[Token(Token = "0x4000153")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Coroutine _slideCoroutine;

	[Token(Token = "0x4000154")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private bool grabbed;

	[Token(Token = "0x600015B")]
	[Address(RVA = "0x88902C", Offset = "0x88902C", VA = "0x88902C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600015C")]
	[Address(RVA = "0x889350", Offset = "0x889350", VA = "0x889350")]
	private void GrabInteractionBegin()
	{
	}

	[Token(Token = "0x600015D")]
	[Address(RVA = "0x889378", Offset = "0x889378", VA = "0x889378")]
	private void GrabInteractionEnd()
	{
	}

	[Token(Token = "0x600015E")]
	[Address(RVA = "0x88939C", Offset = "0x88939C", VA = "0x88939C")]
	private void ResetShake()
	{
	}

	[Token(Token = "0x600015F")]
	[Address(RVA = "0x8893A8", Offset = "0x8893A8", VA = "0x8893A8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000160")]
	[Address(RVA = "0x8896CC", Offset = "0x8896CC", VA = "0x8896CC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000161")]
	[Address(RVA = "0x889860", Offset = "0x889860", VA = "0x889860")]
	private void DragInteractionBegin()
	{
	}

	[Token(Token = "0x6000162")]
	[Address(RVA = "0x88987C", Offset = "0x88987C", VA = "0x88987C")]
	private void DragInteractionEnd()
	{
	}

	[Token(Token = "0x6000163")]
	[Address(RVA = "0x889898", Offset = "0x889898", VA = "0x889898")]
	private void GrabShake(float force, float forceLastFrame)
	{
	}

	[Token(Token = "0x6000164")]
	[Address(RVA = "0x88991C", Offset = "0x88991C", VA = "0x88991C")]
	private void DragHitStart(float force)
	{
	}

	[Token(Token = "0x6000165")]
	[Address(RVA = "0x889938", Offset = "0x889938", VA = "0x889938")]
	private void DragHitEnd(float force)
	{
	}

	[Token(Token = "0x6000166")]
	[Address(RVA = "0x889954", Offset = "0x889954", VA = "0x889954")]
	private void DragSlideBegin()
	{
	}

	[Token(Token = "0x6000167")]
	[Address(RVA = "0x889A04", Offset = "0x889A04", VA = "0x889A04")]
	private void DragSlideEnd()
	{
	}

	[Token(Token = "0x6000168")]
	[Address(RVA = "0x889994", Offset = "0x889994", VA = "0x889994")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x707288", Offset = "0x707288")]
	private IEnumerator Sliding()
	{
		return null;
	}

	[Token(Token = "0x6000169")]
	[Address(RVA = "0x889A70", Offset = "0x889A70", VA = "0x889A70")]
	public SoundExampleClass()
	{
	}
}
[Token(Token = "0x2000059")]
public class SpawnAndBurnAudio : MonoBehaviour
{
	[Token(Token = "0x20001E6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7010E8", Offset = "0x7010E8")]
	private sealed class <Spawning>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40009F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40009F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40009F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SpawnAndBurnAudio <>4__this;

		[Token(Token = "0x40009F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <i>5__2;

		[Token(Token = "0x1700023F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600121B")]
			[Address(RVA = "0x889F98", Offset = "0x889F98", VA = "0x889F98", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000240")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600121D")]
			[Address(RVA = "0x88A000", Offset = "0x88A000", VA = "0x88A000", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001218")]
		[Address(RVA = "0x889D70", Offset = "0x889D70", VA = "0x889D70")]
		[DebuggerHidden]
		public <Spawning>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x6001219")]
		[Address(RVA = "0x889E0C", Offset = "0x889E0C", VA = "0x889E0C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600121A")]
		[Address(RVA = "0x889E10", Offset = "0x889E10", VA = "0x889E10", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600121C")]
		[Address(RVA = "0x889FA0", Offset = "0x889FA0", VA = "0x889FA0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000155")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x702528", Offset = "0x702528")]
	public List<GameObject> papers;

	[Token(Token = "0x4000156")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<float> times;

	[Token(Token = "0x4000157")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<float> stops;

	[Token(Token = "0x4000158")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x702560", Offset = "0x702560")]
	public TextAsset ObjectsTxt;

	[Token(Token = "0x4000159")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TextAsset TimesTxt;

	[Token(Token = "0x400015A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TextAsset StopTxt;

	[Token(Token = "0x400015B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float totalStartTime;

	[Token(Token = "0x400015C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float totalEndTime;

	[Token(Token = "0x600016A")]
	[Address(RVA = "0x889C04", Offset = "0x889C04", VA = "0x889C04")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600016B")]
	[Address(RVA = "0x889D00", Offset = "0x889D00", VA = "0x889D00")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7072EC", Offset = "0x7072EC")]
	private IEnumerator Spawning()
	{
		return null;
	}

	[Token(Token = "0x600016C")]
	[Address(RVA = "0x889D9C", Offset = "0x889D9C", VA = "0x889D9C")]
	public SpawnAndBurnAudio()
	{
	}
}
[Token(Token = "0x200005A")]
public static class Util
{
	[Token(Token = "0x20001E7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7010F8", Offset = "0x7010F8")]
	private sealed class <WrapCoroutine>d__43 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40009F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40009F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40009F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public IEnumerator coroutine;

		[Token(Token = "0x40009F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action onCoroutineFinished;

		[Token(Token = "0x17000241")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001221")]
			[Address(RVA = "0x14BED04", Offset = "0x14BED04", VA = "0x14BED04", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000242")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001223")]
			[Address(RVA = "0x14BED6C", Offset = "0x14BED6C", VA = "0x14BED6C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600121E")]
		[Address(RVA = "0x14BEB70", Offset = "0x14BEB70", VA = "0x14BEB70")]
		[DebuggerHidden]
		public <WrapCoroutine>d__43(int <>1__state)
		{
		}

		[Token(Token = "0x600121F")]
		[Address(RVA = "0x14BEB9C", Offset = "0x14BEB9C", VA = "0x14BEB9C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001220")]
		[Address(RVA = "0x14BEBA0", Offset = "0x14BEBA0", VA = "0x14BEBA0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001222")]
		[Address(RVA = "0x14BED0C", Offset = "0x14BED0C", VA = "0x14BED0C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20001E8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x701108", Offset = "0x701108")]
	private sealed class <>c__47<T>
	{
		[Token(Token = "0x40009F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c__47<T> <>9;

		[Token(Token = "0x40009FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Func<T, T> <>9__47_0;

		[Token(Token = "0x6001225")]
		public <>c__47()
		{
		}

		[Token(Token = "0x6001226")]
		internal T <Median>b__47_0(T x)
		{
			return (T)null;
		}
	}

	[Token(Token = "0x400015D")]
	public const float FeetToMeters = 0.3048f;

	[Token(Token = "0x400015E")]
	public const float FeetToCentimeters = 30.48f;

	[Token(Token = "0x400015F")]
	public const float InchesToMeters = 0.0254f;

	[Token(Token = "0x4000160")]
	public const float InchesToCentimeters = 2.54f;

	[Token(Token = "0x4000161")]
	public const float MetersToFeet = 3.28084f;

	[Token(Token = "0x4000162")]
	public const float MetersToInches = 39.3701f;

	[Token(Token = "0x4000163")]
	public const float CentimetersToFeet = 0.0328084f;

	[Token(Token = "0x4000164")]
	public const float CentimetersToInches = 0.393701f;

	[Token(Token = "0x4000165")]
	public const float KilometersToMiles = 0.621371f;

	[Token(Token = "0x4000166")]
	public const float MilesToKilometers = 1.60934f;

	[Token(Token = "0x600016D")]
	[Address(RVA = "0x89B640", Offset = "0x89B640", VA = "0x89B640")]
	public static float RemapNumber(float num, float low1, float high1, float low2, float high2)
	{
		return default(float);
	}

	[Token(Token = "0x600016E")]
	[Address(RVA = "0x88978C", Offset = "0x88978C", VA = "0x88978C")]
	public static float RemapNumberClamped(float num, float low1, float high1, float low2, float high2)
	{
		return default(float);
	}

	[Token(Token = "0x600016F")]
	[Address(RVA = "0x89B65C", Offset = "0x89B65C", VA = "0x89B65C")]
	public static float Approach(float target, float value, float speed)
	{
		return default(float);
	}

	[Token(Token = "0x6000170")]
	[Address(RVA = "0x89B684", Offset = "0x89B684", VA = "0x89B684")]
	public static Vector3 BezierInterpolate3(Vector3 p0, Vector3 c0, Vector3 p1, float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000171")]
	[Address(RVA = "0x89B79C", Offset = "0x89B79C", VA = "0x89B79C")]
	public static Vector3 BezierInterpolate4(Vector3 p0, Vector3 c0, Vector3 c1, Vector3 p1, float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000172")]
	[Address(RVA = "0x89B974", Offset = "0x89B974", VA = "0x89B974")]
	public static Vector3 Vector3FromString(string szString)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000173")]
	[Address(RVA = "0x89BAB0", Offset = "0x89BAB0", VA = "0x89BAB0")]
	public static Vector2 Vector2FromString(string szString)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000174")]
	[Address(RVA = "0x89BBEC", Offset = "0x89BBEC", VA = "0x89BBEC")]
	public static float Normalize(float value, float min, float max)
	{
		return default(float);
	}

	[Token(Token = "0x6000175")]
	[Address(RVA = "0x89BBFC", Offset = "0x89BBFC", VA = "0x89BBFC")]
	public static Vector3 Vector2AsVector3(Vector2 v)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000176")]
	[Address(RVA = "0x89BC38", Offset = "0x89BC38", VA = "0x89BC38")]
	public static Vector2 Vector3AsVector2(Vector3 v)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000177")]
	[Address(RVA = "0x89BC68", Offset = "0x89BC68", VA = "0x89BC68")]
	public static float AngleOf(Vector2 v)
	{
		return default(float);
	}

	[Token(Token = "0x6000178")]
	[Address(RVA = "0x89BD20", Offset = "0x89BD20", VA = "0x89BD20")]
	public static float YawOf(Vector3 v)
	{
		return default(float);
	}

	[Token(Token = "0x6000179")]
	public static void Swap<T>(ref T lhs, ref T rhs)
	{
	}

	[Token(Token = "0x600017A")]
	public static void Shuffle<T>(T[] array)
	{
	}

	[Token(Token = "0x600017B")]
	public static void Shuffle<T>(List<T> list)
	{
	}

	[Token(Token = "0x600017C")]
	[Address(RVA = "0x89BDE8", Offset = "0x89BDE8", VA = "0x89BDE8")]
	public static int RandomWithLookback(int min, int max, List<int> history, int historyCount)
	{
		return default(int);
	}

	[Token(Token = "0x600017D")]
	[Address(RVA = "0x89BEE8", Offset = "0x89BEE8", VA = "0x89BEE8")]
	public static Transform FindChild(Transform parent, string name)
	{
		return null;
	}

	[Token(Token = "0x600017E")]
	public static bool IsNullOrEmpty<T>(T[] array)
	{
		return default(bool);
	}

	[Token(Token = "0x600017F")]
	public static bool IsValidIndex<T>(T[] array, int i)
	{
		return default(bool);
	}

	[Token(Token = "0x6000180")]
	public static bool IsValidIndex<T>(List<T> list, int i)
	{
		return default(bool);
	}

	[Token(Token = "0x6000181")]
	public static int FindOrAdd<T>(List<T> list, T item)
	{
		return default(int);
	}

	[Token(Token = "0x6000182")]
	public static List<T> FindAndRemove<T>(List<T> list, Predicate<T> match)
	{
		return null;
	}

	[Token(Token = "0x6000183")]
	public static T FindOrAddComponent<T>(GameObject gameObject) where T : Component
	{
		return null;
	}

	[Token(Token = "0x6000184")]
	public static void FastRemove<T>(List<T> list, int index)
	{
	}

	[Token(Token = "0x6000185")]
	public static void ReplaceGameObject<T, U>(T replace, U replaceWith) where T : MonoBehaviour where U : MonoBehaviour
	{
	}

	[Token(Token = "0x6000186")]
	[Address(RVA = "0x89C1E4", Offset = "0x89C1E4", VA = "0x89C1E4")]
	public static void SwitchLayerRecursively(Transform transform, int fromLayer, int toLayer)
	{
	}

	[Token(Token = "0x6000187")]
	[Address(RVA = "0x89C29C", Offset = "0x89C29C", VA = "0x89C29C")]
	public static void DrawCross(Vector3 origin, Color crossColor, float size)
	{
	}

	[Token(Token = "0x6000188")]
	[Address(RVA = "0x89C590", Offset = "0x89C590", VA = "0x89C590")]
	public static void ResetTransform(Transform t, bool resetScale = true)
	{
	}

	[Token(Token = "0x6000189")]
	[Address(RVA = "0x89C68C", Offset = "0x89C68C", VA = "0x89C68C")]
	public static Vector3 ClosestPointOnLine(Vector3 vA, Vector3 vB, Vector3 vPoint)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600018A")]
	[Address(RVA = "0x89C878", Offset = "0x89C878", VA = "0x89C878")]
	public static void AfterTimer(GameObject go, float _time, Action callback, bool trigger_if_destroyed_early = false)
	{
	}

	[Token(Token = "0x600018B")]
	[Address(RVA = "0x89C904", Offset = "0x89C904", VA = "0x89C904")]
	public static void SendPhysicsMessage(Collider collider, string message, SendMessageOptions sendMessageOptions)
	{
	}

	[Token(Token = "0x600018C")]
	[Address(RVA = "0x89CA20", Offset = "0x89CA20", VA = "0x89CA20")]
	public static void SendPhysicsMessage(Collider collider, string message, object arg, SendMessageOptions sendMessageOptions)
	{
	}

	[Token(Token = "0x600018D")]
	[Address(RVA = "0x89CB50", Offset = "0x89CB50", VA = "0x89CB50")]
	public static void IgnoreCollisions(GameObject goA, GameObject goB)
	{
	}

	[Token(Token = "0x600018E")]
	[Address(RVA = "0x89CC98", Offset = "0x89CC98", VA = "0x89CC98")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x707350", Offset = "0x707350")]
	public static IEnumerator WrapCoroutine(IEnumerator coroutine, Action onCoroutineFinished)
	{
		return null;
	}

	[Token(Token = "0x600018F")]
	[Address(RVA = "0x89CD14", Offset = "0x89CD14", VA = "0x89CD14")]
	public static Color ColorWithAlpha(this Color color, float alpha)
	{
		return default(Color);
	}

	[Token(Token = "0x6000190")]
	[Address(RVA = "0x89CD1C", Offset = "0x89CD1C", VA = "0x89CD1C")]
	public static void Quit()
	{
	}

	[Token(Token = "0x6000191")]
	[Address(RVA = "0x89CD40", Offset = "0x89CD40", VA = "0x89CD40")]
	public static decimal FloatToDecimal(float value, int decimalPlaces = 2)
	{
		return default(decimal);
	}

	[Token(Token = "0x6000192")]
	public static T Median<T>(this IEnumerable<T> source)
	{
		return (T)null;
	}

	[Token(Token = "0x6000193")]
	public static void ForEach<T>(this IEnumerable<T> source, Action<T> action)
	{
	}

	[Token(Token = "0x6000194")]
	[Address(RVA = "0x89CDF8", Offset = "0x89CDF8", VA = "0x89CDF8")]
	public static string FixupNewlines(string text)
	{
		return null;
	}

	[Token(Token = "0x6000195")]
	[Address(RVA = "0x89CEA8", Offset = "0x89CEA8", VA = "0x89CEA8")]
	public static float PathLength(NavMeshPath path)
	{
		return default(float);
	}

	[Token(Token = "0x6000196")]
	[Address(RVA = "0x89D024", Offset = "0x89D024", VA = "0x89D024")]
	public static bool HasCommandLineArgument(string argumentName)
	{
		return default(bool);
	}

	[Token(Token = "0x6000197")]
	[Address(RVA = "0x89D0B8", Offset = "0x89D0B8", VA = "0x89D0B8")]
	public static int GetCommandLineArgValue(string argumentName, int nDefaultValue)
	{
		return default(int);
	}

	[Token(Token = "0x6000198")]
	[Address(RVA = "0x89D184", Offset = "0x89D184", VA = "0x89D184")]
	public static float GetCommandLineArgValue(string argumentName, float flDefaultValue)
	{
		return default(float);
	}

	[Token(Token = "0x6000199")]
	[Address(RVA = "0x89D298", Offset = "0x89D298", VA = "0x89D298")]
	public static void SetActive(GameObject gameObject, bool active)
	{
	}

	[Token(Token = "0x600019A")]
	[Address(RVA = "0x89D33C", Offset = "0x89D33C", VA = "0x89D33C")]
	public static string CombinePaths(params string[] paths)
	{
		return null;
	}
}
[Serializable]
[Token(Token = "0x200005B")]
public class AfterTimer_Component : MonoBehaviour
{
	[Token(Token = "0x20001E9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x701118", Offset = "0x701118")]
	private sealed class <Wait>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40009FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40009FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40009FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AfterTimer_Component <>4__this;

		[Token(Token = "0x17000243")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600122A")]
			[Address(RVA = "0xD815C4", Offset = "0xD815C4", VA = "0xD815C4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000244")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600122C")]
			[Address(RVA = "0xD8162C", Offset = "0xD8162C", VA = "0xD8162C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001227")]
		[Address(RVA = "0xD8143C", Offset = "0xD8143C", VA = "0xD8143C")]
		[DebuggerHidden]
		public <Wait>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x6001228")]
		[Address(RVA = "0xD814D0", Offset = "0xD814D0", VA = "0xD814D0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001229")]
		[Address(RVA = "0xD814D4", Offset = "0xD814D4", VA = "0xD814D4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600122B")]
		[Address(RVA = "0xD815CC", Offset = "0xD815CC", VA = "0xD815CC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000167")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Action callback;

	[Token(Token = "0x4000168")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float triggerTime;

	[Token(Token = "0x4000169")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private bool timerActive;

	[Token(Token = "0x400016A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
	private bool triggerOnEarlyDestroy;

	[Token(Token = "0x600019B")]
	[Address(RVA = "0xD81388", Offset = "0xD81388", VA = "0xD81388")]
	public void Init(float _time, Action _callback, bool earlydestroy)
	{
	}

	[Token(Token = "0x600019C")]
	[Address(RVA = "0xD813CC", Offset = "0xD813CC", VA = "0xD813CC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7073E4", Offset = "0x7073E4")]
	private IEnumerator Wait()
	{
		return null;
	}

	[Token(Token = "0x600019D")]
	[Address(RVA = "0xD81468", Offset = "0xD81468", VA = "0xD81468")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600019E")]
	[Address(RVA = "0xD814C8", Offset = "0xD814C8", VA = "0xD814C8")]
	public AfterTimer_Component()
	{
	}
}
[Token(Token = "0x200005C")]
public class FollowTargetForward : MonoBehaviour
{
	[Token(Token = "0x400016B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform targetTransform;

	[Token(Token = "0x400016C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float distance;

	[Token(Token = "0x400016D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Transform thisTransform;

	[Token(Token = "0x600019F")]
	[Address(RVA = "0x9441FC", Offset = "0x9441FC", VA = "0x9441FC")]
	private void Start()
	{
	}

	[Token(Token = "0x60001A0")]
	[Address(RVA = "0x944254", Offset = "0x944254", VA = "0x944254")]
	private void Update()
	{
	}

	[Token(Token = "0x60001A1")]
	[Address(RVA = "0x94435C", Offset = "0x94435C", VA = "0x94435C")]
	public FollowTargetForward()
	{
	}
}
[Serializable]
[Token(Token = "0x200005D")]
public class BendingSegment
{
	[Token(Token = "0x400016E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Transform firstTransform;

	[Token(Token = "0x400016F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform lastTransform;

	[Token(Token = "0x4000170")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float thresholdAngleDifference;

	[Token(Token = "0x4000171")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float bendingMultiplier;

	[Token(Token = "0x4000172")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float maxAngleDifference;

	[Token(Token = "0x4000173")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float maxBendingAngle;

	[Token(Token = "0x4000174")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float responsiveness;

	[Token(Token = "0x4000175")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	internal float angleH;

	[Token(Token = "0x4000176")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	internal float angleV;

	[Token(Token = "0x4000177")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	internal Vector3 dirUp;

	[Token(Token = "0x4000178")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	internal Vector3 referenceLookDir;

	[Token(Token = "0x4000179")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	internal Vector3 referenceUpDir;

	[Token(Token = "0x400017A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	internal int chainLength;

	[Token(Token = "0x400017B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	internal Quaternion[] origRotations;

	[Token(Token = "0x60001A2")]
	[Address(RVA = "0x93A020", Offset = "0x93A020", VA = "0x93A020")]
	public BendingSegment()
	{
	}
}
[Serializable]
[Token(Token = "0x200005E")]
public class NonAffectedJoints
{
	[Token(Token = "0x400017C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Transform joint;

	[Token(Token = "0x400017D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float effect;

	[Token(Token = "0x60001A3")]
	[Address(RVA = "0xACE840", Offset = "0xACE840", VA = "0xACE840")]
	public NonAffectedJoints()
	{
	}
}
[Token(Token = "0x200005F")]
public class HeadLookController : MonoBehaviour
{
	[Token(Token = "0x400017E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform rootNode;

	[Token(Token = "0x400017F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public BendingSegment[] segments;

	[Token(Token = "0x4000180")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public NonAffectedJoints[] nonAffectedJoints;

	[Token(Token = "0x4000181")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector3 headLookVector;

	[Token(Token = "0x4000182")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Vector3 headUpVector;

	[Token(Token = "0x4000183")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Vector3 target;

	[Token(Token = "0x4000184")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform targetTransform;

	[Token(Token = "0x4000185")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Transform VrCamTransform;

	[Token(Token = "0x4000186")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float effect;

	[Token(Token = "0x4000187")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public bool overrideAnimation;

	[Token(Token = "0x4000188")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6D")]
	public bool D_DrawTargetDirection;

	[Token(Token = "0x60001A4")]
	[Address(RVA = "0x96EC7C", Offset = "0x96EC7C", VA = "0x96EC7C")]
	private void Start()
	{
	}

	[Token(Token = "0x60001A5")]
	[Address(RVA = "0x96F04C", Offset = "0x96F04C", VA = "0x96F04C")]
	private void Update()
	{
	}

	[Token(Token = "0x60001A6")]
	[Address(RVA = "0x96F138", Offset = "0x96F138", VA = "0x96F138")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60001A7")]
	[Address(RVA = "0x9702D8", Offset = "0x9702D8", VA = "0x9702D8")]
	public static float AngleAroundAxis(Vector3 dirA, Vector3 dirB, Vector3 axis)
	{
		return default(float);
	}

	[Token(Token = "0x60001A8")]
	[Address(RVA = "0x97049C", Offset = "0x97049C", VA = "0x97049C")]
	public HeadLookController()
	{
	}
}
[Token(Token = "0x2000060")]
public class Billboard : MonoBehaviour
{
	[Token(Token = "0x4000189")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool OnlyRotateY;

	[Token(Token = "0x60001A9")]
	[Address(RVA = "0x93A034", Offset = "0x93A034", VA = "0x93A034")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60001AA")]
	[Address(RVA = "0x93A440", Offset = "0x93A440", VA = "0x93A440")]
	public Billboard()
	{
	}
}
[Token(Token = "0x2000061")]
public class BlackRoomMiniatureBehaviour : MonoBehaviour
{
	[Token(Token = "0x400018A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x7025A8", Offset = "0x7025A8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7025A8", Offset = "0x7025A8")]
	public Vector3 startPosition;

	[Token(Token = "0x400018B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector3 startRotation;

	[Token(Token = "0x400018C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x702608", Offset = "0x702608")]
	public float startScale;

	[Token(Token = "0x400018D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x702640", Offset = "0x702640")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x702640", Offset = "0x702640")]
	public Vector3 endPosition;

	[Token(Token = "0x400018E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector3 endRotation;

	[Token(Token = "0x400018F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x7026A0", Offset = "0x7026A0")]
	public float endScale;

	[Token(Token = "0x60001AB")]
	[Address(RVA = "0x93A598", Offset = "0x93A598", VA = "0x93A598")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001AC")]
	[Address(RVA = "0x93A59C", Offset = "0x93A59C", VA = "0x93A59C")]
	public void SetStartTransform()
	{
	}

	[Token(Token = "0x60001AD")]
	[Address(RVA = "0x93A698", Offset = "0x93A698", VA = "0x93A698")]
	public void SetEndTransform()
	{
	}

	[Token(Token = "0x60001AE")]
	[Address(RVA = "0x93A800", Offset = "0x93A800", VA = "0x93A800")]
	private void Reset()
	{
	}

	[Token(Token = "0x60001AF")]
	[Address(RVA = "0x93A898", Offset = "0x93A898", VA = "0x93A898")]
	public BlackRoomMiniatureBehaviour()
	{
	}
}
[Token(Token = "0x2000062")]
public class BookFireMeshAnimation : MonoBehaviour
{
	[Token(Token = "0x20001EA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x701128", Offset = "0x701128")]
	private sealed class <Fade>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40009FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40009FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float fadeTime;

		[Token(Token = "0x4000A01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public BookFireMeshAnimation <>4__this;

		[Token(Token = "0x4000A02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <endTime>5__2;

		[Token(Token = "0x4000A03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Color[] <colors>5__3;

		[Token(Token = "0x4000A04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Color[] <endColors>5__4;

		[Token(Token = "0x17000245")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001230")]
			[Address(RVA = "0x93AFDC", Offset = "0x93AFDC", VA = "0x93AFDC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000246")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001232")]
			[Address(RVA = "0x93B044", Offset = "0x93B044", VA = "0x93B044", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600122D")]
		[Address(RVA = "0x93AC00", Offset = "0x93AC00", VA = "0x93AC00")]
		[DebuggerHidden]
		public <Fade>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x600122E")]
		[Address(RVA = "0x93AC8C", Offset = "0x93AC8C", VA = "0x93AC8C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600122F")]
		[Address(RVA = "0x93AC90", Offset = "0x93AC90", VA = "0x93AC90", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001231")]
		[Address(RVA = "0x93AFE4", Offset = "0x93AFE4", VA = "0x93AFE4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000190")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int frameRate;

	[Token(Token = "0x4000191")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string fadeProperty;

	[Token(Token = "0x4000192")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Material[] materials;

	[Token(Token = "0x4000193")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public BookFireTextureAnimation[] textureAnimations;

	[Token(Token = "0x4000194")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float m_nextTime;

	[Token(Token = "0x4000195")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int m_fadeProp;

	[Token(Token = "0x4000196")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Coroutine m_fadeRoutine;

	[Token(Token = "0x60001B0")]
	[Address(RVA = "0x93A954", Offset = "0x93A954", VA = "0x93A954")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001B1")]
	[Address(RVA = "0x93A980", Offset = "0x93A980", VA = "0x93A980")]
	public void FadeOutFire(float fadeTime)
	{
	}

	[Token(Token = "0x60001B2")]
	[Address(RVA = "0x93AA2C", Offset = "0x93AA2C", VA = "0x93AA2C")]
	private void Update()
	{
	}

	[Token(Token = "0x60001B3")]
	[Address(RVA = "0x93AAC0", Offset = "0x93AAC0", VA = "0x93AAC0")]
	[DebugButton]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x707448", Offset = "0x707448")]
	public void NextFrame()
	{
	}

	[Token(Token = "0x60001B4")]
	[Address(RVA = "0x93A9AC", Offset = "0x93A9AC", VA = "0x93A9AC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x707480", Offset = "0x707480")]
	private IEnumerator Fade(float fadeTime)
	{
		return null;
	}

	[Token(Token = "0x60001B5")]
	[Address(RVA = "0x93AC2C", Offset = "0x93AC2C", VA = "0x93AC2C")]
	public BookFireMeshAnimation()
	{
	}
}
[Serializable]
[Token(Token = "0x2000063")]
public class StartFireCallback : UnityEvent<Vector3>
{
	[Token(Token = "0x60001B6")]
	[Address(RVA = "0x88A4BC", Offset = "0x88A4BC", VA = "0x88A4BC")]
	public StartFireCallback()
	{
	}
}
[Token(Token = "0x2000064")]
public class BookFireStarter : MonoBehaviour
{
	[Token(Token = "0x20001EB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x701138", Offset = "0x701138")]
	private sealed class <DelayedEvents>d__21 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BookFireStarter <>4__this;

		[Token(Token = "0x17000247")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001236")]
			[Address(RVA = "0x93B6D8", Offset = "0x93B6D8", VA = "0x93B6D8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000248")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001238")]
			[Address(RVA = "0x93B740", Offset = "0x93B740", VA = "0x93B740", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001233")]
		[Address(RVA = "0x93B4C4", Offset = "0x93B4C4", VA = "0x93B4C4")]
		[DebuggerHidden]
		public <DelayedEvents>d__21(int <>1__state)
		{
		}

		[Token(Token = "0x6001234")]
		[Address(RVA = "0x93B614", Offset = "0x93B614", VA = "0x93B614", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001235")]
		[Address(RVA = "0x93B618", Offset = "0x93B618", VA = "0x93B618", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001237")]
		[Address(RVA = "0x93B6E0", Offset = "0x93B6E0", VA = "0x93B6E0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000197")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform fire;

	[Token(Token = "0x4000198")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float fireCountdown;

	[Token(Token = "0x4000199")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7026D8", Offset = "0x7026D8")]
	public StartFireCallback startFireEvent;

	[Token(Token = "0x400019A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x702710", Offset = "0x702710")]
	public UnityEvent fireStartEvents;

	[Token(Token = "0x400019B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x702748", Offset = "0x702748")]
	public float delay;

	[Token(Token = "0x400019C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public UnityEvent postDelayEvents;

	[Token(Token = "0x400019D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x702780", Offset = "0x702780")]
	private int <triggerCount>k__BackingField;

	[Token(Token = "0x400019E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x702790", Offset = "0x702790")]
	private Vector3 <firePosition>k__BackingField;

	[Token(Token = "0x400019F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static BookFireStarter Instance;

	[Token(Token = "0x40001A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool m_fireStarted;

	[Token(Token = "0x40001A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float m_holdTime;

	[Token(Token = "0x40001A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float m_timeLineHoldTime;

	[Token(Token = "0x1700000F")]
	public int triggerCount
	{
		[Token(Token = "0x60001B7")]
		[Address(RVA = "0x93B04C", Offset = "0x93B04C", VA = "0x93B04C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7074E4", Offset = "0x7074E4")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60001B8")]
		[Address(RVA = "0x93B054", Offset = "0x93B054", VA = "0x93B054")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7074F4", Offset = "0x7074F4")]
		set
		{
		}
	}

	[Token(Token = "0x17000010")]
	public Vector3 firePosition
	{
		[Token(Token = "0x60001B9")]
		[Address(RVA = "0x93B05C", Offset = "0x93B05C", VA = "0x93B05C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x707504", Offset = "0x707504")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x60001BA")]
		[Address(RVA = "0x93B068", Offset = "0x93B068", VA = "0x93B068")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x707514", Offset = "0x707514")]
		set
		{
		}
	}

	[Token(Token = "0x60001BB")]
	[Address(RVA = "0x93B074", Offset = "0x93B074", VA = "0x93B074")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001BC")]
	[Address(RVA = "0x93B14C", Offset = "0x93B14C", VA = "0x93B14C")]
	private void Update()
	{
	}

	[Token(Token = "0x60001BD")]
	[Address(RVA = "0x93B1C8", Offset = "0x93B1C8", VA = "0x93B1C8")]
	public void StartFire(Vector3 firePos)
	{
	}

	[Token(Token = "0x60001BE")]
	[Address(RVA = "0x93B454", Offset = "0x93B454", VA = "0x93B454")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x707524", Offset = "0x707524")]
	private IEnumerator DelayedEvents()
	{
		return null;
	}

	[Token(Token = "0x60001BF")]
	[Address(RVA = "0x93B4F0", Offset = "0x93B4F0", VA = "0x93B4F0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60001C0")]
	[Address(RVA = "0x93B58C", Offset = "0x93B58C", VA = "0x93B58C")]
	public BookFireStarter()
	{
	}
}
[Token(Token = "0x2000065")]
public class BookFireTextureAnimation : MonoBehaviour
{
	[Token(Token = "0x40001A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7027A0", Offset = "0x7027A0")]
	[AttributeAttribute(Name = "HelpAttribute", RVA = "0x7027A0", Offset = "0x7027A0")]
	public string textureProperty;

	[Token(Token = "0x40001A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Texture2D[] startClip;

	[Token(Token = "0x40001A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Texture2D[] loopClip;

	[Token(Token = "0x40001A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int m_textureProp;

	[Token(Token = "0x40001A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int m_index;

	[Token(Token = "0x40001A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int m_nextFrameCount;

	[Token(Token = "0x40001A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Material m_material;

	[Token(Token = "0x40001AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Coroutine m_coroutine;

	[Token(Token = "0x40001AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Renderer m_renderer;

	[Token(Token = "0x40001AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private MaterialPropertyBlock m_materialPropertyBlock;

	[Token(Token = "0x60001C1")]
	[Address(RVA = "0x93B748", Offset = "0x93B748", VA = "0x93B748")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001C2")]
	[Address(RVA = "0x93AB28", Offset = "0x93AB28", VA = "0x93AB28")]
	public void NextFrame()
	{
	}

	[Token(Token = "0x60001C3")]
	[Address(RVA = "0x93B86C", Offset = "0x93B86C", VA = "0x93B86C")]
	public BookFireTextureAnimation()
	{
	}
}
[Token(Token = "0x2000066")]
public class CharacterHeadTracking : MonoBehaviour
{
	[Token(Token = "0x20001EC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x701148", Offset = "0x701148")]
	private sealed class <Transition>d__26 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float time;

		[Token(Token = "0x4000A0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public CharacterHeadTracking <>4__this;

		[Token(Token = "0x4000A0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool transitionIn;

		[Token(Token = "0x17000249")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600123C")]
			[Address(RVA = "0x93CD4C", Offset = "0x93CD4C", VA = "0x93CD4C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700024A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600123E")]
			[Address(RVA = "0x93CDB4", Offset = "0x93CDB4", VA = "0x93CDB4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001239")]
		[Address(RVA = "0x93C960", Offset = "0x93C960", VA = "0x93C960")]
		[DebuggerHidden]
		public <Transition>d__26(int <>1__state)
		{
		}

		[Token(Token = "0x600123A")]
		[Address(RVA = "0x93CBFC", Offset = "0x93CBFC", VA = "0x93CBFC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600123B")]
		[Address(RVA = "0x93CC00", Offset = "0x93CC00", VA = "0x93CC00", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600123D")]
		[Address(RVA = "0x93CD54", Offset = "0x93CD54", VA = "0x93CD54", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40001AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x702800", Offset = "0x702800")]
	public bool Look;

	[Token(Token = "0x40001AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform LookAt;

	[Token(Token = "0x40001AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x702838", Offset = "0x702838")]
	public Transform HeadBone;

	[Token(Token = "0x40001B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform HeadForward;

	[Token(Token = "0x40001B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform HeadUp;

	[Token(Token = "0x40001B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x702870", Offset = "0x702870")]
	public float HeadDot;

	[Token(Token = "0x40001B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x702888", Offset = "0x702888")]
	public float HeadWeight;

	[Token(Token = "0x40001B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7028A0", Offset = "0x7028A0")]
	public float TrackingSpeed;

	[Token(Token = "0x40001B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7028BC", Offset = "0x7028BC")]
	public float FallbackSpeed;

	[Token(Token = "0x40001B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7028D8", Offset = "0x7028D8")]
	public Transform LeftEye;

	[Token(Token = "0x40001B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform RightEye;

	[Token(Token = "0x40001B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Vector3 UpVector;

	[Token(Token = "0x40001B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Quaternion _leftEyeRotation;

	[Token(Token = "0x40001BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private Quaternion _rightEyeRotation;

	[Token(Token = "0x40001BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private Quaternion _headRotation;

	[Token(Token = "0x40001BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private Quaternion _headDiff;

	[Token(Token = "0x40001BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private float _deltaTime;

	[Token(Token = "0x40001BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private float _lastTime;

	[Token(Token = "0x40001BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private float _lastSum;

	[Token(Token = "0x40001C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public float _weight;

	[Token(Token = "0x40001C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	public bool _look;

	[Token(Token = "0x40001C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBD")]
	private bool _animationChanged;

	[Token(Token = "0x40001C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBE")]
	private bool _transitioningOut;

	[Token(Token = "0x40001C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private Coroutine _coroutine;

	[Token(Token = "0x60001C4")]
	[Address(RVA = "0x93BFD0", Offset = "0x93BFD0", VA = "0x93BFD0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60001C5")]
	[Address(RVA = "0x93C190", Offset = "0x93C190", VA = "0x93C190")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60001C6")]
	[Address(RVA = "0x93C2FC", Offset = "0x93C2FC", VA = "0x93C2FC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x707588", Offset = "0x707588")]
	private IEnumerator Transition(bool transitionIn, float time = 2f)
	{
		return null;
	}

	[Token(Token = "0x60001C7")]
	[Address(RVA = "0x93C2B0", Offset = "0x93C2B0", VA = "0x93C2B0")]
	private void CheckAnimationChange()
	{
	}

	[Token(Token = "0x60001C8")]
	[Address(RVA = "0x93C390", Offset = "0x93C390", VA = "0x93C390")]
	private void LookUpdate()
	{
	}

	[Token(Token = "0x60001C9")]
	[Address(RVA = "0x93C144", Offset = "0x93C144", VA = "0x93C144")]
	private float GetSum()
	{
		return default(float);
	}

	[Token(Token = "0x60001CA")]
	[Address(RVA = "0x93C98C", Offset = "0x93C98C", VA = "0x93C98C")]
	private bool FloatEqual(float a, float b)
	{
		return default(bool);
	}

	[Token(Token = "0x60001CB")]
	[Address(RVA = "0x93CA0C", Offset = "0x93CA0C", VA = "0x93CA0C")]
	public void EnableLook()
	{
	}

	[Token(Token = "0x60001CC")]
	[Address(RVA = "0x93CB68", Offset = "0x93CB68", VA = "0x93CB68")]
	public void DisableLook()
	{
	}

	[Token(Token = "0x60001CD")]
	[Address(RVA = "0x93CB70", Offset = "0x93CB70", VA = "0x93CB70")]
	public CharacterHeadTracking()
	{
	}
}
[Token(Token = "0x2000067")]
public class CloudMovement : MonoBehaviour
{
	[Token(Token = "0x40001C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float Speed;

	[Token(Token = "0x60001CE")]
	[Address(RVA = "0x93CDBC", Offset = "0x93CDBC", VA = "0x93CDBC")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60001CF")]
	[Address(RVA = "0x93CF38", Offset = "0x93CF38", VA = "0x93CF38")]
	public CloudMovement()
	{
	}
}
[Token(Token = "0x2000068")]
public class DioramaManager : MonoBehaviour
{
	[Token(Token = "0x20001ED")]
	public enum DioramaName
	{
		[Token(Token = "0x4000A0E")]
		Hub = 0,
		[Token(Token = "0x4000A0F")]
		Emil = 5,
		[Token(Token = "0x4000A10")]
		Jonas = 3,
		[Token(Token = "0x4000A11")]
		Morten = 4,
		[Token(Token = "0x4000A12")]
		Zeliko = 2
	}

	[Token(Token = "0x20001EE")]
	private enum SetType
	{
		[Token(Token = "0x4000A14")]
		Room,
		[Token(Token = "0x4000A15")]
		Portal
	}

	[Serializable]
	[Token(Token = "0x20001EF")]
	public class Diorama
	{
		[Token(Token = "0x4000A16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[HideInInspector]
		public string name;

		[Token(Token = "0x4000A17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public DioramaName dioramaName;

		[Token(Token = "0x4000A18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject gameObject;

		[Token(Token = "0x4000A19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject portal;

		[Token(Token = "0x4000A1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public MaterialSet roomSet;

		[Token(Token = "0x4000A1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public MaterialSet portalSet;

		[Token(Token = "0x4000A1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public MaterialSet stencilSet;

		[Token(Token = "0x4000A1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x706520", Offset = "0x706520")]
		private readonly int <compareProp>k__BackingField;

		[Token(Token = "0x4000A1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x706530", Offset = "0x706530")]
		private readonly int <passOpProp>k__BackingField;

		[Token(Token = "0x4000A1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x706540", Offset = "0x706540")]
		private bool <visited>k__BackingField;

		[Token(Token = "0x1700024B")]
		public int compareProp
		{
			[Token(Token = "0x600123F")]
			[Address(RVA = "0x93F598", Offset = "0x93F598", VA = "0x93F598")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7097A0", Offset = "0x7097A0")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700024C")]
		public int passOpProp
		{
			[Token(Token = "0x6001240")]
			[Address(RVA = "0x93F5A0", Offset = "0x93F5A0", VA = "0x93F5A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7097B0", Offset = "0x7097B0")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700024D")]
		public bool visited
		{
			[Token(Token = "0x6001241")]
			[Address(RVA = "0x93F5A8", Offset = "0x93F5A8", VA = "0x93F5A8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7097C0", Offset = "0x7097C0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001242")]
			[Address(RVA = "0x93F5B0", Offset = "0x93F5B0", VA = "0x93F5B0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7097D0", Offset = "0x7097D0")]
			set
			{
			}
		}

		[Token(Token = "0x6001243")]
		[Address(RVA = "0x93F5BC", Offset = "0x93F5BC", VA = "0x93F5BC")]
		public Diorama()
		{
		}
	}

	[Token(Token = "0x40001C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SceneLoader sceneHandler;

	[Token(Token = "0x40001C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public PlayableDirector fadeInTimeline;

	[Token(Token = "0x40001C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public PlayableDirector fadeOutTimeline;

	[Token(Token = "0x40001C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public MeshRenderer hubBackdrop;

	[Token(Token = "0x40001CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool isSinglePlayer;

	[Token(Token = "0x40001CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Action<int> onToggleHub;

	[Token(Token = "0x40001CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x702910", Offset = "0x702910")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x702910", Offset = "0x702910")]
	public Diorama[] dioramas;

	[Token(Token = "0x60001D0")]
	[Address(RVA = "0x93E524", Offset = "0x93E524", VA = "0x93E524")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001D1")]
	[Address(RVA = "0x93EB20", Offset = "0x93EB20", VA = "0x93EB20")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60001D2")]
	[Address(RVA = "0x93EC84", Offset = "0x93EC84", VA = "0x93EC84")]
	[DebugButton]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x7075EC", Offset = "0x7075EC")]
	public void ToggleHub()
	{
	}

	[Token(Token = "0x60001D3")]
	[Address(RVA = "0x93EE04", Offset = "0x93EE04", VA = "0x93EE04")]
	[DebugButton]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x707624", Offset = "0x707624")]
	public void ToggleZeliko()
	{
	}

	[Token(Token = "0x60001D4")]
	[Address(RVA = "0x93EE84", Offset = "0x93EE84", VA = "0x93EE84")]
	[DebugButton]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x70765C", Offset = "0x70765C")]
	public void ToggleJonas()
	{
	}

	[Token(Token = "0x60001D5")]
	[Address(RVA = "0x93EF04", Offset = "0x93EF04", VA = "0x93EF04")]
	[DebugButton]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x707694", Offset = "0x707694")]
	public void ToggleMorten()
	{
	}

	[Token(Token = "0x60001D6")]
	[Address(RVA = "0x93EF84", Offset = "0x93EF84", VA = "0x93EF84")]
	[DebugButton]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x7076CC", Offset = "0x7076CC")]
	public void ToggleEmil()
	{
	}

	[Token(Token = "0x60001D7")]
	[Address(RVA = "0x93E694", Offset = "0x93E694", VA = "0x93E694")]
	private void Toggle(DioramaName name, bool duringAwake = false)
	{
	}

	[Token(Token = "0x60001D8")]
	[Address(RVA = "0x93F1B8", Offset = "0x93F1B8", VA = "0x93F1B8")]
	private void EnableStencil(Diorama diorama, SetType set)
	{
	}

	[Token(Token = "0x60001D9")]
	[Address(RVA = "0x93F004", Offset = "0x93F004", VA = "0x93F004")]
	private void DisableStencil(Diorama diorama, SetType set)
	{
	}

	[Token(Token = "0x60001DA")]
	[Address(RVA = "0x93F36C", Offset = "0x93F36C", VA = "0x93F36C")]
	[DebugButton]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x707704", Offset = "0x707704")]
	private void DisableAllStencils()
	{
	}

	[Token(Token = "0x60001DB")]
	[Address(RVA = "0x93F4B4", Offset = "0x93F4B4", VA = "0x93F4B4")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x60001DC")]
	[Address(RVA = "0x93F590", Offset = "0x93F590", VA = "0x93F590")]
	public DioramaManager()
	{
	}
}
[Token(Token = "0x2000069")]
public class DioramaTransition : MonoBehaviour
{
	[Token(Token = "0x20001F0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x701158", Offset = "0x701158")]
	private sealed class <Transition>d__16 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DioramaTransition <>4__this;

		[Token(Token = "0x4000A23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float duration;

		[Token(Token = "0x4000A24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float radius;

		[Token(Token = "0x4000A25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <st>5__2;

		[Token(Token = "0x4000A26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float[] <startRadius>5__3;

		[Token(Token = "0x1700024E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001247")]
			[Address(RVA = "0x940410", Offset = "0x940410", VA = "0x940410", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700024F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001249")]
			[Address(RVA = "0x940478", Offset = "0x940478", VA = "0x940478", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001244")]
		[Address(RVA = "0x93FCBC", Offset = "0x93FCBC", VA = "0x93FCBC")]
		[DebuggerHidden]
		public <Transition>d__16(int <>1__state)
		{
		}

		[Token(Token = "0x6001245")]
		[Address(RVA = "0x9400E4", Offset = "0x9400E4", VA = "0x9400E4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001246")]
		[Address(RVA = "0x9400E8", Offset = "0x9400E8", VA = "0x9400E8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001248")]
		[Address(RVA = "0x940418", Offset = "0x940418", VA = "0x940418", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40001CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MaterialSet materialSet;

	[Token(Token = "0x40001CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform inPosition;

	[Token(Token = "0x40001CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform outPosition;

	[Token(Token = "0x40001D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float inRadius;

	[Token(Token = "0x40001D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float outRadius;

	[Token(Token = "0x40001D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AnimationCurve easing;

	[Token(Token = "0x40001D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x70295C", Offset = "0x70295C")]
	public float sphereRadius;

	[Token(Token = "0x40001D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Texture2D noiseTex;

	[Token(Token = "0x40001D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float noiseTiling;

	[Token(Token = "0x40001D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float noiseRadius;

	[Token(Token = "0x40001D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private readonly int m_posProp;

	[Token(Token = "0x40001D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private readonly int m_radiusProp;

	[Token(Token = "0x40001D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Coroutine m_coroutine;

	[Token(Token = "0x60001DD")]
	[Address(RVA = "0x93F63C", Offset = "0x93F63C", VA = "0x93F63C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60001DE")]
	[Address(RVA = "0x93F968", Offset = "0x93F968", VA = "0x93F968")]
	public void TransitionIn(float duration)
	{
	}

	[Token(Token = "0x60001DF")]
	[Address(RVA = "0x93FB54", Offset = "0x93FB54", VA = "0x93FB54")]
	public void TransitionOut(float duration)
	{
	}

	[Token(Token = "0x60001E0")]
	[Address(RVA = "0x93FAD0", Offset = "0x93FAD0", VA = "0x93FAD0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x70773C", Offset = "0x70773C")]
	private IEnumerator Transition(float duration, float radius)
	{
		return null;
	}

	[Token(Token = "0x60001E1")]
	[Address(RVA = "0x93F660", Offset = "0x93F660", VA = "0x93F660")]
	[DebugButton]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x7077A0", Offset = "0x7077A0")]
	private void SetIn()
	{
	}

	[Token(Token = "0x60001E2")]
	[Address(RVA = "0x93FCE8", Offset = "0x93FCE8", VA = "0x93FCE8")]
	[DebugButton]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x7077D8", Offset = "0x7077D8")]
	private void SetOut()
	{
	}

	[Token(Token = "0x60001E3")]
	[Address(RVA = "0x93F7FC", Offset = "0x93F7FC", VA = "0x93F7FC")]
	private void SetShaderProperties()
	{
	}

	[Token(Token = "0x60001E4")]
	[Address(RVA = "0x93FE84", Offset = "0x93FE84", VA = "0x93FE84")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x60001E5")]
	[Address(RVA = "0x940030", Offset = "0x940030", VA = "0x940030")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x60001E6")]
	[Address(RVA = "0x940034", Offset = "0x940034", VA = "0x940034")]
	public DioramaTransition()
	{
	}
}
[Token(Token = "0x200006A")]
[ExecuteAlways]
public class DioramaVideoPlayer : MonoBehaviour
{
	[Token(Token = "0x40001DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public VideoPlayer videoPlayer;

	[Token(Token = "0x40001DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool prepareVideoDuringAwake;

	[Token(Token = "0x40001DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform source;

	[Token(Token = "0x40001DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform target;

	[Token(Token = "0x60001E7")]
	[Address(RVA = "0x940480", Offset = "0x940480", VA = "0x940480")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001E8")]
	[Address(RVA = "0x940528", Offset = "0x940528", VA = "0x940528")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60001E9")]
	[Address(RVA = "0x940670", Offset = "0x940670", VA = "0x940670")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60001EA")]
	[Address(RVA = "0x9407B8", Offset = "0x9407B8", VA = "0x9407B8")]
	private void FrameUpdate(VideoPlayer src, long frameIdx)
	{
	}

	[Token(Token = "0x60001EB")]
	[Address(RVA = "0x9407F8", Offset = "0x9407F8", VA = "0x9407F8")]
	private void Reset()
	{
	}

	[Token(Token = "0x60001EC")]
	[Address(RVA = "0x940850", Offset = "0x940850", VA = "0x940850")]
	public DioramaVideoPlayer()
	{
	}
}
[Token(Token = "0x200006B")]
public class DistanceFade : MonoBehaviour
{
	[Token(Token = "0x40001DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform pivotObject;

	[Token(Token = "0x40001DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material material;

	[Token(Token = "0x40001E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float minDistance;

	[Token(Token = "0x40001E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float maxDistance;

	[Token(Token = "0x40001E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float changeSpeed;

	[Token(Token = "0x40001E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public UnityEvent onVisible;

	[Token(Token = "0x40001E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public UnityEvent onHidden;

	[Token(Token = "0x40001E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int m_colorProp;

	[Token(Token = "0x40001E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private bool m_active;

	[Token(Token = "0x40001E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float m_currentDistance;

	[Token(Token = "0x40001E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float m_smoothDistance;

	[Token(Token = "0x60001ED")]
	[Address(RVA = "0x940978", Offset = "0x940978", VA = "0x940978")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60001EE")]
	[Address(RVA = "0x940B10", Offset = "0x940B10", VA = "0x940B10")]
	private void Update()
	{
	}

	[Token(Token = "0x60001EF")]
	[Address(RVA = "0x940E04", Offset = "0x940E04", VA = "0x940E04")]
	public DistanceFade()
	{
	}
}
[Token(Token = "0x200006C")]
public class HingePullBehaviour : MonoBehaviour
{
	[Token(Token = "0x40001E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform puller;

	[Token(Token = "0x40001EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x702994", Offset = "0x702994")]
	public Vector3 axis;

	[Token(Token = "0x40001EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Vector3 openAxis;

	[Token(Token = "0x40001EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float force;

	[Token(Token = "0x40001ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float tolerance;

	[Token(Token = "0x40001EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Transform m_transform;

	[Token(Token = "0x40001EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Rigidbody m_rigidbody;

	[Token(Token = "0x40001F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private HingeJoint m_joint;

	[Token(Token = "0x60001F0")]
	[Address(RVA = "0x970568", Offset = "0x970568", VA = "0x970568")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001F1")]
	[Address(RVA = "0x970610", Offset = "0x970610", VA = "0x970610")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60001F2")]
	[Address(RVA = "0x970928", Offset = "0x970928", VA = "0x970928")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x60001F3")]
	[Address(RVA = "0x97081C", Offset = "0x97081C", VA = "0x97081C")]
	private float ProjectedSignedAngle(Vector3 from, Vector3 to, Vector3 planeNormal)
	{
		return default(float);
	}

	[Token(Token = "0x60001F4")]
	[Address(RVA = "0x970ABC", Offset = "0x970ABC", VA = "0x970ABC")]
	public HingePullBehaviour()
	{
	}
}
[Token(Token = "0x200006D")]
public class InstrumentOrientation : MonoBehaviour
{
	[Token(Token = "0x20001F1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x701168", Offset = "0x701168")]
	private sealed class <Orient>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public InstrumentOrientation <>4__this;

		[Token(Token = "0x4000A2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Transform <player>5__2;

		[Token(Token = "0x17000250")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600124D")]
			[Address(RVA = "0x971264", Offset = "0x971264", VA = "0x971264", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000251")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600124F")]
			[Address(RVA = "0x9712CC", Offset = "0x9712CC", VA = "0x9712CC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600124A")]
		[Address(RVA = "0x970F14", Offset = "0x970F14", VA = "0x970F14")]
		[DebuggerHidden]
		public <Orient>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x600124B")]
		[Address(RVA = "0x970F48", Offset = "0x970F48", VA = "0x970F48", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600124C")]
		[Address(RVA = "0x970F4C", Offset = "0x970F4C", VA = "0x970F4C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600124E")]
		[Address(RVA = "0x97126C", Offset = "0x97126C", VA = "0x97126C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40001F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Coroutine m_coroutine;

	[Token(Token = "0x60001F5")]
	[Address(RVA = "0x970E58", Offset = "0x970E58", VA = "0x970E58")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60001F6")]
	[Address(RVA = "0x970EA4", Offset = "0x970EA4", VA = "0x970EA4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x707810", Offset = "0x707810")]
	private IEnumerator Orient()
	{
		return null;
	}

	[Token(Token = "0x60001F7")]
	[Address(RVA = "0x970F40", Offset = "0x970F40", VA = "0x970F40")]
	public InstrumentOrientation()
	{
	}
}
[Token(Token = "0x200006E")]
public class MusicBrain : MonoBehaviour
{
	[Token(Token = "0x40001F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioMixer mixer;

	[Token(Token = "0x40001F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioMixerSnapshot mute;

	[Token(Token = "0x40001F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioMixerSnapshot musicLouder;

	[Token(Token = "0x40001F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioSource[] disableSpatialized;

	[Token(Token = "0x40001F6")]
	private const float beatInMs = 1667f;

	[Token(Token = "0x40001F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7029CC", Offset = "0x7029CC")]
	public float choirDelay;

	[Token(Token = "0x60001F8")]
	[Address(RVA = "0xACE10C", Offset = "0xACE10C", VA = "0xACE10C")]
	private int RandomEvenNumber(int min, int max)
	{
		return default(int);
	}

	[Token(Token = "0x60001F9")]
	[Address(RVA = "0xACE144", Offset = "0xACE144", VA = "0xACE144")]
	public void MusicLouder()
	{
	}

	[Token(Token = "0x60001FA")]
	[Address(RVA = "0xACE164", Offset = "0xACE164", VA = "0xACE164")]
	public void MuteMixer()
	{
	}

	[Token(Token = "0x60001FB")]
	[Address(RVA = "0xACE1EC", Offset = "0xACE1EC", VA = "0xACE1EC")]
	[DebugButton]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x707874", Offset = "0x707874")]
	private void MakeRandomNumber()
	{
	}

	[Token(Token = "0x60001FC")]
	[Address(RVA = "0xACE284", Offset = "0xACE284", VA = "0xACE284")]
	private void Start()
	{
	}

	[Token(Token = "0x60001FD")]
	[Address(RVA = "0xACE314", Offset = "0xACE314", VA = "0xACE314")]
	private void Update()
	{
	}

	[Token(Token = "0x60001FE")]
	[Address(RVA = "0xACE374", Offset = "0xACE374", VA = "0xACE374")]
	public MusicBrain()
	{
	}
}
[Token(Token = "0x200006F")]
public class OrbitPivot : MonoBehaviour
{
	[Token(Token = "0x40001F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool fixedUpdate;

	[Token(Token = "0x40001F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector3 pivot;

	[Token(Token = "0x40001FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float speed;

	[Token(Token = "0x40001FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform m_transform;

	[Token(Token = "0x60001FF")]
	[Address(RVA = "0xAE10F8", Offset = "0xAE10F8", VA = "0xAE10F8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000200")]
	[Address(RVA = "0xAE1120", Offset = "0xAE1120", VA = "0xAE1120")]
	private void Update()
	{
	}

	[Token(Token = "0x6000201")]
	[Address(RVA = "0xAE1208", Offset = "0xAE1208", VA = "0xAE1208")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000202")]
	[Address(RVA = "0xAE1130", Offset = "0xAE1130", VA = "0xAE1130")]
	private void Rotate()
	{
	}

	[Token(Token = "0x6000203")]
	[Address(RVA = "0xAE1218", Offset = "0xAE1218", VA = "0xAE1218")]
	public OrbitPivot()
	{
	}
}
[Token(Token = "0x2000070")]
public static class PianoUtils
{
	[Token(Token = "0x20001F2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x701178", Offset = "0x701178")]
	private sealed class <>c__DisplayClass4_0
	{
		[Token(Token = "0x4000A2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int note;

		[Token(Token = "0x6001250")]
		[Address(RVA = "0xAE2C8C", Offset = "0xAE2C8C", VA = "0xAE2C8C")]
		public <>c__DisplayClass4_0()
		{
		}

		[Token(Token = "0x6001251")]
		[Address(RVA = "0xAE2C94", Offset = "0xAE2C94", VA = "0xAE2C94")]
		internal long <GetClosestNoteInscale>b__0(int x)
		{
			return default(long);
		}
	}

	[Token(Token = "0x6000204")]
	[Address(RVA = "0xAE2308", Offset = "0xAE2308", VA = "0xAE2308")]
	public static int KeyToOctave(int key)
	{
		return default(int);
	}

	[Token(Token = "0x6000205")]
	[Address(RVA = "0xAE23A8", Offset = "0xAE23A8", VA = "0xAE23A8")]
	public static int KeyToNote(int key)
	{
		return default(int);
	}

	[Token(Token = "0x6000206")]
	[Address(RVA = "0xAE223C", Offset = "0xAE223C", VA = "0xAE223C")]
	public static int KeyNumber(PianoKeyBehaviour key)
	{
		return default(int);
	}

	[Token(Token = "0x6000207")]
	[Address(RVA = "0xAE249C", Offset = "0xAE249C", VA = "0xAE249C")]
	public static int OctaveAndNoteToKey(int oct, int note)
	{
		return default(int);
	}

	[Token(Token = "0x6000208")]
	[Address(RVA = "0xAE23D0", Offset = "0xAE23D0", VA = "0xAE23D0")]
	public static int GetClosestNoteInscale(int note, int octave, int[] scale)
	{
		return default(int);
	}
}
[Token(Token = "0x2000071")]
public class PianoBehaviour : MonoBehaviour
{
	[Token(Token = "0x40001FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7029E4", Offset = "0x7029E4")]
	public float maxAngle;

	[Token(Token = "0x40001FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7029FC", Offset = "0x7029FC")]
	public float playThreshold;

	[Token(Token = "0x40001FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x702A14", Offset = "0x702A14")]
	public float velocityModifier;

	[Token(Token = "0x40001FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x702A30", Offset = "0x702A30")]
	public int[] scale;

	[Token(Token = "0x4000200")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x702A68", Offset = "0x702A68")]
	public PianoKeyBehaviour[] keys;

	[Token(Token = "0x4000201")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x702AA0", Offset = "0x702AA0")]
	public AudioClip[] keySamples;

	[Token(Token = "0x4000202")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<PianoKeyBehaviour> m_activeKeys;

	[Token(Token = "0x6000209")]
	[Address(RVA = "0xAE1C58", Offset = "0xAE1C58", VA = "0xAE1C58")]
	private void Reset()
	{
	}

	[Token(Token = "0x600020A")]
	[Address(RVA = "0xAE1CFC", Offset = "0xAE1CFC", VA = "0xAE1CFC")]
	private void Update()
	{
	}

	[Token(Token = "0x600020B")]
	[Address(RVA = "0xAE1D00", Offset = "0xAE1D00", VA = "0xAE1D00")]
	private void PlayKeys()
	{
	}

	[Token(Token = "0x600020C")]
	[Address(RVA = "0xAE24AC", Offset = "0xAE24AC", VA = "0xAE24AC")]
	public void AddActiveKey(PianoKeyBehaviour key)
	{
	}

	[Token(Token = "0x600020D")]
	[Address(RVA = "0xAE2544", Offset = "0xAE2544", VA = "0xAE2544")]
	public void RemoveActiveKey(PianoKeyBehaviour key)
	{
	}

	[Token(Token = "0x600020E")]
	[Address(RVA = "0xAE25DC", Offset = "0xAE25DC", VA = "0xAE25DC")]
	public PianoBehaviour()
	{
	}
}
[Token(Token = "0x2000072")]
public class PianoFingerBehaviour : MonoBehaviour
{
	[Token(Token = "0x4000203")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public VRController.Hand hand;

	[Token(Token = "0x4000204")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x702AD8", Offset = "0x702AD8")]
	private Vector3 <velocity>k__BackingField;

	[Token(Token = "0x4000205")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x702AE8", Offset = "0x702AE8")]
	[AttributeAttribute(Name = "HelpAttribute", RVA = "0x702AE8", Offset = "0x702AE8")]
	public Vector3 translationOffset;

	[Token(Token = "0x4000206")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Transform m_transform;

	[Token(Token = "0x4000207")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3 m_lastPosition;

	[Token(Token = "0x17000011")]
	public Vector3 velocity
	{
		[Token(Token = "0x600020F")]
		[Address(RVA = "0xAE2690", Offset = "0xAE2690", VA = "0xAE2690")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7078AC", Offset = "0x7078AC")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x6000210")]
		[Address(RVA = "0xAE269C", Offset = "0xAE269C", VA = "0xAE269C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7078BC", Offset = "0x7078BC")]
		private set
		{
		}
	}

	[Token(Token = "0x6000211")]
	[Address(RVA = "0xAE26A8", Offset = "0xAE26A8", VA = "0xAE26A8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000212")]
	[Address(RVA = "0xAE2824", Offset = "0xAE2824", VA = "0xAE2824")]
	private void Update()
	{
	}

	[Token(Token = "0x6000213")]
	[Address(RVA = "0xAE2980", Offset = "0xAE2980", VA = "0xAE2980")]
	public PianoFingerBehaviour()
	{
	}
}
[Token(Token = "0x2000073")]
public class PianoKeyBehaviour : MonoBehaviour
{
	[Token(Token = "0x4000208")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PianoBehaviour piano;

	[Token(Token = "0x4000209")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioSource audioSource;

	[Token(Token = "0x400020A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x702B48", Offset = "0x702B48")]
	private Transform <meshPivot>k__BackingField;

	[Token(Token = "0x400020B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x702B58", Offset = "0x702B58")]
	private Transform <fingerPivot>k__BackingField;

	[Token(Token = "0x400020C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x702B68", Offset = "0x702B68")]
	private bool <played>k__BackingField;

	[Token(Token = "0x400020D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x702B78", Offset = "0x702B78")]
	private PianoFingerBehaviour <finger>k__BackingField;

	[Token(Token = "0x400020E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Quaternion m_defaultRotation;

	[Token(Token = "0x17000012")]
	public Transform meshPivot
	{
		[Token(Token = "0x6000214")]
		[Address(RVA = "0xAE29E8", Offset = "0xAE29E8", VA = "0xAE29E8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7078CC", Offset = "0x7078CC")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000215")]
		[Address(RVA = "0xAE29F0", Offset = "0xAE29F0", VA = "0xAE29F0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7078DC", Offset = "0x7078DC")]
		private set
		{
		}
	}

	[Token(Token = "0x17000013")]
	public Transform fingerPivot
	{
		[Token(Token = "0x6000216")]
		[Address(RVA = "0xAE29F8", Offset = "0xAE29F8", VA = "0xAE29F8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7078EC", Offset = "0x7078EC")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000217")]
		[Address(RVA = "0xAE2A00", Offset = "0xAE2A00", VA = "0xAE2A00")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7078FC", Offset = "0x7078FC")]
		private set
		{
		}
	}

	[Token(Token = "0x17000014")]
	public bool played
	{
		[Token(Token = "0x6000218")]
		[Address(RVA = "0xAE2A08", Offset = "0xAE2A08", VA = "0xAE2A08")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x70790C", Offset = "0x70790C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000219")]
		[Address(RVA = "0xAE2A10", Offset = "0xAE2A10", VA = "0xAE2A10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x70791C", Offset = "0x70791C")]
		set
		{
		}
	}

	[Token(Token = "0x17000015")]
	public PianoFingerBehaviour finger
	{
		[Token(Token = "0x600021A")]
		[Address(RVA = "0xAE2A1C", Offset = "0xAE2A1C", VA = "0xAE2A1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x70792C", Offset = "0x70792C")]
		get
		{
			return null;
		}
		[Token(Token = "0x600021B")]
		[Address(RVA = "0xAE2A24", Offset = "0xAE2A24", VA = "0xAE2A24")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x70793C", Offset = "0x70793C")]
		set
		{
		}
	}

	[Token(Token = "0x600021C")]
	[Address(RVA = "0xAE2A2C", Offset = "0xAE2A2C", VA = "0xAE2A2C")]
	private void Reset()
	{
	}

	[Token(Token = "0x600021D")]
	[Address(RVA = "0xAE2A84", Offset = "0xAE2A84", VA = "0xAE2A84")]
	private void Awake()
	{
	}

	[Token(Token = "0x600021E")]
	[Address(RVA = "0xAE2AD4", Offset = "0xAE2AD4", VA = "0xAE2AD4")]
	public void MouseThePiano()
	{
	}

	[Token(Token = "0x600021F")]
	[Address(RVA = "0xAE2B10", Offset = "0xAE2B10", VA = "0xAE2B10")]
	public void UnMouseThePiano()
	{
	}

	[Token(Token = "0x6000220")]
	[Address(RVA = "0xAE2B80", Offset = "0xAE2B80", VA = "0xAE2B80")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000221")]
	[Address(RVA = "0xAE2C50", Offset = "0xAE2C50", VA = "0xAE2C50")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000222")]
	[Address(RVA = "0xAE2B44", Offset = "0xAE2B44", VA = "0xAE2B44")]
	public void Revert()
	{
	}

	[Token(Token = "0x6000223")]
	[Address(RVA = "0xAE2C84", Offset = "0xAE2C84", VA = "0xAE2C84")]
	public PianoKeyBehaviour()
	{
	}
}
[Token(Token = "0x2000074")]
public class PlaygroundManager : MonoBehaviour
{
	[Token(Token = "0x400020F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x702B88", Offset = "0x702B88")]
	public UnityEvent gramophoneCallback;

	[Token(Token = "0x4000210")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x702BC0", Offset = "0x702BC0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x702BC0", Offset = "0x702BC0")]
	public UnityEvent pianoCallback;

	[Token(Token = "0x4000211")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x702C0C", Offset = "0x702C0C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x702C0C", Offset = "0x702C0C")]
	public UnityEvent teacupCallback;

	[Token(Token = "0x4000212")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x702C58", Offset = "0x702C58")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x702C58", Offset = "0x702C58")]
	public UnityEvent nightstandCallback;

	[Token(Token = "0x4000213")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x702CA4", Offset = "0x702CA4")]
	private static PlaygroundManager <instance>k__BackingField;

	[Token(Token = "0x4000214")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool m_gramophonePlayed;

	[Token(Token = "0x4000215")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	private bool m_pianoPlayed;

	[Token(Token = "0x4000216")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
	private bool m_teacupPlayed;

	[Token(Token = "0x4000217")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3B")]
	private bool m_nightstandPlayed;

	[Token(Token = "0x17000016")]
	public static PlaygroundManager instance
	{
		[Token(Token = "0x6000224")]
		[Address(RVA = "0x884E30", Offset = "0x884E30", VA = "0x884E30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x70794C", Offset = "0x70794C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000225")]
		[Address(RVA = "0x884E80", Offset = "0x884E80", VA = "0x884E80")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x70795C", Offset = "0x70795C")]
		private set
		{
		}
	}

	[Token(Token = "0x6000226")]
	[Address(RVA = "0x884ED4", Offset = "0x884ED4", VA = "0x884ED4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000227")]
	[Address(RVA = "0x884FF8", Offset = "0x884FF8", VA = "0x884FF8")]
	public void PlayedGramophone()
	{
	}

	[Token(Token = "0x6000228")]
	[Address(RVA = "0x885038", Offset = "0x885038", VA = "0x885038")]
	public void PlayedPiano()
	{
	}

	[Token(Token = "0x6000229")]
	[Address(RVA = "0x885078", Offset = "0x885078", VA = "0x885078")]
	public void PlayedTeacup()
	{
	}

	[Token(Token = "0x600022A")]
	[Address(RVA = "0x8850B8", Offset = "0x8850B8", VA = "0x8850B8")]
	public void PlayedNightstand()
	{
	}

	[Token(Token = "0x600022B")]
	[Address(RVA = "0x8850F8", Offset = "0x8850F8", VA = "0x8850F8")]
	public PlaygroundManager()
	{
	}
}
[Token(Token = "0x2000075")]
public class PortalBehaviour : MonoBehaviour
{
	[Token(Token = "0x20001F3")]
	private struct TransformData
	{
		[Token(Token = "0x4000A2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 position;

		[Token(Token = "0x4000A2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Quaternion rotation;

		[Token(Token = "0x4000A2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 localScale;
	}

	[Token(Token = "0x4000218")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x702CB4", Offset = "0x702CB4")]
	public Transform[] doors;

	[Token(Token = "0x4000219")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x702CEC", Offset = "0x702CEC")]
	public bool checkStatusOnEnable;

	[Token(Token = "0x400021A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x702D24", Offset = "0x702D24")]
	public UnityEvent anyOpened;

	[Token(Token = "0x400021B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public UnityEvent allClosed;

	[Token(Token = "0x400021C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int m_openedPortals;

	[Token(Token = "0x400021D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public bool m_open;

	[Token(Token = "0x400021E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private TransformData[] m_doorData;

	[Token(Token = "0x600022C")]
	[Address(RVA = "0x885100", Offset = "0x885100", VA = "0x885100")]
	private void Awake()
	{
	}

	[Token(Token = "0x600022D")]
	[Address(RVA = "0x8852C4", Offset = "0x8852C4", VA = "0x8852C4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600022E")]
	[Address(RVA = "0x885340", Offset = "0x885340", VA = "0x885340")]
	public void Open()
	{
	}

	[Token(Token = "0x600022F")]
	[Address(RVA = "0x885354", Offset = "0x885354", VA = "0x885354")]
	public void Close()
	{
	}

	[Token(Token = "0x6000230")]
	[Address(RVA = "0x8852D8", Offset = "0x8852D8", VA = "0x8852D8")]
	private void Handler(bool forceOpenCheck = false)
	{
	}

	[Token(Token = "0x6000231")]
	[Address(RVA = "0x88536C", Offset = "0x88536C", VA = "0x88536C")]
	public void ResetDoors()
	{
	}

	[Token(Token = "0x6000232")]
	[Address(RVA = "0x885508", Offset = "0x885508", VA = "0x885508")]
	public PortalBehaviour()
	{
	}
}
[Token(Token = "0x2000076")]
public class ReorientObject : MonoBehaviour
{
	[Token(Token = "0x20001F4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x701188", Offset = "0x701188")]
	private sealed class <Reorient>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ReorientObject <>4__this;

		[Token(Token = "0x4000A32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Transform <player>5__2;

		[Token(Token = "0x4000A33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 <origin>5__3;

		[Token(Token = "0x4000A34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Transform <trans>5__4;

		[Token(Token = "0x17000252")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001255")]
			[Address(RVA = "0x8864BC", Offset = "0x8864BC", VA = "0x8864BC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000253")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001257")]
			[Address(RVA = "0x886524", Offset = "0x886524", VA = "0x886524", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001252")]
		[Address(RVA = "0x885E04", Offset = "0x885E04", VA = "0x885E04")]
		[DebuggerHidden]
		public <Reorient>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x6001253")]
		[Address(RVA = "0x885E48", Offset = "0x885E48", VA = "0x885E48", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001254")]
		[Address(RVA = "0x885E4C", Offset = "0x885E4C", VA = "0x885E4C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001256")]
		[Address(RVA = "0x8864C4", Offset = "0x8864C4", VA = "0x8864C4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400021F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform customTransform;

	[Token(Token = "0x4000220")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HelpAttribute", RVA = "0x702D5C", Offset = "0x702D5C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x702D5C", Offset = "0x702D5C")]
	public float centerRadius;

	[Token(Token = "0x4000221")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool lookAtCenter;

	[Token(Token = "0x4000222")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector3 rotationOffset;

	[Token(Token = "0x4000223")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x702DB0", Offset = "0x702DB0")]
	public FloatingInteractable floatingInteractable;

	[Token(Token = "0x4000224")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x702DE8", Offset = "0x702DE8")]
	public UnityEvent orientedCallback;

	[Token(Token = "0x4000225")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Coroutine m_coroutine;

	[Token(Token = "0x6000233")]
	[Address(RVA = "0x885D24", Offset = "0x885D24", VA = "0x885D24")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000234")]
	[Address(RVA = "0x885DD4", Offset = "0x885DD4", VA = "0x885DD4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000235")]
	[Address(RVA = "0x885D64", Offset = "0x885D64", VA = "0x885D64")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x70796C", Offset = "0x70796C")]
	private IEnumerator Reorient()
	{
		return null;
	}

	[Token(Token = "0x6000236")]
	[Address(RVA = "0x885E30", Offset = "0x885E30", VA = "0x885E30")]
	public ReorientObject()
	{
	}
}
[Token(Token = "0x2000077")]
public class SetFire : MonoBehaviour
{
	[Token(Token = "0x4000226")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LayerMask matchLayer;

	[Token(Token = "0x6000237")]
	[Address(RVA = "0x8884BC", Offset = "0x8884BC", VA = "0x8884BC")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000238")]
	[Address(RVA = "0x888608", Offset = "0x888608", VA = "0x888608")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000239")]
	[Address(RVA = "0x8886D0", Offset = "0x8886D0", VA = "0x8886D0")]
	public SetFire()
	{
	}
}
[Token(Token = "0x2000078")]
[ExecuteAlways]
public class SpriteToMaterialTexture : MonoBehaviour
{
	[Token(Token = "0x4000227")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public VideoPlayer videoPlayer;

	[Token(Token = "0x4000228")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SpriteRenderer spriteRenderer;

	[Token(Token = "0x4000229")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Material targetMaterial;

	[Token(Token = "0x400022A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string property;

	[Token(Token = "0x400022B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int m_propId;

	[Token(Token = "0x400022C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Texture2D m_tex;

	[Token(Token = "0x400022D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool m_hasVideo;

	[Token(Token = "0x400022E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	private bool m_videoUpdate;

	[Token(Token = "0x600023A")]
	[Address(RVA = "0x88A0B8", Offset = "0x88A0B8", VA = "0x88A0B8")]
	private void Awake()
	{
	}

	[Token(Token = "0x600023B")]
	[Address(RVA = "0x88A0E4", Offset = "0x88A0E4", VA = "0x88A0E4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600023C")]
	[Address(RVA = "0x88A1D4", Offset = "0x88A1D4", VA = "0x88A1D4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600023D")]
	[Address(RVA = "0x88A2A8", Offset = "0x88A2A8", VA = "0x88A2A8")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600023E")]
	[Address(RVA = "0x88A400", Offset = "0x88A400", VA = "0x88A400")]
	private void VideoPlayerOnFrameReady(VideoPlayer source, long frameIdx)
	{
	}

	[Token(Token = "0x600023F")]
	[Address(RVA = "0x88A2E0", Offset = "0x88A2E0", VA = "0x88A2E0")]
	private void UpdateTexture()
	{
	}

	[Token(Token = "0x6000240")]
	[Address(RVA = "0x88A40C", Offset = "0x88A40C", VA = "0x88A40C")]
	private void Reset()
	{
	}

	[Token(Token = "0x6000241")]
	[Address(RVA = "0x88A464", Offset = "0x88A464", VA = "0x88A464")]
	public SpriteToMaterialTexture()
	{
	}
}
[Token(Token = "0x2000079")]
public class TeabagBehaviour : MonoBehaviour
{
	[Token(Token = "0x400022F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x702E20", Offset = "0x702E20")]
	public float airDrag;

	[Token(Token = "0x4000230")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float teaDrag;

	[Token(Token = "0x4000231")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x702E58", Offset = "0x702E58")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x702E58", Offset = "0x702E58")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x702E58", Offset = "0x702E58")]
	public Rigidbody[] rigidbodies;

	[Token(Token = "0x6000242")]
	[Address(RVA = "0x8970E8", Offset = "0x8970E8", VA = "0x8970E8")]
	public void EnterTea()
	{
	}

	[Token(Token = "0x6000243")]
	[Address(RVA = "0x8971A0", Offset = "0x8971A0", VA = "0x8971A0")]
	public void ExitTea()
	{
	}

	[Token(Token = "0x6000244")]
	[Address(RVA = "0x89721C", Offset = "0x89721C", VA = "0x89721C")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x6000245")]
	[Address(RVA = "0x89730C", Offset = "0x89730C", VA = "0x89730C")]
	public TeabagBehaviour()
	{
	}
}
[Token(Token = "0x200007A")]
public class TeacupBehaviour : MonoBehaviour
{
	[Token(Token = "0x4000232")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TeabagBehaviour teabag;

	[Token(Token = "0x4000233")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject drip;

	[Token(Token = "0x4000234")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioSource audioSource;

	[Token(Token = "0x4000235")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioSource synthSource;

	[Token(Token = "0x4000236")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AudioSource bassSource;

	[Token(Token = "0x4000237")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AudioMixerGroup[] teacupGroups;

	[Token(Token = "0x4000238")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public string teabagTag;

	[Token(Token = "0x4000239")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AudioClip[] bassNotes;

	[Token(Token = "0x400023A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public AudioClip[] synthDrips;

	[Token(Token = "0x400023B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Queue<AudioClip> bassClips;

	[Token(Token = "0x400023C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private GameObject[] m_dripPool;

	[Token(Token = "0x400023D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private int m_dripPoolIndex;

	[Token(Token = "0x6000246")]
	[Address(RVA = "0x897320", Offset = "0x897320", VA = "0x897320")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000247")]
	[Address(RVA = "0x8974B4", Offset = "0x8974B4", VA = "0x8974B4")]
	private void PlaySynthDrip()
	{
	}

	[Token(Token = "0x6000248")]
	[Address(RVA = "0x8975CC", Offset = "0x8975CC", VA = "0x8975CC")]
	private void PlayBassNote()
	{
	}

	[Token(Token = "0x6000249")]
	[Address(RVA = "0x89768C", Offset = "0x89768C", VA = "0x89768C")]
	private void PlayTeacupAudio()
	{
	}

	[Token(Token = "0x600024A")]
	[Address(RVA = "0x897730", Offset = "0x897730", VA = "0x897730")]
	private void PoolDrip()
	{
	}

	[Token(Token = "0x600024B")]
	[Address(RVA = "0x897850", Offset = "0x897850", VA = "0x897850")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600024C")]
	[Address(RVA = "0x897910", Offset = "0x897910", VA = "0x897910")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x600024D")]
	[Address(RVA = "0x8979C8", Offset = "0x8979C8", VA = "0x8979C8")]
	private void Reset()
	{
	}

	[Token(Token = "0x600024E")]
	[Address(RVA = "0x897A20", Offset = "0x897A20", VA = "0x897A20")]
	public TeacupBehaviour()
	{
	}
}
[Token(Token = "0x200007B")]
public class UserPresenceEvent : MonoBehaviour
{
	[Token(Token = "0x20001F5")]
	public enum UserState
	{
		[Token(Token = "0x4000A36")]
		OnLeave,
		[Token(Token = "0x4000A37")]
		OnPresent
	}

	[Token(Token = "0x400023E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool checkFromBeginning;

	[Token(Token = "0x400023F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x702EDC", Offset = "0x702EDC")]
	private bool <isChecking>k__BackingField;

	[Token(Token = "0x4000240")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public UserState state;

	[Token(Token = "0x4000241")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UnityEvent events;

	[Token(Token = "0x4000242")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool m_present;

	[Token(Token = "0x17000017")]
	public bool isChecking
	{
		[Token(Token = "0x600024F")]
		[Address(RVA = "0x89B490", Offset = "0x89B490", VA = "0x89B490")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7079D0", Offset = "0x7079D0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000250")]
		[Address(RVA = "0x89B498", Offset = "0x89B498", VA = "0x89B498")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7079E0", Offset = "0x7079E0")]
		set
		{
		}
	}

	[Token(Token = "0x6000251")]
	[Address(RVA = "0x89B4A4", Offset = "0x89B4A4", VA = "0x89B4A4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000252")]
	[Address(RVA = "0x89B4C0", Offset = "0x89B4C0", VA = "0x89B4C0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000253")]
	[Address(RVA = "0x89B638", Offset = "0x89B638", VA = "0x89B638")]
	public UserPresenceEvent()
	{
	}
}
[Token(Token = "0x200007C")]
public class CameraFade : MonoBehaviour
{
	[Token(Token = "0x4000243")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x702EEC", Offset = "0x702EEC")]
	public Shader FadeShader;

	[Token(Token = "0x4000244")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x702F24", Offset = "0x702F24")]
	public Color FadeColor;

	[Token(Token = "0x4000245")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x702F5C", Offset = "0x702F5C")]
	public float Blend;

	[Token(Token = "0x4000246")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x702F74", Offset = "0x702F74")]
	public CameraFade MasterCameraFade;

	[Token(Token = "0x4000247")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Material _material;

	[Token(Token = "0x6000254")]
	[Address(RVA = "0x93B920", Offset = "0x93B920", VA = "0x93B920")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000255")]
	[Address(RVA = "0x93B9D4", Offset = "0x93B9D4", VA = "0x93B9D4")]
	private void OnRenderImage(RenderTexture src, RenderTexture dest)
	{
	}

	[Token(Token = "0x6000256")]
	[Address(RVA = "0x93BB80", Offset = "0x93BB80", VA = "0x93BB80")]
	public CameraFade()
	{
	}
}
[Token(Token = "0x200007D")]
public class SmoothVRSpectator : MonoBehaviour
{
	[Token(Token = "0x4000248")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Camera spectatorCamera;

	[Token(Token = "0x4000249")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float followSpeed;

	[Token(Token = "0x400024A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x702FAC", Offset = "0x702FAC")]
	public bool autoReplace;

	[Token(Token = "0x400024B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x702FE4", Offset = "0x702FE4")]
	public bool enabledFromStart;

	[Token(Token = "0x400024C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public KeyCode toggleKey;

	[Token(Token = "0x400024D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public KeyCode zoomInKey;

	[Token(Token = "0x400024E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public KeyCode zoomOutKey;

	[Token(Token = "0x400024F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x70301C", Offset = "0x70301C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x70301C", Offset = "0x70301C")]
	public bool stabilizeRoll;

	[Token(Token = "0x4000250")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static SmoothVRSpectator instance;

	[Token(Token = "0x6000257")]
	[Address(RVA = "0x888E30", Offset = "0x888E30", VA = "0x888E30")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000258")]
	[Address(RVA = "0x888FA0", Offset = "0x888FA0", VA = "0x888FA0")]
	private void Reset()
	{
	}

	[Token(Token = "0x6000259")]
	[Address(RVA = "0x888FF8", Offset = "0x888FF8", VA = "0x888FF8")]
	public SmoothVRSpectator()
	{
	}
}
[Token(Token = "0x200007E")]
public static class TransformExtensions
{
	[Token(Token = "0x600025A")]
	[Address(RVA = "0x898644", Offset = "0x898644", VA = "0x898644")]
	public static Vector3 TransformPointUnscaled(this Transform transform, Vector3 position)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600025B")]
	[Address(RVA = "0x8987B0", Offset = "0x8987B0", VA = "0x8987B0")]
	public static Vector3 InverseTransformPointUnscaled(this Transform transform, Vector3 position)
	{
		return default(Vector3);
	}
}
[Token(Token = "0x200007F")]
public class DrawerBehaviour : InteractablePull
{
	[Serializable]
	[Token(Token = "0x20001F6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x701198", Offset = "0x701198")]
	private sealed class <>c
	{
		[Token(Token = "0x4000A38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4000A39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action<Interactable> <>9__9_0;

		[Token(Token = "0x4000A3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Action<Interactable> <>9__9_1;

		[Token(Token = "0x4000A3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static Action<Interactable> <>9__9_2;

		[Token(Token = "0x6001259")]
		[Address(RVA = "0x941504", Offset = "0x941504", VA = "0x941504")]
		public <>c()
		{
		}

		[Token(Token = "0x600125A")]
		[Address(RVA = "0x94150C", Offset = "0x94150C", VA = "0x94150C")]
		internal void <ToggleInteractables>b__9_0(Interactable o)
		{
		}

		[Token(Token = "0x600125B")]
		[Address(RVA = "0x941530", Offset = "0x941530", VA = "0x941530")]
		internal void <ToggleInteractables>b__9_1(Interactable o)
		{
		}

		[Token(Token = "0x600125C")]
		[Address(RVA = "0x941554", Offset = "0x941554", VA = "0x941554")]
		internal void <ToggleInteractables>b__9_2(Interactable o)
		{
		}
	}

	[Token(Token = "0x20001F7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7011A8", Offset = "0x7011A8")]
	private sealed class <>c__DisplayClass12_0
	{
		[Token(Token = "0x4000A3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Interactable interactable;

		[Token(Token = "0x600125D")]
		[Address(RVA = "0x941398", Offset = "0x941398", VA = "0x941398")]
		public <>c__DisplayClass12_0()
		{
		}

		[Token(Token = "0x600125E")]
		[Address(RVA = "0x941578", Offset = "0x941578", VA = "0x941578")]
		internal bool <OnCollisionEnter>b__1(Interactable o)
		{
			return default(bool);
		}

		[Token(Token = "0x600125F")]
		[Address(RVA = "0x941588", Offset = "0x941588", VA = "0x941588")]
		internal bool <OnCollisionEnter>b__0(Interactable o)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4000251")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x70307C", Offset = "0x70307C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x70307C", Offset = "0x70307C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x70307C", Offset = "0x70307C")]
	public float DragPercentageToEnableOthers;

	[Token(Token = "0x4000252")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7030F4", Offset = "0x7030F4")]
	public bool AllowNewInteractables;

	[Token(Token = "0x4000253")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public UnityEvent OnOpen;

	[Token(Token = "0x4000254")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public UnityEvent OnClose;

	[Token(Token = "0x4000255")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private List<Interactable> _enableOnFirstInteraction;

	[Token(Token = "0x4000256")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private List<Interactable> _enableWhileInteracting;

	[Token(Token = "0x4000257")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private bool _activated;

	[Token(Token = "0x600025C")]
	[Address(RVA = "0x940E20", Offset = "0x940E20", VA = "0x940E20", Slot = "4")]
	public override void Awake()
	{
	}

	[Token(Token = "0x600025D")]
	[Address(RVA = "0x940ECC", Offset = "0x940ECC", VA = "0x940ECC", Slot = "5")]
	public override void Update()
	{
	}

	[Token(Token = "0x600025E")]
	[Address(RVA = "0x940EF4", Offset = "0x940EF4", VA = "0x940EF4")]
	private void ToggleInteractables()
	{
	}

	[Token(Token = "0x600025F")]
	[Address(RVA = "0x9411B8", Offset = "0x9411B8", VA = "0x9411B8", Slot = "8")]
	public override void EnableOtherInteractables()
	{
	}

	[Token(Token = "0x6000260")]
	[Address(RVA = "0x9411BC", Offset = "0x9411BC", VA = "0x9411BC", Slot = "9")]
	public override void DisableOtherInteractables()
	{
	}

	[Token(Token = "0x6000261")]
	[Address(RVA = "0x9411C0", Offset = "0x9411C0", VA = "0x9411C0", Slot = "11")]
	public override void OnCollisionEnter(Collision other)
	{
	}

	[Token(Token = "0x6000262")]
	[Address(RVA = "0x9413A0", Offset = "0x9413A0", VA = "0x9413A0")]
	private void OnCollisionExit(Collision other)
	{
	}

	[Token(Token = "0x6000263")]
	[Address(RVA = "0x941490", Offset = "0x941490", VA = "0x941490")]
	public DrawerBehaviour()
	{
	}
}
[Token(Token = "0x2000080")]
public class EventOnLook : MonoBehaviour
{
	[Token(Token = "0x20001F8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7011B8", Offset = "0x7011B8")]
	private sealed class <PlayAfterPause>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EventOnLook <>4__this;

		[Token(Token = "0x17000254")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001263")]
			[Address(RVA = "0x941E10", Offset = "0x941E10", VA = "0x941E10", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000255")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001265")]
			[Address(RVA = "0x941E78", Offset = "0x941E78", VA = "0x941E78", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001260")]
		[Address(RVA = "0x941C80", Offset = "0x941C80", VA = "0x941C80")]
		[DebuggerHidden]
		public <PlayAfterPause>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6001261")]
		[Address(RVA = "0x941D98", Offset = "0x941D98", VA = "0x941D98", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001262")]
		[Address(RVA = "0x941D9C", Offset = "0x941D9C", VA = "0x941D9C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001264")]
		[Address(RVA = "0x941E18", Offset = "0x941E18", VA = "0x941E18", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000258")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HelpAttribute", RVA = "0x70312C", Offset = "0x70312C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x70312C", Offset = "0x70312C")]
	public float angle;

	[Token(Token = "0x4000259")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool setPlayableToPlayAfterPaused;

	[Token(Token = "0x400025A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public PlayableDirector playable;

	[Token(Token = "0x400025B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public UnityEvent events;

	[Token(Token = "0x400025C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool m_wasTriggered;

	[Token(Token = "0x6000264")]
	[Address(RVA = "0x941864", Offset = "0x941864", VA = "0x941864")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000265")]
	[Address(RVA = "0x941C10", Offset = "0x941C10", VA = "0x941C10")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x707A10", Offset = "0x707A10")]
	private IEnumerator PlayAfterPause()
	{
		return null;
	}

	[Token(Token = "0x6000266")]
	[Address(RVA = "0x941CAC", Offset = "0x941CAC", VA = "0x941CAC")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x6000267")]
	[Address(RVA = "0x941D88", Offset = "0x941D88", VA = "0x941D88")]
	public EventOnLook()
	{
	}
}
[Token(Token = "0x2000081")]
public class EventOnTrigger : MonoBehaviour
{
	[Token(Token = "0x20001F9")]
	public enum Condition
	{
		[Token(Token = "0x4000A41")]
		Enter,
		[Token(Token = "0x4000A42")]
		Stay,
		[Token(Token = "0x4000A43")]
		Exit
	}

	[Token(Token = "0x400025D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Condition condition;

	[Token(Token = "0x400025E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public LayerMask layerMask;

	[Token(Token = "0x400025F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UnityEvent triggerEvent;

	[Token(Token = "0x6000268")]
	[Address(RVA = "0x941E80", Offset = "0x941E80", VA = "0x941E80")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000269")]
	[Address(RVA = "0x941EE8", Offset = "0x941EE8", VA = "0x941EE8")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600026A")]
	[Address(RVA = "0x941F84", Offset = "0x941F84", VA = "0x941F84")]
	private void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x600026B")]
	[Address(RVA = "0x942008", Offset = "0x942008", VA = "0x942008")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x600026C")]
	[Address(RVA = "0x941F68", Offset = "0x941F68", VA = "0x941F68")]
	private void Action()
	{
	}

	[Token(Token = "0x600026D")]
	[Address(RVA = "0x94208C", Offset = "0x94208C", VA = "0x94208C")]
	public EventOnTrigger()
	{
	}
}
[Token(Token = "0x2000082")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x6FFD20", Offset = "0x6FFD20")]
public class FireZone : MonoBehaviour
{
	[Token(Token = "0x20001FA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7011C8", Offset = "0x7011C8")]
	private sealed class <Ignite>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FireZone <>4__this;

		[Token(Token = "0x4000A47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public MatchstickBehaviour behaviour;

		[Token(Token = "0x17000256")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001269")]
			[Address(RVA = "0x942654", Offset = "0x942654", VA = "0x942654", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000257")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600126B")]
			[Address(RVA = "0x9426BC", Offset = "0x9426BC", VA = "0x9426BC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001266")]
		[Address(RVA = "0x942534", Offset = "0x942534", VA = "0x942534")]
		[DebuggerHidden]
		public <Ignite>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6001267")]
		[Address(RVA = "0x942570", Offset = "0x942570", VA = "0x942570", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001268")]
		[Address(RVA = "0x942574", Offset = "0x942574", VA = "0x942574", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600126A")]
		[Address(RVA = "0x94265C", Offset = "0x94265C", VA = "0x94265C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000260")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x703184", Offset = "0x703184")]
	public float timeToIgnite;

	[Token(Token = "0x4000261")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x70319C", Offset = "0x70319C")]
	public UnityEvent onIgnite;

	[Token(Token = "0x4000262")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool m_isBurning;

	[Token(Token = "0x4000263")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Coroutine m_coroutine;

	[Token(Token = "0x600026E")]
	[Address(RVA = "0x942314", Offset = "0x942314", VA = "0x942314")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600026F")]
	[Address(RVA = "0x942470", Offset = "0x942470", VA = "0x942470")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000270")]
	[Address(RVA = "0x9423F4", Offset = "0x9423F4", VA = "0x9423F4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x707A74", Offset = "0x707A74")]
	private IEnumerator Ignite(MatchstickBehaviour behaviour)
	{
		return null;
	}

	[Token(Token = "0x6000271")]
	[Address(RVA = "0x942560", Offset = "0x942560", VA = "0x942560")]
	public FireZone()
	{
	}
}
[Token(Token = "0x2000083")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x6FFD84", Offset = "0x6FFD84")]
public class Flick : MonoBehaviour
{
	[Token(Token = "0x4000264")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7031D4", Offset = "0x7031D4")]
	public float TargetVelocity;

	[Token(Token = "0x4000265")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool OnlyOnce;

	[Token(Token = "0x4000266")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	public bool OnlyWhenInteracting;

	[Token(Token = "0x4000267")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
	public bool VibrateOnFlick;

	[Token(Token = "0x4000268")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F")]
	private bool _wasTriggered;

	[Token(Token = "0x4000269")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7031F0", Offset = "0x7031F0")]
	private Interactable <FlickInteractable>k__BackingField;

	[Token(Token = "0x17000018")]
	public Interactable FlickInteractable
	{
		[Token(Token = "0x6000272")]
		[Address(RVA = "0x942730", Offset = "0x942730", VA = "0x942730")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x707AD8", Offset = "0x707AD8")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000273")]
		[Address(RVA = "0x942738", Offset = "0x942738", VA = "0x942738")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x707AE8", Offset = "0x707AE8")]
		private set
		{
		}
	}

	[Token(Token = "0x6000274")]
	[Address(RVA = "0x942740", Offset = "0x942740", VA = "0x942740")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000275")]
	[Address(RVA = "0x942798", Offset = "0x942798", VA = "0x942798", Slot = "4")]
	public virtual bool OnFlick()
	{
		return default(bool);
	}

	[Token(Token = "0x6000276")]
	[Address(RVA = "0x9428A0", Offset = "0x9428A0", VA = "0x9428A0")]
	public Flick()
	{
	}
}
[Token(Token = "0x2000084")]
public class FlickReceiver : MonoBehaviour
{
	[Token(Token = "0x20001FB")]
	public delegate void StrokeAction(Flick flick, float force);

	[Token(Token = "0x20001FC")]
	public delegate void FlickAction(Flick flick, float force);

	[Token(Token = "0x400026A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool OnlyOnce;

	[Token(Token = "0x400026B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x703200", Offset = "0x703200")]
	public bool CallMethodOnFlick;

	[Token(Token = "0x400026C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UnityEvent FlickEvent;

	[Token(Token = "0x400026F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool _triggeredOnce;

	[Token(Token = "0x4000270")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	private bool _wasTriggered;

	[Token(Token = "0x14000003")]
	public event StrokeAction OnStroke
	{
		[Token(Token = "0x6000277")]
		[Address(RVA = "0x9428B8", Offset = "0x9428B8", VA = "0x9428B8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x707AF8", Offset = "0x707AF8")]
		add
		{
		}
		[Token(Token = "0x6000278")]
		[Address(RVA = "0x94295C", Offset = "0x94295C", VA = "0x94295C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x707B08", Offset = "0x707B08")]
		remove
		{
		}
	}

	[Token(Token = "0x14000004")]
	public event FlickAction OnFlick
	{
		[Token(Token = "0x6000279")]
		[Address(RVA = "0x942A00", Offset = "0x942A00", VA = "0x942A00")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x707B18", Offset = "0x707B18")]
		add
		{
		}
		[Token(Token = "0x600027A")]
		[Address(RVA = "0x942AA4", Offset = "0x942AA4", VA = "0x942AA4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x707B28", Offset = "0x707B28")]
		remove
		{
		}
	}

	[Token(Token = "0x600027B")]
	[Address(RVA = "0x942B48", Offset = "0x942B48", VA = "0x942B48")]
	private void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x600027C")]
	[Address(RVA = "0x9434B0", Offset = "0x9434B0", VA = "0x9434B0")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x600027D")]
	[Address(RVA = "0x9434C4", Offset = "0x9434C4", VA = "0x9434C4")]
	public FlickReceiver()
	{
	}
}
[Token(Token = "0x2000085")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x6FFDE8", Offset = "0x6FFDE8")]
public class FloatingInteractable : MonoBehaviour
{
	[Token(Token = "0x20001FD")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7011D8", Offset = "0x7011D8")]
	private sealed class <Float>d__16 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FloatingInteractable <>4__this;

		[Token(Token = "0x17000258")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001277")]
			[Address(RVA = "0x943E00", Offset = "0x943E00", VA = "0x943E00", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000259")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001279")]
			[Address(RVA = "0x943E68", Offset = "0x943E68", VA = "0x943E68", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001274")]
		[Address(RVA = "0x9439E0", Offset = "0x9439E0", VA = "0x9439E0")]
		[DebuggerHidden]
		public <Float>d__16(int <>1__state)
		{
		}

		[Token(Token = "0x6001275")]
		[Address(RVA = "0x943A30", Offset = "0x943A30", VA = "0x943A30", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001276")]
		[Address(RVA = "0x943A34", Offset = "0x943A34", VA = "0x943A34", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001278")]
		[Address(RVA = "0x943E08", Offset = "0x943E08", VA = "0x943E08", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000271")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x703258", Offset = "0x703258")]
	public bool moveUpDown;

	[Token(Token = "0x4000272")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float MoveAmount;

	[Token(Token = "0x4000273")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float MoveFrequency;

	[Token(Token = "0x4000274")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float SpinSpeed;

	[Token(Token = "0x4000275")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x703290", Offset = "0x703290")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x703290", Offset = "0x703290")]
	public float minHeight;

	[Token(Token = "0x4000276")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float maxHeight;

	[Token(Token = "0x4000277")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float maxThrowRadius;

	[Token(Token = "0x4000278")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Interactable _interactable;

	[Token(Token = "0x4000279")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Rigidbody _rigidbody;

	[Token(Token = "0x400027A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Coroutine _floatCoroutine;

	[Token(Token = "0x400027B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7032DC", Offset = "0x7032DC")]
	private Vector3 <startPosition>k__BackingField;

	[Token(Token = "0x17000019")]
	public Vector3 startPosition
	{
		[Token(Token = "0x600027E")]
		[Address(RVA = "0x943644", Offset = "0x943644", VA = "0x943644")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x707B38", Offset = "0x707B38")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x600027F")]
		[Address(RVA = "0x943650", Offset = "0x943650", VA = "0x943650")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x707B48", Offset = "0x707B48")]
		set
		{
		}
	}

	[Token(Token = "0x6000280")]
	[Address(RVA = "0x94365C", Offset = "0x94365C", VA = "0x94365C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000281")]
	[Address(RVA = "0x943798", Offset = "0x943798", VA = "0x943798")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000282")]
	[Address(RVA = "0x943728", Offset = "0x943728", VA = "0x943728")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x707B58", Offset = "0x707B58")]
	private IEnumerator Float()
	{
		return null;
	}

	[Token(Token = "0x6000283")]
	[Address(RVA = "0x943A0C", Offset = "0x943A0C", VA = "0x943A0C")]
	public FloatingInteractable()
	{
	}
}
[Token(Token = "0x2000086")]
public class FloatingObject : MonoBehaviour
{
	[Token(Token = "0x400027C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool localSpace;

	[Token(Token = "0x400027D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float moveAmount;

	[Token(Token = "0x400027E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float moveFrequency;

	[Token(Token = "0x400027F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector3 spinAxis;

	[Token(Token = "0x4000280")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float spinSpeed;

	[Token(Token = "0x4000281")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Vector3 m_startPosition;

	[Token(Token = "0x6000284")]
	[Address(RVA = "0x943E70", Offset = "0x943E70", VA = "0x943E70")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000285")]
	[Address(RVA = "0x943EBC", Offset = "0x943EBC", VA = "0x943EBC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000286")]
	[Address(RVA = "0x944178", Offset = "0x944178", VA = "0x944178")]
	public FloatingObject()
	{
	}
}
[Token(Token = "0x2000087")]
public class HandPoseZone : MonoBehaviour
{
	[Token(Token = "0x4000282")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public HandPose pose;

	[Token(Token = "0x6000287")]
	[Address(RVA = "0x96AC60", Offset = "0x96AC60", VA = "0x96AC60")]
	public void SetPose(HandAnimator handAnimator)
	{
	}

	[Token(Token = "0x6000288")]
	[Address(RVA = "0x96AC84", Offset = "0x96AC84", VA = "0x96AC84")]
	public void RemovePose(HandAnimator handAnimator)
	{
	}

	[Token(Token = "0x6000289")]
	[Address(RVA = "0x96ACA0", Offset = "0x96ACA0", VA = "0x96ACA0")]
	public HandPoseZone()
	{
	}
}
[Token(Token = "0x2000088")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x6FFE4C", Offset = "0x6FFE4C")]
public class HandZone : MonoBehaviour
{
	[Token(Token = "0x20001FE")]
	public enum FadePropertyType
	{
		[Token(Token = "0x4000A4C")]
		ColorAlpha,
		[Token(Token = "0x4000A4D")]
		Float
	}

	[Token(Token = "0x4000283")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AnimationCurve FallOff;

	[Token(Token = "0x4000284")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7032EC", Offset = "0x7032EC")]
	private SphereCollider <SphereCollider>k__BackingField;

	[Token(Token = "0x4000285")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int ZoneCount;

	[Token(Token = "0x1700001A")]
	public SphereCollider SphereCollider
	{
		[Token(Token = "0x600028A")]
		[Address(RVA = "0x96ACA8", Offset = "0x96ACA8", VA = "0x96ACA8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x707BBC", Offset = "0x707BBC")]
		get
		{
			return null;
		}
		[Token(Token = "0x600028B")]
		[Address(RVA = "0x96ACB0", Offset = "0x96ACB0", VA = "0x96ACB0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x707BCC", Offset = "0x707BCC")]
		private set
		{
		}
	}

	[Token(Token = "0x600028C")]
	[Address(RVA = "0x96ACB8", Offset = "0x96ACB8", VA = "0x96ACB8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600028D")]
	[Address(RVA = "0x96AD10", Offset = "0x96AD10", VA = "0x96AD10")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600028E")]
	[Address(RVA = "0x96AD68", Offset = "0x96AD68", VA = "0x96AD68")]
	private void Awake()
	{
	}

	[Token(Token = "0x600028F")]
	[Address(RVA = "0x96AE18", Offset = "0x96AE18", VA = "0x96AE18")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000290")]
	[Address(RVA = "0x96AF48", Offset = "0x96AF48", VA = "0x96AF48")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000291")]
	[Address(RVA = "0x96B078", Offset = "0x96B078", VA = "0x96B078")]
	public HandZone()
	{
	}
}
[Token(Token = "0x2000089")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x6FFEB0", Offset = "0x6FFEB0")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x6FFEB0", Offset = "0x6FFEB0")]
public class HandZoneClient : MonoBehaviour
{
	[Token(Token = "0x4000286")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x7032FC", Offset = "0x7032FC")]
	public VRController.Hand hand;

	[Token(Token = "0x4000287")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x703334", Offset = "0x703334")]
	public Renderer handMesh;

	[Token(Token = "0x4000288")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x70336C", Offset = "0x70336C")]
	public HandZone.FadePropertyType PropertyType;

	[Token(Token = "0x4000289")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string PropertyName;

	[Token(Token = "0x400028A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7033A4", Offset = "0x7033A4")]
	public float MinValue;

	[Token(Token = "0x400028B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<HandZone> _handZones;

	[Token(Token = "0x400028C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool _insideZone;

	[Token(Token = "0x400028D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Material _material;

	[Token(Token = "0x1700001B")]
	public bool Interacting
	{
		[Token(Token = "0x6000292")]
		[Address(RVA = "0x96B208", Offset = "0x96B208", VA = "0x96B208")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000293")]
	[Address(RVA = "0x96B2D4", Offset = "0x96B2D4", VA = "0x96B2D4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000294")]
	[Address(RVA = "0x96B48C", Offset = "0x96B48C", VA = "0x96B48C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000295")]
	[Address(RVA = "0x96B4F8", Offset = "0x96B4F8", VA = "0x96B4F8")]
	private void ZoneEvaluation()
	{
	}

	[Token(Token = "0x6000296")]
	[Address(RVA = "0x96B384", Offset = "0x96B384", VA = "0x96B384")]
	private void SetShaderProperty(Material mat, float value)
	{
	}

	[Token(Token = "0x6000297")]
	[Address(RVA = "0x96B7F4", Offset = "0x96B7F4", VA = "0x96B7F4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000298")]
	[Address(RVA = "0x96B860", Offset = "0x96B860", VA = "0x96B860")]
	private void InsideZoneEval()
	{
	}

	[Token(Token = "0x6000299")]
	[Address(RVA = "0x96AED8", Offset = "0x96AED8", VA = "0x96AED8")]
	public void AddZone(HandZone zone)
	{
	}

	[Token(Token = "0x600029A")]
	[Address(RVA = "0x96B008", Offset = "0x96B008", VA = "0x96B008")]
	public void RemoveZone(HandZone zone)
	{
	}

	[Token(Token = "0x600029B")]
	[Address(RVA = "0x96B934", Offset = "0x96B934", VA = "0x96B934")]
	public HandZoneClient()
	{
	}
}
[Token(Token = "0x200008A")]
public class Interactable : MonoBehaviour
{
	[Token(Token = "0x20001FF")]
	public delegate void EndInteractionDelegate(object sender);

	[Serializable]
	[Token(Token = "0x2000200")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7011E8", Offset = "0x7011E8")]
	private sealed class <>c
	{
		[Token(Token = "0x4000A4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4000A4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action<Interactable> <>9__52_0;

		[Token(Token = "0x4000A50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Action<Interactable> <>9__52_1;

		[Token(Token = "0x4000A51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static Action<Interactable> <>9__53_0;

		[Token(Token = "0x4000A52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static Action<Interactable> <>9__54_0;

		[Token(Token = "0x4000A53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static Action<Interactable> <>9__54_1;

		[Token(Token = "0x600127F")]
		[Address(RVA = "0x972620", Offset = "0x972620", VA = "0x972620")]
		public <>c()
		{
		}

		[Token(Token = "0x6001280")]
		[Address(RVA = "0x972628", Offset = "0x972628", VA = "0x972628")]
		internal void <EnableOtherInteractables>b__52_0(Interactable o)
		{
		}

		[Token(Token = "0x6001281")]
		[Address(RVA = "0x97264C", Offset = "0x97264C", VA = "0x97264C")]
		internal void <EnableOtherInteractables>b__52_1(Interactable o)
		{
		}

		[Token(Token = "0x6001282")]
		[Address(RVA = "0x972670", Offset = "0x972670", VA = "0x972670")]
		internal void <DisableOtherInteractables>b__53_0(Interactable o)
		{
		}

		[Token(Token = "0x6001283")]
		[Address(RVA = "0x972694", Offset = "0x972694", VA = "0x972694")]
		internal void <DisableOtherInteractablesOnAwake>b__54_0(Interactable o)
		{
		}

		[Token(Token = "0x6001284")]
		[Address(RVA = "0x9726B8", Offset = "0x9726B8", VA = "0x9726B8")]
		internal void <DisableOtherInteractablesOnAwake>b__54_1(Interactable o)
		{
		}
	}

	[Token(Token = "0x400028E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public HandPose Pose;

	[Token(Token = "0x400028F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7033BC", Offset = "0x7033BC")]
	public bool EnablePhysics;

	[Token(Token = "0x4000290")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool CanInteract;

	[Token(Token = "0x4000291")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
	public bool CanSwitchHands;

	[Token(Token = "0x4000292")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x23")]
	public bool IsTriggerWhileInteracting;

	[Token(Token = "0x4000293")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x7033F4", Offset = "0x7033F4")]
	public bool UseGravityAfterInteraction;

	[Token(Token = "0x4000294")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
	public bool IsKinematicAfterInteraction;

	[Token(Token = "0x4000295")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x26")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x70342C", Offset = "0x70342C")]
	public bool VibrateOnCollision;

	[Token(Token = "0x4000296")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x703464", Offset = "0x703464")]
	public float VibrationDuration;

	[Token(Token = "0x4000297")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x70347C", Offset = "0x70347C")]
	public List<Interactable> EnableOnFirstInteraction;

	[Token(Token = "0x4000298")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<Interactable> EnableWhileInteracting;

	[Token(Token = "0x4000299")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7034B4", Offset = "0x7034B4")]
	public UnityEvent beginInteractionEvents;

	[Token(Token = "0x400029A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public UnityEvent endInteractionEvents;

	[Token(Token = "0x400029B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7034EC", Offset = "0x7034EC")]
	private bool <Interacting>k__BackingField;

	[Token(Token = "0x400029C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7034FC", Offset = "0x7034FC")]
	private VRController <interactableController>k__BackingField;

	[Token(Token = "0x400029D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x70350C", Offset = "0x70350C")]
	private Rigidbody <InteractableRigidbody>k__BackingField;

	[Token(Token = "0x400029E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x70351C", Offset = "0x70351C")]
	private Collider <InteractableCollider>k__BackingField;

	[Token(Token = "0x400029F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x70352C", Offset = "0x70352C")]
	private bool <WasTrigger>k__BackingField;

	[Token(Token = "0x40002A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x70353C", Offset = "0x70353C")]
	private float <VelocityFactor>k__BackingField;

	[Token(Token = "0x40002A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x70354C", Offset = "0x70354C")]
	private float <RotationFactor>k__BackingField;

	[Token(Token = "0x1700001C")]
	public bool Interacting
	{
		[Token(Token = "0x600029C")]
		[Address(RVA = "0x9712D4", Offset = "0x9712D4", VA = "0x9712D4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x707BDC", Offset = "0x707BDC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600029D")]
		[Address(RVA = "0x9712DC", Offset = "0x9712DC", VA = "0x9712DC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x707BEC", Offset = "0x707BEC")]
		set
		{
		}
	}

	[Token(Token = "0x1700001D")]
	public VRController interactableController
	{
		[Token(Token = "0x600029E")]
		[Address(RVA = "0x9712E8", Offset = "0x9712E8", VA = "0x9712E8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x707BFC", Offset = "0x707BFC")]
		get
		{
			return null;
		}
		[Token(Token = "0x600029F")]
		[Address(RVA = "0x9712F0", Offset = "0x9712F0", VA = "0x9712F0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x707C0C", Offset = "0x707C0C")]
		set
		{
		}
	}

	[Token(Token = "0x1700001E")]
	protected Rigidbody InteractableRigidbody
	{
		[Token(Token = "0x60002A0")]
		[Address(RVA = "0x9712F8", Offset = "0x9712F8", VA = "0x9712F8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x707C1C", Offset = "0x707C1C")]
		get
		{
			return null;
		}
		[Token(Token = "0x60002A1")]
		[Address(RVA = "0x971300", Offset = "0x971300", VA = "0x971300")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x707C2C", Offset = "0x707C2C")]
		private set
		{
		}
	}

	[Token(Token = "0x1700001F")]
	protected Collider InteractableCollider
	{
		[Token(Token = "0x60002A2")]
		[Address(RVA = "0x971308", Offset = "0x971308", VA = "0x971308")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x707C3C", Offset = "0x707C3C")]
		get
		{
			return null;
		}
		[Token(Token = "0x60002A3")]
		[Address(RVA = "0x971310", Offset = "0x971310", VA = "0x971310")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x707C4C", Offset = "0x707C4C")]
		private set
		{
		}
	}

	[Token(Token = "0x17000020")]
	protected bool WasTrigger
	{
		[Token(Token = "0x60002A4")]
		[Address(RVA = "0x971318", Offset = "0x971318", VA = "0x971318")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x707C5C", Offset = "0x707C5C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60002A5")]
		[Address(RVA = "0x971320", Offset = "0x971320", VA = "0x971320")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x707C6C", Offset = "0x707C6C")]
		private set
		{
		}
	}

	[Token(Token = "0x17000021")]
	protected float VelocityFactor
	{
		[Token(Token = "0x60002A6")]
		[Address(RVA = "0x97132C", Offset = "0x97132C", VA = "0x97132C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x707C7C", Offset = "0x707C7C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60002A7")]
		[Address(RVA = "0x971334", Offset = "0x971334", VA = "0x971334")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x707C8C", Offset = "0x707C8C")]
		set
		{
		}
	}

	[Token(Token = "0x17000022")]
	protected float RotationFactor
	{
		[Token(Token = "0x60002A8")]
		[Address(RVA = "0x97133C", Offset = "0x97133C", VA = "0x97133C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x707C9C", Offset = "0x707C9C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60002A9")]
		[Address(RVA = "0x971344", Offset = "0x971344", VA = "0x971344")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x707CAC", Offset = "0x707CAC")]
		set
		{
		}
	}

	[Token(Token = "0x14000005")]
	public static event EndInteractionDelegate OnEndInteraction
	{
		[Token(Token = "0x60002AA")]
		[Address(RVA = "0x97134C", Offset = "0x97134C", VA = "0x97134C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x707CBC", Offset = "0x707CBC")]
		add
		{
		}
		[Token(Token = "0x60002AB")]
		[Address(RVA = "0x971400", Offset = "0x971400", VA = "0x971400")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x707CCC", Offset = "0x707CCC")]
		remove
		{
		}
	}

	[Token(Token = "0x60002AC")]
	[Address(RVA = "0x9714B4", Offset = "0x9714B4", VA = "0x9714B4", Slot = "4")]
	public virtual void Awake()
	{
	}

	[Token(Token = "0x60002AD")]
	[Address(RVA = "0x9717C8", Offset = "0x9717C8", VA = "0x9717C8", Slot = "5")]
	public virtual void Update()
	{
	}

	[Token(Token = "0x60002AE")]
	[Address(RVA = "0x9717CC", Offset = "0x9717CC", VA = "0x9717CC")]
	private void Reset()
	{
	}

	[Token(Token = "0x60002AF")]
	[Address(RVA = "0x9718B4", Offset = "0x9718B4", VA = "0x9718B4", Slot = "6")]
	public virtual bool BeginInteraction(VRController controller)
	{
		return default(bool);
	}

	[Token(Token = "0x60002B0")]
	[Address(RVA = "0x971A80", Offset = "0x971A80", VA = "0x971A80", Slot = "7")]
	public virtual void EndInteraction(VRController controller)
	{
	}

	[Token(Token = "0x60002B1")]
	[Address(RVA = "0x971C64", Offset = "0x971C64", VA = "0x971C64")]
	public void ForceEndInteraction()
	{
	}

	[Token(Token = "0x60002B2")]
	[Address(RVA = "0x971B1C", Offset = "0x971B1C", VA = "0x971B1C")]
	private void CancelInteraction()
	{
	}

	[Token(Token = "0x60002B3")]
	[Address(RVA = "0x972098", Offset = "0x972098", VA = "0x972098", Slot = "8")]
	public virtual void EnableOtherInteractables()
	{
	}

	[Token(Token = "0x60002B4")]
	[Address(RVA = "0x972238", Offset = "0x972238", VA = "0x972238", Slot = "9")]
	public virtual void DisableOtherInteractables()
	{
	}

	[Token(Token = "0x60002B5")]
	[Address(RVA = "0x971628", Offset = "0x971628", VA = "0x971628")]
	public void DisableOtherInteractablesOnAwake()
	{
	}

	[Token(Token = "0x60002B6")]
	[Address(RVA = "0x972330", Offset = "0x972330", VA = "0x972330")]
	public void ReplaceInteractable(Interactable interactable, [Optional] VRController controller)
	{
	}

	[Token(Token = "0x60002B7")]
	[Address(RVA = "0x972448", Offset = "0x972448", VA = "0x972448", Slot = "10")]
	public virtual void SetCanInteract(bool value)
	{
	}

	[Token(Token = "0x60002B8")]
	[Address(RVA = "0x972454", Offset = "0x972454", VA = "0x972454", Slot = "11")]
	public virtual void OnCollisionEnter(Collision other)
	{
	}

	[Token(Token = "0x60002B9")]
	[Address(RVA = "0x972464", Offset = "0x972464", VA = "0x972464")]
	public void TriggerVibration()
	{
	}

	[Token(Token = "0x60002BA")]
	[Address(RVA = "0x972504", Offset = "0x972504", VA = "0x972504")]
	public Rigidbody GetRigidbody()
	{
		return null;
	}

	[Token(Token = "0x60002BB")]
	[Address(RVA = "0x97250C", Offset = "0x97250C", VA = "0x97250C")]
	public Interactable()
	{
	}
}
[Token(Token = "0x200008B")]
public class InteractableGrab : Interactable
{
	[Token(Token = "0x2000201")]
	public enum HandSnapPivot
	{
		[Token(Token = "0x4000A55")]
		None,
		[Token(Token = "0x4000A56")]
		Pivot1,
		[Token(Token = "0x4000A57")]
		Pivot2,
		[Token(Token = "0x4000A58")]
		Pivot3,
		[Token(Token = "0x4000A59")]
		Pivot4,
		[Token(Token = "0x4000A5A")]
		Pivot5,
		[Token(Token = "0x4000A5B")]
		Pivot6,
		[Token(Token = "0x4000A5C")]
		Pivot7
	}

	[Token(Token = "0x2000202")]
	public delegate void InteractionBeginAction();

	[Token(Token = "0x2000203")]
	public delegate void InteractionEndAction();

	[Token(Token = "0x2000204")]
	public delegate void ShakeAction(float force, float forceLastFrame);

	[Token(Token = "0x2000205")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7011F8", Offset = "0x7011F8")]
	private sealed class <Snap>d__31 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public InteractableGrab <>4__this;

		[Token(Token = "0x4000A60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 <smoothedPosition>5__2;

		[Token(Token = "0x4000A61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Quaternion <smoothedRotation>5__3;

		[Token(Token = "0x1700025A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001294")]
			[Address(RVA = "0x974680", Offset = "0x974680", VA = "0x974680", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700025B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001296")]
			[Address(RVA = "0x9746E8", Offset = "0x9746E8", VA = "0x9746E8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001291")]
		[Address(RVA = "0x972D28", Offset = "0x972D28", VA = "0x972D28")]
		[DebuggerHidden]
		public <Snap>d__31(int <>1__state)
		{
		}

		[Token(Token = "0x6001292")]
		[Address(RVA = "0x973A44", Offset = "0x973A44", VA = "0x973A44", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001293")]
		[Address(RVA = "0x973A48", Offset = "0x973A48", VA = "0x973A48", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001295")]
		[Address(RVA = "0x974688", Offset = "0x974688", VA = "0x974688", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40002A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x70356C", Offset = "0x70356C")]
	public HandSnapPivot SnapPivot;

	[Token(Token = "0x40002A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public bool ReturnToOrigin;

	[Token(Token = "0x40002A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x81")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7035A4", Offset = "0x7035A4")]
	public bool Shake;

	[Token(Token = "0x40002A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x82")]
	public bool VibrateOnShake;

	[Token(Token = "0x40002A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7035DC", Offset = "0x7035DC")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7035DC", Offset = "0x7035DC")]
	public float ShakeSensivity;

	[Token(Token = "0x40002AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x703660", Offset = "0x703660")]
	private Transform <SnapTransform>k__BackingField;

	[Token(Token = "0x40002AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x703670", Offset = "0x703670")]
	private Transform <ObjectTransform>k__BackingField;

	[Token(Token = "0x40002AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Vector3 _originPos;

	[Token(Token = "0x40002AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private Quaternion _originRot;

	[Token(Token = "0x40002AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private Transform _offsetSnap;

	[Token(Token = "0x40002B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private Vector3 _shakeLastVelocity;

	[Token(Token = "0x17000023")]
	public Transform SnapTransform
	{
		[Token(Token = "0x60002C2")]
		[Address(RVA = "0x972AF4", Offset = "0x972AF4", VA = "0x972AF4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x707D3C", Offset = "0x707D3C")]
		get
		{
			return null;
		}
		[Token(Token = "0x60002C3")]
		[Address(RVA = "0x972AFC", Offset = "0x972AFC", VA = "0x972AFC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x707D4C", Offset = "0x707D4C")]
		set
		{
		}
	}

	[Token(Token = "0x17000024")]
	public Transform ObjectTransform
	{
		[Token(Token = "0x60002C4")]
		[Address(RVA = "0x972B04", Offset = "0x972B04", VA = "0x972B04")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x707D5C", Offset = "0x707D5C")]
		get
		{
			return null;
		}
		[Token(Token = "0x60002C5")]
		[Address(RVA = "0x972B0C", Offset = "0x972B0C", VA = "0x972B0C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x707D6C", Offset = "0x707D6C")]
		private set
		{
		}
	}

	[Token(Token = "0x14000006")]
	public event InteractionBeginAction OnInteractionBegin
	{
		[Token(Token = "0x60002BC")]
		[Address(RVA = "0x97271C", Offset = "0x97271C", VA = "0x97271C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x707CDC", Offset = "0x707CDC")]
		add
		{
		}
		[Token(Token = "0x60002BD")]
		[Address(RVA = "0x9727C0", Offset = "0x9727C0", VA = "0x9727C0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x707CEC", Offset = "0x707CEC")]
		remove
		{
		}
	}

	[Token(Token = "0x14000007")]
	public event InteractionEndAction OnInteractionEnd
	{
		[Token(Token = "0x60002BE")]
		[Address(RVA = "0x972864", Offset = "0x972864", VA = "0x972864")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x707CFC", Offset = "0x707CFC")]
		add
		{
		}
		[Token(Token = "0x60002BF")]
		[Address(RVA = "0x972908", Offset = "0x972908", VA = "0x972908")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x707D0C", Offset = "0x707D0C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000008")]
	public event ShakeAction OnShake
	{
		[Token(Token = "0x60002C0")]
		[Address(RVA = "0x9729AC", Offset = "0x9729AC", VA = "0x9729AC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x707D1C", Offset = "0x707D1C")]
		add
		{
		}
		[Token(Token = "0x60002C1")]
		[Address(RVA = "0x972A50", Offset = "0x972A50", VA = "0x972A50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x707D2C", Offset = "0x707D2C")]
		remove
		{
		}
	}

	[Token(Token = "0x60002C6")]
	[Address(RVA = "0x972B14", Offset = "0x972B14", VA = "0x972B14", Slot = "4")]
	public override void Awake()
	{
	}

	[Token(Token = "0x60002C7")]
	[Address(RVA = "0x972CB8", Offset = "0x972CB8", VA = "0x972CB8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x707D7C", Offset = "0x707D7C")]
	private IEnumerator Snap()
	{
		return null;
	}

	[Token(Token = "0x60002C8")]
	[Address(RVA = "0x972D54", Offset = "0x972D54", VA = "0x972D54")]
	public void SetSnap([Optional] VRController controller)
	{
	}

	[Token(Token = "0x60002C9")]
	[Address(RVA = "0x972B4C", Offset = "0x972B4C", VA = "0x972B4C")]
	public void Initialize([Optional] Transform t)
	{
	}

	[Token(Token = "0x60002CA")]
	[Address(RVA = "0x97301C", Offset = "0x97301C", VA = "0x97301C", Slot = "6")]
	public override bool BeginInteraction(VRController controller)
	{
		return default(bool);
	}

	[Token(Token = "0x60002CB")]
	[Address(RVA = "0x973348", Offset = "0x973348", VA = "0x973348", Slot = "7")]
	public override void EndInteraction(VRController controller)
	{
	}

	[Token(Token = "0x60002CC")]
	[Address(RVA = "0x97367C", Offset = "0x97367C", VA = "0x97367C")]
	public void DetectShake(VRController controller)
	{
	}

	[Token(Token = "0x60002CD")]
	[Address(RVA = "0x973A34", Offset = "0x973A34", VA = "0x973A34")]
	public InteractableGrab()
	{
	}
}
[Token(Token = "0x200008C")]
public class InteractableGramophone : Interactable
{
	[Token(Token = "0x40002B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x703680", Offset = "0x703680")]
	public Transform tonearm;

	[Token(Token = "0x40002B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7036B8", Offset = "0x7036B8")]
	public AudioSource tonearmAudioSource;

	[Token(Token = "0x40002B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Vector2 xLimits;

	[Token(Token = "0x40002B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Vector2 yLimits;

	[Token(Token = "0x40002B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public float fallSpeed;

	[Token(Token = "0x40002B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7036F0", Offset = "0x7036F0")]
	public float bounce;

	[Token(Token = "0x40002B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public float startRecordThreshold;

	[Token(Token = "0x40002B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x703708", Offset = "0x703708")]
	public Transform record;

	[Token(Token = "0x40002B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public AudioSource recordAudioSource;

	[Token(Token = "0x40002BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public bool continuous;

	[Token(Token = "0x40002BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	public float recordSpeed;

	[Token(Token = "0x40002BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x703740", Offset = "0x703740")]
	public float pitchVariation;

	[Token(Token = "0x40002BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x703758", Offset = "0x703758")]
	private float m_fallVelocity;

	[Token(Token = "0x40002BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private Quaternion m_controllerOffset;

	[Token(Token = "0x40002BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private float m_currentRecordSpeed;

	[Token(Token = "0x40002C0")]
	private const float RecordAcceleration = 70f;

	[Token(Token = "0x40002C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	private bool m_interactionSwitch;

	[Token(Token = "0x40002C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private Quaternion m_rotationOffset;

	[Token(Token = "0x40002C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private float m_recordVolume;

	[Token(Token = "0x40002C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	private bool m_recordIsSpinning;

	[Token(Token = "0x60002CE")]
	[Address(RVA = "0x97483C", Offset = "0x97483C", VA = "0x97483C", Slot = "4")]
	public override void Awake()
	{
	}

	[Token(Token = "0x60002CF")]
	[Address(RVA = "0x9748A8", Offset = "0x9748A8", VA = "0x9748A8", Slot = "5")]
	public override void Update()
	{
	}

	[Token(Token = "0x60002D0")]
	[Address(RVA = "0x975050", Offset = "0x975050", VA = "0x975050", Slot = "6")]
	public override bool BeginInteraction(VRController controller)
	{
		return default(bool);
	}

	[Token(Token = "0x60002D1")]
	[Address(RVA = "0x975054", Offset = "0x975054", VA = "0x975054", Slot = "7")]
	public override void EndInteraction(VRController controller)
	{
	}

	[Token(Token = "0x60002D2")]
	[Address(RVA = "0x9748CC", Offset = "0x9748CC", VA = "0x9748CC")]
	private Vector3 MoveTonearm()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60002D3")]
	[Address(RVA = "0x974DE8", Offset = "0x974DE8", VA = "0x974DE8")]
	private void SpinRecord(Vector3 tonearmRotation)
	{
	}

	[Token(Token = "0x60002D4")]
	[Address(RVA = "0x975120", Offset = "0x975120", VA = "0x975120")]
	private Quaternion InverseTransformRotation(Quaternion parentRotation, Quaternion worldSpaceRotation)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x60002D5")]
	[Address(RVA = "0x9751E8", Offset = "0x9751E8", VA = "0x9751E8")]
	private float ConvertAngle(float angle)
	{
		return default(float);
	}

	[Token(Token = "0x60002D6")]
	[Address(RVA = "0x975238", Offset = "0x975238", VA = "0x975238")]
	public InteractableGramophone()
	{
	}
}
[Token(Token = "0x200008D")]
public class InteractableHinge : Interactable
{
	[Token(Token = "0x2000206")]
	public enum RotationAxis
	{
		[Token(Token = "0x4000A63")]
		XAxis,
		[Token(Token = "0x4000A64")]
		YAxis,
		[Token(Token = "0x4000A65")]
		ZAxis
	}

	[Token(Token = "0x2000207")]
	public delegate void CloseAction();

	[Token(Token = "0x2000208")]
	public delegate void OpenAction();

	[Token(Token = "0x2000209")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x701208", Offset = "0x701208")]
	private sealed class <Rotate>d__30 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public InteractableHinge <>4__this;

		[Token(Token = "0x4000A69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 <a>5__2;

		[Token(Token = "0x4000A6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Vector3 <b>5__3;

		[Token(Token = "0x4000A6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Vector3 <axis>5__4;

		[Token(Token = "0x4000A6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Vector3 <startVector>5__5;

		[Token(Token = "0x4000A6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Vector3 <controllerPos>5__6;

		[Token(Token = "0x4000A6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float <startAngle>5__7;

		[Token(Token = "0x4000A6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Vector3 <startRotation>5__8;

		[Token(Token = "0x4000A70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private WaitForEndOfFrame <waitForEndOfFrame>5__9;

		[Token(Token = "0x4000A71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private bool <positiveAngle>5__10;

		[Token(Token = "0x1700025C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60012A2")]
			[Address(RVA = "0x9769D0", Offset = "0x9769D0", VA = "0x9769D0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700025D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60012A4")]
			[Address(RVA = "0x976A38", Offset = "0x976A38", VA = "0x976A38", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600129F")]
		[Address(RVA = "0x975D18", Offset = "0x975D18", VA = "0x975D18")]
		[DebuggerHidden]
		public <Rotate>d__30(int <>1__state)
		{
		}

		[Token(Token = "0x60012A0")]
		[Address(RVA = "0x9761C0", Offset = "0x9761C0", VA = "0x9761C0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60012A1")]
		[Address(RVA = "0x9761C4", Offset = "0x9761C4", VA = "0x9761C4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60012A3")]
		[Address(RVA = "0x9769D8", Offset = "0x9769D8", VA = "0x9769D8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40002C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x703790", Offset = "0x703790")]
	public Transform Pivot;

	[Token(Token = "0x40002C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public RotationAxis LocalRotationAxis;

	[Token(Token = "0x40002C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public bool Momentum;

	[Token(Token = "0x40002C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7037C8", Offset = "0x7037C8")]
	public float Drag;

	[Token(Token = "0x40002C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public bool LimitedRotation;

	[Token(Token = "0x40002CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7037E0", Offset = "0x7037E0")]
	public float MinRotation;

	[Token(Token = "0x40002CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x703800", Offset = "0x703800")]
	public float MaxRotation;

	[Token(Token = "0x40002CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x703820", Offset = "0x703820")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x703820", Offset = "0x703820")]
	public float closeRotation;

	[Token(Token = "0x40002CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x703880", Offset = "0x703880")]
	public float closedThreshold;

	[Token(Token = "0x40002CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7038B8", Offset = "0x7038B8")]
	public float openedThreshold;

	[Token(Token = "0x40002CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public UnityEvent closeActions;

	[Token(Token = "0x40002D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public UnityEvent openActions;

	[Token(Token = "0x40002D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private bool m_wasClosed;

	[Token(Token = "0x40002D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD1")]
	private bool m_wasOpened;

	[Token(Token = "0x40002D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	private float m_angleVelocity;

	[Token(Token = "0x40002D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private Coroutine _rotateRoutine;

	[Token(Token = "0x14000009")]
	public event CloseAction OnClose
	{
		[Token(Token = "0x60002D7")]
		[Address(RVA = "0x975320", Offset = "0x975320", VA = "0x975320")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x707DE0", Offset = "0x707DE0")]
		add
		{
		}
		[Token(Token = "0x60002D8")]
		[Address(RVA = "0x9753C4", Offset = "0x9753C4", VA = "0x9753C4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x707DF0", Offset = "0x707DF0")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000A")]
	public event OpenAction OnOpen
	{
		[Token(Token = "0x60002D9")]
		[Address(RVA = "0x975468", Offset = "0x975468", VA = "0x975468")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x707E00", Offset = "0x707E00")]
		add
		{
		}
		[Token(Token = "0x60002DA")]
		[Address(RVA = "0x97550C", Offset = "0x97550C", VA = "0x97550C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x707E10", Offset = "0x707E10")]
		remove
		{
		}
	}

	[Token(Token = "0x60002DB")]
	[Address(RVA = "0x9755B0", Offset = "0x9755B0", VA = "0x9755B0", Slot = "4")]
	public override void Awake()
	{
	}

	[Token(Token = "0x60002DC")]
	[Address(RVA = "0x9758CC", Offset = "0x9758CC", VA = "0x9758CC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60002DD")]
	[Address(RVA = "0x975A88", Offset = "0x975A88", VA = "0x975A88", Slot = "6")]
	public override bool BeginInteraction(VRController controller)
	{
		return default(bool);
	}

	[Token(Token = "0x60002DE")]
	[Address(RVA = "0x975B58", Offset = "0x975B58", VA = "0x975B58", Slot = "7")]
	public override void EndInteraction(VRController controller)
	{
	}

	[Token(Token = "0x60002DF")]
	[Address(RVA = "0x975B5C", Offset = "0x975B5C", VA = "0x975B5C")]
	private void GetProjectedVectorsOnPlane(ref Vector3 a, ref Vector3 b, ref Vector3 axis, Vector3 startVector, Vector3 controllerPos)
	{
	}

	[Token(Token = "0x60002E0")]
	[Address(RVA = "0x975AE8", Offset = "0x975AE8", VA = "0x975AE8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x707E20", Offset = "0x707E20")]
	private IEnumerator Rotate()
	{
		return null;
	}

	[Token(Token = "0x60002E1")]
	[Address(RVA = "0x9758D4", Offset = "0x9758D4", VA = "0x9758D4")]
	private void HandleOpenClose(bool onlyCheckOpen = false)
	{
	}

	[Token(Token = "0x60002E2")]
	[Address(RVA = "0x975654", Offset = "0x975654", VA = "0x975654")]
	private void ClampRotation()
	{
	}

	[Token(Token = "0x60002E3")]
	[Address(RVA = "0x97615C", Offset = "0x97615C", VA = "0x97615C")]
	private void Reset()
	{
	}

	[Token(Token = "0x60002E4")]
	[Address(RVA = "0x976194", Offset = "0x976194", VA = "0x976194")]
	public InteractableHinge()
	{
	}
}
[Token(Token = "0x200008E")]
public class InteractableInstantiateGrab : InteractableGrab
{
	[Token(Token = "0x200020A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x701218", Offset = "0x701218")]
	private sealed class <DelayEnable>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform prefab;

		[Token(Token = "0x4000A75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform snap;

		[Token(Token = "0x1700025E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60012A8")]
			[Address(RVA = "0x9770D4", Offset = "0x9770D4", VA = "0x9770D4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700025F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60012AA")]
			[Address(RVA = "0x97713C", Offset = "0x97713C", VA = "0x97713C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60012A5")]
		[Address(RVA = "0x976DDC", Offset = "0x976DDC", VA = "0x976DDC")]
		[DebuggerHidden]
		public <DelayEnable>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x60012A6")]
		[Address(RVA = "0x976FB4", Offset = "0x976FB4", VA = "0x976FB4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60012A7")]
		[Address(RVA = "0x976FB8", Offset = "0x976FB8", VA = "0x976FB8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60012A9")]
		[Address(RVA = "0x9770DC", Offset = "0x9770DC", VA = "0x9770DC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200020B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x701228", Offset = "0x701228")]
	private sealed class <DelayCollider>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Collider col;

		[Token(Token = "0x17000260")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60012AE")]
			[Address(RVA = "0x976F44", Offset = "0x976F44", VA = "0x976F44", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000261")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60012B0")]
			[Address(RVA = "0x976FAC", Offset = "0x976FAC", VA = "0x976FAC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60012AB")]
		[Address(RVA = "0x976E08", Offset = "0x976E08", VA = "0x976E08")]
		[DebuggerHidden]
		public <DelayCollider>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x60012AC")]
		[Address(RVA = "0x976E48", Offset = "0x976E48", VA = "0x976E48", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60012AD")]
		[Address(RVA = "0x976E4C", Offset = "0x976E4C", VA = "0x976E4C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60012AF")]
		[Address(RVA = "0x976F4C", Offset = "0x976F4C", VA = "0x976F4C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40002D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x703910", Offset = "0x703910")]
	public Transform Prefab;

	[Token(Token = "0x40002D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private InteractableGrab _interactable;

	[Token(Token = "0x60002E5")]
	[Address(RVA = "0x976AD0", Offset = "0x976AD0", VA = "0x976AD0", Slot = "4")]
	public override void Awake()
	{
	}

	[Token(Token = "0x60002E6")]
	[Address(RVA = "0x976B30", Offset = "0x976B30", VA = "0x976B30", Slot = "6")]
	public override bool BeginInteraction(VRController controller)
	{
		return default(bool);
	}

	[Token(Token = "0x60002E7")]
	[Address(RVA = "0x976CF0", Offset = "0x976CF0", VA = "0x976CF0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x707E84", Offset = "0x707E84")]
	private IEnumerator DelayEnable(Transform prefab, Transform snap)
	{
		return null;
	}

	[Token(Token = "0x60002E8")]
	[Address(RVA = "0x976D6C", Offset = "0x976D6C", VA = "0x976D6C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x707EE8", Offset = "0x707EE8")]
	private IEnumerator DelayCollider(Collider col)
	{
		return null;
	}

	[Token(Token = "0x60002E9")]
	[Address(RVA = "0x976E34", Offset = "0x976E34", VA = "0x976E34", Slot = "7")]
	public override void EndInteraction(VRController controller)
	{
	}

	[Token(Token = "0x60002EA")]
	[Address(RVA = "0x976E38", Offset = "0x976E38", VA = "0x976E38")]
	public InteractableInstantiateGrab()
	{
	}
}
[Token(Token = "0x200008F")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x6FFF3C", Offset = "0x6FFF3C")]
public class InteractableKill : MonoBehaviour
{
	[Token(Token = "0x200020C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x701238", Offset = "0x701238")]
	private sealed class <Kill>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Collider other;

		[Token(Token = "0x17000262")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60012B4")]
			[Address(RVA = "0x977400", Offset = "0x977400", VA = "0x977400", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000263")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60012B6")]
			[Address(RVA = "0x977468", Offset = "0x977468", VA = "0x977468", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60012B1")]
		[Address(RVA = "0x977288", Offset = "0x977288", VA = "0x977288")]
		[DebuggerHidden]
		public <Kill>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x60012B2")]
		[Address(RVA = "0x9772C4", Offset = "0x9772C4", VA = "0x9772C4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60012B3")]
		[Address(RVA = "0x9772C8", Offset = "0x9772C8", VA = "0x9772C8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60012B5")]
		[Address(RVA = "0x977408", Offset = "0x977408", VA = "0x977408", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40002D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HelpAttribute", RVA = "0x703948", Offset = "0x703948")]
	public bool DestroyWhenOutside;

	[Token(Token = "0x60002EB")]
	[Address(RVA = "0x977144", Offset = "0x977144", VA = "0x977144")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60002EC")]
	[Address(RVA = "0x9771A8", Offset = "0x9771A8", VA = "0x9771A8")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60002ED")]
	[Address(RVA = "0x977250", Offset = "0x977250", VA = "0x977250")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x60002EE")]
	[Address(RVA = "0x9771E0", Offset = "0x9771E0", VA = "0x9771E0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x707F4C", Offset = "0x707F4C")]
	private IEnumerator Kill(Collider other)
	{
		return null;
	}

	[Token(Token = "0x60002EF")]
	[Address(RVA = "0x9772B4", Offset = "0x9772B4", VA = "0x9772B4")]
	public InteractableKill()
	{
	}
}
[Token(Token = "0x2000090")]
public class InteractablePull : Interactable
{
	[Token(Token = "0x200020D")]
	public delegate void InteractionBeginAction();

	[Token(Token = "0x200020E")]
	public delegate void InteractionEndAction();

	[Token(Token = "0x200020F")]
	public delegate void HitStartAction(float force);

	[Token(Token = "0x2000210")]
	public delegate void HitEndAction(float force);

	[Token(Token = "0x2000211")]
	public delegate void SlideBeginAction();

	[Token(Token = "0x2000212")]
	public delegate void SlideEndAction();

	[Token(Token = "0x2000213")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x701248", Offset = "0x701248")]
	private sealed class <Pull>d__63 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public InteractablePull <>4__this;

		[Token(Token = "0x17000264")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60012D2")]
			[Address(RVA = "0x97A698", Offset = "0x97A698", VA = "0x97A698", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000265")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60012D4")]
			[Address(RVA = "0x97A700", Offset = "0x97A700", VA = "0x97A700", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60012CF")]
		[Address(RVA = "0x978B00", Offset = "0x978B00", VA = "0x978B00")]
		[DebuggerHidden]
		public <Pull>d__63(int <>1__state)
		{
		}

		[Token(Token = "0x60012D0")]
		[Address(RVA = "0x97A3FC", Offset = "0x97A3FC", VA = "0x97A3FC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60012D1")]
		[Address(RVA = "0x97A400", Offset = "0x97A400", VA = "0x97A400", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60012D3")]
		[Address(RVA = "0x97A6A0", Offset = "0x97A6A0", VA = "0x97A6A0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40002DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x703980", Offset = "0x703980")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x703980", Offset = "0x703980")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x703980", Offset = "0x703980")]
	public float PercentDraggedOnStart;

	[Token(Token = "0x40002DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public bool ResetWhenInteractionDisabled;

	[Token(Token = "0x40002DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7039F8", Offset = "0x7039F8")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7039F8", Offset = "0x7039F8")]
	public float dampening;

	[Token(Token = "0x40002DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x703A4C", Offset = "0x703A4C")]
	public bool ShowHandle;

	[Token(Token = "0x40002DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x703A84", Offset = "0x703A84")]
	public InteractablePullSound interactablePullSound;

	[Token(Token = "0x40002DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x703ABC", Offset = "0x703ABC")]
	private float <percentDragged>k__BackingField;

	[Token(Token = "0x40002E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x703ACC", Offset = "0x703ACC")]
	private bool <isSliding>k__BackingField;

	[Token(Token = "0x40002E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x703ADC", Offset = "0x703ADC")]
	private float <dragForce>k__BackingField;

	[Token(Token = "0x40002E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private bool m_hasHitStartBoundary;

	[Token(Token = "0x40002E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD9")]
	private bool m_hasHitEndBoundary;

	[Token(Token = "0x40002EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDA")]
	private bool m_slideSoundActive;

	[Token(Token = "0x40002EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	private Vector3 m_localStartPoint;

	[Token(Token = "0x40002EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private Vector3 m_localEndPoint;

	[Token(Token = "0x40002ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	private Vector3 m_localControllerPosition;

	[Token(Token = "0x40002EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private Vector3 m_controllerOffset;

	[Token(Token = "0x40002EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	private Vector3 m_lastDragPosition;

	[Token(Token = "0x40002F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	[SerializeField]
	private Vector3 _endPoint;

	[Token(Token = "0x40002F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	private Vector3 m_velocity;

	[Token(Token = "0x40002F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private bool hasDetected;

	[Token(Token = "0x17000025")]
	public Vector3 EndPoint
	{
		[Token(Token = "0x60002F0")]
		[Address(RVA = "0x977470", Offset = "0x977470", VA = "0x977470")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x60002F1")]
		[Address(RVA = "0x977480", Offset = "0x977480", VA = "0x977480")]
		set
		{
		}
	}

	[Token(Token = "0x17000026")]
	public Vector3 StartPointWorld
	{
		[Token(Token = "0x60002F2")]
		[Address(RVA = "0x977490", Offset = "0x977490", VA = "0x977490")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x17000027")]
	public Vector3 EndPointWorld
	{
		[Token(Token = "0x60002F3")]
		[Address(RVA = "0x97755C", Offset = "0x97755C", VA = "0x97755C")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x17000028")]
	public float percentDragged
	{
		[Token(Token = "0x60002F4")]
		[Address(RVA = "0x977628", Offset = "0x977628", VA = "0x977628")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x707FB0", Offset = "0x707FB0")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60002F5")]
		[Address(RVA = "0x977630", Offset = "0x977630", VA = "0x977630")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x707FC0", Offset = "0x707FC0")]
		private set
		{
		}
	}

	[Token(Token = "0x17000029")]
	public bool isSliding
	{
		[Token(Token = "0x60002F6")]
		[Address(RVA = "0x977638", Offset = "0x977638", VA = "0x977638")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x707FD0", Offset = "0x707FD0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60002F7")]
		[Address(RVA = "0x977640", Offset = "0x977640", VA = "0x977640")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x707FE0", Offset = "0x707FE0")]
		private set
		{
		}
	}

	[Token(Token = "0x1700002A")]
	public float dragForce
	{
		[Token(Token = "0x60002F8")]
		[Address(RVA = "0x97764C", Offset = "0x97764C", VA = "0x97764C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x707FF0", Offset = "0x707FF0")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60002F9")]
		[Address(RVA = "0x977654", Offset = "0x977654", VA = "0x977654")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x708000", Offset = "0x708000")]
		private set
		{
		}
	}

	[Token(Token = "0x1400000B")]
	public event InteractionBeginAction OnInteractionBegin
	{
		[Token(Token = "0x60002FA")]
		[Address(RVA = "0x97765C", Offset = "0x97765C", VA = "0x97765C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x708010", Offset = "0x708010")]
		add
		{
		}
		[Token(Token = "0x60002FB")]
		[Address(RVA = "0x977700", Offset = "0x977700", VA = "0x977700")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x708020", Offset = "0x708020")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000C")]
	public event InteractionEndAction OnInteractionEnd
	{
		[Token(Token = "0x60002FC")]
		[Address(RVA = "0x9777A4", Offset = "0x9777A4", VA = "0x9777A4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x708030", Offset = "0x708030")]
		add
		{
		}
		[Token(Token = "0x60002FD")]
		[Address(RVA = "0x977848", Offset = "0x977848", VA = "0x977848")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x708040", Offset = "0x708040")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000D")]
	public event HitStartAction OnHitStartBoundary
	{
		[Token(Token = "0x60002FE")]
		[Address(RVA = "0x9778EC", Offset = "0x9778EC", VA = "0x9778EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x708050", Offset = "0x708050")]
		add
		{
		}
		[Token(Token = "0x60002FF")]
		[Address(RVA = "0x977990", Offset = "0x977990", VA = "0x977990")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x708060", Offset = "0x708060")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000E")]
	public event HitEndAction OnHitEndBoundary
	{
		[Token(Token = "0x6000300")]
		[Address(RVA = "0x977A34", Offset = "0x977A34", VA = "0x977A34")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x708070", Offset = "0x708070")]
		add
		{
		}
		[Token(Token = "0x6000301")]
		[Address(RVA = "0x977AD8", Offset = "0x977AD8", VA = "0x977AD8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x708080", Offset = "0x708080")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000F")]
	public event SlideBeginAction OnSlideBegin
	{
		[Token(Token = "0x6000302")]
		[Address(RVA = "0x977B7C", Offset = "0x977B7C", VA = "0x977B7C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x708090", Offset = "0x708090")]
		add
		{
		}
		[Token(Token = "0x6000303")]
		[Address(RVA = "0x977C20", Offset = "0x977C20", VA = "0x977C20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7080A0", Offset = "0x7080A0")]
		remove
		{
		}
	}

	[Token(Token = "0x14000010")]
	public event SlideEndAction OnSlideEnd
	{
		[Token(Token = "0x6000304")]
		[Address(RVA = "0x977CC4", Offset = "0x977CC4", VA = "0x977CC4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7080B0", Offset = "0x7080B0")]
		add
		{
		}
		[Token(Token = "0x6000305")]
		[Address(RVA = "0x977D68", Offset = "0x977D68", VA = "0x977D68")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7080C0", Offset = "0x7080C0")]
		remove
		{
		}
	}

	[Token(Token = "0x6000306")]
	[Address(RVA = "0x977E0C", Offset = "0x977E0C", VA = "0x977E0C", Slot = "4")]
	public override void Awake()
	{
	}

	[Token(Token = "0x6000307")]
	[Address(RVA = "0x977E10", Offset = "0x977E10", VA = "0x977E10")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000308")]
	[Address(RVA = "0x978254", Offset = "0x978254", VA = "0x978254", Slot = "6")]
	public override bool BeginInteraction(VRController controller)
	{
		return default(bool);
	}

	[Token(Token = "0x6000309")]
	[Address(RVA = "0x978524", Offset = "0x978524", VA = "0x978524", Slot = "7")]
	public override void EndInteraction(VRController controller)
	{
	}

	[Token(Token = "0x600030A")]
	[Address(RVA = "0x978A1C", Offset = "0x978A1C", VA = "0x978A1C", Slot = "10")]
	public override void SetCanInteract(bool value)
	{
	}

	[Token(Token = "0x600030B")]
	[Address(RVA = "0x9782A8", Offset = "0x9782A8", VA = "0x9782A8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7080D0", Offset = "0x7080D0")]
	private IEnumerator Pull()
	{
		return null;
	}

	[Token(Token = "0x600030C")]
	[Address(RVA = "0x978B2C", Offset = "0x978B2C", VA = "0x978B2C", Slot = "5")]
	public override void Update()
	{
	}

	[Token(Token = "0x600030D")]
	[Address(RVA = "0x979618", Offset = "0x979618", VA = "0x979618")]
	private void DetectDrag()
	{
	}

	[Token(Token = "0x600030E")]
	[Address(RVA = "0x978100", Offset = "0x978100", VA = "0x978100")]
	public void UpdatePercentDragged()
	{
	}

	[Token(Token = "0x600030F")]
	[Address(RVA = "0x9792D0", Offset = "0x9792D0", VA = "0x9792D0")]
	private bool HitStart()
	{
		return default(bool);
	}

	[Token(Token = "0x6000310")]
	[Address(RVA = "0x9793CC", Offset = "0x9793CC", VA = "0x9793CC")]
	private bool HitEnd()
	{
		return default(bool);
	}

	[Token(Token = "0x6000311")]
	[Address(RVA = "0x9794C8", Offset = "0x9794C8", VA = "0x9794C8")]
	private void Slide(Vector3 projection)
	{
	}

	[Token(Token = "0x6000312")]
	[Address(RVA = "0x979F94", Offset = "0x979F94", VA = "0x979F94")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x6000313")]
	[Address(RVA = "0x97932C", Offset = "0x97932C", VA = "0x97932C")]
	public void CloseSound()
	{
	}

	[Token(Token = "0x6000314")]
	[Address(RVA = "0x979428", Offset = "0x979428", VA = "0x979428")]
	public void OpenSound()
	{
	}

	[Token(Token = "0x6000315")]
	[Address(RVA = "0x9796CC", Offset = "0x9796CC", VA = "0x9796CC")]
	public void PullSound()
	{
	}

	[Token(Token = "0x6000316")]
	[Address(RVA = "0x97976C", Offset = "0x97976C", VA = "0x97976C")]
	public void ChoirSound()
	{
	}

	[Token(Token = "0x6000317")]
	[Address(RVA = "0x979238", Offset = "0x979238", VA = "0x979238")]
	public void PlayPullSound()
	{
	}

	[Token(Token = "0x6000318")]
	[Address(RVA = "0x979198", Offset = "0x979198", VA = "0x979198")]
	public void StopPullSound()
	{
	}

	[Token(Token = "0x6000319")]
	[Address(RVA = "0x97A360", Offset = "0x97A360", VA = "0x97A360")]
	public InteractablePull()
	{
	}
}
[Token(Token = "0x2000091")]
public class InteractablePullSound : MonoBehaviour
{
	[Token(Token = "0x40002F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float volumeMultiplier;

	[Token(Token = "0x40002F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AnimationCurve volumeResponse;

	[Token(Token = "0x40002F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x703B5C", Offset = "0x703B5C")]
	public AudioSource closeSource;

	[Token(Token = "0x40002F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioSource openSource;

	[Token(Token = "0x40002F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AudioSource slideSource;

	[Token(Token = "0x40002F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AudioSource choirSource;

	[Token(Token = "0x40002F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AudioClip[] choirClips;

	[Token(Token = "0x40002FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool m_slideSwitch;

	[Token(Token = "0x600031A")]
	[Address(RVA = "0x97A978", Offset = "0x97A978", VA = "0x97A978")]
	private void Start()
	{
	}

	[Token(Token = "0x600031B")]
	[Address(RVA = "0x97A97C", Offset = "0x97A97C", VA = "0x97A97C")]
	public void PlayChoirSound()
	{
	}

	[Token(Token = "0x600031C")]
	[Address(RVA = "0x979850", Offset = "0x979850", VA = "0x979850")]
	public void SwitchChoirSound()
	{
	}

	[Token(Token = "0x600031D")]
	[Address(RVA = "0x97A240", Offset = "0x97A240", VA = "0x97A240")]
	public void UpdateChoirSound(float velocity)
	{
	}

	[Token(Token = "0x600031E")]
	[Address(RVA = "0x97A00C", Offset = "0x97A00C", VA = "0x97A00C")]
	public void PlayCloseSound(float velocity)
	{
	}

	[Token(Token = "0x600031F")]
	[Address(RVA = "0x97A0C4", Offset = "0x97A0C4", VA = "0x97A0C4")]
	public void PlayOpenSound(float velocity)
	{
	}

	[Token(Token = "0x6000320")]
	[Address(RVA = "0x97A17C", Offset = "0x97A17C", VA = "0x97A17C")]
	public void UpdateSlideSound(float velocity)
	{
	}

	[Token(Token = "0x6000321")]
	[Address(RVA = "0x97A304", Offset = "0x97A304", VA = "0x97A304")]
	public void PlaySlideSound()
	{
	}

	[Token(Token = "0x6000322")]
	[Address(RVA = "0x97A344", Offset = "0x97A344", VA = "0x97A344")]
	public void StopSlideSound()
	{
	}

	[Token(Token = "0x6000323")]
	[Address(RVA = "0x97A9E0", Offset = "0x97A9E0", VA = "0x97A9E0")]
	public InteractablePullSound()
	{
	}
}
[Token(Token = "0x2000092")]
public class MatchstickBehaviour : Flick
{
	[Token(Token = "0x2000214")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x701258", Offset = "0x701258")]
	private sealed class <Burn>d__18 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MatchstickBehaviour <>4__this;

		[Token(Token = "0x17000266")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60012D8")]
			[Address(RVA = "0x97F5B0", Offset = "0x97F5B0", VA = "0x97F5B0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000267")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60012DA")]
			[Address(RVA = "0x97F618", Offset = "0x97F618", VA = "0x97F618", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60012D5")]
		[Address(RVA = "0x97F300", Offset = "0x97F300", VA = "0x97F300")]
		[DebuggerHidden]
		public <Burn>d__18(int <>1__state)
		{
		}

		[Token(Token = "0x60012D6")]
		[Address(RVA = "0x97F4F4", Offset = "0x97F4F4", VA = "0x97F4F4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60012D7")]
		[Address(RVA = "0x97F4F8", Offset = "0x97F4F8", VA = "0x97F4F8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60012D9")]
		[Address(RVA = "0x97F5B8", Offset = "0x97F5B8", VA = "0x97F5B8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40002FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x703B94", Offset = "0x703B94")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x703B94", Offset = "0x703B94")]
	[AttributeAttribute(Name = "HelpAttribute", RVA = "0x703B94", Offset = "0x703B94")]
	public float BurnTime;

	[Token(Token = "0x40002FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x703BFC", Offset = "0x703BFC")]
	public Animator FlameAnimator;

	[Token(Token = "0x40002FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string StartTrigger;

	[Token(Token = "0x40002FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string StopTrigger;

	[Token(Token = "0x40002FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x703C0C", Offset = "0x703C0C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x703C0C", Offset = "0x703C0C")]
	[AttributeAttribute(Name = "HelpAttribute", RVA = "0x703C0C", Offset = "0x703C0C")]
	public PlayableDirector TimelineOnIgnite;

	[Token(Token = "0x4000300")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public PlayableDirector TimelineOnExtinguish;

	[Token(Token = "0x4000301")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x703C7C", Offset = "0x703C7C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x703C7C", Offset = "0x703C7C")]
	public UnityEvent OnIgnite;

	[Token(Token = "0x4000302")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x703CC8", Offset = "0x703CC8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x703CC8", Offset = "0x703CC8")]
	public UnityEvent OnExtinguish;

	[Token(Token = "0x4000303")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public MatchboxSynchronizer MatchboxSynchronizer;

	[Token(Token = "0x4000304")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x703D14", Offset = "0x703D14")]
	private bool <IsBurning>k__BackingField;

	[Token(Token = "0x4000305")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Animator _animator;

	[Token(Token = "0x1700002B")]
	public bool IsBurning
	{
		[Token(Token = "0x6000324")]
		[Address(RVA = "0x97EFF0", Offset = "0x97EFF0", VA = "0x97EFF0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x708134", Offset = "0x708134")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000325")]
		[Address(RVA = "0x97EFF8", Offset = "0x97EFF8", VA = "0x97EFF8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x708144", Offset = "0x708144")]
		set
		{
		}
	}

	[Token(Token = "0x6000326")]
	[Address(RVA = "0x97F004", Offset = "0x97F004", VA = "0x97F004")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000327")]
	[Address(RVA = "0x97F05C", Offset = "0x97F05C", VA = "0x97F05C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000328")]
	[Address(RVA = "0x97F0C4", Offset = "0x97F0C4", VA = "0x97F0C4", Slot = "4")]
	public override bool OnFlick()
	{
		return default(bool);
	}

	[Token(Token = "0x6000329")]
	[Address(RVA = "0x97F100", Offset = "0x97F100", VA = "0x97F100")]
	private void Ignite()
	{
	}

	[Token(Token = "0x600032A")]
	[Address(RVA = "0x97F290", Offset = "0x97F290", VA = "0x97F290")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x708154", Offset = "0x708154")]
	private IEnumerator Burn()
	{
		return null;
	}

	[Token(Token = "0x600032B")]
	[Address(RVA = "0x97F32C", Offset = "0x97F32C", VA = "0x97F32C")]
	[DebugButton]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x7081B8", Offset = "0x7081B8")]
	public void Extinguish()
	{
	}

	[Token(Token = "0x600032C")]
	[Address(RVA = "0x97F334", Offset = "0x97F334", VA = "0x97F334")]
	private void SelfExtinguish(object sender)
	{
	}

	[Token(Token = "0x600032D")]
	[Address(RVA = "0x97F484", Offset = "0x97F484", VA = "0x97F484")]
	public MatchstickBehaviour()
	{
	}
}
[Token(Token = "0x2000093")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x6FFFA0", Offset = "0x6FFFA0")]
public class TriggerOnInteraction : MonoBehaviour
{
	[Token(Token = "0x2000215")]
	public enum TriggerMode
	{
		[Token(Token = "0x4000A83")]
		OnInteractionBegin,
		[Token(Token = "0x4000A84")]
		WhileInteracting,
		[Token(Token = "0x4000A85")]
		OnInteractionEnd
	}

	[Token(Token = "0x2000216")]
	public enum PlayMode
	{
		[Token(Token = "0x4000A87")]
		Play,
		[Token(Token = "0x4000A88")]
		Pause,
		[Token(Token = "0x4000A89")]
		Stop
	}

	[Token(Token = "0x2000217")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x701268", Offset = "0x701268")]
	private sealed class <TriggerObjects>d__20 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TriggerOnInteraction <>4__this;

		[Token(Token = "0x4000A8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool temporary;

		[Token(Token = "0x17000268")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60012DE")]
			[Address(RVA = "0x89A084", Offset = "0x89A084", VA = "0x89A084", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000269")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60012E0")]
			[Address(RVA = "0x89A0EC", Offset = "0x89A0EC", VA = "0x89A0EC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60012DB")]
		[Address(RVA = "0x899B14", Offset = "0x899B14", VA = "0x899B14")]
		[DebuggerHidden]
		public <TriggerObjects>d__20(int <>1__state)
		{
		}

		[Token(Token = "0x60012DC")]
		[Address(RVA = "0x899B60", Offset = "0x899B60", VA = "0x899B60", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60012DD")]
		[Address(RVA = "0x899B64", Offset = "0x899B64", VA = "0x899B64", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60012DF")]
		[Address(RVA = "0x89A08C", Offset = "0x89A08C", VA = "0x89A08C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000306")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TriggerMode Behaviour;

	[Token(Token = "0x4000307")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float Delay;

	[Token(Token = "0x4000308")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x703D24", Offset = "0x703D24")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x703D24", Offset = "0x703D24")]
	public bool SetActive;

	[Token(Token = "0x4000309")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject[] GameObjects;

	[Token(Token = "0x400030A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x703D70", Offset = "0x703D70")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x703D70", Offset = "0x703D70")]
	public PlayMode SetTimelineTo;

	[Token(Token = "0x400030B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x703DBC", Offset = "0x703DBC")]
	public PlayMode RevertTimelineTo;

	[Token(Token = "0x400030C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public PlayableDirector[] Timelines;

	[Token(Token = "0x400030D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x703DF4", Offset = "0x703DF4")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x703DF4", Offset = "0x703DF4")]
	public bool CanInteract;

	[Token(Token = "0x400030E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Interactable[] Interactables;

	[Token(Token = "0x400030F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x703E40", Offset = "0x703E40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x703E40", Offset = "0x703E40")]
	public PlayMode SetFrameSequenceTo;

	[Token(Token = "0x4000310")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x703E8C", Offset = "0x703E8C")]
	public PlayMode RevertFrameSequenceTo;

	[Token(Token = "0x4000311")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public FrameSequencePlayer[] FrameSequencePlayers;

	[Token(Token = "0x4000312")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x703EC4", Offset = "0x703EC4")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x703EC4", Offset = "0x703EC4")]
	public bool BehaviourState;

	[Token(Token = "0x4000313")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Behaviour[] Behaviours;

	[Token(Token = "0x4000314")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Interactable _interactable;

	[Token(Token = "0x4000315")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private bool _wasTriggered;

	[Token(Token = "0x600032E")]
	[Address(RVA = "0x8999B8", Offset = "0x8999B8", VA = "0x8999B8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600032F")]
	[Address(RVA = "0x899A10", Offset = "0x899A10", VA = "0x899A10")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000330")]
	[Address(RVA = "0x899A90", Offset = "0x899A90", VA = "0x899A90")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7081F0", Offset = "0x7081F0")]
	private IEnumerator TriggerObjects(bool temporary = false)
	{
		return null;
	}

	[Token(Token = "0x6000331")]
	[Address(RVA = "0x899B40", Offset = "0x899B40", VA = "0x899B40")]
	public TriggerOnInteraction()
	{
	}
}
[Token(Token = "0x2000094")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x700004", Offset = "0x700004")]
public class HandPose : ScriptableObject
{
	[Token(Token = "0x4000316")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string TriggerName;

	[Token(Token = "0x6000332")]
	[Address(RVA = "0x96AC08", Offset = "0x96AC08", VA = "0x96AC08")]
	public HandPose()
	{
	}
}
[Token(Token = "0x2000095")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x700058", Offset = "0x700058")]
public class MaterialSet : ScriptableObject
{
	[Token(Token = "0x2000218")]
	public class ShaderProperty
	{
		[Token(Token = "0x4000A8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int nameID;

		[Token(Token = "0x4000A8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public ShaderDatabaseAsset.ShaderPropertyType propertyType;

		[Token(Token = "0x4000A90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float floatValue;

		[Token(Token = "0x4000A91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 vectorValue;

		[Token(Token = "0x4000A92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Color colorValue;

		[Token(Token = "0x4000A93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Texture textureValue;

		[Token(Token = "0x60012E1")]
		[Address(RVA = "0xACD504", Offset = "0xACD504", VA = "0xACD504")]
		public ShaderProperty(string name)
		{
		}
	}

	[Token(Token = "0x4000317")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material[] materials;

	[Token(Token = "0x4000318")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Dictionary<Material, ShaderProperty[]> m_materialProperties;

	[Token(Token = "0x6000333")]
	[Address(RVA = "0x980AE8", Offset = "0x980AE8", VA = "0x980AE8")]
	public void SaveMaterialProperties()
	{
	}

	[Token(Token = "0x6000334")]
	[Address(RVA = "0x980EA4", Offset = "0x980EA4", VA = "0x980EA4")]
	public void RevertMaterialProperties()
	{
	}

	[Token(Token = "0x6000335")]
	[Address(RVA = "0x981090", Offset = "0x981090", VA = "0x981090")]
	public MaterialSet()
	{
	}
}
[Token(Token = "0x2000096")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x7000AC", Offset = "0x7000AC")]
public class ShaderDatabaseAsset : ScriptableObject
{
	[Token(Token = "0x2000219")]
	public enum ShaderPropertyType
	{
		[Token(Token = "0x4000A95")]
		Color,
		[Token(Token = "0x4000A96")]
		Vector,
		[Token(Token = "0x4000A97")]
		Float,
		[Token(Token = "0x4000A98")]
		Range,
		[Token(Token = "0x4000A99")]
		TexEnv,
		[Token(Token = "0x4000A9A")]
		Undefined
	}

	[Serializable]
	[Token(Token = "0x200021A")]
	public class ShaderProperties
	{
		[Token(Token = "0x4000A9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string[] names;

		[Token(Token = "0x4000A9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int[] nameIDs;

		[Token(Token = "0x4000A9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ShaderPropertyType[] propertyTypes;

		[Token(Token = "0x60012E2")]
		[Address(RVA = "0x888CF4", Offset = "0x888CF4", VA = "0x888CF4")]
		public ShaderProperties(int count)
		{
		}
	}

	[Token(Token = "0x4000319")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Shader[] shaders;

	[Token(Token = "0x400031A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ShaderProperties[] properties;

	[Token(Token = "0x6000336")]
	[Address(RVA = "0x888CEC", Offset = "0x888CEC", VA = "0x888CEC")]
	public ShaderDatabaseAsset()
	{
	}
}
[Token(Token = "0x2000097")]
public class DisableOn : MonoBehaviour
{
	[Token(Token = "0x400031B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool onlyOnce;

	[Token(Token = "0x400031C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool DisabledOnAwake;

	[Token(Token = "0x400031D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool DisabledOnStart;

	[Token(Token = "0x400031E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	private bool m_triggered;

	[Token(Token = "0x6000337")]
	[Address(RVA = "0x940858", Offset = "0x940858", VA = "0x940858")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000338")]
	[Address(RVA = "0x9408A8", Offset = "0x9408A8", VA = "0x9408A8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000339")]
	[Address(RVA = "0x9408F8", Offset = "0x9408F8", VA = "0x9408F8")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x600033A")]
	[Address(RVA = "0x940968", Offset = "0x940968", VA = "0x940968")]
	public DisableOn()
	{
	}
}
[Token(Token = "0x2000098")]
public class EnableMeshRendererOnVideoStart : MonoBehaviour
{
	[Token(Token = "0x400031F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private MeshRenderer _mesh;

	[Token(Token = "0x4000320")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private VideoPlayer _videoPlayer;

	[Token(Token = "0x600033B")]
	[Address(RVA = "0x941598", Offset = "0x941598", VA = "0x941598")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600033C")]
	[Address(RVA = "0x9416AC", Offset = "0x9416AC", VA = "0x9416AC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600033D")]
	[Address(RVA = "0x9417C4", Offset = "0x9417C4", VA = "0x9417C4")]
	private void EnableMesh(VideoPlayer player)
	{
	}

	[Token(Token = "0x600033E")]
	[Address(RVA = "0x94185C", Offset = "0x94185C", VA = "0x94185C")]
	public EnableMeshRendererOnVideoStart()
	{
	}
}
[Token(Token = "0x2000099")]
public class GameObjectActivationEvent : MonoBehaviour
{
	[Token(Token = "0x4000321")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UnityEvent _onStartEvent;

	[Token(Token = "0x4000322")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UnityEvent _onEnableEvent;

	[Token(Token = "0x4000323")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public UnityEvent _onDisableEvent;

	[Token(Token = "0x600033F")]
	[Address(RVA = "0x944A4C", Offset = "0x944A4C", VA = "0x944A4C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000340")]
	[Address(RVA = "0x944A60", Offset = "0x944A60", VA = "0x944A60")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000341")]
	[Address(RVA = "0x944A74", Offset = "0x944A74", VA = "0x944A74")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000342")]
	[Address(RVA = "0x944A88", Offset = "0x944A88", VA = "0x944A88")]
	public GameObjectActivationEvent()
	{
	}
}
[Token(Token = "0x200009A")]
public class JournalFireBehaviour : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200021B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x701278", Offset = "0x701278")]
	private sealed class <>c
	{
		[Token(Token = "0x4000A9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4000A9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<float, float> <>9__2_0;

		[Token(Token = "0x60012E4")]
		[Address(RVA = "0x97ADAC", Offset = "0x97ADAC", VA = "0x97ADAC")]
		public <>c()
		{
		}

		[Token(Token = "0x60012E5")]
		[Address(RVA = "0x97ADB4", Offset = "0x97ADB4", VA = "0x97ADB4")]
		internal float <OnEnable>b__2_0(float x)
		{
			return default(float);
		}
	}

	[Token(Token = "0x200021C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x701288", Offset = "0x701288")]
	private sealed class <EnableFlame>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000AA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000AA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000AA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject flame;

		[Token(Token = "0x4000AA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public JournalFireBehaviour <>4__this;

		[Token(Token = "0x4000AA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int index;

		[Token(Token = "0x1700026A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60012E9")]
			[Address(RVA = "0x97AEBC", Offset = "0x97AEBC", VA = "0x97AEBC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700026B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60012EB")]
			[Address(RVA = "0x97AF24", Offset = "0x97AF24", VA = "0x97AF24", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60012E6")]
		[Address(RVA = "0x97ACA4", Offset = "0x97ACA4", VA = "0x97ACA4")]
		[DebuggerHidden]
		public <EnableFlame>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x60012E7")]
		[Address(RVA = "0x97ADB8", Offset = "0x97ADB8", VA = "0x97ADB8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60012E8")]
		[Address(RVA = "0x97ADBC", Offset = "0x97ADBC", VA = "0x97ADBC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60012EA")]
		[Address(RVA = "0x97AEC4", Offset = "0x97AEC4", VA = "0x97AEC4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000324")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HelpAttribute", RVA = "0x703F10", Offset = "0x703F10")]
	public float SpreadSec;

	[Token(Token = "0x4000325")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<float> _startTimes;

	[Token(Token = "0x6000343")]
	[Address(RVA = "0x97AA28", Offset = "0x97AA28", VA = "0x97AA28")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000344")]
	[Address(RVA = "0x97AC20", Offset = "0x97AC20", VA = "0x97AC20")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x708254", Offset = "0x708254")]
	private IEnumerator EnableFlame(GameObject flame, int index)
	{
		return null;
	}

	[Token(Token = "0x6000345")]
	[Address(RVA = "0x97ACD0", Offset = "0x97ACD0", VA = "0x97ACD0")]
	public JournalFireBehaviour()
	{
	}
}
[Token(Token = "0x200009B")]
public class JournalStencilClient : MonoBehaviour
{
	[Token(Token = "0x4000326")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HelpAttribute", RVA = "0x703F48", Offset = "0x703F48")]
	public Shader StencilShader;

	[Token(Token = "0x4000327")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Renderer[] Renderers;

	[Token(Token = "0x4000328")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<Renderer> _renderers;

	[Token(Token = "0x4000329")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<Material[]> _materialArrays;

	[Token(Token = "0x400032A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private List<Material[]> _stencilMaterialArrays;

	[Token(Token = "0x400032B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int _zoneCount;

	[Token(Token = "0x6000346")]
	[Address(RVA = "0x97AF2C", Offset = "0x97AF2C", VA = "0x97AF2C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000347")]
	[Address(RVA = "0x97B2BC", Offset = "0x97B2BC", VA = "0x97B2BC")]
	public void AddStencil()
	{
	}

	[Token(Token = "0x6000348")]
	[Address(RVA = "0x97B390", Offset = "0x97B390", VA = "0x97B390")]
	public void RemoveStencil()
	{
	}

	[Token(Token = "0x6000349")]
	[Address(RVA = "0x97B46C", Offset = "0x97B46C", VA = "0x97B46C")]
	public JournalStencilClient()
	{
	}
}
[Token(Token = "0x200009C")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x700100", Offset = "0x700100")]
public class JournalStencilZone : MonoBehaviour
{
	[Token(Token = "0x600034A")]
	[Address(RVA = "0x97B524", Offset = "0x97B524", VA = "0x97B524")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600034B")]
	[Address(RVA = "0x97B588", Offset = "0x97B588", VA = "0x97B588")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600034C")]
	[Address(RVA = "0x97B634", Offset = "0x97B634", VA = "0x97B634")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x600034D")]
	[Address(RVA = "0x97B6E0", Offset = "0x97B6E0", VA = "0x97B6E0")]
	public JournalStencilZone()
	{
	}
}
[Token(Token = "0x200009D")]
public class MoveInFrontOfPlayer : MonoBehaviour
{
	[Token(Token = "0x400032C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x703F80", Offset = "0x703F80")]
	public float Distance;

	[Token(Token = "0x600034E")]
	[Address(RVA = "0xACDEE0", Offset = "0xACDEE0", VA = "0xACDEE0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600034F")]
	[Address(RVA = "0xACE0F8", Offset = "0xACE0F8", VA = "0xACE0F8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000350")]
	[Address(RVA = "0xACDEE4", Offset = "0xACDEE4", VA = "0xACDEE4")]
	private void Reposition()
	{
	}

	[Token(Token = "0x6000351")]
	[Address(RVA = "0xACE0FC", Offset = "0xACE0FC", VA = "0xACE0FC")]
	public MoveInFrontOfPlayer()
	{
	}
}
[Token(Token = "0x200009E")]
public class ObjectFollower : MonoBehaviour
{
	[Token(Token = "0x400032D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform ObjectToFollow;

	[Token(Token = "0x400032E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool KeepOffset;

	[Token(Token = "0x400032F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Transform _offset;

	[Token(Token = "0x4000330")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Rigidbody _rigidbody;

	[Token(Token = "0x6000352")]
	[Address(RVA = "0xADE9D4", Offset = "0xADE9D4", VA = "0xADE9D4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000353")]
	[Address(RVA = "0xADEB10", Offset = "0xADEB10", VA = "0xADEB10")]
	private void Update()
	{
	}

	[Token(Token = "0x6000354")]
	[Address(RVA = "0xADEB14", Offset = "0xADEB14", VA = "0xADEB14")]
	private void Transpose()
	{
	}

	[Token(Token = "0x6000355")]
	[Address(RVA = "0xADED7C", Offset = "0xADED7C", VA = "0xADED7C")]
	public ObjectFollower()
	{
	}
}
[Token(Token = "0x200009F")]
public class PaperPhysics : MonoBehaviour
{
	[Token(Token = "0x4000331")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HelpAttribute", RVA = "0x703F9C", Offset = "0x703F9C")]
	public float Gravity;

	[Token(Token = "0x4000332")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector3 MaxVelocity;

	[Token(Token = "0x4000333")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float UprightTorque;

	[Token(Token = "0x4000334")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float DriftForce;

	[Token(Token = "0x4000335")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Rigidbody _rigidbody;

	[Token(Token = "0x4000336")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Interactable _interactable;

	[Token(Token = "0x6000356")]
	[Address(RVA = "0xAE14E0", Offset = "0xAE14E0", VA = "0xAE14E0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000357")]
	[Address(RVA = "0xAE1550", Offset = "0xAE1550", VA = "0xAE1550")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000358")]
	[Address(RVA = "0xAE1818", Offset = "0xAE1818", VA = "0xAE1818")]
	private Vector3 ClampVelocity(Vector3 velocity)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000359")]
	[Address(RVA = "0xAE1974", Offset = "0xAE1974", VA = "0xAE1974")]
	public PaperPhysics()
	{
	}
}
[Token(Token = "0x20000A0")]
public class PlayTimelineDelayed : MonoBehaviour
{
	[Token(Token = "0x200021D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x701298", Offset = "0x701298")]
	private sealed class <Start>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000AA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000AA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000AA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PlayTimelineDelayed <>4__this;

		[Token(Token = "0x1700026C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60012EF")]
			[Address(RVA = "0x884D2C", Offset = "0x884D2C", VA = "0x884D2C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700026D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60012F1")]
			[Address(RVA = "0x884D94", Offset = "0x884D94", VA = "0x884D94", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60012EC")]
		[Address(RVA = "0x884C2C", Offset = "0x884C2C", VA = "0x884C2C")]
		[DebuggerHidden]
		public <Start>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x60012ED")]
		[Address(RVA = "0x884C68", Offset = "0x884C68", VA = "0x884C68", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60012EE")]
		[Address(RVA = "0x884C6C", Offset = "0x884C6C", VA = "0x884C6C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60012F0")]
		[Address(RVA = "0x884D34", Offset = "0x884D34", VA = "0x884D34", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000337")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PlayableDirector Director;

	[Token(Token = "0x4000338")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float Delay;

	[Token(Token = "0x600035A")]
	[Address(RVA = "0x884BBC", Offset = "0x884BBC", VA = "0x884BBC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7082B8", Offset = "0x7082B8")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x600035B")]
	[Address(RVA = "0x884C58", Offset = "0x884C58", VA = "0x884C58")]
	public PlayTimelineDelayed()
	{
	}
}
[Token(Token = "0x20000A1")]
public class ScreenshotUtility : MonoBehaviour
{
	[Token(Token = "0x200021E")]
	public enum Format
	{
		[Token(Token = "0x4000AA9")]
		PNG,
		[Token(Token = "0x4000AAA")]
		JPEG,
		[Token(Token = "0x4000AAB")]
		EXR
	}

	[Token(Token = "0x200021F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7012A8", Offset = "0x7012A8")]
	private sealed class <Screenshot>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000AAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000AAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000AAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ScreenshotUtility <>4__this;

		[Token(Token = "0x1700026E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60012F5")]
			[Address(RVA = "0x887F60", Offset = "0x887F60", VA = "0x887F60", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700026F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60012F7")]
			[Address(RVA = "0x887FC8", Offset = "0x887FC8", VA = "0x887FC8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60012F2")]
		[Address(RVA = "0x887900", Offset = "0x887900", VA = "0x887900")]
		[DebuggerHidden]
		public <Screenshot>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x60012F3")]
		[Address(RVA = "0x887B2C", Offset = "0x887B2C", VA = "0x887B2C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60012F4")]
		[Address(RVA = "0x887B30", Offset = "0x887B30", VA = "0x887B30", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60012F6")]
		[Address(RVA = "0x887F68", Offset = "0x887F68", VA = "0x887F68", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000339")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x703FD4", Offset = "0x703FD4")]
	public KeyCode ScreenshotKey;

	[Token(Token = "0x400033A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public KeyCode PauseKey;

	[Token(Token = "0x400033B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x70400C", Offset = "0x70400C")]
	public Camera OptionalCamera;

	[Token(Token = "0x400033C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x704044", Offset = "0x704044")]
	public int Width;

	[Token(Token = "0x400033D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int Height;

	[Token(Token = "0x400033E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x70407C", Offset = "0x70407C")]
	public string Filename;

	[Token(Token = "0x400033F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string ScreenshotFolder;

	[Token(Token = "0x4000340")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Format ImageFormat;

	[Token(Token = "0x4000341")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public bool TransparentBackground;

	[Token(Token = "0x4000342")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float _prePauseTimeScale;

	[Token(Token = "0x600035C")]
	[Address(RVA = "0x887800", Offset = "0x887800", VA = "0x887800")]
	private void Update()
	{
	}

	[Token(Token = "0x600035D")]
	[Address(RVA = "0x887890", Offset = "0x887890", VA = "0x887890")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x70831C", Offset = "0x70831C")]
	private IEnumerator Screenshot()
	{
		return null;
	}

	[Token(Token = "0x600035E")]
	[Address(RVA = "0x88792C", Offset = "0x88792C", VA = "0x88792C")]
	private string GetFullPath(string ext)
	{
		return null;
	}

	[Token(Token = "0x600035F")]
	[Address(RVA = "0x887AB4", Offset = "0x887AB4", VA = "0x887AB4")]
	public ScreenshotUtility()
	{
	}
}
[Token(Token = "0x20000A2")]
public class ShaderController : MonoBehaviour
{
	[Token(Token = "0x4000343")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HelpAttribute", RVA = "0x7040B4", Offset = "0x7040B4")]
	public bool active;

	[Token(Token = "0x4000344")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ShaderDatabaseAsset database;

	[Token(Token = "0x6000360")]
	[Address(RVA = "0x8886D8", Offset = "0x8886D8", VA = "0x8886D8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000361")]
	[Address(RVA = "0x8887B0", Offset = "0x8887B0", VA = "0x8887B0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000362")]
	[Address(RVA = "0x888824", Offset = "0x888824", VA = "0x888824")]
	private void FrameTick()
	{
	}

	[Token(Token = "0x6000363")]
	[Address(RVA = "0x888930", Offset = "0x888930", VA = "0x888930")]
	public ShaderController()
	{
	}
}
[Token(Token = "0x20000A3")]
public static class ShaderDatabase
{
	[Token(Token = "0x4000345")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static ShaderDatabaseAsset database;

	[Token(Token = "0x6000364")]
	[Address(RVA = "0x888940", Offset = "0x888940", VA = "0x888940")]
	public static int GetPropertyCount(Shader shader)
	{
		return default(int);
	}

	[Token(Token = "0x6000365")]
	[Address(RVA = "0x888A6C", Offset = "0x888A6C", VA = "0x888A6C")]
	public static string GetPropertyName(Shader shader, int index)
	{
		return null;
	}

	[Token(Token = "0x6000366")]
	[Address(RVA = "0x888BAC", Offset = "0x888BAC", VA = "0x888BAC")]
	public static ShaderDatabaseAsset.ShaderPropertyType GetPropertyType(Shader shader, int index)
	{
		return default(ShaderDatabaseAsset.ShaderPropertyType);
	}
}
[Token(Token = "0x20000A4")]
public class SpriteRendererShadows : MonoBehaviour
{
	[Token(Token = "0x4000346")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ShadowCastingMode shadowCastingMode;

	[Token(Token = "0x4000347")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool receiveShadows;

	[Token(Token = "0x6000367")]
	[Address(RVA = "0x88A0A4", Offset = "0x88A0A4", VA = "0x88A0A4")]
	public SpriteRendererShadows()
	{
	}
}
[Token(Token = "0x20000A5")]
public class VRCameraRig : MonoBehaviour
{
	[Token(Token = "0x2000220")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7012B8", Offset = "0x7012B8")]
	private sealed class <EstimateHeight>d__32 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000AAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000AB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000AB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Transform <cam>5__2;

		[Token(Token = "0x4000AB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <total>5__3;

		[Token(Token = "0x4000AB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int <j>5__4;

		[Token(Token = "0x17000270")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60012FB")]
			[Address(RVA = "0x14C0A44", Offset = "0x14C0A44", VA = "0x14C0A44", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000271")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60012FD")]
			[Address(RVA = "0x14C0AAC", Offset = "0x14C0AAC", VA = "0x14C0AAC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60012F8")]
		[Address(RVA = "0x14C053C", Offset = "0x14C053C", VA = "0x14C053C")]
		[DebuggerHidden]
		public <EstimateHeight>d__32(int <>1__state)
		{
		}

		[Token(Token = "0x60012F9")]
		[Address(RVA = "0x14C0654", Offset = "0x14C0654", VA = "0x14C0654", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60012FA")]
		[Address(RVA = "0x14C0658", Offset = "0x14C0658", VA = "0x14C0658", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60012FC")]
		[Address(RVA = "0x14C0A4C", Offset = "0x14C0A4C", VA = "0x14C0A4C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000348")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7040EC", Offset = "0x7040EC")]
	public Camera headCamera;

	[Token(Token = "0x4000349")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x704124", Offset = "0x704124")]
	[SerializeField]
	private VRController leftController;

	[Token(Token = "0x400034A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private VRController rightController;

	[Token(Token = "0x400034B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x704180", Offset = "0x704180")]
	public TrackingSpaceType spaceType;

	[Token(Token = "0x400034C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool enable;

	[Token(Token = "0x400034D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
	public bool drawSolid;

	[Token(Token = "0x400034E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7041B8", Offset = "0x7041B8")]
	public int width;

	[Token(Token = "0x400034F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7041D0", Offset = "0x7041D0")]
	public int depth;

	[Token(Token = "0x4000350")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7041E8", Offset = "0x7041E8")]
	private static float <playerHeight>k__BackingField;

	[Token(Token = "0x4000351")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Coroutine m_heightCoroutine;

	[Token(Token = "0x4000352")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static VRCameraRig instance;

	[Token(Token = "0x4000353")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static Dictionary<Scene, GameObject> m_sceneCameras;

	[Token(Token = "0x1700002C")]
	public static float playerHeight
	{
		[Token(Token = "0x6000368")]
		[Address(RVA = "0x14BED74", Offset = "0x14BED74", VA = "0x14BED74")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x708380", Offset = "0x708380")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000369")]
		[Address(RVA = "0x14BEDDC", Offset = "0x14BEDDC", VA = "0x14BEDDC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x708390", Offset = "0x708390")]
		private set
		{
		}
	}

	[Token(Token = "0x1700002D")]
	public static VRCameraRig rig
	{
		[Token(Token = "0x600036A")]
		[Address(RVA = "0x14BEE50", Offset = "0x14BEE50", VA = "0x14BEE50")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700002E")]
	public VRController LeftController
	{
		[Token(Token = "0x600036B")]
		[Address(RVA = "0x14BEEB8", Offset = "0x14BEEB8", VA = "0x14BEEB8")]
		get
		{
			return null;
		}
		[Token(Token = "0x600036C")]
		[Address(RVA = "0x14BEEC0", Offset = "0x14BEEC0", VA = "0x14BEEC0")]
		set
		{
		}
	}

	[Token(Token = "0x1700002F")]
	public VRController RightController
	{
		[Token(Token = "0x600036D")]
		[Address(RVA = "0x14BEEC8", Offset = "0x14BEEC8", VA = "0x14BEEC8")]
		get
		{
			return null;
		}
		[Token(Token = "0x600036E")]
		[Address(RVA = "0x14BEED0", Offset = "0x14BEED0", VA = "0x14BEED0")]
		set
		{
		}
	}

	[Token(Token = "0x600036F")]
	[Address(RVA = "0x14BEED8", Offset = "0x14BEED8", VA = "0x14BEED8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000370")]
	[Address(RVA = "0x14BF378", Offset = "0x14BF378", VA = "0x14BF378")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000371")]
	[Address(RVA = "0x14BF514", Offset = "0x14BF514", VA = "0x14BF514")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000372")]
	[Address(RVA = "0x14BF8F8", Offset = "0x14BF8F8", VA = "0x14BF8F8")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000373")]
	[Address(RVA = "0x14BFB78", Offset = "0x14BFB78", VA = "0x14BFB78")]
	[DebugButton]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x7083A0", Offset = "0x7083A0")]
	public void EnableInteraction()
	{
	}

	[Token(Token = "0x6000374")]
	[Address(RVA = "0x14BFDD8", Offset = "0x14BFDD8", VA = "0x14BFDD8")]
	[DebugButton]
	[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x7083D8", Offset = "0x7083D8")]
	public void DisableInteraction()
	{
	}

	[Token(Token = "0x6000375")]
	[Address(RVA = "0x14C0034", Offset = "0x14C0034", VA = "0x14C0034")]
	public static void EnableSceneCamera(Scene scene)
	{
	}

	[Token(Token = "0x6000376")]
	[Address(RVA = "0x14C0180", Offset = "0x14C0180", VA = "0x14C0180")]
	public static void DisableSceneCamera(Scene scene)
	{
	}

	[Token(Token = "0x6000377")]
	[Address(RVA = "0x14C02CC", Offset = "0x14C02CC", VA = "0x14C02CC")]
	public static void TransferCameraRig(Scene fromScene, Scene toScene, bool worldSpace = true)
	{
	}

	[Token(Token = "0x6000378")]
	[Address(RVA = "0x14BF318", Offset = "0x14BF318", VA = "0x14BF318")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x708410", Offset = "0x708410")]
	private IEnumerator EstimateHeight()
	{
		return null;
	}

	[Token(Token = "0x6000379")]
	[Address(RVA = "0x14C0568", Offset = "0x14C0568", VA = "0x14C0568")]
	private void Reset()
	{
	}

	[Token(Token = "0x600037A")]
	[Address(RVA = "0x14C05C0", Offset = "0x14C05C0", VA = "0x14C05C0")]
	public VRCameraRig()
	{
	}
}
[Token(Token = "0x20000A6")]
public class VRController : MonoBehaviour
{
	[Token(Token = "0x2000221")]
	public enum Button
	{
		[Token(Token = "0x4000AB5")]
		TriggerPress,
		[Token(Token = "0x4000AB6")]
		TriggerTouch,
		[Token(Token = "0x4000AB7")]
		TouchpadPress,
		[Token(Token = "0x4000AB8")]
		TouchpadTouch,
		[Token(Token = "0x4000AB9")]
		Grip,
		[Token(Token = "0x4000ABA")]
		PrimaryButtonPress,
		[Token(Token = "0x4000ABB")]
		PrimaryButtonTouch,
		[Token(Token = "0x4000ABC")]
		SecondaryButtonPress,
		[Token(Token = "0x4000ABD")]
		SecondaryButtonTouch,
		[Token(Token = "0x4000ABE")]
		MenuButton
	}

	[Token(Token = "0x2000222")]
	public enum Hand
	{
		[Token(Token = "0x4000AC0")]
		Left,
		[Token(Token = "0x4000AC1")]
		Right
	}

	[Token(Token = "0x2000223")]
	public enum ModelType
	{
		[Token(Token = "0x4000AC3")]
		Undefined,
		[Token(Token = "0x4000AC4")]
		Vive,
		[Token(Token = "0x4000AC5")]
		OculusTouch
	}

	[Serializable]
	[Token(Token = "0x2000224")]
	public class FingerTips
	{
		[Token(Token = "0x4000AC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private Transform indexTransform;

		[Token(Token = "0x4000AC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform middleTransform;

		[Token(Token = "0x4000AC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform ringTransform;

		[Token(Token = "0x4000AC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform pinkyTransform;

		[Token(Token = "0x4000ACA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Transform thumbTransform;

		[Token(Token = "0x17000272")]
		public Transform index
		{
			[Token(Token = "0x60012FE")]
			[Address(RVA = "0x14C4584", Offset = "0x14C4584", VA = "0x14C4584")]
			get
			{
				return null;
			}
			[Token(Token = "0x60012FF")]
			[Address(RVA = "0x14C458C", Offset = "0x14C458C", VA = "0x14C458C")]
			set
			{
			}
		}

		[Token(Token = "0x17000273")]
		public Transform middle
		{
			[Token(Token = "0x6001300")]
			[Address(RVA = "0x14C4594", Offset = "0x14C4594", VA = "0x14C4594")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001301")]
			[Address(RVA = "0x14C459C", Offset = "0x14C459C", VA = "0x14C459C")]
			set
			{
			}
		}

		[Token(Token = "0x17000274")]
		public Transform ring
		{
			[Token(Token = "0x6001302")]
			[Address(RVA = "0x14C45A4", Offset = "0x14C45A4", VA = "0x14C45A4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001303")]
			[Address(RVA = "0x14C45AC", Offset = "0x14C45AC", VA = "0x14C45AC")]
			set
			{
			}
		}

		[Token(Token = "0x17000275")]
		public Transform pinky
		{
			[Token(Token = "0x6001304")]
			[Address(RVA = "0x14C45B4", Offset = "0x14C45B4", VA = "0x14C45B4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001305")]
			[Address(RVA = "0x14C45BC", Offset = "0x14C45BC", VA = "0x14C45BC")]
			set
			{
			}
		}

		[Token(Token = "0x17000276")]
		public Transform thumb
		{
			[Token(Token = "0x6001306")]
			[Address(RVA = "0x14C45C4", Offset = "0x14C45C4", VA = "0x14C45C4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001307")]
			[Address(RVA = "0x14C45CC", Offset = "0x14C45CC", VA = "0x14C45CC")]
			set
			{
			}
		}

		[Token(Token = "0x6001308")]
		[Address(RVA = "0x14C45D4", Offset = "0x14C45D4", VA = "0x14C45D4")]
		public FingerTips()
		{
		}
	}

	[Token(Token = "0x2000225")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7012C8", Offset = "0x7012C8")]
	private sealed class <InitialDeviceCheck>d__40 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000ACB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000ACC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000ACD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public VRController <>4__this;

		[Token(Token = "0x17000277")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600130C")]
			[Address(RVA = "0x14C4398", Offset = "0x14C4398", VA = "0x14C4398", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000278")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600130E")]
			[Address(RVA = "0x14C4400", Offset = "0x14C4400", VA = "0x14C4400", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001309")]
		[Address(RVA = "0x14C17D8", Offset = "0x14C17D8", VA = "0x14C17D8")]
		[DebuggerHidden]
		public <InitialDeviceCheck>d__40(int <>1__state)
		{
		}

		[Token(Token = "0x600130A")]
		[Address(RVA = "0x14C41DC", Offset = "0x14C41DC", VA = "0x14C41DC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600130B")]
		[Address(RVA = "0x14C41E0", Offset = "0x14C41E0", VA = "0x14C41E0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600130D")]
		[Address(RVA = "0x14C43A0", Offset = "0x14C43A0", VA = "0x14C43A0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000226")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7012D8", Offset = "0x7012D8")]
	private sealed class <FadeMaterial>d__46 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000ACE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000ACF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000AD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public VRController <>4__this;

		[Token(Token = "0x4000AD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float duration;

		[Token(Token = "0x4000AD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float targetValue;

		[Token(Token = "0x4000AD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <prop>5__2;

		[Token(Token = "0x4000AD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Color[] <colors>5__3;

		[Token(Token = "0x4000AD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float <startTime>5__4;

		[Token(Token = "0x17000279")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001312")]
			[Address(RVA = "0x14C416C", Offset = "0x14C416C", VA = "0x14C416C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700027A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001314")]
			[Address(RVA = "0x14C41D4", Offset = "0x14C41D4", VA = "0x14C41D4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600130F")]
		[Address(RVA = "0x14C21CC", Offset = "0x14C21CC", VA = "0x14C21CC")]
		[DebuggerHidden]
		public <FadeMaterial>d__46(int <>1__state)
		{
		}

		[Token(Token = "0x6001310")]
		[Address(RVA = "0x14C3E30", Offset = "0x14C3E30", VA = "0x14C3E30", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001311")]
		[Address(RVA = "0x14C3E34", Offset = "0x14C3E34", VA = "0x14C3E34", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001313")]
		[Address(RVA = "0x14C4174", Offset = "0x14C4174", VA = "0x14C4174", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000227")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7012E8", Offset = "0x7012E8")]
	private sealed class <Vibrate>d__56 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000AD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000AD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000AD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public VRController <>4__this;

		[Token(Token = "0x4000AD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float duration;

		[Token(Token = "0x4000ADA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private InputDevice <device>5__2;

		[Token(Token = "0x4000ADB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float <t>5__3;

		[Token(Token = "0x1700027B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001318")]
			[Address(RVA = "0x14C4514", Offset = "0x14C4514", VA = "0x14C4514", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700027C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600131A")]
			[Address(RVA = "0x14C457C", Offset = "0x14C457C", VA = "0x14C457C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001315")]
		[Address(RVA = "0x14C29AC", Offset = "0x14C29AC", VA = "0x14C29AC")]
		[DebuggerHidden]
		public <Vibrate>d__56(int <>1__state)
		{
		}

		[Token(Token = "0x6001316")]
		[Address(RVA = "0x14C4408", Offset = "0x14C4408", VA = "0x14C4408", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001317")]
		[Address(RVA = "0x14C440C", Offset = "0x14C440C", VA = "0x14C440C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001319")]
		[Address(RVA = "0x14C451C", Offset = "0x14C451C", VA = "0x14C451C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000228")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7012F8", Offset = "0x7012F8")]
	private sealed class <AlignModel>d__65 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000ADC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000ADD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000ADE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public VRController <>4__this;

		[Token(Token = "0x4000ADF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 <pos>5__2;

		[Token(Token = "0x4000AE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Quaternion <rot>5__3;

		[Token(Token = "0x1700027D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600131E")]
			[Address(RVA = "0x14C3DC0", Offset = "0x14C3DC0", VA = "0x14C3DC0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700027E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001320")]
			[Address(RVA = "0x14C3E28", Offset = "0x14C3E28", VA = "0x14C3E28", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600131B")]
		[Address(RVA = "0x14C2E48", Offset = "0x14C2E48", VA = "0x14C2E48")]
		[DebuggerHidden]
		public <AlignModel>d__65(int <>1__state)
		{
		}

		[Token(Token = "0x600131C")]
		[Address(RVA = "0x14C3C20", Offset = "0x14C3C20", VA = "0x14C3C20", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600131D")]
		[Address(RVA = "0x14C3C24", Offset = "0x14C3C24", VA = "0x14C3C24", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600131F")]
		[Address(RVA = "0x14C3DC8", Offset = "0x14C3DC8", VA = "0x14C3DC8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000229")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x701308", Offset = "0x701308")]
	private sealed class <>c__DisplayClass68_0
	{
		[Token(Token = "0x4000AE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 pos;

		[Token(Token = "0x6001321")]
		[Address(RVA = "0x14C35B0", Offset = "0x14C35B0", VA = "0x14C35B0")]
		public <>c__DisplayClass68_0()
		{
		}

		[Token(Token = "0x6001322")]
		[Address(RVA = "0x14C3A30", Offset = "0x14C3A30", VA = "0x14C3A30")]
		internal float <FindInteractables>b__1(Collider o)
		{
			return default(float);
		}

		[Token(Token = "0x6001323")]
		[Address(RVA = "0x14C3B28", Offset = "0x14C3B28", VA = "0x14C3B28")]
		internal float <FindInteractables>b__5(Collider o)
		{
			return default(float);
		}
	}

	[Serializable]
	[Token(Token = "0x200022A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x701318", Offset = "0x701318")]
	private sealed class <>c
	{
		[Token(Token = "0x4000AE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4000AE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<Collider, bool> <>9__68_0;

		[Token(Token = "0x4000AE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Func<Collider, Interactable> <>9__68_2;

		[Token(Token = "0x4000AE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static Func<Interactable, bool> <>9__68_3;

		[Token(Token = "0x4000AE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static Func<Collider, bool> <>9__68_4;

		[Token(Token = "0x6001325")]
		[Address(RVA = "0x14C3878", Offset = "0x14C3878", VA = "0x14C3878")]
		public <>c()
		{
		}

		[Token(Token = "0x6001326")]
		[Address(RVA = "0x14C3880", Offset = "0x14C3880", VA = "0x14C3880")]
		internal bool <FindInteractables>b__68_0(Collider hit)
		{
			return default(bool);
		}

		[Token(Token = "0x6001327")]
		[Address(RVA = "0x14C390C", Offset = "0x14C390C", VA = "0x14C390C")]
		internal Interactable <FindInteractables>b__68_2(Collider o)
		{
			return null;
		}

		[Token(Token = "0x6001328")]
		[Address(RVA = "0x14C3964", Offset = "0x14C3964", VA = "0x14C3964")]
		internal bool <FindInteractables>b__68_3(Interactable o)
		{
			return default(bool);
		}

		[Token(Token = "0x6001329")]
		[Address(RVA = "0x14C39A4", Offset = "0x14C39A4", VA = "0x14C39A4")]
		internal bool <FindInteractables>b__68_4(Collider hit)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4000354")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public XRNode node;

	[Token(Token = "0x4000355")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform modelTransform;

	[Token(Token = "0x4000356")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public HandAnimator handAnimator;

	[Token(Token = "0x4000357")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7041F8", Offset = "0x7041F8")]
	private ModelType <modelType>k__BackingField;

	[Token(Token = "0x4000358")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x704208", Offset = "0x704208")]
	[SerializeField]
	private float interactionDistance;

	[Token(Token = "0x4000359")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private LayerMask interactionMask;

	[Token(Token = "0x400035A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x704264", Offset = "0x704264")]
	private HandPose interactionAvailablePose;

	[Token(Token = "0x400035B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7042B0", Offset = "0x7042B0")]
	public FingerTips fingerTips;

	[Token(Token = "0x400035C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7042E8", Offset = "0x7042E8")]
	[SerializeField]
	private VRModelSetting[] models;

	[Token(Token = "0x400035D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[HideInInspector]
	public List<Interactable> Interactables;

	[Token(Token = "0x400035E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x704344", Offset = "0x704344")]
	private bool <canInteract>k__BackingField;

	[Token(Token = "0x400035F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x704354", Offset = "0x704354")]
	private bool <isTracking>k__BackingField;

	[Token(Token = "0x4000360")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Transform m_transform;

	[Token(Token = "0x4000361")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private int m_modelIndex;

	[Token(Token = "0x4000362")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Renderer[] m_renderers;

	[Token(Token = "0x4000363")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Material[] m_materials;

	[Token(Token = "0x4000364")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Coroutine m_materialFadeCoroutine;

	[Token(Token = "0x4000365")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Array m_buttonEnums;

	[Token(Token = "0x4000366")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private HandPoseZone m_handPoseZone;

	[Token(Token = "0x4000367")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Dictionary<Button, bool> m_buttonStates;

	[Token(Token = "0x4000368")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x704364", Offset = "0x704364")]
	private Coroutine <alignCoroutine>k__BackingField;

	[Token(Token = "0x17000030")]
	public ModelType modelType
	{
		[Token(Token = "0x600037C")]
		[Address(RVA = "0x14C0AB4", Offset = "0x14C0AB4", VA = "0x14C0AB4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x708474", Offset = "0x708474")]
		get
		{
			return default(ModelType);
		}
		[Token(Token = "0x600037D")]
		[Address(RVA = "0x14C0ABC", Offset = "0x14C0ABC", VA = "0x14C0ABC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x708484", Offset = "0x708484")]
		set
		{
		}
	}

	[Token(Token = "0x17000031")]
	public bool canInteract
	{
		[Token(Token = "0x600037E")]
		[Address(RVA = "0x14C0AC4", Offset = "0x14C0AC4", VA = "0x14C0AC4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x708494", Offset = "0x708494")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600037F")]
		[Address(RVA = "0x14C0ACC", Offset = "0x14C0ACC", VA = "0x14C0ACC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7084A4", Offset = "0x7084A4")]
		set
		{
		}
	}

	[Token(Token = "0x17000032")]
	public bool isInteracting
	{
		[Token(Token = "0x6000380")]
		[Address(RVA = "0x14C0AD8", Offset = "0x14C0AD8", VA = "0x14C0AD8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000033")]
	public bool isTracking
	{
		[Token(Token = "0x6000381")]
		[Address(RVA = "0x14C0B4C", Offset = "0x14C0B4C", VA = "0x14C0B4C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7084B4", Offset = "0x7084B4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000382")]
		[Address(RVA = "0x14C0B54", Offset = "0x14C0B54", VA = "0x14C0B54")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7084C4", Offset = "0x7084C4")]
		private set
		{
		}
	}

	[Token(Token = "0x17000034")]
	public Coroutine alignCoroutine
	{
		[Token(Token = "0x600039C")]
		[Address(RVA = "0x14C2D88", Offset = "0x14C2D88", VA = "0x14C2D88")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x708600", Offset = "0x708600")]
		get
		{
			return null;
		}
		[Token(Token = "0x600039D")]
		[Address(RVA = "0x14C2D90", Offset = "0x14C2D90", VA = "0x14C2D90")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x708610", Offset = "0x708610")]
		private set
		{
		}
	}

	[Token(Token = "0x6000383")]
	[Address(RVA = "0x14C0B60", Offset = "0x14C0B60", VA = "0x14C0B60")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000384")]
	[Address(RVA = "0x14C0E4C", Offset = "0x14C0E4C", VA = "0x14C0E4C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000385")]
	[Address(RVA = "0x14C0F20", Offset = "0x14C0F20", VA = "0x14C0F20")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000386")]
	[Address(RVA = "0x14C0FF4", Offset = "0x14C0FF4", VA = "0x14C0FF4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000387")]
	[Address(RVA = "0x14C10E4", Offset = "0x14C10E4", VA = "0x14C10E4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000388")]
	[Address(RVA = "0x14C0DDC", Offset = "0x14C0DDC", VA = "0x14C0DDC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7084D4", Offset = "0x7084D4")]
	private IEnumerator InitialDeviceCheck()
	{
		return null;
	}

	[Token(Token = "0x6000389")]
	[Address(RVA = "0x14C1804", Offset = "0x14C1804", VA = "0x14C1804")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600038A")]
	[Address(RVA = "0x14C1A88", Offset = "0x14C1A88", VA = "0x14C1A88")]
	private void TrackingAcquired(XRNodeState nodeState)
	{
	}

	[Token(Token = "0x600038B")]
	[Address(RVA = "0x14C1EA8", Offset = "0x14C1EA8", VA = "0x14C1EA8")]
	private void TrackingLost(XRNodeState nodeState)
	{
	}

	[Token(Token = "0x600038C")]
	[Address(RVA = "0x14C1F88", Offset = "0x14C1F88", VA = "0x14C1F88")]
	public void EnableInteraction(float duration = 2f)
	{
	}

	[Token(Token = "0x600038D")]
	[Address(RVA = "0x14C2088", Offset = "0x14C2088", VA = "0x14C2088")]
	public void DisableInteraction(float duration = 2f)
	{
	}

	[Token(Token = "0x600038E")]
	[Address(RVA = "0x14C2004", Offset = "0x14C2004", VA = "0x14C2004")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x708538", Offset = "0x708538")]
	private IEnumerator FadeMaterial(float targetValue, float duration = 2f)
	{
		return null;
	}

	[Token(Token = "0x600038F")]
	[Address(RVA = "0x14C1D78", Offset = "0x14C1D78", VA = "0x14C1D78")]
	private void SetControllerVisibility(bool enable)
	{
	}

	[Token(Token = "0x6000390")]
	[Address(RVA = "0x14C1B74", Offset = "0x14C1B74", VA = "0x14C1B74")]
	private void RefreshDevice()
	{
	}

	[Token(Token = "0x6000391")]
	[Address(RVA = "0x14C2258", Offset = "0x14C2258", VA = "0x14C2258")]
	private InputDevice GetXRDevice()
	{
		return default(InputDevice);
	}

	[Token(Token = "0x6000392")]
	[Address(RVA = "0x14C1808", Offset = "0x14C1808", VA = "0x14C1808")]
	private void SetButtonStates()
	{
	}

	[Token(Token = "0x6000393")]
	[Address(RVA = "0x14C2264", Offset = "0x14C2264", VA = "0x14C2264")]
	public bool GetButton(Button button, out bool buttonValue)
	{
		return default(bool);
	}

	[Token(Token = "0x6000394")]
	[Address(RVA = "0x14C25EC", Offset = "0x14C25EC", VA = "0x14C25EC")]
	public bool GetAxis(Button button, out float axisValue)
	{
		return default(bool);
	}

	[Token(Token = "0x6000395")]
	[Address(RVA = "0x14C2748", Offset = "0x14C2748", VA = "0x14C2748")]
	public bool GetButtonDown(Button button, out bool buttonValue)
	{
		return default(bool);
	}

	[Token(Token = "0x6000396")]
	[Address(RVA = "0x14C2804", Offset = "0x14C2804", VA = "0x14C2804")]
	public bool GetButtonUp(Button button, out bool buttonValue)
	{
		return default(bool);
	}

	[Token(Token = "0x6000397")]
	[Address(RVA = "0x14C28C0", Offset = "0x14C28C0", VA = "0x14C28C0")]
	public void TriggerVibration(float duration = 0.1f)
	{
	}

	[Token(Token = "0x6000398")]
	[Address(RVA = "0x14C292C", Offset = "0x14C292C", VA = "0x14C292C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x70859C", Offset = "0x70859C")]
	private IEnumerator Vibrate(float duration)
	{
		return null;
	}

	[Token(Token = "0x6000399")]
	[Address(RVA = "0x14C29D8", Offset = "0x14C29D8", VA = "0x14C29D8")]
	public Vector3 GetVelocity()
	{
		return default(Vector3);
	}

	[Token(Token = "0x600039A")]
	[Address(RVA = "0x14C2BF0", Offset = "0x14C2BF0", VA = "0x14C2BF0")]
	public Vector3 GetAngularVelocity()
	{
		return default(Vector3);
	}

	[Token(Token = "0x600039B")]
	[Address(RVA = "0x14C1168", Offset = "0x14C1168", VA = "0x14C1168")]
	private void UpdateXRPose()
	{
	}

	[Token(Token = "0x600039E")]
	[Address(RVA = "0x14C2D98", Offset = "0x14C2D98", VA = "0x14C2D98")]
	public void EnterAlignModelMode()
	{
	}

	[Token(Token = "0x600039F")]
	[Address(RVA = "0x14C2DD8", Offset = "0x14C2DD8", VA = "0x14C2DD8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x708620", Offset = "0x708620")]
	private IEnumerator AlignModel()
	{
		return null;
	}

	[Token(Token = "0x60003A0")]
	[Address(RVA = "0x14C2E74", Offset = "0x14C2E74", VA = "0x14C2E74")]
	public void MirrorModelSettings()
	{
	}

	[Token(Token = "0x60003A1")]
	[Address(RVA = "0x14C143C", Offset = "0x14C143C", VA = "0x14C143C")]
	private void HandleInteractions()
	{
	}

	[Token(Token = "0x60003A2")]
	[Address(RVA = "0x14C30F0", Offset = "0x14C30F0", VA = "0x14C30F0")]
	public void FindInteractables()
	{
	}

	[Token(Token = "0x60003A3")]
	[Address(RVA = "0x14C1658", Offset = "0x14C1658", VA = "0x14C1658")]
	private void ResponsiveHandPose()
	{
	}

	[Token(Token = "0x60003A4")]
	[Address(RVA = "0x14C35B8", Offset = "0x14C35B8", VA = "0x14C35B8")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x60003A5")]
	[Address(RVA = "0x14C3608", Offset = "0x14C3608", VA = "0x14C3608")]
	public VRController()
	{
	}
}
[Token(Token = "0x20000A7")]
public class VRHelper : MonoBehaviour
{
	[Token(Token = "0x60003A6")]
	[Address(RVA = "0x14C45DC", Offset = "0x14C45DC", VA = "0x14C45DC")]
	public void EnableInteraction()
	{
	}

	[Token(Token = "0x60003A7")]
	[Address(RVA = "0x14C463C", Offset = "0x14C463C", VA = "0x14C463C")]
	public void EnableInteraction(float duration = 2f)
	{
	}

	[Token(Token = "0x60003A8")]
	[Address(RVA = "0x14C46A8", Offset = "0x14C46A8", VA = "0x14C46A8")]
	public void DisableInteraction()
	{
	}

	[Token(Token = "0x60003A9")]
	[Address(RVA = "0x14C4708", Offset = "0x14C4708", VA = "0x14C4708")]
	public void DisableInteraction(float duration = 2f)
	{
	}

	[Token(Token = "0x60003AA")]
	[Address(RVA = "0x14C4774", Offset = "0x14C4774", VA = "0x14C4774")]
	public void EnableInteractionSingleUserOnly()
	{
	}

	[Token(Token = "0x60003AB")]
	[Address(RVA = "0x14C4838", Offset = "0x14C4838", VA = "0x14C4838")]
	public void DisableInteractionSingleUserOnly()
	{
	}

	[Token(Token = "0x60003AC")]
	[Address(RVA = "0x14C48FC", Offset = "0x14C48FC", VA = "0x14C48FC")]
	public VRHelper()
	{
	}
}
[Token(Token = "0x20000A8")]
public class VRInput : MonoBehaviour
{
	[Token(Token = "0x4000369")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool isActive;

	[Token(Token = "0x400036A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x704374", Offset = "0x704374")]
	private static Transform <head>k__BackingField;

	[Token(Token = "0x400036B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static List<Transform> m_heads;

	[Token(Token = "0x400036C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static VRController leftHandController;

	[Token(Token = "0x400036D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static VRController rightHandController;

	[Token(Token = "0x400036E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x704384", Offset = "0x704384")]
	private static Action<bool> <OnInputEnable>k__BackingField;

	[Token(Token = "0x17000035")]
	public static Transform head
	{
		[Token(Token = "0x60003AD")]
		[Address(RVA = "0x14C4904", Offset = "0x14C4904", VA = "0x14C4904")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x708684", Offset = "0x708684")]
		get
		{
			return null;
		}
		[Token(Token = "0x60003AE")]
		[Address(RVA = "0x14C496C", Offset = "0x14C496C", VA = "0x14C496C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x708694", Offset = "0x708694")]
		private set
		{
		}
	}

	[Token(Token = "0x17000036")]
	public static Action<bool> OnInputEnable
	{
		[Token(Token = "0x60003B0")]
		[Address(RVA = "0x14C49D8", Offset = "0x14C49D8", VA = "0x14C49D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7086A4", Offset = "0x7086A4")]
		get
		{
			return null;
		}
		[Token(Token = "0x60003B1")]
		[Address(RVA = "0x14C4A40", Offset = "0x14C4A40", VA = "0x14C4A40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7086B4", Offset = "0x7086B4")]
		set
		{
		}
	}

	[Token(Token = "0x60003AF")]
	[Address(RVA = "0x14C21F8", Offset = "0x14C21F8", VA = "0x14C21F8")]
	public static string GetModel()
	{
		return null;
	}

	[Token(Token = "0x60003B2")]
	[Address(RVA = "0x14C4AAC", Offset = "0x14C4AAC", VA = "0x14C4AAC")]
	public static VRController GetControllerFromHand(VRController.Hand hand)
	{
		return null;
	}

	[Token(Token = "0x60003B3")]
	[Address(RVA = "0x14BFBD8", Offset = "0x14BFBD8", VA = "0x14BFBD8")]
	public static void EnableInteractionStatic(float duration = 2f)
	{
	}

	[Token(Token = "0x60003B4")]
	[Address(RVA = "0x14BFE38", Offset = "0x14BFE38", VA = "0x14BFE38")]
	public static void DisableInteractionStatic(float duration = 2f)
	{
	}

	[Token(Token = "0x60003B5")]
	[Address(RVA = "0x14BF43C", Offset = "0x14BF43C", VA = "0x14BF43C")]
	public static void SetHead(Transform t)
	{
	}

	[Token(Token = "0x60003B6")]
	[Address(RVA = "0x14BF5D8", Offset = "0x14BF5D8", VA = "0x14BF5D8")]
	public static void RemoveHead(Transform t)
	{
	}

	[Token(Token = "0x60003B7")]
	[Address(RVA = "0x14C0890", Offset = "0x14C0890", VA = "0x14C0890")]
	public static bool IsHeadTracking()
	{
		return default(bool);
	}

	[Token(Token = "0x60003B8")]
	[Address(RVA = "0x14C4B60", Offset = "0x14C4B60", VA = "0x14C4B60")]
	public static bool IsUserPresent()
	{
		return default(bool);
	}

	[Token(Token = "0x60003B9")]
	[Address(RVA = "0x14C4B80", Offset = "0x14C4B80", VA = "0x14C4B80")]
	public VRInput()
	{
	}
}
[Token(Token = "0x20000A9")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x700164", Offset = "0x700164")]
public class VRModelSetting : ScriptableObject
{
	[Token(Token = "0x400036F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x704394", Offset = "0x704394")]
	public string modelName;

	[Token(Token = "0x4000370")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public VRController.ModelType modelType;

	[Token(Token = "0x4000371")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector3 localPosition;

	[Token(Token = "0x4000372")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector3 localRotation;

	[Token(Token = "0x60003BB")]
	[Address(RVA = "0x14C4C0C", Offset = "0x14C4C0C", VA = "0x14C4C0C")]
	public VRModelSetting()
	{
	}
}
[Token(Token = "0x20000AA")]
public class WwisePlaySound : MonoBehaviour
{
	[Token(Token = "0x4000373")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string _namePlayAkEvent;

	[Token(Token = "0x4000374")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string _nameStopAkEvent;

	[Token(Token = "0x60003BC")]
	[Address(RVA = "0x14C50F8", Offset = "0x14C50F8", VA = "0x14C50F8")]
	public void playEventSound()
	{
	}

	[Token(Token = "0x60003BD")]
	[Address(RVA = "0x14C517C", Offset = "0x14C517C", VA = "0x14C517C")]
	public void stopEventSound()
	{
	}

	[Token(Token = "0x60003BE")]
	[Address(RVA = "0x14C5200", Offset = "0x14C5200", VA = "0x14C5200")]
	public WwisePlaySound()
	{
	}
}
[Token(Token = "0x20000AB")]
public class Wwise_Setrtpc : MonoBehaviour
{
	[Token(Token = "0x4000375")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string rtpcName;

	[Token(Token = "0x4000376")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float rtpcValue;

	[Token(Token = "0x60003BF")]
	[Address(RVA = "0x14C58A8", Offset = "0x14C58A8", VA = "0x14C58A8")]
	public void setRTPCValue()
	{
	}

	[Token(Token = "0x60003C0")]
	[Address(RVA = "0x14C5924", Offset = "0x14C5924", VA = "0x14C5924")]
	public Wwise_Setrtpc()
	{
	}
}
[Token(Token = "0x20000AC")]
public class Wwise_rtpc_FadeIn : MonoBehaviour
{
	[Token(Token = "0x200022B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x701328", Offset = "0x701328")]
	private sealed class <FadeRTPC>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000AE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000AE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000AE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float duration;

		[Token(Token = "0x4000AEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Wwise_rtpc_FadeIn <>4__this;

		[Token(Token = "0x4000AEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <endTime>5__2;

		[Token(Token = "0x1700027F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600132D")]
			[Address(RVA = "0x14C5B88", Offset = "0x14C5B88", VA = "0x14C5B88", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000280")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600132F")]
			[Address(RVA = "0x14C5BF0", Offset = "0x14C5BF0", VA = "0x14C5BF0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600132A")]
		[Address(RVA = "0x14C59FC", Offset = "0x14C59FC", VA = "0x14C59FC")]
		[DebuggerHidden]
		public <FadeRTPC>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x600132B")]
		[Address(RVA = "0x14C5A30", Offset = "0x14C5A30", VA = "0x14C5A30", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600132C")]
		[Address(RVA = "0x14C5A34", Offset = "0x14C5A34", VA = "0x14C5A34", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600132E")]
		[Address(RVA = "0x14C5B90", Offset = "0x14C5B90", VA = "0x14C5B90", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000377")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float rtpcFadeDurantion;

	[Token(Token = "0x4000378")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string rtpcName;

	[Token(Token = "0x4000379")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float rtpcValue;

	[Token(Token = "0x400037A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Coroutine m_coroutine;

	[Token(Token = "0x60003C1")]
	[Address(RVA = "0x14C592C", Offset = "0x14C592C", VA = "0x14C592C")]
	public void RTPCFadeIn()
	{
	}

	[Token(Token = "0x60003C2")]
	[Address(RVA = "0x14C597C", Offset = "0x14C597C", VA = "0x14C597C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x7086C4", Offset = "0x7086C4")]
	private IEnumerator FadeRTPC(float duration)
	{
		return null;
	}

	[Token(Token = "0x60003C3")]
	[Address(RVA = "0x14C5A28", Offset = "0x14C5A28", VA = "0x14C5A28")]
	public Wwise_rtpc_FadeIn()
	{
	}
}
[Token(Token = "0x20000AD")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x7001B8", Offset = "0x7001B8")]
public class MouseLook : MonoBehaviour
{
	[Token(Token = "0x200022C")]
	public enum RotationAxes
	{
		[Token(Token = "0x4000AED")]
		MouseXAndY,
		[Token(Token = "0x4000AEE")]
		MouseX,
		[Token(Token = "0x4000AEF")]
		MouseY
	}

	[Token(Token = "0x400037B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RotationAxes axes;

	[Token(Token = "0x400037C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float sensitivityX;

	[Token(Token = "0x400037D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float sensitivityY;

	[Token(Token = "0x400037E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float minimumX;

	[Token(Token = "0x400037F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float maximumX;

	[Token(Token = "0x4000380")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float minimumY;

	[Token(Token = "0x4000381")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float maximumY;

	[Token(Token = "0x4000382")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float rotationY;

	[Token(Token = "0x60003C4")]
	[Address(RVA = "0xACDBA0", Offset = "0xACDBA0", VA = "0xACDBA0")]
	private void Update()
	{
	}

	[Token(Token = "0x60003C5")]
	[Address(RVA = "0xACDE00", Offset = "0xACDE00", VA = "0xACDE00")]
	private void Start()
	{
	}

	[Token(Token = "0x60003C6")]
	[Address(RVA = "0xACDEC0", Offset = "0xACDEC0", VA = "0xACDEC0")]
	public MouseLook()
	{
	}
}
[Token(Token = "0x20000AE")]
public class ONSPAmbisonicsNative : MonoBehaviour
{
	[Token(Token = "0x200022D")]
	public enum ovrAmbisonicsNativeStatus
	{
		[Token(Token = "0x4000AF1")]
		Uninitialized = -1,
		[Token(Token = "0x4000AF2")]
		NotEnabled,
		[Token(Token = "0x4000AF3")]
		Success,
		[Token(Token = "0x4000AF4")]
		StreamError,
		[Token(Token = "0x4000AF5")]
		ProcessError,
		[Token(Token = "0x4000AF6")]
		MaxStatValue
	}

	[Token(Token = "0x4000383")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private AudioSource source;

	[Token(Token = "0x4000384")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int numFOAChannels;

	[Token(Token = "0x4000385")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static int paramVSpeakerMode;

	[Token(Token = "0x4000386")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static int paramAmbiStat;

	[Token(Token = "0x4000387")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ovrAmbisonicsNativeStatus currentStatus;

	[Token(Token = "0x4000388")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private bool useVirtualSpeakers;

	[Token(Token = "0x17000037")]
	public bool UseVirtualSpeakers
	{
		[Token(Token = "0x60003C7")]
		[Address(RVA = "0xACE848", Offset = "0xACE848", VA = "0xACE848")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60003C8")]
		[Address(RVA = "0xACE850", Offset = "0xACE850", VA = "0xACE850")]
		set
		{
		}
	}

	[Token(Token = "0x60003C9")]
	[Address(RVA = "0xACE85C", Offset = "0xACE85C", VA = "0xACE85C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60003CA")]
	[Address(RVA = "0xACEA90", Offset = "0xACEA90", VA = "0xACEA90")]
	private void Update()
	{
	}

	[Token(Token = "0x60003CB")]
	[Address(RVA = "0xACECF8", Offset = "0xACECF8", VA = "0xACECF8")]
	public ONSPAmbisonicsNative()
	{
	}
}
[Token(Token = "0x20000AF")]
public class ONSPAudioSource : MonoBehaviour
{
	[Token(Token = "0x200022E")]
	private enum Parameters
	{
		[Token(Token = "0x4000AF8")]
		P_GAIN,
		[Token(Token = "0x4000AF9")]
		P_USEINVSQR,
		[Token(Token = "0x4000AFA")]
		P_NEAR,
		[Token(Token = "0x4000AFB")]
		P_FAR,
		[Token(Token = "0x4000AFC")]
		P_RADIUS,
		[Token(Token = "0x4000AFD")]
		P_DISABLE_RFL,
		[Token(Token = "0x4000AFE")]
		P_VSPEAKERMODE,
		[Token(Token = "0x4000AFF")]
		P_AMBISTAT,
		[Token(Token = "0x4000B00")]
		P_READONLY_GLOBAL_RFL_ENABLED,
		[Token(Token = "0x4000B01")]
		P_READONLY_NUM_VOICES,
		[Token(Token = "0x4000B02")]
		P_SENDLEVEL,
		[Token(Token = "0x4000B03")]
		P_NUM
	}

	[Token(Token = "0x4000389")]
	public const string strONSPS = "AudioPluginOculusSpatializer";

	[Token(Token = "0x400038A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private bool enableSpatialization;

	[Token(Token = "0x400038B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float gain;

	[Token(Token = "0x400038C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private bool useInvSqr;

	[Token(Token = "0x400038D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private float near;

	[Token(Token = "0x400038E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float far;

	[Token(Token = "0x400038F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private float volumetricRadius;

	[Token(Token = "0x4000390")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private float reverbSend;

	[Token(Token = "0x4000391")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private bool enableRfl;

	[Token(Token = "0x4000392")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ONSPAudioSource RoomReflectionGizmoAS;

	[Token(Token = "0x17000038")]
	public bool EnableSpatialization
	{
		[Token(Token = "0x60003CF")]
		[Address(RVA = "0xACF064", Offset = "0xACF064", VA = "0xACF064")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60003D0")]
		[Address(RVA = "0xACF06C", Offset = "0xACF06C", VA = "0xACF06C")]
		set
		{
		}
	}

	[Token(Token = "0x17000039")]
	public float Gain
	{
		[Token(Token = "0x60003D1")]
		[Address(RVA = "0xACF078", Offset = "0xACF078", VA = "0xACF078")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60003D2")]
		[Address(RVA = "0xACF080", Offset = "0xACF080", VA = "0xACF080")]
		set
		{
		}
	}

	[Token(Token = "0x1700003A")]
	public bool UseInvSqr
	{
		[Token(Token = "0x60003D3")]
		[Address(RVA = "0xACF104", Offset = "0xACF104", VA = "0xACF104")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60003D4")]
		[Address(RVA = "0xACF10C", Offset = "0xACF10C", VA = "0xACF10C")]
		set
		{
		}
	}

	[Token(Token = "0x1700003B")]
	public float Near
	{
		[Token(Token = "0x60003D5")]
		[Address(RVA = "0xACF118", Offset = "0xACF118", VA = "0xACF118")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60003D6")]
		[Address(RVA = "0xACF120", Offset = "0xACF120", VA = "0xACF120")]
		set
		{
		}
	}

	[Token(Token = "0x1700003C")]
	public float Far
	{
		[Token(Token = "0x60003D7")]
		[Address(RVA = "0xACF1A8", Offset = "0xACF1A8", VA = "0xACF1A8")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60003D8")]
		[Address(RVA = "0xACF1B0", Offset = "0xACF1B0", VA = "0xACF1B0")]
		set
		{
		}
	}

	[Token(Token = "0x1700003D")]
	public float VolumetricRadius
	{
		[Token(Token = "0x60003D9")]
		[Address(RVA = "0xACF238", Offset = "0xACF238", VA = "0xACF238")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60003DA")]
		[Address(RVA = "0xACF240", Offset = "0xACF240", VA = "0xACF240")]
		set
		{
		}
	}

	[Token(Token = "0x1700003E")]
	public float ReverbSend
	{
		[Token(Token = "0x60003DB")]
		[Address(RVA = "0xACF2C8", Offset = "0xACF2C8", VA = "0xACF2C8")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60003DC")]
		[Address(RVA = "0xACF2D0", Offset = "0xACF2D0", VA = "0xACF2D0")]
		set
		{
		}
	}

	[Token(Token = "0x1700003F")]
	public bool EnableRfl
	{
		[Token(Token = "0x60003DD")]
		[Address(RVA = "0xACF358", Offset = "0xACF358", VA = "0xACF358")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60003DE")]
		[Address(RVA = "0xACF360", Offset = "0xACF360", VA = "0xACF360")]
		set
		{
		}
	}

	[Token(Token = "0x60003CD")]
	[Address(RVA = "0xACED7C", Offset = "0xACED7C", VA = "0xACED7C")]
	[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0x708728", Offset = "0x708728")]
	private static void OnBeforeSceneLoadRuntimeMethod()
	{
	}

	[PreserveSig]
	[Token(Token = "0x60003CE")]
	[Address(RVA = "0xACEF84", Offset = "0xACEF84", VA = "0xACEF84")]
	private static extern void ONSP_GetGlobalRoomReflectionValues(ref bool reflOn, ref bool reverbOn, ref float width, ref float height, ref float length);

	[Token(Token = "0x60003DF")]
	[Address(RVA = "0xACF36C", Offset = "0xACF36C", VA = "0xACF36C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60003E0")]
	[Address(RVA = "0xACF4E0", Offset = "0xACF4E0", VA = "0xACF4E0")]
	private void Start()
	{
	}

	[Token(Token = "0x60003E1")]
	[Address(RVA = "0xACF4E4", Offset = "0xACF4E4", VA = "0xACF4E4")]
	private void Update()
	{
	}

	[Token(Token = "0x60003E2")]
	[Address(RVA = "0xACF3D8", Offset = "0xACF3D8", VA = "0xACF3D8")]
	public void SetParameters(ref AudioSource source)
	{
	}

	[Token(Token = "0x60003E3")]
	[Address(RVA = "0xACF5AC", Offset = "0xACF5AC", VA = "0xACF5AC")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x60003E4")]
	[Address(RVA = "0xACFA0C", Offset = "0xACFA0C", VA = "0xACFA0C")]
	private void OnDestroy()
	{
	}

	[PreserveSig]
	[Token(Token = "0x60003E5")]
	[Address(RVA = "0xACEF04", Offset = "0xACEF04", VA = "0xACEF04")]
	private static extern int OSP_SetGlobalVoiceLimit(int VoiceLimit);

	[Token(Token = "0x60003E6")]
	[Address(RVA = "0xACFADC", Offset = "0xACFADC", VA = "0xACFADC")]
	public ONSPAudioSource()
	{
	}
}
[Token(Token = "0x20000B0")]
public class ONSPProfiler : MonoBehaviour
{
	[Token(Token = "0x4000393")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool profilerEnabled;

	[Token(Token = "0x4000394")]
	private const int DEFAULT_PORT = 2121;

	[Token(Token = "0x4000395")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int port;

	[Token(Token = "0x4000396")]
	public const string strONSPS = "AudioPluginOculusSpatializer";

	[Token(Token = "0x60003E8")]
	[Address(RVA = "0xACFAFC", Offset = "0xACFAFC", VA = "0xACFAFC")]
	private void Start()
	{
	}

	[Token(Token = "0x60003E9")]
	[Address(RVA = "0xACFB08", Offset = "0xACFB08", VA = "0xACFB08")]
	private void Update()
	{
	}

	[PreserveSig]
	[Token(Token = "0x60003EA")]
	[Address(RVA = "0xACFBC0", Offset = "0xACFBC0", VA = "0xACFBC0")]
	private static extern int ONSP_SetProfilerEnabled(bool enabled);

	[PreserveSig]
	[Token(Token = "0x60003EB")]
	[Address(RVA = "0xACFB40", Offset = "0xACFB40", VA = "0xACFB40")]
	private static extern int ONSP_SetProfilerPort(int port);

	[Token(Token = "0x60003EC")]
	[Address(RVA = "0xACFC40", Offset = "0xACFC40", VA = "0xACFC40")]
	public ONSPProfiler()
	{
	}
}
[Token(Token = "0x20000B1")]
public class ONSPPropagationGeometry : MonoBehaviour
{
	[Token(Token = "0x200022F")]
	private struct MeshMaterial
	{
		[Token(Token = "0x4000B04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public MeshFilter meshFilter;

		[Token(Token = "0x4000B05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ONSPPropagationMaterial[] materials;
	}

	[Token(Token = "0x2000230")]
	private struct TerrainMaterial
	{
		[Token(Token = "0x4000B06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Terrain terrain;

		[Token(Token = "0x4000B07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ONSPPropagationMaterial[] materials;

		[Token(Token = "0x4000B08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Mesh[] treePrototypeMeshes;
	}

	[Token(Token = "0x4000397")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string GeometryAssetDirectory;

	[Token(Token = "0x4000398")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string filePathRelative;

	[Token(Token = "0x4000399")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool fileEnabled;

	[Token(Token = "0x400039A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool includeChildMeshes;

	[Token(Token = "0x400039B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private IntPtr geometryHandle;

	[Token(Token = "0x400039C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int OSPSuccess;

	[Token(Token = "0x400039D")]
	public const string GEOMETRY_FILE_EXTENSION = "ovramesh";

	[Token(Token = "0x400039E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static int terrainDecimation;

	[Token(Token = "0x17000040")]
	public static string GeometryAssetPath
	{
		[Token(Token = "0x60003ED")]
		[Address(RVA = "0xAD26BC", Offset = "0xAD26BC", VA = "0xAD26BC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000041")]
	public string filePath
	{
		[Token(Token = "0x60003EE")]
		[Address(RVA = "0xAD2748", Offset = "0xAD2748", VA = "0xAD2748")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60003EF")]
	[Address(RVA = "0xAD27C0", Offset = "0xAD27C0", VA = "0xAD27C0")]
	private static string GetPath(Transform current)
	{
		return null;
	}

	[Token(Token = "0x60003F0")]
	[Address(RVA = "0xAD2908", Offset = "0xAD2908", VA = "0xAD2908")]
	private void Awake()
	{
	}

	[Token(Token = "0x60003F1")]
	[Address(RVA = "0xAD290C", Offset = "0xAD290C", VA = "0xAD290C")]
	private void CreatePropagationGeometry()
	{
	}

	[Token(Token = "0x60003F2")]
	[Address(RVA = "0xAD2E6C", Offset = "0xAD2E6C", VA = "0xAD2E6C")]
	private void Update()
	{
	}

	[Token(Token = "0x60003F3")]
	[Address(RVA = "0xAD3204", Offset = "0xAD3204", VA = "0xAD3204")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60003F4")]
	[Address(RVA = "0xAD3360", Offset = "0xAD3360", VA = "0xAD3360")]
	private static void traverseMeshHierarchy(GameObject obj, ONSPPropagationMaterial[] currentMaterials, bool includeChildren, List<MeshMaterial> meshMaterials, List<TerrainMaterial> terrainMaterials, bool ignoreStatic, ref int ignoredMeshCount)
	{
	}

	[Token(Token = "0x60003F5")]
	[Address(RVA = "0xAD3A38", Offset = "0xAD3A38", VA = "0xAD3A38")]
	private int uploadMesh(IntPtr geometryHandle, GameObject meshObject, Matrix4x4 worldToLocal)
	{
		return default(int);
	}

	[Token(Token = "0x60003F6")]
	[Address(RVA = "0xAD3A74", Offset = "0xAD3A74", VA = "0xAD3A74")]
	private int uploadMesh(IntPtr geometryHandle, GameObject meshObject, Matrix4x4 worldToLocal, bool ignoreStatic, ref int ignoredMeshCount)
	{
		return default(int);
	}

	[Token(Token = "0x60003F7")]
	[Address(RVA = "0xAD5218", Offset = "0xAD5218", VA = "0xAD5218")]
	private static void uploadMeshFilter(List<Vector3> tempVertices, List<int> tempIndices, MeshGroup[] groups, float[] vertices, int[] indices, ref int vertexOffset, ref int indexOffset, ref int groupOffset, Mesh mesh, ONSPPropagationMaterial[] materials, Matrix4x4 matrix)
	{
	}

	[Token(Token = "0x60003F8")]
	[Address(RVA = "0xAD50F0", Offset = "0xAD50F0", VA = "0xAD50F0")]
	private static void updateCountsForMesh(ref int totalVertexCount, ref uint totalIndexCount, ref int totalFaceCount, ref int totalMaterialCount, Mesh mesh)
	{
	}

	[Token(Token = "0x60003F9")]
	[Address(RVA = "0xAD2CA4", Offset = "0xAD2CA4", VA = "0xAD2CA4")]
	public void UploadGeometry()
	{
	}

	[Token(Token = "0x60003FA")]
	[Address(RVA = "0xAD2AD8", Offset = "0xAD2AD8", VA = "0xAD2AD8")]
	public bool ReadFile()
	{
		return default(bool);
	}

	[Token(Token = "0x60003FB")]
	[Address(RVA = "0xAD582C", Offset = "0xAD582C", VA = "0xAD582C")]
	public bool WriteToObj()
	{
		return default(bool);
	}

	[Token(Token = "0x60003FC")]
	[Address(RVA = "0xAD5C68", Offset = "0xAD5C68", VA = "0xAD5C68")]
	public ONSPPropagationGeometry()
	{
	}
}
[Token(Token = "0x20000B2")]
internal class ONSPPropagation
{
	[Token(Token = "0x2000231")]
	public enum ovrAudioScalarType : uint
	{
		[Token(Token = "0x4000B0A")]
		Int8,
		[Token(Token = "0x4000B0B")]
		UInt8,
		[Token(Token = "0x4000B0C")]
		Int16,
		[Token(Token = "0x4000B0D")]
		UInt16,
		[Token(Token = "0x4000B0E")]
		Int32,
		[Token(Token = "0x4000B0F")]
		UInt32,
		[Token(Token = "0x4000B10")]
		Int64,
		[Token(Token = "0x4000B11")]
		UInt64,
		[Token(Token = "0x4000B12")]
		Float16,
		[Token(Token = "0x4000B13")]
		Float32,
		[Token(Token = "0x4000B14")]
		Float64
	}

	[Token(Token = "0x2000232")]
	public class ClientType
	{
		[Token(Token = "0x4000B15")]
		public const uint OVRA_CLIENT_TYPE_NATIVE = 0u;

		[Token(Token = "0x4000B16")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2016 = 1u;

		[Token(Token = "0x4000B17")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2017_1 = 2u;

		[Token(Token = "0x4000B18")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2017_2 = 3u;

		[Token(Token = "0x4000B19")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2018_1 = 4u;

		[Token(Token = "0x4000B1A")]
		public const uint OVRA_CLIENT_TYPE_FMOD = 5u;

		[Token(Token = "0x4000B1B")]
		public const uint OVRA_CLIENT_TYPE_UNITY = 6u;

		[Token(Token = "0x4000B1C")]
		public const uint OVRA_CLIENT_TYPE_UE4 = 7u;

		[Token(Token = "0x4000B1D")]
		public const uint OVRA_CLIENT_TYPE_VST = 8u;

		[Token(Token = "0x4000B1E")]
		public const uint OVRA_CLIENT_TYPE_AAX = 9u;

		[Token(Token = "0x4000B1F")]
		public const uint OVRA_CLIENT_TYPE_TEST = 10u;

		[Token(Token = "0x4000B20")]
		public const uint OVRA_CLIENT_TYPE_OTHER = 11u;

		[Token(Token = "0x4000B21")]
		public const uint OVRA_CLIENT_TYPE_WWISE_UNKNOWN = 12u;

		[Token(Token = "0x4000B22")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2019_1 = 13u;

		[Token(Token = "0x4000B23")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2019_2 = 14u;

		[Token(Token = "0x6001330")]
		[Address(RVA = "0xAD00F4", Offset = "0xAD00F4", VA = "0xAD00F4")]
		public ClientType()
		{
		}
	}

	[Token(Token = "0x2000233")]
	public interface PropagationInterface
	{
		[Token(Token = "0x6001331")]
		int SetPropagationQuality(float quality);

		[Token(Token = "0x6001332")]
		int SetPropagationThreadAffinity(ulong cpuMask);

		[Token(Token = "0x6001333")]
		int CreateAudioGeometry(out IntPtr geometry);

		[Token(Token = "0x6001334")]
		int DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x6001335")]
		int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount);

		[Token(Token = "0x6001336")]
		int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x6001337")]
		int AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4);

		[Token(Token = "0x6001338")]
		int AudioGeometryWriteMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6001339")]
		int AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x600133A")]
		int AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath);

		[Token(Token = "0x600133B")]
		int AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value);

		[Token(Token = "0x600133C")]
		int CreateAudioMaterial(out IntPtr material);

		[Token(Token = "0x600133D")]
		int DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x600133E")]
		int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x600133F")]
		int AudioMaterialReset(IntPtr material, MaterialProperty property);
	}

	[Token(Token = "0x2000234")]
	public class UnityNativeInterface : PropagationInterface
	{
		[Token(Token = "0x4000B24")]
		public const string strOSPS = "AudioPluginOculusSpatializer";

		[Token(Token = "0x4000B25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr context_;

		[Token(Token = "0x17000281")]
		private IntPtr context
		{
			[Token(Token = "0x6001340")]
			[Address(RVA = "0xAD0D64", Offset = "0xAD0D64", VA = "0xAD0D64")]
			get
			{
				return default(IntPtr);
			}
		}

		[PreserveSig]
		[Token(Token = "0x6001341")]
		[Address(RVA = "0xAD0DC8", Offset = "0xAD0DC8", VA = "0xAD0DC8")]
		public static extern int ovrAudio_GetPluginContext(out IntPtr context, uint clientType);

		[PreserveSig]
		[Token(Token = "0x6001342")]
		[Address(RVA = "0xAD0E58", Offset = "0xAD0E58", VA = "0xAD0E58")]
		private static extern int ovrAudio_SetPropagationQuality(IntPtr context, float quality);

		[Token(Token = "0x6001343")]
		[Address(RVA = "0xAD0EE8", Offset = "0xAD0EE8", VA = "0xAD0EE8", Slot = "4")]
		public int SetPropagationQuality(float quality)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001344")]
		[Address(RVA = "0xAD0F0C", Offset = "0xAD0F0C", VA = "0xAD0F0C")]
		private static extern int ovrAudio_SetPropagationThreadAffinity(IntPtr context, ulong cpuMask);

		[Token(Token = "0x6001345")]
		[Address(RVA = "0xAD0F9C", Offset = "0xAD0F9C", VA = "0xAD0F9C", Slot = "5")]
		public int SetPropagationThreadAffinity(ulong cpuMask)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001346")]
		[Address(RVA = "0xAD0FC0", Offset = "0xAD0FC0", VA = "0xAD0FC0")]
		private static extern int ovrAudio_CreateAudioGeometry(IntPtr context, out IntPtr geometry);

		[Token(Token = "0x6001347")]
		[Address(RVA = "0xAD104C", Offset = "0xAD104C", VA = "0xAD104C", Slot = "6")]
		public int CreateAudioGeometry(out IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001348")]
		[Address(RVA = "0xAD1070", Offset = "0xAD1070", VA = "0xAD1070")]
		private static extern int ovrAudio_DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x6001349")]
		[Address(RVA = "0xAD10F0", Offset = "0xAD10F0", VA = "0xAD10F0", Slot = "7")]
		public int DestroyAudioGeometry(IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600134A")]
		[Address(RVA = "0xAD10F8", Offset = "0xAD10F8", VA = "0xAD10F8")]
		private static extern int ovrAudio_AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, UIntPtr verticesBytesOffset, UIntPtr vertexCount, UIntPtr vertexStride, ovrAudioScalarType vertexType, int[] indices, UIntPtr indicesByteOffset, UIntPtr indexCount, ovrAudioScalarType indexType, MeshGroup[] groups, UIntPtr groupCount);

		[Token(Token = "0x600134B")]
		[Address(RVA = "0xAD1218", Offset = "0xAD1218", VA = "0xAD1218", Slot = "8")]
		public int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600134C")]
		[Address(RVA = "0xAD1310", Offset = "0xAD1310", VA = "0xAD1310")]
		private static extern int ovrAudio_AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x600134D")]
		[Address(RVA = "0xAD13A8", Offset = "0xAD13A8", VA = "0xAD13A8", Slot = "9")]
		public int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600134E")]
		[Address(RVA = "0xAD13B4", Offset = "0xAD13B4", VA = "0xAD13B4")]
		private static extern int ovrAudio_AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4);

		[Token(Token = "0x600134F")]
		[Address(RVA = "0xAD14E0", Offset = "0xAD14E0", VA = "0xAD14E0", Slot = "10")]
		public int AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001350")]
		[Address(RVA = "0xAD14EC", Offset = "0xAD14EC", VA = "0xAD14EC")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6001351")]
		[Address(RVA = "0xAD1598", Offset = "0xAD1598", VA = "0xAD1598", Slot = "11")]
		public int AudioGeometryWriteMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001352")]
		[Address(RVA = "0xAD15A4", Offset = "0xAD15A4", VA = "0xAD15A4")]
		private static extern int ovrAudio_AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6001353")]
		[Address(RVA = "0xAD1650", Offset = "0xAD1650", VA = "0xAD1650", Slot = "12")]
		public int AudioGeometryReadMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001354")]
		[Address(RVA = "0xAD165C", Offset = "0xAD165C", VA = "0xAD165C")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath);

		[Token(Token = "0x6001355")]
		[Address(RVA = "0xAD1708", Offset = "0xAD1708", VA = "0xAD1708", Slot = "13")]
		public int AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001356")]
		[Address(RVA = "0xAD1714", Offset = "0xAD1714", VA = "0xAD1714")]
		private static extern int ovrAudio_CreateAudioMaterial(IntPtr context, out IntPtr material);

		[Token(Token = "0x6001357")]
		[Address(RVA = "0xAD17A0", Offset = "0xAD17A0", VA = "0xAD17A0", Slot = "15")]
		public int CreateAudioMaterial(out IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001358")]
		[Address(RVA = "0xAD17C4", Offset = "0xAD17C4", VA = "0xAD17C4")]
		private static extern int ovrAudio_DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x6001359")]
		[Address(RVA = "0xAD1844", Offset = "0xAD1844", VA = "0xAD1844", Slot = "16")]
		public int DestroyAudioMaterial(IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600135A")]
		[Address(RVA = "0xAD184C", Offset = "0xAD184C", VA = "0xAD184C")]
		private static extern int ovrAudio_AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x600135B")]
		[Address(RVA = "0xAD18F4", Offset = "0xAD18F4", VA = "0xAD18F4", Slot = "17")]
		public int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600135C")]
		[Address(RVA = "0xAD1900", Offset = "0xAD1900", VA = "0xAD1900")]
		private static extern int ovrAudio_AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value);

		[Token(Token = "0x600135D")]
		[Address(RVA = "0xAD19A8", Offset = "0xAD19A8", VA = "0xAD19A8", Slot = "14")]
		public int AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600135E")]
		[Address(RVA = "0xAD19B8", Offset = "0xAD19B8", VA = "0xAD19B8")]
		private static extern int ovrAudio_AudioMaterialReset(IntPtr material, MaterialProperty property);

		[Token(Token = "0x600135F")]
		[Address(RVA = "0xAD1A48", Offset = "0xAD1A48", VA = "0xAD1A48", Slot = "18")]
		public int AudioMaterialReset(IntPtr material, MaterialProperty property)
		{
			return default(int);
		}

		[Token(Token = "0x6001360")]
		[Address(RVA = "0xAD00A0", Offset = "0xAD00A0", VA = "0xAD00A0")]
		public UnityNativeInterface()
		{
		}
	}

	[Token(Token = "0x2000235")]
	public class WwisePluginInterface : PropagationInterface
	{
		[Token(Token = "0x4000B26")]
		public const string strOSPS = "OculusSpatializerWwise";

		[Token(Token = "0x4000B27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr context_;

		[Token(Token = "0x17000282")]
		private IntPtr context
		{
			[Token(Token = "0x6001361")]
			[Address(RVA = "0xAD1A54", Offset = "0xAD1A54", VA = "0xAD1A54")]
			get
			{
				return default(IntPtr);
			}
		}

		[PreserveSig]
		[Token(Token = "0x6001362")]
		[Address(RVA = "0xACFEE8", Offset = "0xACFEE8", VA = "0xACFEE8")]
		public static extern int ovrAudio_GetPluginContext(out IntPtr context, uint clientType);

		[PreserveSig]
		[Token(Token = "0x6001363")]
		[Address(RVA = "0xAD1AB8", Offset = "0xAD1AB8", VA = "0xAD1AB8")]
		private static extern int ovrAudio_SetPropagationQuality(IntPtr context, float quality);

		[Token(Token = "0x6001364")]
		[Address(RVA = "0xAD1B48", Offset = "0xAD1B48", VA = "0xAD1B48", Slot = "4")]
		public int SetPropagationQuality(float quality)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001365")]
		[Address(RVA = "0xAD1B6C", Offset = "0xAD1B6C", VA = "0xAD1B6C")]
		private static extern int ovrAudio_SetPropagationThreadAffinity(IntPtr context, ulong cpuMask);

		[Token(Token = "0x6001366")]
		[Address(RVA = "0xAD1BFC", Offset = "0xAD1BFC", VA = "0xAD1BFC", Slot = "5")]
		public int SetPropagationThreadAffinity(ulong cpuMask)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001367")]
		[Address(RVA = "0xAD1C20", Offset = "0xAD1C20", VA = "0xAD1C20")]
		private static extern int ovrAudio_CreateAudioGeometry(IntPtr context, out IntPtr geometry);

		[Token(Token = "0x6001368")]
		[Address(RVA = "0xAD1CB0", Offset = "0xAD1CB0", VA = "0xAD1CB0", Slot = "6")]
		public int CreateAudioGeometry(out IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001369")]
		[Address(RVA = "0xAD1CD4", Offset = "0xAD1CD4", VA = "0xAD1CD4")]
		private static extern int ovrAudio_DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x600136A")]
		[Address(RVA = "0xAD1D54", Offset = "0xAD1D54", VA = "0xAD1D54", Slot = "7")]
		public int DestroyAudioGeometry(IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600136B")]
		[Address(RVA = "0xAD1D5C", Offset = "0xAD1D5C", VA = "0xAD1D5C")]
		private static extern int ovrAudio_AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, UIntPtr verticesBytesOffset, UIntPtr vertexCount, UIntPtr vertexStride, ovrAudioScalarType vertexType, int[] indices, UIntPtr indicesByteOffset, UIntPtr indexCount, ovrAudioScalarType indexType, MeshGroup[] groups, UIntPtr groupCount);

		[Token(Token = "0x600136C")]
		[Address(RVA = "0xAD1E7C", Offset = "0xAD1E7C", VA = "0xAD1E7C", Slot = "8")]
		public int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600136D")]
		[Address(RVA = "0xAD1F74", Offset = "0xAD1F74", VA = "0xAD1F74")]
		private static extern int ovrAudio_AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x600136E")]
		[Address(RVA = "0xAD200C", Offset = "0xAD200C", VA = "0xAD200C", Slot = "9")]
		public int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600136F")]
		[Address(RVA = "0xAD2018", Offset = "0xAD2018", VA = "0xAD2018")]
		private static extern int ovrAudio_AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4);

		[Token(Token = "0x6001370")]
		[Address(RVA = "0xAD2144", Offset = "0xAD2144", VA = "0xAD2144", Slot = "10")]
		public int AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001371")]
		[Address(RVA = "0xAD2150", Offset = "0xAD2150", VA = "0xAD2150")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6001372")]
		[Address(RVA = "0xAD21FC", Offset = "0xAD21FC", VA = "0xAD21FC", Slot = "11")]
		public int AudioGeometryWriteMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001373")]
		[Address(RVA = "0xAD2208", Offset = "0xAD2208", VA = "0xAD2208")]
		private static extern int ovrAudio_AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6001374")]
		[Address(RVA = "0xAD22B4", Offset = "0xAD22B4", VA = "0xAD22B4", Slot = "12")]
		public int AudioGeometryReadMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001375")]
		[Address(RVA = "0xAD22C0", Offset = "0xAD22C0", VA = "0xAD22C0")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath);

		[Token(Token = "0x6001376")]
		[Address(RVA = "0xAD236C", Offset = "0xAD236C", VA = "0xAD236C", Slot = "13")]
		public int AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001377")]
		[Address(RVA = "0xAD2378", Offset = "0xAD2378", VA = "0xAD2378")]
		private static extern int ovrAudio_CreateAudioMaterial(IntPtr context, out IntPtr material);

		[Token(Token = "0x6001378")]
		[Address(RVA = "0xAD2408", Offset = "0xAD2408", VA = "0xAD2408", Slot = "15")]
		public int CreateAudioMaterial(out IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001379")]
		[Address(RVA = "0xAD242C", Offset = "0xAD242C", VA = "0xAD242C")]
		private static extern int ovrAudio_DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x600137A")]
		[Address(RVA = "0xAD24AC", Offset = "0xAD24AC", VA = "0xAD24AC", Slot = "16")]
		public int DestroyAudioMaterial(IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600137B")]
		[Address(RVA = "0xAD24B4", Offset = "0xAD24B4", VA = "0xAD24B4")]
		private static extern int ovrAudio_AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x600137C")]
		[Address(RVA = "0xAD255C", Offset = "0xAD255C", VA = "0xAD255C", Slot = "17")]
		public int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600137D")]
		[Address(RVA = "0xAD2568", Offset = "0xAD2568", VA = "0xAD2568")]
		private static extern int ovrAudio_AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value);

		[Token(Token = "0x600137E")]
		[Address(RVA = "0xAD2610", Offset = "0xAD2610", VA = "0xAD2610", Slot = "14")]
		public int AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600137F")]
		[Address(RVA = "0xAD2620", Offset = "0xAD2620", VA = "0xAD2620")]
		private static extern int ovrAudio_AudioMaterialReset(IntPtr material, MaterialProperty property);

		[Token(Token = "0x6001380")]
		[Address(RVA = "0xAD26B0", Offset = "0xAD26B0", VA = "0xAD26B0", Slot = "18")]
		public int AudioMaterialReset(IntPtr material, MaterialProperty property)
		{
			return default(int);
		}

		[Token(Token = "0x6001381")]
		[Address(RVA = "0xACFF78", Offset = "0xACFF78", VA = "0xACFF78")]
		public WwisePluginInterface()
		{
		}
	}

	[Token(Token = "0x2000236")]
	public class FMODPluginInterface : PropagationInterface
	{
		[Token(Token = "0x4000B28")]
		public const string strOSPS = "OculusSpatializerFMOD";

		[Token(Token = "0x4000B29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr context_;

		[Token(Token = "0x17000283")]
		private IntPtr context
		{
			[Token(Token = "0x6001382")]
			[Address(RVA = "0xAD00FC", Offset = "0xAD00FC", VA = "0xAD00FC")]
			get
			{
				return default(IntPtr);
			}
		}

		[PreserveSig]
		[Token(Token = "0x6001383")]
		[Address(RVA = "0xACFFC4", Offset = "0xACFFC4", VA = "0xACFFC4")]
		public static extern int ovrAudio_GetPluginContext(out IntPtr context, uint clientType);

		[PreserveSig]
		[Token(Token = "0x6001384")]
		[Address(RVA = "0xAD0160", Offset = "0xAD0160", VA = "0xAD0160")]
		private static extern int ovrAudio_SetPropagationQuality(IntPtr context, float quality);

		[Token(Token = "0x6001385")]
		[Address(RVA = "0xAD01F0", Offset = "0xAD01F0", VA = "0xAD01F0", Slot = "4")]
		public int SetPropagationQuality(float quality)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001386")]
		[Address(RVA = "0xAD0214", Offset = "0xAD0214", VA = "0xAD0214")]
		private static extern int ovrAudio_SetPropagationThreadAffinity(IntPtr context, ulong cpuMask);

		[Token(Token = "0x6001387")]
		[Address(RVA = "0xAD02A4", Offset = "0xAD02A4", VA = "0xAD02A4", Slot = "5")]
		public int SetPropagationThreadAffinity(ulong cpuMask)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001388")]
		[Address(RVA = "0xAD02C8", Offset = "0xAD02C8", VA = "0xAD02C8")]
		private static extern int ovrAudio_CreateAudioGeometry(IntPtr context, out IntPtr geometry);

		[Token(Token = "0x6001389")]
		[Address(RVA = "0xAD0358", Offset = "0xAD0358", VA = "0xAD0358", Slot = "6")]
		public int CreateAudioGeometry(out IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600138A")]
		[Address(RVA = "0xAD037C", Offset = "0xAD037C", VA = "0xAD037C")]
		private static extern int ovrAudio_DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x600138B")]
		[Address(RVA = "0xAD03FC", Offset = "0xAD03FC", VA = "0xAD03FC", Slot = "7")]
		public int DestroyAudioGeometry(IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600138C")]
		[Address(RVA = "0xAD0404", Offset = "0xAD0404", VA = "0xAD0404")]
		private static extern int ovrAudio_AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, UIntPtr verticesBytesOffset, UIntPtr vertexCount, UIntPtr vertexStride, ovrAudioScalarType vertexType, int[] indices, UIntPtr indicesByteOffset, UIntPtr indexCount, ovrAudioScalarType indexType, MeshGroup[] groups, UIntPtr groupCount);

		[Token(Token = "0x600138D")]
		[Address(RVA = "0xAD0524", Offset = "0xAD0524", VA = "0xAD0524", Slot = "8")]
		public int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600138E")]
		[Address(RVA = "0xAD061C", Offset = "0xAD061C", VA = "0xAD061C")]
		private static extern int ovrAudio_AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x600138F")]
		[Address(RVA = "0xAD06B4", Offset = "0xAD06B4", VA = "0xAD06B4", Slot = "9")]
		public int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001390")]
		[Address(RVA = "0xAD06C0", Offset = "0xAD06C0", VA = "0xAD06C0")]
		private static extern int ovrAudio_AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4);

		[Token(Token = "0x6001391")]
		[Address(RVA = "0xAD07EC", Offset = "0xAD07EC", VA = "0xAD07EC", Slot = "10")]
		public int AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001392")]
		[Address(RVA = "0xAD07F8", Offset = "0xAD07F8", VA = "0xAD07F8")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6001393")]
		[Address(RVA = "0xAD08A4", Offset = "0xAD08A4", VA = "0xAD08A4", Slot = "11")]
		public int AudioGeometryWriteMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001394")]
		[Address(RVA = "0xAD08B0", Offset = "0xAD08B0", VA = "0xAD08B0")]
		private static extern int ovrAudio_AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6001395")]
		[Address(RVA = "0xAD095C", Offset = "0xAD095C", VA = "0xAD095C", Slot = "12")]
		public int AudioGeometryReadMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001396")]
		[Address(RVA = "0xAD0968", Offset = "0xAD0968", VA = "0xAD0968")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath);

		[Token(Token = "0x6001397")]
		[Address(RVA = "0xAD0A14", Offset = "0xAD0A14", VA = "0xAD0A14", Slot = "13")]
		public int AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001398")]
		[Address(RVA = "0xAD0A20", Offset = "0xAD0A20", VA = "0xAD0A20")]
		private static extern int ovrAudio_CreateAudioMaterial(IntPtr context, out IntPtr material);

		[Token(Token = "0x6001399")]
		[Address(RVA = "0xAD0AB0", Offset = "0xAD0AB0", VA = "0xAD0AB0", Slot = "15")]
		public int CreateAudioMaterial(out IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600139A")]
		[Address(RVA = "0xAD0AD4", Offset = "0xAD0AD4", VA = "0xAD0AD4")]
		private static extern int ovrAudio_DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x600139B")]
		[Address(RVA = "0xAD0B54", Offset = "0xAD0B54", VA = "0xAD0B54", Slot = "16")]
		public int DestroyAudioMaterial(IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600139C")]
		[Address(RVA = "0xAD0B5C", Offset = "0xAD0B5C", VA = "0xAD0B5C")]
		private static extern int ovrAudio_AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x600139D")]
		[Address(RVA = "0xAD0C04", Offset = "0xAD0C04", VA = "0xAD0C04", Slot = "17")]
		public int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600139E")]
		[Address(RVA = "0xAD0C10", Offset = "0xAD0C10", VA = "0xAD0C10")]
		private static extern int ovrAudio_AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value);

		[Token(Token = "0x600139F")]
		[Address(RVA = "0xAD0CB8", Offset = "0xAD0CB8", VA = "0xAD0CB8", Slot = "14")]
		public int AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60013A0")]
		[Address(RVA = "0xAD0CC8", Offset = "0xAD0CC8", VA = "0xAD0CC8")]
		private static extern int ovrAudio_AudioMaterialReset(IntPtr material, MaterialProperty property);

		[Token(Token = "0x60013A1")]
		[Address(RVA = "0xAD0D58", Offset = "0xAD0D58", VA = "0xAD0D58", Slot = "18")]
		public int AudioMaterialReset(IntPtr material, MaterialProperty property)
		{
			return default(int);
		}

		[Token(Token = "0x60013A2")]
		[Address(RVA = "0xAD0054", Offset = "0xAD0054", VA = "0xAD0054")]
		public FMODPluginInterface()
		{
		}
	}

	[Token(Token = "0x400039F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static PropagationInterface CachedInterface;

	[Token(Token = "0x17000042")]
	public static PropagationInterface Interface
	{
		[Token(Token = "0x60003FE")]
		[Address(RVA = "0xACFC50", Offset = "0xACFC50", VA = "0xACFC50")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60003FF")]
	[Address(RVA = "0xACFCC0", Offset = "0xACFCC0", VA = "0xACFCC0")]
	private static PropagationInterface FindInterface()
	{
		return null;
	}

	[Token(Token = "0x6000400")]
	[Address(RVA = "0xAD00EC", Offset = "0xAD00EC", VA = "0xAD00EC")]
	public ONSPPropagation()
	{
	}
}
[Token(Token = "0x20000B3")]
public sealed class ONSPPropagationMaterial : MonoBehaviour
{
	[Token(Token = "0x2000237")]
	public enum Preset
	{
		[Token(Token = "0x4000B2B")]
		Custom,
		[Token(Token = "0x4000B2C")]
		AcousticTile,
		[Token(Token = "0x4000B2D")]
		Brick,
		[Token(Token = "0x4000B2E")]
		BrickPainted,
		[Token(Token = "0x4000B2F")]
		Carpet,
		[Token(Token = "0x4000B30")]
		CarpetHeavy,
		[Token(Token = "0x4000B31")]
		CarpetHeavyPadded,
		[Token(Token = "0x4000B32")]
		CeramicTile,
		[Token(Token = "0x4000B33")]
		Concrete,
		[Token(Token = "0x4000B34")]
		ConcreteRough,
		[Token(Token = "0x4000B35")]
		ConcreteBlock,
		[Token(Token = "0x4000B36")]
		ConcreteBlockPainted,
		[Token(Token = "0x4000B37")]
		Curtain,
		[Token(Token = "0x4000B38")]
		Foliage,
		[Token(Token = "0x4000B39")]
		Glass,
		[Token(Token = "0x4000B3A")]
		GlassHeavy,
		[Token(Token = "0x4000B3B")]
		Grass,
		[Token(Token = "0x4000B3C")]
		Gravel,
		[Token(Token = "0x4000B3D")]
		GypsumBoard,
		[Token(Token = "0x4000B3E")]
		PlasterOnBrick,
		[Token(Token = "0x4000B3F")]
		PlasterOnConcreteBlock,
		[Token(Token = "0x4000B40")]
		Soil,
		[Token(Token = "0x4000B41")]
		SoundProof,
		[Token(Token = "0x4000B42")]
		Snow,
		[Token(Token = "0x4000B43")]
		Steel,
		[Token(Token = "0x4000B44")]
		Water,
		[Token(Token = "0x4000B45")]
		WoodThin,
		[Token(Token = "0x4000B46")]
		WoodThick,
		[Token(Token = "0x4000B47")]
		WoodFloor,
		[Token(Token = "0x4000B48")]
		WoodOnConcrete
	}

	[Serializable]
	[Token(Token = "0x2000238")]
	public sealed class Point
	{
		[Token(Token = "0x4000B49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float frequency;

		[Token(Token = "0x4000B4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float data;

		[Token(Token = "0x60013A3")]
		[Address(RVA = "0xADDB3C", Offset = "0xADDB3C", VA = "0xADDB3C")]
		public Point(float frequency = 0f, float data = 0f)
		{
		}

		[Token(Token = "0x60013A4")]
		[Address(RVA = "0xADDC84", Offset = "0xADDC84", VA = "0xADDC84")]
		public static implicit operator Point(Vector2 v)
		{
			return null;
		}

		[Token(Token = "0x60013A5")]
		[Address(RVA = "0xADDCF4", Offset = "0xADDCF4", VA = "0xADDCF4")]
		public static implicit operator Vector2(Point point)
		{
			return default(Vector2);
		}
	}

	[Serializable]
	[Token(Token = "0x2000239")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x701338", Offset = "0x701338")]
	public sealed class Spectrum
	{
		[Serializable]
		[Token(Token = "0x200027F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7014CC", Offset = "0x7014CC")]
		private sealed class <>c
		{
			[Token(Token = "0x4000BC5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000BC6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Point, float> <>9__3_0;

			[Token(Token = "0x4000BC7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<Point, float> <>9__3_1;

			[Token(Token = "0x6001497")]
			[Address(RVA = "0xADE14C", Offset = "0xADE14C", VA = "0xADE14C")]
			public <>c()
			{
			}

			[Token(Token = "0x6001498")]
			[Address(RVA = "0xADE154", Offset = "0xADE154", VA = "0xADE154")]
			internal float <get_Item>b__3_0(Point p)
			{
				return default(float);
			}

			[Token(Token = "0x6001499")]
			[Address(RVA = "0xADE16C", Offset = "0xADE16C", VA = "0xADE16C")]
			internal float <get_Item>b__3_1(Point p)
			{
				return default(float);
			}
		}

		[Token(Token = "0x4000B4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int selection;

		[Token(Token = "0x4000B4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<Point> points;

		[Token(Token = "0x17000284")]
		public float Item
		{
			[Token(Token = "0x60013A6")]
			[Address(RVA = "0xADDD2C", Offset = "0xADDD2C", VA = "0xADDD2C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x60013A7")]
		[Address(RVA = "0xADDC0C", Offset = "0xADDC0C", VA = "0xADDC0C")]
		public Spectrum()
		{
		}
	}

	[Token(Token = "0x40003A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr materialHandle;

	[Token(Token = "0x40003A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x70445C", Offset = "0x70445C")]
	public Spectrum absorption;

	[Token(Token = "0x40003A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x704494", Offset = "0x704494")]
	public Spectrum transmission;

	[Token(Token = "0x40003A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7044CC", Offset = "0x7044CC")]
	public Spectrum scattering;

	[Token(Token = "0x40003A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Preset preset_;

	[Token(Token = "0x17000043")]
	public Preset preset
	{
		[Token(Token = "0x6000401")]
		[Address(RVA = "0xAD5D40", Offset = "0xAD5D40", VA = "0xAD5D40")]
		get
		{
			return default(Preset);
		}
		[Token(Token = "0x6000402")]
		[Address(RVA = "0xAD5D48", Offset = "0xAD5D48", VA = "0xAD5D48")]
		set
		{
		}
	}

	[Token(Token = "0x6000403")]
	[Address(RVA = "0xAD5D70", Offset = "0xAD5D70", VA = "0xAD5D70")]
	private void Start()
	{
	}

	[Token(Token = "0x6000404")]
	[Address(RVA = "0xAD56C0", Offset = "0xAD56C0", VA = "0xAD56C0")]
	public void StartInternal()
	{
	}

	[Token(Token = "0x6000405")]
	[Address(RVA = "0xAD6320", Offset = "0xAD6320", VA = "0xAD6320")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000406")]
	[Address(RVA = "0xAD6324", Offset = "0xAD6324", VA = "0xAD6324")]
	public void DestroyInternal()
	{
	}

	[Token(Token = "0x6000407")]
	[Address(RVA = "0xAD5D74", Offset = "0xAD5D74", VA = "0xAD5D74")]
	public void UploadMaterial()
	{
	}

	[Token(Token = "0x6000408")]
	[Address(RVA = "0xAD4F5C", Offset = "0xAD4F5C", VA = "0xAD4F5C")]
	public void SetPreset(Preset preset)
	{
	}

	[Token(Token = "0x6000409")]
	[Address(RVA = "0xAD6408", Offset = "0xAD6408", VA = "0xAD6408")]
	private static void AcousticTile(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600040A")]
	[Address(RVA = "0xAD6868", Offset = "0xAD6868", VA = "0xAD6868")]
	private static void Brick(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600040B")]
	[Address(RVA = "0xAD6CC8", Offset = "0xAD6CC8", VA = "0xAD6CC8")]
	private static void BrickPainted(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600040C")]
	[Address(RVA = "0xAD7128", Offset = "0xAD7128", VA = "0xAD7128")]
	private static void Carpet(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600040D")]
	[Address(RVA = "0xAD7588", Offset = "0xAD7588", VA = "0xAD7588")]
	private static void CarpetHeavy(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600040E")]
	[Address(RVA = "0xAD79E8", Offset = "0xAD79E8", VA = "0xAD79E8")]
	private static void CarpetHeavyPadded(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600040F")]
	[Address(RVA = "0xAD7E48", Offset = "0xAD7E48", VA = "0xAD7E48")]
	private static void CeramicTile(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000410")]
	[Address(RVA = "0xAD82A8", Offset = "0xAD82A8", VA = "0xAD82A8")]
	private static void Concrete(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000411")]
	[Address(RVA = "0xAD8708", Offset = "0xAD8708", VA = "0xAD8708")]
	private static void ConcreteRough(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000412")]
	[Address(RVA = "0xAD8B68", Offset = "0xAD8B68", VA = "0xAD8B68")]
	private static void ConcreteBlock(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000413")]
	[Address(RVA = "0xAD8FC8", Offset = "0xAD8FC8", VA = "0xAD8FC8")]
	private static void ConcreteBlockPainted(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000414")]
	[Address(RVA = "0xAD9428", Offset = "0xAD9428", VA = "0xAD9428")]
	private static void Curtain(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000415")]
	[Address(RVA = "0xAD9888", Offset = "0xAD9888", VA = "0xAD9888")]
	private static void Foliage(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000416")]
	[Address(RVA = "0xAD9CE8", Offset = "0xAD9CE8", VA = "0xAD9CE8")]
	private static void Glass(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000417")]
	[Address(RVA = "0xADA140", Offset = "0xADA140", VA = "0xADA140")]
	private static void GlassHeavy(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000418")]
	[Address(RVA = "0xADA5A0", Offset = "0xADA5A0", VA = "0xADA5A0")]
	private static void Grass(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000419")]
	[Address(RVA = "0xADA8DC", Offset = "0xADA8DC", VA = "0xADA8DC")]
	private static void Gravel(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600041A")]
	[Address(RVA = "0xADAC18", Offset = "0xADAC18", VA = "0xADAC18")]
	private static void GypsumBoard(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600041B")]
	[Address(RVA = "0xADB078", Offset = "0xADB078", VA = "0xADB078")]
	private static void PlasterOnBrick(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600041C")]
	[Address(RVA = "0xADB4D8", Offset = "0xADB4D8", VA = "0xADB4D8")]
	private static void PlasterOnConcreteBlock(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600041D")]
	[Address(RVA = "0xADB938", Offset = "0xADB938", VA = "0xADB938")]
	private static void Soil(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600041E")]
	[Address(RVA = "0xADBC74", Offset = "0xADBC74", VA = "0xADBC74")]
	private static void SoundProof(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600041F")]
	[Address(RVA = "0xADBDD0", Offset = "0xADBDD0", VA = "0xADBDD0")]
	private static void Snow(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000420")]
	[Address(RVA = "0xADC10C", Offset = "0xADC10C", VA = "0xADC10C")]
	private static void Steel(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000421")]
	[Address(RVA = "0xADC564", Offset = "0xADC564", VA = "0xADC564")]
	private static void Water(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000422")]
	[Address(RVA = "0xADC9C4", Offset = "0xADC9C4", VA = "0xADC9C4")]
	private static void WoodThin(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000423")]
	[Address(RVA = "0xADCE1C", Offset = "0xADCE1C", VA = "0xADCE1C")]
	private static void WoodThick(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000424")]
	[Address(RVA = "0xADD27C", Offset = "0xADD27C", VA = "0xADD27C")]
	private static void WoodFloor(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000425")]
	[Address(RVA = "0xADD6DC", Offset = "0xADD6DC", VA = "0xADD6DC")]
	private static void WoodOnConcrete(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000426")]
	[Address(RVA = "0xADDB74", Offset = "0xADDB74", VA = "0xADDB74")]
	public ONSPPropagationMaterial()
	{
	}
}
[Token(Token = "0x20000B4")]
public class ONSPPropagationSettings : MonoBehaviour
{
	[Token(Token = "0x40003A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float quality;

	[Token(Token = "0x6000427")]
	[Address(RVA = "0xADE184", Offset = "0xADE184", VA = "0xADE184")]
	private void Update()
	{
	}

	[Token(Token = "0x6000428")]
	[Address(RVA = "0xADE254", Offset = "0xADE254", VA = "0xADE254")]
	public ONSPPropagationSettings()
	{
	}
}
[Token(Token = "0x20000B5")]
public sealed class ONSPSettings : ScriptableObject
{
	[Token(Token = "0x40003A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public int voiceLimit;

	[Token(Token = "0x40003A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ONSPSettings instance;

	[Token(Token = "0x17000044")]
	public static ONSPSettings Instance
	{
		[Token(Token = "0x6000429")]
		[Address(RVA = "0xACEDF0", Offset = "0xACEDF0", VA = "0xACEDF0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600042A")]
	[Address(RVA = "0xADE810", Offset = "0xADE810", VA = "0xADE810")]
	public ONSPSettings()
	{
	}
}
[Token(Token = "0x20000B6")]
public class ONSPVersion : MonoBehaviour
{
	[Token(Token = "0x40003A8")]
	public const string strONSPS = "AudioPluginOculusSpatializer";

	[PreserveSig]
	[Token(Token = "0x600042B")]
	[Address(RVA = "0xADE820", Offset = "0xADE820", VA = "0xADE820")]
	private static extern void ONSP_GetVersion(ref int Major, ref int Minor, ref int Patch);

	[Token(Token = "0x600042C")]
	[Address(RVA = "0xADE8B8", Offset = "0xADE8B8", VA = "0xADE8B8")]
	private void Awake()
	{
	}

	[Token(Token = "0x600042D")]
	[Address(RVA = "0xADE9C4", Offset = "0xADE9C4", VA = "0xADE9C4")]
	private void Start()
	{
	}

	[Token(Token = "0x600042E")]
	[Address(RVA = "0xADE9C8", Offset = "0xADE9C8", VA = "0xADE9C8")]
	private void Update()
	{
	}

	[Token(Token = "0x600042F")]
	[Address(RVA = "0xADE9CC", Offset = "0xADE9CC", VA = "0xADE9CC")]
	public ONSPVersion()
	{
	}
}
[Token(Token = "0x20000B7")]
public class OculusSpatializerUnity : MonoBehaviour
{
	[Token(Token = "0x200023A")]
	public delegate void AudioRaycastCallback(Vector3 origin, Vector3 direction, out Vector3 point, out Vector3 normal, IntPtr data);

	[Token(Token = "0x40003A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LayerMask layerMask;

	[Token(Token = "0x40003AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool visualizeRoom;

	[Token(Token = "0x40003AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	private bool roomVisualizationInitialized;

	[Token(Token = "0x40003AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int raysPerSecond;

	[Token(Token = "0x40003AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float roomInterpSpeed;

	[Token(Token = "0x40003AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float maxWallDistance;

	[Token(Token = "0x40003AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int rayCacheSize;

	[Token(Token = "0x40003B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool dynamicReflectionsEnabled;

	[Token(Token = "0x40003B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float particleSize;

	[Token(Token = "0x40003B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float particleOffset;

	[Token(Token = "0x40003B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GameObject room;

	[Token(Token = "0x40003B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Renderer[] wallRenderer;

	[Token(Token = "0x40003B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float[] dims;

	[Token(Token = "0x40003B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float[] coefs;

	[Token(Token = "0x40003B7")]
	private const int HIT_COUNT = 2048;

	[Token(Token = "0x40003B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Vector3[] points;

	[Token(Token = "0x40003B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Vector3[] normals;

	[Token(Token = "0x40003BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private ParticleSystem sys;

	[Token(Token = "0x40003BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private ParticleSystem.Particle[] particles;

	[Token(Token = "0x40003BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static LayerMask gLayerMask;

	[Token(Token = "0x40003BD")]
	private const string strOSP = "AudioPluginOculusSpatializer";

	[Token(Token = "0x6000430")]
	[Address(RVA = "0xADEF54", Offset = "0xADEF54", VA = "0xADEF54")]
	private static Vector3 swapHandedness(Vector3 vec)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000431")]
	[Address(RVA = "0xADED84", Offset = "0xADED84", VA = "0xADED84")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x70873C", Offset = "0x70873C")]
	private static void AudioRaycast(Vector3 origin, Vector3 direction, out Vector3 point, out Vector3 normal, IntPtr data)
	{
	}

	[Token(Token = "0x6000432")]
	[Address(RVA = "0xADEF8C", Offset = "0xADEF8C", VA = "0xADEF8C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000433")]
	[Address(RVA = "0xADF0C0", Offset = "0xADF0C0", VA = "0xADF0C0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000434")]
	[Address(RVA = "0xADF1B4", Offset = "0xADF1B4", VA = "0xADF1B4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000435")]
	[Address(RVA = "0xADFB6C", Offset = "0xADFB6C", VA = "0xADFB6C")]
	private void inititalizeRoomVisualization()
	{
	}

	[PreserveSig]
	[Token(Token = "0x6000436")]
	[Address(RVA = "0xADF02C", Offset = "0xADF02C", VA = "0xADF02C")]
	private static extern int OSP_Unity_AssignRaycastCallback(AudioRaycastCallback callback, IntPtr data);

	[PreserveSig]
	[Token(Token = "0x6000437")]
	[Address(RVA = "0xADF124", Offset = "0xADF124", VA = "0xADF124")]
	private static extern int OSP_Unity_AssignRaycastCallback(IntPtr callback, IntPtr data);

	[PreserveSig]
	[Token(Token = "0x6000438")]
	[Address(RVA = "0xADF8D4", Offset = "0xADF8D4", VA = "0xADF8D4")]
	private static extern int OSP_Unity_SetDynamicRoomRaysPerSecond(int RaysPerSecond);

	[PreserveSig]
	[Token(Token = "0x6000439")]
	[Address(RVA = "0xADF954", Offset = "0xADF954", VA = "0xADF954")]
	private static extern int OSP_Unity_SetDynamicRoomInterpSpeed(float InterpSpeed);

	[PreserveSig]
	[Token(Token = "0x600043A")]
	[Address(RVA = "0xADF9DC", Offset = "0xADF9DC", VA = "0xADF9DC")]
	private static extern int OSP_Unity_SetDynamicRoomMaxWallDistance(float MaxWallDistance);

	[PreserveSig]
	[Token(Token = "0x600043B")]
	[Address(RVA = "0xADFA64", Offset = "0xADFA64", VA = "0xADFA64")]
	private static extern int OSP_Unity_SetDynamicRoomRaysRayCacheSize(int RayCacheSize);

	[PreserveSig]
	[Token(Token = "0x600043C")]
	[Address(RVA = "0xADFAE4", Offset = "0xADFAE4", VA = "0xADFAE4")]
	private static extern int OSP_Unity_UpdateRoomModel(float wetLevel);

	[PreserveSig]
	[Token(Token = "0x600043D")]
	[Address(RVA = "0xAE09A4", Offset = "0xAE09A4", VA = "0xAE09A4")]
	private static extern int OSP_Unity_GetRoomDimensions(float[] roomDimensions, float[] reflectionsCoefs, out Vector3 position);

	[PreserveSig]
	[Token(Token = "0x600043E")]
	[Address(RVA = "0xAE0A4C", Offset = "0xAE0A4C", VA = "0xAE0A4C")]
	private static extern int OSP_Unity_GetRaycastHits(Vector3[] points, Vector3[] normals, int length);

	[Token(Token = "0x600043F")]
	[Address(RVA = "0xAE0AF4", Offset = "0xAE0AF4", VA = "0xAE0AF4")]
	public OculusSpatializerUnity()
	{
	}
}
[Token(Token = "0x20000B8")]
public struct ReflectionSnapshot
{
	[Token(Token = "0x40003BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public AudioMixerSnapshot mixerSnapshot;

	[Token(Token = "0x40003BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float fadeTime;
}
[Token(Token = "0x20000B9")]
public class ONSPReflectionZone : MonoBehaviour
{
	[Token(Token = "0x40003C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioMixerSnapshot mixerSnapshot;

	[Token(Token = "0x40003C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float fadeTime;

	[Token(Token = "0x40003C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Stack<ReflectionSnapshot> snapshotList;

	[Token(Token = "0x40003C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static ReflectionSnapshot currentSnapshot;

	[Token(Token = "0x6000441")]
	[Address(RVA = "0xADE264", Offset = "0xADE264", VA = "0xADE264")]
	private void Start()
	{
	}

	[Token(Token = "0x6000442")]
	[Address(RVA = "0xADE268", Offset = "0xADE268", VA = "0xADE268")]
	private void Update()
	{
	}

	[Token(Token = "0x6000443")]
	[Address(RVA = "0xADE26C", Offset = "0xADE26C", VA = "0xADE26C")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000444")]
	[Address(RVA = "0xADE3D4", Offset = "0xADE3D4", VA = "0xADE3D4")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000445")]
	[Address(RVA = "0xADE2B8", Offset = "0xADE2B8", VA = "0xADE2B8")]
	private bool CheckForAudioListener(GameObject gameObject)
	{
		return default(bool);
	}

	[Token(Token = "0x6000446")]
	[Address(RVA = "0xADE348", Offset = "0xADE348", VA = "0xADE348")]
	private void PushCurrentMixerShapshot()
	{
	}

	[Token(Token = "0x6000447")]
	[Address(RVA = "0xADE420", Offset = "0xADE420", VA = "0xADE420")]
	private void PopCurrentMixerSnapshot()
	{
	}

	[Token(Token = "0x6000448")]
	[Address(RVA = "0xADE4B8", Offset = "0xADE4B8", VA = "0xADE4B8")]
	private void SetReflectionValues()
	{
	}

	[Token(Token = "0x6000449")]
	[Address(RVA = "0xADE620", Offset = "0xADE620", VA = "0xADE620")]
	private void SetReflectionValues(ref ReflectionSnapshot mss)
	{
	}

	[Token(Token = "0x600044A")]
	[Address(RVA = "0xADE788", Offset = "0xADE788", VA = "0xADE788")]
	public ONSPReflectionZone()
	{
	}
}
[Token(Token = "0x20000BA")]
public enum AkAudioAPI
{
	[Token(Token = "0x40003C5")]
	AkAudioAPI_AAudio = 1,
	[Token(Token = "0x40003C6")]
	AkAudioAPI_OpenSL_ES,
	[Token(Token = "0x40003C7")]
	AkAudioAPI_Default
}
[Token(Token = "0x20000BB")]
public class AkCommunicationSettings : IDisposable
{
	[Token(Token = "0x40003C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x40003C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x17000045")]
	public uint uPoolSize
	{
		[Token(Token = "0x6000453")]
		[Address(RVA = "0xD90320", Offset = "0xD90320", VA = "0xD90320")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6000452")]
		[Address(RVA = "0xD8F56C", Offset = "0xD8F56C", VA = "0xD8F56C")]
		set
		{
		}
	}

	[Token(Token = "0x17000046")]
	public ushort uDiscoveryBroadcastPort
	{
		[Token(Token = "0x6000455")]
		[Address(RVA = "0xD9038C", Offset = "0xD9038C", VA = "0xD9038C")]
		get
		{
			return default(ushort);
		}
		[Token(Token = "0x6000454")]
		[Address(RVA = "0xD8F5E8", Offset = "0xD8F5E8", VA = "0xD8F5E8")]
		set
		{
		}
	}

	[Token(Token = "0x17000047")]
	public ushort uCommandPort
	{
		[Token(Token = "0x6000457")]
		[Address(RVA = "0xD903F8", Offset = "0xD903F8", VA = "0xD903F8")]
		get
		{
			return default(ushort);
		}
		[Token(Token = "0x6000456")]
		[Address(RVA = "0xD8F664", Offset = "0xD8F664", VA = "0xD8F664")]
		set
		{
		}
	}

	[Token(Token = "0x17000048")]
	public ushort uNotificationPort
	{
		[Token(Token = "0x6000459")]
		[Address(RVA = "0xD90464", Offset = "0xD90464", VA = "0xD90464")]
		get
		{
			return default(ushort);
		}
		[Token(Token = "0x6000458")]
		[Address(RVA = "0xD8F6E0", Offset = "0xD8F6E0", VA = "0xD8F6E0")]
		set
		{
		}
	}

	[Token(Token = "0x17000049")]
	public bool bInitSystemLib
	{
		[Token(Token = "0x600045B")]
		[Address(RVA = "0xD904D0", Offset = "0xD904D0", VA = "0xD904D0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600045A")]
		[Address(RVA = "0xD8F75C", Offset = "0xD8F75C", VA = "0xD8F75C")]
		set
		{
		}
	}

	[Token(Token = "0x1700004A")]
	public string szAppNetworkName
	{
		[Token(Token = "0x600045D")]
		[Address(RVA = "0xD9053C", Offset = "0xD9053C", VA = "0xD9053C")]
		get
		{
			return null;
		}
		[Token(Token = "0x600045C")]
		[Address(RVA = "0xD8F7D8", Offset = "0xD8F7D8", VA = "0xD8F7D8")]
		set
		{
		}
	}

	[Token(Token = "0x600044C")]
	[Address(RVA = "0xD900C0", Offset = "0xD900C0", VA = "0xD900C0")]
	internal AkCommunicationSettings(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x600044D")]
	[Address(RVA = "0xD90100", Offset = "0xD90100", VA = "0xD90100")]
	internal static IntPtr getCPtr(AkCommunicationSettings obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x600044E")]
	[Address(RVA = "0xD90150", Offset = "0xD90150", VA = "0xD90150", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x600044F")]
	[Address(RVA = "0xD90184", Offset = "0xD90184", VA = "0xD90184", Slot = "1")]
	~AkCommunicationSettings()
	{
	}

	[Token(Token = "0x6000450")]
	[Address(RVA = "0xD901F4", Offset = "0xD901F4", VA = "0xD901F4", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6000451")]
	[Address(RVA = "0xD8A624", Offset = "0xD8A624", VA = "0xD8A624")]
	public AkCommunicationSettings()
	{
	}
}
[Token(Token = "0x20000BC")]
public enum AkMemPoolAttributes
{
	[Token(Token = "0x40003CB")]
	AkNoAlloc = 0,
	[Token(Token = "0x40003CC")]
	AkMalloc = 1,
	[Token(Token = "0x40003CD")]
	AkAllocMask = 1,
	[Token(Token = "0x40003CE")]
	AkFixedSizeBlocksMode = 8,
	[Token(Token = "0x40003CF")]
	AkBlockMgmtMask = 8
}
[Token(Token = "0x20000BD")]
public class AkPlatformInitSettings : IDisposable
{
	[Token(Token = "0x40003D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x40003D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x1700004B")]
	public AkThreadProperties threadLEngine
	{
		[Token(Token = "0x6000464")]
		[Address(RVA = "0xFAC8D0", Offset = "0xFAC8D0", VA = "0xFAC8D0")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000463")]
		[Address(RVA = "0xFAC840", Offset = "0xFAC840", VA = "0xFAC840")]
		set
		{
		}
	}

	[Token(Token = "0x1700004C")]
	public AkThreadProperties threadOutputMgr
	{
		[Token(Token = "0x6000466")]
		[Address(RVA = "0xFACA10", Offset = "0xFACA10", VA = "0xFACA10")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000465")]
		[Address(RVA = "0xFAC980", Offset = "0xFAC980", VA = "0xFAC980")]
		set
		{
		}
	}

	[Token(Token = "0x1700004D")]
	public AkThreadProperties threadBankManager
	{
		[Token(Token = "0x6000468")]
		[Address(RVA = "0xFACB50", Offset = "0xFACB50", VA = "0xFACB50")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000467")]
		[Address(RVA = "0xFACAC0", Offset = "0xFACAC0", VA = "0xFACAC0")]
		set
		{
		}
	}

	[Token(Token = "0x1700004E")]
	public AkThreadProperties threadMonitor
	{
		[Token(Token = "0x600046A")]
		[Address(RVA = "0xFACC90", Offset = "0xFACC90", VA = "0xFACC90")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000469")]
		[Address(RVA = "0xFACC00", Offset = "0xFACC00", VA = "0xFACC00")]
		set
		{
		}
	}

	[Token(Token = "0x1700004F")]
	public float fLEngineDefaultPoolRatioThreshold
	{
		[Token(Token = "0x600046C")]
		[Address(RVA = "0xFACDBC", Offset = "0xFACDBC", VA = "0xFACDBC")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600046B")]
		[Address(RVA = "0xFACD40", Offset = "0xFACD40", VA = "0xFACD40")]
		set
		{
		}
	}

	[Token(Token = "0x17000050")]
	public uint uLEngineDefaultPoolSize
	{
		[Token(Token = "0x600046E")]
		[Address(RVA = "0xFACEA4", Offset = "0xFACEA4", VA = "0xFACEA4")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x600046D")]
		[Address(RVA = "0xFACE28", Offset = "0xFACE28", VA = "0xFACE28")]
		set
		{
		}
	}

	[Token(Token = "0x17000051")]
	public AkAudioAPI eAudioAPI
	{
		[Token(Token = "0x6000470")]
		[Address(RVA = "0xFACF8C", Offset = "0xFACF8C", VA = "0xFACF8C")]
		get
		{
			return default(AkAudioAPI);
		}
		[Token(Token = "0x600046F")]
		[Address(RVA = "0xFACF10", Offset = "0xFACF10", VA = "0xFACF10")]
		set
		{
		}
	}

	[Token(Token = "0x17000052")]
	public uint uSampleRate
	{
		[Token(Token = "0x6000472")]
		[Address(RVA = "0xFAD074", Offset = "0xFAD074", VA = "0xFAD074")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6000471")]
		[Address(RVA = "0xFACFF8", Offset = "0xFACFF8", VA = "0xFACFF8")]
		set
		{
		}
	}

	[Token(Token = "0x17000053")]
	public ushort uNumRefillsInVoice
	{
		[Token(Token = "0x6000474")]
		[Address(RVA = "0xFAD15C", Offset = "0xFAD15C", VA = "0xFAD15C")]
		get
		{
			return default(ushort);
		}
		[Token(Token = "0x6000473")]
		[Address(RVA = "0xFAD0E0", Offset = "0xFAD0E0", VA = "0xFAD0E0")]
		set
		{
		}
	}

	[Token(Token = "0x17000054")]
	public uint uChannelMask
	{
		[Token(Token = "0x6000476")]
		[Address(RVA = "0xFAD244", Offset = "0xFAD244", VA = "0xFAD244")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6000475")]
		[Address(RVA = "0xFAD1C8", Offset = "0xFAD1C8", VA = "0xFAD1C8")]
		set
		{
		}
	}

	[Token(Token = "0x17000055")]
	public bool bRoundFrameSizeToHWSize
	{
		[Token(Token = "0x6000478")]
		[Address(RVA = "0xFAD32C", Offset = "0xFAD32C", VA = "0xFAD32C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000477")]
		[Address(RVA = "0xFAD2B0", Offset = "0xFAD2B0", VA = "0xFAD2B0")]
		set
		{
		}
	}

	[Token(Token = "0x600045E")]
	[Address(RVA = "0xFA0C88", Offset = "0xFA0C88", VA = "0xFA0C88")]
	internal AkPlatformInitSettings(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x600045F")]
	[Address(RVA = "0xFA0B88", Offset = "0xFA0B88", VA = "0xFA0B88")]
	internal static IntPtr getCPtr(AkPlatformInitSettings obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6000460")]
	[Address(RVA = "0xFAC670", Offset = "0xFAC670", VA = "0xFAC670", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6000461")]
	[Address(RVA = "0xFAC6A4", Offset = "0xFAC6A4", VA = "0xFAC6A4", Slot = "1")]
	~AkPlatformInitSettings()
	{
	}

	[Token(Token = "0x6000462")]
	[Address(RVA = "0xFAC714", Offset = "0xFAC714", VA = "0xFAC714", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6000479")]
	[Address(RVA = "0xFAD398", Offset = "0xFAD398", VA = "0xFAD398")]
	public AkPlatformInitSettings()
	{
	}
}
[Token(Token = "0x20000BE")]
internal class AkSoundEnginePINVOKE
{
	[Token(Token = "0x600047A")]
	[Address(RVA = "0xA036DC", Offset = "0xA036DC", VA = "0xA036DC")]
	static AkSoundEnginePINVOKE()
	{
	}

	[PreserveSig]
	[Token(Token = "0x600047B")]
	[Address(RVA = "0x9E81B8", Offset = "0x9E81B8", VA = "0x9E81B8")]
	public static extern uint CSharp_AK_SOUNDBANK_VERSION_get();

	[PreserveSig]
	[Token(Token = "0x600047C")]
	[Address(RVA = "0xA036E0", Offset = "0xA036E0", VA = "0xA036E0")]
	public static extern void CSharp_AkAudioSettings_uNumSamplesPerFrame_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x600047D")]
	[Address(RVA = "0xA03770", Offset = "0xA03770", VA = "0xA03770")]
	public static extern uint CSharp_AkAudioSettings_uNumSamplesPerFrame_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600047E")]
	[Address(RVA = "0xA037F0", Offset = "0xA037F0", VA = "0xA037F0")]
	public static extern void CSharp_AkAudioSettings_uNumSamplesPerSecond_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x600047F")]
	[Address(RVA = "0xA03880", Offset = "0xA03880", VA = "0xA03880")]
	public static extern uint CSharp_AkAudioSettings_uNumSamplesPerSecond_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000480")]
	[Address(RVA = "0xA03900", Offset = "0xA03900", VA = "0xA03900")]
	public static extern IntPtr CSharp_new_AkAudioSettings();

	[PreserveSig]
	[Token(Token = "0x6000481")]
	[Address(RVA = "0xA03974", Offset = "0xA03974", VA = "0xA03974")]
	public static extern void CSharp_delete_AkAudioSettings(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000482")]
	[Address(RVA = "0xA039F4", Offset = "0xA039F4", VA = "0xA039F4")]
	public static extern void CSharp_AkVector_Zero(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000483")]
	[Address(RVA = "0xA03A74", Offset = "0xA03A74", VA = "0xA03A74")]
	public static extern void CSharp_AkVector_X_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6000484")]
	[Address(RVA = "0xA03B04", Offset = "0xA03B04", VA = "0xA03B04")]
	public static extern float CSharp_AkVector_X_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000485")]
	[Address(RVA = "0xA03B84", Offset = "0xA03B84", VA = "0xA03B84")]
	public static extern void CSharp_AkVector_Y_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6000486")]
	[Address(RVA = "0xA03C14", Offset = "0xA03C14", VA = "0xA03C14")]
	public static extern float CSharp_AkVector_Y_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000487")]
	[Address(RVA = "0xA03C94", Offset = "0xA03C94", VA = "0xA03C94")]
	public static extern void CSharp_AkVector_Z_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6000488")]
	[Address(RVA = "0xA03D24", Offset = "0xA03D24", VA = "0xA03D24")]
	public static extern float CSharp_AkVector_Z_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000489")]
	[Address(RVA = "0xA03DA4", Offset = "0xA03DA4", VA = "0xA03DA4")]
	public static extern IntPtr CSharp_new_AkVector();

	[PreserveSig]
	[Token(Token = "0x600048A")]
	[Address(RVA = "0xA03E18", Offset = "0xA03E18", VA = "0xA03E18")]
	public static extern void CSharp_delete_AkVector(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600048B")]
	[Address(RVA = "0xA03E98", Offset = "0xA03E98", VA = "0xA03E98")]
	public static extern IntPtr CSharp_AkTransform_Position(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600048C")]
	[Address(RVA = "0xA03F18", Offset = "0xA03F18", VA = "0xA03F18")]
	public static extern IntPtr CSharp_AkTransform_OrientationFront(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600048D")]
	[Address(RVA = "0xA03F98", Offset = "0xA03F98", VA = "0xA03F98")]
	public static extern IntPtr CSharp_AkTransform_OrientationTop(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600048E")]
	[Address(RVA = "0xA04018", Offset = "0xA04018", VA = "0xA04018")]
	public static extern void CSharp_AkTransform_Set__SWIG_0(IntPtr jarg1, IntPtr jarg2, IntPtr jarg3, IntPtr jarg4);

	[PreserveSig]
	[Token(Token = "0x600048F")]
	[Address(RVA = "0xA040C0", Offset = "0xA040C0", VA = "0xA040C0")]
	public static extern void CSharp_AkTransform_Set__SWIG_1(IntPtr jarg1, float jarg2, float jarg3, float jarg4, float jarg5, float jarg6, float jarg7, float jarg8, float jarg9, float jarg10);

	[PreserveSig]
	[Token(Token = "0x6000490")]
	[Address(RVA = "0xA041A8", Offset = "0xA041A8", VA = "0xA041A8")]
	public static extern void CSharp_AkTransform_SetPosition__SWIG_0(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000491")]
	[Address(RVA = "0xA04238", Offset = "0xA04238", VA = "0xA04238")]
	public static extern void CSharp_AkTransform_SetPosition__SWIG_1(IntPtr jarg1, float jarg2, float jarg3, float jarg4);

	[PreserveSig]
	[Token(Token = "0x6000492")]
	[Address(RVA = "0xA042E0", Offset = "0xA042E0", VA = "0xA042E0")]
	public static extern void CSharp_AkTransform_SetOrientation__SWIG_0(IntPtr jarg1, IntPtr jarg2, IntPtr jarg3);

	[PreserveSig]
	[Token(Token = "0x6000493")]
	[Address(RVA = "0xA04378", Offset = "0xA04378", VA = "0xA04378")]
	public static extern void CSharp_AkTransform_SetOrientation__SWIG_1(IntPtr jarg1, float jarg2, float jarg3, float jarg4, float jarg5, float jarg6, float jarg7);

	[PreserveSig]
	[Token(Token = "0x6000494")]
	[Address(RVA = "0xA04440", Offset = "0xA04440", VA = "0xA04440")]
	public static extern IntPtr CSharp_new_AkTransform();

	[PreserveSig]
	[Token(Token = "0x6000495")]
	[Address(RVA = "0xA044B4", Offset = "0xA044B4", VA = "0xA044B4")]
	public static extern void CSharp_delete_AkTransform(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000496")]
	[Address(RVA = "0xA04534", Offset = "0xA04534", VA = "0xA04534")]
	public static extern void CSharp_AkObstructionOcclusionValues_occlusion_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6000497")]
	[Address(RVA = "0xA045C4", Offset = "0xA045C4", VA = "0xA045C4")]
	public static extern float CSharp_AkObstructionOcclusionValues_occlusion_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000498")]
	[Address(RVA = "0xA04644", Offset = "0xA04644", VA = "0xA04644")]
	public static extern void CSharp_AkObstructionOcclusionValues_obstruction_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6000499")]
	[Address(RVA = "0xA046D4", Offset = "0xA046D4", VA = "0xA046D4")]
	public static extern float CSharp_AkObstructionOcclusionValues_obstruction_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600049A")]
	[Address(RVA = "0xA04754", Offset = "0xA04754", VA = "0xA04754")]
	public static extern void CSharp_AkObstructionOcclusionValues_Clear(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600049B")]
	[Address(RVA = "0xA047D4", Offset = "0xA047D4", VA = "0xA047D4")]
	public static extern int CSharp_AkObstructionOcclusionValues_GetSizeOf();

	[PreserveSig]
	[Token(Token = "0x600049C")]
	[Address(RVA = "0xA04848", Offset = "0xA04848", VA = "0xA04848")]
	public static extern void CSharp_AkObstructionOcclusionValues_Clone(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x600049D")]
	[Address(RVA = "0xA048D8", Offset = "0xA048D8", VA = "0xA048D8")]
	public static extern IntPtr CSharp_new_AkObstructionOcclusionValues();

	[PreserveSig]
	[Token(Token = "0x600049E")]
	[Address(RVA = "0xA0494C", Offset = "0xA0494C", VA = "0xA0494C")]
	public static extern void CSharp_delete_AkObstructionOcclusionValues(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600049F")]
	[Address(RVA = "0xA049CC", Offset = "0xA049CC", VA = "0xA049CC")]
	public static extern void CSharp_AkChannelEmitter_position_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x60004A0")]
	[Address(RVA = "0xA04A5C", Offset = "0xA04A5C", VA = "0xA04A5C")]
	public static extern IntPtr CSharp_AkChannelEmitter_position_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60004A1")]
	[Address(RVA = "0xA04ADC", Offset = "0xA04ADC", VA = "0xA04ADC")]
	public static extern void CSharp_AkChannelEmitter_uInputChannels_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x60004A2")]
	[Address(RVA = "0xA04B6C", Offset = "0xA04B6C", VA = "0xA04B6C")]
	public static extern uint CSharp_AkChannelEmitter_uInputChannels_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60004A3")]
	[Address(RVA = "0xA04BEC", Offset = "0xA04BEC", VA = "0xA04BEC")]
	public static extern void CSharp_delete_AkChannelEmitter(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60004A4")]
	[Address(RVA = "0xA04C6C", Offset = "0xA04C6C", VA = "0xA04C6C")]
	public static extern void CSharp_AkAuxSendValue_listenerID_set(IntPtr jarg1, ulong jarg2);

	[PreserveSig]
	[Token(Token = "0x60004A5")]
	[Address(RVA = "0xA04CFC", Offset = "0xA04CFC", VA = "0xA04CFC")]
	public static extern ulong CSharp_AkAuxSendValue_listenerID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60004A6")]
	[Address(RVA = "0xA04D7C", Offset = "0xA04D7C", VA = "0xA04D7C")]
	public static extern void CSharp_AkAuxSendValue_auxBusID_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x60004A7")]
	[Address(RVA = "0xA04E0C", Offset = "0xA04E0C", VA = "0xA04E0C")]
	public static extern uint CSharp_AkAuxSendValue_auxBusID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60004A8")]
	[Address(RVA = "0xA04E8C", Offset = "0xA04E8C", VA = "0xA04E8C")]
	public static extern void CSharp_AkAuxSendValue_fControlValue_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x60004A9")]
	[Address(RVA = "0xA04F1C", Offset = "0xA04F1C", VA = "0xA04F1C")]
	public static extern float CSharp_AkAuxSendValue_fControlValue_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60004AA")]
	[Address(RVA = "0xA04F9C", Offset = "0xA04F9C", VA = "0xA04F9C")]
	public static extern void CSharp_AkAuxSendValue_Set(IntPtr jarg1, ulong jarg2, uint jarg3, float jarg4);

	[PreserveSig]
	[Token(Token = "0x60004AB")]
	[Address(RVA = "0xA05044", Offset = "0xA05044", VA = "0xA05044")]
	public static extern bool CSharp_AkAuxSendValue_IsSame(IntPtr jarg1, ulong jarg2, uint jarg3);

	[PreserveSig]
	[Token(Token = "0x60004AC")]
	[Address(RVA = "0xA050E4", Offset = "0xA050E4", VA = "0xA050E4")]
	public static extern int CSharp_AkAuxSendValue_GetSizeOf();

	[PreserveSig]
	[Token(Token = "0x60004AD")]
	[Address(RVA = "0xA05158", Offset = "0xA05158", VA = "0xA05158")]
	public static extern void CSharp_delete_AkAuxSendValue(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60004AE")]
	[Address(RVA = "0xA051D8", Offset = "0xA051D8", VA = "0xA051D8")]
	public static extern IntPtr CSharp_new_AkRamp__SWIG_0();

	[PreserveSig]
	[Token(Token = "0x60004AF")]
	[Address(RVA = "0xA0524C", Offset = "0xA0524C", VA = "0xA0524C")]
	public static extern IntPtr CSharp_new_AkRamp__SWIG_1(float jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x60004B0")]
	[Address(RVA = "0xA052DC", Offset = "0xA052DC", VA = "0xA052DC")]
	public static extern void CSharp_AkRamp_fPrev_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x60004B1")]
	[Address(RVA = "0xA0536C", Offset = "0xA0536C", VA = "0xA0536C")]
	public static extern float CSharp_AkRamp_fPrev_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60004B2")]
	[Address(RVA = "0xA053EC", Offset = "0xA053EC", VA = "0xA053EC")]
	public static extern void CSharp_AkRamp_fNext_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x60004B3")]
	[Address(RVA = "0xA0547C", Offset = "0xA0547C", VA = "0xA0547C")]
	public static extern float CSharp_AkRamp_fNext_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60004B4")]
	[Address(RVA = "0xA054FC", Offset = "0xA054FC", VA = "0xA054FC")]
	public static extern void CSharp_delete_AkRamp(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60004B5")]
	[Address(RVA = "0x9E8288", Offset = "0x9E8288", VA = "0x9E8288")]
	public static extern ushort CSharp_AK_INT_get();

	[PreserveSig]
	[Token(Token = "0x60004B6")]
	[Address(RVA = "0x9E8358", Offset = "0x9E8358", VA = "0x9E8358")]
	public static extern ushort CSharp_AK_FLOAT_get();

	[PreserveSig]
	[Token(Token = "0x60004B7")]
	[Address(RVA = "0x9E8428", Offset = "0x9E8428", VA = "0x9E8428")]
	public static extern byte CSharp_AK_INTERLEAVED_get();

	[PreserveSig]
	[Token(Token = "0x60004B8")]
	[Address(RVA = "0x9E84F8", Offset = "0x9E84F8", VA = "0x9E84F8")]
	public static extern byte CSharp_AK_NONINTERLEAVED_get();

	[PreserveSig]
	[Token(Token = "0x60004B9")]
	[Address(RVA = "0x9E85C8", Offset = "0x9E85C8", VA = "0x9E85C8")]
	public static extern uint CSharp_AK_LE_NATIVE_BITSPERSAMPLE_get();

	[PreserveSig]
	[Token(Token = "0x60004BA")]
	[Address(RVA = "0x9E8698", Offset = "0x9E8698", VA = "0x9E8698")]
	public static extern uint CSharp_AK_LE_NATIVE_SAMPLETYPE_get();

	[PreserveSig]
	[Token(Token = "0x60004BB")]
	[Address(RVA = "0x9E8768", Offset = "0x9E8768", VA = "0x9E8768")]
	public static extern uint CSharp_AK_LE_NATIVE_INTERLEAVE_get();

	[PreserveSig]
	[Token(Token = "0x60004BC")]
	[Address(RVA = "0xA0557C", Offset = "0xA0557C", VA = "0xA0557C")]
	public static extern void CSharp_AkAudioFormat_uSampleRate_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x60004BD")]
	[Address(RVA = "0xA0560C", Offset = "0xA0560C", VA = "0xA0560C")]
	public static extern uint CSharp_AkAudioFormat_uSampleRate_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60004BE")]
	[Address(RVA = "0xA0568C", Offset = "0xA0568C", VA = "0xA0568C")]
	public static extern void CSharp_AkAudioFormat_channelConfig_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x60004BF")]
	[Address(RVA = "0xA0571C", Offset = "0xA0571C", VA = "0xA0571C")]
	public static extern IntPtr CSharp_AkAudioFormat_channelConfig_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60004C0")]
	[Address(RVA = "0xA0579C", Offset = "0xA0579C", VA = "0xA0579C")]
	public static extern void CSharp_AkAudioFormat_uBitsPerSample_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x60004C1")]
	[Address(RVA = "0xA0582C", Offset = "0xA0582C", VA = "0xA0582C")]
	public static extern uint CSharp_AkAudioFormat_uBitsPerSample_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60004C2")]
	[Address(RVA = "0xA058AC", Offset = "0xA058AC", VA = "0xA058AC")]
	public static extern void CSharp_AkAudioFormat_uBlockAlign_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x60004C3")]
	[Address(RVA = "0xA0593C", Offset = "0xA0593C", VA = "0xA0593C")]
	public static extern uint CSharp_AkAudioFormat_uBlockAlign_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60004C4")]
	[Address(RVA = "0xA059BC", Offset = "0xA059BC", VA = "0xA059BC")]
	public static extern void CSharp_AkAudioFormat_uTypeID_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x60004C5")]
	[Address(RVA = "0xA05A4C", Offset = "0xA05A4C", VA = "0xA05A4C")]
	public static extern uint CSharp_AkAudioFormat_uTypeID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60004C6")]
	[Address(RVA = "0xA05ACC", Offset = "0xA05ACC", VA = "0xA05ACC")]
	public static extern void CSharp_AkAudioFormat_uInterleaveID_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x60004C7")]
	[Address(RVA = "0xA05B5C", Offset = "0xA05B5C", VA = "0xA05B5C")]
	public static extern uint CSharp_AkAudioFormat_uInterleaveID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60004C8")]
	[Address(RVA = "0xA05BDC", Offset = "0xA05BDC", VA = "0xA05BDC")]
	public static extern uint CSharp_AkAudioFormat_GetNumChannels(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60004C9")]
	[Address(RVA = "0xA05C5C", Offset = "0xA05C5C", VA = "0xA05C5C")]
	public static extern uint CSharp_AkAudioFormat_GetBitsPerSample(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60004CA")]
	[Address(RVA = "0xA05CDC", Offset = "0xA05CDC", VA = "0xA05CDC")]
	public static extern uint CSharp_AkAudioFormat_GetBlockAlign(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60004CB")]
	[Address(RVA = "0xA05D5C", Offset = "0xA05D5C", VA = "0xA05D5C")]
	public static extern uint CSharp_AkAudioFormat_GetTypeID(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60004CC")]
	[Address(RVA = "0xA05DDC", Offset = "0xA05DDC", VA = "0xA05DDC")]
	public static extern uint CSharp_AkAudioFormat_GetInterleaveID(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60004CD")]
	[Address(RVA = "0xA05E5C", Offset = "0xA05E5C", VA = "0xA05E5C")]
	public static extern void CSharp_AkAudioFormat_SetAll(IntPtr jarg1, uint jarg2, IntPtr jarg3, uint jarg4, uint jarg5, uint jarg6, uint jarg7);

	[PreserveSig]
	[Token(Token = "0x60004CE")]
	[Address(RVA = "0xA05F24", Offset = "0xA05F24", VA = "0xA05F24")]
	public static extern bool CSharp_AkAudioFormat_IsChannelConfigSupported(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60004CF")]
	[Address(RVA = "0xA05FAC", Offset = "0xA05FAC", VA = "0xA05FAC")]
	public static extern IntPtr CSharp_new_AkAudioFormat();

	[PreserveSig]
	[Token(Token = "0x60004D0")]
	[Address(RVA = "0xA06020", Offset = "0xA06020", VA = "0xA06020")]
	public static extern void CSharp_delete_AkAudioFormat(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60004D1")]
	[Address(RVA = "0xA060A0", Offset = "0xA060A0", VA = "0xA060A0")]
	public static extern void CSharp_AkIterator_pItem_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x60004D2")]
	[Address(RVA = "0xA06130", Offset = "0xA06130", VA = "0xA06130")]
	public static extern IntPtr CSharp_AkIterator_pItem_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60004D3")]
	[Address(RVA = "0xA061B0", Offset = "0xA061B0", VA = "0xA061B0")]
	public static extern IntPtr CSharp_AkIterator_NextIter(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60004D4")]
	[Address(RVA = "0xA06230", Offset = "0xA06230", VA = "0xA06230")]
	public static extern IntPtr CSharp_AkIterator_PrevIter(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60004D5")]
	[Address(RVA = "0xA062B0", Offset = "0xA062B0", VA = "0xA062B0")]
	public static extern IntPtr CSharp_AkIterator_GetItem(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60004D6")]
	[Address(RVA = "0xA06330", Offset = "0xA06330", VA = "0xA06330")]
	public static extern bool CSharp_AkIterator_IsEqualTo(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x60004D7")]
	[Address(RVA = "0xA063C8", Offset = "0xA063C8", VA = "0xA063C8")]
	public static extern bool CSharp_AkIterator_IsDifferentFrom(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x60004D8")]
	[Address(RVA = "0xA06460", Offset = "0xA06460", VA = "0xA06460")]
	public static extern IntPtr CSharp_new_AkIterator();

	[PreserveSig]
	[Token(Token = "0x60004D9")]
	[Address(RVA = "0xA064D4", Offset = "0xA064D4", VA = "0xA064D4")]
	public static extern void CSharp_delete_AkIterator(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60004DA")]
	[Address(RVA = "0xA06554", Offset = "0xA06554", VA = "0xA06554")]
	public static extern int CSharp__ArrayPoolDefault_Get();

	[PreserveSig]
	[Token(Token = "0x60004DB")]
	[Address(RVA = "0xA065C8", Offset = "0xA065C8", VA = "0xA065C8")]
	public static extern IntPtr CSharp_new__ArrayPoolDefault();

	[PreserveSig]
	[Token(Token = "0x60004DC")]
	[Address(RVA = "0xA0663C", Offset = "0xA0663C", VA = "0xA0663C")]
	public static extern void CSharp_delete__ArrayPoolDefault(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60004DD")]
	[Address(RVA = "0xA066BC", Offset = "0xA066BC", VA = "0xA066BC")]
	public static extern int CSharp__ArrayPoolLEngineDefault_Get();

	[PreserveSig]
	[Token(Token = "0x60004DE")]
	[Address(RVA = "0xA06730", Offset = "0xA06730", VA = "0xA06730")]
	public static extern IntPtr CSharp_new__ArrayPoolLEngineDefault();

	[PreserveSig]
	[Token(Token = "0x60004DF")]
	[Address(RVA = "0xA067A4", Offset = "0xA067A4", VA = "0xA067A4")]
	public static extern void CSharp_delete__ArrayPoolLEngineDefault(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60004E0")]
	[Address(RVA = "0xA06824", Offset = "0xA06824", VA = "0xA06824")]
	public static extern IntPtr CSharp_new_AkPlaylistItem__SWIG_0();

	[PreserveSig]
	[Token(Token = "0x60004E1")]
	[Address(RVA = "0xA06898", Offset = "0xA06898", VA = "0xA06898")]
	public static extern IntPtr CSharp_new_AkPlaylistItem__SWIG_1(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60004E2")]
	[Address(RVA = "0xA06918", Offset = "0xA06918", VA = "0xA06918")]
	public static extern void CSharp_delete_AkPlaylistItem(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60004E3")]
	[Address(RVA = "0xA06998", Offset = "0xA06998", VA = "0xA06998")]
	public static extern IntPtr CSharp_AkPlaylistItem_Assign(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x60004E4")]
	[Address(RVA = "0xA06A28", Offset = "0xA06A28", VA = "0xA06A28")]
	public static extern bool CSharp_AkPlaylistItem_IsEqualTo(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x60004E5")]
	[Address(RVA = "0xA06AC0", Offset = "0xA06AC0", VA = "0xA06AC0")]
	public static extern int CSharp_AkPlaylistItem_SetExternalSources(IntPtr jarg1, uint jarg2, IntPtr jarg3);

	[PreserveSig]
	[Token(Token = "0x60004E6")]
	[Address(RVA = "0xA06B58", Offset = "0xA06B58", VA = "0xA06B58")]
	public static extern void CSharp_AkPlaylistItem_audioNodeID_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x60004E7")]
	[Address(RVA = "0xA06BE8", Offset = "0xA06BE8", VA = "0xA06BE8")]
	public static extern uint CSharp_AkPlaylistItem_audioNodeID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60004E8")]
	[Address(RVA = "0xA06C68", Offset = "0xA06C68", VA = "0xA06C68")]
	public static extern void CSharp_AkPlaylistItem_msDelay_set(IntPtr jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x60004E9")]
	[Address(RVA = "0xA06CF8", Offset = "0xA06CF8", VA = "0xA06CF8")]
	public static extern int CSharp_AkPlaylistItem_msDelay_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60004EA")]
	[Address(RVA = "0xA06D78", Offset = "0xA06D78", VA = "0xA06D78")]
	public static extern void CSharp_AkPlaylistItem_pCustomInfo_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x60004EB")]
	[Address(RVA = "0xA06E08", Offset = "0xA06E08", VA = "0xA06E08")]
	public static extern IntPtr CSharp_AkPlaylistItem_pCustomInfo_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60004EC")]
	[Address(RVA = "0xA06E88", Offset = "0xA06E88", VA = "0xA06E88")]
	public static extern IntPtr CSharp_new_AkPlaylistArray();

	[PreserveSig]
	[Token(Token = "0x60004ED")]
	[Address(RVA = "0xA06EFC", Offset = "0xA06EFC", VA = "0xA06EFC")]
	public static extern void CSharp_delete_AkPlaylistArray(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60004EE")]
	[Address(RVA = "0xA06F7C", Offset = "0xA06F7C", VA = "0xA06F7C")]
	public static extern IntPtr CSharp_AkPlaylistArray_Begin(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60004EF")]
	[Address(RVA = "0xA06FFC", Offset = "0xA06FFC", VA = "0xA06FFC")]
	public static extern IntPtr CSharp_AkPlaylistArray_End(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60004F0")]
	[Address(RVA = "0xA0707C", Offset = "0xA0707C", VA = "0xA0707C")]
	public static extern IntPtr CSharp_AkPlaylistArray_FindEx(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x60004F1")]
	[Address(RVA = "0xA0710C", Offset = "0xA0710C", VA = "0xA0710C")]
	public static extern IntPtr CSharp_AkPlaylistArray_Erase__SWIG_0(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x60004F2")]
	[Address(RVA = "0xA0719C", Offset = "0xA0719C", VA = "0xA0719C")]
	public static extern void CSharp_AkPlaylistArray_Erase__SWIG_1(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x60004F3")]
	[Address(RVA = "0xA0722C", Offset = "0xA0722C", VA = "0xA0722C")]
	public static extern IntPtr CSharp_AkPlaylistArray_EraseSwap(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x60004F4")]
	[Address(RVA = "0xA072BC", Offset = "0xA072BC", VA = "0xA072BC")]
	public static extern int CSharp_AkPlaylistArray_Reserve(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x60004F5")]
	[Address(RVA = "0xA0734C", Offset = "0xA0734C", VA = "0xA0734C")]
	public static extern uint CSharp_AkPlaylistArray_Reserved(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60004F6")]
	[Address(RVA = "0xA073CC", Offset = "0xA073CC", VA = "0xA073CC")]
	public static extern void CSharp_AkPlaylistArray_Term(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60004F7")]
	[Address(RVA = "0xA0744C", Offset = "0xA0744C", VA = "0xA0744C")]
	public static extern uint CSharp_AkPlaylistArray_Length(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60004F8")]
	[Address(RVA = "0xA074CC", Offset = "0xA074CC", VA = "0xA074CC")]
	public static extern IntPtr CSharp_AkPlaylistArray_Data(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60004F9")]
	[Address(RVA = "0xA0754C", Offset = "0xA0754C", VA = "0xA0754C")]
	public static extern bool CSharp_AkPlaylistArray_IsEmpty(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60004FA")]
	[Address(RVA = "0xA075D4", Offset = "0xA075D4", VA = "0xA075D4")]
	public static extern IntPtr CSharp_AkPlaylistArray_Exists(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x60004FB")]
	[Address(RVA = "0xA07664", Offset = "0xA07664", VA = "0xA07664")]
	public static extern IntPtr CSharp_AkPlaylistArray_AddLast__SWIG_0(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60004FC")]
	[Address(RVA = "0xA076E4", Offset = "0xA076E4", VA = "0xA076E4")]
	public static extern IntPtr CSharp_AkPlaylistArray_AddLast__SWIG_1(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x60004FD")]
	[Address(RVA = "0xA07774", Offset = "0xA07774", VA = "0xA07774")]
	public static extern IntPtr CSharp_AkPlaylistArray_Last(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60004FE")]
	[Address(RVA = "0xA077F4", Offset = "0xA077F4", VA = "0xA077F4")]
	public static extern void CSharp_AkPlaylistArray_RemoveLast(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60004FF")]
	[Address(RVA = "0xA07874", Offset = "0xA07874", VA = "0xA07874")]
	public static extern int CSharp_AkPlaylistArray_Remove(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000500")]
	[Address(RVA = "0xA07904", Offset = "0xA07904", VA = "0xA07904")]
	public static extern int CSharp_AkPlaylistArray_RemoveSwap(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000501")]
	[Address(RVA = "0xA07994", Offset = "0xA07994", VA = "0xA07994")]
	public static extern void CSharp_AkPlaylistArray_RemoveAll(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000502")]
	[Address(RVA = "0xA07A14", Offset = "0xA07A14", VA = "0xA07A14")]
	public static extern IntPtr CSharp_AkPlaylistArray_ItemAtIndex(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000503")]
	[Address(RVA = "0xA07AA4", Offset = "0xA07AA4", VA = "0xA07AA4")]
	public static extern IntPtr CSharp_AkPlaylistArray_Insert(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000504")]
	[Address(RVA = "0xA07B34", Offset = "0xA07B34", VA = "0xA07B34")]
	public static extern bool CSharp_AkPlaylistArray_GrowArray__SWIG_0(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000505")]
	[Address(RVA = "0xA07BCC", Offset = "0xA07BCC", VA = "0xA07BCC")]
	public static extern bool CSharp_AkPlaylistArray_GrowArray__SWIG_1(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000506")]
	[Address(RVA = "0xA07C54", Offset = "0xA07C54", VA = "0xA07C54")]
	public static extern bool CSharp_AkPlaylistArray_Resize(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000507")]
	[Address(RVA = "0xA07CEC", Offset = "0xA07CEC", VA = "0xA07CEC")]
	public static extern void CSharp_AkPlaylistArray_Transfer(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000508")]
	[Address(RVA = "0xA07D7C", Offset = "0xA07D7C", VA = "0xA07D7C")]
	public static extern int CSharp_AkPlaylistArray_Copy(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000509")]
	[Address(RVA = "0xA07E0C", Offset = "0xA07E0C", VA = "0xA07E0C")]
	public static extern int CSharp_AkPlaylist_Enqueue__SWIG_0(IntPtr jarg1, uint jarg2, int jarg3, IntPtr jarg4, uint jarg5, IntPtr jarg6);

	[PreserveSig]
	[Token(Token = "0x600050A")]
	[Address(RVA = "0xA07ECC", Offset = "0xA07ECC", VA = "0xA07ECC")]
	public static extern int CSharp_AkPlaylist_Enqueue__SWIG_1(IntPtr jarg1, uint jarg2, int jarg3, IntPtr jarg4, uint jarg5);

	[PreserveSig]
	[Token(Token = "0x600050B")]
	[Address(RVA = "0xA07F7C", Offset = "0xA07F7C", VA = "0xA07F7C")]
	public static extern int CSharp_AkPlaylist_Enqueue__SWIG_2(IntPtr jarg1, uint jarg2, int jarg3, IntPtr jarg4);

	[PreserveSig]
	[Token(Token = "0x600050C")]
	[Address(RVA = "0xA08024", Offset = "0xA08024", VA = "0xA08024")]
	public static extern int CSharp_AkPlaylist_Enqueue__SWIG_3(IntPtr jarg1, uint jarg2, int jarg3);

	[PreserveSig]
	[Token(Token = "0x600050D")]
	[Address(RVA = "0xA080BC", Offset = "0xA080BC", VA = "0xA080BC")]
	public static extern int CSharp_AkPlaylist_Enqueue__SWIG_4(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x600050E")]
	[Address(RVA = "0xA0814C", Offset = "0xA0814C", VA = "0xA0814C")]
	public static extern IntPtr CSharp_new_AkPlaylist();

	[PreserveSig]
	[Token(Token = "0x600050F")]
	[Address(RVA = "0xA081C0", Offset = "0xA081C0", VA = "0xA081C0")]
	public static extern void CSharp_delete_AkPlaylist(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000510")]
	[Address(RVA = "0x9E8A2C", Offset = "0x9E8A2C", VA = "0x9E8A2C")]
	public static extern uint CSharp_DynamicSequenceOpen__SWIG_0(ulong jarg1, uint jarg2, IntPtr jarg3, IntPtr jarg4, int jarg5);

	[PreserveSig]
	[Token(Token = "0x6000511")]
	[Address(RVA = "0x9E8C38", Offset = "0x9E8C38", VA = "0x9E8C38")]
	public static extern uint CSharp_DynamicSequenceOpen__SWIG_1(ulong jarg1, uint jarg2, IntPtr jarg3, IntPtr jarg4);

	[PreserveSig]
	[Token(Token = "0x6000512")]
	[Address(RVA = "0x9E8DB8", Offset = "0x9E8DB8", VA = "0x9E8DB8")]
	public static extern uint CSharp_DynamicSequenceOpen__SWIG_2(ulong jarg1);

	[PreserveSig]
	[Token(Token = "0x6000513")]
	[Address(RVA = "0x9E8E9C", Offset = "0x9E8E9C", VA = "0x9E8E9C")]
	public static extern int CSharp_DynamicSequenceClose(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x6000514")]
	[Address(RVA = "0x9E8F98", Offset = "0x9E8F98", VA = "0x9E8F98")]
	public static extern int CSharp_DynamicSequencePlay__SWIG_0(uint jarg1, int jarg2, int jarg3);

	[PreserveSig]
	[Token(Token = "0x6000515")]
	[Address(RVA = "0x9E90A4", Offset = "0x9E90A4", VA = "0x9E90A4")]
	public static extern int CSharp_DynamicSequencePlay__SWIG_1(uint jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x6000516")]
	[Address(RVA = "0x9E9198", Offset = "0x9E9198", VA = "0x9E9198")]
	public static extern int CSharp_DynamicSequencePlay__SWIG_2(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x6000517")]
	[Address(RVA = "0x9E9294", Offset = "0x9E9294", VA = "0x9E9294")]
	public static extern int CSharp_DynamicSequencePause__SWIG_0(uint jarg1, int jarg2, int jarg3);

	[PreserveSig]
	[Token(Token = "0x6000518")]
	[Address(RVA = "0x9E93A0", Offset = "0x9E93A0", VA = "0x9E93A0")]
	public static extern int CSharp_DynamicSequencePause__SWIG_1(uint jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x6000519")]
	[Address(RVA = "0x9E9494", Offset = "0x9E9494", VA = "0x9E9494")]
	public static extern int CSharp_DynamicSequencePause__SWIG_2(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x600051A")]
	[Address(RVA = "0x9E9590", Offset = "0x9E9590", VA = "0x9E9590")]
	public static extern int CSharp_DynamicSequenceResume__SWIG_0(uint jarg1, int jarg2, int jarg3);

	[PreserveSig]
	[Token(Token = "0x600051B")]
	[Address(RVA = "0x9E969C", Offset = "0x9E969C", VA = "0x9E969C")]
	public static extern int CSharp_DynamicSequenceResume__SWIG_1(uint jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x600051C")]
	[Address(RVA = "0x9E9790", Offset = "0x9E9790", VA = "0x9E9790")]
	public static extern int CSharp_DynamicSequenceResume__SWIG_2(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x600051D")]
	[Address(RVA = "0x9E988C", Offset = "0x9E988C", VA = "0x9E988C")]
	public static extern int CSharp_DynamicSequenceStop__SWIG_0(uint jarg1, int jarg2, int jarg3);

	[PreserveSig]
	[Token(Token = "0x600051E")]
	[Address(RVA = "0x9E9998", Offset = "0x9E9998", VA = "0x9E9998")]
	public static extern int CSharp_DynamicSequenceStop__SWIG_1(uint jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x600051F")]
	[Address(RVA = "0x9E9A8C", Offset = "0x9E9A8C", VA = "0x9E9A8C")]
	public static extern int CSharp_DynamicSequenceStop__SWIG_2(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x6000520")]
	[Address(RVA = "0x9E9B70", Offset = "0x9E9B70", VA = "0x9E9B70")]
	public static extern int CSharp_DynamicSequenceBreak(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x6000521")]
	[Address(RVA = "0x9E9C6C", Offset = "0x9E9C6C", VA = "0x9E9C6C")]
	public static extern int CSharp_DynamicSequenceGetPauseTimes(uint jarg1, out uint jarg2, out uint jarg3);

	[PreserveSig]
	[Token(Token = "0x6000522")]
	[Address(RVA = "0x9E9DAC", Offset = "0x9E9DAC", VA = "0x9E9DAC")]
	public static extern IntPtr CSharp_DynamicSequenceLockPlaylist(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x6000523")]
	[Address(RVA = "0x9E9E90", Offset = "0x9E9E90", VA = "0x9E9E90")]
	public static extern int CSharp_DynamicSequenceUnlockPlaylist(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x6000524")]
	[Address(RVA = "0xA08240", Offset = "0xA08240", VA = "0xA08240")]
	public static extern IntPtr CSharp_new_AkOutputSettings__SWIG_0();

	[PreserveSig]
	[Token(Token = "0x6000525")]
	[Address(RVA = "0xA082B4", Offset = "0xA082B4", VA = "0xA082B4")]
	public static extern IntPtr CSharp_new_AkOutputSettings__SWIG_1(string jarg1, uint jarg2, IntPtr jarg3, int jarg4);

	[PreserveSig]
	[Token(Token = "0x6000526")]
	[Address(RVA = "0xA08374", Offset = "0xA08374", VA = "0xA08374")]
	public static extern IntPtr CSharp_new_AkOutputSettings__SWIG_2(string jarg1, uint jarg2, IntPtr jarg3);

	[PreserveSig]
	[Token(Token = "0x6000527")]
	[Address(RVA = "0xA08424", Offset = "0xA08424", VA = "0xA08424")]
	public static extern IntPtr CSharp_new_AkOutputSettings__SWIG_3(string jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000528")]
	[Address(RVA = "0xA084CC", Offset = "0xA084CC", VA = "0xA084CC")]
	public static extern IntPtr CSharp_new_AkOutputSettings__SWIG_4(string jarg1);

	[PreserveSig]
	[Token(Token = "0x6000529")]
	[Address(RVA = "0xA08564", Offset = "0xA08564", VA = "0xA08564")]
	public static extern void CSharp_AkOutputSettings_audioDeviceShareset_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x600052A")]
	[Address(RVA = "0xA085F4", Offset = "0xA085F4", VA = "0xA085F4")]
	public static extern uint CSharp_AkOutputSettings_audioDeviceShareset_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600052B")]
	[Address(RVA = "0xA08674", Offset = "0xA08674", VA = "0xA08674")]
	public static extern void CSharp_AkOutputSettings_idDevice_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x600052C")]
	[Address(RVA = "0xA08704", Offset = "0xA08704", VA = "0xA08704")]
	public static extern uint CSharp_AkOutputSettings_idDevice_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600052D")]
	[Address(RVA = "0xA08784", Offset = "0xA08784", VA = "0xA08784")]
	public static extern void CSharp_AkOutputSettings_ePanningRule_set(IntPtr jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x600052E")]
	[Address(RVA = "0xA08814", Offset = "0xA08814", VA = "0xA08814")]
	public static extern int CSharp_AkOutputSettings_ePanningRule_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600052F")]
	[Address(RVA = "0xA08894", Offset = "0xA08894", VA = "0xA08894")]
	public static extern void CSharp_AkOutputSettings_channelConfig_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000530")]
	[Address(RVA = "0xA08924", Offset = "0xA08924", VA = "0xA08924")]
	public static extern IntPtr CSharp_AkOutputSettings_channelConfig_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000531")]
	[Address(RVA = "0xA089A4", Offset = "0xA089A4", VA = "0xA089A4")]
	public static extern void CSharp_delete_AkOutputSettings(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000532")]
	[Address(RVA = "0xA08A24", Offset = "0xA08A24", VA = "0xA08A24")]
	public static extern void CSharp_AkTaskContext_uIdxThread_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000533")]
	[Address(RVA = "0xA08AB4", Offset = "0xA08AB4", VA = "0xA08AB4")]
	public static extern uint CSharp_AkTaskContext_uIdxThread_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000534")]
	[Address(RVA = "0xA08B34", Offset = "0xA08B34", VA = "0xA08B34")]
	public static extern IntPtr CSharp_new_AkTaskContext();

	[PreserveSig]
	[Token(Token = "0x6000535")]
	[Address(RVA = "0xA08BA8", Offset = "0xA08BA8", VA = "0xA08BA8")]
	public static extern void CSharp_delete_AkTaskContext(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000536")]
	[Address(RVA = "0xA08C28", Offset = "0xA08C28", VA = "0xA08C28")]
	public static extern void CSharp_AkInitSettings_uMaxNumPaths_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000537")]
	[Address(RVA = "0xA08CB8", Offset = "0xA08CB8", VA = "0xA08CB8")]
	public static extern uint CSharp_AkInitSettings_uMaxNumPaths_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000538")]
	[Address(RVA = "0xA08D38", Offset = "0xA08D38", VA = "0xA08D38")]
	public static extern void CSharp_AkInitSettings_uDefaultPoolSize_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000539")]
	[Address(RVA = "0xA08DC8", Offset = "0xA08DC8", VA = "0xA08DC8")]
	public static extern uint CSharp_AkInitSettings_uDefaultPoolSize_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600053A")]
	[Address(RVA = "0xA08E48", Offset = "0xA08E48", VA = "0xA08E48")]
	public static extern void CSharp_AkInitSettings_fDefaultPoolRatioThreshold_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x600053B")]
	[Address(RVA = "0xA08ED8", Offset = "0xA08ED8", VA = "0xA08ED8")]
	public static extern float CSharp_AkInitSettings_fDefaultPoolRatioThreshold_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600053C")]
	[Address(RVA = "0xA08F58", Offset = "0xA08F58", VA = "0xA08F58")]
	public static extern void CSharp_AkInitSettings_uCommandQueueSize_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x600053D")]
	[Address(RVA = "0xA08FE8", Offset = "0xA08FE8", VA = "0xA08FE8")]
	public static extern uint CSharp_AkInitSettings_uCommandQueueSize_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600053E")]
	[Address(RVA = "0xA09068", Offset = "0xA09068", VA = "0xA09068")]
	public static extern void CSharp_AkInitSettings_uPrepareEventMemoryPoolID_set(IntPtr jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x600053F")]
	[Address(RVA = "0xA090F8", Offset = "0xA090F8", VA = "0xA090F8")]
	public static extern int CSharp_AkInitSettings_uPrepareEventMemoryPoolID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000540")]
	[Address(RVA = "0xA09178", Offset = "0xA09178", VA = "0xA09178")]
	public static extern void CSharp_AkInitSettings_bEnableGameSyncPreparation_set(IntPtr jarg1, bool jarg2);

	[PreserveSig]
	[Token(Token = "0x6000541")]
	[Address(RVA = "0xA09208", Offset = "0xA09208", VA = "0xA09208")]
	public static extern bool CSharp_AkInitSettings_bEnableGameSyncPreparation_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000542")]
	[Address(RVA = "0xA09290", Offset = "0xA09290", VA = "0xA09290")]
	public static extern void CSharp_AkInitSettings_uContinuousPlaybackLookAhead_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000543")]
	[Address(RVA = "0xA09320", Offset = "0xA09320", VA = "0xA09320")]
	public static extern uint CSharp_AkInitSettings_uContinuousPlaybackLookAhead_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000544")]
	[Address(RVA = "0xA093A0", Offset = "0xA093A0", VA = "0xA093A0")]
	public static extern void CSharp_AkInitSettings_uNumSamplesPerFrame_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000545")]
	[Address(RVA = "0xA09430", Offset = "0xA09430", VA = "0xA09430")]
	public static extern uint CSharp_AkInitSettings_uNumSamplesPerFrame_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000546")]
	[Address(RVA = "0xA094B0", Offset = "0xA094B0", VA = "0xA094B0")]
	public static extern void CSharp_AkInitSettings_uMonitorPoolSize_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000547")]
	[Address(RVA = "0xA09540", Offset = "0xA09540", VA = "0xA09540")]
	public static extern uint CSharp_AkInitSettings_uMonitorPoolSize_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000548")]
	[Address(RVA = "0xA095C0", Offset = "0xA095C0", VA = "0xA095C0")]
	public static extern void CSharp_AkInitSettings_uMonitorQueuePoolSize_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000549")]
	[Address(RVA = "0xA09650", Offset = "0xA09650", VA = "0xA09650")]
	public static extern uint CSharp_AkInitSettings_uMonitorQueuePoolSize_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600054A")]
	[Address(RVA = "0xA096D0", Offset = "0xA096D0", VA = "0xA096D0")]
	public static extern void CSharp_AkInitSettings_settingsMainOutput_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x600054B")]
	[Address(RVA = "0xA09760", Offset = "0xA09760", VA = "0xA09760")]
	public static extern IntPtr CSharp_AkInitSettings_settingsMainOutput_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600054C")]
	[Address(RVA = "0xA097E0", Offset = "0xA097E0", VA = "0xA097E0")]
	public static extern void CSharp_AkInitSettings_uMaxHardwareTimeoutMs_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x600054D")]
	[Address(RVA = "0xA09870", Offset = "0xA09870", VA = "0xA09870")]
	public static extern uint CSharp_AkInitSettings_uMaxHardwareTimeoutMs_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600054E")]
	[Address(RVA = "0xA098F0", Offset = "0xA098F0", VA = "0xA098F0")]
	public static extern void CSharp_AkInitSettings_bUseSoundBankMgrThread_set(IntPtr jarg1, bool jarg2);

	[PreserveSig]
	[Token(Token = "0x600054F")]
	[Address(RVA = "0xA09980", Offset = "0xA09980", VA = "0xA09980")]
	public static extern bool CSharp_AkInitSettings_bUseSoundBankMgrThread_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000550")]
	[Address(RVA = "0xA09A08", Offset = "0xA09A08", VA = "0xA09A08")]
	public static extern void CSharp_AkInitSettings_bUseLEngineThread_set(IntPtr jarg1, bool jarg2);

	[PreserveSig]
	[Token(Token = "0x6000551")]
	[Address(RVA = "0xA09A98", Offset = "0xA09A98", VA = "0xA09A98")]
	public static extern bool CSharp_AkInitSettings_bUseLEngineThread_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000552")]
	[Address(RVA = "0xA09B20", Offset = "0xA09B20", VA = "0xA09B20")]
	public static extern void CSharp_AkInitSettings_szPluginDLLPath_set(IntPtr jarg1, string jarg2);

	[PreserveSig]
	[Token(Token = "0x6000553")]
	[Address(RVA = "0xA09BC4", Offset = "0xA09BC4", VA = "0xA09BC4")]
	public static extern IntPtr CSharp_AkInitSettings_szPluginDLLPath_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000554")]
	[Address(RVA = "0xA09C44", Offset = "0xA09C44", VA = "0xA09C44")]
	public static extern void CSharp_AkInitSettings_eFloorPlane_set(IntPtr jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x6000555")]
	[Address(RVA = "0xA09CD4", Offset = "0xA09CD4", VA = "0xA09CD4")]
	public static extern int CSharp_AkInitSettings_eFloorPlane_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000556")]
	[Address(RVA = "0xA09D54", Offset = "0xA09D54", VA = "0xA09D54")]
	public static extern void CSharp_AkInitSettings_fDebugOutOfRangeLimit_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6000557")]
	[Address(RVA = "0xA09DE4", Offset = "0xA09DE4", VA = "0xA09DE4")]
	public static extern float CSharp_AkInitSettings_fDebugOutOfRangeLimit_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000558")]
	[Address(RVA = "0xA09E64", Offset = "0xA09E64", VA = "0xA09E64")]
	public static extern void CSharp_AkInitSettings_bDebugOutOfRangeCheckEnabled_set(IntPtr jarg1, bool jarg2);

	[PreserveSig]
	[Token(Token = "0x6000559")]
	[Address(RVA = "0xA09EF4", Offset = "0xA09EF4", VA = "0xA09EF4")]
	public static extern bool CSharp_AkInitSettings_bDebugOutOfRangeCheckEnabled_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600055A")]
	[Address(RVA = "0xA09F7C", Offset = "0xA09F7C", VA = "0xA09F7C")]
	public static extern IntPtr CSharp_new_AkInitSettings();

	[PreserveSig]
	[Token(Token = "0x600055B")]
	[Address(RVA = "0xA09FF0", Offset = "0xA09FF0", VA = "0xA09FF0")]
	public static extern void CSharp_delete_AkInitSettings(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600055C")]
	[Address(RVA = "0xA0A070", Offset = "0xA0A070", VA = "0xA0A070")]
	public static extern void CSharp_AkSourceSettings_sourceID_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x600055D")]
	[Address(RVA = "0xA0A100", Offset = "0xA0A100", VA = "0xA0A100")]
	public static extern uint CSharp_AkSourceSettings_sourceID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600055E")]
	[Address(RVA = "0xA0A180", Offset = "0xA0A180", VA = "0xA0A180")]
	public static extern void CSharp_AkSourceSettings_pMediaMemory_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x600055F")]
	[Address(RVA = "0xA0A210", Offset = "0xA0A210", VA = "0xA0A210")]
	public static extern IntPtr CSharp_AkSourceSettings_pMediaMemory_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000560")]
	[Address(RVA = "0xA0A290", Offset = "0xA0A290", VA = "0xA0A290")]
	public static extern void CSharp_AkSourceSettings_uMediaSize_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000561")]
	[Address(RVA = "0xA0A320", Offset = "0xA0A320", VA = "0xA0A320")]
	public static extern uint CSharp_AkSourceSettings_uMediaSize_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000562")]
	[Address(RVA = "0xA0A3A0", Offset = "0xA0A3A0", VA = "0xA0A3A0")]
	public static extern void CSharp_AkSourceSettings_Clear(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000563")]
	[Address(RVA = "0xA0A420", Offset = "0xA0A420", VA = "0xA0A420")]
	public static extern int CSharp_AkSourceSettings_GetSizeOf();

	[PreserveSig]
	[Token(Token = "0x6000564")]
	[Address(RVA = "0xA0A494", Offset = "0xA0A494", VA = "0xA0A494")]
	public static extern void CSharp_AkSourceSettings_Clone(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000565")]
	[Address(RVA = "0xA0A524", Offset = "0xA0A524", VA = "0xA0A524")]
	public static extern IntPtr CSharp_new_AkSourceSettings();

	[PreserveSig]
	[Token(Token = "0x6000566")]
	[Address(RVA = "0xA0A598", Offset = "0xA0A598", VA = "0xA0A598")]
	public static extern void CSharp_delete_AkSourceSettings(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000567")]
	[Address(RVA = "0x9E9F6C", Offset = "0x9E9F6C", VA = "0x9E9F6C")]
	public static extern bool CSharp_IsInitialized();

	[PreserveSig]
	[Token(Token = "0x6000568")]
	[Address(RVA = "0x9EA060", Offset = "0x9EA060", VA = "0x9EA060")]
	public static extern int CSharp_GetAudioSettings(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000569")]
	[Address(RVA = "0x9EA178", Offset = "0x9EA178", VA = "0x9EA178")]
	public static extern IntPtr CSharp_GetSpeakerConfiguration__SWIG_0(ulong jarg1);

	[PreserveSig]
	[Token(Token = "0x600056A")]
	[Address(RVA = "0x9EA288", Offset = "0x9EA288", VA = "0x9EA288")]
	public static extern IntPtr CSharp_GetSpeakerConfiguration__SWIG_1();

	[PreserveSig]
	[Token(Token = "0x600056B")]
	[Address(RVA = "0x9EA370", Offset = "0x9EA370", VA = "0x9EA370")]
	public static extern int CSharp_GetPanningRule__SWIG_0(out int jarg1, ulong jarg2);

	[PreserveSig]
	[Token(Token = "0x600056C")]
	[Address(RVA = "0x9EA464", Offset = "0x9EA464", VA = "0x9EA464")]
	public static extern int CSharp_GetPanningRule__SWIG_1(out int jarg1);

	[PreserveSig]
	[Token(Token = "0x600056D")]
	[Address(RVA = "0x9EA558", Offset = "0x9EA558", VA = "0x9EA558")]
	public static extern int CSharp_SetPanningRule__SWIG_0(int jarg1, ulong jarg2);

	[PreserveSig]
	[Token(Token = "0x600056E")]
	[Address(RVA = "0x9EA64C", Offset = "0x9EA64C", VA = "0x9EA64C")]
	public static extern int CSharp_SetPanningRule__SWIG_1(int jarg1);

	[PreserveSig]
	[Token(Token = "0x600056F")]
	[Address(RVA = "0x9EA758", Offset = "0x9EA758", VA = "0x9EA758")]
	public static extern int CSharp_GetSpeakerAngles__SWIG_0([In][Out] float[] jarg1, ref uint jarg2, out float jarg3, ulong jarg4);

	[PreserveSig]
	[Token(Token = "0x6000570")]
	[Address(RVA = "0x9EA884", Offset = "0x9EA884", VA = "0x9EA884")]
	public static extern int CSharp_GetSpeakerAngles__SWIG_1([In][Out] float[] jarg1, ref uint jarg2, out float jarg3);

	[PreserveSig]
	[Token(Token = "0x6000571")]
	[Address(RVA = "0x9EA9B0", Offset = "0x9EA9B0", VA = "0x9EA9B0")]
	public static extern int CSharp_SetSpeakerAngles__SWIG_0([In] float[] jarg1, uint jarg2, float jarg3, ulong jarg4);

	[PreserveSig]
	[Token(Token = "0x6000572")]
	[Address(RVA = "0x9EAAE4", Offset = "0x9EAAE4", VA = "0x9EAAE4")]
	public static extern int CSharp_SetSpeakerAngles__SWIG_1([In] float[] jarg1, uint jarg2, float jarg3);

	[PreserveSig]
	[Token(Token = "0x6000573")]
	[Address(RVA = "0x9EABF8", Offset = "0x9EABF8", VA = "0x9EABF8")]
	public static extern int CSharp_SetVolumeThreshold(float jarg1);

	[PreserveSig]
	[Token(Token = "0x6000574")]
	[Address(RVA = "0x9EACE4", Offset = "0x9EACE4", VA = "0x9EACE4")]
	public static extern int CSharp_SetMaxNumVoicesLimit(ushort jarg1);

	[PreserveSig]
	[Token(Token = "0x6000575")]
	[Address(RVA = "0x9EADC8", Offset = "0x9EADC8", VA = "0x9EADC8")]
	public static extern int CSharp_RenderAudio__SWIG_0(bool jarg1);

	[PreserveSig]
	[Token(Token = "0x6000576")]
	[Address(RVA = "0x9EAEA4", Offset = "0x9EAEA4", VA = "0x9EAEA4")]
	public static extern int CSharp_RenderAudio__SWIG_1();

	[PreserveSig]
	[Token(Token = "0x6000577")]
	[Address(RVA = "0x9EAF8C", Offset = "0x9EAF8C", VA = "0x9EAF8C")]
	public static extern int CSharp_RegisterPluginDLL__SWIG_0(string jarg1, string jarg2);

	[PreserveSig]
	[Token(Token = "0x6000578")]
	[Address(RVA = "0x9EB0B0", Offset = "0x9EB0B0", VA = "0x9EB0B0")]
	public static extern int CSharp_RegisterPluginDLL__SWIG_1(string jarg1);

	[PreserveSig]
	[Token(Token = "0x6000579")]
	[Address(RVA = "0x9EB1AC", Offset = "0x9EB1AC", VA = "0x9EB1AC")]
	public static extern uint CSharp_GetIDFromString(string jarg1);

	[PreserveSig]
	[Token(Token = "0x600057A")]
	[Address(RVA = "0x9EB3DC", Offset = "0x9EB3DC", VA = "0x9EB3DC")]
	public static extern uint CSharp_PostEvent__SWIG_0(uint jarg1, ulong jarg2, uint jarg3, IntPtr jarg4, IntPtr jarg5, uint jarg6, IntPtr jarg7, uint jarg8);

	[PreserveSig]
	[Token(Token = "0x600057B")]
	[Address(RVA = "0x9EB63C", Offset = "0x9EB63C", VA = "0x9EB63C")]
	public static extern uint CSharp_PostEvent__SWIG_1(uint jarg1, ulong jarg2, uint jarg3, IntPtr jarg4, IntPtr jarg5, uint jarg6, IntPtr jarg7);

	[PreserveSig]
	[Token(Token = "0x600057C")]
	[Address(RVA = "0x9EB868", Offset = "0x9EB868", VA = "0x9EB868")]
	public static extern uint CSharp_PostEvent__SWIG_2(uint jarg1, ulong jarg2, uint jarg3, IntPtr jarg4, IntPtr jarg5);

	[PreserveSig]
	[Token(Token = "0x600057D")]
	[Address(RVA = "0x9EBA00", Offset = "0x9EBA00", VA = "0x9EBA00")]
	public static extern uint CSharp_PostEvent__SWIG_3(uint jarg1, ulong jarg2);

	[PreserveSig]
	[Token(Token = "0x600057E")]
	[Address(RVA = "0x9EBC28", Offset = "0x9EBC28", VA = "0x9EBC28")]
	public static extern uint CSharp_PostEvent__SWIG_4(string jarg1, ulong jarg2, uint jarg3, IntPtr jarg4, IntPtr jarg5, uint jarg6, IntPtr jarg7, uint jarg8);

	[PreserveSig]
	[Token(Token = "0x600057F")]
	[Address(RVA = "0x9EBEA0", Offset = "0x9EBEA0", VA = "0x9EBEA0")]
	public static extern uint CSharp_PostEvent__SWIG_5(string jarg1, ulong jarg2, uint jarg3, IntPtr jarg4, IntPtr jarg5, uint jarg6, IntPtr jarg7);

	[PreserveSig]
	[Token(Token = "0x6000580")]
	[Address(RVA = "0x9EC0E4", Offset = "0x9EC0E4", VA = "0x9EC0E4")]
	public static extern uint CSharp_PostEvent__SWIG_6(string jarg1, ulong jarg2, uint jarg3, IntPtr jarg4, IntPtr jarg5);

	[PreserveSig]
	[Token(Token = "0x6000581")]
	[Address(RVA = "0x9EC294", Offset = "0x9EC294", VA = "0x9EC294")]
	public static extern uint CSharp_PostEvent__SWIG_7(string jarg1, ulong jarg2);

	[PreserveSig]
	[Token(Token = "0x6000582")]
	[Address(RVA = "0x9EC418", Offset = "0x9EC418", VA = "0x9EC418")]
	public static extern int CSharp_ExecuteActionOnEvent__SWIG_0(uint jarg1, int jarg2, ulong jarg3, int jarg4, int jarg5, uint jarg6);

	[PreserveSig]
	[Token(Token = "0x6000583")]
	[Address(RVA = "0x9EC5A4", Offset = "0x9EC5A4", VA = "0x9EC5A4")]
	public static extern int CSharp_ExecuteActionOnEvent__SWIG_1(uint jarg1, int jarg2, ulong jarg3, int jarg4, int jarg5);

	[PreserveSig]
	[Token(Token = "0x6000584")]
	[Address(RVA = "0x9EC718", Offset = "0x9EC718", VA = "0x9EC718")]
	public static extern int CSharp_ExecuteActionOnEvent__SWIG_2(uint jarg1, int jarg2, ulong jarg3, int jarg4);

	[PreserveSig]
	[Token(Token = "0x6000585")]
	[Address(RVA = "0x9EC874", Offset = "0x9EC874", VA = "0x9EC874")]
	public static extern int CSharp_ExecuteActionOnEvent__SWIG_3(uint jarg1, int jarg2, ulong jarg3);

	[PreserveSig]
	[Token(Token = "0x6000586")]
	[Address(RVA = "0x9EC980", Offset = "0x9EC980", VA = "0x9EC980")]
	public static extern int CSharp_ExecuteActionOnEvent__SWIG_4(uint jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x6000587")]
	[Address(RVA = "0x9ECAEC", Offset = "0x9ECAEC", VA = "0x9ECAEC")]
	public static extern int CSharp_ExecuteActionOnEvent__SWIG_5(string jarg1, int jarg2, ulong jarg3, int jarg4, int jarg5, uint jarg6);

	[PreserveSig]
	[Token(Token = "0x6000588")]
	[Address(RVA = "0x9ECC90", Offset = "0x9ECC90", VA = "0x9ECC90")]
	public static extern int CSharp_ExecuteActionOnEvent__SWIG_6(string jarg1, int jarg2, ulong jarg3, int jarg4, int jarg5);

	[PreserveSig]
	[Token(Token = "0x6000589")]
	[Address(RVA = "0x9ECE1C", Offset = "0x9ECE1C", VA = "0x9ECE1C")]
	public static extern int CSharp_ExecuteActionOnEvent__SWIG_7(string jarg1, int jarg2, ulong jarg3, int jarg4);

	[PreserveSig]
	[Token(Token = "0x600058A")]
	[Address(RVA = "0x9ECF90", Offset = "0x9ECF90", VA = "0x9ECF90")]
	public static extern int CSharp_ExecuteActionOnEvent__SWIG_8(string jarg1, int jarg2, ulong jarg3);

	[PreserveSig]
	[Token(Token = "0x600058B")]
	[Address(RVA = "0x9ED0B4", Offset = "0x9ED0B4", VA = "0x9ED0B4")]
	public static extern int CSharp_ExecuteActionOnEvent__SWIG_9(string jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x600058C")]
	[Address(RVA = "0x9ED22C", Offset = "0x9ED22C", VA = "0x9ED22C")]
	public static extern int CSharp_PostMIDIOnEvent(uint jarg1, ulong jarg2, IntPtr jarg3, ushort jarg4);

	[PreserveSig]
	[Token(Token = "0x600058D")]
	[Address(RVA = "0x9ED380", Offset = "0x9ED380", VA = "0x9ED380")]
	public static extern int CSharp_StopMIDIOnEvent__SWIG_0(uint jarg1, ulong jarg2);

	[PreserveSig]
	[Token(Token = "0x600058E")]
	[Address(RVA = "0x9ED474", Offset = "0x9ED474", VA = "0x9ED474")]
	public static extern int CSharp_StopMIDIOnEvent__SWIG_1(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x600058F")]
	[Address(RVA = "0x9ED550", Offset = "0x9ED550", VA = "0x9ED550")]
	public static extern int CSharp_StopMIDIOnEvent__SWIG_2();

	[PreserveSig]
	[Token(Token = "0x6000590")]
	[Address(RVA = "0x9ED640", Offset = "0x9ED640", VA = "0x9ED640")]
	public static extern int CSharp_PinEventInStreamCache__SWIG_0(uint jarg1, sbyte jarg2, sbyte jarg3);

	[PreserveSig]
	[Token(Token = "0x6000591")]
	[Address(RVA = "0x9ED754", Offset = "0x9ED754", VA = "0x9ED754")]
	public static extern int CSharp_PinEventInStreamCache__SWIG_1(string jarg1, sbyte jarg2, sbyte jarg3);

	[PreserveSig]
	[Token(Token = "0x6000592")]
	[Address(RVA = "0x9ED868", Offset = "0x9ED868", VA = "0x9ED868")]
	public static extern int CSharp_UnpinEventInStreamCache__SWIG_0(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x6000593")]
	[Address(RVA = "0x9ED94C", Offset = "0x9ED94C", VA = "0x9ED94C")]
	public static extern int CSharp_UnpinEventInStreamCache__SWIG_1(string jarg1);

	[PreserveSig]
	[Token(Token = "0x6000594")]
	[Address(RVA = "0x9EDA60", Offset = "0x9EDA60", VA = "0x9EDA60")]
	public static extern int CSharp_GetBufferStatusForPinnedEvent__SWIG_0(uint jarg1, out float jarg2, out int jarg3);

	[PreserveSig]
	[Token(Token = "0x6000595")]
	[Address(RVA = "0x9EDB74", Offset = "0x9EDB74", VA = "0x9EDB74")]
	public static extern int CSharp_GetBufferStatusForPinnedEvent__SWIG_1(string jarg1, out float jarg2, out int jarg3);

	[PreserveSig]
	[Token(Token = "0x6000596")]
	[Address(RVA = "0x9EDCF0", Offset = "0x9EDCF0", VA = "0x9EDCF0")]
	public static extern int CSharp_SeekOnEvent__SWIG_0(uint jarg1, ulong jarg2, int jarg3, bool jarg4, uint jarg5);

	[PreserveSig]
	[Token(Token = "0x6000597")]
	[Address(RVA = "0x9EDE64", Offset = "0x9EDE64", VA = "0x9EDE64")]
	public static extern int CSharp_SeekOnEvent__SWIG_1(uint jarg1, ulong jarg2, int jarg3, bool jarg4);

	[PreserveSig]
	[Token(Token = "0x6000598")]
	[Address(RVA = "0x9EDFC0", Offset = "0x9EDFC0", VA = "0x9EDFC0")]
	public static extern int CSharp_SeekOnEvent__SWIG_2(uint jarg1, ulong jarg2, int jarg3);

	[PreserveSig]
	[Token(Token = "0x6000599")]
	[Address(RVA = "0x9EE124", Offset = "0x9EE124", VA = "0x9EE124")]
	public static extern int CSharp_SeekOnEvent__SWIG_3(string jarg1, ulong jarg2, int jarg3, bool jarg4, uint jarg5);

	[PreserveSig]
	[Token(Token = "0x600059A")]
	[Address(RVA = "0x9EE2B0", Offset = "0x9EE2B0", VA = "0x9EE2B0")]
	public static extern int CSharp_SeekOnEvent__SWIG_4(string jarg1, ulong jarg2, int jarg3, bool jarg4);

	[PreserveSig]
	[Token(Token = "0x600059B")]
	[Address(RVA = "0x9EE424", Offset = "0x9EE424", VA = "0x9EE424")]
	public static extern int CSharp_SeekOnEvent__SWIG_5(string jarg1, ulong jarg2, int jarg3);

	[PreserveSig]
	[Token(Token = "0x600059C")]
	[Address(RVA = "0x9EE5A8", Offset = "0x9EE5A8", VA = "0x9EE5A8")]
	public static extern int CSharp_SeekOnEvent__SWIG_6(uint jarg1, ulong jarg2, float jarg3, bool jarg4, uint jarg5);

	[PreserveSig]
	[Token(Token = "0x600059D")]
	[Address(RVA = "0x9EE724", Offset = "0x9EE724", VA = "0x9EE724")]
	public static extern int CSharp_SeekOnEvent__SWIG_7(uint jarg1, ulong jarg2, float jarg3, bool jarg4);

	[PreserveSig]
	[Token(Token = "0x600059E")]
	[Address(RVA = "0x9EE888", Offset = "0x9EE888", VA = "0x9EE888")]
	public static extern int CSharp_SeekOnEvent__SWIG_8(uint jarg1, ulong jarg2, float jarg3);

	[PreserveSig]
	[Token(Token = "0x600059F")]
	[Address(RVA = "0x9EE9FC", Offset = "0x9EE9FC", VA = "0x9EE9FC")]
	public static extern int CSharp_SeekOnEvent__SWIG_9(string jarg1, ulong jarg2, float jarg3, bool jarg4, uint jarg5);

	[PreserveSig]
	[Token(Token = "0x60005A0")]
	[Address(RVA = "0x9EEB90", Offset = "0x9EEB90", VA = "0x9EEB90")]
	public static extern int CSharp_SeekOnEvent__SWIG_10(string jarg1, ulong jarg2, float jarg3, bool jarg4);

	[PreserveSig]
	[Token(Token = "0x60005A1")]
	[Address(RVA = "0x9EED0C", Offset = "0x9EED0C", VA = "0x9EED0C")]
	public static extern int CSharp_SeekOnEvent__SWIG_11(string jarg1, ulong jarg2, float jarg3);

	[PreserveSig]
	[Token(Token = "0x60005A2")]
	[Address(RVA = "0xA0A618", Offset = "0xA0A618", VA = "0xA0A618")]
	public static extern void CSharp_CancelEventCallbackCookie(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60005A3")]
	[Address(RVA = "0x9EEEC8", Offset = "0x9EEEC8", VA = "0x9EEEC8")]
	public static extern void CSharp_CancelEventCallbackGameObject(ulong jarg1);

	[PreserveSig]
	[Token(Token = "0x60005A4")]
	[Address(RVA = "0xA0A698", Offset = "0xA0A698", VA = "0xA0A698")]
	public static extern void CSharp_CancelEventCallback(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x60005A5")]
	[Address(RVA = "0x9EF02C", Offset = "0x9EF02C", VA = "0x9EF02C")]
	public static extern int CSharp_GetSourcePlayPosition__SWIG_0(uint jarg1, out int jarg2, bool jarg3);

	[PreserveSig]
	[Token(Token = "0x60005A6")]
	[Address(RVA = "0x9EF138", Offset = "0x9EF138", VA = "0x9EF138")]
	public static extern int CSharp_GetSourcePlayPosition__SWIG_1(uint jarg1, out int jarg2);

	[PreserveSig]
	[Token(Token = "0x60005A7")]
	[Address(RVA = "0x9EF244", Offset = "0x9EF244", VA = "0x9EF244")]
	public static extern int CSharp_GetSourceStreamBuffering(uint jarg1, out int jarg2, out int jarg3);

	[PreserveSig]
	[Token(Token = "0x60005A8")]
	[Address(RVA = "0x9EF378", Offset = "0x9EF378", VA = "0x9EF378")]
	public static extern void CSharp_StopAll__SWIG_0(ulong jarg1);

	[PreserveSig]
	[Token(Token = "0x60005A9")]
	[Address(RVA = "0x9EF454", Offset = "0x9EF454", VA = "0x9EF454")]
	public static extern void CSharp_StopAll__SWIG_1();

	[PreserveSig]
	[Token(Token = "0x60005AA")]
	[Address(RVA = "0x9EF540", Offset = "0x9EF540", VA = "0x9EF540")]
	public static extern void CSharp_StopPlayingID__SWIG_0(uint jarg1, int jarg2, int jarg3);

	[PreserveSig]
	[Token(Token = "0x60005AB")]
	[Address(RVA = "0x9EF64C", Offset = "0x9EF64C", VA = "0x9EF64C")]
	public static extern void CSharp_StopPlayingID__SWIG_1(uint jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x60005AC")]
	[Address(RVA = "0x9EF740", Offset = "0x9EF740", VA = "0x9EF740")]
	public static extern void CSharp_StopPlayingID__SWIG_2(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x60005AD")]
	[Address(RVA = "0x9EF84C", Offset = "0x9EF84C", VA = "0x9EF84C")]
	public static extern void CSharp_ExecuteActionOnPlayingID__SWIG_0(int jarg1, uint jarg2, int jarg3, int jarg4);

	[PreserveSig]
	[Token(Token = "0x60005AE")]
	[Address(RVA = "0x9EF970", Offset = "0x9EF970", VA = "0x9EF970")]
	public static extern void CSharp_ExecuteActionOnPlayingID__SWIG_1(int jarg1, uint jarg2, int jarg3);

	[PreserveSig]
	[Token(Token = "0x60005AF")]
	[Address(RVA = "0x9EFA7C", Offset = "0x9EFA7C", VA = "0x9EFA7C")]
	public static extern void CSharp_ExecuteActionOnPlayingID__SWIG_2(int jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x60005B0")]
	[Address(RVA = "0x9EFB70", Offset = "0x9EFB70", VA = "0x9EFB70")]
	public static extern void CSharp_SetRandomSeed(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x60005B1")]
	[Address(RVA = "0x9EFC54", Offset = "0x9EFC54", VA = "0x9EFC54")]
	public static extern void CSharp_MuteBackgroundMusic(bool jarg1);

	[PreserveSig]
	[Token(Token = "0x60005B2")]
	[Address(RVA = "0x9EFD30", Offset = "0x9EFD30", VA = "0x9EFD30")]
	public static extern bool CSharp_GetBackgroundMusicMute();

	[PreserveSig]
	[Token(Token = "0x60005B3")]
	[Address(RVA = "0x9EFE90", Offset = "0x9EFE90", VA = "0x9EFE90")]
	public static extern int CSharp_SendPluginCustomGameData(uint jarg1, ulong jarg2, int jarg3, uint jarg4, uint jarg5, IntPtr jarg6, uint jarg7);

	[PreserveSig]
	[Token(Token = "0x60005B4")]
	[Address(RVA = "0x9EFFB4", Offset = "0x9EFFB4", VA = "0x9EFFB4")]
	public static extern int CSharp_UnregisterAllGameObj();

	[PreserveSig]
	[Token(Token = "0x60005B5")]
	[Address(RVA = "0x9F00EC", Offset = "0x9F00EC", VA = "0x9F00EC")]
	public static extern int CSharp_SetMultiplePositions__SWIG_0(ulong jarg1, IntPtr jarg2, ushort jarg3, int jarg4);

	[PreserveSig]
	[Token(Token = "0x60005B6")]
	[Address(RVA = "0x9F0248", Offset = "0x9F0248", VA = "0x9F0248")]
	public static extern int CSharp_SetMultiplePositions__SWIG_1(ulong jarg1, IntPtr jarg2, ushort jarg3);

	[PreserveSig]
	[Token(Token = "0x60005B7")]
	[Address(RVA = "0x9F03A4", Offset = "0x9F03A4", VA = "0x9F03A4")]
	public static extern int CSharp_SetMultiplePositions__SWIG_2(ulong jarg1, IntPtr jarg2, ushort jarg3, int jarg4);

	[PreserveSig]
	[Token(Token = "0x60005B8")]
	[Address(RVA = "0x9F0500", Offset = "0x9F0500", VA = "0x9F0500")]
	public static extern int CSharp_SetMultiplePositions__SWIG_3(ulong jarg1, IntPtr jarg2, ushort jarg3);

	[PreserveSig]
	[Token(Token = "0x60005B9")]
	[Address(RVA = "0x9F063C", Offset = "0x9F063C", VA = "0x9F063C")]
	public static extern int CSharp_SetScalingFactor(ulong jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x60005BA")]
	[Address(RVA = "0x9F0728", Offset = "0x9F0728", VA = "0x9F0728")]
	public static extern int CSharp_ClearBanks();

	[PreserveSig]
	[Token(Token = "0x60005BB")]
	[Address(RVA = "0x9F0810", Offset = "0x9F0810", VA = "0x9F0810")]
	public static extern int CSharp_SetBankLoadIOSettings(float jarg1, sbyte jarg2);

	[PreserveSig]
	[Token(Token = "0x60005BC")]
	[Address(RVA = "0x9F091C", Offset = "0x9F091C", VA = "0x9F091C")]
	public static extern int CSharp_LoadBank__SWIG_0(string jarg1, int jarg2, out uint jarg3);

	[PreserveSig]
	[Token(Token = "0x60005BD")]
	[Address(RVA = "0x9F0A40", Offset = "0x9F0A40", VA = "0x9F0A40")]
	public static extern int CSharp_LoadBank__SWIG_1(uint jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x60005BE")]
	[Address(RVA = "0x9F0B4C", Offset = "0x9F0B4C", VA = "0x9F0B4C")]
	public static extern int CSharp_LoadBank__SWIG_2(IntPtr jarg1, uint jarg2, out uint jarg3);

	[PreserveSig]
	[Token(Token = "0x60005BF")]
	[Address(RVA = "0x9F0C70", Offset = "0x9F0C70", VA = "0x9F0C70")]
	public static extern int CSharp_LoadBank__SWIG_3(IntPtr jarg1, uint jarg2, int jarg3, out uint jarg4);

	[PreserveSig]
	[Token(Token = "0x60005C0")]
	[Address(RVA = "0x9F0DF8", Offset = "0x9F0DF8", VA = "0x9F0DF8")]
	public static extern int CSharp_LoadBank__SWIG_4(string jarg1, IntPtr jarg2, IntPtr jarg3, int jarg4, out uint jarg5);

	[PreserveSig]
	[Token(Token = "0x60005C1")]
	[Address(RVA = "0x9F0F98", Offset = "0x9F0F98", VA = "0x9F0F98")]
	public static extern int CSharp_LoadBank__SWIG_5(uint jarg1, IntPtr jarg2, IntPtr jarg3, int jarg4);

	[PreserveSig]
	[Token(Token = "0x60005C2")]
	[Address(RVA = "0x9F1120", Offset = "0x9F1120", VA = "0x9F1120")]
	public static extern int CSharp_LoadBank__SWIG_6(IntPtr jarg1, uint jarg2, IntPtr jarg3, IntPtr jarg4, out uint jarg5);

	[PreserveSig]
	[Token(Token = "0x60005C3")]
	[Address(RVA = "0x9F12C0", Offset = "0x9F12C0", VA = "0x9F12C0")]
	public static extern int CSharp_LoadBank__SWIG_7(IntPtr jarg1, uint jarg2, IntPtr jarg3, IntPtr jarg4, int jarg5, out uint jarg6);

	[PreserveSig]
	[Token(Token = "0x60005C4")]
	[Address(RVA = "0x9F13FC", Offset = "0x9F13FC", VA = "0x9F13FC")]
	public static extern int CSharp_UnloadBank__SWIG_0(string jarg1, IntPtr jarg2, out int jarg3);

	[PreserveSig]
	[Token(Token = "0x60005C5")]
	[Address(RVA = "0x9F1520", Offset = "0x9F1520", VA = "0x9F1520")]
	public static extern int CSharp_UnloadBank__SWIG_1(string jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x60005C6")]
	[Address(RVA = "0x9F1644", Offset = "0x9F1644", VA = "0x9F1644")]
	public static extern int CSharp_UnloadBank__SWIG_2(uint jarg1, IntPtr jarg2, out int jarg3);

	[PreserveSig]
	[Token(Token = "0x60005C7")]
	[Address(RVA = "0x9F1750", Offset = "0x9F1750", VA = "0x9F1750")]
	public static extern int CSharp_UnloadBank__SWIG_3(uint jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x60005C8")]
	[Address(RVA = "0x9F18B8", Offset = "0x9F18B8", VA = "0x9F18B8")]
	public static extern int CSharp_UnloadBank__SWIG_4(string jarg1, IntPtr jarg2, IntPtr jarg3, IntPtr jarg4);

	[PreserveSig]
	[Token(Token = "0x60005C9")]
	[Address(RVA = "0x9F1A50", Offset = "0x9F1A50", VA = "0x9F1A50")]
	public static extern int CSharp_UnloadBank__SWIG_5(uint jarg1, IntPtr jarg2, IntPtr jarg3, IntPtr jarg4);

	[PreserveSig]
	[Token(Token = "0x60005CA")]
	[Address(RVA = "0xA0A718", Offset = "0xA0A718", VA = "0xA0A718")]
	public static extern void CSharp_CancelBankCallbackCookie(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60005CB")]
	[Address(RVA = "0x9F1BDC", Offset = "0x9F1BDC", VA = "0x9F1BDC")]
	public static extern int CSharp_PrepareBank__SWIG_0(int jarg1, string jarg2, int jarg3);

	[PreserveSig]
	[Token(Token = "0x60005CC")]
	[Address(RVA = "0x9F1D04", Offset = "0x9F1D04", VA = "0x9F1D04")]
	public static extern int CSharp_PrepareBank__SWIG_1(int jarg1, string jarg2);

	[PreserveSig]
	[Token(Token = "0x60005CD")]
	[Address(RVA = "0x9F1E2C", Offset = "0x9F1E2C", VA = "0x9F1E2C")]
	public static extern int CSharp_PrepareBank__SWIG_2(int jarg1, uint jarg2, int jarg3);

	[PreserveSig]
	[Token(Token = "0x60005CE")]
	[Address(RVA = "0x9F1F38", Offset = "0x9F1F38", VA = "0x9F1F38")]
	public static extern int CSharp_PrepareBank__SWIG_3(int jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x60005CF")]
	[Address(RVA = "0x9F20A8", Offset = "0x9F20A8", VA = "0x9F20A8")]
	public static extern int CSharp_PrepareBank__SWIG_4(int jarg1, string jarg2, IntPtr jarg3, IntPtr jarg4, int jarg5);

	[PreserveSig]
	[Token(Token = "0x60005D0")]
	[Address(RVA = "0x9F224C", Offset = "0x9F224C", VA = "0x9F224C")]
	public static extern int CSharp_PrepareBank__SWIG_5(int jarg1, string jarg2, IntPtr jarg3, IntPtr jarg4);

	[PreserveSig]
	[Token(Token = "0x60005D1")]
	[Address(RVA = "0x9F23F0", Offset = "0x9F23F0", VA = "0x9F23F0")]
	public static extern int CSharp_PrepareBank__SWIG_6(int jarg1, uint jarg2, IntPtr jarg3, IntPtr jarg4, int jarg5);

	[PreserveSig]
	[Token(Token = "0x60005D2")]
	[Address(RVA = "0x9F2578", Offset = "0x9F2578", VA = "0x9F2578")]
	public static extern int CSharp_PrepareBank__SWIG_7(int jarg1, uint jarg2, IntPtr jarg3, IntPtr jarg4);

	[PreserveSig]
	[Token(Token = "0x60005D3")]
	[Address(RVA = "0x9F267C", Offset = "0x9F267C", VA = "0x9F267C")]
	public static extern int CSharp_ClearPreparedEvents();

	[PreserveSig]
	[Token(Token = "0x60005D4")]
	[Address(RVA = "0x9F2988", Offset = "0x9F2988", VA = "0x9F2988")]
	public static extern int CSharp_PrepareEvent__SWIG_0(int jarg1, IntPtr jarg2, uint jarg3);

	[PreserveSig]
	[Token(Token = "0x60005D5")]
	[Address(RVA = "0x9F2A9C", Offset = "0x9F2A9C", VA = "0x9F2A9C")]
	public static extern int CSharp_PrepareEvent__SWIG_1(int jarg1, [In] uint[] jarg2, uint jarg3);

	[PreserveSig]
	[Token(Token = "0x60005D6")]
	[Address(RVA = "0x9F2E38", Offset = "0x9F2E38", VA = "0x9F2E38")]
	public static extern int CSharp_PrepareEvent__SWIG_2(int jarg1, IntPtr jarg2, uint jarg3, IntPtr jarg4, IntPtr jarg5);

	[PreserveSig]
	[Token(Token = "0x60005D7")]
	[Address(RVA = "0x9F2FC8", Offset = "0x9F2FC8", VA = "0x9F2FC8")]
	public static extern int CSharp_PrepareEvent__SWIG_3(int jarg1, [In] uint[] jarg2, uint jarg3, IntPtr jarg4, IntPtr jarg5);

	[PreserveSig]
	[Token(Token = "0x60005D8")]
	[Address(RVA = "0x9F3100", Offset = "0x9F3100", VA = "0x9F3100")]
	public static extern int CSharp_SetMedia(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x60005D9")]
	[Address(RVA = "0x9F3210", Offset = "0x9F3210", VA = "0x9F3210")]
	public static extern int CSharp_UnsetMedia(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x60005DA")]
	[Address(RVA = "0x9F3548", Offset = "0x9F3548", VA = "0x9F3548")]
	public static extern int CSharp_PrepareGameSyncs__SWIG_0(int jarg1, int jarg2, string jarg3, IntPtr jarg4, uint jarg5);

	[PreserveSig]
	[Token(Token = "0x60005DB")]
	[Address(RVA = "0x9F36A8", Offset = "0x9F36A8", VA = "0x9F36A8")]
	public static extern int CSharp_PrepareGameSyncs__SWIG_1(int jarg1, int jarg2, uint jarg3, [In] uint[] jarg4, uint jarg5);

	[PreserveSig]
	[Token(Token = "0x60005DC")]
	[Address(RVA = "0x9F3A6C", Offset = "0x9F3A6C", VA = "0x9F3A6C")]
	public static extern int CSharp_PrepareGameSyncs__SWIG_2(int jarg1, int jarg2, string jarg3, IntPtr jarg4, uint jarg5, IntPtr jarg6, IntPtr jarg7);

	[PreserveSig]
	[Token(Token = "0x60005DD")]
	[Address(RVA = "0x9F3C48", Offset = "0x9F3C48", VA = "0x9F3C48")]
	public static extern int CSharp_PrepareGameSyncs__SWIG_3(int jarg1, int jarg2, uint jarg3, [In] uint[] jarg4, uint jarg5, IntPtr jarg6, IntPtr jarg7);

	[PreserveSig]
	[Token(Token = "0x60005DE")]
	[Address(RVA = "0x9F3DDC", Offset = "0x9F3DDC", VA = "0x9F3DDC")]
	public static extern int CSharp_AddListener(ulong jarg1, ulong jarg2);

	[PreserveSig]
	[Token(Token = "0x60005DF")]
	[Address(RVA = "0x9F3F30", Offset = "0x9F3F30", VA = "0x9F3F30")]
	public static extern int CSharp_RemoveListener(ulong jarg1, ulong jarg2);

	[PreserveSig]
	[Token(Token = "0x60005E0")]
	[Address(RVA = "0x9F405C", Offset = "0x9F405C", VA = "0x9F405C")]
	public static extern int CSharp_AddDefaultListener(ulong jarg1);

	[PreserveSig]
	[Token(Token = "0x60005E1")]
	[Address(RVA = "0x9F4178", Offset = "0x9F4178", VA = "0x9F4178")]
	public static extern int CSharp_RemoveDefaultListener(ulong jarg1);

	[PreserveSig]
	[Token(Token = "0x60005E2")]
	[Address(RVA = "0x9F4294", Offset = "0x9F4294", VA = "0x9F4294")]
	public static extern int CSharp_ResetListenersToDefault(ulong jarg1);

	[PreserveSig]
	[Token(Token = "0x60005E3")]
	[Address(RVA = "0x9F43EC", Offset = "0x9F43EC", VA = "0x9F43EC")]
	public static extern int CSharp_SetListenerSpatialization__SWIG_0(ulong jarg1, bool jarg2, IntPtr jarg3, [In] float[] jarg4);

	[PreserveSig]
	[Token(Token = "0x60005E4")]
	[Address(RVA = "0x9F4564", Offset = "0x9F4564", VA = "0x9F4564")]
	public static extern int CSharp_SetListenerSpatialization__SWIG_1(ulong jarg1, bool jarg2, IntPtr jarg3);

	[PreserveSig]
	[Token(Token = "0x60005E5")]
	[Address(RVA = "0x9F46D8", Offset = "0x9F46D8", VA = "0x9F46D8")]
	public static extern int CSharp_SetRTPCValue__SWIG_0(uint jarg1, float jarg2, ulong jarg3, int jarg4, int jarg5, bool jarg6);

	[PreserveSig]
	[Token(Token = "0x60005E6")]
	[Address(RVA = "0x9F486C", Offset = "0x9F486C", VA = "0x9F486C")]
	public static extern int CSharp_SetRTPCValue__SWIG_1(uint jarg1, float jarg2, ulong jarg3, int jarg4, int jarg5);

	[PreserveSig]
	[Token(Token = "0x60005E7")]
	[Address(RVA = "0x9F49E8", Offset = "0x9F49E8", VA = "0x9F49E8")]
	public static extern int CSharp_SetRTPCValue__SWIG_2(uint jarg1, float jarg2, ulong jarg3, int jarg4);

	[PreserveSig]
	[Token(Token = "0x60005E8")]
	[Address(RVA = "0x9F4B4C", Offset = "0x9F4B4C", VA = "0x9F4B4C")]
	public static extern int CSharp_SetRTPCValue__SWIG_3(uint jarg1, float jarg2, ulong jarg3);

	[PreserveSig]
	[Token(Token = "0x60005E9")]
	[Address(RVA = "0x9F4C60", Offset = "0x9F4C60", VA = "0x9F4C60")]
	public static extern int CSharp_SetRTPCValue__SWIG_4(uint jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x60005EA")]
	[Address(RVA = "0x9F4DCC", Offset = "0x9F4DCC", VA = "0x9F4DCC")]
	public static extern int CSharp_SetRTPCValue__SWIG_5(string jarg1, float jarg2, ulong jarg3, int jarg4, int jarg5, bool jarg6);

	[PreserveSig]
	[Token(Token = "0x60005EB")]
	[Address(RVA = "0x9F4F78", Offset = "0x9F4F78", VA = "0x9F4F78")]
	public static extern int CSharp_SetRTPCValue__SWIG_6(string jarg1, float jarg2, ulong jarg3, int jarg4, int jarg5);

	[PreserveSig]
	[Token(Token = "0x60005EC")]
	[Address(RVA = "0x9F510C", Offset = "0x9F510C", VA = "0x9F510C")]
	public static extern int CSharp_SetRTPCValue__SWIG_7(string jarg1, float jarg2, ulong jarg3, int jarg4);

	[PreserveSig]
	[Token(Token = "0x60005ED")]
	[Address(RVA = "0x9F5288", Offset = "0x9F5288", VA = "0x9F5288")]
	public static extern int CSharp_SetRTPCValue__SWIG_8(string jarg1, float jarg2, ulong jarg3);

	[PreserveSig]
	[Token(Token = "0x60005EE")]
	[Address(RVA = "0x9F53B4", Offset = "0x9F53B4", VA = "0x9F53B4")]
	public static extern int CSharp_SetRTPCValue__SWIG_9(string jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x60005EF")]
	[Address(RVA = "0x9F5500", Offset = "0x9F5500", VA = "0x9F5500")]
	public static extern int CSharp_SetRTPCValueByPlayingID__SWIG_0(uint jarg1, float jarg2, uint jarg3, int jarg4, int jarg5, bool jarg6);

	[PreserveSig]
	[Token(Token = "0x60005F0")]
	[Address(RVA = "0x9F565C", Offset = "0x9F565C", VA = "0x9F565C")]
	public static extern int CSharp_SetRTPCValueByPlayingID__SWIG_1(uint jarg1, float jarg2, uint jarg3, int jarg4, int jarg5);

	[PreserveSig]
	[Token(Token = "0x60005F1")]
	[Address(RVA = "0x9F57A0", Offset = "0x9F57A0", VA = "0x9F57A0")]
	public static extern int CSharp_SetRTPCValueByPlayingID__SWIG_2(uint jarg1, float jarg2, uint jarg3, int jarg4);

	[PreserveSig]
	[Token(Token = "0x60005F2")]
	[Address(RVA = "0x9F58CC", Offset = "0x9F58CC", VA = "0x9F58CC")]
	public static extern int CSharp_SetRTPCValueByPlayingID__SWIG_3(uint jarg1, float jarg2, uint jarg3);

	[PreserveSig]
	[Token(Token = "0x60005F3")]
	[Address(RVA = "0x9F5A10", Offset = "0x9F5A10", VA = "0x9F5A10")]
	public static extern int CSharp_SetRTPCValueByPlayingID__SWIG_4(string jarg1, float jarg2, uint jarg3, int jarg4, int jarg5, bool jarg6);

	[PreserveSig]
	[Token(Token = "0x60005F4")]
	[Address(RVA = "0x9F5B84", Offset = "0x9F5B84", VA = "0x9F5B84")]
	public static extern int CSharp_SetRTPCValueByPlayingID__SWIG_5(string jarg1, float jarg2, uint jarg3, int jarg4, int jarg5);

	[PreserveSig]
	[Token(Token = "0x60005F5")]
	[Address(RVA = "0x9F5CE0", Offset = "0x9F5CE0", VA = "0x9F5CE0")]
	public static extern int CSharp_SetRTPCValueByPlayingID__SWIG_6(string jarg1, float jarg2, uint jarg3, int jarg4);

	[PreserveSig]
	[Token(Token = "0x60005F6")]
	[Address(RVA = "0x9F5E24", Offset = "0x9F5E24", VA = "0x9F5E24")]
	public static extern int CSharp_SetRTPCValueByPlayingID__SWIG_7(string jarg1, float jarg2, uint jarg3);

	[PreserveSig]
	[Token(Token = "0x60005F7")]
	[Address(RVA = "0x9F5FA8", Offset = "0x9F5FA8", VA = "0x9F5FA8")]
	public static extern int CSharp_ResetRTPCValue__SWIG_0(uint jarg1, ulong jarg2, int jarg3, int jarg4, bool jarg5);

	[PreserveSig]
	[Token(Token = "0x60005F8")]
	[Address(RVA = "0x9F611C", Offset = "0x9F611C", VA = "0x9F611C")]
	public static extern int CSharp_ResetRTPCValue__SWIG_1(uint jarg1, ulong jarg2, int jarg3, int jarg4);

	[PreserveSig]
	[Token(Token = "0x60005F9")]
	[Address(RVA = "0x9F6278", Offset = "0x9F6278", VA = "0x9F6278")]
	public static extern int CSharp_ResetRTPCValue__SWIG_2(uint jarg1, ulong jarg2, int jarg3);

	[PreserveSig]
	[Token(Token = "0x60005FA")]
	[Address(RVA = "0x9F63BC", Offset = "0x9F63BC", VA = "0x9F63BC")]
	public static extern int CSharp_ResetRTPCValue__SWIG_3(uint jarg1, ulong jarg2);

	[PreserveSig]
	[Token(Token = "0x60005FB")]
	[Address(RVA = "0x9F64B0", Offset = "0x9F64B0", VA = "0x9F64B0")]
	public static extern int CSharp_ResetRTPCValue__SWIG_4(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x60005FC")]
	[Address(RVA = "0x9F65FC", Offset = "0x9F65FC", VA = "0x9F65FC")]
	public static extern int CSharp_ResetRTPCValue__SWIG_5(string jarg1, ulong jarg2, int jarg3, int jarg4, bool jarg5);

	[PreserveSig]
	[Token(Token = "0x60005FD")]
	[Address(RVA = "0x9F6788", Offset = "0x9F6788", VA = "0x9F6788")]
	public static extern int CSharp_ResetRTPCValue__SWIG_6(string jarg1, ulong jarg2, int jarg3, int jarg4);

	[PreserveSig]
	[Token(Token = "0x60005FE")]
	[Address(RVA = "0x9F68FC", Offset = "0x9F68FC", VA = "0x9F68FC")]
	public static extern int CSharp_ResetRTPCValue__SWIG_7(string jarg1, ulong jarg2, int jarg3);

	[PreserveSig]
	[Token(Token = "0x60005FF")]
	[Address(RVA = "0x9F6A58", Offset = "0x9F6A58", VA = "0x9F6A58")]
	public static extern int CSharp_ResetRTPCValue__SWIG_8(string jarg1, ulong jarg2);

	[PreserveSig]
	[Token(Token = "0x6000600")]
	[Address(RVA = "0x9F6B64", Offset = "0x9F6B64", VA = "0x9F6B64")]
	public static extern int CSharp_ResetRTPCValue__SWIG_9(string jarg1);

	[PreserveSig]
	[Token(Token = "0x6000601")]
	[Address(RVA = "0x9F6CB0", Offset = "0x9F6CB0", VA = "0x9F6CB0")]
	public static extern int CSharp_SetSwitch__SWIG_0(uint jarg1, uint jarg2, ulong jarg3);

	[PreserveSig]
	[Token(Token = "0x6000602")]
	[Address(RVA = "0x9F6DFC", Offset = "0x9F6DFC", VA = "0x9F6DFC")]
	public static extern int CSharp_SetSwitch__SWIG_1(string jarg1, string jarg2, ulong jarg3);

	[PreserveSig]
	[Token(Token = "0x6000603")]
	[Address(RVA = "0x9F6F6C", Offset = "0x9F6F6C", VA = "0x9F6F6C")]
	public static extern int CSharp_PostTrigger__SWIG_0(uint jarg1, ulong jarg2);

	[PreserveSig]
	[Token(Token = "0x6000604")]
	[Address(RVA = "0x9F70A8", Offset = "0x9F70A8", VA = "0x9F70A8")]
	public static extern int CSharp_PostTrigger__SWIG_1(string jarg1, ulong jarg2);

	[PreserveSig]
	[Token(Token = "0x6000605")]
	[Address(RVA = "0x9F71C4", Offset = "0x9F71C4", VA = "0x9F71C4")]
	public static extern int CSharp_SetState__SWIG_0(uint jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000606")]
	[Address(RVA = "0x9F72C8", Offset = "0x9F72C8", VA = "0x9F72C8")]
	public static extern int CSharp_SetState__SWIG_1(string jarg1, string jarg2);

	[PreserveSig]
	[Token(Token = "0x6000607")]
	[Address(RVA = "0x9F7448", Offset = "0x9F7448", VA = "0x9F7448")]
	public static extern int CSharp_SetGameObjectAuxSendValues(ulong jarg1, IntPtr jarg2, uint jarg3);

	[PreserveSig]
	[Token(Token = "0x6000608")]
	[Address(RVA = "0x9F75B4", Offset = "0x9F75B4", VA = "0x9F75B4")]
	public static extern int CSharp_SetGameObjectOutputBusVolume(ulong jarg1, ulong jarg2, float jarg3);

	[PreserveSig]
	[Token(Token = "0x6000609")]
	[Address(RVA = "0x9F76D0", Offset = "0x9F76D0", VA = "0x9F76D0")]
	public static extern int CSharp_SetActorMixerEffect(uint jarg1, uint jarg2, uint jarg3);

	[PreserveSig]
	[Token(Token = "0x600060A")]
	[Address(RVA = "0x9F77E4", Offset = "0x9F77E4", VA = "0x9F77E4")]
	public static extern int CSharp_SetBusEffect__SWIG_0(uint jarg1, uint jarg2, uint jarg3);

	[PreserveSig]
	[Token(Token = "0x600060B")]
	[Address(RVA = "0x9F78F8", Offset = "0x9F78F8", VA = "0x9F78F8")]
	public static extern int CSharp_SetBusEffect__SWIG_1(string jarg1, uint jarg2, uint jarg3);

	[PreserveSig]
	[Token(Token = "0x600060C")]
	[Address(RVA = "0x9F7A1C", Offset = "0x9F7A1C", VA = "0x9F7A1C")]
	public static extern int CSharp_SetMixer__SWIG_0(uint jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x600060D")]
	[Address(RVA = "0x9F7B20", Offset = "0x9F7B20", VA = "0x9F7B20")]
	public static extern int CSharp_SetMixer__SWIG_1(string jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x600060E")]
	[Address(RVA = "0x9F7C50", Offset = "0x9F7C50", VA = "0x9F7C50")]
	public static extern int CSharp_SetBusConfig__SWIG_0(uint jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x600060F")]
	[Address(RVA = "0x9F7D68", Offset = "0x9F7D68", VA = "0x9F7D68")]
	public static extern int CSharp_SetBusConfig__SWIG_1(string jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000610")]
	[Address(RVA = "0x9F7EEC", Offset = "0x9F7EEC", VA = "0x9F7EEC")]
	public static extern int CSharp_SetObjectObstructionAndOcclusion(ulong jarg1, ulong jarg2, float jarg3, float jarg4);

	[PreserveSig]
	[Token(Token = "0x6000611")]
	[Address(RVA = "0x9F807C", Offset = "0x9F807C", VA = "0x9F807C")]
	public static extern int CSharp_SetMultipleObstructionAndOcclusion(ulong jarg1, ulong jarg2, IntPtr jarg3, uint jarg4);

	[PreserveSig]
	[Token(Token = "0x6000612")]
	[Address(RVA = "0x9F8188", Offset = "0x9F8188", VA = "0x9F8188")]
	public static extern int CSharp_StartOutputCapture(string jarg1);

	[PreserveSig]
	[Token(Token = "0x6000613")]
	[Address(RVA = "0x9F827C", Offset = "0x9F827C", VA = "0x9F827C")]
	public static extern int CSharp_StopOutputCapture();

	[PreserveSig]
	[Token(Token = "0x6000614")]
	[Address(RVA = "0x9F8354", Offset = "0x9F8354", VA = "0x9F8354")]
	public static extern int CSharp_AddOutputCaptureMarker(string jarg1);

	[PreserveSig]
	[Token(Token = "0x6000615")]
	[Address(RVA = "0x9F8450", Offset = "0x9F8450", VA = "0x9F8450")]
	public static extern int CSharp_StartProfilerCapture(string jarg1);

	[PreserveSig]
	[Token(Token = "0x6000616")]
	[Address(RVA = "0x9F8544", Offset = "0x9F8544", VA = "0x9F8544")]
	public static extern int CSharp_StopProfilerCapture();

	[PreserveSig]
	[Token(Token = "0x6000617")]
	[Address(RVA = "0x9F861C", Offset = "0x9F861C", VA = "0x9F861C")]
	public static extern int CSharp_RemoveOutput(ulong jarg1);

	[PreserveSig]
	[Token(Token = "0x6000618")]
	[Address(RVA = "0x9F872C", Offset = "0x9F872C", VA = "0x9F872C")]
	public static extern int CSharp_ReplaceOutput__SWIG_0(IntPtr jarg1, ulong jarg2, out ulong jarg3);

	[PreserveSig]
	[Token(Token = "0x6000619")]
	[Address(RVA = "0x9F884C", Offset = "0x9F884C", VA = "0x9F884C")]
	public static extern int CSharp_ReplaceOutput__SWIG_1(IntPtr jarg1, ulong jarg2);

	[PreserveSig]
	[Token(Token = "0x600061A")]
	[Address(RVA = "0x9F8950", Offset = "0x9F8950", VA = "0x9F8950")]
	public static extern ulong CSharp_GetOutputID__SWIG_0(uint jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x600061B")]
	[Address(RVA = "0x9F8A54", Offset = "0x9F8A54", VA = "0x9F8A54")]
	public static extern ulong CSharp_GetOutputID__SWIG_1(string jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x600061C")]
	[Address(RVA = "0x9F8B70", Offset = "0x9F8B70", VA = "0x9F8B70")]
	public static extern int CSharp_SetBusDevice__SWIG_0(uint jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x600061D")]
	[Address(RVA = "0x9F8C74", Offset = "0x9F8C74", VA = "0x9F8C74")]
	public static extern int CSharp_SetBusDevice__SWIG_1(string jarg1, string jarg2);

	[PreserveSig]
	[Token(Token = "0x600061E")]
	[Address(RVA = "0x9F8DA8", Offset = "0x9F8DA8", VA = "0x9F8DA8")]
	public static extern int CSharp_SetOutputVolume(ulong jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x600061F")]
	[Address(RVA = "0x9F8E9C", Offset = "0x9F8E9C", VA = "0x9F8E9C")]
	public static extern int CSharp_GetDeviceSpatialAudioSupport(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x6000620")]
	[Address(RVA = "0x9F8F80", Offset = "0x9F8F80", VA = "0x9F8F80")]
	public static extern int CSharp_Suspend__SWIG_0(bool jarg1);

	[PreserveSig]
	[Token(Token = "0x6000621")]
	[Address(RVA = "0x9F905C", Offset = "0x9F905C", VA = "0x9F905C")]
	public static extern int CSharp_Suspend__SWIG_1();

	[PreserveSig]
	[Token(Token = "0x6000622")]
	[Address(RVA = "0x9F912C", Offset = "0x9F912C", VA = "0x9F912C")]
	public static extern int CSharp_WakeupFromSuspend();

	[PreserveSig]
	[Token(Token = "0x6000623")]
	[Address(RVA = "0x9F91FC", Offset = "0x9F91FC", VA = "0x9F91FC")]
	public static extern uint CSharp_GetBufferTick();

	[PreserveSig]
	[Token(Token = "0x6000624")]
	[Address(RVA = "0x9E67A8", Offset = "0x9E67A8", VA = "0x9E67A8")]
	public static extern void CSharp_AkSegmentInfo_iCurrentPosition_set(IntPtr jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x6000625")]
	[Address(RVA = "0x9E68A0", Offset = "0x9E68A0", VA = "0x9E68A0")]
	public static extern int CSharp_AkSegmentInfo_iCurrentPosition_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000626")]
	[Address(RVA = "0x9E6998", Offset = "0x9E6998", VA = "0x9E6998")]
	public static extern void CSharp_AkSegmentInfo_iPreEntryDuration_set(IntPtr jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x6000627")]
	[Address(RVA = "0x9E6A90", Offset = "0x9E6A90", VA = "0x9E6A90")]
	public static extern int CSharp_AkSegmentInfo_iPreEntryDuration_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000628")]
	[Address(RVA = "0x9E6B88", Offset = "0x9E6B88", VA = "0x9E6B88")]
	public static extern void CSharp_AkSegmentInfo_iActiveDuration_set(IntPtr jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x6000629")]
	[Address(RVA = "0x9E6C80", Offset = "0x9E6C80", VA = "0x9E6C80")]
	public static extern int CSharp_AkSegmentInfo_iActiveDuration_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600062A")]
	[Address(RVA = "0x9E6D78", Offset = "0x9E6D78", VA = "0x9E6D78")]
	public static extern void CSharp_AkSegmentInfo_iPostExitDuration_set(IntPtr jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x600062B")]
	[Address(RVA = "0x9E6E70", Offset = "0x9E6E70", VA = "0x9E6E70")]
	public static extern int CSharp_AkSegmentInfo_iPostExitDuration_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600062C")]
	[Address(RVA = "0x9E6F68", Offset = "0x9E6F68", VA = "0x9E6F68")]
	public static extern void CSharp_AkSegmentInfo_iRemainingLookAheadTime_set(IntPtr jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x600062D")]
	[Address(RVA = "0x9E7060", Offset = "0x9E7060", VA = "0x9E7060")]
	public static extern int CSharp_AkSegmentInfo_iRemainingLookAheadTime_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600062E")]
	[Address(RVA = "0x9E7158", Offset = "0x9E7158", VA = "0x9E7158")]
	public static extern void CSharp_AkSegmentInfo_fBeatDuration_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x600062F")]
	[Address(RVA = "0x9E7250", Offset = "0x9E7250", VA = "0x9E7250")]
	public static extern float CSharp_AkSegmentInfo_fBeatDuration_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000630")]
	[Address(RVA = "0x9E7348", Offset = "0x9E7348", VA = "0x9E7348")]
	public static extern void CSharp_AkSegmentInfo_fBarDuration_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6000631")]
	[Address(RVA = "0x9E7440", Offset = "0x9E7440", VA = "0x9E7440")]
	public static extern float CSharp_AkSegmentInfo_fBarDuration_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000632")]
	[Address(RVA = "0x9E7538", Offset = "0x9E7538", VA = "0x9E7538")]
	public static extern void CSharp_AkSegmentInfo_fGridDuration_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6000633")]
	[Address(RVA = "0x9E7630", Offset = "0x9E7630", VA = "0x9E7630")]
	public static extern float CSharp_AkSegmentInfo_fGridDuration_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000634")]
	[Address(RVA = "0x9E7728", Offset = "0x9E7728", VA = "0x9E7728")]
	public static extern void CSharp_AkSegmentInfo_fGridOffset_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6000635")]
	[Address(RVA = "0x9E7820", Offset = "0x9E7820", VA = "0x9E7820")]
	public static extern float CSharp_AkSegmentInfo_fGridOffset_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000636")]
	[Address(RVA = "0x9E7920", Offset = "0x9E7920", VA = "0x9E7920")]
	public static extern IntPtr CSharp_new_AkSegmentInfo();

	[PreserveSig]
	[Token(Token = "0x6000637")]
	[Address(RVA = "0x9E66B0", Offset = "0x9E66B0", VA = "0x9E66B0")]
	public static extern void CSharp_delete_AkSegmentInfo(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000638")]
	[Address(RVA = "0x9F92CC", Offset = "0x9F92CC", VA = "0x9F92CC")]
	public static extern byte CSharp_AK_INVALID_MIDI_CHANNEL_get();

	[PreserveSig]
	[Token(Token = "0x6000639")]
	[Address(RVA = "0x9F939C", Offset = "0x9F939C", VA = "0x9F939C")]
	public static extern byte CSharp_AK_INVALID_MIDI_NOTE_get();

	[PreserveSig]
	[Token(Token = "0x600063A")]
	[Address(RVA = "0xA0A798", Offset = "0xA0A798", VA = "0xA0A798")]
	public static extern void CSharp_AkMIDIEvent_byChan_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x600063B")]
	[Address(RVA = "0xA0A828", Offset = "0xA0A828", VA = "0xA0A828")]
	public static extern byte CSharp_AkMIDIEvent_byChan_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600063C")]
	[Address(RVA = "0xA0A8A8", Offset = "0xA0A8A8", VA = "0xA0A8A8")]
	public static extern void CSharp_AkMIDIEvent_tGen_byParam1_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x600063D")]
	[Address(RVA = "0xA0A938", Offset = "0xA0A938", VA = "0xA0A938")]
	public static extern byte CSharp_AkMIDIEvent_tGen_byParam1_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600063E")]
	[Address(RVA = "0xA0A9B8", Offset = "0xA0A9B8", VA = "0xA0A9B8")]
	public static extern void CSharp_AkMIDIEvent_tGen_byParam2_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x600063F")]
	[Address(RVA = "0xA0AA48", Offset = "0xA0AA48", VA = "0xA0AA48")]
	public static extern byte CSharp_AkMIDIEvent_tGen_byParam2_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000640")]
	[Address(RVA = "0xA0AAC8", Offset = "0xA0AAC8", VA = "0xA0AAC8")]
	public static extern IntPtr CSharp_new_AkMIDIEvent_tGen();

	[PreserveSig]
	[Token(Token = "0x6000641")]
	[Address(RVA = "0xA0AB3C", Offset = "0xA0AB3C", VA = "0xA0AB3C")]
	public static extern void CSharp_delete_AkMIDIEvent_tGen(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000642")]
	[Address(RVA = "0xA0ABBC", Offset = "0xA0ABBC", VA = "0xA0ABBC")]
	public static extern void CSharp_AkMIDIEvent_tNoteOnOff_byNote_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x6000643")]
	[Address(RVA = "0xA0AC4C", Offset = "0xA0AC4C", VA = "0xA0AC4C")]
	public static extern byte CSharp_AkMIDIEvent_tNoteOnOff_byNote_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000644")]
	[Address(RVA = "0xA0ACCC", Offset = "0xA0ACCC", VA = "0xA0ACCC")]
	public static extern void CSharp_AkMIDIEvent_tNoteOnOff_byVelocity_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x6000645")]
	[Address(RVA = "0xA0AD5C", Offset = "0xA0AD5C", VA = "0xA0AD5C")]
	public static extern byte CSharp_AkMIDIEvent_tNoteOnOff_byVelocity_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000646")]
	[Address(RVA = "0xA0ADDC", Offset = "0xA0ADDC", VA = "0xA0ADDC")]
	public static extern IntPtr CSharp_new_AkMIDIEvent_tNoteOnOff();

	[PreserveSig]
	[Token(Token = "0x6000647")]
	[Address(RVA = "0xA0AE50", Offset = "0xA0AE50", VA = "0xA0AE50")]
	public static extern void CSharp_delete_AkMIDIEvent_tNoteOnOff(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000648")]
	[Address(RVA = "0xA0AED0", Offset = "0xA0AED0", VA = "0xA0AED0")]
	public static extern void CSharp_AkMIDIEvent_tCc_byCc_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x6000649")]
	[Address(RVA = "0xA0AF60", Offset = "0xA0AF60", VA = "0xA0AF60")]
	public static extern byte CSharp_AkMIDIEvent_tCc_byCc_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600064A")]
	[Address(RVA = "0xA0AFE0", Offset = "0xA0AFE0", VA = "0xA0AFE0")]
	public static extern void CSharp_AkMIDIEvent_tCc_byValue_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x600064B")]
	[Address(RVA = "0xA0B070", Offset = "0xA0B070", VA = "0xA0B070")]
	public static extern byte CSharp_AkMIDIEvent_tCc_byValue_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600064C")]
	[Address(RVA = "0xA0B0F0", Offset = "0xA0B0F0", VA = "0xA0B0F0")]
	public static extern IntPtr CSharp_new_AkMIDIEvent_tCc();

	[PreserveSig]
	[Token(Token = "0x600064D")]
	[Address(RVA = "0xA0B164", Offset = "0xA0B164", VA = "0xA0B164")]
	public static extern void CSharp_delete_AkMIDIEvent_tCc(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600064E")]
	[Address(RVA = "0xA0B1E4", Offset = "0xA0B1E4", VA = "0xA0B1E4")]
	public static extern void CSharp_AkMIDIEvent_tPitchBend_byValueLsb_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x600064F")]
	[Address(RVA = "0xA0B274", Offset = "0xA0B274", VA = "0xA0B274")]
	public static extern byte CSharp_AkMIDIEvent_tPitchBend_byValueLsb_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000650")]
	[Address(RVA = "0xA0B2F4", Offset = "0xA0B2F4", VA = "0xA0B2F4")]
	public static extern void CSharp_AkMIDIEvent_tPitchBend_byValueMsb_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x6000651")]
	[Address(RVA = "0xA0B384", Offset = "0xA0B384", VA = "0xA0B384")]
	public static extern byte CSharp_AkMIDIEvent_tPitchBend_byValueMsb_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000652")]
	[Address(RVA = "0xA0B404", Offset = "0xA0B404", VA = "0xA0B404")]
	public static extern IntPtr CSharp_new_AkMIDIEvent_tPitchBend();

	[PreserveSig]
	[Token(Token = "0x6000653")]
	[Address(RVA = "0xA0B478", Offset = "0xA0B478", VA = "0xA0B478")]
	public static extern void CSharp_delete_AkMIDIEvent_tPitchBend(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000654")]
	[Address(RVA = "0xA0B4F8", Offset = "0xA0B4F8", VA = "0xA0B4F8")]
	public static extern void CSharp_AkMIDIEvent_tNoteAftertouch_byNote_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x6000655")]
	[Address(RVA = "0xA0B588", Offset = "0xA0B588", VA = "0xA0B588")]
	public static extern byte CSharp_AkMIDIEvent_tNoteAftertouch_byNote_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000656")]
	[Address(RVA = "0xA0B608", Offset = "0xA0B608", VA = "0xA0B608")]
	public static extern void CSharp_AkMIDIEvent_tNoteAftertouch_byValue_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x6000657")]
	[Address(RVA = "0xA0B698", Offset = "0xA0B698", VA = "0xA0B698")]
	public static extern byte CSharp_AkMIDIEvent_tNoteAftertouch_byValue_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000658")]
	[Address(RVA = "0xA0B718", Offset = "0xA0B718", VA = "0xA0B718")]
	public static extern IntPtr CSharp_new_AkMIDIEvent_tNoteAftertouch();

	[PreserveSig]
	[Token(Token = "0x6000659")]
	[Address(RVA = "0xA0B78C", Offset = "0xA0B78C", VA = "0xA0B78C")]
	public static extern void CSharp_delete_AkMIDIEvent_tNoteAftertouch(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600065A")]
	[Address(RVA = "0xA0B80C", Offset = "0xA0B80C", VA = "0xA0B80C")]
	public static extern void CSharp_AkMIDIEvent_tChanAftertouch_byValue_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x600065B")]
	[Address(RVA = "0xA0B89C", Offset = "0xA0B89C", VA = "0xA0B89C")]
	public static extern byte CSharp_AkMIDIEvent_tChanAftertouch_byValue_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600065C")]
	[Address(RVA = "0xA0B91C", Offset = "0xA0B91C", VA = "0xA0B91C")]
	public static extern IntPtr CSharp_new_AkMIDIEvent_tChanAftertouch();

	[PreserveSig]
	[Token(Token = "0x600065D")]
	[Address(RVA = "0xA0B990", Offset = "0xA0B990", VA = "0xA0B990")]
	public static extern void CSharp_delete_AkMIDIEvent_tChanAftertouch(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600065E")]
	[Address(RVA = "0xA0BA10", Offset = "0xA0BA10", VA = "0xA0BA10")]
	public static extern void CSharp_AkMIDIEvent_tProgramChange_byProgramNum_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x600065F")]
	[Address(RVA = "0xA0BAA0", Offset = "0xA0BAA0", VA = "0xA0BAA0")]
	public static extern byte CSharp_AkMIDIEvent_tProgramChange_byProgramNum_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000660")]
	[Address(RVA = "0xA0BB20", Offset = "0xA0BB20", VA = "0xA0BB20")]
	public static extern IntPtr CSharp_new_AkMIDIEvent_tProgramChange();

	[PreserveSig]
	[Token(Token = "0x6000661")]
	[Address(RVA = "0xA0BB94", Offset = "0xA0BB94", VA = "0xA0BB94")]
	public static extern void CSharp_delete_AkMIDIEvent_tProgramChange(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000662")]
	[Address(RVA = "0xA0BC14", Offset = "0xA0BC14", VA = "0xA0BC14")]
	public static extern void CSharp_AkMIDIEvent_Gen_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000663")]
	[Address(RVA = "0xA0BCA4", Offset = "0xA0BCA4", VA = "0xA0BCA4")]
	public static extern IntPtr CSharp_AkMIDIEvent_Gen_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000664")]
	[Address(RVA = "0xA0BD24", Offset = "0xA0BD24", VA = "0xA0BD24")]
	public static extern void CSharp_AkMIDIEvent_Cc_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000665")]
	[Address(RVA = "0xA0BDB4", Offset = "0xA0BDB4", VA = "0xA0BDB4")]
	public static extern IntPtr CSharp_AkMIDIEvent_Cc_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000666")]
	[Address(RVA = "0xA0BE34", Offset = "0xA0BE34", VA = "0xA0BE34")]
	public static extern void CSharp_AkMIDIEvent_NoteOnOff_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000667")]
	[Address(RVA = "0xA0BEC4", Offset = "0xA0BEC4", VA = "0xA0BEC4")]
	public static extern IntPtr CSharp_AkMIDIEvent_NoteOnOff_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000668")]
	[Address(RVA = "0xA0BF44", Offset = "0xA0BF44", VA = "0xA0BF44")]
	public static extern void CSharp_AkMIDIEvent_PitchBend_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000669")]
	[Address(RVA = "0xA0BFD4", Offset = "0xA0BFD4", VA = "0xA0BFD4")]
	public static extern IntPtr CSharp_AkMIDIEvent_PitchBend_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600066A")]
	[Address(RVA = "0xA0C054", Offset = "0xA0C054", VA = "0xA0C054")]
	public static extern void CSharp_AkMIDIEvent_NoteAftertouch_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x600066B")]
	[Address(RVA = "0xA0C0E4", Offset = "0xA0C0E4", VA = "0xA0C0E4")]
	public static extern IntPtr CSharp_AkMIDIEvent_NoteAftertouch_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600066C")]
	[Address(RVA = "0xA0C164", Offset = "0xA0C164", VA = "0xA0C164")]
	public static extern void CSharp_AkMIDIEvent_ChanAftertouch_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x600066D")]
	[Address(RVA = "0xA0C1F4", Offset = "0xA0C1F4", VA = "0xA0C1F4")]
	public static extern IntPtr CSharp_AkMIDIEvent_ChanAftertouch_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600066E")]
	[Address(RVA = "0xA0C274", Offset = "0xA0C274", VA = "0xA0C274")]
	public static extern void CSharp_AkMIDIEvent_ProgramChange_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x600066F")]
	[Address(RVA = "0xA0C304", Offset = "0xA0C304", VA = "0xA0C304")]
	public static extern IntPtr CSharp_AkMIDIEvent_ProgramChange_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000670")]
	[Address(RVA = "0xA0C384", Offset = "0xA0C384", VA = "0xA0C384")]
	public static extern void CSharp_AkMIDIEvent_byType_set(IntPtr jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x6000671")]
	[Address(RVA = "0xA0C414", Offset = "0xA0C414", VA = "0xA0C414")]
	public static extern int CSharp_AkMIDIEvent_byType_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000672")]
	[Address(RVA = "0xA0C494", Offset = "0xA0C494", VA = "0xA0C494")]
	public static extern void CSharp_AkMIDIEvent_byOnOffNote_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x6000673")]
	[Address(RVA = "0xA0C524", Offset = "0xA0C524", VA = "0xA0C524")]
	public static extern byte CSharp_AkMIDIEvent_byOnOffNote_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000674")]
	[Address(RVA = "0xA0C5A4", Offset = "0xA0C5A4", VA = "0xA0C5A4")]
	public static extern void CSharp_AkMIDIEvent_byVelocity_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x6000675")]
	[Address(RVA = "0xA0C634", Offset = "0xA0C634", VA = "0xA0C634")]
	public static extern byte CSharp_AkMIDIEvent_byVelocity_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000676")]
	[Address(RVA = "0xA0C6B4", Offset = "0xA0C6B4", VA = "0xA0C6B4")]
	public static extern void CSharp_AkMIDIEvent_byCc_set(IntPtr jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x6000677")]
	[Address(RVA = "0xA0C744", Offset = "0xA0C744", VA = "0xA0C744")]
	public static extern int CSharp_AkMIDIEvent_byCc_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000678")]
	[Address(RVA = "0xA0C7C4", Offset = "0xA0C7C4", VA = "0xA0C7C4")]
	public static extern void CSharp_AkMIDIEvent_byCcValue_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x6000679")]
	[Address(RVA = "0xA0C854", Offset = "0xA0C854", VA = "0xA0C854")]
	public static extern byte CSharp_AkMIDIEvent_byCcValue_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600067A")]
	[Address(RVA = "0xA0C8D4", Offset = "0xA0C8D4", VA = "0xA0C8D4")]
	public static extern void CSharp_AkMIDIEvent_byValueLsb_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x600067B")]
	[Address(RVA = "0xA0C964", Offset = "0xA0C964", VA = "0xA0C964")]
	public static extern byte CSharp_AkMIDIEvent_byValueLsb_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600067C")]
	[Address(RVA = "0xA0C9E4", Offset = "0xA0C9E4", VA = "0xA0C9E4")]
	public static extern void CSharp_AkMIDIEvent_byValueMsb_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x600067D")]
	[Address(RVA = "0xA0CA74", Offset = "0xA0CA74", VA = "0xA0CA74")]
	public static extern byte CSharp_AkMIDIEvent_byValueMsb_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600067E")]
	[Address(RVA = "0xA0CAF4", Offset = "0xA0CAF4", VA = "0xA0CAF4")]
	public static extern void CSharp_AkMIDIEvent_byAftertouchNote_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x600067F")]
	[Address(RVA = "0xA0CB84", Offset = "0xA0CB84", VA = "0xA0CB84")]
	public static extern byte CSharp_AkMIDIEvent_byAftertouchNote_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000680")]
	[Address(RVA = "0xA0CC04", Offset = "0xA0CC04", VA = "0xA0CC04")]
	public static extern void CSharp_AkMIDIEvent_byNoteAftertouchValue_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x6000681")]
	[Address(RVA = "0xA0CC94", Offset = "0xA0CC94", VA = "0xA0CC94")]
	public static extern byte CSharp_AkMIDIEvent_byNoteAftertouchValue_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000682")]
	[Address(RVA = "0xA0CD14", Offset = "0xA0CD14", VA = "0xA0CD14")]
	public static extern void CSharp_AkMIDIEvent_byChanAftertouchValue_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x6000683")]
	[Address(RVA = "0xA0CDA4", Offset = "0xA0CDA4", VA = "0xA0CDA4")]
	public static extern byte CSharp_AkMIDIEvent_byChanAftertouchValue_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000684")]
	[Address(RVA = "0xA0CE24", Offset = "0xA0CE24", VA = "0xA0CE24")]
	public static extern void CSharp_AkMIDIEvent_byProgramNum_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x6000685")]
	[Address(RVA = "0xA0CEB4", Offset = "0xA0CEB4", VA = "0xA0CEB4")]
	public static extern byte CSharp_AkMIDIEvent_byProgramNum_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000686")]
	[Address(RVA = "0xA0CF34", Offset = "0xA0CF34", VA = "0xA0CF34")]
	public static extern IntPtr CSharp_new_AkMIDIEvent();

	[PreserveSig]
	[Token(Token = "0x6000687")]
	[Address(RVA = "0xA0CFA8", Offset = "0xA0CFA8", VA = "0xA0CFA8")]
	public static extern void CSharp_delete_AkMIDIEvent(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000688")]
	[Address(RVA = "0xA0D028", Offset = "0xA0D028", VA = "0xA0D028")]
	public static extern void CSharp_AkMIDIPost_uOffset_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000689")]
	[Address(RVA = "0xA0D0B8", Offset = "0xA0D0B8", VA = "0xA0D0B8")]
	public static extern uint CSharp_AkMIDIPost_uOffset_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600068A")]
	[Address(RVA = "0xA0D138", Offset = "0xA0D138", VA = "0xA0D138")]
	public static extern int CSharp_AkMIDIPost_PostOnEvent(IntPtr jarg1, uint jarg2, ulong jarg3, uint jarg4);

	[PreserveSig]
	[Token(Token = "0x600068B")]
	[Address(RVA = "0xA0D1E0", Offset = "0xA0D1E0", VA = "0xA0D1E0")]
	public static extern void CSharp_AkMIDIPost_Clone(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x600068C")]
	[Address(RVA = "0xA0D270", Offset = "0xA0D270", VA = "0xA0D270")]
	public static extern int CSharp_AkMIDIPost_GetSizeOf();

	[PreserveSig]
	[Token(Token = "0x600068D")]
	[Address(RVA = "0xA0D2E4", Offset = "0xA0D2E4", VA = "0xA0D2E4")]
	public static extern IntPtr CSharp_new_AkMIDIPost();

	[PreserveSig]
	[Token(Token = "0x600068E")]
	[Address(RVA = "0xA0D358", Offset = "0xA0D358", VA = "0xA0D358")]
	public static extern void CSharp_delete_AkMIDIPost(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600068F")]
	[Address(RVA = "0xA0D3D8", Offset = "0xA0D3D8", VA = "0xA0D3D8")]
	public static extern IntPtr CSharp_new_AkMemSettings();

	[PreserveSig]
	[Token(Token = "0x6000690")]
	[Address(RVA = "0xA0D44C", Offset = "0xA0D44C", VA = "0xA0D44C")]
	public static extern void CSharp_AkMemSettings_uMaxNumPools_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000691")]
	[Address(RVA = "0xA0D4DC", Offset = "0xA0D4DC", VA = "0xA0D4DC")]
	public static extern uint CSharp_AkMemSettings_uMaxNumPools_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000692")]
	[Address(RVA = "0xA0D55C", Offset = "0xA0D55C", VA = "0xA0D55C")]
	public static extern void CSharp_AkMemSettings_uDebugFlags_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000693")]
	[Address(RVA = "0xA0D5EC", Offset = "0xA0D5EC", VA = "0xA0D5EC")]
	public static extern uint CSharp_AkMemSettings_uDebugFlags_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000694")]
	[Address(RVA = "0xA0D66C", Offset = "0xA0D66C", VA = "0xA0D66C")]
	public static extern void CSharp_delete_AkMemSettings(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000695")]
	[Address(RVA = "0xA0D6EC", Offset = "0xA0D6EC", VA = "0xA0D6EC")]
	public static extern void CSharp_AkMusicSettings_fStreamingLookAheadRatio_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6000696")]
	[Address(RVA = "0xA0D77C", Offset = "0xA0D77C", VA = "0xA0D77C")]
	public static extern float CSharp_AkMusicSettings_fStreamingLookAheadRatio_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000697")]
	[Address(RVA = "0xA0D7FC", Offset = "0xA0D7FC", VA = "0xA0D7FC")]
	public static extern IntPtr CSharp_new_AkMusicSettings();

	[PreserveSig]
	[Token(Token = "0x6000698")]
	[Address(RVA = "0xA0D870", Offset = "0xA0D870", VA = "0xA0D870")]
	public static extern void CSharp_delete_AkMusicSettings(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000699")]
	[Address(RVA = "0x9F94B8", Offset = "0x9F94B8", VA = "0x9F94B8")]
	public static extern int CSharp_GetPlayingSegmentInfo__SWIG_0(uint jarg1, IntPtr jarg2, bool jarg3);

	[PreserveSig]
	[Token(Token = "0x600069A")]
	[Address(RVA = "0x9F95F0", Offset = "0x9F95F0", VA = "0x9F95F0")]
	public static extern int CSharp_GetPlayingSegmentInfo__SWIG_1(uint jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x600069B")]
	[Address(RVA = "0x9E7CD8", Offset = "0x9E7CD8", VA = "0x9E7CD8")]
	public static extern IntPtr CSharp_AkSerializedCallbackHeader_pPackage_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600069C")]
	[Address(RVA = "0x9E7E04", Offset = "0x9E7E04", VA = "0x9E7E04")]
	public static extern IntPtr CSharp_AkSerializedCallbackHeader_pNext_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600069D")]
	[Address(RVA = "0x9E7EEC", Offset = "0x9E7EEC", VA = "0x9E7EEC")]
	public static extern int CSharp_AkSerializedCallbackHeader_eType_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600069E")]
	[Address(RVA = "0x9E7FD4", Offset = "0x9E7FD4", VA = "0x9E7FD4")]
	public static extern IntPtr CSharp_AkSerializedCallbackHeader_GetData(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600069F")]
	[Address(RVA = "0x9E80D4", Offset = "0x9E80D4", VA = "0x9E80D4")]
	public static extern IntPtr CSharp_new_AkSerializedCallbackHeader();

	[PreserveSig]
	[Token(Token = "0x60006A0")]
	[Address(RVA = "0x9E7BF0", Offset = "0x9E7BF0", VA = "0x9E7BF0")]
	public static extern void CSharp_delete_AkSerializedCallbackHeader(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60006A1")]
	[Address(RVA = "0xA0D8F0", Offset = "0xA0D8F0", VA = "0xA0D8F0")]
	public static extern IntPtr CSharp_AkCallbackInfo_pCookie_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60006A2")]
	[Address(RVA = "0xA0D970", Offset = "0xA0D970", VA = "0xA0D970")]
	public static extern ulong CSharp_AkCallbackInfo_gameObjID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60006A3")]
	[Address(RVA = "0xA0D9F0", Offset = "0xA0D9F0", VA = "0xA0D9F0")]
	public static extern IntPtr CSharp_new_AkCallbackInfo();

	[PreserveSig]
	[Token(Token = "0x60006A4")]
	[Address(RVA = "0xA0DA64", Offset = "0xA0DA64", VA = "0xA0DA64")]
	public static extern void CSharp_delete_AkCallbackInfo(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60006A5")]
	[Address(RVA = "0xA0DAE4", Offset = "0xA0DAE4", VA = "0xA0DAE4")]
	public static extern uint CSharp_AkEventCallbackInfo_playingID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60006A6")]
	[Address(RVA = "0xA0DB64", Offset = "0xA0DB64", VA = "0xA0DB64")]
	public static extern uint CSharp_AkEventCallbackInfo_eventID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60006A7")]
	[Address(RVA = "0xA0DBE4", Offset = "0xA0DBE4", VA = "0xA0DBE4")]
	public static extern IntPtr CSharp_new_AkEventCallbackInfo();

	[PreserveSig]
	[Token(Token = "0x60006A8")]
	[Address(RVA = "0xA0DC58", Offset = "0xA0DC58", VA = "0xA0DC58")]
	public static extern void CSharp_delete_AkEventCallbackInfo(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60006A9")]
	[Address(RVA = "0xA0DCD8", Offset = "0xA0DCD8", VA = "0xA0DCD8")]
	public static extern byte CSharp_AkMIDIEventCallbackInfo_byChan_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60006AA")]
	[Address(RVA = "0xA0DD58", Offset = "0xA0DD58", VA = "0xA0DD58")]
	public static extern byte CSharp_AkMIDIEventCallbackInfo_byParam1_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60006AB")]
	[Address(RVA = "0xA0DDD8", Offset = "0xA0DDD8", VA = "0xA0DDD8")]
	public static extern byte CSharp_AkMIDIEventCallbackInfo_byParam2_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60006AC")]
	[Address(RVA = "0xA0DE58", Offset = "0xA0DE58", VA = "0xA0DE58")]
	public static extern int CSharp_AkMIDIEventCallbackInfo_byType_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60006AD")]
	[Address(RVA = "0xA0DED8", Offset = "0xA0DED8", VA = "0xA0DED8")]
	public static extern byte CSharp_AkMIDIEventCallbackInfo_byOnOffNote_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60006AE")]
	[Address(RVA = "0xA0DF58", Offset = "0xA0DF58", VA = "0xA0DF58")]
	public static extern byte CSharp_AkMIDIEventCallbackInfo_byVelocity_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60006AF")]
	[Address(RVA = "0xA0DFD8", Offset = "0xA0DFD8", VA = "0xA0DFD8")]
	public static extern int CSharp_AkMIDIEventCallbackInfo_byCc_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60006B0")]
	[Address(RVA = "0xA0E058", Offset = "0xA0E058", VA = "0xA0E058")]
	public static extern byte CSharp_AkMIDIEventCallbackInfo_byCcValue_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60006B1")]
	[Address(RVA = "0xA0E0D8", Offset = "0xA0E0D8", VA = "0xA0E0D8")]
	public static extern byte CSharp_AkMIDIEventCallbackInfo_byValueLsb_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60006B2")]
	[Address(RVA = "0xA0E158", Offset = "0xA0E158", VA = "0xA0E158")]
	public static extern byte CSharp_AkMIDIEventCallbackInfo_byValueMsb_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60006B3")]
	[Address(RVA = "0xA0E1D8", Offset = "0xA0E1D8", VA = "0xA0E1D8")]
	public static extern byte CSharp_AkMIDIEventCallbackInfo_byAftertouchNote_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60006B4")]
	[Address(RVA = "0xA0E258", Offset = "0xA0E258", VA = "0xA0E258")]
	public static extern byte CSharp_AkMIDIEventCallbackInfo_byNoteAftertouchValue_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60006B5")]
	[Address(RVA = "0xA0E2D8", Offset = "0xA0E2D8", VA = "0xA0E2D8")]
	public static extern byte CSharp_AkMIDIEventCallbackInfo_byChanAftertouchValue_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60006B6")]
	[Address(RVA = "0xA0E358", Offset = "0xA0E358", VA = "0xA0E358")]
	public static extern byte CSharp_AkMIDIEventCallbackInfo_byProgramNum_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60006B7")]
	[Address(RVA = "0xA0E3D8", Offset = "0xA0E3D8", VA = "0xA0E3D8")]
	public static extern IntPtr CSharp_new_AkMIDIEventCallbackInfo();

	[PreserveSig]
	[Token(Token = "0x60006B8")]
	[Address(RVA = "0xA0E44C", Offset = "0xA0E44C", VA = "0xA0E44C")]
	public static extern void CSharp_delete_AkMIDIEventCallbackInfo(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60006B9")]
	[Address(RVA = "0xA0E4CC", Offset = "0xA0E4CC", VA = "0xA0E4CC")]
	public static extern uint CSharp_AkMarkerCallbackInfo_uIdentifier_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60006BA")]
	[Address(RVA = "0xA0E54C", Offset = "0xA0E54C", VA = "0xA0E54C")]
	public static extern uint CSharp_AkMarkerCallbackInfo_uPosition_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60006BB")]
	[Address(RVA = "0xA0E5CC", Offset = "0xA0E5CC", VA = "0xA0E5CC")]
	public static extern IntPtr CSharp_AkMarkerCallbackInfo_strLabel_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60006BC")]
	[Address(RVA = "0xA0E64C", Offset = "0xA0E64C", VA = "0xA0E64C")]
	public static extern IntPtr CSharp_new_AkMarkerCallbackInfo();

	[PreserveSig]
	[Token(Token = "0x60006BD")]
	[Address(RVA = "0xA0E6C0", Offset = "0xA0E6C0", VA = "0xA0E6C0")]
	public static extern void CSharp_delete_AkMarkerCallbackInfo(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60006BE")]
	[Address(RVA = "0xA0E740", Offset = "0xA0E740", VA = "0xA0E740")]
	public static extern float CSharp_AkDurationCallbackInfo_fDuration_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60006BF")]
	[Address(RVA = "0xA0E7C0", Offset = "0xA0E7C0", VA = "0xA0E7C0")]
	public static extern float CSharp_AkDurationCallbackInfo_fEstimatedDuration_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60006C0")]
	[Address(RVA = "0xA0E840", Offset = "0xA0E840", VA = "0xA0E840")]
	public static extern uint CSharp_AkDurationCallbackInfo_audioNodeID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60006C1")]
	[Address(RVA = "0xA0E8C0", Offset = "0xA0E8C0", VA = "0xA0E8C0")]
	public static extern uint CSharp_AkDurationCallbackInfo_mediaID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60006C2")]
	[Address(RVA = "0xA0E940", Offset = "0xA0E940", VA = "0xA0E940")]
	public static extern bool CSharp_AkDurationCallbackInfo_bStreaming_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60006C3")]
	[Address(RVA = "0xA0E9C8", Offset = "0xA0E9C8", VA = "0xA0E9C8")]
	public static extern IntPtr CSharp_new_AkDurationCallbackInfo();

	[PreserveSig]
	[Token(Token = "0x60006C4")]
	[Address(RVA = "0xA0EA3C", Offset = "0xA0EA3C", VA = "0xA0EA3C")]
	public static extern void CSharp_delete_AkDurationCallbackInfo(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60006C5")]
	[Address(RVA = "0xA0EABC", Offset = "0xA0EABC", VA = "0xA0EABC")]
	public static extern uint CSharp_AkDynamicSequenceItemCallbackInfo_playingID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60006C6")]
	[Address(RVA = "0xA0EB3C", Offset = "0xA0EB3C", VA = "0xA0EB3C")]
	public static extern uint CSharp_AkDynamicSequenceItemCallbackInfo_audioNodeID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60006C7")]
	[Address(RVA = "0xA0EBBC", Offset = "0xA0EBBC", VA = "0xA0EBBC")]
	public static extern IntPtr CSharp_AkDynamicSequenceItemCallbackInfo_pCustomInfo_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60006C8")]
	[Address(RVA = "0xA0EC3C", Offset = "0xA0EC3C", VA = "0xA0EC3C")]
	public static extern IntPtr CSharp_new_AkDynamicSequenceItemCallbackInfo();

	[PreserveSig]
	[Token(Token = "0x60006C9")]
	[Address(RVA = "0xA0ECB0", Offset = "0xA0ECB0", VA = "0xA0ECB0")]
	public static extern void CSharp_delete_AkDynamicSequenceItemCallbackInfo(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60006CA")]
	[Address(RVA = "0xA0ED30", Offset = "0xA0ED30", VA = "0xA0ED30")]
	public static extern uint CSharp_AkMusicSyncCallbackInfo_playingID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60006CB")]
	[Address(RVA = "0xA0EDB0", Offset = "0xA0EDB0", VA = "0xA0EDB0")]
	public static extern int CSharp_AkMusicSyncCallbackInfo_segmentInfo_iCurrentPosition_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60006CC")]
	[Address(RVA = "0xA0EE30", Offset = "0xA0EE30", VA = "0xA0EE30")]
	public static extern int CSharp_AkMusicSyncCallbackInfo_segmentInfo_iPreEntryDuration_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60006CD")]
	[Address(RVA = "0xA0EEB0", Offset = "0xA0EEB0", VA = "0xA0EEB0")]
	public static extern int CSharp_AkMusicSyncCallbackInfo_segmentInfo_iActiveDuration_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60006CE")]
	[Address(RVA = "0xA0EF30", Offset = "0xA0EF30", VA = "0xA0EF30")]
	public static extern int CSharp_AkMusicSyncCallbackInfo_segmentInfo_iPostExitDuration_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60006CF")]
	[Address(RVA = "0xA0EFB0", Offset = "0xA0EFB0", VA = "0xA0EFB0")]
	public static extern int CSharp_AkMusicSyncCallbackInfo_segmentInfo_iRemainingLookAheadTime_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60006D0")]
	[Address(RVA = "0xA0F030", Offset = "0xA0F030", VA = "0xA0F030")]
	public static extern float CSharp_AkMusicSyncCallbackInfo_segmentInfo_fBeatDuration_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60006D1")]
	[Address(RVA = "0xA0F0B0", Offset = "0xA0F0B0", VA = "0xA0F0B0")]
	public static extern float CSharp_AkMusicSyncCallbackInfo_segmentInfo_fBarDuration_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60006D2")]
	[Address(RVA = "0xA0F130", Offset = "0xA0F130", VA = "0xA0F130")]
	public static extern float CSharp_AkMusicSyncCallbackInfo_segmentInfo_fGridDuration_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60006D3")]
	[Address(RVA = "0xA0F1B0", Offset = "0xA0F1B0", VA = "0xA0F1B0")]
	public static extern float CSharp_AkMusicSyncCallbackInfo_segmentInfo_fGridOffset_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60006D4")]
	[Address(RVA = "0xA0F230", Offset = "0xA0F230", VA = "0xA0F230")]
	public static extern int CSharp_AkMusicSyncCallbackInfo_musicSyncType_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60006D5")]
	[Address(RVA = "0xA0F2B0", Offset = "0xA0F2B0", VA = "0xA0F2B0")]
	public static extern IntPtr CSharp_AkMusicSyncCallbackInfo_userCueName_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60006D6")]
	[Address(RVA = "0xA0F330", Offset = "0xA0F330", VA = "0xA0F330")]
	public static extern IntPtr CSharp_new_AkMusicSyncCallbackInfo();

	[PreserveSig]
	[Token(Token = "0x60006D7")]
	[Address(RVA = "0xA0F3A4", Offset = "0xA0F3A4", VA = "0xA0F3A4")]
	public static extern void CSharp_delete_AkMusicSyncCallbackInfo(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60006D8")]
	[Address(RVA = "0xA0F424", Offset = "0xA0F424", VA = "0xA0F424")]
	public static extern uint CSharp_AkMusicPlaylistCallbackInfo_playlistID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60006D9")]
	[Address(RVA = "0xA0F4A4", Offset = "0xA0F4A4", VA = "0xA0F4A4")]
	public static extern uint CSharp_AkMusicPlaylistCallbackInfo_uNumPlaylistItems_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60006DA")]
	[Address(RVA = "0xA0F524", Offset = "0xA0F524", VA = "0xA0F524")]
	public static extern uint CSharp_AkMusicPlaylistCallbackInfo_uPlaylistSelection_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60006DB")]
	[Address(RVA = "0xA0F5A4", Offset = "0xA0F5A4", VA = "0xA0F5A4")]
	public static extern uint CSharp_AkMusicPlaylistCallbackInfo_uPlaylistItemDone_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60006DC")]
	[Address(RVA = "0xA0F624", Offset = "0xA0F624", VA = "0xA0F624")]
	public static extern IntPtr CSharp_new_AkMusicPlaylistCallbackInfo();

	[PreserveSig]
	[Token(Token = "0x60006DD")]
	[Address(RVA = "0xA0F698", Offset = "0xA0F698", VA = "0xA0F698")]
	public static extern void CSharp_delete_AkMusicPlaylistCallbackInfo(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60006DE")]
	[Address(RVA = "0xA0F718", Offset = "0xA0F718", VA = "0xA0F718")]
	public static extern uint CSharp_AkBankCallbackInfo_bankID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60006DF")]
	[Address(RVA = "0xA0F798", Offset = "0xA0F798", VA = "0xA0F798")]
	public static extern IntPtr CSharp_AkBankCallbackInfo_inMemoryBankPtr_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60006E0")]
	[Address(RVA = "0xA0F818", Offset = "0xA0F818", VA = "0xA0F818")]
	public static extern int CSharp_AkBankCallbackInfo_loadResult_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60006E1")]
	[Address(RVA = "0xA0F898", Offset = "0xA0F898", VA = "0xA0F898")]
	public static extern int CSharp_AkBankCallbackInfo_memPoolId_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60006E2")]
	[Address(RVA = "0xA0F918", Offset = "0xA0F918", VA = "0xA0F918")]
	public static extern IntPtr CSharp_new_AkBankCallbackInfo();

	[PreserveSig]
	[Token(Token = "0x60006E3")]
	[Address(RVA = "0xA0F98C", Offset = "0xA0F98C", VA = "0xA0F98C")]
	public static extern void CSharp_delete_AkBankCallbackInfo(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60006E4")]
	[Address(RVA = "0xA0FA0C", Offset = "0xA0FA0C", VA = "0xA0FA0C")]
	public static extern int CSharp_AkMonitoringCallbackInfo_errorCode_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60006E5")]
	[Address(RVA = "0xA0FA8C", Offset = "0xA0FA8C", VA = "0xA0FA8C")]
	public static extern int CSharp_AkMonitoringCallbackInfo_errorLevel_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60006E6")]
	[Address(RVA = "0xA0FB0C", Offset = "0xA0FB0C", VA = "0xA0FB0C")]
	public static extern uint CSharp_AkMonitoringCallbackInfo_playingID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60006E7")]
	[Address(RVA = "0xA0FB8C", Offset = "0xA0FB8C", VA = "0xA0FB8C")]
	public static extern ulong CSharp_AkMonitoringCallbackInfo_gameObjID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60006E8")]
	[Address(RVA = "0xA0FC0C", Offset = "0xA0FC0C", VA = "0xA0FC0C")]
	public static extern IntPtr CSharp_AkMonitoringCallbackInfo_message_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60006E9")]
	[Address(RVA = "0xA0FC8C", Offset = "0xA0FC8C", VA = "0xA0FC8C")]
	public static extern IntPtr CSharp_new_AkMonitoringCallbackInfo();

	[PreserveSig]
	[Token(Token = "0x60006EA")]
	[Address(RVA = "0xA0FD00", Offset = "0xA0FD00", VA = "0xA0FD00")]
	public static extern void CSharp_delete_AkMonitoringCallbackInfo(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60006EB")]
	[Address(RVA = "0xA0FD80", Offset = "0xA0FD80", VA = "0xA0FD80")]
	public static extern bool CSharp_AkAudioInterruptionCallbackInfo_bEnterInterruption_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60006EC")]
	[Address(RVA = "0xA0FE08", Offset = "0xA0FE08", VA = "0xA0FE08")]
	public static extern IntPtr CSharp_new_AkAudioInterruptionCallbackInfo();

	[PreserveSig]
	[Token(Token = "0x60006ED")]
	[Address(RVA = "0xA0FE7C", Offset = "0xA0FE7C", VA = "0xA0FE7C")]
	public static extern void CSharp_delete_AkAudioInterruptionCallbackInfo(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60006EE")]
	[Address(RVA = "0xA0FEFC", Offset = "0xA0FEFC", VA = "0xA0FEFC")]
	public static extern bool CSharp_AkAudioSourceChangeCallbackInfo_bOtherAudioPlaying_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60006EF")]
	[Address(RVA = "0xA0FF84", Offset = "0xA0FF84", VA = "0xA0FF84")]
	public static extern IntPtr CSharp_new_AkAudioSourceChangeCallbackInfo();

	[PreserveSig]
	[Token(Token = "0x60006F0")]
	[Address(RVA = "0xA0FFF8", Offset = "0xA0FFF8", VA = "0xA0FFF8")]
	public static extern void CSharp_delete_AkAudioSourceChangeCallbackInfo(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60006F1")]
	[Address(RVA = "0xA10078", Offset = "0xA10078", VA = "0xA10078")]
	public static extern int CSharp_AkCallbackSerializer_Init(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x60006F2")]
	[Address(RVA = "0xA10108", Offset = "0xA10108", VA = "0xA10108")]
	public static extern void CSharp_AkCallbackSerializer_Term();

	[PreserveSig]
	[Token(Token = "0x60006F3")]
	[Address(RVA = "0xA10178", Offset = "0xA10178", VA = "0xA10178")]
	public static extern IntPtr CSharp_AkCallbackSerializer_Lock();

	[PreserveSig]
	[Token(Token = "0x60006F4")]
	[Address(RVA = "0xA101EC", Offset = "0xA101EC", VA = "0xA101EC")]
	public static extern void CSharp_AkCallbackSerializer_SetLocalOutput(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x60006F5")]
	[Address(RVA = "0xA1026C", Offset = "0xA1026C", VA = "0xA1026C")]
	public static extern void CSharp_AkCallbackSerializer_Unlock();

	[PreserveSig]
	[Token(Token = "0x60006F6")]
	[Address(RVA = "0xA102DC", Offset = "0xA102DC", VA = "0xA102DC")]
	public static extern int CSharp_AkCallbackSerializer_AudioSourceChangeCallbackFunc(bool jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x60006F7")]
	[Address(RVA = "0xA1036C", Offset = "0xA1036C", VA = "0xA1036C")]
	public static extern IntPtr CSharp_new_AkCallbackSerializer();

	[PreserveSig]
	[Token(Token = "0x60006F8")]
	[Address(RVA = "0xA103E0", Offset = "0xA103E0", VA = "0xA103E0")]
	public static extern void CSharp_delete_AkCallbackSerializer(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60006F9")]
	[Address(RVA = "0x9F975C", Offset = "0x9F975C", VA = "0x9F975C")]
	public static extern int CSharp_PostCode__SWIG_0(int jarg1, int jarg2, uint jarg3, ulong jarg4, uint jarg5, bool jarg6);

	[PreserveSig]
	[Token(Token = "0x60006FA")]
	[Address(RVA = "0x9F98E8", Offset = "0x9F98E8", VA = "0x9F98E8")]
	public static extern int CSharp_PostCode__SWIG_1(int jarg1, int jarg2, uint jarg3, ulong jarg4, uint jarg5);

	[PreserveSig]
	[Token(Token = "0x60006FB")]
	[Address(RVA = "0x9F9A5C", Offset = "0x9F9A5C", VA = "0x9F9A5C")]
	public static extern int CSharp_PostCode__SWIG_2(int jarg1, int jarg2, uint jarg3, ulong jarg4);

	[PreserveSig]
	[Token(Token = "0x60006FC")]
	[Address(RVA = "0x9F9B80", Offset = "0x9F9B80", VA = "0x9F9B80")]
	public static extern int CSharp_PostCode__SWIG_3(int jarg1, int jarg2, uint jarg3);

	[PreserveSig]
	[Token(Token = "0x60006FD")]
	[Address(RVA = "0x9F9C8C", Offset = "0x9F9C8C", VA = "0x9F9C8C")]
	public static extern int CSharp_PostCode__SWIG_4(int jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x60006FE")]
	[Address(RVA = "0x9F9DF8", Offset = "0x9F9DF8", VA = "0x9F9DF8")]
	public static extern int CSharp_PostString__SWIG_0(string jarg1, int jarg2, uint jarg3, ulong jarg4, uint jarg5, bool jarg6);

	[PreserveSig]
	[Token(Token = "0x60006FF")]
	[Address(RVA = "0x9F9F9C", Offset = "0x9F9F9C", VA = "0x9F9F9C")]
	public static extern int CSharp_PostString__SWIG_1(string jarg1, int jarg2, uint jarg3, ulong jarg4, uint jarg5);

	[PreserveSig]
	[Token(Token = "0x6000700")]
	[Address(RVA = "0x9FA128", Offset = "0x9FA128", VA = "0x9FA128")]
	public static extern int CSharp_PostString__SWIG_2(string jarg1, int jarg2, uint jarg3, ulong jarg4);

	[PreserveSig]
	[Token(Token = "0x6000701")]
	[Address(RVA = "0x9FA264", Offset = "0x9FA264", VA = "0x9FA264")]
	public static extern int CSharp_PostString__SWIG_3(string jarg1, int jarg2, uint jarg3);

	[PreserveSig]
	[Token(Token = "0x6000702")]
	[Address(RVA = "0x9FA388", Offset = "0x9FA388", VA = "0x9FA388")]
	public static extern int CSharp_PostString__SWIG_4(string jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x6000703")]
	[Address(RVA = "0x9FA48C", Offset = "0x9FA48C", VA = "0x9FA48C")]
	public static extern int CSharp_GetTimeStamp();

	[PreserveSig]
	[Token(Token = "0x6000704")]
	[Address(RVA = "0x9FA564", Offset = "0x9FA564", VA = "0x9FA564")]
	public static extern uint CSharp_GetNumNonZeroBits(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x6000705")]
	[Address(RVA = "0x9FA65C", Offset = "0x9FA65C", VA = "0x9FA65C")]
	public static extern void CSharp_AkGetDefaultHighPriorityThreadProperties(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000706")]
	[Address(RVA = "0x9FA768", Offset = "0x9FA768", VA = "0x9FA768")]
	public static extern uint CSharp_ResolveDialogueEvent__SWIG_0(uint jarg1, [In] uint[] jarg2, uint jarg3, uint jarg4);

	[PreserveSig]
	[Token(Token = "0x6000707")]
	[Address(RVA = "0x9FA894", Offset = "0x9FA894", VA = "0x9FA894")]
	public static extern uint CSharp_ResolveDialogueEvent__SWIG_1(uint jarg1, [In] uint[] jarg2, uint jarg3);

	[PreserveSig]
	[Token(Token = "0x6000708")]
	[Address(RVA = "0x9FA9B0", Offset = "0x9FA9B0", VA = "0x9FA9B0")]
	public static extern int CSharp_GetDialogueEventCustomPropertyValue__SWIG_0(uint jarg1, uint jarg2, out int jarg3);

	[PreserveSig]
	[Token(Token = "0x6000709")]
	[Address(RVA = "0x9FAAC4", Offset = "0x9FAAC4", VA = "0x9FAAC4")]
	public static extern int CSharp_GetDialogueEventCustomPropertyValue__SWIG_1(uint jarg1, uint jarg2, out float jarg3);

	[PreserveSig]
	[Token(Token = "0x600070A")]
	[Address(RVA = "0xA10460", Offset = "0xA10460", VA = "0xA10460")]
	public static extern void CSharp_AkPositioningInfo_fCenterPct_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x600070B")]
	[Address(RVA = "0xA104F0", Offset = "0xA104F0", VA = "0xA104F0")]
	public static extern float CSharp_AkPositioningInfo_fCenterPct_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600070C")]
	[Address(RVA = "0xA10570", Offset = "0xA10570", VA = "0xA10570")]
	public static extern void CSharp_AkPositioningInfo_pannerType_set(IntPtr jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x600070D")]
	[Address(RVA = "0xA10600", Offset = "0xA10600", VA = "0xA10600")]
	public static extern int CSharp_AkPositioningInfo_pannerType_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600070E")]
	[Address(RVA = "0xA10680", Offset = "0xA10680", VA = "0xA10680")]
	public static extern void CSharp_AkPositioningInfo_e3dPositioningType_set(IntPtr jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x600070F")]
	[Address(RVA = "0xA10710", Offset = "0xA10710", VA = "0xA10710")]
	public static extern int CSharp_AkPositioningInfo_e3dPositioningType_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000710")]
	[Address(RVA = "0xA10790", Offset = "0xA10790", VA = "0xA10790")]
	public static extern void CSharp_AkPositioningInfo_bHoldEmitterPosAndOrient_set(IntPtr jarg1, bool jarg2);

	[PreserveSig]
	[Token(Token = "0x6000711")]
	[Address(RVA = "0xA10820", Offset = "0xA10820", VA = "0xA10820")]
	public static extern bool CSharp_AkPositioningInfo_bHoldEmitterPosAndOrient_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000712")]
	[Address(RVA = "0xA108A8", Offset = "0xA108A8", VA = "0xA108A8")]
	public static extern void CSharp_AkPositioningInfo_e3DSpatializationMode_set(IntPtr jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x6000713")]
	[Address(RVA = "0xA10938", Offset = "0xA10938", VA = "0xA10938")]
	public static extern int CSharp_AkPositioningInfo_e3DSpatializationMode_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000714")]
	[Address(RVA = "0xA109B8", Offset = "0xA109B8", VA = "0xA109B8")]
	public static extern void CSharp_AkPositioningInfo_bEnableAttenuation_set(IntPtr jarg1, bool jarg2);

	[PreserveSig]
	[Token(Token = "0x6000715")]
	[Address(RVA = "0xA10A48", Offset = "0xA10A48", VA = "0xA10A48")]
	public static extern bool CSharp_AkPositioningInfo_bEnableAttenuation_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000716")]
	[Address(RVA = "0xA10AD0", Offset = "0xA10AD0", VA = "0xA10AD0")]
	public static extern void CSharp_AkPositioningInfo_bUseConeAttenuation_set(IntPtr jarg1, bool jarg2);

	[PreserveSig]
	[Token(Token = "0x6000717")]
	[Address(RVA = "0xA10B60", Offset = "0xA10B60", VA = "0xA10B60")]
	public static extern bool CSharp_AkPositioningInfo_bUseConeAttenuation_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000718")]
	[Address(RVA = "0xA10BE8", Offset = "0xA10BE8", VA = "0xA10BE8")]
	public static extern void CSharp_AkPositioningInfo_fInnerAngle_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6000719")]
	[Address(RVA = "0xA10C78", Offset = "0xA10C78", VA = "0xA10C78")]
	public static extern float CSharp_AkPositioningInfo_fInnerAngle_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600071A")]
	[Address(RVA = "0xA10CF8", Offset = "0xA10CF8", VA = "0xA10CF8")]
	public static extern void CSharp_AkPositioningInfo_fOuterAngle_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x600071B")]
	[Address(RVA = "0xA10D88", Offset = "0xA10D88", VA = "0xA10D88")]
	public static extern float CSharp_AkPositioningInfo_fOuterAngle_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600071C")]
	[Address(RVA = "0xA10E08", Offset = "0xA10E08", VA = "0xA10E08")]
	public static extern void CSharp_AkPositioningInfo_fConeMaxAttenuation_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x600071D")]
	[Address(RVA = "0xA10E98", Offset = "0xA10E98", VA = "0xA10E98")]
	public static extern float CSharp_AkPositioningInfo_fConeMaxAttenuation_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600071E")]
	[Address(RVA = "0xA10F18", Offset = "0xA10F18", VA = "0xA10F18")]
	public static extern void CSharp_AkPositioningInfo_LPFCone_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x600071F")]
	[Address(RVA = "0xA10FA8", Offset = "0xA10FA8", VA = "0xA10FA8")]
	public static extern float CSharp_AkPositioningInfo_LPFCone_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000720")]
	[Address(RVA = "0xA11028", Offset = "0xA11028", VA = "0xA11028")]
	public static extern void CSharp_AkPositioningInfo_HPFCone_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6000721")]
	[Address(RVA = "0xA110B8", Offset = "0xA110B8", VA = "0xA110B8")]
	public static extern float CSharp_AkPositioningInfo_HPFCone_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000722")]
	[Address(RVA = "0xA11138", Offset = "0xA11138", VA = "0xA11138")]
	public static extern void CSharp_AkPositioningInfo_fMaxDistance_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6000723")]
	[Address(RVA = "0xA111C8", Offset = "0xA111C8", VA = "0xA111C8")]
	public static extern float CSharp_AkPositioningInfo_fMaxDistance_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000724")]
	[Address(RVA = "0xA11248", Offset = "0xA11248", VA = "0xA11248")]
	public static extern void CSharp_AkPositioningInfo_fVolDryAtMaxDist_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6000725")]
	[Address(RVA = "0xA112D8", Offset = "0xA112D8", VA = "0xA112D8")]
	public static extern float CSharp_AkPositioningInfo_fVolDryAtMaxDist_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000726")]
	[Address(RVA = "0xA11358", Offset = "0xA11358", VA = "0xA11358")]
	public static extern void CSharp_AkPositioningInfo_fVolAuxGameDefAtMaxDist_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6000727")]
	[Address(RVA = "0xA113E8", Offset = "0xA113E8", VA = "0xA113E8")]
	public static extern float CSharp_AkPositioningInfo_fVolAuxGameDefAtMaxDist_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000728")]
	[Address(RVA = "0xA11468", Offset = "0xA11468", VA = "0xA11468")]
	public static extern void CSharp_AkPositioningInfo_fVolAuxUserDefAtMaxDist_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6000729")]
	[Address(RVA = "0xA114F8", Offset = "0xA114F8", VA = "0xA114F8")]
	public static extern float CSharp_AkPositioningInfo_fVolAuxUserDefAtMaxDist_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600072A")]
	[Address(RVA = "0xA11578", Offset = "0xA11578", VA = "0xA11578")]
	public static extern void CSharp_AkPositioningInfo_LPFValueAtMaxDist_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x600072B")]
	[Address(RVA = "0xA11608", Offset = "0xA11608", VA = "0xA11608")]
	public static extern float CSharp_AkPositioningInfo_LPFValueAtMaxDist_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600072C")]
	[Address(RVA = "0xA11688", Offset = "0xA11688", VA = "0xA11688")]
	public static extern void CSharp_AkPositioningInfo_HPFValueAtMaxDist_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x600072D")]
	[Address(RVA = "0xA11718", Offset = "0xA11718", VA = "0xA11718")]
	public static extern float CSharp_AkPositioningInfo_HPFValueAtMaxDist_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600072E")]
	[Address(RVA = "0xA11798", Offset = "0xA11798", VA = "0xA11798")]
	public static extern IntPtr CSharp_new_AkPositioningInfo();

	[PreserveSig]
	[Token(Token = "0x600072F")]
	[Address(RVA = "0xA1180C", Offset = "0xA1180C", VA = "0xA1180C")]
	public static extern void CSharp_delete_AkPositioningInfo(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000730")]
	[Address(RVA = "0xA1188C", Offset = "0xA1188C", VA = "0xA1188C")]
	public static extern void CSharp_AkObjectInfo_objID_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000731")]
	[Address(RVA = "0xA1191C", Offset = "0xA1191C", VA = "0xA1191C")]
	public static extern uint CSharp_AkObjectInfo_objID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000732")]
	[Address(RVA = "0xA1199C", Offset = "0xA1199C", VA = "0xA1199C")]
	public static extern void CSharp_AkObjectInfo_parentID_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000733")]
	[Address(RVA = "0xA11A2C", Offset = "0xA11A2C", VA = "0xA11A2C")]
	public static extern uint CSharp_AkObjectInfo_parentID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000734")]
	[Address(RVA = "0xA11AAC", Offset = "0xA11AAC", VA = "0xA11AAC")]
	public static extern void CSharp_AkObjectInfo_iDepth_set(IntPtr jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x6000735")]
	[Address(RVA = "0xA11B3C", Offset = "0xA11B3C", VA = "0xA11B3C")]
	public static extern int CSharp_AkObjectInfo_iDepth_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000736")]
	[Address(RVA = "0xA11BBC", Offset = "0xA11BBC", VA = "0xA11BBC")]
	public static extern void CSharp_AkObjectInfo_Clear(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000737")]
	[Address(RVA = "0xA11C3C", Offset = "0xA11C3C", VA = "0xA11C3C")]
	public static extern int CSharp_AkObjectInfo_GetSizeOf();

	[PreserveSig]
	[Token(Token = "0x6000738")]
	[Address(RVA = "0xA11CB0", Offset = "0xA11CB0", VA = "0xA11CB0")]
	public static extern void CSharp_AkObjectInfo_Clone(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000739")]
	[Address(RVA = "0xA11D40", Offset = "0xA11D40", VA = "0xA11D40")]
	public static extern IntPtr CSharp_new_AkObjectInfo();

	[PreserveSig]
	[Token(Token = "0x600073A")]
	[Address(RVA = "0xA11DB4", Offset = "0xA11DB4", VA = "0xA11DB4")]
	public static extern void CSharp_delete_AkObjectInfo(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600073B")]
	[Address(RVA = "0x9FAC10", Offset = "0x9FAC10", VA = "0x9FAC10")]
	public static extern int CSharp_GetPosition(ulong jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x600073C")]
	[Address(RVA = "0x9FAD60", Offset = "0x9FAD60", VA = "0x9FAD60")]
	public static extern int CSharp_GetListenerPosition(ulong jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x600073D")]
	[Address(RVA = "0x9FAEBC", Offset = "0x9FAEBC", VA = "0x9FAEBC")]
	public static extern int CSharp_GetRTPCValue__SWIG_0(uint jarg1, ulong jarg2, uint jarg3, out float jarg4, ref int jarg5);

	[PreserveSig]
	[Token(Token = "0x600073E")]
	[Address(RVA = "0x9FB038", Offset = "0x9FB038", VA = "0x9FB038")]
	public static extern int CSharp_GetRTPCValue__SWIG_1(string jarg1, ulong jarg2, uint jarg3, out float jarg4, ref int jarg5);

	[PreserveSig]
	[Token(Token = "0x600073F")]
	[Address(RVA = "0x9FB1B4", Offset = "0x9FB1B4", VA = "0x9FB1B4")]
	public static extern int CSharp_GetSwitch__SWIG_0(uint jarg1, ulong jarg2, out uint jarg3);

	[PreserveSig]
	[Token(Token = "0x6000740")]
	[Address(RVA = "0x9FB2F8", Offset = "0x9FB2F8", VA = "0x9FB2F8")]
	public static extern int CSharp_GetSwitch__SWIG_1(string jarg1, ulong jarg2, out uint jarg3);

	[PreserveSig]
	[Token(Token = "0x6000741")]
	[Address(RVA = "0x9FB418", Offset = "0x9FB418", VA = "0x9FB418")]
	public static extern int CSharp_GetState__SWIG_0(uint jarg1, out uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000742")]
	[Address(RVA = "0x9FB51C", Offset = "0x9FB51C", VA = "0x9FB51C")]
	public static extern int CSharp_GetState__SWIG_1(string jarg1, out uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000743")]
	[Address(RVA = "0x9FB684", Offset = "0x9FB684", VA = "0x9FB684")]
	public static extern int CSharp_GetGameObjectAuxSendValues(ulong jarg1, IntPtr jarg2, ref uint jarg3);

	[PreserveSig]
	[Token(Token = "0x6000744")]
	[Address(RVA = "0x9FB7E8", Offset = "0x9FB7E8", VA = "0x9FB7E8")]
	public static extern int CSharp_GetGameObjectDryLevelValue(ulong jarg1, ulong jarg2, out float jarg3);

	[PreserveSig]
	[Token(Token = "0x6000745")]
	[Address(RVA = "0x9FB95C", Offset = "0x9FB95C", VA = "0x9FB95C")]
	public static extern int CSharp_GetObjectObstructionAndOcclusion(ulong jarg1, ulong jarg2, out float jarg3, out float jarg4);

	[PreserveSig]
	[Token(Token = "0x6000746")]
	[Address(RVA = "0x9FBA8C", Offset = "0x9FBA8C", VA = "0x9FBA8C")]
	public static extern int CSharp_QueryAudioObjectIDs__SWIG_0(uint jarg1, ref uint jarg2, IntPtr jarg3);

	[PreserveSig]
	[Token(Token = "0x6000747")]
	[Address(RVA = "0x9FBBAC", Offset = "0x9FBBAC", VA = "0x9FBBAC")]
	public static extern int CSharp_QueryAudioObjectIDs__SWIG_1(string jarg1, ref uint jarg2, IntPtr jarg3);

	[PreserveSig]
	[Token(Token = "0x6000748")]
	[Address(RVA = "0x9FBCE4", Offset = "0x9FBCE4", VA = "0x9FBCE4")]
	public static extern int CSharp_GetPositioningInfo(uint jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000749")]
	[Address(RVA = "0x9FBE10", Offset = "0x9FBE10", VA = "0x9FBE10")]
	public static extern bool CSharp_GetIsGameObjectActive(ulong jarg1);

	[PreserveSig]
	[Token(Token = "0x600074A")]
	[Address(RVA = "0x9FBF34", Offset = "0x9FBF34", VA = "0x9FBF34")]
	public static extern float CSharp_GetMaxRadius(ulong jarg1);

	[PreserveSig]
	[Token(Token = "0x600074B")]
	[Address(RVA = "0x9FC018", Offset = "0x9FC018", VA = "0x9FC018")]
	public static extern uint CSharp_GetEventIDFromPlayingID(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x600074C")]
	[Address(RVA = "0x9FC0FC", Offset = "0x9FC0FC", VA = "0x9FC0FC")]
	public static extern ulong CSharp_GetGameObjectFromPlayingID(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x600074D")]
	[Address(RVA = "0x9FC230", Offset = "0x9FC230", VA = "0x9FC230")]
	public static extern int CSharp_GetPlayingIDsFromGameObject(ulong jarg1, ref uint jarg2, [Out] uint[] jarg3);

	[PreserveSig]
	[Token(Token = "0x600074E")]
	[Address(RVA = "0x9FC3D4", Offset = "0x9FC3D4", VA = "0x9FC3D4")]
	public static extern int CSharp_GetCustomPropertyValue__SWIG_0(uint jarg1, uint jarg2, out int jarg3);

	[PreserveSig]
	[Token(Token = "0x600074F")]
	[Address(RVA = "0x9FC4E8", Offset = "0x9FC4E8", VA = "0x9FC4E8")]
	public static extern int CSharp_GetCustomPropertyValue__SWIG_1(uint jarg1, uint jarg2, out float jarg3);

	[PreserveSig]
	[Token(Token = "0x6000750")]
	[Address(RVA = "0x9FC5E4", Offset = "0x9FC5E4", VA = "0x9FC5E4")]
	public static extern void CSharp_AK_SPEAKER_SETUP_FIX_LEFT_TO_CENTER(ref uint jarg1);

	[PreserveSig]
	[Token(Token = "0x6000751")]
	[Address(RVA = "0x9FC6C8", Offset = "0x9FC6C8", VA = "0x9FC6C8")]
	public static extern void CSharp_AK_SPEAKER_SETUP_FIX_REAR_TO_SIDE(ref uint jarg1);

	[PreserveSig]
	[Token(Token = "0x6000752")]
	[Address(RVA = "0x9FC7AC", Offset = "0x9FC7AC", VA = "0x9FC7AC")]
	public static extern void CSharp_AK_SPEAKER_SETUP_CONVERT_TO_SUPPORTED(ref uint jarg1);

	[PreserveSig]
	[Token(Token = "0x6000753")]
	[Address(RVA = "0x9FC890", Offset = "0x9FC890", VA = "0x9FC890")]
	public static extern byte CSharp_ChannelMaskToNumChannels(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x6000754")]
	[Address(RVA = "0x9FC974", Offset = "0x9FC974", VA = "0x9FC974")]
	public static extern uint CSharp_ChannelMaskFromNumChannels(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x6000755")]
	[Address(RVA = "0x9FCA68", Offset = "0x9FCA68", VA = "0x9FCA68")]
	public static extern byte CSharp_ChannelBitToIndex(uint jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000756")]
	[Address(RVA = "0x9FCB5C", Offset = "0x9FCB5C", VA = "0x9FCB5C")]
	public static extern bool CSharp_HasSurroundChannels(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x6000757")]
	[Address(RVA = "0x9FCC48", Offset = "0x9FCC48", VA = "0x9FCC48")]
	public static extern bool CSharp_HasStrictlyOnePairOfSurroundChannels(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x6000758")]
	[Address(RVA = "0x9FCD34", Offset = "0x9FCD34", VA = "0x9FCD34")]
	public static extern bool CSharp_HasSideAndRearChannels(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x6000759")]
	[Address(RVA = "0x9FCE20", Offset = "0x9FCE20", VA = "0x9FCE20")]
	public static extern bool CSharp_HasHeightChannels(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x600075A")]
	[Address(RVA = "0x9FCF0C", Offset = "0x9FCF0C", VA = "0x9FCF0C")]
	public static extern uint CSharp_BackToSideChannels(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x600075B")]
	[Address(RVA = "0x9FD008", Offset = "0x9FD008", VA = "0x9FD008")]
	public static extern uint CSharp_StdChannelIndexToDisplayIndex(int jarg1, uint jarg2, uint jarg3);

	[PreserveSig]
	[Token(Token = "0x600075C")]
	[Address(RVA = "0xA11E34", Offset = "0xA11E34", VA = "0xA11E34")]
	public static extern void CSharp_AkChannelConfig_uNumChannels_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x600075D")]
	[Address(RVA = "0xA11EC4", Offset = "0xA11EC4", VA = "0xA11EC4")]
	public static extern uint CSharp_AkChannelConfig_uNumChannels_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600075E")]
	[Address(RVA = "0xA11F44", Offset = "0xA11F44", VA = "0xA11F44")]
	public static extern void CSharp_AkChannelConfig_eConfigType_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x600075F")]
	[Address(RVA = "0xA11FD4", Offset = "0xA11FD4", VA = "0xA11FD4")]
	public static extern uint CSharp_AkChannelConfig_eConfigType_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000760")]
	[Address(RVA = "0xA12054", Offset = "0xA12054", VA = "0xA12054")]
	public static extern void CSharp_AkChannelConfig_uChannelMask_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000761")]
	[Address(RVA = "0xA120E4", Offset = "0xA120E4", VA = "0xA120E4")]
	public static extern uint CSharp_AkChannelConfig_uChannelMask_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000762")]
	[Address(RVA = "0xA12164", Offset = "0xA12164", VA = "0xA12164")]
	public static extern IntPtr CSharp_new_AkChannelConfig__SWIG_0();

	[PreserveSig]
	[Token(Token = "0x6000763")]
	[Address(RVA = "0xA121D8", Offset = "0xA121D8", VA = "0xA121D8")]
	public static extern IntPtr CSharp_new_AkChannelConfig__SWIG_1(uint jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000764")]
	[Address(RVA = "0xA12268", Offset = "0xA12268", VA = "0xA12268")]
	public static extern void CSharp_AkChannelConfig_Clear(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000765")]
	[Address(RVA = "0xA122E8", Offset = "0xA122E8", VA = "0xA122E8")]
	public static extern void CSharp_AkChannelConfig_SetStandard(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000766")]
	[Address(RVA = "0xA12378", Offset = "0xA12378", VA = "0xA12378")]
	public static extern void CSharp_AkChannelConfig_SetStandardOrAnonymous(IntPtr jarg1, uint jarg2, uint jarg3);

	[PreserveSig]
	[Token(Token = "0x6000767")]
	[Address(RVA = "0xA12410", Offset = "0xA12410", VA = "0xA12410")]
	public static extern void CSharp_AkChannelConfig_SetAnonymous(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000768")]
	[Address(RVA = "0xA124A0", Offset = "0xA124A0", VA = "0xA124A0")]
	public static extern void CSharp_AkChannelConfig_SetAmbisonic(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000769")]
	[Address(RVA = "0xA12530", Offset = "0xA12530", VA = "0xA12530")]
	public static extern bool CSharp_AkChannelConfig_IsValid(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600076A")]
	[Address(RVA = "0xA125B8", Offset = "0xA125B8", VA = "0xA125B8")]
	public static extern uint CSharp_AkChannelConfig_Serialize(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600076B")]
	[Address(RVA = "0xA12638", Offset = "0xA12638", VA = "0xA12638")]
	public static extern void CSharp_AkChannelConfig_Deserialize(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x600076C")]
	[Address(RVA = "0xA126C8", Offset = "0xA126C8", VA = "0xA126C8")]
	public static extern IntPtr CSharp_AkChannelConfig_RemoveLFE(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600076D")]
	[Address(RVA = "0xA12748", Offset = "0xA12748", VA = "0xA12748")]
	public static extern IntPtr CSharp_AkChannelConfig_RemoveCenter(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600076E")]
	[Address(RVA = "0xA127C8", Offset = "0xA127C8", VA = "0xA127C8")]
	public static extern bool CSharp_AkChannelConfig_IsChannelConfigSupported(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600076F")]
	[Address(RVA = "0xA12850", Offset = "0xA12850", VA = "0xA12850")]
	public static extern void CSharp_delete_AkChannelConfig(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000770")]
	[Address(RVA = "0xA128D0", Offset = "0xA128D0", VA = "0xA128D0")]
	public static extern IntPtr CSharp_new_AkImageSourceParams__SWIG_0();

	[PreserveSig]
	[Token(Token = "0x6000771")]
	[Address(RVA = "0xA12944", Offset = "0xA12944", VA = "0xA12944")]
	public static extern IntPtr CSharp_new_AkImageSourceParams__SWIG_1(IntPtr jarg1, float jarg2, float jarg3);

	[PreserveSig]
	[Token(Token = "0x6000772")]
	[Address(RVA = "0xA129DC", Offset = "0xA129DC", VA = "0xA129DC")]
	public static extern void CSharp_AkImageSourceParams_sourcePosition_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000773")]
	[Address(RVA = "0xA12A6C", Offset = "0xA12A6C", VA = "0xA12A6C")]
	public static extern IntPtr CSharp_AkImageSourceParams_sourcePosition_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000774")]
	[Address(RVA = "0xA12AEC", Offset = "0xA12AEC", VA = "0xA12AEC")]
	public static extern void CSharp_AkImageSourceParams_fDistanceScalingFactor_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6000775")]
	[Address(RVA = "0xA12B7C", Offset = "0xA12B7C", VA = "0xA12B7C")]
	public static extern float CSharp_AkImageSourceParams_fDistanceScalingFactor_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000776")]
	[Address(RVA = "0xA12BFC", Offset = "0xA12BFC", VA = "0xA12BFC")]
	public static extern void CSharp_AkImageSourceParams_fLevel_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6000777")]
	[Address(RVA = "0xA12C8C", Offset = "0xA12C8C", VA = "0xA12C8C")]
	public static extern float CSharp_AkImageSourceParams_fLevel_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000778")]
	[Address(RVA = "0xA12D0C", Offset = "0xA12D0C", VA = "0xA12D0C")]
	public static extern void CSharp_AkImageSourceParams_fDiffraction_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6000779")]
	[Address(RVA = "0xA12D9C", Offset = "0xA12D9C", VA = "0xA12D9C")]
	public static extern float CSharp_AkImageSourceParams_fDiffraction_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600077A")]
	[Address(RVA = "0xA12E1C", Offset = "0xA12E1C", VA = "0xA12E1C")]
	public static extern void CSharp_AkImageSourceParams_uDiffractionEmitterSide_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x600077B")]
	[Address(RVA = "0xA12EAC", Offset = "0xA12EAC", VA = "0xA12EAC")]
	public static extern byte CSharp_AkImageSourceParams_uDiffractionEmitterSide_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600077C")]
	[Address(RVA = "0xA12F2C", Offset = "0xA12F2C", VA = "0xA12F2C")]
	public static extern void CSharp_AkImageSourceParams_uDiffractionListenerSide_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x600077D")]
	[Address(RVA = "0xA12FBC", Offset = "0xA12FBC", VA = "0xA12FBC")]
	public static extern byte CSharp_AkImageSourceParams_uDiffractionListenerSide_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600077E")]
	[Address(RVA = "0xA1303C", Offset = "0xA1303C", VA = "0xA1303C")]
	public static extern void CSharp_delete_AkImageSourceParams(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600077F")]
	[Address(RVA = "0x9FD0FC", Offset = "0x9FD0FC", VA = "0x9FD0FC")]
	public static extern float CSharp_kDefaultMaxPathLength_get();

	[PreserveSig]
	[Token(Token = "0x6000780")]
	[Address(RVA = "0x9FD1C8", Offset = "0x9FD1C8", VA = "0x9FD1C8")]
	public static extern uint CSharp_kDefaultDiffractionMaxEdges_get();

	[PreserveSig]
	[Token(Token = "0x6000781")]
	[Address(RVA = "0x9FD298", Offset = "0x9FD298", VA = "0x9FD298")]
	public static extern uint CSharp_kDefaultDiffractionMaxPaths_get();

	[PreserveSig]
	[Token(Token = "0x6000782")]
	[Address(RVA = "0x9FD368", Offset = "0x9FD368", VA = "0x9FD368")]
	public static extern float CSharp_kMaxDiffraction_get();

	[PreserveSig]
	[Token(Token = "0x6000783")]
	[Address(RVA = "0x9FD434", Offset = "0x9FD434", VA = "0x9FD434")]
	public static extern uint CSharp_kListenerDiffractionMaxEdges_get();

	[PreserveSig]
	[Token(Token = "0x6000784")]
	[Address(RVA = "0x9FD504", Offset = "0x9FD504", VA = "0x9FD504")]
	public static extern uint CSharp_kListenerDiffractionMaxPaths_get();

	[PreserveSig]
	[Token(Token = "0x6000785")]
	[Address(RVA = "0x9FD5D4", Offset = "0x9FD5D4", VA = "0x9FD5D4")]
	public static extern uint CSharp_kPortalToPortalDiffractionMaxPaths_get();

	[PreserveSig]
	[Token(Token = "0x6000786")]
	[Address(RVA = "0x9FD6AC", Offset = "0x9FD6AC", VA = "0x9FD6AC")]
	public static extern void CSharp_g_SpatialAudioPoolId_set(int jarg1);

	[PreserveSig]
	[Token(Token = "0x6000787")]
	[Address(RVA = "0x9FD788", Offset = "0x9FD788", VA = "0x9FD788")]
	public static extern int CSharp_g_SpatialAudioPoolId_get();

	[PreserveSig]
	[Token(Token = "0x6000788")]
	[Address(RVA = "0xA130BC", Offset = "0xA130BC", VA = "0xA130BC")]
	public static extern int CSharp__ArrayPoolSpatialAudio_Get();

	[PreserveSig]
	[Token(Token = "0x6000789")]
	[Address(RVA = "0xA13130", Offset = "0xA13130", VA = "0xA13130")]
	public static extern IntPtr CSharp_new__ArrayPoolSpatialAudio();

	[PreserveSig]
	[Token(Token = "0x600078A")]
	[Address(RVA = "0xA131A4", Offset = "0xA131A4", VA = "0xA131A4")]
	public static extern void CSharp_delete__ArrayPoolSpatialAudio(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600078B")]
	[Address(RVA = "0xA13224", Offset = "0xA13224", VA = "0xA13224")]
	public static extern IntPtr CSharp_new_AkSpatialAudioInitSettings();

	[PreserveSig]
	[Token(Token = "0x600078C")]
	[Address(RVA = "0xA13298", Offset = "0xA13298", VA = "0xA13298")]
	public static extern void CSharp_AkSpatialAudioInitSettings_uPoolID_set(IntPtr jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x600078D")]
	[Address(RVA = "0xA13328", Offset = "0xA13328", VA = "0xA13328")]
	public static extern int CSharp_AkSpatialAudioInitSettings_uPoolID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600078E")]
	[Address(RVA = "0xA133A8", Offset = "0xA133A8", VA = "0xA133A8")]
	public static extern void CSharp_AkSpatialAudioInitSettings_uPoolSize_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x600078F")]
	[Address(RVA = "0xA13438", Offset = "0xA13438", VA = "0xA13438")]
	public static extern uint CSharp_AkSpatialAudioInitSettings_uPoolSize_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000790")]
	[Address(RVA = "0xA134B8", Offset = "0xA134B8", VA = "0xA134B8")]
	public static extern void CSharp_AkSpatialAudioInitSettings_uMaxSoundPropagationDepth_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000791")]
	[Address(RVA = "0xA13548", Offset = "0xA13548", VA = "0xA13548")]
	public static extern uint CSharp_AkSpatialAudioInitSettings_uMaxSoundPropagationDepth_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000792")]
	[Address(RVA = "0xA135C8", Offset = "0xA135C8", VA = "0xA135C8")]
	public static extern void CSharp_AkSpatialAudioInitSettings_uDiffractionFlags_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000793")]
	[Address(RVA = "0xA13658", Offset = "0xA13658", VA = "0xA13658")]
	public static extern uint CSharp_AkSpatialAudioInitSettings_uDiffractionFlags_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000794")]
	[Address(RVA = "0xA136D8", Offset = "0xA136D8", VA = "0xA136D8")]
	public static extern void CSharp_AkSpatialAudioInitSettings_fDiffractionShadowAttenFactor_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6000795")]
	[Address(RVA = "0xA13768", Offset = "0xA13768", VA = "0xA13768")]
	public static extern float CSharp_AkSpatialAudioInitSettings_fDiffractionShadowAttenFactor_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000796")]
	[Address(RVA = "0xA137E8", Offset = "0xA137E8", VA = "0xA137E8")]
	public static extern void CSharp_AkSpatialAudioInitSettings_fDiffractionShadowDegrees_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6000797")]
	[Address(RVA = "0xA13878", Offset = "0xA13878", VA = "0xA13878")]
	public static extern float CSharp_AkSpatialAudioInitSettings_fDiffractionShadowDegrees_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000798")]
	[Address(RVA = "0xA138F8", Offset = "0xA138F8", VA = "0xA138F8")]
	public static extern void CSharp_AkSpatialAudioInitSettings_fMovementThreshold_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6000799")]
	[Address(RVA = "0xA13988", Offset = "0xA13988", VA = "0xA13988")]
	public static extern float CSharp_AkSpatialAudioInitSettings_fMovementThreshold_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600079A")]
	[Address(RVA = "0xA13A08", Offset = "0xA13A08", VA = "0xA13A08")]
	public static extern void CSharp_delete_AkSpatialAudioInitSettings(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600079B")]
	[Address(RVA = "0xA13A88", Offset = "0xA13A88", VA = "0xA13A88")]
	public static extern IntPtr CSharp_new_AkImageSourceSettings__SWIG_0();

	[PreserveSig]
	[Token(Token = "0x600079C")]
	[Address(RVA = "0xA13AFC", Offset = "0xA13AFC", VA = "0xA13AFC")]
	public static extern IntPtr CSharp_new_AkImageSourceSettings__SWIG_1(IntPtr jarg1, float jarg2, float jarg3);

	[PreserveSig]
	[Token(Token = "0x600079D")]
	[Address(RVA = "0xA13B94", Offset = "0xA13B94", VA = "0xA13B94")]
	public static extern void CSharp_delete_AkImageSourceSettings(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600079E")]
	[Address(RVA = "0xA13C14", Offset = "0xA13C14", VA = "0xA13C14")]
	public static extern void CSharp_AkImageSourceSettings_SetOneTexture(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x600079F")]
	[Address(RVA = "0xA13CA4", Offset = "0xA13CA4", VA = "0xA13CA4")]
	public static extern void CSharp_AkImageSourceSettings_SetName(IntPtr jarg1, string jarg2);

	[PreserveSig]
	[Token(Token = "0x60007A0")]
	[Address(RVA = "0xA13D48", Offset = "0xA13D48", VA = "0xA13D48")]
	public static extern void CSharp_AkImageSourceSettings_params__set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x60007A1")]
	[Address(RVA = "0xA13DD8", Offset = "0xA13DD8", VA = "0xA13DD8")]
	public static extern IntPtr CSharp_AkImageSourceSettings_params__get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60007A2")]
	[Address(RVA = "0xA13E58", Offset = "0xA13E58", VA = "0xA13E58")]
	public static extern IntPtr CSharp_new_AkEmitterSettings();

	[PreserveSig]
	[Token(Token = "0x60007A3")]
	[Address(RVA = "0xA13ECC", Offset = "0xA13ECC", VA = "0xA13ECC")]
	public static extern void CSharp_AkEmitterSettings_reflectAuxBusID_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x60007A4")]
	[Address(RVA = "0xA13F5C", Offset = "0xA13F5C", VA = "0xA13F5C")]
	public static extern uint CSharp_AkEmitterSettings_reflectAuxBusID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60007A5")]
	[Address(RVA = "0xA13FDC", Offset = "0xA13FDC", VA = "0xA13FDC")]
	public static extern void CSharp_AkEmitterSettings_reflectionMaxPathLength_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x60007A6")]
	[Address(RVA = "0xA1406C", Offset = "0xA1406C", VA = "0xA1406C")]
	public static extern float CSharp_AkEmitterSettings_reflectionMaxPathLength_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60007A7")]
	[Address(RVA = "0xA140EC", Offset = "0xA140EC", VA = "0xA140EC")]
	public static extern void CSharp_AkEmitterSettings_reflectionsAuxBusGain_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x60007A8")]
	[Address(RVA = "0xA1417C", Offset = "0xA1417C", VA = "0xA1417C")]
	public static extern float CSharp_AkEmitterSettings_reflectionsAuxBusGain_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60007A9")]
	[Address(RVA = "0xA141FC", Offset = "0xA141FC", VA = "0xA141FC")]
	public static extern void CSharp_AkEmitterSettings_reflectionsOrder_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x60007AA")]
	[Address(RVA = "0xA1428C", Offset = "0xA1428C", VA = "0xA1428C")]
	public static extern uint CSharp_AkEmitterSettings_reflectionsOrder_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60007AB")]
	[Address(RVA = "0xA1430C", Offset = "0xA1430C", VA = "0xA1430C")]
	public static extern void CSharp_AkEmitterSettings_reflectorFilterMask_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x60007AC")]
	[Address(RVA = "0xA1439C", Offset = "0xA1439C", VA = "0xA1439C")]
	public static extern uint CSharp_AkEmitterSettings_reflectorFilterMask_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60007AD")]
	[Address(RVA = "0xA1441C", Offset = "0xA1441C", VA = "0xA1441C")]
	public static extern void CSharp_AkEmitterSettings_roomReverbAuxBusGain_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x60007AE")]
	[Address(RVA = "0xA144AC", Offset = "0xA144AC", VA = "0xA144AC")]
	public static extern float CSharp_AkEmitterSettings_roomReverbAuxBusGain_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60007AF")]
	[Address(RVA = "0xA1452C", Offset = "0xA1452C", VA = "0xA1452C")]
	public static extern void CSharp_AkEmitterSettings_diffractionMaxEdges_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x60007B0")]
	[Address(RVA = "0xA145BC", Offset = "0xA145BC", VA = "0xA145BC")]
	public static extern uint CSharp_AkEmitterSettings_diffractionMaxEdges_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60007B1")]
	[Address(RVA = "0xA1463C", Offset = "0xA1463C", VA = "0xA1463C")]
	public static extern void CSharp_AkEmitterSettings_diffractionMaxPaths_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x60007B2")]
	[Address(RVA = "0xA146CC", Offset = "0xA146CC", VA = "0xA146CC")]
	public static extern uint CSharp_AkEmitterSettings_diffractionMaxPaths_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60007B3")]
	[Address(RVA = "0xA1474C", Offset = "0xA1474C", VA = "0xA1474C")]
	public static extern void CSharp_AkEmitterSettings_diffractionMaxPathLength_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x60007B4")]
	[Address(RVA = "0xA147DC", Offset = "0xA147DC", VA = "0xA147DC")]
	public static extern float CSharp_AkEmitterSettings_diffractionMaxPathLength_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60007B5")]
	[Address(RVA = "0xA1485C", Offset = "0xA1485C", VA = "0xA1485C")]
	public static extern void CSharp_AkEmitterSettings_useImageSources_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x60007B6")]
	[Address(RVA = "0xA148EC", Offset = "0xA148EC", VA = "0xA148EC")]
	public static extern byte CSharp_AkEmitterSettings_useImageSources_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60007B7")]
	[Address(RVA = "0xA1496C", Offset = "0xA1496C", VA = "0xA1496C")]
	public static extern void CSharp_delete_AkEmitterSettings(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60007B8")]
	[Address(RVA = "0xA149EC", Offset = "0xA149EC", VA = "0xA149EC")]
	public static extern IntPtr CSharp_new_AkVertex__SWIG_0();

	[PreserveSig]
	[Token(Token = "0x60007B9")]
	[Address(RVA = "0xA14A60", Offset = "0xA14A60", VA = "0xA14A60")]
	public static extern IntPtr CSharp_new_AkVertex__SWIG_1(float jarg1, float jarg2, float jarg3);

	[PreserveSig]
	[Token(Token = "0x60007BA")]
	[Address(RVA = "0xA14B00", Offset = "0xA14B00", VA = "0xA14B00")]
	public static extern void CSharp_AkVertex_X_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x60007BB")]
	[Address(RVA = "0xA14B90", Offset = "0xA14B90", VA = "0xA14B90")]
	public static extern float CSharp_AkVertex_X_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60007BC")]
	[Address(RVA = "0xA14C10", Offset = "0xA14C10", VA = "0xA14C10")]
	public static extern void CSharp_AkVertex_Y_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x60007BD")]
	[Address(RVA = "0xA14CA0", Offset = "0xA14CA0", VA = "0xA14CA0")]
	public static extern float CSharp_AkVertex_Y_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60007BE")]
	[Address(RVA = "0xA14D20", Offset = "0xA14D20", VA = "0xA14D20")]
	public static extern void CSharp_AkVertex_Z_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x60007BF")]
	[Address(RVA = "0xA14DB0", Offset = "0xA14DB0", VA = "0xA14DB0")]
	public static extern float CSharp_AkVertex_Z_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60007C0")]
	[Address(RVA = "0xA14E30", Offset = "0xA14E30", VA = "0xA14E30")]
	public static extern void CSharp_AkVertex_Clear(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60007C1")]
	[Address(RVA = "0xA14EB0", Offset = "0xA14EB0", VA = "0xA14EB0")]
	public static extern int CSharp_AkVertex_GetSizeOf();

	[PreserveSig]
	[Token(Token = "0x60007C2")]
	[Address(RVA = "0xA14F24", Offset = "0xA14F24", VA = "0xA14F24")]
	public static extern void CSharp_AkVertex_Clone(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x60007C3")]
	[Address(RVA = "0xA14FB4", Offset = "0xA14FB4", VA = "0xA14FB4")]
	public static extern void CSharp_delete_AkVertex(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60007C4")]
	[Address(RVA = "0xA15034", Offset = "0xA15034", VA = "0xA15034")]
	public static extern IntPtr CSharp_new_AkTriangle__SWIG_0();

	[PreserveSig]
	[Token(Token = "0x60007C5")]
	[Address(RVA = "0xA150A8", Offset = "0xA150A8", VA = "0xA150A8")]
	public static extern IntPtr CSharp_new_AkTriangle__SWIG_1(ushort jarg1, ushort jarg2, ushort jarg3, ushort jarg4);

	[PreserveSig]
	[Token(Token = "0x60007C6")]
	[Address(RVA = "0xA15150", Offset = "0xA15150", VA = "0xA15150")]
	public static extern void CSharp_AkTriangle_point0_set(IntPtr jarg1, ushort jarg2);

	[PreserveSig]
	[Token(Token = "0x60007C7")]
	[Address(RVA = "0xA151E0", Offset = "0xA151E0", VA = "0xA151E0")]
	public static extern ushort CSharp_AkTriangle_point0_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60007C8")]
	[Address(RVA = "0xA15260", Offset = "0xA15260", VA = "0xA15260")]
	public static extern void CSharp_AkTriangle_point1_set(IntPtr jarg1, ushort jarg2);

	[PreserveSig]
	[Token(Token = "0x60007C9")]
	[Address(RVA = "0xA152F0", Offset = "0xA152F0", VA = "0xA152F0")]
	public static extern ushort CSharp_AkTriangle_point1_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60007CA")]
	[Address(RVA = "0xA15370", Offset = "0xA15370", VA = "0xA15370")]
	public static extern void CSharp_AkTriangle_point2_set(IntPtr jarg1, ushort jarg2);

	[PreserveSig]
	[Token(Token = "0x60007CB")]
	[Address(RVA = "0xA15400", Offset = "0xA15400", VA = "0xA15400")]
	public static extern ushort CSharp_AkTriangle_point2_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60007CC")]
	[Address(RVA = "0xA15480", Offset = "0xA15480", VA = "0xA15480")]
	public static extern void CSharp_AkTriangle_surface_set(IntPtr jarg1, ushort jarg2);

	[PreserveSig]
	[Token(Token = "0x60007CD")]
	[Address(RVA = "0xA15510", Offset = "0xA15510", VA = "0xA15510")]
	public static extern ushort CSharp_AkTriangle_surface_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60007CE")]
	[Address(RVA = "0xA15590", Offset = "0xA15590", VA = "0xA15590")]
	public static extern void CSharp_AkTriangle_Clear(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60007CF")]
	[Address(RVA = "0xA15610", Offset = "0xA15610", VA = "0xA15610")]
	public static extern int CSharp_AkTriangle_GetSizeOf();

	[PreserveSig]
	[Token(Token = "0x60007D0")]
	[Address(RVA = "0xA15684", Offset = "0xA15684", VA = "0xA15684")]
	public static extern void CSharp_AkTriangle_Clone(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x60007D1")]
	[Address(RVA = "0xA15714", Offset = "0xA15714", VA = "0xA15714")]
	public static extern void CSharp_delete_AkTriangle(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60007D2")]
	[Address(RVA = "0xA15794", Offset = "0xA15794", VA = "0xA15794")]
	public static extern IntPtr CSharp_new_AkAcousticSurface();

	[PreserveSig]
	[Token(Token = "0x60007D3")]
	[Address(RVA = "0xA15808", Offset = "0xA15808", VA = "0xA15808")]
	public static extern void CSharp_AkAcousticSurface_textureID_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x60007D4")]
	[Address(RVA = "0xA15898", Offset = "0xA15898", VA = "0xA15898")]
	public static extern uint CSharp_AkAcousticSurface_textureID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60007D5")]
	[Address(RVA = "0xA15918", Offset = "0xA15918", VA = "0xA15918")]
	public static extern void CSharp_AkAcousticSurface_reflectorChannelMask_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x60007D6")]
	[Address(RVA = "0xA159A8", Offset = "0xA159A8", VA = "0xA159A8")]
	public static extern uint CSharp_AkAcousticSurface_reflectorChannelMask_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60007D7")]
	[Address(RVA = "0xA15A28", Offset = "0xA15A28", VA = "0xA15A28")]
	public static extern void CSharp_AkAcousticSurface_strName_set(IntPtr jarg1, string jarg2);

	[PreserveSig]
	[Token(Token = "0x60007D8")]
	[Address(RVA = "0xA15ACC", Offset = "0xA15ACC", VA = "0xA15ACC")]
	public static extern IntPtr CSharp_AkAcousticSurface_strName_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60007D9")]
	[Address(RVA = "0xA15B4C", Offset = "0xA15B4C", VA = "0xA15B4C")]
	public static extern void CSharp_AkAcousticSurface_Clear(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60007DA")]
	[Address(RVA = "0xA15BCC", Offset = "0xA15BCC", VA = "0xA15BCC")]
	public static extern void CSharp_AkAcousticSurface_DeleteName(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60007DB")]
	[Address(RVA = "0xA15C4C", Offset = "0xA15C4C", VA = "0xA15C4C")]
	public static extern int CSharp_AkAcousticSurface_GetSizeOf();

	[PreserveSig]
	[Token(Token = "0x60007DC")]
	[Address(RVA = "0xA15CC0", Offset = "0xA15CC0", VA = "0xA15CC0")]
	public static extern void CSharp_AkAcousticSurface_Clone(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x60007DD")]
	[Address(RVA = "0xA15D50", Offset = "0xA15D50", VA = "0xA15D50")]
	public static extern void CSharp_delete_AkAcousticSurface(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60007DE")]
	[Address(RVA = "0xA15DD0", Offset = "0xA15DD0", VA = "0xA15DD0")]
	public static extern void CSharp_AkReflectionPathInfo_imageSource_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x60007DF")]
	[Address(RVA = "0xA15E60", Offset = "0xA15E60", VA = "0xA15E60")]
	public static extern IntPtr CSharp_AkReflectionPathInfo_imageSource_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60007E0")]
	[Address(RVA = "0xA15EE0", Offset = "0xA15EE0", VA = "0xA15EE0")]
	public static extern void CSharp_AkReflectionPathInfo_numPathPoints_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x60007E1")]
	[Address(RVA = "0xA15F70", Offset = "0xA15F70", VA = "0xA15F70")]
	public static extern uint CSharp_AkReflectionPathInfo_numPathPoints_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60007E2")]
	[Address(RVA = "0xA15FF0", Offset = "0xA15FF0", VA = "0xA15FF0")]
	public static extern void CSharp_AkReflectionPathInfo_numReflections_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x60007E3")]
	[Address(RVA = "0xA16080", Offset = "0xA16080", VA = "0xA16080")]
	public static extern uint CSharp_AkReflectionPathInfo_numReflections_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60007E4")]
	[Address(RVA = "0xA16100", Offset = "0xA16100", VA = "0xA16100")]
	public static extern void CSharp_AkReflectionPathInfo_level_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x60007E5")]
	[Address(RVA = "0xA16190", Offset = "0xA16190", VA = "0xA16190")]
	public static extern float CSharp_AkReflectionPathInfo_level_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60007E6")]
	[Address(RVA = "0xA16210", Offset = "0xA16210", VA = "0xA16210")]
	public static extern void CSharp_AkReflectionPathInfo_isOccluded_set(IntPtr jarg1, bool jarg2);

	[PreserveSig]
	[Token(Token = "0x60007E7")]
	[Address(RVA = "0xA162A0", Offset = "0xA162A0", VA = "0xA162A0")]
	public static extern bool CSharp_AkReflectionPathInfo_isOccluded_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60007E8")]
	[Address(RVA = "0xA16328", Offset = "0xA16328", VA = "0xA16328")]
	public static extern int CSharp_AkReflectionPathInfo_GetSizeOf();

	[PreserveSig]
	[Token(Token = "0x60007E9")]
	[Address(RVA = "0xA1639C", Offset = "0xA1639C", VA = "0xA1639C")]
	public static extern IntPtr CSharp_AkReflectionPathInfo_GetPathPoint(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x60007EA")]
	[Address(RVA = "0xA1642C", Offset = "0xA1642C", VA = "0xA1642C")]
	public static extern IntPtr CSharp_AkReflectionPathInfo_GetAcousticSurface(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x60007EB")]
	[Address(RVA = "0xA164BC", Offset = "0xA164BC", VA = "0xA164BC")]
	public static extern float CSharp_AkReflectionPathInfo_GetDiffraction(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x60007EC")]
	[Address(RVA = "0xA1654C", Offset = "0xA1654C", VA = "0xA1654C")]
	public static extern void CSharp_AkReflectionPathInfo_Clone(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x60007ED")]
	[Address(RVA = "0xA165DC", Offset = "0xA165DC", VA = "0xA165DC")]
	public static extern IntPtr CSharp_new_AkReflectionPathInfo();

	[PreserveSig]
	[Token(Token = "0x60007EE")]
	[Address(RVA = "0xA16650", Offset = "0xA16650", VA = "0xA16650")]
	public static extern void CSharp_delete_AkReflectionPathInfo(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60007EF")]
	[Address(RVA = "0xA166D0", Offset = "0xA166D0", VA = "0xA166D0")]
	public static extern void CSharp_AkDiffractionPathInfo_virtualPos_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x60007F0")]
	[Address(RVA = "0xA16760", Offset = "0xA16760", VA = "0xA16760")]
	public static extern IntPtr CSharp_AkDiffractionPathInfo_virtualPos_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60007F1")]
	[Address(RVA = "0xA167E0", Offset = "0xA167E0", VA = "0xA167E0")]
	public static extern void CSharp_AkDiffractionPathInfo_nodeCount_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x60007F2")]
	[Address(RVA = "0xA16870", Offset = "0xA16870", VA = "0xA16870")]
	public static extern uint CSharp_AkDiffractionPathInfo_nodeCount_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60007F3")]
	[Address(RVA = "0xA168F0", Offset = "0xA168F0", VA = "0xA168F0")]
	public static extern void CSharp_AkDiffractionPathInfo_diffraction_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x60007F4")]
	[Address(RVA = "0xA16980", Offset = "0xA16980", VA = "0xA16980")]
	public static extern float CSharp_AkDiffractionPathInfo_diffraction_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60007F5")]
	[Address(RVA = "0xA16A00", Offset = "0xA16A00", VA = "0xA16A00")]
	public static extern void CSharp_AkDiffractionPathInfo_totLength_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x60007F6")]
	[Address(RVA = "0xA16A90", Offset = "0xA16A90", VA = "0xA16A90")]
	public static extern float CSharp_AkDiffractionPathInfo_totLength_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60007F7")]
	[Address(RVA = "0xA16B10", Offset = "0xA16B10", VA = "0xA16B10")]
	public static extern void CSharp_AkDiffractionPathInfo_obstructionValue_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x60007F8")]
	[Address(RVA = "0xA16BA0", Offset = "0xA16BA0", VA = "0xA16BA0")]
	public static extern float CSharp_AkDiffractionPathInfo_obstructionValue_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60007F9")]
	[Address(RVA = "0xA16C20", Offset = "0xA16C20", VA = "0xA16C20")]
	public static extern int CSharp_AkDiffractionPathInfo_GetSizeOf();

	[PreserveSig]
	[Token(Token = "0x60007FA")]
	[Address(RVA = "0xA16C94", Offset = "0xA16C94", VA = "0xA16C94")]
	public static extern IntPtr CSharp_AkDiffractionPathInfo_GetNodes(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x60007FB")]
	[Address(RVA = "0xA16D24", Offset = "0xA16D24", VA = "0xA16D24")]
	public static extern float CSharp_AkDiffractionPathInfo_GetAngles(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x60007FC")]
	[Address(RVA = "0xA16DB4", Offset = "0xA16DB4", VA = "0xA16DB4")]
	public static extern ulong CSharp_AkDiffractionPathInfo_GetPortals(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x60007FD")]
	[Address(RVA = "0xA16E44", Offset = "0xA16E44", VA = "0xA16E44")]
	public static extern ulong CSharp_AkDiffractionPathInfo_GetRooms(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x60007FE")]
	[Address(RVA = "0xA16ED4", Offset = "0xA16ED4", VA = "0xA16ED4")]
	public static extern void CSharp_AkDiffractionPathInfo_Clone(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x60007FF")]
	[Address(RVA = "0xA16F64", Offset = "0xA16F64", VA = "0xA16F64")]
	public static extern IntPtr CSharp_new_AkDiffractionPathInfo();

	[PreserveSig]
	[Token(Token = "0x6000800")]
	[Address(RVA = "0xA16FD8", Offset = "0xA16FD8", VA = "0xA16FD8")]
	public static extern void CSharp_delete_AkDiffractionPathInfo(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000801")]
	[Address(RVA = "0xA17058", Offset = "0xA17058", VA = "0xA17058")]
	public static extern IntPtr CSharp_new_AkRoomParams();

	[PreserveSig]
	[Token(Token = "0x6000802")]
	[Address(RVA = "0xA170CC", Offset = "0xA170CC", VA = "0xA170CC")]
	public static extern void CSharp_AkRoomParams_Up_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000803")]
	[Address(RVA = "0xA1715C", Offset = "0xA1715C", VA = "0xA1715C")]
	public static extern IntPtr CSharp_AkRoomParams_Up_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000804")]
	[Address(RVA = "0xA171DC", Offset = "0xA171DC", VA = "0xA171DC")]
	public static extern void CSharp_AkRoomParams_Front_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000805")]
	[Address(RVA = "0xA1726C", Offset = "0xA1726C", VA = "0xA1726C")]
	public static extern IntPtr CSharp_AkRoomParams_Front_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000806")]
	[Address(RVA = "0xA172EC", Offset = "0xA172EC", VA = "0xA172EC")]
	public static extern void CSharp_AkRoomParams_ReverbAuxBus_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000807")]
	[Address(RVA = "0xA1737C", Offset = "0xA1737C", VA = "0xA1737C")]
	public static extern uint CSharp_AkRoomParams_ReverbAuxBus_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000808")]
	[Address(RVA = "0xA173FC", Offset = "0xA173FC", VA = "0xA173FC")]
	public static extern void CSharp_AkRoomParams_ReverbLevel_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6000809")]
	[Address(RVA = "0xA1748C", Offset = "0xA1748C", VA = "0xA1748C")]
	public static extern float CSharp_AkRoomParams_ReverbLevel_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600080A")]
	[Address(RVA = "0xA1750C", Offset = "0xA1750C", VA = "0xA1750C")]
	public static extern void CSharp_AkRoomParams_WallOcclusion_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x600080B")]
	[Address(RVA = "0xA1759C", Offset = "0xA1759C", VA = "0xA1759C")]
	public static extern float CSharp_AkRoomParams_WallOcclusion_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600080C")]
	[Address(RVA = "0xA1761C", Offset = "0xA1761C", VA = "0xA1761C")]
	public static extern void CSharp_AkRoomParams_RoomGameObj_AuxSendLevelToSelf_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x600080D")]
	[Address(RVA = "0xA176AC", Offset = "0xA176AC", VA = "0xA176AC")]
	public static extern float CSharp_AkRoomParams_RoomGameObj_AuxSendLevelToSelf_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600080E")]
	[Address(RVA = "0xA1772C", Offset = "0xA1772C", VA = "0xA1772C")]
	public static extern void CSharp_AkRoomParams_RoomGameObj_KeepRegistered_set(IntPtr jarg1, bool jarg2);

	[PreserveSig]
	[Token(Token = "0x600080F")]
	[Address(RVA = "0xA177BC", Offset = "0xA177BC", VA = "0xA177BC")]
	public static extern bool CSharp_AkRoomParams_RoomGameObj_KeepRegistered_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000810")]
	[Address(RVA = "0xA17844", Offset = "0xA17844", VA = "0xA17844")]
	public static extern void CSharp_delete_AkRoomParams(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000811")]
	[Address(RVA = "0x9FD858", Offset = "0x9FD858", VA = "0x9FD858")]
	public static extern int CSharp_GetPoolID();

	[PreserveSig]
	[Token(Token = "0x6000812")]
	[Address(RVA = "0x9FD98C", Offset = "0x9FD98C", VA = "0x9FD98C")]
	public static extern int CSharp_RegisterEmitter(ulong jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000813")]
	[Address(RVA = "0x9FDAB8", Offset = "0x9FDAB8", VA = "0x9FDAB8")]
	public static extern int CSharp_UnregisterEmitter(ulong jarg1);

	[PreserveSig]
	[Token(Token = "0x6000814")]
	[Address(RVA = "0x9FDBF8", Offset = "0x9FDBF8", VA = "0x9FDBF8")]
	public static extern int CSharp_SetEmitterAuxSendValues(ulong jarg1, IntPtr jarg2, uint jarg3);

	[PreserveSig]
	[Token(Token = "0x6000815")]
	[Address(RVA = "0x9FDD70", Offset = "0x9FDD70", VA = "0x9FDD70")]
	public static extern int CSharp_SetImageSource__SWIG_0(uint jarg1, IntPtr jarg2, uint jarg3, ulong jarg4, ulong jarg5);

	[PreserveSig]
	[Token(Token = "0x6000816")]
	[Address(RVA = "0x9FDEC0", Offset = "0x9FDEC0", VA = "0x9FDEC0")]
	public static extern int CSharp_SetImageSource__SWIG_1(uint jarg1, IntPtr jarg2, uint jarg3, ulong jarg4);

	[PreserveSig]
	[Token(Token = "0x6000817")]
	[Address(RVA = "0x9FE01C", Offset = "0x9FE01C", VA = "0x9FE01C")]
	public static extern int CSharp_RemoveImageSource__SWIG_0(uint jarg1, uint jarg2, ulong jarg3);

	[PreserveSig]
	[Token(Token = "0x6000818")]
	[Address(RVA = "0x9FE128", Offset = "0x9FE128", VA = "0x9FE128")]
	public static extern int CSharp_RemoveImageSource__SWIG_1(uint jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000819")]
	[Address(RVA = "0x9FE21C", Offset = "0x9FE21C", VA = "0x9FE21C")]
	public static extern int CSharp_RemoveGeometry(ulong jarg1);

	[PreserveSig]
	[Token(Token = "0x600081A")]
	[Address(RVA = "0x9FE394", Offset = "0x9FE394", VA = "0x9FE394")]
	public static extern int CSharp_QueryReflectionPaths(ulong jarg1, IntPtr jarg2, IntPtr jarg3, IntPtr jarg4, out uint jarg5);

	[PreserveSig]
	[Token(Token = "0x600081B")]
	[Address(RVA = "0x9FE4A8", Offset = "0x9FE4A8", VA = "0x9FE4A8")]
	public static extern int CSharp_RemoveRoom(ulong jarg1);

	[PreserveSig]
	[Token(Token = "0x600081C")]
	[Address(RVA = "0x9FE58C", Offset = "0x9FE58C", VA = "0x9FE58C")]
	public static extern int CSharp_RemovePortal(ulong jarg1);

	[PreserveSig]
	[Token(Token = "0x600081D")]
	[Address(RVA = "0x9FE6B8", Offset = "0x9FE6B8", VA = "0x9FE6B8")]
	public static extern int CSharp_SetGameObjectInRoom(ulong jarg1, ulong jarg2);

	[PreserveSig]
	[Token(Token = "0x600081E")]
	[Address(RVA = "0x9FE7FC", Offset = "0x9FE7FC", VA = "0x9FE7FC")]
	public static extern int CSharp_SetEmitterObstructionAndOcclusion(ulong jarg1, float jarg2, float jarg3);

	[PreserveSig]
	[Token(Token = "0x600081F")]
	[Address(RVA = "0x9FE894", Offset = "0x9FE894", VA = "0x9FE894")]
	public static extern int CSharp_SetPortalObstructionAndOcclusion(ulong jarg1, float jarg2, float jarg3);

	[PreserveSig]
	[Token(Token = "0x6000820")]
	[Address(RVA = "0x9FE9A0", Offset = "0x9FE9A0", VA = "0x9FE9A0")]
	public static extern int CSharp_QueryWetDiffraction(ulong jarg1, out float jarg2);

	[PreserveSig]
	[Token(Token = "0x6000821")]
	[Address(RVA = "0xA178C4", Offset = "0xA178C4", VA = "0xA178C4")]
	public static extern void CSharp_AkPlatformInitSettings_threadLEngine_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000822")]
	[Address(RVA = "0xA17954", Offset = "0xA17954", VA = "0xA17954")]
	public static extern IntPtr CSharp_AkPlatformInitSettings_threadLEngine_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000823")]
	[Address(RVA = "0xA179D4", Offset = "0xA179D4", VA = "0xA179D4")]
	public static extern void CSharp_AkPlatformInitSettings_threadOutputMgr_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000824")]
	[Address(RVA = "0xA17A64", Offset = "0xA17A64", VA = "0xA17A64")]
	public static extern IntPtr CSharp_AkPlatformInitSettings_threadOutputMgr_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000825")]
	[Address(RVA = "0xA17AE4", Offset = "0xA17AE4", VA = "0xA17AE4")]
	public static extern void CSharp_AkPlatformInitSettings_threadBankManager_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000826")]
	[Address(RVA = "0xA17B74", Offset = "0xA17B74", VA = "0xA17B74")]
	public static extern IntPtr CSharp_AkPlatformInitSettings_threadBankManager_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000827")]
	[Address(RVA = "0xA17BF4", Offset = "0xA17BF4", VA = "0xA17BF4")]
	public static extern void CSharp_AkPlatformInitSettings_threadMonitor_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000828")]
	[Address(RVA = "0xA17C84", Offset = "0xA17C84", VA = "0xA17C84")]
	public static extern IntPtr CSharp_AkPlatformInitSettings_threadMonitor_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000829")]
	[Address(RVA = "0xA17D04", Offset = "0xA17D04", VA = "0xA17D04")]
	public static extern void CSharp_AkPlatformInitSettings_fLEngineDefaultPoolRatioThreshold_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x600082A")]
	[Address(RVA = "0xA17D94", Offset = "0xA17D94", VA = "0xA17D94")]
	public static extern float CSharp_AkPlatformInitSettings_fLEngineDefaultPoolRatioThreshold_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600082B")]
	[Address(RVA = "0xA17E14", Offset = "0xA17E14", VA = "0xA17E14")]
	public static extern void CSharp_AkPlatformInitSettings_uLEngineDefaultPoolSize_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x600082C")]
	[Address(RVA = "0xA17EA4", Offset = "0xA17EA4", VA = "0xA17EA4")]
	public static extern uint CSharp_AkPlatformInitSettings_uLEngineDefaultPoolSize_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600082D")]
	[Address(RVA = "0xA17F24", Offset = "0xA17F24", VA = "0xA17F24")]
	public static extern void CSharp_AkPlatformInitSettings_eAudioAPI_set(IntPtr jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x600082E")]
	[Address(RVA = "0xA17FB4", Offset = "0xA17FB4", VA = "0xA17FB4")]
	public static extern int CSharp_AkPlatformInitSettings_eAudioAPI_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600082F")]
	[Address(RVA = "0xA18034", Offset = "0xA18034", VA = "0xA18034")]
	public static extern void CSharp_AkPlatformInitSettings_uSampleRate_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000830")]
	[Address(RVA = "0xA180C4", Offset = "0xA180C4", VA = "0xA180C4")]
	public static extern uint CSharp_AkPlatformInitSettings_uSampleRate_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000831")]
	[Address(RVA = "0xA18144", Offset = "0xA18144", VA = "0xA18144")]
	public static extern void CSharp_AkPlatformInitSettings_uNumRefillsInVoice_set(IntPtr jarg1, ushort jarg2);

	[PreserveSig]
	[Token(Token = "0x6000832")]
	[Address(RVA = "0xA181D4", Offset = "0xA181D4", VA = "0xA181D4")]
	public static extern ushort CSharp_AkPlatformInitSettings_uNumRefillsInVoice_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000833")]
	[Address(RVA = "0xA18254", Offset = "0xA18254", VA = "0xA18254")]
	public static extern void CSharp_AkPlatformInitSettings_uChannelMask_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000834")]
	[Address(RVA = "0xA182E4", Offset = "0xA182E4", VA = "0xA182E4")]
	public static extern uint CSharp_AkPlatformInitSettings_uChannelMask_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000835")]
	[Address(RVA = "0xA18364", Offset = "0xA18364", VA = "0xA18364")]
	public static extern void CSharp_AkPlatformInitSettings_bRoundFrameSizeToHWSize_set(IntPtr jarg1, bool jarg2);

	[PreserveSig]
	[Token(Token = "0x6000836")]
	[Address(RVA = "0xA183F4", Offset = "0xA183F4", VA = "0xA183F4")]
	public static extern bool CSharp_AkPlatformInitSettings_bRoundFrameSizeToHWSize_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000837")]
	[Address(RVA = "0xA1847C", Offset = "0xA1847C", VA = "0xA1847C")]
	public static extern IntPtr CSharp_new_AkPlatformInitSettings();

	[PreserveSig]
	[Token(Token = "0x6000838")]
	[Address(RVA = "0xA184F0", Offset = "0xA184F0", VA = "0xA184F0")]
	public static extern void CSharp_delete_AkPlatformInitSettings(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000839")]
	[Address(RVA = "0x9FEAC8", Offset = "0x9FEAC8", VA = "0x9FEAC8")]
	public static extern int CSharp_GetFastPathSettings(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x600083A")]
	[Address(RVA = "0xA18570", Offset = "0xA18570", VA = "0xA18570")]
	public static extern void CSharp_AkStreamMgrSettings_uMemorySize_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x600083B")]
	[Address(RVA = "0xA18600", Offset = "0xA18600", VA = "0xA18600")]
	public static extern uint CSharp_AkStreamMgrSettings_uMemorySize_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600083C")]
	[Address(RVA = "0xA18680", Offset = "0xA18680", VA = "0xA18680")]
	public static extern IntPtr CSharp_new_AkStreamMgrSettings();

	[PreserveSig]
	[Token(Token = "0x600083D")]
	[Address(RVA = "0xA186F4", Offset = "0xA186F4", VA = "0xA186F4")]
	public static extern void CSharp_delete_AkStreamMgrSettings(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600083E")]
	[Address(RVA = "0xA18774", Offset = "0xA18774", VA = "0xA18774")]
	public static extern void CSharp_AkDeviceSettings_pIOMemory_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x600083F")]
	[Address(RVA = "0xA18804", Offset = "0xA18804", VA = "0xA18804")]
	public static extern IntPtr CSharp_AkDeviceSettings_pIOMemory_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000840")]
	[Address(RVA = "0xA18884", Offset = "0xA18884", VA = "0xA18884")]
	public static extern void CSharp_AkDeviceSettings_uIOMemorySize_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000841")]
	[Address(RVA = "0xA18914", Offset = "0xA18914", VA = "0xA18914")]
	public static extern uint CSharp_AkDeviceSettings_uIOMemorySize_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000842")]
	[Address(RVA = "0xA18994", Offset = "0xA18994", VA = "0xA18994")]
	public static extern void CSharp_AkDeviceSettings_uIOMemoryAlignment_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000843")]
	[Address(RVA = "0xA18A24", Offset = "0xA18A24", VA = "0xA18A24")]
	public static extern uint CSharp_AkDeviceSettings_uIOMemoryAlignment_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000844")]
	[Address(RVA = "0xA18AA4", Offset = "0xA18AA4", VA = "0xA18AA4")]
	public static extern void CSharp_AkDeviceSettings_ePoolAttributes_set(IntPtr jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x6000845")]
	[Address(RVA = "0xA18B34", Offset = "0xA18B34", VA = "0xA18B34")]
	public static extern int CSharp_AkDeviceSettings_ePoolAttributes_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000846")]
	[Address(RVA = "0xA18BB4", Offset = "0xA18BB4", VA = "0xA18BB4")]
	public static extern void CSharp_AkDeviceSettings_uGranularity_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000847")]
	[Address(RVA = "0xA18C44", Offset = "0xA18C44", VA = "0xA18C44")]
	public static extern uint CSharp_AkDeviceSettings_uGranularity_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000848")]
	[Address(RVA = "0xA18CC4", Offset = "0xA18CC4", VA = "0xA18CC4")]
	public static extern void CSharp_AkDeviceSettings_uSchedulerTypeFlags_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000849")]
	[Address(RVA = "0xA18D54", Offset = "0xA18D54", VA = "0xA18D54")]
	public static extern uint CSharp_AkDeviceSettings_uSchedulerTypeFlags_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600084A")]
	[Address(RVA = "0xA18DD4", Offset = "0xA18DD4", VA = "0xA18DD4")]
	public static extern void CSharp_AkDeviceSettings_threadProperties_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x600084B")]
	[Address(RVA = "0xA18E64", Offset = "0xA18E64", VA = "0xA18E64")]
	public static extern IntPtr CSharp_AkDeviceSettings_threadProperties_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600084C")]
	[Address(RVA = "0xA18EE4", Offset = "0xA18EE4", VA = "0xA18EE4")]
	public static extern void CSharp_AkDeviceSettings_fTargetAutoStmBufferLength_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x600084D")]
	[Address(RVA = "0xA18F74", Offset = "0xA18F74", VA = "0xA18F74")]
	public static extern float CSharp_AkDeviceSettings_fTargetAutoStmBufferLength_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600084E")]
	[Address(RVA = "0xA18FF4", Offset = "0xA18FF4", VA = "0xA18FF4")]
	public static extern void CSharp_AkDeviceSettings_uMaxConcurrentIO_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x600084F")]
	[Address(RVA = "0xA19084", Offset = "0xA19084", VA = "0xA19084")]
	public static extern uint CSharp_AkDeviceSettings_uMaxConcurrentIO_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000850")]
	[Address(RVA = "0xA19104", Offset = "0xA19104", VA = "0xA19104")]
	public static extern void CSharp_AkDeviceSettings_bUseStreamCache_set(IntPtr jarg1, bool jarg2);

	[PreserveSig]
	[Token(Token = "0x6000851")]
	[Address(RVA = "0xA19194", Offset = "0xA19194", VA = "0xA19194")]
	public static extern bool CSharp_AkDeviceSettings_bUseStreamCache_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000852")]
	[Address(RVA = "0xA1921C", Offset = "0xA1921C", VA = "0xA1921C")]
	public static extern void CSharp_AkDeviceSettings_uMaxCachePinnedBytes_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000853")]
	[Address(RVA = "0xA192AC", Offset = "0xA192AC", VA = "0xA192AC")]
	public static extern uint CSharp_AkDeviceSettings_uMaxCachePinnedBytes_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000854")]
	[Address(RVA = "0xA1932C", Offset = "0xA1932C", VA = "0xA1932C")]
	public static extern IntPtr CSharp_new_AkDeviceSettings();

	[PreserveSig]
	[Token(Token = "0x6000855")]
	[Address(RVA = "0xA193A0", Offset = "0xA193A0", VA = "0xA193A0")]
	public static extern void CSharp_delete_AkDeviceSettings(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000856")]
	[Address(RVA = "0xA19420", Offset = "0xA19420", VA = "0xA19420")]
	public static extern void CSharp_AkThreadProperties_nPriority_set(IntPtr jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x6000857")]
	[Address(RVA = "0xA194B0", Offset = "0xA194B0", VA = "0xA194B0")]
	public static extern int CSharp_AkThreadProperties_nPriority_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000858")]
	[Address(RVA = "0xA19530", Offset = "0xA19530", VA = "0xA19530")]
	public static extern void CSharp_AkThreadProperties_uStackSize_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000859")]
	[Address(RVA = "0xA195C0", Offset = "0xA195C0", VA = "0xA195C0")]
	public static extern uint CSharp_AkThreadProperties_uStackSize_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600085A")]
	[Address(RVA = "0xA19640", Offset = "0xA19640", VA = "0xA19640")]
	public static extern void CSharp_AkThreadProperties_uSchedPolicy_set(IntPtr jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x600085B")]
	[Address(RVA = "0xA196D0", Offset = "0xA196D0", VA = "0xA196D0")]
	public static extern int CSharp_AkThreadProperties_uSchedPolicy_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600085C")]
	[Address(RVA = "0xA19750", Offset = "0xA19750", VA = "0xA19750")]
	public static extern void CSharp_AkThreadProperties_dwAffinityMask_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x600085D")]
	[Address(RVA = "0xA197E0", Offset = "0xA197E0", VA = "0xA197E0")]
	public static extern uint CSharp_AkThreadProperties_dwAffinityMask_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600085E")]
	[Address(RVA = "0xA19860", Offset = "0xA19860", VA = "0xA19860")]
	public static extern IntPtr CSharp_new_AkThreadProperties();

	[PreserveSig]
	[Token(Token = "0x600085F")]
	[Address(RVA = "0xA198D4", Offset = "0xA198D4", VA = "0xA198D4")]
	public static extern void CSharp_delete_AkThreadProperties(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000860")]
	[Address(RVA = "0x9FEBBC", Offset = "0x9FEBBC", VA = "0x9FEBBC")]
	public static extern void CSharp_SetErrorLogger__SWIG_0(AkLogger.ErrorLoggerInteropDelegate jarg1);

	[PreserveSig]
	[Token(Token = "0x6000861")]
	[Address(RVA = "0x9FEC9C", Offset = "0x9FEC9C", VA = "0x9FEC9C")]
	public static extern void CSharp_SetErrorLogger__SWIG_1();

	[PreserveSig]
	[Token(Token = "0x6000862")]
	[Address(RVA = "0x9FED80", Offset = "0x9FED80", VA = "0x9FED80")]
	public static extern void CSharp_SetAudioInputCallbacks(AkAudioInputManager.AudioSamplesInteropDelegate jarg1, AkAudioInputManager.AudioFormatInteropDelegate jarg2);

	[PreserveSig]
	[Token(Token = "0x6000863")]
	[Address(RVA = "0xA19954", Offset = "0xA19954", VA = "0xA19954")]
	public static extern void CSharp_AkPathParams_listenerPos_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000864")]
	[Address(RVA = "0xA199E4", Offset = "0xA199E4", VA = "0xA199E4")]
	public static extern IntPtr CSharp_AkPathParams_listenerPos_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000865")]
	[Address(RVA = "0xA19A64", Offset = "0xA19A64", VA = "0xA19A64")]
	public static extern void CSharp_AkPathParams_emitterPos_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000866")]
	[Address(RVA = "0xA19AF4", Offset = "0xA19AF4", VA = "0xA19AF4")]
	public static extern IntPtr CSharp_AkPathParams_emitterPos_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000867")]
	[Address(RVA = "0xA19B74", Offset = "0xA19B74", VA = "0xA19B74")]
	public static extern void CSharp_AkPathParams_numValidPaths_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000868")]
	[Address(RVA = "0xA19C04", Offset = "0xA19C04", VA = "0xA19C04")]
	public static extern uint CSharp_AkPathParams_numValidPaths_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000869")]
	[Address(RVA = "0xA19C84", Offset = "0xA19C84", VA = "0xA19C84")]
	public static extern IntPtr CSharp_new_AkPathParams();

	[PreserveSig]
	[Token(Token = "0x600086A")]
	[Address(RVA = "0xA19CF8", Offset = "0xA19CF8", VA = "0xA19CF8")]
	public static extern void CSharp_delete_AkPathParams(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600086B")]
	[Address(RVA = "0xA19D78", Offset = "0xA19D78", VA = "0xA19D78")]
	public static extern IntPtr CSharp_new_AkUnityPlatformSpecificSettings();

	[PreserveSig]
	[Token(Token = "0x600086C")]
	[Address(RVA = "0xA19DEC", Offset = "0xA19DEC", VA = "0xA19DEC")]
	public static extern void CSharp_delete_AkUnityPlatformSpecificSettings(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600086D")]
	[Address(RVA = "0xA19E6C", Offset = "0xA19E6C", VA = "0xA19E6C")]
	public static extern IntPtr CSharp_new_AkCommunicationSettings();

	[PreserveSig]
	[Token(Token = "0x600086E")]
	[Address(RVA = "0xA19EE0", Offset = "0xA19EE0", VA = "0xA19EE0")]
	public static extern void CSharp_AkCommunicationSettings_uPoolSize_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x600086F")]
	[Address(RVA = "0xA19F70", Offset = "0xA19F70", VA = "0xA19F70")]
	public static extern uint CSharp_AkCommunicationSettings_uPoolSize_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000870")]
	[Address(RVA = "0xA19FF0", Offset = "0xA19FF0", VA = "0xA19FF0")]
	public static extern void CSharp_AkCommunicationSettings_uDiscoveryBroadcastPort_set(IntPtr jarg1, ushort jarg2);

	[PreserveSig]
	[Token(Token = "0x6000871")]
	[Address(RVA = "0xA1A080", Offset = "0xA1A080", VA = "0xA1A080")]
	public static extern ushort CSharp_AkCommunicationSettings_uDiscoveryBroadcastPort_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000872")]
	[Address(RVA = "0xA1A100", Offset = "0xA1A100", VA = "0xA1A100")]
	public static extern void CSharp_AkCommunicationSettings_uCommandPort_set(IntPtr jarg1, ushort jarg2);

	[PreserveSig]
	[Token(Token = "0x6000873")]
	[Address(RVA = "0xA1A190", Offset = "0xA1A190", VA = "0xA1A190")]
	public static extern ushort CSharp_AkCommunicationSettings_uCommandPort_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000874")]
	[Address(RVA = "0xA1A210", Offset = "0xA1A210", VA = "0xA1A210")]
	public static extern void CSharp_AkCommunicationSettings_uNotificationPort_set(IntPtr jarg1, ushort jarg2);

	[PreserveSig]
	[Token(Token = "0x6000875")]
	[Address(RVA = "0xA1A2A0", Offset = "0xA1A2A0", VA = "0xA1A2A0")]
	public static extern ushort CSharp_AkCommunicationSettings_uNotificationPort_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000876")]
	[Address(RVA = "0xA1A320", Offset = "0xA1A320", VA = "0xA1A320")]
	public static extern void CSharp_AkCommunicationSettings_bInitSystemLib_set(IntPtr jarg1, bool jarg2);

	[PreserveSig]
	[Token(Token = "0x6000877")]
	[Address(RVA = "0xA1A3B0", Offset = "0xA1A3B0", VA = "0xA1A3B0")]
	public static extern bool CSharp_AkCommunicationSettings_bInitSystemLib_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000878")]
	[Address(RVA = "0xA1A438", Offset = "0xA1A438", VA = "0xA1A438")]
	public static extern void CSharp_AkCommunicationSettings_szAppNetworkName_set(IntPtr jarg1, string jarg2);

	[PreserveSig]
	[Token(Token = "0x6000879")]
	[Address(RVA = "0xA1A4DC", Offset = "0xA1A4DC", VA = "0xA1A4DC")]
	public static extern IntPtr CSharp_AkCommunicationSettings_szAppNetworkName_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600087A")]
	[Address(RVA = "0xA1A55C", Offset = "0xA1A55C", VA = "0xA1A55C")]
	public static extern void CSharp_delete_AkCommunicationSettings(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600087B")]
	[Address(RVA = "0xA1A5DC", Offset = "0xA1A5DC", VA = "0xA1A5DC")]
	public static extern IntPtr CSharp_new_AkInitializationSettings();

	[PreserveSig]
	[Token(Token = "0x600087C")]
	[Address(RVA = "0xA1A650", Offset = "0xA1A650", VA = "0xA1A650")]
	public static extern void CSharp_delete_AkInitializationSettings(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600087D")]
	[Address(RVA = "0xA1A6D0", Offset = "0xA1A6D0", VA = "0xA1A6D0")]
	public static extern void CSharp_AkInitializationSettings_memSettings_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x600087E")]
	[Address(RVA = "0xA1A760", Offset = "0xA1A760", VA = "0xA1A760")]
	public static extern IntPtr CSharp_AkInitializationSettings_memSettings_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600087F")]
	[Address(RVA = "0xA1A7E0", Offset = "0xA1A7E0", VA = "0xA1A7E0")]
	public static extern void CSharp_AkInitializationSettings_streamMgrSettings_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000880")]
	[Address(RVA = "0xA1A870", Offset = "0xA1A870", VA = "0xA1A870")]
	public static extern IntPtr CSharp_AkInitializationSettings_streamMgrSettings_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000881")]
	[Address(RVA = "0xA1A8F0", Offset = "0xA1A8F0", VA = "0xA1A8F0")]
	public static extern void CSharp_AkInitializationSettings_deviceSettings_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000882")]
	[Address(RVA = "0xA1A980", Offset = "0xA1A980", VA = "0xA1A980")]
	public static extern IntPtr CSharp_AkInitializationSettings_deviceSettings_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000883")]
	[Address(RVA = "0xA1AA00", Offset = "0xA1AA00", VA = "0xA1AA00")]
	public static extern void CSharp_AkInitializationSettings_initSettings_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000884")]
	[Address(RVA = "0xA1AA90", Offset = "0xA1AA90", VA = "0xA1AA90")]
	public static extern IntPtr CSharp_AkInitializationSettings_initSettings_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000885")]
	[Address(RVA = "0xA1AB10", Offset = "0xA1AB10", VA = "0xA1AB10")]
	public static extern void CSharp_AkInitializationSettings_platformSettings_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000886")]
	[Address(RVA = "0xA1ABA0", Offset = "0xA1ABA0", VA = "0xA1ABA0")]
	public static extern IntPtr CSharp_AkInitializationSettings_platformSettings_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000887")]
	[Address(RVA = "0xA1AC20", Offset = "0xA1AC20", VA = "0xA1AC20")]
	public static extern void CSharp_AkInitializationSettings_musicSettings_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000888")]
	[Address(RVA = "0xA1ACB0", Offset = "0xA1ACB0", VA = "0xA1ACB0")]
	public static extern IntPtr CSharp_AkInitializationSettings_musicSettings_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000889")]
	[Address(RVA = "0xA1AD30", Offset = "0xA1AD30", VA = "0xA1AD30")]
	public static extern void CSharp_AkInitializationSettings_preparePoolSize_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x600088A")]
	[Address(RVA = "0xA1ADC0", Offset = "0xA1ADC0", VA = "0xA1ADC0")]
	public static extern uint CSharp_AkInitializationSettings_preparePoolSize_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600088B")]
	[Address(RVA = "0xA1AE40", Offset = "0xA1AE40", VA = "0xA1AE40")]
	public static extern void CSharp_AkInitializationSettings_unityPlatformSpecificSettings_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x600088C")]
	[Address(RVA = "0xA1AED0", Offset = "0xA1AED0", VA = "0xA1AED0")]
	public static extern IntPtr CSharp_AkInitializationSettings_unityPlatformSpecificSettings_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600088D")]
	[Address(RVA = "0xA1AF50", Offset = "0xA1AF50", VA = "0xA1AF50")]
	public static extern void CSharp_AkInitializationSettings_useAsyncOpen_set(IntPtr jarg1, bool jarg2);

	[PreserveSig]
	[Token(Token = "0x600088E")]
	[Address(RVA = "0xA1AFE0", Offset = "0xA1AFE0", VA = "0xA1AFE0")]
	public static extern bool CSharp_AkInitializationSettings_useAsyncOpen_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600088F")]
	[Address(RVA = "0xA1B068", Offset = "0xA1B068", VA = "0xA1B068")]
	public static extern IntPtr CSharp_new_AkExternalSourceInfo__SWIG_0();

	[PreserveSig]
	[Token(Token = "0x6000890")]
	[Address(RVA = "0xA1B0DC", Offset = "0xA1B0DC", VA = "0xA1B0DC")]
	public static extern void CSharp_delete_AkExternalSourceInfo(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000891")]
	[Address(RVA = "0xA1B15C", Offset = "0xA1B15C", VA = "0xA1B15C")]
	public static extern IntPtr CSharp_new_AkExternalSourceInfo__SWIG_1(IntPtr jarg1, uint jarg2, uint jarg3, uint jarg4);

	[PreserveSig]
	[Token(Token = "0x6000892")]
	[Address(RVA = "0xA1B204", Offset = "0xA1B204", VA = "0xA1B204")]
	public static extern IntPtr CSharp_new_AkExternalSourceInfo__SWIG_2(string jarg1, uint jarg2, uint jarg3);

	[PreserveSig]
	[Token(Token = "0x6000893")]
	[Address(RVA = "0xA1B2B4", Offset = "0xA1B2B4", VA = "0xA1B2B4")]
	public static extern IntPtr CSharp_new_AkExternalSourceInfo__SWIG_3(uint jarg1, uint jarg2, uint jarg3);

	[PreserveSig]
	[Token(Token = "0x6000894")]
	[Address(RVA = "0xA1B34C", Offset = "0xA1B34C", VA = "0xA1B34C")]
	public static extern void CSharp_AkExternalSourceInfo_Clear(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000895")]
	[Address(RVA = "0xA1B3CC", Offset = "0xA1B3CC", VA = "0xA1B3CC")]
	public static extern void CSharp_AkExternalSourceInfo_Clone(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000896")]
	[Address(RVA = "0xA1B45C", Offset = "0xA1B45C", VA = "0xA1B45C")]
	public static extern int CSharp_AkExternalSourceInfo_GetSizeOf();

	[PreserveSig]
	[Token(Token = "0x6000897")]
	[Address(RVA = "0xA1B4D0", Offset = "0xA1B4D0", VA = "0xA1B4D0")]
	public static extern void CSharp_AkExternalSourceInfo_iExternalSrcCookie_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000898")]
	[Address(RVA = "0xA1B560", Offset = "0xA1B560", VA = "0xA1B560")]
	public static extern uint CSharp_AkExternalSourceInfo_iExternalSrcCookie_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000899")]
	[Address(RVA = "0xA1B5E0", Offset = "0xA1B5E0", VA = "0xA1B5E0")]
	public static extern void CSharp_AkExternalSourceInfo_idCodec_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x600089A")]
	[Address(RVA = "0xA1B670", Offset = "0xA1B670", VA = "0xA1B670")]
	public static extern uint CSharp_AkExternalSourceInfo_idCodec_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600089B")]
	[Address(RVA = "0xA1B6F0", Offset = "0xA1B6F0", VA = "0xA1B6F0")]
	public static extern void CSharp_AkExternalSourceInfo_szFile_set(IntPtr jarg1, string jarg2);

	[PreserveSig]
	[Token(Token = "0x600089C")]
	[Address(RVA = "0xA1B794", Offset = "0xA1B794", VA = "0xA1B794")]
	public static extern IntPtr CSharp_AkExternalSourceInfo_szFile_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600089D")]
	[Address(RVA = "0xA1B814", Offset = "0xA1B814", VA = "0xA1B814")]
	public static extern void CSharp_AkExternalSourceInfo_pInMemory_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x600089E")]
	[Address(RVA = "0xA1B8A4", Offset = "0xA1B8A4", VA = "0xA1B8A4")]
	public static extern IntPtr CSharp_AkExternalSourceInfo_pInMemory_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x600089F")]
	[Address(RVA = "0xA1B924", Offset = "0xA1B924", VA = "0xA1B924")]
	public static extern void CSharp_AkExternalSourceInfo_uiMemorySize_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x60008A0")]
	[Address(RVA = "0xA1B9B4", Offset = "0xA1B9B4", VA = "0xA1B9B4")]
	public static extern uint CSharp_AkExternalSourceInfo_uiMemorySize_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60008A1")]
	[Address(RVA = "0xA1BA34", Offset = "0xA1BA34", VA = "0xA1BA34")]
	public static extern void CSharp_AkExternalSourceInfo_idFile_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x60008A2")]
	[Address(RVA = "0xA1BAC4", Offset = "0xA1BAC4", VA = "0xA1BAC4")]
	public static extern uint CSharp_AkExternalSourceInfo_idFile_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60008A3")]
	[Address(RVA = "0x9FEE9C", Offset = "0x9FEE9C", VA = "0x9FEE9C")]
	public static extern int CSharp_Init(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60008A4")]
	[Address(RVA = "0x9FEF94", Offset = "0x9FEF94", VA = "0x9FEF94")]
	public static extern int CSharp_InitSpatialAudio(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60008A5")]
	[Address(RVA = "0x9FF08C", Offset = "0x9FF08C", VA = "0x9FF08C")]
	public static extern int CSharp_InitCommunication(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60008A6")]
	[Address(RVA = "0x9FF168", Offset = "0x9FF168", VA = "0x9FF168")]
	public static extern void CSharp_Term();

	[PreserveSig]
	[Token(Token = "0x60008A7")]
	[Address(RVA = "0x9FF26C", Offset = "0x9FF26C", VA = "0x9FF26C")]
	public static extern int CSharp_RegisterGameObjInternal(ulong jarg1);

	[PreserveSig]
	[Token(Token = "0x60008A8")]
	[Address(RVA = "0x9FF380", Offset = "0x9FF380", VA = "0x9FF380")]
	public static extern int CSharp_UnregisterGameObjInternal(ulong jarg1);

	[PreserveSig]
	[Token(Token = "0x60008A9")]
	[Address(RVA = "0x9FF4A4", Offset = "0x9FF4A4", VA = "0x9FF4A4")]
	public static extern int CSharp_RegisterGameObjInternal_WithName(ulong jarg1, string jarg2);

	[PreserveSig]
	[Token(Token = "0x60008AA")]
	[Address(RVA = "0x9FF5B4", Offset = "0x9FF5B4", VA = "0x9FF5B4")]
	public static extern int CSharp_SetBasePath(string jarg1);

	[PreserveSig]
	[Token(Token = "0x60008AB")]
	[Address(RVA = "0x9FF6B0", Offset = "0x9FF6B0", VA = "0x9FF6B0")]
	public static extern int CSharp_SetCurrentLanguage(string jarg1);

	[PreserveSig]
	[Token(Token = "0x60008AC")]
	[Address(RVA = "0x9FF7C4", Offset = "0x9FF7C4", VA = "0x9FF7C4")]
	public static extern int CSharp_LoadFilePackage(string jarg1, out uint jarg2, int jarg3);

	[PreserveSig]
	[Token(Token = "0x60008AD")]
	[Address(RVA = "0x9FF8D8", Offset = "0x9FF8D8", VA = "0x9FF8D8")]
	public static extern int CSharp_AddBasePath(string jarg1);

	[PreserveSig]
	[Token(Token = "0x60008AE")]
	[Address(RVA = "0x9FF9D4", Offset = "0x9FF9D4", VA = "0x9FF9D4")]
	public static extern int CSharp_SetGameName(string jarg1);

	[PreserveSig]
	[Token(Token = "0x60008AF")]
	[Address(RVA = "0x9FFAD0", Offset = "0x9FFAD0", VA = "0x9FFAD0")]
	public static extern int CSharp_SetDecodedBankPath(string jarg1);

	[PreserveSig]
	[Token(Token = "0x60008B0")]
	[Address(RVA = "0x9FFBE4", Offset = "0x9FFBE4", VA = "0x9FFBE4")]
	public static extern int CSharp_LoadAndDecodeBank(string jarg1, bool jarg2, out uint jarg3);

	[PreserveSig]
	[Token(Token = "0x60008B1")]
	[Address(RVA = "0x9FFD38", Offset = "0x9FFD38", VA = "0x9FFD38")]
	public static extern int CSharp_LoadAndDecodeBankFromMemory(IntPtr jarg1, uint jarg2, bool jarg3, string jarg4, bool jarg5, out uint jarg6);

	[PreserveSig]
	[Token(Token = "0x60008B2")]
	[Address(RVA = "0x9FFEA0", Offset = "0x9FFEA0", VA = "0x9FFEA0")]
	public static extern IntPtr CSharp_GetCurrentLanguage();

	[PreserveSig]
	[Token(Token = "0x60008B3")]
	[Address(RVA = "0x9FFFDC", Offset = "0x9FFFDC", VA = "0x9FFFDC")]
	public static extern int CSharp_UnloadFilePackage(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x60008B4")]
	[Address(RVA = "0xA000B8", Offset = "0xA000B8", VA = "0xA000B8")]
	public static extern int CSharp_UnloadAllFilePackages();

	[PreserveSig]
	[Token(Token = "0x60008B5")]
	[Address(RVA = "0xA00230", Offset = "0xA00230", VA = "0xA00230")]
	public static extern int CSharp_SetObjectPosition(ulong jarg1, float jarg2, float jarg3, float jarg4, float jarg5, float jarg6, float jarg7, float jarg8, float jarg9, float jarg10);

	[PreserveSig]
	[Token(Token = "0x60008B6")]
	[Address(RVA = "0xA003BC", Offset = "0xA003BC", VA = "0xA003BC")]
	public static extern int CSharp_GetSourceMultiplePlayPositions(uint jarg1, [Out] uint[] jarg2, [Out] uint[] jarg3, [Out] int[] jarg4, ref uint jarg5, bool jarg6);

	[PreserveSig]
	[Token(Token = "0x60008B7")]
	[Address(RVA = "0xA00680", Offset = "0xA00680", VA = "0xA00680")]
	public static extern int CSharp_SetListeners(ulong jarg1, ulong[] jarg2, uint jarg3);

	[PreserveSig]
	[Token(Token = "0x60008B8")]
	[Address(RVA = "0xA00794", Offset = "0xA00794", VA = "0xA00794")]
	public static extern int CSharp_SetDefaultListeners(ulong[] jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x60008B9")]
	[Address(RVA = "0xA008CC", Offset = "0xA008CC", VA = "0xA008CC")]
	public static extern int CSharp_AddOutput(IntPtr jarg1, out ulong jarg2, ulong[] jarg3, uint jarg4);

	[PreserveSig]
	[Token(Token = "0x60008BA")]
	[Address(RVA = "0xA009F4", Offset = "0xA009F4", VA = "0xA009F4")]
	public static extern void CSharp_GetDefaultStreamSettings(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60008BB")]
	[Address(RVA = "0xA00AEC", Offset = "0xA00AEC", VA = "0xA00AEC")]
	public static extern void CSharp_GetDefaultDeviceSettings(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60008BC")]
	[Address(RVA = "0xA00BE4", Offset = "0xA00BE4", VA = "0xA00BE4")]
	public static extern void CSharp_GetDefaultMusicSettings(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60008BD")]
	[Address(RVA = "0xA00CDC", Offset = "0xA00CDC", VA = "0xA00CDC")]
	public static extern void CSharp_GetDefaultInitSettings(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60008BE")]
	[Address(RVA = "0xA00DD4", Offset = "0xA00DD4", VA = "0xA00DD4")]
	public static extern void CSharp_GetDefaultPlatformInitSettings(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60008BF")]
	[Address(RVA = "0xA00EB0", Offset = "0xA00EB0", VA = "0xA00EB0")]
	public static extern uint CSharp_GetMajorMinorVersion();

	[PreserveSig]
	[Token(Token = "0x60008C0")]
	[Address(RVA = "0xA00F80", Offset = "0xA00F80", VA = "0xA00F80")]
	public static extern uint CSharp_GetSubminorBuildVersion();

	[PreserveSig]
	[Token(Token = "0x60008C1")]
	[Address(RVA = "0xA010D4", Offset = "0xA010D4", VA = "0xA010D4")]
	public static extern int CSharp_QueryIndirectPaths(ulong jarg1, IntPtr jarg2, IntPtr jarg3, uint jarg4);

	[PreserveSig]
	[Token(Token = "0x60008C2")]
	[Address(RVA = "0xA0125C", Offset = "0xA0125C", VA = "0xA0125C")]
	public static extern int CSharp_QueryDiffractionPaths(ulong jarg1, IntPtr jarg2, IntPtr jarg3, uint jarg4);

	[PreserveSig]
	[Token(Token = "0x60008C3")]
	[Address(RVA = "0xA013C8", Offset = "0xA013C8", VA = "0xA013C8")]
	public static extern int CSharp_SetRoomPortal(ulong jarg1, IntPtr jarg2, IntPtr jarg3, bool jarg4, ulong jarg5, ulong jarg6);

	[PreserveSig]
	[Token(Token = "0x60008C4")]
	[Address(RVA = "0xA01518", Offset = "0xA01518", VA = "0xA01518")]
	public static extern int CSharp_SetRoom(ulong jarg1, IntPtr jarg2, string jarg3);

	[PreserveSig]
	[Token(Token = "0x60008C5")]
	[Address(RVA = "0xA01668", Offset = "0xA01668", VA = "0xA01668")]
	public static extern int CSharp_RegisterSpatialAudioListener(ulong jarg1);

	[PreserveSig]
	[Token(Token = "0x60008C6")]
	[Address(RVA = "0xA01784", Offset = "0xA01784", VA = "0xA01784")]
	public static extern int CSharp_UnregisterSpatialAudioListener(ulong jarg1);

	[PreserveSig]
	[Token(Token = "0x60008C7")]
	[Address(RVA = "0xA01934", Offset = "0xA01934", VA = "0xA01934")]
	public static extern int CSharp_SetGeometry(ulong jarg1, IntPtr jarg2, uint jarg3, IntPtr jarg4, uint jarg5, IntPtr jarg6, uint jarg7, ulong jarg8, bool jarg9, bool jarg10);

	[PreserveSig]
	[Token(Token = "0x60008C8")]
	[Address(RVA = "0xA1BB44", Offset = "0xA1BB44", VA = "0xA1BB44")]
	public static extern IntPtr CSharp_AkPlaylist_SWIGUpcast(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60008C9")]
	[Address(RVA = "0xA1BBC4", Offset = "0xA1BBC4", VA = "0xA1BBC4")]
	public static extern IntPtr CSharp_AkMIDIPost_SWIGUpcast(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60008CA")]
	[Address(RVA = "0xA1BC44", Offset = "0xA1BC44", VA = "0xA1BC44")]
	public static extern IntPtr CSharp_AkEventCallbackInfo_SWIGUpcast(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60008CB")]
	[Address(RVA = "0xA1BCC4", Offset = "0xA1BCC4", VA = "0xA1BCC4")]
	public static extern IntPtr CSharp_AkMIDIEventCallbackInfo_SWIGUpcast(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60008CC")]
	[Address(RVA = "0xA1BD44", Offset = "0xA1BD44", VA = "0xA1BD44")]
	public static extern IntPtr CSharp_AkMarkerCallbackInfo_SWIGUpcast(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60008CD")]
	[Address(RVA = "0xA1BDC4", Offset = "0xA1BDC4", VA = "0xA1BDC4")]
	public static extern IntPtr CSharp_AkDurationCallbackInfo_SWIGUpcast(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60008CE")]
	[Address(RVA = "0xA1BE44", Offset = "0xA1BE44", VA = "0xA1BE44")]
	public static extern IntPtr CSharp_AkDynamicSequenceItemCallbackInfo_SWIGUpcast(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60008CF")]
	[Address(RVA = "0xA1BEC4", Offset = "0xA1BEC4", VA = "0xA1BEC4")]
	public static extern IntPtr CSharp_AkMusicSyncCallbackInfo_SWIGUpcast(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60008D0")]
	[Address(RVA = "0xA1BF44", Offset = "0xA1BF44", VA = "0xA1BF44")]
	public static extern IntPtr CSharp_AkMusicPlaylistCallbackInfo_SWIGUpcast(IntPtr jarg1);

	[Token(Token = "0x60008D1")]
	[Address(RVA = "0xA1BFC4", Offset = "0xA1BFC4", VA = "0xA1BFC4")]
	public AkSoundEnginePINVOKE()
	{
	}
}
[Token(Token = "0x20000BF")]
public class AkSoundEngine
{
	[Token(Token = "0x200023B")]
	public delegate ulong GameObjectHashFunction(GameObject gameObject);

	[Token(Token = "0x200023C")]
	private class AutoObject
	{
		[Token(Token = "0x4000B4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly GameObject gameObject;

		[Token(Token = "0x60013B0")]
		[Address(RVA = "0xA02D90", Offset = "0xA02D90", VA = "0xA02D90")]
		public AutoObject(GameObject go)
		{
		}

		[Token(Token = "0x60013B1")]
		[Address(RVA = "0xA02FA4", Offset = "0xA02FA4", VA = "0xA02FA4", Slot = "1")]
		~AutoObject()
		{
		}
	}

	[Token(Token = "0x40003D2")]
	public const int AK_SIMD_ALIGNMENT = 16;

	[Token(Token = "0x40003D3")]
	public const int AK_BUFFER_ALIGNMENT = 16;

	[Token(Token = "0x40003D4")]
	public const int AK_MAX_PATH = 260;

	[Token(Token = "0x40003D5")]
	public const int AK_BANK_PLATFORM_DATA_ALIGNMENT = 16;

	[Token(Token = "0x40003D6")]
	public const uint AK_INVALID_PLUGINID = uint.MaxValue;

	[Token(Token = "0x40003D7")]
	public const ulong AK_INVALID_GAME_OBJECT = ulong.MaxValue;

	[Token(Token = "0x40003D8")]
	public const uint AK_INVALID_UNIQUE_ID = 0u;

	[Token(Token = "0x40003D9")]
	public const uint AK_INVALID_RTPC_ID = 0u;

	[Token(Token = "0x40003DA")]
	public const uint AK_INVALID_LISTENER_INDEX = uint.MaxValue;

	[Token(Token = "0x40003DB")]
	public const uint AK_INVALID_PLAYING_ID = 0u;

	[Token(Token = "0x40003DC")]
	public const uint AK_DEFAULT_SWITCH_STATE = 0u;

	[Token(Token = "0x40003DD")]
	public const int AK_INVALID_POOL_ID = -1;

	[Token(Token = "0x40003DE")]
	public const int AK_DEFAULT_POOL_ID = -1;

	[Token(Token = "0x40003DF")]
	public const uint AK_INVALID_AUX_ID = 0u;

	[Token(Token = "0x40003E0")]
	public const uint AK_INVALID_FILE_ID = uint.MaxValue;

	[Token(Token = "0x40003E1")]
	public const uint AK_INVALID_DEVICE_ID = uint.MaxValue;

	[Token(Token = "0x40003E2")]
	public const uint AK_INVALID_BANK_ID = 0u;

	[Token(Token = "0x40003E3")]
	public const uint AK_FALLBACK_ARGUMENTVALUE_ID = 0u;

	[Token(Token = "0x40003E4")]
	public const uint AK_INVALID_CHANNELMASK = 0u;

	[Token(Token = "0x40003E5")]
	public const uint AK_INVALID_OUTPUT_DEVICE_ID = 0u;

	[Token(Token = "0x40003E6")]
	public const uint AK_MIXER_FX_SLOT = uint.MaxValue;

	[Token(Token = "0x40003E7")]
	public const ulong AK_DEFAULT_LISTENER_OBJ = 0uL;

	[Token(Token = "0x40003E8")]
	public const uint AK_DEFAULT_PRIORITY = 50u;

	[Token(Token = "0x40003E9")]
	public const uint AK_MIN_PRIORITY = 0u;

	[Token(Token = "0x40003EA")]
	public const uint AK_MAX_PRIORITY = 100u;

	[Token(Token = "0x40003EB")]
	public const uint AK_DEFAULT_BANK_IO_PRIORITY = 50u;

	[Token(Token = "0x40003EC")]
	public const double AK_DEFAULT_BANK_THROUGHPUT = 1048.576;

	[Token(Token = "0x40003ED")]
	public const uint AKCOMPANYID_AUDIOKINETIC = 0u;

	[Token(Token = "0x40003EE")]
	public const uint AK_LISTENERS_MASK_ALL = uint.MaxValue;

	[Token(Token = "0x40003EF")]
	public const int NULL = 0;

	[Token(Token = "0x40003F0")]
	public const int AKCURVEINTERPOLATION_NUM_STORAGE_BIT = 5;

	[Token(Token = "0x40003F1")]
	public const int AK_MAX_LANGUAGE_NAME_SIZE = 32;

	[Token(Token = "0x40003F2")]
	public const int AKCOMPANYID_PLUGINDEV_MIN = 64;

	[Token(Token = "0x40003F3")]
	public const int AKCOMPANYID_PLUGINDEV_MAX = 255;

	[Token(Token = "0x40003F4")]
	public const int AKCOMPANYID_AUDIOKINETIC_EXTERNAL = 1;

	[Token(Token = "0x40003F5")]
	public const int AKCOMPANYID_MCDSP = 256;

	[Token(Token = "0x40003F6")]
	public const int AKCOMPANYID_WAVEARTS = 257;

	[Token(Token = "0x40003F7")]
	public const int AKCOMPANYID_PHONETICARTS = 258;

	[Token(Token = "0x40003F8")]
	public const int AKCOMPANYID_IZOTOPE = 259;

	[Token(Token = "0x40003F9")]
	public const int AKCOMPANYID_CRANKCASEAUDIO = 261;

	[Token(Token = "0x40003FA")]
	public const int AKCOMPANYID_IOSONO = 262;

	[Token(Token = "0x40003FB")]
	public const int AKCOMPANYID_AUROTECHNOLOGIES = 263;

	[Token(Token = "0x40003FC")]
	public const int AKCOMPANYID_DOLBY = 264;

	[Token(Token = "0x40003FD")]
	public const int AKCOMPANYID_TWOBIGEARS = 265;

	[Token(Token = "0x40003FE")]
	public const int AKCOMPANYID_OCULUS = 266;

	[Token(Token = "0x40003FF")]
	public const int AKCOMPANYID_BLUERIPPLESOUND = 267;

	[Token(Token = "0x4000400")]
	public const int AKCOMPANYID_ENZIEN = 268;

	[Token(Token = "0x4000401")]
	public const int AKCOMPANYID_KROTOS = 269;

	[Token(Token = "0x4000402")]
	public const int AKCOMPANYID_NURULIZE = 270;

	[Token(Token = "0x4000403")]
	public const int AKCOMPANYID_SUPERPOWERED = 271;

	[Token(Token = "0x4000404")]
	public const int AKCOMPANYID_GOOGLE = 272;

	[Token(Token = "0x4000405")]
	public const int AKCOMPANYID_VISISONICS = 277;

	[Token(Token = "0x4000406")]
	public const int AKCODECID_BANK = 0;

	[Token(Token = "0x4000407")]
	public const int AKCODECID_PCM = 1;

	[Token(Token = "0x4000408")]
	public const int AKCODECID_ADPCM = 2;

	[Token(Token = "0x4000409")]
	public const int AKCODECID_XMA = 3;

	[Token(Token = "0x400040A")]
	public const int AKCODECID_VORBIS = 4;

	[Token(Token = "0x400040B")]
	public const int AKCODECID_WIIADPCM = 5;

	[Token(Token = "0x400040C")]
	public const int AKCODECID_PCMEX = 7;

	[Token(Token = "0x400040D")]
	public const int AKCODECID_EXTERNAL_SOURCE = 8;

	[Token(Token = "0x400040E")]
	public const int AKCODECID_XWMA = 9;

	[Token(Token = "0x400040F")]
	public const int AKCODECID_AAC = 10;

	[Token(Token = "0x4000410")]
	public const int AKCODECID_FILE_PACKAGE = 11;

	[Token(Token = "0x4000411")]
	public const int AKCODECID_ATRAC9 = 12;

	[Token(Token = "0x4000412")]
	public const int AKCODECID_VAG = 13;

	[Token(Token = "0x4000413")]
	public const int AKCODECID_PROFILERCAPTURE = 14;

	[Token(Token = "0x4000414")]
	public const int AKCODECID_ANALYSISFILE = 15;

	[Token(Token = "0x4000415")]
	public const int AKCODECID_MIDI = 16;

	[Token(Token = "0x4000416")]
	public const int AKCODECID_OPUSNX = 17;

	[Token(Token = "0x4000417")]
	public const int AKCODECID_CAF = 18;

	[Token(Token = "0x4000418")]
	public const int AKCODECID_AKOPUS = 19;

	[Token(Token = "0x4000419")]
	public const int AKPLUGINID_METER = 129;

	[Token(Token = "0x400041A")]
	public const int AKPLUGINID_RECORDER = 132;

	[Token(Token = "0x400041B")]
	public const int AKEXTENSIONID_SPATIALAUDIO = 800;

	[Token(Token = "0x400041C")]
	public const int AKEXTENSIONID_INTERACTIVEMUSIC = 801;

	[Token(Token = "0x400041D")]
	public const int AKEXTENSIONID_EVENTMGRTHREAD = 900;

	[Token(Token = "0x400041E")]
	public const int AK_WAVE_FORMAT_VAG = 65531;

	[Token(Token = "0x400041F")]
	public const int AK_WAVE_FORMAT_AT9 = 65532;

	[Token(Token = "0x4000420")]
	public const int AK_WAVE_FORMAT_VORBIS = 65535;

	[Token(Token = "0x4000421")]
	public const int AK_WAVE_FORMAT_AAC = 43712;

	[Token(Token = "0x4000422")]
	public const int AK_WAVE_FORMAT_OPUSNX = 12345;

	[Token(Token = "0x4000423")]
	public const int AK_WAVE_FORMAT_OPUS = 12352;

	[Token(Token = "0x4000424")]
	public const int WAVE_FORMAT_XMA2 = 358;

	[Token(Token = "0x4000425")]
	public const int AK_PANNER_NUM_STORAGE_BITS = 3;

	[Token(Token = "0x4000426")]
	public const int AK_POSSOURCE_NUM_STORAGE_BITS = 3;

	[Token(Token = "0x4000427")]
	public const int AK_SPAT_NUM_STORAGE_BITS = 3;

	[Token(Token = "0x4000428")]
	public const int AK_MAX_BITS_METERING_FLAGS = 5;

	[Token(Token = "0x4000429")]
	public const int AK_OS_STRUCT_ALIGN = 4;

	[Token(Token = "0x400042A")]
	public const int AK_64B_OS_STRUCT_ALIGN = 8;

	[Token(Token = "0x400042B")]
	public const bool AK_ASYNC_OPEN_DEFAULT = false;

	[Token(Token = "0x400042C")]
	public const int AK_COMM_DEFAULT_DISCOVERY_PORT = 24024;

	[Token(Token = "0x400042D")]
	public const int AK_MIDI_EVENT_TYPE_INVALID = 0;

	[Token(Token = "0x400042E")]
	public const int AK_MIDI_EVENT_TYPE_NOTE_OFF = 128;

	[Token(Token = "0x400042F")]
	public const int AK_MIDI_EVENT_TYPE_NOTE_ON = 144;

	[Token(Token = "0x4000430")]
	public const int AK_MIDI_EVENT_TYPE_NOTE_AFTERTOUCH = 160;

	[Token(Token = "0x4000431")]
	public const int AK_MIDI_EVENT_TYPE_CONTROLLER = 176;

	[Token(Token = "0x4000432")]
	public const int AK_MIDI_EVENT_TYPE_PROGRAM_CHANGE = 192;

	[Token(Token = "0x4000433")]
	public const int AK_MIDI_EVENT_TYPE_CHANNEL_AFTERTOUCH = 208;

	[Token(Token = "0x4000434")]
	public const int AK_MIDI_EVENT_TYPE_PITCH_BEND = 224;

	[Token(Token = "0x4000435")]
	public const int AK_MIDI_EVENT_TYPE_SYSEX = 240;

	[Token(Token = "0x4000436")]
	public const int AK_MIDI_EVENT_TYPE_ESCAPE = 247;

	[Token(Token = "0x4000437")]
	public const int AK_MIDI_EVENT_TYPE_META = 255;

	[Token(Token = "0x4000438")]
	public const int AK_MIDI_CC_BANK_SELECT_COARSE = 0;

	[Token(Token = "0x4000439")]
	public const int AK_MIDI_CC_MOD_WHEEL_COARSE = 1;

	[Token(Token = "0x400043A")]
	public const int AK_MIDI_CC_BREATH_CTRL_COARSE = 2;

	[Token(Token = "0x400043B")]
	public const int AK_MIDI_CC_CTRL_3_COARSE = 3;

	[Token(Token = "0x400043C")]
	public const int AK_MIDI_CC_FOOT_PEDAL_COARSE = 4;

	[Token(Token = "0x400043D")]
	public const int AK_MIDI_CC_PORTAMENTO_COARSE = 5;

	[Token(Token = "0x400043E")]
	public const int AK_MIDI_CC_DATA_ENTRY_COARSE = 6;

	[Token(Token = "0x400043F")]
	public const int AK_MIDI_CC_VOLUME_COARSE = 7;

	[Token(Token = "0x4000440")]
	public const int AK_MIDI_CC_BALANCE_COARSE = 8;

	[Token(Token = "0x4000441")]
	public const int AK_MIDI_CC_CTRL_9_COARSE = 9;

	[Token(Token = "0x4000442")]
	public const int AK_MIDI_CC_PAN_POSITION_COARSE = 10;

	[Token(Token = "0x4000443")]
	public const int AK_MIDI_CC_EXPRESSION_COARSE = 11;

	[Token(Token = "0x4000444")]
	public const int AK_MIDI_CC_EFFECT_CTRL_1_COARSE = 12;

	[Token(Token = "0x4000445")]
	public const int AK_MIDI_CC_EFFECT_CTRL_2_COARSE = 13;

	[Token(Token = "0x4000446")]
	public const int AK_MIDI_CC_CTRL_14_COARSE = 14;

	[Token(Token = "0x4000447")]
	public const int AK_MIDI_CC_CTRL_15_COARSE = 15;

	[Token(Token = "0x4000448")]
	public const int AK_MIDI_CC_GEN_SLIDER_1 = 16;

	[Token(Token = "0x4000449")]
	public const int AK_MIDI_CC_GEN_SLIDER_2 = 17;

	[Token(Token = "0x400044A")]
	public const int AK_MIDI_CC_GEN_SLIDER_3 = 18;

	[Token(Token = "0x400044B")]
	public const int AK_MIDI_CC_GEN_SLIDER_4 = 19;

	[Token(Token = "0x400044C")]
	public const int AK_MIDI_CC_CTRL_20_COARSE = 20;

	[Token(Token = "0x400044D")]
	public const int AK_MIDI_CC_CTRL_21_COARSE = 21;

	[Token(Token = "0x400044E")]
	public const int AK_MIDI_CC_CTRL_22_COARSE = 22;

	[Token(Token = "0x400044F")]
	public const int AK_MIDI_CC_CTRL_23_COARSE = 23;

	[Token(Token = "0x4000450")]
	public const int AK_MIDI_CC_CTRL_24_COARSE = 24;

	[Token(Token = "0x4000451")]
	public const int AK_MIDI_CC_CTRL_25_COARSE = 25;

	[Token(Token = "0x4000452")]
	public const int AK_MIDI_CC_CTRL_26_COARSE = 26;

	[Token(Token = "0x4000453")]
	public const int AK_MIDI_CC_CTRL_27_COARSE = 27;

	[Token(Token = "0x4000454")]
	public const int AK_MIDI_CC_CTRL_28_COARSE = 28;

	[Token(Token = "0x4000455")]
	public const int AK_MIDI_CC_CTRL_29_COARSE = 29;

	[Token(Token = "0x4000456")]
	public const int AK_MIDI_CC_CTRL_30_COARSE = 30;

	[Token(Token = "0x4000457")]
	public const int AK_MIDI_CC_CTRL_31_COARSE = 31;

	[Token(Token = "0x4000458")]
	public const int AK_MIDI_CC_BANK_SELECT_FINE = 32;

	[Token(Token = "0x4000459")]
	public const int AK_MIDI_CC_MOD_WHEEL_FINE = 33;

	[Token(Token = "0x400045A")]
	public const int AK_MIDI_CC_BREATH_CTRL_FINE = 34;

	[Token(Token = "0x400045B")]
	public const int AK_MIDI_CC_CTRL_3_FINE = 35;

	[Token(Token = "0x400045C")]
	public const int AK_MIDI_CC_FOOT_PEDAL_FINE = 36;

	[Token(Token = "0x400045D")]
	public const int AK_MIDI_CC_PORTAMENTO_FINE = 37;

	[Token(Token = "0x400045E")]
	public const int AK_MIDI_CC_DATA_ENTRY_FINE = 38;

	[Token(Token = "0x400045F")]
	public const int AK_MIDI_CC_VOLUME_FINE = 39;

	[Token(Token = "0x4000460")]
	public const int AK_MIDI_CC_BALANCE_FINE = 40;

	[Token(Token = "0x4000461")]
	public const int AK_MIDI_CC_CTRL_9_FINE = 41;

	[Token(Token = "0x4000462")]
	public const int AK_MIDI_CC_PAN_POSITION_FINE = 42;

	[Token(Token = "0x4000463")]
	public const int AK_MIDI_CC_EXPRESSION_FINE = 43;

	[Token(Token = "0x4000464")]
	public const int AK_MIDI_CC_EFFECT_CTRL_1_FINE = 44;

	[Token(Token = "0x4000465")]
	public const int AK_MIDI_CC_EFFECT_CTRL_2_FINE = 45;

	[Token(Token = "0x4000466")]
	public const int AK_MIDI_CC_CTRL_14_FINE = 46;

	[Token(Token = "0x4000467")]
	public const int AK_MIDI_CC_CTRL_15_FINE = 47;

	[Token(Token = "0x4000468")]
	public const int AK_MIDI_CC_CTRL_20_FINE = 52;

	[Token(Token = "0x4000469")]
	public const int AK_MIDI_CC_CTRL_21_FINE = 53;

	[Token(Token = "0x400046A")]
	public const int AK_MIDI_CC_CTRL_22_FINE = 54;

	[Token(Token = "0x400046B")]
	public const int AK_MIDI_CC_CTRL_23_FINE = 55;

	[Token(Token = "0x400046C")]
	public const int AK_MIDI_CC_CTRL_24_FINE = 56;

	[Token(Token = "0x400046D")]
	public const int AK_MIDI_CC_CTRL_25_FINE = 57;

	[Token(Token = "0x400046E")]
	public const int AK_MIDI_CC_CTRL_26_FINE = 58;

	[Token(Token = "0x400046F")]
	public const int AK_MIDI_CC_CTRL_27_FINE = 59;

	[Token(Token = "0x4000470")]
	public const int AK_MIDI_CC_CTRL_28_FINE = 60;

	[Token(Token = "0x4000471")]
	public const int AK_MIDI_CC_CTRL_29_FINE = 61;

	[Token(Token = "0x4000472")]
	public const int AK_MIDI_CC_CTRL_30_FINE = 62;

	[Token(Token = "0x4000473")]
	public const int AK_MIDI_CC_CTRL_31_FINE = 63;

	[Token(Token = "0x4000474")]
	public const int AK_MIDI_CC_HOLD_PEDAL = 64;

	[Token(Token = "0x4000475")]
	public const int AK_MIDI_CC_PORTAMENTO_ON_OFF = 65;

	[Token(Token = "0x4000476")]
	public const int AK_MIDI_CC_SUSTENUTO_PEDAL = 66;

	[Token(Token = "0x4000477")]
	public const int AK_MIDI_CC_SOFT_PEDAL = 67;

	[Token(Token = "0x4000478")]
	public const int AK_MIDI_CC_LEGATO_PEDAL = 68;

	[Token(Token = "0x4000479")]
	public const int AK_MIDI_CC_HOLD_PEDAL_2 = 69;

	[Token(Token = "0x400047A")]
	public const int AK_MIDI_CC_SOUND_VARIATION = 70;

	[Token(Token = "0x400047B")]
	public const int AK_MIDI_CC_SOUND_TIMBRE = 71;

	[Token(Token = "0x400047C")]
	public const int AK_MIDI_CC_SOUND_RELEASE_TIME = 72;

	[Token(Token = "0x400047D")]
	public const int AK_MIDI_CC_SOUND_ATTACK_TIME = 73;

	[Token(Token = "0x400047E")]
	public const int AK_MIDI_CC_SOUND_BRIGHTNESS = 74;

	[Token(Token = "0x400047F")]
	public const int AK_MIDI_CC_SOUND_CTRL_6 = 75;

	[Token(Token = "0x4000480")]
	public const int AK_MIDI_CC_SOUND_CTRL_7 = 76;

	[Token(Token = "0x4000481")]
	public const int AK_MIDI_CC_SOUND_CTRL_8 = 77;

	[Token(Token = "0x4000482")]
	public const int AK_MIDI_CC_SOUND_CTRL_9 = 78;

	[Token(Token = "0x4000483")]
	public const int AK_MIDI_CC_SOUND_CTRL_10 = 79;

	[Token(Token = "0x4000484")]
	public const int AK_MIDI_CC_GENERAL_BUTTON_1 = 80;

	[Token(Token = "0x4000485")]
	public const int AK_MIDI_CC_GENERAL_BUTTON_2 = 81;

	[Token(Token = "0x4000486")]
	public const int AK_MIDI_CC_GENERAL_BUTTON_3 = 82;

	[Token(Token = "0x4000487")]
	public const int AK_MIDI_CC_GENERAL_BUTTON_4 = 83;

	[Token(Token = "0x4000488")]
	public const int AK_MIDI_CC_REVERB_LEVEL = 91;

	[Token(Token = "0x4000489")]
	public const int AK_MIDI_CC_TREMOLO_LEVEL = 92;

	[Token(Token = "0x400048A")]
	public const int AK_MIDI_CC_CHORUS_LEVEL = 93;

	[Token(Token = "0x400048B")]
	public const int AK_MIDI_CC_CELESTE_LEVEL = 94;

	[Token(Token = "0x400048C")]
	public const int AK_MIDI_CC_PHASER_LEVEL = 95;

	[Token(Token = "0x400048D")]
	public const int AK_MIDI_CC_DATA_BUTTON_P1 = 96;

	[Token(Token = "0x400048E")]
	public const int AK_MIDI_CC_DATA_BUTTON_M1 = 97;

	[Token(Token = "0x400048F")]
	public const int AK_MIDI_CC_NON_REGISTER_COARSE = 98;

	[Token(Token = "0x4000490")]
	public const int AK_MIDI_CC_NON_REGISTER_FINE = 99;

	[Token(Token = "0x4000491")]
	public const int AK_MIDI_CC_ALL_SOUND_OFF = 120;

	[Token(Token = "0x4000492")]
	public const int AK_MIDI_CC_ALL_CONTROLLERS_OFF = 121;

	[Token(Token = "0x4000493")]
	public const int AK_MIDI_CC_LOCAL_KEYBOARD = 122;

	[Token(Token = "0x4000494")]
	public const int AK_MIDI_CC_ALL_NOTES_OFF = 123;

	[Token(Token = "0x4000495")]
	public const int AK_MIDI_CC_OMNI_MODE_OFF = 124;

	[Token(Token = "0x4000496")]
	public const int AK_MIDI_CC_OMNI_MODE_ON = 125;

	[Token(Token = "0x4000497")]
	public const int AK_MIDI_CC_OMNI_MONOPHONIC_ON = 126;

	[Token(Token = "0x4000498")]
	public const int AK_MIDI_CC_OMNI_POLYPHONIC_ON = 127;

	[Token(Token = "0x4000499")]
	public const int AK_SPEAKER_FRONT_LEFT = 1;

	[Token(Token = "0x400049A")]
	public const int AK_SPEAKER_FRONT_RIGHT = 2;

	[Token(Token = "0x400049B")]
	public const int AK_SPEAKER_FRONT_CENTER = 4;

	[Token(Token = "0x400049C")]
	public const int AK_SPEAKER_LOW_FREQUENCY = 8;

	[Token(Token = "0x400049D")]
	public const int AK_SPEAKER_BACK_LEFT = 16;

	[Token(Token = "0x400049E")]
	public const int AK_SPEAKER_BACK_RIGHT = 32;

	[Token(Token = "0x400049F")]
	public const int AK_SPEAKER_BACK_CENTER = 256;

	[Token(Token = "0x40004A0")]
	public const int AK_SPEAKER_SIDE_LEFT = 512;

	[Token(Token = "0x40004A1")]
	public const int AK_SPEAKER_SIDE_RIGHT = 1024;

	[Token(Token = "0x40004A2")]
	public const int AK_SPEAKER_TOP = 2048;

	[Token(Token = "0x40004A3")]
	public const int AK_SPEAKER_HEIGHT_FRONT_LEFT = 4096;

	[Token(Token = "0x40004A4")]
	public const int AK_SPEAKER_HEIGHT_FRONT_CENTER = 8192;

	[Token(Token = "0x40004A5")]
	public const int AK_SPEAKER_HEIGHT_FRONT_RIGHT = 16384;

	[Token(Token = "0x40004A6")]
	public const int AK_SPEAKER_HEIGHT_BACK_LEFT = 32768;

	[Token(Token = "0x40004A7")]
	public const int AK_SPEAKER_HEIGHT_BACK_CENTER = 65536;

	[Token(Token = "0x40004A8")]
	public const int AK_SPEAKER_HEIGHT_BACK_RIGHT = 131072;

	[Token(Token = "0x40004A9")]
	public const int AK_SPEAKER_SETUP_MONO = 4;

	[Token(Token = "0x40004AA")]
	public const int AK_SPEAKER_SETUP_0POINT1 = 8;

	[Token(Token = "0x40004AB")]
	public const int AK_SPEAKER_SETUP_1POINT1 = 12;

	[Token(Token = "0x40004AC")]
	public const int AK_SPEAKER_SETUP_STEREO = 3;

	[Token(Token = "0x40004AD")]
	public const int AK_SPEAKER_SETUP_2POINT1 = 11;

	[Token(Token = "0x40004AE")]
	public const int AK_SPEAKER_SETUP_3STEREO = 7;

	[Token(Token = "0x40004AF")]
	public const int AK_SPEAKER_SETUP_3POINT1 = 15;

	[Token(Token = "0x40004B0")]
	public const int AK_SPEAKER_SETUP_4 = 1539;

	[Token(Token = "0x40004B1")]
	public const int AK_SPEAKER_SETUP_4POINT1 = 1547;

	[Token(Token = "0x40004B2")]
	public const int AK_SPEAKER_SETUP_5 = 1543;

	[Token(Token = "0x40004B3")]
	public const int AK_SPEAKER_SETUP_5POINT1 = 1551;

	[Token(Token = "0x40004B4")]
	public const int AK_SPEAKER_SETUP_6 = 1587;

	[Token(Token = "0x40004B5")]
	public const int AK_SPEAKER_SETUP_6POINT1 = 1595;

	[Token(Token = "0x40004B6")]
	public const int AK_SPEAKER_SETUP_7 = 1591;

	[Token(Token = "0x40004B7")]
	public const int AK_SPEAKER_SETUP_7POINT1 = 1599;

	[Token(Token = "0x40004B8")]
	public const int AK_SPEAKER_SETUP_SURROUND = 259;

	[Token(Token = "0x40004B9")]
	public const int AK_SPEAKER_SETUP_DPL2 = 1539;

	[Token(Token = "0x40004BA")]
	public const int AK_SPEAKER_SETUP_HEIGHT_4 = 184320;

	[Token(Token = "0x40004BB")]
	public const int AK_SPEAKER_SETUP_HEIGHT_5 = 192512;

	[Token(Token = "0x40004BC")]
	public const int AK_SPEAKER_SETUP_HEIGHT_ALL = 258048;

	[Token(Token = "0x40004BD")]
	public const int AK_SPEAKER_SETUP_AURO_222 = 22019;

	[Token(Token = "0x40004BE")]
	public const int AK_SPEAKER_SETUP_AURO_8 = 185859;

	[Token(Token = "0x40004BF")]
	public const int AK_SPEAKER_SETUP_AURO_9 = 185863;

	[Token(Token = "0x40004C0")]
	public const int AK_SPEAKER_SETUP_AURO_9POINT1 = 185871;

	[Token(Token = "0x40004C1")]
	public const int AK_SPEAKER_SETUP_AURO_10 = 187911;

	[Token(Token = "0x40004C2")]
	public const int AK_SPEAKER_SETUP_AURO_10POINT1 = 187919;

	[Token(Token = "0x40004C3")]
	public const int AK_SPEAKER_SETUP_AURO_11 = 196103;

	[Token(Token = "0x40004C4")]
	public const int AK_SPEAKER_SETUP_AURO_11POINT1 = 196111;

	[Token(Token = "0x40004C5")]
	public const int AK_SPEAKER_SETUP_AURO_11_740 = 185911;

	[Token(Token = "0x40004C6")]
	public const int AK_SPEAKER_SETUP_AURO_11POINT1_740 = 185919;

	[Token(Token = "0x40004C7")]
	public const int AK_SPEAKER_SETUP_AURO_13_751 = 196151;

	[Token(Token = "0x40004C8")]
	public const int AK_SPEAKER_SETUP_AURO_13POINT1_751 = 196159;

	[Token(Token = "0x40004C9")]
	public const int AK_SPEAKER_SETUP_DOLBY_5_0_2 = 22023;

	[Token(Token = "0x40004CA")]
	public const int AK_SPEAKER_SETUP_DOLBY_5_1_2 = 22031;

	[Token(Token = "0x40004CB")]
	public const int AK_SPEAKER_SETUP_DOLBY_6_0_2 = 22067;

	[Token(Token = "0x40004CC")]
	public const int AK_SPEAKER_SETUP_DOLBY_6_1_2 = 22075;

	[Token(Token = "0x40004CD")]
	public const int AK_SPEAKER_SETUP_DOLBY_6_0_4 = 185907;

	[Token(Token = "0x40004CE")]
	public const int AK_SPEAKER_SETUP_DOLBY_6_1_4 = 185915;

	[Token(Token = "0x40004CF")]
	public const int AK_SPEAKER_SETUP_DOLBY_7_0_2 = 22071;

	[Token(Token = "0x40004D0")]
	public const int AK_SPEAKER_SETUP_DOLBY_7_1_2 = 22079;

	[Token(Token = "0x40004D1")]
	public const int AK_SPEAKER_SETUP_DOLBY_7_0_4 = 185911;

	[Token(Token = "0x40004D2")]
	public const int AK_SPEAKER_SETUP_DOLBY_7_1_4 = 185919;

	[Token(Token = "0x40004D3")]
	public const int AK_SPEAKER_SETUP_ALL_SPEAKERS = 261951;

	[Token(Token = "0x40004D4")]
	public const int AK_IDX_SETUP_FRONT_LEFT = 0;

	[Token(Token = "0x40004D5")]
	public const int AK_IDX_SETUP_FRONT_RIGHT = 1;

	[Token(Token = "0x40004D6")]
	public const int AK_IDX_SETUP_CENTER = 2;

	[Token(Token = "0x40004D7")]
	public const int AK_IDX_SETUP_NOCENTER_BACK_LEFT = 2;

	[Token(Token = "0x40004D8")]
	public const int AK_IDX_SETUP_NOCENTER_BACK_RIGHT = 3;

	[Token(Token = "0x40004D9")]
	public const int AK_IDX_SETUP_NOCENTER_SIDE_LEFT = 4;

	[Token(Token = "0x40004DA")]
	public const int AK_IDX_SETUP_NOCENTER_SIDE_RIGHT = 5;

	[Token(Token = "0x40004DB")]
	public const int AK_IDX_SETUP_WITHCENTER_BACK_LEFT = 3;

	[Token(Token = "0x40004DC")]
	public const int AK_IDX_SETUP_WITHCENTER_BACK_RIGHT = 4;

	[Token(Token = "0x40004DD")]
	public const int AK_IDX_SETUP_WITHCENTER_SIDE_LEFT = 5;

	[Token(Token = "0x40004DE")]
	public const int AK_IDX_SETUP_WITHCENTER_SIDE_RIGHT = 6;

	[Token(Token = "0x40004DF")]
	public const int AK_IDX_SETUP_0_LFE = 0;

	[Token(Token = "0x40004E0")]
	public const int AK_IDX_SETUP_1_CENTER = 0;

	[Token(Token = "0x40004E1")]
	public const int AK_IDX_SETUP_1_LFE = 1;

	[Token(Token = "0x40004E2")]
	public const int AK_IDX_SETUP_2_LEFT = 0;

	[Token(Token = "0x40004E3")]
	public const int AK_IDX_SETUP_2_RIGHT = 1;

	[Token(Token = "0x40004E4")]
	public const int AK_IDX_SETUP_2_LFE = 2;

	[Token(Token = "0x40004E5")]
	public const int AK_IDX_SETUP_3_LEFT = 0;

	[Token(Token = "0x40004E6")]
	public const int AK_IDX_SETUP_3_RIGHT = 1;

	[Token(Token = "0x40004E7")]
	public const int AK_IDX_SETUP_3_CENTER = 2;

	[Token(Token = "0x40004E8")]
	public const int AK_IDX_SETUP_3_LFE = 3;

	[Token(Token = "0x40004E9")]
	public const int AK_IDX_SETUP_4_FRONTLEFT = 0;

	[Token(Token = "0x40004EA")]
	public const int AK_IDX_SETUP_4_FRONTRIGHT = 1;

	[Token(Token = "0x40004EB")]
	public const int AK_IDX_SETUP_4_REARLEFT = 2;

	[Token(Token = "0x40004EC")]
	public const int AK_IDX_SETUP_4_REARRIGHT = 3;

	[Token(Token = "0x40004ED")]
	public const int AK_IDX_SETUP_4_LFE = 4;

	[Token(Token = "0x40004EE")]
	public const int AK_IDX_SETUP_5_FRONTLEFT = 0;

	[Token(Token = "0x40004EF")]
	public const int AK_IDX_SETUP_5_FRONTRIGHT = 1;

	[Token(Token = "0x40004F0")]
	public const int AK_IDX_SETUP_5_CENTER = 2;

	[Token(Token = "0x40004F1")]
	public const int AK_IDX_SETUP_5_REARLEFT = 3;

	[Token(Token = "0x40004F2")]
	public const int AK_IDX_SETUP_5_REARRIGHT = 4;

	[Token(Token = "0x40004F3")]
	public const int AK_IDX_SETUP_5_LFE = 5;

	[Token(Token = "0x40004F4")]
	public const int AK_IDX_SETUP_6_FRONTLEFT = 0;

	[Token(Token = "0x40004F5")]
	public const int AK_IDX_SETUP_6_FRONTRIGHT = 1;

	[Token(Token = "0x40004F6")]
	public const int AK_IDX_SETUP_6_REARLEFT = 2;

	[Token(Token = "0x40004F7")]
	public const int AK_IDX_SETUP_6_REARRIGHT = 3;

	[Token(Token = "0x40004F8")]
	public const int AK_IDX_SETUP_6_SIDELEFT = 4;

	[Token(Token = "0x40004F9")]
	public const int AK_IDX_SETUP_6_SIDERIGHT = 5;

	[Token(Token = "0x40004FA")]
	public const int AK_IDX_SETUP_6_LFE = 6;

	[Token(Token = "0x40004FB")]
	public const int AK_IDX_SETUP_7_FRONTLEFT = 0;

	[Token(Token = "0x40004FC")]
	public const int AK_IDX_SETUP_7_FRONTRIGHT = 1;

	[Token(Token = "0x40004FD")]
	public const int AK_IDX_SETUP_7_CENTER = 2;

	[Token(Token = "0x40004FE")]
	public const int AK_IDX_SETUP_7_REARLEFT = 3;

	[Token(Token = "0x40004FF")]
	public const int AK_IDX_SETUP_7_REARRIGHT = 4;

	[Token(Token = "0x4000500")]
	public const int AK_IDX_SETUP_7_SIDELEFT = 5;

	[Token(Token = "0x4000501")]
	public const int AK_IDX_SETUP_7_SIDERIGHT = 6;

	[Token(Token = "0x4000502")]
	public const int AK_IDX_SETUP_7_LFE = 7;

	[Token(Token = "0x4000503")]
	public const int AK_SPEAKER_SETUP_0_1 = 8;

	[Token(Token = "0x4000504")]
	public const int AK_SPEAKER_SETUP_1_0_CENTER = 4;

	[Token(Token = "0x4000505")]
	public const int AK_SPEAKER_SETUP_1_1_CENTER = 12;

	[Token(Token = "0x4000506")]
	public const int AK_SPEAKER_SETUP_2_0 = 3;

	[Token(Token = "0x4000507")]
	public const int AK_SPEAKER_SETUP_2_1 = 11;

	[Token(Token = "0x4000508")]
	public const int AK_SPEAKER_SETUP_3_0 = 7;

	[Token(Token = "0x4000509")]
	public const int AK_SPEAKER_SETUP_3_1 = 15;

	[Token(Token = "0x400050A")]
	public const int AK_SPEAKER_SETUP_FRONT = 7;

	[Token(Token = "0x400050B")]
	public const int AK_SPEAKER_SETUP_4_0 = 1539;

	[Token(Token = "0x400050C")]
	public const int AK_SPEAKER_SETUP_4_1 = 1547;

	[Token(Token = "0x400050D")]
	public const int AK_SPEAKER_SETUP_5_0 = 1543;

	[Token(Token = "0x400050E")]
	public const int AK_SPEAKER_SETUP_5_1 = 1551;

	[Token(Token = "0x400050F")]
	public const int AK_SPEAKER_SETUP_6_0 = 1587;

	[Token(Token = "0x4000510")]
	public const int AK_SPEAKER_SETUP_6_1 = 1595;

	[Token(Token = "0x4000511")]
	public const int AK_SPEAKER_SETUP_7_0 = 1591;

	[Token(Token = "0x4000512")]
	public const int AK_SPEAKER_SETUP_7_1 = 1599;

	[Token(Token = "0x4000513")]
	public const int AK_SPEAKER_SETUP_DEFAULT_PLANE = 1599;

	[Token(Token = "0x4000514")]
	public const int AK_SUPPORTED_STANDARD_CHANNEL_MASK = 261951;

	[Token(Token = "0x4000515")]
	public const int AK_STANDARD_MAX_NUM_CHANNELS = 8;

	[Token(Token = "0x4000516")]
	public const int AK_NUM_SAMPLED_SPHERE_POINTS = 32;

	[Token(Token = "0x4000517")]
	public const int AK_MAX_NUM_TEXTURE = 4;

	[Token(Token = "0x4000518")]
	public const int AK_MAX_REFLECT_ORDER = 4;

	[Token(Token = "0x4000519")]
	public const int AK_MAX_REFLECTION_PATH_LENGTH = 6;

	[Token(Token = "0x400051A")]
	public const int AK_MAX_SOUND_PROPAGATION_DEPTH = 8;

	[Token(Token = "0x400051B")]
	public const double AK_DEFAULT_DIFFR_SHADOW_DEGREES = 30.0;

	[Token(Token = "0x400051C")]
	public const double AK_DEFAULT_DIFFR_SHADOW_ATTEN = 2.0;

	[Token(Token = "0x400051D")]
	public const double AK_DEFAULT_MOVEMENT_THRESHOLD = 1.0;

	[Token(Token = "0x400051E")]
	public const double AK_SA_EPSILON = 0.001;

	[Token(Token = "0x400051F")]
	public const double AK_SA_DIFFRACTION_EPSILON = 0.1;

	[Token(Token = "0x4000520")]
	public const double AK_SA_PLANE_THICKNESS_RATIO = 0.005;

	[Token(Token = "0x4000521")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static GameObjectHashFunction gameObjectHash;

	[Token(Token = "0x4000522")]
	public const string Deprecation_2018_1_2 = "This functionality is deprecated as of Wwise v2018.1.2 and will be removed in a future release.";

	[Token(Token = "0x4000523")]
	public const string Deprecation_2018_1_6 = "This functionality is deprecated as of Wwise v2018.1.6 and will be removed in a future release.";

	[Token(Token = "0x4000524")]
	public const string Deprecation_2019_1_1 = "This functionality is deprecated as of Wwise v2019.1.1 and will be removed in a future release.";

	[Token(Token = "0x4000525")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static readonly HashSet<ulong> RegisteredGameObjects;

	[Token(Token = "0x17000056")]
	public static uint AK_SOUNDBANK_VERSION
	{
		[Token(Token = "0x60008D2")]
		[Address(RVA = "0x9E815C", Offset = "0x9E815C", VA = "0x9E815C")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x17000057")]
	public static ushort AK_INT
	{
		[Token(Token = "0x60008D3")]
		[Address(RVA = "0x9E822C", Offset = "0x9E822C", VA = "0x9E822C")]
		get
		{
			return default(ushort);
		}
	}

	[Token(Token = "0x17000058")]
	public static ushort AK_FLOAT
	{
		[Token(Token = "0x60008D4")]
		[Address(RVA = "0x9E82FC", Offset = "0x9E82FC", VA = "0x9E82FC")]
		get
		{
			return default(ushort);
		}
	}

	[Token(Token = "0x17000059")]
	public static byte AK_INTERLEAVED
	{
		[Token(Token = "0x60008D5")]
		[Address(RVA = "0x9E83CC", Offset = "0x9E83CC", VA = "0x9E83CC")]
		get
		{
			return default(byte);
		}
	}

	[Token(Token = "0x1700005A")]
	public static byte AK_NONINTERLEAVED
	{
		[Token(Token = "0x60008D6")]
		[Address(RVA = "0x9E849C", Offset = "0x9E849C", VA = "0x9E849C")]
		get
		{
			return default(byte);
		}
	}

	[Token(Token = "0x1700005B")]
	public static uint AK_LE_NATIVE_BITSPERSAMPLE
	{
		[Token(Token = "0x60008D7")]
		[Address(RVA = "0x9E856C", Offset = "0x9E856C", VA = "0x9E856C")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x1700005C")]
	public static uint AK_LE_NATIVE_SAMPLETYPE
	{
		[Token(Token = "0x60008D8")]
		[Address(RVA = "0x9E863C", Offset = "0x9E863C", VA = "0x9E863C")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x1700005D")]
	public static uint AK_LE_NATIVE_INTERLEAVE
	{
		[Token(Token = "0x60008D9")]
		[Address(RVA = "0x9E870C", Offset = "0x9E870C", VA = "0x9E870C")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x1700005E")]
	public static byte AK_INVALID_MIDI_CHANNEL
	{
		[Token(Token = "0x60009AB")]
		[Address(RVA = "0x9F9270", Offset = "0x9F9270", VA = "0x9F9270")]
		get
		{
			return default(byte);
		}
	}

	[Token(Token = "0x1700005F")]
	public static byte AK_INVALID_MIDI_NOTE
	{
		[Token(Token = "0x60009AC")]
		[Address(RVA = "0x9F9340", Offset = "0x9F9340", VA = "0x9F9340")]
		get
		{
			return default(byte);
		}
	}

	[Token(Token = "0x17000060")]
	public static float kDefaultMaxPathLength
	{
		[Token(Token = "0x60009E1")]
		[Address(RVA = "0x9FD0A0", Offset = "0x9FD0A0", VA = "0x9FD0A0")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000061")]
	public static uint kDefaultDiffractionMaxEdges
	{
		[Token(Token = "0x60009E2")]
		[Address(RVA = "0x9FD16C", Offset = "0x9FD16C", VA = "0x9FD16C")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x17000062")]
	public static uint kDefaultDiffractionMaxPaths
	{
		[Token(Token = "0x60009E3")]
		[Address(RVA = "0x9FD23C", Offset = "0x9FD23C", VA = "0x9FD23C")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x17000063")]
	public static float kMaxDiffraction
	{
		[Token(Token = "0x60009E4")]
		[Address(RVA = "0x9FD30C", Offset = "0x9FD30C", VA = "0x9FD30C")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000064")]
	public static uint kListenerDiffractionMaxEdges
	{
		[Token(Token = "0x60009E5")]
		[Address(RVA = "0x9FD3D8", Offset = "0x9FD3D8", VA = "0x9FD3D8")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x17000065")]
	public static uint kListenerDiffractionMaxPaths
	{
		[Token(Token = "0x60009E6")]
		[Address(RVA = "0x9FD4A8", Offset = "0x9FD4A8", VA = "0x9FD4A8")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x17000066")]
	public static uint kPortalToPortalDiffractionMaxPaths
	{
		[Token(Token = "0x60009E7")]
		[Address(RVA = "0x9FD578", Offset = "0x9FD578", VA = "0x9FD578")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x17000067")]
	public static int g_SpatialAudioPoolId
	{
		[Token(Token = "0x60009E9")]
		[Address(RVA = "0x9FD72C", Offset = "0x9FD72C", VA = "0x9FD72C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60009E8")]
		[Address(RVA = "0x9FD648", Offset = "0x9FD648", VA = "0x9FD648")]
		set
		{
		}
	}

	[Token(Token = "0x17000068")]
	public static GameObjectHashFunction GameObjectHash
	{
		[Token(Token = "0x6000A27")]
		[Address(RVA = "0xA01B8C", Offset = "0xA01B8C", VA = "0xA01B8C")]
		set
		{
		}
	}

	[Token(Token = "0x60008DA")]
	[Address(RVA = "0x9E87DC", Offset = "0x9E87DC", VA = "0x9E87DC")]
	public static uint DynamicSequenceOpen(GameObject in_gameObjectID, uint in_uFlags, AkCallbackManager.EventCallback in_pfnCallback, object in_pCookie, AkDynamicSequenceType in_eDynamicSequenceType)
	{
		return default(uint);
	}

	[Token(Token = "0x60008DB")]
	[Address(RVA = "0x9E8ADC", Offset = "0x9E8ADC", VA = "0x9E8ADC")]
	public static uint DynamicSequenceOpen(GameObject in_gameObjectID, uint in_uFlags, AkCallbackManager.EventCallback in_pfnCallback, object in_pCookie)
	{
		return default(uint);
	}

	[Token(Token = "0x60008DC")]
	[Address(RVA = "0x9E8CE0", Offset = "0x9E8CE0", VA = "0x9E8CE0")]
	public static uint DynamicSequenceOpen(GameObject in_gameObjectID)
	{
		return default(uint);
	}

	[Token(Token = "0x60008DD")]
	[Address(RVA = "0x9E8E38", Offset = "0x9E8E38", VA = "0x9E8E38")]
	public static AKRESULT DynamicSequenceClose(uint in_playingID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60008DE")]
	[Address(RVA = "0x9E8F1C", Offset = "0x9E8F1C", VA = "0x9E8F1C")]
	public static AKRESULT DynamicSequencePlay(uint in_playingID, int in_uTransitionDuration, AkCurveInterpolation in_eFadeCurve)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60008DF")]
	[Address(RVA = "0x9E9030", Offset = "0x9E9030", VA = "0x9E9030")]
	public static AKRESULT DynamicSequencePlay(uint in_playingID, int in_uTransitionDuration)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60008E0")]
	[Address(RVA = "0x9E9134", Offset = "0x9E9134", VA = "0x9E9134")]
	public static AKRESULT DynamicSequencePlay(uint in_playingID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60008E1")]
	[Address(RVA = "0x9E9218", Offset = "0x9E9218", VA = "0x9E9218")]
	public static AKRESULT DynamicSequencePause(uint in_playingID, int in_uTransitionDuration, AkCurveInterpolation in_eFadeCurve)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60008E2")]
	[Address(RVA = "0x9E932C", Offset = "0x9E932C", VA = "0x9E932C")]
	public static AKRESULT DynamicSequencePause(uint in_playingID, int in_uTransitionDuration)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60008E3")]
	[Address(RVA = "0x9E9430", Offset = "0x9E9430", VA = "0x9E9430")]
	public static AKRESULT DynamicSequencePause(uint in_playingID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60008E4")]
	[Address(RVA = "0x9E9514", Offset = "0x9E9514", VA = "0x9E9514")]
	public static AKRESULT DynamicSequenceResume(uint in_playingID, int in_uTransitionDuration, AkCurveInterpolation in_eFadeCurve)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60008E5")]
	[Address(RVA = "0x9E9628", Offset = "0x9E9628", VA = "0x9E9628")]
	public static AKRESULT DynamicSequenceResume(uint in_playingID, int in_uTransitionDuration)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60008E6")]
	[Address(RVA = "0x9E972C", Offset = "0x9E972C", VA = "0x9E972C")]
	public static AKRESULT DynamicSequenceResume(uint in_playingID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60008E7")]
	[Address(RVA = "0x9E9810", Offset = "0x9E9810", VA = "0x9E9810")]
	public static AKRESULT DynamicSequenceStop(uint in_playingID, int in_uTransitionDuration, AkCurveInterpolation in_eFadeCurve)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60008E8")]
	[Address(RVA = "0x9E9924", Offset = "0x9E9924", VA = "0x9E9924")]
	public static AKRESULT DynamicSequenceStop(uint in_playingID, int in_uTransitionDuration)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60008E9")]
	[Address(RVA = "0x9E9A28", Offset = "0x9E9A28", VA = "0x9E9A28")]
	public static AKRESULT DynamicSequenceStop(uint in_playingID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60008EA")]
	[Address(RVA = "0x9E9B0C", Offset = "0x9E9B0C", VA = "0x9E9B0C")]
	public static AKRESULT DynamicSequenceBreak(uint in_playingID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60008EB")]
	[Address(RVA = "0x9E9BF0", Offset = "0x9E9BF0", VA = "0x9E9BF0")]
	public static AKRESULT DynamicSequenceGetPauseTimes(uint in_playingID, out uint out_uTime, out uint out_uDuration)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60008EC")]
	[Address(RVA = "0x9E9D04", Offset = "0x9E9D04", VA = "0x9E9D04")]
	public static AkPlaylist DynamicSequenceLockPlaylist(uint in_playingID)
	{
		return null;
	}

	[Token(Token = "0x60008ED")]
	[Address(RVA = "0x9E9E2C", Offset = "0x9E9E2C", VA = "0x9E9E2C")]
	public static AKRESULT DynamicSequenceUnlockPlaylist(uint in_playingID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60008EE")]
	[Address(RVA = "0x9E9F10", Offset = "0x9E9F10", VA = "0x9E9F10")]
	public static bool IsInitialized()
	{
		return default(bool);
	}

	[Token(Token = "0x60008EF")]
	[Address(RVA = "0x9E9FE8", Offset = "0x9E9FE8", VA = "0x9E9FE8")]
	public static AKRESULT GetAudioSettings(AkAudioSettings out_audioSettings)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60008F0")]
	[Address(RVA = "0x9EA0E0", Offset = "0x9EA0E0", VA = "0x9EA0E0")]
	public static AkChannelConfig GetSpeakerConfiguration(ulong in_idOutput)
	{
		return null;
	}

	[Token(Token = "0x60008F1")]
	[Address(RVA = "0x9EA1F8", Offset = "0x9EA1F8", VA = "0x9EA1F8")]
	public static AkChannelConfig GetSpeakerConfiguration()
	{
		return null;
	}

	[Token(Token = "0x60008F2")]
	[Address(RVA = "0x9EA2FC", Offset = "0x9EA2FC", VA = "0x9EA2FC")]
	public static AKRESULT GetPanningRule(out int out_ePanningRule, ulong in_idOutput)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60008F3")]
	[Address(RVA = "0x9EA400", Offset = "0x9EA400", VA = "0x9EA400")]
	public static AKRESULT GetPanningRule(out int out_ePanningRule)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60008F4")]
	[Address(RVA = "0x9EA4E4", Offset = "0x9EA4E4", VA = "0x9EA4E4")]
	public static AKRESULT SetPanningRule(AkPanningRule in_ePanningRule, ulong in_idOutput)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60008F5")]
	[Address(RVA = "0x9EA5E8", Offset = "0x9EA5E8", VA = "0x9EA5E8")]
	public static AKRESULT SetPanningRule(AkPanningRule in_ePanningRule)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60008F6")]
	[Address(RVA = "0x9EA6CC", Offset = "0x9EA6CC", VA = "0x9EA6CC")]
	public static AKRESULT GetSpeakerAngles(float[] io_pfSpeakerAngles, ref uint io_uNumAngles, out float out_fHeightAngle, ulong in_idOutput)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60008F7")]
	[Address(RVA = "0x9EA808", Offset = "0x9EA808", VA = "0x9EA808")]
	public static AKRESULT GetSpeakerAngles(float[] io_pfSpeakerAngles, ref uint io_uNumAngles, out float out_fHeightAngle)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60008F8")]
	[Address(RVA = "0x9EA924", Offset = "0x9EA924", VA = "0x9EA924")]
	public static AKRESULT SetSpeakerAngles(float[] in_pfSpeakerAngles, uint in_uNumAngles, float in_fHeightAngle, ulong in_idOutput)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60008F9")]
	[Address(RVA = "0x9EAA60", Offset = "0x9EAA60", VA = "0x9EAA60")]
	public static AKRESULT SetSpeakerAngles(float[] in_pfSpeakerAngles, uint in_uNumAngles, float in_fHeightAngle)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60008FA")]
	[Address(RVA = "0x9EAB8C", Offset = "0x9EAB8C", VA = "0x9EAB8C")]
	public static AKRESULT SetVolumeThreshold(float in_fVolumeThresholdDB)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60008FB")]
	[Address(RVA = "0x9EAC80", Offset = "0x9EAC80", VA = "0x9EAC80")]
	public static AKRESULT SetMaxNumVoicesLimit(ushort in_maxNumberVoices)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60008FC")]
	[Address(RVA = "0x9EAD64", Offset = "0x9EAD64", VA = "0x9EAD64")]
	public static AKRESULT RenderAudio(bool in_bAllowSyncRender)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60008FD")]
	[Address(RVA = "0x9EAE48", Offset = "0x9EAE48", VA = "0x9EAE48")]
	public static AKRESULT RenderAudio()
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60008FE")]
	[Address(RVA = "0x9EAF18", Offset = "0x9EAF18", VA = "0x9EAF18")]
	public static AKRESULT RegisterPluginDLL(string in_DllName, string in_DllPath)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60008FF")]
	[Address(RVA = "0x9EB04C", Offset = "0x9EB04C", VA = "0x9EB04C")]
	public static AKRESULT RegisterPluginDLL(string in_DllName)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000900")]
	[Address(RVA = "0x9EB148", Offset = "0x9EB148", VA = "0x9EB148")]
	public static uint GetIDFromString(string in_pszString)
	{
		return default(uint);
	}

	[Token(Token = "0x6000901")]
	[Address(RVA = "0x9EB244", Offset = "0x9EB244", VA = "0x9EB244")]
	public static uint PostEvent(uint in_eventID, GameObject in_gameObjectID, uint in_uFlags, AkCallbackManager.EventCallback in_pfnCallback, object in_pCookie, uint in_cExternals, AkExternalSourceInfoArray in_pExternalSources, uint in_PlayingID)
	{
		return default(uint);
	}

	[Token(Token = "0x6000902")]
	[Address(RVA = "0x9EB4B4", Offset = "0x9EB4B4", VA = "0x9EB4B4")]
	public static uint PostEvent(uint in_eventID, GameObject in_gameObjectID, uint in_uFlags, AkCallbackManager.EventCallback in_pfnCallback, object in_pCookie, uint in_cExternals, AkExternalSourceInfoArray in_pExternalSources)
	{
		return default(uint);
	}

	[Token(Token = "0x6000903")]
	[Address(RVA = "0x9EB704", Offset = "0x9EB704", VA = "0x9EB704")]
	public static uint PostEvent(uint in_eventID, GameObject in_gameObjectID, uint in_uFlags, AkCallbackManager.EventCallback in_pfnCallback, object in_pCookie)
	{
		return default(uint);
	}

	[Token(Token = "0x6000904")]
	[Address(RVA = "0x9EB918", Offset = "0x9EB918", VA = "0x9EB918")]
	public static uint PostEvent(uint in_eventID, GameObject in_gameObjectID)
	{
		return default(uint);
	}

	[Token(Token = "0x6000905")]
	[Address(RVA = "0x9EBA90", Offset = "0x9EBA90", VA = "0x9EBA90")]
	public static uint PostEvent(string in_pszEventName, GameObject in_gameObjectID, uint in_uFlags, AkCallbackManager.EventCallback in_pfnCallback, object in_pCookie, uint in_cExternals, AkExternalSourceInfoArray in_pExternalSources, uint in_PlayingID)
	{
		return default(uint);
	}

	[Token(Token = "0x6000906")]
	[Address(RVA = "0x9EBD18", Offset = "0x9EBD18", VA = "0x9EBD18")]
	public static uint PostEvent(string in_pszEventName, GameObject in_gameObjectID, uint in_uFlags, AkCallbackManager.EventCallback in_pfnCallback, object in_pCookie, uint in_cExternals, AkExternalSourceInfoArray in_pExternalSources)
	{
		return default(uint);
	}

	[Token(Token = "0x6000907")]
	[Address(RVA = "0x9EBF80", Offset = "0x9EBF80", VA = "0x9EBF80")]
	public static uint PostEvent(string in_pszEventName, GameObject in_gameObjectID, uint in_uFlags, AkCallbackManager.EventCallback in_pfnCallback, object in_pCookie)
	{
		return default(uint);
	}

	[Token(Token = "0x6000908")]
	[Address(RVA = "0x9EC1AC", Offset = "0x9EC1AC", VA = "0x9EC1AC")]
	public static uint PostEvent(string in_pszEventName, GameObject in_gameObjectID)
	{
		return default(uint);
	}

	[Token(Token = "0x6000909")]
	[Address(RVA = "0x9EC33C", Offset = "0x9EC33C", VA = "0x9EC33C")]
	public static AKRESULT ExecuteActionOnEvent(uint in_eventID, AkActionOnEventType in_ActionType, GameObject in_gameObjectID, int in_uTransitionDuration, AkCurveInterpolation in_eFadeCurve, uint in_PlayingID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600090A")]
	[Address(RVA = "0x9EC4D8", Offset = "0x9EC4D8", VA = "0x9EC4D8")]
	public static AKRESULT ExecuteActionOnEvent(uint in_eventID, AkActionOnEventType in_ActionType, GameObject in_gameObjectID, int in_uTransitionDuration, AkCurveInterpolation in_eFadeCurve)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600090B")]
	[Address(RVA = "0x9EC654", Offset = "0x9EC654", VA = "0x9EC654")]
	public static AKRESULT ExecuteActionOnEvent(uint in_eventID, AkActionOnEventType in_ActionType, GameObject in_gameObjectID, int in_uTransitionDuration)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600090C")]
	[Address(RVA = "0x9EC7C0", Offset = "0x9EC7C0", VA = "0x9EC7C0")]
	public static AKRESULT ExecuteActionOnEvent(uint in_eventID, AkActionOnEventType in_ActionType, GameObject in_gameObjectID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600090D")]
	[Address(RVA = "0x9EC90C", Offset = "0x9EC90C", VA = "0x9EC90C")]
	public static AKRESULT ExecuteActionOnEvent(uint in_eventID, AkActionOnEventType in_ActionType)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600090E")]
	[Address(RVA = "0x9ECA10", Offset = "0x9ECA10", VA = "0x9ECA10")]
	public static AKRESULT ExecuteActionOnEvent(string in_pszEventName, AkActionOnEventType in_ActionType, GameObject in_gameObjectID, int in_uTransitionDuration, AkCurveInterpolation in_eFadeCurve, uint in_PlayingID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600090F")]
	[Address(RVA = "0x9ECBC4", Offset = "0x9ECBC4", VA = "0x9ECBC4")]
	public static AKRESULT ExecuteActionOnEvent(string in_pszEventName, AkActionOnEventType in_ActionType, GameObject in_gameObjectID, int in_uTransitionDuration, AkCurveInterpolation in_eFadeCurve)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000910")]
	[Address(RVA = "0x9ECD58", Offset = "0x9ECD58", VA = "0x9ECD58")]
	public static AKRESULT ExecuteActionOnEvent(string in_pszEventName, AkActionOnEventType in_ActionType, GameObject in_gameObjectID, int in_uTransitionDuration)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000911")]
	[Address(RVA = "0x9ECEDC", Offset = "0x9ECEDC", VA = "0x9ECEDC")]
	public static AKRESULT ExecuteActionOnEvent(string in_pszEventName, AkActionOnEventType in_ActionType, GameObject in_gameObjectID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000912")]
	[Address(RVA = "0x9ED040", Offset = "0x9ED040", VA = "0x9ED040")]
	public static AKRESULT ExecuteActionOnEvent(string in_pszEventName, AkActionOnEventType in_ActionType)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000913")]
	[Address(RVA = "0x9ED15C", Offset = "0x9ED15C", VA = "0x9ED15C")]
	public static AKRESULT PostMIDIOnEvent(uint in_eventID, GameObject in_gameObjectID, AkMIDIPostArray in_pPosts, ushort in_uNumPosts)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000914")]
	[Address(RVA = "0x9ED2D4", Offset = "0x9ED2D4", VA = "0x9ED2D4")]
	public static AKRESULT StopMIDIOnEvent(uint in_eventID, GameObject in_gameObjectID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000915")]
	[Address(RVA = "0x9ED410", Offset = "0x9ED410", VA = "0x9ED410")]
	public static AKRESULT StopMIDIOnEvent(uint in_eventID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000916")]
	[Address(RVA = "0x9ED4F4", Offset = "0x9ED4F4", VA = "0x9ED4F4")]
	public static AKRESULT StopMIDIOnEvent()
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000917")]
	[Address(RVA = "0x9ED5C4", Offset = "0x9ED5C4", VA = "0x9ED5C4")]
	public static AKRESULT PinEventInStreamCache(uint in_eventID, sbyte in_uActivePriority, sbyte in_uInactivePriority)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000918")]
	[Address(RVA = "0x9ED6D8", Offset = "0x9ED6D8", VA = "0x9ED6D8")]
	public static AKRESULT PinEventInStreamCache(string in_pszEventName, sbyte in_uActivePriority, sbyte in_uInactivePriority)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000919")]
	[Address(RVA = "0x9ED804", Offset = "0x9ED804", VA = "0x9ED804")]
	public static AKRESULT UnpinEventInStreamCache(uint in_eventID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600091A")]
	[Address(RVA = "0x9ED8E8", Offset = "0x9ED8E8", VA = "0x9ED8E8")]
	public static AKRESULT UnpinEventInStreamCache(string in_pszEventName)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600091B")]
	[Address(RVA = "0x9ED9E4", Offset = "0x9ED9E4", VA = "0x9ED9E4")]
	public static AKRESULT GetBufferStatusForPinnedEvent(uint in_eventID, out float out_fPercentBuffered, out int out_bCachePinnedMemoryFull)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600091C")]
	[Address(RVA = "0x9EDAF8", Offset = "0x9EDAF8", VA = "0x9EDAF8")]
	public static AKRESULT GetBufferStatusForPinnedEvent(string in_pszEventName, out float out_fPercentBuffered, out int out_bCachePinnedMemoryFull)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600091D")]
	[Address(RVA = "0x9EDC24", Offset = "0x9EDC24", VA = "0x9EDC24")]
	public static AKRESULT SeekOnEvent(uint in_eventID, GameObject in_gameObjectID, int in_iPosition, bool in_bSeekToNearestMarker, uint in_PlayingID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600091E")]
	[Address(RVA = "0x9EDDA0", Offset = "0x9EDDA0", VA = "0x9EDDA0")]
	public static AKRESULT SeekOnEvent(uint in_eventID, GameObject in_gameObjectID, int in_iPosition, bool in_bSeekToNearestMarker)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600091F")]
	[Address(RVA = "0x9EDF0C", Offset = "0x9EDF0C", VA = "0x9EDF0C")]
	public static AKRESULT SeekOnEvent(uint in_eventID, GameObject in_gameObjectID, int in_iPosition)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000920")]
	[Address(RVA = "0x9EE058", Offset = "0x9EE058", VA = "0x9EE058")]
	public static AKRESULT SeekOnEvent(string in_pszEventName, GameObject in_gameObjectID, int in_iPosition, bool in_bSeekToNearestMarker, uint in_PlayingID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000921")]
	[Address(RVA = "0x9EE1EC", Offset = "0x9EE1EC", VA = "0x9EE1EC")]
	public static AKRESULT SeekOnEvent(string in_pszEventName, GameObject in_gameObjectID, int in_iPosition, bool in_bSeekToNearestMarker)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000922")]
	[Address(RVA = "0x9EE370", Offset = "0x9EE370", VA = "0x9EE370")]
	public static AKRESULT SeekOnEvent(string in_pszEventName, GameObject in_gameObjectID, int in_iPosition)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000923")]
	[Address(RVA = "0x9EE4D4", Offset = "0x9EE4D4", VA = "0x9EE4D4")]
	public static AKRESULT SeekOnEvent(uint in_eventID, GameObject in_gameObjectID, float in_fPercent, bool in_bSeekToNearestMarker, uint in_PlayingID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000924")]
	[Address(RVA = "0x9EE660", Offset = "0x9EE660", VA = "0x9EE660")]
	public static AKRESULT SeekOnEvent(uint in_eventID, GameObject in_gameObjectID, float in_fPercent, bool in_bSeekToNearestMarker)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000925")]
	[Address(RVA = "0x9EE7CC", Offset = "0x9EE7CC", VA = "0x9EE7CC")]
	public static AKRESULT SeekOnEvent(uint in_eventID, GameObject in_gameObjectID, float in_fPercent)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000926")]
	[Address(RVA = "0x9EE928", Offset = "0x9EE928", VA = "0x9EE928")]
	public static AKRESULT SeekOnEvent(string in_pszEventName, GameObject in_gameObjectID, float in_fPercent, bool in_bSeekToNearestMarker, uint in_PlayingID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000927")]
	[Address(RVA = "0x9EEACC", Offset = "0x9EEACC", VA = "0x9EEACC")]
	public static AKRESULT SeekOnEvent(string in_pszEventName, GameObject in_gameObjectID, float in_fPercent, bool in_bSeekToNearestMarker)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000928")]
	[Address(RVA = "0x9EEC50", Offset = "0x9EEC50", VA = "0x9EEC50")]
	public static AKRESULT SeekOnEvent(string in_pszEventName, GameObject in_gameObjectID, float in_fPercent)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000929")]
	[Address(RVA = "0x9EEDC4", Offset = "0x9EEDC4", VA = "0x9EEDC4")]
	public static void CancelEventCallbackCookie(object in_pCookie)
	{
	}

	[Token(Token = "0x600092A")]
	[Address(RVA = "0x9EEE2C", Offset = "0x9EEE2C", VA = "0x9EEE2C")]
	public static void CancelEventCallbackGameObject(GameObject in_gameObjectID)
	{
	}

	[Token(Token = "0x600092B")]
	[Address(RVA = "0x9EEF48", Offset = "0x9EEF48", VA = "0x9EEF48")]
	public static void CancelEventCallback(uint in_playingID)
	{
	}

	[Token(Token = "0x600092C")]
	[Address(RVA = "0x9EEFB0", Offset = "0x9EEFB0", VA = "0x9EEFB0")]
	public static AKRESULT GetSourcePlayPosition(uint in_PlayingID, out int out_puPosition, bool in_bExtrapolate)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600092D")]
	[Address(RVA = "0x9EF0C4", Offset = "0x9EF0C4", VA = "0x9EF0C4")]
	public static AKRESULT GetSourcePlayPosition(uint in_PlayingID, out int out_puPosition)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600092E")]
	[Address(RVA = "0x9EF1C8", Offset = "0x9EF1C8", VA = "0x9EF1C8")]
	public static AKRESULT GetSourceStreamBuffering(uint in_PlayingID, out int out_buffering, out int out_bIsBuffering)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600092F")]
	[Address(RVA = "0x9EF2DC", Offset = "0x9EF2DC", VA = "0x9EF2DC")]
	public static void StopAll(GameObject in_gameObjectID)
	{
	}

	[Token(Token = "0x6000930")]
	[Address(RVA = "0x9EF3F8", Offset = "0x9EF3F8", VA = "0x9EF3F8")]
	public static void StopAll()
	{
	}

	[Token(Token = "0x6000931")]
	[Address(RVA = "0x9EF4C4", Offset = "0x9EF4C4", VA = "0x9EF4C4")]
	public static void StopPlayingID(uint in_playingID, int in_uTransitionDuration, AkCurveInterpolation in_eFadeCurve)
	{
	}

	[Token(Token = "0x6000932")]
	[Address(RVA = "0x9EF5D8", Offset = "0x9EF5D8", VA = "0x9EF5D8")]
	public static void StopPlayingID(uint in_playingID, int in_uTransitionDuration)
	{
	}

	[Token(Token = "0x6000933")]
	[Address(RVA = "0x9EF6DC", Offset = "0x9EF6DC", VA = "0x9EF6DC")]
	public static void StopPlayingID(uint in_playingID)
	{
	}

	[Token(Token = "0x6000934")]
	[Address(RVA = "0x9EF7C0", Offset = "0x9EF7C0", VA = "0x9EF7C0")]
	public static void ExecuteActionOnPlayingID(AkActionOnEventType in_ActionType, uint in_playingID, int in_uTransitionDuration, AkCurveInterpolation in_eFadeCurve)
	{
	}

	[Token(Token = "0x6000935")]
	[Address(RVA = "0x9EF8F4", Offset = "0x9EF8F4", VA = "0x9EF8F4")]
	public static void ExecuteActionOnPlayingID(AkActionOnEventType in_ActionType, uint in_playingID, int in_uTransitionDuration)
	{
	}

	[Token(Token = "0x6000936")]
	[Address(RVA = "0x9EFA08", Offset = "0x9EFA08", VA = "0x9EFA08")]
	public static void ExecuteActionOnPlayingID(AkActionOnEventType in_ActionType, uint in_playingID)
	{
	}

	[Token(Token = "0x6000937")]
	[Address(RVA = "0x9EFB0C", Offset = "0x9EFB0C", VA = "0x9EFB0C")]
	public static void SetRandomSeed(uint in_uSeed)
	{
	}

	[Token(Token = "0x6000938")]
	[Address(RVA = "0x9EFBF0", Offset = "0x9EFBF0", VA = "0x9EFBF0")]
	public static void MuteBackgroundMusic(bool in_bMute)
	{
	}

	[Token(Token = "0x6000939")]
	[Address(RVA = "0x9EFCD4", Offset = "0x9EFCD4", VA = "0x9EFCD4")]
	public static bool GetBackgroundMusicMute()
	{
		return default(bool);
	}

	[Token(Token = "0x600093A")]
	[Address(RVA = "0x9EFDAC", Offset = "0x9EFDAC", VA = "0x9EFDAC")]
	public static AKRESULT SendPluginCustomGameData(uint in_busID, GameObject in_busObjectID, AkPluginType in_eType, uint in_uCompanyID, uint in_uPluginID, IntPtr in_pData, uint in_uSizeInBytes)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600093B")]
	[Address(RVA = "0x9EFF58", Offset = "0x9EFF58", VA = "0x9EFF58")]
	public static AKRESULT UnregisterAllGameObj()
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600093C")]
	[Address(RVA = "0x9F0028", Offset = "0x9F0028", VA = "0x9F0028")]
	public static AKRESULT SetMultiplePositions(GameObject in_GameObjectID, AkPositionArray in_pPositions, ushort in_NumPositions, AkMultiPositionType in_eMultiPositionType)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600093D")]
	[Address(RVA = "0x9F0194", Offset = "0x9F0194", VA = "0x9F0194")]
	public static AKRESULT SetMultiplePositions(GameObject in_GameObjectID, AkPositionArray in_pPositions, ushort in_NumPositions)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600093E")]
	[Address(RVA = "0x9F02E0", Offset = "0x9F02E0", VA = "0x9F02E0")]
	public static AKRESULT SetMultiplePositions(GameObject in_GameObjectID, AkChannelEmitterArray in_pPositions, ushort in_NumPositions, AkMultiPositionType in_eMultiPositionType)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600093F")]
	[Address(RVA = "0x9F044C", Offset = "0x9F044C", VA = "0x9F044C")]
	public static AKRESULT SetMultiplePositions(GameObject in_GameObjectID, AkChannelEmitterArray in_pPositions, ushort in_NumPositions)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000940")]
	[Address(RVA = "0x9F0598", Offset = "0x9F0598", VA = "0x9F0598")]
	public static AKRESULT SetScalingFactor(GameObject in_GameObjectID, float in_fAttenuationScalingFactor)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000941")]
	[Address(RVA = "0x9F06CC", Offset = "0x9F06CC", VA = "0x9F06CC")]
	public static AKRESULT ClearBanks()
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000942")]
	[Address(RVA = "0x9F079C", Offset = "0x9F079C", VA = "0x9F079C")]
	public static AKRESULT SetBankLoadIOSettings(float in_fThroughput, sbyte in_priority)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000943")]
	[Address(RVA = "0x9F08A0", Offset = "0x9F08A0", VA = "0x9F08A0")]
	public static AKRESULT LoadBank(string in_pszString, int in_memPoolId, out uint out_bankID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000944")]
	[Address(RVA = "0x9F09CC", Offset = "0x9F09CC", VA = "0x9F09CC")]
	public static AKRESULT LoadBank(uint in_bankID, int in_memPoolId)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000945")]
	[Address(RVA = "0x9F0AD0", Offset = "0x9F0AD0", VA = "0x9F0AD0")]
	public static AKRESULT LoadBank(IntPtr in_pInMemoryBankPtr, uint in_uInMemoryBankSize, out uint out_bankID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000946")]
	[Address(RVA = "0x9F0BE4", Offset = "0x9F0BE4", VA = "0x9F0BE4")]
	public static AKRESULT LoadBank(IntPtr in_pInMemoryBankPtr, uint in_uInMemoryBankSize, int in_uPoolForBankMedia, out uint out_bankID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000947")]
	[Address(RVA = "0x9F0D18", Offset = "0x9F0D18", VA = "0x9F0D18")]
	public static AKRESULT LoadBank(string in_pszString, AkCallbackManager.BankCallback in_pfnBankCallback, object in_pCookie, int in_memPoolId, out uint out_bankID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000948")]
	[Address(RVA = "0x9F0EC0", Offset = "0x9F0EC0", VA = "0x9F0EC0")]
	public static AKRESULT LoadBank(uint in_bankID, AkCallbackManager.BankCallback in_pfnBankCallback, object in_pCookie, int in_memPoolId)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000949")]
	[Address(RVA = "0x9F1040", Offset = "0x9F1040", VA = "0x9F1040")]
	public static AKRESULT LoadBank(IntPtr in_pInMemoryBankPtr, uint in_uInMemoryBankSize, AkCallbackManager.BankCallback in_pfnBankCallback, object in_pCookie, out uint out_bankID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600094A")]
	[Address(RVA = "0x9F11D0", Offset = "0x9F11D0", VA = "0x9F11D0")]
	public static AKRESULT LoadBank(IntPtr in_pInMemoryBankPtr, uint in_uInMemoryBankSize, AkCallbackManager.BankCallback in_pfnBankCallback, object in_pCookie, int in_uPoolForBankMedia, out uint out_bankID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600094B")]
	[Address(RVA = "0x9F1380", Offset = "0x9F1380", VA = "0x9F1380")]
	public static AKRESULT UnloadBank(string in_pszString, IntPtr in_pInMemoryBankPtr, out int out_pMemPoolId)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600094C")]
	[Address(RVA = "0x9F14AC", Offset = "0x9F14AC", VA = "0x9F14AC")]
	public static AKRESULT UnloadBank(string in_pszString, IntPtr in_pInMemoryBankPtr)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600094D")]
	[Address(RVA = "0x9F15C8", Offset = "0x9F15C8", VA = "0x9F15C8")]
	public static AKRESULT UnloadBank(uint in_bankID, IntPtr in_pInMemoryBankPtr, out int out_pMemPoolId)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600094E")]
	[Address(RVA = "0x9F16DC", Offset = "0x9F16DC", VA = "0x9F16DC")]
	public static AKRESULT UnloadBank(uint in_bankID, IntPtr in_pInMemoryBankPtr)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600094F")]
	[Address(RVA = "0x9F17E0", Offset = "0x9F17E0", VA = "0x9F17E0")]
	public static AKRESULT UnloadBank(string in_pszString, IntPtr in_pInMemoryBankPtr, AkCallbackManager.BankCallback in_pfnBankCallback, object in_pCookie)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000950")]
	[Address(RVA = "0x9F1978", Offset = "0x9F1978", VA = "0x9F1978")]
	public static AKRESULT UnloadBank(uint in_bankID, IntPtr in_pInMemoryBankPtr, AkCallbackManager.BankCallback in_pfnBankCallback, object in_pCookie)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000951")]
	[Address(RVA = "0x9F1AF8", Offset = "0x9F1AF8", VA = "0x9F1AF8")]
	public static void CancelBankCallbackCookie(object in_pCookie)
	{
	}

	[Token(Token = "0x6000952")]
	[Address(RVA = "0x9F1B60", Offset = "0x9F1B60", VA = "0x9F1B60")]
	public static AKRESULT PrepareBank(AkPreparationType in_PreparationType, string in_pszString, AkBankContent in_uFlags)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000953")]
	[Address(RVA = "0x9F1C90", Offset = "0x9F1C90", VA = "0x9F1C90")]
	public static AKRESULT PrepareBank(AkPreparationType in_PreparationType, string in_pszString)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000954")]
	[Address(RVA = "0x9F1DB0", Offset = "0x9F1DB0", VA = "0x9F1DB0")]
	public static AKRESULT PrepareBank(AkPreparationType in_PreparationType, uint in_bankID, AkBankContent in_uFlags)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000955")]
	[Address(RVA = "0x9F1EC4", Offset = "0x9F1EC4", VA = "0x9F1EC4")]
	public static AKRESULT PrepareBank(AkPreparationType in_PreparationType, uint in_bankID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000956")]
	[Address(RVA = "0x9F1FC8", Offset = "0x9F1FC8", VA = "0x9F1FC8")]
	public static AKRESULT PrepareBank(AkPreparationType in_PreparationType, string in_pszString, AkCallbackManager.BankCallback in_pfnBankCallback, object in_pCookie, AkBankContent in_uFlags)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000957")]
	[Address(RVA = "0x9F2174", Offset = "0x9F2174", VA = "0x9F2174")]
	public static AKRESULT PrepareBank(AkPreparationType in_PreparationType, string in_pszString, AkCallbackManager.BankCallback in_pfnBankCallback, object in_pCookie)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000958")]
	[Address(RVA = "0x9F2310", Offset = "0x9F2310", VA = "0x9F2310")]
	public static AKRESULT PrepareBank(AkPreparationType in_PreparationType, uint in_bankID, AkCallbackManager.BankCallback in_pfnBankCallback, object in_pCookie, AkBankContent in_uFlags)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000959")]
	[Address(RVA = "0x9F24A0", Offset = "0x9F24A0", VA = "0x9F24A0")]
	public static AKRESULT PrepareBank(AkPreparationType in_PreparationType, uint in_bankID, AkCallbackManager.BankCallback in_pfnBankCallback, object in_pCookie)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600095A")]
	[Address(RVA = "0x9F2620", Offset = "0x9F2620", VA = "0x9F2620")]
	public static AKRESULT ClearPreparedEvents()
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600095B")]
	[Address(RVA = "0x9F26F0", Offset = "0x9F26F0", VA = "0x9F26F0")]
	public static AKRESULT PrepareEvent(AkPreparationType in_PreparationType, string[] in_ppszString, uint in_uNumEvent)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600095C")]
	[Address(RVA = "0x9F2A20", Offset = "0x9F2A20", VA = "0x9F2A20")]
	public static AKRESULT PrepareEvent(AkPreparationType in_PreparationType, uint[] in_pEventID, uint in_uNumEvent)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600095D")]
	[Address(RVA = "0x9F2B3C", Offset = "0x9F2B3C", VA = "0x9F2B3C")]
	public static AKRESULT PrepareEvent(AkPreparationType in_PreparationType, string[] in_ppszString, uint in_uNumEvent, AkCallbackManager.BankCallback in_pfnBankCallback, object in_pCookie)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600095E")]
	[Address(RVA = "0x9F2EE8", Offset = "0x9F2EE8", VA = "0x9F2EE8")]
	public static AKRESULT PrepareEvent(AkPreparationType in_PreparationType, uint[] in_pEventID, uint in_uNumEvent, AkCallbackManager.BankCallback in_pfnBankCallback, object in_pCookie)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600095F")]
	[Address(RVA = "0x9F3080", Offset = "0x9F3080", VA = "0x9F3080")]
	public static AKRESULT SetMedia(AkSourceSettingsArray in_pSourceSettings, uint in_uNumSourceSettings)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000960")]
	[Address(RVA = "0x9F3190", Offset = "0x9F3190", VA = "0x9F3190")]
	public static AKRESULT UnsetMedia(AkSourceSettingsArray in_pSourceSettings, uint in_uNumSourceSettings)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000961")]
	[Address(RVA = "0x9F32A0", Offset = "0x9F32A0", VA = "0x9F32A0")]
	public static AKRESULT PrepareGameSyncs(AkPreparationType in_PreparationType, AkGroupType in_eGameSyncType, string in_pszGroupName, string[] in_ppszGameSyncName, uint in_uNumGameSyncs)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000962")]
	[Address(RVA = "0x9F3614", Offset = "0x9F3614", VA = "0x9F3614")]
	public static AKRESULT PrepareGameSyncs(AkPreparationType in_PreparationType, AkGroupType in_eGameSyncType, uint in_GroupID, uint[] in_paGameSyncID, uint in_uNumGameSyncs)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000963")]
	[Address(RVA = "0x9F3760", Offset = "0x9F3760", VA = "0x9F3760")]
	public static AKRESULT PrepareGameSyncs(AkPreparationType in_PreparationType, AkGroupType in_eGameSyncType, string in_pszGroupName, string[] in_ppszGameSyncName, uint in_uNumGameSyncs, AkCallbackManager.BankCallback in_pfnBankCallback, object in_pCookie)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000964")]
	[Address(RVA = "0x9F3B50", Offset = "0x9F3B50", VA = "0x9F3B50")]
	public static AKRESULT PrepareGameSyncs(AkPreparationType in_PreparationType, AkGroupType in_eGameSyncType, uint in_GroupID, uint[] in_paGameSyncID, uint in_uNumGameSyncs, AkCallbackManager.BankCallback in_pfnBankCallback, object in_pCookie)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000965")]
	[Address(RVA = "0x9F3D18", Offset = "0x9F3D18", VA = "0x9F3D18")]
	public static AKRESULT AddListener(GameObject in_emitterGameObj, GameObject in_listenerGameObj)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000966")]
	[Address(RVA = "0x9F3E6C", Offset = "0x9F3E6C", VA = "0x9F3E6C")]
	public static AKRESULT RemoveListener(GameObject in_emitterGameObj, GameObject in_listenerGameObj)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000967")]
	[Address(RVA = "0x9F3FC0", Offset = "0x9F3FC0", VA = "0x9F3FC0")]
	public static AKRESULT AddDefaultListener(GameObject in_listenerGameObj)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000968")]
	[Address(RVA = "0x9F40DC", Offset = "0x9F40DC", VA = "0x9F40DC")]
	public static AKRESULT RemoveDefaultListener(GameObject in_listenerGameObj)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000969")]
	[Address(RVA = "0x9F41F8", Offset = "0x9F41F8", VA = "0x9F41F8")]
	public static AKRESULT ResetListenersToDefault(GameObject in_emitterGameObj)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600096A")]
	[Address(RVA = "0x9F4314", Offset = "0x9F4314", VA = "0x9F4314")]
	public static AKRESULT SetListenerSpatialization(GameObject in_uListenerID, bool in_bSpatialized, AkChannelConfig in_channelConfig, float[] in_pVolumeOffsets)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600096B")]
	[Address(RVA = "0x9F449C", Offset = "0x9F449C", VA = "0x9F449C")]
	public static AKRESULT SetListenerSpatialization(GameObject in_uListenerID, bool in_bSpatialized, AkChannelConfig in_channelConfig)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600096C")]
	[Address(RVA = "0x9F45FC", Offset = "0x9F45FC", VA = "0x9F45FC")]
	public static AKRESULT SetRTPCValue(uint in_rtpcID, float in_value, GameObject in_gameObjectID, int in_uValueChangeDuration, AkCurveInterpolation in_eFadeCurve, bool in_bBypassInternalValueInterpolation)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600096D")]
	[Address(RVA = "0x9F4798", Offset = "0x9F4798", VA = "0x9F4798")]
	public static AKRESULT SetRTPCValue(uint in_rtpcID, float in_value, GameObject in_gameObjectID, int in_uValueChangeDuration, AkCurveInterpolation in_eFadeCurve)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600096E")]
	[Address(RVA = "0x9F4924", Offset = "0x9F4924", VA = "0x9F4924")]
	public static AKRESULT SetRTPCValue(uint in_rtpcID, float in_value, GameObject in_gameObjectID, int in_uValueChangeDuration)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600096F")]
	[Address(RVA = "0x9F4A90", Offset = "0x9F4A90", VA = "0x9F4A90")]
	public static AKRESULT SetRTPCValue(uint in_rtpcID, float in_value, GameObject in_gameObjectID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000970")]
	[Address(RVA = "0x9F4BEC", Offset = "0x9F4BEC", VA = "0x9F4BEC")]
	public static AKRESULT SetRTPCValue(uint in_rtpcID, float in_value)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000971")]
	[Address(RVA = "0x9F4CF0", Offset = "0x9F4CF0", VA = "0x9F4CF0")]
	public static AKRESULT SetRTPCValue(string in_pszRtpcName, float in_value, GameObject in_gameObjectID, int in_uValueChangeDuration, AkCurveInterpolation in_eFadeCurve, bool in_bBypassInternalValueInterpolation)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000972")]
	[Address(RVA = "0x9F4EA4", Offset = "0x9F4EA4", VA = "0x9F4EA4")]
	public static AKRESULT SetRTPCValue(string in_pszRtpcName, float in_value, GameObject in_gameObjectID, int in_uValueChangeDuration, AkCurveInterpolation in_eFadeCurve)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000973")]
	[Address(RVA = "0x9F5048", Offset = "0x9F5048", VA = "0x9F5048")]
	public static AKRESULT SetRTPCValue(string in_pszRtpcName, float in_value, GameObject in_gameObjectID, int in_uValueChangeDuration)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000974")]
	[Address(RVA = "0x9F51CC", Offset = "0x9F51CC", VA = "0x9F51CC")]
	public static AKRESULT SetRTPCValue(string in_pszRtpcName, float in_value, GameObject in_gameObjectID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000975")]
	[Address(RVA = "0x9F5340", Offset = "0x9F5340", VA = "0x9F5340")]
	public static AKRESULT SetRTPCValue(string in_pszRtpcName, float in_value)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000976")]
	[Address(RVA = "0x9F545C", Offset = "0x9F545C", VA = "0x9F545C")]
	public static AKRESULT SetRTPCValueByPlayingID(uint in_rtpcID, float in_value, uint in_playingID, int in_uValueChangeDuration, AkCurveInterpolation in_eFadeCurve, bool in_bBypassInternalValueInterpolation)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000977")]
	[Address(RVA = "0x9F55C0", Offset = "0x9F55C0", VA = "0x9F55C0")]
	public static AKRESULT SetRTPCValueByPlayingID(uint in_rtpcID, float in_value, uint in_playingID, int in_uValueChangeDuration, AkCurveInterpolation in_eFadeCurve)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000978")]
	[Address(RVA = "0x9F5714", Offset = "0x9F5714", VA = "0x9F5714")]
	public static AKRESULT SetRTPCValueByPlayingID(uint in_rtpcID, float in_value, uint in_playingID, int in_uValueChangeDuration)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000979")]
	[Address(RVA = "0x9F5848", Offset = "0x9F5848", VA = "0x9F5848")]
	public static AKRESULT SetRTPCValueByPlayingID(uint in_rtpcID, float in_value, uint in_playingID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600097A")]
	[Address(RVA = "0x9F596C", Offset = "0x9F596C", VA = "0x9F596C")]
	public static AKRESULT SetRTPCValueByPlayingID(string in_pszRtpcName, float in_value, uint in_playingID, int in_uValueChangeDuration, AkCurveInterpolation in_eFadeCurve, bool in_bBypassInternalValueInterpolation)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600097B")]
	[Address(RVA = "0x9F5AE8", Offset = "0x9F5AE8", VA = "0x9F5AE8")]
	public static AKRESULT SetRTPCValueByPlayingID(string in_pszRtpcName, float in_value, uint in_playingID, int in_uValueChangeDuration, AkCurveInterpolation in_eFadeCurve)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600097C")]
	[Address(RVA = "0x9F5C54", Offset = "0x9F5C54", VA = "0x9F5C54")]
	public static AKRESULT SetRTPCValueByPlayingID(string in_pszRtpcName, float in_value, uint in_playingID, int in_uValueChangeDuration)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600097D")]
	[Address(RVA = "0x9F5DA0", Offset = "0x9F5DA0", VA = "0x9F5DA0")]
	public static AKRESULT SetRTPCValueByPlayingID(string in_pszRtpcName, float in_value, uint in_playingID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600097E")]
	[Address(RVA = "0x9F5EDC", Offset = "0x9F5EDC", VA = "0x9F5EDC")]
	public static AKRESULT ResetRTPCValue(uint in_rtpcID, GameObject in_gameObjectID, int in_uValueChangeDuration, AkCurveInterpolation in_eFadeCurve, bool in_bBypassInternalValueInterpolation)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600097F")]
	[Address(RVA = "0x9F6058", Offset = "0x9F6058", VA = "0x9F6058")]
	public static AKRESULT ResetRTPCValue(uint in_rtpcID, GameObject in_gameObjectID, int in_uValueChangeDuration, AkCurveInterpolation in_eFadeCurve)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000980")]
	[Address(RVA = "0x9F61C4", Offset = "0x9F61C4", VA = "0x9F61C4")]
	public static AKRESULT ResetRTPCValue(uint in_rtpcID, GameObject in_gameObjectID, int in_uValueChangeDuration)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000981")]
	[Address(RVA = "0x9F6310", Offset = "0x9F6310", VA = "0x9F6310")]
	public static AKRESULT ResetRTPCValue(uint in_rtpcID, GameObject in_gameObjectID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000982")]
	[Address(RVA = "0x9F644C", Offset = "0x9F644C", VA = "0x9F644C")]
	public static AKRESULT ResetRTPCValue(uint in_rtpcID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000983")]
	[Address(RVA = "0x9F6530", Offset = "0x9F6530", VA = "0x9F6530")]
	public static AKRESULT ResetRTPCValue(string in_pszRtpcName, GameObject in_gameObjectID, int in_uValueChangeDuration, AkCurveInterpolation in_eFadeCurve, bool in_bBypassInternalValueInterpolation)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000984")]
	[Address(RVA = "0x9F66C4", Offset = "0x9F66C4", VA = "0x9F66C4")]
	public static AKRESULT ResetRTPCValue(string in_pszRtpcName, GameObject in_gameObjectID, int in_uValueChangeDuration, AkCurveInterpolation in_eFadeCurve)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000985")]
	[Address(RVA = "0x9F6848", Offset = "0x9F6848", VA = "0x9F6848")]
	public static AKRESULT ResetRTPCValue(string in_pszRtpcName, GameObject in_gameObjectID, int in_uValueChangeDuration)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000986")]
	[Address(RVA = "0x9F69AC", Offset = "0x9F69AC", VA = "0x9F69AC")]
	public static AKRESULT ResetRTPCValue(string in_pszRtpcName, GameObject in_gameObjectID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000987")]
	[Address(RVA = "0x9F6B00", Offset = "0x9F6B00", VA = "0x9F6B00")]
	public static AKRESULT ResetRTPCValue(string in_pszRtpcName)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000988")]
	[Address(RVA = "0x9F6BFC", Offset = "0x9F6BFC", VA = "0x9F6BFC")]
	public static AKRESULT SetSwitch(uint in_switchGroup, uint in_switchState, GameObject in_gameObjectID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000989")]
	[Address(RVA = "0x9F6D48", Offset = "0x9F6D48", VA = "0x9F6D48")]
	public static AKRESULT SetSwitch(string in_pszSwitchGroup, string in_pszSwitchState, GameObject in_gameObjectID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600098A")]
	[Address(RVA = "0x9F6EC0", Offset = "0x9F6EC0", VA = "0x9F6EC0")]
	public static AKRESULT PostTrigger(uint in_triggerID, GameObject in_gameObjectID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600098B")]
	[Address(RVA = "0x9F6FFC", Offset = "0x9F6FFC", VA = "0x9F6FFC")]
	public static AKRESULT PostTrigger(string in_pszTrigger, GameObject in_gameObjectID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600098C")]
	[Address(RVA = "0x9F7150", Offset = "0x9F7150", VA = "0x9F7150")]
	public static AKRESULT SetState(uint in_stateGroup, uint in_state)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600098D")]
	[Address(RVA = "0x9F7254", Offset = "0x9F7254", VA = "0x9F7254")]
	public static AKRESULT SetState(string in_pszStateGroup, string in_pszState)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600098E")]
	[Address(RVA = "0x9F7388", Offset = "0x9F7388", VA = "0x9F7388")]
	public static AKRESULT SetGameObjectAuxSendValues(GameObject in_gameObjectID, AkAuxSendArray in_aAuxSendValues, uint in_uNumSendValues)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600098F")]
	[Address(RVA = "0x9F74E0", Offset = "0x9F74E0", VA = "0x9F74E0")]
	public static AKRESULT SetGameObjectOutputBusVolume(GameObject in_emitterObjID, GameObject in_listenerObjID, float in_fControlValue)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000990")]
	[Address(RVA = "0x9F7654", Offset = "0x9F7654", VA = "0x9F7654")]
	public static AKRESULT SetActorMixerEffect(uint in_audioNodeID, uint in_uFXIndex, uint in_shareSetID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000991")]
	[Address(RVA = "0x9F7768", Offset = "0x9F7768", VA = "0x9F7768")]
	public static AKRESULT SetBusEffect(uint in_audioNodeID, uint in_uFXIndex, uint in_shareSetID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000992")]
	[Address(RVA = "0x9F787C", Offset = "0x9F787C", VA = "0x9F787C")]
	public static AKRESULT SetBusEffect(string in_pszBusName, uint in_uFXIndex, uint in_shareSetID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000993")]
	[Address(RVA = "0x9F79A8", Offset = "0x9F79A8", VA = "0x9F79A8")]
	public static AKRESULT SetMixer(uint in_audioNodeID, uint in_shareSetID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000994")]
	[Address(RVA = "0x9F7AAC", Offset = "0x9F7AAC", VA = "0x9F7AAC")]
	public static AKRESULT SetMixer(string in_pszBusName, uint in_shareSetID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000995")]
	[Address(RVA = "0x9F7BC8", Offset = "0x9F7BC8", VA = "0x9F7BC8")]
	public static AKRESULT SetBusConfig(uint in_audioNodeID, AkChannelConfig in_channelConfig)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000996")]
	[Address(RVA = "0x9F7CE0", Offset = "0x9F7CE0", VA = "0x9F7CE0")]
	public static AKRESULT SetBusConfig(string in_pszBusName, AkChannelConfig in_channelConfig)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000997")]
	[Address(RVA = "0x9F7E10", Offset = "0x9F7E10", VA = "0x9F7E10")]
	public static AKRESULT SetObjectObstructionAndOcclusion(GameObject in_EmitterID, GameObject in_ListenerID, float in_fObstructionLevel, float in_fOcclusionLevel)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000998")]
	[Address(RVA = "0x9F7F94", Offset = "0x9F7F94", VA = "0x9F7F94")]
	public static AKRESULT SetMultipleObstructionAndOcclusion(GameObject in_EmitterID, GameObject in_uListenerID, AkObstructionOcclusionValuesArray in_fObstructionOcclusionValues, uint in_uNumOcclusionObstruction)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000999")]
	[Address(RVA = "0x9F8124", Offset = "0x9F8124", VA = "0x9F8124")]
	public static AKRESULT StartOutputCapture(string in_CaptureFileName)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600099A")]
	[Address(RVA = "0x9F8220", Offset = "0x9F8220", VA = "0x9F8220")]
	public static AKRESULT StopOutputCapture()
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600099B")]
	[Address(RVA = "0x9F82F0", Offset = "0x9F82F0", VA = "0x9F82F0")]
	public static AKRESULT AddOutputCaptureMarker(string in_MarkerText)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600099C")]
	[Address(RVA = "0x9F83EC", Offset = "0x9F83EC", VA = "0x9F83EC")]
	public static AKRESULT StartProfilerCapture(string in_CaptureFileName)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600099D")]
	[Address(RVA = "0x9F84E8", Offset = "0x9F84E8", VA = "0x9F84E8")]
	public static AKRESULT StopProfilerCapture()
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600099E")]
	[Address(RVA = "0x9F85B8", Offset = "0x9F85B8", VA = "0x9F85B8")]
	public static AKRESULT RemoveOutput(ulong in_idOutput)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600099F")]
	[Address(RVA = "0x9F869C", Offset = "0x9F869C", VA = "0x9F869C")]
	public static AKRESULT ReplaceOutput(AkOutputSettings in_Settings, ulong in_outputDeviceId, out ulong out_pOutputDeviceId)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60009A0")]
	[Address(RVA = "0x9F87C4", Offset = "0x9F87C4", VA = "0x9F87C4")]
	public static AKRESULT ReplaceOutput(AkOutputSettings in_Settings, ulong in_outputDeviceId)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60009A1")]
	[Address(RVA = "0x9F88DC", Offset = "0x9F88DC", VA = "0x9F88DC")]
	public static ulong GetOutputID(uint in_idShareset, uint in_idDevice)
	{
		return default(ulong);
	}

	[Token(Token = "0x60009A2")]
	[Address(RVA = "0x9F89E0", Offset = "0x9F89E0", VA = "0x9F89E0")]
	public static ulong GetOutputID(string in_szShareSet, uint in_idDevice)
	{
		return default(ulong);
	}

	[Token(Token = "0x60009A3")]
	[Address(RVA = "0x9F8AFC", Offset = "0x9F8AFC", VA = "0x9F8AFC")]
	public static AKRESULT SetBusDevice(uint in_idBus, uint in_idNewDevice)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60009A4")]
	[Address(RVA = "0x9F8C00", Offset = "0x9F8C00", VA = "0x9F8C00")]
	public static AKRESULT SetBusDevice(string in_BusName, string in_DeviceName)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60009A5")]
	[Address(RVA = "0x9F8D34", Offset = "0x9F8D34", VA = "0x9F8D34")]
	public static AKRESULT SetOutputVolume(ulong in_idOutput, float in_fVolume)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60009A6")]
	[Address(RVA = "0x9F8E38", Offset = "0x9F8E38", VA = "0x9F8E38")]
	public static AKRESULT GetDeviceSpatialAudioSupport(uint in_idDevice)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60009A7")]
	[Address(RVA = "0x9F8F1C", Offset = "0x9F8F1C", VA = "0x9F8F1C")]
	public static AKRESULT Suspend(bool in_bRenderAnyway)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60009A8")]
	[Address(RVA = "0x9F9000", Offset = "0x9F9000", VA = "0x9F9000")]
	public static AKRESULT Suspend()
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60009A9")]
	[Address(RVA = "0x9F90D0", Offset = "0x9F90D0", VA = "0x9F90D0")]
	public static AKRESULT WakeupFromSuspend()
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60009AA")]
	[Address(RVA = "0x9F91A0", Offset = "0x9F91A0", VA = "0x9F91A0")]
	public static uint GetBufferTick()
	{
		return default(uint);
	}

	[Token(Token = "0x60009AD")]
	[Address(RVA = "0x9F9410", Offset = "0x9F9410", VA = "0x9F9410")]
	public static AKRESULT GetPlayingSegmentInfo(uint in_PlayingID, AkSegmentInfo out_segmentInfo, bool in_bExtrapolate)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60009AE")]
	[Address(RVA = "0x9F9550", Offset = "0x9F9550", VA = "0x9F9550")]
	public static AKRESULT GetPlayingSegmentInfo(uint in_PlayingID, AkSegmentInfo out_segmentInfo)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60009AF")]
	[Address(RVA = "0x9F9680", Offset = "0x9F9680", VA = "0x9F9680")]
	public static AKRESULT PostCode(AkMonitorErrorCode in_eError, AkMonitorErrorLevel in_eErrorLevel, uint in_playingID, GameObject in_gameObjID, uint in_audioNodeID, bool in_bIsBus)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60009B0")]
	[Address(RVA = "0x9F981C", Offset = "0x9F981C", VA = "0x9F981C")]
	public static AKRESULT PostCode(AkMonitorErrorCode in_eError, AkMonitorErrorLevel in_eErrorLevel, uint in_playingID, GameObject in_gameObjID, uint in_audioNodeID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60009B1")]
	[Address(RVA = "0x9F9998", Offset = "0x9F9998", VA = "0x9F9998")]
	public static AKRESULT PostCode(AkMonitorErrorCode in_eError, AkMonitorErrorLevel in_eErrorLevel, uint in_playingID, GameObject in_gameObjID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60009B2")]
	[Address(RVA = "0x9F9B04", Offset = "0x9F9B04", VA = "0x9F9B04")]
	public static AKRESULT PostCode(AkMonitorErrorCode in_eError, AkMonitorErrorLevel in_eErrorLevel, uint in_playingID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60009B3")]
	[Address(RVA = "0x9F9C18", Offset = "0x9F9C18", VA = "0x9F9C18")]
	public static AKRESULT PostCode(AkMonitorErrorCode in_eError, AkMonitorErrorLevel in_eErrorLevel)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60009B4")]
	[Address(RVA = "0x9F9D1C", Offset = "0x9F9D1C", VA = "0x9F9D1C")]
	public static AKRESULT PostString(string in_pszError, AkMonitorErrorLevel in_eErrorLevel, uint in_playingID, GameObject in_gameObjID, uint in_audioNodeID, bool in_bIsBus)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60009B5")]
	[Address(RVA = "0x9F9ED0", Offset = "0x9F9ED0", VA = "0x9F9ED0")]
	public static AKRESULT PostString(string in_pszError, AkMonitorErrorLevel in_eErrorLevel, uint in_playingID, GameObject in_gameObjID, uint in_audioNodeID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60009B6")]
	[Address(RVA = "0x9FA064", Offset = "0x9FA064", VA = "0x9FA064")]
	public static AKRESULT PostString(string in_pszError, AkMonitorErrorLevel in_eErrorLevel, uint in_playingID, GameObject in_gameObjID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60009B7")]
	[Address(RVA = "0x9FA1E8", Offset = "0x9FA1E8", VA = "0x9FA1E8")]
	public static AKRESULT PostString(string in_pszError, AkMonitorErrorLevel in_eErrorLevel, uint in_playingID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60009B8")]
	[Address(RVA = "0x9FA314", Offset = "0x9FA314", VA = "0x9FA314")]
	public static AKRESULT PostString(string in_pszError, AkMonitorErrorLevel in_eErrorLevel)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60009B9")]
	[Address(RVA = "0x9FA430", Offset = "0x9FA430", VA = "0x9FA430")]
	public static int GetTimeStamp()
	{
		return default(int);
	}

	[Token(Token = "0x60009BA")]
	[Address(RVA = "0x9FA500", Offset = "0x9FA500", VA = "0x9FA500")]
	public static uint GetNumNonZeroBits(uint in_uWord)
	{
		return default(uint);
	}

	[Token(Token = "0x60009BB")]
	[Address(RVA = "0x9FA5E4", Offset = "0x9FA5E4", VA = "0x9FA5E4")]
	public static void AkGetDefaultHighPriorityThreadProperties(AkThreadProperties out_threadProperties)
	{
	}

	[Token(Token = "0x60009BC")]
	[Address(RVA = "0x9FA6DC", Offset = "0x9FA6DC", VA = "0x9FA6DC")]
	public static uint ResolveDialogueEvent(uint in_eventID, uint[] in_aArgumentValues, uint in_uNumArguments, uint in_idSequence)
	{
		return default(uint);
	}

	[Token(Token = "0x60009BD")]
	[Address(RVA = "0x9FA818", Offset = "0x9FA818", VA = "0x9FA818")]
	public static uint ResolveDialogueEvent(uint in_eventID, uint[] in_aArgumentValues, uint in_uNumArguments)
	{
		return default(uint);
	}

	[Token(Token = "0x60009BE")]
	[Address(RVA = "0x9FA934", Offset = "0x9FA934", VA = "0x9FA934")]
	public static AKRESULT GetDialogueEventCustomPropertyValue(uint in_eventID, uint in_uPropID, out int out_iValue)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60009BF")]
	[Address(RVA = "0x9FAA48", Offset = "0x9FAA48", VA = "0x9FAA48")]
	public static AKRESULT GetDialogueEventCustomPropertyValue(uint in_eventID, uint in_uPropID, out float out_fValue)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60009C0")]
	[Address(RVA = "0x9FAB5C", Offset = "0x9FAB5C", VA = "0x9FAB5C")]
	public static AKRESULT GetPosition(GameObject in_GameObjectID, AkTransform out_rPosition)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60009C1")]
	[Address(RVA = "0x9FACA0", Offset = "0x9FACA0", VA = "0x9FACA0")]
	public static AKRESULT GetListenerPosition(GameObject in_uIndex, AkTransform out_rPosition)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60009C2")]
	[Address(RVA = "0x9FADF0", Offset = "0x9FADF0", VA = "0x9FADF0")]
	public static AKRESULT GetRTPCValue(uint in_rtpcID, GameObject in_gameObjectID, uint in_playingID, out float out_rValue, ref int io_rValueType)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60009C3")]
	[Address(RVA = "0x9FAF6C", Offset = "0x9FAF6C", VA = "0x9FAF6C")]
	public static AKRESULT GetRTPCValue(string in_pszRtpcName, GameObject in_gameObjectID, uint in_playingID, out float out_rValue, ref int io_rValueType)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60009C4")]
	[Address(RVA = "0x9FB100", Offset = "0x9FB100", VA = "0x9FB100")]
	public static AKRESULT GetSwitch(uint in_switchGroup, GameObject in_gameObjectID, out uint out_rSwitchState)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60009C5")]
	[Address(RVA = "0x9FB24C", Offset = "0x9FB24C", VA = "0x9FB24C")]
	public static AKRESULT GetSwitch(string in_pstrSwitchGroupName, GameObject in_GameObj, out uint out_rSwitchState)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60009C6")]
	[Address(RVA = "0x9FB3A4", Offset = "0x9FB3A4", VA = "0x9FB3A4")]
	public static AKRESULT GetState(uint in_stateGroup, out uint out_rState)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60009C7")]
	[Address(RVA = "0x9FB4A8", Offset = "0x9FB4A8", VA = "0x9FB4A8")]
	public static AKRESULT GetState(string in_pstrStateGroupName, out uint out_rState)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60009C8")]
	[Address(RVA = "0x9FB5C4", Offset = "0x9FB5C4", VA = "0x9FB5C4")]
	public static AKRESULT GetGameObjectAuxSendValues(GameObject in_gameObjectID, AkAuxSendArray out_paAuxSendValues, ref uint io_ruNumSendValues)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60009C9")]
	[Address(RVA = "0x9FB71C", Offset = "0x9FB71C", VA = "0x9FB71C")]
	public static AKRESULT GetGameObjectDryLevelValue(GameObject in_EmitterID, GameObject in_ListenerID, out float out_rfControlValue)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60009CA")]
	[Address(RVA = "0x9FB880", Offset = "0x9FB880", VA = "0x9FB880")]
	public static AKRESULT GetObjectObstructionAndOcclusion(GameObject in_EmitterID, GameObject in_ListenerID, out float out_rfObstructionLevel, out float out_rfOcclusionLevel)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60009CB")]
	[Address(RVA = "0x9FBA04", Offset = "0x9FBA04", VA = "0x9FBA04")]
	public static AKRESULT QueryAudioObjectIDs(uint in_eventID, ref uint io_ruNumItems, AkObjectInfoArray out_aObjectInfos)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60009CC")]
	[Address(RVA = "0x9FBB24", Offset = "0x9FBB24", VA = "0x9FBB24")]
	public static AKRESULT QueryAudioObjectIDs(string in_pszEventName, ref uint io_ruNumItems, AkObjectInfoArray out_aObjectInfos)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60009CD")]
	[Address(RVA = "0x9FBC5C", Offset = "0x9FBC5C", VA = "0x9FBC5C")]
	public static AKRESULT GetPositioningInfo(uint in_ObjectID, AkPositioningInfo out_rPositioningInfo)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60009CE")]
	[Address(RVA = "0x9FBD74", Offset = "0x9FBD74", VA = "0x9FBD74")]
	public static bool GetIsGameObjectActive(GameObject in_GameObjId)
	{
		return default(bool);
	}

	[Token(Token = "0x60009CF")]
	[Address(RVA = "0x9FBE98", Offset = "0x9FBE98", VA = "0x9FBE98")]
	public static float GetMaxRadius(GameObject in_GameObjId)
	{
		return default(float);
	}

	[Token(Token = "0x60009D0")]
	[Address(RVA = "0x9FBFB4", Offset = "0x9FBFB4", VA = "0x9FBFB4")]
	public static uint GetEventIDFromPlayingID(uint in_playingID)
	{
		return default(uint);
	}

	[Token(Token = "0x60009D1")]
	[Address(RVA = "0x9FC098", Offset = "0x9FC098", VA = "0x9FC098")]
	public static ulong GetGameObjectFromPlayingID(uint in_playingID)
	{
		return default(ulong);
	}

	[Token(Token = "0x60009D2")]
	[Address(RVA = "0x9FC17C", Offset = "0x9FC17C", VA = "0x9FC17C")]
	public static AKRESULT GetPlayingIDsFromGameObject(GameObject in_GameObjId, ref uint io_ruNumIDs, uint[] out_aPlayingIDs)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60009D3")]
	[Address(RVA = "0x9FC358", Offset = "0x9FC358", VA = "0x9FC358")]
	public static AKRESULT GetCustomPropertyValue(uint in_ObjectID, uint in_uPropID, out int out_iValue)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60009D4")]
	[Address(RVA = "0x9FC46C", Offset = "0x9FC46C", VA = "0x9FC46C")]
	public static AKRESULT GetCustomPropertyValue(uint in_ObjectID, uint in_uPropID, out float out_fValue)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60009D5")]
	[Address(RVA = "0x9FC580", Offset = "0x9FC580", VA = "0x9FC580")]
	public static void AK_SPEAKER_SETUP_FIX_LEFT_TO_CENTER(ref uint io_uChannelMask)
	{
	}

	[Token(Token = "0x60009D6")]
	[Address(RVA = "0x9FC664", Offset = "0x9FC664", VA = "0x9FC664")]
	public static void AK_SPEAKER_SETUP_FIX_REAR_TO_SIDE(ref uint io_uChannelMask)
	{
	}

	[Token(Token = "0x60009D7")]
	[Address(RVA = "0x9FC748", Offset = "0x9FC748", VA = "0x9FC748")]
	public static void AK_SPEAKER_SETUP_CONVERT_TO_SUPPORTED(ref uint io_uChannelMask)
	{
	}

	[Token(Token = "0x60009D8")]
	[Address(RVA = "0x9FC82C", Offset = "0x9FC82C", VA = "0x9FC82C")]
	public static byte ChannelMaskToNumChannels(uint in_uChannelMask)
	{
		return default(byte);
	}

	[Token(Token = "0x60009D9")]
	[Address(RVA = "0x9FC910", Offset = "0x9FC910", VA = "0x9FC910")]
	public static uint ChannelMaskFromNumChannels(uint in_uNumChannels)
	{
		return default(uint);
	}

	[Token(Token = "0x60009DA")]
	[Address(RVA = "0x9FC9F4", Offset = "0x9FC9F4", VA = "0x9FC9F4")]
	public static byte ChannelBitToIndex(uint in_uChannelBit, uint in_uChannelMask)
	{
		return default(byte);
	}

	[Token(Token = "0x60009DB")]
	[Address(RVA = "0x9FCAF8", Offset = "0x9FCAF8", VA = "0x9FCAF8")]
	public static bool HasSurroundChannels(uint in_uChannelMask)
	{
		return default(bool);
	}

	[Token(Token = "0x60009DC")]
	[Address(RVA = "0x9FCBE4", Offset = "0x9FCBE4", VA = "0x9FCBE4")]
	public static bool HasStrictlyOnePairOfSurroundChannels(uint in_uChannelMask)
	{
		return default(bool);
	}

	[Token(Token = "0x60009DD")]
	[Address(RVA = "0x9FCCD0", Offset = "0x9FCCD0", VA = "0x9FCCD0")]
	public static bool HasSideAndRearChannels(uint in_uChannelMask)
	{
		return default(bool);
	}

	[Token(Token = "0x60009DE")]
	[Address(RVA = "0x9FCDBC", Offset = "0x9FCDBC", VA = "0x9FCDBC")]
	public static bool HasHeightChannels(uint in_uChannelMask)
	{
		return default(bool);
	}

	[Token(Token = "0x60009DF")]
	[Address(RVA = "0x9FCEA8", Offset = "0x9FCEA8", VA = "0x9FCEA8")]
	public static uint BackToSideChannels(uint in_uChannelMask)
	{
		return default(uint);
	}

	[Token(Token = "0x60009E0")]
	[Address(RVA = "0x9FCF8C", Offset = "0x9FCF8C", VA = "0x9FCF8C")]
	public static uint StdChannelIndexToDisplayIndex(AkChannelOrdering in_eOrdering, uint in_uChannelMask, uint in_uChannelIdx)
	{
		return default(uint);
	}

	[Token(Token = "0x60009EA")]
	[Address(RVA = "0x9FD7FC", Offset = "0x9FD7FC", VA = "0x9FD7FC")]
	public static int GetPoolID()
	{
		return default(int);
	}

	[Token(Token = "0x60009EB")]
	[Address(RVA = "0x9FD8CC", Offset = "0x9FD8CC", VA = "0x9FD8CC")]
	public static AKRESULT RegisterEmitter(GameObject in_gameObjectID, AkEmitterSettings in_settings)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60009EC")]
	[Address(RVA = "0x9FDA1C", Offset = "0x9FDA1C", VA = "0x9FDA1C")]
	public static AKRESULT UnregisterEmitter(GameObject in_gameObjectID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60009ED")]
	[Address(RVA = "0x9FDB38", Offset = "0x9FDB38", VA = "0x9FDB38")]
	public static AKRESULT SetEmitterAuxSendValues(GameObject in_gameObjectID, AkAuxSendArray in_pAuxSends, uint in_uNumAux)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60009EE")]
	[Address(RVA = "0x9FDC90", Offset = "0x9FDC90", VA = "0x9FDC90")]
	public static AKRESULT SetImageSource(uint in_srcID, AkImageSourceSettings in_info, uint in_AuxBusID, ulong in_roomID, GameObject in_gameObjectID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60009EF")]
	[Address(RVA = "0x9FDE20", Offset = "0x9FDE20", VA = "0x9FDE20")]
	public static AKRESULT SetImageSource(uint in_srcID, AkImageSourceSettings in_info, uint in_AuxBusID, ulong in_roomID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60009F0")]
	[Address(RVA = "0x9FDF68", Offset = "0x9FDF68", VA = "0x9FDF68")]
	public static AKRESULT RemoveImageSource(uint in_srcID, uint in_AuxBusID, GameObject in_gameObjectID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60009F1")]
	[Address(RVA = "0x9FE0B4", Offset = "0x9FE0B4", VA = "0x9FE0B4")]
	public static AKRESULT RemoveImageSource(uint in_srcID, uint in_AuxBusID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60009F2")]
	[Address(RVA = "0x9FE1B8", Offset = "0x9FE1B8", VA = "0x9FE1B8")]
	public static AKRESULT RemoveGeometry(ulong in_SetID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60009F3")]
	[Address(RVA = "0x9FE29C", Offset = "0x9FE29C", VA = "0x9FE29C")]
	public static AKRESULT QueryReflectionPaths(GameObject in_gameObjectID, AkVector out_listenerPos, AkVector out_emitterPos, AkReflectionPathInfoArray out_aPaths, out uint io_uArraySize)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60009F4")]
	[Address(RVA = "0x9FE444", Offset = "0x9FE444", VA = "0x9FE444")]
	public static AKRESULT RemoveRoom(ulong in_RoomID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60009F5")]
	[Address(RVA = "0x9FE528", Offset = "0x9FE528", VA = "0x9FE528")]
	public static AKRESULT RemovePortal(ulong in_PortalID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60009F6")]
	[Address(RVA = "0x9FE60C", Offset = "0x9FE60C", VA = "0x9FE60C")]
	public static AKRESULT SetGameObjectInRoom(GameObject in_gameObjectID, ulong in_CurrentRoomID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60009F7")]
	[Address(RVA = "0x9FE748", Offset = "0x9FE748", VA = "0x9FE748")]
	public static AKRESULT SetEmitterObstructionAndOcclusion(GameObject in_gameObjectID, float in_fObstruction, float in_fOcclusion)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60009F8")]
	[Address(RVA = "0x9E63D0", Offset = "0x9E63D0", VA = "0x9E63D0")]
	public static AKRESULT SetPortalObstructionAndOcclusion(ulong in_PortalID, float in_fObstruction, float in_fOcclusion)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60009F9")]
	[Address(RVA = "0x9FE92C", Offset = "0x9FE92C", VA = "0x9FE92C")]
	public static AKRESULT QueryWetDiffraction(ulong in_portal, out float out_wetDiffraction)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60009FA")]
	[Address(RVA = "0x9FEA30", Offset = "0x9FEA30", VA = "0x9FEA30")]
	public static AKRESULT GetFastPathSettings(AkInitSettings in_settings, AkPlatformInitSettings in_pfSettings)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60009FB")]
	[Address(RVA = "0x9FEB58", Offset = "0x9FEB58", VA = "0x9FEB58")]
	public static void SetErrorLogger(AkLogger.ErrorLoggerInteropDelegate logger)
	{
	}

	[Token(Token = "0x60009FC")]
	[Address(RVA = "0x9FEC40", Offset = "0x9FEC40", VA = "0x9FEC40")]
	public static void SetErrorLogger()
	{
	}

	[Token(Token = "0x60009FD")]
	[Address(RVA = "0x9FED0C", Offset = "0x9FED0C", VA = "0x9FED0C")]
	public static void SetAudioInputCallbacks(AkAudioInputManager.AudioSamplesInteropDelegate getAudioSamples, AkAudioInputManager.AudioFormatInteropDelegate getAudioFormat)
	{
	}

	[Token(Token = "0x60009FE")]
	[Address(RVA = "0x9FEE24", Offset = "0x9FEE24", VA = "0x9FEE24")]
	public static AKRESULT Init(AkInitializationSettings settings)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60009FF")]
	[Address(RVA = "0x9FEF1C", Offset = "0x9FEF1C", VA = "0x9FEF1C")]
	public static AKRESULT InitSpatialAudio(AkSpatialAudioInitSettings settings)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000A00")]
	[Address(RVA = "0x9FF014", Offset = "0x9FF014", VA = "0x9FF014")]
	public static AKRESULT InitCommunication(AkCommunicationSettings settings)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000A01")]
	[Address(RVA = "0x9FF10C", Offset = "0x9FF10C", VA = "0x9FF10C")]
	public static void Term()
	{
	}

	[Token(Token = "0x6000A02")]
	[Address(RVA = "0x9FF1D8", Offset = "0x9FF1D8", VA = "0x9FF1D8")]
	public static AKRESULT RegisterGameObjInternal(GameObject in_GameObj)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000A03")]
	[Address(RVA = "0x9FF2EC", Offset = "0x9FF2EC", VA = "0x9FF2EC")]
	public static AKRESULT UnregisterGameObjInternal(GameObject in_GameObj)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000A04")]
	[Address(RVA = "0x9FF400", Offset = "0x9FF400", VA = "0x9FF400")]
	public static AKRESULT RegisterGameObjInternal_WithName(GameObject in_GameObj, string in_pszObjName)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000A05")]
	[Address(RVA = "0x9FF550", Offset = "0x9FF550", VA = "0x9FF550")]
	public static AKRESULT SetBasePath(string in_pszBasePath)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000A06")]
	[Address(RVA = "0x9FF64C", Offset = "0x9FF64C", VA = "0x9FF64C")]
	public static AKRESULT SetCurrentLanguage(string in_pszAudioSrcPath)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000A07")]
	[Address(RVA = "0x9FF748", Offset = "0x9FF748", VA = "0x9FF748")]
	public static AKRESULT LoadFilePackage(string in_pszFilePackageName, out uint out_uPackageID, int in_memPoolID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000A08")]
	[Address(RVA = "0x9FF874", Offset = "0x9FF874", VA = "0x9FF874")]
	public static AKRESULT AddBasePath(string in_pszBasePath)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000A09")]
	[Address(RVA = "0x9FF970", Offset = "0x9FF970", VA = "0x9FF970")]
	public static AKRESULT SetGameName(string in_GameName)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000A0A")]
	[Address(RVA = "0x9FFA6C", Offset = "0x9FFA6C", VA = "0x9FFA6C")]
	public static AKRESULT SetDecodedBankPath(string in_DecodedPath)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000A0B")]
	[Address(RVA = "0x9FFB68", Offset = "0x9FFB68", VA = "0x9FFB68")]
	public static AKRESULT LoadAndDecodeBank(string in_pszString, bool in_bSaveDecodedBank, out uint out_bankID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000A0C")]
	[Address(RVA = "0x9FFC94", Offset = "0x9FFC94", VA = "0x9FFC94")]
	public static AKRESULT LoadAndDecodeBankFromMemory(IntPtr in_BankData, uint in_BankDataSize, bool in_bSaveDecodedBank, string in_DecodedBankName, bool in_bIsLanguageSpecific, out uint out_bankID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000A0D")]
	[Address(RVA = "0x9FFE14", Offset = "0x9FFE14", VA = "0x9FFE14")]
	public static string GetCurrentLanguage()
	{
		return null;
	}

	[Token(Token = "0x6000A0E")]
	[Address(RVA = "0x9FFF78", Offset = "0x9FFF78", VA = "0x9FFF78")]
	public static AKRESULT UnloadFilePackage(uint in_uPackageID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000A0F")]
	[Address(RVA = "0xA0005C", Offset = "0xA0005C", VA = "0xA0005C")]
	public static AKRESULT UnloadAllFilePackages()
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000A10")]
	[Address(RVA = "0xA0012C", Offset = "0xA0012C", VA = "0xA0012C")]
	public static AKRESULT SetObjectPosition(GameObject in_GameObjectID, float PosX, float PosY, float PosZ, float FrontX, float FrontY, float FrontZ, float TopX, float TopY, float TopZ)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000A11")]
	[Address(RVA = "0xA00318", Offset = "0xA00318", VA = "0xA00318")]
	public static AKRESULT GetSourceMultiplePlayPositions(uint in_PlayingID, uint[] out_audioNodeID, uint[] out_mediaID, int[] out_msTime, ref uint io_pcPositions, bool in_bExtrapolate)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000A12")]
	[Address(RVA = "0xA005CC", Offset = "0xA005CC", VA = "0xA005CC")]
	public static AKRESULT SetListeners(GameObject in_emitterGameObj, ulong[] in_pListenerGameObjs, uint in_uNumListeners)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000A13")]
	[Address(RVA = "0xA00720", Offset = "0xA00720", VA = "0xA00720")]
	public static AKRESULT SetDefaultListeners(ulong[] in_pListenerObjs, uint in_uNumListeners)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000A14")]
	[Address(RVA = "0xA0082C", Offset = "0xA0082C", VA = "0xA0082C")]
	public static AKRESULT AddOutput(AkOutputSettings in_Settings, out ulong out_pDeviceID, ulong[] in_pListenerIDs, uint in_uNumListeners)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000A15")]
	[Address(RVA = "0xA0097C", Offset = "0xA0097C", VA = "0xA0097C")]
	public static void GetDefaultStreamSettings(AkStreamMgrSettings out_settings)
	{
	}

	[Token(Token = "0x6000A16")]
	[Address(RVA = "0xA00A74", Offset = "0xA00A74", VA = "0xA00A74")]
	public static void GetDefaultDeviceSettings(AkDeviceSettings out_settings)
	{
	}

	[Token(Token = "0x6000A17")]
	[Address(RVA = "0xA00B6C", Offset = "0xA00B6C", VA = "0xA00B6C")]
	public static void GetDefaultMusicSettings(AkMusicSettings out_settings)
	{
	}

	[Token(Token = "0x6000A18")]
	[Address(RVA = "0xA00C64", Offset = "0xA00C64", VA = "0xA00C64")]
	public static void GetDefaultInitSettings(AkInitSettings out_settings)
	{
	}

	[Token(Token = "0x6000A19")]
	[Address(RVA = "0xA00D5C", Offset = "0xA00D5C", VA = "0xA00D5C")]
	public static void GetDefaultPlatformInitSettings(AkPlatformInitSettings out_settings)
	{
	}

	[Token(Token = "0x6000A1A")]
	[Address(RVA = "0xA00E54", Offset = "0xA00E54", VA = "0xA00E54")]
	public static uint GetMajorMinorVersion()
	{
		return default(uint);
	}

	[Token(Token = "0x6000A1B")]
	[Address(RVA = "0xA00F24", Offset = "0xA00F24", VA = "0xA00F24")]
	public static uint GetSubminorBuildVersion()
	{
		return default(uint);
	}

	[Token(Token = "0x6000A1C")]
	[Address(RVA = "0xA00FF4", Offset = "0xA00FF4", VA = "0xA00FF4")]
	public static AKRESULT QueryIndirectPaths(GameObject in_gameObjectID, AkPathParams arg1, AkReflectionPathInfoArray paths, uint numPaths)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000A1D")]
	[Address(RVA = "0xA0117C", Offset = "0xA0117C", VA = "0xA0117C")]
	public static AKRESULT QueryDiffractionPaths(GameObject in_gameObjectID, AkPathParams arg1, AkDiffractionPathInfoArray paths, uint numPaths)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000A1E")]
	[Address(RVA = "0xA01300", Offset = "0xA01300", VA = "0xA01300")]
	public static AKRESULT SetRoomPortal(ulong in_PortalID, AkTransform Transform, AkVector Extent, bool bEnabled, ulong FrontRoom, ulong BackRoom)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000A1F")]
	[Address(RVA = "0xA01488", Offset = "0xA01488", VA = "0xA01488")]
	public static AKRESULT SetRoom(ulong in_RoomID, AkRoomParams in_roomParams, string in_pName)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000A20")]
	[Address(RVA = "0xA015CC", Offset = "0xA015CC", VA = "0xA015CC")]
	public static AKRESULT RegisterSpatialAudioListener(GameObject in_gameObjectID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000A21")]
	[Address(RVA = "0xA016E8", Offset = "0xA016E8", VA = "0xA016E8")]
	public static AKRESULT UnregisterSpatialAudioListener(GameObject in_gameObjectID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000A22")]
	[Address(RVA = "0xA01804", Offset = "0xA01804", VA = "0xA01804")]
	public static AKRESULT SetGeometry(ulong in_GeomSetID, AkTriangleArray Triangles, uint NumTriangles, AkVertexArray Vertices, uint NumVertices, AkAcousticSurfaceArray Surfaces, uint NumSurfaces, ulong RoomID, bool EnableDiffraction, bool EnableDiffractionOnBoundaryEdges)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000A23")]
	[Address(RVA = "0xA01A28", Offset = "0xA01A28", VA = "0xA01A28")]
	public static string StringFromIntPtrString(IntPtr ptr)
	{
		return null;
	}

	[Token(Token = "0x6000A24")]
	[Address(RVA = "0xA01A90", Offset = "0xA01A90", VA = "0xA01A90")]
	public static string StringFromIntPtrWString(IntPtr ptr)
	{
		return null;
	}

	[Token(Token = "0x6000A25")]
	[Address(RVA = "0x9FFF14", Offset = "0x9FFF14", VA = "0x9FFF14")]
	public static string StringFromIntPtrOSString(IntPtr ptr)
	{
		return null;
	}

	[Token(Token = "0x6000A26")]
	[Address(RVA = "0xA01AF8", Offset = "0xA01AF8", VA = "0xA01AF8")]
	private static ulong InternalGameObjectHash(GameObject gameObject)
	{
		return default(ulong);
	}

	[Token(Token = "0x6000A28")]
	[Address(RVA = "0x9E8940", Offset = "0x9E8940", VA = "0x9E8940")]
	public static ulong GetAkGameObjectID(GameObject gameObject)
	{
		return default(ulong);
	}

	[Token(Token = "0x6000A29")]
	[Address(RVA = "0xA01FD4", Offset = "0xA01FD4", VA = "0xA01FD4")]
	public static AKRESULT RegisterGameObj(GameObject gameObject)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000A2A")]
	[Address(RVA = "0xA02124", Offset = "0xA02124", VA = "0xA02124")]
	public static AKRESULT RegisterGameObj(GameObject gameObject, string name)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000A2B")]
	[Address(RVA = "0xA021DC", Offset = "0xA021DC", VA = "0xA021DC")]
	public static AKRESULT UnregisterGameObj(GameObject gameObject)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000A2C")]
	[Address(RVA = "0xA0232C", Offset = "0xA0232C", VA = "0xA0232C")]
	public static AKRESULT SetObjectPosition(GameObject gameObject, Transform transform)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000A2D")]
	[Address(RVA = "0xA024B0", Offset = "0xA024B0", VA = "0xA024B0")]
	public static AKRESULT SetObjectPosition(GameObject gameObject, Vector3 position, Vector3 forward, Vector3 up)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000A2E")]
	[Address(RVA = "0xA025B0", Offset = "0xA025B0", VA = "0xA025B0")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x7087A0", Offset = "0x7087A0")]
	public static uint PostEvent(uint eventId, GameObject gameObject, uint flags, AkCallbackManager.EventCallback callback, object cookie, uint numSources, AkExternalSourceInfo externalSources, uint playingId)
	{
		return default(uint);
	}

	[Token(Token = "0x6000A2F")]
	[Address(RVA = "0xA026F4", Offset = "0xA026F4", VA = "0xA026F4")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x7087D8", Offset = "0x7087D8")]
	public static uint PostEvent(uint eventId, GameObject gameObject, uint flags, AkCallbackManager.EventCallback callback, object cookie, uint numSources, AkExternalSourceInfo externalSources)
	{
		return default(uint);
	}

	[Token(Token = "0x6000A30")]
	[Address(RVA = "0xA02874", Offset = "0xA02874", VA = "0xA02874")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x708810", Offset = "0x708810")]
	public static uint PostEvent(string eventName, GameObject gameObject, uint flags, AkCallbackManager.EventCallback callback, object cookie, uint numSources, AkExternalSourceInfo externalSources, uint playingId)
	{
		return default(uint);
	}

	[Token(Token = "0x6000A31")]
	[Address(RVA = "0xA029B8", Offset = "0xA029B8", VA = "0xA029B8")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x708848", Offset = "0x708848")]
	public static uint PostEvent(string eventName, GameObject gameObject, uint flags, AkCallbackManager.EventCallback callback, object cookie, uint numSources, AkExternalSourceInfo externalSources)
	{
		return default(uint);
	}

	[Token(Token = "0x6000A32")]
	[Address(RVA = "0x9E89B8", Offset = "0x9E89B8", VA = "0x9E89B8")]
	public static void PreGameObjectAPICall(GameObject gameObject, ulong id)
	{
	}

	[Token(Token = "0x6000A33")]
	[Address(RVA = "0xA02B38", Offset = "0xA02B38", VA = "0xA02B38")]
	private static void PreGameObjectAPICallUserHook(GameObject gameObject, ulong id)
	{
	}

	[Token(Token = "0x6000A34")]
	[Address(RVA = "0xA0207C", Offset = "0xA0207C", VA = "0xA0207C")]
	private static void PostRegisterGameObjUserHook(AKRESULT result, GameObject gameObject, ulong id)
	{
	}

	[Token(Token = "0x6000A35")]
	[Address(RVA = "0xA02284", Offset = "0xA02284", VA = "0xA02284")]
	private static void PostUnregisterGameObjUserHook(AKRESULT result, GameObject gameObject, ulong id)
	{
	}

	[Token(Token = "0x6000A36")]
	[Address(RVA = "0xA02C80", Offset = "0xA02C80", VA = "0xA02C80")]
	private static void AutoRegister(GameObject gameObject, ulong id)
	{
	}

	[Token(Token = "0x6000A37")]
	[Address(RVA = "0xA02BFC", Offset = "0xA02BFC", VA = "0xA02BFC")]
	private static bool IsInRegisteredList(ulong id)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A38")]
	[Address(RVA = "0xA02E8C", Offset = "0xA02E8C", VA = "0xA02E8C")]
	public static bool IsGameObjectRegistered(GameObject in_gameObject)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A39")]
	[Address(RVA = "0xA02EF4", Offset = "0xA02EF4", VA = "0xA02EF4")]
	public AkSoundEngine()
	{
	}
}
[Token(Token = "0x20000C0")]
public class AkThreadProperties : IDisposable
{
	[Token(Token = "0x4000526")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4000527")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x17000069")]
	public int nPriority
	{
		[Token(Token = "0x6000A41")]
		[Address(RVA = "0x930AD8", Offset = "0x930AD8", VA = "0x930AD8")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000A40")]
		[Address(RVA = "0x930A5C", Offset = "0x930A5C", VA = "0x930A5C")]
		set
		{
		}
	}

	[Token(Token = "0x1700006A")]
	public uint uStackSize
	{
		[Token(Token = "0x6000A43")]
		[Address(RVA = "0x930BC0", Offset = "0x930BC0", VA = "0x930BC0")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6000A42")]
		[Address(RVA = "0x930B44", Offset = "0x930B44", VA = "0x930B44")]
		set
		{
		}
	}

	[Token(Token = "0x1700006B")]
	public int uSchedPolicy
	{
		[Token(Token = "0x6000A45")]
		[Address(RVA = "0x930CA8", Offset = "0x930CA8", VA = "0x930CA8")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000A44")]
		[Address(RVA = "0x930C2C", Offset = "0x930C2C", VA = "0x930C2C")]
		set
		{
		}
	}

	[Token(Token = "0x1700006C")]
	public uint dwAffinityMask
	{
		[Token(Token = "0x6000A47")]
		[Address(RVA = "0x930D90", Offset = "0x930D90", VA = "0x930D90")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6000A46")]
		[Address(RVA = "0x930D14", Offset = "0x930D14", VA = "0x930D14")]
		set
		{
		}
	}

	[Token(Token = "0x6000A3B")]
	[Address(RVA = "0x9307FC", Offset = "0x9307FC", VA = "0x9307FC")]
	internal AkThreadProperties(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6000A3C")]
	[Address(RVA = "0x93083C", Offset = "0x93083C", VA = "0x93083C")]
	internal static IntPtr getCPtr(AkThreadProperties obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6000A3D")]
	[Address(RVA = "0x93088C", Offset = "0x93088C", VA = "0x93088C", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6000A3E")]
	[Address(RVA = "0x9308C0", Offset = "0x9308C0", VA = "0x9308C0", Slot = "1")]
	~AkThreadProperties()
	{
	}

	[Token(Token = "0x6000A3F")]
	[Address(RVA = "0x930930", Offset = "0x930930", VA = "0x930930", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6000A48")]
	[Address(RVA = "0x930DFC", Offset = "0x930DFC", VA = "0x930DFC")]
	public AkThreadProperties()
	{
	}
}
[Token(Token = "0x20000C1")]
public class AkUnityPlatformSpecificSettings : IDisposable
{
	[Token(Token = "0x4000528")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4000529")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x6000A49")]
	[Address(RVA = "0x933964", Offset = "0x933964", VA = "0x933964")]
	internal AkUnityPlatformSpecificSettings(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6000A4A")]
	[Address(RVA = "0x9339A4", Offset = "0x9339A4", VA = "0x9339A4")]
	internal static IntPtr getCPtr(AkUnityPlatformSpecificSettings obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6000A4B")]
	[Address(RVA = "0x9339F4", Offset = "0x9339F4", VA = "0x9339F4", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6000A4C")]
	[Address(RVA = "0x933A28", Offset = "0x933A28", VA = "0x933A28", Slot = "1")]
	~AkUnityPlatformSpecificSettings()
	{
	}

	[Token(Token = "0x6000A4D")]
	[Address(RVA = "0x933A98", Offset = "0x933A98", VA = "0x933A98", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6000A4E")]
	[Address(RVA = "0x933BC4", Offset = "0x933BC4", VA = "0x933BC4")]
	public AkUnityPlatformSpecificSettings()
	{
	}
}
[Token(Token = "0x20000C2")]
public enum AKRESULT
{
	[Token(Token = "0x400052B")]
	AK_NotImplemented = 0,
	[Token(Token = "0x400052C")]
	AK_Success = 1,
	[Token(Token = "0x400052D")]
	AK_Fail = 2,
	[Token(Token = "0x400052E")]
	AK_PartialSuccess = 3,
	[Token(Token = "0x400052F")]
	AK_NotCompatible = 4,
	[Token(Token = "0x4000530")]
	AK_AlreadyConnected = 5,
	[Token(Token = "0x4000531")]
	AK_InvalidFile = 7,
	[Token(Token = "0x4000532")]
	AK_AudioFileHeaderTooLarge = 8,
	[Token(Token = "0x4000533")]
	AK_MaxReached = 9,
	[Token(Token = "0x4000534")]
	AK_InvalidID = 14,
	[Token(Token = "0x4000535")]
	AK_IDNotFound = 15,
	[Token(Token = "0x4000536")]
	AK_InvalidInstanceID = 16,
	[Token(Token = "0x4000537")]
	AK_NoMoreData = 17,
	[Token(Token = "0x4000538")]
	AK_InvalidStateGroup = 20,
	[Token(Token = "0x4000539")]
	AK_ChildAlreadyHasAParent = 21,
	[Token(Token = "0x400053A")]
	AK_InvalidLanguage = 22,
	[Token(Token = "0x400053B")]
	AK_CannotAddItseflAsAChild = 23,
	[Token(Token = "0x400053C")]
	AK_InvalidParameter = 31,
	[Token(Token = "0x400053D")]
	AK_ElementAlreadyInList = 35,
	[Token(Token = "0x400053E")]
	AK_PathNotFound = 36,
	[Token(Token = "0x400053F")]
	AK_PathNoVertices = 37,
	[Token(Token = "0x4000540")]
	AK_PathNotRunning = 38,
	[Token(Token = "0x4000541")]
	AK_PathNotPaused = 39,
	[Token(Token = "0x4000542")]
	AK_PathNodeAlreadyInList = 40,
	[Token(Token = "0x4000543")]
	AK_PathNodeNotInList = 41,
	[Token(Token = "0x4000544")]
	AK_DataNeeded = 43,
	[Token(Token = "0x4000545")]
	AK_NoDataNeeded = 44,
	[Token(Token = "0x4000546")]
	AK_DataReady = 45,
	[Token(Token = "0x4000547")]
	AK_NoDataReady = 46,
	[Token(Token = "0x4000548")]
	AK_InsufficientMemory = 52,
	[Token(Token = "0x4000549")]
	AK_Cancelled = 53,
	[Token(Token = "0x400054A")]
	AK_UnknownBankID = 54,
	[Token(Token = "0x400054B")]
	AK_BankReadError = 56,
	[Token(Token = "0x400054C")]
	AK_InvalidSwitchType = 57,
	[Token(Token = "0x400054D")]
	AK_FormatNotReady = 63,
	[Token(Token = "0x400054E")]
	AK_WrongBankVersion = 64,
	[Token(Token = "0x400054F")]
	AK_FileNotFound = 66,
	[Token(Token = "0x4000550")]
	AK_DeviceNotReady = 67,
	[Token(Token = "0x4000551")]
	AK_BankAlreadyLoaded = 69,
	[Token(Token = "0x4000552")]
	AK_RenderedFX = 71,
	[Token(Token = "0x4000553")]
	AK_ProcessNeeded = 72,
	[Token(Token = "0x4000554")]
	AK_ProcessDone = 73,
	[Token(Token = "0x4000555")]
	AK_MemManagerNotInitialized = 74,
	[Token(Token = "0x4000556")]
	AK_StreamMgrNotInitialized = 75,
	[Token(Token = "0x4000557")]
	AK_SSEInstructionsNotSupported = 76,
	[Token(Token = "0x4000558")]
	AK_Busy = 77,
	[Token(Token = "0x4000559")]
	AK_UnsupportedChannelConfig = 78,
	[Token(Token = "0x400055A")]
	AK_PluginMediaNotAvailable = 79,
	[Token(Token = "0x400055B")]
	AK_MustBeVirtualized = 80,
	[Token(Token = "0x400055C")]
	AK_CommandTooLarge = 81,
	[Token(Token = "0x400055D")]
	AK_RejectedByFilter = 82,
	[Token(Token = "0x400055E")]
	AK_InvalidCustomPlatformName = 83,
	[Token(Token = "0x400055F")]
	AK_DLLCannotLoad = 84,
	[Token(Token = "0x4000560")]
	AK_DLLPathNotFound = 85,
	[Token(Token = "0x4000561")]
	AK_NoJavaVM = 86,
	[Token(Token = "0x4000562")]
	AK_OpenSLError = 87,
	[Token(Token = "0x4000563")]
	AK_PluginNotRegistered = 88,
	[Token(Token = "0x4000564")]
	AK_DataAlignmentError = 89,
	[Token(Token = "0x4000565")]
	AK_DeviceNotCompatible = 90,
	[Token(Token = "0x4000566")]
	AK_DuplicateUniqueID = 91,
	[Token(Token = "0x4000567")]
	AK_InitBankNotLoaded = 92,
	[Token(Token = "0x4000568")]
	AK_DeviceNotFound = 93,
	[Token(Token = "0x4000569")]
	AK_InvalidFloatValue = 94
}
[Token(Token = "0x20000C3")]
public enum Ak3DPositionType
{
	[Token(Token = "0x400056B")]
	AK_3DPositionType_Emitter,
	[Token(Token = "0x400056C")]
	AK_3DPositionType_EmitterWithAutomation,
	[Token(Token = "0x400056D")]
	AK_3DPositionType_ListenerWithAutomation
}
[Token(Token = "0x20000C4")]
public enum Ak3DSpatializationMode
{
	[Token(Token = "0x400056F")]
	AK_SpatializationMode_None,
	[Token(Token = "0x4000570")]
	AK_SpatializationMode_PositionOnly,
	[Token(Token = "0x4000571")]
	AK_SpatializationMode_PositionAndOrientation
}
[Token(Token = "0x20000C5")]
public class AkAcousticSurface : IDisposable
{
	[Token(Token = "0x4000572")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4000573")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x1700006D")]
	public uint textureID
	{
		[Token(Token = "0x6000A56")]
		[Address(RVA = "0xD81994", Offset = "0xD81994", VA = "0xD81994")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6000A55")]
		[Address(RVA = "0xD81918", Offset = "0xD81918", VA = "0xD81918")]
		set
		{
		}
	}

	[Token(Token = "0x1700006E")]
	public uint reflectorChannelMask
	{
		[Token(Token = "0x6000A58")]
		[Address(RVA = "0xD81A7C", Offset = "0xD81A7C", VA = "0xD81A7C")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6000A57")]
		[Address(RVA = "0xD81A00", Offset = "0xD81A00", VA = "0xD81A00")]
		set
		{
		}
	}

	[Token(Token = "0x1700006F")]
	public string strName
	{
		[Token(Token = "0x6000A5A")]
		[Address(RVA = "0xD81B64", Offset = "0xD81B64", VA = "0xD81B64")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000A59")]
		[Address(RVA = "0xD81AE8", Offset = "0xD81AE8", VA = "0xD81AE8")]
		set
		{
		}
	}

	[Token(Token = "0x6000A4F")]
	[Address(RVA = "0xD81634", Offset = "0xD81634", VA = "0xD81634")]
	internal AkAcousticSurface(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6000A50")]
	[Address(RVA = "0xD81674", Offset = "0xD81674", VA = "0xD81674")]
	internal static IntPtr getCPtr(AkAcousticSurface obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6000A51")]
	[Address(RVA = "0xD816C4", Offset = "0xD816C4", VA = "0xD816C4", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6000A52")]
	[Address(RVA = "0xD816F8", Offset = "0xD816F8", VA = "0xD816F8", Slot = "1")]
	~AkAcousticSurface()
	{
	}

	[Token(Token = "0x6000A53")]
	[Address(RVA = "0xD81768", Offset = "0xD81768", VA = "0xD81768", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6000A54")]
	[Address(RVA = "0xD81894", Offset = "0xD81894", VA = "0xD81894")]
	public AkAcousticSurface()
	{
	}

	[Token(Token = "0x6000A5B")]
	[Address(RVA = "0xD81C04", Offset = "0xD81C04", VA = "0xD81C04")]
	public void Clear()
	{
	}

	[Token(Token = "0x6000A5C")]
	[Address(RVA = "0xD81C70", Offset = "0xD81C70", VA = "0xD81C70")]
	public void DeleteName()
	{
	}

	[Token(Token = "0x6000A5D")]
	[Address(RVA = "0xD81CDC", Offset = "0xD81CDC", VA = "0xD81CDC")]
	public static int GetSizeOf()
	{
		return default(int);
	}

	[Token(Token = "0x6000A5E")]
	[Address(RVA = "0xD81D3C", Offset = "0xD81D3C", VA = "0xD81D3C")]
	public void Clone(AkAcousticSurface other)
	{
	}
}
[Token(Token = "0x20000C6")]
public enum AkActionOnEventType
{
	[Token(Token = "0x4000575")]
	AkActionOnEventType_Stop,
	[Token(Token = "0x4000576")]
	AkActionOnEventType_Pause,
	[Token(Token = "0x4000577")]
	AkActionOnEventType_Resume,
	[Token(Token = "0x4000578")]
	AkActionOnEventType_Break,
	[Token(Token = "0x4000579")]
	AkActionOnEventType_ReleaseEnvelope
}
[Token(Token = "0x20000C7")]
public enum AkAudioDeviceState
{
	[Token(Token = "0x400057B")]
	AkDeviceState_Active = 1,
	[Token(Token = "0x400057C")]
	AkDeviceState_Disabled = 2,
	[Token(Token = "0x400057D")]
	AkDeviceState_NotPresent = 4,
	[Token(Token = "0x400057E")]
	AkDeviceState_Unplugged = 8,
	[Token(Token = "0x400057F")]
	AkDeviceState_All = 15
}
[Token(Token = "0x20000C8")]
public class AkAudioFormat : IDisposable
{
	[Token(Token = "0x4000580")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4000581")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x17000070")]
	public uint uSampleRate
	{
		[Token(Token = "0x6000A65")]
		[Address(RVA = "0xD83770", Offset = "0xD83770", VA = "0xD83770")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6000A64")]
		[Address(RVA = "0xD836F4", Offset = "0xD836F4", VA = "0xD836F4")]
		set
		{
		}
	}

	[Token(Token = "0x17000071")]
	public AkChannelConfig channelConfig
	{
		[Token(Token = "0x6000A67")]
		[Address(RVA = "0xD838D4", Offset = "0xD838D4", VA = "0xD838D4")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000A66")]
		[Address(RVA = "0xD837DC", Offset = "0xD837DC", VA = "0xD837DC")]
		set
		{
		}
	}

	[Token(Token = "0x17000072")]
	public uint uBitsPerSample
	{
		[Token(Token = "0x6000A69")]
		[Address(RVA = "0xD83A40", Offset = "0xD83A40", VA = "0xD83A40")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6000A68")]
		[Address(RVA = "0xD839C4", Offset = "0xD839C4", VA = "0xD839C4")]
		set
		{
		}
	}

	[Token(Token = "0x17000073")]
	public uint uBlockAlign
	{
		[Token(Token = "0x6000A6B")]
		[Address(RVA = "0xD83B28", Offset = "0xD83B28", VA = "0xD83B28")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6000A6A")]
		[Address(RVA = "0xD83AAC", Offset = "0xD83AAC", VA = "0xD83AAC")]
		set
		{
		}
	}

	[Token(Token = "0x17000074")]
	public uint uTypeID
	{
		[Token(Token = "0x6000A6D")]
		[Address(RVA = "0xD83C10", Offset = "0xD83C10", VA = "0xD83C10")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6000A6C")]
		[Address(RVA = "0xD83B94", Offset = "0xD83B94", VA = "0xD83B94")]
		set
		{
		}
	}

	[Token(Token = "0x17000075")]
	public uint uInterleaveID
	{
		[Token(Token = "0x6000A6F")]
		[Address(RVA = "0xD83CF8", Offset = "0xD83CF8", VA = "0xD83CF8")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6000A6E")]
		[Address(RVA = "0xD83C7C", Offset = "0xD83C7C", VA = "0xD83C7C")]
		set
		{
		}
	}

	[Token(Token = "0x6000A5F")]
	[Address(RVA = "0xD83494", Offset = "0xD83494", VA = "0xD83494")]
	internal AkAudioFormat(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6000A60")]
	[Address(RVA = "0xD834D4", Offset = "0xD834D4", VA = "0xD834D4")]
	internal static IntPtr getCPtr(AkAudioFormat obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6000A61")]
	[Address(RVA = "0xD83524", Offset = "0xD83524", VA = "0xD83524", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6000A62")]
	[Address(RVA = "0xD83558", Offset = "0xD83558", VA = "0xD83558", Slot = "1")]
	~AkAudioFormat()
	{
	}

	[Token(Token = "0x6000A63")]
	[Address(RVA = "0xD835C8", Offset = "0xD835C8", VA = "0xD835C8", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6000A70")]
	[Address(RVA = "0xD83D64", Offset = "0xD83D64", VA = "0xD83D64")]
	public uint GetNumChannels()
	{
		return default(uint);
	}

	[Token(Token = "0x6000A71")]
	[Address(RVA = "0xD83DD0", Offset = "0xD83DD0", VA = "0xD83DD0")]
	public uint GetBitsPerSample()
	{
		return default(uint);
	}

	[Token(Token = "0x6000A72")]
	[Address(RVA = "0xD83E3C", Offset = "0xD83E3C", VA = "0xD83E3C")]
	public uint GetBlockAlign()
	{
		return default(uint);
	}

	[Token(Token = "0x6000A73")]
	[Address(RVA = "0xD83EA8", Offset = "0xD83EA8", VA = "0xD83EA8")]
	public uint GetTypeID()
	{
		return default(uint);
	}

	[Token(Token = "0x6000A74")]
	[Address(RVA = "0xD83F14", Offset = "0xD83F14", VA = "0xD83F14")]
	public uint GetInterleaveID()
	{
		return default(uint);
	}

	[Token(Token = "0x6000A75")]
	[Address(RVA = "0xD83F80", Offset = "0xD83F80", VA = "0xD83F80")]
	public void SetAll(uint in_uSampleRate, AkChannelConfig in_channelConfig, uint in_uBitsPerSample, uint in_uBlockAlign, uint in_uTypeID, uint in_uInterleaveID)
	{
	}

	[Token(Token = "0x6000A76")]
	[Address(RVA = "0xD84060", Offset = "0xD84060", VA = "0xD84060")]
	public bool IsChannelConfigSupported()
	{
		return default(bool);
	}

	[Token(Token = "0x6000A77")]
	[Address(RVA = "0xD840CC", Offset = "0xD840CC", VA = "0xD840CC")]
	public AkAudioFormat()
	{
	}
}
[Token(Token = "0x20000C9")]
public class AkAudioInterruptionCallbackInfo : IDisposable
{
	[Token(Token = "0x4000582")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4000583")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x17000076")]
	public bool bEnterInterruption
	{
		[Token(Token = "0x6000A7D")]
		[Address(RVA = "0xD85AE4", Offset = "0xD85AE4", VA = "0xD85AE4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000A78")]
	[Address(RVA = "0xD85884", Offset = "0xD85884", VA = "0xD85884")]
	internal AkAudioInterruptionCallbackInfo(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6000A79")]
	[Address(RVA = "0xD858C4", Offset = "0xD858C4", VA = "0xD858C4")]
	internal static IntPtr getCPtr(AkAudioInterruptionCallbackInfo obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6000A7A")]
	[Address(RVA = "0xD85914", Offset = "0xD85914", VA = "0xD85914", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6000A7B")]
	[Address(RVA = "0xD85948", Offset = "0xD85948", VA = "0xD85948", Slot = "1")]
	~AkAudioInterruptionCallbackInfo()
	{
	}

	[Token(Token = "0x6000A7C")]
	[Address(RVA = "0xD859B8", Offset = "0xD859B8", VA = "0xD859B8", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6000A7E")]
	[Address(RVA = "0xD85B50", Offset = "0xD85B50", VA = "0xD85B50")]
	public AkAudioInterruptionCallbackInfo()
	{
	}
}
[Token(Token = "0x20000CA")]
public class AkAudioSettings : IDisposable
{
	[Token(Token = "0x4000584")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4000585")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x17000077")]
	public uint uNumSamplesPerFrame
	{
		[Token(Token = "0x6000A85")]
		[Address(RVA = "0xD86C94", Offset = "0xD86C94", VA = "0xD86C94")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6000A84")]
		[Address(RVA = "0xD86C18", Offset = "0xD86C18", VA = "0xD86C18")]
		set
		{
		}
	}

	[Token(Token = "0x17000078")]
	public uint uNumSamplesPerSecond
	{
		[Token(Token = "0x6000A87")]
		[Address(RVA = "0xD86D7C", Offset = "0xD86D7C", VA = "0xD86D7C")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6000A86")]
		[Address(RVA = "0xD86D00", Offset = "0xD86D00", VA = "0xD86D00")]
		set
		{
		}
	}

	[Token(Token = "0x6000A7F")]
	[Address(RVA = "0xD869B8", Offset = "0xD869B8", VA = "0xD869B8")]
	internal AkAudioSettings(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6000A80")]
	[Address(RVA = "0xD869F8", Offset = "0xD869F8", VA = "0xD869F8")]
	internal static IntPtr getCPtr(AkAudioSettings obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6000A81")]
	[Address(RVA = "0xD86A48", Offset = "0xD86A48", VA = "0xD86A48", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6000A82")]
	[Address(RVA = "0xD86A7C", Offset = "0xD86A7C", VA = "0xD86A7C", Slot = "1")]
	~AkAudioSettings()
	{
	}

	[Token(Token = "0x6000A83")]
	[Address(RVA = "0xD86AEC", Offset = "0xD86AEC", VA = "0xD86AEC", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6000A88")]
	[Address(RVA = "0xD86DE8", Offset = "0xD86DE8", VA = "0xD86DE8")]
	public AkAudioSettings()
	{
	}
}
[Token(Token = "0x20000CB")]
public class AkAudioSourceChangeCallbackInfo : IDisposable
{
	[Token(Token = "0x4000586")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4000587")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x17000079")]
	public bool bOtherAudioPlaying
	{
		[Token(Token = "0x6000A8E")]
		[Address(RVA = "0xD870CC", Offset = "0xD870CC", VA = "0xD870CC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000A89")]
	[Address(RVA = "0xD86E6C", Offset = "0xD86E6C", VA = "0xD86E6C")]
	internal AkAudioSourceChangeCallbackInfo(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6000A8A")]
	[Address(RVA = "0xD86EAC", Offset = "0xD86EAC", VA = "0xD86EAC")]
	internal static IntPtr getCPtr(AkAudioSourceChangeCallbackInfo obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6000A8B")]
	[Address(RVA = "0xD86EFC", Offset = "0xD86EFC", VA = "0xD86EFC", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6000A8C")]
	[Address(RVA = "0xD86F30", Offset = "0xD86F30", VA = "0xD86F30", Slot = "1")]
	~AkAudioSourceChangeCallbackInfo()
	{
	}

	[Token(Token = "0x6000A8D")]
	[Address(RVA = "0xD86FA0", Offset = "0xD86FA0", VA = "0xD86FA0", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6000A8F")]
	[Address(RVA = "0xD87138", Offset = "0xD87138", VA = "0xD87138")]
	public AkAudioSourceChangeCallbackInfo()
	{
	}
}
[Token(Token = "0x20000CC")]
public class AkAuxSendValue : IDisposable
{
	[Token(Token = "0x4000588")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4000589")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x1700007A")]
	public ulong listenerID
	{
		[Token(Token = "0x6000A96")]
		[Address(RVA = "0xD87D8C", Offset = "0xD87D8C", VA = "0xD87D8C")]
		get
		{
			return default(ulong);
		}
		[Token(Token = "0x6000A95")]
		[Address(RVA = "0xD87D10", Offset = "0xD87D10", VA = "0xD87D10")]
		set
		{
		}
	}

	[Token(Token = "0x1700007B")]
	public uint auxBusID
	{
		[Token(Token = "0x6000A98")]
		[Address(RVA = "0xD87E74", Offset = "0xD87E74", VA = "0xD87E74")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6000A97")]
		[Address(RVA = "0xD87DF8", Offset = "0xD87DF8", VA = "0xD87DF8")]
		set
		{
		}
	}

	[Token(Token = "0x1700007C")]
	public float fControlValue
	{
		[Token(Token = "0x6000A9A")]
		[Address(RVA = "0xD87F5C", Offset = "0xD87F5C", VA = "0xD87F5C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000A99")]
		[Address(RVA = "0xD87EE0", Offset = "0xD87EE0", VA = "0xD87EE0")]
		set
		{
		}
	}

	[Token(Token = "0x6000A90")]
	[Address(RVA = "0xD8738C", Offset = "0xD8738C", VA = "0xD8738C")]
	internal AkAuxSendValue(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6000A91")]
	[Address(RVA = "0xD87AF0", Offset = "0xD87AF0", VA = "0xD87AF0")]
	internal static IntPtr getCPtr(AkAuxSendValue obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6000A92")]
	[Address(RVA = "0xD87B40", Offset = "0xD87B40", VA = "0xD87B40", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6000A93")]
	[Address(RVA = "0xD87B74", Offset = "0xD87B74", VA = "0xD87B74", Slot = "1")]
	~AkAuxSendValue()
	{
	}

	[Token(Token = "0x6000A94")]
	[Address(RVA = "0xD87BE4", Offset = "0xD87BE4", VA = "0xD87BE4", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6000A9B")]
	[Address(RVA = "0xD87FC8", Offset = "0xD87FC8", VA = "0xD87FC8")]
	public void Set(GameObject listener, uint id, float value)
	{
	}

	[Token(Token = "0x6000A9C")]
	[Address(RVA = "0xD8809C", Offset = "0xD8809C", VA = "0xD8809C")]
	public bool IsSame(GameObject listener, uint id)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A9D")]
	[Address(RVA = "0xD88160", Offset = "0xD88160", VA = "0xD88160")]
	public static int GetSizeOf()
	{
		return default(int);
	}
}
[Token(Token = "0x20000CD")]
public class AkBankCallbackInfo : IDisposable
{
	[Token(Token = "0x400058A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x400058B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x1700007D")]
	public uint bankID
	{
		[Token(Token = "0x6000AA3")]
		[Address(RVA = "0xD888B8", Offset = "0xD888B8", VA = "0xD888B8")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x1700007E")]
	public IntPtr inMemoryBankPtr
	{
		[Token(Token = "0x6000AA4")]
		[Address(RVA = "0xD88924", Offset = "0xD88924", VA = "0xD88924")]
		get
		{
			return default(IntPtr);
		}
	}

	[Token(Token = "0x1700007F")]
	public AKRESULT loadResult
	{
		[Token(Token = "0x6000AA5")]
		[Address(RVA = "0xD88990", Offset = "0xD88990", VA = "0xD88990")]
		get
		{
			return default(AKRESULT);
		}
	}

	[Token(Token = "0x17000080")]
	public int memPoolId
	{
		[Token(Token = "0x6000AA6")]
		[Address(RVA = "0xD889FC", Offset = "0xD889FC", VA = "0xD889FC")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6000A9E")]
	[Address(RVA = "0xD88658", Offset = "0xD88658", VA = "0xD88658")]
	internal AkBankCallbackInfo(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6000A9F")]
	[Address(RVA = "0xD88698", Offset = "0xD88698", VA = "0xD88698")]
	internal static IntPtr getCPtr(AkBankCallbackInfo obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6000AA0")]
	[Address(RVA = "0xD886E8", Offset = "0xD886E8", VA = "0xD886E8", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6000AA1")]
	[Address(RVA = "0xD8871C", Offset = "0xD8871C", VA = "0xD8871C", Slot = "1")]
	~AkBankCallbackInfo()
	{
	}

	[Token(Token = "0x6000AA2")]
	[Address(RVA = "0xD8878C", Offset = "0xD8878C", VA = "0xD8878C", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6000AA7")]
	[Address(RVA = "0xD88A68", Offset = "0xD88A68", VA = "0xD88A68")]
	public AkBankCallbackInfo()
	{
	}
}
[Token(Token = "0x20000CE")]
public enum AkBankContent
{
	[Token(Token = "0x400058D")]
	AkBankContent_StructureOnly,
	[Token(Token = "0x400058E")]
	AkBankContent_All
}
[Token(Token = "0x20000CF")]
public enum AkBusHierarchyFlags
{
	[Token(Token = "0x4000590")]
	AkBusHierarchy_Primary = 1,
	[Token(Token = "0x4000591")]
	AkBusHierarchy_Secondary = 2,
	[Token(Token = "0x4000592")]
	AkBusHierarchy_IsMaster = 0x80
}
[Token(Token = "0x20000D0")]
public class AkCallbackInfo : IDisposable
{
	[Token(Token = "0x4000593")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4000594")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x17000081")]
	public IntPtr pCookie
	{
		[Token(Token = "0x6000AAD")]
		[Address(RVA = "0xD8A918", Offset = "0xD8A918", VA = "0xD8A918")]
		get
		{
			return default(IntPtr);
		}
	}

	[Token(Token = "0x17000082")]
	public ulong gameObjID
	{
		[Token(Token = "0x6000AAE")]
		[Address(RVA = "0xD8A984", Offset = "0xD8A984", VA = "0xD8A984")]
		get
		{
			return default(ulong);
		}
	}

	[Token(Token = "0x6000AA8")]
	[Address(RVA = "0xD8A6B8", Offset = "0xD8A6B8", VA = "0xD8A6B8")]
	internal AkCallbackInfo(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6000AA9")]
	[Address(RVA = "0xD8A6F8", Offset = "0xD8A6F8", VA = "0xD8A6F8")]
	internal static IntPtr getCPtr(AkCallbackInfo obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6000AAA")]
	[Address(RVA = "0xD8A748", Offset = "0xD8A748", VA = "0xD8A748", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6000AAB")]
	[Address(RVA = "0xD8A77C", Offset = "0xD8A77C", VA = "0xD8A77C", Slot = "1")]
	~AkCallbackInfo()
	{
	}

	[Token(Token = "0x6000AAC")]
	[Address(RVA = "0xD8A7EC", Offset = "0xD8A7EC", VA = "0xD8A7EC", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6000AAF")]
	[Address(RVA = "0xD8A9F0", Offset = "0xD8A9F0", VA = "0xD8A9F0")]
	public AkCallbackInfo()
	{
	}
}
[Token(Token = "0x20000D1")]
public class AkCallbackSerializer : IDisposable
{
	[Token(Token = "0x4000595")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4000596")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x6000AB0")]
	[Address(RVA = "0xD8D7F0", Offset = "0xD8D7F0", VA = "0xD8D7F0")]
	internal AkCallbackSerializer(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6000AB1")]
	[Address(RVA = "0xD8D830", Offset = "0xD8D830", VA = "0xD8D830")]
	internal static IntPtr getCPtr(AkCallbackSerializer obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6000AB2")]
	[Address(RVA = "0xD8D880", Offset = "0xD8D880", VA = "0xD8D880", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6000AB3")]
	[Address(RVA = "0xD8D8B4", Offset = "0xD8D8B4", VA = "0xD8D8B4", Slot = "1")]
	~AkCallbackSerializer()
	{
	}

	[Token(Token = "0x6000AB4")]
	[Address(RVA = "0xD8D924", Offset = "0xD8D924", VA = "0xD8D924", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6000AB5")]
	[Address(RVA = "0xD8B440", Offset = "0xD8B440", VA = "0xD8B440")]
	public static AKRESULT Init(IntPtr in_pMemory, uint in_uSize)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000AB6")]
	[Address(RVA = "0xD8B594", Offset = "0xD8B594", VA = "0xD8B594")]
	public static void Term()
	{
	}

	[Token(Token = "0x6000AB7")]
	[Address(RVA = "0xD8C36C", Offset = "0xD8C36C", VA = "0xD8C36C")]
	public static IntPtr Lock()
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6000AB8")]
	[Address(RVA = "0xD8B678", Offset = "0xD8B678", VA = "0xD8B678")]
	public static void SetLocalOutput(uint in_uErrorLevel)
	{
	}

	[Token(Token = "0x6000AB9")]
	[Address(RVA = "0xD8CD84", Offset = "0xD8CD84", VA = "0xD8CD84")]
	public static void Unlock()
	{
	}

	[Token(Token = "0x6000ABA")]
	[Address(RVA = "0xD8DA50", Offset = "0xD8DA50", VA = "0xD8DA50")]
	public static AKRESULT AudioSourceChangeCallbackFunc(bool in_bOtherAudioPlaying, object in_pCookie)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000ABB")]
	[Address(RVA = "0xD8DAE8", Offset = "0xD8DAE8", VA = "0xD8DAE8")]
	public AkCallbackSerializer()
	{
	}
}
[Token(Token = "0x20000D2")]
public enum AkCallbackType
{
	[Token(Token = "0x4000598")]
	AK_EndOfEvent = 1,
	[Token(Token = "0x4000599")]
	AK_EndOfDynamicSequenceItem = 2,
	[Token(Token = "0x400059A")]
	AK_Marker = 4,
	[Token(Token = "0x400059B")]
	AK_Duration = 8,
	[Token(Token = "0x400059C")]
	AK_SpeakerVolumeMatrix = 16,
	[Token(Token = "0x400059D")]
	AK_Starvation = 32,
	[Token(Token = "0x400059E")]
	AK_MusicPlaylistSelect = 64,
	[Token(Token = "0x400059F")]
	AK_MusicPlayStarted = 128,
	[Token(Token = "0x40005A0")]
	AK_MusicSyncBeat = 256,
	[Token(Token = "0x40005A1")]
	AK_MusicSyncBar = 512,
	[Token(Token = "0x40005A2")]
	AK_MusicSyncEntry = 1024,
	[Token(Token = "0x40005A3")]
	AK_MusicSyncExit = 2048,
	[Token(Token = "0x40005A4")]
	AK_MusicSyncGrid = 4096,
	[Token(Token = "0x40005A5")]
	AK_MusicSyncUserCue = 8192,
	[Token(Token = "0x40005A6")]
	AK_MusicSyncPoint = 16384,
	[Token(Token = "0x40005A7")]
	AK_MusicSyncAll = 32512,
	[Token(Token = "0x40005A8")]
	AK_MIDIEvent = 65536,
	[Token(Token = "0x40005A9")]
	AK_CallbackBits = 1048575,
	[Token(Token = "0x40005AA")]
	AK_EnableGetSourcePlayPosition = 1048576,
	[Token(Token = "0x40005AB")]
	AK_EnableGetMusicPlayPosition = 2097152,
	[Token(Token = "0x40005AC")]
	AK_EnableGetSourceStreamBuffering = 4194304,
	[Token(Token = "0x40005AD")]
	AK_Monitoring = 536870912,
	[Token(Token = "0x40005AE")]
	AK_AudioSourceChange = 587202560,
	[Token(Token = "0x40005AF")]
	AK_Bank = 1073741824,
	[Token(Token = "0x40005B0")]
	AK_AudioInterruption = 570425344
}
[Token(Token = "0x20000D3")]
public class AkChannelConfig : IDisposable
{
	[Token(Token = "0x40005B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x40005B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x17000083")]
	public uint uNumChannels
	{
		[Token(Token = "0x6000AC2")]
		[Address(RVA = "0xD8DDB8", Offset = "0xD8DDB8", VA = "0xD8DDB8")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6000AC1")]
		[Address(RVA = "0xD8DD3C", Offset = "0xD8DD3C", VA = "0xD8DD3C")]
		set
		{
		}
	}

	[Token(Token = "0x17000084")]
	public uint eConfigType
	{
		[Token(Token = "0x6000AC4")]
		[Address(RVA = "0xD8DEA0", Offset = "0xD8DEA0", VA = "0xD8DEA0")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6000AC3")]
		[Address(RVA = "0xD8DE24", Offset = "0xD8DE24", VA = "0xD8DE24")]
		set
		{
		}
	}

	[Token(Token = "0x17000085")]
	public uint uChannelMask
	{
		[Token(Token = "0x6000AC6")]
		[Address(RVA = "0xD8DF88", Offset = "0xD8DF88", VA = "0xD8DF88")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6000AC5")]
		[Address(RVA = "0xD8DF0C", Offset = "0xD8DF0C", VA = "0xD8DF0C")]
		set
		{
		}
	}

	[Token(Token = "0x6000ABC")]
	[Address(RVA = "0xD83984", Offset = "0xD83984", VA = "0xD83984")]
	internal AkChannelConfig(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6000ABD")]
	[Address(RVA = "0xD83884", Offset = "0xD83884", VA = "0xD83884")]
	internal static IntPtr getCPtr(AkChannelConfig obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6000ABE")]
	[Address(RVA = "0xD8DB6C", Offset = "0xD8DB6C", VA = "0xD8DB6C", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6000ABF")]
	[Address(RVA = "0xD8DBA0", Offset = "0xD8DBA0", VA = "0xD8DBA0", Slot = "1")]
	~AkChannelConfig()
	{
	}

	[Token(Token = "0x6000AC0")]
	[Address(RVA = "0xD8DC10", Offset = "0xD8DC10", VA = "0xD8DC10", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6000AC7")]
	[Address(RVA = "0xD8DFF4", Offset = "0xD8DFF4", VA = "0xD8DFF4")]
	public AkChannelConfig()
	{
	}

	[Token(Token = "0x6000AC8")]
	[Address(RVA = "0xD8E078", Offset = "0xD8E078", VA = "0xD8E078")]
	public AkChannelConfig(uint in_uNumChannels, uint in_uChannelMask)
	{
	}

	[Token(Token = "0x6000AC9")]
	[Address(RVA = "0xD8E114", Offset = "0xD8E114", VA = "0xD8E114")]
	public void Clear()
	{
	}

	[Token(Token = "0x6000ACA")]
	[Address(RVA = "0xD8E180", Offset = "0xD8E180", VA = "0xD8E180")]
	public void SetStandard(uint in_uChannelMask)
	{
	}

	[Token(Token = "0x6000ACB")]
	[Address(RVA = "0xD8E1FC", Offset = "0xD8E1FC", VA = "0xD8E1FC")]
	public void SetStandardOrAnonymous(uint in_uNumChannels, uint in_uChannelMask)
	{
	}

	[Token(Token = "0x6000ACC")]
	[Address(RVA = "0xD8E280", Offset = "0xD8E280", VA = "0xD8E280")]
	public void SetAnonymous(uint in_uNumChannels)
	{
	}

	[Token(Token = "0x6000ACD")]
	[Address(RVA = "0xD8E2FC", Offset = "0xD8E2FC", VA = "0xD8E2FC")]
	public void SetAmbisonic(uint in_uNumChannels)
	{
	}

	[Token(Token = "0x6000ACE")]
	[Address(RVA = "0xD8E378", Offset = "0xD8E378", VA = "0xD8E378")]
	public bool IsValid()
	{
		return default(bool);
	}

	[Token(Token = "0x6000ACF")]
	[Address(RVA = "0xD8E3E4", Offset = "0xD8E3E4", VA = "0xD8E3E4")]
	public uint Serialize()
	{
		return default(uint);
	}

	[Token(Token = "0x6000AD0")]
	[Address(RVA = "0xD8E450", Offset = "0xD8E450", VA = "0xD8E450")]
	public void Deserialize(uint in_uChannelConfig)
	{
	}

	[Token(Token = "0x6000AD1")]
	[Address(RVA = "0xD8E4CC", Offset = "0xD8E4CC", VA = "0xD8E4CC")]
	public AkChannelConfig RemoveLFE()
	{
		return null;
	}

	[Token(Token = "0x6000AD2")]
	[Address(RVA = "0xD8E570", Offset = "0xD8E570", VA = "0xD8E570")]
	public AkChannelConfig RemoveCenter()
	{
		return null;
	}

	[Token(Token = "0x6000AD3")]
	[Address(RVA = "0xD8E614", Offset = "0xD8E614", VA = "0xD8E614")]
	public bool IsChannelConfigSupported()
	{
		return default(bool);
	}
}
[Token(Token = "0x20000D4")]
public enum AkChannelConfigType
{
	[Token(Token = "0x40005B4")]
	AK_ChannelConfigType_Anonymous,
	[Token(Token = "0x40005B5")]
	AK_ChannelConfigType_Standard,
	[Token(Token = "0x40005B6")]
	AK_ChannelConfigType_Ambisonic
}
[Token(Token = "0x20000D5")]
public class AkChannelEmitter : IDisposable
{
	[Token(Token = "0x40005B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x40005B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x17000086")]
	public AkTransform position
	{
		[Token(Token = "0x6000ADA")]
		[Address(RVA = "0xD8E970", Offset = "0xD8E970", VA = "0xD8E970")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000AD9")]
		[Address(RVA = "0xD8E8E0", Offset = "0xD8E8E0", VA = "0xD8E8E0")]
		set
		{
		}
	}

	[Token(Token = "0x17000087")]
	public uint uInputChannels
	{
		[Token(Token = "0x6000ADC")]
		[Address(RVA = "0xD8EA9C", Offset = "0xD8EA9C", VA = "0xD8EA9C")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6000ADB")]
		[Address(RVA = "0xD8EA20", Offset = "0xD8EA20", VA = "0xD8EA20")]
		set
		{
		}
	}

	[Token(Token = "0x6000AD4")]
	[Address(RVA = "0xD8E680", Offset = "0xD8E680", VA = "0xD8E680")]
	internal AkChannelEmitter(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6000AD5")]
	[Address(RVA = "0xD8E6C0", Offset = "0xD8E6C0", VA = "0xD8E6C0")]
	internal static IntPtr getCPtr(AkChannelEmitter obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6000AD6")]
	[Address(RVA = "0xD8E710", Offset = "0xD8E710", VA = "0xD8E710", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6000AD7")]
	[Address(RVA = "0xD8E744", Offset = "0xD8E744", VA = "0xD8E744", Slot = "1")]
	~AkChannelEmitter()
	{
	}

	[Token(Token = "0x6000AD8")]
	[Address(RVA = "0xD8E7B4", Offset = "0xD8E7B4", VA = "0xD8E7B4", Slot = "6")]
	public virtual void Dispose()
	{
	}
}
[Token(Token = "0x20000D6")]
public enum AkChannelOrdering
{
	[Token(Token = "0x40005BA")]
	ChannelOrdering_Standard,
	[Token(Token = "0x40005BB")]
	ChannelOrdering_RunTime
}
[Token(Token = "0x20000D7")]
public enum AkConnectionType
{
	[Token(Token = "0x40005BD")]
	ConnectionType_Direct,
	[Token(Token = "0x40005BE")]
	ConnectionType_GameDefSend,
	[Token(Token = "0x40005BF")]
	ConnectionType_UserDefSend
}
[Token(Token = "0x20000D8")]
public enum AkCurveInterpolation
{
	[Token(Token = "0x40005C1")]
	AkCurveInterpolation_Log3 = 0,
	[Token(Token = "0x40005C2")]
	AkCurveInterpolation_Sine = 1,
	[Token(Token = "0x40005C3")]
	AkCurveInterpolation_Log1 = 2,
	[Token(Token = "0x40005C4")]
	AkCurveInterpolation_InvSCurve = 3,
	[Token(Token = "0x40005C5")]
	AkCurveInterpolation_Linear = 4,
	[Token(Token = "0x40005C6")]
	AkCurveInterpolation_SCurve = 5,
	[Token(Token = "0x40005C7")]
	AkCurveInterpolation_Exp1 = 6,
	[Token(Token = "0x40005C8")]
	AkCurveInterpolation_SineRecip = 7,
	[Token(Token = "0x40005C9")]
	AkCurveInterpolation_Exp3 = 8,
	[Token(Token = "0x40005CA")]
	AkCurveInterpolation_LastFadeCurve = 8,
	[Token(Token = "0x40005CB")]
	AkCurveInterpolation_Constant = 9
}
[Token(Token = "0x20000D9")]
public class AkDeviceSettings : IDisposable
{
	[Token(Token = "0x40005CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x40005CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x17000088")]
	public IntPtr pIOMemory
	{
		[Token(Token = "0x6000AE3")]
		[Address(RVA = "0xD908B8", Offset = "0xD908B8", VA = "0xD908B8")]
		get
		{
			return default(IntPtr);
		}
		[Token(Token = "0x6000AE2")]
		[Address(RVA = "0xD9083C", Offset = "0xD9083C", VA = "0xD9083C")]
		set
		{
		}
	}

	[Token(Token = "0x17000089")]
	public uint uIOMemorySize
	{
		[Token(Token = "0x6000AE5")]
		[Address(RVA = "0xD90924", Offset = "0xD90924", VA = "0xD90924")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6000AE4")]
		[Address(RVA = "0xD8F0E8", Offset = "0xD8F0E8", VA = "0xD8F0E8")]
		set
		{
		}
	}

	[Token(Token = "0x1700008A")]
	public uint uIOMemoryAlignment
	{
		[Token(Token = "0x6000AE7")]
		[Address(RVA = "0xD90A0C", Offset = "0xD90A0C", VA = "0xD90A0C")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6000AE6")]
		[Address(RVA = "0xD90990", Offset = "0xD90990", VA = "0xD90990")]
		set
		{
		}
	}

	[Token(Token = "0x1700008B")]
	public int ePoolAttributes
	{
		[Token(Token = "0x6000AE9")]
		[Address(RVA = "0xD90AF4", Offset = "0xD90AF4", VA = "0xD90AF4")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000AE8")]
		[Address(RVA = "0xD90A78", Offset = "0xD90A78", VA = "0xD90A78")]
		set
		{
		}
	}

	[Token(Token = "0x1700008C")]
	public uint uGranularity
	{
		[Token(Token = "0x6000AEB")]
		[Address(RVA = "0xD90BDC", Offset = "0xD90BDC", VA = "0xD90BDC")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6000AEA")]
		[Address(RVA = "0xD90B60", Offset = "0xD90B60", VA = "0xD90B60")]
		set
		{
		}
	}

	[Token(Token = "0x1700008D")]
	public uint uSchedulerTypeFlags
	{
		[Token(Token = "0x6000AED")]
		[Address(RVA = "0xD90CC4", Offset = "0xD90CC4", VA = "0xD90CC4")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6000AEC")]
		[Address(RVA = "0xD90C48", Offset = "0xD90C48", VA = "0xD90C48")]
		set
		{
		}
	}

	[Token(Token = "0x1700008E")]
	public AkThreadProperties threadProperties
	{
		[Token(Token = "0x6000AEF")]
		[Address(RVA = "0xD90DC0", Offset = "0xD90DC0", VA = "0xD90DC0")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000AEE")]
		[Address(RVA = "0xD90D30", Offset = "0xD90D30", VA = "0xD90D30")]
		set
		{
		}
	}

	[Token(Token = "0x1700008F")]
	public float fTargetAutoStmBufferLength
	{
		[Token(Token = "0x6000AF1")]
		[Address(RVA = "0xD90E70", Offset = "0xD90E70", VA = "0xD90E70")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000AF0")]
		[Address(RVA = "0xD8F164", Offset = "0xD8F164", VA = "0xD8F164")]
		set
		{
		}
	}

	[Token(Token = "0x17000090")]
	public uint uMaxConcurrentIO
	{
		[Token(Token = "0x6000AF3")]
		[Address(RVA = "0xD90F58", Offset = "0xD90F58", VA = "0xD90F58")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6000AF2")]
		[Address(RVA = "0xD90EDC", Offset = "0xD90EDC", VA = "0xD90EDC")]
		set
		{
		}
	}

	[Token(Token = "0x17000091")]
	public bool bUseStreamCache
	{
		[Token(Token = "0x6000AF5")]
		[Address(RVA = "0xD90FC4", Offset = "0xD90FC4", VA = "0xD90FC4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000AF4")]
		[Address(RVA = "0xD8F1E0", Offset = "0xD8F1E0", VA = "0xD8F1E0")]
		set
		{
		}
	}

	[Token(Token = "0x17000092")]
	public uint uMaxCachePinnedBytes
	{
		[Token(Token = "0x6000AF7")]
		[Address(RVA = "0xD91030", Offset = "0xD91030", VA = "0xD91030")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6000AF6")]
		[Address(RVA = "0xD8F25C", Offset = "0xD8F25C", VA = "0xD8F25C")]
		set
		{
		}
	}

	[Token(Token = "0x6000ADD")]
	[Address(RVA = "0xD905DC", Offset = "0xD905DC", VA = "0xD905DC")]
	internal AkDeviceSettings(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6000ADE")]
	[Address(RVA = "0xD9061C", Offset = "0xD9061C", VA = "0xD9061C")]
	internal static IntPtr getCPtr(AkDeviceSettings obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6000ADF")]
	[Address(RVA = "0xD9066C", Offset = "0xD9066C", VA = "0xD9066C", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6000AE0")]
	[Address(RVA = "0xD906A0", Offset = "0xD906A0", VA = "0xD906A0", Slot = "1")]
	~AkDeviceSettings()
	{
	}

	[Token(Token = "0x6000AE1")]
	[Address(RVA = "0xD90710", Offset = "0xD90710", VA = "0xD90710", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6000AF8")]
	[Address(RVA = "0xD9109C", Offset = "0xD9109C", VA = "0xD9109C")]
	public AkDeviceSettings()
	{
	}
}
[Token(Token = "0x20000DA")]
public enum AkDiffractionFlags
{
	[Token(Token = "0x40005CF")]
	DiffractionFlags_UseBuiltInParam = 1,
	[Token(Token = "0x40005D0")]
	DiffractionFlags_UseObstruction = 2,
	[Token(Token = "0x40005D1")]
	DiffractionFlags_CalcEmitterVirtualPosition = 8,
	[Token(Token = "0x40005D2")]
	DefaultDiffractionFlags = 11
}
[Token(Token = "0x20000DB")]
public class AkDiffractionPathInfo : IDisposable
{
	[Token(Token = "0x40005D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x40005D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x40005D5")]
	public const uint kMaxNodes = 8u;

	[Token(Token = "0x17000093")]
	public AkTransform virtualPos
	{
		[Token(Token = "0x6000AFF")]
		[Address(RVA = "0xD91410", Offset = "0xD91410", VA = "0xD91410")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000AFE")]
		[Address(RVA = "0xD91380", Offset = "0xD91380", VA = "0xD91380")]
		set
		{
		}
	}

	[Token(Token = "0x17000094")]
	public uint nodeCount
	{
		[Token(Token = "0x6000B01")]
		[Address(RVA = "0xD9153C", Offset = "0xD9153C", VA = "0xD9153C")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6000B00")]
		[Address(RVA = "0xD914C0", Offset = "0xD914C0", VA = "0xD914C0")]
		set
		{
		}
	}

	[Token(Token = "0x17000095")]
	public float diffraction
	{
		[Token(Token = "0x6000B03")]
		[Address(RVA = "0xD91624", Offset = "0xD91624", VA = "0xD91624")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000B02")]
		[Address(RVA = "0xD915A8", Offset = "0xD915A8", VA = "0xD915A8")]
		set
		{
		}
	}

	[Token(Token = "0x17000096")]
	public float totLength
	{
		[Token(Token = "0x6000B05")]
		[Address(RVA = "0xD9170C", Offset = "0xD9170C", VA = "0xD9170C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000B04")]
		[Address(RVA = "0xD91690", Offset = "0xD91690", VA = "0xD91690")]
		set
		{
		}
	}

	[Token(Token = "0x17000097")]
	public float obstructionValue
	{
		[Token(Token = "0x6000B07")]
		[Address(RVA = "0xD917F4", Offset = "0xD917F4", VA = "0xD917F4")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000B06")]
		[Address(RVA = "0xD91778", Offset = "0xD91778", VA = "0xD91778")]
		set
		{
		}
	}

	[Token(Token = "0x6000AF9")]
	[Address(RVA = "0xD91120", Offset = "0xD91120", VA = "0xD91120")]
	internal AkDiffractionPathInfo(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6000AFA")]
	[Address(RVA = "0xD91160", Offset = "0xD91160", VA = "0xD91160")]
	internal static IntPtr getCPtr(AkDiffractionPathInfo obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6000AFB")]
	[Address(RVA = "0xD911B0", Offset = "0xD911B0", VA = "0xD911B0", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6000AFC")]
	[Address(RVA = "0xD911E4", Offset = "0xD911E4", VA = "0xD911E4", Slot = "1")]
	~AkDiffractionPathInfo()
	{
	}

	[Token(Token = "0x6000AFD")]
	[Address(RVA = "0xD91254", Offset = "0xD91254", VA = "0xD91254", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6000B08")]
	[Address(RVA = "0xD91860", Offset = "0xD91860", VA = "0xD91860")]
	public static int GetSizeOf()
	{
		return default(int);
	}

	[Token(Token = "0x6000B09")]
	[Address(RVA = "0xD918C0", Offset = "0xD918C0", VA = "0xD918C0")]
	public AkVector GetNodes(uint idx)
	{
		return null;
	}

	[Token(Token = "0x6000B0A")]
	[Address(RVA = "0xD91980", Offset = "0xD91980", VA = "0xD91980")]
	public float GetAngles(uint idx)
	{
		return default(float);
	}

	[Token(Token = "0x6000B0B")]
	[Address(RVA = "0xD919FC", Offset = "0xD919FC", VA = "0xD919FC")]
	public ulong GetPortals(uint idx)
	{
		return default(ulong);
	}

	[Token(Token = "0x6000B0C")]
	[Address(RVA = "0xD91A78", Offset = "0xD91A78", VA = "0xD91A78")]
	public ulong GetRooms(uint idx)
	{
		return default(ulong);
	}

	[Token(Token = "0x6000B0D")]
	[Address(RVA = "0xD91AF4", Offset = "0xD91AF4", VA = "0xD91AF4")]
	public void Clone(AkDiffractionPathInfo other)
	{
	}

	[Token(Token = "0x6000B0E")]
	[Address(RVA = "0xD91B9C", Offset = "0xD91B9C", VA = "0xD91B9C")]
	public AkDiffractionPathInfo()
	{
	}
}
[Token(Token = "0x20000DC")]
public class AkDurationCallbackInfo : AkEventCallbackInfo
{
	[Token(Token = "0x40005D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private IntPtr swigCPtr;

	[Token(Token = "0x17000098")]
	public float fDuration
	{
		[Token(Token = "0x6000B14")]
		[Address(RVA = "0xD92310", Offset = "0xD92310", VA = "0xD92310")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000099")]
	public float fEstimatedDuration
	{
		[Token(Token = "0x6000B15")]
		[Address(RVA = "0xD9237C", Offset = "0xD9237C", VA = "0xD9237C")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700009A")]
	public uint audioNodeID
	{
		[Token(Token = "0x6000B16")]
		[Address(RVA = "0xD923E8", Offset = "0xD923E8", VA = "0xD923E8")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x1700009B")]
	public uint mediaID
	{
		[Token(Token = "0x6000B17")]
		[Address(RVA = "0xD92454", Offset = "0xD92454", VA = "0xD92454")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x1700009C")]
	public bool bStreaming
	{
		[Token(Token = "0x6000B18")]
		[Address(RVA = "0xD924C0", Offset = "0xD924C0", VA = "0xD924C0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000B0F")]
	[Address(RVA = "0xD8D19C", Offset = "0xD8D19C", VA = "0xD8D19C")]
	internal AkDurationCallbackInfo(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6000B10")]
	[Address(RVA = "0xD91E6C", Offset = "0xD91E6C", VA = "0xD91E6C")]
	internal static IntPtr getCPtr(AkDurationCallbackInfo obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6000B11")]
	[Address(RVA = "0xD91EBC", Offset = "0xD91EBC", VA = "0xD91EBC", Slot = "5")]
	internal override void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6000B12")]
	[Address(RVA = "0xD91FD8", Offset = "0xD91FD8", VA = "0xD91FD8", Slot = "1")]
	~AkDurationCallbackInfo()
	{
	}

	[Token(Token = "0x6000B13")]
	[Address(RVA = "0xD920A8", Offset = "0xD920A8", VA = "0xD920A8", Slot = "6")]
	public override void Dispose()
	{
	}

	[Token(Token = "0x6000B19")]
	[Address(RVA = "0xD9252C", Offset = "0xD9252C", VA = "0xD9252C")]
	public AkDurationCallbackInfo()
	{
	}
}
[Token(Token = "0x20000DD")]
public class AkDynamicSequenceItemCallbackInfo : AkCallbackInfo
{
	[Token(Token = "0x40005D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private IntPtr swigCPtr;

	[Token(Token = "0x1700009D")]
	public uint playingID
	{
		[Token(Token = "0x6000B1F")]
		[Address(RVA = "0xD92820", Offset = "0xD92820", VA = "0xD92820")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x1700009E")]
	public uint audioNodeID
	{
		[Token(Token = "0x6000B20")]
		[Address(RVA = "0xD9288C", Offset = "0xD9288C", VA = "0xD9288C")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x1700009F")]
	public IntPtr pCustomInfo
	{
		[Token(Token = "0x6000B21")]
		[Address(RVA = "0xD928F8", Offset = "0xD928F8", VA = "0xD928F8")]
		get
		{
			return default(IntPtr);
		}
	}

	[Token(Token = "0x6000B1A")]
	[Address(RVA = "0xD8D100", Offset = "0xD8D100", VA = "0xD8D100")]
	internal AkDynamicSequenceItemCallbackInfo(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6000B1B")]
	[Address(RVA = "0xD925A0", Offset = "0xD925A0", VA = "0xD925A0")]
	internal static IntPtr getCPtr(AkDynamicSequenceItemCallbackInfo obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6000B1C")]
	[Address(RVA = "0xD925F0", Offset = "0xD925F0", VA = "0xD925F0", Slot = "5")]
	internal override void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6000B1D")]
	[Address(RVA = "0xD92684", Offset = "0xD92684", VA = "0xD92684", Slot = "1")]
	~AkDynamicSequenceItemCallbackInfo()
	{
	}

	[Token(Token = "0x6000B1E")]
	[Address(RVA = "0xD926EC", Offset = "0xD926EC", VA = "0xD926EC", Slot = "6")]
	public override void Dispose()
	{
	}

	[Token(Token = "0x6000B22")]
	[Address(RVA = "0xD92964", Offset = "0xD92964", VA = "0xD92964")]
	public AkDynamicSequenceItemCallbackInfo()
	{
	}
}
[Token(Token = "0x20000DE")]
public enum AkDynamicSequenceType
{
	[Token(Token = "0x40005D9")]
	DynamicSequenceType_SampleAccurate,
	[Token(Token = "0x40005DA")]
	DynamicSequenceType_NormalTransition
}
[Token(Token = "0x20000DF")]
public class AkEmitterSettings : IDisposable
{
	[Token(Token = "0x40005DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x40005DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x170000A0")]
	public uint reflectAuxBusID
	{
		[Token(Token = "0x6000B2A")]
		[Address(RVA = "0xD930B0", Offset = "0xD930B0", VA = "0xD930B0")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6000B29")]
		[Address(RVA = "0xD93034", Offset = "0xD93034", VA = "0xD93034")]
		set
		{
		}
	}

	[Token(Token = "0x170000A1")]
	public float reflectionMaxPathLength
	{
		[Token(Token = "0x6000B2C")]
		[Address(RVA = "0xD93198", Offset = "0xD93198", VA = "0xD93198")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000B2B")]
		[Address(RVA = "0xD9311C", Offset = "0xD9311C", VA = "0xD9311C")]
		set
		{
		}
	}

	[Token(Token = "0x170000A2")]
	public float reflectionsAuxBusGain
	{
		[Token(Token = "0x6000B2E")]
		[Address(RVA = "0xD93280", Offset = "0xD93280", VA = "0xD93280")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000B2D")]
		[Address(RVA = "0xD93204", Offset = "0xD93204", VA = "0xD93204")]
		set
		{
		}
	}

	[Token(Token = "0x170000A3")]
	public uint reflectionsOrder
	{
		[Token(Token = "0x6000B30")]
		[Address(RVA = "0xD93368", Offset = "0xD93368", VA = "0xD93368")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6000B2F")]
		[Address(RVA = "0xD932EC", Offset = "0xD932EC", VA = "0xD932EC")]
		set
		{
		}
	}

	[Token(Token = "0x170000A4")]
	public uint reflectorFilterMask
	{
		[Token(Token = "0x6000B32")]
		[Address(RVA = "0xD93450", Offset = "0xD93450", VA = "0xD93450")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6000B31")]
		[Address(RVA = "0xD933D4", Offset = "0xD933D4", VA = "0xD933D4")]
		set
		{
		}
	}

	[Token(Token = "0x170000A5")]
	public float roomReverbAuxBusGain
	{
		[Token(Token = "0x6000B34")]
		[Address(RVA = "0xD93538", Offset = "0xD93538", VA = "0xD93538")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000B33")]
		[Address(RVA = "0xD934BC", Offset = "0xD934BC", VA = "0xD934BC")]
		set
		{
		}
	}

	[Token(Token = "0x170000A6")]
	public uint diffractionMaxEdges
	{
		[Token(Token = "0x6000B36")]
		[Address(RVA = "0xD93620", Offset = "0xD93620", VA = "0xD93620")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6000B35")]
		[Address(RVA = "0xD935A4", Offset = "0xD935A4", VA = "0xD935A4")]
		set
		{
		}
	}

	[Token(Token = "0x170000A7")]
	public uint diffractionMaxPaths
	{
		[Token(Token = "0x6000B38")]
		[Address(RVA = "0xD93708", Offset = "0xD93708", VA = "0xD93708")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6000B37")]
		[Address(RVA = "0xD9368C", Offset = "0xD9368C", VA = "0xD9368C")]
		set
		{
		}
	}

	[Token(Token = "0x170000A8")]
	public float diffractionMaxPathLength
	{
		[Token(Token = "0x6000B3A")]
		[Address(RVA = "0xD937F0", Offset = "0xD937F0", VA = "0xD937F0")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000B39")]
		[Address(RVA = "0xD93774", Offset = "0xD93774", VA = "0xD93774")]
		set
		{
		}
	}

	[Token(Token = "0x170000A9")]
	public byte useImageSources
	{
		[Token(Token = "0x6000B3C")]
		[Address(RVA = "0xD938D8", Offset = "0xD938D8", VA = "0xD938D8")]
		get
		{
			return default(byte);
		}
		[Token(Token = "0x6000B3B")]
		[Address(RVA = "0xD9385C", Offset = "0xD9385C", VA = "0xD9385C")]
		set
		{
		}
	}

	[Token(Token = "0x6000B23")]
	[Address(RVA = "0xD92D50", Offset = "0xD92D50", VA = "0xD92D50")]
	internal AkEmitterSettings(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6000B24")]
	[Address(RVA = "0xD92D90", Offset = "0xD92D90", VA = "0xD92D90")]
	internal static IntPtr getCPtr(AkEmitterSettings obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6000B25")]
	[Address(RVA = "0xD92DE0", Offset = "0xD92DE0", VA = "0xD92DE0", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6000B26")]
	[Address(RVA = "0xD92E14", Offset = "0xD92E14", VA = "0xD92E14", Slot = "1")]
	~AkEmitterSettings()
	{
	}

	[Token(Token = "0x6000B27")]
	[Address(RVA = "0xD92E84", Offset = "0xD92E84", VA = "0xD92E84", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6000B28")]
	[Address(RVA = "0xD92FB0", Offset = "0xD92FB0", VA = "0xD92FB0")]
	public AkEmitterSettings()
	{
	}
}
[Token(Token = "0x20000E0")]
public class AkEventCallbackInfo : AkCallbackInfo
{
	[Token(Token = "0x40005DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private IntPtr swigCPtr;

	[Token(Token = "0x170000AA")]
	public uint playingID
	{
		[Token(Token = "0x6000B42")]
		[Address(RVA = "0xD84E44", Offset = "0xD84E44", VA = "0xD84E44")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x170000AB")]
	public uint eventID
	{
		[Token(Token = "0x6000B43")]
		[Address(RVA = "0xD945D8", Offset = "0xD945D8", VA = "0xD945D8")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x6000B3D")]
	[Address(RVA = "0xD8D064", Offset = "0xD8D064", VA = "0xD8D064")]
	internal AkEventCallbackInfo(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6000B3E")]
	[Address(RVA = "0xD94588", Offset = "0xD94588", VA = "0xD94588")]
	internal static IntPtr getCPtr(AkEventCallbackInfo obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6000B3F")]
	[Address(RVA = "0xD91F44", Offset = "0xD91F44", VA = "0xD91F44", Slot = "5")]
	internal override void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6000B40")]
	[Address(RVA = "0xD92040", Offset = "0xD92040", VA = "0xD92040", Slot = "1")]
	~AkEventCallbackInfo()
	{
	}

	[Token(Token = "0x6000B41")]
	[Address(RVA = "0xD921DC", Offset = "0xD921DC", VA = "0xD921DC", Slot = "6")]
	public override void Dispose()
	{
	}

	[Token(Token = "0x6000B44")]
	[Address(RVA = "0xD94644", Offset = "0xD94644", VA = "0xD94644")]
	public AkEventCallbackInfo()
	{
	}
}
[Token(Token = "0x20000E1")]
public class AkExternalSourceInfo : IDisposable
{
	[Token(Token = "0x40005DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x40005DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x170000AC")]
	public uint iExternalSrcCookie
	{
		[Token(Token = "0x6000B52")]
		[Address(RVA = "0xD96244", Offset = "0xD96244", VA = "0xD96244")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6000B51")]
		[Address(RVA = "0xD961C8", Offset = "0xD961C8", VA = "0xD961C8")]
		set
		{
		}
	}

	[Token(Token = "0x170000AD")]
	public uint idCodec
	{
		[Token(Token = "0x6000B54")]
		[Address(RVA = "0xD9632C", Offset = "0xD9632C", VA = "0xD9632C")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6000B53")]
		[Address(RVA = "0xD962B0", Offset = "0xD962B0", VA = "0xD962B0")]
		set
		{
		}
	}

	[Token(Token = "0x170000AE")]
	public string szFile
	{
		[Token(Token = "0x6000B56")]
		[Address(RVA = "0xD96414", Offset = "0xD96414", VA = "0xD96414")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000B55")]
		[Address(RVA = "0xD96398", Offset = "0xD96398", VA = "0xD96398")]
		set
		{
		}
	}

	[Token(Token = "0x170000AF")]
	public IntPtr pInMemory
	{
		[Token(Token = "0x6000B58")]
		[Address(RVA = "0xD96530", Offset = "0xD96530", VA = "0xD96530")]
		get
		{
			return default(IntPtr);
		}
		[Token(Token = "0x6000B57")]
		[Address(RVA = "0xD964B4", Offset = "0xD964B4", VA = "0xD964B4")]
		set
		{
		}
	}

	[Token(Token = "0x170000B0")]
	public uint uiMemorySize
	{
		[Token(Token = "0x6000B5A")]
		[Address(RVA = "0xD96618", Offset = "0xD96618", VA = "0xD96618")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6000B59")]
		[Address(RVA = "0xD9659C", Offset = "0xD9659C", VA = "0xD9659C")]
		set
		{
		}
	}

	[Token(Token = "0x170000B1")]
	public uint idFile
	{
		[Token(Token = "0x6000B5C")]
		[Address(RVA = "0xD96700", Offset = "0xD96700", VA = "0xD96700")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6000B5B")]
		[Address(RVA = "0xD96684", Offset = "0xD96684", VA = "0xD96684")]
		set
		{
		}
	}

	[Token(Token = "0x6000B45")]
	[Address(RVA = "0xD95B64", Offset = "0xD95B64", VA = "0xD95B64")]
	internal AkExternalSourceInfo(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6000B46")]
	[Address(RVA = "0xD95BA4", Offset = "0xD95BA4", VA = "0xD95BA4")]
	internal static IntPtr getCPtr(AkExternalSourceInfo obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6000B47")]
	[Address(RVA = "0xD95BF4", Offset = "0xD95BF4", VA = "0xD95BF4", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6000B48")]
	[Address(RVA = "0xD95C28", Offset = "0xD95C28", VA = "0xD95C28", Slot = "1")]
	~AkExternalSourceInfo()
	{
	}

	[Token(Token = "0x6000B49")]
	[Address(RVA = "0xD95C98", Offset = "0xD95C98", VA = "0xD95C98", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6000B4A")]
	[Address(RVA = "0xD95DC4", Offset = "0xD95DC4", VA = "0xD95DC4")]
	public AkExternalSourceInfo()
	{
	}

	[Token(Token = "0x6000B4B")]
	[Address(RVA = "0xD95E48", Offset = "0xD95E48", VA = "0xD95E48")]
	public AkExternalSourceInfo(IntPtr in_pInMemory, uint in_uiMemorySize, uint in_iExternalSrcCookie, uint in_idCodec)
	{
	}

	[Token(Token = "0x6000B4C")]
	[Address(RVA = "0xD95EFC", Offset = "0xD95EFC", VA = "0xD95EFC")]
	public AkExternalSourceInfo(string in_pszFileName, uint in_iExternalSrcCookie, uint in_idCodec)
	{
	}

	[Token(Token = "0x6000B4D")]
	[Address(RVA = "0xD95FA8", Offset = "0xD95FA8", VA = "0xD95FA8")]
	public AkExternalSourceInfo(uint in_idFile, uint in_iExternalSrcCookie, uint in_idCodec)
	{
	}

	[Token(Token = "0x6000B4E")]
	[Address(RVA = "0xD96054", Offset = "0xD96054", VA = "0xD96054")]
	public void Clear()
	{
	}

	[Token(Token = "0x6000B4F")]
	[Address(RVA = "0xD960C0", Offset = "0xD960C0", VA = "0xD960C0")]
	public void Clone(AkExternalSourceInfo other)
	{
	}

	[Token(Token = "0x6000B50")]
	[Address(RVA = "0xD96168", Offset = "0xD96168", VA = "0xD96168")]
	public static int GetSizeOf()
	{
		return default(int);
	}
}
[Token(Token = "0x20000E2")]
public enum AkFloorPlane
{
	[Token(Token = "0x40005E1")]
	AkFloorPlane_XZ = 0,
	[Token(Token = "0x40005E2")]
	AkFloorPlane_XY = 1,
	[Token(Token = "0x40005E3")]
	AkFloorPlane_YZ = 2,
	[Token(Token = "0x40005E4")]
	AkFloorPlane_Default = 0
}
[Token(Token = "0x20000E3")]
public enum AkGlobalCallbackLocation
{
	[Token(Token = "0x40005E6")]
	AkGlobalCallbackLocation_Register = 1,
	[Token(Token = "0x40005E7")]
	AkGlobalCallbackLocation_Begin = 2,
	[Token(Token = "0x40005E8")]
	AkGlobalCallbackLocation_PreProcessMessageQueueForRender = 4,
	[Token(Token = "0x40005E9")]
	AkGlobalCallbackLocation_PostMessagesProcessed = 8,
	[Token(Token = "0x40005EA")]
	AkGlobalCallbackLocation_BeginRender = 16,
	[Token(Token = "0x40005EB")]
	AkGlobalCallbackLocation_EndRender = 32,
	[Token(Token = "0x40005EC")]
	AkGlobalCallbackLocation_End = 64,
	[Token(Token = "0x40005ED")]
	AkGlobalCallbackLocation_Term = 128,
	[Token(Token = "0x40005EE")]
	AkGlobalCallbackLocation_Monitor = 256,
	[Token(Token = "0x40005EF")]
	AkGlobalCallbackLocation_MonitorRecap = 512,
	[Token(Token = "0x40005F0")]
	AkGlobalCallbackLocation_Num = 10
}
[Token(Token = "0x20000E4")]
public enum AkGroupType
{
	[Token(Token = "0x40005F2")]
	AkGroupType_Switch,
	[Token(Token = "0x40005F3")]
	AkGroupType_State
}
[Token(Token = "0x20000E5")]
public class AkImageSourceParams : IDisposable
{
	[Token(Token = "0x40005F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x40005F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x170000B2")]
	public AkVector sourcePosition
	{
		[Token(Token = "0x6000B65")]
		[Address(RVA = "0xF9E2A8", Offset = "0xF9E2A8", VA = "0xF9E2A8")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000B64")]
		[Address(RVA = "0xF9E218", Offset = "0xF9E218", VA = "0xF9E218")]
		set
		{
		}
	}

	[Token(Token = "0x170000B3")]
	public float fDistanceScalingFactor
	{
		[Token(Token = "0x6000B67")]
		[Address(RVA = "0xF9E3D4", Offset = "0xF9E3D4", VA = "0xF9E3D4")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000B66")]
		[Address(RVA = "0xF9E358", Offset = "0xF9E358", VA = "0xF9E358")]
		set
		{
		}
	}

	[Token(Token = "0x170000B4")]
	public float fLevel
	{
		[Token(Token = "0x6000B69")]
		[Address(RVA = "0xF9E4BC", Offset = "0xF9E4BC", VA = "0xF9E4BC")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000B68")]
		[Address(RVA = "0xF9E440", Offset = "0xF9E440", VA = "0xF9E440")]
		set
		{
		}
	}

	[Token(Token = "0x170000B5")]
	public float fDiffraction
	{
		[Token(Token = "0x6000B6B")]
		[Address(RVA = "0xF9E5A4", Offset = "0xF9E5A4", VA = "0xF9E5A4")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000B6A")]
		[Address(RVA = "0xF9E528", Offset = "0xF9E528", VA = "0xF9E528")]
		set
		{
		}
	}

	[Token(Token = "0x170000B6")]
	public byte uDiffractionEmitterSide
	{
		[Token(Token = "0x6000B6D")]
		[Address(RVA = "0xF9E68C", Offset = "0xF9E68C", VA = "0xF9E68C")]
		get
		{
			return default(byte);
		}
		[Token(Token = "0x6000B6C")]
		[Address(RVA = "0xF9E610", Offset = "0xF9E610", VA = "0xF9E610")]
		set
		{
		}
	}

	[Token(Token = "0x170000B7")]
	public byte uDiffractionListenerSide
	{
		[Token(Token = "0x6000B6F")]
		[Address(RVA = "0xF9E774", Offset = "0xF9E774", VA = "0xF9E774")]
		get
		{
			return default(byte);
		}
		[Token(Token = "0x6000B6E")]
		[Address(RVA = "0xF9E6F8", Offset = "0xF9E6F8", VA = "0xF9E6F8")]
		set
		{
		}
	}

	[Token(Token = "0x6000B5D")]
	[Address(RVA = "0xF9DE74", Offset = "0xF9DE74", VA = "0xF9DE74")]
	internal AkImageSourceParams(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6000B5E")]
	[Address(RVA = "0xF9DEB4", Offset = "0xF9DEB4", VA = "0xF9DEB4")]
	internal static IntPtr getCPtr(AkImageSourceParams obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6000B5F")]
	[Address(RVA = "0xF9DF04", Offset = "0xF9DF04", VA = "0xF9DF04", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6000B60")]
	[Address(RVA = "0xF9DF38", Offset = "0xF9DF38", VA = "0xF9DF38", Slot = "1")]
	~AkImageSourceParams()
	{
	}

	[Token(Token = "0x6000B61")]
	[Address(RVA = "0xF9DFA8", Offset = "0xF9DFA8", VA = "0xF9DFA8", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6000B62")]
	[Address(RVA = "0xF9E0D4", Offset = "0xF9E0D4", VA = "0xF9E0D4")]
	public AkImageSourceParams()
	{
	}

	[Token(Token = "0x6000B63")]
	[Address(RVA = "0xF9E158", Offset = "0xF9E158", VA = "0xF9E158")]
	public AkImageSourceParams(AkVector in_sourcePosition, float in_fDistanceScalingFactor, float in_fLevel)
	{
	}
}
[Token(Token = "0x20000E6")]
public class AkImageSourceSettings : IDisposable
{
	[Token(Token = "0x40005F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x40005F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x170000B8")]
	public AkImageSourceParams params_
	{
		[Token(Token = "0x6000B7A")]
		[Address(RVA = "0xF9ED24", Offset = "0xF9ED24", VA = "0xF9ED24")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000B79")]
		[Address(RVA = "0xF9EC7C", Offset = "0xF9EC7C", VA = "0xF9EC7C")]
		set
		{
		}
	}

	[Token(Token = "0x6000B70")]
	[Address(RVA = "0xF9E7E0", Offset = "0xF9E7E0", VA = "0xF9E7E0")]
	internal AkImageSourceSettings(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6000B71")]
	[Address(RVA = "0xF9E820", Offset = "0xF9E820", VA = "0xF9E820")]
	internal static IntPtr getCPtr(AkImageSourceSettings obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6000B72")]
	[Address(RVA = "0xF9E870", Offset = "0xF9E870", VA = "0xF9E870", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6000B73")]
	[Address(RVA = "0xF9E8A4", Offset = "0xF9E8A4", VA = "0xF9E8A4", Slot = "1")]
	~AkImageSourceSettings()
	{
	}

	[Token(Token = "0x6000B74")]
	[Address(RVA = "0xF9E914", Offset = "0xF9E914", VA = "0xF9E914", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6000B75")]
	[Address(RVA = "0xF9EA40", Offset = "0xF9EA40", VA = "0xF9EA40")]
	public AkImageSourceSettings()
	{
	}

	[Token(Token = "0x6000B76")]
	[Address(RVA = "0xF9EAC4", Offset = "0xF9EAC4", VA = "0xF9EAC4")]
	public AkImageSourceSettings(AkVector in_sourcePosition, float in_fDistanceScalingFactor, float in_fLevel)
	{
	}

	[Token(Token = "0x6000B77")]
	[Address(RVA = "0xF9EB84", Offset = "0xF9EB84", VA = "0xF9EB84")]
	public void SetOneTexture(uint in_texture)
	{
	}

	[Token(Token = "0x6000B78")]
	[Address(RVA = "0xF9EC00", Offset = "0xF9EC00", VA = "0xF9EC00")]
	public void SetName(string in_pName)
	{
	}
}
[Token(Token = "0x20000E7")]
public class AkInitSettings : IDisposable
{
	[Token(Token = "0x40005F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x40005F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x170000B9")]
	public uint uMaxNumPaths
	{
		[Token(Token = "0x6000B81")]
		[Address(RVA = "0xF9F0B0", Offset = "0xF9F0B0", VA = "0xF9F0B0")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6000B80")]
		[Address(RVA = "0xF9F034", Offset = "0xF9F034", VA = "0xF9F034")]
		set
		{
		}
	}

	[Token(Token = "0x170000BA")]
	public uint uDefaultPoolSize
	{
		[Token(Token = "0x6000B83")]
		[Address(RVA = "0xF9F198", Offset = "0xF9F198", VA = "0xF9F198")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6000B82")]
		[Address(RVA = "0xF9F11C", Offset = "0xF9F11C", VA = "0xF9F11C")]
		set
		{
		}
	}

	[Token(Token = "0x170000BB")]
	public float fDefaultPoolRatioThreshold
	{
		[Token(Token = "0x6000B85")]
		[Address(RVA = "0xF9F280", Offset = "0xF9F280", VA = "0xF9F280")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000B84")]
		[Address(RVA = "0xF9F204", Offset = "0xF9F204", VA = "0xF9F204")]
		set
		{
		}
	}

	[Token(Token = "0x170000BC")]
	public uint uCommandQueueSize
	{
		[Token(Token = "0x6000B87")]
		[Address(RVA = "0xF9F368", Offset = "0xF9F368", VA = "0xF9F368")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6000B86")]
		[Address(RVA = "0xF9F2EC", Offset = "0xF9F2EC", VA = "0xF9F2EC")]
		set
		{
		}
	}

	[Token(Token = "0x170000BD")]
	public int uPrepareEventMemoryPoolID
	{
		[Token(Token = "0x6000B89")]
		[Address(RVA = "0xF9F450", Offset = "0xF9F450", VA = "0xF9F450")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000B88")]
		[Address(RVA = "0xF9F3D4", Offset = "0xF9F3D4", VA = "0xF9F3D4")]
		set
		{
		}
	}

	[Token(Token = "0x170000BE")]
	public bool bEnableGameSyncPreparation
	{
		[Token(Token = "0x6000B8B")]
		[Address(RVA = "0xF9F538", Offset = "0xF9F538", VA = "0xF9F538")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000B8A")]
		[Address(RVA = "0xF9F4BC", Offset = "0xF9F4BC", VA = "0xF9F4BC")]
		set
		{
		}
	}

	[Token(Token = "0x170000BF")]
	public uint uContinuousPlaybackLookAhead
	{
		[Token(Token = "0x6000B8D")]
		[Address(RVA = "0xF9F620", Offset = "0xF9F620", VA = "0xF9F620")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6000B8C")]
		[Address(RVA = "0xF9F5A4", Offset = "0xF9F5A4", VA = "0xF9F5A4")]
		set
		{
		}
	}

	[Token(Token = "0x170000C0")]
	public uint uNumSamplesPerFrame
	{
		[Token(Token = "0x6000B8F")]
		[Address(RVA = "0xF9F708", Offset = "0xF9F708", VA = "0xF9F708")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6000B8E")]
		[Address(RVA = "0xF9F68C", Offset = "0xF9F68C", VA = "0xF9F68C")]
		set
		{
		}
	}

	[Token(Token = "0x170000C1")]
	public uint uMonitorPoolSize
	{
		[Token(Token = "0x6000B91")]
		[Address(RVA = "0xF9F7F0", Offset = "0xF9F7F0", VA = "0xF9F7F0")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6000B90")]
		[Address(RVA = "0xF9F774", Offset = "0xF9F774", VA = "0xF9F774")]
		set
		{
		}
	}

	[Token(Token = "0x170000C2")]
	public uint uMonitorQueuePoolSize
	{
		[Token(Token = "0x6000B93")]
		[Address(RVA = "0xF9F8D8", Offset = "0xF9F8D8", VA = "0xF9F8D8")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6000B92")]
		[Address(RVA = "0xF9F85C", Offset = "0xF9F85C", VA = "0xF9F85C")]
		set
		{
		}
	}

	[Token(Token = "0x170000C3")]
	public AkOutputSettings settingsMainOutput
	{
		[Token(Token = "0x6000B95")]
		[Address(RVA = "0xF9FA3C", Offset = "0xF9FA3C", VA = "0xF9FA3C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000B94")]
		[Address(RVA = "0xF9F944", Offset = "0xF9F944", VA = "0xF9F944")]
		set
		{
		}
	}

	[Token(Token = "0x170000C4")]
	public uint uMaxHardwareTimeoutMs
	{
		[Token(Token = "0x6000B97")]
		[Address(RVA = "0xF9FBA8", Offset = "0xF9FBA8", VA = "0xF9FBA8")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6000B96")]
		[Address(RVA = "0xF9FB2C", Offset = "0xF9FB2C", VA = "0xF9FB2C")]
		set
		{
		}
	}

	[Token(Token = "0x170000C5")]
	public bool bUseSoundBankMgrThread
	{
		[Token(Token = "0x6000B99")]
		[Address(RVA = "0xF9FC90", Offset = "0xF9FC90", VA = "0xF9FC90")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000B98")]
		[Address(RVA = "0xF9FC14", Offset = "0xF9FC14", VA = "0xF9FC14")]
		set
		{
		}
	}

	[Token(Token = "0x170000C6")]
	public bool bUseLEngineThread
	{
		[Token(Token = "0x6000B9B")]
		[Address(RVA = "0xF9FD78", Offset = "0xF9FD78", VA = "0xF9FD78")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000B9A")]
		[Address(RVA = "0xF9FCFC", Offset = "0xF9FCFC", VA = "0xF9FCFC")]
		set
		{
		}
	}

	[Token(Token = "0x170000C7")]
	public string szPluginDLLPath
	{
		[Token(Token = "0x6000B9D")]
		[Address(RVA = "0xF9FE60", Offset = "0xF9FE60", VA = "0xF9FE60")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000B9C")]
		[Address(RVA = "0xF9FDE4", Offset = "0xF9FDE4", VA = "0xF9FDE4")]
		set
		{
		}
	}

	[Token(Token = "0x170000C8")]
	public AkFloorPlane eFloorPlane
	{
		[Token(Token = "0x6000B9F")]
		[Address(RVA = "0xF9FF7C", Offset = "0xF9FF7C", VA = "0xF9FF7C")]
		get
		{
			return default(AkFloorPlane);
		}
		[Token(Token = "0x6000B9E")]
		[Address(RVA = "0xF9FF00", Offset = "0xF9FF00", VA = "0xF9FF00")]
		set
		{
		}
	}

	[Token(Token = "0x170000C9")]
	public float fDebugOutOfRangeLimit
	{
		[Token(Token = "0x6000BA1")]
		[Address(RVA = "0xFA0064", Offset = "0xFA0064", VA = "0xFA0064")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000BA0")]
		[Address(RVA = "0xF9FFE8", Offset = "0xF9FFE8", VA = "0xF9FFE8")]
		set
		{
		}
	}

	[Token(Token = "0x170000CA")]
	public bool bDebugOutOfRangeCheckEnabled
	{
		[Token(Token = "0x6000BA3")]
		[Address(RVA = "0xFA014C", Offset = "0xFA014C", VA = "0xFA014C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000BA2")]
		[Address(RVA = "0xFA00D0", Offset = "0xFA00D0", VA = "0xFA00D0")]
		set
		{
		}
	}

	[Token(Token = "0x6000B7B")]
	[Address(RVA = "0xF9EDD4", Offset = "0xF9EDD4", VA = "0xF9EDD4")]
	internal AkInitSettings(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6000B7C")]
	[Address(RVA = "0xF9EE14", Offset = "0xF9EE14", VA = "0xF9EE14")]
	internal static IntPtr getCPtr(AkInitSettings obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6000B7D")]
	[Address(RVA = "0xF9EE64", Offset = "0xF9EE64", VA = "0xF9EE64", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6000B7E")]
	[Address(RVA = "0xF9EE98", Offset = "0xF9EE98", VA = "0xF9EE98", Slot = "1")]
	~AkInitSettings()
	{
	}

	[Token(Token = "0x6000B7F")]
	[Address(RVA = "0xF9EF08", Offset = "0xF9EF08", VA = "0xF9EF08", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6000BA4")]
	[Address(RVA = "0xFA01B8", Offset = "0xFA01B8", VA = "0xFA01B8")]
	public AkInitSettings()
	{
	}
}
[Token(Token = "0x20000E8")]
public class AkInitializationSettings : IDisposable
{
	[Token(Token = "0x40005FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x40005FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x170000CB")]
	public AkMemSettings memSettings
	{
		[Token(Token = "0x6000BAC")]
		[Address(RVA = "0xFA0618", Offset = "0xFA0618", VA = "0xFA0618")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000BAB")]
		[Address(RVA = "0xFA0520", Offset = "0xFA0520", VA = "0xFA0520")]
		set
		{
		}
	}

	[Token(Token = "0x170000CC")]
	public AkStreamMgrSettings streamMgrSettings
	{
		[Token(Token = "0x6000BAE")]
		[Address(RVA = "0xFA0798", Offset = "0xFA0798", VA = "0xFA0798")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000BAD")]
		[Address(RVA = "0xFA0708", Offset = "0xFA0708", VA = "0xFA0708")]
		set
		{
		}
	}

	[Token(Token = "0x170000CD")]
	public AkDeviceSettings deviceSettings
	{
		[Token(Token = "0x6000BB0")]
		[Address(RVA = "0xFA08D8", Offset = "0xFA08D8", VA = "0xFA08D8")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000BAF")]
		[Address(RVA = "0xFA0848", Offset = "0xFA0848", VA = "0xFA0848")]
		set
		{
		}
	}

	[Token(Token = "0x170000CE")]
	public AkInitSettings initSettings
	{
		[Token(Token = "0x6000BB2")]
		[Address(RVA = "0xFA0A30", Offset = "0xFA0A30", VA = "0xFA0A30")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000BB1")]
		[Address(RVA = "0xFA0988", Offset = "0xFA0988", VA = "0xFA0988")]
		set
		{
		}
	}

	[Token(Token = "0x170000CF")]
	public AkPlatformInitSettings platformSettings
	{
		[Token(Token = "0x6000BB4")]
		[Address(RVA = "0xFA0BD8", Offset = "0xFA0BD8", VA = "0xFA0BD8")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000BB3")]
		[Address(RVA = "0xFA0AE0", Offset = "0xFA0AE0", VA = "0xFA0AE0")]
		set
		{
		}
	}

	[Token(Token = "0x170000D0")]
	public AkMusicSettings musicSettings
	{
		[Token(Token = "0x6000BB6")]
		[Address(RVA = "0xFA0DC0", Offset = "0xFA0DC0", VA = "0xFA0DC0")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000BB5")]
		[Address(RVA = "0xFA0CC8", Offset = "0xFA0CC8", VA = "0xFA0CC8")]
		set
		{
		}
	}

	[Token(Token = "0x170000D1")]
	public uint preparePoolSize
	{
		[Token(Token = "0x6000BB8")]
		[Address(RVA = "0xFA0F2C", Offset = "0xFA0F2C", VA = "0xFA0F2C")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6000BB7")]
		[Address(RVA = "0xFA0EB0", Offset = "0xFA0EB0", VA = "0xFA0EB0")]
		set
		{
		}
	}

	[Token(Token = "0x170000D2")]
	public AkUnityPlatformSpecificSettings unityPlatformSpecificSettings
	{
		[Token(Token = "0x6000BBA")]
		[Address(RVA = "0xFA1028", Offset = "0xFA1028", VA = "0xFA1028")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000BB9")]
		[Address(RVA = "0xFA0F98", Offset = "0xFA0F98", VA = "0xFA0F98")]
		set
		{
		}
	}

	[Token(Token = "0x170000D3")]
	public bool useAsyncOpen
	{
		[Token(Token = "0x6000BBC")]
		[Address(RVA = "0xFA1154", Offset = "0xFA1154", VA = "0xFA1154")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000BBB")]
		[Address(RVA = "0xFA10D8", Offset = "0xFA10D8", VA = "0xFA10D8")]
		set
		{
		}
	}

	[Token(Token = "0x6000BA5")]
	[Address(RVA = "0xFA023C", Offset = "0xFA023C", VA = "0xFA023C")]
	internal AkInitializationSettings(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6000BA6")]
	[Address(RVA = "0xFA027C", Offset = "0xFA027C", VA = "0xFA027C")]
	internal static IntPtr getCPtr(AkInitializationSettings obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6000BA7")]
	[Address(RVA = "0xFA02CC", Offset = "0xFA02CC", VA = "0xFA02CC", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6000BA8")]
	[Address(RVA = "0xFA0300", Offset = "0xFA0300", VA = "0xFA0300", Slot = "1")]
	~AkInitializationSettings()
	{
	}

	[Token(Token = "0x6000BA9")]
	[Address(RVA = "0xFA0370", Offset = "0xFA0370", VA = "0xFA0370", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6000BAA")]
	[Address(RVA = "0xFA049C", Offset = "0xFA049C", VA = "0xFA049C")]
	public AkInitializationSettings()
	{
	}
}
[Token(Token = "0x20000E9")]
public class AkIterator : IDisposable
{
	[Token(Token = "0x40005FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x40005FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x170000D4")]
	public AkPlaylistItem pItem
	{
		[Token(Token = "0x6000BC3")]
		[Address(RVA = "0xFA1AEC", Offset = "0xFA1AEC", VA = "0xFA1AEC")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000BC2")]
		[Address(RVA = "0xFA19F4", Offset = "0xFA19F4", VA = "0xFA19F4")]
		set
		{
		}
	}

	[Token(Token = "0x6000BBD")]
	[Address(RVA = "0xFA1794", Offset = "0xFA1794", VA = "0xFA1794")]
	internal AkIterator(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6000BBE")]
	[Address(RVA = "0xFA17D4", Offset = "0xFA17D4", VA = "0xFA17D4")]
	internal static IntPtr getCPtr(AkIterator obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6000BBF")]
	[Address(RVA = "0xFA1824", Offset = "0xFA1824", VA = "0xFA1824", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6000BC0")]
	[Address(RVA = "0xFA1858", Offset = "0xFA1858", VA = "0xFA1858", Slot = "1")]
	~AkIterator()
	{
	}

	[Token(Token = "0x6000BC1")]
	[Address(RVA = "0xFA18C8", Offset = "0xFA18C8", VA = "0xFA18C8", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6000BC4")]
	[Address(RVA = "0xFA1BDC", Offset = "0xFA1BDC", VA = "0xFA1BDC")]
	public AkIterator NextIter()
	{
		return null;
	}

	[Token(Token = "0x6000BC5")]
	[Address(RVA = "0xFA1C7C", Offset = "0xFA1C7C", VA = "0xFA1C7C")]
	public AkIterator PrevIter()
	{
		return null;
	}

	[Token(Token = "0x6000BC6")]
	[Address(RVA = "0xFA1D1C", Offset = "0xFA1D1C", VA = "0xFA1D1C")]
	public AkPlaylistItem GetItem()
	{
		return null;
	}

	[Token(Token = "0x6000BC7")]
	[Address(RVA = "0xFA1DBC", Offset = "0xFA1DBC", VA = "0xFA1DBC")]
	public bool IsEqualTo(AkIterator in_rOp)
	{
		return default(bool);
	}

	[Token(Token = "0x6000BC8")]
	[Address(RVA = "0xFA1E64", Offset = "0xFA1E64", VA = "0xFA1E64")]
	public bool IsDifferentFrom(AkIterator in_rOp)
	{
		return default(bool);
	}

	[Token(Token = "0x6000BC9")]
	[Address(RVA = "0xFA1F0C", Offset = "0xFA1F0C", VA = "0xFA1F0C")]
	public AkIterator()
	{
	}
}
[Token(Token = "0x20000EA")]
public enum AkMIDICcTypes
{
	[Token(Token = "0x40005FF")]
	BANK_SELECT_COARSE = 0,
	[Token(Token = "0x4000600")]
	MOD_WHEEL_COARSE = 1,
	[Token(Token = "0x4000601")]
	BREATH_CTRL_COARSE = 2,
	[Token(Token = "0x4000602")]
	CTRL_3_COARSE = 3,
	[Token(Token = "0x4000603")]
	FOOT_PEDAL_COARSE = 4,
	[Token(Token = "0x4000604")]
	PORTAMENTO_COARSE = 5,
	[Token(Token = "0x4000605")]
	DATA_ENTRY_COARSE = 6,
	[Token(Token = "0x4000606")]
	VOLUME_COARSE = 7,
	[Token(Token = "0x4000607")]
	BALANCE_COARSE = 8,
	[Token(Token = "0x4000608")]
	CTRL_9_COARSE = 9,
	[Token(Token = "0x4000609")]
	PAN_POSITION_COARSE = 10,
	[Token(Token = "0x400060A")]
	EXPRESSION_COARSE = 11,
	[Token(Token = "0x400060B")]
	EFFECT_CTRL_1_COARSE = 12,
	[Token(Token = "0x400060C")]
	EFFECT_CTRL_2_COARSE = 13,
	[Token(Token = "0x400060D")]
	CTRL_14_COARSE = 14,
	[Token(Token = "0x400060E")]
	CTRL_15_COARSE = 15,
	[Token(Token = "0x400060F")]
	GEN_SLIDER_1 = 16,
	[Token(Token = "0x4000610")]
	GEN_SLIDER_2 = 17,
	[Token(Token = "0x4000611")]
	GEN_SLIDER_3 = 18,
	[Token(Token = "0x4000612")]
	GEN_SLIDER_4 = 19,
	[Token(Token = "0x4000613")]
	CTRL_20_COARSE = 20,
	[Token(Token = "0x4000614")]
	CTRL_21_COARSE = 21,
	[Token(Token = "0x4000615")]
	CTRL_22_COARSE = 22,
	[Token(Token = "0x4000616")]
	CTRL_23_COARSE = 23,
	[Token(Token = "0x4000617")]
	CTRL_24_COARSE = 24,
	[Token(Token = "0x4000618")]
	CTRL_25_COARSE = 25,
	[Token(Token = "0x4000619")]
	CTRL_26_COARSE = 26,
	[Token(Token = "0x400061A")]
	CTRL_27_COARSE = 27,
	[Token(Token = "0x400061B")]
	CTRL_28_COARSE = 28,
	[Token(Token = "0x400061C")]
	CTRL_29_COARSE = 29,
	[Token(Token = "0x400061D")]
	CTRL_30_COARSE = 30,
	[Token(Token = "0x400061E")]
	CTRL_31_COARSE = 31,
	[Token(Token = "0x400061F")]
	BANK_SELECT_FINE = 32,
	[Token(Token = "0x4000620")]
	MOD_WHEEL_FINE = 33,
	[Token(Token = "0x4000621")]
	BREATH_CTRL_FINE = 34,
	[Token(Token = "0x4000622")]
	CTRL_3_FINE = 35,
	[Token(Token = "0x4000623")]
	FOOT_PEDAL_FINE = 36,
	[Token(Token = "0x4000624")]
	PORTAMENTO_FINE = 37,
	[Token(Token = "0x4000625")]
	DATA_ENTRY_FINE = 38,
	[Token(Token = "0x4000626")]
	VOLUME_FINE = 39,
	[Token(Token = "0x4000627")]
	BALANCE_FINE = 40,
	[Token(Token = "0x4000628")]
	CTRL_9_FINE = 41,
	[Token(Token = "0x4000629")]
	PAN_POSITION_FINE = 42,
	[Token(Token = "0x400062A")]
	EXPRESSION_FINE = 43,
	[Token(Token = "0x400062B")]
	EFFECT_CTRL_1_FINE = 44,
	[Token(Token = "0x400062C")]
	EFFECT_CTRL_2_FINE = 45,
	[Token(Token = "0x400062D")]
	CTRL_14_FINE = 46,
	[Token(Token = "0x400062E")]
	CTRL_15_FINE = 47,
	[Token(Token = "0x400062F")]
	CTRL_20_FINE = 52,
	[Token(Token = "0x4000630")]
	CTRL_21_FINE = 53,
	[Token(Token = "0x4000631")]
	CTRL_22_FINE = 54,
	[Token(Token = "0x4000632")]
	CTRL_23_FINE = 55,
	[Token(Token = "0x4000633")]
	CTRL_24_FINE = 56,
	[Token(Token = "0x4000634")]
	CTRL_25_FINE = 57,
	[Token(Token = "0x4000635")]
	CTRL_26_FINE = 58,
	[Token(Token = "0x4000636")]
	CTRL_27_FINE = 59,
	[Token(Token = "0x4000637")]
	CTRL_28_FINE = 60,
	[Token(Token = "0x4000638")]
	CTRL_29_FINE = 61,
	[Token(Token = "0x4000639")]
	CTRL_30_FINE = 62,
	[Token(Token = "0x400063A")]
	CTRL_31_FINE = 63,
	[Token(Token = "0x400063B")]
	HOLD_PEDAL = 64,
	[Token(Token = "0x400063C")]
	PORTAMENTO_ON_OFF = 65,
	[Token(Token = "0x400063D")]
	SUSTENUTO_PEDAL = 66,
	[Token(Token = "0x400063E")]
	SOFT_PEDAL = 67,
	[Token(Token = "0x400063F")]
	LEGATO_PEDAL = 68,
	[Token(Token = "0x4000640")]
	HOLD_PEDAL_2 = 69,
	[Token(Token = "0x4000641")]
	SOUND_VARIATION = 70,
	[Token(Token = "0x4000642")]
	SOUND_TIMBRE = 71,
	[Token(Token = "0x4000643")]
	SOUND_RELEASE_TIME = 72,
	[Token(Token = "0x4000644")]
	SOUND_ATTACK_TIME = 73,
	[Token(Token = "0x4000645")]
	SOUND_BRIGHTNESS = 74,
	[Token(Token = "0x4000646")]
	SOUND_CTRL_6 = 75,
	[Token(Token = "0x4000647")]
	SOUND_CTRL_7 = 76,
	[Token(Token = "0x4000648")]
	SOUND_CTRL_8 = 77,
	[Token(Token = "0x4000649")]
	SOUND_CTRL_9 = 78,
	[Token(Token = "0x400064A")]
	SOUND_CTRL_10 = 79,
	[Token(Token = "0x400064B")]
	GENERAL_BUTTON_1 = 80,
	[Token(Token = "0x400064C")]
	GENERAL_BUTTON_2 = 81,
	[Token(Token = "0x400064D")]
	GENERAL_BUTTON_3 = 82,
	[Token(Token = "0x400064E")]
	GENERAL_BUTTON_4 = 83,
	[Token(Token = "0x400064F")]
	REVERB_LEVEL = 91,
	[Token(Token = "0x4000650")]
	TREMOLO_LEVEL = 92,
	[Token(Token = "0x4000651")]
	CHORUS_LEVEL = 93,
	[Token(Token = "0x4000652")]
	CELESTE_LEVEL = 94,
	[Token(Token = "0x4000653")]
	PHASER_LEVEL = 95,
	[Token(Token = "0x4000654")]
	DATA_BUTTON_P1 = 96,
	[Token(Token = "0x4000655")]
	DATA_BUTTON_M1 = 97,
	[Token(Token = "0x4000656")]
	NON_REGISTER_COARSE = 98,
	[Token(Token = "0x4000657")]
	NON_REGISTER_FINE = 99,
	[Token(Token = "0x4000658")]
	ALL_SOUND_OFF = 120,
	[Token(Token = "0x4000659")]
	ALL_CONTROLLERS_OFF = 121,
	[Token(Token = "0x400065A")]
	LOCAL_KEYBOARD = 122,
	[Token(Token = "0x400065B")]
	ALL_NOTES_OFF = 123,
	[Token(Token = "0x400065C")]
	OMNI_MODE_OFF = 124,
	[Token(Token = "0x400065D")]
	OMNI_MODE_ON = 125,
	[Token(Token = "0x400065E")]
	OMNI_MONOPHONIC_ON = 126,
	[Token(Token = "0x400065F")]
	OMNI_POLYPHONIC_ON = 127
}
[Token(Token = "0x20000EB")]
public class AkMIDIEvent : IDisposable
{
	[Token(Token = "0x200023D")]
	public class tGen : IDisposable
	{
		[Token(Token = "0x4000B4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr swigCPtr;

		[Token(Token = "0x4000B4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected bool swigCMemOwn;

		[Token(Token = "0x17000285")]
		public byte byParam1
		{
			[Token(Token = "0x60013B8")]
			[Address(RVA = "0xFA4D20", Offset = "0xFA4D20", VA = "0xFA4D20")]
			get
			{
				return default(byte);
			}
			[Token(Token = "0x60013B7")]
			[Address(RVA = "0xFA4CA4", Offset = "0xFA4CA4", VA = "0xFA4CA4")]
			set
			{
			}
		}

		[Token(Token = "0x17000286")]
		public byte byParam2
		{
			[Token(Token = "0x60013BA")]
			[Address(RVA = "0xFA4E08", Offset = "0xFA4E08", VA = "0xFA4E08")]
			get
			{
				return default(byte);
			}
			[Token(Token = "0x60013B9")]
			[Address(RVA = "0xFA4D8C", Offset = "0xFA4D8C", VA = "0xFA4D8C")]
			set
			{
			}
		}

		[Token(Token = "0x60013B2")]
		[Address(RVA = "0xFA2D48", Offset = "0xFA2D48", VA = "0xFA2D48")]
		internal tGen(IntPtr cPtr, bool cMemoryOwn)
		{
		}

		[Token(Token = "0x60013B3")]
		[Address(RVA = "0xFA2C48", Offset = "0xFA2C48", VA = "0xFA2C48")]
		internal static IntPtr getCPtr(tGen obj)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x60013B4")]
		[Address(RVA = "0xFA4AD4", Offset = "0xFA4AD4", VA = "0xFA4AD4", Slot = "5")]
		internal virtual void setCPtr(IntPtr cPtr)
		{
		}

		[Token(Token = "0x60013B5")]
		[Address(RVA = "0xFA4B08", Offset = "0xFA4B08", VA = "0xFA4B08", Slot = "1")]
		~tGen()
		{
		}

		[Token(Token = "0x60013B6")]
		[Address(RVA = "0xFA4B78", Offset = "0xFA4B78", VA = "0xFA4B78", Slot = "6")]
		public virtual void Dispose()
		{
		}

		[Token(Token = "0x60013BB")]
		[Address(RVA = "0xFA4E74", Offset = "0xFA4E74", VA = "0xFA4E74")]
		public tGen()
		{
		}
	}

	[Token(Token = "0x200023E")]
	public class tNoteOnOff : IDisposable
	{
		[Token(Token = "0x4000B50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr swigCPtr;

		[Token(Token = "0x4000B51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected bool swigCMemOwn;

		[Token(Token = "0x17000287")]
		public byte byNote
		{
			[Token(Token = "0x60013C2")]
			[Address(RVA = "0xFA5568", Offset = "0xFA5568", VA = "0xFA5568")]
			get
			{
				return default(byte);
			}
			[Token(Token = "0x60013C1")]
			[Address(RVA = "0xFA54EC", Offset = "0xFA54EC", VA = "0xFA54EC")]
			set
			{
			}
		}

		[Token(Token = "0x17000288")]
		public byte byVelocity
		{
			[Token(Token = "0x60013C4")]
			[Address(RVA = "0xFA5650", Offset = "0xFA5650", VA = "0xFA5650")]
			get
			{
				return default(byte);
			}
			[Token(Token = "0x60013C3")]
			[Address(RVA = "0xFA55D4", Offset = "0xFA55D4", VA = "0xFA55D4")]
			set
			{
			}
		}

		[Token(Token = "0x60013BC")]
		[Address(RVA = "0xFA3118", Offset = "0xFA3118", VA = "0xFA3118")]
		internal tNoteOnOff(IntPtr cPtr, bool cMemoryOwn)
		{
		}

		[Token(Token = "0x60013BD")]
		[Address(RVA = "0xFA3018", Offset = "0xFA3018", VA = "0xFA3018")]
		internal static IntPtr getCPtr(tNoteOnOff obj)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x60013BE")]
		[Address(RVA = "0xFA531C", Offset = "0xFA531C", VA = "0xFA531C", Slot = "5")]
		internal virtual void setCPtr(IntPtr cPtr)
		{
		}

		[Token(Token = "0x60013BF")]
		[Address(RVA = "0xFA5350", Offset = "0xFA5350", VA = "0xFA5350", Slot = "1")]
		~tNoteOnOff()
		{
		}

		[Token(Token = "0x60013C0")]
		[Address(RVA = "0xFA53C0", Offset = "0xFA53C0", VA = "0xFA53C0", Slot = "6")]
		public virtual void Dispose()
		{
		}

		[Token(Token = "0x60013C5")]
		[Address(RVA = "0xFA56BC", Offset = "0xFA56BC", VA = "0xFA56BC")]
		public tNoteOnOff()
		{
		}
	}

	[Token(Token = "0x200023F")]
	public class tCc : IDisposable
	{
		[Token(Token = "0x4000B52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr swigCPtr;

		[Token(Token = "0x4000B53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected bool swigCMemOwn;

		[Token(Token = "0x17000289")]
		public byte byCc
		{
			[Token(Token = "0x60013CC")]
			[Address(RVA = "0xFA45C0", Offset = "0xFA45C0", VA = "0xFA45C0")]
			get
			{
				return default(byte);
			}
			[Token(Token = "0x60013CB")]
			[Address(RVA = "0xFA4544", Offset = "0xFA4544", VA = "0xFA4544")]
			set
			{
			}
		}

		[Token(Token = "0x1700028A")]
		public byte byValue
		{
			[Token(Token = "0x60013CE")]
			[Address(RVA = "0xFA46A8", Offset = "0xFA46A8", VA = "0xFA46A8")]
			get
			{
				return default(byte);
			}
			[Token(Token = "0x60013CD")]
			[Address(RVA = "0xFA462C", Offset = "0xFA462C", VA = "0xFA462C")]
			set
			{
			}
		}

		[Token(Token = "0x60013C6")]
		[Address(RVA = "0xFA2F30", Offset = "0xFA2F30", VA = "0xFA2F30")]
		internal tCc(IntPtr cPtr, bool cMemoryOwn)
		{
		}

		[Token(Token = "0x60013C7")]
		[Address(RVA = "0xFA2E30", Offset = "0xFA2E30", VA = "0xFA2E30")]
		internal static IntPtr getCPtr(tCc obj)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x60013C8")]
		[Address(RVA = "0xFA4374", Offset = "0xFA4374", VA = "0xFA4374", Slot = "5")]
		internal virtual void setCPtr(IntPtr cPtr)
		{
		}

		[Token(Token = "0x60013C9")]
		[Address(RVA = "0xFA43A8", Offset = "0xFA43A8", VA = "0xFA43A8", Slot = "1")]
		~tCc()
		{
		}

		[Token(Token = "0x60013CA")]
		[Address(RVA = "0xFA4418", Offset = "0xFA4418", VA = "0xFA4418", Slot = "6")]
		public virtual void Dispose()
		{
		}

		[Token(Token = "0x60013CF")]
		[Address(RVA = "0xFA4714", Offset = "0xFA4714", VA = "0xFA4714")]
		public tCc()
		{
		}
	}

	[Token(Token = "0x2000240")]
	public class tPitchBend : IDisposable
	{
		[Token(Token = "0x4000B54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr swigCPtr;

		[Token(Token = "0x4000B55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected bool swigCMemOwn;

		[Token(Token = "0x1700028B")]
		public byte byValueLsb
		{
			[Token(Token = "0x60013D6")]
			[Address(RVA = "0xFA598C", Offset = "0xFA598C", VA = "0xFA598C")]
			get
			{
				return default(byte);
			}
			[Token(Token = "0x60013D5")]
			[Address(RVA = "0xFA5910", Offset = "0xFA5910", VA = "0xFA5910")]
			set
			{
			}
		}

		[Token(Token = "0x1700028C")]
		public byte byValueMsb
		{
			[Token(Token = "0x60013D8")]
			[Address(RVA = "0xFA5A74", Offset = "0xFA5A74", VA = "0xFA5A74")]
			get
			{
				return default(byte);
			}
			[Token(Token = "0x60013D7")]
			[Address(RVA = "0xFA59F8", Offset = "0xFA59F8", VA = "0xFA59F8")]
			set
			{
			}
		}

		[Token(Token = "0x60013D0")]
		[Address(RVA = "0xFA3300", Offset = "0xFA3300", VA = "0xFA3300")]
		internal tPitchBend(IntPtr cPtr, bool cMemoryOwn)
		{
		}

		[Token(Token = "0x60013D1")]
		[Address(RVA = "0xFA3200", Offset = "0xFA3200", VA = "0xFA3200")]
		internal static IntPtr getCPtr(tPitchBend obj)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x60013D2")]
		[Address(RVA = "0xFA5740", Offset = "0xFA5740", VA = "0xFA5740", Slot = "5")]
		internal virtual void setCPtr(IntPtr cPtr)
		{
		}

		[Token(Token = "0x60013D3")]
		[Address(RVA = "0xFA5774", Offset = "0xFA5774", VA = "0xFA5774", Slot = "1")]
		~tPitchBend()
		{
		}

		[Token(Token = "0x60013D4")]
		[Address(RVA = "0xFA57E4", Offset = "0xFA57E4", VA = "0xFA57E4", Slot = "6")]
		public virtual void Dispose()
		{
		}

		[Token(Token = "0x60013D9")]
		[Address(RVA = "0xFA5AE0", Offset = "0xFA5AE0", VA = "0xFA5AE0")]
		public tPitchBend()
		{
		}
	}

	[Token(Token = "0x2000241")]
	public class tNoteAftertouch : IDisposable
	{
		[Token(Token = "0x4000B56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr swigCPtr;

		[Token(Token = "0x4000B57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected bool swigCMemOwn;

		[Token(Token = "0x1700028D")]
		public byte byNote
		{
			[Token(Token = "0x60013E0")]
			[Address(RVA = "0xFA5144", Offset = "0xFA5144", VA = "0xFA5144")]
			get
			{
				return default(byte);
			}
			[Token(Token = "0x60013DF")]
			[Address(RVA = "0xFA50C8", Offset = "0xFA50C8", VA = "0xFA50C8")]
			set
			{
			}
		}

		[Token(Token = "0x1700028E")]
		public byte byValue
		{
			[Token(Token = "0x60013E2")]
			[Address(RVA = "0xFA522C", Offset = "0xFA522C", VA = "0xFA522C")]
			get
			{
				return default(byte);
			}
			[Token(Token = "0x60013E1")]
			[Address(RVA = "0xFA51B0", Offset = "0xFA51B0", VA = "0xFA51B0")]
			set
			{
			}
		}

		[Token(Token = "0x60013DA")]
		[Address(RVA = "0xFA34E8", Offset = "0xFA34E8", VA = "0xFA34E8")]
		internal tNoteAftertouch(IntPtr cPtr, bool cMemoryOwn)
		{
		}

		[Token(Token = "0x60013DB")]
		[Address(RVA = "0xFA33E8", Offset = "0xFA33E8", VA = "0xFA33E8")]
		internal static IntPtr getCPtr(tNoteAftertouch obj)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x60013DC")]
		[Address(RVA = "0xFA4EF8", Offset = "0xFA4EF8", VA = "0xFA4EF8", Slot = "5")]
		internal virtual void setCPtr(IntPtr cPtr)
		{
		}

		[Token(Token = "0x60013DD")]
		[Address(RVA = "0xFA4F2C", Offset = "0xFA4F2C", VA = "0xFA4F2C", Slot = "1")]
		~tNoteAftertouch()
		{
		}

		[Token(Token = "0x60013DE")]
		[Address(RVA = "0xFA4F9C", Offset = "0xFA4F9C", VA = "0xFA4F9C", Slot = "6")]
		public virtual void Dispose()
		{
		}

		[Token(Token = "0x60013E3")]
		[Address(RVA = "0xFA5298", Offset = "0xFA5298", VA = "0xFA5298")]
		public tNoteAftertouch()
		{
		}
	}

	[Token(Token = "0x2000242")]
	public class tChanAftertouch : IDisposable
	{
		[Token(Token = "0x4000B58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr swigCPtr;

		[Token(Token = "0x4000B59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected bool swigCMemOwn;

		[Token(Token = "0x1700028F")]
		public byte byValue
		{
			[Token(Token = "0x60013EA")]
			[Address(RVA = "0xFA49E4", Offset = "0xFA49E4", VA = "0xFA49E4")]
			get
			{
				return default(byte);
			}
			[Token(Token = "0x60013E9")]
			[Address(RVA = "0xFA4968", Offset = "0xFA4968", VA = "0xFA4968")]
			set
			{
			}
		}

		[Token(Token = "0x60013E4")]
		[Address(RVA = "0xFA36D0", Offset = "0xFA36D0", VA = "0xFA36D0")]
		internal tChanAftertouch(IntPtr cPtr, bool cMemoryOwn)
		{
		}

		[Token(Token = "0x60013E5")]
		[Address(RVA = "0xFA35D0", Offset = "0xFA35D0", VA = "0xFA35D0")]
		internal static IntPtr getCPtr(tChanAftertouch obj)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x60013E6")]
		[Address(RVA = "0xFA4798", Offset = "0xFA4798", VA = "0xFA4798", Slot = "5")]
		internal virtual void setCPtr(IntPtr cPtr)
		{
		}

		[Token(Token = "0x60013E7")]
		[Address(RVA = "0xFA47CC", Offset = "0xFA47CC", VA = "0xFA47CC", Slot = "1")]
		~tChanAftertouch()
		{
		}

		[Token(Token = "0x60013E8")]
		[Address(RVA = "0xFA483C", Offset = "0xFA483C", VA = "0xFA483C", Slot = "6")]
		public virtual void Dispose()
		{
		}

		[Token(Token = "0x60013EB")]
		[Address(RVA = "0xFA4A50", Offset = "0xFA4A50", VA = "0xFA4A50")]
		public tChanAftertouch()
		{
		}
	}

	[Token(Token = "0x2000243")]
	public class tProgramChange : IDisposable
	{
		[Token(Token = "0x4000B5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr swigCPtr;

		[Token(Token = "0x4000B5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected bool swigCMemOwn;

		[Token(Token = "0x17000290")]
		public byte byProgramNum
		{
			[Token(Token = "0x60013F2")]
			[Address(RVA = "0xFA5DB0", Offset = "0xFA5DB0", VA = "0xFA5DB0")]
			get
			{
				return default(byte);
			}
			[Token(Token = "0x60013F1")]
			[Address(RVA = "0xFA5D34", Offset = "0xFA5D34", VA = "0xFA5D34")]
			set
			{
			}
		}

		[Token(Token = "0x60013EC")]
		[Address(RVA = "0xFA38B8", Offset = "0xFA38B8", VA = "0xFA38B8")]
		internal tProgramChange(IntPtr cPtr, bool cMemoryOwn)
		{
		}

		[Token(Token = "0x60013ED")]
		[Address(RVA = "0xFA37B8", Offset = "0xFA37B8", VA = "0xFA37B8")]
		internal static IntPtr getCPtr(tProgramChange obj)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x60013EE")]
		[Address(RVA = "0xFA5B64", Offset = "0xFA5B64", VA = "0xFA5B64", Slot = "5")]
		internal virtual void setCPtr(IntPtr cPtr)
		{
		}

		[Token(Token = "0x60013EF")]
		[Address(RVA = "0xFA5B98", Offset = "0xFA5B98", VA = "0xFA5B98", Slot = "1")]
		~tProgramChange()
		{
		}

		[Token(Token = "0x60013F0")]
		[Address(RVA = "0xFA5C08", Offset = "0xFA5C08", VA = "0xFA5C08", Slot = "6")]
		public virtual void Dispose()
		{
		}

		[Token(Token = "0x60013F3")]
		[Address(RVA = "0xFA5E1C", Offset = "0xFA5E1C", VA = "0xFA5E1C")]
		public tProgramChange()
		{
		}
	}

	[Token(Token = "0x4000660")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4000661")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x170000D5")]
	public byte byChan
	{
		[Token(Token = "0x6000BD0")]
		[Address(RVA = "0xFA2B34", Offset = "0xFA2B34", VA = "0xFA2B34")]
		get
		{
			return default(byte);
		}
		[Token(Token = "0x6000BCF")]
		[Address(RVA = "0xFA2AB8", Offset = "0xFA2AB8", VA = "0xFA2AB8")]
		set
		{
		}
	}

	[Token(Token = "0x170000D6")]
	public tGen Gen
	{
		[Token(Token = "0x6000BD2")]
		[Address(RVA = "0xFA2C98", Offset = "0xFA2C98", VA = "0xFA2C98")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000BD1")]
		[Address(RVA = "0xFA2BA0", Offset = "0xFA2BA0", VA = "0xFA2BA0")]
		set
		{
		}
	}

	[Token(Token = "0x170000D7")]
	public tCc Cc
	{
		[Token(Token = "0x6000BD4")]
		[Address(RVA = "0xFA2E80", Offset = "0xFA2E80", VA = "0xFA2E80")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000BD3")]
		[Address(RVA = "0xFA2D88", Offset = "0xFA2D88", VA = "0xFA2D88")]
		set
		{
		}
	}

	[Token(Token = "0x170000D8")]
	public tNoteOnOff NoteOnOff
	{
		[Token(Token = "0x6000BD6")]
		[Address(RVA = "0xFA3068", Offset = "0xFA3068", VA = "0xFA3068")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000BD5")]
		[Address(RVA = "0xFA2F70", Offset = "0xFA2F70", VA = "0xFA2F70")]
		set
		{
		}
	}

	[Token(Token = "0x170000D9")]
	public tPitchBend PitchBend
	{
		[Token(Token = "0x6000BD8")]
		[Address(RVA = "0xFA3250", Offset = "0xFA3250", VA = "0xFA3250")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000BD7")]
		[Address(RVA = "0xFA3158", Offset = "0xFA3158", VA = "0xFA3158")]
		set
		{
		}
	}

	[Token(Token = "0x170000DA")]
	public tNoteAftertouch NoteAftertouch
	{
		[Token(Token = "0x6000BDA")]
		[Address(RVA = "0xFA3438", Offset = "0xFA3438", VA = "0xFA3438")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000BD9")]
		[Address(RVA = "0xFA3340", Offset = "0xFA3340", VA = "0xFA3340")]
		set
		{
		}
	}

	[Token(Token = "0x170000DB")]
	public tChanAftertouch ChanAftertouch
	{
		[Token(Token = "0x6000BDC")]
		[Address(RVA = "0xFA3620", Offset = "0xFA3620", VA = "0xFA3620")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000BDB")]
		[Address(RVA = "0xFA3528", Offset = "0xFA3528", VA = "0xFA3528")]
		set
		{
		}
	}

	[Token(Token = "0x170000DC")]
	public tProgramChange ProgramChange
	{
		[Token(Token = "0x6000BDE")]
		[Address(RVA = "0xFA3808", Offset = "0xFA3808", VA = "0xFA3808")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000BDD")]
		[Address(RVA = "0xFA3710", Offset = "0xFA3710", VA = "0xFA3710")]
		set
		{
		}
	}

	[Token(Token = "0x170000DD")]
	public AkMIDIEventTypes byType
	{
		[Token(Token = "0x6000BE0")]
		[Address(RVA = "0xFA3974", Offset = "0xFA3974", VA = "0xFA3974")]
		get
		{
			return default(AkMIDIEventTypes);
		}
		[Token(Token = "0x6000BDF")]
		[Address(RVA = "0xFA38F8", Offset = "0xFA38F8", VA = "0xFA38F8")]
		set
		{
		}
	}

	[Token(Token = "0x170000DE")]
	public byte byOnOffNote
	{
		[Token(Token = "0x6000BE2")]
		[Address(RVA = "0xFA3A5C", Offset = "0xFA3A5C", VA = "0xFA3A5C")]
		get
		{
			return default(byte);
		}
		[Token(Token = "0x6000BE1")]
		[Address(RVA = "0xFA39E0", Offset = "0xFA39E0", VA = "0xFA39E0")]
		set
		{
		}
	}

	[Token(Token = "0x170000DF")]
	public byte byVelocity
	{
		[Token(Token = "0x6000BE4")]
		[Address(RVA = "0xFA3B44", Offset = "0xFA3B44", VA = "0xFA3B44")]
		get
		{
			return default(byte);
		}
		[Token(Token = "0x6000BE3")]
		[Address(RVA = "0xFA3AC8", Offset = "0xFA3AC8", VA = "0xFA3AC8")]
		set
		{
		}
	}

	[Token(Token = "0x170000E0")]
	public AkMIDICcTypes byCc
	{
		[Token(Token = "0x6000BE6")]
		[Address(RVA = "0xFA3C2C", Offset = "0xFA3C2C", VA = "0xFA3C2C")]
		get
		{
			return default(AkMIDICcTypes);
		}
		[Token(Token = "0x6000BE5")]
		[Address(RVA = "0xFA3BB0", Offset = "0xFA3BB0", VA = "0xFA3BB0")]
		set
		{
		}
	}

	[Token(Token = "0x170000E1")]
	public byte byCcValue
	{
		[Token(Token = "0x6000BE8")]
		[Address(RVA = "0xFA3D14", Offset = "0xFA3D14", VA = "0xFA3D14")]
		get
		{
			return default(byte);
		}
		[Token(Token = "0x6000BE7")]
		[Address(RVA = "0xFA3C98", Offset = "0xFA3C98", VA = "0xFA3C98")]
		set
		{
		}
	}

	[Token(Token = "0x170000E2")]
	public byte byValueLsb
	{
		[Token(Token = "0x6000BEA")]
		[Address(RVA = "0xFA3DFC", Offset = "0xFA3DFC", VA = "0xFA3DFC")]
		get
		{
			return default(byte);
		}
		[Token(Token = "0x6000BE9")]
		[Address(RVA = "0xFA3D80", Offset = "0xFA3D80", VA = "0xFA3D80")]
		set
		{
		}
	}

	[Token(Token = "0x170000E3")]
	public byte byValueMsb
	{
		[Token(Token = "0x6000BEC")]
		[Address(RVA = "0xFA3EE4", Offset = "0xFA3EE4", VA = "0xFA3EE4")]
		get
		{
			return default(byte);
		}
		[Token(Token = "0x6000BEB")]
		[Address(RVA = "0xFA3E68", Offset = "0xFA3E68", VA = "0xFA3E68")]
		set
		{
		}
	}

	[Token(Token = "0x170000E4")]
	public byte byAftertouchNote
	{
		[Token(Token = "0x6000BEE")]
		[Address(RVA = "0xFA3FCC", Offset = "0xFA3FCC", VA = "0xFA3FCC")]
		get
		{
			return default(byte);
		}
		[Token(Token = "0x6000BED")]
		[Address(RVA = "0xFA3F50", Offset = "0xFA3F50", VA = "0xFA3F50")]
		set
		{
		}
	}

	[Token(Token = "0x170000E5")]
	public byte byNoteAftertouchValue
	{
		[Token(Token = "0x6000BF0")]
		[Address(RVA = "0xFA40B4", Offset = "0xFA40B4", VA = "0xFA40B4")]
		get
		{
			return default(byte);
		}
		[Token(Token = "0x6000BEF")]
		[Address(RVA = "0xFA4038", Offset = "0xFA4038", VA = "0xFA4038")]
		set
		{
		}
	}

	[Token(Token = "0x170000E6")]
	public byte byChanAftertouchValue
	{
		[Token(Token = "0x6000BF2")]
		[Address(RVA = "0xFA419C", Offset = "0xFA419C", VA = "0xFA419C")]
		get
		{
			return default(byte);
		}
		[Token(Token = "0x6000BF1")]
		[Address(RVA = "0xFA4120", Offset = "0xFA4120", VA = "0xFA4120")]
		set
		{
		}
	}

	[Token(Token = "0x170000E7")]
	public byte byProgramNum
	{
		[Token(Token = "0x6000BF4")]
		[Address(RVA = "0xFA4284", Offset = "0xFA4284", VA = "0xFA4284")]
		get
		{
			return default(byte);
		}
		[Token(Token = "0x6000BF3")]
		[Address(RVA = "0xFA4208", Offset = "0xFA4208", VA = "0xFA4208")]
		set
		{
		}
	}

	[Token(Token = "0x6000BCA")]
	[Address(RVA = "0xFA2858", Offset = "0xFA2858", VA = "0xFA2858")]
	internal AkMIDIEvent(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6000BCB")]
	[Address(RVA = "0xFA2898", Offset = "0xFA2898", VA = "0xFA2898")]
	internal static IntPtr getCPtr(AkMIDIEvent obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6000BCC")]
	[Address(RVA = "0xFA28E8", Offset = "0xFA28E8", VA = "0xFA28E8", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6000BCD")]
	[Address(RVA = "0xFA291C", Offset = "0xFA291C", VA = "0xFA291C", Slot = "1")]
	~AkMIDIEvent()
	{
	}

	[Token(Token = "0x6000BCE")]
	[Address(RVA = "0xFA298C", Offset = "0xFA298C", VA = "0xFA298C", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6000BF5")]
	[Address(RVA = "0xFA42F0", Offset = "0xFA42F0", VA = "0xFA42F0")]
	public AkMIDIEvent()
	{
	}
}
[Token(Token = "0x20000EC")]
public class AkMIDIEventCallbackInfo : AkEventCallbackInfo
{
	[Token(Token = "0x4000662")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private IntPtr swigCPtr;

	[Token(Token = "0x170000E8")]
	public byte byChan
	{
		[Token(Token = "0x6000BFB")]
		[Address(RVA = "0xFA61B8", Offset = "0xFA61B8", VA = "0xFA61B8")]
		get
		{
			return default(byte);
		}
	}

	[Token(Token = "0x170000E9")]
	public byte byParam1
	{
		[Token(Token = "0x6000BFC")]
		[Address(RVA = "0xFA6224", Offset = "0xFA6224", VA = "0xFA6224")]
		get
		{
			return default(byte);
		}
	}

	[Token(Token = "0x170000EA")]
	public byte byParam2
	{
		[Token(Token = "0x6000BFD")]
		[Address(RVA = "0xFA6290", Offset = "0xFA6290", VA = "0xFA6290")]
		get
		{
			return default(byte);
		}
	}

	[Token(Token = "0x170000EB")]
	public AkMIDIEventTypes byType
	{
		[Token(Token = "0x6000BFE")]
		[Address(RVA = "0xFA62FC", Offset = "0xFA62FC", VA = "0xFA62FC")]
		get
		{
			return default(AkMIDIEventTypes);
		}
	}

	[Token(Token = "0x170000EC")]
	public byte byOnOffNote
	{
		[Token(Token = "0x6000BFF")]
		[Address(RVA = "0xFA6368", Offset = "0xFA6368", VA = "0xFA6368")]
		get
		{
			return default(byte);
		}
	}

	[Token(Token = "0x170000ED")]
	public byte byVelocity
	{
		[Token(Token = "0x6000C00")]
		[Address(RVA = "0xFA63D4", Offset = "0xFA63D4", VA = "0xFA63D4")]
		get
		{
			return default(byte);
		}
	}

	[Token(Token = "0x170000EE")]
	public AkMIDICcTypes byCc
	{
		[Token(Token = "0x6000C01")]
		[Address(RVA = "0xFA6440", Offset = "0xFA6440", VA = "0xFA6440")]
		get
		{
			return default(AkMIDICcTypes);
		}
	}

	[Token(Token = "0x170000EF")]
	public byte byCcValue
	{
		[Token(Token = "0x6000C02")]
		[Address(RVA = "0xFA64AC", Offset = "0xFA64AC", VA = "0xFA64AC")]
		get
		{
			return default(byte);
		}
	}

	[Token(Token = "0x170000F0")]
	public byte byValueLsb
	{
		[Token(Token = "0x6000C03")]
		[Address(RVA = "0xFA6518", Offset = "0xFA6518", VA = "0xFA6518")]
		get
		{
			return default(byte);
		}
	}

	[Token(Token = "0x170000F1")]
	public byte byValueMsb
	{
		[Token(Token = "0x6000C04")]
		[Address(RVA = "0xFA6584", Offset = "0xFA6584", VA = "0xFA6584")]
		get
		{
			return default(byte);
		}
	}

	[Token(Token = "0x170000F2")]
	public byte byAftertouchNote
	{
		[Token(Token = "0x6000C05")]
		[Address(RVA = "0xFA65F0", Offset = "0xFA65F0", VA = "0xFA65F0")]
		get
		{
			return default(byte);
		}
	}

	[Token(Token = "0x170000F3")]
	public byte byNoteAftertouchValue
	{
		[Token(Token = "0x6000C06")]
		[Address(RVA = "0xFA665C", Offset = "0xFA665C", VA = "0xFA665C")]
		get
		{
			return default(byte);
		}
	}

	[Token(Token = "0x170000F4")]
	public byte byChanAftertouchValue
	{
		[Token(Token = "0x6000C07")]
		[Address(RVA = "0xFA66C8", Offset = "0xFA66C8", VA = "0xFA66C8")]
		get
		{
			return default(byte);
		}
	}

	[Token(Token = "0x170000F5")]
	public byte byProgramNum
	{
		[Token(Token = "0x6000C08")]
		[Address(RVA = "0xFA6734", Offset = "0xFA6734", VA = "0xFA6734")]
		get
		{
			return default(byte);
		}
	}

	[Token(Token = "0x6000BF6")]
	[Address(RVA = "0xFA5EA0", Offset = "0xFA5EA0", VA = "0xFA5EA0")]
	internal AkMIDIEventCallbackInfo(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6000BF7")]
	[Address(RVA = "0xFA5F34", Offset = "0xFA5F34", VA = "0xFA5F34")]
	internal static IntPtr getCPtr(AkMIDIEventCallbackInfo obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6000BF8")]
	[Address(RVA = "0xFA5F84", Offset = "0xFA5F84", VA = "0xFA5F84", Slot = "5")]
	internal override void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6000BF9")]
	[Address(RVA = "0xFA6010", Offset = "0xFA6010", VA = "0xFA6010", Slot = "1")]
	~AkMIDIEventCallbackInfo()
	{
	}

	[Token(Token = "0x6000BFA")]
	[Address(RVA = "0xFA6080", Offset = "0xFA6080", VA = "0xFA6080", Slot = "6")]
	public override void Dispose()
	{
	}

	[Token(Token = "0x6000C09")]
	[Address(RVA = "0xFA67A0", Offset = "0xFA67A0", VA = "0xFA67A0")]
	public AkMIDIEventCallbackInfo()
	{
	}
}
[Token(Token = "0x20000ED")]
public enum AkMIDIEventTypes
{
	[Token(Token = "0x4000664")]
	NOTE_OFF = 128,
	[Token(Token = "0x4000665")]
	NOTE_ON = 144,
	[Token(Token = "0x4000666")]
	NOTE_AFTERTOUCH = 160,
	[Token(Token = "0x4000667")]
	CONTROLLER = 176,
	[Token(Token = "0x4000668")]
	PROGRAM_CHANGE = 192,
	[Token(Token = "0x4000669")]
	CHANNEL_AFTERTOUCH = 208,
	[Token(Token = "0x400066A")]
	PITCH_BEND = 224,
	[Token(Token = "0x400066B")]
	SYSEX = 240,
	[Token(Token = "0x400066C")]
	ESCAPE = 247,
	[Token(Token = "0x400066D")]
	META = 255
}
[Token(Token = "0x20000EE")]
public class AkMIDIPost : AkMIDIEvent
{
	[Token(Token = "0x400066E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private IntPtr swigCPtr;

	[Token(Token = "0x170000F6")]
	public uint uOffset
	{
		[Token(Token = "0x6000C10")]
		[Address(RVA = "0xFA6BAC", Offset = "0xFA6BAC", VA = "0xFA6BAC")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6000C0F")]
		[Address(RVA = "0xFA6B30", Offset = "0xFA6B30", VA = "0xFA6B30")]
		set
		{
		}
	}

	[Token(Token = "0x6000C0A")]
	[Address(RVA = "0xFA6814", Offset = "0xFA6814", VA = "0xFA6814")]
	internal AkMIDIPost(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6000C0B")]
	[Address(RVA = "0xFA68B0", Offset = "0xFA68B0", VA = "0xFA68B0")]
	internal static IntPtr getCPtr(AkMIDIPost obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6000C0C")]
	[Address(RVA = "0xFA6900", Offset = "0xFA6900", VA = "0xFA6900", Slot = "5")]
	internal override void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6000C0D")]
	[Address(RVA = "0xFA6994", Offset = "0xFA6994", VA = "0xFA6994", Slot = "1")]
	~AkMIDIPost()
	{
	}

	[Token(Token = "0x6000C0E")]
	[Address(RVA = "0xFA69FC", Offset = "0xFA69FC", VA = "0xFA69FC", Slot = "6")]
	public override void Dispose()
	{
	}

	[Token(Token = "0x6000C11")]
	[Address(RVA = "0xFA6C18", Offset = "0xFA6C18", VA = "0xFA6C18")]
	public AKRESULT PostOnEvent(uint in_eventID, GameObject in_gameObjectID, uint in_uNumPosts)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000C12")]
	[Address(RVA = "0xFA6CEC", Offset = "0xFA6CEC", VA = "0xFA6CEC")]
	public void Clone(AkMIDIPost other)
	{
	}

	[Token(Token = "0x6000C13")]
	[Address(RVA = "0xFA6D94", Offset = "0xFA6D94", VA = "0xFA6D94")]
	public static int GetSizeOf()
	{
		return default(int);
	}

	[Token(Token = "0x6000C14")]
	[Address(RVA = "0xFA6DF4", Offset = "0xFA6DF4", VA = "0xFA6DF4")]
	public AkMIDIPost()
	{
	}
}
[Token(Token = "0x20000EF")]
public class AkMarkerCallbackInfo : AkEventCallbackInfo
{
	[Token(Token = "0x400066F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private IntPtr swigCPtr;

	[Token(Token = "0x170000F7")]
	public uint uIdentifier
	{
		[Token(Token = "0x6000C1A")]
		[Address(RVA = "0xFA772C", Offset = "0xFA772C", VA = "0xFA772C")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x170000F8")]
	public uint uPosition
	{
		[Token(Token = "0x6000C1B")]
		[Address(RVA = "0xFA7798", Offset = "0xFA7798", VA = "0xFA7798")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x170000F9")]
	public string strLabel
	{
		[Token(Token = "0x6000C1C")]
		[Address(RVA = "0xFA7804", Offset = "0xFA7804", VA = "0xFA7804")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000C15")]
	[Address(RVA = "0xFA7414", Offset = "0xFA7414", VA = "0xFA7414")]
	internal AkMarkerCallbackInfo(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6000C16")]
	[Address(RVA = "0xFA74A8", Offset = "0xFA74A8", VA = "0xFA74A8")]
	internal static IntPtr getCPtr(AkMarkerCallbackInfo obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6000C17")]
	[Address(RVA = "0xFA74F8", Offset = "0xFA74F8", VA = "0xFA74F8", Slot = "5")]
	internal override void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6000C18")]
	[Address(RVA = "0xFA7584", Offset = "0xFA7584", VA = "0xFA7584", Slot = "1")]
	~AkMarkerCallbackInfo()
	{
	}

	[Token(Token = "0x6000C19")]
	[Address(RVA = "0xFA75F4", Offset = "0xFA75F4", VA = "0xFA75F4", Slot = "6")]
	public override void Dispose()
	{
	}

	[Token(Token = "0x6000C1D")]
	[Address(RVA = "0xFA78A4", Offset = "0xFA78A4", VA = "0xFA78A4")]
	public AkMarkerCallbackInfo()
	{
	}
}
[Token(Token = "0x20000F0")]
public class AkMemSettings : IDisposable
{
	[Token(Token = "0x4000670")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4000671")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x170000FA")]
	public uint uMaxNumPools
	{
		[Token(Token = "0x6000C25")]
		[Address(RVA = "0xFA83F8", Offset = "0xFA83F8", VA = "0xFA83F8")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6000C24")]
		[Address(RVA = "0xFA837C", Offset = "0xFA837C", VA = "0xFA837C")]
		set
		{
		}
	}

	[Token(Token = "0x170000FB")]
	public uint uDebugFlags
	{
		[Token(Token = "0x6000C27")]
		[Address(RVA = "0xFA84E0", Offset = "0xFA84E0", VA = "0xFA84E0")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6000C26")]
		[Address(RVA = "0xFA8464", Offset = "0xFA8464", VA = "0xFA8464")]
		set
		{
		}
	}

	[Token(Token = "0x6000C1E")]
	[Address(RVA = "0xFA06C8", Offset = "0xFA06C8", VA = "0xFA06C8")]
	internal AkMemSettings(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6000C1F")]
	[Address(RVA = "0xFA05C8", Offset = "0xFA05C8", VA = "0xFA05C8")]
	internal static IntPtr getCPtr(AkMemSettings obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6000C20")]
	[Address(RVA = "0xFA8128", Offset = "0xFA8128", VA = "0xFA8128", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6000C21")]
	[Address(RVA = "0xFA815C", Offset = "0xFA815C", VA = "0xFA815C", Slot = "1")]
	~AkMemSettings()
	{
	}

	[Token(Token = "0x6000C22")]
	[Address(RVA = "0xFA81CC", Offset = "0xFA81CC", VA = "0xFA81CC", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6000C23")]
	[Address(RVA = "0xFA82F8", Offset = "0xFA82F8", VA = "0xFA82F8")]
	public AkMemSettings()
	{
	}
}
[Token(Token = "0x20000F1")]
public enum AkMeteringFlags
{
	[Token(Token = "0x4000673")]
	AK_NoMetering = 0,
	[Token(Token = "0x4000674")]
	AK_EnableBusMeter_Peak = 1,
	[Token(Token = "0x4000675")]
	AK_EnableBusMeter_TruePeak = 2,
	[Token(Token = "0x4000676")]
	AK_EnableBusMeter_RMS = 4,
	[Token(Token = "0x4000677")]
	AK_EnableBusMeter_KPower = 0x10,
	[Token(Token = "0x4000678")]
	AK_EnableBusMeter_3DMeter = 0x20
}
[Token(Token = "0x20000F2")]
public enum AkMonitorErrorCode
{
	[Token(Token = "0x400067A")]
	ErrorCode_NoError,
	[Token(Token = "0x400067B")]
	ErrorCode_FileNotFound,
	[Token(Token = "0x400067C")]
	ErrorCode_CannotOpenFile,
	[Token(Token = "0x400067D")]
	ErrorCode_CannotStartStreamNoMemory,
	[Token(Token = "0x400067E")]
	ErrorCode_IODevice,
	[Token(Token = "0x400067F")]
	ErrorCode_IncompatibleIOSettings,
	[Token(Token = "0x4000680")]
	ErrorCode_PluginUnsupportedChannelConfiguration,
	[Token(Token = "0x4000681")]
	ErrorCode_PluginMediaUnavailable,
	[Token(Token = "0x4000682")]
	ErrorCode_PluginInitialisationFailed,
	[Token(Token = "0x4000683")]
	ErrorCode_PluginProcessingFailed,
	[Token(Token = "0x4000684")]
	ErrorCode_PluginExecutionInvalid,
	[Token(Token = "0x4000685")]
	ErrorCode_PluginAllocationFailed,
	[Token(Token = "0x4000686")]
	ErrorCode_VorbisRequireSeekTable,
	[Token(Token = "0x4000687")]
	ErrorCode_VorbisDecodeError,
	[Token(Token = "0x4000688")]
	ErrorCode_AACDecodeError,
	[Token(Token = "0x4000689")]
	ErrorCode_xWMACreateDecoderFailed,
	[Token(Token = "0x400068A")]
	ErrorCode_ATRAC9CreateDecoderFailed,
	[Token(Token = "0x400068B")]
	ErrorCode_ATRAC9CreateDecoderFailedChShortage,
	[Token(Token = "0x400068C")]
	ErrorCode_ATRAC9DecodeFailed,
	[Token(Token = "0x400068D")]
	ErrorCode_ATRAC9ClearContextFailed,
	[Token(Token = "0x400068E")]
	ErrorCode_ATRAC9LoopSectionTooSmall,
	[Token(Token = "0x400068F")]
	ErrorCode_InvalidAudioFileHeader,
	[Token(Token = "0x4000690")]
	ErrorCode_AudioFileHeaderTooLarge,
	[Token(Token = "0x4000691")]
	ErrorCode_FileTooSmall,
	[Token(Token = "0x4000692")]
	ErrorCode_TransitionNotAccurateChannel,
	[Token(Token = "0x4000693")]
	ErrorCode_TransitionNotAccurateStarvation,
	[Token(Token = "0x4000694")]
	ErrorCode_NothingToPlay,
	[Token(Token = "0x4000695")]
	ErrorCode_PlayFailed,
	[Token(Token = "0x4000696")]
	ErrorCode_StingerCouldNotBeScheduled,
	[Token(Token = "0x4000697")]
	ErrorCode_TooLongSegmentLookAhead,
	[Token(Token = "0x4000698")]
	ErrorCode_CannotScheduleMusicSwitch,
	[Token(Token = "0x4000699")]
	ErrorCode_TooManySimultaneousMusicSegments,
	[Token(Token = "0x400069A")]
	ErrorCode_PlaylistStoppedForEditing,
	[Token(Token = "0x400069B")]
	ErrorCode_MusicClipsRescheduledAfterTrackEdit,
	[Token(Token = "0x400069C")]
	ErrorCode_CannotPlaySource_Create,
	[Token(Token = "0x400069D")]
	ErrorCode_CannotPlaySource_VirtualOff,
	[Token(Token = "0x400069E")]
	ErrorCode_CannotPlaySource_TimeSkip,
	[Token(Token = "0x400069F")]
	ErrorCode_CannotPlaySource_InconsistentState,
	[Token(Token = "0x40006A0")]
	ErrorCode_MediaNotLoaded,
	[Token(Token = "0x40006A1")]
	ErrorCode_VoiceStarving,
	[Token(Token = "0x40006A2")]
	ErrorCode_StreamingSourceStarving,
	[Token(Token = "0x40006A3")]
	ErrorCode_XMADecoderSourceStarving,
	[Token(Token = "0x40006A4")]
	ErrorCode_XMADecodingError,
	[Token(Token = "0x40006A5")]
	ErrorCode_InvalidXMAData,
	[Token(Token = "0x40006A6")]
	ErrorCode_PluginNotRegistered,
	[Token(Token = "0x40006A7")]
	ErrorCode_CodecNotRegistered,
	[Token(Token = "0x40006A8")]
	ErrorCode_PluginVersionMismatch,
	[Token(Token = "0x40006A9")]
	ErrorCode_EventIDNotFound,
	[Token(Token = "0x40006AA")]
	ErrorCode_InvalidGroupID,
	[Token(Token = "0x40006AB")]
	ErrorCode_SelectedChildNotAvailable,
	[Token(Token = "0x40006AC")]
	ErrorCode_SelectedNodeNotAvailable,
	[Token(Token = "0x40006AD")]
	ErrorCode_SelectedMediaNotAvailable,
	[Token(Token = "0x40006AE")]
	ErrorCode_NoValidSwitch,
	[Token(Token = "0x40006AF")]
	ErrorCode_SelectedNodeNotAvailablePlay,
	[Token(Token = "0x40006B0")]
	ErrorCode_FeedbackVoiceStarving,
	[Token(Token = "0x40006B1")]
	ErrorCode_BankLoadFailed,
	[Token(Token = "0x40006B2")]
	ErrorCode_BankUnloadFailed,
	[Token(Token = "0x40006B3")]
	ErrorCode_ErrorWhileLoadingBank,
	[Token(Token = "0x40006B4")]
	ErrorCode_InsufficientSpaceToLoadBank,
	[Token(Token = "0x40006B5")]
	ErrorCode_LowerEngineCommandListFull,
	[Token(Token = "0x40006B6")]
	ErrorCode_SeekNoMarker,
	[Token(Token = "0x40006B7")]
	ErrorCode_CannotSeekContinuous,
	[Token(Token = "0x40006B8")]
	ErrorCode_SeekAfterEof,
	[Token(Token = "0x40006B9")]
	ErrorCode_UnknownGameObject,
	[Token(Token = "0x40006BA")]
	ErrorCode_UnknownEmitter,
	[Token(Token = "0x40006BB")]
	ErrorCode_UnknownListener,
	[Token(Token = "0x40006BC")]
	ErrorCode_GameObjectIsNotListener,
	[Token(Token = "0x40006BD")]
	ErrorCode_GameObjectIsNotEmitter,
	[Token(Token = "0x40006BE")]
	ErrorCode_UnknownGameObjectEvent,
	[Token(Token = "0x40006BF")]
	ErrorCode_GameObjectIsNotEmitterEvent,
	[Token(Token = "0x40006C0")]
	ErrorCode_ExternalSourceNotResolved,
	[Token(Token = "0x40006C1")]
	ErrorCode_FileFormatMismatch,
	[Token(Token = "0x40006C2")]
	ErrorCode_CommandQueueFull,
	[Token(Token = "0x40006C3")]
	ErrorCode_CommandTooLarge,
	[Token(Token = "0x40006C4")]
	ErrorCode_XMACreateDecoderLimitReached,
	[Token(Token = "0x40006C5")]
	ErrorCode_XMAStreamBufferTooSmall,
	[Token(Token = "0x40006C6")]
	ErrorCode_ModulatorScopeError_Inst,
	[Token(Token = "0x40006C7")]
	ErrorCode_ModulatorScopeError_Obj,
	[Token(Token = "0x40006C8")]
	ErrorCode_SeekAfterEndOfPlaylist,
	[Token(Token = "0x40006C9")]
	ErrorCode_OpusRequireSeekTable,
	[Token(Token = "0x40006CA")]
	ErrorCode_OpusDecodeError,
	[Token(Token = "0x40006CB")]
	ErrorCode_OpusCreateDecoderFailed,
	[Token(Token = "0x40006CC")]
	ErrorCode_SourcePluginNotFound,
	[Token(Token = "0x40006CD")]
	ErrorCode_VirtualVoiceLimit,
	[Token(Token = "0x40006CE")]
	ErrorCode_AudioDeviceShareSetNotFound,
	[Token(Token = "0x40006CF")]
	ErrorCode_NotEnoughMemoryToStart,
	[Token(Token = "0x40006D0")]
	ErrorCode_UnkownOpusError,
	[Token(Token = "0x40006D1")]
	ErrorCode_AudioDeviceInitFailure,
	[Token(Token = "0x40006D2")]
	ErrorCode_AudioDeviceRemoveFailure,
	[Token(Token = "0x40006D3")]
	ErrorCode_AudioDeviceNotFound,
	[Token(Token = "0x40006D4")]
	ErrorCode_AudioDeviceNotValid,
	[Token(Token = "0x40006D5")]
	ErrorCode_MediaDuplicationLength,
	[Token(Token = "0x40006D6")]
	Num_ErrorCodes
}
[Token(Token = "0x20000F3")]
public enum AkMonitorErrorLevel
{
	[Token(Token = "0x40006D8")]
	ErrorLevel_Message = 1,
	[Token(Token = "0x40006D9")]
	ErrorLevel_Error,
	[Token(Token = "0x40006DA")]
	ErrorLevel_All
}
[Token(Token = "0x20000F4")]
public class AkMonitoringCallbackInfo : IDisposable
{
	[Token(Token = "0x40006DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x40006DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x170000FC")]
	public AkMonitorErrorCode errorCode
	{
		[Token(Token = "0x6000C2D")]
		[Address(RVA = "0xFA87AC", Offset = "0xFA87AC", VA = "0xFA87AC")]
		get
		{
			return default(AkMonitorErrorCode);
		}
	}

	[Token(Token = "0x170000FD")]
	public AkMonitorErrorLevel errorLevel
	{
		[Token(Token = "0x6000C2E")]
		[Address(RVA = "0xFA8818", Offset = "0xFA8818", VA = "0xFA8818")]
		get
		{
			return default(AkMonitorErrorLevel);
		}
	}

	[Token(Token = "0x170000FE")]
	public uint playingID
	{
		[Token(Token = "0x6000C2F")]
		[Address(RVA = "0xFA8884", Offset = "0xFA8884", VA = "0xFA8884")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x170000FF")]
	public ulong gameObjID
	{
		[Token(Token = "0x6000C30")]
		[Address(RVA = "0xFA88F0", Offset = "0xFA88F0", VA = "0xFA88F0")]
		get
		{
			return default(ulong);
		}
	}

	[Token(Token = "0x17000100")]
	public string message
	{
		[Token(Token = "0x6000C31")]
		[Address(RVA = "0xFA895C", Offset = "0xFA895C", VA = "0xFA895C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000C28")]
	[Address(RVA = "0xFA854C", Offset = "0xFA854C", VA = "0xFA854C")]
	internal AkMonitoringCallbackInfo(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6000C29")]
	[Address(RVA = "0xFA858C", Offset = "0xFA858C", VA = "0xFA858C")]
	internal static IntPtr getCPtr(AkMonitoringCallbackInfo obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6000C2A")]
	[Address(RVA = "0xFA85DC", Offset = "0xFA85DC", VA = "0xFA85DC", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6000C2B")]
	[Address(RVA = "0xFA8610", Offset = "0xFA8610", VA = "0xFA8610", Slot = "1")]
	~AkMonitoringCallbackInfo()
	{
	}

	[Token(Token = "0x6000C2C")]
	[Address(RVA = "0xFA8680", Offset = "0xFA8680", VA = "0xFA8680", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6000C32")]
	[Address(RVA = "0xFA89FC", Offset = "0xFA89FC", VA = "0xFA89FC")]
	public AkMonitoringCallbackInfo()
	{
	}
}
[Token(Token = "0x20000F5")]
public enum AkMultiPositionType
{
	[Token(Token = "0x40006DE")]
	MultiPositionType_SingleSource,
	[Token(Token = "0x40006DF")]
	MultiPositionType_MultiSources,
	[Token(Token = "0x40006E0")]
	MultiPositionType_MultiDirections
}
[Token(Token = "0x20000F6")]
public class AkMusicPlaylistCallbackInfo : AkEventCallbackInfo
{
	[Token(Token = "0x40006E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private IntPtr swigCPtr;

	[Token(Token = "0x17000101")]
	public uint playlistID
	{
		[Token(Token = "0x6000C38")]
		[Address(RVA = "0xFA8E10", Offset = "0xFA8E10", VA = "0xFA8E10")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x17000102")]
	public uint uNumPlaylistItems
	{
		[Token(Token = "0x6000C39")]
		[Address(RVA = "0xFA8E7C", Offset = "0xFA8E7C", VA = "0xFA8E7C")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x17000103")]
	public uint uPlaylistSelection
	{
		[Token(Token = "0x6000C3A")]
		[Address(RVA = "0xFA8EE8", Offset = "0xFA8EE8", VA = "0xFA8EE8")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x17000104")]
	public uint uPlaylistItemDone
	{
		[Token(Token = "0x6000C3B")]
		[Address(RVA = "0xFA8F54", Offset = "0xFA8F54", VA = "0xFA8F54")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x6000C33")]
	[Address(RVA = "0xFA8AF8", Offset = "0xFA8AF8", VA = "0xFA8AF8")]
	internal AkMusicPlaylistCallbackInfo(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6000C34")]
	[Address(RVA = "0xFA8B8C", Offset = "0xFA8B8C", VA = "0xFA8B8C")]
	internal static IntPtr getCPtr(AkMusicPlaylistCallbackInfo obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6000C35")]
	[Address(RVA = "0xFA8BDC", Offset = "0xFA8BDC", VA = "0xFA8BDC", Slot = "5")]
	internal override void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6000C36")]
	[Address(RVA = "0xFA8C68", Offset = "0xFA8C68", VA = "0xFA8C68", Slot = "1")]
	~AkMusicPlaylistCallbackInfo()
	{
	}

	[Token(Token = "0x6000C37")]
	[Address(RVA = "0xFA8CD8", Offset = "0xFA8CD8", VA = "0xFA8CD8", Slot = "6")]
	public override void Dispose()
	{
	}

	[Token(Token = "0x6000C3C")]
	[Address(RVA = "0xFA8FC0", Offset = "0xFA8FC0", VA = "0xFA8FC0")]
	public AkMusicPlaylistCallbackInfo()
	{
	}
}
[Token(Token = "0x20000F7")]
public class AkMusicSettings : IDisposable
{
	[Token(Token = "0x40006E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x40006E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x17000105")]
	public float fStreamingLookAheadRatio
	{
		[Token(Token = "0x6000C43")]
		[Address(RVA = "0xFA9280", Offset = "0xFA9280", VA = "0xFA9280")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000C42")]
		[Address(RVA = "0xFA9204", Offset = "0xFA9204", VA = "0xFA9204")]
		set
		{
		}
	}

	[Token(Token = "0x6000C3D")]
	[Address(RVA = "0xFA0E70", Offset = "0xFA0E70", VA = "0xFA0E70")]
	internal AkMusicSettings(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6000C3E")]
	[Address(RVA = "0xFA0D70", Offset = "0xFA0D70", VA = "0xFA0D70")]
	internal static IntPtr getCPtr(AkMusicSettings obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6000C3F")]
	[Address(RVA = "0xFA9034", Offset = "0xFA9034", VA = "0xFA9034", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6000C40")]
	[Address(RVA = "0xFA9068", Offset = "0xFA9068", VA = "0xFA9068", Slot = "1")]
	~AkMusicSettings()
	{
	}

	[Token(Token = "0x6000C41")]
	[Address(RVA = "0xFA90D8", Offset = "0xFA90D8", VA = "0xFA90D8", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6000C44")]
	[Address(RVA = "0xFA92EC", Offset = "0xFA92EC", VA = "0xFA92EC")]
	public AkMusicSettings()
	{
	}
}
[Token(Token = "0x20000F8")]
public class AkMusicSyncCallbackInfo : AkCallbackInfo
{
	[Token(Token = "0x40006E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private IntPtr swigCPtr;

	[Token(Token = "0x17000106")]
	public uint playingID
	{
		[Token(Token = "0x6000C4A")]
		[Address(RVA = "0xFA9688", Offset = "0xFA9688", VA = "0xFA9688")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x17000107")]
	public int segmentInfo_iCurrentPosition
	{
		[Token(Token = "0x6000C4B")]
		[Address(RVA = "0xFA96F4", Offset = "0xFA96F4", VA = "0xFA96F4")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000108")]
	public int segmentInfo_iPreEntryDuration
	{
		[Token(Token = "0x6000C4C")]
		[Address(RVA = "0xFA9760", Offset = "0xFA9760", VA = "0xFA9760")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000109")]
	public int segmentInfo_iActiveDuration
	{
		[Token(Token = "0x6000C4D")]
		[Address(RVA = "0xFA97CC", Offset = "0xFA97CC", VA = "0xFA97CC")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700010A")]
	public int segmentInfo_iPostExitDuration
	{
		[Token(Token = "0x6000C4E")]
		[Address(RVA = "0xFA9838", Offset = "0xFA9838", VA = "0xFA9838")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700010B")]
	public int segmentInfo_iRemainingLookAheadTime
	{
		[Token(Token = "0x6000C4F")]
		[Address(RVA = "0xFA98A4", Offset = "0xFA98A4", VA = "0xFA98A4")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700010C")]
	public float segmentInfo_fBeatDuration
	{
		[Token(Token = "0x6000C50")]
		[Address(RVA = "0xFA9910", Offset = "0xFA9910", VA = "0xFA9910")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700010D")]
	public float segmentInfo_fBarDuration
	{
		[Token(Token = "0x6000C51")]
		[Address(RVA = "0xFA997C", Offset = "0xFA997C", VA = "0xFA997C")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700010E")]
	public float segmentInfo_fGridDuration
	{
		[Token(Token = "0x6000C52")]
		[Address(RVA = "0xFA99E8", Offset = "0xFA99E8", VA = "0xFA99E8")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700010F")]
	public float segmentInfo_fGridOffset
	{
		[Token(Token = "0x6000C53")]
		[Address(RVA = "0xFA9A54", Offset = "0xFA9A54", VA = "0xFA9A54")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000110")]
	public AkCallbackType musicSyncType
	{
		[Token(Token = "0x6000C54")]
		[Address(RVA = "0xFA9AC0", Offset = "0xFA9AC0", VA = "0xFA9AC0")]
		get
		{
			return default(AkCallbackType);
		}
	}

	[Token(Token = "0x17000111")]
	public string userCueName
	{
		[Token(Token = "0x6000C55")]
		[Address(RVA = "0xFA9B2C", Offset = "0xFA9B2C", VA = "0xFA9B2C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000C45")]
	[Address(RVA = "0xFA9370", Offset = "0xFA9370", VA = "0xFA9370")]
	internal AkMusicSyncCallbackInfo(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6000C46")]
	[Address(RVA = "0xFA9404", Offset = "0xFA9404", VA = "0xFA9404")]
	internal static IntPtr getCPtr(AkMusicSyncCallbackInfo obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6000C47")]
	[Address(RVA = "0xFA9454", Offset = "0xFA9454", VA = "0xFA9454", Slot = "5")]
	internal override void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6000C48")]
	[Address(RVA = "0xFA94E0", Offset = "0xFA94E0", VA = "0xFA94E0", Slot = "1")]
	~AkMusicSyncCallbackInfo()
	{
	}

	[Token(Token = "0x6000C49")]
	[Address(RVA = "0xFA9550", Offset = "0xFA9550", VA = "0xFA9550", Slot = "6")]
	public override void Dispose()
	{
	}

	[Token(Token = "0x6000C56")]
	[Address(RVA = "0xFA9BCC", Offset = "0xFA9BCC", VA = "0xFA9BCC")]
	public AkMusicSyncCallbackInfo()
	{
	}
}
[Token(Token = "0x20000F9")]
public class AkObjectInfo : IDisposable
{
	[Token(Token = "0x40006E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x40006E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x17000112")]
	public uint objID
	{
		[Token(Token = "0x6000C5D")]
		[Address(RVA = "0xFA9F1C", Offset = "0xFA9F1C", VA = "0xFA9F1C")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6000C5C")]
		[Address(RVA = "0xFA9EA0", Offset = "0xFA9EA0", VA = "0xFA9EA0")]
		set
		{
		}
	}

	[Token(Token = "0x17000113")]
	public uint parentID
	{
		[Token(Token = "0x6000C5F")]
		[Address(RVA = "0xFAA004", Offset = "0xFAA004", VA = "0xFAA004")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6000C5E")]
		[Address(RVA = "0xFA9F88", Offset = "0xFA9F88", VA = "0xFA9F88")]
		set
		{
		}
	}

	[Token(Token = "0x17000114")]
	public int iDepth
	{
		[Token(Token = "0x6000C61")]
		[Address(RVA = "0xFAA0EC", Offset = "0xFAA0EC", VA = "0xFAA0EC")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000C60")]
		[Address(RVA = "0xFAA070", Offset = "0xFAA070", VA = "0xFAA070")]
		set
		{
		}
	}

	[Token(Token = "0x6000C57")]
	[Address(RVA = "0xFA9C40", Offset = "0xFA9C40", VA = "0xFA9C40")]
	internal AkObjectInfo(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6000C58")]
	[Address(RVA = "0xFA9C80", Offset = "0xFA9C80", VA = "0xFA9C80")]
	internal static IntPtr getCPtr(AkObjectInfo obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6000C59")]
	[Address(RVA = "0xFA9CD0", Offset = "0xFA9CD0", VA = "0xFA9CD0", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6000C5A")]
	[Address(RVA = "0xFA9D04", Offset = "0xFA9D04", VA = "0xFA9D04", Slot = "1")]
	~AkObjectInfo()
	{
	}

	[Token(Token = "0x6000C5B")]
	[Address(RVA = "0xFA9D74", Offset = "0xFA9D74", VA = "0xFA9D74", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6000C62")]
	[Address(RVA = "0xFAA158", Offset = "0xFAA158", VA = "0xFAA158")]
	public void Clear()
	{
	}

	[Token(Token = "0x6000C63")]
	[Address(RVA = "0xFAA1C4", Offset = "0xFAA1C4", VA = "0xFAA1C4")]
	public static int GetSizeOf()
	{
		return default(int);
	}

	[Token(Token = "0x6000C64")]
	[Address(RVA = "0xFAA224", Offset = "0xFAA224", VA = "0xFAA224")]
	public void Clone(AkObjectInfo other)
	{
	}

	[Token(Token = "0x6000C65")]
	[Address(RVA = "0xFAA2CC", Offset = "0xFAA2CC", VA = "0xFAA2CC")]
	public AkObjectInfo()
	{
	}
}
[Token(Token = "0x20000FA")]
public class AkObstructionOcclusionValues : IDisposable
{
	[Token(Token = "0x40006E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x40006E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x17000115")]
	public float occlusion
	{
		[Token(Token = "0x6000C6C")]
		[Address(RVA = "0xFAB1A0", Offset = "0xFAB1A0", VA = "0xFAB1A0")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000C6B")]
		[Address(RVA = "0xFAB124", Offset = "0xFAB124", VA = "0xFAB124")]
		set
		{
		}
	}

	[Token(Token = "0x17000116")]
	public float obstruction
	{
		[Token(Token = "0x6000C6E")]
		[Address(RVA = "0xFAB288", Offset = "0xFAB288", VA = "0xFAB288")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000C6D")]
		[Address(RVA = "0xFAB20C", Offset = "0xFAB20C", VA = "0xFAB20C")]
		set
		{
		}
	}

	[Token(Token = "0x6000C66")]
	[Address(RVA = "0xFAAEC4", Offset = "0xFAAEC4", VA = "0xFAAEC4")]
	internal AkObstructionOcclusionValues(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6000C67")]
	[Address(RVA = "0xFAAF04", Offset = "0xFAAF04", VA = "0xFAAF04")]
	internal static IntPtr getCPtr(AkObstructionOcclusionValues obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6000C68")]
	[Address(RVA = "0xFAAF54", Offset = "0xFAAF54", VA = "0xFAAF54", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6000C69")]
	[Address(RVA = "0xFAAF88", Offset = "0xFAAF88", VA = "0xFAAF88", Slot = "1")]
	~AkObstructionOcclusionValues()
	{
	}

	[Token(Token = "0x6000C6A")]
	[Address(RVA = "0xFAAFF8", Offset = "0xFAAFF8", VA = "0xFAAFF8", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6000C6F")]
	[Address(RVA = "0xFAB2F4", Offset = "0xFAB2F4", VA = "0xFAB2F4")]
	public void Clear()
	{
	}

	[Token(Token = "0x6000C70")]
	[Address(RVA = "0xFAB360", Offset = "0xFAB360", VA = "0xFAB360")]
	public static int GetSizeOf()
	{
		return default(int);
	}

	[Token(Token = "0x6000C71")]
	[Address(RVA = "0xFAB3C0", Offset = "0xFAB3C0", VA = "0xFAB3C0")]
	public void Clone(AkObstructionOcclusionValues other)
	{
	}

	[Token(Token = "0x6000C72")]
	[Address(RVA = "0xFAB468", Offset = "0xFAB468", VA = "0xFAB468")]
	public AkObstructionOcclusionValues()
	{
	}
}
[Token(Token = "0x20000FB")]
public class AkOutputSettings : IDisposable
{
	[Token(Token = "0x40006E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x40006EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x17000117")]
	public uint audioDeviceShareset
	{
		[Token(Token = "0x6000C7E")]
		[Address(RVA = "0xFABCA8", Offset = "0xFABCA8", VA = "0xFABCA8")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6000C7D")]
		[Address(RVA = "0xFABC2C", Offset = "0xFABC2C", VA = "0xFABC2C")]
		set
		{
		}
	}

	[Token(Token = "0x17000118")]
	public uint idDevice
	{
		[Token(Token = "0x6000C80")]
		[Address(RVA = "0xFABD90", Offset = "0xFABD90", VA = "0xFABD90")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6000C7F")]
		[Address(RVA = "0xFABD14", Offset = "0xFABD14", VA = "0xFABD14")]
		set
		{
		}
	}

	[Token(Token = "0x17000119")]
	public AkPanningRule ePanningRule
	{
		[Token(Token = "0x6000C82")]
		[Address(RVA = "0xFABE78", Offset = "0xFABE78", VA = "0xFABE78")]
		get
		{
			return default(AkPanningRule);
		}
		[Token(Token = "0x6000C81")]
		[Address(RVA = "0xFABDFC", Offset = "0xFABDFC", VA = "0xFABDFC")]
		set
		{
		}
	}

	[Token(Token = "0x1700011A")]
	public AkChannelConfig channelConfig
	{
		[Token(Token = "0x6000C84")]
		[Address(RVA = "0xFABF74", Offset = "0xFABF74", VA = "0xFABF74")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000C83")]
		[Address(RVA = "0xFABEE4", Offset = "0xFABEE4", VA = "0xFABEE4")]
		set
		{
		}
	}

	[Token(Token = "0x6000C73")]
	[Address(RVA = "0xF9FAEC", Offset = "0xF9FAEC", VA = "0xF9FAEC")]
	internal AkOutputSettings(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6000C74")]
	[Address(RVA = "0xF9F9EC", Offset = "0xF9F9EC", VA = "0xF9F9EC")]
	internal static IntPtr getCPtr(AkOutputSettings obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6000C75")]
	[Address(RVA = "0xFAB720", Offset = "0xFAB720", VA = "0xFAB720", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6000C76")]
	[Address(RVA = "0xFAB754", Offset = "0xFAB754", VA = "0xFAB754", Slot = "1")]
	~AkOutputSettings()
	{
	}

	[Token(Token = "0x6000C77")]
	[Address(RVA = "0xFAB7C4", Offset = "0xFAB7C4", VA = "0xFAB7C4", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6000C78")]
	[Address(RVA = "0xFAB8F0", Offset = "0xFAB8F0", VA = "0xFAB8F0")]
	public AkOutputSettings()
	{
	}

	[Token(Token = "0x6000C79")]
	[Address(RVA = "0xFAB974", Offset = "0xFAB974", VA = "0xFAB974")]
	public AkOutputSettings(string in_szDeviceShareSet, uint in_idDevice, AkChannelConfig in_channelConfig, AkPanningRule in_ePanning)
	{
	}

	[Token(Token = "0x6000C7A")]
	[Address(RVA = "0xFABA3C", Offset = "0xFABA3C", VA = "0xFABA3C")]
	public AkOutputSettings(string in_szDeviceShareSet, uint in_idDevice, AkChannelConfig in_channelConfig)
	{
	}

	[Token(Token = "0x6000C7B")]
	[Address(RVA = "0xFABAFC", Offset = "0xFABAFC", VA = "0xFABAFC")]
	public AkOutputSettings(string in_szDeviceShareSet, uint in_idDevice)
	{
	}

	[Token(Token = "0x6000C7C")]
	[Address(RVA = "0xFABB98", Offset = "0xFABB98", VA = "0xFABB98")]
	public AkOutputSettings(string in_szDeviceShareSet)
	{
	}
}
[Token(Token = "0x20000FC")]
public enum AkPanningRule
{
	[Token(Token = "0x40006EC")]
	AkPanningRule_Speakers,
	[Token(Token = "0x40006ED")]
	AkPanningRule_Headphones
}
[Token(Token = "0x20000FD")]
public class AkPathParams : IDisposable
{
	[Token(Token = "0x40006EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x40006EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x1700011B")]
	public AkVector listenerPos
	{
		[Token(Token = "0x6000C8B")]
		[Address(RVA = "0xFAC314", Offset = "0xFAC314", VA = "0xFAC314")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000C8A")]
		[Address(RVA = "0xFAC284", Offset = "0xFAC284", VA = "0xFAC284")]
		set
		{
		}
	}

	[Token(Token = "0x1700011C")]
	public AkVector emitterPos
	{
		[Token(Token = "0x6000C8D")]
		[Address(RVA = "0xFAC454", Offset = "0xFAC454", VA = "0xFAC454")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000C8C")]
		[Address(RVA = "0xFAC3C4", Offset = "0xFAC3C4", VA = "0xFAC3C4")]
		set
		{
		}
	}

	[Token(Token = "0x1700011D")]
	public uint numValidPaths
	{
		[Token(Token = "0x6000C8F")]
		[Address(RVA = "0xFAC580", Offset = "0xFAC580", VA = "0xFAC580")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6000C8E")]
		[Address(RVA = "0xFAC504", Offset = "0xFAC504", VA = "0xFAC504")]
		set
		{
		}
	}

	[Token(Token = "0x6000C85")]
	[Address(RVA = "0xFAC024", Offset = "0xFAC024", VA = "0xFAC024")]
	internal AkPathParams(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6000C86")]
	[Address(RVA = "0xFAC064", Offset = "0xFAC064", VA = "0xFAC064")]
	internal static IntPtr getCPtr(AkPathParams obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6000C87")]
	[Address(RVA = "0xFAC0B4", Offset = "0xFAC0B4", VA = "0xFAC0B4", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6000C88")]
	[Address(RVA = "0xFAC0E8", Offset = "0xFAC0E8", VA = "0xFAC0E8", Slot = "1")]
	~AkPathParams()
	{
	}

	[Token(Token = "0x6000C89")]
	[Address(RVA = "0xFAC158", Offset = "0xFAC158", VA = "0xFAC158", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6000C90")]
	[Address(RVA = "0xFAC5EC", Offset = "0xFAC5EC", VA = "0xFAC5EC")]
	public AkPathParams()
	{
	}
}
[Token(Token = "0x20000FE")]
public class AkPlaylist : AkPlaylistArray
{
	[Token(Token = "0x40006F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private IntPtr swigCPtr;

	[Token(Token = "0x6000C91")]
	[Address(RVA = "0xFAD41C", Offset = "0xFAD41C", VA = "0xFAD41C")]
	internal AkPlaylist(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6000C92")]
	[Address(RVA = "0xFAD4F8", Offset = "0xFAD4F8", VA = "0xFAD4F8")]
	internal static IntPtr getCPtr(AkPlaylist obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6000C93")]
	[Address(RVA = "0xFAD548", Offset = "0xFAD548", VA = "0xFAD548", Slot = "5")]
	internal override void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6000C94")]
	[Address(RVA = "0xFAD610", Offset = "0xFAD610", VA = "0xFAD610", Slot = "1")]
	~AkPlaylist()
	{
	}

	[Token(Token = "0x6000C95")]
	[Address(RVA = "0xFAD6E8", Offset = "0xFAD6E8", VA = "0xFAD6E8", Slot = "6")]
	public override void Dispose()
	{
	}

	[Token(Token = "0x6000C96")]
	[Address(RVA = "0xFAD948", Offset = "0xFAD948", VA = "0xFAD948")]
	public AKRESULT Enqueue(uint in_audioNodeID, int in_msDelay, IntPtr in_pCustomInfo, uint in_cExternals, AkExternalSourceInfoArray in_pExternalSources)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000C97")]
	[Address(RVA = "0xFADA00", Offset = "0xFADA00", VA = "0xFADA00")]
	public AKRESULT Enqueue(uint in_audioNodeID, int in_msDelay, IntPtr in_pCustomInfo, uint in_cExternals)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000C98")]
	[Address(RVA = "0xFADA9C", Offset = "0xFADA9C", VA = "0xFADA9C")]
	public AKRESULT Enqueue(uint in_audioNodeID, int in_msDelay, IntPtr in_pCustomInfo)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000C99")]
	[Address(RVA = "0xFADB30", Offset = "0xFADB30", VA = "0xFADB30")]
	public AKRESULT Enqueue(uint in_audioNodeID, int in_msDelay)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000C9A")]
	[Address(RVA = "0xFADBB4", Offset = "0xFADBB4", VA = "0xFADBB4")]
	public AKRESULT Enqueue(uint in_audioNodeID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000C9B")]
	[Address(RVA = "0xFADC30", Offset = "0xFADC30", VA = "0xFADC30")]
	public AkPlaylist()
	{
	}
}
[Token(Token = "0x20000FF")]
public class AkPlaylistArray : IDisposable
{
	[Token(Token = "0x40006F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x40006F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x6000C9C")]
	[Address(RVA = "0xFAD4B8", Offset = "0xFAD4B8", VA = "0xFAD4B8")]
	internal AkPlaylistArray(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6000C9D")]
	[Address(RVA = "0xFADCA4", Offset = "0xFADCA4", VA = "0xFADCA4")]
	internal static IntPtr getCPtr(AkPlaylistArray obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6000C9E")]
	[Address(RVA = "0xFAD5DC", Offset = "0xFAD5DC", VA = "0xFAD5DC", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6000C9F")]
	[Address(RVA = "0xFAD678", Offset = "0xFAD678", VA = "0xFAD678", Slot = "1")]
	~AkPlaylistArray()
	{
	}

	[Token(Token = "0x6000CA0")]
	[Address(RVA = "0xFAD81C", Offset = "0xFAD81C", VA = "0xFAD81C", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6000CA1")]
	[Address(RVA = "0xFADCF4", Offset = "0xFADCF4", VA = "0xFADCF4")]
	public AkPlaylistArray()
	{
	}

	[Token(Token = "0x6000CA2")]
	[Address(RVA = "0xFADD78", Offset = "0xFADD78", VA = "0xFADD78")]
	public AkIterator Begin()
	{
		return null;
	}

	[Token(Token = "0x6000CA3")]
	[Address(RVA = "0xFADE1C", Offset = "0xFADE1C", VA = "0xFADE1C")]
	public AkIterator End()
	{
		return null;
	}

	[Token(Token = "0x6000CA4")]
	[Address(RVA = "0xFADEC0", Offset = "0xFADEC0", VA = "0xFADEC0")]
	public AkIterator FindEx(AkPlaylistItem in_Item)
	{
		return null;
	}

	[Token(Token = "0x6000CA5")]
	[Address(RVA = "0xFADFA0", Offset = "0xFADFA0", VA = "0xFADFA0")]
	public AkIterator Erase(AkIterator in_rIter)
	{
		return null;
	}

	[Token(Token = "0x6000CA6")]
	[Address(RVA = "0xFAE080", Offset = "0xFAE080", VA = "0xFAE080")]
	public void Erase(uint in_uIndex)
	{
	}

	[Token(Token = "0x6000CA7")]
	[Address(RVA = "0xFAE0FC", Offset = "0xFAE0FC", VA = "0xFAE0FC")]
	public AkIterator EraseSwap(AkIterator in_rIter)
	{
		return null;
	}

	[Token(Token = "0x6000CA8")]
	[Address(RVA = "0xFAE1DC", Offset = "0xFAE1DC", VA = "0xFAE1DC")]
	public AKRESULT Reserve(uint in_ulReserve)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000CA9")]
	[Address(RVA = "0xFAE258", Offset = "0xFAE258", VA = "0xFAE258")]
	public uint Reserved()
	{
		return default(uint);
	}

	[Token(Token = "0x6000CAA")]
	[Address(RVA = "0xFAE2C4", Offset = "0xFAE2C4", VA = "0xFAE2C4")]
	public void Term()
	{
	}

	[Token(Token = "0x6000CAB")]
	[Address(RVA = "0xFAE330", Offset = "0xFAE330", VA = "0xFAE330")]
	public uint Length()
	{
		return default(uint);
	}

	[Token(Token = "0x6000CAC")]
	[Address(RVA = "0xFAE39C", Offset = "0xFAE39C", VA = "0xFAE39C")]
	public AkPlaylistItem Data()
	{
		return null;
	}

	[Token(Token = "0x6000CAD")]
	[Address(RVA = "0xFAE44C", Offset = "0xFAE44C", VA = "0xFAE44C")]
	public bool IsEmpty()
	{
		return default(bool);
	}

	[Token(Token = "0x6000CAE")]
	[Address(RVA = "0xFAE4B8", Offset = "0xFAE4B8", VA = "0xFAE4B8")]
	public AkPlaylistItem Exists(AkPlaylistItem in_Item)
	{
		return null;
	}

	[Token(Token = "0x6000CAF")]
	[Address(RVA = "0xFAE5A4", Offset = "0xFAE5A4", VA = "0xFAE5A4")]
	public AkPlaylistItem AddLast()
	{
		return null;
	}

	[Token(Token = "0x6000CB0")]
	[Address(RVA = "0xFAE654", Offset = "0xFAE654", VA = "0xFAE654")]
	public AkPlaylistItem AddLast(AkPlaylistItem in_rItem)
	{
		return null;
	}

	[Token(Token = "0x6000CB1")]
	[Address(RVA = "0xFAE740", Offset = "0xFAE740", VA = "0xFAE740")]
	public AkPlaylistItem Last()
	{
		return null;
	}

	[Token(Token = "0x6000CB2")]
	[Address(RVA = "0xFAE7E0", Offset = "0xFAE7E0", VA = "0xFAE7E0")]
	public void RemoveLast()
	{
	}

	[Token(Token = "0x6000CB3")]
	[Address(RVA = "0xFAE84C", Offset = "0xFAE84C", VA = "0xFAE84C")]
	public AKRESULT Remove(AkPlaylistItem in_rItem)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000CB4")]
	[Address(RVA = "0xFAE8F4", Offset = "0xFAE8F4", VA = "0xFAE8F4")]
	public AKRESULT RemoveSwap(AkPlaylistItem in_rItem)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000CB5")]
	[Address(RVA = "0xFAE99C", Offset = "0xFAE99C", VA = "0xFAE99C")]
	public void RemoveAll()
	{
	}

	[Token(Token = "0x6000CB6")]
	[Address(RVA = "0xFAEA08", Offset = "0xFAEA08", VA = "0xFAEA08")]
	public AkPlaylistItem ItemAtIndex(uint uiIndex)
	{
		return null;
	}

	[Token(Token = "0x6000CB7")]
	[Address(RVA = "0xFAEAB8", Offset = "0xFAEAB8", VA = "0xFAEAB8")]
	public AkPlaylistItem Insert(uint in_uIndex)
	{
		return null;
	}

	[Token(Token = "0x6000CB8")]
	[Address(RVA = "0xFAEB78", Offset = "0xFAEB78", VA = "0xFAEB78")]
	public bool GrowArray(uint in_uGrowBy)
	{
		return default(bool);
	}

	[Token(Token = "0x6000CB9")]
	[Address(RVA = "0xFAEBF4", Offset = "0xFAEBF4", VA = "0xFAEBF4")]
	public bool GrowArray()
	{
		return default(bool);
	}

	[Token(Token = "0x6000CBA")]
	[Address(RVA = "0xFAEC60", Offset = "0xFAEC60", VA = "0xFAEC60")]
	public bool Resize(uint in_uiSize)
	{
		return default(bool);
	}

	[Token(Token = "0x6000CBB")]
	[Address(RVA = "0xFAECDC", Offset = "0xFAECDC", VA = "0xFAECDC")]
	public void Transfer(AkPlaylistArray in_rSource)
	{
	}

	[Token(Token = "0x6000CBC")]
	[Address(RVA = "0xFAED84", Offset = "0xFAED84", VA = "0xFAED84")]
	public AKRESULT Copy(AkPlaylistArray in_rSource)
	{
		return default(AKRESULT);
	}
}
[Token(Token = "0x2000100")]
public class AkPlaylistItem : IDisposable
{
	[Token(Token = "0x40006F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x40006F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x1700011E")]
	public uint audioNodeID
	{
		[Token(Token = "0x6000CC8")]
		[Address(RVA = "0xFAF3D0", Offset = "0xFAF3D0", VA = "0xFAF3D0")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6000CC7")]
		[Address(RVA = "0xFAF354", Offset = "0xFAF354", VA = "0xFAF354")]
		set
		{
		}
	}

	[Token(Token = "0x1700011F")]
	public int msDelay
	{
		[Token(Token = "0x6000CCA")]
		[Address(RVA = "0xFAF4B8", Offset = "0xFAF4B8", VA = "0xFAF4B8")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000CC9")]
		[Address(RVA = "0xFAF43C", Offset = "0xFAF43C", VA = "0xFAF43C")]
		set
		{
		}
	}

	[Token(Token = "0x17000120")]
	public IntPtr pCustomInfo
	{
		[Token(Token = "0x6000CCC")]
		[Address(RVA = "0xFAF5A0", Offset = "0xFAF5A0", VA = "0xFAF5A0")]
		get
		{
			return default(IntPtr);
		}
		[Token(Token = "0x6000CCB")]
		[Address(RVA = "0xFAF524", Offset = "0xFAF524", VA = "0xFAF524")]
		set
		{
		}
	}

	[Token(Token = "0x6000CBD")]
	[Address(RVA = "0xFA1B9C", Offset = "0xFA1B9C", VA = "0xFA1B9C")]
	internal AkPlaylistItem(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6000CBE")]
	[Address(RVA = "0xFA1A9C", Offset = "0xFA1A9C", VA = "0xFA1A9C")]
	internal static IntPtr getCPtr(AkPlaylistItem obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6000CBF")]
	[Address(RVA = "0xFAEE2C", Offset = "0xFAEE2C", VA = "0xFAEE2C", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6000CC0")]
	[Address(RVA = "0xFAEE60", Offset = "0xFAEE60", VA = "0xFAEE60", Slot = "1")]
	~AkPlaylistItem()
	{
	}

	[Token(Token = "0x6000CC1")]
	[Address(RVA = "0xFAEED0", Offset = "0xFAEED0", VA = "0xFAEED0", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6000CC2")]
	[Address(RVA = "0xFAEFFC", Offset = "0xFAEFFC", VA = "0xFAEFFC")]
	public AkPlaylistItem()
	{
	}

	[Token(Token = "0x6000CC3")]
	[Address(RVA = "0xFAF080", Offset = "0xFAF080", VA = "0xFAF080")]
	public AkPlaylistItem(AkPlaylistItem in_rCopy)
	{
	}

	[Token(Token = "0x6000CC4")]
	[Address(RVA = "0xFAF140", Offset = "0xFAF140", VA = "0xFAF140")]
	public AkPlaylistItem Assign(AkPlaylistItem in_rCopy)
	{
		return null;
	}

	[Token(Token = "0x6000CC5")]
	[Address(RVA = "0xFAF21C", Offset = "0xFAF21C", VA = "0xFAF21C")]
	public bool IsEqualTo(AkPlaylistItem in_rCopy)
	{
		return default(bool);
	}

	[Token(Token = "0x6000CC6")]
	[Address(RVA = "0xFAF2C4", Offset = "0xFAF2C4", VA = "0xFAF2C4")]
	public AKRESULT SetExternalSources(uint in_nExternalSrc, AkExternalSourceInfoArray in_pExternalSrc)
	{
		return default(AKRESULT);
	}
}
[Token(Token = "0x2000101")]
public enum AkPluginType
{
	[Token(Token = "0x40006F6")]
	AkPluginTypeNone = 0,
	[Token(Token = "0x40006F7")]
	AkPluginTypeCodec = 1,
	[Token(Token = "0x40006F8")]
	AkPluginTypeSource = 2,
	[Token(Token = "0x40006F9")]
	AkPluginTypeEffect = 3,
	[Token(Token = "0x40006FA")]
	AkPluginTypeMixer = 6,
	[Token(Token = "0x40006FB")]
	AkPluginTypeSink = 7,
	[Token(Token = "0x40006FC")]
	AkPluginTypeGlobalExtension = 8,
	[Token(Token = "0x40006FD")]
	AkPluginTypeMask = 15
}
[Token(Token = "0x2000102")]
public class AkPositioningInfo : IDisposable
{
	[Token(Token = "0x40006FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x40006FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x17000121")]
	public float fCenterPct
	{
		[Token(Token = "0x6000CD3")]
		[Address(RVA = "0xFAFE48", Offset = "0xFAFE48", VA = "0xFAFE48")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000CD2")]
		[Address(RVA = "0xFAFDCC", Offset = "0xFAFDCC", VA = "0xFAFDCC")]
		set
		{
		}
	}

	[Token(Token = "0x17000122")]
	public AkSpeakerPanningType pannerType
	{
		[Token(Token = "0x6000CD5")]
		[Address(RVA = "0xFAFF30", Offset = "0xFAFF30", VA = "0xFAFF30")]
		get
		{
			return default(AkSpeakerPanningType);
		}
		[Token(Token = "0x6000CD4")]
		[Address(RVA = "0xFAFEB4", Offset = "0xFAFEB4", VA = "0xFAFEB4")]
		set
		{
		}
	}

	[Token(Token = "0x17000123")]
	public Ak3DPositionType e3dPositioningType
	{
		[Token(Token = "0x6000CD7")]
		[Address(RVA = "0xFB0018", Offset = "0xFB0018", VA = "0xFB0018")]
		get
		{
			return default(Ak3DPositionType);
		}
		[Token(Token = "0x6000CD6")]
		[Address(RVA = "0xFAFF9C", Offset = "0xFAFF9C", VA = "0xFAFF9C")]
		set
		{
		}
	}

	[Token(Token = "0x17000124")]
	public bool bHoldEmitterPosAndOrient
	{
		[Token(Token = "0x6000CD9")]
		[Address(RVA = "0xFB0100", Offset = "0xFB0100", VA = "0xFB0100")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000CD8")]
		[Address(RVA = "0xFB0084", Offset = "0xFB0084", VA = "0xFB0084")]
		set
		{
		}
	}

	[Token(Token = "0x17000125")]
	public Ak3DSpatializationMode e3DSpatializationMode
	{
		[Token(Token = "0x6000CDB")]
		[Address(RVA = "0xFB01E8", Offset = "0xFB01E8", VA = "0xFB01E8")]
		get
		{
			return default(Ak3DSpatializationMode);
		}
		[Token(Token = "0x6000CDA")]
		[Address(RVA = "0xFB016C", Offset = "0xFB016C", VA = "0xFB016C")]
		set
		{
		}
	}

	[Token(Token = "0x17000126")]
	public bool bEnableAttenuation
	{
		[Token(Token = "0x6000CDD")]
		[Address(RVA = "0xFB02D0", Offset = "0xFB02D0", VA = "0xFB02D0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000CDC")]
		[Address(RVA = "0xFB0254", Offset = "0xFB0254", VA = "0xFB0254")]
		set
		{
		}
	}

	[Token(Token = "0x17000127")]
	public bool bUseConeAttenuation
	{
		[Token(Token = "0x6000CDF")]
		[Address(RVA = "0xFB03B8", Offset = "0xFB03B8", VA = "0xFB03B8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000CDE")]
		[Address(RVA = "0xFB033C", Offset = "0xFB033C", VA = "0xFB033C")]
		set
		{
		}
	}

	[Token(Token = "0x17000128")]
	public float fInnerAngle
	{
		[Token(Token = "0x6000CE1")]
		[Address(RVA = "0xFB04A0", Offset = "0xFB04A0", VA = "0xFB04A0")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000CE0")]
		[Address(RVA = "0xFB0424", Offset = "0xFB0424", VA = "0xFB0424")]
		set
		{
		}
	}

	[Token(Token = "0x17000129")]
	public float fOuterAngle
	{
		[Token(Token = "0x6000CE3")]
		[Address(RVA = "0xFB0588", Offset = "0xFB0588", VA = "0xFB0588")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000CE2")]
		[Address(RVA = "0xFB050C", Offset = "0xFB050C", VA = "0xFB050C")]
		set
		{
		}
	}

	[Token(Token = "0x1700012A")]
	public float fConeMaxAttenuation
	{
		[Token(Token = "0x6000CE5")]
		[Address(RVA = "0xFB0670", Offset = "0xFB0670", VA = "0xFB0670")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000CE4")]
		[Address(RVA = "0xFB05F4", Offset = "0xFB05F4", VA = "0xFB05F4")]
		set
		{
		}
	}

	[Token(Token = "0x1700012B")]
	public float LPFCone
	{
		[Token(Token = "0x6000CE7")]
		[Address(RVA = "0xFB0758", Offset = "0xFB0758", VA = "0xFB0758")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000CE6")]
		[Address(RVA = "0xFB06DC", Offset = "0xFB06DC", VA = "0xFB06DC")]
		set
		{
		}
	}

	[Token(Token = "0x1700012C")]
	public float HPFCone
	{
		[Token(Token = "0x6000CE9")]
		[Address(RVA = "0xFB0840", Offset = "0xFB0840", VA = "0xFB0840")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000CE8")]
		[Address(RVA = "0xFB07C4", Offset = "0xFB07C4", VA = "0xFB07C4")]
		set
		{
		}
	}

	[Token(Token = "0x1700012D")]
	public float fMaxDistance
	{
		[Token(Token = "0x6000CEB")]
		[Address(RVA = "0xFB0928", Offset = "0xFB0928", VA = "0xFB0928")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000CEA")]
		[Address(RVA = "0xFB08AC", Offset = "0xFB08AC", VA = "0xFB08AC")]
		set
		{
		}
	}

	[Token(Token = "0x1700012E")]
	public float fVolDryAtMaxDist
	{
		[Token(Token = "0x6000CED")]
		[Address(RVA = "0xFB0A10", Offset = "0xFB0A10", VA = "0xFB0A10")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000CEC")]
		[Address(RVA = "0xFB0994", Offset = "0xFB0994", VA = "0xFB0994")]
		set
		{
		}
	}

	[Token(Token = "0x1700012F")]
	public float fVolAuxGameDefAtMaxDist
	{
		[Token(Token = "0x6000CEF")]
		[Address(RVA = "0xFB0AF8", Offset = "0xFB0AF8", VA = "0xFB0AF8")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000CEE")]
		[Address(RVA = "0xFB0A7C", Offset = "0xFB0A7C", VA = "0xFB0A7C")]
		set
		{
		}
	}

	[Token(Token = "0x17000130")]
	public float fVolAuxUserDefAtMaxDist
	{
		[Token(Token = "0x6000CF1")]
		[Address(RVA = "0xFB0BE0", Offset = "0xFB0BE0", VA = "0xFB0BE0")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000CF0")]
		[Address(RVA = "0xFB0B64", Offset = "0xFB0B64", VA = "0xFB0B64")]
		set
		{
		}
	}

	[Token(Token = "0x17000131")]
	public float LPFValueAtMaxDist
	{
		[Token(Token = "0x6000CF3")]
		[Address(RVA = "0xFB0CC8", Offset = "0xFB0CC8", VA = "0xFB0CC8")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000CF2")]
		[Address(RVA = "0xFB0C4C", Offset = "0xFB0C4C", VA = "0xFB0C4C")]
		set
		{
		}
	}

	[Token(Token = "0x17000132")]
	public float HPFValueAtMaxDist
	{
		[Token(Token = "0x6000CF5")]
		[Address(RVA = "0xFB0DB0", Offset = "0xFB0DB0", VA = "0xFB0DB0")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000CF4")]
		[Address(RVA = "0xFB0D34", Offset = "0xFB0D34", VA = "0xFB0D34")]
		set
		{
		}
	}

	[Token(Token = "0x6000CCD")]
	[Address(RVA = "0xFAFB6C", Offset = "0xFAFB6C", VA = "0xFAFB6C")]
	internal AkPositioningInfo(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6000CCE")]
	[Address(RVA = "0xFAFBAC", Offset = "0xFAFBAC", VA = "0xFAFBAC")]
	internal static IntPtr getCPtr(AkPositioningInfo obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6000CCF")]
	[Address(RVA = "0xFAFBFC", Offset = "0xFAFBFC", VA = "0xFAFBFC", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6000CD0")]
	[Address(RVA = "0xFAFC30", Offset = "0xFAFC30", VA = "0xFAFC30", Slot = "1")]
	~AkPositioningInfo()
	{
	}

	[Token(Token = "0x6000CD1")]
	[Address(RVA = "0xFAFCA0", Offset = "0xFAFCA0", VA = "0xFAFCA0", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6000CF6")]
	[Address(RVA = "0xFB0E1C", Offset = "0xFB0E1C", VA = "0xFB0E1C")]
	public AkPositioningInfo()
	{
	}
}
[Token(Token = "0x2000103")]
public enum AkPreparationType
{
	[Token(Token = "0x4000701")]
	Preparation_Load,
	[Token(Token = "0x4000702")]
	Preparation_Unload,
	[Token(Token = "0x4000703")]
	Preparation_LoadAndDecode
}
[Token(Token = "0x2000104")]
public enum AkQueryRTPCValue
{
	[Token(Token = "0x4000705")]
	RTPCValue_Default,
	[Token(Token = "0x4000706")]
	RTPCValue_Global,
	[Token(Token = "0x4000707")]
	RTPCValue_GameObject,
	[Token(Token = "0x4000708")]
	RTPCValue_PlayingID,
	[Token(Token = "0x4000709")]
	RTPCValue_Unavailable
}
[Token(Token = "0x2000105")]
public class AkRamp : IDisposable
{
	[Token(Token = "0x400070A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x400070B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x17000133")]
	public float fPrev
	{
		[Token(Token = "0x6000CFF")]
		[Address(RVA = "0xFB1D58", Offset = "0xFB1D58", VA = "0xFB1D58")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000CFE")]
		[Address(RVA = "0xFB1CDC", Offset = "0xFB1CDC", VA = "0xFB1CDC")]
		set
		{
		}
	}

	[Token(Token = "0x17000134")]
	public float fNext
	{
		[Token(Token = "0x6000D01")]
		[Address(RVA = "0xFB1E40", Offset = "0xFB1E40", VA = "0xFB1E40")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000D00")]
		[Address(RVA = "0xFB1DC4", Offset = "0xFB1DC4", VA = "0xFB1DC4")]
		set
		{
		}
	}

	[Token(Token = "0x6000CF7")]
	[Address(RVA = "0xFB195C", Offset = "0xFB195C", VA = "0xFB195C")]
	internal AkRamp(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6000CF8")]
	[Address(RVA = "0xFB199C", Offset = "0xFB199C", VA = "0xFB199C")]
	internal static IntPtr getCPtr(AkRamp obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6000CF9")]
	[Address(RVA = "0xFB19EC", Offset = "0xFB19EC", VA = "0xFB19EC", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6000CFA")]
	[Address(RVA = "0xFB1A20", Offset = "0xFB1A20", VA = "0xFB1A20", Slot = "1")]
	~AkRamp()
	{
	}

	[Token(Token = "0x6000CFB")]
	[Address(RVA = "0xFB1A90", Offset = "0xFB1A90", VA = "0xFB1A90", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6000CFC")]
	[Address(RVA = "0xFB1BBC", Offset = "0xFB1BBC", VA = "0xFB1BBC")]
	public AkRamp()
	{
	}

	[Token(Token = "0x6000CFD")]
	[Address(RVA = "0xFB1C40", Offset = "0xFB1C40", VA = "0xFB1C40")]
	public AkRamp(float in_fPrev, float in_fNext)
	{
	}
}
[Token(Token = "0x2000106")]
public class AkReflectionPathInfo : IDisposable
{
	[Token(Token = "0x400070C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x400070D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x17000135")]
	public AkVector imageSource
	{
		[Token(Token = "0x6000D08")]
		[Address(RVA = "0xFB219C", Offset = "0xFB219C", VA = "0xFB219C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000D07")]
		[Address(RVA = "0xFB210C", Offset = "0xFB210C", VA = "0xFB210C")]
		set
		{
		}
	}

	[Token(Token = "0x17000136")]
	public uint numPathPoints
	{
		[Token(Token = "0x6000D0A")]
		[Address(RVA = "0xFB22C8", Offset = "0xFB22C8", VA = "0xFB22C8")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6000D09")]
		[Address(RVA = "0xFB224C", Offset = "0xFB224C", VA = "0xFB224C")]
		set
		{
		}
	}

	[Token(Token = "0x17000137")]
	public uint numReflections
	{
		[Token(Token = "0x6000D0C")]
		[Address(RVA = "0xFB23B0", Offset = "0xFB23B0", VA = "0xFB23B0")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6000D0B")]
		[Address(RVA = "0xFB2334", Offset = "0xFB2334", VA = "0xFB2334")]
		set
		{
		}
	}

	[Token(Token = "0x17000138")]
	public float level
	{
		[Token(Token = "0x6000D0E")]
		[Address(RVA = "0xFB2498", Offset = "0xFB2498", VA = "0xFB2498")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000D0D")]
		[Address(RVA = "0xFB241C", Offset = "0xFB241C", VA = "0xFB241C")]
		set
		{
		}
	}

	[Token(Token = "0x17000139")]
	public bool isOccluded
	{
		[Token(Token = "0x6000D10")]
		[Address(RVA = "0xFB2580", Offset = "0xFB2580", VA = "0xFB2580")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000D0F")]
		[Address(RVA = "0xFB2504", Offset = "0xFB2504", VA = "0xFB2504")]
		set
		{
		}
	}

	[Token(Token = "0x6000D02")]
	[Address(RVA = "0xFB1EAC", Offset = "0xFB1EAC", VA = "0xFB1EAC")]
	internal AkReflectionPathInfo(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6000D03")]
	[Address(RVA = "0xFB1EEC", Offset = "0xFB1EEC", VA = "0xFB1EEC")]
	internal static IntPtr getCPtr(AkReflectionPathInfo obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6000D04")]
	[Address(RVA = "0xFB1F3C", Offset = "0xFB1F3C", VA = "0xFB1F3C", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6000D05")]
	[Address(RVA = "0xFB1F70", Offset = "0xFB1F70", VA = "0xFB1F70", Slot = "1")]
	~AkReflectionPathInfo()
	{
	}

	[Token(Token = "0x6000D06")]
	[Address(RVA = "0xFB1FE0", Offset = "0xFB1FE0", VA = "0xFB1FE0", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6000D11")]
	[Address(RVA = "0xFB25EC", Offset = "0xFB25EC", VA = "0xFB25EC")]
	public static int GetSizeOf()
	{
		return default(int);
	}

	[Token(Token = "0x6000D12")]
	[Address(RVA = "0xFB264C", Offset = "0xFB264C", VA = "0xFB264C")]
	public AkVector GetPathPoint(uint idx)
	{
		return null;
	}

	[Token(Token = "0x6000D13")]
	[Address(RVA = "0xFB270C", Offset = "0xFB270C", VA = "0xFB270C")]
	public AkAcousticSurface GetAcousticSurface(uint idx)
	{
		return null;
	}

	[Token(Token = "0x6000D14")]
	[Address(RVA = "0xFB27BC", Offset = "0xFB27BC", VA = "0xFB27BC")]
	public float GetDiffraction(uint idx)
	{
		return default(float);
	}

	[Token(Token = "0x6000D15")]
	[Address(RVA = "0xFB2838", Offset = "0xFB2838", VA = "0xFB2838")]
	public void Clone(AkReflectionPathInfo other)
	{
	}

	[Token(Token = "0x6000D16")]
	[Address(RVA = "0xFB28E0", Offset = "0xFB28E0", VA = "0xFB28E0")]
	public AkReflectionPathInfo()
	{
	}
}
[Token(Token = "0x2000107")]
public class AkRoomParams : IDisposable
{
	[Token(Token = "0x400070E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x400070F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x1700013A")]
	public AkVector Up
	{
		[Token(Token = "0x6000D1E")]
		[Address(RVA = "0xFB2FC8", Offset = "0xFB2FC8", VA = "0xFB2FC8")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000D1D")]
		[Address(RVA = "0xFB40F0", Offset = "0xFB40F0", VA = "0xFB40F0")]
		set
		{
		}
	}

	[Token(Token = "0x1700013B")]
	public AkVector Front
	{
		[Token(Token = "0x6000D20")]
		[Address(RVA = "0xFB3078", Offset = "0xFB3078", VA = "0xFB3078")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000D1F")]
		[Address(RVA = "0xFB4180", Offset = "0xFB4180", VA = "0xFB4180")]
		set
		{
		}
	}

	[Token(Token = "0x1700013C")]
	public uint ReverbAuxBus
	{
		[Token(Token = "0x6000D22")]
		[Address(RVA = "0xFB4210", Offset = "0xFB4210", VA = "0xFB4210")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6000D21")]
		[Address(RVA = "0xFB3128", Offset = "0xFB3128", VA = "0xFB3128")]
		set
		{
		}
	}

	[Token(Token = "0x1700013D")]
	public float ReverbLevel
	{
		[Token(Token = "0x6000D24")]
		[Address(RVA = "0xFB427C", Offset = "0xFB427C", VA = "0xFB427C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000D23")]
		[Address(RVA = "0xFB31A4", Offset = "0xFB31A4", VA = "0xFB31A4")]
		set
		{
		}
	}

	[Token(Token = "0x1700013E")]
	public float WallOcclusion
	{
		[Token(Token = "0x6000D26")]
		[Address(RVA = "0xFB42E8", Offset = "0xFB42E8", VA = "0xFB42E8")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000D25")]
		[Address(RVA = "0xFB3220", Offset = "0xFB3220", VA = "0xFB3220")]
		set
		{
		}
	}

	[Token(Token = "0x1700013F")]
	public float RoomGameObj_AuxSendLevelToSelf
	{
		[Token(Token = "0x6000D28")]
		[Address(RVA = "0xFB4354", Offset = "0xFB4354", VA = "0xFB4354")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000D27")]
		[Address(RVA = "0xFB329C", Offset = "0xFB329C", VA = "0xFB329C")]
		set
		{
		}
	}

	[Token(Token = "0x17000140")]
	public bool RoomGameObj_KeepRegistered
	{
		[Token(Token = "0x6000D2A")]
		[Address(RVA = "0xFB43C0", Offset = "0xFB43C0", VA = "0xFB43C0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000D29")]
		[Address(RVA = "0xFB3318", Offset = "0xFB3318", VA = "0xFB3318")]
		set
		{
		}
	}

	[Token(Token = "0x6000D17")]
	[Address(RVA = "0xFB3E90", Offset = "0xFB3E90", VA = "0xFB3E90")]
	internal AkRoomParams(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6000D18")]
	[Address(RVA = "0xFB3ED0", Offset = "0xFB3ED0", VA = "0xFB3ED0")]
	internal static IntPtr getCPtr(AkRoomParams obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6000D19")]
	[Address(RVA = "0xFB3F20", Offset = "0xFB3F20", VA = "0xFB3F20", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6000D1A")]
	[Address(RVA = "0xFB3F54", Offset = "0xFB3F54", VA = "0xFB3F54", Slot = "1")]
	~AkRoomParams()
	{
	}

	[Token(Token = "0x6000D1B")]
	[Address(RVA = "0xFB3FC4", Offset = "0xFB3FC4", VA = "0xFB3FC4", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6000D1C")]
	[Address(RVA = "0xFB2F44", Offset = "0xFB2F44", VA = "0xFB2F44")]
	public AkRoomParams()
	{
	}
}
[Token(Token = "0x2000108")]
public class AkSegmentInfo : IDisposable
{
	[Token(Token = "0x4000710")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4000711")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x17000141")]
	public int iCurrentPosition
	{
		[Token(Token = "0x6000D31")]
		[Address(RVA = "0x9E6838", Offset = "0x9E6838", VA = "0x9E6838")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000D30")]
		[Address(RVA = "0x9E6730", Offset = "0x9E6730", VA = "0x9E6730")]
		set
		{
		}
	}

	[Token(Token = "0x17000142")]
	public int iPreEntryDuration
	{
		[Token(Token = "0x6000D33")]
		[Address(RVA = "0x9E6A28", Offset = "0x9E6A28", VA = "0x9E6A28")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000D32")]
		[Address(RVA = "0x9E6920", Offset = "0x9E6920", VA = "0x9E6920")]
		set
		{
		}
	}

	[Token(Token = "0x17000143")]
	public int iActiveDuration
	{
		[Token(Token = "0x6000D35")]
		[Address(RVA = "0x9E6C18", Offset = "0x9E6C18", VA = "0x9E6C18")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000D34")]
		[Address(RVA = "0x9E6B10", Offset = "0x9E6B10", VA = "0x9E6B10")]
		set
		{
		}
	}

	[Token(Token = "0x17000144")]
	public int iPostExitDuration
	{
		[Token(Token = "0x6000D37")]
		[Address(RVA = "0x9E6E08", Offset = "0x9E6E08", VA = "0x9E6E08")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000D36")]
		[Address(RVA = "0x9E6D00", Offset = "0x9E6D00", VA = "0x9E6D00")]
		set
		{
		}
	}

	[Token(Token = "0x17000145")]
	public int iRemainingLookAheadTime
	{
		[Token(Token = "0x6000D39")]
		[Address(RVA = "0x9E6FF8", Offset = "0x9E6FF8", VA = "0x9E6FF8")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000D38")]
		[Address(RVA = "0x9E6EF0", Offset = "0x9E6EF0", VA = "0x9E6EF0")]
		set
		{
		}
	}

	[Token(Token = "0x17000146")]
	public float fBeatDuration
	{
		[Token(Token = "0x6000D3B")]
		[Address(RVA = "0x9E71E8", Offset = "0x9E71E8", VA = "0x9E71E8")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000D3A")]
		[Address(RVA = "0x9E70E0", Offset = "0x9E70E0", VA = "0x9E70E0")]
		set
		{
		}
	}

	[Token(Token = "0x17000147")]
	public float fBarDuration
	{
		[Token(Token = "0x6000D3D")]
		[Address(RVA = "0x9E73D8", Offset = "0x9E73D8", VA = "0x9E73D8")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000D3C")]
		[Address(RVA = "0x9E72D0", Offset = "0x9E72D0", VA = "0x9E72D0")]
		set
		{
		}
	}

	[Token(Token = "0x17000148")]
	public float fGridDuration
	{
		[Token(Token = "0x6000D3F")]
		[Address(RVA = "0x9E75C8", Offset = "0x9E75C8", VA = "0x9E75C8")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000D3E")]
		[Address(RVA = "0x9E74C0", Offset = "0x9E74C0", VA = "0x9E74C0")]
		set
		{
		}
	}

	[Token(Token = "0x17000149")]
	public float fGridOffset
	{
		[Token(Token = "0x6000D41")]
		[Address(RVA = "0x9E77B8", Offset = "0x9E77B8", VA = "0x9E77B8")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000D40")]
		[Address(RVA = "0x9E76B0", Offset = "0x9E76B0", VA = "0x9E76B0")]
		set
		{
		}
	}

	[Token(Token = "0x6000D2B")]
	[Address(RVA = "0x9E6454", Offset = "0x9E6454", VA = "0x9E6454")]
	internal AkSegmentInfo(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6000D2C")]
	[Address(RVA = "0x9E6494", Offset = "0x9E6494", VA = "0x9E6494")]
	internal static IntPtr getCPtr(AkSegmentInfo obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6000D2D")]
	[Address(RVA = "0x9E64E4", Offset = "0x9E64E4", VA = "0x9E64E4", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6000D2E")]
	[Address(RVA = "0x9E6518", Offset = "0x9E6518", VA = "0x9E6518", Slot = "1")]
	~AkSegmentInfo()
	{
	}

	[Token(Token = "0x6000D2F")]
	[Address(RVA = "0x9E6588", Offset = "0x9E6588", VA = "0x9E6588", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6000D42")]
	[Address(RVA = "0x9E78A0", Offset = "0x9E78A0", VA = "0x9E78A0")]
	public AkSegmentInfo()
	{
	}
}
[Token(Token = "0x2000109")]
public class AkSerializedCallbackHeader : IDisposable
{
	[Token(Token = "0x4000712")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4000713")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x1700014A")]
	public IntPtr pPackage
	{
		[Token(Token = "0x6000D48")]
		[Address(RVA = "0x9E7C70", Offset = "0x9E7C70", VA = "0x9E7C70")]
		get
		{
			return default(IntPtr);
		}
	}

	[Token(Token = "0x1700014B")]
	public AkSerializedCallbackHeader pNext
	{
		[Token(Token = "0x6000D49")]
		[Address(RVA = "0x9E7D58", Offset = "0x9E7D58", VA = "0x9E7D58")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700014C")]
	public AkCallbackType eType
	{
		[Token(Token = "0x6000D4A")]
		[Address(RVA = "0x9E7E84", Offset = "0x9E7E84", VA = "0x9E7E84")]
		get
		{
			return default(AkCallbackType);
		}
	}

	[Token(Token = "0x6000D43")]
	[Address(RVA = "0x9E7994", Offset = "0x9E7994", VA = "0x9E7994")]
	internal AkSerializedCallbackHeader(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6000D44")]
	[Address(RVA = "0x9E79D4", Offset = "0x9E79D4", VA = "0x9E79D4")]
	internal static IntPtr getCPtr(AkSerializedCallbackHeader obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6000D45")]
	[Address(RVA = "0x9E7A24", Offset = "0x9E7A24", VA = "0x9E7A24", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6000D46")]
	[Address(RVA = "0x9E7A58", Offset = "0x9E7A58", VA = "0x9E7A58", Slot = "1")]
	~AkSerializedCallbackHeader()
	{
	}

	[Token(Token = "0x6000D47")]
	[Address(RVA = "0x9E7AC8", Offset = "0x9E7AC8", VA = "0x9E7AC8", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6000D4B")]
	[Address(RVA = "0x9E7F6C", Offset = "0x9E7F6C", VA = "0x9E7F6C")]
	public IntPtr GetData()
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6000D4C")]
	[Address(RVA = "0x9E8054", Offset = "0x9E8054", VA = "0x9E8054")]
	public AkSerializedCallbackHeader()
	{
	}
}
[Token(Token = "0x200010A")]
public enum AkSourceChannelOrdering
{
	[Token(Token = "0x4000715")]
	SourceChannelOrdering_Standard,
	[Token(Token = "0x4000716")]
	SourceChannelOrdering_Film,
	[Token(Token = "0x4000717")]
	SourceChannelOrdering_FuMa
}
[Token(Token = "0x200010B")]
public class AkSourceSettings : IDisposable
{
	[Token(Token = "0x4000718")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4000719")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x1700014D")]
	public uint sourceID
	{
		[Token(Token = "0x6000D53")]
		[Address(RVA = "0x92CC70", Offset = "0x92CC70", VA = "0x92CC70")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6000D52")]
		[Address(RVA = "0x92CBF4", Offset = "0x92CBF4", VA = "0x92CBF4")]
		set
		{
		}
	}

	[Token(Token = "0x1700014E")]
	public IntPtr pMediaMemory
	{
		[Token(Token = "0x6000D55")]
		[Address(RVA = "0x92CD58", Offset = "0x92CD58", VA = "0x92CD58")]
		get
		{
			return default(IntPtr);
		}
		[Token(Token = "0x6000D54")]
		[Address(RVA = "0x92CCDC", Offset = "0x92CCDC", VA = "0x92CCDC")]
		set
		{
		}
	}

	[Token(Token = "0x1700014F")]
	public uint uMediaSize
	{
		[Token(Token = "0x6000D57")]
		[Address(RVA = "0x92CE40", Offset = "0x92CE40", VA = "0x92CE40")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6000D56")]
		[Address(RVA = "0x92CDC4", Offset = "0x92CDC4", VA = "0x92CDC4")]
		set
		{
		}
	}

	[Token(Token = "0x6000D4D")]
	[Address(RVA = "0x92C994", Offset = "0x92C994", VA = "0x92C994")]
	internal AkSourceSettings(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6000D4E")]
	[Address(RVA = "0x92C9D4", Offset = "0x92C9D4", VA = "0x92C9D4")]
	internal static IntPtr getCPtr(AkSourceSettings obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6000D4F")]
	[Address(RVA = "0x92CA24", Offset = "0x92CA24", VA = "0x92CA24", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6000D50")]
	[Address(RVA = "0x92CA58", Offset = "0x92CA58", VA = "0x92CA58", Slot = "1")]
	~AkSourceSettings()
	{
	}

	[Token(Token = "0x6000D51")]
	[Address(RVA = "0x92CAC8", Offset = "0x92CAC8", VA = "0x92CAC8", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6000D58")]
	[Address(RVA = "0x92CEAC", Offset = "0x92CEAC", VA = "0x92CEAC")]
	public void Clear()
	{
	}

	[Token(Token = "0x6000D59")]
	[Address(RVA = "0x92CF18", Offset = "0x92CF18", VA = "0x92CF18")]
	public static int GetSizeOf()
	{
		return default(int);
	}

	[Token(Token = "0x6000D5A")]
	[Address(RVA = "0x92CF78", Offset = "0x92CF78", VA = "0x92CF78")]
	public void Clone(AkSourceSettings other)
	{
	}

	[Token(Token = "0x6000D5B")]
	[Address(RVA = "0x92D020", Offset = "0x92D020", VA = "0x92D020")]
	public AkSourceSettings()
	{
	}
}
[Token(Token = "0x200010C")]
public class AkSpatialAudioInitSettings : IDisposable
{
	[Token(Token = "0x400071A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x400071B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x17000150")]
	public int uPoolID
	{
		[Token(Token = "0x6000D63")]
		[Address(RVA = "0x92DB4C", Offset = "0x92DB4C", VA = "0x92DB4C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000D62")]
		[Address(RVA = "0x92DAD0", Offset = "0x92DAD0", VA = "0x92DAD0")]
		set
		{
		}
	}

	[Token(Token = "0x17000151")]
	public uint uPoolSize
	{
		[Token(Token = "0x6000D65")]
		[Address(RVA = "0x92DC34", Offset = "0x92DC34", VA = "0x92DC34")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6000D64")]
		[Address(RVA = "0x92DBB8", Offset = "0x92DBB8", VA = "0x92DBB8")]
		set
		{
		}
	}

	[Token(Token = "0x17000152")]
	public uint uMaxSoundPropagationDepth
	{
		[Token(Token = "0x6000D67")]
		[Address(RVA = "0x92DD1C", Offset = "0x92DD1C", VA = "0x92DD1C")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6000D66")]
		[Address(RVA = "0x92DCA0", Offset = "0x92DCA0", VA = "0x92DCA0")]
		set
		{
		}
	}

	[Token(Token = "0x17000153")]
	public uint uDiffractionFlags
	{
		[Token(Token = "0x6000D69")]
		[Address(RVA = "0x92DE04", Offset = "0x92DE04", VA = "0x92DE04")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6000D68")]
		[Address(RVA = "0x92DD88", Offset = "0x92DD88", VA = "0x92DD88")]
		set
		{
		}
	}

	[Token(Token = "0x17000154")]
	public float fDiffractionShadowAttenFactor
	{
		[Token(Token = "0x6000D6B")]
		[Address(RVA = "0x92DEEC", Offset = "0x92DEEC", VA = "0x92DEEC")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000D6A")]
		[Address(RVA = "0x92DE70", Offset = "0x92DE70", VA = "0x92DE70")]
		set
		{
		}
	}

	[Token(Token = "0x17000155")]
	public float fDiffractionShadowDegrees
	{
		[Token(Token = "0x6000D6D")]
		[Address(RVA = "0x92DFD4", Offset = "0x92DFD4", VA = "0x92DFD4")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000D6C")]
		[Address(RVA = "0x92DF58", Offset = "0x92DF58", VA = "0x92DF58")]
		set
		{
		}
	}

	[Token(Token = "0x17000156")]
	public float fMovementThreshold
	{
		[Token(Token = "0x6000D6F")]
		[Address(RVA = "0x92E0BC", Offset = "0x92E0BC", VA = "0x92E0BC")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000D6E")]
		[Address(RVA = "0x92E040", Offset = "0x92E040", VA = "0x92E040")]
		set
		{
		}
	}

	[Token(Token = "0x6000D5C")]
	[Address(RVA = "0x92D7EC", Offset = "0x92D7EC", VA = "0x92D7EC")]
	internal AkSpatialAudioInitSettings(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6000D5D")]
	[Address(RVA = "0x92D82C", Offset = "0x92D82C", VA = "0x92D82C")]
	internal static IntPtr getCPtr(AkSpatialAudioInitSettings obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6000D5E")]
	[Address(RVA = "0x92D87C", Offset = "0x92D87C", VA = "0x92D87C", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6000D5F")]
	[Address(RVA = "0x92D8B0", Offset = "0x92D8B0", VA = "0x92D8B0", Slot = "1")]
	~AkSpatialAudioInitSettings()
	{
	}

	[Token(Token = "0x6000D60")]
	[Address(RVA = "0x92D920", Offset = "0x92D920", VA = "0x92D920", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6000D61")]
	[Address(RVA = "0x92DA4C", Offset = "0x92DA4C", VA = "0x92DA4C")]
	public AkSpatialAudioInitSettings()
	{
	}
}
[Token(Token = "0x200010D")]
public enum AkSpeakerPanningType
{
	[Token(Token = "0x400071D")]
	AK_DirectSpeakerAssignment,
	[Token(Token = "0x400071E")]
	AK_BalanceFadeHeight
}
[Token(Token = "0x200010E")]
public class AkStreamMgrSettings : IDisposable
{
	[Token(Token = "0x400071F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4000720")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x17000157")]
	public uint uMemorySize
	{
		[Token(Token = "0x6000D76")]
		[Address(RVA = "0x92EE20", Offset = "0x92EE20", VA = "0x92EE20")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6000D75")]
		[Address(RVA = "0x92EDA4", Offset = "0x92EDA4", VA = "0x92EDA4")]
		set
		{
		}
	}

	[Token(Token = "0x6000D70")]
	[Address(RVA = "0x92EB44", Offset = "0x92EB44", VA = "0x92EB44")]
	internal AkStreamMgrSettings(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6000D71")]
	[Address(RVA = "0x92EB84", Offset = "0x92EB84", VA = "0x92EB84")]
	internal static IntPtr getCPtr(AkStreamMgrSettings obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6000D72")]
	[Address(RVA = "0x92EBD4", Offset = "0x92EBD4", VA = "0x92EBD4", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6000D73")]
	[Address(RVA = "0x92EC08", Offset = "0x92EC08", VA = "0x92EC08", Slot = "1")]
	~AkStreamMgrSettings()
	{
	}

	[Token(Token = "0x6000D74")]
	[Address(RVA = "0x92EC78", Offset = "0x92EC78", VA = "0x92EC78", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6000D77")]
	[Address(RVA = "0x92EE8C", Offset = "0x92EE8C", VA = "0x92EE8C")]
	public AkStreamMgrSettings()
	{
	}
}
[Token(Token = "0x200010F")]
public class AkTaskContext : IDisposable
{
	[Token(Token = "0x4000721")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4000722")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x17000158")]
	public uint uIdxThread
	{
		[Token(Token = "0x6000D7E")]
		[Address(RVA = "0x930704", Offset = "0x930704", VA = "0x930704")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6000D7D")]
		[Address(RVA = "0x930688", Offset = "0x930688", VA = "0x930688")]
		set
		{
		}
	}

	[Token(Token = "0x6000D78")]
	[Address(RVA = "0x930428", Offset = "0x930428", VA = "0x930428")]
	internal AkTaskContext(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6000D79")]
	[Address(RVA = "0x930468", Offset = "0x930468", VA = "0x930468")]
	internal static IntPtr getCPtr(AkTaskContext obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6000D7A")]
	[Address(RVA = "0x9304B8", Offset = "0x9304B8", VA = "0x9304B8", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6000D7B")]
	[Address(RVA = "0x9304EC", Offset = "0x9304EC", VA = "0x9304EC", Slot = "1")]
	~AkTaskContext()
	{
	}

	[Token(Token = "0x6000D7C")]
	[Address(RVA = "0x93055C", Offset = "0x93055C", VA = "0x93055C", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6000D7F")]
	[Address(RVA = "0x930770", Offset = "0x930770", VA = "0x930770")]
	public AkTaskContext()
	{
	}
}
[Token(Token = "0x2000110")]
public class AkTransform : IDisposable
{
	[Token(Token = "0x4000723")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4000724")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x6000D80")]
	[Address(RVA = "0x930E80", Offset = "0x930E80", VA = "0x930E80")]
	internal AkTransform(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6000D81")]
	[Address(RVA = "0x930EC0", Offset = "0x930EC0", VA = "0x930EC0")]
	internal static IntPtr getCPtr(AkTransform obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6000D82")]
	[Address(RVA = "0x930F10", Offset = "0x930F10", VA = "0x930F10", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6000D83")]
	[Address(RVA = "0x930F44", Offset = "0x930F44", VA = "0x930F44", Slot = "1")]
	~AkTransform()
	{
	}

	[Token(Token = "0x6000D84")]
	[Address(RVA = "0x930FB4", Offset = "0x930FB4", VA = "0x930FB4", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6000D85")]
	[Address(RVA = "0x9310E0", Offset = "0x9310E0", VA = "0x9310E0")]
	public AkVector Position()
	{
		return null;
	}

	[Token(Token = "0x6000D86")]
	[Address(RVA = "0x9311C0", Offset = "0x9311C0", VA = "0x9311C0")]
	public AkVector OrientationFront()
	{
		return null;
	}

	[Token(Token = "0x6000D87")]
	[Address(RVA = "0x931260", Offset = "0x931260", VA = "0x931260")]
	public AkVector OrientationTop()
	{
		return null;
	}

	[Token(Token = "0x6000D88")]
	[Address(RVA = "0x931300", Offset = "0x931300", VA = "0x931300")]
	public void Set(AkVector in_position, AkVector in_orientationFront, AkVector in_orientationTop)
	{
	}

	[Token(Token = "0x6000D89")]
	[Address(RVA = "0x931420", Offset = "0x931420", VA = "0x931420")]
	public void Set(float in_positionX, float in_positionY, float in_positionZ, float in_orientFrontX, float in_orientFrontY, float in_orientFrontZ, float in_orientTopX, float in_orientTopY, float in_orientTopZ)
	{
	}

	[Token(Token = "0x6000D8A")]
	[Address(RVA = "0x93154C", Offset = "0x93154C", VA = "0x93154C")]
	public void SetPosition(AkVector in_position)
	{
	}

	[Token(Token = "0x6000D8B")]
	[Address(RVA = "0x9315F4", Offset = "0x9315F4", VA = "0x9315F4")]
	public void SetPosition(float in_x, float in_y, float in_z)
	{
	}

	[Token(Token = "0x6000D8C")]
	[Address(RVA = "0x931688", Offset = "0x931688", VA = "0x931688")]
	public void SetOrientation(AkVector in_orientationFront, AkVector in_orientationTop)
	{
	}

	[Token(Token = "0x6000D8D")]
	[Address(RVA = "0x931740", Offset = "0x931740", VA = "0x931740")]
	public void SetOrientation(float in_orientFrontX, float in_orientFrontY, float in_orientFrontZ, float in_orientTopX, float in_orientTopY, float in_orientTopZ)
	{
	}

	[Token(Token = "0x6000D8E")]
	[Address(RVA = "0x9317F4", Offset = "0x9317F4", VA = "0x9317F4")]
	public AkTransform()
	{
	}
}
[Token(Token = "0x2000111")]
public class AkTriangle : IDisposable
{
	[Token(Token = "0x4000725")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4000726")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x17000159")]
	public ushort point0
	{
		[Token(Token = "0x6000D97")]
		[Address(RVA = "0x931C10", Offset = "0x931C10", VA = "0x931C10")]
		get
		{
			return default(ushort);
		}
		[Token(Token = "0x6000D96")]
		[Address(RVA = "0x92FD08", Offset = "0x92FD08", VA = "0x92FD08")]
		set
		{
		}
	}

	[Token(Token = "0x1700015A")]
	public ushort point1
	{
		[Token(Token = "0x6000D99")]
		[Address(RVA = "0x931C7C", Offset = "0x931C7C", VA = "0x931C7C")]
		get
		{
			return default(ushort);
		}
		[Token(Token = "0x6000D98")]
		[Address(RVA = "0x92FD84", Offset = "0x92FD84", VA = "0x92FD84")]
		set
		{
		}
	}

	[Token(Token = "0x1700015B")]
	public ushort point2
	{
		[Token(Token = "0x6000D9B")]
		[Address(RVA = "0x931CE8", Offset = "0x931CE8", VA = "0x931CE8")]
		get
		{
			return default(ushort);
		}
		[Token(Token = "0x6000D9A")]
		[Address(RVA = "0x92FE00", Offset = "0x92FE00", VA = "0x92FE00")]
		set
		{
		}
	}

	[Token(Token = "0x1700015C")]
	public ushort surface
	{
		[Token(Token = "0x6000D9D")]
		[Address(RVA = "0x931D54", Offset = "0x931D54", VA = "0x931D54")]
		get
		{
			return default(ushort);
		}
		[Token(Token = "0x6000D9C")]
		[Address(RVA = "0x92FE7C", Offset = "0x92FE7C", VA = "0x92FE7C")]
		set
		{
		}
	}

	[Token(Token = "0x6000D8F")]
	[Address(RVA = "0x931878", Offset = "0x931878", VA = "0x931878")]
	internal AkTriangle(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6000D90")]
	[Address(RVA = "0x9318B8", Offset = "0x9318B8", VA = "0x9318B8")]
	internal static IntPtr getCPtr(AkTriangle obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6000D91")]
	[Address(RVA = "0x931908", Offset = "0x931908", VA = "0x931908", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6000D92")]
	[Address(RVA = "0x93193C", Offset = "0x93193C", VA = "0x93193C", Slot = "1")]
	~AkTriangle()
	{
	}

	[Token(Token = "0x6000D93")]
	[Address(RVA = "0x9319AC", Offset = "0x9319AC", VA = "0x9319AC", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6000D94")]
	[Address(RVA = "0x931AD8", Offset = "0x931AD8", VA = "0x931AD8")]
	public AkTriangle()
	{
	}

	[Token(Token = "0x6000D95")]
	[Address(RVA = "0x931B5C", Offset = "0x931B5C", VA = "0x931B5C")]
	public AkTriangle(ushort in_pt0, ushort in_pt1, ushort in_pt2, ushort in_surfaceInfo)
	{
	}

	[Token(Token = "0x6000D9E")]
	[Address(RVA = "0x931DC0", Offset = "0x931DC0", VA = "0x931DC0")]
	public void Clear()
	{
	}

	[Token(Token = "0x6000D9F")]
	[Address(RVA = "0x931E2C", Offset = "0x931E2C", VA = "0x931E2C")]
	public static int GetSizeOf()
	{
		return default(int);
	}

	[Token(Token = "0x6000DA0")]
	[Address(RVA = "0x931E8C", Offset = "0x931E8C", VA = "0x931E8C")]
	public void Clone(AkTriangle other)
	{
	}
}
[Token(Token = "0x2000112")]
public class AkVector : IDisposable
{
	[Token(Token = "0x4000727")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4000728")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x1700015D")]
	public float X
	{
		[Token(Token = "0x6000DA8")]
		[Address(RVA = "0x934008", Offset = "0x934008", VA = "0x934008")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000DA7")]
		[Address(RVA = "0x933F8C", Offset = "0x933F8C", VA = "0x933F8C")]
		set
		{
		}
	}

	[Token(Token = "0x1700015E")]
	public float Y
	{
		[Token(Token = "0x6000DAA")]
		[Address(RVA = "0x9340F0", Offset = "0x9340F0", VA = "0x9340F0")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000DA9")]
		[Address(RVA = "0x934074", Offset = "0x934074", VA = "0x934074")]
		set
		{
		}
	}

	[Token(Token = "0x1700015F")]
	public float Z
	{
		[Token(Token = "0x6000DAC")]
		[Address(RVA = "0x9341D8", Offset = "0x9341D8", VA = "0x9341D8")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000DAB")]
		[Address(RVA = "0x93415C", Offset = "0x93415C", VA = "0x93415C")]
		set
		{
		}
	}

	[Token(Token = "0x6000DA1")]
	[Address(RVA = "0x931180", Offset = "0x931180", VA = "0x931180")]
	internal AkVector(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6000DA2")]
	[Address(RVA = "0x9313D0", Offset = "0x9313D0", VA = "0x9313D0")]
	internal static IntPtr getCPtr(AkVector obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6000DA3")]
	[Address(RVA = "0x933D50", Offset = "0x933D50", VA = "0x933D50", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6000DA4")]
	[Address(RVA = "0x933D84", Offset = "0x933D84", VA = "0x933D84", Slot = "1")]
	~AkVector()
	{
	}

	[Token(Token = "0x6000DA5")]
	[Address(RVA = "0x933DF4", Offset = "0x933DF4", VA = "0x933DF4", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6000DA6")]
	[Address(RVA = "0x933F20", Offset = "0x933F20", VA = "0x933F20")]
	public void Zero()
	{
	}

	[Token(Token = "0x6000DAD")]
	[Address(RVA = "0x934244", Offset = "0x934244", VA = "0x934244")]
	public AkVector()
	{
	}
}
[Token(Token = "0x2000113")]
public class AkVertex : IDisposable
{
	[Token(Token = "0x4000729")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x400072A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x17000160")]
	public float X
	{
		[Token(Token = "0x6000DB6")]
		[Address(RVA = "0x934658", Offset = "0x934658", VA = "0x934658")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000DB5")]
		[Address(RVA = "0x92FB34", Offset = "0x92FB34", VA = "0x92FB34")]
		set
		{
		}
	}

	[Token(Token = "0x17000161")]
	public float Y
	{
		[Token(Token = "0x6000DB8")]
		[Address(RVA = "0x9346C4", Offset = "0x9346C4", VA = "0x9346C4")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000DB7")]
		[Address(RVA = "0x92FBB0", Offset = "0x92FBB0", VA = "0x92FBB0")]
		set
		{
		}
	}

	[Token(Token = "0x17000162")]
	public float Z
	{
		[Token(Token = "0x6000DBA")]
		[Address(RVA = "0x934730", Offset = "0x934730", VA = "0x934730")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000DB9")]
		[Address(RVA = "0x92FC2C", Offset = "0x92FC2C", VA = "0x92FC2C")]
		set
		{
		}
	}

	[Token(Token = "0x6000DAE")]
	[Address(RVA = "0x9342C8", Offset = "0x9342C8", VA = "0x9342C8")]
	internal AkVertex(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6000DAF")]
	[Address(RVA = "0x934308", Offset = "0x934308", VA = "0x934308")]
	internal static IntPtr getCPtr(AkVertex obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6000DB0")]
	[Address(RVA = "0x934358", Offset = "0x934358", VA = "0x934358", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6000DB1")]
	[Address(RVA = "0x93438C", Offset = "0x93438C", VA = "0x93438C", Slot = "1")]
	~AkVertex()
	{
	}

	[Token(Token = "0x6000DB2")]
	[Address(RVA = "0x9343FC", Offset = "0x9343FC", VA = "0x9343FC", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6000DB3")]
	[Address(RVA = "0x934528", Offset = "0x934528", VA = "0x934528")]
	public AkVertex()
	{
	}

	[Token(Token = "0x6000DB4")]
	[Address(RVA = "0x9345AC", Offset = "0x9345AC", VA = "0x9345AC")]
	public AkVertex(float in_X, float in_Y, float in_Z)
	{
	}

	[Token(Token = "0x6000DBB")]
	[Address(RVA = "0x93479C", Offset = "0x93479C", VA = "0x93479C")]
	public void Clear()
	{
	}

	[Token(Token = "0x6000DBC")]
	[Address(RVA = "0x934808", Offset = "0x934808", VA = "0x934808")]
	public static int GetSizeOf()
	{
		return default(int);
	}

	[Token(Token = "0x6000DBD")]
	[Address(RVA = "0x934868", Offset = "0x934868", VA = "0x934868")]
	public void Clone(AkVertex other)
	{
	}
}
[Token(Token = "0x2000114")]
public class _ArrayPoolDefault : IDisposable
{
	[Token(Token = "0x400072B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x400072C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x6000DBE")]
	[Address(RVA = "0x14C5BF8", Offset = "0x14C5BF8", VA = "0x14C5BF8")]
	internal _ArrayPoolDefault(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6000DBF")]
	[Address(RVA = "0x14C5C38", Offset = "0x14C5C38", VA = "0x14C5C38")]
	internal static IntPtr getCPtr(_ArrayPoolDefault obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6000DC0")]
	[Address(RVA = "0x14C5C88", Offset = "0x14C5C88", VA = "0x14C5C88", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6000DC1")]
	[Address(RVA = "0x14C5CBC", Offset = "0x14C5CBC", VA = "0x14C5CBC", Slot = "1")]
	~_ArrayPoolDefault()
	{
	}

	[Token(Token = "0x6000DC2")]
	[Address(RVA = "0x14C5D2C", Offset = "0x14C5D2C", VA = "0x14C5D2C", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6000DC3")]
	[Address(RVA = "0x14C5E58", Offset = "0x14C5E58", VA = "0x14C5E58")]
	public static int Get()
	{
		return default(int);
	}

	[Token(Token = "0x6000DC4")]
	[Address(RVA = "0x14C5EB8", Offset = "0x14C5EB8", VA = "0x14C5EB8")]
	public _ArrayPoolDefault()
	{
	}
}
[Token(Token = "0x2000115")]
public class _ArrayPoolLEngineDefault : IDisposable
{
	[Token(Token = "0x400072D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x400072E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x6000DC5")]
	[Address(RVA = "0x14C5F3C", Offset = "0x14C5F3C", VA = "0x14C5F3C")]
	internal _ArrayPoolLEngineDefault(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6000DC6")]
	[Address(RVA = "0x14C5F7C", Offset = "0x14C5F7C", VA = "0x14C5F7C")]
	internal static IntPtr getCPtr(_ArrayPoolLEngineDefault obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6000DC7")]
	[Address(RVA = "0x14C5FCC", Offset = "0x14C5FCC", VA = "0x14C5FCC", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6000DC8")]
	[Address(RVA = "0x14C6000", Offset = "0x14C6000", VA = "0x14C6000", Slot = "1")]
	~_ArrayPoolLEngineDefault()
	{
	}

	[Token(Token = "0x6000DC9")]
	[Address(RVA = "0x14C6070", Offset = "0x14C6070", VA = "0x14C6070", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6000DCA")]
	[Address(RVA = "0x14C619C", Offset = "0x14C619C", VA = "0x14C619C")]
	public static int Get()
	{
		return default(int);
	}

	[Token(Token = "0x6000DCB")]
	[Address(RVA = "0x14C61FC", Offset = "0x14C61FC", VA = "0x14C61FC")]
	public _ArrayPoolLEngineDefault()
	{
	}
}
[Token(Token = "0x2000116")]
public class _ArrayPoolSpatialAudio : IDisposable
{
	[Token(Token = "0x400072F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4000730")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x6000DCC")]
	[Address(RVA = "0x14C6280", Offset = "0x14C6280", VA = "0x14C6280")]
	internal _ArrayPoolSpatialAudio(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6000DCD")]
	[Address(RVA = "0x14C62C0", Offset = "0x14C62C0", VA = "0x14C62C0")]
	internal static IntPtr getCPtr(_ArrayPoolSpatialAudio obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6000DCE")]
	[Address(RVA = "0x14C6310", Offset = "0x14C6310", VA = "0x14C6310", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6000DCF")]
	[Address(RVA = "0x14C6344", Offset = "0x14C6344", VA = "0x14C6344", Slot = "1")]
	~_ArrayPoolSpatialAudio()
	{
	}

	[Token(Token = "0x6000DD0")]
	[Address(RVA = "0x14C63B4", Offset = "0x14C63B4", VA = "0x14C63B4", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6000DD1")]
	[Address(RVA = "0x14C64E0", Offset = "0x14C64E0", VA = "0x14C64E0")]
	public static int Get()
	{
		return default(int);
	}

	[Token(Token = "0x6000DD2")]
	[Address(RVA = "0x14C6540", Offset = "0x14C6540", VA = "0x14C6540")]
	public _ArrayPoolSpatialAudio()
	{
	}
}
[Token(Token = "0x2000117")]
public class AkAndroidSettings : AkWwiseInitializationSettings.PlatformSettings
{
	[Serializable]
	[Token(Token = "0x2000244")]
	public class PlatformAdvancedSettings : AkCommonAdvancedSettings
	{
		[Token(Token = "0x2000280")]
		public enum AudioAPI
		{
			[Token(Token = "0x4000BC9")]
			None = 0,
			[Token(Token = "0x4000BCA")]
			AAudio = 1,
			[Token(Token = "0x4000BCB")]
			OpenSL_ES = 2,
			[Token(Token = "0x4000BCC")]
			Default = -1
		}

		[Token(Token = "0x4000B5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7065A0", Offset = "0x7065A0")]
		[AttributeAttribute(Name = "AkEnumFlagAttribute", RVA = "0x7065A0", Offset = "0x7065A0")]
		public AudioAPI m_AudioAPI;

		[Token(Token = "0x4000B5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x706628", Offset = "0x706628")]
		public bool m_RoundFrameSizeToHardwareSize;

		[Token(Token = "0x60013F4")]
		[Address(RVA = "0xD833E0", Offset = "0xD833E0", VA = "0xD833E0", Slot = "7")]
		public override void CopyTo(AkPlatformInitSettings settings)
		{
		}

		[Token(Token = "0x60013F5")]
		[Address(RVA = "0xD83424", Offset = "0xD83424", VA = "0xD83424")]
		public PlatformAdvancedSettings()
		{
		}
	}

	[Token(Token = "0x4000731")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public AkCommonUserSettings UserSettings;

	[Token(Token = "0x4000732")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public PlatformAdvancedSettings AdvancedSettings;

	[Token(Token = "0x4000733")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	public AkCommonCommSettings CommsSettings;

	[Token(Token = "0x6000DD3")]
	[Address(RVA = "0xD83118", Offset = "0xD83118", VA = "0xD83118")]
	public AkAndroidSettings()
	{
	}

	[Token(Token = "0x6000DD4")]
	[Address(RVA = "0xD833C8", Offset = "0xD833C8", VA = "0xD833C8", Slot = "12")]
	protected override AkCommonUserSettings GetUserSettings()
	{
		return null;
	}

	[Token(Token = "0x6000DD5")]
	[Address(RVA = "0xD833D0", Offset = "0xD833D0", VA = "0xD833D0", Slot = "13")]
	protected override AkCommonAdvancedSettings GetAdvancedSettings()
	{
		return null;
	}

	[Token(Token = "0x6000DD6")]
	[Address(RVA = "0xD833D8", Offset = "0xD833D8", VA = "0xD833D8", Slot = "14")]
	protected override AkCommonCommSettings GetCommsSettings()
	{
		return null;
	}
}
[Token(Token = "0x2000118")]
public static class AkAudioInputManager
{
	[Token(Token = "0x2000245")]
	public delegate void AudioFormatDelegate(uint playingID, AkAudioFormat format);

	[Token(Token = "0x2000246")]
	[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x701370", Offset = "0x701370")]
	public delegate void AudioFormatInteropDelegate(uint playingID, IntPtr format);

	[Token(Token = "0x2000247")]
	public delegate bool AudioSamplesDelegate(uint playingID, uint channelIndex, float[] samples);

	[Token(Token = "0x2000248")]
	[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x701384", Offset = "0x701384")]
	public delegate bool AudioSamplesInteropDelegate(uint playingID, [In][Out] float[] samples, uint channelIndex, uint frames);

	[Token(Token = "0x4000734")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool initialized;

	[Token(Token = "0x4000735")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static readonly Dictionary<uint, AudioSamplesDelegate> audioSamplesDelegates;

	[Token(Token = "0x4000736")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static readonly Dictionary<uint, AudioFormatDelegate> audioFormatDelegates;

	[Token(Token = "0x4000737")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static readonly AkAudioFormat audioFormat;

	[Token(Token = "0x4000738")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static readonly AudioSamplesInteropDelegate audioSamplesDelegate;

	[Token(Token = "0x4000739")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static readonly AudioFormatInteropDelegate audioFormatDelegate;

	[Token(Token = "0x6000DD7")]
	[Address(RVA = "0xD84364", Offset = "0xD84364", VA = "0xD84364")]
	public static uint PostAudioInputEvent(Event akEvent, GameObject gameObject, AudioSamplesDelegate sampleDelegate, [Optional] AudioFormatDelegate formatDelegate)
	{
		return default(uint);
	}

	[Token(Token = "0x6000DD8")]
	[Address(RVA = "0xD84608", Offset = "0xD84608", VA = "0xD84608")]
	public static uint PostAudioInputEvent(uint akEventID, GameObject gameObject, AudioSamplesDelegate sampleDelegate, [Optional] AudioFormatDelegate formatDelegate)
	{
		return default(uint);
	}

	[Token(Token = "0x6000DD9")]
	[Address(RVA = "0xD84704", Offset = "0xD84704", VA = "0xD84704")]
	public static uint PostAudioInputEvent(string akEventName, GameObject gameObject, AudioSamplesDelegate sampleDelegate, [Optional] AudioFormatDelegate formatDelegate)
	{
		return default(uint);
	}

	[Token(Token = "0x6000DDA")]
	[Address(RVA = "0xD84150", Offset = "0xD84150", VA = "0xD84150")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x708880", Offset = "0x708880")]
	private static bool InternalAudioSamplesDelegate(uint playingID, float[] samples, uint channelIndex, uint frames)
	{
		return default(bool);
	}

	[Token(Token = "0x6000DDB")]
	[Address(RVA = "0xD8424C", Offset = "0xD8424C", VA = "0xD8424C")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x7088E4", Offset = "0x7088E4")]
	private static void InternalAudioFormatDelegate(uint playingID, IntPtr format)
	{
	}

	[Token(Token = "0x6000DDC")]
	[Address(RVA = "0xD84440", Offset = "0xD84440", VA = "0xD84440")]
	private static void TryInitialize()
	{
	}

	[Token(Token = "0x6000DDD")]
	[Address(RVA = "0xD84514", Offset = "0xD84514", VA = "0xD84514")]
	private static void AddPlayingID(uint playingID, AudioSamplesDelegate sampleDelegate, AudioFormatDelegate formatDelegate)
	{
	}

	[Token(Token = "0x6000DDE")]
	[Address(RVA = "0xD84D20", Offset = "0xD84D20", VA = "0xD84D20")]
	private static void EventCallback(object cookie, AkCallbackType type, AkCallbackInfo callbackInfo)
	{
	}
}
[Token(Token = "0x2000119")]
public static class AkBankManager
{
	[Token(Token = "0x2000249")]
	private class BankHandle
	{
		[Token(Token = "0x4000B5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected readonly string bankName;

		[Token(Token = "0x4000B5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected uint m_BankID;

		[Token(Token = "0x4000B60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x706660", Offset = "0x706660")]
		private int <RefCount>k__BackingField;

		[Token(Token = "0x17000291")]
		public int RefCount
		{
			[Token(Token = "0x6001407")]
			[Address(RVA = "0xD89AF4", Offset = "0xD89AF4", VA = "0xD89AF4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x709F10", Offset = "0x709F10")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001408")]
			[Address(RVA = "0xD89AFC", Offset = "0xD89AFC", VA = "0xD89AFC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x709F20", Offset = "0x709F20")]
			private set
			{
			}
		}

		[Token(Token = "0x6001406")]
		[Address(RVA = "0xD88E40", Offset = "0xD88E40", VA = "0xD88E40")]
		public BankHandle(string name)
		{
		}

		[Token(Token = "0x6001409")]
		[Address(RVA = "0xD89B04", Offset = "0xD89B04", VA = "0xD89B04", Slot = "4")]
		public virtual AKRESULT DoLoadBank()
		{
			return default(AKRESULT);
		}

		[Token(Token = "0x600140A")]
		[Address(RVA = "0xD89104", Offset = "0xD89104", VA = "0xD89104")]
		public void LoadBank()
		{
		}

		[Token(Token = "0x600140B")]
		[Address(RVA = "0xD89B7C", Offset = "0xD89B7C", VA = "0xD89B7C", Slot = "5")]
		public virtual void UnloadBank()
		{
		}

		[Token(Token = "0x600140C")]
		[Address(RVA = "0xD89200", Offset = "0xD89200", VA = "0xD89200")]
		public void IncRef()
		{
		}

		[Token(Token = "0x600140D")]
		[Address(RVA = "0xD8924C", Offset = "0xD8924C", VA = "0xD8924C")]
		public void DecRef()
		{
		}

		[Token(Token = "0x600140E")]
		[Address(RVA = "0xD89558", Offset = "0xD89558", VA = "0xD89558")]
		protected void LogLoadResult(AKRESULT result)
		{
		}
	}

	[Token(Token = "0x200024A")]
	private class AsyncBankHandle : BankHandle
	{
		[Token(Token = "0x4000B61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly AkCallbackManager.BankCallback bankCallback;

		[Token(Token = "0x600140F")]
		[Address(RVA = "0xD89210", Offset = "0xD89210", VA = "0xD89210")]
		public AsyncBankHandle(string name, AkCallbackManager.BankCallback callback)
		{
		}

		[Token(Token = "0x6001410")]
		[Address(RVA = "0xD893B8", Offset = "0xD893B8", VA = "0xD893B8")]
		private static void GlobalBankCallback(uint in_bankID, IntPtr in_pInMemoryBankPtr, AKRESULT in_eLoadResult, uint in_memPoolId, object in_Cookie)
		{
		}

		[Token(Token = "0x6001411")]
		[Address(RVA = "0xD89A30", Offset = "0xD89A30", VA = "0xD89A30", Slot = "4")]
		public override AKRESULT DoLoadBank()
		{
			return default(AKRESULT);
		}
	}

	[Token(Token = "0x200024B")]
	private class DecodableBankHandle : BankHandle
	{
		[Token(Token = "0x4000B62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly bool decodeBank;

		[Token(Token = "0x4000B63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly string decodedBankPath;

		[Token(Token = "0x4000B64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly bool saveDecodedBank;

		[Token(Token = "0x6001412")]
		[Address(RVA = "0xD88E6C", Offset = "0xD88E6C", VA = "0xD88E6C")]
		public DecodableBankHandle(string name, bool save)
		{
		}

		[Token(Token = "0x6001413")]
		[Address(RVA = "0xD89CDC", Offset = "0xD89CDC", VA = "0xD89CDC", Slot = "4")]
		public override AKRESULT DoLoadBank()
		{
			return default(AKRESULT);
		}

		[Token(Token = "0x6001414")]
		[Address(RVA = "0xD89E70", Offset = "0xD89E70", VA = "0xD89E70", Slot = "5")]
		public override void UnloadBank()
		{
		}
	}

	[Token(Token = "0x400073A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Dictionary<string, BankHandle> m_BankHandles;

	[Token(Token = "0x400073B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static readonly List<BankHandle> BanksToUnload;

	[Token(Token = "0x400073C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static readonly Mutex m_Mutex;

	[Token(Token = "0x6000DE0")]
	[Address(RVA = "0xD88AEC", Offset = "0xD88AEC", VA = "0xD88AEC")]
	internal static void DoUnloadBanks()
	{
	}

	[Token(Token = "0x6000DE1")]
	[Address(RVA = "0xD88C10", Offset = "0xD88C10", VA = "0xD88C10")]
	internal static void Reset()
	{
	}

	[Token(Token = "0x6000DE2")]
	[Address(RVA = "0xD88CAC", Offset = "0xD88CAC", VA = "0xD88CAC")]
	public static void LoadInitBank(bool doReset = true)
	{
	}

	[Token(Token = "0x6000DE3")]
	[Address(RVA = "0xD88DD0", Offset = "0xD88DD0", VA = "0xD88DD0")]
	public static void UnloadInitBank()
	{
	}

	[Token(Token = "0x6000DE4")]
	[Address(RVA = "0xD7F9AC", Offset = "0xD7F9AC", VA = "0xD7F9AC")]
	public static void LoadBank(string name, bool decodeBank, bool saveDecodedBank)
	{
	}

	[Token(Token = "0x6000DE5")]
	[Address(RVA = "0xD7FC20", Offset = "0xD7FC20", VA = "0xD7FC20")]
	public static void LoadBankAsync(string name, [Optional] AkCallbackManager.BankCallback callback)
	{
	}

	[Token(Token = "0x6000DE6")]
	[Address(RVA = "0xD7FE54", Offset = "0xD7FE54", VA = "0xD7FE54")]
	public static void UnloadBank(string name)
	{
	}
}
[Token(Token = "0x200011A")]
public class AkBasePathGetter
{
	[Token(Token = "0x400073D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string DefaultBasePath;

	[Token(Token = "0x6000DE8")]
	[Address(RVA = "0xD89F00", Offset = "0xD89F00", VA = "0xD89F00")]
	public static string GetPlatformName()
	{
		return null;
	}

	[Token(Token = "0x6000DE9")]
	[Address(RVA = "0xD89F70", Offset = "0xD89F70", VA = "0xD89F70")]
	public static string GetPlatformBasePath()
	{
		return null;
	}

	[Token(Token = "0x6000DEA")]
	[Address(RVA = "0xD8A02C", Offset = "0xD8A02C", VA = "0xD8A02C")]
	public static string GetFullSoundBankPath()
	{
		return null;
	}

	[Token(Token = "0x6000DEB")]
	[Address(RVA = "0xD8A1AC", Offset = "0xD8A1AC", VA = "0xD8A1AC")]
	public static void FixSlashes(ref string path, char separatorChar, char badChar, bool addTrailingSlash)
	{
	}

	[Token(Token = "0x6000DEC")]
	[Address(RVA = "0xD8A0F8", Offset = "0xD8A0F8", VA = "0xD8A0F8")]
	public static void FixSlashes(ref string path)
	{
	}

	[Token(Token = "0x6000DED")]
	[Address(RVA = "0xD89BF4", Offset = "0xD89BF4", VA = "0xD89BF4")]
	public static string GetSoundbankBasePath()
	{
		return null;
	}

	[Token(Token = "0x6000DEE")]
	[Address(RVA = "0xD8A2E8", Offset = "0xD8A2E8", VA = "0xD8A2E8")]
	public AkBasePathGetter()
	{
	}
}
[Token(Token = "0x200011B")]
public static class AkCallbackManager
{
	[Token(Token = "0x200024C")]
	public delegate void EventCallback(object in_cookie, AkCallbackType in_type, AkCallbackInfo in_info);

	[Token(Token = "0x200024D")]
	public delegate void MonitoringCallback(AkMonitorErrorCode in_errorCode, AkMonitorErrorLevel in_errorLevel, uint in_playingID, ulong in_gameObjID, string in_msg);

	[Token(Token = "0x200024E")]
	public delegate void BankCallback(uint in_bankID, IntPtr in_InMemoryBankPtr, AKRESULT in_eLoadResult, uint in_memPoolId, object in_Cookie);

	[Token(Token = "0x200024F")]
	public class EventCallbackPackage
	{
		[Token(Token = "0x4000B65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool m_bNotifyEndOfEvent;

		[Token(Token = "0x4000B66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public EventCallback m_Callback;

		[Token(Token = "0x4000B67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public object m_Cookie;

		[Token(Token = "0x4000B68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public uint m_playingID;

		[Token(Token = "0x6001421")]
		[Address(RVA = "0xD8D560", Offset = "0xD8D560", VA = "0xD8D560")]
		public static EventCallbackPackage Create(EventCallback in_cb, object in_cookie, ref uint io_Flags)
		{
			return null;
		}

		[Token(Token = "0x6001422")]
		[Address(RVA = "0xD8D674", Offset = "0xD8D674", VA = "0xD8D674")]
		public EventCallbackPackage()
		{
		}
	}

	[Token(Token = "0x2000250")]
	public class BankCallbackPackage
	{
		[Token(Token = "0x4000B69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public BankCallback m_Callback;

		[Token(Token = "0x4000B6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public object m_Cookie;

		[Token(Token = "0x6001423")]
		[Address(RVA = "0xD8D3F8", Offset = "0xD8D3F8", VA = "0xD8D3F8")]
		public BankCallbackPackage(BankCallback in_cb, object in_cookie)
		{
		}
	}

	[Token(Token = "0x2000251")]
	public delegate AKRESULT BGMCallback(bool in_bOtherAudioPlaying, object in_Cookie);

	[Token(Token = "0x2000252")]
	public class BGMCallbackPackage
	{
		[Token(Token = "0x4000B6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public BGMCallback m_Callback;

		[Token(Token = "0x4000B6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public object m_Cookie;

		[Token(Token = "0x6001428")]
		[Address(RVA = "0xD8B780", Offset = "0xD8B780", VA = "0xD8B780")]
		public BGMCallbackPackage()
		{
		}
	}

	[Token(Token = "0x2000253")]
	public class InitializationSettings
	{
		[Token(Token = "0x4000B6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static int DefaultBufferSize;

		[Token(Token = "0x4000B6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public static bool DefaultIsLoggingEnabled;

		[Token(Token = "0x4000B6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int BufferSize;

		[Token(Token = "0x4000B70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public bool IsLoggingEnabled;

		[Token(Token = "0x6001429")]
		[Address(RVA = "0xD8A490", Offset = "0xD8A490", VA = "0xD8A490")]
		public InitializationSettings()
		{
		}
	}

	[Token(Token = "0x400073E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x704554", Offset = "0x704554")]
	private static bool <IsLoggingEnabled>k__BackingField;

	[Token(Token = "0x400073F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static readonly AkEventCallbackInfo AkEventCallbackInfo;

	[Token(Token = "0x4000740")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static readonly AkDynamicSequenceItemCallbackInfo AkDynamicSequenceItemCallbackInfo;

	[Token(Token = "0x4000741")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static readonly AkMIDIEventCallbackInfo AkMIDIEventCallbackInfo;

	[Token(Token = "0x4000742")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static readonly AkMarkerCallbackInfo AkMarkerCallbackInfo;

	[Token(Token = "0x4000743")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static readonly AkDurationCallbackInfo AkDurationCallbackInfo;

	[Token(Token = "0x4000744")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static readonly AkMusicSyncCallbackInfo AkMusicSyncCallbackInfo;

	[Token(Token = "0x4000745")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private static readonly AkMusicPlaylistCallbackInfo AkMusicPlaylistCallbackInfo;

	[Token(Token = "0x4000746")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static readonly AkAudioSourceChangeCallbackInfo AkAudioSourceChangeCallbackInfo;

	[Token(Token = "0x4000747")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static readonly AkMonitoringCallbackInfo AkMonitoringCallbackInfo;

	[Token(Token = "0x4000748")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private static readonly AkBankCallbackInfo AkBankCallbackInfo;

	[Token(Token = "0x4000749")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private static readonly Dictionary<int, EventCallbackPackage> m_mapEventCallbacks;

	[Token(Token = "0x400074A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static readonly Dictionary<int, BankCallbackPackage> m_mapBankCallbacks;

	[Token(Token = "0x400074B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private static EventCallbackPackage m_LastAddedEventPackage;

	[Token(Token = "0x400074C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private static IntPtr m_pNotifMem;

	[Token(Token = "0x400074D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private static MonitoringCallback m_MonitoringCB;

	[Token(Token = "0x400074E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private static BGMCallbackPackage ms_sourceChangeCallbackPkg;

	[Token(Token = "0x17000163")]
	private static bool IsLoggingEnabled
	{
		[Token(Token = "0x6000DF0")]
		[Address(RVA = "0xD8AA74", Offset = "0xD8AA74", VA = "0xD8AA74")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x708948", Offset = "0x708948")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000DF1")]
		[Address(RVA = "0xD8AADC", Offset = "0xD8AADC", VA = "0xD8AADC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x708958", Offset = "0x708958")]
		set
		{
		}
	}

	[Token(Token = "0x6000DF2")]
	[Address(RVA = "0xD8AB4C", Offset = "0xD8AB4C", VA = "0xD8AB4C")]
	public static void RemoveEventCallback(uint in_playingID)
	{
	}

	[Token(Token = "0x6000DF3")]
	[Address(RVA = "0xD8AD88", Offset = "0xD8AD88", VA = "0xD8AD88")]
	public static void RemoveEventCallbackCookie(object in_cookie)
	{
	}

	[Token(Token = "0x6000DF4")]
	[Address(RVA = "0xD8AFE8", Offset = "0xD8AFE8", VA = "0xD8AFE8")]
	public static void RemoveBankCallback(object in_cookie)
	{
	}

	[Token(Token = "0x6000DF5")]
	[Address(RVA = "0xD8B248", Offset = "0xD8B248", VA = "0xD8B248")]
	public static void SetLastAddedPlayingID(uint in_playingID)
	{
	}

	[Token(Token = "0x6000DF6")]
	[Address(RVA = "0xD8B310", Offset = "0xD8B310", VA = "0xD8B310")]
	public static AKRESULT Init(InitializationSettings settings)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000DF7")]
	[Address(RVA = "0xD8B4B8", Offset = "0xD8B4B8", VA = "0xD8B4B8")]
	public static void Term()
	{
	}

	[Token(Token = "0x6000DF8")]
	[Address(RVA = "0xD8B5F4", Offset = "0xD8B5F4", VA = "0xD8B5F4")]
	public static void SetMonitoringCallback(AkMonitorErrorLevel in_Level, MonitoringCallback in_CB)
	{
	}

	[Token(Token = "0x6000DF9")]
	[Address(RVA = "0xD8B6E0", Offset = "0xD8B6E0", VA = "0xD8B6E0")]
	public static void SetBGMCallback(BGMCallback in_CB, object in_cookie)
	{
	}

	[Token(Token = "0x6000DFA")]
	[Address(RVA = "0xD8B788", Offset = "0xD8B788", VA = "0xD8B788")]
	public static int PostCallbacks()
	{
		return default(int);
	}
}
[Token(Token = "0x200011C")]
public class AkBasePlatformSettings : ScriptableObject
{
	[Token(Token = "0x17000164")]
	public virtual AkInitializationSettings AkInitializationSettings
	{
		[Token(Token = "0x6000DFC")]
		[Address(RVA = "0xD8A380", Offset = "0xD8A380", VA = "0xD8A380", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000165")]
	public virtual AkSpatialAudioInitSettings AkSpatialAudioInitSettings
	{
		[Token(Token = "0x6000DFD")]
		[Address(RVA = "0xD8A3DC", Offset = "0xD8A3DC", VA = "0xD8A3DC", Slot = "5")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000166")]
	public virtual AkCallbackManager.InitializationSettings CallbackManagerInitializationSettings
	{
		[Token(Token = "0x6000DFE")]
		[Address(RVA = "0xD8A438", Offset = "0xD8A438", VA = "0xD8A438", Slot = "6")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000167")]
	public virtual string InitialLanguage
	{
		[Token(Token = "0x6000DFF")]
		[Address(RVA = "0xD8A514", Offset = "0xD8A514", VA = "0xD8A514", Slot = "7")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000168")]
	public virtual bool RenderDuringFocusLoss
	{
		[Token(Token = "0x6000E00")]
		[Address(RVA = "0xD8A55C", Offset = "0xD8A55C", VA = "0xD8A55C", Slot = "8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000169")]
	public virtual string SoundbankPath
	{
		[Token(Token = "0x6000E01")]
		[Address(RVA = "0xD8A564", Offset = "0xD8A564", VA = "0xD8A564", Slot = "9")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700016A")]
	public virtual AkCommunicationSettings AkCommunicationSettings
	{
		[Token(Token = "0x6000E02")]
		[Address(RVA = "0xD8A5CC", Offset = "0xD8A5CC", VA = "0xD8A5CC", Slot = "10")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700016B")]
	public virtual bool UseAsyncOpen
	{
		[Token(Token = "0x6000E03")]
		[Address(RVA = "0xD8A6A8", Offset = "0xD8A6A8", VA = "0xD8A6A8", Slot = "11")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000E04")]
	[Address(RVA = "0xD8A6B0", Offset = "0xD8A6B0", VA = "0xD8A6B0")]
	public AkBasePlatformSettings()
	{
	}
}
[Serializable]
[Token(Token = "0x200011D")]
public class AkCommonOutputSettings
{
	[Token(Token = "0x2000254")]
	public enum PanningRule
	{
		[Token(Token = "0x4000B72")]
		Speakers,
		[Token(Token = "0x4000B73")]
		Headphones
	}

	[Serializable]
	[Token(Token = "0x2000255")]
	public class ChannelConfiguration
	{
		[Token(Token = "0x2000281")]
		public enum ChannelConfigType
		{
			[Token(Token = "0x4000BCE")]
			Anonymous,
			[Token(Token = "0x4000BCF")]
			Standard,
			[Token(Token = "0x4000BD0")]
			Ambisonic
		}

		[Token(Token = "0x2000282")]
		public enum ChannelMask
		{
			[Token(Token = "0x4000BD2")]
			NONE = 0,
			[Token(Token = "0x4000BD3")]
			FRONT_LEFT = 1,
			[Token(Token = "0x4000BD4")]
			FRONT_RIGHT = 2,
			[Token(Token = "0x4000BD5")]
			FRONT_CENTER = 4,
			[Token(Token = "0x4000BD6")]
			LOW_FREQUENCY = 8,
			[Token(Token = "0x4000BD7")]
			BACK_LEFT = 16,
			[Token(Token = "0x4000BD8")]
			BACK_RIGHT = 32,
			[Token(Token = "0x4000BD9")]
			BACK_CENTER = 256,
			[Token(Token = "0x4000BDA")]
			SIDE_LEFT = 512,
			[Token(Token = "0x4000BDB")]
			SIDE_RIGHT = 1024,
			[Token(Token = "0x4000BDC")]
			TOP = 2048,
			[Token(Token = "0x4000BDD")]
			HEIGHT_FRONT_LEFT = 4096,
			[Token(Token = "0x4000BDE")]
			HEIGHT_FRONT_CENTER = 8192,
			[Token(Token = "0x4000BDF")]
			HEIGHT_FRONT_RIGHT = 16384,
			[Token(Token = "0x4000BE0")]
			HEIGHT_BACK_LEFT = 32768,
			[Token(Token = "0x4000BE1")]
			HEIGHT_BACK_CENTER = 65536,
			[Token(Token = "0x4000BE2")]
			HEIGHT_BACK_RIGHT = 131072,
			[Token(Token = "0x4000BE3")]
			SETUP_MONO = 4,
			[Token(Token = "0x4000BE4")]
			SETUP_0POINT1 = 8,
			[Token(Token = "0x4000BE5")]
			SETUP_1POINT1 = 12,
			[Token(Token = "0x4000BE6")]
			SETUP_STEREO = 3,
			[Token(Token = "0x4000BE7")]
			SETUP_2POINT1 = 11,
			[Token(Token = "0x4000BE8")]
			SETUP_3STEREO = 7,
			[Token(Token = "0x4000BE9")]
			SETUP_3POINT1 = 15,
			[Token(Token = "0x4000BEA")]
			SETUP_4 = 1539,
			[Token(Token = "0x4000BEB")]
			SETUP_4POINT1 = 1547,
			[Token(Token = "0x4000BEC")]
			SETUP_5 = 1543,
			[Token(Token = "0x4000BED")]
			SETUP_5POINT1 = 1551,
			[Token(Token = "0x4000BEE")]
			SETUP_6 = 1587,
			[Token(Token = "0x4000BEF")]
			SETUP_6POINT1 = 1595,
			[Token(Token = "0x4000BF0")]
			SETUP_7 = 1591,
			[Token(Token = "0x4000BF1")]
			SETUP_7POINT1 = 1599,
			[Token(Token = "0x4000BF2")]
			SETUP_SURROUND = 259,
			[Token(Token = "0x4000BF3")]
			SETUP_DPL2 = 1539,
			[Token(Token = "0x4000BF4")]
			SETUP_HEIGHT_4 = 184320,
			[Token(Token = "0x4000BF5")]
			SETUP_HEIGHT_5 = 192512,
			[Token(Token = "0x4000BF6")]
			SETUP_HEIGHT_ALL = 258048,
			[Token(Token = "0x4000BF7")]
			SETUP_AURO_222 = 22019,
			[Token(Token = "0x4000BF8")]
			SETUP_AURO_8 = 185859,
			[Token(Token = "0x4000BF9")]
			SETUP_AURO_9 = 185863,
			[Token(Token = "0x4000BFA")]
			SETUP_AURO_9POINT1 = 185871,
			[Token(Token = "0x4000BFB")]
			SETUP_AURO_10 = 187911,
			[Token(Token = "0x4000BFC")]
			SETUP_AURO_10POINT1 = 187919,
			[Token(Token = "0x4000BFD")]
			SETUP_AURO_11 = 196103,
			[Token(Token = "0x4000BFE")]
			SETUP_AURO_11POINT1 = 196111,
			[Token(Token = "0x4000BFF")]
			SETUP_AURO_11_740 = 185911,
			[Token(Token = "0x4000C00")]
			SETUP_AURO_11POINT1_740 = 185919,
			[Token(Token = "0x4000C01")]
			SETUP_AURO_13_751 = 196151,
			[Token(Token = "0x4000C02")]
			SETUP_AURO_13POINT1_751 = 196159,
			[Token(Token = "0x4000C03")]
			SETUP_DOLBY_5_0_2 = 22023,
			[Token(Token = "0x4000C04")]
			SETUP_DOLBY_5_1_2 = 22031,
			[Token(Token = "0x4000C05")]
			SETUP_DOLBY_6_0_2 = 22067,
			[Token(Token = "0x4000C06")]
			SETUP_DOLBY_6_1_2 = 22075,
			[Token(Token = "0x4000C07")]
			SETUP_DOLBY_6_0_4 = 185907,
			[Token(Token = "0x4000C08")]
			SETUP_DOLBY_6_1_4 = 185915,
			[Token(Token = "0x4000C09")]
			SETUP_DOLBY_7_0_2 = 22071,
			[Token(Token = "0x4000C0A")]
			SETUP_DOLBY_7_1_2 = 22079,
			[Token(Token = "0x4000C0B")]
			SETUP_DOLBY_7_0_4 = 185911,
			[Token(Token = "0x4000C0C")]
			SETUP_DOLBY_7_1_4 = 185919,
			[Token(Token = "0x4000C0D")]
			SETUP_ALL_SPEAKERS = 261951
		}

		[Token(Token = "0x4000B74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x706670", Offset = "0x706670")]
		public ChannelConfigType m_ChannelConfigType;

		[Token(Token = "0x4000B75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7066A8", Offset = "0x7066A8")]
		[AttributeAttribute(Name = "AkEnumFlagAttribute", RVA = "0x7066A8", Offset = "0x7066A8")]
		public ChannelMask m_ChannelMask;

		[Token(Token = "0x4000B76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x706730", Offset = "0x706730")]
		public uint m_NumberOfChannels;

		[Token(Token = "0x600142B")]
		[Address(RVA = "0xD8FA1C", Offset = "0xD8FA1C", VA = "0xD8FA1C")]
		public void CopyTo(AkChannelConfig config)
		{
		}

		[Token(Token = "0x600142C")]
		[Address(RVA = "0xD833C0", Offset = "0xD833C0", VA = "0xD833C0")]
		public ChannelConfiguration()
		{
		}
	}

	[Token(Token = "0x400074F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x704564", Offset = "0x704564")]
	public string m_AudioDeviceShareset;

	[Token(Token = "0x4000750")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x70459C", Offset = "0x70459C")]
	public uint m_DeviceID;

	[Token(Token = "0x4000751")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7045D4", Offset = "0x7045D4")]
	public PanningRule m_PanningRule;

	[Token(Token = "0x4000752")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x70460C", Offset = "0x70460C")]
	public ChannelConfiguration m_ChannelConfig;

	[Token(Token = "0x6000E05")]
	[Address(RVA = "0xD8F930", Offset = "0xD8F930", VA = "0xD8F930")]
	public void CopyTo(AkOutputSettings settings)
	{
	}

	[Token(Token = "0x6000E06")]
	[Address(RVA = "0xD83340", Offset = "0xD83340", VA = "0xD83340")]
	public AkCommonOutputSettings()
	{
	}
}
[Token(Token = "0x200011E")]
public class AkSettingsValidationHandler
{
	[Token(Token = "0x6000E07")]
	[Address(RVA = "0x9E8148", Offset = "0x9E8148", VA = "0x9E8148", Slot = "4")]
	public virtual void Validate()
	{
	}

	[Token(Token = "0x6000E08")]
	[Address(RVA = "0x9E814C", Offset = "0x9E814C", VA = "0x9E814C")]
	public AkSettingsValidationHandler()
	{
	}
}
[Serializable]
[Token(Token = "0x200011F")]
public class AkCommonUserSettings : AkSettingsValidationHandler
{
	[Serializable]
	[Token(Token = "0x2000256")]
	public class SpatialAudioSettings
	{
		[Token(Token = "0x2000283")]
		public enum DiffractionFlags
		{
			[Token(Token = "0x4000C0F")]
			UseBuiltInParam = 1,
			[Token(Token = "0x4000C10")]
			UseObstruction = 2,
			[Token(Token = "0x4000C11")]
			CalcEmitterVirtualPosition = 8
		}

		[Token(Token = "0x4000B77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x706768", Offset = "0x706768")]
		public uint m_PoolSize;

		[Token(Token = "0x4000B78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7067A0", Offset = "0x7067A0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7067A0", Offset = "0x7067A0")]
		public uint m_MaxSoundPropagationDepth;

		[Token(Token = "0x4000B79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7067F4", Offset = "0x7067F4")]
		[AttributeAttribute(Name = "AkEnumFlagAttribute", RVA = "0x7067F4", Offset = "0x7067F4")]
		public DiffractionFlags m_DiffractionFlags;

		[Token(Token = "0x4000B7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x70687C", Offset = "0x70687C")]
		public float m_MovementThreshold;

		[Token(Token = "0x600142D")]
		[Address(RVA = "0xD900A0", Offset = "0xD900A0", VA = "0xD900A0")]
		public SpatialAudioSettings()
		{
		}
	}

	[Token(Token = "0x4000753")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x704644", Offset = "0x704644")]
	public string m_BasePath;

	[Token(Token = "0x4000754")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x70467C", Offset = "0x70467C")]
	public string m_StartupLanguage;

	[Token(Token = "0x4000755")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7046B4", Offset = "0x7046B4")]
	public uint m_PreparePoolSize;

	[Token(Token = "0x4000756")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7046EC", Offset = "0x7046EC")]
	public int m_CallbackManagerBufferSize;

	[Token(Token = "0x4000757")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x704724", Offset = "0x704724")]
	public bool m_EngineLogging;

	[Token(Token = "0x4000758")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x70475C", Offset = "0x70475C")]
	public uint m_MaximumNumberOfMemoryPools;

	[Token(Token = "0x4000759")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x704794", Offset = "0x704794")]
	public uint m_MaximumNumberOfPositioningPaths;

	[Token(Token = "0x400075A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7047CC", Offset = "0x7047CC")]
	public uint m_DefaultPoolSize;

	[Token(Token = "0x400075B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x704804", Offset = "0x704804")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x704804", Offset = "0x704804")]
	public float m_MemoryCutoffThreshold;

	[Token(Token = "0x400075C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x704858", Offset = "0x704858")]
	public uint m_CommandQueueSize;

	[Token(Token = "0x400075D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x704890", Offset = "0x704890")]
	public uint m_SamplesPerFrame;

	[Token(Token = "0x400075E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7048C8", Offset = "0x7048C8")]
	public AkCommonOutputSettings m_MainOutputSettings;

	[Token(Token = "0x400075F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x704900", Offset = "0x704900")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x704900", Offset = "0x704900")]
	public float m_StreamingLookAheadRatio;

	[Token(Token = "0x4000760")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x704954", Offset = "0x704954")]
	public uint m_StreamManagerPoolSize;

	[Token(Token = "0x4000761")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x70498C", Offset = "0x70498C")]
	public uint m_SampleRate;

	[Token(Token = "0x4000762")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7049C4", Offset = "0x7049C4")]
	public uint m_LowerEnginePoolSize;

	[Token(Token = "0x4000763")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7049FC", Offset = "0x7049FC")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7049FC", Offset = "0x7049FC")]
	public float m_LowerEngineMemoryCutoffThreshold;

	[Token(Token = "0x4000764")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x704A50", Offset = "0x704A50")]
	public ushort m_NumberOfRefillsInVoice;

	[Token(Token = "0x4000765")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x704A88", Offset = "0x704A88")]
	public SpatialAudioSettings m_SpatialAudioSettings;

	[Token(Token = "0x6000E09")]
	[Address(RVA = "0xD8FC70", Offset = "0xD8FC70", VA = "0xD8FC70")]
	public void CopyTo(AkMemSettings settings)
	{
	}

	[Token(Token = "0x6000E0A")]
	[Address(RVA = "0xD8FEE4", Offset = "0xD8FEE4", VA = "0xD8FEE4")]
	protected static string GetPluginPath()
	{
		return null;
	}

	[Token(Token = "0x6000E0B")]
	[Address(RVA = "0xD8FEEC", Offset = "0xD8FEEC", VA = "0xD8FEEC", Slot = "5")]
	public virtual void CopyTo(AkInitSettings settings)
	{
	}

	[Token(Token = "0x6000E0C")]
	[Address(RVA = "0xD8FCB8", Offset = "0xD8FCB8", VA = "0xD8FCB8")]
	public void CopyTo(AkMusicSettings settings)
	{
	}

	[Token(Token = "0x6000E0D")]
	[Address(RVA = "0xD8FC94", Offset = "0xD8FC94", VA = "0xD8FC94")]
	public void CopyTo(AkStreamMgrSettings settings)
	{
	}

	[Token(Token = "0x6000E0E")]
	[Address(RVA = "0xD8FF90", Offset = "0xD8FF90", VA = "0xD8FF90", Slot = "6")]
	public virtual void CopyTo(AkDeviceSettings settings)
	{
	}

	[Token(Token = "0x6000E0F")]
	[Address(RVA = "0xD8FF94", Offset = "0xD8FF94", VA = "0xD8FF94", Slot = "7")]
	public virtual void CopyTo(AkPlatformInitSettings settings)
	{
	}

	[Token(Token = "0x6000E10")]
	[Address(RVA = "0xD8FFF8", Offset = "0xD8FFF8", VA = "0xD8FFF8", Slot = "8")]
	public virtual void CopyTo(AkSpatialAudioInitSettings settings)
	{
	}

	[Token(Token = "0x6000E11")]
	[Address(RVA = "0xD9007C", Offset = "0xD9007C", VA = "0xD9007C", Slot = "9")]
	public virtual void CopyTo(AkUnityPlatformSpecificSettings settings)
	{
	}

	[Token(Token = "0x6000E12")]
	[Address(RVA = "0xD90080", Offset = "0xD90080", VA = "0xD90080", Slot = "4")]
	public override void Validate()
	{
	}

	[Token(Token = "0x6000E13")]
	[Address(RVA = "0xD83238", Offset = "0xD83238", VA = "0xD83238")]
	public AkCommonUserSettings()
	{
	}
}
[Serializable]
[Token(Token = "0x2000120")]
public class AkCommonAdvancedSettings : AkSettingsValidationHandler
{
	[Serializable]
	[Token(Token = "0x2000257")]
	public class SpatialAudioSettings
	{
		[Token(Token = "0x4000B7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7068B4", Offset = "0x7068B4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7068B4", Offset = "0x7068B4")]
		public float m_DiffractionShadowAttenuationFactor;

		[Token(Token = "0x4000B7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x706908", Offset = "0x706908")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x706908", Offset = "0x706908")]
		public float m_DiffractionShadowDegrees;

		[Token(Token = "0x600142E")]
		[Address(RVA = "0xD8F4CC", Offset = "0xD8F4CC", VA = "0xD8F4CC")]
		public SpatialAudioSettings()
		{
		}
	}

	[Token(Token = "0x4000766")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x704AC0", Offset = "0x704AC0")]
	public uint m_IOMemorySize;

	[Token(Token = "0x4000767")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x704AF8", Offset = "0x704AF8")]
	public float m_TargetAutoStreamBufferLengthMs;

	[Token(Token = "0x4000768")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x704B30", Offset = "0x704B30")]
	public bool m_UseStreamCache;

	[Token(Token = "0x4000769")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x704B68", Offset = "0x704B68")]
	public uint m_MaximumPinnedBytesInCache;

	[Token(Token = "0x400076A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x704BA0", Offset = "0x704BA0")]
	public int m_PrepareEventMemoryPoolID;

	[Token(Token = "0x400076B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x704BD8", Offset = "0x704BD8")]
	public bool m_EnableGameSyncPreparation;

	[Token(Token = "0x400076C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x704C10", Offset = "0x704C10")]
	public uint m_ContinuousPlaybackLookAhead;

	[Token(Token = "0x400076D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x704C48", Offset = "0x704C48")]
	public uint m_MonitorPoolSize;

	[Token(Token = "0x400076E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x704C80", Offset = "0x704C80")]
	public uint m_MonitorQueuePoolSize;

	[Token(Token = "0x400076F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x704CB8", Offset = "0x704CB8")]
	public uint m_MaximumHardwareTimeoutMs;

	[Token(Token = "0x4000770")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x704CF0", Offset = "0x704CF0")]
	public bool m_DebugOutOfRangeCheckEnabled;

	[Token(Token = "0x4000771")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x704D28", Offset = "0x704D28")]
	public float m_DebugOutOfRangeLimit;

	[Token(Token = "0x4000772")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x704D60", Offset = "0x704D60")]
	public SpatialAudioSettings m_SpatialAudioSettings;

	[Token(Token = "0x4000773")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x704D98", Offset = "0x704D98")]
	public bool m_RenderDuringFocusLoss;

	[Token(Token = "0x4000774")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x704DD0", Offset = "0x704DD0")]
	public bool m_UseAsyncOpen;

	[Token(Token = "0x6000E14")]
	[Address(RVA = "0xD8F094", Offset = "0xD8F094", VA = "0xD8F094", Slot = "5")]
	public virtual void CopyTo(AkDeviceSettings settings)
	{
	}

	[Token(Token = "0x6000E15")]
	[Address(RVA = "0xD8F2D8", Offset = "0xD8F2D8", VA = "0xD8F2D8", Slot = "6")]
	public virtual void CopyTo(AkInitSettings settings)
	{
	}

	[Token(Token = "0x6000E16")]
	[Address(RVA = "0xD8F37C", Offset = "0xD8F37C", VA = "0xD8F37C", Slot = "7")]
	public virtual void CopyTo(AkPlatformInitSettings settings)
	{
	}

	[Token(Token = "0x6000E17")]
	[Address(RVA = "0xD8F380", Offset = "0xD8F380", VA = "0xD8F380", Slot = "8")]
	public virtual void CopyTo(AkSpatialAudioInitSettings settings)
	{
	}

	[Token(Token = "0x6000E18")]
	[Address(RVA = "0xD8F3D4", Offset = "0xD8F3D4", VA = "0xD8F3D4", Slot = "9")]
	public virtual void CopyTo(AkUnityPlatformSpecificSettings settings)
	{
	}

	[Token(Token = "0x6000E19")]
	[Address(RVA = "0xD8F3D8", Offset = "0xD8F3D8", VA = "0xD8F3D8", Slot = "4")]
	public override void Validate()
	{
	}

	[Token(Token = "0x6000E1A")]
	[Address(RVA = "0xD83464", Offset = "0xD83464", VA = "0xD83464")]
	public AkCommonAdvancedSettings()
	{
	}
}
[Serializable]
[Token(Token = "0x2000121")]
public class AkCommonCommSettings : AkSettingsValidationHandler
{
	[Token(Token = "0x4000775")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x704E08", Offset = "0x704E08")]
	public uint m_PoolSize;

	[Token(Token = "0x4000776")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static ushort DefaultDiscoveryBroadcastPort;

	[Token(Token = "0x4000777")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x704E40", Offset = "0x704E40")]
	public ushort m_DiscoveryBroadcastPort;

	[Token(Token = "0x4000778")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x704E78", Offset = "0x704E78")]
	public ushort m_CommandPort;

	[Token(Token = "0x4000779")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x704EB0", Offset = "0x704EB0")]
	public ushort m_NotificationPort;

	[Token(Token = "0x400077A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x704EE8", Offset = "0x704EE8")]
	public bool m_InitializeSystemComms;

	[Token(Token = "0x400077B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x704F20", Offset = "0x704F20")]
	public string m_NetworkName;

	[Token(Token = "0x6000E1B")]
	[Address(RVA = "0xD8F4E0", Offset = "0xD8F4E0", VA = "0xD8F4E0", Slot = "5")]
	public virtual void CopyTo(AkCommunicationSettings settings)
	{
	}

	[Token(Token = "0x6000E1C")]
	[Address(RVA = "0xD8F854", Offset = "0xD8F854", VA = "0xD8F854")]
	public AkCommonCommSettings()
	{
	}
}
[Token(Token = "0x2000122")]
public abstract class AkCommonPlatformSettings : AkBasePlatformSettings
{
	[Token(Token = "0x1700016C")]
	public override AkInitializationSettings AkInitializationSettings
	{
		[Token(Token = "0x6000E21")]
		[Address(RVA = "0xD8FA90", Offset = "0xD8FA90", VA = "0xD8FA90", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700016D")]
	public override AkSpatialAudioInitSettings AkSpatialAudioInitSettings
	{
		[Token(Token = "0x6000E22")]
		[Address(RVA = "0xD8FCD8", Offset = "0xD8FCD8", VA = "0xD8FCD8", Slot = "5")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700016E")]
	public override AkCallbackManager.InitializationSettings CallbackManagerInitializationSettings
	{
		[Token(Token = "0x6000E23")]
		[Address(RVA = "0xD8FD50", Offset = "0xD8FD50", VA = "0xD8FD50", Slot = "6")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700016F")]
	public override string InitialLanguage
	{
		[Token(Token = "0x6000E24")]
		[Address(RVA = "0xD8FDE0", Offset = "0xD8FDE0", VA = "0xD8FDE0", Slot = "7")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000170")]
	public override bool RenderDuringFocusLoss
	{
		[Token(Token = "0x6000E25")]
		[Address(RVA = "0xD8FE08", Offset = "0xD8FE08", VA = "0xD8FE08", Slot = "8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000171")]
	public override string SoundbankPath
	{
		[Token(Token = "0x6000E26")]
		[Address(RVA = "0xD8FE34", Offset = "0xD8FE34", VA = "0xD8FE34", Slot = "9")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000172")]
	public override bool UseAsyncOpen
	{
		[Token(Token = "0x6000E27")]
		[Address(RVA = "0xD8FE5C", Offset = "0xD8FE5C", VA = "0xD8FE5C", Slot = "11")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000173")]
	public override AkCommunicationSettings AkCommunicationSettings
	{
		[Token(Token = "0x6000E28")]
		[Address(RVA = "0xD8FE88", Offset = "0xD8FE88", VA = "0xD8FE88", Slot = "10")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000E1E")]
	protected abstract AkCommonUserSettings GetUserSettings();

	[Token(Token = "0x6000E1F")]
	protected abstract AkCommonAdvancedSettings GetAdvancedSettings();

	[Token(Token = "0x6000E20")]
	protected abstract AkCommonCommSettings GetCommsSettings();

	[Token(Token = "0x6000E29")]
	[Address(RVA = "0xD8FEDC", Offset = "0xD8FEDC", VA = "0xD8FEDC")]
	protected AkCommonPlatformSettings()
	{
	}
}
[Token(Token = "0x2000123")]
[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0x7001F0", Offset = "0x7001F0")]
public class AkEnumFlagAttribute : PropertyAttribute
{
	[Token(Token = "0x400077C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Type Type;

	[Token(Token = "0x6000E2A")]
	[Address(RVA = "0xD93944", Offset = "0xD93944", VA = "0xD93944")]
	public AkEnumFlagAttribute(Type type)
	{
	}
}
[Token(Token = "0x2000124")]
public class AkLogger
{
	[Token(Token = "0x2000258")]
	[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x701398", Offset = "0x701398")]
	public delegate void ErrorLoggerInteropDelegate(string message);

	[Token(Token = "0x400077D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static AkLogger ms_Instance;

	[Token(Token = "0x400077E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private ErrorLoggerInteropDelegate errorLoggerDelegate;

	[Token(Token = "0x17000174")]
	public static AkLogger Instance
	{
		[Token(Token = "0x6000E2C")]
		[Address(RVA = "0xFA2128", Offset = "0xFA2128", VA = "0xFA2128")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000E2B")]
	[Address(RVA = "0xFA2018", Offset = "0xFA2018", VA = "0xFA2018")]
	private AkLogger()
	{
	}

	[Token(Token = "0x6000E2D")]
	[Address(RVA = "0xFA2190", Offset = "0xFA2190", VA = "0xFA2190", Slot = "1")]
	~AkLogger()
	{
	}

	[Token(Token = "0x6000E2E")]
	[Address(RVA = "0xFA2298", Offset = "0xFA2298", VA = "0xFA2298")]
	public void Init()
	{
	}

	[Token(Token = "0x6000E2F")]
	[Address(RVA = "0xFA1F90", Offset = "0xFA1F90", VA = "0xFA1F90")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x708968", Offset = "0x708968")]
	public static void WwiseInternalLogError(string message)
	{
	}

	[Token(Token = "0x6000E30")]
	[Address(RVA = "0xFA229C", Offset = "0xFA229C", VA = "0xFA229C")]
	public static void Message(string message)
	{
	}

	[Token(Token = "0x6000E31")]
	[Address(RVA = "0xFA2324", Offset = "0xFA2324", VA = "0xFA2324")]
	public static void Warning(string message)
	{
	}

	[Token(Token = "0x6000E32")]
	[Address(RVA = "0xFA23AC", Offset = "0xFA23AC", VA = "0xFA23AC")]
	public static void Error(string message)
	{
	}
}
[Token(Token = "0x2000125")]
public static class AkRoomPortalManager
{
	[Token(Token = "0x400077F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly List<AkRoom> m_UpdatedRooms;

	[Token(Token = "0x4000780")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static readonly List<AkRoomPortal> m_Portals;

	[Token(Token = "0x4000781")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static readonly List<AkRoomPortal> m_PortalsToUpdate;

	[Token(Token = "0x6000E34")]
	[Address(RVA = "0xFB5010", Offset = "0xFB5010", VA = "0xFB5010")]
	public static void RegisterPortal(AkRoomPortal portal)
	{
	}

	[Token(Token = "0x6000E35")]
	[Address(RVA = "0xFB5278", Offset = "0xFB5278", VA = "0xFB5278")]
	public static void UnregisterPortal(AkRoomPortal portal)
	{
	}

	[Token(Token = "0x6000E36")]
	[Address(RVA = "0xFB44AC", Offset = "0xFB44AC", VA = "0xFB44AC")]
	public static void RegisterPortalUpdate(AkRoomPortal portal)
	{
	}

	[Token(Token = "0x6000E37")]
	[Address(RVA = "0xFB3394", Offset = "0xFB3394", VA = "0xFB3394")]
	public static void RegisterRoomUpdate(AkRoom room)
	{
	}

	[Token(Token = "0x6000E38")]
	[Address(RVA = "0xFB5870", Offset = "0xFB5870", VA = "0xFB5870")]
	public static void UpdatePortals()
	{
	}
}
[Token(Token = "0x2000126")]
public class AkShowOnlyAttribute : PropertyAttribute
{
	[Token(Token = "0x6000E3A")]
	[Address(RVA = "0x9E8154", Offset = "0x9E8154", VA = "0x9E8154")]
	public AkShowOnlyAttribute()
	{
	}
}
[Token(Token = "0x2000127")]
public class AkUtilities
{
	[Token(Token = "0x2000259")]
	public class ShortIDGenerator
	{
		[Token(Token = "0x4000B7D")]
		private const uint s_prime32 = 16777619u;

		[Token(Token = "0x4000B7E")]
		private const uint s_offsetBasis32 = 2166136261u;

		[Token(Token = "0x4000B7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static byte s_hashSize;

		[Token(Token = "0x4000B80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static uint s_mask;

		[Token(Token = "0x17000292")]
		public static byte HashSize
		{
			[Token(Token = "0x6001434")]
			[Address(RVA = "0x933CE0", Offset = "0x933CE0", VA = "0x933CE0")]
			get
			{
				return default(byte);
			}
			[Token(Token = "0x6001435")]
			[Address(RVA = "0x933C58", Offset = "0x933C58", VA = "0x933C58")]
			set
			{
			}
		}

		[Token(Token = "0x6001433")]
		[Address(RVA = "0x933C50", Offset = "0x933C50", VA = "0x933C50")]
		static ShortIDGenerator()
		{
		}

		[Token(Token = "0x6001436")]
		[Address(RVA = "0x9323E4", Offset = "0x9323E4", VA = "0x9323E4")]
		public static uint Compute(string in_name)
		{
			return default(uint);
		}

		[Token(Token = "0x6001437")]
		[Address(RVA = "0x933D48", Offset = "0x933D48", VA = "0x933D48")]
		public ShortIDGenerator()
		{
		}
	}

	[Token(Token = "0x6000E3B")]
	[Address(RVA = "0x933C48", Offset = "0x933C48", VA = "0x933C48")]
	public AkUtilities()
	{
	}
}
[Token(Token = "0x2000128")]
public class AkWwiseInitializationSettings : AkCommonPlatformSettings
{
	[Token(Token = "0x200025A")]
	public abstract class PlatformSettings : AkCommonPlatformSettings
	{
		[Token(Token = "0x4000B81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[HideInInspector]
		private List<string> IgnorePropertyNameList;

		[Token(Token = "0x4000B82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[HideInInspector]
		private List<string> GlobalPropertyNameList;

		[Token(Token = "0x4000B83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private HashSet<string> _GlobalPropertyHashSet;

		[Token(Token = "0x17000293")]
		public HashSet<string> GlobalPropertyHashSet
		{
			[Token(Token = "0x600143E")]
			[Address(RVA = "0x936C9C", Offset = "0x936C9C", VA = "0x936C9C")]
			get
			{
				return null;
			}
			[Token(Token = "0x600143F")]
			[Address(RVA = "0x936D20", Offset = "0x936D20", VA = "0x936D20")]
			set
			{
			}
		}

		[Token(Token = "0x6001438")]
		[Address(RVA = "0x9367D8", Offset = "0x9367D8", VA = "0x9367D8")]
		public void IgnorePropertyValue(string propertyPath)
		{
		}

		[Token(Token = "0x6001439")]
		[Address(RVA = "0x936870", Offset = "0x936870", VA = "0x936870")]
		public bool IsPropertyIgnored(string propertyPath)
		{
			return default(bool);
		}

		[Token(Token = "0x600143A")]
		[Address(RVA = "0x934B00", Offset = "0x934B00", VA = "0x934B00")]
		protected PlatformSettings()
		{
		}

		[Token(Token = "0x600143B")]
		[Address(RVA = "0x9368D8", Offset = "0x9368D8", VA = "0x9368D8")]
		public void SetUseGlobalPropertyValue(string propertyPath, bool use)
		{
		}

		[Token(Token = "0x600143C")]
		[Address(RVA = "0x93697C", Offset = "0x93697C", VA = "0x93697C")]
		public void SetGlobalPropertyValues(IEnumerable enumerable)
		{
		}

		[Token(Token = "0x600143D")]
		[Address(RVA = "0x936C34", Offset = "0x936C34", VA = "0x936C34")]
		private bool IsUsingGlobalPropertyValue(string propertyPath)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x200025B")]
	public class CommonPlatformSettings : PlatformSettings
	{
		[Token(Token = "0x4000B84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public AkCommonUserSettings UserSettings;

		[Token(Token = "0x4000B85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		public AkCommonAdvancedSettings AdvancedSettings;

		[Token(Token = "0x4000B86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public AkCommonCommSettings CommsSettings;

		[Token(Token = "0x6001440")]
		[Address(RVA = "0x9367BC", Offset = "0x9367BC", VA = "0x9367BC", Slot = "12")]
		protected override AkCommonUserSettings GetUserSettings()
		{
			return null;
		}

		[Token(Token = "0x6001441")]
		[Address(RVA = "0x9367C4", Offset = "0x9367C4", VA = "0x9367C4", Slot = "13")]
		protected override AkCommonAdvancedSettings GetAdvancedSettings()
		{
			return null;
		}

		[Token(Token = "0x6001442")]
		[Address(RVA = "0x9367CC", Offset = "0x9367CC", VA = "0x9367CC", Slot = "14")]
		protected override AkCommonCommSettings GetCommsSettings()
		{
			return null;
		}

		[Token(Token = "0x6001443")]
		[Address(RVA = "0x9367D4", Offset = "0x9367D4", VA = "0x9367D4")]
		public CommonPlatformSettings()
		{
		}
	}

	[Token(Token = "0x4000782")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public List<string> PlatformSettingsNameList;

	[Token(Token = "0x4000783")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public List<PlatformSettings> PlatformSettingsList;

	[Token(Token = "0x4000784")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public List<string> InvalidReferencePlatforms;

	[Token(Token = "0x4000785")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public AkCommonUserSettings UserSettings;

	[Token(Token = "0x4000786")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public AkCommonAdvancedSettings AdvancedSettings;

	[Token(Token = "0x4000787")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	public AkCommonCommSettings CommsSettings;

	[Token(Token = "0x4000788")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly string[] AllGlobalValues;

	[Token(Token = "0x4000789")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static AkWwiseInitializationSettings m_Instance;

	[Token(Token = "0x400078A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static AkBasePlatformSettings m_ActivePlatformSettings;

	[Token(Token = "0x17000175")]
	public bool IsValid
	{
		[Token(Token = "0x6000E3C")]
		[Address(RVA = "0x934BE0", Offset = "0x934BE0", VA = "0x934BE0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000176")]
	public int Count
	{
		[Token(Token = "0x6000E3D")]
		[Address(RVA = "0x934C44", Offset = "0x934C44", VA = "0x934C44")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000177")]
	public static AkWwiseInitializationSettings Instance
	{
		[Token(Token = "0x6000E41")]
		[Address(RVA = "0x934CAC", Offset = "0x934CAC", VA = "0x934CAC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000178")]
	public static AkBasePlatformSettings ActivePlatformSettings
	{
		[Token(Token = "0x6000E43")]
		[Address(RVA = "0x934F90", Offset = "0x934F90", VA = "0x934F90")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000E3E")]
	[Address(RVA = "0x934C94", Offset = "0x934C94", VA = "0x934C94", Slot = "12")]
	protected override AkCommonUserSettings GetUserSettings()
	{
		return null;
	}

	[Token(Token = "0x6000E3F")]
	[Address(RVA = "0x934C9C", Offset = "0x934C9C", VA = "0x934C9C", Slot = "13")]
	protected override AkCommonAdvancedSettings GetAdvancedSettings()
	{
		return null;
	}

	[Token(Token = "0x6000E40")]
	[Address(RVA = "0x934CA4", Offset = "0x934CA4", VA = "0x934CA4", Slot = "14")]
	protected override AkCommonCommSettings GetCommsSettings()
	{
		return null;
	}

	[Token(Token = "0x6000E42")]
	[Address(RVA = "0x934DE0", Offset = "0x934DE0", VA = "0x934DE0")]
	private static AkBasePlatformSettings GetPlatformSettings(string platformName)
	{
		return null;
	}

	[Token(Token = "0x6000E44")]
	[Address(RVA = "0x9350B8", Offset = "0x9350B8", VA = "0x9350B8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000E45")]
	[Address(RVA = "0x93521C", Offset = "0x93521C", VA = "0x93521C")]
	public static bool InitializeSoundEngine()
	{
		return default(bool);
	}

	[Token(Token = "0x6000E46")]
	[Address(RVA = "0x93585C", Offset = "0x93585C", VA = "0x93585C")]
	public static bool ResetSoundEngine(bool isPlaying)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E47")]
	[Address(RVA = "0x935964", Offset = "0x935964", VA = "0x935964")]
	public static void TerminateSoundEngine()
	{
	}

	[Token(Token = "0x6000E48")]
	[Address(RVA = "0x935B18", Offset = "0x935B18", VA = "0x935B18")]
	private static void SleepForMilliseconds(double milliseconds)
	{
	}

	[Token(Token = "0x6000E49")]
	[Address(RVA = "0x935C6C", Offset = "0x935C6C", VA = "0x935C6C")]
	public AkWwiseInitializationSettings()
	{
	}
}
[Token(Token = "0x2000129")]
public class AkAcousticSurfaceArray : AkBaseArray<AkAcousticSurface>
{
	[Token(Token = "0x17000179")]
	protected override int StructureSize
	{
		[Token(Token = "0x6000E4C")]
		[Address(RVA = "0xD81E44", Offset = "0xD81E44", VA = "0xD81E44", Slot = "6")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6000E4B")]
	[Address(RVA = "0xD81DE4", Offset = "0xD81DE4", VA = "0xD81DE4")]
	public AkAcousticSurfaceArray(int count)
	{
	}

	[Token(Token = "0x6000E4D")]
	[Address(RVA = "0xD81EA4", Offset = "0xD81EA4", VA = "0xD81EA4", Slot = "7")]
	protected override void DefaultConstructAtIntPtr(IntPtr address)
	{
	}

	[Token(Token = "0x6000E4E")]
	[Address(RVA = "0xD81F0C", Offset = "0xD81F0C", VA = "0xD81F0C", Slot = "9")]
	protected override AkAcousticSurface CreateNewReferenceFromIntPtr(IntPtr address)
	{
		return null;
	}

	[Token(Token = "0x6000E4F")]
	[Address(RVA = "0xD81F74", Offset = "0xD81F74", VA = "0xD81F74", Slot = "10")]
	protected override void CloneIntoReferenceFromIntPtr(IntPtr address, AkAcousticSurface other)
	{
	}
}
[Token(Token = "0x200012A")]
[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x700228", Offset = "0x700228")]
public class AkAuxSendArray : IDisposable
{
	[Token(Token = "0x400078B")]
	private const int MAX_COUNT = 4;

	[Token(Token = "0x400078C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private readonly int SIZE_OF_AKAUXSENDVALUE;

	[Token(Token = "0x400078D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private IntPtr m_Buffer;

	[Token(Token = "0x400078E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int m_Count;

	[Token(Token = "0x1700017A")]
	public AkAuxSendValue Item
	{
		[Token(Token = "0x6000E51")]
		[Address(RVA = "0xD8726C", Offset = "0xD8726C", VA = "0xD8726C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700017B")]
	public bool isFull
	{
		[Token(Token = "0x6000E52")]
		[Address(RVA = "0xD873CC", Offset = "0xD873CC", VA = "0xD873CC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000E50")]
	[Address(RVA = "0xD871BC", Offset = "0xD871BC", VA = "0xD871BC")]
	public AkAuxSendArray()
	{
	}

	[Token(Token = "0x6000E53")]
	[Address(RVA = "0xD87434", Offset = "0xD87434", VA = "0xD87434", Slot = "4")]
	public void Dispose()
	{
	}

	[Token(Token = "0x6000E54")]
	[Address(RVA = "0xD874C0", Offset = "0xD874C0", VA = "0xD874C0", Slot = "1")]
	~AkAuxSendArray()
	{
	}

	[Token(Token = "0x6000E55")]
	[Address(RVA = "0xD87528", Offset = "0xD87528", VA = "0xD87528")]
	public void Reset()
	{
	}

	[Token(Token = "0x6000E56")]
	[Address(RVA = "0xD87530", Offset = "0xD87530", VA = "0xD87530")]
	public bool Add(GameObject in_listenerGameObj, uint in_AuxBusID, float in_fValue)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E57")]
	[Address(RVA = "0xD87648", Offset = "0xD87648", VA = "0xD87648")]
	public bool Add(uint in_AuxBusID, float in_fValue)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E58")]
	[Address(RVA = "0xD87728", Offset = "0xD87728", VA = "0xD87728")]
	public bool Contains(GameObject in_listenerGameObj, uint in_AuxBusID)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E59")]
	[Address(RVA = "0xD87868", Offset = "0xD87868", VA = "0xD87868")]
	public bool Contains(uint in_AuxBusID)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E5A")]
	[Address(RVA = "0xD87960", Offset = "0xD87960", VA = "0xD87960")]
	public AKRESULT SetValues(GameObject gameObject)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000E5B")]
	[Address(RVA = "0xD87A18", Offset = "0xD87A18", VA = "0xD87A18")]
	public AKRESULT GetValues(GameObject gameObject)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000E5C")]
	[Address(RVA = "0xD87AE0", Offset = "0xD87AE0", VA = "0xD87AE0")]
	public IntPtr GetBuffer()
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6000E5D")]
	[Address(RVA = "0xD87AE8", Offset = "0xD87AE8", VA = "0xD87AE8")]
	public int Count()
	{
		return default(int);
	}

	[Token(Token = "0x6000E5E")]
	[Address(RVA = "0xD87350", Offset = "0xD87350", VA = "0xD87350")]
	private IntPtr GetObjectPtr(int index)
	{
		return default(IntPtr);
	}
}
[Token(Token = "0x200012B")]
[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x700260", Offset = "0x700260")]
public abstract class AkBaseArray<T> : IDisposable
{
	[Token(Token = "0x400078F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x704FB8", Offset = "0x704FB8")]
	private int <Capacity>k__BackingField;

	[Token(Token = "0x4000790")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private IntPtr m_Buffer;

	[Token(Token = "0x1700017C")]
	public int Capacity
	{
		[Token(Token = "0x6000E62")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7089CC", Offset = "0x7089CC")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000E63")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7089DC", Offset = "0x7089DC")]
		private set
		{
		}
	}

	[Token(Token = "0x1700017D")]
	protected abstract int StructureSize
	{
		[Token(Token = "0x6000E65")]
		get;
	}

	[Token(Token = "0x1700017E")]
	public T Item
	{
		[Token(Token = "0x6000E6A")]
		get
		{
			return (T)null;
		}
		[Token(Token = "0x6000E6B")]
		set
		{
		}
	}

	[Token(Token = "0x6000E5F")]
	public AkBaseArray(int capacity)
	{
	}

	[Token(Token = "0x6000E60")]
	public void Dispose()
	{
	}

	[Token(Token = "0x6000E61")]
	~AkBaseArray()
	{
	}

	[Token(Token = "0x6000E64")]
	public virtual int Count()
	{
		return default(int);
	}

	[Token(Token = "0x6000E66")]
	protected virtual void DefaultConstructAtIntPtr(IntPtr address)
	{
	}

	[Token(Token = "0x6000E67")]
	protected virtual void ReleaseAllocatedMemoryFromReferenceAtIntPtr(IntPtr address)
	{
	}

	[Token(Token = "0x6000E68")]
	protected abstract T CreateNewReferenceFromIntPtr(IntPtr address);

	[Token(Token = "0x6000E69")]
	protected abstract void CloneIntoReferenceFromIntPtr(IntPtr address, T other);

	[Token(Token = "0x6000E6C")]
	public IntPtr GetBuffer()
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6000E6D")]
	protected IntPtr GetObjectPtr(int index)
	{
		return default(IntPtr);
	}
}
[Token(Token = "0x200012C")]
public class AkChannelEmitterArray : IDisposable
{
	[Token(Token = "0x4000791")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public IntPtr m_Buffer;

	[Token(Token = "0x4000792")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private IntPtr m_Current;

	[Token(Token = "0x4000793")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private uint m_MaxCount;

	[Token(Token = "0x4000794")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x704FC8", Offset = "0x704FC8")]
	private uint <Count>k__BackingField;

	[Token(Token = "0x1700017F")]
	public uint Count
	{
		[Token(Token = "0x6000E6F")]
		[Address(RVA = "0xD8EB98", Offset = "0xD8EB98", VA = "0xD8EB98")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7089EC", Offset = "0x7089EC")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6000E70")]
		[Address(RVA = "0xD8EBA0", Offset = "0xD8EBA0", VA = "0xD8EBA0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7089FC", Offset = "0x7089FC")]
		private set
		{
		}
	}

	[Token(Token = "0x6000E6E")]
	[Address(RVA = "0xD8EB08", Offset = "0xD8EB08", VA = "0xD8EB08")]
	public AkChannelEmitterArray(uint in_Count)
	{
	}

	[Token(Token = "0x6000E71")]
	[Address(RVA = "0xD8EBA8", Offset = "0xD8EBA8", VA = "0xD8EBA8", Slot = "4")]
	public void Dispose()
	{
	}

	[Token(Token = "0x6000E72")]
	[Address(RVA = "0xD8EC34", Offset = "0xD8EC34", VA = "0xD8EC34", Slot = "1")]
	~AkChannelEmitterArray()
	{
	}

	[Token(Token = "0x6000E73")]
	[Address(RVA = "0xD8EC9C", Offset = "0xD8EC9C", VA = "0xD8EC9C")]
	public void Reset()
	{
	}

	[Token(Token = "0x6000E74")]
	[Address(RVA = "0xD8ECAC", Offset = "0xD8ECAC", VA = "0xD8ECAC")]
	public void Add(Vector3 in_Pos, Vector3 in_Forward, Vector3 in_Top, uint in_ChannelMask)
	{
	}
}
[Token(Token = "0x200012D")]
public class AkDiffractionPathInfoArray : AkBaseArray<AkDiffractionPathInfo>
{
	[Token(Token = "0x17000180")]
	protected override int StructureSize
	{
		[Token(Token = "0x6000E76")]
		[Address(RVA = "0xD91C80", Offset = "0xD91C80", VA = "0xD91C80", Slot = "6")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6000E75")]
	[Address(RVA = "0xD91C20", Offset = "0xD91C20", VA = "0xD91C20")]
	public AkDiffractionPathInfoArray(int count)
	{
	}

	[Token(Token = "0x6000E77")]
	[Address(RVA = "0xD91CE0", Offset = "0xD91CE0", VA = "0xD91CE0", Slot = "9")]
	protected override AkDiffractionPathInfo CreateNewReferenceFromIntPtr(IntPtr address)
	{
		return null;
	}

	[Token(Token = "0x6000E78")]
	[Address(RVA = "0xD91D48", Offset = "0xD91D48", VA = "0xD91D48", Slot = "10")]
	protected override void CloneIntoReferenceFromIntPtr(IntPtr address, AkDiffractionPathInfo other)
	{
	}
}
[Token(Token = "0x200012E")]
public class AkExternalSourceInfoArray : AkBaseArray<AkExternalSourceInfo>
{
	[Token(Token = "0x17000181")]
	protected override int StructureSize
	{
		[Token(Token = "0x6000E7A")]
		[Address(RVA = "0xD967CC", Offset = "0xD967CC", VA = "0xD967CC", Slot = "6")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6000E79")]
	[Address(RVA = "0xD9676C", Offset = "0xD9676C", VA = "0xD9676C")]
	public AkExternalSourceInfoArray(int count)
	{
	}

	[Token(Token = "0x6000E7B")]
	[Address(RVA = "0xD9682C", Offset = "0xD9682C", VA = "0xD9682C", Slot = "7")]
	protected override void DefaultConstructAtIntPtr(IntPtr address)
	{
	}

	[Token(Token = "0x6000E7C")]
	[Address(RVA = "0xD96894", Offset = "0xD96894", VA = "0xD96894", Slot = "8")]
	protected override void ReleaseAllocatedMemoryFromReferenceAtIntPtr(IntPtr address)
	{
	}

	[Token(Token = "0x6000E7D")]
	[Address(RVA = "0xD96900", Offset = "0xD96900", VA = "0xD96900", Slot = "9")]
	protected override AkExternalSourceInfo CreateNewReferenceFromIntPtr(IntPtr address)
	{
		return null;
	}

	[Token(Token = "0x6000E7E")]
	[Address(RVA = "0xD96968", Offset = "0xD96968", VA = "0xD96968", Slot = "10")]
	protected override void CloneIntoReferenceFromIntPtr(IntPtr address, AkExternalSourceInfo other)
	{
	}
}
[Token(Token = "0x200012F")]
[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x700298", Offset = "0x700298")]
public class AkMIDIPostArray
{
	[Token(Token = "0x4000795")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private readonly int m_Count;

	[Token(Token = "0x4000796")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private readonly int SIZE_OF;

	[Token(Token = "0x4000797")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private IntPtr m_Buffer;

	[Token(Token = "0x17000182")]
	public AkMIDIPost Item
	{
		[Token(Token = "0x6000E80")]
		[Address(RVA = "0xFA6F28", Offset = "0xFA6F28", VA = "0xFA6F28")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000E81")]
		[Address(RVA = "0xFA7044", Offset = "0xFA7044", VA = "0xFA7044")]
		set
		{
		}
	}

	[Token(Token = "0x6000E7F")]
	[Address(RVA = "0xFA6E68", Offset = "0xFA6E68", VA = "0xFA6E68")]
	public AkMIDIPostArray(int size)
	{
	}

	[Token(Token = "0x6000E82")]
	[Address(RVA = "0xFA7158", Offset = "0xFA7158", VA = "0xFA7158", Slot = "1")]
	~AkMIDIPostArray()
	{
	}

	[Token(Token = "0x6000E83")]
	[Address(RVA = "0xFA7214", Offset = "0xFA7214", VA = "0xFA7214")]
	public void PostOnEvent(uint in_eventID, GameObject gameObject)
	{
	}

	[Token(Token = "0x6000E84")]
	[Address(RVA = "0xFA72E0", Offset = "0xFA72E0", VA = "0xFA72E0")]
	public void PostOnEvent(uint in_eventID, GameObject gameObject, int count)
	{
	}

	[Token(Token = "0x6000E85")]
	[Address(RVA = "0xFA73FC", Offset = "0xFA73FC", VA = "0xFA73FC")]
	public IntPtr GetBuffer()
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6000E86")]
	[Address(RVA = "0xFA7404", Offset = "0xFA7404", VA = "0xFA7404")]
	public int Count()
	{
		return default(int);
	}

	[Token(Token = "0x6000E87")]
	[Address(RVA = "0xFA7008", Offset = "0xFA7008", VA = "0xFA7008")]
	private IntPtr GetObjectPtr(int index)
	{
		return default(IntPtr);
	}
}
[Token(Token = "0x2000130")]
public class AkObjectInfoArray : AkBaseArray<AkObjectInfo>
{
	[Token(Token = "0x17000183")]
	protected override int StructureSize
	{
		[Token(Token = "0x6000E89")]
		[Address(RVA = "0xFAA3B0", Offset = "0xFAA3B0", VA = "0xFAA3B0", Slot = "6")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6000E88")]
	[Address(RVA = "0xFAA350", Offset = "0xFAA350", VA = "0xFAA350")]
	public AkObjectInfoArray(int count)
	{
	}

	[Token(Token = "0x6000E8A")]
	[Address(RVA = "0xFAA410", Offset = "0xFAA410", VA = "0xFAA410", Slot = "7")]
	protected override void DefaultConstructAtIntPtr(IntPtr address)
	{
	}

	[Token(Token = "0x6000E8B")]
	[Address(RVA = "0xFAA478", Offset = "0xFAA478", VA = "0xFAA478", Slot = "9")]
	protected override AkObjectInfo CreateNewReferenceFromIntPtr(IntPtr address)
	{
		return null;
	}

	[Token(Token = "0x6000E8C")]
	[Address(RVA = "0xFAA4E0", Offset = "0xFAA4E0", VA = "0xFAA4E0", Slot = "10")]
	protected override void CloneIntoReferenceFromIntPtr(IntPtr address, AkObjectInfo other)
	{
	}
}
[Token(Token = "0x2000131")]
public class AkObstructionOcclusionValuesArray : AkBaseArray<AkObstructionOcclusionValues>
{
	[Token(Token = "0x17000184")]
	protected override int StructureSize
	{
		[Token(Token = "0x6000E8E")]
		[Address(RVA = "0xFAB54C", Offset = "0xFAB54C", VA = "0xFAB54C", Slot = "6")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6000E8D")]
	[Address(RVA = "0xFAB4EC", Offset = "0xFAB4EC", VA = "0xFAB4EC")]
	public AkObstructionOcclusionValuesArray(int count)
	{
	}

	[Token(Token = "0x6000E8F")]
	[Address(RVA = "0xFAB5AC", Offset = "0xFAB5AC", VA = "0xFAB5AC", Slot = "7")]
	protected override void DefaultConstructAtIntPtr(IntPtr address)
	{
	}

	[Token(Token = "0x6000E90")]
	[Address(RVA = "0xFAB614", Offset = "0xFAB614", VA = "0xFAB614", Slot = "9")]
	protected override AkObstructionOcclusionValues CreateNewReferenceFromIntPtr(IntPtr address)
	{
		return null;
	}

	[Token(Token = "0x6000E91")]
	[Address(RVA = "0xFAB67C", Offset = "0xFAB67C", VA = "0xFAB67C", Slot = "10")]
	protected override void CloneIntoReferenceFromIntPtr(IntPtr address, AkObstructionOcclusionValues other)
	{
	}
}
[Token(Token = "0x2000132")]
public class AkPositionArray : IDisposable
{
	[Token(Token = "0x4000798")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public IntPtr m_Buffer;

	[Token(Token = "0x4000799")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private IntPtr m_Current;

	[Token(Token = "0x400079A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private uint m_MaxCount;

	[Token(Token = "0x400079B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x704FD8", Offset = "0x704FD8")]
	private uint <Count>k__BackingField;

	[Token(Token = "0x17000185")]
	public uint Count
	{
		[Token(Token = "0x6000E93")]
		[Address(RVA = "0xFAF69C", Offset = "0xFAF69C", VA = "0xFAF69C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x708A0C", Offset = "0x708A0C")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6000E94")]
		[Address(RVA = "0xFAF6A4", Offset = "0xFAF6A4", VA = "0xFAF6A4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x708A1C", Offset = "0x708A1C")]
		private set
		{
		}
	}

	[Token(Token = "0x6000E92")]
	[Address(RVA = "0xFAF60C", Offset = "0xFAF60C", VA = "0xFAF60C")]
	public AkPositionArray(uint in_Count)
	{
	}

	[Token(Token = "0x6000E95")]
	[Address(RVA = "0xFAF6AC", Offset = "0xFAF6AC", VA = "0xFAF6AC", Slot = "4")]
	public void Dispose()
	{
	}

	[Token(Token = "0x6000E96")]
	[Address(RVA = "0xFAF738", Offset = "0xFAF738", VA = "0xFAF738", Slot = "1")]
	~AkPositionArray()
	{
	}

	[Token(Token = "0x6000E97")]
	[Address(RVA = "0xFAF7A0", Offset = "0xFAF7A0", VA = "0xFAF7A0")]
	public void Reset()
	{
	}

	[Token(Token = "0x6000E98")]
	[Address(RVA = "0xFAF7B0", Offset = "0xFAF7B0", VA = "0xFAF7B0")]
	public void Add(Vector3 in_Pos, Vector3 in_Forward, Vector3 in_Top)
	{
	}
}
[Token(Token = "0x2000133")]
public class AkReflectionPathInfoArray : AkBaseArray<AkReflectionPathInfo>
{
	[Token(Token = "0x17000186")]
	protected override int StructureSize
	{
		[Token(Token = "0x6000E9A")]
		[Address(RVA = "0xFB29C4", Offset = "0xFB29C4", VA = "0xFB29C4", Slot = "6")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6000E99")]
	[Address(RVA = "0xFB2964", Offset = "0xFB2964", VA = "0xFB2964")]
	public AkReflectionPathInfoArray(int count)
	{
	}

	[Token(Token = "0x6000E9B")]
	[Address(RVA = "0xFB2A24", Offset = "0xFB2A24", VA = "0xFB2A24", Slot = "9")]
	protected override AkReflectionPathInfo CreateNewReferenceFromIntPtr(IntPtr address)
	{
		return null;
	}

	[Token(Token = "0x6000E9C")]
	[Address(RVA = "0xFB2A8C", Offset = "0xFB2A8C", VA = "0xFB2A8C", Slot = "10")]
	protected override void CloneIntoReferenceFromIntPtr(IntPtr address, AkReflectionPathInfo other)
	{
	}
}
[Token(Token = "0x2000134")]
public class AkSourceSettingsArray : AkBaseArray<AkSourceSettings>
{
	[Token(Token = "0x17000187")]
	protected override int StructureSize
	{
		[Token(Token = "0x6000E9E")]
		[Address(RVA = "0x92D104", Offset = "0x92D104", VA = "0x92D104", Slot = "6")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6000E9D")]
	[Address(RVA = "0x92D0A4", Offset = "0x92D0A4", VA = "0x92D0A4")]
	public AkSourceSettingsArray(int count)
	{
	}

	[Token(Token = "0x6000E9F")]
	[Address(RVA = "0x92D164", Offset = "0x92D164", VA = "0x92D164", Slot = "7")]
	protected override void DefaultConstructAtIntPtr(IntPtr address)
	{
	}

	[Token(Token = "0x6000EA0")]
	[Address(RVA = "0x92D1CC", Offset = "0x92D1CC", VA = "0x92D1CC", Slot = "9")]
	protected override AkSourceSettings CreateNewReferenceFromIntPtr(IntPtr address)
	{
		return null;
	}

	[Token(Token = "0x6000EA1")]
	[Address(RVA = "0x92D234", Offset = "0x92D234", VA = "0x92D234", Slot = "10")]
	protected override void CloneIntoReferenceFromIntPtr(IntPtr address, AkSourceSettings other)
	{
	}
}
[Token(Token = "0x2000135")]
public class AkTriangleArray : AkBaseArray<AkTriangle>
{
	[Token(Token = "0x17000188")]
	protected override int StructureSize
	{
		[Token(Token = "0x6000EA3")]
		[Address(RVA = "0x931F34", Offset = "0x931F34", VA = "0x931F34", Slot = "6")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6000EA2")]
	[Address(RVA = "0x92FCA8", Offset = "0x92FCA8", VA = "0x92FCA8")]
	public AkTriangleArray(int count)
	{
	}

	[Token(Token = "0x6000EA4")]
	[Address(RVA = "0x931F94", Offset = "0x931F94", VA = "0x931F94", Slot = "7")]
	protected override void DefaultConstructAtIntPtr(IntPtr address)
	{
	}

	[Token(Token = "0x6000EA5")]
	[Address(RVA = "0x931FFC", Offset = "0x931FFC", VA = "0x931FFC", Slot = "9")]
	protected override AkTriangle CreateNewReferenceFromIntPtr(IntPtr address)
	{
		return null;
	}

	[Token(Token = "0x6000EA6")]
	[Address(RVA = "0x932064", Offset = "0x932064", VA = "0x932064", Slot = "10")]
	protected override void CloneIntoReferenceFromIntPtr(IntPtr address, AkTriangle other)
	{
	}
}
[Token(Token = "0x2000136")]
public class AkVertexArray : AkBaseArray<AkVertex>
{
	[Token(Token = "0x17000189")]
	protected override int StructureSize
	{
		[Token(Token = "0x6000EA8")]
		[Address(RVA = "0x934910", Offset = "0x934910", VA = "0x934910", Slot = "6")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6000EA7")]
	[Address(RVA = "0x92FAD4", Offset = "0x92FAD4", VA = "0x92FAD4")]
	public AkVertexArray(int count)
	{
	}

	[Token(Token = "0x6000EA9")]
	[Address(RVA = "0x934970", Offset = "0x934970", VA = "0x934970", Slot = "7")]
	protected override void DefaultConstructAtIntPtr(IntPtr address)
	{
	}

	[Token(Token = "0x6000EAA")]
	[Address(RVA = "0x9349D8", Offset = "0x9349D8", VA = "0x9349D8", Slot = "9")]
	protected override AkVertex CreateNewReferenceFromIntPtr(IntPtr address)
	{
		return null;
	}

	[Token(Token = "0x6000EAB")]
	[Address(RVA = "0x934A40", Offset = "0x934A40", VA = "0x934A40", Slot = "10")]
	protected override void CloneIntoReferenceFromIntPtr(IntPtr address, AkVertex other)
	{
	}
}
[Token(Token = "0x2000137")]
public class WwiseAcousticTextureReference : WwiseObjectReference
{
	[Token(Token = "0x400079C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly WwiseObjectType MyWwiseObjectType;

	[Token(Token = "0x1700018A")]
	public override WwiseObjectType WwiseObjectType
	{
		[Token(Token = "0x6000EAC")]
		[Address(RVA = "0x14C4C14", Offset = "0x14C4C14", VA = "0x14C4C14", Slot = "5")]
		get
		{
			return default(WwiseObjectType);
		}
	}

	[Token(Token = "0x6000EAD")]
	[Address(RVA = "0x14C4C7C", Offset = "0x14C4C7C", VA = "0x14C4C7C")]
	public WwiseAcousticTextureReference()
	{
	}
}
[Token(Token = "0x2000138")]
public class WwiseAuxBusReference : WwiseObjectReference
{
	[Token(Token = "0x400079D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly WwiseObjectType MyWwiseObjectType;

	[Token(Token = "0x1700018B")]
	public override WwiseObjectType WwiseObjectType
	{
		[Token(Token = "0x6000EAF")]
		[Address(RVA = "0x14C4D40", Offset = "0x14C4D40", VA = "0x14C4D40", Slot = "5")]
		get
		{
			return default(WwiseObjectType);
		}
	}

	[Token(Token = "0x6000EB0")]
	[Address(RVA = "0x14C4DA8", Offset = "0x14C4DA8", VA = "0x14C4DA8")]
	public WwiseAuxBusReference()
	{
	}
}
[Token(Token = "0x2000139")]
public class WwiseBankReference : WwiseObjectReference
{
	[Token(Token = "0x400079E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly WwiseObjectType MyWwiseObjectType;

	[Token(Token = "0x1700018C")]
	public override WwiseObjectType WwiseObjectType
	{
		[Token(Token = "0x6000EB2")]
		[Address(RVA = "0x14C4E00", Offset = "0x14C4E00", VA = "0x14C4E00", Slot = "5")]
		get
		{
			return default(WwiseObjectType);
		}
	}

	[Token(Token = "0x6000EB3")]
	[Address(RVA = "0x14C4E68", Offset = "0x14C4E68", VA = "0x14C4E68")]
	public WwiseBankReference()
	{
	}
}
[Token(Token = "0x200013A")]
public class WwiseEventReference : WwiseObjectReference
{
	[Token(Token = "0x400079F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly WwiseObjectType MyWwiseObjectType;

	[Token(Token = "0x1700018D")]
	public override WwiseObjectType WwiseObjectType
	{
		[Token(Token = "0x6000EB5")]
		[Address(RVA = "0x14C4EC0", Offset = "0x14C4EC0", VA = "0x14C4EC0", Slot = "5")]
		get
		{
			return default(WwiseObjectType);
		}
	}

	[Token(Token = "0x6000EB6")]
	[Address(RVA = "0x14C4F28", Offset = "0x14C4F28", VA = "0x14C4F28")]
	public WwiseEventReference()
	{
	}
}
[Token(Token = "0x200013B")]
public abstract class WwiseObjectReference : ScriptableObject
{
	[Token(Token = "0x40007A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AkShowOnly]
	[SerializeField]
	private string objectName;

	[Token(Token = "0x40007A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AkShowOnly]
	[SerializeField]
	private uint id;

	[Token(Token = "0x40007A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AkShowOnly]
	[SerializeField]
	private string guid;

	[Token(Token = "0x1700018E")]
	public Guid Guid
	{
		[Token(Token = "0x6000EB8")]
		[Address(RVA = "0x14C503C", Offset = "0x14C503C", VA = "0x14C503C")]
		get
		{
			return default(Guid);
		}
	}

	[Token(Token = "0x1700018F")]
	public string ObjectName
	{
		[Token(Token = "0x6000EB9")]
		[Address(RVA = "0x14C50E0", Offset = "0x14C50E0", VA = "0x14C50E0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000190")]
	public virtual string DisplayName
	{
		[Token(Token = "0x6000EBA")]
		[Address(RVA = "0x14C50E8", Offset = "0x14C50E8", VA = "0x14C50E8", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000191")]
	public uint Id
	{
		[Token(Token = "0x6000EBB")]
		[Address(RVA = "0x14C50F0", Offset = "0x14C50F0", VA = "0x14C50F0")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x17000192")]
	public abstract WwiseObjectType WwiseObjectType
	{
		[Token(Token = "0x6000EBC")]
		get;
	}

	[Token(Token = "0x6000EBD")]
	[Address(RVA = "0x14C4C80", Offset = "0x14C4C80", VA = "0x14C4C80")]
	protected WwiseObjectReference()
	{
	}
}
[Token(Token = "0x200013C")]
public abstract class WwiseGroupValueObjectReference : WwiseObjectReference
{
	[Token(Token = "0x17000193")]
	public abstract WwiseObjectReference GroupObjectReference
	{
		[Token(Token = "0x6000EBE")]
		get;
		[Token(Token = "0x6000EBF")]
		set;
	}

	[Token(Token = "0x17000194")]
	public abstract WwiseObjectType GroupWwiseObjectType
	{
		[Token(Token = "0x6000EC0")]
		get;
	}

	[Token(Token = "0x17000195")]
	public override string DisplayName
	{
		[Token(Token = "0x6000EC1")]
		[Address(RVA = "0x14C4F80", Offset = "0x14C4F80", VA = "0x14C4F80", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000EC2")]
	[Address(RVA = "0x14C5038", Offset = "0x14C5038", VA = "0x14C5038")]
	protected WwiseGroupValueObjectReference()
	{
	}
}
[Token(Token = "0x200013D")]
public enum WwiseObjectType
{
	[Token(Token = "0x40007A4")]
	None,
	[Token(Token = "0x40007A5")]
	AuxBus,
	[Token(Token = "0x40007A6")]
	Bus,
	[Token(Token = "0x40007A7")]
	Event,
	[Token(Token = "0x40007A8")]
	Folder,
	[Token(Token = "0x40007A9")]
	PhysicalFolder,
	[Token(Token = "0x40007AA")]
	Project,
	[Token(Token = "0x40007AB")]
	Soundbank,
	[Token(Token = "0x40007AC")]
	State,
	[Token(Token = "0x40007AD")]
	StateGroup,
	[Token(Token = "0x40007AE")]
	Switch,
	[Token(Token = "0x40007AF")]
	SwitchGroup,
	[Token(Token = "0x40007B0")]
	WorkUnit,
	[Token(Token = "0x40007B1")]
	GameParameter,
	[Token(Token = "0x40007B2")]
	Trigger,
	[Token(Token = "0x40007B3")]
	AcousticTexture
}
[Token(Token = "0x200013E")]
public class WwiseRtpcReference : WwiseObjectReference
{
	[Token(Token = "0x40007B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly WwiseObjectType MyWwiseObjectType;

	[Token(Token = "0x17000196")]
	public override WwiseObjectType WwiseObjectType
	{
		[Token(Token = "0x6000EC3")]
		[Address(RVA = "0x14C5208", Offset = "0x14C5208", VA = "0x14C5208", Slot = "5")]
		get
		{
			return default(WwiseObjectType);
		}
	}

	[Token(Token = "0x6000EC4")]
	[Address(RVA = "0x14C5270", Offset = "0x14C5270", VA = "0x14C5270")]
	public WwiseRtpcReference()
	{
	}
}
[Token(Token = "0x200013F")]
public class WwiseStateGroupReference : WwiseObjectReference
{
	[Token(Token = "0x40007B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly WwiseObjectType MyWwiseObjectType;

	[Token(Token = "0x17000197")]
	public override WwiseObjectType WwiseObjectType
	{
		[Token(Token = "0x6000EC6")]
		[Address(RVA = "0x14C52C8", Offset = "0x14C52C8", VA = "0x14C52C8", Slot = "5")]
		get
		{
			return default(WwiseObjectType);
		}
	}

	[Token(Token = "0x6000EC7")]
	[Address(RVA = "0x14C5330", Offset = "0x14C5330", VA = "0x14C5330")]
	public WwiseStateGroupReference()
	{
	}
}
[Token(Token = "0x2000140")]
public class WwiseStateReference : WwiseGroupValueObjectReference
{
	[Token(Token = "0x40007B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly WwiseObjectType MyWwiseObjectType;

	[Token(Token = "0x40007B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static readonly WwiseObjectType MyGroupWwiseObjectType;

	[Token(Token = "0x40007B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AkShowOnly]
	[SerializeField]
	private WwiseStateGroupReference WwiseStateGroupReference;

	[Token(Token = "0x17000198")]
	public override WwiseObjectType WwiseObjectType
	{
		[Token(Token = "0x6000EC9")]
		[Address(RVA = "0x14C5388", Offset = "0x14C5388", VA = "0x14C5388", Slot = "5")]
		get
		{
			return default(WwiseObjectType);
		}
	}

	[Token(Token = "0x17000199")]
	public override WwiseObjectReference GroupObjectReference
	{
		[Token(Token = "0x6000ECA")]
		[Address(RVA = "0x14C53F0", Offset = "0x14C53F0", VA = "0x14C53F0", Slot = "6")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000ECB")]
		[Address(RVA = "0x14C53F8", Offset = "0x14C53F8", VA = "0x14C53F8", Slot = "7")]
		set
		{
		}
	}

	[Token(Token = "0x1700019A")]
	public override WwiseObjectType GroupWwiseObjectType
	{
		[Token(Token = "0x6000ECC")]
		[Address(RVA = "0x14C5488", Offset = "0x14C5488", VA = "0x14C5488", Slot = "8")]
		get
		{
			return default(WwiseObjectType);
		}
	}

	[Token(Token = "0x6000ECD")]
	[Address(RVA = "0x14C54F0", Offset = "0x14C54F0", VA = "0x14C54F0")]
	public WwiseStateReference()
	{
	}
}
[Token(Token = "0x2000141")]
public class WwiseSwitchGroupReference : WwiseObjectReference
{
	[Token(Token = "0x40007B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly WwiseObjectType MyWwiseObjectType;

	[Token(Token = "0x1700019B")]
	public override WwiseObjectType WwiseObjectType
	{
		[Token(Token = "0x6000ECF")]
		[Address(RVA = "0x14C5558", Offset = "0x14C5558", VA = "0x14C5558", Slot = "5")]
		get
		{
			return default(WwiseObjectType);
		}
	}

	[Token(Token = "0x6000ED0")]
	[Address(RVA = "0x14C55C0", Offset = "0x14C55C0", VA = "0x14C55C0")]
	public WwiseSwitchGroupReference()
	{
	}
}
[Token(Token = "0x2000142")]
public class WwiseSwitchReference : WwiseGroupValueObjectReference
{
	[Token(Token = "0x40007BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly WwiseObjectType MyWwiseObjectType;

	[Token(Token = "0x40007BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static readonly WwiseObjectType MyGroupWwiseObjectType;

	[Token(Token = "0x40007BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AkShowOnly]
	[SerializeField]
	private WwiseSwitchGroupReference WwiseSwitchGroupReference;

	[Token(Token = "0x1700019C")]
	public override WwiseObjectType WwiseObjectType
	{
		[Token(Token = "0x6000ED2")]
		[Address(RVA = "0x14C5618", Offset = "0x14C5618", VA = "0x14C5618", Slot = "5")]
		get
		{
			return default(WwiseObjectType);
		}
	}

	[Token(Token = "0x1700019D")]
	public override WwiseObjectReference GroupObjectReference
	{
		[Token(Token = "0x6000ED3")]
		[Address(RVA = "0x14C5680", Offset = "0x14C5680", VA = "0x14C5680", Slot = "6")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000ED4")]
		[Address(RVA = "0x14C5688", Offset = "0x14C5688", VA = "0x14C5688", Slot = "7")]
		set
		{
		}
	}

	[Token(Token = "0x1700019E")]
	public override WwiseObjectType GroupWwiseObjectType
	{
		[Token(Token = "0x6000ED5")]
		[Address(RVA = "0x14C5718", Offset = "0x14C5718", VA = "0x14C5718", Slot = "8")]
		get
		{
			return default(WwiseObjectType);
		}
	}

	[Token(Token = "0x6000ED6")]
	[Address(RVA = "0x14C5780", Offset = "0x14C5780", VA = "0x14C5780")]
	public WwiseSwitchReference()
	{
	}
}
[Token(Token = "0x2000143")]
public class WwiseTriggerReference : WwiseObjectReference
{
	[Token(Token = "0x40007BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly WwiseObjectType MyWwiseObjectType;

	[Token(Token = "0x1700019F")]
	public override WwiseObjectType WwiseObjectType
	{
		[Token(Token = "0x6000ED8")]
		[Address(RVA = "0x14C57E8", Offset = "0x14C57E8", VA = "0x14C57E8", Slot = "5")]
		get
		{
			return default(WwiseObjectType);
		}
	}

	[Token(Token = "0x6000ED9")]
	[Address(RVA = "0x14C5850", Offset = "0x14C5850", VA = "0x14C5850")]
	public WwiseTriggerReference()
	{
	}
}
[Token(Token = "0x2000144")]
public class AkMacSettings : AkWwiseInitializationSettings.CommonPlatformSettings
{
	[Token(Token = "0x6000EDB")]
	[Address(RVA = "0xFA740C", Offset = "0xFA740C", VA = "0xFA740C")]
	public AkMacSettings()
	{
	}
}
[Token(Token = "0x2000145")]
public class AkWindowsSettings : AkWwiseInitializationSettings.PlatformSettings
{
	[Serializable]
	[Token(Token = "0x200025C")]
	public class PlatformAdvancedSettings : AkCommonAdvancedSettings
	{
		[Token(Token = "0x2000284")]
		public enum AudioAPI
		{
			[Token(Token = "0x4000C13")]
			None = 0,
			[Token(Token = "0x4000C14")]
			Wasapi = 1,
			[Token(Token = "0x4000C15")]
			XAudio2 = 2,
			[Token(Token = "0x4000C16")]
			DirectSound = 4,
			[Token(Token = "0x4000C17")]
			Default = -1
		}

		[Token(Token = "0x4000B87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x706A04", Offset = "0x706A04")]
		[AttributeAttribute(Name = "AkEnumFlagAttribute", RVA = "0x706A04", Offset = "0x706A04")]
		public AudioAPI m_AudioAPI;

		[Token(Token = "0x4000B88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x706A8C", Offset = "0x706A8C")]
		public bool m_GlobalFocus;

		[Token(Token = "0x6001444")]
		[Address(RVA = "0x934BC4", Offset = "0x934BC4", VA = "0x934BC4", Slot = "7")]
		public override void CopyTo(AkPlatformInitSettings settings)
		{
		}

		[Token(Token = "0x6001445")]
		[Address(RVA = "0x934BC8", Offset = "0x934BC8", VA = "0x934BC8")]
		public PlatformAdvancedSettings()
		{
		}
	}

	[Token(Token = "0x40007BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public AkCommonUserSettings UserSettings;

	[Token(Token = "0x40007BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public PlatformAdvancedSettings AdvancedSettings;

	[Token(Token = "0x40007C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	public AkCommonCommSettings CommsSettings;

	[Token(Token = "0x6000EDC")]
	[Address(RVA = "0x934AE4", Offset = "0x934AE4", VA = "0x934AE4", Slot = "12")]
	protected override AkCommonUserSettings GetUserSettings()
	{
		return null;
	}

	[Token(Token = "0x6000EDD")]
	[Address(RVA = "0x934AEC", Offset = "0x934AEC", VA = "0x934AEC", Slot = "13")]
	protected override AkCommonAdvancedSettings GetAdvancedSettings()
	{
		return null;
	}

	[Token(Token = "0x6000EDE")]
	[Address(RVA = "0x934AF4", Offset = "0x934AF4", VA = "0x934AF4", Slot = "14")]
	protected override AkCommonCommSettings GetCommsSettings()
	{
		return null;
	}

	[Token(Token = "0x6000EDF")]
	[Address(RVA = "0x934AFC", Offset = "0x934AFC", VA = "0x934AFC")]
	public AkWindowsSettings()
	{
	}
}
[Token(Token = "0x2000146")]
public enum MultiPositionTypeLabel
{
	[Token(Token = "0x40007C2")]
	Simple_Mode,
	[Token(Token = "0x40007C3")]
	Large_Mode,
	[Token(Token = "0x40007C4")]
	MultiPosition_Mode
}
[Token(Token = "0x2000147")]
public class AkMultiPosEvent
{
	[Token(Token = "0x40007C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool eventIsPlaying;

	[Token(Token = "0x40007C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<AkAmbient> list;

	[Token(Token = "0x6000EE0")]
	[Address(RVA = "0xFA8A80", Offset = "0xFA8A80", VA = "0xFA8A80")]
	public void FinishedPlaying(object in_cookie, AkCallbackType in_type, object in_info)
	{
	}

	[Token(Token = "0x6000EE1")]
	[Address(RVA = "0xFA8A88", Offset = "0xFA8A88", VA = "0xFA8A88")]
	public AkMultiPosEvent()
	{
	}
}
[Token(Token = "0x2000148")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x7002D0", Offset = "0x7002D0")]
public class AkAmbient : AkEvent
{
	[Token(Token = "0x40007C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Dictionary<uint, AkMultiPosEvent> multiPosEventTree;

	[Token(Token = "0x40007C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public AkMultiPositionType MultiPositionType;

	[Token(Token = "0x40007C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public MultiPositionTypeLabel multiPositionTypeLabel;

	[Token(Token = "0x40007CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public AkAmbientLargeModePositioner[] LargeModePositions;

	[Token(Token = "0x40007CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[HideInInspector]
	[SerializeField]
	public List<Vector3> multiPositionArray;

	[Token(Token = "0x6000EE2")]
	[Address(RVA = "0xD82018", Offset = "0xD82018", VA = "0xD82018")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000EE3")]
	[Address(RVA = "0xD8247C", Offset = "0xD8247C", VA = "0xD8247C", Slot = "6")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000EE4")]
	[Address(RVA = "0xD8292C", Offset = "0xD8292C", VA = "0xD8292C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000EE5")]
	[Address(RVA = "0xD82AF4", Offset = "0xD82AF4", VA = "0xD82AF4", Slot = "4")]
	public override void HandleEvent(GameObject in_gameObject)
	{
	}

	[Token(Token = "0x6000EE6")]
	[Address(RVA = "0xD82F20", Offset = "0xD82F20", VA = "0xD82F20")]
	public void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x6000EE7")]
	[Address(RVA = "0xD822BC", Offset = "0xD822BC", VA = "0xD822BC")]
	public AkPositionArray BuildMultiDirectionArray(AkMultiPosEvent eventPosList)
	{
		return null;
	}

	[Token(Token = "0x6000EE8")]
	[Address(RVA = "0xD826B0", Offset = "0xD826B0", VA = "0xD826B0")]
	private AkPositionArray BuildAkPositionArray()
	{
		return null;
	}

	[Token(Token = "0x6000EE9")]
	[Address(RVA = "0xD82FFC", Offset = "0xD82FFC", VA = "0xD82FFC")]
	public AkAmbient()
	{
	}
}
[Token(Token = "0x2000149")]
public class AkAmbientLargeModePositioner : MonoBehaviour
{
	[Token(Token = "0x170001A0")]
	public Vector3 Position
	{
		[Token(Token = "0x6000EEB")]
		[Address(RVA = "0xD82F90", Offset = "0xD82F90", VA = "0xD82F90")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x170001A1")]
	public Vector3 Forward
	{
		[Token(Token = "0x6000EEC")]
		[Address(RVA = "0xD82FB4", Offset = "0xD82FB4", VA = "0xD82FB4")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x170001A2")]
	public Vector3 Up
	{
		[Token(Token = "0x6000EED")]
		[Address(RVA = "0xD82FD8", Offset = "0xD82FD8", VA = "0xD82FD8")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x6000EEE")]
	[Address(RVA = "0xD83110", Offset = "0xD83110", VA = "0xD83110")]
	public AkAmbientLargeModePositioner()
	{
	}
}
[Token(Token = "0x200014A")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x700308", Offset = "0x700308")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x700308", Offset = "0x700308")]
[DisallowMultipleComponent]
public class AkAudioListener : MonoBehaviour
{
	[Token(Token = "0x200025D")]
	public class BaseListenerList
	{
		[Token(Token = "0x4000B89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly List<ulong> listenerIdList;

		[Token(Token = "0x4000B8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly List<AkAudioListener> listenerList;

		[Token(Token = "0x17000294")]
		public List<AkAudioListener> ListenerList
		{
			[Token(Token = "0x6001446")]
			[Address(RVA = "0xD86538", Offset = "0xD86538", VA = "0xD86538")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001447")]
		[Address(RVA = "0xD86540", Offset = "0xD86540", VA = "0xD86540", Slot = "4")]
		public virtual bool Add(AkAudioListener listener)
		{
			return default(bool);
		}

		[Token(Token = "0x6001448")]
		[Address(RVA = "0xD86630", Offset = "0xD86630", VA = "0xD86630", Slot = "5")]
		public virtual bool Remove(AkAudioListener listener)
		{
			return default(bool);
		}

		[Token(Token = "0x6001449")]
		[Address(RVA = "0xD86720", Offset = "0xD86720", VA = "0xD86720")]
		public ulong[] GetListenerIds()
		{
			return null;
		}

		[Token(Token = "0x600144A")]
		[Address(RVA = "0xD86778", Offset = "0xD86778", VA = "0xD86778")]
		public BaseListenerList()
		{
		}
	}

	[Token(Token = "0x200025E")]
	public class DefaultListenerList : BaseListenerList
	{
		[Token(Token = "0x600144B")]
		[Address(RVA = "0xD86810", Offset = "0xD86810", VA = "0xD86810", Slot = "4")]
		public override bool Add(AkAudioListener listener)
		{
			return default(bool);
		}

		[Token(Token = "0x600144C")]
		[Address(RVA = "0xD868E4", Offset = "0xD868E4", VA = "0xD868E4", Slot = "5")]
		public override bool Remove(AkAudioListener listener)
		{
			return default(bool);
		}

		[Token(Token = "0x600144D")]
		[Address(RVA = "0xD86534", Offset = "0xD86534", VA = "0xD86534")]
		public DefaultListenerList()
		{
		}
	}

	[Token(Token = "0x40007CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly DefaultListenerList defaultListeners;

	[Token(Token = "0x40007CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ulong akGameObjectID;

	[Token(Token = "0x40007CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<AkGameObj> EmittersToStartListeningTo;

	[Token(Token = "0x40007CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<AkGameObj> EmittersToStopListeningTo;

	[Token(Token = "0x40007D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool isDefaultListener;

	[Token(Token = "0x40007D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	public int listenerId;

	[Token(Token = "0x170001A3")]
	public static DefaultListenerList DefaultListeners
	{
		[Token(Token = "0x6000EEF")]
		[Address(RVA = "0xD85BD4", Offset = "0xD85BD4", VA = "0xD85BD4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000EF0")]
	[Address(RVA = "0xD85C3C", Offset = "0xD85C3C", VA = "0xD85C3C")]
	public void StartListeningToEmitter(AkGameObj emitter)
	{
	}

	[Token(Token = "0x6000EF1")]
	[Address(RVA = "0xD85CC0", Offset = "0xD85CC0", VA = "0xD85CC0")]
	public void StopListeningToEmitter(AkGameObj emitter)
	{
	}

	[Token(Token = "0x6000EF2")]
	[Address(RVA = "0xD85D44", Offset = "0xD85D44", VA = "0xD85D44")]
	public void SetIsDefaultListener(bool isDefault)
	{
	}

	[Token(Token = "0x6000EF3")]
	[Address(RVA = "0xD85EA4", Offset = "0xD85EA4", VA = "0xD85EA4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000EF4")]
	[Address(RVA = "0xD86044", Offset = "0xD86044", VA = "0xD86044")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000EF5")]
	[Address(RVA = "0xD86120", Offset = "0xD86120", VA = "0xD86120")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000EF6")]
	[Address(RVA = "0xD861FC", Offset = "0xD861FC", VA = "0xD861FC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000EF7")]
	[Address(RVA = "0xD86360", Offset = "0xD86360", VA = "0xD86360")]
	public ulong GetAkGameObjectID()
	{
		return default(ulong);
	}

	[Token(Token = "0x6000EF8")]
	[Address(RVA = "0xD86368", Offset = "0xD86368", VA = "0xD86368")]
	public void Migrate14()
	{
	}

	[Token(Token = "0x6000EF9")]
	[Address(RVA = "0xD8642C", Offset = "0xD8642C", VA = "0xD8642C")]
	public AkAudioListener()
	{
	}
}
[Token(Token = "0x200014B")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x7003A0", Offset = "0x7003A0")]
[ExecuteInEditMode]
public class AkBank : AkTriggerHandler
{
	[Token(Token = "0x40007D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Bank data;

	[Token(Token = "0x40007D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool decodeBank;

	[Token(Token = "0x40007D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	public bool loadAsynchronous;

	[Token(Token = "0x40007D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
	public bool saveDecodedBank;

	[Token(Token = "0x40007D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public List<int> unloadTriggerList;

	[Token(Token = "0x40007D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[HideInInspector]
	[SerializeField]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x705178", Offset = "0x705178")]
	private string bankNameInternal;

	[Token(Token = "0x40007D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[HideInInspector]
	[SerializeField]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x7051D4", Offset = "0x7051D4")]
	private byte[] valueGuidInternal;

	[Token(Token = "0x170001A4")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x709F90", Offset = "0x709F90")]
	public string bankName
	{
		[Token(Token = "0x6000F00")]
		[Address(RVA = "0xD88450", Offset = "0xD88450", VA = "0xD88450")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001A5")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x709FC8", Offset = "0x709FC8")]
	public byte[] valueGuid
	{
		[Token(Token = "0x6000F01")]
		[Address(RVA = "0xD884C0", Offset = "0xD884C0", VA = "0xD884C0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000EFB")]
	[Address(RVA = "0xD881C0", Offset = "0xD881C0", VA = "0xD881C0", Slot = "5")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000EFC")]
	[Address(RVA = "0xD882B0", Offset = "0xD882B0", VA = "0xD882B0", Slot = "6")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000EFD")]
	[Address(RVA = "0xD88338", Offset = "0xD88338", VA = "0xD88338", Slot = "4")]
	public override void HandleEvent(GameObject in_gameObject)
	{
	}

	[Token(Token = "0x6000EFE")]
	[Address(RVA = "0xD88298", Offset = "0xD88298", VA = "0xD88298")]
	public void UnloadBank(GameObject in_gameObject)
	{
	}

	[Token(Token = "0x6000EFF")]
	[Address(RVA = "0xD88378", Offset = "0xD88378", VA = "0xD88378", Slot = "7")]
	protected override void OnDestroy()
	{
	}

	[Token(Token = "0x6000F02")]
	[Address(RVA = "0xD88584", Offset = "0xD88584", VA = "0xD88584")]
	public AkBank()
	{
	}
}
[Token(Token = "0x200014C")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x7003EC", Offset = "0x7003EC")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x7003EC", Offset = "0x7003EC")]
public class AkEmitterObstructionOcclusion : AkObstructionOcclusion
{
	[Token(Token = "0x40007D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private AkGameObj m_gameObj;

	[Token(Token = "0x6000F03")]
	[Address(RVA = "0xD929D8", Offset = "0xD929D8", VA = "0xD929D8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000F04")]
	[Address(RVA = "0xD92A3C", Offset = "0xD92A3C", VA = "0xD92A3C", Slot = "4")]
	protected override void UpdateCurrentListenerList()
	{
	}

	[Token(Token = "0x6000F05")]
	[Address(RVA = "0xD92C10", Offset = "0xD92C10", VA = "0xD92C10", Slot = "5")]
	protected override void SetObstructionOcclusion(KeyValuePair<AkAudioListener, ObstructionOcclusionValue> ObsOccPair)
	{
	}

	[Token(Token = "0x6000F06")]
	[Address(RVA = "0xD92D48", Offset = "0xD92D48", VA = "0xD92D48")]
	public AkEmitterObstructionOcclusion()
	{
	}
}
[Token(Token = "0x200014D")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x700474", Offset = "0x700474")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x700474", Offset = "0x700474")]
[ExecuteInEditMode]
public class AkEnvironment : MonoBehaviour
{
	[Token(Token = "0x200025F")]
	public class AkEnvironment_CompareByPriority : IComparer<AkEnvironment>
	{
		[Token(Token = "0x600144E")]
		[Address(RVA = "0xD93BD8", Offset = "0xD93BD8", VA = "0xD93BD8", Slot = "5")]
		public virtual int Compare(AkEnvironment a, AkEnvironment b)
		{
			return default(int);
		}

		[Token(Token = "0x600144F")]
		[Address(RVA = "0xD93BC8", Offset = "0xD93BC8", VA = "0xD93BC8")]
		public AkEnvironment_CompareByPriority()
		{
		}
	}

	[Token(Token = "0x2000260")]
	public class AkEnvironment_CompareBySelectionAlgorithm : AkEnvironment_CompareByPriority
	{
		[Token(Token = "0x6001450")]
		[Address(RVA = "0xD93C78", Offset = "0xD93C78", VA = "0xD93C78", Slot = "5")]
		public override int Compare(AkEnvironment a, AkEnvironment b)
		{
			return default(int);
		}

		[Token(Token = "0x6001451")]
		[Address(RVA = "0xD93BD0", Offset = "0xD93BD0", VA = "0xD93BD0")]
		public AkEnvironment_CompareBySelectionAlgorithm()
		{
		}
	}

	[Token(Token = "0x40007DA")]
	public const int MAX_NB_ENVIRONMENTS = 4;

	[Token(Token = "0x40007DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static AkEnvironment_CompareByPriority s_compareByPriority;

	[Token(Token = "0x40007DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static AkEnvironment_CompareBySelectionAlgorithm s_compareBySelectionAlgorithm;

	[Token(Token = "0x40007DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool excludeOthers;

	[Token(Token = "0x40007DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool isDefault;

	[Token(Token = "0x40007DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AuxBus data;

	[Token(Token = "0x40007E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x705230", Offset = "0x705230")]
	private Collider <Collider>k__BackingField;

	[Token(Token = "0x40007E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int priority;

	[Token(Token = "0x40007E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[HideInInspector]
	[SerializeField]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x705240", Offset = "0x705240")]
	private int auxBusIdInternal;

	[Token(Token = "0x40007E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	[SerializeField]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x70529C", Offset = "0x70529C")]
	private byte[] valueGuidInternal;

	[Token(Token = "0x170001A6")]
	public Collider Collider
	{
		[Token(Token = "0x6000F07")]
		[Address(RVA = "0xD93970", Offset = "0xD93970", VA = "0xD93970")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x708A2C", Offset = "0x708A2C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000F08")]
		[Address(RVA = "0xD93978", Offset = "0xD93978", VA = "0xD93978")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x708A3C", Offset = "0x708A3C")]
		private set
		{
		}
	}

	[Token(Token = "0x170001A7")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x70A000", Offset = "0x70A000")]
	public int m_auxBusID
	{
		[Token(Token = "0x6000F0A")]
		[Address(RVA = "0xD939D8", Offset = "0xD939D8", VA = "0xD939D8")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170001A8")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x70A038", Offset = "0x70A038")]
	public byte[] valueGuid
	{
		[Token(Token = "0x6000F0B")]
		[Address(RVA = "0xD939E8", Offset = "0xD939E8", VA = "0xD939E8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000F09")]
	[Address(RVA = "0xD93980", Offset = "0xD93980", VA = "0xD93980")]
	public void Awake()
	{
	}

	[Token(Token = "0x6000F0C")]
	[Address(RVA = "0xD93AAC", Offset = "0xD93AAC", VA = "0xD93AAC")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x708A4C", Offset = "0x708A4C")]
	public uint GetAuxBusID()
	{
		return default(uint);
	}

	[Token(Token = "0x6000F0D")]
	[Address(RVA = "0xD93AC4", Offset = "0xD93AC4", VA = "0xD93AC4")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x708A84", Offset = "0x708A84")]
	public Collider GetCollider()
	{
		return null;
	}

	[Token(Token = "0x6000F0E")]
	[Address(RVA = "0xD93ACC", Offset = "0xD93ACC", VA = "0xD93ACC")]
	public AkEnvironment()
	{
	}
}
[Token(Token = "0x200014E")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x70050C", Offset = "0x70050C")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x70050C", Offset = "0x70050C")]
[ExecuteInEditMode]
public class AkEnvironmentPortal : MonoBehaviour
{
	[Token(Token = "0x40007E4")]
	public const int MAX_ENVIRONMENTS_PER_PORTAL = 2;

	[Token(Token = "0x40007E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 axis;

	[Token(Token = "0x40007E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AkEnvironment[] environments;

	[Token(Token = "0x40007E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private BoxCollider m_BoxCollider;

	[Token(Token = "0x170001A9")]
	private BoxCollider BoxCollider
	{
		[Token(Token = "0x6000F10")]
		[Address(RVA = "0xD93CD4", Offset = "0xD93CD4", VA = "0xD93CD4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001AA")]
	public bool EnvironmentsShareAuxBus
	{
		[Token(Token = "0x6000F11")]
		[Address(RVA = "0xD93D68", Offset = "0xD93D68", VA = "0xD93D68")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000F12")]
	[Address(RVA = "0xD93F04", Offset = "0xD93F04", VA = "0xD93F04")]
	public float GetAuxSendValueForPosition(Vector3 in_position, int index)
	{
		return default(float);
	}

	[Token(Token = "0x6000F13")]
	[Address(RVA = "0xD94194", Offset = "0xD94194", VA = "0xD94194")]
	public AkEnvironmentPortal()
	{
	}
}
[Token(Token = "0x200014F")]
public class AkEventCallbackMsg
{
	[Token(Token = "0x40007E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public AkCallbackInfo info;

	[Token(Token = "0x40007E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject sender;

	[Token(Token = "0x40007EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AkCallbackType type;

	[Token(Token = "0x6000F14")]
	[Address(RVA = "0xD9422C", Offset = "0xD9422C", VA = "0xD9422C")]
	public AkEventCallbackMsg()
	{
	}
}
[Token(Token = "0x2000150")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x7005A4", Offset = "0x7005A4")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x7005A4", Offset = "0x7005A4")]
public class AkEvent : AkDragDropTriggerHandler
{
	[Serializable]
	[Token(Token = "0x2000261")]
	public class CallbackData
	{
		[Token(Token = "0x4000B8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public CallbackFlags Flags;

		[Token(Token = "0x4000B8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string FunctionName;

		[Token(Token = "0x4000B8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject GameObject;

		[Token(Token = "0x6001452")]
		[Address(RVA = "0xD942EC", Offset = "0xD942EC", VA = "0xD942EC")]
		public void CallFunction(AkEventCallbackMsg eventCallbackMsg)
		{
		}

		[Token(Token = "0x6001453")]
		[Address(RVA = "0xD944C0", Offset = "0xD944C0", VA = "0xD944C0")]
		public CallbackData()
		{
		}
	}

	[Token(Token = "0x40007EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public AkActionOnEventType actionOnEventType;

	[Token(Token = "0x40007EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AkCurveInterpolation curveInterpolation;

	[Token(Token = "0x40007ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool enableActionOnEvent;

	[Token(Token = "0x40007EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Event data;

	[Token(Token = "0x40007EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool useCallbacks;

	[Token(Token = "0x40007F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public List<CallbackData> Callbacks;

	[Token(Token = "0x40007F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public uint playingId;

	[Token(Token = "0x40007F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject soundEmitterObject;

	[Token(Token = "0x40007F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float transitionDuration;

	[Token(Token = "0x40007F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private AkEventCallbackMsg EventCallbackMsg;

	[Token(Token = "0x40007F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[HideInInspector]
	[SerializeField]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x7052F8", Offset = "0x7052F8")]
	private int eventIdInternal;

	[Token(Token = "0x40007F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[HideInInspector]
	[SerializeField]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x705354", Offset = "0x705354")]
	private byte[] valueGuidInternal;

	[Token(Token = "0x40007F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[HideInInspector]
	[SerializeField]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x7053B0", Offset = "0x7053B0")]
	private AkEventCallbackData m_callbackDataInternal;

	[Token(Token = "0x170001AB")]
	protected override BaseType WwiseType
	{
		[Token(Token = "0x6000F15")]
		[Address(RVA = "0xD94224", Offset = "0xD94224", VA = "0xD94224", Slot = "8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001AC")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x70A070", Offset = "0x70A070")]
	public int eventID
	{
		[Token(Token = "0x6000F1B")]
		[Address(RVA = "0xD943E4", Offset = "0xD943E4", VA = "0xD943E4")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170001AD")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x70A0A8", Offset = "0x70A0A8")]
	public byte[] valueGuid
	{
		[Token(Token = "0x6000F1C")]
		[Address(RVA = "0xD943F4", Offset = "0xD943F4", VA = "0xD943F4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001AE")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x70A0E0", Offset = "0x70A0E0")]
	public AkEventCallbackData m_callbackData
	{
		[Token(Token = "0x6000F1D")]
		[Address(RVA = "0xD944B8", Offset = "0xD944B8", VA = "0xD944B8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000F16")]
	[Address(RVA = "0xD82628", Offset = "0xD82628", VA = "0xD82628", Slot = "6")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000F17")]
	[Address(RVA = "0xD94234", Offset = "0xD94234", VA = "0xD94234")]
	private void Callback(object in_cookie, AkCallbackType in_type, AkCallbackInfo in_info)
	{
	}

	[Token(Token = "0x6000F18")]
	[Address(RVA = "0xD82CAC", Offset = "0xD82CAC", VA = "0xD82CAC", Slot = "4")]
	public override void HandleEvent(GameObject in_gameObject)
	{
	}

	[Token(Token = "0x6000F19")]
	[Address(RVA = "0xD943B0", Offset = "0xD943B0", VA = "0xD943B0")]
	public void Stop(int _transitionDuration)
	{
	}

	[Token(Token = "0x6000F1A")]
	[Address(RVA = "0xD943B8", Offset = "0xD943B8", VA = "0xD943B8")]
	public void Stop(int _transitionDuration, AkCurveInterpolation _curveInterpolation)
	{
	}

	[Token(Token = "0x6000F1E")]
	[Address(RVA = "0xD83008", Offset = "0xD83008", VA = "0xD83008")]
	public AkEvent()
	{
	}
}
[Token(Token = "0x2000151")]
public class AkEventCallbackData : ScriptableObject
{
	[Token(Token = "0x40007F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<int> callbackFlags;

	[Token(Token = "0x40007F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<string> callbackFunc;

	[Token(Token = "0x40007FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<GameObject> callbackGameObj;

	[Token(Token = "0x40007FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int uFlags;

	[Token(Token = "0x6000F1F")]
	[Address(RVA = "0xD944C8", Offset = "0xD944C8", VA = "0xD944C8")]
	public AkEventCallbackData()
	{
	}
}
[Token(Token = "0x2000152")]
public class AkEventPlayable : PlayableAsset, ITimelineClipAsset
{
	[Token(Token = "0x40007FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Event akEvent;

	[Token(Token = "0x40007FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private AkCurveInterpolation blendInCurve;

	[Token(Token = "0x40007FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private AkCurveInterpolation blendOutCurve;

	[Token(Token = "0x40007FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private ExposedReference<GameObject> emitterObjectRef;

	[Token(Token = "0x4000800")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float eventDurationMax;

	[Token(Token = "0x4000801")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float eventDurationMin;

	[NonSerialized]
	[Token(Token = "0x4000802")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TimelineClip owningClip;

	[Token(Token = "0x4000803")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private bool retriggerEvent;

	[Token(Token = "0x4000804")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	public bool UseWwiseEventDuration;

	[Token(Token = "0x4000805")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
	[SerializeField]
	private bool StopEventAtClipEnd;

	[Token(Token = "0x170001AF")]
	private ClipCaps UnityEngine.Timeline.ITimelineClipAsset.clipCaps
	{
		[Token(Token = "0x6000F20")]
		[Address(RVA = "0xD946B8", Offset = "0xD946B8", VA = "0xD946B8", Slot = "9")]
		get
		{
			return default(ClipCaps);
		}
	}

	[Token(Token = "0x6000F21")]
	[Address(RVA = "0xD946C0", Offset = "0xD946C0", VA = "0xD946C0", Slot = "6")]
	public override Playable CreatePlayable(PlayableGraph graph, GameObject owner)
	{
		return default(Playable);
	}

	[Token(Token = "0x6000F22")]
	[Address(RVA = "0xD94934", Offset = "0xD94934", VA = "0xD94934")]
	public AkEventPlayable()
	{
	}
}
[Token(Token = "0x2000153")]
public class AkEventPlayableBehavior : PlayableBehaviour
{
	[Token(Token = "0x2000262")]
	[Flags]
	private enum Actions
	{
		[Token(Token = "0x4000B8F")]
		None = 0,
		[Token(Token = "0x4000B90")]
		Playback = 1,
		[Token(Token = "0x4000B91")]
		Retrigger = 2,
		[Token(Token = "0x4000B92")]
		DelayedStop = 4,
		[Token(Token = "0x4000B93")]
		Seek = 8,
		[Token(Token = "0x4000B94")]
		FadeIn = 0x10,
		[Token(Token = "0x4000B95")]
		FadeOut = 0x20
	}

	[Token(Token = "0x4000806")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private float currentDuration;

	[Token(Token = "0x4000807")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private float currentDurationProportion;

	[Token(Token = "0x4000808")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool eventIsPlaying;

	[Token(Token = "0x4000809")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	private bool fadeinTriggered;

	[Token(Token = "0x400080A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	private bool fadeoutTriggered;

	[Token(Token = "0x400080B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float previousEventStartTime;

	[Token(Token = "0x400080C")]
	private const uint CallbackFlags = 9u;

	[Token(Token = "0x400080D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Actions requiredActions;

	[Token(Token = "0x400080E")]
	private const int scrubPlaybackLengthMs = 100;

	[Token(Token = "0x400080F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Event akEvent;

	[Token(Token = "0x4000810")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float eventDurationMax;

	[Token(Token = "0x4000811")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float eventDurationMin;

	[Token(Token = "0x4000812")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float blendInDuration;

	[Token(Token = "0x4000813")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float blendOutDuration;

	[Token(Token = "0x4000814")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float easeInDuration;

	[Token(Token = "0x4000815")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float easeOutDuration;

	[Token(Token = "0x4000816")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AkCurveInterpolation blendInCurve;

	[Token(Token = "0x4000817")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public AkCurveInterpolation blendOutCurve;

	[Token(Token = "0x4000818")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject eventObject;

	[Token(Token = "0x4000819")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool retriggerEvent;

	[Token(Token = "0x400081A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	private bool wasScrubbingAndRequiresRetrigger;

	[Token(Token = "0x400081B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5A")]
	public bool StopEventAtClipEnd;

	[Token(Token = "0x400081C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5B")]
	public bool overrideTrackEmitterObject;

	[Token(Token = "0x400081D")]
	private const float alph = 0.05f;

	[Token(Token = "0x6000F23")]
	[Address(RVA = "0xD949B4", Offset = "0xD949B4", VA = "0xD949B4")]
	private void CallbackHandler(object in_cookie, AkCallbackType in_type, AkCallbackInfo in_info)
	{
	}

	[Token(Token = "0x6000F24")]
	[Address(RVA = "0xD94A7C", Offset = "0xD94A7C", VA = "0xD94A7C")]
	private bool IsScrubbing(FrameData info)
	{
		return default(bool);
	}

	[Token(Token = "0x6000F25")]
	[Address(RVA = "0xD94AA0", Offset = "0xD94AA0", VA = "0xD94AA0", Slot = "19")]
	public override void PrepareFrame(Playable playable, FrameData info)
	{
	}

	[Token(Token = "0x6000F26")]
	[Address(RVA = "0xD94E60", Offset = "0xD94E60", VA = "0xD94E60", Slot = "17")]
	public override void OnBehaviourPlay(Playable playable, FrameData info)
	{
	}

	[Token(Token = "0x6000F27")]
	[Address(RVA = "0xD95028", Offset = "0xD95028", VA = "0xD95028", Slot = "18")]
	public override void OnBehaviourPause(Playable playable, FrameData info)
	{
	}

	[Token(Token = "0x6000F28")]
	[Address(RVA = "0xD95144", Offset = "0xD95144", VA = "0xD95144", Slot = "20")]
	public override void ProcessFrame(Playable playable, FrameData info, object playerData)
	{
	}

	[Token(Token = "0x6000F29")]
	[Address(RVA = "0xD94BE0", Offset = "0xD94BE0", VA = "0xD94BE0")]
	private bool ShouldPlay(Playable playable)
	{
		return default(bool);
	}

	[Token(Token = "0x6000F2A")]
	[Address(RVA = "0xD94D1C", Offset = "0xD94D1C", VA = "0xD94D1C")]
	private void CheckForFadeInFadeOut(Playable playable)
	{
	}

	[Token(Token = "0x6000F2B")]
	[Address(RVA = "0xD94DBC", Offset = "0xD94DBC", VA = "0xD94DBC")]
	private void CheckForFadeOut(Playable playable, double currentClipTime)
	{
	}

	[Token(Token = "0x6000F2C")]
	[Address(RVA = "0xD954CC", Offset = "0xD954CC", VA = "0xD954CC")]
	private void TriggerFadeIn(Playable playable)
	{
	}

	[Token(Token = "0x6000F2D")]
	[Address(RVA = "0xD95608", Offset = "0xD95608", VA = "0xD95608")]
	private void TriggerFadeOut(Playable playable)
	{
	}

	[Token(Token = "0x6000F2E")]
	[Address(RVA = "0xD9510C", Offset = "0xD9510C", VA = "0xD9510C")]
	private void StopEvent(int transition = 0)
	{
	}

	[Token(Token = "0x6000F2F")]
	[Address(RVA = "0xD956DC", Offset = "0xD956DC", VA = "0xD956DC")]
	private bool PostEvent()
	{
		return default(bool);
	}

	[Token(Token = "0x6000F30")]
	[Address(RVA = "0xD9532C", Offset = "0xD9532C", VA = "0xD9532C")]
	private void PlayEvent()
	{
	}

	[Token(Token = "0x6000F31")]
	[Address(RVA = "0xD95430", Offset = "0xD95430", VA = "0xD95430")]
	private void RetriggerEvent(Playable playable)
	{
	}

	[Token(Token = "0x6000F32")]
	[Address(RVA = "0xD94F4C", Offset = "0xD94F4C", VA = "0xD94F4C")]
	private float GetProportionalTime(Playable playable)
	{
		return default(float);
	}

	[Token(Token = "0x6000F33")]
	[Address(RVA = "0xD9535C", Offset = "0xD9535C", VA = "0xD9535C")]
	private float SeekToTime(Playable playable)
	{
		return default(float);
	}

	[Token(Token = "0x6000F34")]
	[Address(RVA = "0xD95784", Offset = "0xD95784", VA = "0xD95784")]
	public AkEventPlayableBehavior()
	{
	}
}
[Token(Token = "0x2000154")]
[AttributeAttribute(Name = "TrackColorAttribute", RVA = "0x70062C", Offset = "0x70062C")]
[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0x70062C", Offset = "0x70062C")]
[AttributeAttribute(Name = "TrackBindingTypeAttribute", RVA = "0x70062C", Offset = "0x70062C")]
public class AkEventTrack : TrackAsset
{
	[Token(Token = "0x6000F35")]
	[Address(RVA = "0xD95798", Offset = "0xD95798", VA = "0xD95798", Slot = "24")]
	public override Playable CreateTrackMixer(PlayableGraph graph, GameObject go, int inputCount)
	{
		return default(Playable);
	}

	[Token(Token = "0x6000F36")]
	[Address(RVA = "0xD95AFC", Offset = "0xD95AFC", VA = "0xD95AFC")]
	public AkEventTrack()
	{
	}
}
[Token(Token = "0x2000155")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x7006E0", Offset = "0x7006E0")]
[DisallowMultipleComponent]
[ExecuteInEditMode]
public class AkGameObj : MonoBehaviour
{
	[Token(Token = "0x400081E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private AkGameObjListenerList m_listeners;

	[Token(Token = "0x400081F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool isEnvironmentAware;

	[Token(Token = "0x4000820")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	[SerializeField]
	private bool isStaticObject;

	[Token(Token = "0x4000821")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Collider m_Collider;

	[Token(Token = "0x4000822")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private AkGameObjEnvironmentData m_envData;

	[Token(Token = "0x4000823")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private AkGameObjPositionData m_posData;

	[Token(Token = "0x4000824")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AkGameObjPositionOffsetData m_positionOffsetData;

	[Token(Token = "0x4000825")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool isRegistered;

	[Token(Token = "0x4000826")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[HideInInspector]
	[SerializeField]
	private AkGameObjPosOffsetData m_posOffsetData;

	[Token(Token = "0x4000827")]
	private const int AK_NUM_LISTENERS = 8;

	[Token(Token = "0x4000828")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[HideInInspector]
	[SerializeField]
	private int listenerMask;

	[Token(Token = "0x170001B0")]
	public bool IsUsingDefaultListeners
	{
		[Token(Token = "0x6000F37")]
		[Address(RVA = "0xD92BD8", Offset = "0xD92BD8", VA = "0xD92BD8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170001B1")]
	public List<AkAudioListener> ListenerList
	{
		[Token(Token = "0x6000F38")]
		[Address(RVA = "0xD92BF4", Offset = "0xD92BF4", VA = "0xD92BF4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000F39")]
	[Address(RVA = "0xD86320", Offset = "0xD86320", VA = "0xD86320")]
	internal void AddListener(AkAudioListener listener)
	{
	}

	[Token(Token = "0x6000F3A")]
	[Address(RVA = "0xD86340", Offset = "0xD86340", VA = "0xD86340")]
	internal void RemoveListener(AkAudioListener listener)
	{
	}

	[Token(Token = "0x6000F3B")]
	[Address(RVA = "0xD85F84", Offset = "0xD85F84", VA = "0xD85F84")]
	public AKRESULT Register()
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000F3C")]
	[Address(RVA = "0xD96A0C", Offset = "0xD96A0C", VA = "0xD96A0C")]
	private void SetPosition()
	{
	}

	[Token(Token = "0x6000F3D")]
	[Address(RVA = "0xD96C70", Offset = "0xD96C70", VA = "0xD96C70")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000F3E")]
	[Address(RVA = "0xD96DE8", Offset = "0xD96DE8", VA = "0xD96DE8")]
	private void CheckStaticStatus()
	{
	}

	[Token(Token = "0x6000F3F")]
	[Address(RVA = "0xD96DEC", Offset = "0xD96DEC", VA = "0xD96DEC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000F40")]
	[Address(RVA = "0xD96E00", Offset = "0xD96E00", VA = "0xD96E00")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000F41")]
	[Address(RVA = "0xD96F60", Offset = "0xD96F60", VA = "0xD96F60")]
	private void Update()
	{
	}

	[Token(Token = "0x6000F42")]
	[Address(RVA = "0xD96FE4", Offset = "0xD96FE4", VA = "0xD96FE4", Slot = "4")]
	public virtual Vector3 GetPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000F43")]
	[Address(RVA = "0xD97154", Offset = "0xD97154", VA = "0xD97154", Slot = "5")]
	public virtual Vector3 GetForward()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000F44")]
	[Address(RVA = "0xD97178", Offset = "0xD97178", VA = "0xD97178", Slot = "6")]
	public virtual Vector3 GetUpward()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000F45")]
	[Address(RVA = "0xD9719C", Offset = "0xD9719C", VA = "0xD9719C")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000F46")]
	[Address(RVA = "0xD971C0", Offset = "0xD971C0", VA = "0xD971C0")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000F47")]
	[Address(RVA = "0xD971E4", Offset = "0xD971E4", VA = "0xD971E4")]
	public AkGameObj()
	{
	}
}
[Token(Token = "0x2000156")]
public class AkGameObjEnvironmentData
{
	[Token(Token = "0x4000829")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private readonly List<AkEnvironment> activeEnvironments;

	[Token(Token = "0x400082A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private readonly List<AkEnvironment> activeEnvironmentsFromPortals;

	[Token(Token = "0x400082B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private readonly List<AkEnvironmentPortal> activePortals;

	[Token(Token = "0x400082C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly AkAuxSendArray auxSendValues;

	[Token(Token = "0x400082D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3 lastPosition;

	[Token(Token = "0x400082E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private bool hasEnvironmentListChanged;

	[Token(Token = "0x400082F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
	private bool hasActivePortalListChanged;

	[Token(Token = "0x4000830")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3E")]
	private bool hasSentZero;

	[Token(Token = "0x6000F48")]
	[Address(RVA = "0xF9CBF0", Offset = "0xF9CBF0", VA = "0xF9CBF0")]
	private void AddHighestPriorityEnvironmentsFromPortals(Vector3 position)
	{
	}

	[Token(Token = "0x6000F49")]
	[Address(RVA = "0xF9CEEC", Offset = "0xF9CEEC", VA = "0xF9CEEC")]
	private void AddHighestPriorityEnvironments(Vector3 position)
	{
	}

	[Token(Token = "0x6000F4A")]
	[Address(RVA = "0xF9D028", Offset = "0xF9D028", VA = "0xF9D028")]
	public void UpdateAuxSend(GameObject gameObject, Vector3 position)
	{
	}

	[Token(Token = "0x6000F4B")]
	[Address(RVA = "0xF9D188", Offset = "0xF9D188", VA = "0xF9D188")]
	private void TryAddEnvironment(AkEnvironment env)
	{
	}

	[Token(Token = "0x6000F4C")]
	[Address(RVA = "0xF9D2EC", Offset = "0xF9D2EC", VA = "0xF9D2EC")]
	private void RemoveEnvironment(AkEnvironment env)
	{
	}

	[Token(Token = "0x6000F4D")]
	[Address(RVA = "0xF9D374", Offset = "0xF9D374", VA = "0xF9D374")]
	public void AddAkEnvironment(Collider environmentCollider, Collider gameObjectCollider)
	{
	}

	[Token(Token = "0x6000F4E")]
	[Address(RVA = "0xF9D4AC", Offset = "0xF9D4AC", VA = "0xF9D4AC")]
	private bool AkEnvironmentBelongsToActivePortals(AkEnvironment env)
	{
		return default(bool);
	}

	[Token(Token = "0x6000F4F")]
	[Address(RVA = "0xF9D5DC", Offset = "0xF9D5DC", VA = "0xF9D5DC")]
	public void RemoveAkEnvironment(Collider environmentCollider, Collider gameObjectCollider)
	{
	}

	[Token(Token = "0x6000F50")]
	[Address(RVA = "0xF9D7FC", Offset = "0xF9D7FC", VA = "0xF9D7FC")]
	public AkGameObjEnvironmentData()
	{
	}
}
[Serializable]
[Token(Token = "0x2000157")]
public class AkGameObjListenerList : AkAudioListener.BaseListenerList
{
	[NonSerialized]
	[Token(Token = "0x4000831")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private AkGameObj akGameObj;

	[Token(Token = "0x4000832")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	public List<AkAudioListener> initialListenerList;

	[Token(Token = "0x4000833")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	public bool useDefaultListeners;

	[Token(Token = "0x6000F51")]
	[Address(RVA = "0xF9D90C", Offset = "0xF9D90C", VA = "0xF9D90C")]
	public void SetUseDefaultListeners(bool useDefault)
	{
	}

	[Token(Token = "0x6000F52")]
	[Address(RVA = "0xF9DAE4", Offset = "0xF9DAE4", VA = "0xF9DAE4")]
	public void Init(AkGameObj akGameObj)
	{
	}

	[Token(Token = "0x6000F53")]
	[Address(RVA = "0xF9DBDC", Offset = "0xF9DBDC", VA = "0xF9DBDC", Slot = "4")]
	public override bool Add(AkAudioListener listener)
	{
		return default(bool);
	}

	[Token(Token = "0x6000F54")]
	[Address(RVA = "0xF9DCCC", Offset = "0xF9DCCC", VA = "0xF9DCCC", Slot = "5")]
	public override bool Remove(AkAudioListener listener)
	{
		return default(bool);
	}

	[Token(Token = "0x6000F55")]
	[Address(RVA = "0xF9DDBC", Offset = "0xF9DDBC", VA = "0xF9DDBC")]
	public AkGameObjListenerList()
	{
	}
}
[Token(Token = "0x2000158")]
public class AkGameObjPosOffsetData : ScriptableObject
{
	[Token(Token = "0x4000834")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 positionOffset;

	[Token(Token = "0x6000F56")]
	[Address(RVA = "0xF9DE34", Offset = "0xF9DE34", VA = "0xF9DE34")]
	public AkGameObjPosOffsetData()
	{
	}
}
[Token(Token = "0x2000159")]
public class AkGameObjPositionData
{
	[Token(Token = "0x4000835")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Vector3 forward;

	[Token(Token = "0x4000836")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector3 position;

	[Token(Token = "0x4000837")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector3 up;

	[Token(Token = "0x6000F57")]
	[Address(RVA = "0xF9DE3C", Offset = "0xF9DE3C", VA = "0xF9DE3C")]
	public AkGameObjPositionData()
	{
	}
}
[Serializable]
[Token(Token = "0x200015A")]
public class AkGameObjPositionOffsetData
{
	[Token(Token = "0x4000838")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool KeepMe;

	[Token(Token = "0x4000839")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Vector3 positionOffset;

	[Token(Token = "0x6000F58")]
	[Address(RVA = "0xF9DE44", Offset = "0xF9DE44", VA = "0xF9DE44")]
	public AkGameObjPositionOffsetData(bool IReallyWantToBeConstructed = false)
	{
	}
}
[Token(Token = "0x200015B")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x70073C", Offset = "0x70073C")]
[DisallowMultipleComponent]
[ExecuteInEditMode]
public class AkInitializer : MonoBehaviour
{
	[Token(Token = "0x400083A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static AkInitializer ms_Instance;

	[Token(Token = "0x400083B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AkWwiseInitializationSettings InitializationSettings;

	[Token(Token = "0x6000F59")]
	[Address(RVA = "0xFA11C0", Offset = "0xFA11C0", VA = "0xFA11C0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000F5A")]
	[Address(RVA = "0xFA12A8", Offset = "0xFA12A8", VA = "0xFA12A8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000F5B")]
	[Address(RVA = "0xFA1380", Offset = "0xFA1380", VA = "0xFA1380")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000F5C")]
	[Address(RVA = "0xFA1428", Offset = "0xFA1428", VA = "0xFA1428")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000F5D")]
	[Address(RVA = "0xFA14C4", Offset = "0xFA14C4", VA = "0xFA14C4")]
	private void OnApplicationPause(bool pauseStatus)
	{
	}

	[Token(Token = "0x6000F5E")]
	[Address(RVA = "0xFA1580", Offset = "0xFA1580", VA = "0xFA1580")]
	private void OnApplicationFocus(bool focus)
	{
	}

	[Token(Token = "0x6000F5F")]
	[Address(RVA = "0xFA163C", Offset = "0xFA163C", VA = "0xFA163C")]
	private void OnApplicationQuit()
	{
	}

	[Token(Token = "0x6000F60")]
	[Address(RVA = "0xFA16E4", Offset = "0xFA16E4", VA = "0xFA16E4")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000F61")]
	[Address(RVA = "0xFA178C", Offset = "0xFA178C", VA = "0xFA178C")]
	public AkInitializer()
	{
	}
}
[Token(Token = "0x200015C")]
public class AkMemBankLoader : MonoBehaviour
{
	[Token(Token = "0x2000263")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7013BC", Offset = "0x7013BC")]
	private sealed class <LoadFile>d__14 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AkMemBankLoader <>4__this;

		[Token(Token = "0x17000295")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001457")]
			[Address(RVA = "0xFA80B8", Offset = "0xFA80B8", VA = "0xFA80B8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000296")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001459")]
			[Address(RVA = "0xFA8120", Offset = "0xFA8120", VA = "0xFA8120", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001454")]
		[Address(RVA = "0xFA7DF4", Offset = "0xFA7DF4", VA = "0xFA7DF4")]
		[DebuggerHidden]
		public <LoadFile>d__14(int <>1__state)
		{
		}

		[Token(Token = "0x6001455")]
		[Address(RVA = "0xFA7F30", Offset = "0xFA7F30", VA = "0xFA7F30", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001456")]
		[Address(RVA = "0xFA7F34", Offset = "0xFA7F34", VA = "0xFA7F34", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001458")]
		[Address(RVA = "0xFA80C0", Offset = "0xFA80C0", VA = "0xFA80C0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400083C")]
	private const int WaitMs = 50;

	[Token(Token = "0x400083D")]
	private const long AK_BANK_PLATFORM_DATA_ALIGNMENT = 16L;

	[Token(Token = "0x400083E")]
	private const long AK_BANK_PLATFORM_DATA_ALIGNMENT_MASK = 15L;

	[Token(Token = "0x400083F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string bankName;

	[Token(Token = "0x4000840")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool isLocalizedBank;

	[Token(Token = "0x4000841")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string m_bankPath;

	[Token(Token = "0x4000842")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public uint ms_bankID;

	[Token(Token = "0x4000843")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private IntPtr ms_pInMemoryBankPtr;

	[Token(Token = "0x4000844")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GCHandle ms_pinnedArray;

	[Token(Token = "0x4000845")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private UnityWebRequest ms_www;

	[Token(Token = "0x6000F62")]
	[Address(RVA = "0xFA7918", Offset = "0xFA7918", VA = "0xFA7918")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F63")]
	[Address(RVA = "0xFA7A48", Offset = "0xFA7A48", VA = "0xFA7A48")]
	public void LoadNonLocalizedBank(string in_bankFilename)
	{
	}

	[Token(Token = "0x6000F64")]
	[Address(RVA = "0xFA792C", Offset = "0xFA792C", VA = "0xFA792C")]
	public void LoadLocalizedBank(string in_bankFilename)
	{
	}

	[Token(Token = "0x6000F65")]
	[Address(RVA = "0xFA7B58", Offset = "0xFA7B58", VA = "0xFA7B58")]
	private uint AllocateAlignedBuffer(byte[] data)
	{
		return default(uint);
	}

	[Token(Token = "0x6000F66")]
	[Address(RVA = "0xFA7D84", Offset = "0xFA7D84", VA = "0xFA7D84")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x708ABC", Offset = "0x708ABC")]
	private IEnumerator LoadFile()
	{
		return null;
	}

	[Token(Token = "0x6000F67")]
	[Address(RVA = "0xFA7B28", Offset = "0xFA7B28", VA = "0xFA7B28")]
	private void DoLoadBank(string in_bankPath)
	{
	}

	[Token(Token = "0x6000F68")]
	[Address(RVA = "0xFA7E20", Offset = "0xFA7E20", VA = "0xFA7E20")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000F69")]
	[Address(RVA = "0xFA7ED4", Offset = "0xFA7ED4", VA = "0xFA7ED4")]
	public AkMemBankLoader()
	{
	}
}
[Token(Token = "0x200015D")]
public abstract class AkObstructionOcclusion : MonoBehaviour
{
	[Token(Token = "0x2000264")]
	protected class ObstructionOcclusionValue
	{
		[Token(Token = "0x4000B99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float currentValue;

		[Token(Token = "0x4000B9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float targetValue;

		[Token(Token = "0x600145A")]
		[Address(RVA = "0xFAACF8", Offset = "0xFAACF8", VA = "0xFAACF8")]
		public bool Update(float fadeRate)
		{
			return default(bool);
		}

		[Token(Token = "0x600145B")]
		[Address(RVA = "0xFAA854", Offset = "0xFAA854", VA = "0xFAA854")]
		public ObstructionOcclusionValue()
		{
		}
	}

	[Token(Token = "0x4000846")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private readonly List<AkAudioListener> listenersToRemove;

	[Token(Token = "0x4000847")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	protected readonly List<AkAudioListener> currentListenerList;

	[Token(Token = "0x4000848")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly Dictionary<AkAudioListener, ObstructionOcclusionValue> ObstructionOcclusionValues;

	[Token(Token = "0x4000849")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected float fadeRate;

	[Token(Token = "0x400084A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x70551C", Offset = "0x70551C")]
	public float fadeTime;

	[Token(Token = "0x400084B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x705554", Offset = "0x705554")]
	public LayerMask LayerMask;

	[Token(Token = "0x400084C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x70558C", Offset = "0x70558C")]
	public float maxDistance;

	[Token(Token = "0x400084D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7055C4", Offset = "0x7055C4")]
	public float refreshInterval;

	[Token(Token = "0x400084E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float refreshTime;

	[Token(Token = "0x6000F6A")]
	[Address(RVA = "0xFAA584", Offset = "0xFAA584", VA = "0xFAA584")]
	protected void InitIntervalsAndFadeRates()
	{
	}

	[Token(Token = "0x6000F6B")]
	protected abstract void UpdateCurrentListenerList();

	[Token(Token = "0x6000F6C")]
	[Address(RVA = "0xFAA5C4", Offset = "0xFAA5C4", VA = "0xFAA5C4")]
	private void UpdateObstructionOcclusionValues()
	{
	}

	[Token(Token = "0x6000F6D")]
	[Address(RVA = "0xFAA85C", Offset = "0xFAA85C", VA = "0xFAA85C")]
	private void CastRays()
	{
	}

	[Token(Token = "0x6000F6E")]
	protected abstract void SetObstructionOcclusion(KeyValuePair<AkAudioListener, ObstructionOcclusionValue> ObsOccPair);

	[Token(Token = "0x6000F6F")]
	[Address(RVA = "0xFAAB90", Offset = "0xFAAB90", VA = "0xFAAB90")]
	private void Update()
	{
	}

	[Token(Token = "0x6000F70")]
	[Address(RVA = "0xFAADE8", Offset = "0xFAADE8", VA = "0xFAADE8")]
	protected AkObstructionOcclusion()
	{
	}
}
[Serializable]
[Token(Token = "0x200015E")]
public class AkRTPCPlayable : PlayableAsset, ITimelineClipAsset
{
	[Token(Token = "0x400084F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool overrideTrackObject;

	[Token(Token = "0x4000850")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ExposedReference<GameObject> RTPCObject;

	[Token(Token = "0x4000851")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool setRTPCGlobally;

	[Token(Token = "0x4000852")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AkRTPCPlayableBehaviour template;

	[Token(Token = "0x4000853")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7055FC", Offset = "0x7055FC")]
	private RTPC <Parameter>k__BackingField;

	[Token(Token = "0x4000854")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x70560C", Offset = "0x70560C")]
	private TimelineClip <OwningClip>k__BackingField;

	[Token(Token = "0x170001B2")]
	public RTPC Parameter
	{
		[Token(Token = "0x6000F71")]
		[Address(RVA = "0xFB0EA0", Offset = "0xFB0EA0", VA = "0xFB0EA0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x708B20", Offset = "0x708B20")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000F72")]
		[Address(RVA = "0xFB0EA8", Offset = "0xFB0EA8", VA = "0xFB0EA8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x708B30", Offset = "0x708B30")]
		set
		{
		}
	}

	[Token(Token = "0x170001B3")]
	public TimelineClip OwningClip
	{
		[Token(Token = "0x6000F73")]
		[Address(RVA = "0xFB0EB0", Offset = "0xFB0EB0", VA = "0xFB0EB0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x708B40", Offset = "0x708B40")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000F74")]
		[Address(RVA = "0xFB0EB8", Offset = "0xFB0EB8", VA = "0xFB0EB8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x708B50", Offset = "0x708B50")]
		set
		{
		}
	}

	[Token(Token = "0x170001B4")]
	private ClipCaps UnityEngine.Timeline.ITimelineClipAsset.clipCaps
	{
		[Token(Token = "0x6000F75")]
		[Address(RVA = "0xFB0EC0", Offset = "0xFB0EC0", VA = "0xFB0EC0", Slot = "9")]
		get
		{
			return default(ClipCaps);
		}
	}

	[Token(Token = "0x6000F76")]
	[Address(RVA = "0xFB0EC8", Offset = "0xFB0EC8", VA = "0xFB0EC8", Slot = "6")]
	public override Playable CreatePlayable(PlayableGraph graph, GameObject go)
	{
		return default(Playable);
	}

	[Token(Token = "0x6000F77")]
	[Address(RVA = "0xFB0FC4", Offset = "0xFB0FC4", VA = "0xFB0FC4")]
	public void InitializeBehavior(PlayableGraph graph, ref AkRTPCPlayableBehaviour b, GameObject owner)
	{
	}

	[Token(Token = "0x6000F78")]
	[Address(RVA = "0xFB1094", Offset = "0xFB1094", VA = "0xFB1094")]
	public AkRTPCPlayable()
	{
	}
}
[Serializable]
[Token(Token = "0x200015F")]
public class AkRTPCPlayableBehaviour : PlayableBehaviour
{
	[Token(Token = "0x4000855")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	private float RTPCValue;

	[Token(Token = "0x4000856")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x70562C", Offset = "0x70562C")]
	private bool <setRTPCGlobally>k__BackingField;

	[Token(Token = "0x4000857")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x70563C", Offset = "0x70563C")]
	private bool <overrideTrackObject>k__BackingField;

	[Token(Token = "0x4000858")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x70564C", Offset = "0x70564C")]
	private GameObject <rtpcObject>k__BackingField;

	[Token(Token = "0x4000859")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x70565C", Offset = "0x70565C")]
	private RTPC <parameter>k__BackingField;

	[Token(Token = "0x170001B5")]
	public bool setRTPCGlobally
	{
		[Token(Token = "0x6000F7A")]
		[Address(RVA = "0xFB1110", Offset = "0xFB1110", VA = "0xFB1110")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x708B70", Offset = "0x708B70")]
		private get
		{
			return default(bool);
		}
		[Token(Token = "0x6000F79")]
		[Address(RVA = "0xFB1104", Offset = "0xFB1104", VA = "0xFB1104")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x708B60", Offset = "0x708B60")]
		set
		{
		}
	}

	[Token(Token = "0x170001B6")]
	public bool overrideTrackObject
	{
		[Token(Token = "0x6000F7C")]
		[Address(RVA = "0xFB1124", Offset = "0xFB1124", VA = "0xFB1124")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x708B90", Offset = "0x708B90")]
		private get
		{
			return default(bool);
		}
		[Token(Token = "0x6000F7B")]
		[Address(RVA = "0xFB1118", Offset = "0xFB1118", VA = "0xFB1118")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x708B80", Offset = "0x708B80")]
		set
		{
		}
	}

	[Token(Token = "0x170001B7")]
	public GameObject rtpcObject
	{
		[Token(Token = "0x6000F7E")]
		[Address(RVA = "0xFB1134", Offset = "0xFB1134", VA = "0xFB1134")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x708BB0", Offset = "0x708BB0")]
		private get
		{
			return null;
		}
		[Token(Token = "0x6000F7D")]
		[Address(RVA = "0xFB112C", Offset = "0xFB112C", VA = "0xFB112C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x708BA0", Offset = "0x708BA0")]
		set
		{
		}
	}

	[Token(Token = "0x170001B8")]
	public RTPC parameter
	{
		[Token(Token = "0x6000F80")]
		[Address(RVA = "0xFB1144", Offset = "0xFB1144", VA = "0xFB1144")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x708BD0", Offset = "0x708BD0")]
		private get
		{
			return null;
		}
		[Token(Token = "0x6000F7F")]
		[Address(RVA = "0xFB113C", Offset = "0xFB113C", VA = "0xFB113C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x708BC0", Offset = "0x708BC0")]
		set
		{
		}
	}

	[Token(Token = "0x6000F81")]
	[Address(RVA = "0xFB114C", Offset = "0xFB114C", VA = "0xFB114C", Slot = "20")]
	public override void ProcessFrame(Playable playable, FrameData info, object playerData)
	{
	}

	[Token(Token = "0x6000F82")]
	[Address(RVA = "0xFB10FC", Offset = "0xFB10FC", VA = "0xFB10FC")]
	public AkRTPCPlayableBehaviour()
	{
	}
}
[Token(Token = "0x2000160")]
[AttributeAttribute(Name = "TrackColorAttribute", RVA = "0x700798", Offset = "0x700798")]
[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0x700798", Offset = "0x700798")]
[AttributeAttribute(Name = "TrackBindingTypeAttribute", RVA = "0x700798", Offset = "0x700798")]
public class AkRTPCTrack : TrackAsset
{
	[Token(Token = "0x400085A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public RTPC Parameter;

	[Token(Token = "0x6000F83")]
	[Address(RVA = "0xFB12C0", Offset = "0xFB12C0", VA = "0xFB12C0", Slot = "24")]
	public override Playable CreateTrackMixer(PlayableGraph graph, GameObject go, int inputCount)
	{
		return default(Playable);
	}

	[Token(Token = "0x6000F84")]
	[Address(RVA = "0xFB137C", Offset = "0xFB137C", VA = "0xFB137C")]
	public void setPlayableProperties()
	{
	}

	[Token(Token = "0x6000F85")]
	[Address(RVA = "0xFB163C", Offset = "0xFB163C", VA = "0xFB163C")]
	public void OnValidate()
	{
	}

	[Token(Token = "0x6000F86")]
	[Address(RVA = "0xFB18F4", Offset = "0xFB18F4", VA = "0xFB18F4")]
	public AkRTPCTrack()
	{
	}
}
[Token(Token = "0x2000161")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x700848", Offset = "0x700848")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x700848", Offset = "0x700848")]
[DisallowMultipleComponent]
public class AkRoom : AkTriggerHandler
{
	[Token(Token = "0x2000265")]
	public class PriorityList
	{
		[Token(Token = "0x2000285")]
		private class CompareByPriority : IComparer<AkRoom>
		{
			[Token(Token = "0x600149A")]
			[Address(RVA = "0xFB3DE0", Offset = "0xFB3DE0", VA = "0xFB3DE0", Slot = "5")]
			public virtual int Compare(AkRoom a, AkRoom b)
			{
				return default(int);
			}

			[Token(Token = "0x600149B")]
			[Address(RVA = "0xFB3DD8", Offset = "0xFB3DD8", VA = "0xFB3DD8")]
			public CompareByPriority()
			{
			}
		}

		[Token(Token = "0x4000B9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly CompareByPriority s_compareByPriority;

		[Token(Token = "0x4000B9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<AkRoom> rooms;

		[Token(Token = "0x600145C")]
		[Address(RVA = "0xFB39E0", Offset = "0xFB39E0", VA = "0xFB39E0")]
		public ulong GetHighestPriorityRoomID()
		{
			return default(ulong);
		}

		[Token(Token = "0x600145D")]
		[Address(RVA = "0xFB3AA8", Offset = "0xFB3AA8", VA = "0xFB3AA8")]
		public AkRoom GetHighestPriorityRoom()
		{
			return null;
		}

		[Token(Token = "0x600145E")]
		[Address(RVA = "0xFB3B0C", Offset = "0xFB3B0C", VA = "0xFB3B0C")]
		public void Add(AkRoom room)
		{
		}

		[Token(Token = "0x600145F")]
		[Address(RVA = "0xFB3C78", Offset = "0xFB3C78", VA = "0xFB3C78")]
		public void Remove(AkRoom room)
		{
		}

		[Token(Token = "0x6001460")]
		[Address(RVA = "0xFB3CE0", Offset = "0xFB3CE0", VA = "0xFB3CE0")]
		public bool Contains(AkRoom room)
		{
			return default(bool);
		}

		[Token(Token = "0x6001461")]
		[Address(RVA = "0xFB3B9C", Offset = "0xFB3B9C", VA = "0xFB3B9C")]
		public int BinarySearch(AkRoom room)
		{
			return default(int);
		}

		[Token(Token = "0x6001462")]
		[Address(RVA = "0xFB3CFC", Offset = "0xFB3CFC", VA = "0xFB3CFC")]
		public PriorityList()
		{
		}
	}

	[Token(Token = "0x400085B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static ulong INVALID_ROOM_ID;

	[Token(Token = "0x400085C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static int RoomCount;

	[Token(Token = "0x400085D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x70566C", Offset = "0x70566C")]
	public int priority;

	[Token(Token = "0x400085E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AuxBus reverbAuxBus;

	[Token(Token = "0x400085F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7056A4", Offset = "0x7056A4")]
	public float reverbLevel;

	[Token(Token = "0x4000860")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7056BC", Offset = "0x7056BC")]
	public float wallOcclusion;

	[Token(Token = "0x4000861")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Event roomToneEvent;

	[Token(Token = "0x4000862")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7056D4", Offset = "0x7056D4")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7056D4", Offset = "0x7056D4")]
	public float roomToneAuxSend;

	[Token(Token = "0x170001B9")]
	public static bool IsSpatialAudioEnabled
	{
		[Token(Token = "0x6000F87")]
		[Address(RVA = "0xFB2B30", Offset = "0xFB2B30", VA = "0xFB2B30")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000F88")]
	[Address(RVA = "0xFB2C0C", Offset = "0xFB2C0C", VA = "0xFB2C0C")]
	public ulong GetID()
	{
		return default(ulong);
	}

	[Token(Token = "0x6000F89")]
	[Address(RVA = "0xFB2C88", Offset = "0xFB2C88", VA = "0xFB2C88")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000F8A")]
	[Address(RVA = "0xFB3618", Offset = "0xFB3618", VA = "0xFB3618", Slot = "4")]
	public override void HandleEvent(GameObject in_gameObject)
	{
	}

	[Token(Token = "0x6000F8B")]
	[Address(RVA = "0xFB3650", Offset = "0xFB3650", VA = "0xFB3650")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000F8C")]
	[Address(RVA = "0xFB3724", Offset = "0xFB3724", VA = "0xFB3724")]
	private void OnTriggerEnter(Collider in_other)
	{
	}

	[Token(Token = "0x6000F8D")]
	[Address(RVA = "0xFB3800", Offset = "0xFB3800", VA = "0xFB3800")]
	private void OnTriggerExit(Collider in_other)
	{
	}

	[Token(Token = "0x6000F8E")]
	[Address(RVA = "0xFB38DC", Offset = "0xFB38DC", VA = "0xFB38DC")]
	public AkRoom()
	{
	}
}
[Token(Token = "0x2000162")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x7008E0", Offset = "0x7008E0")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x7008E0", Offset = "0x7008E0")]
[DisallowMultipleComponent]
public class AkRoomPortal : AkTriggerHandler
{
	[Token(Token = "0x2000266")]
	public enum State
	{
		[Token(Token = "0x4000B9E")]
		Closed,
		[Token(Token = "0x4000B9F")]
		Open
	}

	[Token(Token = "0x4000863")]
	public const int MAX_ROOMS_PER_PORTAL = 2;

	[Token(Token = "0x4000864")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public State initialState;

	[Token(Token = "0x4000865")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private AkVector extent;

	[Token(Token = "0x4000866")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private AkTransform portalTransform;

	[Token(Token = "0x4000867")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool active;

	[Token(Token = "0x4000868")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public List<int> closePortalTriggerList;

	[Token(Token = "0x4000869")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private AkRoom[] rooms;

	[Token(Token = "0x170001BA")]
	public bool portalActive
	{
		[Token(Token = "0x6000F90")]
		[Address(RVA = "0xFB442C", Offset = "0xFB442C", VA = "0xFB442C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000F91")]
		[Address(RVA = "0xFB4434", Offset = "0xFB4434", VA = "0xFB4434")]
		set
		{
		}
	}

	[Token(Token = "0x170001BB")]
	private ulong frontRoomID
	{
		[Token(Token = "0x6000F92")]
		[Address(RVA = "0xFB457C", Offset = "0xFB457C", VA = "0xFB457C")]
		get
		{
			return default(ulong);
		}
	}

	[Token(Token = "0x170001BC")]
	private ulong backRoomID
	{
		[Token(Token = "0x6000F93")]
		[Address(RVA = "0xFB46E4", Offset = "0xFB46E4", VA = "0xFB46E4")]
		get
		{
			return default(ulong);
		}
	}

	[Token(Token = "0x170001BD")]
	public AkRoom frontRoom
	{
		[Token(Token = "0x6000F98")]
		[Address(RVA = "0xFB4618", Offset = "0xFB4618", VA = "0xFB4618")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001BE")]
	public AkRoom backRoom
	{
		[Token(Token = "0x6000F99")]
		[Address(RVA = "0xFB4780", Offset = "0xFB4780", VA = "0xFB4780")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001BF")]
	public bool IsValid
	{
		[Token(Token = "0x6000F9B")]
		[Address(RVA = "0xFB4A88", Offset = "0xFB4A88", VA = "0xFB4A88")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000F94")]
	[Address(RVA = "0xFB47B4", Offset = "0xFB47B4", VA = "0xFB47B4")]
	public void SetRoom(int in_roomIndex, AkRoom in_room)
	{
	}

	[Token(Token = "0x6000F95")]
	[Address(RVA = "0xFB48B0", Offset = "0xFB48B0", VA = "0xFB48B0")]
	public void SetFrontRoom(AkRoom room)
	{
	}

	[Token(Token = "0x6000F96")]
	[Address(RVA = "0xFB48BC", Offset = "0xFB48BC", VA = "0xFB48BC")]
	public void SetBackRoom(AkRoom room)
	{
	}

	[Token(Token = "0x6000F97")]
	[Address(RVA = "0xFB48C8", Offset = "0xFB48C8", VA = "0xFB48C8")]
	public AkRoom GetRoom(int index)
	{
		return null;
	}

	[Token(Token = "0x6000F9A")]
	[Address(RVA = "0xFB4904", Offset = "0xFB4904", VA = "0xFB4904")]
	public void UpdateSoundEngineRoomIDs()
	{
	}

	[Token(Token = "0x6000F9C")]
	[Address(RVA = "0xFB4A6C", Offset = "0xFB4A6C", VA = "0xFB4A6C")]
	public ulong GetID()
	{
		return default(ulong);
	}

	[Token(Token = "0x6000F9D")]
	[Address(RVA = "0xFB4ABC", Offset = "0xFB4ABC", VA = "0xFB4ABC", Slot = "5")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000F9E")]
	[Address(RVA = "0xFB50E8", Offset = "0xFB50E8", VA = "0xFB50E8", Slot = "6")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000F9F")]
	[Address(RVA = "0xFB5170", Offset = "0xFB5170", VA = "0xFB5170", Slot = "4")]
	public override void HandleEvent(GameObject in_gameObject)
	{
	}

	[Token(Token = "0x6000FA0")]
	[Address(RVA = "0xFB50E0", Offset = "0xFB50E0", VA = "0xFB50E0")]
	public void ClosePortal(GameObject in_gameObject)
	{
	}

	[Token(Token = "0x6000FA1")]
	[Address(RVA = "0xFB5188", Offset = "0xFB5188", VA = "0xFB5188", Slot = "7")]
	protected override void OnDestroy()
	{
	}

	[Token(Token = "0x6000FA2")]
	[Address(RVA = "0xFB4650", Offset = "0xFB4650", VA = "0xFB4650")]
	private bool IsRoomActive(AkRoom in_room)
	{
		return default(bool);
	}

	[Token(Token = "0x6000FA3")]
	[Address(RVA = "0xFB5178", Offset = "0xFB5178", VA = "0xFB5178")]
	public void Open()
	{
	}

	[Token(Token = "0x6000FA4")]
	[Address(RVA = "0xFB5180", Offset = "0xFB5180", VA = "0xFB5180")]
	public void Close()
	{
	}

	[Token(Token = "0x6000FA5")]
	[Address(RVA = "0xFB53C8", Offset = "0xFB53C8", VA = "0xFB53C8")]
	public void FindOverlappingRooms(AkRoom.PriorityList[] roomList)
	{
	}

	[Token(Token = "0x6000FA6")]
	[Address(RVA = "0xFB55E0", Offset = "0xFB55E0", VA = "0xFB55E0")]
	private void FillRoomList(Vector3 center, Vector3 halfExtents, AkRoom.PriorityList list)
	{
	}

	[Token(Token = "0x6000FA7")]
	[Address(RVA = "0xFB4E98", Offset = "0xFB4E98", VA = "0xFB4E98")]
	public void UpdateOverlappingRooms()
	{
	}

	[Token(Token = "0x6000FA8")]
	[Address(RVA = "0xFB57C0", Offset = "0xFB57C0", VA = "0xFB57C0")]
	public AkRoomPortal()
	{
	}
}
[Token(Token = "0x2000163")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x700978", Offset = "0x700978")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x700978", Offset = "0x700978")]
public class AkRoomPortalObstruction : AkObstructionOcclusion
{
	[Token(Token = "0x400086A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private AkRoomPortal m_portal;

	[Token(Token = "0x6000FA9")]
	[Address(RVA = "0x9E621C", Offset = "0x9E621C", VA = "0x9E621C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000FAA")]
	[Address(RVA = "0x9E6280", Offset = "0x9E6280", VA = "0x9E6280", Slot = "4")]
	protected override void UpdateCurrentListenerList()
	{
	}

	[Token(Token = "0x6000FAB")]
	[Address(RVA = "0x9E6308", Offset = "0x9E6308", VA = "0x9E6308", Slot = "5")]
	protected override void SetObstructionOcclusion(KeyValuePair<AkAudioListener, ObstructionOcclusionValue> ObsOccPair)
	{
	}

	[Token(Token = "0x6000FAC")]
	[Address(RVA = "0x9E644C", Offset = "0x9E644C", VA = "0x9E644C")]
	public AkRoomPortalObstruction()
	{
	}
}
[Token(Token = "0x2000164")]
public class AkSoundEngineController
{
	[Token(Token = "0x400086B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static AkSoundEngineController ms_Instance;

	[Token(Token = "0x170001C0")]
	public static AkSoundEngineController Instance
	{
		[Token(Token = "0x6000FAD")]
		[Address(RVA = "0xA030A8", Offset = "0xA030A8", VA = "0xA030A8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000FAE")]
	[Address(RVA = "0xA03128", Offset = "0xA03128", VA = "0xA03128")]
	private AkSoundEngineController()
	{
	}

	[Token(Token = "0x6000FAF")]
	[Address(RVA = "0xA03130", Offset = "0xA03130", VA = "0xA03130", Slot = "1")]
	~AkSoundEngineController()
	{
	}

	[Token(Token = "0x6000FB0")]
	[Address(RVA = "0xA03198", Offset = "0xA03198", VA = "0xA03198")]
	public static string GetDecodedBankFolder()
	{
		return null;
	}

	[Token(Token = "0x6000FB1")]
	[Address(RVA = "0xA031E0", Offset = "0xA031E0", VA = "0xA031E0")]
	public static string GetDecodedBankFullPath()
	{
		return null;
	}

	[Token(Token = "0x6000FB2")]
	[Address(RVA = "0xA03284", Offset = "0xA03284", VA = "0xA03284")]
	public void LateUpdate()
	{
	}

	[Token(Token = "0x6000FB3")]
	[Address(RVA = "0xA03358", Offset = "0xA03358", VA = "0xA03358")]
	public void Init(AkInitializer akInitializer)
	{
	}

	[Token(Token = "0x6000FB4")]
	[Address(RVA = "0xA0350C", Offset = "0xA0350C", VA = "0xA0350C")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x6000FB5")]
	[Address(RVA = "0xA03510", Offset = "0xA03510", VA = "0xA03510")]
	public void Terminate()
	{
	}

	[Token(Token = "0x6000FB6")]
	[Address(RVA = "0xA03570", Offset = "0xA03570", VA = "0xA03570")]
	public void OnApplicationPause(bool pauseStatus)
	{
	}

	[Token(Token = "0x6000FB7")]
	[Address(RVA = "0xA03658", Offset = "0xA03658", VA = "0xA03658")]
	public void OnApplicationFocus(bool focus)
	{
	}

	[Token(Token = "0x6000FB8")]
	[Address(RVA = "0xA03580", Offset = "0xA03580", VA = "0xA03580")]
	private void ActivateAudio(bool activate, bool renderAnyway = false)
	{
	}
}
[Token(Token = "0x2000165")]
public abstract class AkSpatialAudioBase : MonoBehaviour
{
	[Token(Token = "0x400086C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private readonly AkRoom.PriorityList roomPriorityList;

	[Token(Token = "0x6000FB9")]
	[Address(RVA = "0x92D2D8", Offset = "0x92D2D8", VA = "0x92D2D8")]
	protected void SetGameObjectInHighestPriorityRoom()
	{
	}

	[Token(Token = "0x6000FBA")]
	[Address(RVA = "0x92D370", Offset = "0x92D370", VA = "0x92D370")]
	public void EnteredRoom(AkRoom room)
	{
	}

	[Token(Token = "0x6000FBB")]
	[Address(RVA = "0x92D3A4", Offset = "0x92D3A4", VA = "0x92D3A4")]
	public void ExitedRoom(AkRoom room)
	{
	}

	[Token(Token = "0x6000FBC")]
	[Address(RVA = "0x92D3D8", Offset = "0x92D3D8", VA = "0x92D3D8")]
	public void SetGameObjectInRoom()
	{
	}

	[Token(Token = "0x6000FBD")]
	[Address(RVA = "0x92D508", Offset = "0x92D508", VA = "0x92D508")]
	protected AkSpatialAudioBase()
	{
	}
}
[Token(Token = "0x2000166")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x700A00", Offset = "0x700A00")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x700A00", Offset = "0x700A00")]
public class AkSpatialAudioEmitter : AkSpatialAudioBase
{
	[Token(Token = "0x400086D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x705738", Offset = "0x705738")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x705738", Offset = "0x705738")]
	public AuxBus reflectAuxBus;

	[Token(Token = "0x400086E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x705798", Offset = "0x705798")]
	public float reflectionMaxPathLength;

	[Token(Token = "0x400086F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x7057D0", Offset = "0x7057D0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7057D0", Offset = "0x7057D0")]
	public float reflectionsAuxBusGain;

	[Token(Token = "0x4000870")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x705824", Offset = "0x705824")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x705824", Offset = "0x705824")]
	public uint reflectionsOrder;

	[Token(Token = "0x4000871")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x705878", Offset = "0x705878")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x705878", Offset = "0x705878")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x705878", Offset = "0x705878")]
	public float roomReverbAuxBusGain;

	[Token(Token = "0x4000872")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x7058F0", Offset = "0x7058F0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7058F0", Offset = "0x7058F0")]
	public uint diffractionMaxEdges;

	[Token(Token = "0x4000873")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x705950", Offset = "0x705950")]
	public uint diffractionMaxPaths;

	[Token(Token = "0x4000874")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x705988", Offset = "0x705988")]
	public uint diffractionMaxPathLength;

	[Token(Token = "0x6000FBE")]
	[Address(RVA = "0x92D570", Offset = "0x92D570", VA = "0x92D570")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000FBF")]
	[Address(RVA = "0x92D6F4", Offset = "0x92D6F4", VA = "0x92D6F4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000FC0")]
	[Address(RVA = "0x92D770", Offset = "0x92D770", VA = "0x92D770")]
	public AkSpatialAudioEmitter()
	{
	}
}
[Token(Token = "0x2000167")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x700A88", Offset = "0x700A88")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x700A88", Offset = "0x700A88")]
[DisallowMultipleComponent]
public class AkSpatialAudioListener : AkSpatialAudioBase
{
	[Token(Token = "0x2000267")]
	public class SpatialAudioListenerList
	{
		[Token(Token = "0x4000BA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly List<AkSpatialAudioListener> listenerList;

		[Token(Token = "0x17000297")]
		public List<AkSpatialAudioListener> ListenerList
		{
			[Token(Token = "0x6001464")]
			[Address(RVA = "0x92E634", Offset = "0x92E634", VA = "0x92E634")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001465")]
		[Address(RVA = "0x92E338", Offset = "0x92E338", VA = "0x92E338")]
		public bool Add(AkSpatialAudioListener listener)
		{
			return default(bool);
		}

		[Token(Token = "0x6001466")]
		[Address(RVA = "0x92E484", Offset = "0x92E484", VA = "0x92E484")]
		public bool Remove(AkSpatialAudioListener listener)
		{
			return default(bool);
		}

		[Token(Token = "0x6001467")]
		[Address(RVA = "0x92E63C", Offset = "0x92E63C", VA = "0x92E63C")]
		private void Refresh()
		{
		}

		[Token(Token = "0x6001468")]
		[Address(RVA = "0x92E5C4", Offset = "0x92E5C4", VA = "0x92E5C4")]
		public SpatialAudioListenerList()
		{
		}
	}

	[Token(Token = "0x4000875")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static AkSpatialAudioListener s_SpatialAudioListener;

	[Token(Token = "0x4000876")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static readonly SpatialAudioListenerList spatialAudioListeners;

	[Token(Token = "0x4000877")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private AkAudioListener AkAudioListener;

	[Token(Token = "0x170001C1")]
	public static AkAudioListener TheSpatialAudioListener
	{
		[Token(Token = "0x6000FC1")]
		[Address(RVA = "0x92E128", Offset = "0x92E128", VA = "0x92E128")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001C2")]
	public static SpatialAudioListenerList SpatialAudioListeners
	{
		[Token(Token = "0x6000FC2")]
		[Address(RVA = "0x92E200", Offset = "0x92E200", VA = "0x92E200")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000FC3")]
	[Address(RVA = "0x92E268", Offset = "0x92E268", VA = "0x92E268")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000FC4")]
	[Address(RVA = "0x92E2C0", Offset = "0x92E2C0", VA = "0x92E2C0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000FC5")]
	[Address(RVA = "0x92E40C", Offset = "0x92E40C", VA = "0x92E40C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000FC6")]
	[Address(RVA = "0x92E558", Offset = "0x92E558", VA = "0x92E558")]
	public AkSpatialAudioListener()
	{
	}
}
[Token(Token = "0x2000168")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x700B20", Offset = "0x700B20")]
public class AkState : AkDragDropTriggerHandler
{
	[Token(Token = "0x4000878")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public State data;

	[Token(Token = "0x4000879")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	[SerializeField]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x7059C0", Offset = "0x7059C0")]
	private int valueIdInternal;

	[Token(Token = "0x400087A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[HideInInspector]
	[SerializeField]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x705A1C", Offset = "0x705A1C")]
	private int groupIdInternal;

	[Token(Token = "0x400087B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	[SerializeField]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x705A78", Offset = "0x705A78")]
	private byte[] valueGuidInternal;

	[Token(Token = "0x400087C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[HideInInspector]
	[SerializeField]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x705AD4", Offset = "0x705AD4")]
	private byte[] groupGuidInternal;

	[Token(Token = "0x170001C3")]
	protected override BaseType WwiseType
	{
		[Token(Token = "0x6000FC8")]
		[Address(RVA = "0x92E90C", Offset = "0x92E90C", VA = "0x92E90C", Slot = "8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001C4")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x70A118", Offset = "0x70A118")]
	public int valueID
	{
		[Token(Token = "0x6000FCA")]
		[Address(RVA = "0x92E930", Offset = "0x92E930", VA = "0x92E930")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170001C5")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x70A150", Offset = "0x70A150")]
	public int groupID
	{
		[Token(Token = "0x6000FCB")]
		[Address(RVA = "0x92E944", Offset = "0x92E944", VA = "0x92E944")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170001C6")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x70A188", Offset = "0x70A188")]
	public byte[] valueGuid
	{
		[Token(Token = "0x6000FCC")]
		[Address(RVA = "0x92E958", Offset = "0x92E958", VA = "0x92E958")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001C7")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x70A1C0", Offset = "0x70A1C0")]
	public byte[] groupGuid
	{
		[Token(Token = "0x6000FCD")]
		[Address(RVA = "0x92EA1C", Offset = "0x92EA1C", VA = "0x92EA1C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000FC9")]
	[Address(RVA = "0x92E914", Offset = "0x92E914", VA = "0x92E914", Slot = "4")]
	public override void HandleEvent(GameObject in_gameObject)
	{
	}

	[Token(Token = "0x6000FCE")]
	[Address(RVA = "0x92EADC", Offset = "0x92EADC", VA = "0x92EADC")]
	public AkState()
	{
	}
}
[Token(Token = "0x2000169")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x700B58", Offset = "0x700B58")]
[DisallowMultipleComponent]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x700B58", Offset = "0x700B58")]
[ExecuteInEditMode]
public class AkSurfaceReflector : MonoBehaviour
{
	[Token(Token = "0x400087D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x705B30", Offset = "0x705B30")]
	public AcousticTexture AcousticTexture;

	[Token(Token = "0x400087E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x705B68", Offset = "0x705B68")]
	public bool EnableDiffraction;

	[Token(Token = "0x400087F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x705BA0", Offset = "0x705BA0")]
	public bool EnableDiffractionOnBoundaryEdges;

	[Token(Token = "0x4000880")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x705BD8", Offset = "0x705BD8")]
	public AkRoom AssociatedRoom;

	[Token(Token = "0x4000881")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private MeshFilter MeshFilter;

	[Token(Token = "0x6000FCF")]
	[Address(RVA = "0x92EF10", Offset = "0x92EF10", VA = "0x92EF10")]
	public static ulong GetAkGeometrySetID(MeshFilter meshFilter)
	{
		return default(ulong);
	}

	[Token(Token = "0x6000FD0")]
	[Address(RVA = "0x92EF34", Offset = "0x92EF34", VA = "0x92EF34")]
	public static void AddGeometrySet(AcousticTexture acousticTexture, MeshFilter meshFilter, ulong roomID, bool enableDiffraction, bool enableDiffractionOnBoundaryEdges)
	{
	}

	[Token(Token = "0x6000FD1")]
	[Address(RVA = "0x92FEF8", Offset = "0x92FEF8", VA = "0x92FEF8")]
	public static void RemoveGeometrySet(MeshFilter meshFilter)
	{
	}

	[Token(Token = "0x6000FD2")]
	[Address(RVA = "0x92FFBC", Offset = "0x92FFBC", VA = "0x92FFBC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000FD3")]
	[Address(RVA = "0x930014", Offset = "0x930014", VA = "0x930014")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000FD4")]
	[Address(RVA = "0x9300EC", Offset = "0x9300EC", VA = "0x9300EC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000FD5")]
	[Address(RVA = "0x9300F4", Offset = "0x9300F4", VA = "0x9300F4")]
	public AkSurfaceReflector()
	{
	}
}
[Token(Token = "0x200016A")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x700C00", Offset = "0x700C00")]
public class AkSwitch : AkDragDropTriggerHandler
{
	[Token(Token = "0x4000882")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Switch data;

	[Token(Token = "0x4000883")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	[SerializeField]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x705C10", Offset = "0x705C10")]
	private int valueIdInternal;

	[Token(Token = "0x4000884")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[HideInInspector]
	[SerializeField]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x705C6C", Offset = "0x705C6C")]
	private int groupIdInternal;

	[Token(Token = "0x4000885")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	[SerializeField]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x705CC8", Offset = "0x705CC8")]
	private byte[] valueGuidInternal;

	[Token(Token = "0x4000886")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[HideInInspector]
	[SerializeField]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x705D24", Offset = "0x705D24")]
	private byte[] groupGuidInternal;

	[Token(Token = "0x170001C8")]
	protected override BaseType WwiseType
	{
		[Token(Token = "0x6000FD6")]
		[Address(RVA = "0x93015C", Offset = "0x93015C", VA = "0x93015C", Slot = "8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001C9")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x70A1F8", Offset = "0x70A1F8")]
	public int valueID
	{
		[Token(Token = "0x6000FD8")]
		[Address(RVA = "0x930214", Offset = "0x930214", VA = "0x930214")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170001CA")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x70A230", Offset = "0x70A230")]
	public int groupID
	{
		[Token(Token = "0x6000FD9")]
		[Address(RVA = "0x930228", Offset = "0x930228", VA = "0x930228")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170001CB")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x70A268", Offset = "0x70A268")]
	public byte[] valueGuid
	{
		[Token(Token = "0x6000FDA")]
		[Address(RVA = "0x93023C", Offset = "0x93023C", VA = "0x93023C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001CC")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x70A2A0", Offset = "0x70A2A0")]
	public byte[] groupGuid
	{
		[Token(Token = "0x6000FDB")]
		[Address(RVA = "0x930300", Offset = "0x930300", VA = "0x930300")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000FD7")]
	[Address(RVA = "0x930164", Offset = "0x930164", VA = "0x930164", Slot = "4")]
	public override void HandleEvent(GameObject in_gameObject)
	{
	}

	[Token(Token = "0x6000FDC")]
	[Address(RVA = "0x9303C0", Offset = "0x9303C0", VA = "0x9303C0")]
	public AkSwitch()
	{
	}
}
[Token(Token = "0x200016B")]
[DisallowMultipleComponent]
public class AkTerminator : MonoBehaviour
{
	[Token(Token = "0x6000FDD")]
	[Address(RVA = "0x9307F4", Offset = "0x9307F4", VA = "0x9307F4")]
	public AkTerminator()
	{
	}
}
[Token(Token = "0x200016C")]
public abstract class AkTriggerBase : MonoBehaviour
{
	[Token(Token = "0x2000268")]
	public delegate void Trigger(GameObject in_gameObject);

	[Token(Token = "0x4000887")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Trigger triggerDelegate;

	[Token(Token = "0x6000FDE")]
	[Address(RVA = "0x932108", Offset = "0x932108", VA = "0x932108")]
	public static Dictionary<uint, string> GetAllDerivedTypes()
	{
		return null;
	}

	[Token(Token = "0x6000FDF")]
	[Address(RVA = "0x932524", Offset = "0x932524", VA = "0x932524")]
	protected AkTriggerBase()
	{
	}
}
[Token(Token = "0x200016D")]
public class AkTriggerCollisionEnter : AkTriggerBase
{
	[Token(Token = "0x4000888")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject triggerObject;

	[Token(Token = "0x6000FE0")]
	[Address(RVA = "0x932900", Offset = "0x932900", VA = "0x932900")]
	private void OnCollisionEnter(Collision in_other)
	{
	}

	[Token(Token = "0x6000FE1")]
	[Address(RVA = "0x932A0C", Offset = "0x932A0C", VA = "0x932A0C")]
	private void OnTriggerEnter(Collider in_other)
	{
	}

	[Token(Token = "0x6000FE2")]
	[Address(RVA = "0x932B18", Offset = "0x932B18", VA = "0x932B18")]
	public AkTriggerCollisionEnter()
	{
	}
}
[Token(Token = "0x200016E")]
public class AkTriggerCollisionExit : AkTriggerBase
{
	[Token(Token = "0x4000889")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject triggerObject;

	[Token(Token = "0x6000FE3")]
	[Address(RVA = "0x932B20", Offset = "0x932B20", VA = "0x932B20")]
	private void OnCollisionExit(Collision in_other)
	{
	}

	[Token(Token = "0x6000FE4")]
	[Address(RVA = "0x932C2C", Offset = "0x932C2C", VA = "0x932C2C")]
	public AkTriggerCollisionExit()
	{
	}
}
[Token(Token = "0x200016F")]
public class AkTriggerDisable : AkTriggerBase
{
	[Token(Token = "0x6000FE5")]
	[Address(RVA = "0x932C34", Offset = "0x932C34", VA = "0x932C34")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000FE6")]
	[Address(RVA = "0x932C48", Offset = "0x932C48", VA = "0x932C48")]
	public AkTriggerDisable()
	{
	}
}
[Token(Token = "0x2000170")]
public class AkTriggerEnable : AkTriggerBase
{
	[Token(Token = "0x6000FE7")]
	[Address(RVA = "0x932C50", Offset = "0x932C50", VA = "0x932C50")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000FE8")]
	[Address(RVA = "0x932C64", Offset = "0x932C64", VA = "0x932C64")]
	public AkTriggerEnable()
	{
	}
}
[Token(Token = "0x2000171")]
public class AkTriggerEnter : AkTriggerBase
{
	[Token(Token = "0x400088A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject triggerObject;

	[Token(Token = "0x6000FE9")]
	[Address(RVA = "0x932C6C", Offset = "0x932C6C", VA = "0x932C6C")]
	private void OnTriggerEnter(Collider in_other)
	{
	}

	[Token(Token = "0x6000FEA")]
	[Address(RVA = "0x932D78", Offset = "0x932D78", VA = "0x932D78")]
	public AkTriggerEnter()
	{
	}
}
[Token(Token = "0x2000172")]
public class AkTriggerExit : AkTriggerBase
{
	[Token(Token = "0x400088B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject triggerObject;

	[Token(Token = "0x6000FEB")]
	[Address(RVA = "0x932D80", Offset = "0x932D80", VA = "0x932D80")]
	private void OnTriggerExit(Collider in_other)
	{
	}

	[Token(Token = "0x6000FEC")]
	[Address(RVA = "0x932E8C", Offset = "0x932E8C", VA = "0x932E8C")]
	public AkTriggerExit()
	{
	}
}
[Token(Token = "0x2000173")]
public abstract class AkTriggerHandler : MonoBehaviour
{
	[Token(Token = "0x400088C")]
	public const int AWAKE_TRIGGER_ID = 1151176110;

	[Token(Token = "0x400088D")]
	public const int START_TRIGGER_ID = 1281810935;

	[Token(Token = "0x400088E")]
	public const int DESTROY_TRIGGER_ID = -358577003;

	[Token(Token = "0x400088F")]
	public const int MAX_NB_TRIGGERS = 32;

	[Token(Token = "0x4000890")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Dictionary<uint, string> triggerTypes;

	[Token(Token = "0x4000891")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool didDestroy;

	[Token(Token = "0x4000892")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<int> triggerList;

	[Token(Token = "0x4000893")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool useOtherObject;

	[Token(Token = "0x6000FED")]
	public abstract void HandleEvent(GameObject in_gameObject);

	[Token(Token = "0x6000FEE")]
	[Address(RVA = "0x932E94", Offset = "0x932E94", VA = "0x932E94", Slot = "5")]
	protected virtual void Awake()
	{
	}

	[Token(Token = "0x6000FEF")]
	[Address(RVA = "0x933354", Offset = "0x933354", VA = "0x933354", Slot = "6")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x6000FF0")]
	[Address(RVA = "0x9333D8", Offset = "0x9333D8", VA = "0x9333D8", Slot = "7")]
	protected virtual void OnDestroy()
	{
	}

	[Token(Token = "0x6000FF1")]
	[Address(RVA = "0x9333E8", Offset = "0x9333E8", VA = "0x9333E8")]
	public void DoDestroy()
	{
	}

	[Token(Token = "0x6000FF2")]
	[Address(RVA = "0x932F54", Offset = "0x932F54", VA = "0x932F54")]
	protected void RegisterTriggers(List<int> in_triggerList, AkTriggerBase.Trigger in_delegate)
	{
	}

	[Token(Token = "0x6000FF3")]
	[Address(RVA = "0x9334B0", Offset = "0x9334B0", VA = "0x9334B0")]
	protected void UnregisterTriggers(List<int> in_triggerList, AkTriggerBase.Trigger in_delegate)
	{
	}

	[Token(Token = "0x6000FF4")]
	[Address(RVA = "0x93380C", Offset = "0x93380C", VA = "0x93380C")]
	protected AkTriggerHandler()
	{
	}
}
[Token(Token = "0x2000174")]
[ExecuteInEditMode]
public abstract class AkDragDropTriggerHandler : AkTriggerHandler
{
	[Token(Token = "0x170001CD")]
	protected abstract BaseType WwiseType
	{
		[Token(Token = "0x6000FF6")]
		get;
	}

	[Token(Token = "0x6000FF7")]
	[Address(RVA = "0xD91DEC", Offset = "0xD91DEC", VA = "0xD91DEC", Slot = "5")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000FF8")]
	[Address(RVA = "0xD91DF4", Offset = "0xD91DF4", VA = "0xD91DF4", Slot = "6")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000FF9")]
	[Address(RVA = "0xD91DFC", Offset = "0xD91DFC", VA = "0xD91DFC", Slot = "7")]
	protected override void OnDestroy()
	{
	}

	[Token(Token = "0x6000FFA")]
	[Address(RVA = "0xD91E04", Offset = "0xD91E04", VA = "0xD91E04")]
	protected AkDragDropTriggerHandler()
	{
	}
}
[Token(Token = "0x2000175")]
public class AkTriggerMouseDown : AkTriggerBase
{
	[Token(Token = "0x6000FFB")]
	[Address(RVA = "0x9338F4", Offset = "0x9338F4", VA = "0x9338F4")]
	private void OnMouseDown()
	{
	}

	[Token(Token = "0x6000FFC")]
	[Address(RVA = "0x933908", Offset = "0x933908", VA = "0x933908")]
	public AkTriggerMouseDown()
	{
	}
}
[Token(Token = "0x2000176")]
public class AkTriggerMouseEnter : AkTriggerBase
{
	[Token(Token = "0x6000FFD")]
	[Address(RVA = "0x933910", Offset = "0x933910", VA = "0x933910")]
	private void OnMouseEnter()
	{
	}

	[Token(Token = "0x6000FFE")]
	[Address(RVA = "0x933924", Offset = "0x933924", VA = "0x933924")]
	public AkTriggerMouseEnter()
	{
	}
}
[Token(Token = "0x2000177")]
public class AkTriggerMouseExit : AkTriggerBase
{
	[Token(Token = "0x6000FFF")]
	[Address(RVA = "0x93392C", Offset = "0x93392C", VA = "0x93392C")]
	private void OnMouseExit()
	{
	}

	[Token(Token = "0x6001000")]
	[Address(RVA = "0x933940", Offset = "0x933940", VA = "0x933940")]
	public AkTriggerMouseExit()
	{
	}
}
[Token(Token = "0x2000178")]
public class AkTriggerMouseUp : AkTriggerBase
{
	[Token(Token = "0x6001001")]
	[Address(RVA = "0x933948", Offset = "0x933948", VA = "0x933948")]
	private void OnMouseUp()
	{
	}

	[Token(Token = "0x6001002")]
	[Address(RVA = "0x93395C", Offset = "0x93395C", VA = "0x93395C")]
	public AkTriggerMouseUp()
	{
	}
}
namespace AK.Wwise
{
	[Serializable]
	[Token(Token = "0x2000179")]
	public class AcousticTexture : BaseType
	{
		[Token(Token = "0x4000894")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WwiseAcousticTextureReference WwiseObjectReference;

		[Token(Token = "0x170001CE")]
		public override WwiseObjectReference ObjectReference
		{
			[Token(Token = "0x6001003")]
			[Address(RVA = "0xD7F6FC", Offset = "0xD7F6FC", VA = "0xD7F6FC", Slot = "4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001004")]
			[Address(RVA = "0xD7F704", Offset = "0xD7F704", VA = "0xD7F704", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x170001CF")]
		public override WwiseObjectType WwiseObjectType
		{
			[Token(Token = "0x6001005")]
			[Address(RVA = "0xD7F794", Offset = "0xD7F794", VA = "0xD7F794", Slot = "6")]
			get
			{
				return default(WwiseObjectType);
			}
		}

		[Token(Token = "0x6001006")]
		[Address(RVA = "0xD7F79C", Offset = "0xD7F79C", VA = "0xD7F79C")]
		public AcousticTexture()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200017A")]
	public class AuxBus : BaseType
	{
		[Token(Token = "0x4000895")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WwiseAuxBusReference WwiseObjectReference;

		[Token(Token = "0x170001D0")]
		public override WwiseObjectReference ObjectReference
		{
			[Token(Token = "0x6001007")]
			[Address(RVA = "0xD7F7AC", Offset = "0xD7F7AC", VA = "0xD7F7AC", Slot = "4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001008")]
			[Address(RVA = "0xD7F7B4", Offset = "0xD7F7B4", VA = "0xD7F7B4", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x170001D1")]
		public override WwiseObjectType WwiseObjectType
		{
			[Token(Token = "0x6001009")]
			[Address(RVA = "0xD7F844", Offset = "0xD7F844", VA = "0xD7F844", Slot = "6")]
			get
			{
				return default(WwiseObjectType);
			}
		}

		[Token(Token = "0x600100A")]
		[Address(RVA = "0xD7F84C", Offset = "0xD7F84C", VA = "0xD7F84C")]
		public AuxBus()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200017B")]
	public class Bank : BaseType
	{
		[Token(Token = "0x4000896")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WwiseBankReference WwiseObjectReference;

		[Token(Token = "0x170001D2")]
		public override WwiseObjectReference ObjectReference
		{
			[Token(Token = "0x600100B")]
			[Address(RVA = "0xD7F854", Offset = "0xD7F854", VA = "0xD7F854", Slot = "4")]
			get
			{
				return null;
			}
			[Token(Token = "0x600100C")]
			[Address(RVA = "0xD7F85C", Offset = "0xD7F85C", VA = "0xD7F85C", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x170001D3")]
		public override WwiseObjectType WwiseObjectType
		{
			[Token(Token = "0x600100D")]
			[Address(RVA = "0xD7F8EC", Offset = "0xD7F8EC", VA = "0xD7F8EC", Slot = "6")]
			get
			{
				return default(WwiseObjectType);
			}
		}

		[Token(Token = "0x600100E")]
		[Address(RVA = "0xD7F8F4", Offset = "0xD7F8F4", VA = "0xD7F8F4")]
		public void Load(bool decodeBank = false, bool saveDecodedBank = false)
		{
		}

		[Token(Token = "0x600100F")]
		[Address(RVA = "0xD7FB70", Offset = "0xD7FB70", VA = "0xD7FB70")]
		public void LoadAsync([Optional] AkCallbackManager.BankCallback callback)
		{
		}

		[Token(Token = "0x6001010")]
		[Address(RVA = "0xD7FDB8", Offset = "0xD7FDB8", VA = "0xD7FDB8")]
		public void Unload()
		{
		}

		[Token(Token = "0x6001011")]
		[Address(RVA = "0xD7FF98", Offset = "0xD7FF98", VA = "0xD7FF98")]
		public Bank()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200017C")]
	public abstract class BaseGroupType : BaseType
	{
		[Token(Token = "0x4000897")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		[SerializeField]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x705D80", Offset = "0x705D80")]
		private int groupIdInternal;

		[Token(Token = "0x4000898")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		[SerializeField]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x705DDC", Offset = "0x705DDC")]
		private byte[] groupGuidInternal;

		[Token(Token = "0x170001D4")]
		public WwiseObjectReference GroupWwiseObjectReference
		{
			[Token(Token = "0x6001012")]
			[Address(RVA = "0xD7FFA0", Offset = "0xD7FFA0", VA = "0xD7FFA0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001D5")]
		public abstract WwiseObjectType WwiseObjectGroupType
		{
			[Token(Token = "0x6001013")]
			get;
		}

		[Token(Token = "0x170001D6")]
		public uint GroupId
		{
			[Token(Token = "0x6001014")]
			[Address(RVA = "0xD80084", Offset = "0xD80084", VA = "0xD80084")]
			get
			{
				return default(uint);
			}
		}

		[Token(Token = "0x170001D7")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x70A2D8", Offset = "0x70A2D8")]
		public int groupID
		{
			[Token(Token = "0x6001016")]
			[Address(RVA = "0xD8023C", Offset = "0xD8023C", VA = "0xD8023C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001D8")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x70A310", Offset = "0x70A310")]
		public byte[] groupGuid
		{
			[Token(Token = "0x6001017")]
			[Address(RVA = "0xD80240", Offset = "0xD80240", VA = "0xD80240")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001015")]
		[Address(RVA = "0xD80120", Offset = "0xD80120", VA = "0xD80120", Slot = "8")]
		public override bool IsValid()
		{
			return default(bool);
		}

		[Token(Token = "0x6001018")]
		[Address(RVA = "0xD80300", Offset = "0xD80300", VA = "0xD80300")]
		protected BaseGroupType()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200017D")]
	public abstract class BaseType
	{
		[Token(Token = "0x4000899")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[HideInInspector]
		[SerializeField]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x705E38", Offset = "0x705E38")]
		private int idInternal;

		[Token(Token = "0x400089A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		[SerializeField]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x705E94", Offset = "0x705E94")]
		private byte[] valueGuidInternal;

		[Token(Token = "0x170001D9")]
		public abstract WwiseObjectReference ObjectReference
		{
			[Token(Token = "0x6001019")]
			get;
			[Token(Token = "0x600101A")]
			set;
		}

		[Token(Token = "0x170001DA")]
		public abstract WwiseObjectType WwiseObjectType
		{
			[Token(Token = "0x600101B")]
			get;
		}

		[Token(Token = "0x170001DB")]
		public virtual string Name
		{
			[Token(Token = "0x600101C")]
			[Address(RVA = "0xD80308", Offset = "0xD80308", VA = "0xD80308", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001DC")]
		public uint Id
		{
			[Token(Token = "0x600101D")]
			[Address(RVA = "0xD8039C", Offset = "0xD8039C", VA = "0xD8039C")]
			get
			{
				return default(uint);
			}
		}

		[Token(Token = "0x170001DD")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x70A348", Offset = "0x70A348")]
		public int ID
		{
			[Token(Token = "0x6001022")]
			[Address(RVA = "0xD8057C", Offset = "0xD8057C", VA = "0xD8057C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001DE")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x70A380", Offset = "0x70A380")]
		public byte[] valueGuid
		{
			[Token(Token = "0x6001023")]
			[Address(RVA = "0xD80580", Offset = "0xD80580", VA = "0xD80580")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600101E")]
		[Address(RVA = "0xD801B8", Offset = "0xD801B8", VA = "0xD801B8", Slot = "8")]
		public virtual bool IsValid()
		{
			return default(bool);
		}

		[Token(Token = "0x600101F")]
		[Address(RVA = "0xD803EC", Offset = "0xD803EC", VA = "0xD803EC")]
		public bool Validate()
		{
			return default(bool);
		}

		[Token(Token = "0x6001020")]
		[Address(RVA = "0xD804C8", Offset = "0xD804C8", VA = "0xD804C8")]
		protected void Verify(AKRESULT result)
		{
		}

		[Token(Token = "0x6001021")]
		[Address(RVA = "0xD804CC", Offset = "0xD804CC", VA = "0xD804CC", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6001024")]
		[Address(RVA = "0xD7F7A4", Offset = "0xD7F7A4", VA = "0xD7F7A4")]
		protected BaseType()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200017E")]
	public class CallbackFlags
	{
		[Token(Token = "0x400089B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public uint value;

		[Token(Token = "0x6001025")]
		[Address(RVA = "0xD80640", Offset = "0xD80640", VA = "0xD80640")]
		public CallbackFlags()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200017F")]
	public class Event : BaseType
	{
		[Token(Token = "0x400089C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WwiseEventReference WwiseObjectReference;

		[Token(Token = "0x170001DF")]
		public override WwiseObjectReference ObjectReference
		{
			[Token(Token = "0x6001026")]
			[Address(RVA = "0xD80648", Offset = "0xD80648", VA = "0xD80648", Slot = "4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001027")]
			[Address(RVA = "0xD80650", Offset = "0xD80650", VA = "0xD80650", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x170001E0")]
		public override WwiseObjectType WwiseObjectType
		{
			[Token(Token = "0x6001028")]
			[Address(RVA = "0xD806E0", Offset = "0xD806E0", VA = "0xD806E0", Slot = "6")]
			get
			{
				return default(WwiseObjectType);
			}
		}

		[Token(Token = "0x6001029")]
		[Address(RVA = "0xD806E8", Offset = "0xD806E8", VA = "0xD806E8")]
		private void VerifyPlayingID(uint playingId)
		{
		}

		[Token(Token = "0x600102A")]
		[Address(RVA = "0xD806EC", Offset = "0xD806EC", VA = "0xD806EC")]
		public uint Post(GameObject gameObject)
		{
			return default(uint);
		}

		[Token(Token = "0x600102B")]
		[Address(RVA = "0xD8079C", Offset = "0xD8079C", VA = "0xD8079C")]
		public uint Post(GameObject gameObject, CallbackFlags flags, AkCallbackManager.EventCallback callback, [Optional] object cookie)
		{
			return default(uint);
		}

		[Token(Token = "0x600102C")]
		[Address(RVA = "0xD80878", Offset = "0xD80878", VA = "0xD80878")]
		public uint Post(GameObject gameObject, uint flags, AkCallbackManager.EventCallback callback, [Optional] object cookie)
		{
			return default(uint);
		}

		[Token(Token = "0x600102D")]
		[Address(RVA = "0xD8094C", Offset = "0xD8094C", VA = "0xD8094C")]
		public void Stop(GameObject gameObject, int transitionDuration = 0, AkCurveInterpolation curveInterpolation = AkCurveInterpolation.AkCurveInterpolation_Linear)
		{
		}

		[Token(Token = "0x600102E")]
		[Address(RVA = "0xD8095C", Offset = "0xD8095C", VA = "0xD8095C")]
		public void ExecuteAction(GameObject gameObject, AkActionOnEventType actionOnEventType, int transitionDuration, AkCurveInterpolation curveInterpolation)
		{
		}

		[Token(Token = "0x600102F")]
		[Address(RVA = "0xD80A2C", Offset = "0xD80A2C", VA = "0xD80A2C")]
		public void PostMIDI(GameObject gameObject, AkMIDIPostArray array)
		{
		}

		[Token(Token = "0x6001030")]
		[Address(RVA = "0xD80A9C", Offset = "0xD80A9C", VA = "0xD80A9C")]
		public void PostMIDI(GameObject gameObject, AkMIDIPostArray array, int count)
		{
		}

		[Token(Token = "0x6001031")]
		[Address(RVA = "0xD80B14", Offset = "0xD80B14", VA = "0xD80B14")]
		public void StopMIDI(GameObject gameObject)
		{
		}

		[Token(Token = "0x6001032")]
		[Address(RVA = "0xD80BC0", Offset = "0xD80BC0", VA = "0xD80BC0")]
		public void StopMIDI()
		{
		}

		[Token(Token = "0x6001033")]
		[Address(RVA = "0xD80C58", Offset = "0xD80C58", VA = "0xD80C58")]
		public Event()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000180")]
	public class RTPC : BaseType
	{
		[Token(Token = "0x400089D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WwiseRtpcReference WwiseObjectReference;

		[Token(Token = "0x170001E1")]
		public override WwiseObjectReference ObjectReference
		{
			[Token(Token = "0x6001034")]
			[Address(RVA = "0xD80C60", Offset = "0xD80C60", VA = "0xD80C60", Slot = "4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001035")]
			[Address(RVA = "0xD80C68", Offset = "0xD80C68", VA = "0xD80C68", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x170001E2")]
		public override WwiseObjectType WwiseObjectType
		{
			[Token(Token = "0x6001036")]
			[Address(RVA = "0xD80CF8", Offset = "0xD80CF8", VA = "0xD80CF8", Slot = "6")]
			get
			{
				return default(WwiseObjectType);
			}
		}

		[Token(Token = "0x6001037")]
		[Address(RVA = "0xD80D00", Offset = "0xD80D00", VA = "0xD80D00")]
		public void SetValue(GameObject gameObject, float value)
		{
		}

		[Token(Token = "0x6001038")]
		[Address(RVA = "0xD80DC0", Offset = "0xD80DC0", VA = "0xD80DC0")]
		public float GetValue(GameObject gameObject)
		{
			return default(float);
		}

		[Token(Token = "0x6001039")]
		[Address(RVA = "0xD80EB4", Offset = "0xD80EB4", VA = "0xD80EB4")]
		public void SetGlobalValue(float value)
		{
		}

		[Token(Token = "0x600103A")]
		[Address(RVA = "0xD80F60", Offset = "0xD80F60", VA = "0xD80F60")]
		public float GetGlobalValue()
		{
			return default(float);
		}

		[Token(Token = "0x600103B")]
		[Address(RVA = "0xD80F68", Offset = "0xD80F68", VA = "0xD80F68")]
		public RTPC()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000181")]
	public class State : BaseGroupType
	{
		[Token(Token = "0x400089E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public WwiseStateReference WwiseObjectReference;

		[Token(Token = "0x170001E3")]
		public override WwiseObjectReference ObjectReference
		{
			[Token(Token = "0x600103C")]
			[Address(RVA = "0xD80F70", Offset = "0xD80F70", VA = "0xD80F70", Slot = "4")]
			get
			{
				return null;
			}
			[Token(Token = "0x600103D")]
			[Address(RVA = "0xD80F78", Offset = "0xD80F78", VA = "0xD80F78", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x170001E4")]
		public override WwiseObjectType WwiseObjectType
		{
			[Token(Token = "0x600103E")]
			[Address(RVA = "0xD81008", Offset = "0xD81008", VA = "0xD81008", Slot = "6")]
			get
			{
				return default(WwiseObjectType);
			}
		}

		[Token(Token = "0x170001E5")]
		public override WwiseObjectType WwiseObjectGroupType
		{
			[Token(Token = "0x600103F")]
			[Address(RVA = "0xD81010", Offset = "0xD81010", VA = "0xD81010", Slot = "9")]
			get
			{
				return default(WwiseObjectType);
			}
		}

		[Token(Token = "0x6001040")]
		[Address(RVA = "0xD81018", Offset = "0xD81018", VA = "0xD81018")]
		public void SetValue()
		{
		}

		[Token(Token = "0x6001041")]
		[Address(RVA = "0xD810C0", Offset = "0xD810C0", VA = "0xD810C0")]
		public State()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000182")]
	public class Switch : BaseGroupType
	{
		[Token(Token = "0x400089F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public WwiseSwitchReference WwiseObjectReference;

		[Token(Token = "0x170001E6")]
		public override WwiseObjectReference ObjectReference
		{
			[Token(Token = "0x6001042")]
			[Address(RVA = "0xD810C8", Offset = "0xD810C8", VA = "0xD810C8", Slot = "4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001043")]
			[Address(RVA = "0xD810D0", Offset = "0xD810D0", VA = "0xD810D0", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x170001E7")]
		public override WwiseObjectType WwiseObjectType
		{
			[Token(Token = "0x6001044")]
			[Address(RVA = "0xD81160", Offset = "0xD81160", VA = "0xD81160", Slot = "6")]
			get
			{
				return default(WwiseObjectType);
			}
		}

		[Token(Token = "0x170001E8")]
		public override WwiseObjectType WwiseObjectGroupType
		{
			[Token(Token = "0x6001045")]
			[Address(RVA = "0xD81168", Offset = "0xD81168", VA = "0xD81168", Slot = "9")]
			get
			{
				return default(WwiseObjectType);
			}
		}

		[Token(Token = "0x6001046")]
		[Address(RVA = "0xD81170", Offset = "0xD81170", VA = "0xD81170")]
		public void SetValue(GameObject gameObject)
		{
		}

		[Token(Token = "0x6001047")]
		[Address(RVA = "0xD8122C", Offset = "0xD8122C", VA = "0xD8122C")]
		public Switch()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000183")]
	public class Trigger : BaseType
	{
		[Token(Token = "0x40008A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WwiseTriggerReference WwiseObjectReference;

		[Token(Token = "0x170001E9")]
		public override WwiseObjectReference ObjectReference
		{
			[Token(Token = "0x6001048")]
			[Address(RVA = "0xD81234", Offset = "0xD81234", VA = "0xD81234", Slot = "4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001049")]
			[Address(RVA = "0xD8123C", Offset = "0xD8123C", VA = "0xD8123C", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x170001EA")]
		public override WwiseObjectType WwiseObjectType
		{
			[Token(Token = "0x600104A")]
			[Address(RVA = "0xD812CC", Offset = "0xD812CC", VA = "0xD812CC", Slot = "6")]
			get
			{
				return default(WwiseObjectType);
			}
		}

		[Token(Token = "0x600104B")]
		[Address(RVA = "0xD812D4", Offset = "0xD812D4", VA = "0xD812D4")]
		public void Post(GameObject gameObject)
		{
		}

		[Token(Token = "0x600104C")]
		[Address(RVA = "0xD81380", Offset = "0xD81380", VA = "0xD81380")]
		public Trigger()
		{
		}
	}
}
namespace Oculus.Spatializer.Propagation
{
	[Token(Token = "0x2000184")]
	public enum FaceType : uint
	{
		[Token(Token = "0x40008A2")]
		TRIANGLES,
		[Token(Token = "0x40008A3")]
		QUADS
	}
	[Token(Token = "0x2000185")]
	public enum MaterialProperty : uint
	{
		[Token(Token = "0x40008A5")]
		ABSORPTION,
		[Token(Token = "0x40008A6")]
		TRANSMISSION,
		[Token(Token = "0x40008A7")]
		SCATTERING
	}
	[Token(Token = "0x2000186")]
	public struct MeshGroup
	{
		[Token(Token = "0x40008A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public UIntPtr indexOffset;

		[Token(Token = "0x40008A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public UIntPtr faceCount;

		[Token(Token = "0x40008AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public FaceType faceType;

		[Token(Token = "0x40008AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public IntPtr material;
	}
}
namespace Hangman
{
	[Serializable]
	[Token(Token = "0x2000187")]
	public class AudioFaderBehaviour : PlayableBehaviour
	{
		[Token(Token = "0x40008AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x705EF0", Offset = "0x705EF0")]
		public float MaxVolume;

		[Token(Token = "0x600104D")]
		[Address(RVA = "0x96B9B4", Offset = "0x96B9B4", VA = "0x96B9B4")]
		public AudioFaderBehaviour()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000188")]
	public class AudioFaderClip : PlayableAsset, ITimelineClipAsset
	{
		[Token(Token = "0x40008AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AudioFaderBehaviour template;

		[Token(Token = "0x170001EB")]
		public ClipCaps clipCaps
		{
			[Token(Token = "0x600104E")]
			[Address(RVA = "0x96B9C4", Offset = "0x96B9C4", VA = "0x96B9C4", Slot = "9")]
			get
			{
				return default(ClipCaps);
			}
		}

		[Token(Token = "0x600104F")]
		[Address(RVA = "0x96B9CC", Offset = "0x96B9CC", VA = "0x96B9CC", Slot = "6")]
		public override Playable CreatePlayable(PlayableGraph graph, GameObject owner)
		{
			return default(Playable);
		}

		[Token(Token = "0x6001050")]
		[Address(RVA = "0x96BA6C", Offset = "0x96BA6C", VA = "0x96BA6C")]
		public AudioFaderClip()
		{
		}
	}
	[Token(Token = "0x2000189")]
	public class AudioFaderMixerBehaviour : PlayableBehaviour
	{
		[Token(Token = "0x40008AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private AudioSource _trackBinding;

		[Token(Token = "0x40008AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool _firstFrameHappened;

		[Token(Token = "0x6001051")]
		[Address(RVA = "0x96BADC", Offset = "0x96BADC", VA = "0x96BADC", Slot = "20")]
		public override void ProcessFrame(Playable playable, FrameData info, object playerData)
		{
		}

		[Token(Token = "0x6001052")]
		[Address(RVA = "0x96BCB0", Offset = "0x96BCB0", VA = "0x96BCB0", Slot = "16")]
		public override void OnPlayableDestroy(Playable playable)
		{
		}

		[Token(Token = "0x6001053")]
		[Address(RVA = "0x96BD24", Offset = "0x96BD24", VA = "0x96BD24")]
		public AudioFaderMixerBehaviour()
		{
		}
	}
	[Token(Token = "0x200018A")]
	[AttributeAttribute(Name = "TrackColorAttribute", RVA = "0x700C58", Offset = "0x700C58")]
	[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0x700C58", Offset = "0x700C58")]
	[AttributeAttribute(Name = "TrackBindingTypeAttribute", RVA = "0x700C58", Offset = "0x700C58")]
	public class AudioFaderTrack : TrackAsset
	{
		[Token(Token = "0x6001054")]
		[Address(RVA = "0x96BD2C", Offset = "0x96BD2C", VA = "0x96BD2C", Slot = "24")]
		public override Playable CreateTrackMixer(PlayableGraph graph, GameObject go, int inputCount)
		{
			return default(Playable);
		}

		[Token(Token = "0x6001055")]
		[Address(RVA = "0x96BDC4", Offset = "0x96BDC4", VA = "0x96BDC4", Slot = "29")]
		public override void GatherProperties(PlayableDirector director, IPropertyCollector driver)
		{
		}

		[Token(Token = "0x6001056")]
		[Address(RVA = "0x96BDCC", Offset = "0x96BDCC", VA = "0x96BDCC")]
		public AudioFaderTrack()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200018B")]
	public class PauseBehaviour : PlayableBehaviour
	{
		[Token(Token = "0x40008B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private PlayableDirector _director;

		[Token(Token = "0x40008B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool _hasPaused;

		[Token(Token = "0x6001057")]
		[Address(RVA = "0x96E230", Offset = "0x96E230", VA = "0x96E230", Slot = "15")]
		public override void OnPlayableCreate(Playable playable)
		{
		}

		[Token(Token = "0x6001058")]
		[Address(RVA = "0x96E2F4", Offset = "0x96E2F4", VA = "0x96E2F4", Slot = "20")]
		public override void ProcessFrame(Playable playable, FrameData info, object playerData)
		{
		}

		[Token(Token = "0x6001059")]
		[Address(RVA = "0x96E334", Offset = "0x96E334", VA = "0x96E334", Slot = "18")]
		public override void OnBehaviourPause(Playable playable, FrameData info)
		{
		}

		[Token(Token = "0x600105A")]
		[Address(RVA = "0x96E338", Offset = "0x96E338", VA = "0x96E338")]
		public PauseBehaviour()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200018C")]
	public class PauseClip : PlayableAsset, ITimelineClipAsset
	{
		[Token(Token = "0x40008B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PauseBehaviour template;

		[Token(Token = "0x170001EC")]
		public ClipCaps clipCaps
		{
			[Token(Token = "0x600105B")]
			[Address(RVA = "0x96E340", Offset = "0x96E340", VA = "0x96E340", Slot = "9")]
			get
			{
				return default(ClipCaps);
			}
		}

		[Token(Token = "0x600105C")]
		[Address(RVA = "0x96E348", Offset = "0x96E348", VA = "0x96E348", Slot = "6")]
		public override Playable CreatePlayable(PlayableGraph graph, GameObject owner)
		{
			return default(Playable);
		}

		[Token(Token = "0x600105D")]
		[Address(RVA = "0x96E3E8", Offset = "0x96E3E8", VA = "0x96E3E8")]
		public PauseClip()
		{
		}
	}
	[Token(Token = "0x200018D")]
	[AttributeAttribute(Name = "TrackColorAttribute", RVA = "0x700D00", Offset = "0x700D00")]
	[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0x700D00", Offset = "0x700D00")]
	public class PauseTrack : TrackAsset
	{
		[Token(Token = "0x600105E")]
		[Address(RVA = "0x96E450", Offset = "0x96E450", VA = "0x96E450")]
		public PauseTrack()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200018E")]
	public class PlaybackControlBehaviour : PlayableBehaviour
	{
		[Token(Token = "0x2000269")]
		public enum DirectorState
		{
			[Token(Token = "0x4000BA2")]
			Play,
			[Token(Token = "0x4000BA3")]
			Pause,
			[Token(Token = "0x4000BA4")]
			Stop
		}

		[Token(Token = "0x200026A")]
		public enum TriggerCondition
		{
			[Token(Token = "0x4000BA6")]
			OnBeginningOfClip
		}

		[Token(Token = "0x40008B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public PlayableDirector Director;

		[Token(Token = "0x40008B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public DirectorState SetDirectorTo;

		[Token(Token = "0x40008B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public TriggerCondition Condition;

		[Token(Token = "0x40008B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool StopThisTimeline;

		[Token(Token = "0x40008B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private PlayableDirector _director;

		[Token(Token = "0x40008B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool _hasFired;

		[Token(Token = "0x600105F")]
		[Address(RVA = "0x96E4B8", Offset = "0x96E4B8", VA = "0x96E4B8", Slot = "15")]
		public override void OnPlayableCreate(Playable playable)
		{
		}

		[Token(Token = "0x6001060")]
		[Address(RVA = "0x96E580", Offset = "0x96E580", VA = "0x96E580", Slot = "16")]
		public override void OnPlayableDestroy(Playable playable)
		{
		}

		[Token(Token = "0x6001061")]
		[Address(RVA = "0x96E584", Offset = "0x96E584", VA = "0x96E584", Slot = "17")]
		public override void OnBehaviourPlay(Playable playable, FrameData info)
		{
		}

		[Token(Token = "0x6001062")]
		[Address(RVA = "0x96E588", Offset = "0x96E588", VA = "0x96E588", Slot = "20")]
		public override void ProcessFrame(Playable playable, FrameData info, object playerData)
		{
		}

		[Token(Token = "0x6001063")]
		[Address(RVA = "0x96E5A8", Offset = "0x96E5A8", VA = "0x96E5A8")]
		private void Trigger()
		{
		}

		[Token(Token = "0x6001064")]
		[Address(RVA = "0x96E6D8", Offset = "0x96E6D8", VA = "0x96E6D8")]
		public PlaybackControlBehaviour()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200018F")]
	public class PlaybackControlClip : PlayableAsset, ITimelineClipAsset
	{
		[Token(Token = "0x40008B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PlaybackControlBehaviour template;

		[Token(Token = "0x40008BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ExposedReference<PlayableDirector> Director;

		[Token(Token = "0x170001ED")]
		public ClipCaps clipCaps
		{
			[Token(Token = "0x6001065")]
			[Address(RVA = "0x96E6E0", Offset = "0x96E6E0", VA = "0x96E6E0", Slot = "9")]
			get
			{
				return default(ClipCaps);
			}
		}

		[Token(Token = "0x6001066")]
		[Address(RVA = "0x96E6E8", Offset = "0x96E6E8", VA = "0x96E6E8", Slot = "6")]
		public override Playable CreatePlayable(PlayableGraph graph, GameObject owner)
		{
			return default(Playable);
		}

		[Token(Token = "0x6001067")]
		[Address(RVA = "0x96E7F4", Offset = "0x96E7F4", VA = "0x96E7F4")]
		public PlaybackControlClip()
		{
		}
	}
	[Token(Token = "0x2000190")]
	[AttributeAttribute(Name = "TrackColorAttribute", RVA = "0x700D80", Offset = "0x700D80")]
	[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0x700D80", Offset = "0x700D80")]
	public class PlaybackControlTrack : TrackAsset
	{
		[Token(Token = "0x6001068")]
		[Address(RVA = "0x96E85C", Offset = "0x96E85C", VA = "0x96E85C")]
		public PlaybackControlTrack()
		{
		}
	}
}
namespace Hangman.Multiplayer
{
	[Token(Token = "0x2000191")]
	public class BurnBooksSceneInit : MonoBehaviour
	{
		[Token(Token = "0x40008BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private NetworkManager _communicationManager;

		[Token(Token = "0x6001069")]
		[Address(RVA = "0x96BE44", Offset = "0x96BE44", VA = "0x96BE44")]
		private void Start()
		{
		}

		[Token(Token = "0x600106A")]
		[Address(RVA = "0x96BF28", Offset = "0x96BF28", VA = "0x96BF28")]
		public BurnBooksSceneInit()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000192")]
	public class ArrivedAtMeriekRoomMessage : BaseNetworkMessage
	{
		[Token(Token = "0x600106B")]
		[Address(RVA = "0x96BE34", Offset = "0x96BE34", VA = "0x96BE34")]
		public ArrivedAtMeriekRoomMessage()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000193")]
	public class BeginDescendMessage : BaseNetworkMessage
	{
		[Token(Token = "0x600106C")]
		[Address(RVA = "0x96BE3C", Offset = "0x96BE3C", VA = "0x96BE3C")]
		public BeginDescendMessage()
		{
		}
	}
	[Token(Token = "0x2000194")]
	public class DescendSynchronizer : MonoBehaviour
	{
		[Token(Token = "0x40008BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private PlayableDirector _descendTimeline;

		[Token(Token = "0x40008BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool _beginDescend;

		[Token(Token = "0x600106D")]
		[Address(RVA = "0x96BF30", Offset = "0x96BF30", VA = "0x96BF30")]
		private void Start()
		{
		}

		[Token(Token = "0x600106E")]
		[Address(RVA = "0x96C06C", Offset = "0x96C06C", VA = "0x96C06C")]
		public void SendMatchIgnitedEvent()
		{
		}

		[Token(Token = "0x600106F")]
		[Address(RVA = "0x96C1F4", Offset = "0x96C1F4", VA = "0x96C1F4")]
		private void Update()
		{
		}

		[Token(Token = "0x6001070")]
		[Address(RVA = "0x96C208", Offset = "0x96C208", VA = "0x96C208")]
		[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x708BE0", Offset = "0x708BE0")]
		public void BeginDescendTimeline()
		{
		}

		[Token(Token = "0x6001071")]
		[Address(RVA = "0x96C2FC", Offset = "0x96C2FC", VA = "0x96C2FC")]
		public DescendSynchronizer()
		{
		}

		[Token(Token = "0x6001072")]
		[Address(RVA = "0x96C304", Offset = "0x96C304", VA = "0x96C304")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x708BF0", Offset = "0x708BF0")]
		private void <Start>b__2_0(INetworkMessage NetworkManager)
		{
		}
	}
	[Token(Token = "0x2000195")]
	public class EventSynchronizerServer : MonoBehaviour, IResetable
	{
		[Serializable]
		[Token(Token = "0x200026B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7013CC", Offset = "0x7013CC")]
		private sealed class <>c
		{
			[Token(Token = "0x4000BA7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000BA8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Action<INetworkMessage> <>9__7_3;

			[Token(Token = "0x600146E")]
			[Address(RVA = "0x96CE00", Offset = "0x96CE00", VA = "0x96CE00")]
			public <>c()
			{
			}

			[Token(Token = "0x600146F")]
			[Address(RVA = "0x96CE08", Offset = "0x96CE08", VA = "0x96CE08")]
			internal void <Start>b__7_3(INetworkMessage message)
			{
			}
		}

		[Token(Token = "0x40008BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x705F18", Offset = "0x705F18")]
		private int <PlayerCount>k__BackingField;

		[Token(Token = "0x40008BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private TMP_Dropdown _playerCountDropDown;

		[Token(Token = "0x40008C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<string> _matchIgnitedMessageList;

		[Token(Token = "0x40008C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<string> _peopleArrivedAtMariekeList;

		[Token(Token = "0x170001EE")]
		public int PlayerCount
		{
			[Token(Token = "0x6001073")]
			[Address(RVA = "0x96C310", Offset = "0x96C310", VA = "0x96C310")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x708C00", Offset = "0x708C00")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001074")]
			[Address(RVA = "0x96C318", Offset = "0x96C318", VA = "0x96C318")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x708C10", Offset = "0x708C10")]
			set
			{
			}
		}

		[Token(Token = "0x6001075")]
		[Address(RVA = "0x96C320", Offset = "0x96C320", VA = "0x96C320")]
		private void Start()
		{
		}

		[Token(Token = "0x6001076")]
		[Address(RVA = "0x96C660", Offset = "0x96C660", VA = "0x96C660")]
		public void SendBeginDescend()
		{
		}

		[Token(Token = "0x6001077")]
		[Address(RVA = "0x96C734", Offset = "0x96C734", VA = "0x96C734")]
		public void SendBeginMariekeTimeline()
		{
		}

		[Token(Token = "0x6001078")]
		[Address(RVA = "0x96C810", Offset = "0x96C810", VA = "0x96C810", Slot = "4")]
		public void OnServerReset()
		{
		}

		[Token(Token = "0x6001079")]
		[Address(RVA = "0x96C878", Offset = "0x96C878", VA = "0x96C878")]
		public EventSynchronizerServer()
		{
		}

		[Token(Token = "0x600107A")]
		[Address(RVA = "0x96C910", Offset = "0x96C910", VA = "0x96C910")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x708C20", Offset = "0x708C20")]
		private void <Start>b__7_0(int x)
		{
		}

		[Token(Token = "0x600107B")]
		[Address(RVA = "0x96C91C", Offset = "0x96C91C", VA = "0x96C91C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x708C30", Offset = "0x708C30")]
		private void <Start>b__7_1(INetworkMessage networkMessage)
		{
		}

		[Token(Token = "0x600107C")]
		[Address(RVA = "0x96CB5C", Offset = "0x96CB5C", VA = "0x96CB5C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x708C40", Offset = "0x708C40")]
		private void <Start>b__7_2(INetworkMessage networkMessage)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000196")]
	public class MatchIgnitedMessage : BaseNetworkMessage
	{
		[Token(Token = "0x600107D")]
		[Address(RVA = "0x96C1EC", Offset = "0x96C1EC", VA = "0x96C1EC")]
		public MatchIgnitedMessage()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000197")]
	public class StartMariekeTimelineMessage : BaseNetworkMessage
	{
		[Token(Token = "0x600107E")]
		[Address(RVA = "0x96C808", Offset = "0x96C808", VA = "0x96C808")]
		public StartMariekeTimelineMessage()
		{
		}
	}
	[Token(Token = "0x2000198")]
	public class HubTransitionManager : MonoBehaviour
	{
		[Token(Token = "0x40008C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private NetworkManager _networkManager;

		[Token(Token = "0x40008C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private DioramaManager _dioramaManager;

		[Token(Token = "0x40008C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject _musicalRoomDoor;

		[Token(Token = "0x40008C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject _door;

		[Token(Token = "0x40008C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private GameObject _window;

		[Token(Token = "0x40008C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private GameObject _firePlace;

		[Token(Token = "0x40008C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private GameObject _closet;

		[Token(Token = "0x600107F")]
		[Address(RVA = "0x96CF44", Offset = "0x96CF44", VA = "0x96CF44")]
		private void Start()
		{
		}

		[Token(Token = "0x6001080")]
		[Address(RVA = "0x96D070", Offset = "0x96D070", VA = "0x96D070")]
		private void OnToggleHub(int roomVisitedCount)
		{
		}

		[Token(Token = "0x6001081")]
		[Address(RVA = "0x96D1DC", Offset = "0x96D1DC", VA = "0x96D1DC")]
		public HubTransitionManager()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000199")]
	public class LanguageMessage : BaseNetworkMessage
	{
		[Token(Token = "0x40008C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string Language;

		[Token(Token = "0x6001082")]
		[Address(RVA = "0x96D1E4", Offset = "0x96D1E4", VA = "0x96D1E4")]
		public LanguageMessage(string lang)
		{
		}
	}
	[Token(Token = "0x200019A")]
	public class ScaleRoomSpace : MonoBehaviour
	{
		[Token(Token = "0x40008CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private List<Transform> _roomList;

		[Token(Token = "0x40008CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private List<Vector3> _localPositionList;

		[Token(Token = "0x40008CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private List<Quaternion> _localRotationList;

		[Token(Token = "0x40008CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "OnValueChangedAttribute", RVA = "0x705FC8", Offset = "0x705FC8")]
		public float Scale;

		[Token(Token = "0x6001083")]
		[Address(RVA = "0x96D210", Offset = "0x96D210", VA = "0x96D210")]
		[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x708C50", Offset = "0x708C50")]
		private void SavePositions()
		{
		}

		[Token(Token = "0x6001084")]
		[Address(RVA = "0x96D3A4", Offset = "0x96D3A4", VA = "0x96D3A4")]
		private void ScaleRoom()
		{
		}

		[Token(Token = "0x6001085")]
		[Address(RVA = "0x96D538", Offset = "0x96D538", VA = "0x96D538")]
		public ScaleRoomSpace()
		{
		}
	}
	[Token(Token = "0x200019B")]
	public class SceneRotationManager : MonoBehaviour
	{
		[Token(Token = "0x40008CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x706004", Offset = "0x706004")]
		private float <Rotation>k__BackingField;

		[Token(Token = "0x40008CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x706014", Offset = "0x706014")]
		private Action<float> <OnRotationChange>k__BackingField;

		[Token(Token = "0x40008D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x706024", Offset = "0x706024")]
		private static SceneRotationManager <Instance>k__BackingField;

		[Token(Token = "0x170001EF")]
		public float Rotation
		{
			[Token(Token = "0x6001086")]
			[Address(RVA = "0x96D548", Offset = "0x96D548", VA = "0x96D548")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x708C60", Offset = "0x708C60")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001087")]
			[Address(RVA = "0x96D550", Offset = "0x96D550", VA = "0x96D550")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x708C70", Offset = "0x708C70")]
			private set
			{
			}
		}

		[Token(Token = "0x170001F0")]
		public Action<float> OnRotationChange
		{
			[Token(Token = "0x6001088")]
			[Address(RVA = "0x96D558", Offset = "0x96D558", VA = "0x96D558")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x708C80", Offset = "0x708C80")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001089")]
			[Address(RVA = "0x96D560", Offset = "0x96D560", VA = "0x96D560")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x708C90", Offset = "0x708C90")]
			set
			{
			}
		}

		[Token(Token = "0x170001F1")]
		public static SceneRotationManager Instance
		{
			[Token(Token = "0x600108A")]
			[Address(RVA = "0x96D568", Offset = "0x96D568", VA = "0x96D568")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x708CA0", Offset = "0x708CA0")]
			get
			{
				return null;
			}
			[Token(Token = "0x600108B")]
			[Address(RVA = "0x96D5B8", Offset = "0x96D5B8", VA = "0x96D5B8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x708CB0", Offset = "0x708CB0")]
			private set
			{
			}
		}

		[Token(Token = "0x600108C")]
		[Address(RVA = "0x96D60C", Offset = "0x96D60C", VA = "0x96D60C")]
		private void Awake()
		{
		}

		[Token(Token = "0x600108D")]
		[Address(RVA = "0x96D660", Offset = "0x96D660", VA = "0x96D660")]
		private void Start()
		{
		}

		[Token(Token = "0x600108E")]
		[Address(RVA = "0x96D79C", Offset = "0x96D79C", VA = "0x96D79C")]
		private void SetRotation(INetworkMessage networkMessage)
		{
		}

		[Token(Token = "0x600108F")]
		[Address(RVA = "0x96D894", Offset = "0x96D894", VA = "0x96D894")]
		public SceneRotationManager()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200019C")]
	public class SceneRotationMessage : BaseNetworkMessage
	{
		[Token(Token = "0x40008D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float rotation;

		[Token(Token = "0x40008D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string targetIP;

		[Token(Token = "0x6001090")]
		[Address(RVA = "0x96D89C", Offset = "0x96D89C", VA = "0x96D89C")]
		public SceneRotationMessage(float rotation, string targetIP)
		{
		}
	}
	[Token(Token = "0x200019D")]
	public class SceneRotator : MonoBehaviour
	{
		[Token(Token = "0x6001091")]
		[Address(RVA = "0x96D8D8", Offset = "0x96D8D8", VA = "0x96D8D8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001092")]
		[Address(RVA = "0x96DA4C", Offset = "0x96DA4C", VA = "0x96DA4C")]
		public SceneRotator()
		{
		}

		[Token(Token = "0x6001093")]
		[Address(RVA = "0x96DA54", Offset = "0x96DA54", VA = "0x96DA54")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x708CC0", Offset = "0x708CC0")]
		private void <Awake>b__0_0(float rotation)
		{
		}
	}
	[Token(Token = "0x200019E")]
	public class ServerSceneRotation : MonoBehaviour, IResetable
	{
		[Token(Token = "0x200026C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7013DC", Offset = "0x7013DC")]
		private sealed class <>c__DisplayClass3_0
		{
			[Token(Token = "0x4000BA9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string ip;

			[Token(Token = "0x6001470")]
			[Address(RVA = "0x96DE04", Offset = "0x96DE04", VA = "0x96DE04")]
			public <>c__DisplayClass3_0()
			{
			}

			[Token(Token = "0x6001471")]
			[Address(RVA = "0x96E21C", Offset = "0x96E21C", VA = "0x96E21C")]
			internal bool <ClientDisconnect>b__0(string x)
			{
				return default(bool);
			}
		}

		[Serializable]
		[Token(Token = "0x200026D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7013EC", Offset = "0x7013EC")]
		private sealed class <>c
		{
			[Token(Token = "0x4000BAA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000BAB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Predicate<string> <>9__4_0;

			[Token(Token = "0x6001473")]
			[Address(RVA = "0x96E1C0", Offset = "0x96E1C0", VA = "0x96E1C0")]
			public <>c()
			{
			}

			[Token(Token = "0x6001474")]
			[Address(RVA = "0x96E1C8", Offset = "0x96E1C8", VA = "0x96E1C8")]
			internal bool <SendSceneRotationMessage>b__4_0(string x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x40008D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private NetworkManager _networkManager;

		[Token(Token = "0x40008D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<string> _ipRotationList;

		[Token(Token = "0x6001094")]
		[Address(RVA = "0x96DAC8", Offset = "0x96DAC8", VA = "0x96DAC8")]
		private void Start()
		{
		}

		[Token(Token = "0x6001095")]
		[Address(RVA = "0x96DD14", Offset = "0x96DD14", VA = "0x96DD14")]
		private void ClientDisconnect(string ip)
		{
		}

		[Token(Token = "0x6001096")]
		[Address(RVA = "0x96DE0C", Offset = "0x96DE0C", VA = "0x96DE0C")]
		private void SendSceneRotationMessage(INetworkMessage networkMessage)
		{
		}

		[Token(Token = "0x6001097")]
		[Address(RVA = "0x96E05C", Offset = "0x96E05C", VA = "0x96E05C", Slot = "4")]
		public void OnServerReset()
		{
		}

		[Token(Token = "0x6001098")]
		[Address(RVA = "0x96E0EC", Offset = "0x96E0EC", VA = "0x96E0EC")]
		public ServerSceneRotation()
		{
		}
	}
}
namespace StudioNyx.Framework.EquipmentSystem.Animations
{
	[Token(Token = "0x200019F")]
	public class MaterialFloatAnimation : SerializedMonoBehaviour
	{
		[Token(Token = "0x40008D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Renderer _renderer;

		[Token(Token = "0x40008D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private int _indexOfMaterial;

		[Token(Token = "0x40008D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private string _propertyName;

		[Token(Token = "0x40008D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private float _animTime;

		[Token(Token = "0x40008D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[SerializeField]
		private Ease _animEase;

		[Token(Token = "0x40008DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private float _maxValue;

		[Token(Token = "0x40008DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[SerializeField]
		private float _minValue;

		[Token(Token = "0x40008DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private float _startAnimationTimeAfterActivation;

		[Token(Token = "0x40008DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private float _defaultValue;

		[Token(Token = "0x40008DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private int _animationCounter;

		[Token(Token = "0x40008DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private TweenerCore<float, float, FloatOptions> _animation;

		[Token(Token = "0x6001099")]
		[Address(RVA = "0x88A50C", Offset = "0x88A50C", VA = "0x88A50C")]
		private void Start()
		{
		}

		[Token(Token = "0x600109A")]
		[Address(RVA = "0x88A578", Offset = "0x88A578", VA = "0x88A578")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600109B")]
		[Address(RVA = "0x88A620", Offset = "0x88A620", VA = "0x88A620")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600109C")]
		[Address(RVA = "0x88A674", Offset = "0x88A674", VA = "0x88A674")]
		private void StartAnim()
		{
		}

		[Token(Token = "0x600109D")]
		[Address(RVA = "0x88A624", Offset = "0x88A624", VA = "0x88A624")]
		private void StopAnim()
		{
		}

		[Token(Token = "0x600109E")]
		[Address(RVA = "0x88A7E0", Offset = "0x88A7E0", VA = "0x88A7E0")]
		public MaterialFloatAnimation()
		{
		}
	}
}
namespace StudioNyx.Network
{
	[Token(Token = "0x20001A0")]
	public class AutoConnect : MonoBehaviour
	{
		[Token(Token = "0x40008E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private NetworkManager _networkManager;

		[Token(Token = "0x40008E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool isConnected;

		[Token(Token = "0x40008E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<ConnectionMessage> _connectionMessages;

		[Token(Token = "0x40008E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private string _sessionName;

		[Token(Token = "0x40008E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool _sendHanshake;

		[Token(Token = "0x40008E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		private bool _isHandshakeSent;

		[Token(Token = "0x40008E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float _connectionTime;

		[Token(Token = "0x600109F")]
		[Address(RVA = "0x88A7F0", Offset = "0x88A7F0", VA = "0x88A7F0")]
		private void Awake()
		{
		}

		[Token(Token = "0x60010A0")]
		[Address(RVA = "0x88A86C", Offset = "0x88A86C", VA = "0x88A86C")]
		private void Start()
		{
		}

		[Token(Token = "0x60010A1")]
		[Address(RVA = "0x88ABE4", Offset = "0x88ABE4", VA = "0x88ABE4")]
		private void Update()
		{
		}

		[Token(Token = "0x60010A2")]
		[Address(RVA = "0x88AC64", Offset = "0x88AC64", VA = "0x88AC64")]
		private void Handshake()
		{
		}

		[Token(Token = "0x60010A3")]
		[Address(RVA = "0x88AD58", Offset = "0x88AD58", VA = "0x88AD58")]
		public AutoConnect()
		{
		}

		[Token(Token = "0x60010A4")]
		[Address(RVA = "0x88ADC8", Offset = "0x88ADC8", VA = "0x88ADC8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x708CD0", Offset = "0x708CD0")]
		private void <Start>b__8_0(Dictionary<string, SessionInfoMessage> sessions)
		{
		}
	}
	[Token(Token = "0x20001A1")]
	public interface ICommunicationManager
	{
		[Token(Token = "0x170001F2")]
		Action<byte[]> OnUnreliableReceive
		{
			[Token(Token = "0x60010A5")]
			get;
			[Token(Token = "0x60010A6")]
			set;
		}

		[Token(Token = "0x170001F3")]
		Action<byte[], int> OnReliableReceive
		{
			[Token(Token = "0x60010A7")]
			get;
			[Token(Token = "0x60010A8")]
			set;
		}

		[Token(Token = "0x170001F4")]
		bool IsSessionStarted
		{
			[Token(Token = "0x60010AD")]
			get;
		}

		[Token(Token = "0x170001F5")]
		Action OnSessionJoined
		{
			[Token(Token = "0x60010AE")]
			get;
			[Token(Token = "0x60010AF")]
			set;
		}

		[Token(Token = "0x60010A9")]
		void JoinSession(SessionInfoMessage sessionInfoMessage);

		[Token(Token = "0x60010AA")]
		void Send(INetworkMessage networkMessage);

		[Token(Token = "0x60010AB")]
		void SendSecure(INetworkMessage networkMessage);

		[Token(Token = "0x60010AC")]
		void Stop();
	}
	[Token(Token = "0x20001A2")]
	public interface IConnectionManager
	{
		[Token(Token = "0x170001F6")]
		Action<Dictionary<string, SessionInfoMessage>> OnAvailableSessionsUpdate
		{
			[Token(Token = "0x60010B3")]
			get;
			[Token(Token = "0x60010B4")]
			set;
		}

		[Token(Token = "0x170001F7")]
		Action<SessionInfoMessage> OnSessionCreated
		{
			[Token(Token = "0x60010B5")]
			get;
			[Token(Token = "0x60010B6")]
			set;
		}

		[Token(Token = "0x60010B0")]
		void CreateSession(string name);

		[Token(Token = "0x60010B1")]
		void SearchSession();

		[Token(Token = "0x60010B2")]
		void Stop();
	}
	[Token(Token = "0x20001A3")]
	public interface ITransformInterpolator
	{
		[Token(Token = "0x170001F8")]
		Transform TargetTransform
		{
			[Token(Token = "0x60010B7")]
			get;
			[Token(Token = "0x60010B8")]
			set;
		}

		[Token(Token = "0x60010B9")]
		void Receive(TransformInfo transformInfo);

		[Token(Token = "0x60010BA")]
		void Update();

		[Token(Token = "0x60010BB")]
		void Stop();
	}
	[Token(Token = "0x20001A4")]
	public interface INetworkMessage
	{
		[Token(Token = "0x170001F9")]
		string SenderIP
		{
			[Token(Token = "0x60010BC")]
			get;
		}
	}
	[Serializable]
	[Token(Token = "0x20001A5")]
	public class BaseNetworkMessage : INetworkMessage
	{
		[Token(Token = "0x40008E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7060C4", Offset = "0x7060C4")]
		private readonly string <SenderIP>k__BackingField;

		[Token(Token = "0x170001FA")]
		public string SenderIP
		{
			[Token(Token = "0x60010BE")]
			[Address(RVA = "0x88B784", Offset = "0x88B784", VA = "0x88B784", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x708CE0", Offset = "0x708CE0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60010BD")]
		[Address(RVA = "0x88A030", Offset = "0x88A030", VA = "0x88A030")]
		public BaseNetworkMessage()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001A6")]
	public class ConnectionMessage : BaseNetworkMessage
	{
		[Token(Token = "0x40008E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string DeviceID;

		[Token(Token = "0x40008E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string DeviceIP;

		[Token(Token = "0x40008EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string DeviceModel;

		[Token(Token = "0x60010BF")]
		[Address(RVA = "0x88ACD0", Offset = "0x88ACD0", VA = "0x88ACD0")]
		public ConnectionMessage()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001A7")]
	public class DisconnectMessage : INetworkMessage
	{
		[Token(Token = "0x40008EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7060D4", Offset = "0x7060D4")]
		private readonly string <SenderIP>k__BackingField;

		[Token(Token = "0x170001FB")]
		public string SenderIP
		{
			[Token(Token = "0x60010C1")]
			[Address(RVA = "0x88BC90", Offset = "0x88BC90", VA = "0x88BC90", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x708CF0", Offset = "0x708CF0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60010C0")]
		[Address(RVA = "0x88BC1C", Offset = "0x88BC1C", VA = "0x88BC1C")]
		public DisconnectMessage()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001A8")]
	public class ListFloatMessage : BaseNetworkMessage
	{
		[Token(Token = "0x40008EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<float> parameters;

		[Token(Token = "0x60010C2")]
		[Address(RVA = "0x88C088", Offset = "0x88C088", VA = "0x88C088")]
		public ListFloatMessage(List<float> list)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001A9")]
	public class PingMessage : BaseNetworkMessage
	{
		[Token(Token = "0x40008ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7060E4", Offset = "0x7060E4")]
		private float <Time>k__BackingField;

		[Token(Token = "0x170001FC")]
		public float Time
		{
			[Token(Token = "0x60010C4")]
			[Address(RVA = "0x88D6DC", Offset = "0x88D6DC", VA = "0x88D6DC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x708D00", Offset = "0x708D00")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60010C5")]
			[Address(RVA = "0x88D6E4", Offset = "0x88D6E4", VA = "0x88D6E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x708D10", Offset = "0x708D10")]
			set
			{
			}
		}

		[Token(Token = "0x60010C3")]
		[Address(RVA = "0x88D6AC", Offset = "0x88D6AC", VA = "0x88D6AC")]
		public PingMessage(float time)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001AA")]
	public class SessionInfoMessage : BaseNetworkMessage
	{
		[Token(Token = "0x40008EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string name;

		[Token(Token = "0x40008EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string multicastAddress;

		[Token(Token = "0x40008F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int port;

		[Token(Token = "0x60010C6")]
		[Address(RVA = "0x8917C8", Offset = "0x8917C8", VA = "0x8917C8")]
		public SessionInfoMessage(string name, string multicastAddress, int port)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001AB")]
	public class SyncRequestMessage : BaseNetworkMessage
	{
		[Token(Token = "0x60010C7")]
		[Address(RVA = "0x891804", Offset = "0x891804", VA = "0x891804")]
		public SyncRequestMessage()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001AC")]
	public class TextMessage : BaseNetworkMessage
	{
		[Token(Token = "0x40008F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7060F4", Offset = "0x7060F4")]
		private string <Text>k__BackingField;

		[Token(Token = "0x170001FD")]
		public string Text
		{
			[Token(Token = "0x60010C9")]
			[Address(RVA = "0x891808", Offset = "0x891808", VA = "0x891808")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x708D20", Offset = "0x708D20")]
			get
			{
				return null;
			}
			[Token(Token = "0x60010CA")]
			[Address(RVA = "0x891810", Offset = "0x891810", VA = "0x891810")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x708D30", Offset = "0x708D30")]
			set
			{
			}
		}

		[Token(Token = "0x60010C8")]
		[Address(RVA = "0x8880B0", Offset = "0x8880B0", VA = "0x8880B0")]
		public TextMessage(string text)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001AD")]
	public class TrackingInfoMessage : BaseNetworkMessage
	{
		[Token(Token = "0x40008F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SerializableVector3 trackerPosition;

		[Token(Token = "0x40008F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public SerializableQuaternion trackerRotation;

		[Token(Token = "0x40008F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string targetDeviceID;

		[Token(Token = "0x40008F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool forcePosition;

		[Token(Token = "0x60010CB")]
		[Address(RVA = "0x88DDFC", Offset = "0x88DDFC", VA = "0x88DDFC")]
		public TrackingInfoMessage(SerializableVector3 trackerPosition, SerializableQuaternion trackerRotation, string targetDeviceID, bool forcePosition)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001AE")]
	public class TransformsMessage : BaseNetworkMessage
	{
		[Token(Token = "0x40008F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<TransformInfo> transformInfoList;

		[Token(Token = "0x60010CC")]
		[Address(RVA = "0x892438", Offset = "0x892438", VA = "0x892438")]
		public TransformsMessage()
		{
		}
	}
	[Token(Token = "0x20001AF")]
	public class NetworkManager : MonoBehaviour
	{
		[Token(Token = "0x40008F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static int BROADCAST_PORT;

		[Token(Token = "0x40008F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public static int MULTICAST_PORT;

		[Token(Token = "0x40008F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static int TCP_PORT;

		[Token(Token = "0x40008FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static string _localIPAddress;

		[Token(Token = "0x40008FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x706104", Offset = "0x706104")]
		private static int <RandomID>k__BackingField;

		[Token(Token = "0x40008FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Text _ipText;

		[Token(Token = "0x40008FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Dictionary<Type, Action<INetworkMessage>> _messageReceivedCallbackDictionary;

		[Token(Token = "0x40008FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private ICommunicationManager _communicationManager;

		[Token(Token = "0x40008FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private IConnectionManager _connectionManager;

		[Token(Token = "0x4000900")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static string DeviceUniqueID;

		[Token(Token = "0x4000901")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x706114", Offset = "0x706114")]
		private static NetworkManager <Instance>k__BackingField;

		[Token(Token = "0x4000902")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x706124", Offset = "0x706124")]
		private Action <OnConnectionEstablished>k__BackingField;

		[Token(Token = "0x170001FE")]
		public static int RandomID
		{
			[Token(Token = "0x60010CD")]
			[Address(RVA = "0x88C0B0", Offset = "0x88C0B0", VA = "0x88C0B0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x708D40", Offset = "0x708D40")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60010CE")]
			[Address(RVA = "0x88C118", Offset = "0x88C118", VA = "0x88C118")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x708D50", Offset = "0x708D50")]
			private set
			{
			}
		}

		[Token(Token = "0x170001FF")]
		public static string LocalIPAddress
		{
			[Token(Token = "0x60010CF")]
			[Address(RVA = "0x88B3BC", Offset = "0x88B3BC", VA = "0x88B3BC")]
			get
			{
				return null;
			}
			[Token(Token = "0x60010D0")]
			[Address(RVA = "0x88C184", Offset = "0x88C184", VA = "0x88C184")]
			private set
			{
			}
		}

		[Token(Token = "0x17000200")]
		public static NetworkManager Instance
		{
			[Token(Token = "0x60010D1")]
			[Address(RVA = "0x88C1F0", Offset = "0x88C1F0", VA = "0x88C1F0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x708D60", Offset = "0x708D60")]
			get
			{
				return null;
			}
			[Token(Token = "0x60010D2")]
			[Address(RVA = "0x88C258", Offset = "0x88C258", VA = "0x88C258")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x708D70", Offset = "0x708D70")]
			private set
			{
			}
		}

		[Token(Token = "0x17000201")]
		public Action<Dictionary<string, SessionInfoMessage>> OnAvailableSessionsUpdate
		{
			[Token(Token = "0x60010D3")]
			[Address(RVA = "0x88AA6C", Offset = "0x88AA6C", VA = "0x88AA6C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60010D4")]
			[Address(RVA = "0x88AB20", Offset = "0x88AB20", VA = "0x88AB20")]
			set
			{
			}
		}

		[Token(Token = "0x17000202")]
		public bool IsConnected
		{
			[Token(Token = "0x60010D5")]
			[Address(RVA = "0x88C2C4", Offset = "0x88C2C4", VA = "0x88C2C4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000203")]
		public Action OnConnectionEstablished
		{
			[Token(Token = "0x60010D6")]
			[Address(RVA = "0x88C378", Offset = "0x88C378", VA = "0x88C378")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x708D80", Offset = "0x708D80")]
			get
			{
				return null;
			}
			[Token(Token = "0x60010D7")]
			[Address(RVA = "0x88C380", Offset = "0x88C380", VA = "0x88C380")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x708D90", Offset = "0x708D90")]
			set
			{
			}
		}

		[Token(Token = "0x60010D8")]
		[Address(RVA = "0x88C388", Offset = "0x88C388", VA = "0x88C388")]
		private void Awake()
		{
		}

		[Token(Token = "0x60010D9")]
		[Address(RVA = "0x88C848", Offset = "0x88C848", VA = "0x88C848")]
		private void Start()
		{
		}

		[Token(Token = "0x60010DA")]
		[Address(RVA = "0x88CA48", Offset = "0x88CA48", VA = "0x88CA48")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60010DB")]
		[Address(RVA = "0x88CB70", Offset = "0x88CB70", VA = "0x88CB70")]
		public void ProcessMessage(NetworkStream stream)
		{
		}

		[Token(Token = "0x60010DC")]
		[Address(RVA = "0x88CDC8", Offset = "0x88CDC8", VA = "0x88CDC8")]
		public void ProcessMessage(byte[] bytes)
		{
		}

		[Token(Token = "0x60010DD")]
		[Address(RVA = "0x88CDD0", Offset = "0x88CDD0", VA = "0x88CDD0")]
		public void ProcessMessage(byte[] bytes, int length)
		{
		}

		[Token(Token = "0x60010DE")]
		[Address(RVA = "0x88D17C", Offset = "0x88D17C", VA = "0x88D17C")]
		public void AddReceiveCallback(Type type, Action<INetworkMessage> callback)
		{
		}

		[Token(Token = "0x60010DF")]
		[Address(RVA = "0x88D280", Offset = "0x88D280", VA = "0x88D280")]
		public void Send(INetworkMessage networkMessage)
		{
		}

		[Token(Token = "0x60010E0")]
		[Address(RVA = "0x8880D8", Offset = "0x8880D8", VA = "0x8880D8")]
		public void SendSecure(INetworkMessage networkMessage)
		{
		}

		[Token(Token = "0x60010E1")]
		[Address(RVA = "0x88AF10", Offset = "0x88AF10", VA = "0x88AF10")]
		public void JoinSession(SessionInfoMessage message)
		{
		}

		[Token(Token = "0x60010E2")]
		[Address(RVA = "0x88D344", Offset = "0x88D344", VA = "0x88D344")]
		public void CreateSession(string name)
		{
		}

		[Token(Token = "0x60010E3")]
		[Address(RVA = "0x88A9B8", Offset = "0x88A9B8", VA = "0x88A9B8")]
		public void SearchSession()
		{
		}

		[Token(Token = "0x60010E4")]
		[Address(RVA = "0x88D404", Offset = "0x88D404", VA = "0x88D404")]
		public NetworkManager()
		{
		}
	}
	[Token(Token = "0x20001B0")]
	public class PlayerTracker : MonoBehaviour
	{
		[Token(Token = "0x200026E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7013FC", Offset = "0x7013FC")]
		private sealed class <>c__DisplayClass14_0
		{
			[Token(Token = "0x4000BAC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vector3 adjustedPostion;

			[Token(Token = "0x4000BAD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PlayerTracker <>4__this;

			[Token(Token = "0x6001475")]
			[Address(RVA = "0x88DCC8", Offset = "0x88DCC8", VA = "0x88DCC8")]
			public <>c__DisplayClass14_0()
			{
			}

			[Token(Token = "0x6001476")]
			[Address(RVA = "0x88DE8C", Offset = "0x88DE8C", VA = "0x88DE8C")]
			internal void <Update>b__0()
			{
			}
		}

		[Token(Token = "0x4000903")]
		private const float MAX_DRIFT_DISTANCE = 0.25f;

		[Token(Token = "0x4000904")]
		private const int MAX_DRIFT_FRAMES = 10;

		[Token(Token = "0x4000905")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform _playerCamera;

		[Token(Token = "0x4000906")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform _player;

		[Token(Token = "0x4000907")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private CameraTransitionFade _cameraTransitionFade;

		[Token(Token = "0x4000908")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private NetworkManager _networkManager;

		[Token(Token = "0x4000909")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private TrackingInfoMessage _trackingInfoMessage;

		[Token(Token = "0x400090A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool _isFirstCall;

		[Token(Token = "0x400090B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		private bool _infoReceived;

		[Token(Token = "0x400090C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x42")]
		private bool _isMovingCamera;

		[Token(Token = "0x400090D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private int _driftCounter;

		[Token(Token = "0x400090E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static bool IsSynchronized;

		[Token(Token = "0x60010E6")]
		[Address(RVA = "0x88D6EC", Offset = "0x88D6EC", VA = "0x88D6EC")]
		private void Start()
		{
		}

		[Token(Token = "0x60010E7")]
		[Address(RVA = "0x88D828", Offset = "0x88D828", VA = "0x88D828")]
		public void OnTrackingInfoReceived(INetworkMessage networkMessage)
		{
		}

		[Token(Token = "0x60010E8")]
		[Address(RVA = "0x88D918", Offset = "0x88D918", VA = "0x88D918")]
		private void Update()
		{
		}

		[Token(Token = "0x60010E9")]
		[Address(RVA = "0x88DCD0", Offset = "0x88DCD0", VA = "0x88DCD0")]
		[AttributeAttribute(Name = "ButtonAttribute", RVA = "0x708DA0", Offset = "0x708DA0")]
		private void TestCameraTransition(Vector3 position, Vector3 rotation)
		{
		}

		[Token(Token = "0x60010EA")]
		[Address(RVA = "0x88DE84", Offset = "0x88DE84", VA = "0x88DE84")]
		public PlayerTracker()
		{
		}
	}
	[Token(Token = "0x20001B1")]
	public class PlayerTrackingManager : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200026F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x70140C", Offset = "0x70140C")]
		private sealed class <>c
		{
			[Token(Token = "0x4000BAE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000BAF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<XElement, string> <>9__14_0;

			[Token(Token = "0x4000BB0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<XElement, string> <>9__14_1;

			[Token(Token = "0x4000BB1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Predicate<InputDevice> <>9__14_2;

			[Token(Token = "0x4000BB2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static Func<KeyValuePair<string, string>, XElement> <>9__17_0;

			[Token(Token = "0x6001478")]
			[Address(RVA = "0x88F630", Offset = "0x88F630", VA = "0x88F630")]
			public <>c()
			{
			}

			[Token(Token = "0x6001479")]
			[Address(RVA = "0x88F638", Offset = "0x88F638", VA = "0x88F638")]
			internal string <Start>b__14_0(XElement key)
			{
				return null;
			}

			[Token(Token = "0x600147A")]
			[Address(RVA = "0x88F670", Offset = "0x88F670", VA = "0x88F670")]
			internal string <Start>b__14_1(XElement val)
			{
				return null;
			}

			[Token(Token = "0x600147B")]
			[Address(RVA = "0x88F68C", Offset = "0x88F68C", VA = "0x88F68C")]
			internal bool <Start>b__14_2(InputDevice d)
			{
				return default(bool);
			}

			[Token(Token = "0x600147C")]
			[Address(RVA = "0x88F6BC", Offset = "0x88F6BC", VA = "0x88F6BC")]
			internal XElement <SaveTrackingInfo>b__17_0(KeyValuePair<string, string> kv)
			{
				return null;
			}
		}

		[Token(Token = "0x2000270")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x70141C", Offset = "0x70141C")]
		private sealed class <>c__DisplayClass20_0
		{
			[Token(Token = "0x4000BB3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public KeyValuePair<string, string> kvp;

			[Token(Token = "0x600147D")]
			[Address(RVA = "0x88F4F4", Offset = "0x88F4F4", VA = "0x88F4F4")]
			public <>c__DisplayClass20_0()
			{
			}

			[Token(Token = "0x600147E")]
			[Address(RVA = "0x88F758", Offset = "0x88F758", VA = "0x88F758")]
			internal bool <Update>b__0(InputDevice x)
			{
				return default(bool);
			}

			[Token(Token = "0x600147F")]
			[Address(RVA = "0x88F7C0", Offset = "0x88F7C0", VA = "0x88F7C0")]
			internal bool <Update>b__1(ConnectionMessage x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000271")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x70142C", Offset = "0x70142C")]
		private sealed class <>c__DisplayClass20_1
		{
			[Token(Token = "0x4000BB4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ConnectionMessage connectionMessage;

			[Token(Token = "0x6001480")]
			[Address(RVA = "0x88F4FC", Offset = "0x88F4FC", VA = "0x88F4FC")]
			public <>c__DisplayClass20_1()
			{
			}

			[Token(Token = "0x6001481")]
			[Address(RVA = "0x88F820", Offset = "0x88F820", VA = "0x88F820")]
			internal bool <Update>b__2(SyncRequestMessage x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x400090F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private ServerManager _serverManagerInstance;

		[Token(Token = "0x4000910")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Dictionary<string, string> _headsetTrackerDictionary;

		[Token(Token = "0x4000911")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<InputDevice> _trackerList;

		[Token(Token = "0x4000912")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool _isSessionStarted;

		[Token(Token = "0x4000913")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float _lastCallTime;

		[Token(Token = "0x4000914")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float _sendTimeInterval;

		[Token(Token = "0x4000915")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private Vector3 _trackerHeadsetDistance;

		[Token(Token = "0x4000916")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private GameObject _trackerRepresentation;

		[Token(Token = "0x4000917")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Dictionary<string, Transform> _trackerTransformDictionary;

		[Token(Token = "0x4000918")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private List<SyncRequestMessage> _syncRequestMessageList;

		[Token(Token = "0x4000919")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x706184", Offset = "0x706184")]
		private bool <ForcePosition>k__BackingField;

		[Token(Token = "0x17000204")]
		public bool ForcePosition
		{
			[Token(Token = "0x60010EB")]
			[Address(RVA = "0x88E154", Offset = "0x88E154", VA = "0x88E154")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x708DB0", Offset = "0x708DB0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60010EC")]
			[Address(RVA = "0x88E15C", Offset = "0x88E15C", VA = "0x88E15C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x708DC0", Offset = "0x708DC0")]
			set
			{
			}
		}

		[Token(Token = "0x60010ED")]
		[Address(RVA = "0x88E168", Offset = "0x88E168", VA = "0x88E168")]
		private void Start()
		{
		}

		[Token(Token = "0x60010EE")]
		[Address(RVA = "0x88E800", Offset = "0x88E800", VA = "0x88E800")]
		private void InputDevices_deviceDisconnected(InputDevice obj)
		{
		}

		[Token(Token = "0x60010EF")]
		[Address(RVA = "0x88E8D0", Offset = "0x88E8D0", VA = "0x88E8D0")]
		private void InputDevices_deviceConnected(InputDevice obj)
		{
		}

		[Token(Token = "0x60010F0")]
		[Address(RVA = "0x88E9F4", Offset = "0x88E9F4", VA = "0x88E9F4")]
		private void SaveTrackingInfo()
		{
		}

		[Token(Token = "0x60010F1")]
		[Address(RVA = "0x88EB6C", Offset = "0x88EB6C", VA = "0x88EB6C")]
		public void PairHeadsetWithTracker()
		{
		}

		[Token(Token = "0x60010F2")]
		[Address(RVA = "0x88ECF0", Offset = "0x88ECF0", VA = "0x88ECF0")]
		public void ClearTrackingInfo()
		{
		}

		[Token(Token = "0x60010F3")]
		[Address(RVA = "0x88ED50", Offset = "0x88ED50", VA = "0x88ED50")]
		private void Update()
		{
		}

		[Token(Token = "0x60010F4")]
		[Address(RVA = "0x88F504", Offset = "0x88F504", VA = "0x88F504")]
		private void ForceSyncPlayer(INetworkMessage networkMessage)
		{
		}

		[Token(Token = "0x60010F5")]
		[Address(RVA = "0x88F5AC", Offset = "0x88F5AC", VA = "0x88F5AC")]
		public PlayerTrackingManager()
		{
		}

		[Token(Token = "0x60010F6")]
		[Address(RVA = "0x88F5C0", Offset = "0x88F5C0", VA = "0x88F5C0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x708DD0", Offset = "0x708DD0")]
		private void <Start>b__14_3()
		{
		}
	}
	[Token(Token = "0x20001B2")]
	public class ServerManager : MonoBehaviour
	{
		[Token(Token = "0x2000272")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x70143C", Offset = "0x70143C")]
		private sealed class <>c__DisplayClass21_0
		{
			[Token(Token = "0x4000BB5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string ip;

			[Token(Token = "0x6001482")]
			[Address(RVA = "0x890B54", Offset = "0x890B54", VA = "0x890B54")]
			public <>c__DisplayClass21_0()
			{
			}

			[Token(Token = "0x6001483")]
			[Address(RVA = "0x890B5C", Offset = "0x890B5C", VA = "0x890B5C")]
			internal bool <Start>b__2(ConnectionMessage x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x400091A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x706194", Offset = "0x706194")]
		private static ServerManager <Instance>k__BackingField;

		[Token(Token = "0x400091B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7061A4", Offset = "0x7061A4")]
		private List<ConnectionMessage> <ConnectionMessages>k__BackingField;

		[Token(Token = "0x400091C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7061B4", Offset = "0x7061B4")]
		private Action<string> <OnClientDisconnect>k__BackingField;

		[Token(Token = "0x400091D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private ServerUIController _serverUIController;

		[Token(Token = "0x400091E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private NetworkManager _networkManager;

		[Token(Token = "0x400091F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool _keepRunning;

		[Token(Token = "0x4000920")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private TcpListener tcpListener;

		[Token(Token = "0x4000921")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Thread tcpListenerThread;

		[Token(Token = "0x4000922")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Dictionary<string, TcpClient> connectedTcpClientList;

		[Token(Token = "0x4000923")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private uint _connectionCheckCounter;

		[Token(Token = "0x4000924")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float _connectionCheckTime;

		[Token(Token = "0x17000205")]
		public static ServerManager Instance
		{
			[Token(Token = "0x60010F7")]
			[Address(RVA = "0x88F84C", Offset = "0x88F84C", VA = "0x88F84C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x708DE0", Offset = "0x708DE0")]
			get
			{
				return null;
			}
			[Token(Token = "0x60010F8")]
			[Address(RVA = "0x88F89C", Offset = "0x88F89C", VA = "0x88F89C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x708DF0", Offset = "0x708DF0")]
			private set
			{
			}
		}

		[Token(Token = "0x17000206")]
		public List<ConnectionMessage> ConnectionMessages
		{
			[Token(Token = "0x60010F9")]
			[Address(RVA = "0x88F8F0", Offset = "0x88F8F0", VA = "0x88F8F0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x708E00", Offset = "0x708E00")]
			get
			{
				return null;
			}
			[Token(Token = "0x60010FA")]
			[Address(RVA = "0x88F8F8", Offset = "0x88F8F8", VA = "0x88F8F8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x708E10", Offset = "0x708E10")]
			set
			{
			}
		}

		[Token(Token = "0x17000207")]
		public Action<string> OnClientDisconnect
		{
			[Token(Token = "0x60010FB")]
			[Address(RVA = "0x88F900", Offset = "0x88F900", VA = "0x88F900")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x708E20", Offset = "0x708E20")]
			get
			{
				return null;
			}
			[Token(Token = "0x60010FC")]
			[Address(RVA = "0x88F908", Offset = "0x88F908", VA = "0x88F908")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x708E30", Offset = "0x708E30")]
			set
			{
			}
		}

		[Token(Token = "0x60010FD")]
		[Address(RVA = "0x88F910", Offset = "0x88F910", VA = "0x88F910")]
		private void Awake()
		{
		}

		[Token(Token = "0x60010FE")]
		[Address(RVA = "0x88F964", Offset = "0x88F964", VA = "0x88F964")]
		private void Start()
		{
		}

		[Token(Token = "0x60010FF")]
		[Address(RVA = "0x88FB88", Offset = "0x88FB88", VA = "0x88FB88")]
		private void Update()
		{
		}

		[Token(Token = "0x6001100")]
		[Address(RVA = "0x88FDB8", Offset = "0x88FDB8", VA = "0x88FDB8")]
		private void ListenForIncomingRequests()
		{
		}

		[Token(Token = "0x6001101")]
		[Address(RVA = "0x890110", Offset = "0x890110", VA = "0x890110")]
		private void ClientThread(object obj)
		{
		}

		[Token(Token = "0x6001102")]
		[Address(RVA = "0x890208", Offset = "0x890208", VA = "0x890208")]
		public void SendToAll(byte[] data)
		{
		}

		[Token(Token = "0x6001103")]
		[Address(RVA = "0x88ECE0", Offset = "0x88ECE0", VA = "0x88ECE0")]
		public void LogToConsole(string message)
		{
		}

		[Token(Token = "0x6001104")]
		[Address(RVA = "0x8903C0", Offset = "0x8903C0", VA = "0x8903C0")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001105")]
		[Address(RVA = "0x8904D4", Offset = "0x8904D4", VA = "0x8904D4")]
		public ServerManager()
		{
		}

		[Token(Token = "0x6001106")]
		[Address(RVA = "0x89057C", Offset = "0x89057C", VA = "0x89057C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x708E40", Offset = "0x708E40")]
		private void <Start>b__21_0(INetworkMessage networkMessage)
		{
		}

		[Token(Token = "0x6001107")]
		[Address(RVA = "0x8909AC", Offset = "0x8909AC", VA = "0x8909AC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x708E50", Offset = "0x708E50")]
		private void <Start>b__21_1(INetworkMessage networkMessage)
		{
		}
	}
	[Token(Token = "0x20001B3")]
	public class ServerUIController : MonoBehaviour, IResetable
	{
		[Token(Token = "0x2000273")]
		private class IpSlot
		{
			[Token(Token = "0x4000BB6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string ip;

			[Token(Token = "0x4000BB7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public List<string> messages;

			[Token(Token = "0x6001484")]
			[Address(RVA = "0x890EA4", Offset = "0x890EA4", VA = "0x890EA4")]
			public IpSlot(string ip)
			{
			}
		}

		[Token(Token = "0x2000274")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x70144C", Offset = "0x70144C")]
		private sealed class <>c__DisplayClass10_0
		{
			[Token(Token = "0x4000BB8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string ip;

			[Token(Token = "0x6001485")]
			[Address(RVA = "0x8911CC", Offset = "0x8911CC", VA = "0x8911CC")]
			public <>c__DisplayClass10_0()
			{
			}

			[Token(Token = "0x6001486")]
			[Address(RVA = "0x891780", Offset = "0x891780", VA = "0x891780")]
			internal bool <ClientDisconnect>b__0(IpSlot x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000275")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x70145C", Offset = "0x70145C")]
		private sealed class <>c__DisplayClass11_0
		{
			[Token(Token = "0x4000BB9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string ip;

			[Token(Token = "0x6001487")]
			[Address(RVA = "0x8911D4", Offset = "0x8911D4", VA = "0x8911D4")]
			public <>c__DisplayClass11_0()
			{
			}

			[Token(Token = "0x6001488")]
			[Address(RVA = "0x8917A4", Offset = "0x8917A4", VA = "0x8917A4")]
			internal bool <AddToLog>b__0(IpSlot x)
			{
				return default(bool);
			}
		}

		[Serializable]
		[Token(Token = "0x2000276")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x70146C", Offset = "0x70146C")]
		private sealed class <>c
		{
			[Token(Token = "0x4000BBA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000BBB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Predicate<IpSlot> <>9__11_1;

			[Token(Token = "0x600148A")]
			[Address(RVA = "0x89171C", Offset = "0x89171C", VA = "0x89171C")]
			public <>c()
			{
			}

			[Token(Token = "0x600148B")]
			[Address(RVA = "0x891724", Offset = "0x891724", VA = "0x891724")]
			internal bool <AddToLog>b__11_1(IpSlot x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000925")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7061D4", Offset = "0x7061D4")]
		private static ServerUIController <Instance>k__BackingField;

		[Token(Token = "0x4000926")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<IpSlot> _ipSlotList;

		[Token(Token = "0x4000927")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<TextMeshProUGUI> _textList;

		[Token(Token = "0x4000928")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<int> _textToUpdateIndexList;

		[Token(Token = "0x17000208")]
		public static ServerUIController Instance
		{
			[Token(Token = "0x6001108")]
			[Address(RVA = "0x890B80", Offset = "0x890B80", VA = "0x890B80")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x708E60", Offset = "0x708E60")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001109")]
			[Address(RVA = "0x890BD0", Offset = "0x890BD0", VA = "0x890BD0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x708E70", Offset = "0x708E70")]
			private set
			{
			}
		}

		[Token(Token = "0x600110A")]
		[Address(RVA = "0x890C24", Offset = "0x890C24", VA = "0x890C24")]
		private void Awake()
		{
		}

		[Token(Token = "0x600110B")]
		[Address(RVA = "0x890F28", Offset = "0x890F28", VA = "0x890F28")]
		private void Start()
		{
		}

		[Token(Token = "0x600110C")]
		[Address(RVA = "0x89101C", Offset = "0x89101C", VA = "0x89101C")]
		private void ClientDisconnect(string ip)
		{
		}

		[Token(Token = "0x600110D")]
		[Address(RVA = "0x890720", Offset = "0x890720", VA = "0x890720")]
		public void AddToLog(string ip, string message)
		{
		}

		[Token(Token = "0x600110E")]
		[Address(RVA = "0x8911DC", Offset = "0x8911DC", VA = "0x8911DC")]
		private void Update()
		{
		}

		[Token(Token = "0x600110F")]
		[Address(RVA = "0x890358", Offset = "0x890358", VA = "0x890358")]
		public void LogToConsole(string message)
		{
		}

		[Token(Token = "0x6001110")]
		[Address(RVA = "0x8914D0", Offset = "0x8914D0", VA = "0x8914D0", Slot = "4")]
		public void OnServerReset()
		{
		}

		[Token(Token = "0x6001111")]
		[Address(RVA = "0x8915F8", Offset = "0x8915F8", VA = "0x8915F8")]
		public ServerUIController()
		{
		}
	}
	[Token(Token = "0x20001B4")]
	public class UDPCommunicationManager : ICommunicationManager
	{
		[Token(Token = "0x4000929")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private UdpClient _multiCastClient;

		[Token(Token = "0x400092A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private IPEndPoint _sendEndPoint;

		[Token(Token = "0x400092B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private IPEndPoint _receiveEndPoint;

		[Token(Token = "0x400092C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Thread _multiCastReceiveThread;

		[Token(Token = "0x400092D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Socket _tcpClient;

		[Token(Token = "0x400092E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Thread _tcpReceiveThread;

		[Token(Token = "0x400092F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7061E4", Offset = "0x7061E4")]
		private Action <OnSessionJoined>k__BackingField;

		[Token(Token = "0x4000930")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7061F4", Offset = "0x7061F4")]
		private Action<byte[]> <OnUnreliableReceive>k__BackingField;

		[Token(Token = "0x4000931")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x706204", Offset = "0x706204")]
		private Action<byte[], int> <OnReliableReceive>k__BackingField;

		[Token(Token = "0x4000932")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x706214", Offset = "0x706214")]
		private bool <IsSessionStarted>k__BackingField;

		[Token(Token = "0x4000933")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private string _serverIP;

		[Token(Token = "0x17000209")]
		public Action OnSessionJoined
		{
			[Token(Token = "0x6001113")]
			[Address(RVA = "0x892F34", Offset = "0x892F34", VA = "0x892F34", Slot = "13")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x708E80", Offset = "0x708E80")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001114")]
			[Address(RVA = "0x892F3C", Offset = "0x892F3C", VA = "0x892F3C", Slot = "14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x708E90", Offset = "0x708E90")]
			set
			{
			}
		}

		[Token(Token = "0x1700020A")]
		public Action<byte[]> OnUnreliableReceive
		{
			[Token(Token = "0x6001115")]
			[Address(RVA = "0x892F44", Offset = "0x892F44", VA = "0x892F44", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x708EA0", Offset = "0x708EA0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001116")]
			[Address(RVA = "0x892F4C", Offset = "0x892F4C", VA = "0x892F4C", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x708EB0", Offset = "0x708EB0")]
			set
			{
			}
		}

		[Token(Token = "0x1700020B")]
		public Action<byte[], int> OnReliableReceive
		{
			[Token(Token = "0x6001117")]
			[Address(RVA = "0x892F54", Offset = "0x892F54", VA = "0x892F54", Slot = "6")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x708EC0", Offset = "0x708EC0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001118")]
			[Address(RVA = "0x892F5C", Offset = "0x892F5C", VA = "0x892F5C", Slot = "7")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x708ED0", Offset = "0x708ED0")]
			set
			{
			}
		}

		[Token(Token = "0x1700020C")]
		public bool IsSessionStarted
		{
			[Token(Token = "0x6001119")]
			[Address(RVA = "0x892F64", Offset = "0x892F64", VA = "0x892F64", Slot = "12")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x708EE0", Offset = "0x708EE0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600111A")]
			[Address(RVA = "0x892F6C", Offset = "0x892F6C", VA = "0x892F6C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x708EF0", Offset = "0x708EF0")]
			private set
			{
			}
		}

		[Token(Token = "0x6001112")]
		[Address(RVA = "0x88C840", Offset = "0x88C840", VA = "0x88C840")]
		public UDPCommunicationManager()
		{
		}

		[Token(Token = "0x600111B")]
		[Address(RVA = "0x892F78", Offset = "0x892F78", VA = "0x892F78", Slot = "8")]
		public void JoinSession(SessionInfoMessage sessionInfoMessage)
		{
		}

		[Token(Token = "0x600111C")]
		[Address(RVA = "0x893290", Offset = "0x893290", VA = "0x893290")]
		private void ReceiveMulticast()
		{
		}

		[Token(Token = "0x600111D")]
		[Address(RVA = "0x89330C", Offset = "0x89330C", VA = "0x89330C")]
		private void ReceiveTCP()
		{
		}

		[Token(Token = "0x600111E")]
		[Address(RVA = "0x8933B4", Offset = "0x8933B4", VA = "0x8933B4", Slot = "9")]
		public void Send(INetworkMessage networkMessage)
		{
		}

		[Token(Token = "0x600111F")]
		[Address(RVA = "0x89355C", Offset = "0x89355C", VA = "0x89355C", Slot = "10")]
		public void SendSecure(INetworkMessage networkMessage)
		{
		}

		[Token(Token = "0x6001120")]
		[Address(RVA = "0x8937CC", Offset = "0x8937CC", VA = "0x8937CC")]
		private void OnSendEnd(IAsyncResult ar)
		{
		}

		[Token(Token = "0x6001121")]
		[Address(RVA = "0x8938D8", Offset = "0x8938D8", VA = "0x8938D8")]
		private void Disconnect()
		{
		}

		[Token(Token = "0x6001122")]
		[Address(RVA = "0x893A7C", Offset = "0x893A7C", VA = "0x893A7C", Slot = "11")]
		public void Stop()
		{
		}
	}
	[Token(Token = "0x20001B5")]
	public class UDPConnectionManager : IConnectionManager
	{
		[Token(Token = "0x4000934")]
		private const int TIME_BETWEEN_SENDS = 1000;

		[Token(Token = "0x4000935")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static string LocalIPAddress;

		[Token(Token = "0x4000936")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private float _lastSendTime;

		[Token(Token = "0x4000937")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private UdpClient _udpClient;

		[Token(Token = "0x4000938")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Dictionary<string, SessionInfoMessage> _availableSessions;

		[Token(Token = "0x4000939")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x706224", Offset = "0x706224")]
		private Action<Dictionary<string, SessionInfoMessage>> <OnAvailableSessionsUpdate>k__BackingField;

		[Token(Token = "0x400093A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x706234", Offset = "0x706234")]
		private Action<SessionInfoMessage> <OnSessionCreated>k__BackingField;

		[Token(Token = "0x400093B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static UDPConnectionManager _instance;

		[Token(Token = "0x400093C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private SessionInfoMessage _createdSessionInfo;

		[Token(Token = "0x400093D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private IAsyncResult _ar;

		[Token(Token = "0x400093E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool _isApplicationQuit;

		[Token(Token = "0x400093F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private System.Timers.Timer _broadcastTimer;

		[Token(Token = "0x1700020D")]
		public Action<Dictionary<string, SessionInfoMessage>> OnAvailableSessionsUpdate
		{
			[Token(Token = "0x6001123")]
			[Address(RVA = "0x893AE0", Offset = "0x893AE0", VA = "0x893AE0", Slot = "7")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x708F00", Offset = "0x708F00")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001124")]
			[Address(RVA = "0x893AE8", Offset = "0x893AE8", VA = "0x893AE8", Slot = "8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x708F10", Offset = "0x708F10")]
			set
			{
			}
		}

		[Token(Token = "0x1700020E")]
		public Action<SessionInfoMessage> OnSessionCreated
		{
			[Token(Token = "0x6001125")]
			[Address(RVA = "0x893AF0", Offset = "0x893AF0", VA = "0x893AF0", Slot = "9")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x708F20", Offset = "0x708F20")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001126")]
			[Address(RVA = "0x893AF8", Offset = "0x893AF8", VA = "0x893AF8", Slot = "10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x708F30", Offset = "0x708F30")]
			set
			{
			}
		}

		[Token(Token = "0x1700020F")]
		public static UDPConnectionManager Instance
		{
			[Token(Token = "0x6001127")]
			[Address(RVA = "0x88C7C8", Offset = "0x88C7C8", VA = "0x88C7C8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001128")]
		[Address(RVA = "0x893B00", Offset = "0x893B00", VA = "0x893B00")]
		private UDPConnectionManager()
		{
		}

		[Token(Token = "0x6001129")]
		[Address(RVA = "0x893BCC", Offset = "0x893BCC", VA = "0x893BCC", Slot = "5")]
		public void SearchSession()
		{
		}

		[Token(Token = "0x600112A")]
		[Address(RVA = "0x893C44", Offset = "0x893C44", VA = "0x893C44")]
		private void StartListening()
		{
		}

		[Token(Token = "0x600112B")]
		[Address(RVA = "0x893D00", Offset = "0x893D00", VA = "0x893D00")]
		private void ReceiveSessionInfo(IAsyncResult ar)
		{
		}

		[Token(Token = "0x600112C")]
		[Address(RVA = "0x8940A8", Offset = "0x8940A8", VA = "0x8940A8")]
		private void BroadcastSessionInfo()
		{
		}

		[Token(Token = "0x600112D")]
		[Address(RVA = "0x8942EC", Offset = "0x8942EC", VA = "0x8942EC", Slot = "4")]
		public void CreateSession(string name)
		{
		}

		[Token(Token = "0x600112E")]
		[Address(RVA = "0x894620", Offset = "0x894620", VA = "0x894620")]
		private void _broadcastTimer_Elapsed(object sender, ElapsedEventArgs e)
		{
		}

		[Token(Token = "0x600112F")]
		[Address(RVA = "0x894624", Offset = "0x894624", VA = "0x894624", Slot = "6")]
		public void Stop()
		{
		}
	}
	[Token(Token = "0x20001B6")]
	public class AvatarInterpolator : ITransformInterpolator
	{
		[Token(Token = "0x4000940")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private TransformInfo _transformInfo;

		[Token(Token = "0x4000941")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private TransformInfo _lastTransformInfo;

		[Token(Token = "0x4000942")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Vector3 _velocity;

		[Token(Token = "0x4000943")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x706244", Offset = "0x706244")]
		private Transform <TargetTransform>k__BackingField;

		[Token(Token = "0x4000944")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Transform _neckTransform;

		[Token(Token = "0x17000210")]
		public Transform TargetTransform
		{
			[Token(Token = "0x6001130")]
			[Address(RVA = "0x88AFD4", Offset = "0x88AFD4", VA = "0x88AFD4", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x708F40", Offset = "0x708F40")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001131")]
			[Address(RVA = "0x88AFDC", Offset = "0x88AFDC", VA = "0x88AFDC", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x708F50", Offset = "0x708F50")]
			set
			{
			}
		}

		[Token(Token = "0x6001132")]
		[Address(RVA = "0x88AFE4", Offset = "0x88AFE4", VA = "0x88AFE4")]
		public AvatarInterpolator()
		{
		}

		[Token(Token = "0x6001133")]
		[Address(RVA = "0x88B074", Offset = "0x88B074", VA = "0x88B074", Slot = "7")]
		public void Update()
		{
		}

		[Token(Token = "0x6001134")]
		[Address(RVA = "0x88B3AC", Offset = "0x88B3AC", VA = "0x88B3AC", Slot = "6")]
		public void Receive(TransformInfo transformInfo)
		{
		}

		[Token(Token = "0x6001135")]
		[Address(RVA = "0x88B3B8", Offset = "0x88B3B8", VA = "0x88B3B8", Slot = "8")]
		public void Stop()
		{
		}
	}
	[Token(Token = "0x20001B7")]
	public class DelayedInterpolator : ITransformInterpolator
	{
		[Token(Token = "0x4000945")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private List<TransformInfo> _transformInfoList;

		[Token(Token = "0x4000946")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int _bufferSize;

		[Token(Token = "0x4000947")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private uint _frameDelay;

		[Token(Token = "0x4000948")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private uint _frameCounter;

		[Token(Token = "0x4000949")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private System.Timers.Timer _syncTimer;

		[Token(Token = "0x400094A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int _targetTransformInfoIndex;

		[Token(Token = "0x400094B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x706254", Offset = "0x706254")]
		private Transform <TargetTransform>k__BackingField;

		[Token(Token = "0x17000211")]
		public Transform TargetTransform
		{
			[Token(Token = "0x6001137")]
			[Address(RVA = "0x88B808", Offset = "0x88B808", VA = "0x88B808", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x708F60", Offset = "0x708F60")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001138")]
			[Address(RVA = "0x88B810", Offset = "0x88B810", VA = "0x88B810", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x708F70", Offset = "0x708F70")]
			set
			{
			}
		}

		[Token(Token = "0x6001136")]
		[Address(RVA = "0x88B78C", Offset = "0x88B78C", VA = "0x88B78C")]
		public DelayedInterpolator()
		{
		}

		[Token(Token = "0x6001139")]
		[Address(RVA = "0x88B818", Offset = "0x88B818", VA = "0x88B818")]
		private void GetTransformInfo(object sender, ElapsedEventArgs e)
		{
		}

		[Token(Token = "0x600113A")]
		[Address(RVA = "0x88B910", Offset = "0x88B910", VA = "0x88B910", Slot = "7")]
		public void Update()
		{
		}

		[Token(Token = "0x600113B")]
		[Address(RVA = "0x88BA8C", Offset = "0x88BA8C", VA = "0x88BA8C", Slot = "6")]
		public void Receive(TransformInfo transformInfo)
		{
		}

		[Token(Token = "0x600113C")]
		[Address(RVA = "0x88BC00", Offset = "0x88BC00", VA = "0x88BC00", Slot = "8")]
		public void Stop()
		{
		}
	}
	[Token(Token = "0x20001B8")]
	public class LagCompenstationInterpolator : ITransformInterpolator
	{
		[Token(Token = "0x400094C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private TransformInfo _transformInfo;

		[Token(Token = "0x400094D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private TransformInfo _lastTransformInfo;

		[Token(Token = "0x400094E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Vector3 _velocity;

		[Token(Token = "0x400094F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private bool _hasReceivedFirstMessage;

		[Token(Token = "0x4000950")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x706264", Offset = "0x706264")]
		private Transform <TargetTransform>k__BackingField;

		[Token(Token = "0x17000212")]
		public Transform TargetTransform
		{
			[Token(Token = "0x600113D")]
			[Address(RVA = "0x88BC98", Offset = "0x88BC98", VA = "0x88BC98", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x708F80", Offset = "0x708F80")]
			get
			{
				return null;
			}
			[Token(Token = "0x600113E")]
			[Address(RVA = "0x88BCA0", Offset = "0x88BCA0", VA = "0x88BCA0", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x708F90", Offset = "0x708F90")]
			set
			{
			}
		}

		[Token(Token = "0x600113F")]
		[Address(RVA = "0x88BCA8", Offset = "0x88BCA8", VA = "0x88BCA8")]
		public LagCompenstationInterpolator()
		{
		}

		[Token(Token = "0x6001140")]
		[Address(RVA = "0x88BD30", Offset = "0x88BD30", VA = "0x88BD30", Slot = "7")]
		public void Update()
		{
		}

		[Token(Token = "0x6001141")]
		[Address(RVA = "0x88C070", Offset = "0x88C070", VA = "0x88C070", Slot = "6")]
		public void Receive(TransformInfo transformInfo)
		{
		}

		[Token(Token = "0x6001142")]
		[Address(RVA = "0x88C084", Offset = "0x88C084", VA = "0x88C084", Slot = "8")]
		public void Stop()
		{
		}
	}
	[Token(Token = "0x20001B9")]
	public class NoInterpolator : ITransformInterpolator
	{
		[Token(Token = "0x4000951")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private TransformInfo _transformInfo;

		[Token(Token = "0x4000952")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x706274", Offset = "0x706274")]
		private Transform <TargetTransform>k__BackingField;

		[Token(Token = "0x17000213")]
		public Transform TargetTransform
		{
			[Token(Token = "0x6001144")]
			[Address(RVA = "0x88D564", Offset = "0x88D564", VA = "0x88D564", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x708FA0", Offset = "0x708FA0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001145")]
			[Address(RVA = "0x88D56C", Offset = "0x88D56C", VA = "0x88D56C", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x708FB0", Offset = "0x708FB0")]
			set
			{
			}
		}

		[Token(Token = "0x6001143")]
		[Address(RVA = "0x88D4FC", Offset = "0x88D4FC", VA = "0x88D4FC")]
		public NoInterpolator()
		{
		}

		[Token(Token = "0x6001146")]
		[Address(RVA = "0x88D574", Offset = "0x88D574", VA = "0x88D574", Slot = "7")]
		public void Update()
		{
		}

		[Token(Token = "0x6001147")]
		[Address(RVA = "0x88D644", Offset = "0x88D644", VA = "0x88D644", Slot = "6")]
		public void Receive(TransformInfo transformInfo)
		{
		}

		[Token(Token = "0x6001148")]
		[Address(RVA = "0x88D64C", Offset = "0x88D64C", VA = "0x88D64C", Slot = "8")]
		public void Stop()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001BA")]
	public class TransformInfo
	{
		[Token(Token = "0x4000953")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string id;

		[Token(Token = "0x4000954")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string transformType;

		[Token(Token = "0x4000955")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public uint frameCounter;

		[Token(Token = "0x4000956")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[HideInInspector]
		public SerializableVector3 position;

		[Token(Token = "0x4000957")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public SerializableQuaternion rotation;

		[Token(Token = "0x4000958")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public SerializableVector3 scale;

		[Token(Token = "0x6001149")]
		[Address(RVA = "0x88B06C", Offset = "0x88B06C", VA = "0x88B06C")]
		public TransformInfo()
		{
		}
	}
	[Token(Token = "0x20001BB")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x700E0C", Offset = "0x700E0C")]
	public class TransformSpawnScriptableObject : SerializedScriptableObject
	{
		[Token(Token = "0x4000959")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Dictionary<string, GameObject> GameObjectDictionary;

		[Token(Token = "0x600114A")]
		[Address(RVA = "0x891818", Offset = "0x891818", VA = "0x891818")]
		public TransformSpawnScriptableObject()
		{
		}
	}
	[Token(Token = "0x20001BC")]
	public class TransformSynchronizationManager : MonoBehaviour
	{
		[Token(Token = "0x2000277")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x70147C", Offset = "0x70147C")]
		private sealed class <>c__DisplayClass16_0
		{
			[Token(Token = "0x4000BBC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public TransformsMessage transformsMessage;

			[Token(Token = "0x600148C")]
			[Address(RVA = "0x891E40", Offset = "0x891E40", VA = "0x891E40")]
			public <>c__DisplayClass16_0()
			{
			}
		}

		[Token(Token = "0x2000278")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x70148C", Offset = "0x70148C")]
		private sealed class <>c__DisplayClass16_1
		{
			[Token(Token = "0x4000BBD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int i;

			[Token(Token = "0x4000BBE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public <>c__DisplayClass16_0 CS$<>8__locals1;

			[Token(Token = "0x600148D")]
			[Address(RVA = "0x891E48", Offset = "0x891E48", VA = "0x891E48")]
			public <>c__DisplayClass16_1()
			{
			}

			[Token(Token = "0x600148E")]
			[Address(RVA = "0x892710", Offset = "0x892710", VA = "0x892710")]
			internal bool <OnTransformReceived>b__0(KeyValuePair<string, TransformInfo> x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x400095A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7062C4", Offset = "0x7062C4")]
		private static TransformSynchronizationManager <Instance>k__BackingField;

		[Token(Token = "0x400095B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x7062D4", Offset = "0x7062D4")]
		private float _syncInterval;

		[Token(Token = "0x400095C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private TransformSpawnScriptableObject _transformSpawnScriptableObject;

		[Token(Token = "0x400095D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform _networkSpawnedObjectParent;

		[Token(Token = "0x400095E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private uint _networkFrameCounter;

		[Token(Token = "0x400095F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private System.Timers.Timer _sendTimer;

		[Token(Token = "0x4000960")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Dictionary<string, TransformSynchronizer> _syncTransformDictionary;

		[Token(Token = "0x4000961")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private NetworkManager _networkManager;

		[Token(Token = "0x4000962")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Dictionary<string, TransformInfo> _transformsToSpawnList;

		[Token(Token = "0x17000214")]
		public static TransformSynchronizationManager Instance
		{
			[Token(Token = "0x600114B")]
			[Address(RVA = "0x891820", Offset = "0x891820", VA = "0x891820")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x708FC0", Offset = "0x708FC0")]
			get
			{
				return null;
			}
			[Token(Token = "0x600114C")]
			[Address(RVA = "0x891870", Offset = "0x891870", VA = "0x891870")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x708FD0", Offset = "0x708FD0")]
			private set
			{
			}
		}

		[Token(Token = "0x17000215")]
		public bool IsSessionStarted
		{
			[Token(Token = "0x600114D")]
			[Address(RVA = "0x8918C4", Offset = "0x8918C4", VA = "0x8918C4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600114E")]
		[Address(RVA = "0x8918DC", Offset = "0x8918DC", VA = "0x8918DC")]
		private void Awake()
		{
		}

		[Token(Token = "0x600114F")]
		[Address(RVA = "0x89197C", Offset = "0x89197C", VA = "0x89197C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001150")]
		[Address(RVA = "0x891B60", Offset = "0x891B60", VA = "0x891B60")]
		private void OnTransformReceived(INetworkMessage networkMessage)
		{
		}

		[Token(Token = "0x6001151")]
		[Address(RVA = "0x891F18", Offset = "0x891F18", VA = "0x891F18")]
		private void Update()
		{
		}

		[Token(Token = "0x6001152")]
		[Address(RVA = "0x892044", Offset = "0x892044", VA = "0x892044")]
		private void SpawnTransform(string ownerIP, TransformInfo transformInfo)
		{
		}

		[Token(Token = "0x6001153")]
		[Address(RVA = "0x8922A4", Offset = "0x8922A4", VA = "0x8922A4")]
		private void SendTransform(object sender, ElapsedEventArgs e)
		{
		}

		[Token(Token = "0x6001154")]
		[Address(RVA = "0x8924A4", Offset = "0x8924A4", VA = "0x8924A4")]
		public void AddTransform(TransformSynchronizer addedTransform)
		{
		}

		[Token(Token = "0x6001155")]
		[Address(RVA = "0x892568", Offset = "0x892568", VA = "0x892568")]
		public void RemoveTransform(TransformSynchronizer removedTransform)
		{
		}

		[Token(Token = "0x6001156")]
		[Address(RVA = "0x8925DC", Offset = "0x8925DC", VA = "0x8925DC")]
		public Transform GetTransform(string id)
		{
			return null;
		}

		[Token(Token = "0x6001157")]
		[Address(RVA = "0x892684", Offset = "0x892684", VA = "0x892684")]
		private void OnApplicationQuit()
		{
		}

		[Token(Token = "0x6001158")]
		[Address(RVA = "0x8926A0", Offset = "0x8926A0", VA = "0x8926A0")]
		public TransformSynchronizationManager()
		{
		}
	}
	[Token(Token = "0x20001BD")]
	public class TransformSynchronizer : MonoBehaviour
	{
		[Token(Token = "0x4000963")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool _randomizeID;

		[Token(Token = "0x4000964")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[SerializeField]
		private bool _lateAdd;

		[Token(Token = "0x4000965")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private TransformInfo _transformInfo;

		[Token(Token = "0x4000966")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private bool _isTransformOwner;

		[Token(Token = "0x4000967")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private ITransformInterpolator _transformInterpolator;

		[Token(Token = "0x4000968")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Stopwatch _stopwatch;

		[Token(Token = "0x4000969")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x706380", Offset = "0x706380")]
		private string <OwnerIP>k__BackingField;

		[Token(Token = "0x400096A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool _destroy;

		[Token(Token = "0x400096B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private TransformSynchronizationManager _transformSynchronizer;

		[Token(Token = "0x400096C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private bool _forceAdd;

		[Token(Token = "0x17000216")]
		public string OwnerIP
		{
			[Token(Token = "0x6001159")]
			[Address(RVA = "0x8927B4", Offset = "0x8927B4", VA = "0x8927B4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x708FE0", Offset = "0x708FE0")]
			get
			{
				return null;
			}
			[Token(Token = "0x600115A")]
			[Address(RVA = "0x8927BC", Offset = "0x8927BC", VA = "0x8927BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x708FF0", Offset = "0x708FF0")]
			set
			{
			}
		}

		[Token(Token = "0x17000217")]
		public TransformInfo TransformInfo
		{
			[Token(Token = "0x600115B")]
			[Address(RVA = "0x8927C4", Offset = "0x8927C4", VA = "0x8927C4")]
			get
			{
				return null;
			}
			[Token(Token = "0x600115C")]
			[Address(RVA = "0x891E50", Offset = "0x891E50", VA = "0x891E50")]
			set
			{
			}
		}

		[Token(Token = "0x17000218")]
		public bool IsTransformOwner
		{
			[Token(Token = "0x600115D")]
			[Address(RVA = "0x8927CC", Offset = "0x8927CC", VA = "0x8927CC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600115E")]
			[Address(RVA = "0x8927D4", Offset = "0x8927D4", VA = "0x8927D4")]
			set
			{
			}
		}

		[Token(Token = "0x600115F")]
		[Address(RVA = "0x8927E0", Offset = "0x8927E0", VA = "0x8927E0")]
		private void Start()
		{
		}

		[Token(Token = "0x6001160")]
		[Address(RVA = "0x892B20", Offset = "0x892B20", VA = "0x892B20")]
		private void OnDestroyMessageReceived(INetworkMessage obj)
		{
		}

		[Token(Token = "0x6001161")]
		[Address(RVA = "0x892AF0", Offset = "0x892AF0", VA = "0x892AF0")]
		private void LateStart()
		{
		}

		[Token(Token = "0x6001162")]
		[Address(RVA = "0x892BCC", Offset = "0x892BCC", VA = "0x892BCC")]
		private void Update()
		{
		}

		[Token(Token = "0x6001163")]
		[Address(RVA = "0x892D74", Offset = "0x892D74", VA = "0x892D74")]
		private void OnApplicationQuit()
		{
		}

		[Token(Token = "0x6001164")]
		[Address(RVA = "0x892E3C", Offset = "0x892E3C", VA = "0x892E3C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001165")]
		[Address(RVA = "0x892ED0", Offset = "0x892ED0", VA = "0x892ED0")]
		public TransformSynchronizer()
		{
		}
	}
}
namespace StudioNyx.Network.UI
{
	[Token(Token = "0x20001BE")]
	public class LobbyItemUI : MonoBehaviour
	{
		[Token(Token = "0x400096D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private SessionInfoMessage _sessionInfoMessage;

		[Token(Token = "0x17000219")]
		public SessionInfoMessage SessionInfo
		{
			[Token(Token = "0x6001166")]
			[Address(RVA = "0x894758", Offset = "0x894758", VA = "0x894758")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001167")]
			[Address(RVA = "0x894760", Offset = "0x894760", VA = "0x894760")]
			set
			{
			}
		}

		[Token(Token = "0x1700021A")]
		public Toggle Toggle
		{
			[Token(Token = "0x6001168")]
			[Address(RVA = "0x894858", Offset = "0x894858", VA = "0x894858")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001169")]
		[Address(RVA = "0x8948A8", Offset = "0x8948A8", VA = "0x8948A8")]
		public LobbyItemUI()
		{
		}
	}
	[Token(Token = "0x20001BF")]
	public class LobbyUI : MonoBehaviour
	{
		[Token(Token = "0x2000279")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x70149C", Offset = "0x70149C")]
		private sealed class <>c__DisplayClass7_0
		{
			[Token(Token = "0x4000BBF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public LobbyItemUI sessionItem;

			[Token(Token = "0x4000BC0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public LobbyUI <>4__this;

			[Token(Token = "0x600148F")]
			[Address(RVA = "0x894E50", Offset = "0x894E50", VA = "0x894E50")]
			public <>c__DisplayClass7_0()
			{
			}

			[Token(Token = "0x6001490")]
			[Address(RVA = "0x89500C", Offset = "0x89500C", VA = "0x89500C")]
			internal void <UpdateUI>b__0(bool b)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200027A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7014AC", Offset = "0x7014AC")]
		private sealed class <>c
		{
			[Token(Token = "0x4000BC1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000BC2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Predicate<LobbyItemUI> <>9__8_0;

			[Token(Token = "0x6001492")]
			[Address(RVA = "0x894FDC", Offset = "0x894FDC", VA = "0x894FDC")]
			public <>c()
			{
			}

			[Token(Token = "0x6001493")]
			[Address(RVA = "0x894FE4", Offset = "0x894FE4", VA = "0x894FE4")]
			internal bool <JoinParty>b__8_0(LobbyItemUI x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x400096E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _lobbyItem;

		[Token(Token = "0x400096F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<LobbyItemUI> _lobbyItemList;

		[Token(Token = "0x4000970")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private LobbyItemUI _lastSelectedItem;

		[Token(Token = "0x4000971")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public NetworkManager _networkManager;

		[Token(Token = "0x600116A")]
		[Address(RVA = "0x8948B0", Offset = "0x8948B0", VA = "0x8948B0")]
		private void Start()
		{
		}

		[Token(Token = "0x600116B")]
		[Address(RVA = "0x894A68", Offset = "0x894A68", VA = "0x894A68")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600116C")]
		[Address(RVA = "0x894A6C", Offset = "0x894A6C", VA = "0x894A6C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600116D")]
		[Address(RVA = "0x894B44", Offset = "0x894B44", VA = "0x894B44")]
		private void UpdateUI(Dictionary<string, SessionInfoMessage> availableSessions)
		{
		}

		[Token(Token = "0x600116E")]
		[Address(RVA = "0x894E58", Offset = "0x894E58", VA = "0x894E58")]
		public void JoinParty()
		{
		}

		[Token(Token = "0x600116F")]
		[Address(RVA = "0x894F70", Offset = "0x894F70", VA = "0x894F70")]
		public LobbyUI()
		{
		}
	}
}
namespace Tantawowa.TimelineEvents
{
	[Token(Token = "0x20001C0")]
	public class EventInvocationInfo
	{
		[Token(Token = "0x4000972")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Behaviour TargetBehaviour;

		[Token(Token = "0x4000973")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MethodInfo MethodInfo;

		[Token(Token = "0x4000974")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Type[] SupportedTypes;

		[Token(Token = "0x4000975")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string Key;

		[Token(Token = "0x6001170")]
		[Address(RVA = "0x8956E0", Offset = "0x8956E0", VA = "0x8956E0")]
		public EventInvocationInfo(string key, Behaviour targetBehaviour, MethodInfo methodInfo)
		{
		}

		[Token(Token = "0x6001171")]
		[Address(RVA = "0x895720", Offset = "0x895720", VA = "0x895720")]
		public void Invoke(object value)
		{
		}

		[Token(Token = "0x6001172")]
		[Address(RVA = "0x895804", Offset = "0x895804", VA = "0x895804")]
		public void InvokEnum(int value)
		{
		}

		[Token(Token = "0x6001173")]
		[Address(RVA = "0x895960", Offset = "0x895960", VA = "0x895960")]
		public void InvokeNoArgs()
		{
		}

		[Token(Token = "0x6001174")]
		[Address(RVA = "0x8959B4", Offset = "0x8959B4", VA = "0x8959B4")]
		public void Invoke(bool isSingleArg, string value)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001C1")]
	public class TimelineEventBehaviour : PlayableBehaviour
	{
		[Token(Token = "0x200027B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7014BC", Offset = "0x7014BC")]
		private sealed class <>c__DisplayClass8_0
		{
			[Token(Token = "0x4000BC3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string methodName;

			[Token(Token = "0x4000BC4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public bool methodWitharg;

			[Token(Token = "0x6001494")]
			[Address(RVA = "0x896774", Offset = "0x896774", VA = "0x896774")]
			public <>c__DisplayClass8_0()
			{
			}

			[Token(Token = "0x6001495")]
			[Address(RVA = "0x896A34", Offset = "0x896A34", VA = "0x896A34")]
			internal bool <GetInvocationInfo>b__0(MethodInfo m)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000976")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string HandlerKey;

		[Token(Token = "0x4000977")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool IsMethodWithParam;

		[Token(Token = "0x4000978")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool InvokeEventsInEditMode;

		[Token(Token = "0x4000979")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject TargetObject;

		[Token(Token = "0x400097A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string ArgValue;

		[Token(Token = "0x400097B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private EventInvocationInfo invocationInfo;

		[Token(Token = "0x6001176")]
		[Address(RVA = "0x8964C8", Offset = "0x8964C8", VA = "0x8964C8", Slot = "17")]
		public override void OnBehaviourPlay(Playable playable, FrameData info)
		{
		}

		[Token(Token = "0x6001177")]
		[Address(RVA = "0x896530", Offset = "0x896530", VA = "0x896530")]
		private void UpdateDelegates()
		{
		}

		[Token(Token = "0x6001178")]
		[Address(RVA = "0x896584", Offset = "0x896584", VA = "0x896584")]
		private EventInvocationInfo GetInvocationInfo(bool isEnabled, string methodKey, EventInvocationInfo currentInfo, bool methodWitharg)
		{
			return null;
		}

		[Token(Token = "0x6001179")]
		[Address(RVA = "0x89677C", Offset = "0x89677C", VA = "0x89677C")]
		private void GetBehaviourAndMethod(bool isEnabled, string key, ref Behaviour targetBehaviour, ref string methodName)
		{
		}

		[Token(Token = "0x600117A")]
		[Address(RVA = "0x896A2C", Offset = "0x896A2C", VA = "0x896A2C")]
		public TimelineEventBehaviour()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001C2")]
	public class TimelineEventClip : PlayableAsset, ITimelineClipAsset
	{
		[Token(Token = "0x400097C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TimelineEventBehaviour template;

		[Token(Token = "0x400097D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7063B0", Offset = "0x7063B0")]
		private GameObject <TrackTargetObject>k__BackingField;

		[Token(Token = "0x1700021B")]
		public GameObject TrackTargetObject
		{
			[Token(Token = "0x600117B")]
			[Address(RVA = "0x896B40", Offset = "0x896B40", VA = "0x896B40")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x709000", Offset = "0x709000")]
			get
			{
				return null;
			}
			[Token(Token = "0x600117C")]
			[Address(RVA = "0x896B48", Offset = "0x896B48", VA = "0x896B48")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x709010", Offset = "0x709010")]
			set
			{
			}
		}

		[Token(Token = "0x1700021C")]
		public ClipCaps clipCaps
		{
			[Token(Token = "0x600117D")]
			[Address(RVA = "0x896B50", Offset = "0x896B50", VA = "0x896B50", Slot = "9")]
			get
			{
				return default(ClipCaps);
			}
		}

		[Token(Token = "0x600117E")]
		[Address(RVA = "0x896B58", Offset = "0x896B58", VA = "0x896B58", Slot = "6")]
		public override Playable CreatePlayable(PlayableGraph graph, GameObject owner)
		{
			return default(Playable);
		}

		[Token(Token = "0x600117F")]
		[Address(RVA = "0x896C38", Offset = "0x896C38", VA = "0x896C38")]
		public TimelineEventClip()
		{
		}
	}
	[Token(Token = "0x20001C3")]
	public class TimelineEventMixerBehaviour : PlayableBehaviour
	{
		[Token(Token = "0x6001180")]
		[Address(RVA = "0x896CA0", Offset = "0x896CA0", VA = "0x896CA0")]
		public TimelineEventMixerBehaviour()
		{
		}
	}
	[Token(Token = "0x20001C4")]
	[AttributeAttribute(Name = "TrackColorAttribute", RVA = "0x700E60", Offset = "0x700E60")]
	[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0x700E60", Offset = "0x700E60")]
	[AttributeAttribute(Name = "TrackBindingTypeAttribute", RVA = "0x700E60", Offset = "0x700E60")]
	public class TimelineEventTrack : TrackAsset
	{
		[Token(Token = "0x6001181")]
		[Address(RVA = "0x896CA8", Offset = "0x896CA8", VA = "0x896CA8", Slot = "24")]
		public override Playable CreateTrackMixer(PlayableGraph graph, GameObject go, int inputCount)
		{
			return default(Playable);
		}

		[Token(Token = "0x6001182")]
		[Address(RVA = "0x897080", Offset = "0x897080", VA = "0x897080")]
		public TimelineEventTrack()
		{
		}
	}
}
namespace Tantawowa.Extensions
{
	[Token(Token = "0x20001C5")]
	public static class PrimitiveExtensions
	{
		[Token(Token = "0x6001183")]
		[Address(RVA = "0x895174", Offset = "0x895174", VA = "0x895174")]
		public static int ClampIndex(this int value, int min, int max)
		{
			return default(int);
		}

		[Token(Token = "0x6001184")]
		[Address(RVA = "0x895190", Offset = "0x895190", VA = "0x895190")]
		public static bool IsValidAsType(this string input, Type type)
		{
			return default(bool);
		}

		[Token(Token = "0x6001185")]
		public static T ConvertToType<T>(this string input)
		{
			return (T)null;
		}

		[Token(Token = "0x6001186")]
		[Address(RVA = "0x895374", Offset = "0x895374", VA = "0x895374")]
		public static double RoundUpToNearest(this double passednumber, double roundto)
		{
			return default(double);
		}

		[Token(Token = "0x6001187")]
		[Address(RVA = "0x8953F8", Offset = "0x8953F8", VA = "0x8953F8")]
		public static double RoundDownToNearest(this double passednumber, double roundto)
		{
			return default(double);
		}

		[Token(Token = "0x6001188")]
		[Address(RVA = "0x89547C", Offset = "0x89547C", VA = "0x89547C")]
		public static float RoundUpToNearest(this float passednumber, float roundto)
		{
			return default(float);
		}

		[Token(Token = "0x6001189")]
		[Address(RVA = "0x895500", Offset = "0x895500", VA = "0x895500")]
		public static float RoundDownToNearest(this float passednumber, float roundto)
		{
			return default(float);
		}

		[Token(Token = "0x600118A")]
		[Address(RVA = "0x895584", Offset = "0x895584", VA = "0x895584")]
		public static int RoundUpToNearest(this int passednumber, int roundto)
		{
			return default(int);
		}

		[Token(Token = "0x600118B")]
		[Address(RVA = "0x89562C", Offset = "0x89562C", VA = "0x89562C")]
		public static int RoundDownToNearest(this int passednumber, int roundto)
		{
			return default(int);
		}

		[Token(Token = "0x600118C")]
		[Address(RVA = "0x8956D4", Offset = "0x8956D4", VA = "0x8956D4")]
		public static int Flip(this int value)
		{
			return default(int);
		}
	}
}
namespace UnityEngine.Timeline
{
	[Token(Token = "0x20001C6")]
	public class VideoPlayableBehaviour : PlayableBehaviour
	{
		[Token(Token = "0x400097E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public VideoPlayer videoPlayer;

		[Token(Token = "0x400097F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public VideoClip videoClip;

		[Token(Token = "0x4000980")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool mute;

		[Token(Token = "0x4000981")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public bool loop;

		[Token(Token = "0x4000982")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
		public bool waitForFirstFrame;

		[Token(Token = "0x4000983")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public double preloadTime;

		[Token(Token = "0x4000984")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public double clipInTime;

		[Token(Token = "0x4000985")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool playedOnce;

		[Token(Token = "0x4000986")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		private bool preparing;

		[Token(Token = "0x600118D")]
		[Address(RVA = "0x89A0F4", Offset = "0x89A0F4", VA = "0x89A0F4")]
		public void PrepareVideo()
		{
		}

		[Token(Token = "0x600118E")]
		[Address(RVA = "0x89A4D4", Offset = "0x89A4D4", VA = "0x89A4D4")]
		private void LoopPointReached(VideoPlayer vp)
		{
		}

		[Token(Token = "0x600118F")]
		[Address(RVA = "0x89A4E4", Offset = "0x89A4E4", VA = "0x89A4E4", Slot = "19")]
		public override void PrepareFrame(Playable playable, FrameData info)
		{
		}

		[Token(Token = "0x6001190")]
		[Address(RVA = "0x89A8A4", Offset = "0x89A8A4", VA = "0x89A8A4", Slot = "17")]
		public override void OnBehaviourPlay(Playable playable, FrameData info)
		{
		}

		[Token(Token = "0x6001191")]
		[Address(RVA = "0x89AA18", Offset = "0x89AA18", VA = "0x89AA18", Slot = "18")]
		public override void OnBehaviourPause(Playable playable, FrameData info)
		{
		}

		[Token(Token = "0x6001192")]
		[Address(RVA = "0x89AB4C", Offset = "0x89AB4C", VA = "0x89AB4C", Slot = "20")]
		public override void ProcessFrame(Playable playable, FrameData info, object playerData)
		{
		}

		[Token(Token = "0x6001193")]
		[Address(RVA = "0x89AD20", Offset = "0x89AD20", VA = "0x89AD20", Slot = "13")]
		public override void OnGraphStart(Playable playable)
		{
		}

		[Token(Token = "0x6001194")]
		[Address(RVA = "0x89AD28", Offset = "0x89AD28", VA = "0x89AD28", Slot = "14")]
		public override void OnGraphStop(Playable playable)
		{
		}

		[Token(Token = "0x6001195")]
		[Address(RVA = "0x89AD60", Offset = "0x89AD60", VA = "0x89AD60", Slot = "16")]
		public override void OnPlayableDestroy(Playable playable)
		{
		}

		[Token(Token = "0x6001196")]
		[Address(RVA = "0x89A958", Offset = "0x89A958", VA = "0x89A958")]
		public void PlayVideo()
		{
		}

		[Token(Token = "0x6001197")]
		[Address(RVA = "0x89AABC", Offset = "0x89AABC", VA = "0x89AABC")]
		public void PauseVideo()
		{
		}

		[Token(Token = "0x6001198")]
		[Address(RVA = "0x89A440", Offset = "0x89A440", VA = "0x89A440")]
		public void StopVideo()
		{
		}

		[Token(Token = "0x6001199")]
		[Address(RVA = "0x89A690", Offset = "0x89A690", VA = "0x89A690")]
		private void SyncVideoToPlayable(Playable playable)
		{
		}

		[Token(Token = "0x600119A")]
		[Address(RVA = "0x89AD64", Offset = "0x89AD64", VA = "0x89AD64")]
		public VideoPlayableBehaviour()
		{
		}
	}
	[Token(Token = "0x20001C7")]
	public sealed class VideoSchedulerPlayableBehaviour : PlayableBehaviour
	{
		[Token(Token = "0x4000987")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IEnumerable<TimelineClip> m_Clips;

		[Token(Token = "0x4000988")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private PlayableDirector m_Director;

		[Token(Token = "0x1700021D")]
		internal PlayableDirector director
		{
			[Token(Token = "0x600119B")]
			[Address(RVA = "0x89AD78", Offset = "0x89AD78", VA = "0x89AD78")]
			get
			{
				return null;
			}
			[Token(Token = "0x600119C")]
			[Address(RVA = "0x89AD80", Offset = "0x89AD80", VA = "0x89AD80")]
			set
			{
			}
		}

		[Token(Token = "0x1700021E")]
		internal IEnumerable<TimelineClip> clips
		{
			[Token(Token = "0x600119D")]
			[Address(RVA = "0x89AD88", Offset = "0x89AD88", VA = "0x89AD88")]
			get
			{
				return null;
			}
			[Token(Token = "0x600119E")]
			[Address(RVA = "0x89AD90", Offset = "0x89AD90", VA = "0x89AD90")]
			set
			{
			}
		}

		[Token(Token = "0x600119F")]
		[Address(RVA = "0x89AD98", Offset = "0x89AD98", VA = "0x89AD98", Slot = "20")]
		public override void ProcessFrame(Playable playable, FrameData info, object playerData)
		{
		}

		[Token(Token = "0x60011A0")]
		[Address(RVA = "0x89B198", Offset = "0x89B198", VA = "0x89B198")]
		public VideoSchedulerPlayableBehaviour()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001C8")]
	public class VideoScriptPlayableAsset : PlayableAsset
	{
		[Token(Token = "0x4000989")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ExposedReference<VideoPlayer> videoPlayer;

		[Token(Token = "0x400098A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		[NotKeyable]
		public VideoClip videoClip;

		[Token(Token = "0x400098B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		[NotKeyable]
		public bool mute;

		[Token(Token = "0x400098C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		[SerializeField]
		[NotKeyable]
		public bool loop;

		[Token(Token = "0x400098D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
		[SerializeField]
		[NotKeyable]
		public bool waitForFirstFrame;

		[Token(Token = "0x400098E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		[NotKeyable]
		public double preloadTime;

		[Token(Token = "0x400098F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		[NotKeyable]
		public double clipInTime;

		[Token(Token = "0x60011A1")]
		[Address(RVA = "0x89B1A0", Offset = "0x89B1A0", VA = "0x89B1A0", Slot = "6")]
		public override Playable CreatePlayable(PlayableGraph graph, GameObject go)
		{
			return default(Playable);
		}

		[Token(Token = "0x60011A2")]
		[Address(RVA = "0x89B2D4", Offset = "0x89B2D4", VA = "0x89B2D4")]
		public VideoScriptPlayableAsset()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001C9")]
	[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0x700F1C", Offset = "0x700F1C")]
	[AttributeAttribute(Name = "TrackColorAttribute", RVA = "0x700F1C", Offset = "0x700F1C")]
	public class VideoScriptPlayableTrack : TrackAsset
	{
		[Token(Token = "0x60011A3")]
		[Address(RVA = "0x89B2F0", Offset = "0x89B2F0", VA = "0x89B2F0", Slot = "24")]
		public override Playable CreateTrackMixer(PlayableGraph graph, GameObject go, int inputCount)
		{
			return default(Playable);
		}

		[Token(Token = "0x60011A4")]
		[Address(RVA = "0x89B428", Offset = "0x89B428", VA = "0x89B428")]
		public VideoScriptPlayableTrack()
		{
		}
	}
}
